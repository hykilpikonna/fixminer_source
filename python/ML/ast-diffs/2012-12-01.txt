INS MethodDeclaration@@public, void, MethodName:beanDefinitionSourceIsSetForJavaConfigScannedBeans,  @TO@ TypeDeclaration@@[public]RepositoryBeanDefinitionRegistrarSupportIntegrationTests,  @AT@ 1563 @LENGTH@ 307
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:beanDefinitionSourceIsSetForJavaConfigScannedBeans,  @AT@ 1563 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:beanDefinitionSourceIsSetForJavaConfigScannedBeans,  @AT@ 1570 @LENGTH@ 4
---INS SimpleName@@MethodName:beanDefinitionSourceIsSetForJavaConfigScannedBeans @TO@ MethodDeclaration@@public, void, MethodName:beanDefinitionSourceIsSetForJavaConfigScannedBeans,  @AT@ 1575 @LENGTH@ 50
---INS VariableDeclarationStatement@@AnnotationConfigApplicationContext context=new AnnotationConfigApplicationContext(TestConfig.class); @TO@ MethodDeclaration@@public, void, MethodName:beanDefinitionSourceIsSetForJavaConfigScannedBeans,  @AT@ 1633 @LENGTH@ 102
------INS SimpleType@@AnnotationConfigApplicationContext @TO@ VariableDeclarationStatement@@AnnotationConfigApplicationContext context=new AnnotationConfigApplicationContext(TestConfig.class); @AT@ 1633 @LENGTH@ 34
------INS VariableDeclarationFragment@@context=new AnnotationConfigApplicationContext(TestConfig.class) @TO@ VariableDeclarationStatement@@AnnotationConfigApplicationContext context=new AnnotationConfigApplicationContext(TestConfig.class); @AT@ 1668 @LENGTH@ 66
---------INS SimpleName@@context @TO@ VariableDeclarationFragment@@context=new AnnotationConfigApplicationContext(TestConfig.class) @AT@ 1668 @LENGTH@ 7
---------INS ClassInstanceCreation@@AnnotationConfigApplicationContext[TestConfig.class] @TO@ VariableDeclarationFragment@@context=new AnnotationConfigApplicationContext(TestConfig.class) @AT@ 1678 @LENGTH@ 56
------------INS New@@new @TO@ ClassInstanceCreation@@AnnotationConfigApplicationContext[TestConfig.class] @AT@ 1678 @LENGTH@ 3
------------INS SimpleType@@AnnotationConfigApplicationContext @TO@ ClassInstanceCreation@@AnnotationConfigApplicationContext[TestConfig.class] @AT@ 1682 @LENGTH@ 34
------------INS TypeLiteral@@TestConfig.class @TO@ ClassInstanceCreation@@AnnotationConfigApplicationContext[TestConfig.class] @AT@ 1717 @LENGTH@ 16
---INS VariableDeclarationStatement@@BeanDefinition definition=context.getBeanDefinition("myRepository"); @TO@ MethodDeclaration@@public, void, MethodName:beanDefinitionSourceIsSetForJavaConfigScannedBeans,  @AT@ 1739 @LENGTH@ 70
------INS SimpleType@@BeanDefinition @TO@ VariableDeclarationStatement@@BeanDefinition definition=context.getBeanDefinition("myRepository"); @AT@ 1739 @LENGTH@ 14
------INS VariableDeclarationFragment@@definition=context.getBeanDefinition("myRepository") @TO@ VariableDeclarationStatement@@BeanDefinition definition=context.getBeanDefinition("myRepository"); @AT@ 1754 @LENGTH@ 54
---------INS SimpleName@@definition @TO@ VariableDeclarationFragment@@definition=context.getBeanDefinition("myRepository") @AT@ 1754 @LENGTH@ 10
---------INS MethodInvocation@@context.getBeanDefinition("myRepository") @TO@ VariableDeclarationFragment@@definition=context.getBeanDefinition("myRepository") @AT@ 1767 @LENGTH@ 41
------------INS SimpleName@@Name:context @TO@ MethodInvocation@@context.getBeanDefinition("myRepository") @AT@ 1767 @LENGTH@ 7
------------INS SimpleName@@MethodName:getBeanDefinition:["myRepository"] @TO@ MethodInvocation@@context.getBeanDefinition("myRepository") @AT@ 1775 @LENGTH@ 33
---------------INS StringLiteral@@"myRepository" @TO@ SimpleName@@MethodName:getBeanDefinition:["myRepository"] @AT@ 1793 @LENGTH@ 14
---INS ExpressionStatement@@MethodInvocation:assertThat(definition.getSource(),is(notNullValue())) @TO@ MethodDeclaration@@public, void, MethodName:beanDefinitionSourceIsSetForJavaConfigScannedBeans,  @AT@ 1812 @LENGTH@ 55
------INS MethodInvocation@@assertThat(definition.getSource(),is(notNullValue())) @TO@ ExpressionStatement@@MethodInvocation:assertThat(definition.getSource(),is(notNullValue())) @AT@ 1812 @LENGTH@ 54
---------INS SimpleName@@MethodName:assertThat:[definition.getSource(), is(notNullValue())] @TO@ MethodInvocation@@assertThat(definition.getSource(),is(notNullValue())) @AT@ 1812 @LENGTH@ 54
------------INS MethodInvocation@@definition.getSource() @TO@ SimpleName@@MethodName:assertThat:[definition.getSource(), is(notNullValue())] @AT@ 1823 @LENGTH@ 22
---------------INS SimpleName@@Name:definition @TO@ MethodInvocation@@definition.getSource() @AT@ 1823 @LENGTH@ 10
---------------INS SimpleName@@MethodName:getSource:[] @TO@ MethodInvocation@@definition.getSource() @AT@ 1834 @LENGTH@ 11
------------INS MethodInvocation@@is(notNullValue()) @TO@ SimpleName@@MethodName:assertThat:[definition.getSource(), is(notNullValue())] @AT@ 1847 @LENGTH@ 18
---------------INS SimpleName@@MethodName:is:[notNullValue()] @TO@ MethodInvocation@@is(notNullValue()) @AT@ 1847 @LENGTH@ 18
------------------INS MethodInvocation@@MethodName:notNullValue:[] @TO@ SimpleName@@MethodName:is:[notNullValue()] @AT@ 1850 @LENGTH@ 14
---------------INS SimpleName@@MethodName:is:[notNullValue()] @TO@ MethodInvocation@@is(notNullValue()) @AT@ 1847 @LENGTH@ 18
------------------INS MethodInvocation@@MethodName:notNullValue:[] @TO@ SimpleName@@MethodName:is:[notNullValue()] @AT@ 1850 @LENGTH@ 14


UPD ExpressionStatement@@MethodInvocation:assertEquals(3,executionContext.getLong(ClassUtils.getShortName(FlatFileItemWriter.class) + ".written")) @TO@ MethodInvocation:assertEquals(8,executionContext.getLong(ClassUtils.getShortName(FlatFileItemWriter.class) + ".written")) @AT@ 15229 @LENGTH@ 106
---UPD MethodInvocation@@assertEquals(3,executionContext.getLong(ClassUtils.getShortName(FlatFileItemWriter.class) + ".written")) @TO@ assertEquals(8,executionContext.getLong(ClassUtils.getShortName(FlatFileItemWriter.class) + ".written")) @AT@ 15229 @LENGTH@ 105
------UPD SimpleName@@MethodName:assertEquals:[3, executionContext.getLong(ClassUtils.getShortName(FlatFileItemWriter.class) + ".written")] @TO@ MethodName:assertEquals:[8, executionContext.getLong(ClassUtils.getShortName(FlatFileItemWriter.class) + ".written")] @AT@ 15229 @LENGTH@ 105
---------UPD NumberLiteral@@3 @TO@ 8 @AT@ 15242 @LENGTH@ 1


UPD EnhancedForStatement@@for (OperationTransformer entry : entries) {  TransformedOperation transformed=entry.transformOperation(context,address,currentOperation);  currentOperation=transformed.getTransformedOperation();  delegates.add(transformed);} @TO@ for (OperationTransformer entry : entries) {  TransformedOperation transformed=entry.transformOperation(context,address,currentOperation);  currentOperation=transformed.getTransformedOperation();  delegates.add(transformed);  if (currentOperation == null) {    break;  }} @AT@ 2225 @LENGTH@ 273
---INS IfStatement@@if (currentOperation == null) {  break;} @TO@ EnhancedForStatement@@for (OperationTransformer entry : entries) {  TransformedOperation transformed=entry.transformOperation(context,address,currentOperation);  currentOperation=transformed.getTransformedOperation();  delegates.add(transformed);} @AT@ 2501 @LENGTH@ 68
------INS InfixExpression@@currentOperation == null @TO@ IfStatement@@if (currentOperation == null) {  break;} @AT@ 2505 @LENGTH@ 24
---------INS SimpleName@@currentOperation @TO@ InfixExpression@@currentOperation == null @AT@ 2505 @LENGTH@ 16
---------INS Operator@@== @TO@ InfixExpression@@currentOperation == null @AT@ 2521 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@currentOperation == null @AT@ 2525 @LENGTH@ 4
------INS Block@@ThenBody:{  break;} @TO@ IfStatement@@if (currentOperation == null) {  break;} @AT@ 2531 @LENGTH@ 38
---------INS BreakStatement@@ @TO@ Block@@ThenBody:{  break;} @AT@ 2549 @LENGTH@ 6


UPD ReturnStatement@@InfixExpression:super.supportsInternal(handlerMethod) && (RepositoryController.class.isAssignableFrom(controllerType) || RepositoryEntityController.class.isAssignableFrom(controllerType) || RepositoryPropertyReferenceController.class.isAssignableFrom(controllerType)|| RepositorySearchController.class.isAssignableFrom(controllerType)) @TO@ ParenthesizedExpression:(RepositoryController.class.isAssignableFrom(controllerType) || RepositoryEntityController.class.isAssignableFrom(controllerType) || RepositoryPropertyReferenceController.class.isAssignableFrom(controllerType)|| RepositorySearchController.class.isAssignableFrom(controllerType)) @AT@ 1345 @LENGTH@ 360
---DEL InfixExpression@@super.supportsInternal(handlerMethod) && (RepositoryController.class.isAssignableFrom(controllerType) || RepositoryEntityController.class.isAssignableFrom(controllerType) || RepositoryPropertyReferenceController.class.isAssignableFrom(controllerType)|| RepositorySearchController.class.isAssignableFrom(controllerType)) @AT@ 1352 @LENGTH@ 352
------DEL SuperMethodInvocation@@super.supportsInternal(handlerMethod) @AT@ 1352 @LENGTH@ 37
---------DEL SimpleName@@MethodName:supportsInternal:[handlerMethod] @AT@ 1358 @LENGTH@ 16
---------DEL SimpleName@@handlerMethod @AT@ 1375 @LENGTH@ 13
------DEL Operator@@&& @AT@ 1389 @LENGTH@ 2
---MOV ParenthesizedExpression@@(RepositoryController.class.isAssignableFrom(controllerType) || RepositoryEntityController.class.isAssignableFrom(controllerType) || RepositoryPropertyReferenceController.class.isAssignableFrom(controllerType)|| RepositorySearchController.class.isAssignableFrom(controllerType)) @TO@ ReturnStatement@@InfixExpression:super.supportsInternal(handlerMethod) && (RepositoryController.class.isAssignableFrom(controllerType) || RepositoryEntityController.class.isAssignableFrom(controllerType) || RepositoryPropertyReferenceController.class.isAssignableFrom(controllerType)|| RepositorySearchController.class.isAssignableFrom(controllerType)) @AT@ 1401 @LENGTH@ 303


UPD ExpressionStatement@@MethodInvocation:d.setMajorVersion(1) @TO@ MethodInvocation:d.setMinorVersion(1) @AT@ 18833 @LENGTH@ 21
---UPD MethodInvocation@@d.setMajorVersion(1) @TO@ d.setMinorVersion(1) @AT@ 18833 @LENGTH@ 20
------UPD SimpleName@@MethodName:setMajorVersion:[1] @TO@ MethodName:setMinorVersion:[1] @AT@ 18835 @LENGTH@ 18


UPD EnhancedForStatement@@for (Class<?> domainType : repositories) {  links.add(entityLinks.linkToCollectionResource(domainType));} @TO@ for (Class<?> domainType : repositories) {  ResourceMapping repoMapping=getResourceMapping(config,repositories.getRepositoryInformationFor(domainType));  if (repoMapping.isExported()) {    links.add(entityLinks.linkToCollectionResource(domainType));  }} @AT@ 1635 @LENGTH@ 109
---INS VariableDeclarationStatement@@ResourceMapping repoMapping=getResourceMapping(config,repositories.getRepositoryInformationFor(domainType)); @TO@ EnhancedForStatement@@for (Class<?> domainType : repositories) {  links.add(entityLinks.linkToCollectionResource(domainType));} @AT@ 1828 @LENGTH@ 111
------INS SimpleType@@ResourceMapping @TO@ VariableDeclarationStatement@@ResourceMapping repoMapping=getResourceMapping(config,repositories.getRepositoryInformationFor(domainType)); @AT@ 1828 @LENGTH@ 15
------INS VariableDeclarationFragment@@repoMapping=getResourceMapping(config,repositories.getRepositoryInformationFor(domainType)) @TO@ VariableDeclarationStatement@@ResourceMapping repoMapping=getResourceMapping(config,repositories.getRepositoryInformationFor(domainType)); @AT@ 1844 @LENGTH@ 94
---------INS SimpleName@@repoMapping @TO@ VariableDeclarationFragment@@repoMapping=getResourceMapping(config,repositories.getRepositoryInformationFor(domainType)) @AT@ 1844 @LENGTH@ 11
---------INS MethodInvocation@@getResourceMapping(config,repositories.getRepositoryInformationFor(domainType)) @TO@ VariableDeclarationFragment@@repoMapping=getResourceMapping(config,repositories.getRepositoryInformationFor(domainType)) @AT@ 1858 @LENGTH@ 80
------------INS SimpleName@@MethodName:getResourceMapping:[config, repositories.getRepositoryInformationFor(domainType)] @TO@ MethodInvocation@@getResourceMapping(config,repositories.getRepositoryInformationFor(domainType)) @AT@ 1858 @LENGTH@ 80
---------------INS SimpleName@@config @TO@ SimpleName@@MethodName:getResourceMapping:[config, repositories.getRepositoryInformationFor(domainType)] @AT@ 1877 @LENGTH@ 6
---------------INS MethodInvocation@@repositories.getRepositoryInformationFor(domainType) @TO@ SimpleName@@MethodName:getResourceMapping:[config, repositories.getRepositoryInformationFor(domainType)] @AT@ 1885 @LENGTH@ 52
------------------INS SimpleName@@Name:repositories @TO@ MethodInvocation@@repositories.getRepositoryInformationFor(domainType) @AT@ 1885 @LENGTH@ 12
------------------INS SimpleName@@MethodName:getRepositoryInformationFor:[domainType] @TO@ MethodInvocation@@repositories.getRepositoryInformationFor(domainType) @AT@ 1898 @LENGTH@ 39
---------------------INS SimpleName@@domainType @TO@ SimpleName@@MethodName:getRepositoryInformationFor:[domainType] @AT@ 1926 @LENGTH@ 10
---INS IfStatement@@if (repoMapping.isExported()) {  links.add(entityLinks.linkToCollectionResource(domainType));} @TO@ EnhancedForStatement@@for (Class<?> domainType : repositories) {  links.add(entityLinks.linkToCollectionResource(domainType));} @AT@ 1943 @LENGTH@ 100
------INS MethodInvocation@@repoMapping.isExported() @TO@ IfStatement@@if (repoMapping.isExported()) {  links.add(entityLinks.linkToCollectionResource(domainType));} @AT@ 1946 @LENGTH@ 24
---------INS SimpleName@@Name:repoMapping @TO@ MethodInvocation@@repoMapping.isExported() @AT@ 1946 @LENGTH@ 11
---------INS SimpleName@@MethodName:isExported:[] @TO@ MethodInvocation@@repoMapping.isExported() @AT@ 1958 @LENGTH@ 12
------INS Block@@ThenBody:{  links.add(entityLinks.linkToCollectionResource(domainType));} @TO@ IfStatement@@if (repoMapping.isExported()) {  links.add(entityLinks.linkToCollectionResource(domainType));} @AT@ 1972 @LENGTH@ 71
---------MOV ExpressionStatement@@MethodInvocation:links.add(entityLinks.linkToCollectionResource(domainType)) @TO@ Block@@ThenBody:{  links.add(entityLinks.linkToCollectionResource(domainType));} @AT@ 1680 @LENGTH@ 60


UPD MethodDeclaration@@boolean, MethodName:isCached, Object key,  @TO@ boolean, MethodName:containsNotRemoved, Object key,  @AT@ 3092 @LENGTH@ 21
---UPD SimpleName@@MethodName:isCached @TO@ MethodName:containsNotRemoved @AT@ 3092 @LENGTH@ 8


UPD VariableDeclarationStatement@@ServiceBuilder builder=process(connectorXmlDescriptor,ironJacamarXmlDescriptor,classLoader,serviceTarget,annotationIndexes,deploymentUnit.getServiceName()); @TO@ ServiceBuilder builder=process(connectorXmlDescriptor,ironJacamarXmlDescriptor,classLoader,serviceTarget,annotationIndexes,deploymentUnit.getServiceName(),null); @AT@ 6286 @LENGTH@ 163
---UPD VariableDeclarationFragment@@builder=process(connectorXmlDescriptor,ironJacamarXmlDescriptor,classLoader,serviceTarget,annotationIndexes,deploymentUnit.getServiceName()) @TO@ builder=process(connectorXmlDescriptor,ironJacamarXmlDescriptor,classLoader,serviceTarget,annotationIndexes,deploymentUnit.getServiceName(),null) @AT@ 6301 @LENGTH@ 147
------UPD MethodInvocation@@process(connectorXmlDescriptor,ironJacamarXmlDescriptor,classLoader,serviceTarget,annotationIndexes,deploymentUnit.getServiceName()) @TO@ process(connectorXmlDescriptor,ironJacamarXmlDescriptor,classLoader,serviceTarget,annotationIndexes,deploymentUnit.getServiceName(),null) @AT@ 6311 @LENGTH@ 137
---------UPD SimpleName@@MethodName:process:[connectorXmlDescriptor, ironJacamarXmlDescriptor, classLoader, serviceTarget, annotationIndexes, deploymentUnit.getServiceName()] @TO@ MethodName:process:[connectorXmlDescriptor, ironJacamarXmlDescriptor, classLoader, serviceTarget, annotationIndexes, deploymentUnit.getServiceName(), null] @AT@ 6311 @LENGTH@ 137
------------INS NullLiteral@@null @TO@ SimpleName@@MethodName:process:[connectorXmlDescriptor, ironJacamarXmlDescriptor, classLoader, serviceTarget, annotationIndexes, deploymentUnit.getServiceName()] @AT@ 6526 @LENGTH@ 4


DEL MethodDeclaration@@public, voidMethodName:RemoteViewManagedReferenceFactory, final String appName, final String moduleName, final String distinctName, final String beanName, final String viewClass, final boolean stateful,  @AT@ 2218 @LENGTH@ 279
---DEL Modifier@@public @AT@ 2218 @LENGTH@ 6
---DEL SimpleName@@MethodName:RemoteViewManagedReferenceFactory @AT@ 2225 @LENGTH@ 33
---DEL SingleVariableDeclaration@@final String appName @AT@ 2259 @LENGTH@ 20
------DEL Modifier@@final @AT@ 2259 @LENGTH@ 5
------DEL SimpleType@@String @AT@ 2265 @LENGTH@ 6
------DEL SimpleName@@appName @AT@ 2272 @LENGTH@ 7
---DEL SingleVariableDeclaration@@final String moduleName @AT@ 2281 @LENGTH@ 23
------DEL Modifier@@final @AT@ 2281 @LENGTH@ 5
------DEL SimpleType@@String @AT@ 2287 @LENGTH@ 6
------DEL SimpleName@@moduleName @AT@ 2294 @LENGTH@ 10
---DEL SingleVariableDeclaration@@final String distinctName @AT@ 2306 @LENGTH@ 25
------DEL Modifier@@final @AT@ 2306 @LENGTH@ 5
------DEL SimpleType@@String @AT@ 2312 @LENGTH@ 6
------DEL SimpleName@@distinctName @AT@ 2319 @LENGTH@ 12
---DEL SingleVariableDeclaration@@final String beanName @AT@ 2333 @LENGTH@ 21
------DEL Modifier@@final @AT@ 2333 @LENGTH@ 5
------DEL SimpleType@@String @AT@ 2339 @LENGTH@ 6
------DEL SimpleName@@beanName @AT@ 2346 @LENGTH@ 8
---DEL SingleVariableDeclaration@@final String viewClass @AT@ 2356 @LENGTH@ 22
------DEL Modifier@@final @AT@ 2356 @LENGTH@ 5
------DEL SimpleType@@String @AT@ 2362 @LENGTH@ 6
------DEL SimpleName@@viewClass @AT@ 2369 @LENGTH@ 9
---DEL SingleVariableDeclaration@@final boolean stateful @AT@ 2380 @LENGTH@ 22
------DEL Modifier@@final @AT@ 2380 @LENGTH@ 5
------DEL PrimitiveType@@boolean @AT@ 2386 @LENGTH@ 7
------DEL SimpleName@@stateful @AT@ 2394 @LENGTH@ 8
---DEL ConstructorInvocation@@this(appName,moduleName,distinctName,beanName,viewClass,stateful,null); @AT@ 2414 @LENGTH@ 77
------DEL SimpleName@@appName @AT@ 2419 @LENGTH@ 7
------DEL SimpleName@@moduleName @AT@ 2428 @LENGTH@ 10
------DEL SimpleName@@distinctName @AT@ 2440 @LENGTH@ 12
------DEL SimpleName@@beanName @AT@ 2454 @LENGTH@ 8
------DEL SimpleName@@viewClass @AT@ 2464 @LENGTH@ 9
------DEL SimpleName@@stateful @AT@ 2475 @LENGTH@ 8
------DEL NullLiteral@@null @AT@ 2485 @LENGTH@ 4


MOV ExpressionStatement@@SuperMethodInvocation:super.setUp() @TO@ MethodDeclaration@@public, void, MethodName:setUp, Exception,  @AT@ 2249 @LENGTH@ 14


UPD EnhancedForStatement@@for (final Job job : jbs) {  boolean succes=false;  try {    if (JobUtils.getStatus(job).isStarted()) {      log.info("Job [" + job.getJobName() + "] already started; skipping it...");      break;    }    log.info("Starting job [" + job.getJobName() + "]");synchronized (started) {      started.add(job);    }    if (!waitForCompletion) {      job.submit();    } else {      succes=job.waitForCompletion(verbose);      log.info("Completed job [" + job.getJobName() + "]");      if (listener != null) {        listener.jobFinished(job);      }    }  } catch (  InterruptedException ex) {    log.warn("Job [" + job.getJobName() + "] killed");    throw new IllegalStateException(ex);  }catch (  Exception ex) {    log.warn("Cannot start job [" + job.getJobName() + "]",ex);    throw new IllegalStateException(ex);  }  if (!succes) {    if (!shuttingDown) {      if (JobStatus.KILLED == JobUtils.getStatus(job)) {        throw new IllegalStateException("Job " + job.getJobName() + "] killed");      } else {        throw new IllegalStateException("Job " + job.getJobName() + "] failed to start");      }    } else {      log.info("Job [" + job.getJobName() + "] killed by shutdown");    }  }} @TO@ for (final Job job : jbs) {  boolean succes=false;  try {    if (JobUtils.getStatus(job).isStarted()) {      log.info("Job [" + job.getJobName() + "] already started; skipping it...");      break;    }    log.info("Starting job [" + job.getJobName() + "]");synchronized (started) {      started.add(job);    }    if (!waitForCompletion) {      succes=true;      job.submit();    } else {      succes=job.waitForCompletion(verbose);      log.info("Completed job [" + job.getJobName() + "]");      if (listener != null) {        listener.jobFinished(job);      }    }  } catch (  InterruptedException ex) {    log.warn("Job [" + job.getJobName() + "] killed");    throw new IllegalStateException(ex);  }catch (  Exception ex) {    log.warn("Cannot start job [" + job.getJobName() + "]",ex);    throw new IllegalStateException(ex);  }  if (!succes) {    if (!shuttingDown) {      JobStatus status=JobUtils.getStatus(job);      if (JobStatus.KILLED == status) {        throw new IllegalStateException("Job " + job.getJobName() + "] killed");      } else {        throw new IllegalStateException("Job " + job.getJobName() + "] failed to start; status="+ status);      }    } else {      log.info("Job [" + job.getJobName() + "] killed by shutdown");    }  }} @AT@ 4837 @LENGTH@ 1407
---UPD TryStatement@@try {  if (JobUtils.getStatus(job).isStarted()) {    log.info("Job [" + job.getJobName() + "] already started; skipping it...");    break;  }  log.info("Starting job [" + job.getJobName() + "]");synchronized (started) {    started.add(job);  }  if (!waitForCompletion) {    job.submit();  } else {    succes=job.waitForCompletion(verbose);    log.info("Completed job [" + job.getJobName() + "]");    if (listener != null) {      listener.jobFinished(job);    }  }} catch (InterruptedException ex) {  log.warn("Job [" + job.getJobName() + "] killed");  throw new IllegalStateException(ex);}catch (Exception ex) {  log.warn("Cannot start job [" + job.getJobName() + "]",ex);  throw new IllegalStateException(ex);} @TO@ try {  if (JobUtils.getStatus(job).isStarted()) {    log.info("Job [" + job.getJobName() + "] already started; skipping it...");    break;  }  log.info("Starting job [" + job.getJobName() + "]");synchronized (started) {    started.add(job);  }  if (!waitForCompletion) {    succes=true;    job.submit();  } else {    succes=job.waitForCompletion(verbose);    log.info("Completed job [" + job.getJobName() + "]");    if (listener != null) {      listener.jobFinished(job);    }  }} catch (InterruptedException ex) {  log.warn("Job [" + job.getJobName() + "] killed");  throw new IllegalStateException(ex);}catch (Exception ex) {  log.warn("Cannot start job [" + job.getJobName() + "]",ex);  throw new IllegalStateException(ex);} @AT@ 4901 @LENGTH@ 908
------UPD IfStatement@@if (!waitForCompletion) {  job.submit();} else {  succes=job.waitForCompletion(verbose);  log.info("Completed job [" + job.getJobName() + "]");  if (listener != null) {    listener.jobFinished(job);  }} @TO@ if (!waitForCompletion) {  succes=true;  job.submit();} else {  succes=job.waitForCompletion(verbose);  log.info("Completed job [" + job.getJobName() + "]");  if (listener != null) {    listener.jobFinished(job);  }} @AT@ 5245 @LENGTH@ 269
---------UPD Block@@ThenBody:{  job.submit();} @TO@ ThenBody:{  succes=true;  job.submit();} @AT@ 5269 @LENGTH@ 32
------------INS ExpressionStatement@@Assignment:succes=true @TO@ Block@@ThenBody:{  job.submit();} @AT@ 5279 @LENGTH@ 14
---------------INS Assignment@@succes=true @TO@ ExpressionStatement@@Assignment:succes=true @AT@ 5279 @LENGTH@ 13
------------------INS SimpleName@@succes @TO@ Assignment@@succes=true @AT@ 5279 @LENGTH@ 6
------------------INS Operator@@= @TO@ Assignment@@succes=true @AT@ 5285 @LENGTH@ 1
------------------INS BooleanLiteral@@true @TO@ Assignment@@succes=true @AT@ 5288 @LENGTH@ 4
---UPD IfStatement@@if (!succes) {  if (!shuttingDown) {    if (JobStatus.KILLED == JobUtils.getStatus(job)) {      throw new IllegalStateException("Job " + job.getJobName() + "] killed");    } else {      throw new IllegalStateException("Job " + job.getJobName() + "] failed to start");    }  } else {    log.info("Job [" + job.getJobName() + "] killed by shutdown");  }} @TO@ if (!succes) {  if (!shuttingDown) {    JobStatus status=JobUtils.getStatus(job);    if (JobStatus.KILLED == status) {      throw new IllegalStateException("Job " + job.getJobName() + "] killed");    } else {      throw new IllegalStateException("Job " + job.getJobName() + "] failed to start; status="+ status);    }  } else {    log.info("Job [" + job.getJobName() + "] killed by shutdown");  }} @AT@ 5817 @LENGTH@ 420
------UPD Block@@ThenBody:{  if (!shuttingDown) {    if (JobStatus.KILLED == JobUtils.getStatus(job)) {      throw new IllegalStateException("Job " + job.getJobName() + "] killed");    } else {      throw new IllegalStateException("Job " + job.getJobName() + "] failed to start");    }  } else {    log.info("Job [" + job.getJobName() + "] killed by shutdown");  }} @TO@ ThenBody:{  if (!shuttingDown) {    JobStatus status=JobUtils.getStatus(job);    if (JobStatus.KILLED == status) {      throw new IllegalStateException("Job " + job.getJobName() + "] killed");    } else {      throw new IllegalStateException("Job " + job.getJobName() + "] failed to start; status="+ status);    }  } else {    log.info("Job [" + job.getJobName() + "] killed by shutdown");  }} @AT@ 5830 @LENGTH@ 407
---------UPD IfStatement@@if (!shuttingDown) {  if (JobStatus.KILLED == JobUtils.getStatus(job)) {    throw new IllegalStateException("Job " + job.getJobName() + "] killed");  } else {    throw new IllegalStateException("Job " + job.getJobName() + "] failed to start");  }} else {  log.info("Job [" + job.getJobName() + "] killed by shutdown");} @TO@ if (!shuttingDown) {  JobStatus status=JobUtils.getStatus(job);  if (JobStatus.KILLED == status) {    throw new IllegalStateException("Job " + job.getJobName() + "] killed");  } else {    throw new IllegalStateException("Job " + job.getJobName() + "] failed to start; status="+ status);  }} else {  log.info("Job [" + job.getJobName() + "] killed by shutdown");} @AT@ 5839 @LENGTH@ 390
------------UPD Block@@ThenBody:{  if (JobStatus.KILLED == JobUtils.getStatus(job)) {    throw new IllegalStateException("Job " + job.getJobName() + "] killed");  } else {    throw new IllegalStateException("Job " + job.getJobName() + "] failed to start");  }} @TO@ ThenBody:{  JobStatus status=JobUtils.getStatus(job);  if (JobStatus.KILLED == status) {    throw new IllegalStateException("Job " + job.getJobName() + "] killed");  } else {    throw new IllegalStateException("Job " + job.getJobName() + "] failed to start; status="+ status);  }} @AT@ 5858 @LENGTH@ 277
---------------UPD IfStatement@@if (JobStatus.KILLED == JobUtils.getStatus(job)) {  throw new IllegalStateException("Job " + job.getJobName() + "] killed");} else {  throw new IllegalStateException("Job " + job.getJobName() + "] failed to start");} @TO@ if (JobStatus.KILLED == status) {  throw new IllegalStateException("Job " + job.getJobName() + "] killed");} else {  throw new IllegalStateException("Job " + job.getJobName() + "] failed to start; status="+ status);} @AT@ 5868 @LENGTH@ 258
------------------UPD InfixExpression@@JobStatus.KILLED == JobUtils.getStatus(job) @TO@ JobStatus.KILLED == status @AT@ 5872 @LENGTH@ 43
---------------------INS SimpleName@@status @TO@ InfixExpression@@JobStatus.KILLED == JobUtils.getStatus(job) @AT@ 5967 @LENGTH@ 6
------------------UPD Block@@ElseBody:{  throw new IllegalStateException("Job " + job.getJobName() + "] failed to start");} @TO@ ElseBody:{  throw new IllegalStateException("Job " + job.getJobName() + "] failed to start; status="+ status);} @AT@ 6024 @LENGTH@ 102
---------------------UPD ThrowStatement@@ClassInstanceCreation:new IllegalStateException("Job " + job.getJobName() + "] failed to start") @TO@ ClassInstanceCreation:new IllegalStateException("Job " + job.getJobName() + "] failed to start; status="+ status) @AT@ 6035 @LENGTH@ 81
------------------------UPD ClassInstanceCreation@@IllegalStateException["Job " + job.getJobName() + "] failed to start"] @TO@ IllegalStateException["Job " + job.getJobName() + "] failed to start; status="+ status] @AT@ 6041 @LENGTH@ 74
---------------------------UPD InfixExpression@@"Job " + job.getJobName() + "] failed to start" @TO@ "Job " + job.getJobName() + "] failed to start; status="+ status @AT@ 6067 @LENGTH@ 47
------------------------------UPD StringLiteral@@"] failed to start" @TO@ "] failed to start; status=" @AT@ 6095 @LENGTH@ 19
------------------------------INS SimpleName@@status @TO@ InfixExpression@@"Job " + job.getJobName() + "] failed to start" @AT@ 6183 @LENGTH@ 6
---------------INS VariableDeclarationStatement@@JobStatus status=JobUtils.getStatus(job); @TO@ Block@@ThenBody:{  if (JobStatus.KILLED == JobUtils.getStatus(job)) {    throw new IllegalStateException("Job " + job.getJobName() + "] killed");  } else {    throw new IllegalStateException("Job " + job.getJobName() + "] failed to start");  }} @AT@ 5891 @LENGTH@ 43
------------------INS SimpleType@@JobStatus @TO@ VariableDeclarationStatement@@JobStatus status=JobUtils.getStatus(job); @AT@ 5891 @LENGTH@ 9
------------------INS VariableDeclarationFragment@@status=JobUtils.getStatus(job) @TO@ VariableDeclarationStatement@@JobStatus status=JobUtils.getStatus(job); @AT@ 5901 @LENGTH@ 32
---------------------MOV MethodInvocation@@JobUtils.getStatus(job) @TO@ VariableDeclarationFragment@@status=JobUtils.getStatus(job) @AT@ 5892 @LENGTH@ 23
---------------------INS SimpleName@@status @TO@ VariableDeclarationFragment@@status=JobUtils.getStatus(job) @AT@ 5901 @LENGTH@ 6


UPD IfStatement@@if (op.getTransformedOperation() != null) {  result=legacy.executeOperation(op.getTransformedOperation(),new ModelController.OperationTransactionControl(){    @Override public void operationPrepared(    ModelController.OperationTransaction transaction,    ModelNode result){      if (op.rejectOperation(result)) {        transaction.rollback();      } else {        transaction.commit();      }    }  });} @TO@ if (op.getTransformedOperation() != null) {  result=legacy.executeOperation(op.getTransformedOperation(),new ModelController.OperationTransactionControl(){    @Override public void operationPrepared(    ModelController.OperationTransaction transaction,    ModelNode result){      if (op.rejectOperation(result)) {        transaction.rollback();      } else {        transaction.commit();      }    }  });  if (op.rejectOperation(result)) {    final ModelNode newResponse=new ModelNode();    newResponse.get(OUTCOME).set(FAILED);    newResponse.get(FAILURE_DESCRIPTION).set(op.getFailureDescription());    return newResponse;  }} @AT@ 9636 @LENGTH@ 590
---UPD Block@@ThenBody:{  result=legacy.executeOperation(op.getTransformedOperation(),new ModelController.OperationTransactionControl(){    @Override public void operationPrepared(    ModelController.OperationTransaction transaction,    ModelNode result){      if (op.rejectOperation(result)) {        transaction.rollback();      } else {        transaction.commit();      }    }  });} @TO@ ThenBody:{  result=legacy.executeOperation(op.getTransformedOperation(),new ModelController.OperationTransactionControl(){    @Override public void operationPrepared(    ModelController.OperationTransaction transaction,    ModelNode result){      if (op.rejectOperation(result)) {        transaction.rollback();      } else {        transaction.commit();      }    }  });  if (op.rejectOperation(result)) {    final ModelNode newResponse=new ModelNode();    newResponse.get(OUTCOME).set(FAILED);    newResponse.get(FAILURE_DESCRIPTION).set(op.getFailureDescription());    return newResponse;  }} @AT@ 9678 @LENGTH@ 548
------INS IfStatement@@if (op.rejectOperation(result)) {  final ModelNode newResponse=new ModelNode();  newResponse.get(OUTCOME).set(FAILED);  newResponse.get(FAILURE_DESCRIPTION).set(op.getFailureDescription());  return newResponse;} @TO@ Block@@ThenBody:{  result=legacy.executeOperation(op.getTransformedOperation(),new ModelController.OperationTransactionControl(){    @Override public void operationPrepared(    ModelController.OperationTransaction transaction,    ModelNode result){      if (op.rejectOperation(result)) {        transaction.rollback();      } else {        transaction.commit();      }    }  });} @AT@ 10594 @LENGTH@ 285
---------INS MethodInvocation@@op.rejectOperation(result) @TO@ IfStatement@@if (op.rejectOperation(result)) {  final ModelNode newResponse=new ModelNode();  newResponse.get(OUTCOME).set(FAILED);  newResponse.get(FAILURE_DESCRIPTION).set(op.getFailureDescription());  return newResponse;} @AT@ 10597 @LENGTH@ 26
------------INS SimpleName@@Name:op @TO@ MethodInvocation@@op.rejectOperation(result) @AT@ 10597 @LENGTH@ 2
------------INS SimpleName@@MethodName:rejectOperation:[result] @TO@ MethodInvocation@@op.rejectOperation(result) @AT@ 10600 @LENGTH@ 23
---------------INS SimpleName@@result @TO@ SimpleName@@MethodName:rejectOperation:[result] @AT@ 10616 @LENGTH@ 6
---------INS Block@@ThenBody:{  final ModelNode newResponse=new ModelNode();  newResponse.get(OUTCOME).set(FAILED);  newResponse.get(FAILURE_DESCRIPTION).set(op.getFailureDescription());  return newResponse;} @TO@ IfStatement@@if (op.rejectOperation(result)) {  final ModelNode newResponse=new ModelNode();  newResponse.get(OUTCOME).set(FAILED);  newResponse.get(FAILURE_DESCRIPTION).set(op.getFailureDescription());  return newResponse;} @AT@ 10625 @LENGTH@ 254
------------INS VariableDeclarationStatement@@final ModelNode newResponse=new ModelNode(); @TO@ Block@@ThenBody:{  final ModelNode newResponse=new ModelNode();  newResponse.get(OUTCOME).set(FAILED);  newResponse.get(FAILURE_DESCRIPTION).set(op.getFailureDescription());  return newResponse;} @AT@ 10643 @LENGTH@ 46
---------------INS Modifier@@final @TO@ VariableDeclarationStatement@@final ModelNode newResponse=new ModelNode(); @AT@ 10643 @LENGTH@ 5
---------------INS SimpleType@@ModelNode @TO@ VariableDeclarationStatement@@final ModelNode newResponse=new ModelNode(); @AT@ 10649 @LENGTH@ 9
---------------INS VariableDeclarationFragment@@newResponse=new ModelNode() @TO@ VariableDeclarationStatement@@final ModelNode newResponse=new ModelNode(); @AT@ 10659 @LENGTH@ 29
------------------INS SimpleName@@newResponse @TO@ VariableDeclarationFragment@@newResponse=new ModelNode() @AT@ 10659 @LENGTH@ 11
------------------INS ClassInstanceCreation@@ModelNode[] @TO@ VariableDeclarationFragment@@newResponse=new ModelNode() @AT@ 10673 @LENGTH@ 15
---------------------INS New@@new @TO@ ClassInstanceCreation@@ModelNode[] @AT@ 10673 @LENGTH@ 3
---------------------INS SimpleType@@ModelNode @TO@ ClassInstanceCreation@@ModelNode[] @AT@ 10677 @LENGTH@ 9
------------INS ExpressionStatement@@MethodInvocation:newResponse.get(OUTCOME).set(FAILED) @TO@ Block@@ThenBody:{  final ModelNode newResponse=new ModelNode();  newResponse.get(OUTCOME).set(FAILED);  newResponse.get(FAILURE_DESCRIPTION).set(op.getFailureDescription());  return newResponse;} @AT@ 10706 @LENGTH@ 37
---------------INS MethodInvocation@@newResponse.get(OUTCOME).set(FAILED) @TO@ ExpressionStatement@@MethodInvocation:newResponse.get(OUTCOME).set(FAILED) @AT@ 10706 @LENGTH@ 36
------------------INS MethodInvocation@@MethodName:get:[OUTCOME] @TO@ MethodInvocation@@newResponse.get(OUTCOME).set(FAILED) @AT@ 10706 @LENGTH@ 24
---------------------INS SimpleName@@OUTCOME @TO@ MethodInvocation@@MethodName:get:[OUTCOME] @AT@ 10722 @LENGTH@ 7
------------------INS SimpleName@@Name:newResponse @TO@ MethodInvocation@@newResponse.get(OUTCOME).set(FAILED) @AT@ 10706 @LENGTH@ 11
------------------INS SimpleName@@MethodName:set:[FAILED] @TO@ MethodInvocation@@newResponse.get(OUTCOME).set(FAILED) @AT@ 10731 @LENGTH@ 11
---------------------INS SimpleName@@FAILED @TO@ SimpleName@@MethodName:set:[FAILED] @AT@ 10735 @LENGTH@ 6
------------INS ExpressionStatement@@MethodInvocation:newResponse.get(FAILURE_DESCRIPTION).set(op.getFailureDescription()) @TO@ Block@@ThenBody:{  final ModelNode newResponse=new ModelNode();  newResponse.get(OUTCOME).set(FAILED);  newResponse.get(FAILURE_DESCRIPTION).set(op.getFailureDescription());  return newResponse;} @AT@ 10760 @LENGTH@ 69
---------------INS MethodInvocation@@newResponse.get(FAILURE_DESCRIPTION).set(op.getFailureDescription()) @TO@ ExpressionStatement@@MethodInvocation:newResponse.get(FAILURE_DESCRIPTION).set(op.getFailureDescription()) @AT@ 10760 @LENGTH@ 68
------------------INS MethodInvocation@@MethodName:get:[FAILURE_DESCRIPTION] @TO@ MethodInvocation@@newResponse.get(FAILURE_DESCRIPTION).set(op.getFailureDescription()) @AT@ 10760 @LENGTH@ 36
---------------------INS SimpleName@@FAILURE_DESCRIPTION @TO@ MethodInvocation@@MethodName:get:[FAILURE_DESCRIPTION] @AT@ 10776 @LENGTH@ 19
------------------INS SimpleName@@Name:newResponse @TO@ MethodInvocation@@newResponse.get(FAILURE_DESCRIPTION).set(op.getFailureDescription()) @AT@ 10760 @LENGTH@ 11
------------------INS SimpleName@@MethodName:set:[op.getFailureDescription()] @TO@ MethodInvocation@@newResponse.get(FAILURE_DESCRIPTION).set(op.getFailureDescription()) @AT@ 10797 @LENGTH@ 31
---------------------INS MethodInvocation@@op.getFailureDescription() @TO@ SimpleName@@MethodName:set:[op.getFailureDescription()] @AT@ 10801 @LENGTH@ 26
------------------------INS SimpleName@@Name:op @TO@ MethodInvocation@@op.getFailureDescription() @AT@ 10801 @LENGTH@ 2
------------------------INS SimpleName@@MethodName:getFailureDescription:[] @TO@ MethodInvocation@@op.getFailureDescription() @AT@ 10804 @LENGTH@ 23
------------INS ReturnStatement@@SimpleName:newResponse @TO@ Block@@ThenBody:{  final ModelNode newResponse=new ModelNode();  newResponse.get(OUTCOME).set(FAILED);  newResponse.get(FAILURE_DESCRIPTION).set(op.getFailureDescription());  return newResponse;} @AT@ 10846 @LENGTH@ 19
---------------INS SimpleName@@newResponse @TO@ ReturnStatement@@SimpleName:newResponse @AT@ 10853 @LENGTH@ 11


UPD Block@@ThenBody:{  String customGranterRef=customGrantElement.getAttribute("token-granter-ref");  parserContext.getRegistry().getBeanDefinition(customGranterRef);  tokenGranters.add(parserContext.getRegistry().getBeanDefinition(customGranterRef));} @TO@ ThenBody:{  String customGranterRef=customGrantElement.getAttribute("token-granter-ref");  tokenGranters.add(new RuntimeBeanReference(customGranterRef));} @AT@ 9893 @LENGTH@ 251
---DEL ExpressionStatement@@MethodInvocation:parserContext.getRegistry().getBeanDefinition(customGranterRef) @AT@ 9985 @LENGTH@ 64
------DEL MethodInvocation@@parserContext.getRegistry().getBeanDefinition(customGranterRef) @AT@ 9985 @LENGTH@ 63
---------DEL MethodInvocation@@MethodName:getRegistry:[] @AT@ 9985 @LENGTH@ 27
---------DEL SimpleName@@Name:parserContext @AT@ 9985 @LENGTH@ 13
---------DEL SimpleName@@MethodName:getBeanDefinition:[customGranterRef] @AT@ 10013 @LENGTH@ 35
------------DEL SimpleName@@customGranterRef @AT@ 10031 @LENGTH@ 16
---UPD ExpressionStatement@@MethodInvocation:tokenGranters.add(parserContext.getRegistry().getBeanDefinition(customGranterRef)) @TO@ MethodInvocation:tokenGranters.add(new RuntimeBeanReference(customGranterRef)) @AT@ 10055 @LENGTH@ 83
------UPD MethodInvocation@@tokenGranters.add(parserContext.getRegistry().getBeanDefinition(customGranterRef)) @TO@ tokenGranters.add(new RuntimeBeanReference(customGranterRef)) @AT@ 10055 @LENGTH@ 82
---------UPD SimpleName@@MethodName:add:[parserContext.getRegistry().getBeanDefinition(customGranterRef)] @TO@ MethodName:add:[new RuntimeBeanReference(customGranterRef)] @AT@ 10069 @LENGTH@ 68
------------DEL MethodInvocation@@parserContext.getRegistry().getBeanDefinition(customGranterRef) @AT@ 10073 @LENGTH@ 63
---------------DEL MethodInvocation@@MethodName:getRegistry:[] @AT@ 10073 @LENGTH@ 27
---------------DEL SimpleName@@Name:parserContext @AT@ 10073 @LENGTH@ 13
---------------DEL SimpleName@@MethodName:getBeanDefinition:[customGranterRef] @AT@ 10101 @LENGTH@ 35
------------------DEL SimpleName@@customGranterRef @AT@ 10119 @LENGTH@ 16
------------INS ClassInstanceCreation@@RuntimeBeanReference[customGranterRef] @TO@ SimpleName@@MethodName:add:[parserContext.getRegistry().getBeanDefinition(customGranterRef)] @AT@ 10074 @LENGTH@ 42
---------------INS New@@new @TO@ ClassInstanceCreation@@RuntimeBeanReference[customGranterRef] @AT@ 10074 @LENGTH@ 3
---------------INS SimpleType@@RuntimeBeanReference @TO@ ClassInstanceCreation@@RuntimeBeanReference[customGranterRef] @AT@ 10078 @LENGTH@ 20
---------------INS SimpleName@@customGranterRef @TO@ ClassInstanceCreation@@RuntimeBeanReference[customGranterRef] @AT@ 10099 @LENGTH@ 16


UPD ReturnStatement@@ArrayCreation:new Option[]{new DefaultCompositeOption(fabricDistributionConfiguration()),mavenBundle("org.apache.activemq","activemq-all",MavenUtils.getArtifactVersion("org.apache.activemq","activemq-core"))} @TO@ ArrayCreation:new Option[]{new DefaultCompositeOption(fabricDistributionConfiguration()),mavenBundle("org.apache.activemq","activemq-osgi",MavenUtils.getArtifactVersion("org.apache.activemq","activemq-broker"))} @AT@ 5819 @LENGTH@ 222
---UPD ArrayCreation@@new Option[]{new DefaultCompositeOption(fabricDistributionConfiguration()),mavenBundle("org.apache.activemq","activemq-all",MavenUtils.getArtifactVersion("org.apache.activemq","activemq-core"))} @TO@ new Option[]{new DefaultCompositeOption(fabricDistributionConfiguration()),mavenBundle("org.apache.activemq","activemq-osgi",MavenUtils.getArtifactVersion("org.apache.activemq","activemq-broker"))} @AT@ 5826 @LENGTH@ 214
------UPD ArrayInitializer@@{new DefaultCompositeOption(fabricDistributionConfiguration()),mavenBundle("org.apache.activemq","activemq-all",MavenUtils.getArtifactVersion("org.apache.activemq","activemq-core"))} @TO@ {new DefaultCompositeOption(fabricDistributionConfiguration()),mavenBundle("org.apache.activemq","activemq-osgi",MavenUtils.getArtifactVersion("org.apache.activemq","activemq-broker"))} @AT@ 5839 @LENGTH@ 201
---------UPD MethodInvocation@@mavenBundle("org.apache.activemq","activemq-all",MavenUtils.getArtifactVersion("org.apache.activemq","activemq-core")) @TO@ mavenBundle("org.apache.activemq","activemq-osgi",MavenUtils.getArtifactVersion("org.apache.activemq","activemq-broker")) @AT@ 5918 @LENGTH@ 121
------------UPD SimpleName@@MethodName:mavenBundle:["org.apache.activemq", "activemq-all", MavenUtils.getArtifactVersion("org.apache.activemq","activemq-core")] @TO@ MethodName:mavenBundle:["org.apache.activemq", "activemq-osgi", MavenUtils.getArtifactVersion("org.apache.activemq","activemq-broker")] @AT@ 5918 @LENGTH@ 121
---------------UPD StringLiteral@@"activemq-all" @TO@ "activemq-osgi" @AT@ 5953 @LENGTH@ 14
---------------UPD MethodInvocation@@MavenUtils.getArtifactVersion("org.apache.activemq","activemq-core") @TO@ MavenUtils.getArtifactVersion("org.apache.activemq","activemq-broker") @AT@ 5969 @LENGTH@ 69
------------------UPD SimpleName@@MethodName:getArtifactVersion:["org.apache.activemq", "activemq-core"] @TO@ MethodName:getArtifactVersion:["org.apache.activemq", "activemq-broker"] @AT@ 5980 @LENGTH@ 58
---------------------UPD StringLiteral@@"activemq-core" @TO@ "activemq-broker" @AT@ 6022 @LENGTH@ 15


UPD FieldDeclaration@@public, static, final, SimpleAttributeDefinition, [GROUPING_HANDLER_ADDRESS=create("grouping-handler-address",STRING).setXmlName(CommonAttributes.ADDRESS).setDefaultValue(null).setFlags(RESTART_ALL_SERVICES).build()] @TO@ public, static, final, SimpleAttributeDefinition, [GROUPING_HANDLER_ADDRESS=create("grouping-handler-address",STRING).setXmlName(CommonAttributes.ADDRESS).setFlags(RESTART_ALL_SERVICES).build()] @AT@ 2177 @LENGTH@ 266
---UPD VariableDeclarationFragment@@GROUPING_HANDLER_ADDRESS=create("grouping-handler-address",STRING).setXmlName(CommonAttributes.ADDRESS).setDefaultValue(null).setFlags(RESTART_ALL_SERVICES).build() @TO@ GROUPING_HANDLER_ADDRESS=create("grouping-handler-address",STRING).setXmlName(CommonAttributes.ADDRESS).setFlags(RESTART_ALL_SERVICES).build() @AT@ 2223 @LENGTH@ 219
------UPD MethodInvocation@@create("grouping-handler-address",STRING).setXmlName(CommonAttributes.ADDRESS).setDefaultValue(null).setFlags(RESTART_ALL_SERVICES).build() @TO@ create("grouping-handler-address",STRING).setXmlName(CommonAttributes.ADDRESS).setFlags(RESTART_ALL_SERVICES).build() @AT@ 2250 @LENGTH@ 192
---------DEL MethodInvocation@@MethodName:setDefaultValue:[null] @AT@ 2250 @LENGTH@ 127
------------DEL NullLiteral@@null @AT@ 2372 @LENGTH@ 4


UPD EnhancedForStatement@@for (final ModelNode step : operation.require(STEPS).asList()) {  i++;  final String operationName=step.require(OP).asString();  final PathAddress stepAddress=step.hasDefined(OP_ADDR) ? PathAddress.pathAddress(step.require(OP_ADDR)) : PathAddress.EMPTY_ADDRESS;  final TransformedOperation result;  if (stepAddress.size() == 0 && COMPOSITE.equals(operationName)) {    result=transformOperation(context,PathAddress.EMPTY_ADDRESS,step,false);  } else {    final OperationTransformer transformer=target.resolveTransformer(stepAddress,operationName);    result=transformer.transformOperation(context,stepAddress,step);  }  composite.get(STEPS).add(result.getTransformedOperation());  steps.add(new Step(i,result));} @TO@ for (final ModelNode step : operation.require(STEPS).asList()) {  i++;  final String operationName=step.require(OP).asString();  final PathAddress stepAddress=step.hasDefined(OP_ADDR) ? PathAddress.pathAddress(step.require(OP_ADDR)) : PathAddress.EMPTY_ADDRESS;  final TransformedOperation result;  if (stepAddress.size() == 0 && COMPOSITE.equals(operationName)) {    result=transformOperation(context,PathAddress.EMPTY_ADDRESS,step,false);  } else {    final OperationTransformer transformer=target.resolveTransformer(stepAddress,operationName);    result=transformer.transformOperation(context,stepAddress,step);  }  final ModelNode transformedOperation=result.getTransformedOperation();  if (transformedOperation != null) {    composite.get(STEPS).add(transformedOperation);    steps.add(new Step(i,result));  }} @AT@ 2263 @LENGTH@ 922
---INS VariableDeclarationStatement@@final ModelNode transformedOperation=result.getTransformedOperation(); @TO@ EnhancedForStatement@@for (final ModelNode step : operation.require(STEPS).asList()) {  i++;  final String operationName=step.require(OP).asString();  final PathAddress stepAddress=step.hasDefined(OP_ADDR) ? PathAddress.pathAddress(step.require(OP_ADDR)) : PathAddress.EMPTY_ADDRESS;  final TransformedOperation result;  if (stepAddress.size() == 0 && COMPOSITE.equals(operationName)) {    result=transformOperation(context,PathAddress.EMPTY_ADDRESS,step,false);  } else {    final OperationTransformer transformer=target.resolveTransformer(stepAddress,operationName);    result=transformer.transformOperation(context,stepAddress,step);  }  composite.get(STEPS).add(result.getTransformedOperation());  steps.add(new Step(i,result));} @AT@ 3072 @LENGTH@ 72
------INS Modifier@@final @TO@ VariableDeclarationStatement@@final ModelNode transformedOperation=result.getTransformedOperation(); @AT@ 3072 @LENGTH@ 5
------INS SimpleType@@ModelNode @TO@ VariableDeclarationStatement@@final ModelNode transformedOperation=result.getTransformedOperation(); @AT@ 3078 @LENGTH@ 9
------INS VariableDeclarationFragment@@transformedOperation=result.getTransformedOperation() @TO@ VariableDeclarationStatement@@final ModelNode transformedOperation=result.getTransformedOperation(); @AT@ 3088 @LENGTH@ 55
---------INS SimpleName@@transformedOperation @TO@ VariableDeclarationFragment@@transformedOperation=result.getTransformedOperation() @AT@ 3088 @LENGTH@ 20
---------INS MethodInvocation@@result.getTransformedOperation() @TO@ VariableDeclarationFragment@@transformedOperation=result.getTransformedOperation() @AT@ 3111 @LENGTH@ 32
------------INS SimpleName@@Name:result @TO@ MethodInvocation@@result.getTransformedOperation() @AT@ 3111 @LENGTH@ 6
------------INS SimpleName@@MethodName:getTransformedOperation:[] @TO@ MethodInvocation@@result.getTransformedOperation() @AT@ 3118 @LENGTH@ 25
---DEL ExpressionStatement@@MethodInvocation:composite.get(STEPS).add(result.getTransformedOperation()) @AT@ 3072 @LENGTH@ 59
---INS IfStatement@@if (transformedOperation != null) {  composite.get(STEPS).add(transformedOperation);  steps.add(new Step(i,result));} @TO@ EnhancedForStatement@@for (final ModelNode step : operation.require(STEPS).asList()) {  i++;  final String operationName=step.require(OP).asString();  final PathAddress stepAddress=step.hasDefined(OP_ADDR) ? PathAddress.pathAddress(step.require(OP_ADDR)) : PathAddress.EMPTY_ADDRESS;  final TransformedOperation result;  if (stepAddress.size() == 0 && COMPOSITE.equals(operationName)) {    result=transformOperation(context,PathAddress.EMPTY_ADDRESS,step,false);  } else {    final OperationTransformer transformer=target.resolveTransformer(stepAddress,operationName);    result=transformer.transformOperation(context,stepAddress,step);  }  composite.get(STEPS).add(result.getTransformedOperation());  steps.add(new Step(i,result));} @AT@ 3157 @LENGTH@ 161
------INS InfixExpression@@transformedOperation != null @TO@ IfStatement@@if (transformedOperation != null) {  composite.get(STEPS).add(transformedOperation);  steps.add(new Step(i,result));} @AT@ 3161 @LENGTH@ 28
---------INS SimpleName@@transformedOperation @TO@ InfixExpression@@transformedOperation != null @AT@ 3161 @LENGTH@ 20
---------INS Operator@@!= @TO@ InfixExpression@@transformedOperation != null @AT@ 3181 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@transformedOperation != null @AT@ 3185 @LENGTH@ 4
------INS Block@@ThenBody:{  composite.get(STEPS).add(transformedOperation);  steps.add(new Step(i,result));} @TO@ IfStatement@@if (transformedOperation != null) {  composite.get(STEPS).add(transformedOperation);  steps.add(new Step(i,result));} @AT@ 3191 @LENGTH@ 127
---------MOV ExpressionStatement@@MethodInvocation:steps.add(new Step(i,result)) @TO@ Block@@ThenBody:{  composite.get(STEPS).add(transformedOperation);  steps.add(new Step(i,result));} @AT@ 3144 @LENGTH@ 31
---------INS ExpressionStatement@@MethodInvocation:composite.get(STEPS).add(transformedOperation) @TO@ Block@@ThenBody:{  composite.get(STEPS).add(transformedOperation);  steps.add(new Step(i,result));} @AT@ 3209 @LENGTH@ 47
------------MOV MethodInvocation@@composite.get(STEPS).add(result.getTransformedOperation()) @TO@ ExpressionStatement@@MethodInvocation:composite.get(STEPS).add(transformedOperation) @AT@ 3072 @LENGTH@ 58
---------------UPD SimpleName@@MethodName:add:[result.getTransformedOperation()] @TO@ MethodName:add:[transformedOperation] @AT@ 3093 @LENGTH@ 37
------------------DEL MethodInvocation@@result.getTransformedOperation() @AT@ 3097 @LENGTH@ 32
---------------------DEL SimpleName@@Name:result @AT@ 3097 @LENGTH@ 6
---------------------DEL SimpleName@@MethodName:getTransformedOperation:[] @AT@ 3104 @LENGTH@ 25
------------------INS SimpleName@@transformedOperation @TO@ SimpleName@@MethodName:add:[result.getTransformedOperation()] @AT@ 3234 @LENGTH@ 20


UPD MethodDeclaration@@public, Long, MethodName:convertAndSend, String channel, Object message,  @TO@ public, void, MethodName:convertAndSend, String channel, Object message,  @AT@ 15711 @LENGTH@ 395
---DEL SimpleType@@Long @AT@ 15718 @LENGTH@ 4
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, Long, MethodName:convertAndSend, String channel, Object message,  @AT@ 15718 @LENGTH@ 4
---INS ExpressionStatement@@MethodInvocation:execute(new RedisCallback<Object>(){
  public Object doInRedis(  RedisConnection connection){
    connection.publish(rawChannel,rawMessage);
    return null;
  }
}
,true) @TO@ MethodDeclaration@@public, Long, MethodName:convertAndSend, String channel, Object message,  @AT@ 15933 @LENGTH@ 177
------INS MethodInvocation@@execute(new RedisCallback<Object>(){
  public Object doInRedis(  RedisConnection connection){
    connection.publish(rawChannel,rawMessage);
    return null;
  }
}
,true) @TO@ ExpressionStatement@@MethodInvocation:execute(new RedisCallback<Object>(){
  public Object doInRedis(  RedisConnection connection){
    connection.publish(rawChannel,rawMessage);
    return null;
  }
}
,true) @AT@ 15933 @LENGTH@ 176
---------MOV SimpleName@@MethodName:execute:[new RedisCallback<Long>(){
  public Long doInRedis(  RedisConnection connection){
    return connection.publish(rawChannel,rawMessage);
  }
}
, true] @TO@ MethodInvocation@@execute(new RedisCallback<Object>(){
  public Object doInRedis(  RedisConnection connection){
    connection.publish(rawChannel,rawMessage);
    return null;
  }
}
,true) @AT@ 15940 @LENGTH@ 162
---DEL ReturnStatement@@MethodInvocation:execute(new RedisCallback<Long>(){
  public Long doInRedis(  RedisConnection connection){
    return connection.publish(rawChannel,rawMessage);
  }
}
,true) @AT@ 15933 @LENGTH@ 170
------DEL MethodInvocation@@execute(new RedisCallback<Long>(){
  public Long doInRedis(  RedisConnection connection){
    return connection.publish(rawChannel,rawMessage);
  }
}
,true) @AT@ 15940 @LENGTH@ 162


UPD ExpressionStatement@@MethodInvocation:properties.setProperty("mapred.job.tracker",jtUri.trim()) @TO@ MethodInvocation:internalConfig.set("mapred.job.tracker",jtUri.trim()) @AT@ 2484 @LENGTH@ 59
---UPD MethodInvocation@@properties.setProperty("mapred.job.tracker",jtUri.trim()) @TO@ internalConfig.set("mapred.job.tracker",jtUri.trim()) @AT@ 2484 @LENGTH@ 58
------UPD SimpleName@@Name:properties @TO@ Name:internalConfig @AT@ 2484 @LENGTH@ 10
------UPD SimpleName@@MethodName:setProperty:["mapred.job.tracker", jtUri.trim()] @TO@ MethodName:set:["mapred.job.tracker", jtUri.trim()] @AT@ 2495 @LENGTH@ 47


UPD ExpressionStatement@@MethodInvocation:vars.put("extra" + key,value) @TO@ MethodInvocation:vars.put("extra_" + key,value) @AT@ 15035 @LENGTH@ 31
---UPD MethodInvocation@@vars.put("extra" + key,value) @TO@ vars.put("extra_" + key,value) @AT@ 15035 @LENGTH@ 30
------UPD SimpleName@@MethodName:put:["extra" + key, value] @TO@ MethodName:put:["extra_" + key, value] @AT@ 15040 @LENGTH@ 25
---------UPD InfixExpression@@"extra" + key @TO@ "extra_" + key @AT@ 15044 @LENGTH@ 13
------------UPD StringLiteral@@"extra" @TO@ "extra_" @AT@ 15044 @LENGTH@ 7


UPD MethodDeclaration@@private, final, int, MethodName:getHash, final Object key,  @TO@ private, int, MethodName:getHash, final Object key,  @AT@ 6200 @LENGTH@ 406
---DEL Modifier@@final @AT@ 6208 @LENGTH@ 5


UPD IfStatement@@if (flags.length == 0) {  this.flags=EnumSet.of(flags[0]);} else {  this.flags=EnumSet.of(flags[0],flags);} @TO@ if (flags.length == 1) {  this.flags=EnumSet.of(flags[0]);} else {  this.flags=EnumSet.of(flags[0],flags);} @AT@ 5063 @LENGTH@ 152
---UPD InfixExpression@@flags.length == 0 @TO@ flags.length == 1 @AT@ 5067 @LENGTH@ 17
------UPD NumberLiteral@@0 @TO@ 1 @AT@ 5083 @LENGTH@ 1


UPD ReturnStatement@@MethodInvocation:SimpleAttributeDefinitionBuilder.create(name,BOOLEAN).setXmlName(xmlName).setFlags(RESTART_NONE).build() @TO@ MethodInvocation:SimpleAttributeDefinitionBuilder.create(name,BOOLEAN).setXmlName(xmlName).setDefaultValue(new ModelNode(false)).setFlags(RESTART_NONE).build() @AT@ 2755 @LENGTH@ 164
---UPD MethodInvocation@@SimpleAttributeDefinitionBuilder.create(name,BOOLEAN).setXmlName(xmlName).setFlags(RESTART_NONE).build() @TO@ SimpleAttributeDefinitionBuilder.create(name,BOOLEAN).setXmlName(xmlName).setDefaultValue(new ModelNode(false)).setFlags(RESTART_NONE).build() @AT@ 2762 @LENGTH@ 156
------INS MethodInvocation@@MethodName:setDefaultValue:[new ModelNode(false)] @TO@ MethodInvocation@@SimpleAttributeDefinitionBuilder.create(name,BOOLEAN).setXmlName(xmlName).setFlags(RESTART_NONE).build() @AT@ 2762 @LENGTH@ 146
---------INS ClassInstanceCreation@@ModelNode[false] @TO@ MethodInvocation@@MethodName:setDefaultValue:[new ModelNode(false)] @AT@ 2887 @LENGTH@ 20
------------INS New@@new @TO@ ClassInstanceCreation@@ModelNode[false] @AT@ 2887 @LENGTH@ 3
------------INS SimpleType@@ModelNode @TO@ ClassInstanceCreation@@ModelNode[false] @AT@ 2891 @LENGTH@ 9
------------INS BooleanLiteral@@false @TO@ ClassInstanceCreation@@ModelNode[false] @AT@ 2901 @LENGTH@ 5


UPD ExpressionStatement@@MethodInvocation:ConsumerChannelRegistry.registerConsumerChannel(consumer.getChannel()) @TO@ MethodInvocation:ConsumerChannelRegistry.registerConsumerChannel(consumer.getChannel(),getConnectionFactory()) @AT@ 18942 @LENGTH@ 71
---UPD MethodInvocation@@ConsumerChannelRegistry.registerConsumerChannel(consumer.getChannel()) @TO@ ConsumerChannelRegistry.registerConsumerChannel(consumer.getChannel(),getConnectionFactory()) @AT@ 18942 @LENGTH@ 70
------UPD SimpleName@@MethodName:registerConsumerChannel:[consumer.getChannel()] @TO@ MethodName:registerConsumerChannel:[consumer.getChannel(), getConnectionFactory()] @AT@ 18966 @LENGTH@ 46
---------INS MethodInvocation@@MethodName:getConnectionFactory:[] @TO@ SimpleName@@MethodName:registerConsumerChannel:[consumer.getChannel()] @AT@ 19013 @LENGTH@ 22


INS ExpressionStatement@@MethodInvocation:assumeTrue(!ConnectionUtils.isLettuce(template.getConnectionFactory())) @TO@ MethodDeclaration@@public, void, MethodName:testRename, Exception,  @AT@ 2341 @LENGTH@ 72
---INS MethodInvocation@@assumeTrue(!ConnectionUtils.isLettuce(template.getConnectionFactory())) @TO@ ExpressionStatement@@MethodInvocation:assumeTrue(!ConnectionUtils.isLettuce(template.getConnectionFactory())) @AT@ 2341 @LENGTH@ 71
------INS SimpleName@@MethodName:assumeTrue:[!ConnectionUtils.isLettuce(template.getConnectionFactory())] @TO@ MethodInvocation@@assumeTrue(!ConnectionUtils.isLettuce(template.getConnectionFactory())) @AT@ 2341 @LENGTH@ 71
---------INS PrefixExpression@@!ConnectionUtils.isLettuce(template.getConnectionFactory()) @TO@ SimpleName@@MethodName:assumeTrue:[!ConnectionUtils.isLettuce(template.getConnectionFactory())] @AT@ 2352 @LENGTH@ 59
------------INS Operator@@! @TO@ PrefixExpression@@!ConnectionUtils.isLettuce(template.getConnectionFactory()) @AT@ 2352 @LENGTH@ 1
------------INS MethodInvocation@@ConnectionUtils.isLettuce(template.getConnectionFactory()) @TO@ PrefixExpression@@!ConnectionUtils.isLettuce(template.getConnectionFactory()) @AT@ 2353 @LENGTH@ 58
---------------INS SimpleName@@Name:ConnectionUtils @TO@ MethodInvocation@@ConnectionUtils.isLettuce(template.getConnectionFactory()) @AT@ 2353 @LENGTH@ 15
---------------INS SimpleName@@MethodName:isLettuce:[template.getConnectionFactory()] @TO@ MethodInvocation@@ConnectionUtils.isLettuce(template.getConnectionFactory()) @AT@ 2369 @LENGTH@ 42
------------------INS MethodInvocation@@template.getConnectionFactory() @TO@ SimpleName@@MethodName:isLettuce:[template.getConnectionFactory()] @AT@ 2379 @LENGTH@ 31
---------------------INS SimpleName@@Name:template @TO@ MethodInvocation@@template.getConnectionFactory() @AT@ 2379 @LENGTH@ 8
---------------------INS SimpleName@@MethodName:getConnectionFactory:[] @TO@ MethodInvocation@@template.getConnectionFactory() @AT@ 2388 @LENGTH@ 22


INS MethodDeclaration@@protected, static, ModelNode, MethodName:getSubsystemRemoveOperation,  @TO@ TypeDeclaration@@[public]OperationTestCaseBase, AbstractSubsystemTest @AT@ 3945 @LENGTH@ 440
---INS Modifier@@protected @TO@ MethodDeclaration@@protected, static, ModelNode, MethodName:getSubsystemRemoveOperation,  @AT@ 3945 @LENGTH@ 9
---INS Modifier@@static @TO@ MethodDeclaration@@protected, static, ModelNode, MethodName:getSubsystemRemoveOperation,  @AT@ 3955 @LENGTH@ 6
---INS SimpleType@@ModelNode @TO@ MethodDeclaration@@protected, static, ModelNode, MethodName:getSubsystemRemoveOperation,  @AT@ 3962 @LENGTH@ 9
---INS SimpleName@@MethodName:getSubsystemRemoveOperation @TO@ MethodDeclaration@@protected, static, ModelNode, MethodName:getSubsystemRemoveOperation,  @AT@ 3972 @LENGTH@ 27
---INS VariableDeclarationStatement@@PathAddress subsystemAddress=PathAddress.pathAddress(PathElement.pathElement(SUBSYSTEM,JGroupsExtension.SUBSYSTEM_NAME)); @TO@ MethodDeclaration@@protected, static, ModelNode, MethodName:getSubsystemRemoveOperation,  @AT@ 4059 @LENGTH@ 142
------INS SimpleType@@PathAddress @TO@ VariableDeclarationStatement@@PathAddress subsystemAddress=PathAddress.pathAddress(PathElement.pathElement(SUBSYSTEM,JGroupsExtension.SUBSYSTEM_NAME)); @AT@ 4059 @LENGTH@ 11
------INS VariableDeclarationFragment@@subsystemAddress=PathAddress.pathAddress(PathElement.pathElement(SUBSYSTEM,JGroupsExtension.SUBSYSTEM_NAME)) @TO@ VariableDeclarationStatement@@PathAddress subsystemAddress=PathAddress.pathAddress(PathElement.pathElement(SUBSYSTEM,JGroupsExtension.SUBSYSTEM_NAME)); @AT@ 4071 @LENGTH@ 129
---------INS SimpleName@@subsystemAddress @TO@ VariableDeclarationFragment@@subsystemAddress=PathAddress.pathAddress(PathElement.pathElement(SUBSYSTEM,JGroupsExtension.SUBSYSTEM_NAME)) @AT@ 4071 @LENGTH@ 16
---------INS MethodInvocation@@PathAddress.pathAddress(PathElement.pathElement(SUBSYSTEM,JGroupsExtension.SUBSYSTEM_NAME)) @TO@ VariableDeclarationFragment@@subsystemAddress=PathAddress.pathAddress(PathElement.pathElement(SUBSYSTEM,JGroupsExtension.SUBSYSTEM_NAME)) @AT@ 4091 @LENGTH@ 109
------------INS SimpleName@@Name:PathAddress @TO@ MethodInvocation@@PathAddress.pathAddress(PathElement.pathElement(SUBSYSTEM,JGroupsExtension.SUBSYSTEM_NAME)) @AT@ 4091 @LENGTH@ 11
------------INS SimpleName@@MethodName:pathAddress:[PathElement.pathElement(SUBSYSTEM,JGroupsExtension.SUBSYSTEM_NAME)] @TO@ MethodInvocation@@PathAddress.pathAddress(PathElement.pathElement(SUBSYSTEM,JGroupsExtension.SUBSYSTEM_NAME)) @AT@ 4103 @LENGTH@ 97
---------------INS MethodInvocation@@PathElement.pathElement(SUBSYSTEM,JGroupsExtension.SUBSYSTEM_NAME) @TO@ SimpleName@@MethodName:pathAddress:[PathElement.pathElement(SUBSYSTEM,JGroupsExtension.SUBSYSTEM_NAME)] @AT@ 4132 @LENGTH@ 67
------------------INS SimpleName@@Name:PathElement @TO@ MethodInvocation@@PathElement.pathElement(SUBSYSTEM,JGroupsExtension.SUBSYSTEM_NAME) @AT@ 4132 @LENGTH@ 11
------------------INS SimpleName@@MethodName:pathElement:[SUBSYSTEM, JGroupsExtension.SUBSYSTEM_NAME] @TO@ MethodInvocation@@PathElement.pathElement(SUBSYSTEM,JGroupsExtension.SUBSYSTEM_NAME) @AT@ 4144 @LENGTH@ 55
---------------------INS SimpleName@@SUBSYSTEM @TO@ SimpleName@@MethodName:pathElement:[SUBSYSTEM, JGroupsExtension.SUBSYSTEM_NAME] @AT@ 4156 @LENGTH@ 9
---------------------INS QualifiedName@@JGroupsExtension.SUBSYSTEM_NAME @TO@ SimpleName@@MethodName:pathElement:[SUBSYSTEM, JGroupsExtension.SUBSYSTEM_NAME] @AT@ 4167 @LENGTH@ 31
------------------------INS SimpleName@@JGroupsExtension @TO@ QualifiedName@@JGroupsExtension.SUBSYSTEM_NAME @AT@ 4167 @LENGTH@ 16
------------------------INS SimpleName@@SUBSYSTEM_NAME @TO@ QualifiedName@@JGroupsExtension.SUBSYSTEM_NAME @AT@ 4184 @LENGTH@ 14
---INS VariableDeclarationStatement@@ModelNode removeOp=new ModelNode(); @TO@ MethodDeclaration@@protected, static, ModelNode, MethodName:getSubsystemRemoveOperation,  @AT@ 4210 @LENGTH@ 38
------INS SimpleType@@ModelNode @TO@ VariableDeclarationStatement@@ModelNode removeOp=new ModelNode(); @AT@ 4210 @LENGTH@ 9
------INS VariableDeclarationFragment@@removeOp=new ModelNode() @TO@ VariableDeclarationStatement@@ModelNode removeOp=new ModelNode(); @AT@ 4220 @LENGTH@ 26
---------INS SimpleName@@removeOp @TO@ VariableDeclarationFragment@@removeOp=new ModelNode() @AT@ 4220 @LENGTH@ 8
---------INS ClassInstanceCreation@@ModelNode[] @TO@ VariableDeclarationFragment@@removeOp=new ModelNode() @AT@ 4231 @LENGTH@ 15
------------INS New@@new @TO@ ClassInstanceCreation@@ModelNode[] @AT@ 4231 @LENGTH@ 3
------------INS SimpleType@@ModelNode @TO@ ClassInstanceCreation@@ModelNode[] @AT@ 4235 @LENGTH@ 9
---INS ExpressionStatement@@MethodInvocation:removeOp.get(OP).set(REMOVE) @TO@ MethodDeclaration@@protected, static, ModelNode, MethodName:getSubsystemRemoveOperation,  @AT@ 4257 @LENGTH@ 29
------INS MethodInvocation@@removeOp.get(OP).set(REMOVE) @TO@ ExpressionStatement@@MethodInvocation:removeOp.get(OP).set(REMOVE) @AT@ 4257 @LENGTH@ 28
---------INS MethodInvocation@@MethodName:get:[OP] @TO@ MethodInvocation@@removeOp.get(OP).set(REMOVE) @AT@ 4257 @LENGTH@ 16
------------INS SimpleName@@OP @TO@ MethodInvocation@@MethodName:get:[OP] @AT@ 4270 @LENGTH@ 2
---------INS SimpleName@@Name:removeOp @TO@ MethodInvocation@@removeOp.get(OP).set(REMOVE) @AT@ 4257 @LENGTH@ 8
---------INS SimpleName@@MethodName:set:[REMOVE] @TO@ MethodInvocation@@removeOp.get(OP).set(REMOVE) @AT@ 4274 @LENGTH@ 11
------------INS SimpleName@@REMOVE @TO@ SimpleName@@MethodName:set:[REMOVE] @AT@ 4278 @LENGTH@ 6
---INS ExpressionStatement@@MethodInvocation:removeOp.get(OP_ADDR).set(subsystemAddress.toModelNode()) @TO@ MethodDeclaration@@protected, static, ModelNode, MethodName:getSubsystemRemoveOperation,  @AT@ 4295 @LENGTH@ 58
------INS MethodInvocation@@removeOp.get(OP_ADDR).set(subsystemAddress.toModelNode()) @TO@ ExpressionStatement@@MethodInvocation:removeOp.get(OP_ADDR).set(subsystemAddress.toModelNode()) @AT@ 4295 @LENGTH@ 57
---------INS MethodInvocation@@MethodName:get:[OP_ADDR] @TO@ MethodInvocation@@removeOp.get(OP_ADDR).set(subsystemAddress.toModelNode()) @AT@ 4295 @LENGTH@ 21
------------INS SimpleName@@OP_ADDR @TO@ MethodInvocation@@MethodName:get:[OP_ADDR] @AT@ 4308 @LENGTH@ 7
---------INS SimpleName@@Name:removeOp @TO@ MethodInvocation@@removeOp.get(OP_ADDR).set(subsystemAddress.toModelNode()) @AT@ 4295 @LENGTH@ 8
---------INS SimpleName@@MethodName:set:[subsystemAddress.toModelNode()] @TO@ MethodInvocation@@removeOp.get(OP_ADDR).set(subsystemAddress.toModelNode()) @AT@ 4317 @LENGTH@ 35
------------INS MethodInvocation@@subsystemAddress.toModelNode() @TO@ SimpleName@@MethodName:set:[subsystemAddress.toModelNode()] @AT@ 4321 @LENGTH@ 30
---------------INS SimpleName@@Name:subsystemAddress @TO@ MethodInvocation@@subsystemAddress.toModelNode() @AT@ 4321 @LENGTH@ 16
---------------INS SimpleName@@MethodName:toModelNode:[] @TO@ MethodInvocation@@subsystemAddress.toModelNode() @AT@ 4338 @LENGTH@ 13
---INS ReturnStatement@@SimpleName:removeOp @TO@ MethodDeclaration@@protected, static, ModelNode, MethodName:getSubsystemRemoveOperation,  @AT@ 4362 @LENGTH@ 17
------INS SimpleName@@removeOp @TO@ ReturnStatement@@SimpleName:removeOp @AT@ 4369 @LENGTH@ 8


UPD ExpressionStatement@@Assignment:formattedPath=(path.endsWith("/") ? path : path + "/") @TO@ Assignment:formattedPath=(path.endsWith("/") ? formattedPath : formattedPath + "/") @AT@ 4789 @LENGTH@ 57
---UPD Assignment@@formattedPath=(path.endsWith("/") ? path : path + "/") @TO@ formattedPath=(path.endsWith("/") ? formattedPath : formattedPath + "/") @AT@ 4789 @LENGTH@ 56
------UPD ParenthesizedExpression@@(path.endsWith("/") ? path : path + "/") @TO@ (path.endsWith("/") ? formattedPath : formattedPath + "/") @AT@ 4805 @LENGTH@ 40
---------UPD ConditionalExpression@@path.endsWith("/") ? path : path + "/" @TO@ path.endsWith("/") ? formattedPath : formattedPath + "/" @AT@ 4806 @LENGTH@ 38
------------UPD SimpleName@@path @TO@ formattedPath @AT@ 4827 @LENGTH@ 4
------------UPD InfixExpression@@path + "/" @TO@ formattedPath + "/" @AT@ 4834 @LENGTH@ 10
---------------UPD SimpleName@@path @TO@ formattedPath @AT@ 4834 @LENGTH@ 4


UPD IfStatement@@if (count == 0 && afterClassRun) {  for (  final ServerSetupTask instance : current) {    instance.tearDown(managementClient.get(),container.getName());  }  active.remove(container.getName());  deployed.remove(container.getName());} @TO@ if (count == 0 && afterClassRun) {  for (int i=current.size() - 1; i >= 0; i--) {    current.get(i).tearDown(managementClient.get(),container.getName());  }  active.remove(container.getName());  deployed.remove(container.getName());} @AT@ 5952 @LENGTH@ 297
---UPD Block@@ThenBody:{  for (  final ServerSetupTask instance : current) {    instance.tearDown(managementClient.get(),container.getName());  }  active.remove(container.getName());  deployed.remove(container.getName());} @TO@ ThenBody:{  for (int i=current.size() - 1; i >= 0; i--) {    current.get(i).tearDown(managementClient.get(),container.getName());  }  active.remove(container.getName());  deployed.remove(container.getName());} @AT@ 5985 @LENGTH@ 264
------INS ForStatement@@for (int i=current.size() - 1; i >= 0; i--) {  current.get(i).tearDown(managementClient.get(),container.getName());} @TO@ Block@@ThenBody:{  for (  final ServerSetupTask instance : current) {    instance.tearDown(managementClient.get(),container.getName());  }  active.remove(container.getName());  deployed.remove(container.getName());} @AT@ 5999 @LENGTH@ 147
---------INS VariableDeclarationExpression@@int i=current.size() - 1 @TO@ ForStatement@@for (int i=current.size() - 1; i >= 0; i--) {  current.get(i).tearDown(managementClient.get(),container.getName());} @AT@ 6004 @LENGTH@ 26
------------INS PrimitiveType@@int @TO@ VariableDeclarationExpression@@int i=current.size() - 1 @AT@ 6004 @LENGTH@ 3
------------INS VariableDeclarationFragment@@i=current.size() - 1 @TO@ VariableDeclarationExpression@@int i=current.size() - 1 @AT@ 6008 @LENGTH@ 22
---------------INS SimpleName@@i @TO@ VariableDeclarationFragment@@i=current.size() - 1 @AT@ 6008 @LENGTH@ 1
---------------INS InfixExpression@@current.size() - 1 @TO@ VariableDeclarationFragment@@i=current.size() - 1 @AT@ 6012 @LENGTH@ 18
------------------INS MethodInvocation@@current.size() @TO@ InfixExpression@@current.size() - 1 @AT@ 6012 @LENGTH@ 14
---------------------INS SimpleName@@Name:current @TO@ MethodInvocation@@current.size() @AT@ 6012 @LENGTH@ 7
---------------------INS SimpleName@@MethodName:size:[] @TO@ MethodInvocation@@current.size() @AT@ 6020 @LENGTH@ 6
------------------INS Operator@@- @TO@ InfixExpression@@current.size() - 1 @AT@ 6026 @LENGTH@ 1
------------------INS NumberLiteral@@1 @TO@ InfixExpression@@current.size() - 1 @AT@ 6029 @LENGTH@ 1
---------INS InfixExpression@@i >= 0 @TO@ ForStatement@@for (int i=current.size() - 1; i >= 0; i--) {  current.get(i).tearDown(managementClient.get(),container.getName());} @AT@ 6032 @LENGTH@ 6
------------INS SimpleName@@i @TO@ InfixExpression@@i >= 0 @AT@ 6032 @LENGTH@ 1
------------INS Operator@@>= @TO@ InfixExpression@@i >= 0 @AT@ 6033 @LENGTH@ 2
------------INS NumberLiteral@@0 @TO@ InfixExpression@@i >= 0 @AT@ 6037 @LENGTH@ 1
---------INS PostfixExpression@@i-- @TO@ ForStatement@@for (int i=current.size() - 1; i >= 0; i--) {  current.get(i).tearDown(managementClient.get(),container.getName());} @AT@ 6040 @LENGTH@ 3
------------INS SimpleName@@i @TO@ PostfixExpression@@i-- @AT@ 6040 @LENGTH@ 1
------------INS Operator@@-- @TO@ PostfixExpression@@i-- @AT@ 6042 @LENGTH@ 2
---------MOV ExpressionStatement@@MethodInvocation:instance.tearDown(managementClient.get(),container.getName()) @TO@ ForStatement@@for (int i=current.size() - 1; i >= 0; i--) {  current.get(i).tearDown(managementClient.get(),container.getName());} @AT@ 6064 @LENGTH@ 63
------DEL EnhancedForStatement@@for (final ServerSetupTask instance : current) {  instance.tearDown(managementClient.get(),container.getName());} @AT@ 5999 @LENGTH@ 142
---------DEL SingleVariableDeclaration@@final ServerSetupTask instance @AT@ 6004 @LENGTH@ 30
------------DEL Modifier@@final @AT@ 6004 @LENGTH@ 5
------------DEL SimpleType@@ServerSetupTask @AT@ 6010 @LENGTH@ 15
------------DEL SimpleName@@instance @AT@ 6026 @LENGTH@ 8
---------DEL SimpleName@@current @AT@ 6037 @LENGTH@ 7


INS MethodDeclaration@@public, static, AttributeConverter, MethodName:createHardCoded, final ModelNode hardCodedValue,  @TO@ TypeDeclaration@@[public, static]Factory,  @AT@ 4394 @LENGTH@ 151
---INS Modifier@@public @TO@ MethodDeclaration@@public, static, AttributeConverter, MethodName:createHardCoded, final ModelNode hardCodedValue,  @AT@ 4394 @LENGTH@ 6
---INS Modifier@@static @TO@ MethodDeclaration@@public, static, AttributeConverter, MethodName:createHardCoded, final ModelNode hardCodedValue,  @AT@ 4401 @LENGTH@ 6
---INS SimpleType@@AttributeConverter @TO@ MethodDeclaration@@public, static, AttributeConverter, MethodName:createHardCoded, final ModelNode hardCodedValue,  @AT@ 4408 @LENGTH@ 18
---INS SimpleName@@MethodName:createHardCoded @TO@ MethodDeclaration@@public, static, AttributeConverter, MethodName:createHardCoded, final ModelNode hardCodedValue,  @AT@ 4427 @LENGTH@ 15
---INS SingleVariableDeclaration@@final ModelNode hardCodedValue @TO@ MethodDeclaration@@public, static, AttributeConverter, MethodName:createHardCoded, final ModelNode hardCodedValue,  @AT@ 4443 @LENGTH@ 30
------INS Modifier@@final @TO@ SingleVariableDeclaration@@final ModelNode hardCodedValue @AT@ 4443 @LENGTH@ 5
------INS SimpleType@@ModelNode @TO@ SingleVariableDeclaration@@final ModelNode hardCodedValue @AT@ 4449 @LENGTH@ 9
------INS SimpleName@@hardCodedValue @TO@ SingleVariableDeclaration@@final ModelNode hardCodedValue @AT@ 4459 @LENGTH@ 14
---INS ReturnStatement@@MethodInvocation:createHardCoded(hardCodedValue,false) @TO@ MethodDeclaration@@public, static, AttributeConverter, MethodName:createHardCoded, final ModelNode hardCodedValue,  @AT@ 4489 @LENGTH@ 46
------INS MethodInvocation@@createHardCoded(hardCodedValue,false) @TO@ ReturnStatement@@MethodInvocation:createHardCoded(hardCodedValue,false) @AT@ 4496 @LENGTH@ 38
---------INS SimpleName@@MethodName:createHardCoded:[hardCodedValue, false] @TO@ MethodInvocation@@createHardCoded(hardCodedValue,false) @AT@ 4496 @LENGTH@ 38
------------INS SimpleName@@hardCodedValue @TO@ SimpleName@@MethodName:createHardCoded:[hardCodedValue, false] @AT@ 4512 @LENGTH@ 14
------------INS BooleanLiteral@@false @TO@ SimpleName@@MethodName:createHardCoded:[hardCodedValue, false] @AT@ 4528 @LENGTH@ 5


INS MethodDeclaration@@public, static, boolean, MethodName:requiresReload, final Set<Flag> flags,  @TO@ TypeDeclaration@@[public, final]Logging,  @AT@ 2283 @LENGTH@ 319
---INS Modifier@@public @TO@ MethodDeclaration@@public, static, boolean, MethodName:requiresReload, final Set<Flag> flags,  @AT@ 2283 @LENGTH@ 6
---INS Modifier@@static @TO@ MethodDeclaration@@public, static, boolean, MethodName:requiresReload, final Set<Flag> flags,  @AT@ 2290 @LENGTH@ 6
---INS PrimitiveType@@boolean @TO@ MethodDeclaration@@public, static, boolean, MethodName:requiresReload, final Set<Flag> flags,  @AT@ 2297 @LENGTH@ 7
---INS SimpleName@@MethodName:requiresReload @TO@ MethodDeclaration@@public, static, boolean, MethodName:requiresReload, final Set<Flag> flags,  @AT@ 2305 @LENGTH@ 14
---INS SingleVariableDeclaration@@final Set<Flag> flags @TO@ MethodDeclaration@@public, static, boolean, MethodName:requiresReload, final Set<Flag> flags,  @AT@ 2320 @LENGTH@ 21
------INS Modifier@@final @TO@ SingleVariableDeclaration@@final Set<Flag> flags @AT@ 2320 @LENGTH@ 5
------INS ParameterizedType@@Set<Flag> @TO@ SingleVariableDeclaration@@final Set<Flag> flags @AT@ 2326 @LENGTH@ 9
---------INS SimpleType@@Set @TO@ ParameterizedType@@Set<Flag> @AT@ 2326 @LENGTH@ 3
---------INS SimpleType@@Flag @TO@ ParameterizedType@@Set<Flag> @AT@ 2330 @LENGTH@ 4
------INS SimpleName@@flags @TO@ SingleVariableDeclaration@@final Set<Flag> flags @AT@ 2336 @LENGTH@ 5
---INS EnhancedForStatement@@for (Flag flag : flags) {switch (flag) {case RESTART_ALL_SERVICES:case RESTART_RESOURCE_SERVICES:{      return true;    }}} @TO@ MethodDeclaration@@public, static, boolean, MethodName:requiresReload, final Set<Flag> flags,  @AT@ 2353 @LENGTH@ 221
------INS SingleVariableDeclaration@@Flag flag @TO@ EnhancedForStatement@@for (Flag flag : flags) {switch (flag) {case RESTART_ALL_SERVICES:case RESTART_RESOURCE_SERVICES:{      return true;    }}} @AT@ 2358 @LENGTH@ 9
---------INS SimpleType@@Flag @TO@ SingleVariableDeclaration@@Flag flag @AT@ 2358 @LENGTH@ 4
---------INS SimpleName@@flag @TO@ SingleVariableDeclaration@@Flag flag @AT@ 2363 @LENGTH@ 4
------INS SimpleName@@flags @TO@ EnhancedForStatement@@for (Flag flag : flags) {switch (flag) {case RESTART_ALL_SERVICES:case RESTART_RESOURCE_SERVICES:{      return true;    }}} @AT@ 2370 @LENGTH@ 5
------INS SwitchStatement@@switch (flag) {case RESTART_ALL_SERVICES:case RESTART_RESOURCE_SERVICES:{    return true;  }} @TO@ EnhancedForStatement@@for (Flag flag : flags) {switch (flag) {case RESTART_ALL_SERVICES:case RESTART_RESOURCE_SERVICES:{      return true;    }}} @AT@ 2391 @LENGTH@ 173
---------INS SimpleName@@flag @TO@ SwitchStatement@@switch (flag) {case RESTART_ALL_SERVICES:case RESTART_RESOURCE_SERVICES:{    return true;  }} @AT@ 2399 @LENGTH@ 4
---------INS SwitchCase@@case RESTART_ALL_SERVICES: @TO@ SwitchStatement@@switch (flag) {case RESTART_ALL_SERVICES:case RESTART_RESOURCE_SERVICES:{    return true;  }} @AT@ 2423 @LENGTH@ 26
------------INS SimpleName@@RESTART_ALL_SERVICES @TO@ SwitchCase@@case RESTART_ALL_SERVICES: @AT@ 2428 @LENGTH@ 20
---------INS SwitchCase@@case RESTART_RESOURCE_SERVICES: @TO@ SwitchStatement@@switch (flag) {case RESTART_ALL_SERVICES:case RESTART_RESOURCE_SERVICES:{    return true;  }} @AT@ 2466 @LENGTH@ 31
------------INS SimpleName@@RESTART_RESOURCE_SERVICES @TO@ SwitchCase@@case RESTART_RESOURCE_SERVICES: @AT@ 2471 @LENGTH@ 25
---------INS ReturnStatement@@BooleanLiteral:true @TO@ SwitchStatement@@switch (flag) {case RESTART_ALL_SERVICES:case RESTART_RESOURCE_SERVICES:{    return true;  }} @AT@ 2520 @LENGTH@ 12
------------INS BooleanLiteral@@true @TO@ ReturnStatement@@BooleanLiteral:true @AT@ 2527 @LENGTH@ 4
---INS ReturnStatement@@BooleanLiteral:false @TO@ MethodDeclaration@@public, static, boolean, MethodName:requiresReload, final Set<Flag> flags,  @AT@ 2583 @LENGTH@ 13
------INS BooleanLiteral@@false @TO@ ReturnStatement@@BooleanLiteral:false @AT@ 2590 @LENGTH@ 5


INS FieldDeclaration@@private, final, Map<String,Lock>, [locks=new HashMap<String,Lock>()] @TO@ TypeDeclaration@@[public]LockServiceImpl, [LockService] @AT@ 937 @LENGTH@ 68
---INS Modifier@@private @TO@ FieldDeclaration@@private, final, Map<String,Lock>, [locks=new HashMap<String,Lock>()] @AT@ 937 @LENGTH@ 7
---INS Modifier@@final @TO@ FieldDeclaration@@private, final, Map<String,Lock>, [locks=new HashMap<String,Lock>()] @AT@ 945 @LENGTH@ 5
---INS ParameterizedType@@Map<String,Lock> @TO@ FieldDeclaration@@private, final, Map<String,Lock>, [locks=new HashMap<String,Lock>()] @AT@ 951 @LENGTH@ 17
------INS SimpleType@@Map @TO@ ParameterizedType@@Map<String,Lock> @AT@ 951 @LENGTH@ 3
------INS SimpleType@@String @TO@ ParameterizedType@@Map<String,Lock> @AT@ 955 @LENGTH@ 6
------INS SimpleType@@Lock @TO@ ParameterizedType@@Map<String,Lock> @AT@ 963 @LENGTH@ 4
---INS VariableDeclarationFragment@@locks=new HashMap<String,Lock>() @TO@ FieldDeclaration@@private, final, Map<String,Lock>, [locks=new HashMap<String,Lock>()] @AT@ 969 @LENGTH@ 35
------INS SimpleName@@locks @TO@ VariableDeclarationFragment@@locks=new HashMap<String,Lock>() @AT@ 969 @LENGTH@ 5
------INS ClassInstanceCreation@@HashMap<String,Lock>[] @TO@ VariableDeclarationFragment@@locks=new HashMap<String,Lock>() @AT@ 977 @LENGTH@ 27
---------INS New@@new @TO@ ClassInstanceCreation@@HashMap<String,Lock>[] @AT@ 977 @LENGTH@ 3
---------INS ParameterizedType@@HashMap<String,Lock> @TO@ ClassInstanceCreation@@HashMap<String,Lock>[] @AT@ 981 @LENGTH@ 21
------------INS SimpleType@@HashMap @TO@ ParameterizedType@@HashMap<String,Lock> @AT@ 981 @LENGTH@ 7
------------INS SimpleType@@String @TO@ ParameterizedType@@HashMap<String,Lock> @AT@ 989 @LENGTH@ 6
------------INS SimpleType@@Lock @TO@ ParameterizedType@@HashMap<String,Lock> @AT@ 997 @LENGTH@ 4


UPD VariableDeclarationStatement@@Map map=new HashMap(); @TO@ Map<String,Object> map=new HashMap<String,Object>(); @AT@ 2035 @LENGTH@ 24
---INS ParameterizedType@@Map<String,Object> @TO@ VariableDeclarationStatement@@Map map=new HashMap(); @AT@ 2035 @LENGTH@ 19
------INS SimpleType@@Map @TO@ ParameterizedType@@Map<String,Object> @AT@ 2035 @LENGTH@ 3
------INS SimpleType@@String @TO@ ParameterizedType@@Map<String,Object> @AT@ 2039 @LENGTH@ 6
------INS SimpleType@@Object @TO@ ParameterizedType@@Map<String,Object> @AT@ 2047 @LENGTH@ 6
---DEL SimpleType@@Map @AT@ 2035 @LENGTH@ 3
---UPD VariableDeclarationFragment@@map=new HashMap() @TO@ map=new HashMap<String,Object>() @AT@ 2039 @LENGTH@ 19
------UPD ClassInstanceCreation@@HashMap[] @TO@ HashMap<String,Object>[] @AT@ 2045 @LENGTH@ 13
---------DEL SimpleType@@HashMap @AT@ 2049 @LENGTH@ 7
---------INS ParameterizedType@@HashMap<String,Object> @TO@ ClassInstanceCreation@@HashMap[] @AT@ 2065 @LENGTH@ 23
------------INS SimpleType@@HashMap @TO@ ParameterizedType@@HashMap<String,Object> @AT@ 2065 @LENGTH@ 7
------------INS SimpleType@@String @TO@ ParameterizedType@@HashMap<String,Object> @AT@ 2073 @LENGTH@ 6
------------INS SimpleType@@Object @TO@ ParameterizedType@@HashMap<String,Object> @AT@ 2081 @LENGTH@ 6


UPD FieldDeclaration@@static, final, SimpleAttributeDefinition, [MODULE=new SimpleAttributeDefinitionBuilder(Constants.MODULE,ModelType.STRING).setAllowNull(true).setAllowExpression(true).setMinSize(1).build()] @TO@ static, final, SimpleAttributeDefinition, [MODULE=new SimpleAttributeDefinitionBuilder(Constants.MODULE,ModelType.STRING).setAllowNull(true).setAllowExpression(false).setMinSize(1).build()] @AT@ 2422 @LENGTH@ 239
---UPD VariableDeclarationFragment@@MODULE=new SimpleAttributeDefinitionBuilder(Constants.MODULE,ModelType.STRING).setAllowNull(true).setAllowExpression(true).setMinSize(1).build() @TO@ MODULE=new SimpleAttributeDefinitionBuilder(Constants.MODULE,ModelType.STRING).setAllowNull(true).setAllowExpression(false).setMinSize(1).build() @AT@ 2461 @LENGTH@ 199
------UPD MethodInvocation@@new SimpleAttributeDefinitionBuilder(Constants.MODULE,ModelType.STRING).setAllowNull(true).setAllowExpression(true).setMinSize(1).build() @TO@ new SimpleAttributeDefinitionBuilder(Constants.MODULE,ModelType.STRING).setAllowNull(true).setAllowExpression(false).setMinSize(1).build() @AT@ 2470 @LENGTH@ 190
---------UPD MethodInvocation@@MethodName:setAllowExpression:[true] @TO@ MethodName:setAllowExpression:[false] @AT@ 2470 @LENGTH@ 142
------------UPD BooleanLiteral@@true @TO@ false @AT@ 2607 @LENGTH@ 4


UPD MethodDeclaration@@public, static, boolean, MethodName:isFull, final Collection<?> coll,  @TO@ public, static, boolean, MethodName:isFull, final Collection<? extends Object> coll,  @AT@ 48091 @LENGTH@ 591
---UPD SingleVariableDeclaration@@final Collection<?> coll @TO@ final Collection<? extends Object> coll @AT@ 48120 @LENGTH@ 24
------UPD ParameterizedType@@Collection<?> @TO@ Collection<? extends Object> @AT@ 48126 @LENGTH@ 13
---UPD TryStatement@@try {  final BoundedCollection<?> bcoll=UnmodifiableBoundedCollection.unmodifiableBoundedCollection((Collection<Object>)coll);  return bcoll.isFull();} catch (final IllegalArgumentException ex) {  return false;} @TO@ try {  final BoundedCollection<?> bcoll=UnmodifiableBoundedCollection.unmodifiableBoundedCollection(coll);  return bcoll.isFull();} catch (final IllegalArgumentException ex) {  return false;} @AT@ 48391 @LENGTH@ 285
------UPD VariableDeclarationStatement@@final BoundedCollection<?> bcoll=UnmodifiableBoundedCollection.unmodifiableBoundedCollection((Collection<Object>)coll); @TO@ final BoundedCollection<?> bcoll=UnmodifiableBoundedCollection.unmodifiableBoundedCollection(coll); @AT@ 48409 @LENGTH@ 142
---------UPD VariableDeclarationFragment@@bcoll=UnmodifiableBoundedCollection.unmodifiableBoundedCollection((Collection<Object>)coll) @TO@ bcoll=UnmodifiableBoundedCollection.unmodifiableBoundedCollection(coll) @AT@ 48436 @LENGTH@ 114
------------UPD MethodInvocation@@UnmodifiableBoundedCollection.unmodifiableBoundedCollection((Collection<Object>)coll) @TO@ UnmodifiableBoundedCollection.unmodifiableBoundedCollection(coll) @AT@ 48464 @LENGTH@ 86
---------------UPD SimpleName@@MethodName:unmodifiableBoundedCollection:[(Collection<Object>)coll] @TO@ MethodName:unmodifiableBoundedCollection:[coll] @AT@ 48494 @LENGTH@ 56
------------------DEL CastExpression@@(Collection<Object>)coll @AT@ 48524 @LENGTH@ 25
---------------------DEL ParameterizedType@@Collection<Object> @AT@ 48525 @LENGTH@ 18
------------------------DEL SimpleType@@Collection @AT@ 48525 @LENGTH@ 10
------------------------DEL SimpleType@@Object @AT@ 48536 @LENGTH@ 6
---------------------DEL SimpleName@@coll @AT@ 48545 @LENGTH@ 4
------------------INS SimpleName@@coll @TO@ SimpleName@@MethodName:unmodifiableBoundedCollection:[(Collection<Object>)coll] @AT@ 48608 @LENGTH@ 4


INS MethodDeclaration@@public, void, MethodName:readsDocumentsWithNestedPolymorphismCorrectly,  @TO@ TypeDeclaration@@[@RunWith(SpringJUnit4ClassRunner.class), public, abstract]AbstractPersonRepositoryIntegrationTests,  @AT@ 14996 @LENGTH@ 434
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:readsDocumentsWithNestedPolymorphismCorrectly,  @AT@ 14996 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:readsDocumentsWithNestedPolymorphismCorrectly,  @AT@ 15003 @LENGTH@ 4
---INS SimpleName@@MethodName:readsDocumentsWithNestedPolymorphismCorrectly @TO@ MethodDeclaration@@public, void, MethodName:readsDocumentsWithNestedPolymorphismCorrectly,  @AT@ 15008 @LENGTH@ 45
---INS VariableDeclarationStatement@@UsernameAndPassword usernameAndPassword=new UsernameAndPassword(); @TO@ MethodDeclaration@@public, void, MethodName:readsDocumentsWithNestedPolymorphismCorrectly,  @AT@ 15061 @LENGTH@ 68
------INS SimpleType@@UsernameAndPassword @TO@ VariableDeclarationStatement@@UsernameAndPassword usernameAndPassword=new UsernameAndPassword(); @AT@ 15061 @LENGTH@ 19
------INS VariableDeclarationFragment@@usernameAndPassword=new UsernameAndPassword() @TO@ VariableDeclarationStatement@@UsernameAndPassword usernameAndPassword=new UsernameAndPassword(); @AT@ 15081 @LENGTH@ 47
---------INS SimpleName@@usernameAndPassword @TO@ VariableDeclarationFragment@@usernameAndPassword=new UsernameAndPassword() @AT@ 15081 @LENGTH@ 19
---------INS ClassInstanceCreation@@UsernameAndPassword[] @TO@ VariableDeclarationFragment@@usernameAndPassword=new UsernameAndPassword() @AT@ 15103 @LENGTH@ 25
------------INS New@@new @TO@ ClassInstanceCreation@@UsernameAndPassword[] @AT@ 15103 @LENGTH@ 3
------------INS SimpleType@@UsernameAndPassword @TO@ ClassInstanceCreation@@UsernameAndPassword[] @AT@ 15107 @LENGTH@ 19
---INS ExpressionStatement@@Assignment:usernameAndPassword.username="dave" @TO@ MethodDeclaration@@public, void, MethodName:readsDocumentsWithNestedPolymorphismCorrectly,  @AT@ 15132 @LENGTH@ 38
------INS Assignment@@usernameAndPassword.username="dave" @TO@ ExpressionStatement@@Assignment:usernameAndPassword.username="dave" @AT@ 15132 @LENGTH@ 37
---------INS QualifiedName@@usernameAndPassword.username @TO@ Assignment@@usernameAndPassword.username="dave" @AT@ 15132 @LENGTH@ 28
------------INS SimpleName@@usernameAndPassword @TO@ QualifiedName@@usernameAndPassword.username @AT@ 15132 @LENGTH@ 19
------------INS SimpleName@@username @TO@ QualifiedName@@usernameAndPassword.username @AT@ 15152 @LENGTH@ 8
---------INS Operator@@= @TO@ Assignment@@usernameAndPassword.username="dave" @AT@ 15160 @LENGTH@ 1
---------INS StringLiteral@@"dave" @TO@ Assignment@@usernameAndPassword.username="dave" @AT@ 15163 @LENGTH@ 6
---INS ExpressionStatement@@Assignment:usernameAndPassword.password="btcs" @TO@ MethodDeclaration@@public, void, MethodName:readsDocumentsWithNestedPolymorphismCorrectly,  @AT@ 15173 @LENGTH@ 38
------INS Assignment@@usernameAndPassword.password="btcs" @TO@ ExpressionStatement@@Assignment:usernameAndPassword.password="btcs" @AT@ 15173 @LENGTH@ 37
---------INS QualifiedName@@usernameAndPassword.password @TO@ Assignment@@usernameAndPassword.password="btcs" @AT@ 15173 @LENGTH@ 28
------------INS SimpleName@@usernameAndPassword @TO@ QualifiedName@@usernameAndPassword.password @AT@ 15173 @LENGTH@ 19
------------INS SimpleName@@password @TO@ QualifiedName@@usernameAndPassword.password @AT@ 15193 @LENGTH@ 8
---------INS Operator@@= @TO@ Assignment@@usernameAndPassword.password="btcs" @AT@ 15201 @LENGTH@ 1
---------INS StringLiteral@@"btcs" @TO@ Assignment@@usernameAndPassword.password="btcs" @AT@ 15204 @LENGTH@ 6
---INS ExpressionStatement@@Assignment:dave.credentials=usernameAndPassword @TO@ MethodDeclaration@@public, void, MethodName:readsDocumentsWithNestedPolymorphismCorrectly,  @AT@ 15215 @LENGTH@ 39
------INS Assignment@@dave.credentials=usernameAndPassword @TO@ ExpressionStatement@@Assignment:dave.credentials=usernameAndPassword @AT@ 15215 @LENGTH@ 38
---------INS QualifiedName@@dave.credentials @TO@ Assignment@@dave.credentials=usernameAndPassword @AT@ 15215 @LENGTH@ 16
------------INS SimpleName@@dave @TO@ QualifiedName@@dave.credentials @AT@ 15215 @LENGTH@ 4
------------INS SimpleName@@credentials @TO@ QualifiedName@@dave.credentials @AT@ 15220 @LENGTH@ 11
---------INS Operator@@= @TO@ Assignment@@dave.credentials=usernameAndPassword @AT@ 15231 @LENGTH@ 1
---------INS SimpleName@@usernameAndPassword @TO@ Assignment@@dave.credentials=usernameAndPassword @AT@ 15234 @LENGTH@ 19
---INS ExpressionStatement@@MethodInvocation:repository.save(dave) @TO@ MethodDeclaration@@public, void, MethodName:readsDocumentsWithNestedPolymorphismCorrectly,  @AT@ 15258 @LENGTH@ 22
------INS MethodInvocation@@repository.save(dave) @TO@ ExpressionStatement@@MethodInvocation:repository.save(dave) @AT@ 15258 @LENGTH@ 21
---------INS SimpleName@@Name:repository @TO@ MethodInvocation@@repository.save(dave) @AT@ 15258 @LENGTH@ 10
---------INS SimpleName@@MethodName:save:[dave] @TO@ MethodInvocation@@repository.save(dave) @AT@ 15269 @LENGTH@ 10
------------INS SimpleName@@dave @TO@ SimpleName@@MethodName:save:[dave] @AT@ 15274 @LENGTH@ 4
---INS VariableDeclarationStatement@@List<Person> result=repository.findByCredentials(usernameAndPassword); @TO@ MethodDeclaration@@public, void, MethodName:readsDocumentsWithNestedPolymorphismCorrectly,  @AT@ 15284 @LENGTH@ 72
------INS ParameterizedType@@List<Person> @TO@ VariableDeclarationStatement@@List<Person> result=repository.findByCredentials(usernameAndPassword); @AT@ 15284 @LENGTH@ 12
---------INS SimpleType@@List @TO@ ParameterizedType@@List<Person> @AT@ 15284 @LENGTH@ 4
---------INS SimpleType@@Person @TO@ ParameterizedType@@List<Person> @AT@ 15289 @LENGTH@ 6
------INS VariableDeclarationFragment@@result=repository.findByCredentials(usernameAndPassword) @TO@ VariableDeclarationStatement@@List<Person> result=repository.findByCredentials(usernameAndPassword); @AT@ 15297 @LENGTH@ 58
---------INS SimpleName@@result @TO@ VariableDeclarationFragment@@result=repository.findByCredentials(usernameAndPassword) @AT@ 15297 @LENGTH@ 6
---------INS MethodInvocation@@repository.findByCredentials(usernameAndPassword) @TO@ VariableDeclarationFragment@@result=repository.findByCredentials(usernameAndPassword) @AT@ 15306 @LENGTH@ 49
------------INS SimpleName@@Name:repository @TO@ MethodInvocation@@repository.findByCredentials(usernameAndPassword) @AT@ 15306 @LENGTH@ 10
------------INS SimpleName@@MethodName:findByCredentials:[usernameAndPassword] @TO@ MethodInvocation@@repository.findByCredentials(usernameAndPassword) @AT@ 15317 @LENGTH@ 38
---------------INS SimpleName@@usernameAndPassword @TO@ SimpleName@@MethodName:findByCredentials:[usernameAndPassword] @AT@ 15335 @LENGTH@ 19
---INS ExpressionStatement@@MethodInvocation:assertThat(result,hasSize(1)) @TO@ MethodDeclaration@@public, void, MethodName:readsDocumentsWithNestedPolymorphismCorrectly,  @AT@ 15359 @LENGTH@ 31
------INS MethodInvocation@@assertThat(result,hasSize(1)) @TO@ ExpressionStatement@@MethodInvocation:assertThat(result,hasSize(1)) @AT@ 15359 @LENGTH@ 30
---------INS SimpleName@@MethodName:assertThat:[result, hasSize(1)] @TO@ MethodInvocation@@assertThat(result,hasSize(1)) @AT@ 15359 @LENGTH@ 30
------------INS SimpleName@@result @TO@ SimpleName@@MethodName:assertThat:[result, hasSize(1)] @AT@ 15370 @LENGTH@ 6
------------INS MethodInvocation@@hasSize(1) @TO@ SimpleName@@MethodName:assertThat:[result, hasSize(1)] @AT@ 15378 @LENGTH@ 10
---------------INS SimpleName@@MethodName:hasSize:[1] @TO@ MethodInvocation@@hasSize(1) @AT@ 15378 @LENGTH@ 10
------------------INS NumberLiteral@@1 @TO@ SimpleName@@MethodName:hasSize:[1] @AT@ 15386 @LENGTH@ 1
---------------INS SimpleName@@MethodName:hasSize:[1] @TO@ MethodInvocation@@hasSize(1) @AT@ 15378 @LENGTH@ 10
------------------INS NumberLiteral@@1 @TO@ SimpleName@@MethodName:hasSize:[1] @AT@ 15386 @LENGTH@ 1
---INS ExpressionStatement@@MethodInvocation:assertThat(result,hasItem(dave)) @TO@ MethodDeclaration@@public, void, MethodName:readsDocumentsWithNestedPolymorphismCorrectly,  @AT@ 15393 @LENGTH@ 34
------INS MethodInvocation@@assertThat(result,hasItem(dave)) @TO@ ExpressionStatement@@MethodInvocation:assertThat(result,hasItem(dave)) @AT@ 15393 @LENGTH@ 33
---------INS SimpleName@@MethodName:assertThat:[result, hasItem(dave)] @TO@ MethodInvocation@@assertThat(result,hasItem(dave)) @AT@ 15393 @LENGTH@ 33
------------INS SimpleName@@result @TO@ SimpleName@@MethodName:assertThat:[result, hasItem(dave)] @AT@ 15404 @LENGTH@ 6
------------INS MethodInvocation@@hasItem(dave) @TO@ SimpleName@@MethodName:assertThat:[result, hasItem(dave)] @AT@ 15412 @LENGTH@ 13
---------------INS SimpleName@@MethodName:hasItem:[dave] @TO@ MethodInvocation@@hasItem(dave) @AT@ 15412 @LENGTH@ 13
------------------INS SimpleName@@dave @TO@ SimpleName@@MethodName:hasItem:[dave] @AT@ 15420 @LENGTH@ 4


UPD ThrowStatement@@ClassInstanceCreation:new SecurityException("Unknown security context type") @TO@ MethodInvocation:access.unknownContext() @AT@ 3910 @LENGTH@ 61
---DEL ClassInstanceCreation@@SecurityException["Unknown security context type"] @AT@ 3916 @LENGTH@ 54
------DEL New@@new @AT@ 3916 @LENGTH@ 3
------DEL SimpleType@@SecurityException @AT@ 3920 @LENGTH@ 17
------DEL StringLiteral@@"Unknown security context type" @AT@ 3938 @LENGTH@ 31
---INS MethodInvocation@@access.unknownContext() @TO@ ThrowStatement@@ClassInstanceCreation:new SecurityException("Unknown security context type") @AT@ 3916 @LENGTH@ 23
------INS SimpleName@@Name:access @TO@ MethodInvocation@@access.unknownContext() @AT@ 3916 @LENGTH@ 6
------INS SimpleName@@MethodName:unknownContext:[] @TO@ MethodInvocation@@access.unknownContext() @AT@ 3923 @LENGTH@ 16


UPD VariableDeclarationStatement@@boolean isUpload=UPLOAD_REQUEST.equals(exchange.getCanonicalPath()); @TO@ boolean isUpload=UPLOAD_REQUEST.equals(exchange.getRequestPath()); @AT@ 2852 @LENGTH@ 70
---UPD VariableDeclarationFragment@@isUpload=UPLOAD_REQUEST.equals(exchange.getCanonicalPath()) @TO@ isUpload=UPLOAD_REQUEST.equals(exchange.getRequestPath()) @AT@ 2860 @LENGTH@ 61
------UPD MethodInvocation@@UPLOAD_REQUEST.equals(exchange.getCanonicalPath()) @TO@ UPLOAD_REQUEST.equals(exchange.getRequestPath()) @AT@ 2871 @LENGTH@ 50
---------UPD SimpleName@@MethodName:equals:[exchange.getCanonicalPath()] @TO@ MethodName:equals:[exchange.getRequestPath()] @AT@ 2886 @LENGTH@ 35
------------UPD MethodInvocation@@exchange.getCanonicalPath() @TO@ exchange.getRequestPath() @AT@ 2893 @LENGTH@ 27
---------------UPD SimpleName@@MethodName:getCanonicalPath:[] @TO@ MethodName:getRequestPath:[] @AT@ 2902 @LENGTH@ 18


UPD ForStatement@@for (int i=0; i < files.length; i++) {  files[i].setHasAcessDate(timesDefined.get(i));  if (files[i].getHasAcessDate()) {    files[i].setAccessDate(Long.reverseBytes(header.readLong()));  }} @TO@ for (int i=0; i < files.length; i++) {  files[i].setHasAccessDate(timesDefined.get(i));  if (files[i].getHasAccessDate()) {    files[i].setAccessDate(Long.reverseBytes(header.readLong()));  }} @AT@ 27930 @LENGTH@ 327
---UPD ExpressionStatement@@MethodInvocation:files[i].setHasAcessDate(timesDefined.get(i)) @TO@ MethodInvocation:files[i].setHasAccessDate(timesDefined.get(i)) @AT@ 27999 @LENGTH@ 46
------UPD MethodInvocation@@files[i].setHasAcessDate(timesDefined.get(i)) @TO@ files[i].setHasAccessDate(timesDefined.get(i)) @AT@ 27999 @LENGTH@ 45
---------UPD SimpleName@@MethodName:setHasAcessDate:[timesDefined.get(i)] @TO@ MethodName:setHasAccessDate:[timesDefined.get(i)] @AT@ 28008 @LENGTH@ 36
---UPD IfStatement@@if (files[i].getHasAcessDate()) {  files[i].setAccessDate(Long.reverseBytes(header.readLong()));} @TO@ if (files[i].getHasAccessDate()) {  files[i].setAccessDate(Long.reverseBytes(header.readLong()));} @AT@ 28074 @LENGTH@ 157
------UPD MethodInvocation@@files[i].getHasAcessDate() @TO@ files[i].getHasAccessDate() @AT@ 28078 @LENGTH@ 26
---------UPD SimpleName@@MethodName:getHasAcessDate:[] @TO@ MethodName:getHasAccessDate:[] @AT@ 28087 @LENGTH@ 17


INS FieldDeclaration@@private, final, List<String>, [discardedOperations=new LinkedList<String>()] @TO@ TypeDeclaration@@[public, final]ExplicitTransformationDescriptionBuilder, AbstractTransformationDescriptionBuilder[TransformationDescriptionBuilder] @AT@ 1850 @LENGTH@ 74
---INS Modifier@@private @TO@ FieldDeclaration@@private, final, List<String>, [discardedOperations=new LinkedList<String>()] @AT@ 1850 @LENGTH@ 7
---INS Modifier@@final @TO@ FieldDeclaration@@private, final, List<String>, [discardedOperations=new LinkedList<String>()] @AT@ 1858 @LENGTH@ 5
---INS ParameterizedType@@List<String> @TO@ FieldDeclaration@@private, final, List<String>, [discardedOperations=new LinkedList<String>()] @AT@ 1864 @LENGTH@ 12
------INS SimpleType@@List @TO@ ParameterizedType@@List<String> @AT@ 1864 @LENGTH@ 4
------INS SimpleType@@String @TO@ ParameterizedType@@List<String> @AT@ 1869 @LENGTH@ 6
---INS VariableDeclarationFragment@@discardedOperations=new LinkedList<String>() @TO@ FieldDeclaration@@private, final, List<String>, [discardedOperations=new LinkedList<String>()] @AT@ 1877 @LENGTH@ 46
------INS SimpleName@@discardedOperations @TO@ VariableDeclarationFragment@@discardedOperations=new LinkedList<String>() @AT@ 1877 @LENGTH@ 19
------INS ClassInstanceCreation@@LinkedList<String>[] @TO@ VariableDeclarationFragment@@discardedOperations=new LinkedList<String>() @AT@ 1899 @LENGTH@ 24
---------INS New@@new @TO@ ClassInstanceCreation@@LinkedList<String>[] @AT@ 1899 @LENGTH@ 3
---------INS ParameterizedType@@LinkedList<String> @TO@ ClassInstanceCreation@@LinkedList<String>[] @AT@ 1903 @LENGTH@ 18
------------INS SimpleType@@LinkedList @TO@ ParameterizedType@@LinkedList<String> @AT@ 1903 @LENGTH@ 10
------------INS SimpleType@@String @TO@ ParameterizedType@@LinkedList<String> @AT@ 1914 @LENGTH@ 6


UPD FieldDeclaration@@private, int, [counter=0] @TO@ private, int, [counter] @AT@ 4802 @LENGTH@ 24
---UPD VariableDeclarationFragment@@counter=0 @TO@ counter @AT@ 4814 @LENGTH@ 11
------DEL NumberLiteral@@0 @AT@ 4824 @LENGTH@ 1


UPD MethodDeclaration@@String, MethodName:capacityIsGreaterThanIntegerMaxValue, long value,  @TO@ String, MethodName:capacityIsExpressionOrGreaterThanIntegerMaxValue, ModelNode value,  @AT@ 2857 @LENGTH@ 49
---UPD SimpleName@@MethodName:capacityIsGreaterThanIntegerMaxValue @TO@ MethodName:capacityIsExpressionOrGreaterThanIntegerMaxValue @AT@ 2857 @LENGTH@ 36
---UPD SingleVariableDeclaration@@long value @TO@ ModelNode value @AT@ 2894 @LENGTH@ 10
------DEL PrimitiveType@@long @AT@ 2894 @LENGTH@ 4
------INS SimpleType@@ModelNode @TO@ SingleVariableDeclaration@@long value @AT@ 2965 @LENGTH@ 9


UPD ExpressionStatement@@Assignment:testSupport=DomainTestSuite.createSupport(AdminOnlyModeTestCase.class.getSimpleName()) @TO@ Assignment:testSupport=DomainTestSupport.createAndStartDefaultSupport(AdminOnlyModeTestCase.class.getSimpleName()) @AT@ 3812 @LENGTH@ 89
---UPD Assignment@@testSupport=DomainTestSuite.createSupport(AdminOnlyModeTestCase.class.getSimpleName()) @TO@ testSupport=DomainTestSupport.createAndStartDefaultSupport(AdminOnlyModeTestCase.class.getSimpleName()) @AT@ 3812 @LENGTH@ 88
------UPD MethodInvocation@@DomainTestSuite.createSupport(AdminOnlyModeTestCase.class.getSimpleName()) @TO@ DomainTestSupport.createAndStartDefaultSupport(AdminOnlyModeTestCase.class.getSimpleName()) @AT@ 3826 @LENGTH@ 74
---------UPD SimpleName@@Name:DomainTestSuite @TO@ Name:DomainTestSupport @AT@ 3826 @LENGTH@ 15
---------UPD SimpleName@@MethodName:createSupport:[AdminOnlyModeTestCase.class.getSimpleName()] @TO@ MethodName:createAndStartDefaultSupport:[AdminOnlyModeTestCase.class.getSimpleName()] @AT@ 3842 @LENGTH@ 58


INS IfStatement@@if (exchange.getIn().getHeader("CamelNettyLocalAddress") != null) {  message.setRemoteAddress(exchange.getIn().getHeader("CamelNettyLocalAddress",String.class));  exchange.getOut().setHeader(SyslogConstants.SYSLOG_LOCAL_ADDRESS,message.getRemoteAddress());} @TO@ MethodDeclaration@@public, Object, MethodName:unmarshal, Exchange exchange, InputStream inputStream, Exception,  @AT@ 2778 @LENGTH@ 290
---INS InfixExpression@@exchange.getIn().getHeader("CamelNettyLocalAddress") != null @TO@ IfStatement@@if (exchange.getIn().getHeader("CamelNettyLocalAddress") != null) {  message.setRemoteAddress(exchange.getIn().getHeader("CamelNettyLocalAddress",String.class));  exchange.getOut().setHeader(SyslogConstants.SYSLOG_LOCAL_ADDRESS,message.getRemoteAddress());} @AT@ 2782 @LENGTH@ 60
------INS MethodInvocation@@exchange.getIn().getHeader("CamelNettyLocalAddress") @TO@ InfixExpression@@exchange.getIn().getHeader("CamelNettyLocalAddress") != null @AT@ 2782 @LENGTH@ 52
---------INS MethodInvocation@@MethodName:getIn:[] @TO@ MethodInvocation@@exchange.getIn().getHeader("CamelNettyLocalAddress") @AT@ 2782 @LENGTH@ 16
---------INS SimpleName@@Name:exchange @TO@ MethodInvocation@@exchange.getIn().getHeader("CamelNettyLocalAddress") @AT@ 2782 @LENGTH@ 8
---------INS SimpleName@@MethodName:getHeader:["CamelNettyLocalAddress"] @TO@ MethodInvocation@@exchange.getIn().getHeader("CamelNettyLocalAddress") @AT@ 2799 @LENGTH@ 35
------------INS StringLiteral@@"CamelNettyLocalAddress" @TO@ SimpleName@@MethodName:getHeader:["CamelNettyLocalAddress"] @AT@ 2809 @LENGTH@ 24
------INS Operator@@!= @TO@ InfixExpression@@exchange.getIn().getHeader("CamelNettyLocalAddress") != null @AT@ 2834 @LENGTH@ 2
------INS NullLiteral@@null @TO@ InfixExpression@@exchange.getIn().getHeader("CamelNettyLocalAddress") != null @AT@ 2838 @LENGTH@ 4
---INS Block@@ThenBody:{  message.setRemoteAddress(exchange.getIn().getHeader("CamelNettyLocalAddress",String.class));  exchange.getOut().setHeader(SyslogConstants.SYSLOG_LOCAL_ADDRESS,message.getRemoteAddress());} @TO@ IfStatement@@if (exchange.getIn().getHeader("CamelNettyLocalAddress") != null) {  message.setRemoteAddress(exchange.getIn().getHeader("CamelNettyLocalAddress",String.class));  exchange.getOut().setHeader(SyslogConstants.SYSLOG_LOCAL_ADDRESS,message.getRemoteAddress());} @AT@ 2844 @LENGTH@ 224
------INS ExpressionStatement@@MethodInvocation:message.setRemoteAddress(exchange.getIn().getHeader("CamelNettyLocalAddress",String.class)) @TO@ Block@@ThenBody:{  message.setRemoteAddress(exchange.getIn().getHeader("CamelNettyLocalAddress",String.class));  exchange.getOut().setHeader(SyslogConstants.SYSLOG_LOCAL_ADDRESS,message.getRemoteAddress());} @AT@ 2858 @LENGTH@ 93
---------INS MethodInvocation@@message.setRemoteAddress(exchange.getIn().getHeader("CamelNettyLocalAddress",String.class)) @TO@ ExpressionStatement@@MethodInvocation:message.setRemoteAddress(exchange.getIn().getHeader("CamelNettyLocalAddress",String.class)) @AT@ 2858 @LENGTH@ 92
------------INS SimpleName@@Name:message @TO@ MethodInvocation@@message.setRemoteAddress(exchange.getIn().getHeader("CamelNettyLocalAddress",String.class)) @AT@ 2858 @LENGTH@ 7
------------INS SimpleName@@MethodName:setRemoteAddress:[exchange.getIn().getHeader("CamelNettyLocalAddress",String.class)] @TO@ MethodInvocation@@message.setRemoteAddress(exchange.getIn().getHeader("CamelNettyLocalAddress",String.class)) @AT@ 2866 @LENGTH@ 84
---------------INS MethodInvocation@@exchange.getIn().getHeader("CamelNettyLocalAddress",String.class) @TO@ SimpleName@@MethodName:setRemoteAddress:[exchange.getIn().getHeader("CamelNettyLocalAddress",String.class)] @AT@ 2883 @LENGTH@ 66
------------------INS MethodInvocation@@MethodName:getIn:[] @TO@ MethodInvocation@@exchange.getIn().getHeader("CamelNettyLocalAddress",String.class) @AT@ 2883 @LENGTH@ 16
------------------INS SimpleName@@Name:exchange @TO@ MethodInvocation@@exchange.getIn().getHeader("CamelNettyLocalAddress",String.class) @AT@ 2883 @LENGTH@ 8
------------------INS SimpleName@@MethodName:getHeader:["CamelNettyLocalAddress", String.class] @TO@ MethodInvocation@@exchange.getIn().getHeader("CamelNettyLocalAddress",String.class) @AT@ 2900 @LENGTH@ 49
---------------------INS StringLiteral@@"CamelNettyLocalAddress" @TO@ SimpleName@@MethodName:getHeader:["CamelNettyLocalAddress", String.class] @AT@ 2910 @LENGTH@ 24
---------------------INS TypeLiteral@@String.class @TO@ SimpleName@@MethodName:getHeader:["CamelNettyLocalAddress", String.class] @AT@ 2936 @LENGTH@ 12
------INS ExpressionStatement@@MethodInvocation:exchange.getOut().setHeader(SyslogConstants.SYSLOG_LOCAL_ADDRESS,message.getRemoteAddress()) @TO@ Block@@ThenBody:{  message.setRemoteAddress(exchange.getIn().getHeader("CamelNettyLocalAddress",String.class));  exchange.getOut().setHeader(SyslogConstants.SYSLOG_LOCAL_ADDRESS,message.getRemoteAddress());} @AT@ 2964 @LENGTH@ 94
---------INS MethodInvocation@@exchange.getOut().setHeader(SyslogConstants.SYSLOG_LOCAL_ADDRESS,message.getRemoteAddress()) @TO@ ExpressionStatement@@MethodInvocation:exchange.getOut().setHeader(SyslogConstants.SYSLOG_LOCAL_ADDRESS,message.getRemoteAddress()) @AT@ 2964 @LENGTH@ 93
------------INS MethodInvocation@@MethodName:getOut:[] @TO@ MethodInvocation@@exchange.getOut().setHeader(SyslogConstants.SYSLOG_LOCAL_ADDRESS,message.getRemoteAddress()) @AT@ 2964 @LENGTH@ 17
------------INS SimpleName@@Name:exchange @TO@ MethodInvocation@@exchange.getOut().setHeader(SyslogConstants.SYSLOG_LOCAL_ADDRESS,message.getRemoteAddress()) @AT@ 2964 @LENGTH@ 8
------------INS SimpleName@@MethodName:setHeader:[SyslogConstants.SYSLOG_LOCAL_ADDRESS, message.getRemoteAddress()] @TO@ MethodInvocation@@exchange.getOut().setHeader(SyslogConstants.SYSLOG_LOCAL_ADDRESS,message.getRemoteAddress()) @AT@ 2982 @LENGTH@ 75
---------------INS QualifiedName@@SyslogConstants.SYSLOG_LOCAL_ADDRESS @TO@ SimpleName@@MethodName:setHeader:[SyslogConstants.SYSLOG_LOCAL_ADDRESS, message.getRemoteAddress()] @AT@ 2992 @LENGTH@ 36
------------------INS SimpleName@@SyslogConstants @TO@ QualifiedName@@SyslogConstants.SYSLOG_LOCAL_ADDRESS @AT@ 2992 @LENGTH@ 15
------------------INS SimpleName@@SYSLOG_LOCAL_ADDRESS @TO@ QualifiedName@@SyslogConstants.SYSLOG_LOCAL_ADDRESS @AT@ 3008 @LENGTH@ 20
---------------INS MethodInvocation@@message.getRemoteAddress() @TO@ SimpleName@@MethodName:setHeader:[SyslogConstants.SYSLOG_LOCAL_ADDRESS, message.getRemoteAddress()] @AT@ 3030 @LENGTH@ 26
------------------INS SimpleName@@Name:message @TO@ MethodInvocation@@message.getRemoteAddress() @AT@ 3030 @LENGTH@ 7
------------------INS SimpleName@@MethodName:getRemoteAddress:[] @TO@ MethodInvocation@@message.getRemoteAddress() @AT@ 3038 @LENGTH@ 18


UPD ExpressionStatement@@MethodInvocation:RaOperationUtil.activate(context,archiveOrModuleName,archiveOrModuleName) @TO@ MethodInvocation:RaOperationUtil.activate(context,archiveOrModuleName,archiveOrModuleName,null) @AT@ 5582 @LENGTH@ 76
---UPD MethodInvocation@@RaOperationUtil.activate(context,archiveOrModuleName,archiveOrModuleName) @TO@ RaOperationUtil.activate(context,archiveOrModuleName,archiveOrModuleName,null) @AT@ 5582 @LENGTH@ 75
------UPD SimpleName@@MethodName:activate:[context, archiveOrModuleName, archiveOrModuleName] @TO@ MethodName:activate:[context, archiveOrModuleName, archiveOrModuleName, null] @AT@ 5598 @LENGTH@ 59
---------INS NullLiteral@@null @TO@ SimpleName@@MethodName:activate:[context, archiveOrModuleName, archiveOrModuleName] @AT@ 5658 @LENGTH@ 4


UPD IfStatement@@if (bodyParameters.isEmpty()) {  if (Exchange.class.isAssignableFrom(parameterType)) {    expression=ExpressionBuilder.exchangeExpression();  } else {    expression=ExpressionBuilder.mandatoryBodyExpression(parameterType,true);  }  LOG.trace("Parameter #{} is the body parameter using expression {}",i,expression);  parameterInfo.setExpression(expression);  bodyParameters.add(parameterInfo);} @TO@ if (bodyParameters.isEmpty()) {  if (Exchange.class.isAssignableFrom(parameterType)) {    expression=ExpressionBuilder.exchangeExpression();  } else {    expression=ExpressionBuilder.mandatoryBodyExpression(parameterType,true);  }  LOG.trace("Parameter #{} is the body parameter using expression {}",i,expression);  parameterInfo.setExpression(expression);  bodyParameters.add(parameterInfo);} else {} @AT@ 17417 @LENGTH@ 971
---INS Block@@ElseBody:{} @TO@ IfStatement@@if (bodyParameters.isEmpty()) {  if (Exchange.class.isAssignableFrom(parameterType)) {    expression=ExpressionBuilder.exchangeExpression();  } else {    expression=ExpressionBuilder.mandatoryBodyExpression(parameterType,true);  }  LOG.trace("Parameter #{} is the body parameter using expression {}",i,expression);  parameterInfo.setExpression(expression);  bodyParameters.add(parameterInfo);} @AT@ 18394 @LENGTH@ 94


INS MethodDeclaration@@public, void, MethodName:projectsCOuntQueriesForQueriesWithSubselects,  @TO@ TypeDeclaration@@[public]QueryUtilsUnitTests,  @AT@ 6471 @LENGTH@ 215
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:projectsCOuntQueriesForQueriesWithSubselects,  @AT@ 6471 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:projectsCOuntQueriesForQueriesWithSubselects,  @AT@ 6478 @LENGTH@ 4
---INS SimpleName@@MethodName:projectsCOuntQueriesForQueriesWithSubselects @TO@ MethodDeclaration@@public, void, MethodName:projectsCOuntQueriesForQueriesWithSubselects,  @AT@ 6483 @LENGTH@ 44
---INS ExpressionStatement@@MethodInvocation:assertCountQuery("select o from Foo o where cb.id in (select b from Bar b)","select count(o) from Foo o where cb.id in (select b from Bar b)") @TO@ MethodDeclaration@@public, void, MethodName:projectsCOuntQueriesForQueriesWithSubselects,  @AT@ 6535 @LENGTH@ 148
------INS MethodInvocation@@assertCountQuery("select o from Foo o where cb.id in (select b from Bar b)","select count(o) from Foo o where cb.id in (select b from Bar b)") @TO@ ExpressionStatement@@MethodInvocation:assertCountQuery("select o from Foo o where cb.id in (select b from Bar b)","select count(o) from Foo o where cb.id in (select b from Bar b)") @AT@ 6535 @LENGTH@ 147
---------INS SimpleName@@MethodName:assertCountQuery:["select o from Foo o where cb.id in (select b from Bar b)", "select count(o) from Foo o where cb.id in (select b from Bar b)"] @TO@ MethodInvocation@@assertCountQuery("select o from Foo o where cb.id in (select b from Bar b)","select count(o) from Foo o where cb.id in (select b from Bar b)") @AT@ 6535 @LENGTH@ 147
------------INS StringLiteral@@"select o from Foo o where cb.id in (select b from Bar b)" @TO@ SimpleName@@MethodName:assertCountQuery:["select o from Foo o where cb.id in (select b from Bar b)", "select count(o) from Foo o where cb.id in (select b from Bar b)"] @AT@ 6552 @LENGTH@ 58
------------INS StringLiteral@@"select count(o) from Foo o where cb.id in (select b from Bar b)" @TO@ SimpleName@@MethodName:assertCountQuery:["select o from Foo o where cb.id in (select b from Bar b)", "select count(o) from Foo o where cb.id in (select b from Bar b)"] @AT@ 6616 @LENGTH@ 65


DEL ExpressionStatement@@MethodInvocation:System.out.println(ret) @AT@ 6337 @LENGTH@ 24
---DEL MethodInvocation@@System.out.println(ret) @AT@ 6337 @LENGTH@ 23
------DEL QualifiedName@@Name:System.out @AT@ 6337 @LENGTH@ 10
------DEL SimpleName@@MethodName:println:[ret] @AT@ 6348 @LENGTH@ 12
---------DEL SimpleName@@ret @AT@ 6356 @LENGTH@ 3


INS ExpressionStatement@@MethodInvocation:builder.getRawBeanDefinition().setSource(configuration.getSource()) @TO@ MethodDeclaration@@public, BeanDefinitionBuilder, MethodName:build, BeanDefinitionRegistry registry, ResourceLoader resourceLoader,  @AT@ 3200 @LENGTH@ 68
---INS MethodInvocation@@builder.getRawBeanDefinition().setSource(configuration.getSource()) @TO@ ExpressionStatement@@MethodInvocation:builder.getRawBeanDefinition().setSource(configuration.getSource()) @AT@ 3200 @LENGTH@ 67
------INS MethodInvocation@@MethodName:getRawBeanDefinition:[] @TO@ MethodInvocation@@builder.getRawBeanDefinition().setSource(configuration.getSource()) @AT@ 3200 @LENGTH@ 30
------INS SimpleName@@Name:builder @TO@ MethodInvocation@@builder.getRawBeanDefinition().setSource(configuration.getSource()) @AT@ 3200 @LENGTH@ 7
------INS SimpleName@@MethodName:setSource:[configuration.getSource()] @TO@ MethodInvocation@@builder.getRawBeanDefinition().setSource(configuration.getSource()) @AT@ 3231 @LENGTH@ 36
---------INS MethodInvocation@@configuration.getSource() @TO@ SimpleName@@MethodName:setSource:[configuration.getSource()] @AT@ 3241 @LENGTH@ 25
------------INS SimpleName@@Name:configuration @TO@ MethodInvocation@@configuration.getSource() @AT@ 3241 @LENGTH@ 13
------------INS SimpleName@@MethodName:getSource:[] @TO@ MethodInvocation@@configuration.getSource() @AT@ 3255 @LENGTH@ 11


UPD FieldDeclaration@@public, static, final, Pattern, [ARTIFACT_METADATA_URL_REGEX=Pattern.compile("([^ ]+)/([^/ ]+)/([^/ ]+)/((maven-metadata([-]([^ .]+))?.xml))")] @TO@ public, static, final, Pattern, [ARTIFACT_METADATA_URL_REGEX=Pattern.compile("([^ ]+)/([^/ ]+)/([^/ ]+)/((maven-metadata([-]([^ .]+))?.xml))([.]([^ ]+))?")] @AT@ 3166 @LENGTH@ 140
---UPD VariableDeclarationFragment@@ARTIFACT_METADATA_URL_REGEX=Pattern.compile("([^ ]+)/([^/ ]+)/([^/ ]+)/((maven-metadata([-]([^ .]+))?.xml))") @TO@ ARTIFACT_METADATA_URL_REGEX=Pattern.compile("([^ ]+)/([^/ ]+)/([^/ ]+)/((maven-metadata([-]([^ .]+))?.xml))([.]([^ ]+))?") @AT@ 3194 @LENGTH@ 111
------UPD MethodInvocation@@Pattern.compile("([^ ]+)/([^/ ]+)/([^/ ]+)/((maven-metadata([-]([^ .]+))?.xml))") @TO@ Pattern.compile("([^ ]+)/([^/ ]+)/([^/ ]+)/((maven-metadata([-]([^ .]+))?.xml))([.]([^ ]+))?") @AT@ 3224 @LENGTH@ 81
---------UPD SimpleName@@MethodName:compile:["([^ ]+)/([^/ ]+)/([^/ ]+)/((maven-metadata([-]([^ .]+))?.xml))"] @TO@ MethodName:compile:["([^ ]+)/([^/ ]+)/([^/ ]+)/((maven-metadata([-]([^ .]+))?.xml))([.]([^ ]+))?"] @AT@ 3232 @LENGTH@ 73
------------UPD StringLiteral@@"([^ ]+)/([^/ ]+)/([^/ ]+)/((maven-metadata([-]([^ .]+))?.xml))" @TO@ "([^ ]+)/([^/ ]+)/([^/ ]+)/((maven-metadata([-]([^ .]+))?.xml))([.]([^ ]+))?" @AT@ 3240 @LENGTH@ 64


INS MethodDeclaration@@public, void, MethodName:savesJsonStringCorrectly,  @TO@ TypeDeclaration@@[@RunWith(SpringJUnit4ClassRunner.class), @ContextConfiguration("classpath:infrastructure.xml"), public]MongoTemplateTests,  @AT@ 51560 @LENGTH@ 365
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:savesJsonStringCorrectly,  @AT@ 51560 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:savesJsonStringCorrectly,  @AT@ 51567 @LENGTH@ 4
---INS SimpleName@@MethodName:savesJsonStringCorrectly @TO@ MethodDeclaration@@public, void, MethodName:savesJsonStringCorrectly,  @AT@ 51572 @LENGTH@ 24
---INS VariableDeclarationStatement@@DBObject dbObject=new BasicDBObject().append("first","first").append("second","second"); @TO@ MethodDeclaration@@public, void, MethodName:savesJsonStringCorrectly,  @AT@ 51604 @LENGTH@ 92
------INS SimpleType@@DBObject @TO@ VariableDeclarationStatement@@DBObject dbObject=new BasicDBObject().append("first","first").append("second","second"); @AT@ 51604 @LENGTH@ 8
------INS VariableDeclarationFragment@@dbObject=new BasicDBObject().append("first","first").append("second","second") @TO@ VariableDeclarationStatement@@DBObject dbObject=new BasicDBObject().append("first","first").append("second","second"); @AT@ 51613 @LENGTH@ 82
---------INS SimpleName@@dbObject @TO@ VariableDeclarationFragment@@dbObject=new BasicDBObject().append("first","first").append("second","second") @AT@ 51613 @LENGTH@ 8
---------INS MethodInvocation@@new BasicDBObject().append("first","first").append("second","second") @TO@ VariableDeclarationFragment@@dbObject=new BasicDBObject().append("first","first").append("second","second") @AT@ 51624 @LENGTH@ 71
------------INS MethodInvocation@@MethodName:append:["first", "first"] @TO@ MethodInvocation@@new BasicDBObject().append("first","first").append("second","second") @AT@ 51624 @LENGTH@ 44
---------------INS StringLiteral@@"first" @TO@ MethodInvocation@@MethodName:append:["first", "first"] @AT@ 51651 @LENGTH@ 7
---------------INS StringLiteral@@"first" @TO@ MethodInvocation@@MethodName:append:["first", "first"] @AT@ 51660 @LENGTH@ 7
------------INS ClassInstanceCreation@@BasicDBObject[] @TO@ MethodInvocation@@new BasicDBObject().append("first","first").append("second","second") @AT@ 51624 @LENGTH@ 19
---------------INS New@@new @TO@ ClassInstanceCreation@@BasicDBObject[] @AT@ 51624 @LENGTH@ 3
---------------INS SimpleType@@BasicDBObject @TO@ ClassInstanceCreation@@BasicDBObject[] @AT@ 51628 @LENGTH@ 13
------------INS SimpleName@@MethodName:append:["second", "second"] @TO@ MethodInvocation@@new BasicDBObject().append("first","first").append("second","second") @AT@ 51669 @LENGTH@ 26
---------------INS StringLiteral@@"second" @TO@ SimpleName@@MethodName:append:["second", "second"] @AT@ 51676 @LENGTH@ 8
---------------INS StringLiteral@@"second" @TO@ SimpleName@@MethodName:append:["second", "second"] @AT@ 51686 @LENGTH@ 8
---INS ExpressionStatement@@MethodInvocation:template.save(dbObject.toString(),"collection") @TO@ MethodDeclaration@@public, void, MethodName:savesJsonStringCorrectly,  @AT@ 51700 @LENGTH@ 49
------INS MethodInvocation@@template.save(dbObject.toString(),"collection") @TO@ ExpressionStatement@@MethodInvocation:template.save(dbObject.toString(),"collection") @AT@ 51700 @LENGTH@ 48
---------INS SimpleName@@Name:template @TO@ MethodInvocation@@template.save(dbObject.toString(),"collection") @AT@ 51700 @LENGTH@ 8
---------INS SimpleName@@MethodName:save:[dbObject.toString(), "collection"] @TO@ MethodInvocation@@template.save(dbObject.toString(),"collection") @AT@ 51709 @LENGTH@ 39
------------INS MethodInvocation@@dbObject.toString() @TO@ SimpleName@@MethodName:save:[dbObject.toString(), "collection"] @AT@ 51714 @LENGTH@ 19
---------------INS SimpleName@@Name:dbObject @TO@ MethodInvocation@@dbObject.toString() @AT@ 51714 @LENGTH@ 8
---------------INS SimpleName@@MethodName:toString:[] @TO@ MethodInvocation@@dbObject.toString() @AT@ 51723 @LENGTH@ 10
------------INS StringLiteral@@"collection" @TO@ SimpleName@@MethodName:save:[dbObject.toString(), "collection"] @AT@ 51735 @LENGTH@ 12
---INS VariableDeclarationStatement@@List<DBObject> result=template.findAll(DBObject.class,"collection"); @TO@ MethodDeclaration@@public, void, MethodName:savesJsonStringCorrectly,  @AT@ 51753 @LENGTH@ 71
------INS ParameterizedType@@List<DBObject> @TO@ VariableDeclarationStatement@@List<DBObject> result=template.findAll(DBObject.class,"collection"); @AT@ 51753 @LENGTH@ 14
---------INS SimpleType@@List @TO@ ParameterizedType@@List<DBObject> @AT@ 51753 @LENGTH@ 4
---------INS SimpleType@@DBObject @TO@ ParameterizedType@@List<DBObject> @AT@ 51758 @LENGTH@ 8
------INS VariableDeclarationFragment@@result=template.findAll(DBObject.class,"collection") @TO@ VariableDeclarationStatement@@List<DBObject> result=template.findAll(DBObject.class,"collection"); @AT@ 51768 @LENGTH@ 55
---------INS SimpleName@@result @TO@ VariableDeclarationFragment@@result=template.findAll(DBObject.class,"collection") @AT@ 51768 @LENGTH@ 6
---------INS MethodInvocation@@template.findAll(DBObject.class,"collection") @TO@ VariableDeclarationFragment@@result=template.findAll(DBObject.class,"collection") @AT@ 51777 @LENGTH@ 46
------------INS SimpleName@@Name:template @TO@ MethodInvocation@@template.findAll(DBObject.class,"collection") @AT@ 51777 @LENGTH@ 8
------------INS SimpleName@@MethodName:findAll:[DBObject.class, "collection"] @TO@ MethodInvocation@@template.findAll(DBObject.class,"collection") @AT@ 51786 @LENGTH@ 37
---------------INS TypeLiteral@@DBObject.class @TO@ SimpleName@@MethodName:findAll:[DBObject.class, "collection"] @AT@ 51794 @LENGTH@ 14
---------------INS StringLiteral@@"collection" @TO@ SimpleName@@MethodName:findAll:[DBObject.class, "collection"] @AT@ 51810 @LENGTH@ 12
---INS ExpressionStatement@@MethodInvocation:assertThat(result.size(),is(1)) @TO@ MethodDeclaration@@public, void, MethodName:savesJsonStringCorrectly,  @AT@ 51827 @LENGTH@ 33
------INS MethodInvocation@@assertThat(result.size(),is(1)) @TO@ ExpressionStatement@@MethodInvocation:assertThat(result.size(),is(1)) @AT@ 51827 @LENGTH@ 32
---------INS SimpleName@@MethodName:assertThat:[result.size(), is(1)] @TO@ MethodInvocation@@assertThat(result.size(),is(1)) @AT@ 51827 @LENGTH@ 32
------------INS MethodInvocation@@result.size() @TO@ SimpleName@@MethodName:assertThat:[result.size(), is(1)] @AT@ 51838 @LENGTH@ 13
---------------INS SimpleName@@Name:result @TO@ MethodInvocation@@result.size() @AT@ 51838 @LENGTH@ 6
---------------INS SimpleName@@MethodName:size:[] @TO@ MethodInvocation@@result.size() @AT@ 51845 @LENGTH@ 6
------------INS MethodInvocation@@is(1) @TO@ SimpleName@@MethodName:assertThat:[result.size(), is(1)] @AT@ 51853 @LENGTH@ 5
---------------INS SimpleName@@MethodName:is:[1] @TO@ MethodInvocation@@is(1) @AT@ 51853 @LENGTH@ 5
------------------INS NumberLiteral@@1 @TO@ SimpleName@@MethodName:is:[1] @AT@ 51856 @LENGTH@ 1
---------------INS SimpleName@@MethodName:is:[1] @TO@ MethodInvocation@@is(1) @AT@ 51853 @LENGTH@ 5
------------------INS NumberLiteral@@1 @TO@ SimpleName@@MethodName:is:[1] @AT@ 51856 @LENGTH@ 1
---INS ExpressionStatement@@MethodInvocation:assertThat(result.get(0).containsField("first"),is(true)) @TO@ MethodDeclaration@@public, void, MethodName:savesJsonStringCorrectly,  @AT@ 51863 @LENGTH@ 59
------INS MethodInvocation@@assertThat(result.get(0).containsField("first"),is(true)) @TO@ ExpressionStatement@@MethodInvocation:assertThat(result.get(0).containsField("first"),is(true)) @AT@ 51863 @LENGTH@ 58
---------INS SimpleName@@MethodName:assertThat:[result.get(0).containsField("first"), is(true)] @TO@ MethodInvocation@@assertThat(result.get(0).containsField("first"),is(true)) @AT@ 51863 @LENGTH@ 58
------------INS MethodInvocation@@result.get(0).containsField("first") @TO@ SimpleName@@MethodName:assertThat:[result.get(0).containsField("first"), is(true)] @AT@ 51874 @LENGTH@ 36
---------------INS MethodInvocation@@MethodName:get:[0] @TO@ MethodInvocation@@result.get(0).containsField("first") @AT@ 51874 @LENGTH@ 13
------------------INS NumberLiteral@@0 @TO@ MethodInvocation@@MethodName:get:[0] @AT@ 51885 @LENGTH@ 1
---------------INS SimpleName@@Name:result @TO@ MethodInvocation@@result.get(0).containsField("first") @AT@ 51874 @LENGTH@ 6
---------------INS SimpleName@@MethodName:containsField:["first"] @TO@ MethodInvocation@@result.get(0).containsField("first") @AT@ 51888 @LENGTH@ 22
------------------INS StringLiteral@@"first" @TO@ SimpleName@@MethodName:containsField:["first"] @AT@ 51902 @LENGTH@ 7
------------INS MethodInvocation@@is(true) @TO@ SimpleName@@MethodName:assertThat:[result.get(0).containsField("first"), is(true)] @AT@ 51912 @LENGTH@ 8
---------------INS SimpleName@@MethodName:is:[true] @TO@ MethodInvocation@@is(true) @AT@ 51912 @LENGTH@ 8
------------------INS BooleanLiteral@@true @TO@ SimpleName@@MethodName:is:[true] @AT@ 51915 @LENGTH@ 4
---------------INS SimpleName@@MethodName:is:[true] @TO@ MethodInvocation@@is(true) @AT@ 51912 @LENGTH@ 8
------------------INS BooleanLiteral@@true @TO@ SimpleName@@MethodName:is:[true] @AT@ 51915 @LENGTH@ 4


UPD ExpressionStatement@@MethodInvocation:newControllers.add(installBindingService(context,model,name)) @TO@ MethodInvocation:newControllers.add(installBindingService(context,model,name,verificationHandler)) @AT@ 3985 @LENGTH@ 64
---UPD MethodInvocation@@newControllers.add(installBindingService(context,model,name)) @TO@ newControllers.add(installBindingService(context,model,name,verificationHandler)) @AT@ 3985 @LENGTH@ 63
------UPD SimpleName@@MethodName:add:[installBindingService(context,model,name)] @TO@ MethodName:add:[installBindingService(context,model,name,verificationHandler)] @AT@ 4000 @LENGTH@ 48
---------UPD MethodInvocation@@installBindingService(context,model,name) @TO@ installBindingService(context,model,name,verificationHandler) @AT@ 4004 @LENGTH@ 43
------------UPD SimpleName@@MethodName:installBindingService:[context, model, name] @TO@ MethodName:installBindingService:[context, model, name, verificationHandler] @AT@ 4004 @LENGTH@ 43
---------------INS SimpleName@@verificationHandler @TO@ SimpleName@@MethodName:installBindingService:[context, model, name] @AT@ 3969 @LENGTH@ 19


INS ExpressionStatement@@MethodInvocation:EJB3RemoteResourceDefinition.registerTransformers_1_1_0(builder) @TO@ MethodDeclaration@@private, static, void, MethodName:registerTransformers_1_1_0, SubsystemRegistration subsystemRegistration,  @AT@ 14457 @LENGTH@ 65
---INS MethodInvocation@@EJB3RemoteResourceDefinition.registerTransformers_1_1_0(builder) @TO@ ExpressionStatement@@MethodInvocation:EJB3RemoteResourceDefinition.registerTransformers_1_1_0(builder) @AT@ 14457 @LENGTH@ 64
------INS SimpleName@@Name:EJB3RemoteResourceDefinition @TO@ MethodInvocation@@EJB3RemoteResourceDefinition.registerTransformers_1_1_0(builder) @AT@ 14457 @LENGTH@ 28
------INS SimpleName@@MethodName:registerTransformers_1_1_0:[builder] @TO@ MethodInvocation@@EJB3RemoteResourceDefinition.registerTransformers_1_1_0(builder) @AT@ 14486 @LENGTH@ 35
---------INS SimpleName@@builder @TO@ SimpleName@@MethodName:registerTransformers_1_1_0:[builder] @AT@ 14513 @LENGTH@ 7


UPD TryStatement@@try {  boolean isExistingCon=(connection != null);  if (!isExistingCon) {    connection=resourceFactory.createConnection();    resourceHolderToUse.addConnection(connection);  }  channel=ConsumerChannelRegistry.getConsumerChannel();  if (channel == null) {    channel=resourceFactory.createChannel(connection);  }  resourceHolderToUse.addChannel(channel,connection);  if (resourceHolderToUse != resourceHolder) {    bindResourceToTransaction(resourceHolderToUse,connectionFactory,resourceFactory.isSynchedLocalTransactionAllowed());  }  return resourceHolderToUse;} catch (IOException ex) {  RabbitUtils.closeChannel(channel);  RabbitUtils.closeConnection(connection);  throw new AmqpIOException(ex);} @TO@ try {  channel=ConsumerChannelRegistry.getConsumerChannel(connectionFactory);  if (channel == null && connection == null) {    connection=resourceFactory.createConnection();    resourceHolderToUse.addConnection(connection);  }  if (channel == null) {    channel=resourceFactory.createChannel(connection);  }  resourceHolderToUse.addChannel(channel,connection);  if (resourceHolderToUse != resourceHolder) {    bindResourceToTransaction(resourceHolderToUse,connectionFactory,resourceFactory.isSynchedLocalTransactionAllowed());  }  return resourceHolderToUse;} catch (IOException ex) {  RabbitUtils.closeChannel(channel);  RabbitUtils.closeConnection(connection);  throw new AmqpIOException(ex);} @AT@ 5200 @LENGTH@ 756
---DEL VariableDeclarationStatement@@boolean isExistingCon=(connection != null); @AT@ 5209 @LENGTH@ 45
------DEL PrimitiveType@@boolean @AT@ 5209 @LENGTH@ 7
------DEL VariableDeclarationFragment@@isExistingCon=(connection != null) @AT@ 5217 @LENGTH@ 36
---------DEL SimpleName@@isExistingCon @AT@ 5217 @LENGTH@ 13
---------DEL ParenthesizedExpression@@(connection != null) @AT@ 5233 @LENGTH@ 20
------------DEL InfixExpression@@connection != null @AT@ 5234 @LENGTH@ 18
---------------DEL SimpleName@@connection @AT@ 5234 @LENGTH@ 10
---------------DEL Operator@@!= @AT@ 5244 @LENGTH@ 2
---------------DEL NullLiteral@@null @AT@ 5248 @LENGTH@ 4
---UPD IfStatement@@if (!isExistingCon) {  connection=resourceFactory.createConnection();  resourceHolderToUse.addConnection(connection);} @TO@ if (channel == null && connection == null) {  connection=resourceFactory.createConnection();  resourceHolderToUse.addConnection(connection);} @AT@ 5258 @LENGTH@ 130
------DEL PrefixExpression@@!isExistingCon @AT@ 5262 @LENGTH@ 14
---------DEL Operator@@! @AT@ 5262 @LENGTH@ 1
---------DEL SimpleName@@isExistingCon @AT@ 5263 @LENGTH@ 13
------INS InfixExpression@@channel == null && connection == null @TO@ IfStatement@@if (!isExistingCon) {  connection=resourceFactory.createConnection();  resourceHolderToUse.addConnection(connection);} @AT@ 5464 @LENGTH@ 37
---------INS InfixExpression@@channel == null @TO@ InfixExpression@@channel == null && connection == null @AT@ 5464 @LENGTH@ 15
------------INS SimpleName@@channel @TO@ InfixExpression@@channel == null @AT@ 5464 @LENGTH@ 7
------------INS Operator@@== @TO@ InfixExpression@@channel == null @AT@ 5471 @LENGTH@ 2
------------INS NullLiteral@@null @TO@ InfixExpression@@channel == null @AT@ 5475 @LENGTH@ 4
---------INS Operator@@&& @TO@ InfixExpression@@channel == null && connection == null @AT@ 5479 @LENGTH@ 2
---------INS InfixExpression@@connection == null @TO@ InfixExpression@@channel == null && connection == null @AT@ 5483 @LENGTH@ 18
------------INS SimpleName@@connection @TO@ InfixExpression@@connection == null @AT@ 5483 @LENGTH@ 10
------------INS Operator@@== @TO@ InfixExpression@@connection == null @AT@ 5493 @LENGTH@ 2
------------INS NullLiteral@@null @TO@ InfixExpression@@connection == null @AT@ 5497 @LENGTH@ 4
---MOV IfStatement@@if (!isExistingCon) {  connection=resourceFactory.createConnection();  resourceHolderToUse.addConnection(connection);} @TO@ TryStatement@@try {  boolean isExistingCon=(connection != null);  if (!isExistingCon) {    connection=resourceFactory.createConnection();    resourceHolderToUse.addConnection(connection);  }  channel=ConsumerChannelRegistry.getConsumerChannel();  if (channel == null) {    channel=resourceFactory.createChannel(connection);  }  resourceHolderToUse.addChannel(channel,connection);  if (resourceHolderToUse != resourceHolder) {    bindResourceToTransaction(resourceHolderToUse,connectionFactory,resourceFactory.isSynchedLocalTransactionAllowed());  }  return resourceHolderToUse;} catch (IOException ex) {  RabbitUtils.closeChannel(channel);  RabbitUtils.closeConnection(connection);  throw new AmqpIOException(ex);} @AT@ 5258 @LENGTH@ 130
---UPD ExpressionStatement@@Assignment:channel=ConsumerChannelRegistry.getConsumerChannel() @TO@ Assignment:channel=ConsumerChannelRegistry.getConsumerChannel(connectionFactory) @AT@ 5392 @LENGTH@ 55
------UPD Assignment@@channel=ConsumerChannelRegistry.getConsumerChannel() @TO@ channel=ConsumerChannelRegistry.getConsumerChannel(connectionFactory) @AT@ 5392 @LENGTH@ 54
---------UPD MethodInvocation@@ConsumerChannelRegistry.getConsumerChannel() @TO@ ConsumerChannelRegistry.getConsumerChannel(connectionFactory) @AT@ 5402 @LENGTH@ 44
------------UPD SimpleName@@MethodName:getConsumerChannel:[] @TO@ MethodName:getConsumerChannel:[connectionFactory] @AT@ 5426 @LENGTH@ 20
---------------INS SimpleName@@connectionFactory @TO@ SimpleName@@MethodName:getConsumerChannel:[] @AT@ 5437 @LENGTH@ 17


UPD VariableDeclarationStatement@@RedisTemplate<String,String> stringTemplateLtc=new StringRedisTemplate(srConnFactory); @TO@ RedisTemplate<String,String> stringTemplateLtc=new StringRedisTemplate(lettuceConnFactory); @AT@ 7824 @LENGTH@ 89
---UPD VariableDeclarationFragment@@stringTemplateLtc=new StringRedisTemplate(srConnFactory) @TO@ stringTemplateLtc=new StringRedisTemplate(lettuceConnFactory) @AT@ 7854 @LENGTH@ 58
------UPD ClassInstanceCreation@@StringRedisTemplate[srConnFactory] @TO@ StringRedisTemplate[lettuceConnFactory] @AT@ 7874 @LENGTH@ 38
---------UPD SimpleName@@srConnFactory @TO@ lettuceConnFactory @AT@ 7898 @LENGTH@ 13


UPD MethodDeclaration@@Map<String,String>, MethodName:getConfiguration, String version, String profile, String pid, InterruptedException, KeeperException, IOException,  @TO@ Map<String,String>, MethodName:getConfiguration, String version, String profile, String pid,  @AT@ 3891 @LENGTH@ 119
---DEL SimpleType@@InterruptedException @AT@ 3959 @LENGTH@ 20
---DEL SimpleType@@KeeperException @AT@ 3981 @LENGTH@ 15
---DEL SimpleType@@IOException @AT@ 3998 @LENGTH@ 11


UPD ExpressionStatement@@MethodInvocation:assumeTrue(getRedisVersion() >= RedisClientBase.parseVersion("2.4.0")) @TO@ MethodInvocation:assumeTrue(redisVersion.compareTo(parseVersion("2.4.0")) >= 0) @AT@ 2384 @LENGTH@ 71
---UPD MethodInvocation@@assumeTrue(getRedisVersion() >= RedisClientBase.parseVersion("2.4.0")) @TO@ assumeTrue(redisVersion.compareTo(parseVersion("2.4.0")) >= 0) @AT@ 2384 @LENGTH@ 70
------UPD SimpleName@@MethodName:assumeTrue:[getRedisVersion() >= RedisClientBase.parseVersion("2.4.0")] @TO@ MethodName:assumeTrue:[redisVersion.compareTo(parseVersion("2.4.0")) >= 0] @AT@ 2384 @LENGTH@ 70
---------UPD InfixExpression@@getRedisVersion() >= RedisClientBase.parseVersion("2.4.0") @TO@ redisVersion.compareTo(parseVersion("2.4.0")) >= 0 @AT@ 2395 @LENGTH@ 58
------------DEL MethodInvocation@@MethodName:getRedisVersion:[] @AT@ 2395 @LENGTH@ 17
------------INS Operator@@>= @TO@ InfixExpression@@getRedisVersion() >= RedisClientBase.parseVersion("2.4.0") @AT@ 2404 @LENGTH@ 2
------------INS NumberLiteral@@0 @TO@ InfixExpression@@getRedisVersion() >= RedisClientBase.parseVersion("2.4.0") @AT@ 2408 @LENGTH@ 1
------------DEL Operator@@>= @AT@ 2412 @LENGTH@ 2
------------UPD MethodInvocation@@RedisClientBase.parseVersion("2.4.0") @TO@ redisVersion.compareTo(parseVersion("2.4.0")) @AT@ 2416 @LENGTH@ 37
---------------INS SimpleName@@MethodName:compareTo:[parseVersion("2.4.0")] @TO@ MethodInvocation@@RedisClientBase.parseVersion("2.4.0") @AT@ 2372 @LENGTH@ 32
------------------INS MethodInvocation@@parseVersion("2.4.0") @TO@ SimpleName@@MethodName:compareTo:[parseVersion("2.4.0")] @AT@ 2382 @LENGTH@ 21
---------------------MOV SimpleName@@MethodName:parseVersion:["2.4.0"] @TO@ MethodInvocation@@parseVersion("2.4.0") @AT@ 2432 @LENGTH@ 21
---------------UPD SimpleName@@Name:RedisClientBase @TO@ Name:redisVersion @AT@ 2416 @LENGTH@ 15


UPD VariableDeclarationStatement@@final Map.Entry entry=entrySet.iterator().next(); @TO@ final Map.Entry<K,V> entry=entrySet.iterator().next(); @AT@ 3905 @LENGTH@ 51
---INS ParameterizedType@@Map.Entry<K,V> @TO@ VariableDeclarationStatement@@final Map.Entry entry=entrySet.iterator().next(); @AT@ 3911 @LENGTH@ 15
------INS SimpleType@@Map.Entry @TO@ ParameterizedType@@Map.Entry<K,V> @AT@ 3911 @LENGTH@ 9
------INS SimpleType@@K @TO@ ParameterizedType@@Map.Entry<K,V> @AT@ 3921 @LENGTH@ 1
------INS SimpleType@@V @TO@ ParameterizedType@@Map.Entry<K,V> @AT@ 3924 @LENGTH@ 1
---DEL SimpleType@@Map.Entry @AT@ 3911 @LENGTH@ 9


UPD MethodDeclaration@@public, void, MethodName:testMulti, Exception,  @TO@ public, void, MethodName:testMultiExec, Exception,  @AT@ 2038 @LENGTH@ 45
---UPD SimpleName@@MethodName:testMulti @TO@ MethodName:testMultiExec @AT@ 2050 @LENGTH@ 9
---INS ExpressionStatement@@SuperMethodInvocation:super.testMultiExec() @TO@ MethodDeclaration@@public, void, MethodName:testMulti, Exception,  @AT@ 2133 @LENGTH@ 22
------INS SuperMethodInvocation@@super.testMultiExec() @TO@ ExpressionStatement@@SuperMethodInvocation:super.testMultiExec() @AT@ 2133 @LENGTH@ 21
---------INS SimpleName@@MethodName:testMultiExec:[] @TO@ SuperMethodInvocation@@super.testMultiExec() @AT@ 2139 @LENGTH@ 13


UPD CatchClause@@catch (Exception e) {} @TO@ catch (Exception e) {  ctx.terminateSession();} @AT@ 2436 @LENGTH@ 83
---INS ExpressionStatement@@MethodInvocation:ctx.terminateSession() @TO@ CatchClause@@catch (Exception e) {} @AT@ 2470 @LENGTH@ 23
------INS MethodInvocation@@ctx.terminateSession() @TO@ ExpressionStatement@@MethodInvocation:ctx.terminateSession() @AT@ 2470 @LENGTH@ 22
---------INS SimpleName@@Name:ctx @TO@ MethodInvocation@@ctx.terminateSession() @AT@ 2470 @LENGTH@ 3
---------INS SimpleName@@MethodName:terminateSession:[] @TO@ MethodInvocation@@ctx.terminateSession() @AT@ 2474 @LENGTH@ 18


UPD MethodDeclaration@@public, void, MethodName:testMulti, Exception,  @TO@ public, void, MethodName:testMultiExec, Exception,  @AT@ 11960 @LENGTH@ 411
---UPD SimpleName@@MethodName:testMulti @TO@ MethodName:testMultiExec @AT@ 11972 @LENGTH@ 9


UPD MethodDeclaration@@public, void, MethodName:testCreatModeExtractionFromMessageHeader,  @TO@ public, void, MethodName:testCreateModeExtractionFromMessageHeader,  @AT@ 1897 @LENGTH@ 603
---UPD SimpleName@@MethodName:testCreatModeExtractionFromMessageHeader @TO@ MethodName:testCreateModeExtractionFromMessageHeader @AT@ 1909 @LENGTH@ 40


UPD TryStatement@@try {  final Comparable s1=(Comparable)this.stringEncoder.encode(o1);  final Comparable s2=(Comparable)this.stringEncoder.encode(o2);  compareCode=s1.compareTo(s2);} catch (final EncoderException ee) {  compareCode=0;} @TO@ try {  @SuppressWarnings("unchecked") final Comparable<Comparable<?>> s1=(Comparable<Comparable<?>>)this.stringEncoder.encode(o1);  final Comparable<?> s2=(Comparable<?>)this.stringEncoder.encode(o2);  compareCode=s1.compareTo(s2);} catch (final EncoderException ee) {  compareCode=0;} @AT@ 2635 @LENGTH@ 290
---UPD VariableDeclarationStatement@@final Comparable s1=(Comparable)this.stringEncoder.encode(o1); @TO@ @SuppressWarnings("unchecked") final Comparable<Comparable<?>> s1=(Comparable<Comparable<?>>)this.stringEncoder.encode(o1); @AT@ 2653 @LENGTH@ 65
------DEL SimpleType@@Comparable @AT@ 2659 @LENGTH@ 10
------UPD VariableDeclarationFragment@@s1=(Comparable)this.stringEncoder.encode(o1) @TO@ s1=(Comparable<Comparable<?>>)this.stringEncoder.encode(o1) @AT@ 2670 @LENGTH@ 47
---------UPD CastExpression@@(Comparable)this.stringEncoder.encode(o1) @TO@ (Comparable<Comparable<?>>)this.stringEncoder.encode(o1) @AT@ 2675 @LENGTH@ 42
------------DEL SimpleType@@Comparable @AT@ 2676 @LENGTH@ 10
------------INS ParameterizedType@@Comparable<Comparable<?>> @TO@ CastExpression@@(Comparable)this.stringEncoder.encode(o1) @AT@ 2996 @LENGTH@ 25
---------------INS SimpleType@@Comparable @TO@ ParameterizedType@@Comparable<Comparable<?>> @AT@ 2996 @LENGTH@ 10
---------------INS ParameterizedType@@Comparable<?> @TO@ ParameterizedType@@Comparable<Comparable<?>> @AT@ 3007 @LENGTH@ 13
------------------INS SimpleType@@Comparable @TO@ ParameterizedType@@Comparable<?> @AT@ 3007 @LENGTH@ 10
------------------INS WildcardType@@? @TO@ ParameterizedType@@Comparable<?> @AT@ 3018 @LENGTH@ 1
------INS ParameterizedType@@Comparable<Comparable<?>> @TO@ VariableDeclarationStatement@@final Comparable s1=(Comparable)this.stringEncoder.encode(o1); @AT@ 2964 @LENGTH@ 25
---------INS SimpleType@@Comparable @TO@ ParameterizedType@@Comparable<Comparable<?>> @AT@ 2964 @LENGTH@ 10
---------INS ParameterizedType@@Comparable<?> @TO@ ParameterizedType@@Comparable<Comparable<?>> @AT@ 2975 @LENGTH@ 13
------------INS SimpleType@@Comparable @TO@ ParameterizedType@@Comparable<?> @AT@ 2975 @LENGTH@ 10
------------INS WildcardType@@? @TO@ ParameterizedType@@Comparable<?> @AT@ 2986 @LENGTH@ 1
---UPD VariableDeclarationStatement@@final Comparable s2=(Comparable)this.stringEncoder.encode(o2); @TO@ final Comparable<?> s2=(Comparable<?>)this.stringEncoder.encode(o2); @AT@ 2731 @LENGTH@ 65
------DEL SimpleType@@Comparable @AT@ 2737 @LENGTH@ 10
------UPD VariableDeclarationFragment@@s2=(Comparable)this.stringEncoder.encode(o2) @TO@ s2=(Comparable<?>)this.stringEncoder.encode(o2) @AT@ 2748 @LENGTH@ 47
---------UPD CastExpression@@(Comparable)this.stringEncoder.encode(o2) @TO@ (Comparable<?>)this.stringEncoder.encode(o2) @AT@ 2753 @LENGTH@ 42
------------DEL SimpleType@@Comparable @AT@ 2754 @LENGTH@ 10
------------INS ParameterizedType@@Comparable<?> @TO@ CastExpression@@(Comparable)this.stringEncoder.encode(o2) @AT@ 3092 @LENGTH@ 13
---------------INS SimpleType@@Comparable @TO@ ParameterizedType@@Comparable<?> @AT@ 3092 @LENGTH@ 10
---------------INS WildcardType@@? @TO@ ParameterizedType@@Comparable<?> @AT@ 3103 @LENGTH@ 1
------INS ParameterizedType@@Comparable<?> @TO@ VariableDeclarationStatement@@final Comparable s2=(Comparable)this.stringEncoder.encode(o2); @AT@ 3072 @LENGTH@ 13
---------INS SimpleType@@Comparable @TO@ ParameterizedType@@Comparable<?> @AT@ 3072 @LENGTH@ 10
---------INS WildcardType@@? @TO@ ParameterizedType@@Comparable<?> @AT@ 3083 @LENGTH@ 1


INS IfStatement@@if (ObjectHelper.isEmpty(name)) {  return null;} @TO@ MethodDeclaration@@public, static, Class<?>, MethodName:loadClass, String name, ClassLoader loader, boolean needToWarn,  @AT@ 28403 @LENGTH@ 68
---INS MethodInvocation@@ObjectHelper.isEmpty(name) @TO@ IfStatement@@if (ObjectHelper.isEmpty(name)) {  return null;} @AT@ 28407 @LENGTH@ 26
------INS SimpleName@@Name:ObjectHelper @TO@ MethodInvocation@@ObjectHelper.isEmpty(name) @AT@ 28407 @LENGTH@ 12
------INS SimpleName@@MethodName:isEmpty:[name] @TO@ MethodInvocation@@ObjectHelper.isEmpty(name) @AT@ 28420 @LENGTH@ 13
---------INS SimpleName@@name @TO@ SimpleName@@MethodName:isEmpty:[name] @AT@ 28428 @LENGTH@ 4
---INS Block@@ThenBody:{  return null;} @TO@ IfStatement@@if (ObjectHelper.isEmpty(name)) {  return null;} @AT@ 28435 @LENGTH@ 36
------INS ReturnStatement@@NullLiteral:null @TO@ Block@@ThenBody:{  return null;} @AT@ 28449 @LENGTH@ 12
---------INS NullLiteral@@null @TO@ ReturnStatement@@NullLiteral:null @AT@ 28456 @LENGTH@ 4


UPD ExpressionStatement@@MethodInvocation:Assert.state(repository != null,"A CRUDRepository is required") @TO@ MethodInvocation:Assert.state(repository != null,"A CrudRepository implementation is required") @AT@ 3707 @LENGTH@ 65
---UPD MethodInvocation@@Assert.state(repository != null,"A CRUDRepository is required") @TO@ Assert.state(repository != null,"A CrudRepository implementation is required") @AT@ 3707 @LENGTH@ 64
------UPD SimpleName@@MethodName:state:[repository != null, "A CRUDRepository is required"] @TO@ MethodName:state:[repository != null, "A CrudRepository implementation is required"] @AT@ 3714 @LENGTH@ 57
---------UPD StringLiteral@@"A CRUDRepository is required" @TO@ "A CrudRepository implementation is required" @AT@ 3740 @LENGTH@ 30


UPD SwitchStatement@@switch (Element.forName(reader.getLocalName())) {case MODULE:{    final int count=reader.getAttributeCount();    String name=null;    String slot=null;    for (int i=0; i < count; i++) {      requireNoNamespaceAttribute(reader,i);      final String value=reader.getAttributeValue(i);      final Attribute attribute=Attribute.forName(reader.getAttributeLocalName(i));switch (attribute) {case NAME:        if (name != null) {          throw unexpectedAttribute(reader,i);        }      name=value;    break;case SLOT:  if (slot != null) {    throw unexpectedAttribute(reader,i);  }slot=value;break;default :throw unexpectedAttribute(reader,i);}}if (name == null) {throw missingRequired(reader,Collections.singleton(NAME));}if (slot == null) {slot="main";}final ModelNode module=new ModelNode();module.get(GlobalModulesDefinition.NAME).set(name);module.get(GlobalModulesDefinition.SLOT).set(slot);globalModules.add(module);requireNoContent(reader);break;}default :{throw unexpectedElement(reader);}} @TO@ switch (Element.forName(reader.getLocalName())) {case MODULE:{    final int count=reader.getAttributeCount();    String name=null;    String slot=null;    for (int i=0; i < count; i++) {      requireNoNamespaceAttribute(reader,i);      final String value=reader.getAttributeValue(i);      final Attribute attribute=Attribute.forName(reader.getAttributeLocalName(i));switch (attribute) {case NAME:        if (name != null) {          throw unexpectedAttribute(reader,i);        }      name=value;    break;case SLOT:  if (slot != null) {    throw unexpectedAttribute(reader,i);  }slot=value;break;default :throw unexpectedAttribute(reader,i);}}if (name == null) {throw missingRequired(reader,Collections.singleton(NAME));}final ModelNode module=new ModelNode();module.get(GlobalModulesDefinition.NAME).set(name);if (slot != null) {module.get(GlobalModulesDefinition.SLOT).set(slot);}globalModules.add(module);requireNoContent(reader);break;}default :{throw unexpectedElement(reader);}} @AT@ 6373 @LENGTH@ 1993
---UPD IfStatement@@if (slot == null) {  slot="main";} @TO@ if (slot != null) {  module.get(GlobalModulesDefinition.SLOT).set(slot);} @AT@ 7830 @LENGTH@ 80
------UPD InfixExpression@@slot == null @TO@ slot != null @AT@ 7834 @LENGTH@ 12
---------UPD Operator@@== @TO@ != @AT@ 7838 @LENGTH@ 2
------UPD Block@@ThenBody:{  slot="main";} @TO@ ThenBody:{  module.get(GlobalModulesDefinition.SLOT).set(slot);} @AT@ 7848 @LENGTH@ 62
---------DEL ExpressionStatement@@Assignment:slot="main" @AT@ 7874 @LENGTH@ 14
------------DEL Assignment@@slot="main" @AT@ 7874 @LENGTH@ 13
---------------DEL SimpleName@@slot @AT@ 7874 @LENGTH@ 4
---------------DEL Operator@@= @AT@ 7878 @LENGTH@ 1
---------------DEL StringLiteral@@"main" @AT@ 7881 @LENGTH@ 6
---------MOV ExpressionStatement@@MethodInvocation:module.get(GlobalModulesDefinition.SLOT).set(slot) @TO@ Block@@ThenBody:{  slot="main";} @AT@ 8065 @LENGTH@ 51
---MOV IfStatement@@if (slot == null) {  slot="main";} @TO@ SwitchStatement@@switch (Element.forName(reader.getLocalName())) {case MODULE:{    final int count=reader.getAttributeCount();    String name=null;    String slot=null;    for (int i=0; i < count; i++) {      requireNoNamespaceAttribute(reader,i);      final String value=reader.getAttributeValue(i);      final Attribute attribute=Attribute.forName(reader.getAttributeLocalName(i));switch (attribute) {case NAME:        if (name != null) {          throw unexpectedAttribute(reader,i);        }      name=value;    break;case SLOT:  if (slot != null) {    throw unexpectedAttribute(reader,i);  }slot=value;break;default :throw unexpectedAttribute(reader,i);}}if (name == null) {throw missingRequired(reader,Collections.singleton(NAME));}if (slot == null) {slot="main";}final ModelNode module=new ModelNode();module.get(GlobalModulesDefinition.NAME).set(name);module.get(GlobalModulesDefinition.SLOT).set(slot);globalModules.add(module);requireNoContent(reader);break;}default :{throw unexpectedElement(reader);}} @AT@ 7830 @LENGTH@ 80


UPD TypeDeclaration@@[@Configuration, public]RestExporterExampleRestConfig, RepositoryRestMvcConfiguration @TO@ [@SuppressWarnings({"rawtypes"}), @Configuration, public]RestExporterExampleRestConfig, RepositoryRestMvcConfiguration @AT@ 811 @LENGTH@ 1232
---INS SingleMemberAnnotation@@@SuppressWarnings({"rawtypes"}) @TO@ TypeDeclaration@@[@Configuration, public]RestExporterExampleRestConfig, RepositoryRestMvcConfiguration @AT@ 813 @LENGTH@ 31


UPD EnhancedForStatement@@for (Object obj : entities) {  if (null == obj) {    resources.add(null);    break;  }  PersistentEntity persistentEntity=repositories.getPersistentEntity(obj.getClass());  if (null == persistentEntity) {    resources.add(new BaseUriAwareResource<Object>(obj).setBaseUri(repoRequest.getBaseUri()));    continue;  }  PersistentEntityResource per=PersistentEntityResource.wrap(persistentEntity,obj,repoRequest.getBaseUri());  per.add(repoRequest.buildEntitySelfLink(obj,conversionService));  resources.add(per);} @TO@ for (Object obj : entities) {  if (null == obj) {    resources.add(null);    break;  }  PersistentEntity persistentEntity=repositories.getPersistentEntity(obj.getClass());  if (null == persistentEntity) {    resources.add(new BaseUriAwareResource<Object>(obj).setBaseUri(repoRequest.getBaseUri()));    continue;  }  BeanWrapper wrapper=BeanWrapper.create(obj,conversionService);  PersistentEntityResource per=PersistentEntityResource.wrap(persistentEntity,obj,repoRequest.getBaseUri());  Link selfLink=entityLinks.linkForSingleResource(persistentEntity.getType(),wrapper.getProperty(persistentEntity.getIdProperty())).withSelfRel();  per.add(selfLink);  resources.add(per);} @AT@ 7746 @LENGTH@ 560
---DEL ExpressionStatement@@MethodInvocation:per.add(repoRequest.buildEntitySelfLink(obj,conversionService)) @AT@ 8214 @LENGTH@ 65
------DEL MethodInvocation@@per.add(repoRequest.buildEntitySelfLink(obj,conversionService)) @AT@ 8214 @LENGTH@ 64
---------DEL SimpleName@@Name:per @AT@ 8214 @LENGTH@ 3
---------DEL SimpleName@@MethodName:add:[repoRequest.buildEntitySelfLink(obj,conversionService)] @AT@ 8218 @LENGTH@ 60
------------DEL MethodInvocation@@repoRequest.buildEntitySelfLink(obj,conversionService) @AT@ 8222 @LENGTH@ 55
---INS VariableDeclarationStatement@@BeanWrapper wrapper=BeanWrapper.create(obj,conversionService); @TO@ EnhancedForStatement@@for (Object obj : entities) {  if (null == obj) {    resources.add(null);    break;  }  PersistentEntity persistentEntity=repositories.getPersistentEntity(obj.getClass());  if (null == persistentEntity) {    resources.add(new BaseUriAwareResource<Object>(obj).setBaseUri(repoRequest.getBaseUri()));    continue;  }  PersistentEntityResource per=PersistentEntityResource.wrap(persistentEntity,obj,repoRequest.getBaseUri());  per.add(repoRequest.buildEntitySelfLink(obj,conversionService));  resources.add(per);} @AT@ 8509 @LENGTH@ 65
------INS SimpleType@@BeanWrapper @TO@ VariableDeclarationStatement@@BeanWrapper wrapper=BeanWrapper.create(obj,conversionService); @AT@ 8509 @LENGTH@ 11
------INS VariableDeclarationFragment@@wrapper=BeanWrapper.create(obj,conversionService) @TO@ VariableDeclarationStatement@@BeanWrapper wrapper=BeanWrapper.create(obj,conversionService); @AT@ 8521 @LENGTH@ 52
---------INS SimpleName@@wrapper @TO@ VariableDeclarationFragment@@wrapper=BeanWrapper.create(obj,conversionService) @AT@ 8521 @LENGTH@ 7
---------INS MethodInvocation@@BeanWrapper.create(obj,conversionService) @TO@ VariableDeclarationFragment@@wrapper=BeanWrapper.create(obj,conversionService) @AT@ 8531 @LENGTH@ 42
------------MOV SimpleName@@Name:repoRequest @TO@ MethodInvocation@@BeanWrapper.create(obj,conversionService) @AT@ 8222 @LENGTH@ 11
------------MOV SimpleName@@MethodName:buildEntitySelfLink:[obj, conversionService] @TO@ MethodInvocation@@BeanWrapper.create(obj,conversionService) @AT@ 8234 @LENGTH@ 43
---INS VariableDeclarationStatement@@Link selfLink=entityLinks.linkForSingleResource(persistentEntity.getType(),wrapper.getProperty(persistentEntity.getIdProperty())).withSelfRel(); @TO@ EnhancedForStatement@@for (Object obj : entities) {  if (null == obj) {    resources.add(null);    break;  }  PersistentEntity persistentEntity=repositories.getPersistentEntity(obj.getClass());  if (null == persistentEntity) {    resources.add(new BaseUriAwareResource<Object>(obj).setBaseUri(repoRequest.getBaseUri()));    continue;  }  PersistentEntityResource per=PersistentEntityResource.wrap(persistentEntity,obj,repoRequest.getBaseUri());  per.add(repoRequest.buildEntitySelfLink(obj,conversionService));  resources.add(per);} @AT@ 8692 @LENGTH@ 231
------INS SimpleType@@Link @TO@ VariableDeclarationStatement@@Link selfLink=entityLinks.linkForSingleResource(persistentEntity.getType(),wrapper.getProperty(persistentEntity.getIdProperty())).withSelfRel(); @AT@ 8692 @LENGTH@ 4
------INS VariableDeclarationFragment@@selfLink=entityLinks.linkForSingleResource(persistentEntity.getType(),wrapper.getProperty(persistentEntity.getIdProperty())).withSelfRel() @TO@ VariableDeclarationStatement@@Link selfLink=entityLinks.linkForSingleResource(persistentEntity.getType(),wrapper.getProperty(persistentEntity.getIdProperty())).withSelfRel(); @AT@ 8697 @LENGTH@ 225
---------INS SimpleName@@selfLink @TO@ VariableDeclarationFragment@@selfLink=entityLinks.linkForSingleResource(persistentEntity.getType(),wrapper.getProperty(persistentEntity.getIdProperty())).withSelfRel() @AT@ 8697 @LENGTH@ 8
---------INS MethodInvocation@@entityLinks.linkForSingleResource(persistentEntity.getType(),wrapper.getProperty(persistentEntity.getIdProperty())).withSelfRel() @TO@ VariableDeclarationFragment@@selfLink=entityLinks.linkForSingleResource(persistentEntity.getType(),wrapper.getProperty(persistentEntity.getIdProperty())).withSelfRel() @AT@ 8708 @LENGTH@ 214
------------INS MethodInvocation@@MethodName:linkForSingleResource:[persistentEntity.getType(), wrapper.getProperty(persistentEntity.getIdProperty())] @TO@ MethodInvocation@@entityLinks.linkForSingleResource(persistentEntity.getType(),wrapper.getProperty(persistentEntity.getIdProperty())).withSelfRel() @AT@ 8708 @LENGTH@ 169
---------------INS MethodInvocation@@persistentEntity.getType() @TO@ MethodInvocation@@MethodName:linkForSingleResource:[persistentEntity.getType(), wrapper.getProperty(persistentEntity.getIdProperty())] @AT@ 8742 @LENGTH@ 26
------------------INS SimpleName@@Name:persistentEntity @TO@ MethodInvocation@@persistentEntity.getType() @AT@ 8742 @LENGTH@ 16
------------------INS SimpleName@@MethodName:getType:[] @TO@ MethodInvocation@@persistentEntity.getType() @AT@ 8759 @LENGTH@ 9
---------------INS MethodInvocation@@wrapper.getProperty(persistentEntity.getIdProperty()) @TO@ MethodInvocation@@MethodName:linkForSingleResource:[persistentEntity.getType(), wrapper.getProperty(persistentEntity.getIdProperty())] @AT@ 8823 @LENGTH@ 53
------------------INS SimpleName@@Name:wrapper @TO@ MethodInvocation@@wrapper.getProperty(persistentEntity.getIdProperty()) @AT@ 8823 @LENGTH@ 7
------------------INS SimpleName@@MethodName:getProperty:[persistentEntity.getIdProperty()] @TO@ MethodInvocation@@wrapper.getProperty(persistentEntity.getIdProperty()) @AT@ 8831 @LENGTH@ 45
---------------------INS MethodInvocation@@persistentEntity.getIdProperty() @TO@ SimpleName@@MethodName:getProperty:[persistentEntity.getIdProperty()] @AT@ 8843 @LENGTH@ 32
------------------------INS SimpleName@@Name:persistentEntity @TO@ MethodInvocation@@persistentEntity.getIdProperty() @AT@ 8843 @LENGTH@ 16
------------------------INS SimpleName@@MethodName:getIdProperty:[] @TO@ MethodInvocation@@persistentEntity.getIdProperty() @AT@ 8860 @LENGTH@ 15
------------INS SimpleName@@Name:entityLinks @TO@ MethodInvocation@@entityLinks.linkForSingleResource(persistentEntity.getType(),wrapper.getProperty(persistentEntity.getIdProperty())).withSelfRel() @AT@ 8708 @LENGTH@ 11
------------INS SimpleName@@MethodName:withSelfRel:[] @TO@ MethodInvocation@@entityLinks.linkForSingleResource(persistentEntity.getType(),wrapper.getProperty(persistentEntity.getIdProperty())).withSelfRel() @AT@ 8909 @LENGTH@ 13
---INS ExpressionStatement@@MethodInvocation:per.add(selfLink) @TO@ EnhancedForStatement@@for (Object obj : entities) {  if (null == obj) {    resources.add(null);    break;  }  PersistentEntity persistentEntity=repositories.getPersistentEntity(obj.getClass());  if (null == persistentEntity) {    resources.add(new BaseUriAwareResource<Object>(obj).setBaseUri(repoRequest.getBaseUri()));    continue;  }  PersistentEntityResource per=PersistentEntityResource.wrap(persistentEntity,obj,repoRequest.getBaseUri());  per.add(repoRequest.buildEntitySelfLink(obj,conversionService));  resources.add(per);} @AT@ 8927 @LENGTH@ 18
------INS MethodInvocation@@per.add(selfLink) @TO@ ExpressionStatement@@MethodInvocation:per.add(selfLink) @AT@ 8927 @LENGTH@ 17
---------INS SimpleName@@Name:per @TO@ MethodInvocation@@per.add(selfLink) @AT@ 8927 @LENGTH@ 3
---------INS SimpleName@@MethodName:add:[selfLink] @TO@ MethodInvocation@@per.add(selfLink) @AT@ 8931 @LENGTH@ 13
------------INS SimpleName@@selfLink @TO@ SimpleName@@MethodName:add:[selfLink] @AT@ 8935 @LENGTH@ 8


UPD IfStatement@@if (driverClassName == null) {  final ServiceLoader<Driver> serviceLoader=module.loadService(Driver.class);  if (serviceLoader != null) {    for (    Driver driver : serviceLoader) {      startDriverServices(target,moduleId,driver,driverName,majorVersion,minorVersion,dataSourceClassName,xaDataSourceClassName);    }  }} else {  try {    final Class<? extends Driver> driverClass=module.getClassLoader().loadClass(driverClassName).asSubclass(Driver.class);    final Constructor<? extends Driver> constructor=driverClass.getConstructor();    final Driver driver=constructor.newInstance();    startDriverServices(target,moduleId,driver,driverName,majorVersion,minorVersion,dataSourceClassName,xaDataSourceClassName);  } catch (  Exception e) {    SUBSYSTEM_DATASOURCES_LOGGER.cannotInstantiateDriverClass(driverClassName,e);    throw new OperationFailedException(new ModelNode().set(MESSAGES.cannotInstantiateDriverClass(driverClassName)));  }} @TO@ if (driverClassName == null) {  final ServiceLoader<Driver> serviceLoader=module.loadService(Driver.class);  if (serviceLoader != null) {    for (    Driver driver : serviceLoader) {      startDriverServices(target,moduleId,driver,driverName,majorVersion,minorVersion,dataSourceClassName,xaDataSourceClassName,verificationHandler);    }  }} else {  try {    final Class<? extends Driver> driverClass=module.getClassLoader().loadClass(driverClassName).asSubclass(Driver.class);    final Constructor<? extends Driver> constructor=driverClass.getConstructor();    final Driver driver=constructor.newInstance();    startDriverServices(target,moduleId,driver,driverName,majorVersion,minorVersion,dataSourceClassName,xaDataSourceClassName,verificationHandler);  } catch (  Exception e) {    SUBSYSTEM_DATASOURCES_LOGGER.cannotInstantiateDriverClass(driverClassName,e);    throw new OperationFailedException(new ModelNode().set(MESSAGES.cannotInstantiateDriverClass(driverClassName)));  }} @AT@ 6434 @LENGTH@ 1187
---UPD Block@@ThenBody:{  final ServiceLoader<Driver> serviceLoader=module.loadService(Driver.class);  if (serviceLoader != null) {    for (    Driver driver : serviceLoader) {      startDriverServices(target,moduleId,driver,driverName,majorVersion,minorVersion,dataSourceClassName,xaDataSourceClassName);    }  }} @TO@ ThenBody:{  final ServiceLoader<Driver> serviceLoader=module.loadService(Driver.class);  if (serviceLoader != null) {    for (    Driver driver : serviceLoader) {      startDriverServices(target,moduleId,driver,driverName,majorVersion,minorVersion,dataSourceClassName,xaDataSourceClassName,verificationHandler);    }  }} @AT@ 6463 @LENGTH@ 379
------UPD IfStatement@@if (serviceLoader != null) {  for (  Driver driver : serviceLoader) {    startDriverServices(target,moduleId,driver,driverName,majorVersion,minorVersion,dataSourceClassName,xaDataSourceClassName);  }} @TO@ if (serviceLoader != null) {  for (  Driver driver : serviceLoader) {    startDriverServices(target,moduleId,driver,driverName,majorVersion,minorVersion,dataSourceClassName,xaDataSourceClassName,verificationHandler);  }} @AT@ 6567 @LENGTH@ 265
---------UPD Block@@ThenBody:{  for (  Driver driver : serviceLoader) {    startDriverServices(target,moduleId,driver,driverName,majorVersion,minorVersion,dataSourceClassName,xaDataSourceClassName);  }} @TO@ ThenBody:{  for (  Driver driver : serviceLoader) {    startDriverServices(target,moduleId,driver,driverName,majorVersion,minorVersion,dataSourceClassName,xaDataSourceClassName,verificationHandler);  }} @AT@ 6594 @LENGTH@ 238
------------UPD EnhancedForStatement@@for (Driver driver : serviceLoader) {  startDriverServices(target,moduleId,driver,driverName,majorVersion,minorVersion,dataSourceClassName,xaDataSourceClassName);} @TO@ for (Driver driver : serviceLoader) {  startDriverServices(target,moduleId,driver,driverName,majorVersion,minorVersion,dataSourceClassName,xaDataSourceClassName,verificationHandler);} @AT@ 6612 @LENGTH@ 206
---------------UPD ExpressionStatement@@MethodInvocation:startDriverServices(target,moduleId,driver,driverName,majorVersion,minorVersion,dataSourceClassName,xaDataSourceClassName) @TO@ MethodInvocation:startDriverServices(target,moduleId,driver,driverName,majorVersion,minorVersion,dataSourceClassName,xaDataSourceClassName,verificationHandler) @AT@ 6670 @LENGTH@ 130
------------------UPD MethodInvocation@@startDriverServices(target,moduleId,driver,driverName,majorVersion,minorVersion,dataSourceClassName,xaDataSourceClassName) @TO@ startDriverServices(target,moduleId,driver,driverName,majorVersion,minorVersion,dataSourceClassName,xaDataSourceClassName,verificationHandler) @AT@ 6670 @LENGTH@ 129
---------------------UPD SimpleName@@MethodName:startDriverServices:[target, moduleId, driver, driverName, majorVersion, minorVersion, dataSourceClassName, xaDataSourceClassName] @TO@ MethodName:startDriverServices:[target, moduleId, driver, driverName, majorVersion, minorVersion, dataSourceClassName, xaDataSourceClassName, verificationHandler] @AT@ 6670 @LENGTH@ 129
------------------------INS SimpleName@@verificationHandler @TO@ SimpleName@@MethodName:startDriverServices:[target, moduleId, driver, driverName, majorVersion, minorVersion, dataSourceClassName, xaDataSourceClassName] @AT@ 6845 @LENGTH@ 19
---UPD Block@@ElseBody:{  try {    final Class<? extends Driver> driverClass=module.getClassLoader().loadClass(driverClassName).asSubclass(Driver.class);    final Constructor<? extends Driver> constructor=driverClass.getConstructor();    final Driver driver=constructor.newInstance();    startDriverServices(target,moduleId,driver,driverName,majorVersion,minorVersion,dataSourceClassName,xaDataSourceClassName);  } catch (  Exception e) {    SUBSYSTEM_DATASOURCES_LOGGER.cannotInstantiateDriverClass(driverClassName,e);    throw new OperationFailedException(new ModelNode().set(MESSAGES.cannotInstantiateDriverClass(driverClassName)));  }} @TO@ ElseBody:{  try {    final Class<? extends Driver> driverClass=module.getClassLoader().loadClass(driverClassName).asSubclass(Driver.class);    final Constructor<? extends Driver> constructor=driverClass.getConstructor();    final Driver driver=constructor.newInstance();    startDriverServices(target,moduleId,driver,driverName,majorVersion,minorVersion,dataSourceClassName,xaDataSourceClassName,verificationHandler);  } catch (  Exception e) {    SUBSYSTEM_DATASOURCES_LOGGER.cannotInstantiateDriverClass(driverClassName,e);    throw new OperationFailedException(new ModelNode().set(MESSAGES.cannotInstantiateDriverClass(driverClassName)));  }} @AT@ 6848 @LENGTH@ 773
------UPD TryStatement@@try {  final Class<? extends Driver> driverClass=module.getClassLoader().loadClass(driverClassName).asSubclass(Driver.class);  final Constructor<? extends Driver> constructor=driverClass.getConstructor();  final Driver driver=constructor.newInstance();  startDriverServices(target,moduleId,driver,driverName,majorVersion,minorVersion,dataSourceClassName,xaDataSourceClassName);} catch (Exception e) {  SUBSYSTEM_DATASOURCES_LOGGER.cannotInstantiateDriverClass(driverClassName,e);  throw new OperationFailedException(new ModelNode().set(MESSAGES.cannotInstantiateDriverClass(driverClassName)));} @TO@ try {  final Class<? extends Driver> driverClass=module.getClassLoader().loadClass(driverClassName).asSubclass(Driver.class);  final Constructor<? extends Driver> constructor=driverClass.getConstructor();  final Driver driver=constructor.newInstance();  startDriverServices(target,moduleId,driver,driverName,majorVersion,minorVersion,dataSourceClassName,xaDataSourceClassName,verificationHandler);} catch (Exception e) {  SUBSYSTEM_DATASOURCES_LOGGER.cannotInstantiateDriverClass(driverClassName,e);  throw new OperationFailedException(new ModelNode().set(MESSAGES.cannotInstantiateDriverClass(driverClassName)));} @AT@ 6862 @LENGTH@ 749
---------UPD ExpressionStatement@@MethodInvocation:startDriverServices(target,moduleId,driver,driverName,majorVersion,minorVersion,dataSourceClassName,xaDataSourceClassName) @TO@ MethodInvocation:startDriverServices(target,moduleId,driver,driverName,majorVersion,minorVersion,dataSourceClassName,xaDataSourceClassName,verificationHandler) @AT@ 7207 @LENGTH@ 130
------------UPD MethodInvocation@@startDriverServices(target,moduleId,driver,driverName,majorVersion,minorVersion,dataSourceClassName,xaDataSourceClassName) @TO@ startDriverServices(target,moduleId,driver,driverName,majorVersion,minorVersion,dataSourceClassName,xaDataSourceClassName,verificationHandler) @AT@ 7207 @LENGTH@ 129
---------------UPD SimpleName@@MethodName:startDriverServices:[target, moduleId, driver, driverName, majorVersion, minorVersion, dataSourceClassName, xaDataSourceClassName] @TO@ MethodName:startDriverServices:[target, moduleId, driver, driverName, majorVersion, minorVersion, dataSourceClassName, xaDataSourceClassName, verificationHandler] @AT@ 7207 @LENGTH@ 129
------------------INS SimpleName@@verificationHandler @TO@ SimpleName@@MethodName:startDriverServices:[target, moduleId, driver, driverName, majorVersion, minorVersion, dataSourceClassName, xaDataSourceClassName] @AT@ 7403 @LENGTH@ 19


UPD IfStatement@@if (diff.equals("n")) {  System.out.println("Reporting on differences in the model when the management versions are different");  compareDifferentVersions=false;} else if (diff.equals("y")) {  System.out.println("Not reporting on differences in the model when the management versions are different");  compareDifferentVersions=true;} else {  throw new IllegalArgumentException("Please enter 'y' or 'n'");} @TO@ if (diff.equals("n")) {  System.out.println("Not reporting on differences in the model when the management versions are different");  compareDifferentVersions=false;} else if (diff.equals("y")) {  System.out.println("Reporting on differences in the model when the management versions are different");  compareDifferentVersions=true;} else {  throw new IllegalArgumentException("Please enter 'y' or 'n'");} @AT@ 7249 @LENGTH@ 491
---UPD Block@@ThenBody:{  System.out.println("Reporting on differences in the model when the management versions are different");  compareDifferentVersions=false;} @TO@ ThenBody:{  System.out.println("Reporting on differences in the model when the management versions are different");  compareDifferentVersions=true;} @AT@ 7271 @LENGTH@ 173
---UPD Block@@ElseBody:if (diff.equals("y")) {  System.out.println("Not reporting on differences in the model when the management versions are different");  compareDifferentVersions=true;} else {  throw new IllegalArgumentException("Please enter 'y' or 'n'");} @TO@ ElseBody:if (diff.equals("y")) {  System.out.println("Reporting on differences in the model when the management versions are different");  compareDifferentVersions=true;} else {  throw new IllegalArgumentException("Please enter 'y' or 'n'");} @AT@ 7450 @LENGTH@ 290
------UPD IfStatement@@if (diff.equals("y")) {  System.out.println("Not reporting on differences in the model when the management versions are different");  compareDifferentVersions=true;} else {  throw new IllegalArgumentException("Please enter 'y' or 'n'");} @TO@ if (diff.equals("y")) {  System.out.println("Reporting on differences in the model when the management versions are different");  compareDifferentVersions=true;} else {  throw new IllegalArgumentException("Please enter 'y' or 'n'");} @AT@ 7450 @LENGTH@ 290
---------MOV Block@@ThenBody:{  System.out.println("Reporting on differences in the model when the management versions are different");  compareDifferentVersions=false;} @TO@ IfStatement@@if (diff.equals("y")) {  System.out.println("Not reporting on differences in the model when the management versions are different");  compareDifferentVersions=true;} else {  throw new IllegalArgumentException("Please enter 'y' or 'n'");} @AT@ 7271 @LENGTH@ 173
------------MOV ExpressionStatement@@Assignment:compareDifferentVersions=true @TO@ Block@@ThenBody:{  System.out.println("Reporting on differences in the model when the management versions are different");  compareDifferentVersions=false;} @AT@ 7606 @LENGTH@ 32
---------UPD Block@@ThenBody:{  System.out.println("Not reporting on differences in the model when the management versions are different");  compareDifferentVersions=true;} @TO@ ThenBody:{  System.out.println("Not reporting on differences in the model when the management versions are different");  compareDifferentVersions=false;} @AT@ 7472 @LENGTH@ 176
---MOV Block@@ThenBody:{  System.out.println("Not reporting on differences in the model when the management versions are different");  compareDifferentVersions=true;} @TO@ IfStatement@@if (diff.equals("n")) {  System.out.println("Reporting on differences in the model when the management versions are different");  compareDifferentVersions=false;} else if (diff.equals("y")) {  System.out.println("Not reporting on differences in the model when the management versions are different");  compareDifferentVersions=true;} else {  throw new IllegalArgumentException("Please enter 'y' or 'n'");} @AT@ 7472 @LENGTH@ 176
------MOV ExpressionStatement@@Assignment:compareDifferentVersions=false @TO@ Block@@ThenBody:{  System.out.println("Not reporting on differences in the model when the management versions are different");  compareDifferentVersions=true;} @AT@ 7401 @LENGTH@ 33


UPD MethodDeclaration@@protected, ResourceTransformationContext, MethodName:getContext,  @TO@ protected, TransformationContext, MethodName:getContext,  @AT@ 4334 @LENGTH@ 136
---UPD SimpleType@@ResourceTransformationContext @TO@ TransformationContext @AT@ 4344 @LENGTH@ 29
---UPD ReturnStatement@@CastExpression:(ResourceTransformationContext)super.getContext() @TO@ SuperMethodInvocation:super.getContext() @AT@ 4401 @LENGTH@ 59
------INS SuperMethodInvocation@@super.getContext() @TO@ ReturnStatement@@CastExpression:(ResourceTransformationContext)super.getContext() @AT@ 4400 @LENGTH@ 18
---------MOV SimpleName@@MethodName:getContext:[] @TO@ SuperMethodInvocation@@super.getContext() @AT@ 4447 @LENGTH@ 10
------DEL CastExpression@@(ResourceTransformationContext)super.getContext() @AT@ 4408 @LENGTH@ 51
---------DEL SimpleType@@ResourceTransformationContext @AT@ 4409 @LENGTH@ 29
---------DEL SuperMethodInvocation@@super.getContext() @AT@ 4441 @LENGTH@ 18


UPD IfStatement@@if (service.isRegex()) {  if (service.getPattern().matcher(deploymentName).matches()) {    matched.add(service);  }} else if (service.getDeployment().equals(deploymentName)) {  matched.add(service);} @TO@ if (service.isWildcard()) {  if (service.getPattern().matcher(deploymentName).matches()) {    matched.add(service);  }} else if (service.getDeployment().equals(deploymentName)) {  matched.add(service);} @AT@ 2790 @LENGTH@ 287
---UPD MethodInvocation@@service.isRegex() @TO@ service.isWildcard() @AT@ 2794 @LENGTH@ 17
------UPD SimpleName@@MethodName:isRegex:[] @TO@ MethodName:isWildcard:[] @AT@ 2802 @LENGTH@ 9


UPD MethodDeclaration@@private, void, MethodName:cleanStartServers, final ModelNode servers, final ModelNode domainModel,  @TO@ private, void, MethodName:cleanStartServers, final ModelNode servers, final ModelNode domainModel, OperationContext context, OperationFailedException,  @AT@ 5012 @LENGTH@ 463
---UPD EnhancedForStatement@@for (final String serverName : servers.keys()) {  if (servers.get(serverName,AUTO_START).asBoolean(true)) {    try {      serverInventory.startServer(serverName,domainModel);    } catch (    Exception e) {      ROOT_LOGGER.failedToStartServer(e,serverName);    }  }} @TO@ for (final Property serverProp : servers.asPropertyList()) {  String serverName=serverProp.getName();  if (ServerConfigResourceDefinition.AUTO_START.resolveModelAttribute(context,serverProp.getValue()).asBoolean(true)) {    try {      serverInventory.startServer(serverName,domainModel);    } catch (    Exception e) {      ROOT_LOGGER.failedToStartServer(e,serverName);    }  }} @AT@ 5106 @LENGTH@ 363
------UPD SingleVariableDeclaration@@final String serverName @TO@ final Property serverProp @AT@ 5110 @LENGTH@ 23
---------UPD SimpleType@@String @TO@ Property @AT@ 5116 @LENGTH@ 6
---------UPD SimpleName@@serverName @TO@ serverProp @AT@ 5123 @LENGTH@ 10
------UPD MethodInvocation@@servers.keys() @TO@ servers.asPropertyList() @AT@ 5136 @LENGTH@ 14
---------UPD SimpleName@@MethodName:keys:[] @TO@ MethodName:asPropertyList:[] @AT@ 5144 @LENGTH@ 6
------UPD IfStatement@@if (servers.get(serverName,AUTO_START).asBoolean(true)) {  try {    serverInventory.startServer(serverName,domainModel);  } catch (  Exception e) {    ROOT_LOGGER.failedToStartServer(e,serverName);  }} @TO@ if (ServerConfigResourceDefinition.AUTO_START.resolveModelAttribute(context,serverProp.getValue()).asBoolean(true)) {  try {    serverInventory.startServer(serverName,domainModel);  } catch (  Exception e) {    ROOT_LOGGER.failedToStartServer(e,serverName);  }} @AT@ 5166 @LENGTH@ 293
---------UPD MethodInvocation@@servers.get(serverName,AUTO_START).asBoolean(true) @TO@ ServerConfigResourceDefinition.AUTO_START.resolveModelAttribute(context,serverProp.getValue()).asBoolean(true) @AT@ 5169 @LENGTH@ 51
------------UPD MethodInvocation@@MethodName:get:[serverName, AUTO_START] @TO@ serverProp.getValue() @AT@ 5169 @LENGTH@ 35
------------UPD SimpleName@@Name:servers @TO@ context @AT@ 5169 @LENGTH@ 7
------------INS MethodInvocation@@MethodName:resolveModelAttribute:[context, serverProp.getValue()] @TO@ MethodInvocation@@servers.get(serverName,AUTO_START).asBoolean(true) @AT@ 5372 @LENGTH@ 95
---------------MOV MethodInvocation@@MethodName:get:[serverName, AUTO_START] @TO@ MethodInvocation@@MethodName:resolveModelAttribute:[context, serverProp.getValue()] @AT@ 5169 @LENGTH@ 35
------------------UPD SimpleName@@serverName @TO@ Name:serverProp @AT@ 5181 @LENGTH@ 10
------------------UPD SimpleName@@AUTO_START @TO@ MethodName:getValue:[] @AT@ 5193 @LENGTH@ 10
---------------MOV SimpleName@@Name:servers @TO@ MethodInvocation@@MethodName:resolveModelAttribute:[context, serverProp.getValue()] @AT@ 5169 @LENGTH@ 7
------------INS QualifiedName@@Name:ServerConfigResourceDefinition.AUTO_START @TO@ MethodInvocation@@servers.get(serverName,AUTO_START).asBoolean(true) @AT@ 5372 @LENGTH@ 41
------INS VariableDeclarationStatement@@String serverName=serverProp.getName(); @TO@ EnhancedForStatement@@for (final String serverName : servers.keys()) {  if (servers.get(serverName,AUTO_START).asBoolean(true)) {    try {      serverInventory.startServer(serverName,domainModel);    } catch (    Exception e) {      ROOT_LOGGER.failedToStartServer(e,serverName);    }  }} @AT@ 5314 @LENGTH@ 41
---------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String serverName=serverProp.getName(); @AT@ 5314 @LENGTH@ 6
---------INS VariableDeclarationFragment@@serverName=serverProp.getName() @TO@ VariableDeclarationStatement@@String serverName=serverProp.getName(); @AT@ 5321 @LENGTH@ 33
------------INS SimpleName@@serverName @TO@ VariableDeclarationFragment@@serverName=serverProp.getName() @AT@ 5321 @LENGTH@ 10
------------INS MethodInvocation@@serverProp.getName() @TO@ VariableDeclarationFragment@@serverName=serverProp.getName() @AT@ 5334 @LENGTH@ 20
---------------INS SimpleName@@Name:serverProp @TO@ MethodInvocation@@serverProp.getName() @AT@ 5334 @LENGTH@ 10
---------------INS SimpleName@@MethodName:getName:[] @TO@ MethodInvocation@@serverProp.getName() @AT@ 5345 @LENGTH@ 9
---INS SingleVariableDeclaration@@OperationContext context @TO@ MethodDeclaration@@private, void, MethodName:cleanStartServers, final ModelNode servers, final ModelNode domainModel,  @AT@ 5174 @LENGTH@ 24
------INS SimpleType@@OperationContext @TO@ SingleVariableDeclaration@@OperationContext context @AT@ 5174 @LENGTH@ 16
------INS SimpleName@@context @TO@ SingleVariableDeclaration@@OperationContext context @AT@ 5191 @LENGTH@ 7
---INS SimpleType@@OperationFailedException @TO@ MethodDeclaration@@private, void, MethodName:cleanStartServers, final ModelNode servers, final ModelNode domainModel,  @AT@ 5207 @LENGTH@ 24


DEL ThrowStatement@@ClassInstanceCreation:new NotConnectedException(providerId) @AT@ 4392 @LENGTH@ 44
---DEL ClassInstanceCreation@@NotConnectedException[providerId] @AT@ 4398 @LENGTH@ 37
------DEL New@@new @AT@ 4398 @LENGTH@ 3
------DEL SimpleType@@NotConnectedException @AT@ 4402 @LENGTH@ 21
------DEL SimpleName@@providerId @AT@ 4424 @LENGTH@ 10


DEL FieldDeclaration@@private, final, List<Synchronization>, [synchronizations] @AT@ 1124 @LENGTH@ 53
---DEL Modifier@@private @AT@ 1124 @LENGTH@ 7
---DEL Modifier@@final @AT@ 1132 @LENGTH@ 5
---DEL ParameterizedType@@List<Synchronization> @AT@ 1138 @LENGTH@ 21
------DEL SimpleType@@List @AT@ 1138 @LENGTH@ 4
------DEL SimpleType@@Synchronization @AT@ 1143 @LENGTH@ 15
---DEL VariableDeclarationFragment@@synchronizations @AT@ 1160 @LENGTH@ 16
------DEL SimpleName@@synchronizations @AT@ 1160 @LENGTH@ 16


INS ExpressionStatement@@MethodInvocation:Thread.sleep(500) @TO@ MethodDeclaration@@public, void, MethodName:testWatch, Exception,  @AT@ 5441 @LENGTH@ 18
---INS MethodInvocation@@Thread.sleep(500) @TO@ ExpressionStatement@@MethodInvocation:Thread.sleep(500) @AT@ 5441 @LENGTH@ 17
------INS SimpleName@@Name:Thread @TO@ MethodInvocation@@Thread.sleep(500) @AT@ 5441 @LENGTH@ 6
------INS SimpleName@@MethodName:sleep:[500] @TO@ MethodInvocation@@Thread.sleep(500) @AT@ 5448 @LENGTH@ 10
---------INS NumberLiteral@@500 @TO@ SimpleName@@MethodName:sleep:[500] @AT@ 5454 @LENGTH@ 3


INS MethodDeclaration@@public, void, MethodName:testFindSetterMethodsOrderedByParameterType, Exception,  @TO@ TypeDeclaration@@[public]IntrospectionSupportTest, ContextTestSupport @AT@ 15153 @LENGTH@ 444
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testFindSetterMethodsOrderedByParameterType, Exception,  @AT@ 15153 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testFindSetterMethodsOrderedByParameterType, Exception,  @AT@ 15160 @LENGTH@ 4
---INS SimpleName@@MethodName:testFindSetterMethodsOrderedByParameterType @TO@ MethodDeclaration@@public, void, MethodName:testFindSetterMethodsOrderedByParameterType, Exception,  @AT@ 15165 @LENGTH@ 43
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:testFindSetterMethodsOrderedByParameterType, Exception,  @AT@ 15218 @LENGTH@ 9
---INS VariableDeclarationStatement@@List<Method> setters=IntrospectionSupport.findSetterMethodsOrderedByParameterType(MyOverloadedBean.class,"bean",false); @TO@ MethodDeclaration@@public, void, MethodName:testFindSetterMethodsOrderedByParameterType, Exception,  @AT@ 15238 @LENGTH@ 123
------INS ParameterizedType@@List<Method> @TO@ VariableDeclarationStatement@@List<Method> setters=IntrospectionSupport.findSetterMethodsOrderedByParameterType(MyOverloadedBean.class,"bean",false); @AT@ 15238 @LENGTH@ 12
---------INS SimpleType@@List @TO@ ParameterizedType@@List<Method> @AT@ 15238 @LENGTH@ 4
---------INS SimpleType@@Method @TO@ ParameterizedType@@List<Method> @AT@ 15243 @LENGTH@ 6
------INS VariableDeclarationFragment@@setters=IntrospectionSupport.findSetterMethodsOrderedByParameterType(MyOverloadedBean.class,"bean",false) @TO@ VariableDeclarationStatement@@List<Method> setters=IntrospectionSupport.findSetterMethodsOrderedByParameterType(MyOverloadedBean.class,"bean",false); @AT@ 15251 @LENGTH@ 109
---------INS SimpleName@@setters @TO@ VariableDeclarationFragment@@setters=IntrospectionSupport.findSetterMethodsOrderedByParameterType(MyOverloadedBean.class,"bean",false) @AT@ 15251 @LENGTH@ 7
---------INS MethodInvocation@@IntrospectionSupport.findSetterMethodsOrderedByParameterType(MyOverloadedBean.class,"bean",false) @TO@ VariableDeclarationFragment@@setters=IntrospectionSupport.findSetterMethodsOrderedByParameterType(MyOverloadedBean.class,"bean",false) @AT@ 15261 @LENGTH@ 99
------------INS SimpleName@@Name:IntrospectionSupport @TO@ MethodInvocation@@IntrospectionSupport.findSetterMethodsOrderedByParameterType(MyOverloadedBean.class,"bean",false) @AT@ 15261 @LENGTH@ 20
------------INS SimpleName@@MethodName:findSetterMethodsOrderedByParameterType:[MyOverloadedBean.class, "bean", false] @TO@ MethodInvocation@@IntrospectionSupport.findSetterMethodsOrderedByParameterType(MyOverloadedBean.class,"bean",false) @AT@ 15282 @LENGTH@ 78
---------------INS TypeLiteral@@MyOverloadedBean.class @TO@ SimpleName@@MethodName:findSetterMethodsOrderedByParameterType:[MyOverloadedBean.class, "bean", false] @AT@ 15322 @LENGTH@ 22
---------------INS StringLiteral@@"bean" @TO@ SimpleName@@MethodName:findSetterMethodsOrderedByParameterType:[MyOverloadedBean.class, "bean", false] @AT@ 15346 @LENGTH@ 6
---------------INS BooleanLiteral@@false @TO@ SimpleName@@MethodName:findSetterMethodsOrderedByParameterType:[MyOverloadedBean.class, "bean", false] @AT@ 15354 @LENGTH@ 5
---INS ExpressionStatement@@MethodInvocation:assertNotNull(setters) @TO@ MethodDeclaration@@public, void, MethodName:testFindSetterMethodsOrderedByParameterType, Exception,  @AT@ 15371 @LENGTH@ 23
------INS MethodInvocation@@assertNotNull(setters) @TO@ ExpressionStatement@@MethodInvocation:assertNotNull(setters) @AT@ 15371 @LENGTH@ 22
---------INS SimpleName@@MethodName:assertNotNull:[setters] @TO@ MethodInvocation@@assertNotNull(setters) @AT@ 15371 @LENGTH@ 22
------------INS SimpleName@@setters @TO@ SimpleName@@MethodName:assertNotNull:[setters] @AT@ 15385 @LENGTH@ 7
---INS ExpressionStatement@@MethodInvocation:assertEquals(2,setters.size()) @TO@ MethodDeclaration@@public, void, MethodName:testFindSetterMethodsOrderedByParameterType, Exception,  @AT@ 15403 @LENGTH@ 32
------INS MethodInvocation@@assertEquals(2,setters.size()) @TO@ ExpressionStatement@@MethodInvocation:assertEquals(2,setters.size()) @AT@ 15403 @LENGTH@ 31
---------INS SimpleName@@MethodName:assertEquals:[2, setters.size()] @TO@ MethodInvocation@@assertEquals(2,setters.size()) @AT@ 15403 @LENGTH@ 31
------------INS NumberLiteral@@2 @TO@ SimpleName@@MethodName:assertEquals:[2, setters.size()] @AT@ 15416 @LENGTH@ 1
------------INS MethodInvocation@@setters.size() @TO@ SimpleName@@MethodName:assertEquals:[2, setters.size()] @AT@ 15419 @LENGTH@ 14
---------------INS SimpleName@@Name:setters @TO@ MethodInvocation@@setters.size() @AT@ 15419 @LENGTH@ 7
---------------INS SimpleName@@MethodName:size:[] @TO@ MethodInvocation@@setters.size() @AT@ 15427 @LENGTH@ 6
---INS ExpressionStatement@@MethodInvocation:assertEquals(ExampleBean.class,setters.get(0).getParameterTypes()[0]) @TO@ MethodDeclaration@@public, void, MethodName:testFindSetterMethodsOrderedByParameterType, Exception,  @AT@ 15445 @LENGTH@ 71
------INS MethodInvocation@@assertEquals(ExampleBean.class,setters.get(0).getParameterTypes()[0]) @TO@ ExpressionStatement@@MethodInvocation:assertEquals(ExampleBean.class,setters.get(0).getParameterTypes()[0]) @AT@ 15445 @LENGTH@ 70
---------INS SimpleName@@MethodName:assertEquals:[ExampleBean.class, setters.get(0).getParameterTypes()[0]] @TO@ MethodInvocation@@assertEquals(ExampleBean.class,setters.get(0).getParameterTypes()[0]) @AT@ 15445 @LENGTH@ 70
------------INS TypeLiteral@@ExampleBean.class @TO@ SimpleName@@MethodName:assertEquals:[ExampleBean.class, setters.get(0).getParameterTypes()[0]] @AT@ 15458 @LENGTH@ 17
------------INS ArrayAccess@@setters.get(0).getParameterTypes()[0] @TO@ SimpleName@@MethodName:assertEquals:[ExampleBean.class, setters.get(0).getParameterTypes()[0]] @AT@ 15477 @LENGTH@ 37
---------------INS MethodInvocation@@setters.get(0).getParameterTypes() @TO@ ArrayAccess@@setters.get(0).getParameterTypes()[0] @AT@ 15477 @LENGTH@ 34
------------------INS MethodInvocation@@MethodName:get:[0] @TO@ MethodInvocation@@setters.get(0).getParameterTypes() @AT@ 15477 @LENGTH@ 14
---------------------INS NumberLiteral@@0 @TO@ MethodInvocation@@MethodName:get:[0] @AT@ 15489 @LENGTH@ 1
------------------INS SimpleName@@Name:setters @TO@ MethodInvocation@@setters.get(0).getParameterTypes() @AT@ 15477 @LENGTH@ 7
------------------INS SimpleName@@MethodName:getParameterTypes:[] @TO@ MethodInvocation@@setters.get(0).getParameterTypes() @AT@ 15492 @LENGTH@ 19
---------------INS NumberLiteral@@0 @TO@ ArrayAccess@@setters.get(0).getParameterTypes()[0] @AT@ 15512 @LENGTH@ 1
---INS ExpressionStatement@@MethodInvocation:assertEquals(String.class,setters.get(1).getParameterTypes()[0]) @TO@ MethodDeclaration@@public, void, MethodName:testFindSetterMethodsOrderedByParameterType, Exception,  @AT@ 15525 @LENGTH@ 66
------INS MethodInvocation@@assertEquals(String.class,setters.get(1).getParameterTypes()[0]) @TO@ ExpressionStatement@@MethodInvocation:assertEquals(String.class,setters.get(1).getParameterTypes()[0]) @AT@ 15525 @LENGTH@ 65
---------INS SimpleName@@MethodName:assertEquals:[String.class, setters.get(1).getParameterTypes()[0]] @TO@ MethodInvocation@@assertEquals(String.class,setters.get(1).getParameterTypes()[0]) @AT@ 15525 @LENGTH@ 65
------------INS TypeLiteral@@String.class @TO@ SimpleName@@MethodName:assertEquals:[String.class, setters.get(1).getParameterTypes()[0]] @AT@ 15538 @LENGTH@ 12
------------INS ArrayAccess@@setters.get(1).getParameterTypes()[0] @TO@ SimpleName@@MethodName:assertEquals:[String.class, setters.get(1).getParameterTypes()[0]] @AT@ 15552 @LENGTH@ 37
---------------INS MethodInvocation@@setters.get(1).getParameterTypes() @TO@ ArrayAccess@@setters.get(1).getParameterTypes()[0] @AT@ 15552 @LENGTH@ 34
------------------INS MethodInvocation@@MethodName:get:[1] @TO@ MethodInvocation@@setters.get(1).getParameterTypes() @AT@ 15552 @LENGTH@ 14
---------------------INS NumberLiteral@@1 @TO@ MethodInvocation@@MethodName:get:[1] @AT@ 15564 @LENGTH@ 1
------------------INS SimpleName@@Name:setters @TO@ MethodInvocation@@setters.get(1).getParameterTypes() @AT@ 15552 @LENGTH@ 7
------------------INS SimpleName@@MethodName:getParameterTypes:[] @TO@ MethodInvocation@@setters.get(1).getParameterTypes() @AT@ 15567 @LENGTH@ 19
---------------INS NumberLiteral@@0 @TO@ ArrayAccess@@setters.get(1).getParameterTypes()[0] @AT@ 15587 @LENGTH@ 1


UPD IfStatement@@if (answer == null && delegate != null) {  answer=delegate.parseProperty(key,value,properties);} @TO@ if (delegate != null) {  String delegateAnswer=delegate.parseProperty(key,answer != null ? answer : value,properties);  if (delegateAnswer != null) {    answer=delegateAnswer;  }} @AT@ 5490 @LENGTH@ 193
---DEL InfixExpression@@answer == null && delegate != null @AT@ 5494 @LENGTH@ 34
------DEL InfixExpression@@answer == null @AT@ 5494 @LENGTH@ 14
------DEL Operator@@&& @AT@ 5508 @LENGTH@ 2
------DEL InfixExpression@@delegate != null @AT@ 5512 @LENGTH@ 16
---UPD Block@@ThenBody:{  answer=delegate.parseProperty(key,value,properties);} @TO@ ThenBody:{  answer=delegateAnswer;} @AT@ 5530 @LENGTH@ 153
---INS InfixExpression@@delegate != null @TO@ IfStatement@@if (answer == null && delegate != null) {  answer=delegate.parseProperty(key,value,properties);} @AT@ 5625 @LENGTH@ 16
------INS SimpleName@@delegate @TO@ InfixExpression@@delegate != null @AT@ 5625 @LENGTH@ 8
------INS Operator@@!= @TO@ InfixExpression@@delegate != null @AT@ 5633 @LENGTH@ 2
------INS NullLiteral@@null @TO@ InfixExpression@@delegate != null @AT@ 5637 @LENGTH@ 4
---INS Block@@ThenBody:{  String delegateAnswer=delegate.parseProperty(key,answer != null ? answer : value,properties);  if (delegateAnswer != null) {    answer=delegateAnswer;  }} @TO@ IfStatement@@if (answer == null && delegate != null) {  answer=delegate.parseProperty(key,value,properties);} @AT@ 5643 @LENGTH@ 218
------INS VariableDeclarationStatement@@String delegateAnswer=delegate.parseProperty(key,answer != null ? answer : value,properties); @TO@ Block@@ThenBody:{  String delegateAnswer=delegate.parseProperty(key,answer != null ? answer : value,properties);  if (delegateAnswer != null) {    answer=delegateAnswer;  }} @AT@ 5657 @LENGTH@ 97
---------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String delegateAnswer=delegate.parseProperty(key,answer != null ? answer : value,properties); @AT@ 5657 @LENGTH@ 6
---------INS VariableDeclarationFragment@@delegateAnswer=delegate.parseProperty(key,answer != null ? answer : value,properties) @TO@ VariableDeclarationStatement@@String delegateAnswer=delegate.parseProperty(key,answer != null ? answer : value,properties); @AT@ 5664 @LENGTH@ 89
------------INS SimpleName@@delegateAnswer @TO@ VariableDeclarationFragment@@delegateAnswer=delegate.parseProperty(key,answer != null ? answer : value,properties) @AT@ 5664 @LENGTH@ 14
------------INS MethodInvocation@@delegate.parseProperty(key,answer != null ? answer : value,properties) @TO@ VariableDeclarationFragment@@delegateAnswer=delegate.parseProperty(key,answer != null ? answer : value,properties) @AT@ 5681 @LENGTH@ 72
---------------INS SimpleName@@Name:delegate @TO@ MethodInvocation@@delegate.parseProperty(key,answer != null ? answer : value,properties) @AT@ 5681 @LENGTH@ 8
---------------INS SimpleName@@MethodName:parseProperty:[key, answer != null ? answer : value, properties] @TO@ MethodInvocation@@delegate.parseProperty(key,answer != null ? answer : value,properties) @AT@ 5690 @LENGTH@ 63
------------------INS SimpleName@@key @TO@ SimpleName@@MethodName:parseProperty:[key, answer != null ? answer : value, properties] @AT@ 5704 @LENGTH@ 3
------------------INS ConditionalExpression@@answer != null ? answer : value @TO@ SimpleName@@MethodName:parseProperty:[key, answer != null ? answer : value, properties] @AT@ 5709 @LENGTH@ 31
---------------------INS InfixExpression@@answer != null @TO@ ConditionalExpression@@answer != null ? answer : value @AT@ 5709 @LENGTH@ 14
------------------------MOV SimpleName@@answer @TO@ InfixExpression@@answer != null @AT@ 5494 @LENGTH@ 6
------------------------MOV Operator@@== @TO@ InfixExpression@@answer != null @AT@ 5500 @LENGTH@ 2
------------------------MOV NullLiteral@@null @TO@ InfixExpression@@answer != null @AT@ 5504 @LENGTH@ 4
---------------------INS SimpleName@@answer @TO@ ConditionalExpression@@answer != null ? answer : value @AT@ 5726 @LENGTH@ 6
---------------------INS SimpleName@@value @TO@ ConditionalExpression@@answer != null ? answer : value @AT@ 5735 @LENGTH@ 5
------------------INS SimpleName@@properties @TO@ SimpleName@@MethodName:parseProperty:[key, answer != null ? answer : value, properties] @AT@ 5742 @LENGTH@ 10
------INS IfStatement@@if (delegateAnswer != null) {  answer=delegateAnswer;} @TO@ Block@@ThenBody:{  String delegateAnswer=delegate.parseProperty(key,answer != null ? answer : value,properties);  if (delegateAnswer != null) {    answer=delegateAnswer;  }} @AT@ 5767 @LENGTH@ 84
---------MOV Block@@ThenBody:{  answer=delegate.parseProperty(key,value,properties);} @TO@ IfStatement@@if (delegateAnswer != null) {  answer=delegateAnswer;} @AT@ 5530 @LENGTH@ 153
------------UPD ExpressionStatement@@Assignment:answer=delegate.parseProperty(key,value,properties) @TO@ Assignment:answer=delegateAnswer @AT@ 5617 @LENGTH@ 56
---------------UPD Assignment@@answer=delegate.parseProperty(key,value,properties) @TO@ answer=delegateAnswer @AT@ 5617 @LENGTH@ 55
------------------DEL MethodInvocation@@delegate.parseProperty(key,value,properties) @AT@ 5626 @LENGTH@ 46
---------------------DEL SimpleName@@Name:delegate @AT@ 5626 @LENGTH@ 8
---------------------DEL SimpleName@@MethodName:parseProperty:[key, value, properties] @AT@ 5635 @LENGTH@ 37
------------------------DEL SimpleName@@key @AT@ 5649 @LENGTH@ 3
------------------------DEL SimpleName@@value @AT@ 5654 @LENGTH@ 5
------------------------DEL SimpleName@@properties @AT@ 5661 @LENGTH@ 10
------------------INS SimpleName@@delegateAnswer @TO@ Assignment@@answer=delegate.parseProperty(key,value,properties) @AT@ 5822 @LENGTH@ 14
---------INS InfixExpression@@delegateAnswer != null @TO@ IfStatement@@if (delegateAnswer != null) {  answer=delegateAnswer;} @AT@ 5771 @LENGTH@ 22
------------MOV SimpleName@@delegate @TO@ InfixExpression@@delegateAnswer != null @AT@ 5512 @LENGTH@ 8
------------MOV Operator@@!= @TO@ InfixExpression@@delegateAnswer != null @AT@ 5520 @LENGTH@ 2
------------MOV NullLiteral@@null @TO@ InfixExpression@@delegateAnswer != null @AT@ 5524 @LENGTH@ 4


UPD ExpressionStatement@@MethodInvocation:addOption(new ParameterOption("pf","persistentFileName","Sets the ConfigAdmin persistent file name","persistentFileName"){
  protected void doProcess(  String arg,  String parameter,  LinkedList<String> remainingArgs){
    setConfigAdminFileName(parameter);
  }
}
) @TO@ MethodInvocation:addOption(new ParameterOption("pf","configAdminFileName","Sets the ConfigAdmin persistent file name","configAdminFileName"){
  protected void doProcess(  String arg,  String parameter,  LinkedList<String> remainingArgs){
    setConfigAdminFileName(parameter);
  }
}
) @AT@ 2685 @LENGTH@ 325
---UPD MethodInvocation@@addOption(new ParameterOption("pf","persistentFileName","Sets the ConfigAdmin persistent file name","persistentFileName"){
  protected void doProcess(  String arg,  String parameter,  LinkedList<String> remainingArgs){
    setConfigAdminFileName(parameter);
  }
}
) @TO@ addOption(new ParameterOption("pf","configAdminFileName","Sets the ConfigAdmin persistent file name","configAdminFileName"){
  protected void doProcess(  String arg,  String parameter,  LinkedList<String> remainingArgs){
    setConfigAdminFileName(parameter);
  }
}
) @AT@ 2685 @LENGTH@ 324
------UPD SimpleName@@MethodName:addOption:[new ParameterOption("pf","persistentFileName","Sets the ConfigAdmin persistent file name","persistentFileName"){
  protected void doProcess(  String arg,  String parameter,  LinkedList<String> remainingArgs){
    setConfigAdminFileName(parameter);
  }
}
] @TO@ MethodName:addOption:[new ParameterOption("pf","configAdminFileName","Sets the ConfigAdmin persistent file name","configAdminFileName"){
  protected void doProcess(  String arg,  String parameter,  LinkedList<String> remainingArgs){
    setConfigAdminFileName(parameter);
  }
}
] @AT@ 2685 @LENGTH@ 324
---------UPD ClassInstanceCreation@@ParameterOption["pf", "persistentFileName", "Sets the ConfigAdmin persistent file name", "persistentFileName"] @TO@ ParameterOption["pf", "configAdminFileName", "Sets the ConfigAdmin persistent file name", "configAdminFileName"] @AT@ 2695 @LENGTH@ 313
------------UPD StringLiteral@@"persistentFileName" @TO@ "configAdminFileName" @AT@ 2721 @LENGTH@ 20
------------UPD StringLiteral@@"persistentFileName" @TO@ "configAdminFileName" @AT@ 2807 @LENGTH@ 20


UPD ThrowStatement@@ClassInstanceCreation:new SecurityException("Security manager may not be changed") @TO@ MethodInvocation:access.secMgrChange() @AT@ 6497 @LENGTH@ 67
---INS MethodInvocation@@access.secMgrChange() @TO@ ThrowStatement@@ClassInstanceCreation:new SecurityException("Security manager may not be changed") @AT@ 6472 @LENGTH@ 21
------INS SimpleName@@Name:access @TO@ MethodInvocation@@access.secMgrChange() @AT@ 6472 @LENGTH@ 6
------INS SimpleName@@MethodName:secMgrChange:[] @TO@ MethodInvocation@@access.secMgrChange() @AT@ 6479 @LENGTH@ 14
---DEL ClassInstanceCreation@@SecurityException["Security manager may not be changed"] @AT@ 6503 @LENGTH@ 60
------DEL New@@new @AT@ 6503 @LENGTH@ 3
------DEL SimpleType@@SecurityException @AT@ 6507 @LENGTH@ 17
------DEL StringLiteral@@"Security manager may not be changed" @AT@ 6525 @LENGTH@ 37


UPD VariableDeclarationStatement@@String[] parameters=StringQuoteHelper.splitSafeQuote(methodParameters,',',false); @TO@ String[] parameters=StringQuoteHelper.splitSafeQuote(methodParameters,',',true); @AT@ 18596 @LENGTH@ 85
---UPD VariableDeclarationFragment@@parameters=StringQuoteHelper.splitSafeQuote(methodParameters,',',false) @TO@ parameters=StringQuoteHelper.splitSafeQuote(methodParameters,',',true) @AT@ 18605 @LENGTH@ 75
------UPD MethodInvocation@@StringQuoteHelper.splitSafeQuote(methodParameters,',',false) @TO@ StringQuoteHelper.splitSafeQuote(methodParameters,',',true) @AT@ 18618 @LENGTH@ 62
---------UPD SimpleName@@MethodName:splitSafeQuote:[methodParameters, ',', false] @TO@ MethodName:splitSafeQuote:[methodParameters, ',', true] @AT@ 18636 @LENGTH@ 44
------------UPD BooleanLiteral@@false @TO@ true @AT@ 18674 @LENGTH@ 5


UPD ExpressionStatement@@MethodInvocation:main.setPid("stuff") @TO@ MethodInvocation:main.setConfigAdminPid("stuff") @AT@ 1479 @LENGTH@ 21
---UPD MethodInvocation@@main.setPid("stuff") @TO@ main.setConfigAdminPid("stuff") @AT@ 1479 @LENGTH@ 20
------UPD SimpleName@@MethodName:setPid:["stuff"] @TO@ MethodName:setConfigAdminPid:["stuff"] @AT@ 1484 @LENGTH@ 15


INS MethodDeclaration@@public, void, MethodName:testMultiDiscard, Exception,  @TO@ TypeDeclaration@@[public, abstract]AbstractConnectionIntegrationTests,  @AT@ 12385 @LENGTH@ 315
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testMultiDiscard, Exception,  @AT@ 12385 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testMultiDiscard, Exception,  @AT@ 12392 @LENGTH@ 4
---INS SimpleName@@MethodName:testMultiDiscard @TO@ MethodDeclaration@@public, void, MethodName:testMultiDiscard, Exception,  @AT@ 12397 @LENGTH@ 16
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:testMultiDiscard, Exception,  @AT@ 12423 @LENGTH@ 9
---INS ExpressionStatement@@MethodInvocation:connection.set("testitnow","willdo") @TO@ MethodDeclaration@@public, void, MethodName:testMultiDiscard, Exception,  @AT@ 12437 @LENGTH@ 38
------INS MethodInvocation@@connection.set("testitnow","willdo") @TO@ ExpressionStatement@@MethodInvocation:connection.set("testitnow","willdo") @AT@ 12437 @LENGTH@ 37
---------INS SimpleName@@Name:connection @TO@ MethodInvocation@@connection.set("testitnow","willdo") @AT@ 12437 @LENGTH@ 10
---------INS SimpleName@@MethodName:set:["testitnow", "willdo"] @TO@ MethodInvocation@@connection.set("testitnow","willdo") @AT@ 12448 @LENGTH@ 26
------------INS StringLiteral@@"testitnow" @TO@ SimpleName@@MethodName:set:["testitnow", "willdo"] @AT@ 12452 @LENGTH@ 11
------------INS StringLiteral@@"willdo" @TO@ SimpleName@@MethodName:set:["testitnow", "willdo"] @AT@ 12465 @LENGTH@ 8
---INS ExpressionStatement@@MethodInvocation:connection.multi() @TO@ MethodDeclaration@@public, void, MethodName:testMultiDiscard, Exception,  @AT@ 12478 @LENGTH@ 19
------INS MethodInvocation@@connection.multi() @TO@ ExpressionStatement@@MethodInvocation:connection.multi() @AT@ 12478 @LENGTH@ 18
---------INS SimpleName@@Name:connection @TO@ MethodInvocation@@connection.multi() @AT@ 12478 @LENGTH@ 10
---------INS SimpleName@@MethodName:multi:[] @TO@ MethodInvocation@@connection.multi() @AT@ 12489 @LENGTH@ 7
---INS ExpressionStatement@@MethodInvocation:connection.set("testitnow","notok") @TO@ MethodDeclaration@@public, void, MethodName:testMultiDiscard, Exception,  @AT@ 12500 @LENGTH@ 37
------INS MethodInvocation@@connection.set("testitnow","notok") @TO@ ExpressionStatement@@MethodInvocation:connection.set("testitnow","notok") @AT@ 12500 @LENGTH@ 36
---------INS SimpleName@@Name:connection @TO@ MethodInvocation@@connection.set("testitnow","notok") @AT@ 12500 @LENGTH@ 10
---------INS SimpleName@@MethodName:set:["testitnow", "notok"] @TO@ MethodInvocation@@connection.set("testitnow","notok") @AT@ 12511 @LENGTH@ 25
------------INS StringLiteral@@"testitnow" @TO@ SimpleName@@MethodName:set:["testitnow", "notok"] @AT@ 12515 @LENGTH@ 11
------------INS StringLiteral@@"notok" @TO@ SimpleName@@MethodName:set:["testitnow", "notok"] @AT@ 12528 @LENGTH@ 7
---INS ExpressionStatement@@MethodInvocation:connection.discard() @TO@ MethodDeclaration@@public, void, MethodName:testMultiDiscard, Exception,  @AT@ 12540 @LENGTH@ 21
------INS MethodInvocation@@connection.discard() @TO@ ExpressionStatement@@MethodInvocation:connection.discard() @AT@ 12540 @LENGTH@ 20
---------INS SimpleName@@Name:connection @TO@ MethodInvocation@@connection.discard() @AT@ 12540 @LENGTH@ 10
---------INS SimpleName@@MethodName:discard:[] @TO@ MethodInvocation@@connection.discard() @AT@ 12551 @LENGTH@ 9
---INS ExpressionStatement@@MethodInvocation:assertEquals("willdo",connection.get("testitnow")) @TO@ MethodDeclaration@@public, void, MethodName:testMultiDiscard, Exception,  @AT@ 12564 @LENGTH@ 52
------INS MethodInvocation@@assertEquals("willdo",connection.get("testitnow")) @TO@ ExpressionStatement@@MethodInvocation:assertEquals("willdo",connection.get("testitnow")) @AT@ 12564 @LENGTH@ 51
---------INS SimpleName@@MethodName:assertEquals:["willdo", connection.get("testitnow")] @TO@ MethodInvocation@@assertEquals("willdo",connection.get("testitnow")) @AT@ 12564 @LENGTH@ 51
------------INS StringLiteral@@"willdo" @TO@ SimpleName@@MethodName:assertEquals:["willdo", connection.get("testitnow")] @AT@ 12577 @LENGTH@ 8
------------INS MethodInvocation@@connection.get("testitnow") @TO@ SimpleName@@MethodName:assertEquals:["willdo", connection.get("testitnow")] @AT@ 12587 @LENGTH@ 27
---------------INS SimpleName@@Name:connection @TO@ MethodInvocation@@connection.get("testitnow") @AT@ 12587 @LENGTH@ 10
---------------INS SimpleName@@MethodName:get:["testitnow"] @TO@ MethodInvocation@@connection.get("testitnow") @AT@ 12598 @LENGTH@ 16
------------------INS StringLiteral@@"testitnow" @TO@ SimpleName@@MethodName:get:["testitnow"] @AT@ 12602 @LENGTH@ 11
---INS ExpressionStatement@@MethodInvocation:testMultiExec() @TO@ MethodDeclaration@@public, void, MethodName:testMultiDiscard, Exception,  @AT@ 12681 @LENGTH@ 16
------INS MethodInvocation@@MethodName:testMultiExec:[] @TO@ ExpressionStatement@@MethodInvocation:testMultiExec() @AT@ 12681 @LENGTH@ 15


INS ExpressionStatement@@MethodInvocation:Provision.waitForContainerAlive(Arrays.<Container>asList(new ContainerImpl(null,"root",(FabricServiceImpl)fabricService)),PROVISION_TIMEOUT) @TO@ MethodDeclaration@@public, void, MethodName:testLocalFabricCluster, Exception,  @AT@ 2311 @LENGTH@ 145
---INS MethodInvocation@@Provision.waitForContainerAlive(Arrays.<Container>asList(new ContainerImpl(null,"root",(FabricServiceImpl)fabricService)),PROVISION_TIMEOUT) @TO@ ExpressionStatement@@MethodInvocation:Provision.waitForContainerAlive(Arrays.<Container>asList(new ContainerImpl(null,"root",(FabricServiceImpl)fabricService)),PROVISION_TIMEOUT) @AT@ 2311 @LENGTH@ 144
------INS SimpleName@@Name:Provision @TO@ MethodInvocation@@Provision.waitForContainerAlive(Arrays.<Container>asList(new ContainerImpl(null,"root",(FabricServiceImpl)fabricService)),PROVISION_TIMEOUT) @AT@ 2311 @LENGTH@ 9
------INS SimpleName@@MethodName:waitForContainerAlive:[Arrays.<Container>asList(new ContainerImpl(null,"root",(FabricServiceImpl)fabricService)), PROVISION_TIMEOUT] @TO@ MethodInvocation@@Provision.waitForContainerAlive(Arrays.<Container>asList(new ContainerImpl(null,"root",(FabricServiceImpl)fabricService)),PROVISION_TIMEOUT) @AT@ 2321 @LENGTH@ 134
---------INS MethodInvocation@@Arrays.<Container>asList(new ContainerImpl(null,"root",(FabricServiceImpl)fabricService)) @TO@ SimpleName@@MethodName:waitForContainerAlive:[Arrays.<Container>asList(new ContainerImpl(null,"root",(FabricServiceImpl)fabricService)), PROVISION_TIMEOUT] @AT@ 2343 @LENGTH@ 92
------------INS SimpleName@@Name:Arrays @TO@ MethodInvocation@@Arrays.<Container>asList(new ContainerImpl(null,"root",(FabricServiceImpl)fabricService)) @AT@ 2343 @LENGTH@ 6
------------INS SimpleName@@MethodName:asList:[new ContainerImpl(null,"root",(FabricServiceImpl)fabricService)] @TO@ MethodInvocation@@Arrays.<Container>asList(new ContainerImpl(null,"root",(FabricServiceImpl)fabricService)) @AT@ 2361 @LENGTH@ 74
---------------INS ClassInstanceCreation@@ContainerImpl[null, "root", (FabricServiceImpl)fabricService] @TO@ SimpleName@@MethodName:asList:[new ContainerImpl(null,"root",(FabricServiceImpl)fabricService)] @AT@ 2368 @LENGTH@ 66
------------------INS New@@new @TO@ ClassInstanceCreation@@ContainerImpl[null, "root", (FabricServiceImpl)fabricService] @AT@ 2368 @LENGTH@ 3
------------------INS SimpleType@@ContainerImpl @TO@ ClassInstanceCreation@@ContainerImpl[null, "root", (FabricServiceImpl)fabricService] @AT@ 2372 @LENGTH@ 13
------------------INS NullLiteral@@null @TO@ ClassInstanceCreation@@ContainerImpl[null, "root", (FabricServiceImpl)fabricService] @AT@ 2386 @LENGTH@ 4
------------------INS StringLiteral@@"root" @TO@ ClassInstanceCreation@@ContainerImpl[null, "root", (FabricServiceImpl)fabricService] @AT@ 2392 @LENGTH@ 6
------------------INS CastExpression@@(FabricServiceImpl)fabricService @TO@ ClassInstanceCreation@@ContainerImpl[null, "root", (FabricServiceImpl)fabricService] @AT@ 2400 @LENGTH@ 33
---------------------INS SimpleType@@FabricServiceImpl @TO@ CastExpression@@(FabricServiceImpl)fabricService @AT@ 2401 @LENGTH@ 17
---------------------INS SimpleName@@fabricService @TO@ CastExpression@@(FabricServiceImpl)fabricService @AT@ 2420 @LENGTH@ 13
---------INS SimpleName@@PROVISION_TIMEOUT @TO@ SimpleName@@MethodName:waitForContainerAlive:[Arrays.<Container>asList(new ContainerImpl(null,"root",(FabricServiceImpl)fabricService)), PROVISION_TIMEOUT] @AT@ 2437 @LENGTH@ 17


UPD IfStatement@@if (params.isAlphabetic()) {  args.alpha();} @TO@ if (isAlpha != null && isAlpha) {  args.alpha();} @AT@ 3909 @LENGTH@ 49
---DEL MethodInvocation@@params.isAlphabetic() @AT@ 3913 @LENGTH@ 21
------DEL SimpleName@@Name:params @AT@ 3913 @LENGTH@ 6
------DEL SimpleName@@MethodName:isAlphabetic:[] @AT@ 3920 @LENGTH@ 14
---INS InfixExpression@@isAlpha != null && isAlpha @TO@ IfStatement@@if (params.isAlphabetic()) {  args.alpha();} @AT@ 3956 @LENGTH@ 26
------INS InfixExpression@@isAlpha != null @TO@ InfixExpression@@isAlpha != null && isAlpha @AT@ 3956 @LENGTH@ 15
---------INS SimpleName@@isAlpha @TO@ InfixExpression@@isAlpha != null @AT@ 3956 @LENGTH@ 7
---------INS Operator@@!= @TO@ InfixExpression@@isAlpha != null @AT@ 3963 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@isAlpha != null @AT@ 3967 @LENGTH@ 4
------INS Operator@@&& @TO@ InfixExpression@@isAlpha != null && isAlpha @AT@ 3971 @LENGTH@ 2
------INS SimpleName@@isAlpha @TO@ InfixExpression@@isAlpha != null && isAlpha @AT@ 3975 @LENGTH@ 7


INS MethodDeclaration@@public, void, MethodName:addStep, ModelNode operation, OperationStepHandler step, OperationContext.Stage stage, boolean addFirst, IllegalArgumentException,  @TO@ TypeDeclaration@@MockOperationContext, [OperationContext] @AT@ 7784 @LENGTH@ 214
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:addStep, ModelNode operation, OperationStepHandler step, OperationContext.Stage stage, boolean addFirst, IllegalArgumentException,  @AT@ 7784 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:addStep, ModelNode operation, OperationStepHandler step, OperationContext.Stage stage, boolean addFirst, IllegalArgumentException,  @AT@ 7791 @LENGTH@ 4
---INS SimpleName@@MethodName:addStep @TO@ MethodDeclaration@@public, void, MethodName:addStep, ModelNode operation, OperationStepHandler step, OperationContext.Stage stage, boolean addFirst, IllegalArgumentException,  @AT@ 7796 @LENGTH@ 7
---INS SingleVariableDeclaration@@ModelNode operation @TO@ MethodDeclaration@@public, void, MethodName:addStep, ModelNode operation, OperationStepHandler step, OperationContext.Stage stage, boolean addFirst, IllegalArgumentException,  @AT@ 7804 @LENGTH@ 19
------INS SimpleType@@ModelNode @TO@ SingleVariableDeclaration@@ModelNode operation @AT@ 7804 @LENGTH@ 9
------INS SimpleName@@operation @TO@ SingleVariableDeclaration@@ModelNode operation @AT@ 7814 @LENGTH@ 9
---INS SingleVariableDeclaration@@OperationStepHandler step @TO@ MethodDeclaration@@public, void, MethodName:addStep, ModelNode operation, OperationStepHandler step, OperationContext.Stage stage, boolean addFirst, IllegalArgumentException,  @AT@ 7825 @LENGTH@ 25
------INS SimpleType@@OperationStepHandler @TO@ SingleVariableDeclaration@@OperationStepHandler step @AT@ 7825 @LENGTH@ 20
------INS SimpleName@@step @TO@ SingleVariableDeclaration@@OperationStepHandler step @AT@ 7846 @LENGTH@ 4
---INS SingleVariableDeclaration@@OperationContext.Stage stage @TO@ MethodDeclaration@@public, void, MethodName:addStep, ModelNode operation, OperationStepHandler step, OperationContext.Stage stage, boolean addFirst, IllegalArgumentException,  @AT@ 7852 @LENGTH@ 28
------INS SimpleType@@OperationContext.Stage @TO@ SingleVariableDeclaration@@OperationContext.Stage stage @AT@ 7852 @LENGTH@ 22
------INS SimpleName@@stage @TO@ SingleVariableDeclaration@@OperationContext.Stage stage @AT@ 7875 @LENGTH@ 5
---INS SingleVariableDeclaration@@boolean addFirst @TO@ MethodDeclaration@@public, void, MethodName:addStep, ModelNode operation, OperationStepHandler step, OperationContext.Stage stage, boolean addFirst, IllegalArgumentException,  @AT@ 7882 @LENGTH@ 16
------INS PrimitiveType@@boolean @TO@ SingleVariableDeclaration@@boolean addFirst @AT@ 7882 @LENGTH@ 7
------INS SimpleName@@addFirst @TO@ SingleVariableDeclaration@@boolean addFirst @AT@ 7890 @LENGTH@ 8
---INS SimpleType@@IllegalArgumentException @TO@ MethodDeclaration@@public, void, MethodName:addStep, ModelNode operation, OperationStepHandler step, OperationContext.Stage stage, boolean addFirst, IllegalArgumentException,  @AT@ 7907 @LENGTH@ 24
---INS ExpressionStatement@@MethodInvocation:addStep(operation,step,stage,addFirst) @TO@ MethodDeclaration@@public, void, MethodName:addStep, ModelNode operation, OperationStepHandler step, OperationContext.Stage stage, boolean addFirst, IllegalArgumentException,  @AT@ 7946 @LENGTH@ 42
------INS MethodInvocation@@addStep(operation,step,stage,addFirst) @TO@ ExpressionStatement@@MethodInvocation:addStep(operation,step,stage,addFirst) @AT@ 7946 @LENGTH@ 41
---------INS SimpleName@@MethodName:addStep:[operation, step, stage, addFirst] @TO@ MethodInvocation@@addStep(operation,step,stage,addFirst) @AT@ 7946 @LENGTH@ 41
------------INS SimpleName@@operation @TO@ SimpleName@@MethodName:addStep:[operation, step, stage, addFirst] @AT@ 7954 @LENGTH@ 9
------------INS SimpleName@@step @TO@ SimpleName@@MethodName:addStep:[operation, step, stage, addFirst] @AT@ 7965 @LENGTH@ 4
------------INS SimpleName@@stage @TO@ SimpleName@@MethodName:addStep:[operation, step, stage, addFirst] @AT@ 7971 @LENGTH@ 5
------------INS SimpleName@@addFirst @TO@ SimpleName@@MethodName:addStep:[operation, step, stage, addFirst] @AT@ 7978 @LENGTH@ 8


UPD VariableDeclarationStatement@@List<Object> results=connection.closePipeline(); @TO@ List<Object> results=getResults(); @AT@ 3768 @LENGTH@ 50
---UPD VariableDeclarationFragment@@results=connection.closePipeline() @TO@ results=getResults() @AT@ 3781 @LENGTH@ 36
------UPD MethodInvocation@@connection.closePipeline() @TO@ MethodName:getResults:[] @AT@ 3791 @LENGTH@ 26
---------DEL SimpleName@@Name:connection @AT@ 3791 @LENGTH@ 10
---------DEL SimpleName@@MethodName:closePipeline:[] @AT@ 3802 @LENGTH@ 15


UPD ExpressionStatement@@MethodInvocation:BindingAddHandler.installBindingService(context,unresolvedConfig,bindingName) @TO@ MethodInvocation:BindingAddHandler.installBindingService(context,unresolvedConfig,bindingName,null) @AT@ 6532 @LENGTH@ 80
---UPD MethodInvocation@@BindingAddHandler.installBindingService(context,unresolvedConfig,bindingName) @TO@ BindingAddHandler.installBindingService(context,unresolvedConfig,bindingName,null) @AT@ 6532 @LENGTH@ 79
------UPD SimpleName@@MethodName:installBindingService:[context, unresolvedConfig, bindingName] @TO@ MethodName:installBindingService:[context, unresolvedConfig, bindingName, null] @AT@ 6550 @LENGTH@ 61
---------INS NullLiteral@@null @TO@ SimpleName@@MethodName:installBindingService:[context, unresolvedConfig, bindingName] @AT@ 6618 @LENGTH@ 4


UPD ExpressionStatement@@MethodInvocation:server.registerOperationTransformer(ADD,new ChainedOperationTransformer(new OperationTransformers.InsertDefaultValuesOperationTransformer(ID_CACHE_SIZE,CLUSTERED),rejectServerExpressionTransformer)) @TO@ MethodInvocation:server.registerOperationTransformer(ADD,new ChainedOperationTransformer(new OperationTransformers.InsertDefaultValuesOperationTransformer(ID_CACHE_SIZE,CLUSTERED),rejectServerExpressionTransformer,discardNewServerAttributes)) @AT@ 20015 @LENGTH@ 235
---UPD MethodInvocation@@server.registerOperationTransformer(ADD,new ChainedOperationTransformer(new OperationTransformers.InsertDefaultValuesOperationTransformer(ID_CACHE_SIZE,CLUSTERED),rejectServerExpressionTransformer)) @TO@ server.registerOperationTransformer(ADD,new ChainedOperationTransformer(new OperationTransformers.InsertDefaultValuesOperationTransformer(ID_CACHE_SIZE,CLUSTERED),rejectServerExpressionTransformer,discardNewServerAttributes)) @AT@ 20015 @LENGTH@ 234
------UPD SimpleName@@MethodName:registerOperationTransformer:[ADD, new ChainedOperationTransformer(new OperationTransformers.InsertDefaultValuesOperationTransformer(ID_CACHE_SIZE,CLUSTERED),rejectServerExpressionTransformer)] @TO@ MethodName:registerOperationTransformer:[ADD, new ChainedOperationTransformer(new OperationTransformers.InsertDefaultValuesOperationTransformer(ID_CACHE_SIZE,CLUSTERED),rejectServerExpressionTransformer,discardNewServerAttributes)] @AT@ 20022 @LENGTH@ 227
---------UPD ClassInstanceCreation@@ChainedOperationTransformer[new OperationTransformers.InsertDefaultValuesOperationTransformer(ID_CACHE_SIZE,CLUSTERED), rejectServerExpressionTransformer] @TO@ ChainedOperationTransformer[new OperationTransformers.InsertDefaultValuesOperationTransformer(ID_CACHE_SIZE,CLUSTERED), rejectServerExpressionTransformer, discardNewServerAttributes] @AT@ 20056 @LENGTH@ 192
------------INS SimpleName@@discardNewServerAttributes @TO@ ClassInstanceCreation@@ChainedOperationTransformer[new OperationTransformers.InsertDefaultValuesOperationTransformer(ID_CACHE_SIZE,CLUSTERED), rejectServerExpressionTransformer] @AT@ 20265 @LENGTH@ 26


INS IfStatement@@if (!getPatterns().isEmpty()) {  jedisPubSub.punsubscribe();} @TO@ MethodDeclaration@@protected, void, MethodName:doClose,  @AT@ 1334 @LENGTH@ 65
---INS PrefixExpression@@!getPatterns().isEmpty() @TO@ IfStatement@@if (!getPatterns().isEmpty()) {  jedisPubSub.punsubscribe();} @AT@ 1337 @LENGTH@ 24
------INS Operator@@! @TO@ PrefixExpression@@!getPatterns().isEmpty() @AT@ 1337 @LENGTH@ 1
------INS MethodInvocation@@getPatterns().isEmpty() @TO@ PrefixExpression@@!getPatterns().isEmpty() @AT@ 1338 @LENGTH@ 23
---------INS MethodInvocation@@MethodName:getPatterns:[] @TO@ MethodInvocation@@getPatterns().isEmpty() @AT@ 1338 @LENGTH@ 13
---------INS SimpleName@@MethodName:isEmpty:[] @TO@ MethodInvocation@@getPatterns().isEmpty() @AT@ 1352 @LENGTH@ 9
---INS Block@@ThenBody:{  jedisPubSub.punsubscribe();} @TO@ IfStatement@@if (!getPatterns().isEmpty()) {  jedisPubSub.punsubscribe();} @AT@ 1363 @LENGTH@ 36
------MOV ExpressionStatement@@MethodInvocation:jedisPubSub.punsubscribe() @TO@ Block@@ThenBody:{  jedisPubSub.punsubscribe();} @AT@ 1296 @LENGTH@ 27


DEL ExpressionStatement@@MethodInvocation:Thread.sleep(200) @AT@ 1972 @LENGTH@ 18
---DEL MethodInvocation@@Thread.sleep(200) @AT@ 1972 @LENGTH@ 17
------DEL SimpleName@@Name:Thread @AT@ 1972 @LENGTH@ 6
------DEL SimpleName@@MethodName:sleep:[200] @AT@ 1979 @LENGTH@ 10
---------DEL NumberLiteral@@200 @AT@ 1985 @LENGTH@ 3


UPD VariableDeclarationStatement@@FeaturesService featuresService=getOsgiService(FeaturesService.class); @TO@ FeaturesService featuresService=ServiceLocator.getOsgiService(FeaturesService.class); @AT@ 2037 @LENGTH@ 72
---UPD VariableDeclarationFragment@@featuresService=getOsgiService(FeaturesService.class) @TO@ featuresService=ServiceLocator.getOsgiService(FeaturesService.class) @AT@ 2053 @LENGTH@ 55
------UPD MethodInvocation@@getOsgiService(FeaturesService.class) @TO@ ServiceLocator.getOsgiService(FeaturesService.class) @AT@ 2071 @LENGTH@ 37
---------INS SimpleName@@Name:ServiceLocator @TO@ MethodInvocation@@getOsgiService(FeaturesService.class) @AT@ 2140 @LENGTH@ 14


UPD IfStatement@@if (config.expectFailedWriteAttributeOperation(operation)) {  Assert.assertNotNull("Expected transformation to get rejected " + operation,transformedOperation.getFailureDescription());  if (config.canCorrectMore(operation)) {    checkFailedTransformedWriteAttributeOperation(mainServices,modelVersion,config.correctWriteAttributeOperation(operation),config);  }} else {  ModelNode result=mainServices.executeOperation(modelVersion,transformedOperation);  Assert.assertEquals("Failed: " + operation + "\n: "+ result,SUCCESS,result.get(OUTCOME).asString());} @TO@ if (config.expectFailedWriteAttributeOperation(operation)) {  Assert.assertNotNull("Expected transformation to get rejected " + operation,transformedOperation.getFailureDescription());  checkFailedTransformedWriteAttributeOperation(mainServices,modelVersion,config.correctWriteAttributeOperation(operation),config);} else {  ModelNode result=mainServices.executeOperation(modelVersion,transformedOperation);  Assert.assertEquals("Failed: " + operation + "\n: "+ result,SUCCESS,result.get(OUTCOME).asString());} @AT@ 25735 @LENGTH@ 652
---DEL Block@@ThenBody:{  Assert.assertNotNull("Expected transformation to get rejected " + operation,transformedOperation.getFailureDescription());  if (config.canCorrectMore(operation)) {    checkFailedTransformedWriteAttributeOperation(mainServices,modelVersion,config.correctWriteAttributeOperation(operation),config);  }} @AT@ 25794 @LENGTH@ 362
------DEL IfStatement@@if (config.canCorrectMore(operation)) {  checkFailedTransformedWriteAttributeOperation(mainServices,modelVersion,config.correctWriteAttributeOperation(operation),config);} @AT@ 25944 @LENGTH@ 202
---------DEL MethodInvocation@@config.canCorrectMore(operation) @AT@ 25948 @LENGTH@ 32
------------DEL SimpleName@@Name:config @AT@ 25948 @LENGTH@ 6
------------DEL SimpleName@@MethodName:canCorrectMore:[operation] @AT@ 25955 @LENGTH@ 25
---------------DEL SimpleName@@operation @AT@ 25970 @LENGTH@ 9
---MOV Block@@ThenBody:{  checkFailedTransformedWriteAttributeOperation(mainServices,modelVersion,config.correctWriteAttributeOperation(operation),config);} @TO@ IfStatement@@if (config.expectFailedWriteAttributeOperation(operation)) {  Assert.assertNotNull("Expected transformation to get rejected " + operation,transformedOperation.getFailureDescription());  if (config.canCorrectMore(operation)) {    checkFailedTransformedWriteAttributeOperation(mainServices,modelVersion,config.correctWriteAttributeOperation(operation),config);  }} else {  ModelNode result=mainServices.executeOperation(modelVersion,transformedOperation);  Assert.assertEquals("Failed: " + operation + "\n: "+ result,SUCCESS,result.get(OUTCOME).asString());} @AT@ 25982 @LENGTH@ 164
------MOV ExpressionStatement@@MethodInvocation:Assert.assertNotNull("Expected transformation to get rejected " + operation,transformedOperation.getFailureDescription()) @TO@ Block@@ThenBody:{  checkFailedTransformedWriteAttributeOperation(mainServices,modelVersion,config.correctWriteAttributeOperation(operation),config);} @AT@ 25808 @LENGTH@ 123


UPD ReturnStatement@@MethodInvocation:getLong(key,new Long(defaultValue)).longValue() @TO@ MethodInvocation:getLong(key,Long.valueOf(defaultValue)).longValue() @AT@ 51879 @LENGTH@ 56
---UPD MethodInvocation@@getLong(key,new Long(defaultValue)).longValue() @TO@ getLong(key,Long.valueOf(defaultValue)).longValue() @AT@ 51886 @LENGTH@ 48
------UPD MethodInvocation@@MethodName:getLong:[key, new Long(defaultValue)] @TO@ MethodName:getLong:[key, Long.valueOf(defaultValue)] @AT@ 51886 @LENGTH@ 36
---------INS MethodInvocation@@Long.valueOf(defaultValue) @TO@ MethodInvocation@@MethodName:getLong:[key, new Long(defaultValue)] @AT@ 51899 @LENGTH@ 26
------------INS SimpleName@@Name:Long @TO@ MethodInvocation@@Long.valueOf(defaultValue) @AT@ 51899 @LENGTH@ 4
------------INS SimpleName@@MethodName:valueOf:[defaultValue] @TO@ MethodInvocation@@Long.valueOf(defaultValue) @AT@ 51904 @LENGTH@ 21
---------------INS SimpleName@@defaultValue @TO@ SimpleName@@MethodName:valueOf:[defaultValue] @AT@ 51912 @LENGTH@ 12
---------DEL ClassInstanceCreation@@Long[defaultValue] @AT@ 51899 @LENGTH@ 22
------------DEL New@@new @AT@ 51899 @LENGTH@ 3
------------DEL SimpleType@@Long @AT@ 51903 @LENGTH@ 4
------------DEL SimpleName@@defaultValue @AT@ 51908 @LENGTH@ 12


UPD TryStatement@@try {  Exchange exchange=synchronizedExchange.getExchange();  final boolean ignore=exchange.hasProperties() && exchange.getProperties().containsKey(DisruptorEndpoint.DISRUPTOR_IGNORE_EXCHANGE);  if (ignore) {    LOGGER.trace("Ignoring exchange {}",exchange);    return;  }  final Exchange result=prepareExchange(exchange);  AsyncCallback callback=new AsyncCallback(){    @Override public void done(    boolean doneSync){      synchronizedExchange.consumed(result);    }  };  AsyncProcessorHelper.process(processor,result,callback);} catch (Exception e) {  Exchange exchange=synchronizedExchange.getExchange();  if (exchange != null) {    getExceptionHandler().handleException("Error processing exchange",exchange,e);  } else {    getExceptionHandler().handleException(e);  }} @TO@ try {  Exchange exchange=synchronizedExchange.getExchange();  final boolean ignore=exchange.hasProperties() && exchange.getProperties().containsKey(DisruptorEndpoint.DISRUPTOR_IGNORE_EXCHANGE);  if (ignore) {    LOGGER.trace("Ignoring exchange {}",exchange);    return;  }  final Exchange result=prepareExchange(exchange);  result.addOnCompletion(new Synchronization(){    @Override public void onComplete(    Exchange exchange){      synchronizedExchange.consumed(result);    }    @Override public void onFailure(    Exchange exchange){      synchronizedExchange.consumed(result);    }  });  processor.process(result,NOOP_ASYNC_CALLBACK);} catch (Exception e) {  Exchange exchange=synchronizedExchange.getExchange();  if (exchange != null) {    getExceptionHandler().handleException("Error processing exchange",exchange,e);  } else {    getExceptionHandler().handleException(e);  }} @AT@ 4649 @LENGTH@ 1342
---DEL VariableDeclarationStatement@@AsyncCallback callback=new AsyncCallback(){
  @Override public void done(  boolean doneSync){
    synchronizedExchange.consumed(result);
  }
}
; @AT@ 5342 @LENGTH@ 217
------DEL SimpleType@@AsyncCallback @AT@ 5342 @LENGTH@ 13
------DEL VariableDeclarationFragment@@callback=new AsyncCallback(){
  @Override public void done(  boolean doneSync){
    synchronizedExchange.consumed(result);
  }
}
 @AT@ 5356 @LENGTH@ 202
---------DEL SimpleName@@callback @AT@ 5356 @LENGTH@ 8
---------DEL ClassInstanceCreation@@AsyncCallback[] @AT@ 5367 @LENGTH@ 191
---UPD ExpressionStatement@@MethodInvocation:AsyncProcessorHelper.process(processor,result,callback) @TO@ MethodInvocation:processor.process(result,NOOP_ASYNC_CALLBACK) @AT@ 5572 @LENGTH@ 58
------UPD MethodInvocation@@AsyncProcessorHelper.process(processor,result,callback) @TO@ processor.process(result,NOOP_ASYNC_CALLBACK) @AT@ 5572 @LENGTH@ 57
---------UPD SimpleName@@Name:AsyncProcessorHelper @TO@ Name:processor @AT@ 5572 @LENGTH@ 20
---------UPD SimpleName@@MethodName:process:[processor, result, callback] @TO@ MethodName:process:[result, NOOP_ASYNC_CALLBACK] @AT@ 5593 @LENGTH@ 36
------------DEL SimpleName@@processor @AT@ 5601 @LENGTH@ 9
------------UPD SimpleName@@callback @TO@ NOOP_ASYNC_CALLBACK @AT@ 5620 @LENGTH@ 8
---INS ExpressionStatement@@MethodInvocation:result.addOnCompletion(new Synchronization(){
  @Override public void onComplete(  Exchange exchange){
    synchronizedExchange.consumed(result);
  }
  @Override public void onFailure(  Exchange exchange){
    synchronizedExchange.consumed(result);
  }
}
) @TO@ TryStatement@@try {  Exchange exchange=synchronizedExchange.getExchange();  final boolean ignore=exchange.hasProperties() && exchange.getProperties().containsKey(DisruptorEndpoint.DISRUPTOR_IGNORE_EXCHANGE);  if (ignore) {    LOGGER.trace("Ignoring exchange {}",exchange);    return;  }  final Exchange result=prepareExchange(exchange);  AsyncCallback callback=new AsyncCallback(){    @Override public void done(    boolean doneSync){      synchronizedExchange.consumed(result);    }  };  AsyncProcessorHelper.process(processor,result,callback);} catch (Exception e) {  Exchange exchange=synchronizedExchange.getExchange();  if (exchange != null) {    getExceptionHandler().handleException("Error processing exchange",exchange,e);  } else {    getExceptionHandler().handleException(e);  }} @AT@ 5961 @LENGTH@ 388
------INS MethodInvocation@@result.addOnCompletion(new Synchronization(){
  @Override public void onComplete(  Exchange exchange){
    synchronizedExchange.consumed(result);
  }
  @Override public void onFailure(  Exchange exchange){
    synchronizedExchange.consumed(result);
  }
}
) @TO@ ExpressionStatement@@MethodInvocation:result.addOnCompletion(new Synchronization(){
  @Override public void onComplete(  Exchange exchange){
    synchronizedExchange.consumed(result);
  }
  @Override public void onFailure(  Exchange exchange){
    synchronizedExchange.consumed(result);
  }
}
) @AT@ 5961 @LENGTH@ 387
---------INS SimpleName@@Name:result @TO@ MethodInvocation@@result.addOnCompletion(new Synchronization(){
  @Override public void onComplete(  Exchange exchange){
    synchronizedExchange.consumed(result);
  }
  @Override public void onFailure(  Exchange exchange){
    synchronizedExchange.consumed(result);
  }
}
) @AT@ 5961 @LENGTH@ 6
---------INS SimpleName@@MethodName:addOnCompletion:[new Synchronization(){
  @Override public void onComplete(  Exchange exchange){
    synchronizedExchange.consumed(result);
  }
  @Override public void onFailure(  Exchange exchange){
    synchronizedExchange.consumed(result);
  }
}
] @TO@ MethodInvocation@@result.addOnCompletion(new Synchronization(){
  @Override public void onComplete(  Exchange exchange){
    synchronizedExchange.consumed(result);
  }
  @Override public void onFailure(  Exchange exchange){
    synchronizedExchange.consumed(result);
  }
}
) @AT@ 5968 @LENGTH@ 380
------------INS ClassInstanceCreation@@Synchronization[] @TO@ SimpleName@@MethodName:addOnCompletion:[new Synchronization(){
  @Override public void onComplete(  Exchange exchange){
    synchronizedExchange.consumed(result);
  }
  @Override public void onFailure(  Exchange exchange){
    synchronizedExchange.consumed(result);
  }
}
] @AT@ 5984 @LENGTH@ 363
---------------MOV New@@new @TO@ ClassInstanceCreation@@Synchronization[] @AT@ 5367 @LENGTH@ 3
---------------MOV SimpleType@@AsyncCallback @TO@ ClassInstanceCreation@@Synchronization[] @AT@ 5371 @LENGTH@ 13
---------------MOV AnonymousClassDeclaration@@AnonymousClass @TO@ ClassInstanceCreation@@Synchronization[] @AT@ 5387 @LENGTH@ 171
------------------UPD MethodDeclaration@@public, void, MethodName:done, boolean doneSync,  @TO@ public, void, MethodName:onFailure, Exchange exchange,  @AT@ 5431 @LENGTH@ 113
---------------------UPD SimpleName@@MethodName:done @TO@ MethodName:onFailure @AT@ 5443 @LENGTH@ 4
---------------------UPD SingleVariableDeclaration@@boolean doneSync @TO@ Exchange exchange @AT@ 5448 @LENGTH@ 16
------------------------DEL PrimitiveType@@boolean @AT@ 5448 @LENGTH@ 7
------------------------UPD SimpleName@@doneSync @TO@ exchange @AT@ 5456 @LENGTH@ 8
------------------------INS SimpleType@@Exchange @TO@ SingleVariableDeclaration@@boolean doneSync @AT@ 6236 @LENGTH@ 8
---------------------INS ExpressionStatement@@MethodInvocation:synchronizedExchange.consumed(result) @TO@ MethodDeclaration@@public, void, MethodName:done, boolean doneSync,  @AT@ 6277 @LENGTH@ 38
------------------------INS MethodInvocation@@synchronizedExchange.consumed(result) @TO@ ExpressionStatement@@MethodInvocation:synchronizedExchange.consumed(result) @AT@ 6277 @LENGTH@ 37
---------------------------INS SimpleName@@Name:synchronizedExchange @TO@ MethodInvocation@@synchronizedExchange.consumed(result) @AT@ 6277 @LENGTH@ 20
---------------------------INS SimpleName@@MethodName:consumed:[result] @TO@ MethodInvocation@@synchronizedExchange.consumed(result) @AT@ 6298 @LENGTH@ 16
------------------------------INS SimpleName@@result @TO@ SimpleName@@MethodName:consumed:[result] @AT@ 6307 @LENGTH@ 6
------------------INS MethodDeclaration@@public, void, MethodName:onComplete, Exchange exchange,  @TO@ AnonymousClassDeclaration@@AnonymousClass @AT@ 6050 @LENGTH@ 120
---------------------MOV ExpressionStatement@@MethodInvocation:synchronizedExchange.consumed(result) @TO@ MethodDeclaration@@public, void, MethodName:onComplete, Exchange exchange,  @AT@ 5488 @LENGTH@ 38
---------------------MOV ExpressionStatement@@MethodInvocation:synchronizedExchange.consumed(result) @TO@ MethodDeclaration@@public, void, MethodName:onComplete, Exchange exchange,  @AT@ 5488 @LENGTH@ 38
---------------------INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:onComplete, Exchange exchange,  @AT@ 6050 @LENGTH@ 6
---------------------INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:onComplete, Exchange exchange,  @AT@ 6057 @LENGTH@ 4
---------------------INS SimpleName@@MethodName:onComplete @TO@ MethodDeclaration@@public, void, MethodName:onComplete, Exchange exchange,  @AT@ 6062 @LENGTH@ 10
---------------------INS SingleVariableDeclaration@@Exchange exchange @TO@ MethodDeclaration@@public, void, MethodName:onComplete, Exchange exchange,  @AT@ 6073 @LENGTH@ 17
------------------------INS SimpleType@@Exchange @TO@ SingleVariableDeclaration@@Exchange exchange @AT@ 6073 @LENGTH@ 8
------------------------INS SimpleName@@exchange @TO@ SingleVariableDeclaration@@Exchange exchange @AT@ 6082 @LENGTH@ 8


UPD ExpressionStatement@@Assignment:modulePath=modulePath.split(File.pathSeparator)[1] @TO@ Assignment:modulePath=modulePath.split(File.pathSeparator)[0] @AT@ 4722 @LENGTH@ 53
---UPD Assignment@@modulePath=modulePath.split(File.pathSeparator)[1] @TO@ modulePath=modulePath.split(File.pathSeparator)[0] @AT@ 4722 @LENGTH@ 52
------UPD ArrayAccess@@modulePath.split(File.pathSeparator)[1] @TO@ modulePath.split(File.pathSeparator)[0] @AT@ 4735 @LENGTH@ 39
---------UPD NumberLiteral@@1 @TO@ 0 @AT@ 4772 @LENGTH@ 1


DEL MethodDeclaration@@public, static, DirectoryGrouping, MethodName:fromModel, final ModelNode model,  @AT@ 3340 @LENGTH@ 479
---DEL Modifier@@public @AT@ 3340 @LENGTH@ 6
---DEL Modifier@@static @AT@ 3347 @LENGTH@ 6
---DEL SimpleType@@DirectoryGrouping @AT@ 3354 @LENGTH@ 17
---DEL SimpleName@@MethodName:fromModel @AT@ 3372 @LENGTH@ 9
---DEL SingleVariableDeclaration@@final ModelNode model @AT@ 3382 @LENGTH@ 21
------DEL Modifier@@final @AT@ 3382 @LENGTH@ 5
------DEL SimpleType@@ModelNode @AT@ 3388 @LENGTH@ 9
------DEL SimpleName@@model @AT@ 3398 @LENGTH@ 5
---DEL TryStatement@@try {  if (model.hasDefined(ModelDescriptionConstants.DIRECTORY_GROUPING)) {    return DirectoryGrouping.forName(HostResourceDefinition.DIRECTORY_GROUPING.resolveModelAttribute(ExpressionResolver.DEFAULT,model).asString());  }} catch (OperationFailedException e) {  throw new IllegalStateException(e);} @AT@ 3415 @LENGTH@ 367
------DEL IfStatement@@if (model.hasDefined(ModelDescriptionConstants.DIRECTORY_GROUPING)) {  return DirectoryGrouping.forName(HostResourceDefinition.DIRECTORY_GROUPING.resolveModelAttribute(ExpressionResolver.DEFAULT,model).asString());} @AT@ 3433 @LENGTH@ 244
---------DEL MethodInvocation@@model.hasDefined(ModelDescriptionConstants.DIRECTORY_GROUPING) @AT@ 3437 @LENGTH@ 62
------------DEL SimpleName@@Name:model @AT@ 3437 @LENGTH@ 5
------------DEL SimpleName@@MethodName:hasDefined:[ModelDescriptionConstants.DIRECTORY_GROUPING] @AT@ 3443 @LENGTH@ 56
---------------DEL QualifiedName@@ModelDescriptionConstants.DIRECTORY_GROUPING @AT@ 3454 @LENGTH@ 44
------------------DEL SimpleName@@ModelDescriptionConstants @AT@ 3454 @LENGTH@ 25
------------------DEL SimpleName@@DIRECTORY_GROUPING @AT@ 3480 @LENGTH@ 18
---------DEL Block@@ThenBody:{  return DirectoryGrouping.forName(HostResourceDefinition.DIRECTORY_GROUPING.resolveModelAttribute(ExpressionResolver.DEFAULT,model).asString());} @AT@ 3501 @LENGTH@ 176
------------DEL ReturnStatement@@MethodInvocation:DirectoryGrouping.forName(HostResourceDefinition.DIRECTORY_GROUPING.resolveModelAttribute(ExpressionResolver.DEFAULT,model).asString()) @AT@ 3519 @LENGTH@ 144
---------------DEL MethodInvocation@@DirectoryGrouping.forName(HostResourceDefinition.DIRECTORY_GROUPING.resolveModelAttribute(ExpressionResolver.DEFAULT,model).asString()) @AT@ 3526 @LENGTH@ 136
------------------DEL SimpleName@@Name:DirectoryGrouping @AT@ 3526 @LENGTH@ 17
------------------DEL SimpleName@@MethodName:forName:[HostResourceDefinition.DIRECTORY_GROUPING.resolveModelAttribute(ExpressionResolver.DEFAULT,model).asString()] @AT@ 3544 @LENGTH@ 118
---------------------DEL MethodInvocation@@HostResourceDefinition.DIRECTORY_GROUPING.resolveModelAttribute(ExpressionResolver.DEFAULT,model).asString() @AT@ 3552 @LENGTH@ 109
------------------------DEL MethodInvocation@@MethodName:resolveModelAttribute:[ExpressionResolver.DEFAULT, model] @AT@ 3552 @LENGTH@ 98
---------------------------DEL QualifiedName@@ExpressionResolver.DEFAULT @AT@ 3616 @LENGTH@ 26
------------------------------DEL SimpleName@@ExpressionResolver @AT@ 3616 @LENGTH@ 18
------------------------------DEL SimpleName@@DEFAULT @AT@ 3635 @LENGTH@ 7
---------------------------DEL SimpleName@@model @AT@ 3644 @LENGTH@ 5
------------------------DEL QualifiedName@@Name:HostResourceDefinition.DIRECTORY_GROUPING @AT@ 3552 @LENGTH@ 41
------------------------DEL SimpleName@@MethodName:asString:[] @AT@ 3651 @LENGTH@ 10
------DEL CatchClause@@catch (OperationFailedException e) {  throw new IllegalStateException(e);} @AT@ 3688 @LENGTH@ 94
---------DEL SingleVariableDeclaration@@OperationFailedException e @AT@ 3695 @LENGTH@ 26
------------DEL SimpleType@@OperationFailedException @AT@ 3695 @LENGTH@ 24
------------DEL SimpleName@@e @AT@ 3720 @LENGTH@ 1
---------DEL ThrowStatement@@ClassInstanceCreation:new IllegalStateException(e) @AT@ 3737 @LENGTH@ 35
------------DEL ClassInstanceCreation@@IllegalStateException[e] @AT@ 3743 @LENGTH@ 28
---------------DEL New@@new @AT@ 3743 @LENGTH@ 3
---------------DEL SimpleType@@IllegalStateException @AT@ 3747 @LENGTH@ 21
---------------DEL SimpleName@@e @AT@ 3769 @LENGTH@ 1
---DEL ReturnStatement@@MethodInvocation:defaultValue() @AT@ 3791 @LENGTH@ 22
------DEL MethodInvocation@@MethodName:defaultValue:[] @AT@ 3798 @LENGTH@ 14


UPD Block@@ThenBody:{  if (model.hasDefined(PROPERTIES.getName())) {    for (    Property property : PROPERTIES.resolveModelAttribute(context,model).asPropertyList()) {      configuration.removeProperty(property.getName());    }  }  for (  AttributeDefinition attribute : attributes) {    handleProperty(attribute,context,originalModel,logContextConfiguration,configuration);    if (Logging.requiresRestart(attribute.getFlags())) {      context.restartRequired();    }  }} @TO@ ThenBody:{  if (model.hasDefined(PROPERTIES.getName())) {    for (    Property property : PROPERTIES.resolveModelAttribute(context,model).asPropertyList()) {      configuration.removeProperty(property.getName());    }  }  boolean restartRequired=false;  boolean reloadRequired=false;  for (  AttributeDefinition attribute : attributes) {    handleProperty(attribute,context,originalModel,logContextConfiguration,configuration);    restartRequired=restartRequired || Logging.requiresRestart(attribute.getFlags());    reloadRequired=reloadRequired || Logging.requiresReload(attribute.getFlags());  }  if (restartRequired) {    context.restartRequired();  } else   if (reloadRequired) {    context.reloadRequired();  }} @AT@ 6090 @LENGTH@ 807
---UPD EnhancedForStatement@@for (AttributeDefinition attribute : attributes) {  handleProperty(attribute,context,originalModel,logContextConfiguration,configuration);  if (Logging.requiresRestart(attribute.getFlags())) {    context.restartRequired();  }} @TO@ for (AttributeDefinition attribute : attributes) {  handleProperty(attribute,context,originalModel,logContextConfiguration,configuration);  restartRequired=restartRequired || Logging.requiresRestart(attribute.getFlags());  reloadRequired=reloadRequired || Logging.requiresReload(attribute.getFlags());} @AT@ 6534 @LENGTH@ 345
------DEL IfStatement@@if (Logging.requiresRestart(attribute.getFlags())) {  context.restartRequired();} @AT@ 6724 @LENGTH@ 133
------INS ExpressionStatement@@Assignment:restartRequired=restartRequired || Logging.requiresRestart(attribute.getFlags()) @TO@ EnhancedForStatement@@for (AttributeDefinition attribute : attributes) {  handleProperty(attribute,context,originalModel,logContextConfiguration,configuration);  if (Logging.requiresRestart(attribute.getFlags())) {    context.restartRequired();  }} @AT@ 7180 @LENGTH@ 83
---------INS Assignment@@restartRequired=restartRequired || Logging.requiresRestart(attribute.getFlags()) @TO@ ExpressionStatement@@Assignment:restartRequired=restartRequired || Logging.requiresRestart(attribute.getFlags()) @AT@ 7180 @LENGTH@ 82
------------INS SimpleName@@restartRequired @TO@ Assignment@@restartRequired=restartRequired || Logging.requiresRestart(attribute.getFlags()) @AT@ 7180 @LENGTH@ 15
------------INS Operator@@= @TO@ Assignment@@restartRequired=restartRequired || Logging.requiresRestart(attribute.getFlags()) @AT@ 7195 @LENGTH@ 1
------------INS InfixExpression@@restartRequired || Logging.requiresRestart(attribute.getFlags()) @TO@ Assignment@@restartRequired=restartRequired || Logging.requiresRestart(attribute.getFlags()) @AT@ 7198 @LENGTH@ 64
---------------MOV MethodInvocation@@Logging.requiresRestart(attribute.getFlags()) @TO@ InfixExpression@@restartRequired || Logging.requiresRestart(attribute.getFlags()) @AT@ 6728 @LENGTH@ 45
---------------INS SimpleName@@restartRequired @TO@ InfixExpression@@restartRequired || Logging.requiresRestart(attribute.getFlags()) @AT@ 7198 @LENGTH@ 15
---------------INS Operator@@|| @TO@ InfixExpression@@restartRequired || Logging.requiresRestart(attribute.getFlags()) @AT@ 7213 @LENGTH@ 2
------INS ExpressionStatement@@Assignment:reloadRequired=reloadRequired || Logging.requiresReload(attribute.getFlags()) @TO@ EnhancedForStatement@@for (AttributeDefinition attribute : attributes) {  handleProperty(attribute,context,originalModel,logContextConfiguration,configuration);  if (Logging.requiresRestart(attribute.getFlags())) {    context.restartRequired();  }} @AT@ 7288 @LENGTH@ 80
---------INS Assignment@@reloadRequired=reloadRequired || Logging.requiresReload(attribute.getFlags()) @TO@ ExpressionStatement@@Assignment:reloadRequired=reloadRequired || Logging.requiresReload(attribute.getFlags()) @AT@ 7288 @LENGTH@ 79
------------INS SimpleName@@reloadRequired @TO@ Assignment@@reloadRequired=reloadRequired || Logging.requiresReload(attribute.getFlags()) @AT@ 7288 @LENGTH@ 14
------------INS Operator@@= @TO@ Assignment@@reloadRequired=reloadRequired || Logging.requiresReload(attribute.getFlags()) @AT@ 7302 @LENGTH@ 1
------------INS InfixExpression@@reloadRequired || Logging.requiresReload(attribute.getFlags()) @TO@ Assignment@@reloadRequired=reloadRequired || Logging.requiresReload(attribute.getFlags()) @AT@ 7305 @LENGTH@ 62
---------------INS SimpleName@@reloadRequired @TO@ InfixExpression@@reloadRequired || Logging.requiresReload(attribute.getFlags()) @AT@ 7305 @LENGTH@ 14
---------------INS Operator@@|| @TO@ InfixExpression@@reloadRequired || Logging.requiresReload(attribute.getFlags()) @AT@ 7319 @LENGTH@ 2
---------------INS MethodInvocation@@Logging.requiresReload(attribute.getFlags()) @TO@ InfixExpression@@reloadRequired || Logging.requiresReload(attribute.getFlags()) @AT@ 7323 @LENGTH@ 44
------------------INS SimpleName@@Name:Logging @TO@ MethodInvocation@@Logging.requiresReload(attribute.getFlags()) @AT@ 7323 @LENGTH@ 7
------------------INS SimpleName@@MethodName:requiresReload:[attribute.getFlags()] @TO@ MethodInvocation@@Logging.requiresReload(attribute.getFlags()) @AT@ 7331 @LENGTH@ 36
---------------------INS MethodInvocation@@attribute.getFlags() @TO@ SimpleName@@MethodName:requiresReload:[attribute.getFlags()] @AT@ 7346 @LENGTH@ 20
------------------------INS SimpleName@@Name:attribute @TO@ MethodInvocation@@attribute.getFlags() @AT@ 7346 @LENGTH@ 9
------------------------INS SimpleName@@MethodName:getFlags:[] @TO@ MethodInvocation@@attribute.getFlags() @AT@ 7356 @LENGTH@ 10
---INS VariableDeclarationStatement@@boolean restartRequired=false; @TO@ Block@@ThenBody:{  if (model.hasDefined(PROPERTIES.getName())) {    for (    Property property : PROPERTIES.resolveModelAttribute(context,model).asPropertyList()) {      configuration.removeProperty(property.getName());    }  }  for (  AttributeDefinition attribute : attributes) {    handleProperty(attribute,context,originalModel,logContextConfiguration,configuration);    if (Logging.requiresRestart(attribute.getFlags())) {      context.restartRequired();    }  }} @AT@ 6885 @LENGTH@ 32
------INS PrimitiveType@@boolean @TO@ VariableDeclarationStatement@@boolean restartRequired=false; @AT@ 6885 @LENGTH@ 7
------INS VariableDeclarationFragment@@restartRequired=false @TO@ VariableDeclarationStatement@@boolean restartRequired=false; @AT@ 6893 @LENGTH@ 23
---------INS SimpleName@@restartRequired @TO@ VariableDeclarationFragment@@restartRequired=false @AT@ 6893 @LENGTH@ 15
---------INS BooleanLiteral@@false @TO@ VariableDeclarationFragment@@restartRequired=false @AT@ 6911 @LENGTH@ 5
---INS VariableDeclarationStatement@@boolean reloadRequired=false; @TO@ Block@@ThenBody:{  if (model.hasDefined(PROPERTIES.getName())) {    for (    Property property : PROPERTIES.resolveModelAttribute(context,model).asPropertyList()) {      configuration.removeProperty(property.getName());    }  }  for (  AttributeDefinition attribute : attributes) {    handleProperty(attribute,context,originalModel,logContextConfiguration,configuration);    if (Logging.requiresRestart(attribute.getFlags())) {      context.restartRequired();    }  }} @AT@ 6938 @LENGTH@ 31
------INS PrimitiveType@@boolean @TO@ VariableDeclarationStatement@@boolean reloadRequired=false; @AT@ 6938 @LENGTH@ 7
------INS VariableDeclarationFragment@@reloadRequired=false @TO@ VariableDeclarationStatement@@boolean reloadRequired=false; @AT@ 6946 @LENGTH@ 22
---------INS SimpleName@@reloadRequired @TO@ VariableDeclarationFragment@@reloadRequired=false @AT@ 6946 @LENGTH@ 14
---------INS BooleanLiteral@@false @TO@ VariableDeclarationFragment@@reloadRequired=false @AT@ 6963 @LENGTH@ 5
---INS IfStatement@@if (restartRequired) {  context.restartRequired();} else if (reloadRequired) {  context.reloadRequired();} @TO@ Block@@ThenBody:{  if (model.hasDefined(PROPERTIES.getName())) {    for (    Property property : PROPERTIES.resolveModelAttribute(context,model).asPropertyList()) {      configuration.removeProperty(property.getName());    }  }  for (  AttributeDefinition attribute : attributes) {    handleProperty(attribute,context,originalModel,logContextConfiguration,configuration);    if (Logging.requiresRestart(attribute.getFlags())) {      context.restartRequired();    }  }} @AT@ 7411 @LENGTH@ 194
------MOV Block@@ThenBody:{  context.restartRequired();} @TO@ IfStatement@@if (restartRequired) {  context.restartRequired();} else if (reloadRequired) {  context.reloadRequired();} @AT@ 6775 @LENGTH@ 82
------INS SimpleName@@restartRequired @TO@ IfStatement@@if (restartRequired) {  context.restartRequired();} else if (reloadRequired) {  context.reloadRequired();} @AT@ 7415 @LENGTH@ 15
------INS Block@@ElseBody:if (reloadRequired) {  context.reloadRequired();} @TO@ IfStatement@@if (restartRequired) {  context.restartRequired();} else if (reloadRequired) {  context.reloadRequired();} @AT@ 7512 @LENGTH@ 93
---------INS IfStatement@@if (reloadRequired) {  context.reloadRequired();} @TO@ Block@@ElseBody:if (reloadRequired) {  context.reloadRequired();} @AT@ 7512 @LENGTH@ 93
------------INS SimpleName@@reloadRequired @TO@ IfStatement@@if (reloadRequired) {  context.reloadRequired();} @AT@ 7516 @LENGTH@ 14
------------INS Block@@ThenBody:{  context.reloadRequired();} @TO@ IfStatement@@if (reloadRequired) {  context.reloadRequired();} @AT@ 7532 @LENGTH@ 73
---------------INS ExpressionStatement@@MethodInvocation:context.reloadRequired() @TO@ Block@@ThenBody:{  context.reloadRequired();} @AT@ 7558 @LENGTH@ 25
------------------INS MethodInvocation@@context.reloadRequired() @TO@ ExpressionStatement@@MethodInvocation:context.reloadRequired() @AT@ 7558 @LENGTH@ 24
---------------------INS SimpleName@@Name:context @TO@ MethodInvocation@@context.reloadRequired() @AT@ 7558 @LENGTH@ 7
---------------------INS SimpleName@@MethodName:reloadRequired:[] @TO@ MethodInvocation@@context.reloadRequired() @AT@ 7566 @LENGTH@ 16


UPD TryStatement@@try {  moduleLoader.loadModule(moduleId);  boolean importServices=moduleId.getName().endsWith("jdk") || moduleId.getName().equals("org.glassfish.javax.json");  moduleSpecification.addSystemDependency(new ModuleDependency(moduleLoader,moduleId,false,false,importServices,false));} catch (ModuleLoadException ex) {  ServerLogger.ROOT_LOGGER.debugf("Module not found: %s",moduleId);} @TO@ try {  moduleLoader.loadModule(moduleId);  moduleSpecification.addSystemDependency(new ModuleDependency(moduleLoader,moduleId,false,false,false,false));} catch (ModuleLoadException ex) {  ServerLogger.ROOT_LOGGER.debugf("Module not found: %s",moduleId);} @AT@ 2880 @LENGTH@ 474
---DEL VariableDeclarationStatement@@boolean importServices=moduleId.getName().endsWith("jdk") || moduleId.getName().equals("org.glassfish.javax.json"); @AT@ 2953 @LENGTH@ 117
------DEL PrimitiveType@@boolean @AT@ 2953 @LENGTH@ 7
------DEL VariableDeclarationFragment@@importServices=moduleId.getName().endsWith("jdk") || moduleId.getName().equals("org.glassfish.javax.json") @AT@ 2961 @LENGTH@ 108
---------DEL SimpleName@@importServices @AT@ 2961 @LENGTH@ 14
---------DEL InfixExpression@@moduleId.getName().endsWith("jdk") || moduleId.getName().equals("org.glassfish.javax.json") @AT@ 2978 @LENGTH@ 91
------------DEL MethodInvocation@@moduleId.getName().endsWith("jdk") @AT@ 2978 @LENGTH@ 34
---------------DEL MethodInvocation@@MethodName:getName:[] @AT@ 2978 @LENGTH@ 18
---------------DEL SimpleName@@Name:moduleId @AT@ 2978 @LENGTH@ 8
---------------DEL SimpleName@@MethodName:endsWith:["jdk"] @AT@ 2997 @LENGTH@ 15
------------------DEL StringLiteral@@"jdk" @AT@ 3006 @LENGTH@ 5
------------DEL Operator@@|| @AT@ 3012 @LENGTH@ 2
------------DEL MethodInvocation@@moduleId.getName().equals("org.glassfish.javax.json") @AT@ 3016 @LENGTH@ 53
---------------DEL MethodInvocation@@MethodName:getName:[] @AT@ 3016 @LENGTH@ 18
---------------DEL SimpleName@@Name:moduleId @AT@ 3016 @LENGTH@ 8
---------------DEL SimpleName@@MethodName:equals:["org.glassfish.javax.json"] @AT@ 3035 @LENGTH@ 34
------------------DEL StringLiteral@@"org.glassfish.javax.json" @AT@ 3042 @LENGTH@ 26
---UPD ExpressionStatement@@MethodInvocation:moduleSpecification.addSystemDependency(new ModuleDependency(moduleLoader,moduleId,false,false,importServices,false)) @TO@ MethodInvocation:moduleSpecification.addSystemDependency(new ModuleDependency(moduleLoader,moduleId,false,false,false,false)) @AT@ 3087 @LENGTH@ 123
------UPD MethodInvocation@@moduleSpecification.addSystemDependency(new ModuleDependency(moduleLoader,moduleId,false,false,importServices,false)) @TO@ moduleSpecification.addSystemDependency(new ModuleDependency(moduleLoader,moduleId,false,false,false,false)) @AT@ 3087 @LENGTH@ 122
---------UPD SimpleName@@MethodName:addSystemDependency:[new ModuleDependency(moduleLoader,moduleId,false,false,importServices,false)] @TO@ MethodName:addSystemDependency:[new ModuleDependency(moduleLoader,moduleId,false,false,false,false)] @AT@ 3107 @LENGTH@ 102
------------UPD ClassInstanceCreation@@ModuleDependency[moduleLoader, moduleId, false, false, importServices, false] @TO@ ModuleDependency[moduleLoader, moduleId, false, false, false, false] @AT@ 3127 @LENGTH@ 81
---------------INS BooleanLiteral@@false @TO@ ClassInstanceCreation@@ModuleDependency[moduleLoader, moduleId, false, false, importServices, false] @AT@ 2998 @LENGTH@ 5
---------------DEL SimpleName@@importServices @AT@ 3186 @LENGTH@ 14


UPD VariableDeclarationStatement@@final String setValue=value != null ? VALUE.resolveModelAttribute(context,operation).asString() : null; @TO@ final String setValue=value != null ? VALUE.resolveModelAttribute(context,model).asString() : null; @AT@ 4371 @LENGTH@ 106
---UPD VariableDeclarationFragment@@setValue=value != null ? VALUE.resolveModelAttribute(context,operation).asString() : null @TO@ setValue=value != null ? VALUE.resolveModelAttribute(context,model).asString() : null @AT@ 4384 @LENGTH@ 92
------UPD ConditionalExpression@@value != null ? VALUE.resolveModelAttribute(context,operation).asString() : null @TO@ value != null ? VALUE.resolveModelAttribute(context,model).asString() : null @AT@ 4395 @LENGTH@ 81
---------UPD MethodInvocation@@VALUE.resolveModelAttribute(context,operation).asString() @TO@ VALUE.resolveModelAttribute(context,model).asString() @AT@ 4411 @LENGTH@ 58
------------UPD MethodInvocation@@MethodName:resolveModelAttribute:[context, operation] @TO@ MethodName:resolveModelAttribute:[context, model] @AT@ 4411 @LENGTH@ 47
---------------UPD SimpleName@@operation @TO@ model @AT@ 4448 @LENGTH@ 9


UPD ExpressionStatement@@Assignment:comparator=new CompositeFileComparator(SizeFileComparator.SIZE_COMPARATOR,ExtensionFileComparator.EXTENSION_COMPARATOR) @TO@ Assignment:comparator=new CompositeFileComparator(new AbstractFileComparator[]{SizeFileComparator.SIZE_COMPARATOR,ExtensionFileComparator.EXTENSION_COMPARATOR}) @AT@ 1432 @LENGTH@ 172
---UPD Assignment@@comparator=new CompositeFileComparator(SizeFileComparator.SIZE_COMPARATOR,ExtensionFileComparator.EXTENSION_COMPARATOR) @TO@ comparator=new CompositeFileComparator(new AbstractFileComparator[]{SizeFileComparator.SIZE_COMPARATOR,ExtensionFileComparator.EXTENSION_COMPARATOR}) @AT@ 1432 @LENGTH@ 171
------UPD ClassInstanceCreation@@CompositeFileComparator[SizeFileComparator.SIZE_COMPARATOR, ExtensionFileComparator.EXTENSION_COMPARATOR] @TO@ CompositeFileComparator[new AbstractFileComparator[]{SizeFileComparator.SIZE_COMPARATOR,ExtensionFileComparator.EXTENSION_COMPARATOR}] @AT@ 1445 @LENGTH@ 158
---------DEL QualifiedName@@SizeFileComparator.SIZE_COMPARATOR @AT@ 1473 @LENGTH@ 34
---------INS ArrayCreation@@new AbstractFileComparator[]{SizeFileComparator.SIZE_COMPARATOR,ExtensionFileComparator.EXTENSION_COMPARATOR} @TO@ ClassInstanceCreation@@CompositeFileComparator[SizeFileComparator.SIZE_COMPARATOR, ExtensionFileComparator.EXTENSION_COMPARATOR] @AT@ 1490 @LENGTH@ 152
------------INS ArrayType@@AbstractFileComparator[] @TO@ ArrayCreation@@new AbstractFileComparator[]{SizeFileComparator.SIZE_COMPARATOR,ExtensionFileComparator.EXTENSION_COMPARATOR} @AT@ 1494 @LENGTH@ 24
---------------INS SimpleType@@AbstractFileComparator @TO@ ArrayType@@AbstractFileComparator[] @AT@ 1494 @LENGTH@ 22
------------INS ArrayInitializer@@{SizeFileComparator.SIZE_COMPARATOR,ExtensionFileComparator.EXTENSION_COMPARATOR} @TO@ ArrayCreation@@new AbstractFileComparator[]{SizeFileComparator.SIZE_COMPARATOR,ExtensionFileComparator.EXTENSION_COMPARATOR} @AT@ 1519 @LENGTH@ 123
---------------INS QualifiedName@@SizeFileComparator.SIZE_COMPARATOR @TO@ ArrayInitializer@@{SizeFileComparator.SIZE_COMPARATOR,ExtensionFileComparator.EXTENSION_COMPARATOR} @AT@ 1541 @LENGTH@ 34
------------------MOV SimpleName@@SizeFileComparator @TO@ QualifiedName@@SizeFileComparator.SIZE_COMPARATOR @AT@ 1473 @LENGTH@ 18
------------------MOV SimpleName@@SIZE_COMPARATOR @TO@ QualifiedName@@SizeFileComparator.SIZE_COMPARATOR @AT@ 1492 @LENGTH@ 15
---------------INS QualifiedName@@ExtensionFileComparator.EXTENSION_COMPARATOR @TO@ ArrayInitializer@@{SizeFileComparator.SIZE_COMPARATOR,ExtensionFileComparator.EXTENSION_COMPARATOR} @AT@ 1597 @LENGTH@ 44
------------------MOV SimpleName@@ExtensionFileComparator @TO@ QualifiedName@@ExtensionFileComparator.EXTENSION_COMPARATOR @AT@ 1558 @LENGTH@ 23
------------------MOV SimpleName@@EXTENSION_COMPARATOR @TO@ QualifiedName@@ExtensionFileComparator.EXTENSION_COMPARATOR @AT@ 1582 @LENGTH@ 20
---------DEL QualifiedName@@ExtensionFileComparator.EXTENSION_COMPARATOR @AT@ 1558 @LENGTH@ 44


UPD IfStatement@@if (handler != null) {  try {    handler.onReply(correlationID,message);  }  finally {    correlation.remove(correlationID);  }} else {  log.warn("Reply received for unknown correlationID [{}]. The message will be ignored: {}",correlationID,message);} @TO@ if (handler != null) {  correlation.remove(correlationID);  handler.onReply(correlationID,message);} else {  log.warn("Reply received for unknown correlationID [{}]. The message will be ignored: {}",correlationID,message);} @AT@ 3129 @LENGTH@ 558
---DEL Block@@ThenBody:{  try {    handler.onReply(correlationID,message);  }  finally {    correlation.remove(correlationID);  }} @AT@ 3150 @LENGTH@ 175
------DEL TryStatement@@try {  handler.onReply(correlationID,message);}  finally {  correlation.remove(correlationID);} @AT@ 3164 @LENGTH@ 151
---MOV Block@@FinallyBody:{  correlation.remove(correlationID);} @TO@ IfStatement@@if (handler != null) {  try {    handler.onReply(correlationID,message);  }  finally {    correlation.remove(correlationID);  }} else {  log.warn("Reply received for unknown correlationID [{}]. The message will be ignored: {}",correlationID,message);} @AT@ 3249 @LENGTH@ 66
------MOV ExpressionStatement@@MethodInvocation:handler.onReply(correlationID,message) @TO@ Block@@FinallyBody:{  correlation.remove(correlationID);} @AT@ 3186 @LENGTH@ 40


INS MethodDeclaration@@public, boolean, MethodName:quoteEmbeddedNodes,  @TO@ TypeDeclaration@@[public]LiteralExpression, BaseSimpleNode[LiteralNode] @AT@ 1528 @LENGTH@ 404
---INS Modifier@@public @TO@ MethodDeclaration@@public, boolean, MethodName:quoteEmbeddedNodes,  @AT@ 1528 @LENGTH@ 6
---INS PrimitiveType@@boolean @TO@ MethodDeclaration@@public, boolean, MethodName:quoteEmbeddedNodes,  @AT@ 1535 @LENGTH@ 7
---INS SimpleName@@MethodName:quoteEmbeddedNodes @TO@ MethodDeclaration@@public, boolean, MethodName:quoteEmbeddedNodes,  @AT@ 1543 @LENGTH@ 18
---INS ReturnStatement@@MethodInvocation:text.toString().startsWith("bean:") @TO@ MethodDeclaration@@public, boolean, MethodName:quoteEmbeddedNodes,  @AT@ 1883 @LENGTH@ 43
------INS MethodInvocation@@text.toString().startsWith("bean:") @TO@ ReturnStatement@@MethodInvocation:text.toString().startsWith("bean:") @AT@ 1890 @LENGTH@ 35
---------INS MethodInvocation@@MethodName:toString:[] @TO@ MethodInvocation@@text.toString().startsWith("bean:") @AT@ 1890 @LENGTH@ 15
---------INS SimpleName@@Name:text @TO@ MethodInvocation@@text.toString().startsWith("bean:") @AT@ 1890 @LENGTH@ 4
---------INS SimpleName@@MethodName:startsWith:["bean:"] @TO@ MethodInvocation@@text.toString().startsWith("bean:") @AT@ 1906 @LENGTH@ 19
------------INS StringLiteral@@"bean:" @TO@ SimpleName@@MethodName:startsWith:["bean:"] @AT@ 1917 @LENGTH@ 7


INS IfStatement@@if (!getChannels().isEmpty() || !getPatterns().isEmpty()) {  subscriber.close();} @TO@ MethodDeclaration@@protected, void, MethodName:doClose,  @AT@ 1350 @LENGTH@ 85
---INS InfixExpression@@!getChannels().isEmpty() || !getPatterns().isEmpty() @TO@ IfStatement@@if (!getChannels().isEmpty() || !getPatterns().isEmpty()) {  subscriber.close();} @AT@ 1353 @LENGTH@ 52
------INS PrefixExpression@@!getChannels().isEmpty() @TO@ InfixExpression@@!getChannels().isEmpty() || !getPatterns().isEmpty() @AT@ 1353 @LENGTH@ 24
---------INS Operator@@! @TO@ PrefixExpression@@!getChannels().isEmpty() @AT@ 1353 @LENGTH@ 1
---------INS MethodInvocation@@getChannels().isEmpty() @TO@ PrefixExpression@@!getChannels().isEmpty() @AT@ 1354 @LENGTH@ 23
------------INS MethodInvocation@@MethodName:getChannels:[] @TO@ MethodInvocation@@getChannels().isEmpty() @AT@ 1354 @LENGTH@ 13
------------INS SimpleName@@MethodName:isEmpty:[] @TO@ MethodInvocation@@getChannels().isEmpty() @AT@ 1368 @LENGTH@ 9
------INS Operator@@|| @TO@ InfixExpression@@!getChannels().isEmpty() || !getPatterns().isEmpty() @AT@ 1377 @LENGTH@ 2
------INS PrefixExpression@@!getPatterns().isEmpty() @TO@ InfixExpression@@!getChannels().isEmpty() || !getPatterns().isEmpty() @AT@ 1381 @LENGTH@ 24
---------INS Operator@@! @TO@ PrefixExpression@@!getPatterns().isEmpty() @AT@ 1381 @LENGTH@ 1
---------INS MethodInvocation@@getPatterns().isEmpty() @TO@ PrefixExpression@@!getPatterns().isEmpty() @AT@ 1382 @LENGTH@ 23
------------INS MethodInvocation@@MethodName:getPatterns:[] @TO@ MethodInvocation@@getPatterns().isEmpty() @AT@ 1382 @LENGTH@ 13
------------INS SimpleName@@MethodName:isEmpty:[] @TO@ MethodInvocation@@getPatterns().isEmpty() @AT@ 1396 @LENGTH@ 9
---INS Block@@ThenBody:{  subscriber.close();} @TO@ IfStatement@@if (!getChannels().isEmpty() || !getPatterns().isEmpty()) {  subscriber.close();} @AT@ 1407 @LENGTH@ 28
------MOV ExpressionStatement@@MethodInvocation:subscriber.close() @TO@ Block@@ThenBody:{  subscriber.close();} @AT@ 1350 @LENGTH@ 19


UPD ExpressionStatement@@MethodInvocation:client.discard() @TO@ MethodInvocation:transaction.discard() @AT@ 13453 @LENGTH@ 17
---UPD MethodInvocation@@client.discard() @TO@ transaction.discard() @AT@ 13453 @LENGTH@ 16
------UPD SimpleName@@Name:client @TO@ Name:transaction @AT@ 13453 @LENGTH@ 6


INS FieldDeclaration@@private, final, List<String>, [discardedOperations=new LinkedList<String>()] @TO@ TypeDeclaration@@ResourceTransformationDescriptionBuilderImpl, AbstractTransformationDescriptionBuilder[ResourceTransformationDescriptionBuilder] @AT@ 1780 @LENGTH@ 74
---INS Modifier@@private @TO@ FieldDeclaration@@private, final, List<String>, [discardedOperations=new LinkedList<String>()] @AT@ 1780 @LENGTH@ 7
---INS Modifier@@final @TO@ FieldDeclaration@@private, final, List<String>, [discardedOperations=new LinkedList<String>()] @AT@ 1788 @LENGTH@ 5
---INS ParameterizedType@@List<String> @TO@ FieldDeclaration@@private, final, List<String>, [discardedOperations=new LinkedList<String>()] @AT@ 1794 @LENGTH@ 12
------INS SimpleType@@List @TO@ ParameterizedType@@List<String> @AT@ 1794 @LENGTH@ 4
------INS SimpleType@@String @TO@ ParameterizedType@@List<String> @AT@ 1799 @LENGTH@ 6
---INS VariableDeclarationFragment@@discardedOperations=new LinkedList<String>() @TO@ FieldDeclaration@@private, final, List<String>, [discardedOperations=new LinkedList<String>()] @AT@ 1807 @LENGTH@ 46
------INS SimpleName@@discardedOperations @TO@ VariableDeclarationFragment@@discardedOperations=new LinkedList<String>() @AT@ 1807 @LENGTH@ 19
------INS ClassInstanceCreation@@LinkedList<String>[] @TO@ VariableDeclarationFragment@@discardedOperations=new LinkedList<String>() @AT@ 1829 @LENGTH@ 24
---------INS New@@new @TO@ ClassInstanceCreation@@LinkedList<String>[] @AT@ 1829 @LENGTH@ 3
---------INS ParameterizedType@@LinkedList<String> @TO@ ClassInstanceCreation@@LinkedList<String>[] @AT@ 1833 @LENGTH@ 18
------------INS SimpleType@@LinkedList @TO@ ParameterizedType@@LinkedList<String> @AT@ 1833 @LENGTH@ 10
------------INS SimpleType@@String @TO@ ParameterizedType@@LinkedList<String> @AT@ 1844 @LENGTH@ 6


UPD IfStatement@@if (results.hasNext() == false) {  break;} @TO@ if (!results.hasNext()) {  break;} @AT@ 3274 @LENGTH@ 70
---DEL InfixExpression@@results.hasNext() == false @AT@ 3278 @LENGTH@ 26
------DEL MethodInvocation@@results.hasNext() @AT@ 3278 @LENGTH@ 17
------DEL Operator@@== @AT@ 3295 @LENGTH@ 2
------DEL BooleanLiteral@@false @AT@ 3299 @LENGTH@ 5
---INS PrefixExpression@@!results.hasNext() @TO@ IfStatement@@if (results.hasNext() == false) {  break;} @AT@ 3278 @LENGTH@ 18
------INS Operator@@! @TO@ PrefixExpression@@!results.hasNext() @AT@ 3278 @LENGTH@ 1
------INS MethodInvocation@@results.hasNext() @TO@ PrefixExpression@@!results.hasNext() @AT@ 3279 @LENGTH@ 17
---------MOV SimpleName@@Name:results @TO@ MethodInvocation@@results.hasNext() @AT@ 3278 @LENGTH@ 7
---------MOV SimpleName@@MethodName:hasNext:[] @TO@ MethodInvocation@@results.hasNext() @AT@ 3286 @LENGTH@ 9


UPD TypeDeclaration@@[@RunWith(SpringJUnit4ClassRunner.class), @ContextConfiguration, public]ToolTests,  @TO@ [@RunWith(SpringJUnit4ClassRunner.class), @ContextConfiguration, @DirtiesContext(classMode=DirtiesContext.ClassMode.AFTER_EACH_TEST_METHOD), public]ToolTests,  @AT@ 1300 @LENGTH@ 2573
---INS NormalAnnotation@@@DirtiesContext(classMode=DirtiesContext.ClassMode.AFTER_EACH_TEST_METHOD) @TO@ TypeDeclaration@@[@RunWith(SpringJUnit4ClassRunner.class), @ContextConfiguration, public]ToolTests,  @AT@ 1421 @LENGTH@ 76


UPD ExpressionStatement@@MethodInvocation:Assert.assertEquals(node1 + "\n" + node2,keys1.toString(),keys2.toString()) @TO@ MethodInvocation:Assert.assertEquals(getCompareStackAsString(stack) + ": " + node1+ "\n"+ node2,keys1.toString(),keys2.toString()) @AT@ 15007 @LENGTH@ 78
---UPD MethodInvocation@@Assert.assertEquals(node1 + "\n" + node2,keys1.toString(),keys2.toString()) @TO@ Assert.assertEquals(getCompareStackAsString(stack) + ": " + node1+ "\n"+ node2,keys1.toString(),keys2.toString()) @AT@ 15007 @LENGTH@ 77
------UPD SimpleName@@MethodName:assertEquals:[node1 + "\n" + node2, keys1.toString(), keys2.toString()] @TO@ MethodName:assertEquals:[getCompareStackAsString(stack) + ": " + node1+ "\n"+ node2, keys1.toString(), keys2.toString()] @AT@ 15014 @LENGTH@ 70
---------UPD InfixExpression@@node1 + "\n" + node2 @TO@ getCompareStackAsString(stack) + ": " + node1+ "\n"+ node2 @AT@ 15027 @LENGTH@ 20
------------DEL SimpleName@@node1 @AT@ 15027 @LENGTH@ 5
------------INS MethodInvocation@@getCompareStackAsString(stack) @TO@ InfixExpression@@node1 + "\n" + node2 @AT@ 15027 @LENGTH@ 30
---------------INS SimpleName@@MethodName:getCompareStackAsString:[stack] @TO@ MethodInvocation@@getCompareStackAsString(stack) @AT@ 15027 @LENGTH@ 30
------------------INS SimpleName@@stack @TO@ SimpleName@@MethodName:getCompareStackAsString:[stack] @AT@ 15051 @LENGTH@ 5
------------INS StringLiteral@@": " @TO@ InfixExpression@@node1 + "\n" + node2 @AT@ 15060 @LENGTH@ 4
------------INS SimpleName@@node1 @TO@ InfixExpression@@node1 + "\n" + node2 @AT@ 15067 @LENGTH@ 5


INS MethodDeclaration@@public, static, PathAddress, MethodName:pathAddress, String key, String value,  @TO@ TypeDeclaration@@[public]PathAddress, [Iterable<PathElement>] @AT@ 5125 @LENGTH@ 136
---INS Modifier@@public @TO@ MethodDeclaration@@public, static, PathAddress, MethodName:pathAddress, String key, String value,  @AT@ 5125 @LENGTH@ 6
---INS Modifier@@static @TO@ MethodDeclaration@@public, static, PathAddress, MethodName:pathAddress, String key, String value,  @AT@ 5132 @LENGTH@ 6
---INS SimpleType@@PathAddress @TO@ MethodDeclaration@@public, static, PathAddress, MethodName:pathAddress, String key, String value,  @AT@ 5139 @LENGTH@ 11
---INS SimpleName@@MethodName:pathAddress @TO@ MethodDeclaration@@public, static, PathAddress, MethodName:pathAddress, String key, String value,  @AT@ 5151 @LENGTH@ 11
---INS SingleVariableDeclaration@@String key @TO@ MethodDeclaration@@public, static, PathAddress, MethodName:pathAddress, String key, String value,  @AT@ 5163 @LENGTH@ 10
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String key @AT@ 5163 @LENGTH@ 6
------INS SimpleName@@key @TO@ SingleVariableDeclaration@@String key @AT@ 5170 @LENGTH@ 3
---INS SingleVariableDeclaration@@String value @TO@ MethodDeclaration@@public, static, PathAddress, MethodName:pathAddress, String key, String value,  @AT@ 5175 @LENGTH@ 12
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String value @AT@ 5175 @LENGTH@ 6
------INS SimpleName@@value @TO@ SingleVariableDeclaration@@String value @AT@ 5182 @LENGTH@ 5
---INS ReturnStatement@@MethodInvocation:pathAddress(PathElement.pathElement(key,value)) @TO@ MethodDeclaration@@public, static, PathAddress, MethodName:pathAddress, String key, String value,  @AT@ 5199 @LENGTH@ 56
------INS MethodInvocation@@pathAddress(PathElement.pathElement(key,value)) @TO@ ReturnStatement@@MethodInvocation:pathAddress(PathElement.pathElement(key,value)) @AT@ 5206 @LENGTH@ 48
---------INS SimpleName@@MethodName:pathAddress:[PathElement.pathElement(key,value)] @TO@ MethodInvocation@@pathAddress(PathElement.pathElement(key,value)) @AT@ 5206 @LENGTH@ 48
------------INS MethodInvocation@@PathElement.pathElement(key,value) @TO@ SimpleName@@MethodName:pathAddress:[PathElement.pathElement(key,value)] @AT@ 5218 @LENGTH@ 35
---------------INS SimpleName@@Name:PathElement @TO@ MethodInvocation@@PathElement.pathElement(key,value) @AT@ 5218 @LENGTH@ 11
---------------INS SimpleName@@MethodName:pathElement:[key, value] @TO@ MethodInvocation@@PathElement.pathElement(key,value) @AT@ 5230 @LENGTH@ 23
------------------INS SimpleName@@key @TO@ SimpleName@@MethodName:pathElement:[key, value] @AT@ 5242 @LENGTH@ 3
------------------INS SimpleName@@value @TO@ SimpleName@@MethodName:pathElement:[key, value] @AT@ 5247 @LENGTH@ 5


DEL MethodDeclaration@@public, void, MethodName:testUnwatch, Exception,  @AT@ 1645 @LENGTH@ 47
---DEL Modifier@@public @AT@ 1645 @LENGTH@ 6
---DEL PrimitiveType@@void @AT@ 1652 @LENGTH@ 4
---DEL SimpleName@@MethodName:testUnwatch @AT@ 1657 @LENGTH@ 11
---DEL SimpleType@@Exception @AT@ 1678 @LENGTH@ 9


INS MethodDeclaration@@public, String, MethodName:toJson,  @TO@ TypeDeclaration@@[public]ParameterConfiguration,  @AT@ 2158 @LENGTH@ 310
---INS Modifier@@public @TO@ MethodDeclaration@@public, String, MethodName:toJson,  @AT@ 2158 @LENGTH@ 6
---INS SimpleType@@String @TO@ MethodDeclaration@@public, String, MethodName:toJson,  @AT@ 2165 @LENGTH@ 6
---INS SimpleName@@MethodName:toJson @TO@ MethodDeclaration@@public, String, MethodName:toJson,  @AT@ 2172 @LENGTH@ 6
---INS VariableDeclarationStatement@@String typeName=parameterType.getCanonicalName(); @TO@ MethodDeclaration@@public, String, MethodName:toJson,  @AT@ 2191 @LENGTH@ 51
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String typeName=parameterType.getCanonicalName(); @AT@ 2191 @LENGTH@ 6
------INS VariableDeclarationFragment@@typeName=parameterType.getCanonicalName() @TO@ VariableDeclarationStatement@@String typeName=parameterType.getCanonicalName(); @AT@ 2198 @LENGTH@ 43
---------INS SimpleName@@typeName @TO@ VariableDeclarationFragment@@typeName=parameterType.getCanonicalName() @AT@ 2198 @LENGTH@ 8
---------INS MethodInvocation@@parameterType.getCanonicalName() @TO@ VariableDeclarationFragment@@typeName=parameterType.getCanonicalName() @AT@ 2209 @LENGTH@ 32
------------INS SimpleName@@Name:parameterType @TO@ MethodInvocation@@parameterType.getCanonicalName() @AT@ 2209 @LENGTH@ 13
------------INS SimpleName@@MethodName:getCanonicalName:[] @TO@ MethodInvocation@@parameterType.getCanonicalName() @AT@ 2223 @LENGTH@ 18
---INS ReturnStatement@@InfixExpression:doubleQuote(name) + ": { \"typeName\": " + doubleQuote(typeName)+ " }" @TO@ MethodDeclaration@@public, String, MethodName:toJson,  @AT@ 2383 @LENGTH@ 79
------INS InfixExpression@@doubleQuote(name) + ": { \"typeName\": " + doubleQuote(typeName)+ " }" @TO@ ReturnStatement@@InfixExpression:doubleQuote(name) + ": { \"typeName\": " + doubleQuote(typeName)+ " }" @AT@ 2390 @LENGTH@ 71
---------INS MethodInvocation@@doubleQuote(name) @TO@ InfixExpression@@doubleQuote(name) + ": { \"typeName\": " + doubleQuote(typeName)+ " }" @AT@ 2390 @LENGTH@ 17
------------INS SimpleName@@MethodName:doubleQuote:[name] @TO@ MethodInvocation@@doubleQuote(name) @AT@ 2390 @LENGTH@ 17
---------------INS SimpleName@@name @TO@ SimpleName@@MethodName:doubleQuote:[name] @AT@ 2402 @LENGTH@ 4
---------INS Operator@@+ @TO@ InfixExpression@@doubleQuote(name) + ": { \"typeName\": " + doubleQuote(typeName)+ " }" @AT@ 2407 @LENGTH@ 1
---------INS StringLiteral@@": { \"typeName\": " @TO@ InfixExpression@@doubleQuote(name) + ": { \"typeName\": " + doubleQuote(typeName)+ " }" @AT@ 2410 @LENGTH@ 20
---------INS MethodInvocation@@doubleQuote(typeName) @TO@ InfixExpression@@doubleQuote(name) + ": { \"typeName\": " + doubleQuote(typeName)+ " }" @AT@ 2433 @LENGTH@ 21
------------INS SimpleName@@MethodName:doubleQuote:[typeName] @TO@ MethodInvocation@@doubleQuote(typeName) @AT@ 2433 @LENGTH@ 21
---------------INS SimpleName@@typeName @TO@ SimpleName@@MethodName:doubleQuote:[typeName] @AT@ 2445 @LENGTH@ 8
---------INS StringLiteral@@" }" @TO@ InfixExpression@@doubleQuote(name) + ": { \"typeName\": " + doubleQuote(typeName)+ " }" @AT@ 2457 @LENGTH@ 4


UPD IfStatement@@if (address.size() > 0 && MetricKeys.CHANNEL.equals(address.getElement(0).getKey())) {  if (address.size() > 1) {    throw new NoSuchResourceException(address.getElement(1));  }  String name=address.getElement(0).getValue();  ServiceName serviceName=getServiceNameFromName(name);  ServiceController serviceController=registry.getService(serviceName);  assert serviceController != null;  return new ChannelInstanceResource(serviceController);} else {  return delegate.navigate(address);} @TO@ if (address.size() > 0 && MetricKeys.CHANNEL.equals(address.getElement(0).getKey())) {  if (address.size() > 1) {    throw new NoSuchResourceException(address.getElement(1));  }  if (!hasChannel(address.getElement(0))) {    throw new NoSuchResourceException(address.getElement(0));  }  String name=address.getElement(0).getValue();  ServiceName serviceName=getServiceNameFromName(name);  ServiceController serviceController=registry.getService(serviceName);  assert serviceController != null;  return new ChannelInstanceResource(serviceController);} else {  return delegate.navigate(address);} @AT@ 4851 @LENGTH@ 662
---UPD Block@@ThenBody:{  if (address.size() > 1) {    throw new NoSuchResourceException(address.getElement(1));  }  String name=address.getElement(0).getValue();  ServiceName serviceName=getServiceNameFromName(name);  ServiceController serviceController=registry.getService(serviceName);  assert serviceController != null;  return new ChannelInstanceResource(serviceController);} @TO@ ThenBody:{  if (address.size() > 1) {    throw new NoSuchResourceException(address.getElement(1));  }  if (!hasChannel(address.getElement(0))) {    throw new NoSuchResourceException(address.getElement(0));  }  String name=address.getElement(0).getValue();  ServiceName serviceName=getServiceNameFromName(name);  ServiceController serviceController=registry.getService(serviceName);  assert serviceController != null;  return new ChannelInstanceResource(serviceController);} @AT@ 4936 @LENGTH@ 513
------INS IfStatement@@if (!hasChannel(address.getElement(0))) {  throw new NoSuchResourceException(address.getElement(0));} @TO@ Block@@ThenBody:{  if (address.size() > 1) {    throw new NoSuchResourceException(address.getElement(1));  }  String name=address.getElement(0).getValue();  ServiceName serviceName=getServiceNameFromName(name);  ServiceController serviceController=registry.getService(serviceName);  assert serviceController != null;  return new ChannelInstanceResource(serviceController);} @AT@ 5147 @LENGTH@ 129
---------INS PrefixExpression@@!hasChannel(address.getElement(0)) @TO@ IfStatement@@if (!hasChannel(address.getElement(0))) {  throw new NoSuchResourceException(address.getElement(0));} @AT@ 5151 @LENGTH@ 34
------------INS Operator@@! @TO@ PrefixExpression@@!hasChannel(address.getElement(0)) @AT@ 5151 @LENGTH@ 1
------------INS MethodInvocation@@hasChannel(address.getElement(0)) @TO@ PrefixExpression@@!hasChannel(address.getElement(0)) @AT@ 5152 @LENGTH@ 33
---------------INS SimpleName@@MethodName:hasChannel:[address.getElement(0)] @TO@ MethodInvocation@@hasChannel(address.getElement(0)) @AT@ 5152 @LENGTH@ 33
------------------INS MethodInvocation@@address.getElement(0) @TO@ SimpleName@@MethodName:hasChannel:[address.getElement(0)] @AT@ 5163 @LENGTH@ 21
---------------------INS SimpleName@@Name:address @TO@ MethodInvocation@@address.getElement(0) @AT@ 5163 @LENGTH@ 7
---------------------INS SimpleName@@MethodName:getElement:[0] @TO@ MethodInvocation@@address.getElement(0) @AT@ 5171 @LENGTH@ 13
------------------------INS NumberLiteral@@0 @TO@ SimpleName@@MethodName:getElement:[0] @AT@ 5182 @LENGTH@ 1
---------INS Block@@ThenBody:{  throw new NoSuchResourceException(address.getElement(0));} @TO@ IfStatement@@if (!hasChannel(address.getElement(0))) {  throw new NoSuchResourceException(address.getElement(0));} @AT@ 5187 @LENGTH@ 89
------------INS ThrowStatement@@ClassInstanceCreation:new NoSuchResourceException(address.getElement(0)) @TO@ Block@@ThenBody:{  throw new NoSuchResourceException(address.getElement(0));} @AT@ 5205 @LENGTH@ 57
---------------INS ClassInstanceCreation@@NoSuchResourceException[address.getElement(0)] @TO@ ThrowStatement@@ClassInstanceCreation:new NoSuchResourceException(address.getElement(0)) @AT@ 5211 @LENGTH@ 50
------------------INS New@@new @TO@ ClassInstanceCreation@@NoSuchResourceException[address.getElement(0)] @AT@ 5211 @LENGTH@ 3
------------------INS SimpleType@@NoSuchResourceException @TO@ ClassInstanceCreation@@NoSuchResourceException[address.getElement(0)] @AT@ 5215 @LENGTH@ 23
------------------INS MethodInvocation@@address.getElement(0) @TO@ ClassInstanceCreation@@NoSuchResourceException[address.getElement(0)] @AT@ 5239 @LENGTH@ 21
---------------------INS SimpleName@@Name:address @TO@ MethodInvocation@@address.getElement(0) @AT@ 5239 @LENGTH@ 7
---------------------INS SimpleName@@MethodName:getElement:[0] @TO@ MethodInvocation@@address.getElement(0) @AT@ 5247 @LENGTH@ 13
------------------------INS NumberLiteral@@0 @TO@ SimpleName@@MethodName:getElement:[0] @AT@ 5258 @LENGTH@ 1


DEL VariableDeclarationStatement@@FabricPublisherEndpoint endpoint=(FabricPublisherEndpoint)registeredRoutes.get(0).getEndpoint(); @AT@ 2433 @LENGTH@ 99
---DEL SimpleType@@FabricPublisherEndpoint @AT@ 2433 @LENGTH@ 23
---DEL VariableDeclarationFragment@@endpoint=(FabricPublisherEndpoint)registeredRoutes.get(0).getEndpoint() @AT@ 2457 @LENGTH@ 74
------DEL SimpleName@@endpoint @AT@ 2457 @LENGTH@ 8
------DEL CastExpression@@(FabricPublisherEndpoint)registeredRoutes.get(0).getEndpoint() @AT@ 2468 @LENGTH@ 63
---------DEL SimpleType@@FabricPublisherEndpoint @AT@ 2469 @LENGTH@ 23
---------DEL MethodInvocation@@registeredRoutes.get(0).getEndpoint() @AT@ 2494 @LENGTH@ 37
------------DEL MethodInvocation@@MethodName:get:[0] @AT@ 2494 @LENGTH@ 23
---------------DEL NumberLiteral@@0 @AT@ 2515 @LENGTH@ 1
------------DEL SimpleName@@Name:registeredRoutes @AT@ 2494 @LENGTH@ 16
------------DEL SimpleName@@MethodName:getEndpoint:[] @AT@ 2518 @LENGTH@ 13


UPD IfStatement@@if (payload.getBodySources().size() == 1) {  if (type.isAssignableFrom(Document.class)) {    Source s=payload.getBodySources().get(0);    Document d;    try {      d=StaxUtils.read(s);    } catch (    XMLStreamException e) {      throw new RuntimeException(e);    }    payload.getBodySources().set(0,new DOMSource(d.getDocumentElement()));    return type.cast(d);  }  TypeConverter tc=registry.lookup(type,Source.class);  if (tc != null) {    Source s=payload.getBodySources().get(0);    if (type.isInstance(s)) {      return type.cast(s);    }    if ((s instanceof StreamSource || s instanceof SAXSource) && !type.isAssignableFrom(Document.class) && !type.isAssignableFrom(Source.class)) {      Document d;      try {        d=StaxUtils.read(s);      } catch (      XMLStreamException e) {        throw new RuntimeException(e);      }      s=new DOMSource(d.getDocumentElement());      payload.getBodySources().set(0,s);    }    T t=tc.convertTo(type,s);    if (t instanceof Document) {      payload.getBodySources().set(0,new DOMSource(((Document)t).getDocumentElement()));    } else     if (t instanceof Source) {      payload.getBodySources().set(0,(Source)t);    }    return t;  }} @TO@ if (payload.getBodySources() != null && payload.getBodySources().size() == 1) {  if (type.isAssignableFrom(Document.class)) {    Source s=payload.getBodySources().get(0);    Document d;    try {      d=StaxUtils.read(s);    } catch (    XMLStreamException e) {      throw new RuntimeException(e);    }    payload.getBodySources().set(0,new DOMSource(d.getDocumentElement()));    return type.cast(d);  }  TypeConverter tc=registry.lookup(type,Source.class);  if (tc != null) {    Source s=payload.getBodySources().get(0);    if (type.isInstance(s)) {      return type.cast(s);    }    if ((s instanceof StreamSource || s instanceof SAXSource) && !type.isAssignableFrom(Document.class) && !type.isAssignableFrom(Source.class)) {      Document d;      try {        d=StaxUtils.read(s);      } catch (      XMLStreamException e) {        throw new RuntimeException(e);      }      s=new DOMSource(d.getDocumentElement());      payload.getBodySources().set(0,s);    }    T t=tc.convertTo(type,s);    if (t instanceof Document) {      payload.getBodySources().set(0,new DOMSource(((Document)t).getDocumentElement()));    } else     if (t instanceof Source) {      payload.getBodySources().set(0,(Source)t);    }    return t;  }} @AT@ 5745 @LENGTH@ 2080
---INS InfixExpression@@payload.getBodySources() != null && payload.getBodySources().size() == 1 @TO@ IfStatement@@if (payload.getBodySources().size() == 1) {  if (type.isAssignableFrom(Document.class)) {    Source s=payload.getBodySources().get(0);    Document d;    try {      d=StaxUtils.read(s);    } catch (    XMLStreamException e) {      throw new RuntimeException(e);    }    payload.getBodySources().set(0,new DOMSource(d.getDocumentElement()));    return type.cast(d);  }  TypeConverter tc=registry.lookup(type,Source.class);  if (tc != null) {    Source s=payload.getBodySources().get(0);    if (type.isInstance(s)) {      return type.cast(s);    }    if ((s instanceof StreamSource || s instanceof SAXSource) && !type.isAssignableFrom(Document.class) && !type.isAssignableFrom(Source.class)) {      Document d;      try {        d=StaxUtils.read(s);      } catch (      XMLStreamException e) {        throw new RuntimeException(e);      }      s=new DOMSource(d.getDocumentElement());      payload.getBodySources().set(0,s);    }    T t=tc.convertTo(type,s);    if (t instanceof Document) {      payload.getBodySources().set(0,new DOMSource(((Document)t).getDocumentElement()));    } else     if (t instanceof Source) {      payload.getBodySources().set(0,(Source)t);    }    return t;  }} @AT@ 5749 @LENGTH@ 89
------MOV InfixExpression@@payload.getBodySources().size() == 1 @TO@ InfixExpression@@payload.getBodySources() != null && payload.getBodySources().size() == 1 @AT@ 5749 @LENGTH@ 36
------INS InfixExpression@@payload.getBodySources() != null @TO@ InfixExpression@@payload.getBodySources() != null && payload.getBodySources().size() == 1 @AT@ 5749 @LENGTH@ 32
---------INS MethodInvocation@@payload.getBodySources() @TO@ InfixExpression@@payload.getBodySources() != null @AT@ 5749 @LENGTH@ 24
------------INS SimpleName@@Name:payload @TO@ MethodInvocation@@payload.getBodySources() @AT@ 5749 @LENGTH@ 7
------------INS SimpleName@@MethodName:getBodySources:[] @TO@ MethodInvocation@@payload.getBodySources() @AT@ 5757 @LENGTH@ 16
---------INS Operator@@!= @TO@ InfixExpression@@payload.getBodySources() != null @AT@ 5773 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@payload.getBodySources() != null @AT@ 5777 @LENGTH@ 4
------INS Operator@@&& @TO@ InfixExpression@@payload.getBodySources() != null && payload.getBodySources().size() == 1 @AT@ 5781 @LENGTH@ 2


INS MethodDeclaration@@public, void, MethodName:testZRevRangeByScoreWithScoresOffsetCount,  @TO@ TypeDeclaration@@[@RunWith(SpringJUnit4ClassRunner.class), @ContextConfiguration("SrpConnectionIntegrationTests-context.xml"), public]SrpConnectionPipelineIntegrationTests, AbstractConnectionPipelineIntegrationTests @AT@ 3257 @LENGTH@ 60
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testZRevRangeByScoreWithScoresOffsetCount,  @AT@ 3257 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testZRevRangeByScoreWithScoresOffsetCount,  @AT@ 3264 @LENGTH@ 4
---INS SimpleName@@MethodName:testZRevRangeByScoreWithScoresOffsetCount @TO@ MethodDeclaration@@public, void, MethodName:testZRevRangeByScoreWithScoresOffsetCount,  @AT@ 3269 @LENGTH@ 41


UPD MethodDeclaration@@protected, abstract, Iterator, MethodName:doPageRead,  @TO@ protected, abstract, Iterator<T>, MethodName:doPageRead,  @AT@ 834 @LENGTH@ 41
---DEL SimpleType@@Iterator @AT@ 853 @LENGTH@ 8
---INS ParameterizedType@@Iterator<T> @TO@ MethodDeclaration@@protected, abstract, Iterator, MethodName:doPageRead,  @AT@ 1832 @LENGTH@ 11
------INS SimpleType@@Iterator @TO@ ParameterizedType@@Iterator<T> @AT@ 1832 @LENGTH@ 8
------INS SimpleType@@T @TO@ ParameterizedType@@Iterator<T> @AT@ 1841 @LENGTH@ 1


UPD VariableDeclarationStatement@@final Integer elta=Integer.valueOf(17); @TO@ final Integer elta=new Integer(17); @AT@ 54546 @LENGTH@ 41
---UPD VariableDeclarationFragment@@elta=Integer.valueOf(17) @TO@ elta=new Integer(17) @AT@ 54560 @LENGTH@ 26
------DEL MethodInvocation@@Integer.valueOf(17) @AT@ 54567 @LENGTH@ 19
---------DEL SimpleName@@Name:Integer @AT@ 54567 @LENGTH@ 7
---------DEL SimpleName@@MethodName:valueOf:[17] @AT@ 54575 @LENGTH@ 11
------------DEL NumberLiteral@@17 @AT@ 54583 @LENGTH@ 2
------INS ClassInstanceCreation@@Integer[17] @TO@ VariableDeclarationFragment@@elta=Integer.valueOf(17) @AT@ 54567 @LENGTH@ 15
---------INS New@@new @TO@ ClassInstanceCreation@@Integer[17] @AT@ 54567 @LENGTH@ 3
---------INS SimpleType@@Integer @TO@ ClassInstanceCreation@@Integer[17] @AT@ 54571 @LENGTH@ 7
---------INS NumberLiteral@@17 @TO@ ClassInstanceCreation@@Integer[17] @AT@ 54579 @LENGTH@ 2


DEL MethodDeclaration@@public, void, MethodName:testZCount,  @AT@ 2827 @LENGTH@ 29
---DEL Modifier@@public @AT@ 2827 @LENGTH@ 6
---DEL PrimitiveType@@void @AT@ 2834 @LENGTH@ 4
---DEL SimpleName@@MethodName:testZCount @AT@ 2839 @LENGTH@ 10


UPD IfStatement@@if (curator.checkExists().forPath(path) != null) {  for (  String child : curator.getChildren().forPath(path)) {    deleteSafe(curator,path + "/" + child);  }  curator.delete().forPath(path);} @TO@ if (curator.checkExists().forPath(path) != null) {  for (  String child : curator.getChildren().forPath(path)) {    deleteSafe(curator,path + "/" + child);  }  try {    curator.delete().forPath(path);  } catch (  KeeperException.NotEmptyException ex) {    deleteSafe(curator,path);  }} @AT@ 7796 @LENGTH@ 246
---UPD Block@@ThenBody:{  for (  String child : curator.getChildren().forPath(path)) {    deleteSafe(curator,path + "/" + child);  }  curator.delete().forPath(path);} @TO@ ThenBody:{  for (  String child : curator.getChildren().forPath(path)) {    deleteSafe(curator,path + "/" + child);  }  try {    curator.delete().forPath(path);  } catch (  KeeperException.NotEmptyException ex) {    deleteSafe(curator,path);  }} @AT@ 7845 @LENGTH@ 197
------INS TryStatement@@try {  curator.delete().forPath(path);} catch (KeeperException.NotEmptyException ex) {  deleteSafe(curator,path);} @TO@ Block@@ThenBody:{  for (  String child : curator.getChildren().forPath(path)) {    deleteSafe(curator,path + "/" + child);  }  curator.delete().forPath(path);} @AT@ 8001 @LENGTH@ 171
---------MOV ExpressionStatement@@MethodInvocation:curator.delete().forPath(path) @TO@ TryStatement@@try {  curator.delete().forPath(path);} catch (KeeperException.NotEmptyException ex) {  deleteSafe(curator,path);} @AT@ 8001 @LENGTH@ 31
---------INS CatchClause@@catch (KeeperException.NotEmptyException ex) {  deleteSafe(curator,path);} @TO@ TryStatement@@try {  curator.delete().forPath(path);} catch (KeeperException.NotEmptyException ex) {  deleteSafe(curator,path);} @AT@ 8069 @LENGTH@ 103
------------INS SingleVariableDeclaration@@KeeperException.NotEmptyException ex @TO@ CatchClause@@catch (KeeperException.NotEmptyException ex) {  deleteSafe(curator,path);} @AT@ 8076 @LENGTH@ 36
---------------INS SimpleType@@KeeperException.NotEmptyException @TO@ SingleVariableDeclaration@@KeeperException.NotEmptyException ex @AT@ 8076 @LENGTH@ 33
---------------INS SimpleName@@ex @TO@ SingleVariableDeclaration@@KeeperException.NotEmptyException ex @AT@ 8110 @LENGTH@ 2
------------INS ExpressionStatement@@MethodInvocation:deleteSafe(curator,path) @TO@ CatchClause@@catch (KeeperException.NotEmptyException ex) {  deleteSafe(curator,path);} @AT@ 8132 @LENGTH@ 26
---------------INS MethodInvocation@@deleteSafe(curator,path) @TO@ ExpressionStatement@@MethodInvocation:deleteSafe(curator,path) @AT@ 8132 @LENGTH@ 25
------------------INS SimpleName@@MethodName:deleteSafe:[curator, path] @TO@ MethodInvocation@@deleteSafe(curator,path) @AT@ 8132 @LENGTH@ 25
---------------------INS SimpleName@@curator @TO@ SimpleName@@MethodName:deleteSafe:[curator, path] @AT@ 8143 @LENGTH@ 7
---------------------INS SimpleName@@path @TO@ SimpleName@@MethodName:deleteSafe:[curator, path] @AT@ 8152 @LENGTH@ 4


UPD TypeDeclaration@@[public]ResourceNotFoundException, Exception @TO@ [public]ResourceNotFoundException, RuntimeException @AT@ 120 @LENGTH@ 316
---UPD SimpleType@@Exception @TO@ RuntimeException @AT@ 167 @LENGTH@ 9


DEL ExpressionStatement@@MethodInvocation:Assert.assertEquals("wrong endpoint uri","seda:bar?size=10",endpoint.getChild()) @AT@ 2541 @LENGTH@ 83
---DEL MethodInvocation@@Assert.assertEquals("wrong endpoint uri","seda:bar?size=10",endpoint.getChild()) @AT@ 2541 @LENGTH@ 82
------DEL SimpleName@@Name:Assert @AT@ 2541 @LENGTH@ 6
------DEL SimpleName@@MethodName:assertEquals:["wrong endpoint uri", "seda:bar?size=10", endpoint.getChild()] @AT@ 2548 @LENGTH@ 75
---------DEL StringLiteral@@"wrong endpoint uri" @AT@ 2561 @LENGTH@ 20
---------DEL StringLiteral@@"seda:bar?size=10" @AT@ 2583 @LENGTH@ 18
---------DEL MethodInvocation@@endpoint.getChild() @AT@ 2603 @LENGTH@ 19
------------DEL SimpleName@@Name:endpoint @AT@ 2603 @LENGTH@ 8
------------DEL SimpleName@@MethodName:getChild:[] @AT@ 2612 @LENGTH@ 10


INS MethodDeclaration@@public, void, MethodName:exceptionExecuteNative, Exception,  @TO@ TypeDeclaration@@[@RunWith(SpringJUnit4ClassRunner.class), @ContextConfiguration, public]RjcConnectionPipelineIntegrationTests, AbstractConnectionPipelineIntegrationTests @AT@ 3843 @LENGTH@ 58
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:exceptionExecuteNative, Exception,  @AT@ 3843 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:exceptionExecuteNative, Exception,  @AT@ 3850 @LENGTH@ 4
---INS SimpleName@@MethodName:exceptionExecuteNative @TO@ MethodDeclaration@@public, void, MethodName:exceptionExecuteNative, Exception,  @AT@ 3855 @LENGTH@ 22
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:exceptionExecuteNative, Exception,  @AT@ 3887 @LENGTH@ 9


UPD IfStatement@@if (charFound == ' ') {} else {  day*=10;  day+=Character.digit(charFound,10);} @TO@ if (charFound != ' ') {  day*=10;  day+=Character.digit(charFound,10);} @AT@ 7420 @LENGTH@ 219
---UPD InfixExpression@@charFound == ' ' @TO@ charFound != ' ' @AT@ 7424 @LENGTH@ 16
------UPD Operator@@== @TO@ != @AT@ 7433 @LENGTH@ 2
---DEL Block@@ThenBody:{} @AT@ 7442 @LENGTH@ 106
---UPD Block@@ElseBody:{  day*=10;  day+=Character.digit(charFound,10);} @TO@ ThenBody:{  day*=10;  day+=Character.digit(charFound,10);} @AT@ 7554 @LENGTH@ 85


UPD ExpressionStatement@@Assignment:path=FileUtil.compactPath(path) @TO@ Assignment:path=FileUtil.compactPath(path,'/') @AT@ 15422 @LENGTH@ 34
---UPD Assignment@@path=FileUtil.compactPath(path) @TO@ path=FileUtil.compactPath(path,'/') @AT@ 15422 @LENGTH@ 33
------UPD MethodInvocation@@FileUtil.compactPath(path) @TO@ FileUtil.compactPath(path,'/') @AT@ 15429 @LENGTH@ 26
---------UPD SimpleName@@MethodName:compactPath:[path] @TO@ MethodName:compactPath:[path, '/'] @AT@ 15438 @LENGTH@ 17
------------INS CharacterLiteral@@'/' @TO@ SimpleName@@MethodName:compactPath:[path] @AT@ 15563 @LENGTH@ 3


UPD VariableDeclarationStatement@@Iterator initialPage=doPageRead(); @TO@ Iterator<T> initialPage=doPageRead(); @AT@ 1179 @LENGTH@ 36
---DEL SimpleType@@Iterator @AT@ 1179 @LENGTH@ 8
---INS ParameterizedType@@Iterator<T> @TO@ VariableDeclarationStatement@@Iterator initialPage=doPageRead(); @AT@ 2161 @LENGTH@ 11
------INS SimpleType@@Iterator @TO@ ParameterizedType@@Iterator<T> @AT@ 2161 @LENGTH@ 8
------INS SimpleType@@T @TO@ ParameterizedType@@Iterator<T> @AT@ 2170 @LENGTH@ 1


UPD IfStatement@@if (weldDeploymentMetadata != null) {  for (  BeanArchiveMetadata md : weldDeploymentMetadata.getBeanArchiveMetadata()) {    URL file=md.getBeansXmlFile().toURL();    existing.add(file);  }} @TO@ if (weldDeploymentMetadata != null) {  for (  BeanArchiveMetadata md : weldDeploymentMetadata.getBeanArchiveMetadata()) {    URL file=md.getBeansXmlFile().toURL();    existing.add(file);  }  if (deployment.getName().endsWith(".war")) {    ResourceRoot deploymentRoot=deployment.getAttachment(Attachments.DEPLOYMENT_ROOT);    VirtualFile beans=deploymentRoot.getRoot().getChild(META_INF_BEANS_XML);    if (beans.exists()) {      existing.add(beans.toURL());    }  }} @AT@ 4421 @LENGTH@ 287
---UPD Block@@ThenBody:{  for (  BeanArchiveMetadata md : weldDeploymentMetadata.getBeanArchiveMetadata()) {    URL file=md.getBeansXmlFile().toURL();    existing.add(file);  }} @TO@ ThenBody:{  for (  BeanArchiveMetadata md : weldDeploymentMetadata.getBeanArchiveMetadata()) {    URL file=md.getBeansXmlFile().toURL();    existing.add(file);  }  if (deployment.getName().endsWith(".war")) {    ResourceRoot deploymentRoot=deployment.getAttachment(Attachments.DEPLOYMENT_ROOT);    VirtualFile beans=deploymentRoot.getRoot().getChild(META_INF_BEANS_XML);    if (beans.exists()) {      existing.add(beans.toURL());    }  }} @AT@ 4457 @LENGTH@ 251
------INS IfStatement@@if (deployment.getName().endsWith(".war")) {  ResourceRoot deploymentRoot=deployment.getAttachment(Attachments.DEPLOYMENT_ROOT);  VirtualFile beans=deploymentRoot.getRoot().getChild(META_INF_BEANS_XML);  if (beans.exists()) {    existing.add(beans.toURL());  }} @TO@ Block@@ThenBody:{  for (  BeanArchiveMetadata md : weldDeploymentMetadata.getBeanArchiveMetadata()) {    URL file=md.getBeansXmlFile().toURL();    existing.add(file);  }} @AT@ 4804 @LENGTH@ 583
---------INS MethodInvocation@@deployment.getName().endsWith(".war") @TO@ IfStatement@@if (deployment.getName().endsWith(".war")) {  ResourceRoot deploymentRoot=deployment.getAttachment(Attachments.DEPLOYMENT_ROOT);  VirtualFile beans=deploymentRoot.getRoot().getChild(META_INF_BEANS_XML);  if (beans.exists()) {    existing.add(beans.toURL());  }} @AT@ 4807 @LENGTH@ 37
------------INS MethodInvocation@@MethodName:getName:[] @TO@ MethodInvocation@@deployment.getName().endsWith(".war") @AT@ 4807 @LENGTH@ 20
------------INS SimpleName@@Name:deployment @TO@ MethodInvocation@@deployment.getName().endsWith(".war") @AT@ 4807 @LENGTH@ 10
------------INS SimpleName@@MethodName:endsWith:[".war"] @TO@ MethodInvocation@@deployment.getName().endsWith(".war") @AT@ 4828 @LENGTH@ 16
---------------INS StringLiteral@@".war" @TO@ SimpleName@@MethodName:endsWith:[".war"] @AT@ 4837 @LENGTH@ 6
---------INS Block@@ThenBody:{  ResourceRoot deploymentRoot=deployment.getAttachment(Attachments.DEPLOYMENT_ROOT);  VirtualFile beans=deploymentRoot.getRoot().getChild(META_INF_BEANS_XML);  if (beans.exists()) {    existing.add(beans.toURL());  }} @TO@ IfStatement@@if (deployment.getName().endsWith(".war")) {  ResourceRoot deploymentRoot=deployment.getAttachment(Attachments.DEPLOYMENT_ROOT);  VirtualFile beans=deploymentRoot.getRoot().getChild(META_INF_BEANS_XML);  if (beans.exists()) {    existing.add(beans.toURL());  }} @AT@ 4846 @LENGTH@ 541
------------INS VariableDeclarationStatement@@ResourceRoot deploymentRoot=deployment.getAttachment(Attachments.DEPLOYMENT_ROOT); @TO@ Block@@ThenBody:{  ResourceRoot deploymentRoot=deployment.getAttachment(Attachments.DEPLOYMENT_ROOT);  VirtualFile beans=deploymentRoot.getRoot().getChild(META_INF_BEANS_XML);  if (beans.exists()) {    existing.add(beans.toURL());  }} @AT@ 5054 @LENGTH@ 84
---------------INS SimpleType@@ResourceRoot @TO@ VariableDeclarationStatement@@ResourceRoot deploymentRoot=deployment.getAttachment(Attachments.DEPLOYMENT_ROOT); @AT@ 5054 @LENGTH@ 12
---------------INS VariableDeclarationFragment@@deploymentRoot=deployment.getAttachment(Attachments.DEPLOYMENT_ROOT) @TO@ VariableDeclarationStatement@@ResourceRoot deploymentRoot=deployment.getAttachment(Attachments.DEPLOYMENT_ROOT); @AT@ 5067 @LENGTH@ 70
------------------INS SimpleName@@deploymentRoot @TO@ VariableDeclarationFragment@@deploymentRoot=deployment.getAttachment(Attachments.DEPLOYMENT_ROOT) @AT@ 5067 @LENGTH@ 14
------------------INS MethodInvocation@@deployment.getAttachment(Attachments.DEPLOYMENT_ROOT) @TO@ VariableDeclarationFragment@@deploymentRoot=deployment.getAttachment(Attachments.DEPLOYMENT_ROOT) @AT@ 5084 @LENGTH@ 53
---------------------INS SimpleName@@Name:deployment @TO@ MethodInvocation@@deployment.getAttachment(Attachments.DEPLOYMENT_ROOT) @AT@ 5084 @LENGTH@ 10
---------------------INS SimpleName@@MethodName:getAttachment:[Attachments.DEPLOYMENT_ROOT] @TO@ MethodInvocation@@deployment.getAttachment(Attachments.DEPLOYMENT_ROOT) @AT@ 5095 @LENGTH@ 42
------------------------INS QualifiedName@@Attachments.DEPLOYMENT_ROOT @TO@ SimpleName@@MethodName:getAttachment:[Attachments.DEPLOYMENT_ROOT] @AT@ 5109 @LENGTH@ 27
---------------------------INS SimpleName@@Attachments @TO@ QualifiedName@@Attachments.DEPLOYMENT_ROOT @AT@ 5109 @LENGTH@ 11
---------------------------INS SimpleName@@DEPLOYMENT_ROOT @TO@ QualifiedName@@Attachments.DEPLOYMENT_ROOT @AT@ 5121 @LENGTH@ 15
------------INS VariableDeclarationStatement@@VirtualFile beans=deploymentRoot.getRoot().getChild(META_INF_BEANS_XML); @TO@ Block@@ThenBody:{  ResourceRoot deploymentRoot=deployment.getAttachment(Attachments.DEPLOYMENT_ROOT);  VirtualFile beans=deploymentRoot.getRoot().getChild(META_INF_BEANS_XML);  if (beans.exists()) {    existing.add(beans.toURL());  }} @AT@ 5163 @LENGTH@ 74
---------------INS SimpleType@@VirtualFile @TO@ VariableDeclarationStatement@@VirtualFile beans=deploymentRoot.getRoot().getChild(META_INF_BEANS_XML); @AT@ 5163 @LENGTH@ 11
---------------INS VariableDeclarationFragment@@beans=deploymentRoot.getRoot().getChild(META_INF_BEANS_XML) @TO@ VariableDeclarationStatement@@VirtualFile beans=deploymentRoot.getRoot().getChild(META_INF_BEANS_XML); @AT@ 5175 @LENGTH@ 61
------------------INS SimpleName@@beans @TO@ VariableDeclarationFragment@@beans=deploymentRoot.getRoot().getChild(META_INF_BEANS_XML) @AT@ 5175 @LENGTH@ 5
------------------INS MethodInvocation@@deploymentRoot.getRoot().getChild(META_INF_BEANS_XML) @TO@ VariableDeclarationFragment@@beans=deploymentRoot.getRoot().getChild(META_INF_BEANS_XML) @AT@ 5183 @LENGTH@ 53
---------------------INS MethodInvocation@@MethodName:getRoot:[] @TO@ MethodInvocation@@deploymentRoot.getRoot().getChild(META_INF_BEANS_XML) @AT@ 5183 @LENGTH@ 24
---------------------INS SimpleName@@Name:deploymentRoot @TO@ MethodInvocation@@deploymentRoot.getRoot().getChild(META_INF_BEANS_XML) @AT@ 5183 @LENGTH@ 14
---------------------INS SimpleName@@MethodName:getChild:[META_INF_BEANS_XML] @TO@ MethodInvocation@@deploymentRoot.getRoot().getChild(META_INF_BEANS_XML) @AT@ 5208 @LENGTH@ 28
------------------------INS SimpleName@@META_INF_BEANS_XML @TO@ SimpleName@@MethodName:getChild:[META_INF_BEANS_XML] @AT@ 5217 @LENGTH@ 18
------------INS IfStatement@@if (beans.exists()) {  existing.add(beans.toURL());} @TO@ Block@@ThenBody:{  ResourceRoot deploymentRoot=deployment.getAttachment(Attachments.DEPLOYMENT_ROOT);  VirtualFile beans=deploymentRoot.getRoot().getChild(META_INF_BEANS_XML);  if (beans.exists()) {    existing.add(beans.toURL());  }} @AT@ 5262 @LENGTH@ 103
---------------INS MethodInvocation@@beans.exists() @TO@ IfStatement@@if (beans.exists()) {  existing.add(beans.toURL());} @AT@ 5265 @LENGTH@ 14
------------------INS SimpleName@@Name:beans @TO@ MethodInvocation@@beans.exists() @AT@ 5265 @LENGTH@ 5
------------------INS SimpleName@@MethodName:exists:[] @TO@ MethodInvocation@@beans.exists() @AT@ 5271 @LENGTH@ 8
---------------INS Block@@ThenBody:{  existing.add(beans.toURL());} @TO@ IfStatement@@if (beans.exists()) {  existing.add(beans.toURL());} @AT@ 5281 @LENGTH@ 84
------------------INS ExpressionStatement@@MethodInvocation:existing.add(beans.toURL()) @TO@ Block@@ThenBody:{  existing.add(beans.toURL());} @AT@ 5311 @LENGTH@ 28
---------------------INS MethodInvocation@@existing.add(beans.toURL()) @TO@ ExpressionStatement@@MethodInvocation:existing.add(beans.toURL()) @AT@ 5311 @LENGTH@ 27
------------------------INS SimpleName@@Name:existing @TO@ MethodInvocation@@existing.add(beans.toURL()) @AT@ 5311 @LENGTH@ 8
------------------------INS SimpleName@@MethodName:add:[beans.toURL()] @TO@ MethodInvocation@@existing.add(beans.toURL()) @AT@ 5320 @LENGTH@ 18
---------------------------INS MethodInvocation@@beans.toURL() @TO@ SimpleName@@MethodName:add:[beans.toURL()] @AT@ 5324 @LENGTH@ 13
------------------------------INS SimpleName@@Name:beans @TO@ MethodInvocation@@beans.toURL() @AT@ 5324 @LENGTH@ 5
------------------------------INS SimpleName@@MethodName:toURL:[] @TO@ MethodInvocation@@beans.toURL() @AT@ 5330 @LENGTH@ 7


UPD ExpressionStatement@@MethodInvocation:node.get("abc").set(BigInteger.valueOf(10)) @TO@ MethodInvocation:node.get("abc").set(new BigInteger(String.valueOf(Long.MAX_VALUE) + "0")) @AT@ 8522 @LENGTH@ 44
---UPD MethodInvocation@@node.get("abc").set(BigInteger.valueOf(10)) @TO@ node.get("abc").set(new BigInteger(String.valueOf(Long.MAX_VALUE) + "0")) @AT@ 8522 @LENGTH@ 43
------UPD SimpleName@@MethodName:set:[BigInteger.valueOf(10)] @TO@ MethodName:set:[new BigInteger(String.valueOf(Long.MAX_VALUE) + "0")] @AT@ 8538 @LENGTH@ 27
---------DEL MethodInvocation@@BigInteger.valueOf(10) @AT@ 8542 @LENGTH@ 22
---------INS ClassInstanceCreation@@BigInteger[String.valueOf(Long.MAX_VALUE) + "0"] @TO@ SimpleName@@MethodName:set:[BigInteger.valueOf(10)] @AT@ 8850 @LENGTH@ 52
------------INS New@@new @TO@ ClassInstanceCreation@@BigInteger[String.valueOf(Long.MAX_VALUE) + "0"] @AT@ 8850 @LENGTH@ 3
------------INS SimpleType@@BigInteger @TO@ ClassInstanceCreation@@BigInteger[String.valueOf(Long.MAX_VALUE) + "0"] @AT@ 8854 @LENGTH@ 10
------------INS InfixExpression@@String.valueOf(Long.MAX_VALUE) + "0" @TO@ ClassInstanceCreation@@BigInteger[String.valueOf(Long.MAX_VALUE) + "0"] @AT@ 8865 @LENGTH@ 36
---------------INS MethodInvocation@@String.valueOf(Long.MAX_VALUE) @TO@ InfixExpression@@String.valueOf(Long.MAX_VALUE) + "0" @AT@ 8865 @LENGTH@ 30
------------------MOV SimpleName@@Name:BigInteger @TO@ MethodInvocation@@String.valueOf(Long.MAX_VALUE) @AT@ 8542 @LENGTH@ 10
------------------MOV SimpleName@@MethodName:valueOf:[10] @TO@ MethodInvocation@@String.valueOf(Long.MAX_VALUE) @AT@ 8553 @LENGTH@ 11
---------------------DEL NumberLiteral@@10 @AT@ 8561 @LENGTH@ 2
---------------------INS QualifiedName@@Long.MAX_VALUE @TO@ SimpleName@@MethodName:valueOf:[10] @AT@ 8880 @LENGTH@ 14
------------------------INS SimpleName@@Long @TO@ QualifiedName@@Long.MAX_VALUE @AT@ 8880 @LENGTH@ 4
------------------------INS SimpleName@@MAX_VALUE @TO@ QualifiedName@@Long.MAX_VALUE @AT@ 8885 @LENGTH@ 9
---------------INS Operator@@+ @TO@ InfixExpression@@String.valueOf(Long.MAX_VALUE) + "0" @AT@ 8895 @LENGTH@ 1
---------------INS StringLiteral@@"0" @TO@ InfixExpression@@String.valueOf(Long.MAX_VALUE) + "0" @AT@ 8898 @LENGTH@ 3


DEL MethodDeclaration@@public, void, MethodName:testZRevRangeWithScores,  @AT@ 2823 @LENGTH@ 42
---DEL Modifier@@public @AT@ 2823 @LENGTH@ 6
---DEL PrimitiveType@@void @AT@ 2830 @LENGTH@ 4
---DEL SimpleName@@MethodName:testZRevRangeWithScores @AT@ 2835 @LENGTH@ 23


UPD IfStatement@@if (uniqueName != null) {  final DeploymentPlan plan=builder.undeploy(uniqueName).remove(uniqueName).build();  final DeploymentAction deployAction=builder.getLastAction();  try {    executeDeploymentPlan(plan,deployAction,client,deploymentManager);  }  finally {    url2Id.remove(archiveURL);  }} @TO@ if (uniqueName != null) {  final ModelControllerClient client=newModelControllerClient();  final ServerDeploymentManager deploymentManager=newDeploymentManager(client);  final DeploymentPlanBuilder builder=deploymentManager.newDeploymentPlan();  final DeploymentPlan plan=builder.undeploy(uniqueName).remove(uniqueName).build();  final DeploymentAction deployAction=builder.getLastAction();  try {    executeDeploymentPlan(plan,deployAction,client,deploymentManager);  }  finally {    url2Id.remove(archiveURL);  }} @AT@ 8268 @LENGTH@ 424
---UPD Block@@ThenBody:{  final DeploymentPlan plan=builder.undeploy(uniqueName).remove(uniqueName).build();  final DeploymentAction deployAction=builder.getLastAction();  try {    executeDeploymentPlan(plan,deployAction,client,deploymentManager);  }  finally {    url2Id.remove(archiveURL);  }} @TO@ ThenBody:{  final ModelControllerClient client=newModelControllerClient();  final ServerDeploymentManager deploymentManager=newDeploymentManager(client);  final DeploymentPlanBuilder builder=deploymentManager.newDeploymentPlan();  final DeploymentPlan plan=builder.undeploy(uniqueName).remove(uniqueName).build();  final DeploymentAction deployAction=builder.getLastAction();  try {    executeDeploymentPlan(plan,deployAction,client,deploymentManager);  }  finally {    url2Id.remove(archiveURL);  }} @AT@ 8292 @LENGTH@ 400
------MOV VariableDeclarationStatement@@final ModelControllerClient client=newModelControllerClient(); @TO@ Block@@ThenBody:{  final DeploymentPlan plan=builder.undeploy(uniqueName).remove(uniqueName).build();  final DeploymentAction deployAction=builder.getLastAction();  try {    executeDeploymentPlan(plan,deployAction,client,deploymentManager);  }  finally {    url2Id.remove(archiveURL);  }} @AT@ 7948 @LENGTH@ 64
------MOV VariableDeclarationStatement@@final ServerDeploymentManager deploymentManager=newDeploymentManager(client); @TO@ Block@@ThenBody:{  final DeploymentPlan plan=builder.undeploy(uniqueName).remove(uniqueName).build();  final DeploymentAction deployAction=builder.getLastAction();  try {    executeDeploymentPlan(plan,deployAction,client,deploymentManager);  }  finally {    url2Id.remove(archiveURL);  }} @AT@ 8025 @LENGTH@ 79
------MOV VariableDeclarationStatement@@final DeploymentPlanBuilder builder=deploymentManager.newDeploymentPlan(); @TO@ Block@@ThenBody:{  final DeploymentPlan plan=builder.undeploy(uniqueName).remove(uniqueName).build();  final DeploymentAction deployAction=builder.getLastAction();  try {    executeDeploymentPlan(plan,deployAction,client,deploymentManager);  }  finally {    url2Id.remove(archiveURL);  }} @AT@ 8117 @LENGTH@ 76


UPD TryStatement@@try {  List<String> containerList=new ArrayList<String>();  String clusterId=zooKeeper.getStringData("/fabric/configs/versions/" + version + "/general/fabric-ensemble");  String containers=zooKeeper.getStringData("/fabric/configs/versions/" + version + "/general/fabric-ensemble/"+ clusterId);  Collections.addAll(containerList,containers.split(","));  result=containerList.contains(containerName);} catch (Throwable t) {} @TO@ try {  List<String> containerList=new ArrayList<String>();  String clusterId=zooKeeper.getStringData(ZkPath.CONFIG_ENSEMBLES.getPath());  String containers=zooKeeper.getStringData(ZkPath.CONFIG_ENSEMBLE.getPath(clusterId));  Collections.addAll(containerList,containers.split(","));  result=containerList.contains(containerName);} catch (Throwable t) {} @AT@ 4144 @LENGTH@ 526
---UPD VariableDeclarationStatement@@String clusterId=zooKeeper.getStringData("/fabric/configs/versions/" + version + "/general/fabric-ensemble"); @TO@ String clusterId=zooKeeper.getStringData(ZkPath.CONFIG_ENSEMBLES.getPath()); @AT@ 4228 @LENGTH@ 111
------UPD VariableDeclarationFragment@@clusterId=zooKeeper.getStringData("/fabric/configs/versions/" + version + "/general/fabric-ensemble") @TO@ clusterId=zooKeeper.getStringData(ZkPath.CONFIG_ENSEMBLES.getPath()) @AT@ 4235 @LENGTH@ 103
---------UPD MethodInvocation@@zooKeeper.getStringData("/fabric/configs/versions/" + version + "/general/fabric-ensemble") @TO@ zooKeeper.getStringData(ZkPath.CONFIG_ENSEMBLES.getPath()) @AT@ 4247 @LENGTH@ 91
------------UPD SimpleName@@MethodName:getStringData:["/fabric/configs/versions/" + version + "/general/fabric-ensemble"] @TO@ MethodName:getStringData:[ZkPath.CONFIG_ENSEMBLES.getPath()] @AT@ 4257 @LENGTH@ 81
---------------INS MethodInvocation@@ZkPath.CONFIG_ENSEMBLES.getPath() @TO@ SimpleName@@MethodName:getStringData:["/fabric/configs/versions/" + version + "/general/fabric-ensemble"] @AT@ 4211 @LENGTH@ 33
------------------INS QualifiedName@@Name:ZkPath.CONFIG_ENSEMBLES @TO@ MethodInvocation@@ZkPath.CONFIG_ENSEMBLES.getPath() @AT@ 4211 @LENGTH@ 23
------------------INS SimpleName@@MethodName:getPath:[] @TO@ MethodInvocation@@ZkPath.CONFIG_ENSEMBLES.getPath() @AT@ 4235 @LENGTH@ 9
---------------DEL InfixExpression@@"/fabric/configs/versions/" + version + "/general/fabric-ensemble" @AT@ 4271 @LENGTH@ 66
------------------DEL StringLiteral@@"/fabric/configs/versions/" @AT@ 4271 @LENGTH@ 27
------------------DEL Operator@@+ @AT@ 4298 @LENGTH@ 1
------------------DEL SimpleName@@version @AT@ 4301 @LENGTH@ 7
------------------DEL StringLiteral@@"/general/fabric-ensemble" @AT@ 4311 @LENGTH@ 26
---UPD VariableDeclarationStatement@@String containers=zooKeeper.getStringData("/fabric/configs/versions/" + version + "/general/fabric-ensemble/"+ clusterId); @TO@ String containers=zooKeeper.getStringData(ZkPath.CONFIG_ENSEMBLE.getPath(clusterId)); @AT@ 4352 @LENGTH@ 125
------UPD VariableDeclarationFragment@@containers=zooKeeper.getStringData("/fabric/configs/versions/" + version + "/general/fabric-ensemble/"+ clusterId) @TO@ containers=zooKeeper.getStringData(ZkPath.CONFIG_ENSEMBLE.getPath(clusterId)) @AT@ 4359 @LENGTH@ 117
---------UPD MethodInvocation@@zooKeeper.getStringData("/fabric/configs/versions/" + version + "/general/fabric-ensemble/"+ clusterId) @TO@ zooKeeper.getStringData(ZkPath.CONFIG_ENSEMBLE.getPath(clusterId)) @AT@ 4372 @LENGTH@ 104
------------UPD SimpleName@@MethodName:getStringData:["/fabric/configs/versions/" + version + "/general/fabric-ensemble/"+ clusterId] @TO@ MethodName:getStringData:[ZkPath.CONFIG_ENSEMBLE.getPath(clusterId)] @AT@ 4382 @LENGTH@ 94
---------------INS MethodInvocation@@ZkPath.CONFIG_ENSEMBLE.getPath(clusterId) @TO@ SimpleName@@MethodName:getStringData:["/fabric/configs/versions/" + version + "/general/fabric-ensemble/"+ clusterId] @AT@ 4303 @LENGTH@ 41
------------------INS QualifiedName@@Name:ZkPath.CONFIG_ENSEMBLE @TO@ MethodInvocation@@ZkPath.CONFIG_ENSEMBLE.getPath(clusterId) @AT@ 4303 @LENGTH@ 22
------------------INS SimpleName@@MethodName:getPath:[clusterId] @TO@ MethodInvocation@@ZkPath.CONFIG_ENSEMBLE.getPath(clusterId) @AT@ 4326 @LENGTH@ 18
---------------------INS SimpleName@@clusterId @TO@ SimpleName@@MethodName:getPath:[clusterId] @AT@ 4334 @LENGTH@ 9
---------------DEL InfixExpression@@"/fabric/configs/versions/" + version + "/general/fabric-ensemble/"+ clusterId @AT@ 4396 @LENGTH@ 79
------------------DEL StringLiteral@@"/fabric/configs/versions/" @AT@ 4396 @LENGTH@ 27
------------------DEL Operator@@+ @AT@ 4423 @LENGTH@ 1
------------------DEL SimpleName@@version @AT@ 4426 @LENGTH@ 7
------------------DEL StringLiteral@@"/general/fabric-ensemble/" @AT@ 4436 @LENGTH@ 27
------------------DEL SimpleName@@clusterId @AT@ 4466 @LENGTH@ 9


DEL ExpressionStatement@@MethodInvocation:errorHandler(deadLetterChannel("mock:error").maximumRedeliveries(0).logStackTrace(false)) @AT@ 2918 @LENGTH@ 90
---DEL MethodInvocation@@errorHandler(deadLetterChannel("mock:error").maximumRedeliveries(0).logStackTrace(false)) @AT@ 2918 @LENGTH@ 89
------DEL SimpleName@@MethodName:errorHandler:[deadLetterChannel("mock:error").maximumRedeliveries(0).logStackTrace(false)] @AT@ 2918 @LENGTH@ 89
---------DEL MethodInvocation@@deadLetterChannel("mock:error").maximumRedeliveries(0).logStackTrace(false) @AT@ 2931 @LENGTH@ 75
------------DEL MethodInvocation@@MethodName:maximumRedeliveries:[0] @AT@ 2931 @LENGTH@ 54
---------------DEL NumberLiteral@@0 @AT@ 2983 @LENGTH@ 1
------------DEL MethodInvocation@@MethodName:deadLetterChannel:["mock:error"] @AT@ 2931 @LENGTH@ 31
---------------DEL StringLiteral@@"mock:error" @AT@ 2949 @LENGTH@ 12
------------DEL SimpleName@@MethodName:logStackTrace:[false] @AT@ 2986 @LENGTH@ 20
---------------DEL BooleanLiteral@@false @AT@ 3000 @LENGTH@ 5


INS VariableDeclarationStatement@@final Set<String> copyOfInProgress=new LinkedHashSet<String>(inProgressCompleteExchanges); @TO@ MethodDeclaration@@public, void, MethodName:run,  @AT@ 35833 @LENGTH@ 92
---INS Modifier@@final @TO@ VariableDeclarationStatement@@final Set<String> copyOfInProgress=new LinkedHashSet<String>(inProgressCompleteExchanges); @AT@ 35833 @LENGTH@ 5
---INS ParameterizedType@@Set<String> @TO@ VariableDeclarationStatement@@final Set<String> copyOfInProgress=new LinkedHashSet<String>(inProgressCompleteExchanges); @AT@ 35839 @LENGTH@ 11
------INS SimpleType@@Set @TO@ ParameterizedType@@Set<String> @AT@ 35839 @LENGTH@ 3
------INS SimpleType@@String @TO@ ParameterizedType@@Set<String> @AT@ 35843 @LENGTH@ 6
---INS VariableDeclarationFragment@@copyOfInProgress=new LinkedHashSet<String>(inProgressCompleteExchanges) @TO@ VariableDeclarationStatement@@final Set<String> copyOfInProgress=new LinkedHashSet<String>(inProgressCompleteExchanges); @AT@ 35851 @LENGTH@ 73
------INS SimpleName@@copyOfInProgress @TO@ VariableDeclarationFragment@@copyOfInProgress=new LinkedHashSet<String>(inProgressCompleteExchanges) @AT@ 35851 @LENGTH@ 16
------INS ClassInstanceCreation@@LinkedHashSet<String>[inProgressCompleteExchanges] @TO@ VariableDeclarationFragment@@copyOfInProgress=new LinkedHashSet<String>(inProgressCompleteExchanges) @AT@ 35870 @LENGTH@ 54
---------INS New@@new @TO@ ClassInstanceCreation@@LinkedHashSet<String>[inProgressCompleteExchanges] @AT@ 35870 @LENGTH@ 3
---------INS ParameterizedType@@LinkedHashSet<String> @TO@ ClassInstanceCreation@@LinkedHashSet<String>[inProgressCompleteExchanges] @AT@ 35874 @LENGTH@ 21
------------INS SimpleType@@LinkedHashSet @TO@ ParameterizedType@@LinkedHashSet<String> @AT@ 35874 @LENGTH@ 13
------------INS SimpleType@@String @TO@ ParameterizedType@@LinkedHashSet<String> @AT@ 35888 @LENGTH@ 6
---------INS SimpleName@@inProgressCompleteExchanges @TO@ ClassInstanceCreation@@LinkedHashSet<String>[inProgressCompleteExchanges] @AT@ 35896 @LENGTH@ 27


UPD Block@@ThenBody:{  String userId=((SocialUserDetails)success.getPrincipal()).getUserId();  ConnectionData data=(ConnectionData)token.getPrincipal();  Connection<?> connection=authService.getConnectionFactory().createConnection(data);  ConnectionRepository repo=getUsersConnectionRepository().createConnectionRepository(userId);  repo.updateConnection(connection);} @TO@ ThenBody:{  String userId=((SocialUserDetails)success.getPrincipal()).getUserId();  Connection<?> connection=token.getConnection();  ConnectionRepository repo=getUsersConnectionRepository().createConnectionRepository(userId);  repo.updateConnection(connection);} @AT@ 10838 @LENGTH@ 370
---DEL VariableDeclarationStatement@@ConnectionData data=(ConnectionData)token.getPrincipal(); @AT@ 10919 @LENGTH@ 60
------DEL SimpleType@@ConnectionData @AT@ 10919 @LENGTH@ 14
------DEL VariableDeclarationFragment@@data=(ConnectionData)token.getPrincipal() @AT@ 10934 @LENGTH@ 44
---------DEL SimpleName@@data @AT@ 10934 @LENGTH@ 4
---------DEL CastExpression@@(ConnectionData)token.getPrincipal() @AT@ 10941 @LENGTH@ 37
------------DEL SimpleType@@ConnectionData @AT@ 10942 @LENGTH@ 14
------------DEL MethodInvocation@@token.getPrincipal() @AT@ 10958 @LENGTH@ 20
---------------DEL SimpleName@@Name:token @AT@ 10958 @LENGTH@ 5
---------------DEL SimpleName@@MethodName:getPrincipal:[] @AT@ 10964 @LENGTH@ 14
---UPD VariableDeclarationStatement@@Connection<?> connection=authService.getConnectionFactory().createConnection(data); @TO@ Connection<?> connection=token.getConnection(); @AT@ 10983 @LENGTH@ 85
------UPD VariableDeclarationFragment@@connection=authService.getConnectionFactory().createConnection(data) @TO@ connection=token.getConnection() @AT@ 10997 @LENGTH@ 70
---------UPD MethodInvocation@@authService.getConnectionFactory().createConnection(data) @TO@ token.getConnection() @AT@ 11010 @LENGTH@ 57
------------DEL MethodInvocation@@MethodName:getConnectionFactory:[] @AT@ 11010 @LENGTH@ 34
------------UPD SimpleName@@Name:authService @TO@ Name:token @AT@ 11010 @LENGTH@ 11
------------UPD SimpleName@@MethodName:createConnection:[data] @TO@ MethodName:getConnection:[] @AT@ 11045 @LENGTH@ 22
---------------DEL SimpleName@@data @AT@ 11062 @LENGTH@ 4


INS MethodDeclaration@@public, void, MethodName:throwsExceptionOnBeanInstantiationException,  @TO@ TypeDeclaration@@[@RunWith(MockitoJUnitRunner.class), public]ReflectionEntityInstantiatorUnitTests,  @AT@ 3514 @LENGTH@ 239
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:throwsExceptionOnBeanInstantiationException,  @AT@ 3514 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:throwsExceptionOnBeanInstantiationException,  @AT@ 3521 @LENGTH@ 4
---INS SimpleName@@MethodName:throwsExceptionOnBeanInstantiationException @TO@ MethodDeclaration@@public, void, MethodName:throwsExceptionOnBeanInstantiationException,  @AT@ 3526 @LENGTH@ 43
---INS ExpressionStatement@@MethodInvocation:when(entity.getPersistenceConstructor()).thenReturn(null) @TO@ MethodDeclaration@@public, void, MethodName:throwsExceptionOnBeanInstantiationException,  @AT@ 3577 @LENGTH@ 58
------INS MethodInvocation@@when(entity.getPersistenceConstructor()).thenReturn(null) @TO@ ExpressionStatement@@MethodInvocation:when(entity.getPersistenceConstructor()).thenReturn(null) @AT@ 3577 @LENGTH@ 57
---------INS MethodInvocation@@MethodName:when:[entity.getPersistenceConstructor()] @TO@ MethodInvocation@@when(entity.getPersistenceConstructor()).thenReturn(null) @AT@ 3577 @LENGTH@ 40
------------INS MethodInvocation@@entity.getPersistenceConstructor() @TO@ MethodInvocation@@MethodName:when:[entity.getPersistenceConstructor()] @AT@ 3582 @LENGTH@ 34
---------------INS SimpleName@@Name:entity @TO@ MethodInvocation@@entity.getPersistenceConstructor() @AT@ 3582 @LENGTH@ 6
---------------INS SimpleName@@MethodName:getPersistenceConstructor:[] @TO@ MethodInvocation@@entity.getPersistenceConstructor() @AT@ 3589 @LENGTH@ 27
---------INS SimpleName@@MethodName:thenReturn:[null] @TO@ MethodInvocation@@when(entity.getPersistenceConstructor()).thenReturn(null) @AT@ 3618 @LENGTH@ 16
------------INS NullLiteral@@null @TO@ SimpleName@@MethodName:thenReturn:[null] @AT@ 3629 @LENGTH@ 4
---INS ExpressionStatement@@MethodInvocation:when(entity.getType()).thenReturn((Class)PersistentEntity.class) @TO@ MethodDeclaration@@public, void, MethodName:throwsExceptionOnBeanInstantiationException,  @AT@ 3638 @LENGTH@ 66
------INS MethodInvocation@@when(entity.getType()).thenReturn((Class)PersistentEntity.class) @TO@ ExpressionStatement@@MethodInvocation:when(entity.getType()).thenReturn((Class)PersistentEntity.class) @AT@ 3638 @LENGTH@ 65
---------INS MethodInvocation@@MethodName:when:[entity.getType()] @TO@ MethodInvocation@@when(entity.getType()).thenReturn((Class)PersistentEntity.class) @AT@ 3638 @LENGTH@ 22
------------INS MethodInvocation@@entity.getType() @TO@ MethodInvocation@@MethodName:when:[entity.getType()] @AT@ 3643 @LENGTH@ 16
---------------INS SimpleName@@Name:entity @TO@ MethodInvocation@@entity.getType() @AT@ 3643 @LENGTH@ 6
---------------INS SimpleName@@MethodName:getType:[] @TO@ MethodInvocation@@entity.getType() @AT@ 3650 @LENGTH@ 9
---------INS SimpleName@@MethodName:thenReturn:[(Class)PersistentEntity.class] @TO@ MethodInvocation@@when(entity.getType()).thenReturn((Class)PersistentEntity.class) @AT@ 3661 @LENGTH@ 42
------------INS CastExpression@@(Class)PersistentEntity.class @TO@ SimpleName@@MethodName:thenReturn:[(Class)PersistentEntity.class] @AT@ 3672 @LENGTH@ 30
---------------INS SimpleType@@Class @TO@ CastExpression@@(Class)PersistentEntity.class @AT@ 3673 @LENGTH@ 5
---------------INS TypeLiteral@@PersistentEntity.class @TO@ CastExpression@@(Class)PersistentEntity.class @AT@ 3680 @LENGTH@ 22
---INS ExpressionStatement@@MethodInvocation:INSTANCE.createInstance(entity,provider) @TO@ MethodDeclaration@@public, void, MethodName:throwsExceptionOnBeanInstantiationException,  @AT@ 3708 @LENGTH@ 42
------INS MethodInvocation@@INSTANCE.createInstance(entity,provider) @TO@ ExpressionStatement@@MethodInvocation:INSTANCE.createInstance(entity,provider) @AT@ 3708 @LENGTH@ 41
---------INS SimpleName@@Name:INSTANCE @TO@ MethodInvocation@@INSTANCE.createInstance(entity,provider) @AT@ 3708 @LENGTH@ 8
---------INS SimpleName@@MethodName:createInstance:[entity, provider] @TO@ MethodInvocation@@INSTANCE.createInstance(entity,provider) @AT@ 3717 @LENGTH@ 32
------------INS SimpleName@@entity @TO@ SimpleName@@MethodName:createInstance:[entity, provider] @AT@ 3732 @LENGTH@ 6
------------INS SimpleName@@provider @TO@ SimpleName@@MethodName:createInstance:[entity, provider] @AT@ 3740 @LENGTH@ 8


INS MethodDeclaration@@public, void, MethodName:doesNotConsiderPlainLikeABinding,  @TO@ TypeDeclaration@@[public]StringQueryUnitTests,  @AT@ 1091 @LENGTH@ 504
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:doesNotConsiderPlainLikeABinding,  @AT@ 1091 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:doesNotConsiderPlainLikeABinding,  @AT@ 1098 @LENGTH@ 4
---INS SimpleName@@MethodName:doesNotConsiderPlainLikeABinding @TO@ MethodDeclaration@@public, void, MethodName:doesNotConsiderPlainLikeABinding,  @AT@ 1103 @LENGTH@ 32
---INS VariableDeclarationStatement@@String source="select from User u where u.firstname like :firstname"; @TO@ MethodDeclaration@@public, void, MethodName:doesNotConsiderPlainLikeABinding,  @AT@ 1143 @LENGTH@ 71
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String source="select from User u where u.firstname like :firstname"; @AT@ 1143 @LENGTH@ 6
------INS VariableDeclarationFragment@@source="select from User u where u.firstname like :firstname" @TO@ VariableDeclarationStatement@@String source="select from User u where u.firstname like :firstname"; @AT@ 1150 @LENGTH@ 63
---------INS SimpleName@@source @TO@ VariableDeclarationFragment@@source="select from User u where u.firstname like :firstname" @AT@ 1150 @LENGTH@ 6
---------INS StringLiteral@@"select from User u where u.firstname like :firstname" @TO@ VariableDeclarationFragment@@source="select from User u where u.firstname like :firstname" @AT@ 1159 @LENGTH@ 54
---INS VariableDeclarationStatement@@StringQuery query=new StringQuery(source); @TO@ MethodDeclaration@@public, void, MethodName:doesNotConsiderPlainLikeABinding,  @AT@ 1217 @LENGTH@ 44
------INS SimpleType@@StringQuery @TO@ VariableDeclarationStatement@@StringQuery query=new StringQuery(source); @AT@ 1217 @LENGTH@ 11
------INS VariableDeclarationFragment@@query=new StringQuery(source) @TO@ VariableDeclarationStatement@@StringQuery query=new StringQuery(source); @AT@ 1229 @LENGTH@ 31
---------INS SimpleName@@query @TO@ VariableDeclarationFragment@@query=new StringQuery(source) @AT@ 1229 @LENGTH@ 5
---------INS ClassInstanceCreation@@StringQuery[source] @TO@ VariableDeclarationFragment@@query=new StringQuery(source) @AT@ 1237 @LENGTH@ 23
------------INS New@@new @TO@ ClassInstanceCreation@@StringQuery[source] @AT@ 1237 @LENGTH@ 3
------------INS SimpleType@@StringQuery @TO@ ClassInstanceCreation@@StringQuery[source] @AT@ 1241 @LENGTH@ 11
------------INS SimpleName@@source @TO@ ClassInstanceCreation@@StringQuery[source] @AT@ 1253 @LENGTH@ 6
---INS ExpressionStatement@@MethodInvocation:assertThat(query.hasLikeBindings(),is(true)) @TO@ MethodDeclaration@@public, void, MethodName:doesNotConsiderPlainLikeABinding,  @AT@ 1265 @LENGTH@ 46
------INS MethodInvocation@@assertThat(query.hasLikeBindings(),is(true)) @TO@ ExpressionStatement@@MethodInvocation:assertThat(query.hasLikeBindings(),is(true)) @AT@ 1265 @LENGTH@ 45
---------INS SimpleName@@MethodName:assertThat:[query.hasLikeBindings(), is(true)] @TO@ MethodInvocation@@assertThat(query.hasLikeBindings(),is(true)) @AT@ 1265 @LENGTH@ 45
------------INS MethodInvocation@@query.hasLikeBindings() @TO@ SimpleName@@MethodName:assertThat:[query.hasLikeBindings(), is(true)] @AT@ 1276 @LENGTH@ 23
---------------INS SimpleName@@Name:query @TO@ MethodInvocation@@query.hasLikeBindings() @AT@ 1276 @LENGTH@ 5
---------------INS SimpleName@@MethodName:hasLikeBindings:[] @TO@ MethodInvocation@@query.hasLikeBindings() @AT@ 1282 @LENGTH@ 17
------------INS MethodInvocation@@is(true) @TO@ SimpleName@@MethodName:assertThat:[query.hasLikeBindings(), is(true)] @AT@ 1301 @LENGTH@ 8
---------------INS SimpleName@@MethodName:is:[true] @TO@ MethodInvocation@@is(true) @AT@ 1301 @LENGTH@ 8
------------------INS BooleanLiteral@@true @TO@ SimpleName@@MethodName:is:[true] @AT@ 1304 @LENGTH@ 4
---------------INS SimpleName@@MethodName:is:[true] @TO@ MethodInvocation@@is(true) @AT@ 1301 @LENGTH@ 8
------------------INS BooleanLiteral@@true @TO@ SimpleName@@MethodName:is:[true] @AT@ 1304 @LENGTH@ 4
---INS ExpressionStatement@@MethodInvocation:assertThat(query.getQuery(),is(source)) @TO@ MethodDeclaration@@public, void, MethodName:doesNotConsiderPlainLikeABinding,  @AT@ 1314 @LENGTH@ 41
------INS MethodInvocation@@assertThat(query.getQuery(),is(source)) @TO@ ExpressionStatement@@MethodInvocation:assertThat(query.getQuery(),is(source)) @AT@ 1314 @LENGTH@ 40
---------INS SimpleName@@MethodName:assertThat:[query.getQuery(), is(source)] @TO@ MethodInvocation@@assertThat(query.getQuery(),is(source)) @AT@ 1314 @LENGTH@ 40
------------INS MethodInvocation@@query.getQuery() @TO@ SimpleName@@MethodName:assertThat:[query.getQuery(), is(source)] @AT@ 1325 @LENGTH@ 16
---------------INS SimpleName@@Name:query @TO@ MethodInvocation@@query.getQuery() @AT@ 1325 @LENGTH@ 5
---------------INS SimpleName@@MethodName:getQuery:[] @TO@ MethodInvocation@@query.getQuery() @AT@ 1331 @LENGTH@ 10
------------INS MethodInvocation@@is(source) @TO@ SimpleName@@MethodName:assertThat:[query.getQuery(), is(source)] @AT@ 1343 @LENGTH@ 10
---------------INS SimpleName@@MethodName:is:[source] @TO@ MethodInvocation@@is(source) @AT@ 1343 @LENGTH@ 10
------------------INS SimpleName@@source @TO@ SimpleName@@MethodName:is:[source] @AT@ 1346 @LENGTH@ 6
---------------INS SimpleName@@MethodName:is:[source] @TO@ MethodInvocation@@is(source) @AT@ 1343 @LENGTH@ 10
------------------INS SimpleName@@source @TO@ SimpleName@@MethodName:is:[source] @AT@ 1346 @LENGTH@ 6
---INS VariableDeclarationStatement@@List<LikeBinding> bindings=query.getLikeBindings(); @TO@ MethodDeclaration@@public, void, MethodName:doesNotConsiderPlainLikeABinding,  @AT@ 1359 @LENGTH@ 53
------INS ParameterizedType@@List<LikeBinding> @TO@ VariableDeclarationStatement@@List<LikeBinding> bindings=query.getLikeBindings(); @AT@ 1359 @LENGTH@ 17
---------INS SimpleType@@List @TO@ ParameterizedType@@List<LikeBinding> @AT@ 1359 @LENGTH@ 4
---------INS SimpleType@@LikeBinding @TO@ ParameterizedType@@List<LikeBinding> @AT@ 1364 @LENGTH@ 11
------INS VariableDeclarationFragment@@bindings=query.getLikeBindings() @TO@ VariableDeclarationStatement@@List<LikeBinding> bindings=query.getLikeBindings(); @AT@ 1377 @LENGTH@ 34
---------INS SimpleName@@bindings @TO@ VariableDeclarationFragment@@bindings=query.getLikeBindings() @AT@ 1377 @LENGTH@ 8
---------INS MethodInvocation@@query.getLikeBindings() @TO@ VariableDeclarationFragment@@bindings=query.getLikeBindings() @AT@ 1388 @LENGTH@ 23
------------INS SimpleName@@Name:query @TO@ MethodInvocation@@query.getLikeBindings() @AT@ 1388 @LENGTH@ 5
------------INS SimpleName@@MethodName:getLikeBindings:[] @TO@ MethodInvocation@@query.getLikeBindings() @AT@ 1394 @LENGTH@ 17
---INS ExpressionStatement@@MethodInvocation:assertThat(bindings,hasSize(1)) @TO@ MethodDeclaration@@public, void, MethodName:doesNotConsiderPlainLikeABinding,  @AT@ 1415 @LENGTH@ 33
------INS MethodInvocation@@assertThat(bindings,hasSize(1)) @TO@ ExpressionStatement@@MethodInvocation:assertThat(bindings,hasSize(1)) @AT@ 1415 @LENGTH@ 32
---------INS SimpleName@@MethodName:assertThat:[bindings, hasSize(1)] @TO@ MethodInvocation@@assertThat(bindings,hasSize(1)) @AT@ 1415 @LENGTH@ 32
------------INS SimpleName@@bindings @TO@ SimpleName@@MethodName:assertThat:[bindings, hasSize(1)] @AT@ 1426 @LENGTH@ 8
------------INS MethodInvocation@@hasSize(1) @TO@ SimpleName@@MethodName:assertThat:[bindings, hasSize(1)] @AT@ 1436 @LENGTH@ 10
---------------INS SimpleName@@MethodName:hasSize:[1] @TO@ MethodInvocation@@hasSize(1) @AT@ 1436 @LENGTH@ 10
------------------INS NumberLiteral@@1 @TO@ SimpleName@@MethodName:hasSize:[1] @AT@ 1444 @LENGTH@ 1
---------------INS SimpleName@@MethodName:hasSize:[1] @TO@ MethodInvocation@@hasSize(1) @AT@ 1436 @LENGTH@ 10
------------------INS NumberLiteral@@1 @TO@ SimpleName@@MethodName:hasSize:[1] @AT@ 1444 @LENGTH@ 1
---INS VariableDeclarationStatement@@LikeBinding binding=bindings.get(0); @TO@ MethodDeclaration@@public, void, MethodName:doesNotConsiderPlainLikeABinding,  @AT@ 1452 @LENGTH@ 38
------INS SimpleType@@LikeBinding @TO@ VariableDeclarationStatement@@LikeBinding binding=bindings.get(0); @AT@ 1452 @LENGTH@ 11
------INS VariableDeclarationFragment@@binding=bindings.get(0) @TO@ VariableDeclarationStatement@@LikeBinding binding=bindings.get(0); @AT@ 1464 @LENGTH@ 25
---------INS SimpleName@@binding @TO@ VariableDeclarationFragment@@binding=bindings.get(0) @AT@ 1464 @LENGTH@ 7
---------INS MethodInvocation@@bindings.get(0) @TO@ VariableDeclarationFragment@@binding=bindings.get(0) @AT@ 1474 @LENGTH@ 15
------------INS SimpleName@@Name:bindings @TO@ MethodInvocation@@bindings.get(0) @AT@ 1474 @LENGTH@ 8
------------INS SimpleName@@MethodName:get:[0] @TO@ MethodInvocation@@bindings.get(0) @AT@ 1483 @LENGTH@ 6
---------------INS NumberLiteral@@0 @TO@ SimpleName@@MethodName:get:[0] @AT@ 1487 @LENGTH@ 1
---INS ExpressionStatement@@MethodInvocation:assertThat(binding.getType(),is(Type.LIKE)) @TO@ MethodDeclaration@@public, void, MethodName:doesNotConsiderPlainLikeABinding,  @AT@ 1493 @LENGTH@ 45
------INS MethodInvocation@@assertThat(binding.getType(),is(Type.LIKE)) @TO@ ExpressionStatement@@MethodInvocation:assertThat(binding.getType(),is(Type.LIKE)) @AT@ 1493 @LENGTH@ 44
---------INS SimpleName@@MethodName:assertThat:[binding.getType(), is(Type.LIKE)] @TO@ MethodInvocation@@assertThat(binding.getType(),is(Type.LIKE)) @AT@ 1493 @LENGTH@ 44
------------INS MethodInvocation@@binding.getType() @TO@ SimpleName@@MethodName:assertThat:[binding.getType(), is(Type.LIKE)] @AT@ 1504 @LENGTH@ 17
---------------INS SimpleName@@Name:binding @TO@ MethodInvocation@@binding.getType() @AT@ 1504 @LENGTH@ 7
---------------INS SimpleName@@MethodName:getType:[] @TO@ MethodInvocation@@binding.getType() @AT@ 1512 @LENGTH@ 9
------------INS MethodInvocation@@is(Type.LIKE) @TO@ SimpleName@@MethodName:assertThat:[binding.getType(), is(Type.LIKE)] @AT@ 1523 @LENGTH@ 13
---------------INS SimpleName@@MethodName:is:[Type.LIKE] @TO@ MethodInvocation@@is(Type.LIKE) @AT@ 1523 @LENGTH@ 13
------------------INS QualifiedName@@Type.LIKE @TO@ SimpleName@@MethodName:is:[Type.LIKE] @AT@ 1526 @LENGTH@ 9
---------------------INS SimpleName@@Type @TO@ QualifiedName@@Type.LIKE @AT@ 1526 @LENGTH@ 4
---------------------INS SimpleName@@LIKE @TO@ QualifiedName@@Type.LIKE @AT@ 1531 @LENGTH@ 4
---------------INS SimpleName@@MethodName:is:[Type.LIKE] @TO@ MethodInvocation@@is(Type.LIKE) @AT@ 1523 @LENGTH@ 13
------------------INS QualifiedName@@Type.LIKE @TO@ SimpleName@@MethodName:is:[Type.LIKE] @AT@ 1526 @LENGTH@ 9
---------------------INS SimpleName@@Type @TO@ QualifiedName@@Type.LIKE @AT@ 1526 @LENGTH@ 4
---------------------INS SimpleName@@LIKE @TO@ QualifiedName@@Type.LIKE @AT@ 1531 @LENGTH@ 4
---INS ExpressionStatement@@MethodInvocation:assertThat(binding.hasName("firstname"),is(true)) @TO@ MethodDeclaration@@public, void, MethodName:doesNotConsiderPlainLikeABinding,  @AT@ 1541 @LENGTH@ 51
------INS MethodInvocation@@assertThat(binding.hasName("firstname"),is(true)) @TO@ ExpressionStatement@@MethodInvocation:assertThat(binding.hasName("firstname"),is(true)) @AT@ 1541 @LENGTH@ 50
---------INS SimpleName@@MethodName:assertThat:[binding.hasName("firstname"), is(true)] @TO@ MethodInvocation@@assertThat(binding.hasName("firstname"),is(true)) @AT@ 1541 @LENGTH@ 50
------------INS MethodInvocation@@binding.hasName("firstname") @TO@ SimpleName@@MethodName:assertThat:[binding.hasName("firstname"), is(true)] @AT@ 1552 @LENGTH@ 28
---------------INS SimpleName@@Name:binding @TO@ MethodInvocation@@binding.hasName("firstname") @AT@ 1552 @LENGTH@ 7
---------------INS SimpleName@@MethodName:hasName:["firstname"] @TO@ MethodInvocation@@binding.hasName("firstname") @AT@ 1560 @LENGTH@ 20
------------------INS StringLiteral@@"firstname" @TO@ SimpleName@@MethodName:hasName:["firstname"] @AT@ 1568 @LENGTH@ 11
------------INS MethodInvocation@@is(true) @TO@ SimpleName@@MethodName:assertThat:[binding.hasName("firstname"), is(true)] @AT@ 1582 @LENGTH@ 8
---------------INS SimpleName@@MethodName:is:[true] @TO@ MethodInvocation@@is(true) @AT@ 1582 @LENGTH@ 8
------------------INS BooleanLiteral@@true @TO@ SimpleName@@MethodName:is:[true] @AT@ 1585 @LENGTH@ 4


UPD ExpressionStatement@@MethodInvocation:checkFailedTransformedAddOperation(mainServices,modelVersion,config.correctOperation(operation),config) @TO@ MethodInvocation:checkFailedTransformedAddOperation(mainServices,modelVersion,config.correctOperation(transformedOperation.getTransformedOperation()),config) @AT@ 23596 @LENGTH@ 107
---UPD MethodInvocation@@checkFailedTransformedAddOperation(mainServices,modelVersion,config.correctOperation(operation),config) @TO@ checkFailedTransformedAddOperation(mainServices,modelVersion,config.correctOperation(transformedOperation.getTransformedOperation()),config) @AT@ 23596 @LENGTH@ 106
------UPD SimpleName@@MethodName:checkFailedTransformedAddOperation:[mainServices, modelVersion, config.correctOperation(operation), config] @TO@ MethodName:checkFailedTransformedAddOperation:[mainServices, modelVersion, config.correctOperation(transformedOperation.getTransformedOperation()), config] @AT@ 23596 @LENGTH@ 106
---------UPD MethodInvocation@@config.correctOperation(operation) @TO@ config.correctOperation(transformedOperation.getTransformedOperation()) @AT@ 23659 @LENGTH@ 34
------------UPD SimpleName@@MethodName:correctOperation:[operation] @TO@ MethodName:correctOperation:[transformedOperation.getTransformedOperation()] @AT@ 23666 @LENGTH@ 27
---------------DEL SimpleName@@operation @AT@ 23683 @LENGTH@ 9
---------------INS MethodInvocation@@transformedOperation.getTransformedOperation() @TO@ SimpleName@@MethodName:correctOperation:[operation] @AT@ 23936 @LENGTH@ 46
------------------INS SimpleName@@Name:transformedOperation @TO@ MethodInvocation@@transformedOperation.getTransformedOperation() @AT@ 23936 @LENGTH@ 20
------------------INS SimpleName@@MethodName:getTransformedOperation:[] @TO@ MethodInvocation@@transformedOperation.getTransformedOperation() @AT@ 23957 @LENGTH@ 25


UPD IfStatement@@if (pipeline != null) {  List<Object> execute=pipeline.syncAndReturnAll();  if (execute != null && !execute.isEmpty()) {    Exception cause=null;    for (int i=0; i < execute.size(); i++) {      Object object=execute.get(i);      if (object instanceof Exception) {        DataAccessException dataAccessException=convertJedisAccessException((Exception)object);        if (cause == null) {          cause=dataAccessException;        }        execute.set(i,dataAccessException);      }    }    if (cause != null) {      throw new RedisPipelineException(cause,execute);    }    return execute;  }} @TO@ if (pipeline != null) {  List<Object> execute=pipeline.syncAndReturnAll();  pipeline=null;  if (execute != null && !execute.isEmpty()) {    Exception cause=null;    for (int i=0; i < execute.size(); i++) {      Object object=execute.get(i);      if (object instanceof Exception) {        DataAccessException dataAccessException=convertJedisAccessException((Exception)object);        if (cause == null) {          cause=dataAccessException;        }        execute.set(i,dataAccessException);      }    }    if (cause != null) {      throw new RedisPipelineException(cause,execute);    }    return execute;  }} @AT@ 7115 @LENGTH@ 619
---UPD Block@@ThenBody:{  List<Object> execute=pipeline.syncAndReturnAll();  if (execute != null && !execute.isEmpty()) {    Exception cause=null;    for (int i=0; i < execute.size(); i++) {      Object object=execute.get(i);      if (object instanceof Exception) {        DataAccessException dataAccessException=convertJedisAccessException((Exception)object);        if (cause == null) {          cause=dataAccessException;        }        execute.set(i,dataAccessException);      }    }    if (cause != null) {      throw new RedisPipelineException(cause,execute);    }    return execute;  }} @TO@ ThenBody:{  List<Object> execute=pipeline.syncAndReturnAll();  pipeline=null;  if (execute != null && !execute.isEmpty()) {    Exception cause=null;    for (int i=0; i < execute.size(); i++) {      Object object=execute.get(i);      if (object instanceof Exception) {        DataAccessException dataAccessException=convertJedisAccessException((Exception)object);        if (cause == null) {          cause=dataAccessException;        }        execute.set(i,dataAccessException);      }    }    if (cause != null) {      throw new RedisPipelineException(cause,execute);    }    return execute;  }} @AT@ 7137 @LENGTH@ 597
------INS ExpressionStatement@@Assignment:pipeline=null @TO@ Block@@ThenBody:{  List<Object> execute=pipeline.syncAndReturnAll();  if (execute != null && !execute.isEmpty()) {    Exception cause=null;    for (int i=0; i < execute.size(); i++) {      Object object=execute.get(i);      if (object instanceof Exception) {        DataAccessException dataAccessException=convertJedisAccessException((Exception)object);        if (cause == null) {          cause=dataAccessException;        }        execute.set(i,dataAccessException);      }    }    if (cause != null) {      throw new RedisPipelineException(cause,execute);    }    return execute;  }} @AT@ 7197 @LENGTH@ 16
---------INS Assignment@@pipeline=null @TO@ ExpressionStatement@@Assignment:pipeline=null @AT@ 7197 @LENGTH@ 15
------------INS SimpleName@@pipeline @TO@ Assignment@@pipeline=null @AT@ 7197 @LENGTH@ 8
------------INS Operator@@= @TO@ Assignment@@pipeline=null @AT@ 7205 @LENGTH@ 1
------------INS NullLiteral@@null @TO@ Assignment@@pipeline=null @AT@ 7208 @LENGTH@ 4


INS IfStatement@@if (null == repoInfo) {  throw new IllegalArgumentException(type + " is not managed by any repository.");} @TO@ MethodDeclaration@@public, LinkBuilder, MethodName:linkFor, Class<?> type,  @AT@ 1741 @LENGTH@ 113
---INS InfixExpression@@null == repoInfo @TO@ IfStatement@@if (null == repoInfo) {  throw new IllegalArgumentException(type + " is not managed by any repository.");} @AT@ 1744 @LENGTH@ 16
------INS NullLiteral@@null @TO@ InfixExpression@@null == repoInfo @AT@ 1744 @LENGTH@ 4
------INS Operator@@== @TO@ InfixExpression@@null == repoInfo @AT@ 1748 @LENGTH@ 2
------INS SimpleName@@repoInfo @TO@ InfixExpression@@null == repoInfo @AT@ 1752 @LENGTH@ 8
---INS Block@@ThenBody:{  throw new IllegalArgumentException(type + " is not managed by any repository.");} @TO@ IfStatement@@if (null == repoInfo) {  throw new IllegalArgumentException(type + " is not managed by any repository.");} @AT@ 1762 @LENGTH@ 92
------INS ThrowStatement@@ClassInstanceCreation:new IllegalArgumentException(type + " is not managed by any repository.") @TO@ Block@@ThenBody:{  throw new IllegalArgumentException(type + " is not managed by any repository.");} @AT@ 1769 @LENGTH@ 80
---------INS ClassInstanceCreation@@IllegalArgumentException[type + " is not managed by any repository."] @TO@ ThrowStatement@@ClassInstanceCreation:new IllegalArgumentException(type + " is not managed by any repository.") @AT@ 1775 @LENGTH@ 73
------------INS New@@new @TO@ ClassInstanceCreation@@IllegalArgumentException[type + " is not managed by any repository."] @AT@ 1775 @LENGTH@ 3
------------INS SimpleType@@IllegalArgumentException @TO@ ClassInstanceCreation@@IllegalArgumentException[type + " is not managed by any repository."] @AT@ 1779 @LENGTH@ 24
------------INS InfixExpression@@type + " is not managed by any repository." @TO@ ClassInstanceCreation@@IllegalArgumentException[type + " is not managed by any repository."] @AT@ 1804 @LENGTH@ 43
---------------INS SimpleName@@type @TO@ InfixExpression@@type + " is not managed by any repository." @AT@ 1804 @LENGTH@ 4
---------------INS Operator@@+ @TO@ InfixExpression@@type + " is not managed by any repository." @AT@ 1808 @LENGTH@ 1
---------------INS StringLiteral@@" is not managed by any repository." @TO@ InfixExpression@@type + " is not managed by any repository." @AT@ 1811 @LENGTH@ 36


INS IfStatement@@if (!undefinedOnly || !attributeValue.isDefined()) {  attributeValue.set(hardCodedValue);} @TO@ MethodDeclaration@@public, void, MethodName:convertAttribute, PathAddress address, String name, ModelNode attributeValue, TransformationContext context,  @AT@ 5993 @LENGTH@ 134
---INS InfixExpression@@!undefinedOnly || !attributeValue.isDefined() @TO@ IfStatement@@if (!undefinedOnly || !attributeValue.isDefined()) {  attributeValue.set(hardCodedValue);} @AT@ 5997 @LENGTH@ 45
------INS PrefixExpression@@!undefinedOnly @TO@ InfixExpression@@!undefinedOnly || !attributeValue.isDefined() @AT@ 5997 @LENGTH@ 14
---------INS Operator@@! @TO@ PrefixExpression@@!undefinedOnly @AT@ 5997 @LENGTH@ 1
---------INS SimpleName@@undefinedOnly @TO@ PrefixExpression@@!undefinedOnly @AT@ 5998 @LENGTH@ 13
------INS Operator@@|| @TO@ InfixExpression@@!undefinedOnly || !attributeValue.isDefined() @AT@ 6011 @LENGTH@ 2
------INS PrefixExpression@@!attributeValue.isDefined() @TO@ InfixExpression@@!undefinedOnly || !attributeValue.isDefined() @AT@ 6015 @LENGTH@ 27
---------INS Operator@@! @TO@ PrefixExpression@@!attributeValue.isDefined() @AT@ 6015 @LENGTH@ 1
---------INS MethodInvocation@@attributeValue.isDefined() @TO@ PrefixExpression@@!attributeValue.isDefined() @AT@ 6016 @LENGTH@ 26
------------INS SimpleName@@Name:attributeValue @TO@ MethodInvocation@@attributeValue.isDefined() @AT@ 6016 @LENGTH@ 14
------------INS SimpleName@@MethodName:isDefined:[] @TO@ MethodInvocation@@attributeValue.isDefined() @AT@ 6031 @LENGTH@ 11
---INS Block@@ThenBody:{  attributeValue.set(hardCodedValue);} @TO@ IfStatement@@if (!undefinedOnly || !attributeValue.isDefined()) {  attributeValue.set(hardCodedValue);} @AT@ 6044 @LENGTH@ 83
------MOV ExpressionStatement@@MethodInvocation:attributeValue.set(hardCodedValue) @TO@ Block@@ThenBody:{  attributeValue.set(hardCodedValue);} @AT@ 4958 @LENGTH@ 35


UPD ExpressionStatement@@MethodInvocation:resolvedParent.get(Constants.CONDITION,conditionProp.getName()).set(resolvedCondition) @TO@ MethodInvocation:result.get(prop.getName()).get(Constants.CONDITION,conditionProp.getName()).set(resolvedCondition) @AT@ 10271 @LENGTH@ 88
---UPD MethodInvocation@@resolvedParent.get(Constants.CONDITION,conditionProp.getName()).set(resolvedCondition) @TO@ result.get(prop.getName()).get(Constants.CONDITION,conditionProp.getName()).set(resolvedCondition) @AT@ 10271 @LENGTH@ 87
------INS MethodInvocation@@MethodName:get:[prop.getName()] @TO@ MethodInvocation@@resolvedParent.get(Constants.CONDITION,conditionProp.getName()).set(resolvedCondition) @AT@ 10271 @LENGTH@ 26
---------INS MethodInvocation@@prop.getName() @TO@ MethodInvocation@@MethodName:get:[prop.getName()] @AT@ 10282 @LENGTH@ 14
------------INS SimpleName@@Name:prop @TO@ MethodInvocation@@prop.getName() @AT@ 10282 @LENGTH@ 4
------------INS SimpleName@@MethodName:getName:[] @TO@ MethodInvocation@@prop.getName() @AT@ 10287 @LENGTH@ 9
------UPD SimpleName@@Name:resolvedParent @TO@ Name:result @AT@ 10271 @LENGTH@ 14


UPD MethodDeclaration@@void, MethodName:installService, OperationContext context, ModelNode model, ServiceVerificationHandler verificationHandler, List<ServiceController<?>> newControllers, OperationFailedException,  @TO@ AbstractListenerService<? extends AbstractListenerService>, MethodName:createService, String name, OperationContext context, ModelNode model, OperationFailedException,  @AT@ 806 @LENGTH@ 735
---INS ParameterizedType@@AbstractListenerService<? extends AbstractListenerService> @TO@ MethodDeclaration@@void, MethodName:installService, OperationContext context, ModelNode model, ServiceVerificationHandler verificationHandler, List<ServiceController<?>> newControllers, OperationFailedException,  @AT@ 670 @LENGTH@ 58
------INS SimpleType@@AbstractListenerService @TO@ ParameterizedType@@AbstractListenerService<? extends AbstractListenerService> @AT@ 670 @LENGTH@ 23
------INS WildcardType@@? @TO@ ParameterizedType@@AbstractListenerService<? extends AbstractListenerService> @AT@ 694 @LENGTH@ 33
---INS SingleVariableDeclaration@@String name @TO@ MethodDeclaration@@void, MethodName:installService, OperationContext context, ModelNode model, ServiceVerificationHandler verificationHandler, List<ServiceController<?>> newControllers, OperationFailedException,  @AT@ 743 @LENGTH@ 11
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String name @AT@ 743 @LENGTH@ 6
------INS SimpleName@@name @TO@ SingleVariableDeclaration@@String name @AT@ 750 @LENGTH@ 4
---DEL PrimitiveType@@void @AT@ 801 @LENGTH@ 4
---UPD SimpleName@@MethodName:installService @TO@ MethodName:createService @AT@ 806 @LENGTH@ 14
---DEL SingleVariableDeclaration@@ServiceVerificationHandler verificationHandler @AT@ 864 @LENGTH@ 46
------DEL SimpleType@@ServiceVerificationHandler @AT@ 864 @LENGTH@ 26
------DEL SimpleName@@verificationHandler @AT@ 891 @LENGTH@ 19
---DEL SingleVariableDeclaration@@List<ServiceController<?>> newControllers @AT@ 912 @LENGTH@ 41
------DEL ParameterizedType@@List<ServiceController<?>> @AT@ 912 @LENGTH@ 26
---------DEL SimpleType@@List @AT@ 912 @LENGTH@ 4
---------DEL ParameterizedType@@ServiceController<?> @AT@ 917 @LENGTH@ 20
------------DEL SimpleType@@ServiceController @AT@ 917 @LENGTH@ 17
------------DEL WildcardType@@? @AT@ 935 @LENGTH@ 1
------DEL SimpleName@@newControllers @AT@ 939 @LENGTH@ 14
---DEL VariableDeclarationStatement@@final HttpListenerService service=createService(name); @AT@ 997 @LENGTH@ 56
------DEL Modifier@@final @AT@ 997 @LENGTH@ 5
------DEL SimpleType@@HttpListenerService @AT@ 1003 @LENGTH@ 19
------DEL VariableDeclarationFragment@@service=createService(name) @AT@ 1023 @LENGTH@ 29
---------DEL SimpleName@@service @AT@ 1023 @LENGTH@ 7
---------DEL MethodInvocation@@createService(name) @AT@ 1033 @LENGTH@ 19
------------DEL SimpleName@@MethodName:createService:[name] @AT@ 1033 @LENGTH@ 19
---------------DEL SimpleName@@name @AT@ 1047 @LENGTH@ 4
---DEL VariableDeclarationStatement@@final ServiceBuilder<HttpListenerService> serviceBuilder=context.getServiceTarget().addService(constructServiceName(name),service); @AT@ 1062 @LENGTH@ 134
------DEL Modifier@@final @AT@ 1062 @LENGTH@ 5
------DEL ParameterizedType@@ServiceBuilder<HttpListenerService> @AT@ 1068 @LENGTH@ 35
---------DEL SimpleType@@ServiceBuilder @AT@ 1068 @LENGTH@ 14
---------DEL SimpleType@@HttpListenerService @AT@ 1083 @LENGTH@ 19
------DEL VariableDeclarationFragment@@serviceBuilder=context.getServiceTarget().addService(constructServiceName(name),service) @AT@ 1104 @LENGTH@ 91
---------DEL SimpleName@@serviceBuilder @AT@ 1104 @LENGTH@ 14
---------DEL MethodInvocation@@context.getServiceTarget().addService(constructServiceName(name),service) @AT@ 1121 @LENGTH@ 74
------------DEL MethodInvocation@@MethodName:getServiceTarget:[] @AT@ 1121 @LENGTH@ 26
------------DEL SimpleName@@Name:context @AT@ 1121 @LENGTH@ 7
------------DEL SimpleName@@MethodName:addService:[constructServiceName(name), service] @AT@ 1148 @LENGTH@ 47
---------------DEL MethodInvocation@@constructServiceName(name) @AT@ 1159 @LENGTH@ 26
------------------DEL SimpleName@@MethodName:constructServiceName:[name] @AT@ 1159 @LENGTH@ 26
---------------------DEL SimpleName@@name @AT@ 1180 @LENGTH@ 4
---------------DEL SimpleName@@service @AT@ 1187 @LENGTH@ 7
---DEL ExpressionStatement@@MethodInvocation:addDefaultDependencies(serviceBuilder,service) @AT@ 1205 @LENGTH@ 48
------DEL MethodInvocation@@addDefaultDependencies(serviceBuilder,service) @AT@ 1205 @LENGTH@ 47
---------DEL SimpleName@@MethodName:addDefaultDependencies:[serviceBuilder, service] @AT@ 1205 @LENGTH@ 47
------------DEL SimpleName@@serviceBuilder @AT@ 1228 @LENGTH@ 14
------------DEL SimpleName@@service @AT@ 1244 @LENGTH@ 7
---DEL ExpressionStatement@@MethodInvocation:configureAdditionalDependencies(context,serviceBuilder,model,service) @AT@ 1263 @LENGTH@ 73
------DEL MethodInvocation@@configureAdditionalDependencies(context,serviceBuilder,model,service) @AT@ 1263 @LENGTH@ 72
---------DEL SimpleName@@MethodName:configureAdditionalDependencies:[context, serviceBuilder, model, service] @AT@ 1263 @LENGTH@ 72
------------DEL SimpleName@@context @AT@ 1295 @LENGTH@ 7
------------DEL SimpleName@@serviceBuilder @AT@ 1304 @LENGTH@ 14
------------DEL SimpleName@@model @AT@ 1320 @LENGTH@ 5
------------DEL SimpleName@@service @AT@ 1327 @LENGTH@ 7
---DEL VariableDeclarationStatement@@final ServiceController<HttpListenerService> serviceController=serviceBuilder.install(); @AT@ 1346 @LENGTH@ 90
------DEL Modifier@@final @AT@ 1346 @LENGTH@ 5
------DEL ParameterizedType@@ServiceController<HttpListenerService> @AT@ 1352 @LENGTH@ 38
---------DEL SimpleType@@ServiceController @AT@ 1352 @LENGTH@ 17
---------DEL SimpleType@@HttpListenerService @AT@ 1370 @LENGTH@ 19
------DEL VariableDeclarationFragment@@serviceController=serviceBuilder.install() @AT@ 1391 @LENGTH@ 44
---------DEL SimpleName@@serviceController @AT@ 1391 @LENGTH@ 17
---------DEL MethodInvocation@@serviceBuilder.install() @AT@ 1411 @LENGTH@ 24
------------DEL SimpleName@@Name:serviceBuilder @AT@ 1411 @LENGTH@ 14
------------DEL SimpleName@@MethodName:install:[] @AT@ 1426 @LENGTH@ 9
---DEL IfStatement@@if (newControllers != null) {  newControllers.add(serviceController);} @AT@ 1445 @LENGTH@ 90
------DEL InfixExpression@@newControllers != null @AT@ 1449 @LENGTH@ 22
---------DEL SimpleName@@newControllers @AT@ 1449 @LENGTH@ 14
---------DEL Operator@@!= @AT@ 1463 @LENGTH@ 2
---------DEL NullLiteral@@null @AT@ 1467 @LENGTH@ 4
------DEL Block@@ThenBody:{  newControllers.add(serviceController);} @AT@ 1473 @LENGTH@ 62
---------DEL ExpressionStatement@@MethodInvocation:newControllers.add(serviceController) @AT@ 1487 @LENGTH@ 38
------------DEL MethodInvocation@@newControllers.add(serviceController) @AT@ 1487 @LENGTH@ 37
---------------DEL SimpleName@@Name:newControllers @AT@ 1487 @LENGTH@ 14
---------------DEL SimpleName@@MethodName:add:[serviceController] @AT@ 1502 @LENGTH@ 22
------------------DEL SimpleName@@serviceController @AT@ 1506 @LENGTH@ 17
---MOV ReturnStatement@@ClassInstanceCreation:new HttpListenerService(name) @TO@ MethodDeclaration@@void, MethodName:installService, OperationContext context, ModelNode model, ServiceVerificationHandler verificationHandler, List<ServiceController<?>> newControllers, OperationFailedException,  @AT@ 1620 @LENGTH@ 37


UPD ExpressionStatement@@Assignment:modulePath=modulePath.split(File.pathSeparator)[1] @TO@ Assignment:modulePath=modulePath.split(File.pathSeparator)[0] @AT@ 5186 @LENGTH@ 53
---UPD Assignment@@modulePath=modulePath.split(File.pathSeparator)[1] @TO@ modulePath=modulePath.split(File.pathSeparator)[0] @AT@ 5186 @LENGTH@ 52
------UPD ArrayAccess@@modulePath.split(File.pathSeparator)[1] @TO@ modulePath.split(File.pathSeparator)[0] @AT@ 5199 @LENGTH@ 39
---------UPD NumberLiteral@@1 @TO@ 0 @AT@ 5236 @LENGTH@ 1


UPD ExpressionStatement@@MethodInvocation:mock.expectedMessageCount(2) @TO@ MethodInvocation:mock.expectedMinimumMessageCount(2) @AT@ 1228 @LENGTH@ 29
---UPD MethodInvocation@@mock.expectedMessageCount(2) @TO@ mock.expectedMinimumMessageCount(2) @AT@ 1228 @LENGTH@ 28
------UPD SimpleName@@MethodName:expectedMessageCount:[2] @TO@ MethodName:expectedMinimumMessageCount:[2] @AT@ 1233 @LENGTH@ 23


UPD Block@@ElseBody:if (null == result) {  resources=new BaseUriAwareResource(EMPTY_RESOURCE_LIST);} else {  PersistentEntityResource per=PersistentEntityResource.wrap(repoRequest.getPersistentEntity(),result,repoRequest.getBaseUri());  per.add(repoRequest.buildEntitySelfLink(result,conversionService));  resources=per;} @TO@ ElseBody:if (null == result) {  resources=new BaseUriAwareResource(EMPTY_RESOURCE_LIST);} else {  PersistentEntityResource per=PersistentEntityResource.wrap(repoRequest.getPersistentEntity(),result,repoRequest.getBaseUri());  BeanWrapper wrapper=BeanWrapper.create(result,conversionService);  Link selfLink=entityLinks.linkForSingleResource(result.getClass(),wrapper.getProperty(repoRequest.getPersistentEntity().getIdProperty())).withSelfRel();  per.add(selfLink);  resources=per;} @AT@ 6036 @LENGTH@ 451
---UPD IfStatement@@if (null == result) {  resources=new BaseUriAwareResource(EMPTY_RESOURCE_LIST);} else {  PersistentEntityResource per=PersistentEntityResource.wrap(repoRequest.getPersistentEntity(),result,repoRequest.getBaseUri());  per.add(repoRequest.buildEntitySelfLink(result,conversionService));  resources=per;} @TO@ if (null == result) {  resources=new BaseUriAwareResource(EMPTY_RESOURCE_LIST);} else {  PersistentEntityResource per=PersistentEntityResource.wrap(repoRequest.getPersistentEntity(),result,repoRequest.getBaseUri());  BeanWrapper wrapper=BeanWrapper.create(result,conversionService);  Link selfLink=entityLinks.linkForSingleResource(result.getClass(),wrapper.getProperty(repoRequest.getPersistentEntity().getIdProperty())).withSelfRel();  per.add(selfLink);  resources=per;} @AT@ 6036 @LENGTH@ 451
------UPD Block@@ElseBody:{  PersistentEntityResource per=PersistentEntityResource.wrap(repoRequest.getPersistentEntity(),result,repoRequest.getBaseUri());  per.add(repoRequest.buildEntitySelfLink(result,conversionService));  resources=per;} @TO@ ElseBody:{  PersistentEntityResource per=PersistentEntityResource.wrap(repoRequest.getPersistentEntity(),result,repoRequest.getBaseUri());  BeanWrapper wrapper=BeanWrapper.create(result,conversionService);  Link selfLink=entityLinks.linkForSingleResource(result.getClass(),wrapper.getProperty(repoRequest.getPersistentEntity().getIdProperty())).withSelfRel();  per.add(selfLink);  resources=per;} @AT@ 6128 @LENGTH@ 359
---------DEL ExpressionStatement@@MethodInvocation:per.add(repoRequest.buildEntitySelfLink(result,conversionService)) @AT@ 6395 @LENGTH@ 68
------------DEL MethodInvocation@@per.add(repoRequest.buildEntitySelfLink(result,conversionService)) @AT@ 6395 @LENGTH@ 67
---------------DEL SimpleName@@Name:per @AT@ 6395 @LENGTH@ 3
---------------DEL SimpleName@@MethodName:add:[repoRequest.buildEntitySelfLink(result,conversionService)] @AT@ 6399 @LENGTH@ 63
------------------DEL MethodInvocation@@repoRequest.buildEntitySelfLink(result,conversionService) @AT@ 6403 @LENGTH@ 58
---------INS VariableDeclarationStatement@@BeanWrapper wrapper=BeanWrapper.create(result,conversionService); @TO@ Block@@ElseBody:{  PersistentEntityResource per=PersistentEntityResource.wrap(repoRequest.getPersistentEntity(),result,repoRequest.getBaseUri());  per.add(repoRequest.buildEntitySelfLink(result,conversionService));  resources=per;} @AT@ 6454 @LENGTH@ 68
------------INS SimpleType@@BeanWrapper @TO@ VariableDeclarationStatement@@BeanWrapper wrapper=BeanWrapper.create(result,conversionService); @AT@ 6454 @LENGTH@ 11
------------INS VariableDeclarationFragment@@wrapper=BeanWrapper.create(result,conversionService) @TO@ VariableDeclarationStatement@@BeanWrapper wrapper=BeanWrapper.create(result,conversionService); @AT@ 6466 @LENGTH@ 55
---------------INS SimpleName@@wrapper @TO@ VariableDeclarationFragment@@wrapper=BeanWrapper.create(result,conversionService) @AT@ 6466 @LENGTH@ 7
---------------INS MethodInvocation@@BeanWrapper.create(result,conversionService) @TO@ VariableDeclarationFragment@@wrapper=BeanWrapper.create(result,conversionService) @AT@ 6476 @LENGTH@ 45
------------------MOV SimpleName@@Name:repoRequest @TO@ MethodInvocation@@BeanWrapper.create(result,conversionService) @AT@ 6403 @LENGTH@ 11
------------------MOV SimpleName@@Name:repoRequest @TO@ MethodInvocation@@BeanWrapper.create(result,conversionService) @AT@ 6403 @LENGTH@ 11
------------------MOV SimpleName@@Name:repoRequest @TO@ MethodInvocation@@BeanWrapper.create(result,conversionService) @AT@ 6403 @LENGTH@ 11
------------------MOV SimpleName@@Name:repoRequest @TO@ MethodInvocation@@BeanWrapper.create(result,conversionService) @AT@ 6403 @LENGTH@ 11
------------------MOV SimpleName@@Name:repoRequest @TO@ MethodInvocation@@BeanWrapper.create(result,conversionService) @AT@ 6403 @LENGTH@ 11
------------------MOV SimpleName@@MethodName:buildEntitySelfLink:[result, conversionService] @TO@ MethodInvocation@@BeanWrapper.create(result,conversionService) @AT@ 6415 @LENGTH@ 46
------------------MOV SimpleName@@MethodName:buildEntitySelfLink:[result, conversionService] @TO@ MethodInvocation@@BeanWrapper.create(result,conversionService) @AT@ 6415 @LENGTH@ 46
------------------MOV SimpleName@@MethodName:buildEntitySelfLink:[result, conversionService] @TO@ MethodInvocation@@BeanWrapper.create(result,conversionService) @AT@ 6415 @LENGTH@ 46
------------------MOV SimpleName@@MethodName:buildEntitySelfLink:[result, conversionService] @TO@ MethodInvocation@@BeanWrapper.create(result,conversionService) @AT@ 6415 @LENGTH@ 46
------------------MOV SimpleName@@MethodName:buildEntitySelfLink:[result, conversionService] @TO@ MethodInvocation@@BeanWrapper.create(result,conversionService) @AT@ 6415 @LENGTH@ 46
---------INS VariableDeclarationStatement@@Link selfLink=entityLinks.linkForSingleResource(result.getClass(),wrapper.getProperty(repoRequest.getPersistentEntity().getIdProperty())).withSelfRel(); @TO@ Block@@ElseBody:{  PersistentEntityResource per=PersistentEntityResource.wrap(repoRequest.getPersistentEntity(),result,repoRequest.getBaseUri());  per.add(repoRequest.buildEntitySelfLink(result,conversionService));  resources=per;} @AT@ 6526 @LENGTH@ 324
------------INS SimpleType@@Link @TO@ VariableDeclarationStatement@@Link selfLink=entityLinks.linkForSingleResource(result.getClass(),wrapper.getProperty(repoRequest.getPersistentEntity().getIdProperty())).withSelfRel(); @AT@ 6526 @LENGTH@ 4
------------INS VariableDeclarationFragment@@selfLink=entityLinks.linkForSingleResource(result.getClass(),wrapper.getProperty(repoRequest.getPersistentEntity().getIdProperty())).withSelfRel() @TO@ VariableDeclarationStatement@@Link selfLink=entityLinks.linkForSingleResource(result.getClass(),wrapper.getProperty(repoRequest.getPersistentEntity().getIdProperty())).withSelfRel(); @AT@ 6531 @LENGTH@ 318
---------------INS SimpleName@@selfLink @TO@ VariableDeclarationFragment@@selfLink=entityLinks.linkForSingleResource(result.getClass(),wrapper.getProperty(repoRequest.getPersistentEntity().getIdProperty())).withSelfRel() @AT@ 6531 @LENGTH@ 8
---------------INS MethodInvocation@@entityLinks.linkForSingleResource(result.getClass(),wrapper.getProperty(repoRequest.getPersistentEntity().getIdProperty())).withSelfRel() @TO@ VariableDeclarationFragment@@selfLink=entityLinks.linkForSingleResource(result.getClass(),wrapper.getProperty(repoRequest.getPersistentEntity().getIdProperty())).withSelfRel() @AT@ 6542 @LENGTH@ 307
------------------INS MethodInvocation@@MethodName:linkForSingleResource:[result.getClass(), wrapper.getProperty(repoRequest.getPersistentEntity().getIdProperty())] @TO@ MethodInvocation@@entityLinks.linkForSingleResource(result.getClass(),wrapper.getProperty(repoRequest.getPersistentEntity().getIdProperty())).withSelfRel() @AT@ 6542 @LENGTH@ 262
---------------------INS MethodInvocation@@result.getClass() @TO@ MethodInvocation@@MethodName:linkForSingleResource:[result.getClass(), wrapper.getProperty(repoRequest.getPersistentEntity().getIdProperty())] @AT@ 6576 @LENGTH@ 17
------------------------INS SimpleName@@Name:result @TO@ MethodInvocation@@result.getClass() @AT@ 6576 @LENGTH@ 6
------------------------INS SimpleName@@MethodName:getClass:[] @TO@ MethodInvocation@@result.getClass() @AT@ 6583 @LENGTH@ 10
---------------------INS MethodInvocation@@wrapper.getProperty(repoRequest.getPersistentEntity().getIdProperty()) @TO@ MethodInvocation@@MethodName:linkForSingleResource:[result.getClass(), wrapper.getProperty(repoRequest.getPersistentEntity().getIdProperty())] @AT@ 6648 @LENGTH@ 155
------------------------INS SimpleName@@Name:wrapper @TO@ MethodInvocation@@wrapper.getProperty(repoRequest.getPersistentEntity().getIdProperty()) @AT@ 6648 @LENGTH@ 7
------------------------INS SimpleName@@MethodName:getProperty:[repoRequest.getPersistentEntity().getIdProperty()] @TO@ MethodInvocation@@wrapper.getProperty(repoRequest.getPersistentEntity().getIdProperty()) @AT@ 6656 @LENGTH@ 147
---------------------------INS MethodInvocation@@repoRequest.getPersistentEntity().getIdProperty() @TO@ SimpleName@@MethodName:getProperty:[repoRequest.getPersistentEntity().getIdProperty()] @AT@ 6668 @LENGTH@ 134
------------------------------INS MethodInvocation@@MethodName:getPersistentEntity:[] @TO@ MethodInvocation@@repoRequest.getPersistentEntity().getIdProperty() @AT@ 6668 @LENGTH@ 33
------------------------------INS SimpleName@@Name:repoRequest @TO@ MethodInvocation@@repoRequest.getPersistentEntity().getIdProperty() @AT@ 6668 @LENGTH@ 11
------------------------------INS SimpleName@@MethodName:getIdProperty:[] @TO@ MethodInvocation@@repoRequest.getPersistentEntity().getIdProperty() @AT@ 6787 @LENGTH@ 15
------------------INS SimpleName@@Name:entityLinks @TO@ MethodInvocation@@entityLinks.linkForSingleResource(result.getClass(),wrapper.getProperty(repoRequest.getPersistentEntity().getIdProperty())).withSelfRel() @AT@ 6542 @LENGTH@ 11
------------------INS SimpleName@@MethodName:withSelfRel:[] @TO@ MethodInvocation@@entityLinks.linkForSingleResource(result.getClass(),wrapper.getProperty(repoRequest.getPersistentEntity().getIdProperty())).withSelfRel() @AT@ 6836 @LENGTH@ 13
---------INS ExpressionStatement@@MethodInvocation:per.add(selfLink) @TO@ Block@@ElseBody:{  PersistentEntityResource per=PersistentEntityResource.wrap(repoRequest.getPersistentEntity(),result,repoRequest.getBaseUri());  per.add(repoRequest.buildEntitySelfLink(result,conversionService));  resources=per;} @AT@ 6854 @LENGTH@ 18
------------INS MethodInvocation@@per.add(selfLink) @TO@ ExpressionStatement@@MethodInvocation:per.add(selfLink) @AT@ 6854 @LENGTH@ 17
---------------INS SimpleName@@Name:per @TO@ MethodInvocation@@per.add(selfLink) @AT@ 6854 @LENGTH@ 3
---------------INS SimpleName@@MethodName:add:[selfLink] @TO@ MethodInvocation@@per.add(selfLink) @AT@ 6858 @LENGTH@ 13
------------------INS SimpleName@@selfLink @TO@ SimpleName@@MethodName:add:[selfLink] @AT@ 6862 @LENGTH@ 8
---UPD IfStatement@@if (null == result) {  resources=new BaseUriAwareResource(EMPTY_RESOURCE_LIST);} else {  PersistentEntityResource per=PersistentEntityResource.wrap(repoRequest.getPersistentEntity(),result,repoRequest.getBaseUri());  per.add(repoRequest.buildEntitySelfLink(result,conversionService));  resources=per;} @TO@ if (null == result) {  resources=new BaseUriAwareResource(EMPTY_RESOURCE_LIST);} else {  PersistentEntityResource per=PersistentEntityResource.wrap(repoRequest.getPersistentEntity(),result,repoRequest.getBaseUri());  BeanWrapper wrapper=BeanWrapper.create(result,conversionService);  Link selfLink=entityLinks.linkForSingleResource(result.getClass(),wrapper.getProperty(repoRequest.getPersistentEntity().getIdProperty())).withSelfRel();  per.add(selfLink);  resources=per;} @AT@ 6036 @LENGTH@ 451
------UPD Block@@ElseBody:{  PersistentEntityResource per=PersistentEntityResource.wrap(repoRequest.getPersistentEntity(),result,repoRequest.getBaseUri());  per.add(repoRequest.buildEntitySelfLink(result,conversionService));  resources=per;} @TO@ ElseBody:{  PersistentEntityResource per=PersistentEntityResource.wrap(repoRequest.getPersistentEntity(),result,repoRequest.getBaseUri());  BeanWrapper wrapper=BeanWrapper.create(result,conversionService);  Link selfLink=entityLinks.linkForSingleResource(result.getClass(),wrapper.getProperty(repoRequest.getPersistentEntity().getIdProperty())).withSelfRel();  per.add(selfLink);  resources=per;} @AT@ 6128 @LENGTH@ 359
---------DEL ExpressionStatement@@MethodInvocation:per.add(repoRequest.buildEntitySelfLink(result,conversionService)) @AT@ 6395 @LENGTH@ 68
------------DEL MethodInvocation@@per.add(repoRequest.buildEntitySelfLink(result,conversionService)) @AT@ 6395 @LENGTH@ 67
---------------DEL SimpleName@@Name:per @AT@ 6395 @LENGTH@ 3
---------------DEL SimpleName@@MethodName:add:[repoRequest.buildEntitySelfLink(result,conversionService)] @AT@ 6399 @LENGTH@ 63
------------------DEL MethodInvocation@@repoRequest.buildEntitySelfLink(result,conversionService) @AT@ 6403 @LENGTH@ 58
---------INS VariableDeclarationStatement@@BeanWrapper wrapper=BeanWrapper.create(result,conversionService); @TO@ Block@@ElseBody:{  PersistentEntityResource per=PersistentEntityResource.wrap(repoRequest.getPersistentEntity(),result,repoRequest.getBaseUri());  per.add(repoRequest.buildEntitySelfLink(result,conversionService));  resources=per;} @AT@ 6454 @LENGTH@ 68
------------INS SimpleType@@BeanWrapper @TO@ VariableDeclarationStatement@@BeanWrapper wrapper=BeanWrapper.create(result,conversionService); @AT@ 6454 @LENGTH@ 11
------------INS VariableDeclarationFragment@@wrapper=BeanWrapper.create(result,conversionService) @TO@ VariableDeclarationStatement@@BeanWrapper wrapper=BeanWrapper.create(result,conversionService); @AT@ 6466 @LENGTH@ 55
---------------INS SimpleName@@wrapper @TO@ VariableDeclarationFragment@@wrapper=BeanWrapper.create(result,conversionService) @AT@ 6466 @LENGTH@ 7
---------------INS MethodInvocation@@BeanWrapper.create(result,conversionService) @TO@ VariableDeclarationFragment@@wrapper=BeanWrapper.create(result,conversionService) @AT@ 6476 @LENGTH@ 45
------------------MOV SimpleName@@Name:repoRequest @TO@ MethodInvocation@@BeanWrapper.create(result,conversionService) @AT@ 6403 @LENGTH@ 11
------------------MOV SimpleName@@Name:repoRequest @TO@ MethodInvocation@@BeanWrapper.create(result,conversionService) @AT@ 6403 @LENGTH@ 11
------------------MOV SimpleName@@Name:repoRequest @TO@ MethodInvocation@@BeanWrapper.create(result,conversionService) @AT@ 6403 @LENGTH@ 11
------------------MOV SimpleName@@Name:repoRequest @TO@ MethodInvocation@@BeanWrapper.create(result,conversionService) @AT@ 6403 @LENGTH@ 11
------------------MOV SimpleName@@Name:repoRequest @TO@ MethodInvocation@@BeanWrapper.create(result,conversionService) @AT@ 6403 @LENGTH@ 11
------------------MOV SimpleName@@MethodName:buildEntitySelfLink:[result, conversionService] @TO@ MethodInvocation@@BeanWrapper.create(result,conversionService) @AT@ 6415 @LENGTH@ 46
------------------MOV SimpleName@@MethodName:buildEntitySelfLink:[result, conversionService] @TO@ MethodInvocation@@BeanWrapper.create(result,conversionService) @AT@ 6415 @LENGTH@ 46
------------------MOV SimpleName@@MethodName:buildEntitySelfLink:[result, conversionService] @TO@ MethodInvocation@@BeanWrapper.create(result,conversionService) @AT@ 6415 @LENGTH@ 46
------------------MOV SimpleName@@MethodName:buildEntitySelfLink:[result, conversionService] @TO@ MethodInvocation@@BeanWrapper.create(result,conversionService) @AT@ 6415 @LENGTH@ 46
------------------MOV SimpleName@@MethodName:buildEntitySelfLink:[result, conversionService] @TO@ MethodInvocation@@BeanWrapper.create(result,conversionService) @AT@ 6415 @LENGTH@ 46
---------INS VariableDeclarationStatement@@Link selfLink=entityLinks.linkForSingleResource(result.getClass(),wrapper.getProperty(repoRequest.getPersistentEntity().getIdProperty())).withSelfRel(); @TO@ Block@@ElseBody:{  PersistentEntityResource per=PersistentEntityResource.wrap(repoRequest.getPersistentEntity(),result,repoRequest.getBaseUri());  per.add(repoRequest.buildEntitySelfLink(result,conversionService));  resources=per;} @AT@ 6526 @LENGTH@ 324
------------INS SimpleType@@Link @TO@ VariableDeclarationStatement@@Link selfLink=entityLinks.linkForSingleResource(result.getClass(),wrapper.getProperty(repoRequest.getPersistentEntity().getIdProperty())).withSelfRel(); @AT@ 6526 @LENGTH@ 4
------------INS VariableDeclarationFragment@@selfLink=entityLinks.linkForSingleResource(result.getClass(),wrapper.getProperty(repoRequest.getPersistentEntity().getIdProperty())).withSelfRel() @TO@ VariableDeclarationStatement@@Link selfLink=entityLinks.linkForSingleResource(result.getClass(),wrapper.getProperty(repoRequest.getPersistentEntity().getIdProperty())).withSelfRel(); @AT@ 6531 @LENGTH@ 318
---------------INS SimpleName@@selfLink @TO@ VariableDeclarationFragment@@selfLink=entityLinks.linkForSingleResource(result.getClass(),wrapper.getProperty(repoRequest.getPersistentEntity().getIdProperty())).withSelfRel() @AT@ 6531 @LENGTH@ 8
---------------INS MethodInvocation@@entityLinks.linkForSingleResource(result.getClass(),wrapper.getProperty(repoRequest.getPersistentEntity().getIdProperty())).withSelfRel() @TO@ VariableDeclarationFragment@@selfLink=entityLinks.linkForSingleResource(result.getClass(),wrapper.getProperty(repoRequest.getPersistentEntity().getIdProperty())).withSelfRel() @AT@ 6542 @LENGTH@ 307
------------------INS MethodInvocation@@MethodName:linkForSingleResource:[result.getClass(), wrapper.getProperty(repoRequest.getPersistentEntity().getIdProperty())] @TO@ MethodInvocation@@entityLinks.linkForSingleResource(result.getClass(),wrapper.getProperty(repoRequest.getPersistentEntity().getIdProperty())).withSelfRel() @AT@ 6542 @LENGTH@ 262
---------------------INS MethodInvocation@@result.getClass() @TO@ MethodInvocation@@MethodName:linkForSingleResource:[result.getClass(), wrapper.getProperty(repoRequest.getPersistentEntity().getIdProperty())] @AT@ 6576 @LENGTH@ 17
------------------------INS SimpleName@@Name:result @TO@ MethodInvocation@@result.getClass() @AT@ 6576 @LENGTH@ 6
------------------------INS SimpleName@@MethodName:getClass:[] @TO@ MethodInvocation@@result.getClass() @AT@ 6583 @LENGTH@ 10
---------------------INS MethodInvocation@@wrapper.getProperty(repoRequest.getPersistentEntity().getIdProperty()) @TO@ MethodInvocation@@MethodName:linkForSingleResource:[result.getClass(), wrapper.getProperty(repoRequest.getPersistentEntity().getIdProperty())] @AT@ 6648 @LENGTH@ 155
------------------------INS SimpleName@@Name:wrapper @TO@ MethodInvocation@@wrapper.getProperty(repoRequest.getPersistentEntity().getIdProperty()) @AT@ 6648 @LENGTH@ 7
------------------------INS SimpleName@@MethodName:getProperty:[repoRequest.getPersistentEntity().getIdProperty()] @TO@ MethodInvocation@@wrapper.getProperty(repoRequest.getPersistentEntity().getIdProperty()) @AT@ 6656 @LENGTH@ 147
---------------------------INS MethodInvocation@@repoRequest.getPersistentEntity().getIdProperty() @TO@ SimpleName@@MethodName:getProperty:[repoRequest.getPersistentEntity().getIdProperty()] @AT@ 6668 @LENGTH@ 134
------------------------------INS MethodInvocation@@MethodName:getPersistentEntity:[] @TO@ MethodInvocation@@repoRequest.getPersistentEntity().getIdProperty() @AT@ 6668 @LENGTH@ 33
------------------------------INS SimpleName@@Name:repoRequest @TO@ MethodInvocation@@repoRequest.getPersistentEntity().getIdProperty() @AT@ 6668 @LENGTH@ 11
------------------------------INS SimpleName@@MethodName:getIdProperty:[] @TO@ MethodInvocation@@repoRequest.getPersistentEntity().getIdProperty() @AT@ 6787 @LENGTH@ 15
------------------INS SimpleName@@Name:entityLinks @TO@ MethodInvocation@@entityLinks.linkForSingleResource(result.getClass(),wrapper.getProperty(repoRequest.getPersistentEntity().getIdProperty())).withSelfRel() @AT@ 6542 @LENGTH@ 11
------------------INS SimpleName@@MethodName:withSelfRel:[] @TO@ MethodInvocation@@entityLinks.linkForSingleResource(result.getClass(),wrapper.getProperty(repoRequest.getPersistentEntity().getIdProperty())).withSelfRel() @AT@ 6836 @LENGTH@ 13
---------INS ExpressionStatement@@MethodInvocation:per.add(selfLink) @TO@ Block@@ElseBody:{  PersistentEntityResource per=PersistentEntityResource.wrap(repoRequest.getPersistentEntity(),result,repoRequest.getBaseUri());  per.add(repoRequest.buildEntitySelfLink(result,conversionService));  resources=per;} @AT@ 6854 @LENGTH@ 18
------------INS MethodInvocation@@per.add(selfLink) @TO@ ExpressionStatement@@MethodInvocation:per.add(selfLink) @AT@ 6854 @LENGTH@ 17
---------------INS SimpleName@@Name:per @TO@ MethodInvocation@@per.add(selfLink) @AT@ 6854 @LENGTH@ 3
---------------INS SimpleName@@MethodName:add:[selfLink] @TO@ MethodInvocation@@per.add(selfLink) @AT@ 6858 @LENGTH@ 13
------------------INS SimpleName@@selfLink @TO@ SimpleName@@MethodName:add:[selfLink] @AT@ 6862 @LENGTH@ 8


UPD ExpressionStatement@@MethodInvocation:instance.tearDown(managementClient.get(),container.getName()) @TO@ MethodInvocation:current.get(i).tearDown(managementClient.get(),container.getName()) @AT@ 6064 @LENGTH@ 63


UPD MethodDeclaration@@byte[], MethodName:getFileConfiguration, String version, String profile, String name, InterruptedException, KeeperException,  @TO@ byte[], MethodName:getFileConfiguration, String version, String profile, String name,  @AT@ 3432 @LENGTH@ 111
---DEL SimpleType@@InterruptedException @AT@ 3505 @LENGTH@ 20
---DEL SimpleType@@KeeperException @AT@ 3527 @LENGTH@ 15


INS FieldDeclaration@@public, static, final, int, [DEFAULT_HOST_SSH_PORT=22] @TO@ TypeDeclaration@@[public]Ports,  @AT@ 916 @LENGTH@ 51
---INS Modifier@@public @TO@ FieldDeclaration@@public, static, final, int, [DEFAULT_HOST_SSH_PORT=22] @AT@ 916 @LENGTH@ 6
---INS Modifier@@static @TO@ FieldDeclaration@@public, static, final, int, [DEFAULT_HOST_SSH_PORT=22] @AT@ 923 @LENGTH@ 6
---INS Modifier@@final @TO@ FieldDeclaration@@public, static, final, int, [DEFAULT_HOST_SSH_PORT=22] @AT@ 930 @LENGTH@ 5
---INS PrimitiveType@@int @TO@ FieldDeclaration@@public, static, final, int, [DEFAULT_HOST_SSH_PORT=22] @AT@ 936 @LENGTH@ 3
---INS VariableDeclarationFragment@@DEFAULT_HOST_SSH_PORT=22 @TO@ FieldDeclaration@@public, static, final, int, [DEFAULT_HOST_SSH_PORT=22] @AT@ 940 @LENGTH@ 26
------INS SimpleName@@DEFAULT_HOST_SSH_PORT @TO@ VariableDeclarationFragment@@DEFAULT_HOST_SSH_PORT=22 @AT@ 940 @LENGTH@ 21
------INS NumberLiteral@@22 @TO@ VariableDeclarationFragment@@DEFAULT_HOST_SSH_PORT=22 @AT@ 964 @LENGTH@ 2


UPD ExpressionStatement@@MethodInvocation:from("direct:fromCsv").unmarshal().bindy(BindyType.Csv,Record.class).setProperty("addressLine1",simple("${in.body.addressLine1}")).setProperty("addressLine2",simple("${in.body.addressLine2}")).log("${in.body}").to("mock:result") @TO@ MethodInvocation:from("direct:fromCsv").unmarshal().bindy(BindyType.Csv,MyCsvRecord.class).setProperty("addressLine1",simple("${in.body.addressLine1}")).setProperty("addressLine2",simple("${in.body.addressLine2}")).log("${in.body}").to("mock:result") @AT@ 4632 @LENGTH@ 298
---UPD MethodInvocation@@from("direct:fromCsv").unmarshal().bindy(BindyType.Csv,Record.class).setProperty("addressLine1",simple("${in.body.addressLine1}")).setProperty("addressLine2",simple("${in.body.addressLine2}")).log("${in.body}").to("mock:result") @TO@ from("direct:fromCsv").unmarshal().bindy(BindyType.Csv,MyCsvRecord.class).setProperty("addressLine1",simple("${in.body.addressLine1}")).setProperty("addressLine2",simple("${in.body.addressLine2}")).log("${in.body}").to("mock:result") @AT@ 4632 @LENGTH@ 297
------UPD MethodInvocation@@MethodName:bindy:[BindyType.Csv, Record.class] @TO@ MethodName:bindy:[BindyType.Csv, MyCsvRecord.class] @AT@ 4632 @LENGTH@ 69
---------UPD TypeLiteral@@Record.class @TO@ MyCsvRecord.class @AT@ 4688 @LENGTH@ 12


UPD MethodDeclaration@@private, List<String>, MethodName:assertCompletion, MBeanServer mbeanServer, ObjectName on, String componentName, HashMap<String,Object> properties, String completionText, InstanceNotFoundException, MBeanException, ReflectionException,  @TO@ private, List<String>, MethodName:assertCompletion, MBeanServer mbeanServer, ObjectName on, String componentName, HashMap<String,Object> properties, String completionText, Exception,  @AT@ 2536 @LENGTH@ 733
---DEL SimpleType@@InstanceNotFoundException @AT@ 2756 @LENGTH@ 25
---UPD SimpleType@@MBeanException @TO@ Exception @AT@ 2783 @LENGTH@ 14
---DEL SimpleType@@ReflectionException @AT@ 2799 @LENGTH@ 19


UPD ExpressionStatement@@MethodInvocation:ROOT_LOGGER.existingServerWithState(serverName,existing.getState()) @TO@ MethodInvocation:ROOT_LOGGER.existingServerWithState(serverName,server.getState()) @AT@ 10266 @LENGTH@ 69
---UPD MethodInvocation@@ROOT_LOGGER.existingServerWithState(serverName,existing.getState()) @TO@ ROOT_LOGGER.existingServerWithState(serverName,server.getState()) @AT@ 10266 @LENGTH@ 68
------UPD SimpleName@@MethodName:existingServerWithState:[serverName, existing.getState()] @TO@ MethodName:existingServerWithState:[serverName, server.getState()] @AT@ 10278 @LENGTH@ 56
---------UPD MethodInvocation@@existing.getState() @TO@ server.getState() @AT@ 10314 @LENGTH@ 19
------------UPD SimpleName@@Name:existing @TO@ Name:server @AT@ 10314 @LENGTH@ 8


UPD MethodDeclaration@@public, voidMethodName:RepositoryEntityController, Repositories repositories, RepositoryRestConfiguration config, DomainClassConverter domainClassConverter, ConversionService conversionService,  @TO@ public, voidMethodName:RepositoryEntityController, Repositories repositories, RepositoryRestConfiguration config, DomainClassConverter domainClassConverter, ConversionService conversionService, EntityLinks entityLinks,  @AT@ 2473 @LENGTH@ 358
---UPD SuperConstructorInvocation@@super(repositories,config,domainClassConverter,conversionService);
 @TO@ super(repositories,config,domainClassConverter,conversionService,entityLinks);
 @AT@ 2759 @LENGTH@ 69
------INS SimpleName@@entityLinks @TO@ SuperConstructorInvocation@@super(repositories,config,domainClassConverter,conversionService);
 @AT@ 2968 @LENGTH@ 11
---INS SingleVariableDeclaration@@EntityLinks entityLinks @TO@ MethodDeclaration@@public, voidMethodName:RepositoryEntityController, Repositories repositories, RepositoryRestConfiguration config, DomainClassConverter domainClassConverter, ConversionService conversionService,  @AT@ 2838 @LENGTH@ 23
------INS SimpleType@@EntityLinks @TO@ SingleVariableDeclaration@@EntityLinks entityLinks @AT@ 2838 @LENGTH@ 11
------INS SimpleName@@entityLinks @TO@ SingleVariableDeclaration@@EntityLinks entityLinks @AT@ 2850 @LENGTH@ 11


MOV MethodDeclaration@@private, static, void, MethodName:transformModulesToAttributes, final PathAddress address, final String newName, final String oldName, final TransformationContext context, final ModelNode model,  @TO@ TypeDeclaration@@[private, static]ModulesToAttributeTransformer, [CombinedTransformer] @AT@ 12313 @LENGTH@ 526
---DEL Modifier@@static @AT@ 12321 @LENGTH@ 6


UPD TryStatement@@try {  client.discard();} catch (Exception ex) {  throw convertJedisAccessException(ex);} @TO@ try {  if (isPipelined()) {    pipeline.discard();    return;  }  client.discard();} catch (Exception ex) {  throw convertJedisAccessException(ex);} @AT@ 13379 @LENGTH@ 99
---INS IfStatement@@if (isPipelined()) {  pipeline.discard();  return;} @TO@ TryStatement@@try {  client.discard();} catch (Exception ex) {  throw convertJedisAccessException(ex);} @AT@ 13388 @LENGTH@ 61
------INS MethodInvocation@@MethodName:isPipelined:[] @TO@ IfStatement@@if (isPipelined()) {  pipeline.discard();  return;} @AT@ 13392 @LENGTH@ 13
------INS Block@@ThenBody:{  pipeline.discard();  return;} @TO@ IfStatement@@if (isPipelined()) {  pipeline.discard();  return;} @AT@ 13407 @LENGTH@ 42
---------INS ExpressionStatement@@MethodInvocation:pipeline.discard() @TO@ Block@@ThenBody:{  pipeline.discard();  return;} @AT@ 13413 @LENGTH@ 19
------------INS MethodInvocation@@pipeline.discard() @TO@ ExpressionStatement@@MethodInvocation:pipeline.discard() @AT@ 13413 @LENGTH@ 18
---------------INS SimpleName@@Name:pipeline @TO@ MethodInvocation@@pipeline.discard() @AT@ 13413 @LENGTH@ 8
---------------INS SimpleName@@MethodName:discard:[] @TO@ MethodInvocation@@pipeline.discard() @AT@ 13422 @LENGTH@ 9
---------INS ReturnStatement@@ @TO@ Block@@ThenBody:{  pipeline.discard();  return;} @AT@ 13437 @LENGTH@ 7


UPD Block@@ThenBody:{  Field field=null;  boolean fieldFound=false;  try {    field=getField(protocolClass,attrName);    fieldFound=true;  } catch (  NoSuchFieldException e) {    context.getFailureDescription().set(String.format("Unknown metric %s",attrName));  }  if (fieldFound && started) {    Channel channel=(Channel)controller.getValue();    int index=protocolName.lastIndexOf('.');    if (index > 0)     protocolName=protocolName.substring(index + 1);    Protocol protocol=channel.getProtocolStack().findProtocol(protocolName);    if (protocol == null) {      System.out.println("protocol is null");      context.getFailureDescription().set(String.format("Could not retrieve protocol %s",protocolName));    }    FieldTypes type=null;    if (ChannelInstanceResourceDefinition.isEquivalentModelTypeAvailable(field.getType())) {      type=FieldTypes.getStat(field.getType().toString());    } else {      type=FieldTypes.NON_PRIMITIVE;    }    try {      result=getProtocolFieldValue(protocol,field,type);    } catch (    PrivilegedActionException pae) {      context.getFailureDescription().set(String.format("Privileged access exception on attribute %s",attrName));      System.out.println(pae.toString());    }catch (    InstantiationException ie) {      context.getFailureDescription().set(String.format("Instantiation exception on converter for attribute %s",attrName));      System.out.println(ie.toString());    }    context.getResult().set(result);  }} @TO@ ThenBody:{  Field field=null;  boolean fieldFound=false;  try {    field=getField(protocolClass,attrName);    fieldFound=true;  } catch (  NoSuchFieldException e) {    context.getFailureDescription().set(JGroupsMessages.MESSAGES.unknownMetric(attrName));  }  if (fieldFound && started) {    Channel channel=(Channel)controller.getValue();    int index=protocolName.lastIndexOf('.');    if (index > 0)     protocolName=protocolName.substring(index + 1);    Protocol protocol=channel.getProtocolStack().findProtocol(protocolName);    if (protocol == null) {      context.getFailureDescription().set(JGroupsMessages.MESSAGES.protocolNotFoundInStack(protocolName));    }    FieldTypes type=null;    if (ChannelInstanceResourceDefinition.isEquivalentModelTypeAvailable(field.getType())) {      type=FieldTypes.getStat(field.getType().toString());    } else {      type=FieldTypes.NON_PRIMITIVE;    }    try {      result=getProtocolFieldValue(protocol,field,type);    } catch (    PrivilegedActionException pae) {      context.getFailureDescription().set(JGroupsMessages.MESSAGES.privilegedAccessExceptionForAttribute(attrName));    }catch (    InstantiationException ie) {      context.getFailureDescription().set(JGroupsMessages.MESSAGES.instantiationExceptionOnConverterForAttribute(attrName));    }    context.getResult().set(result);  }} @AT@ 4160 @LENGTH@ 2267
---UPD TryStatement@@try {  field=getField(protocolClass,attrName);  fieldFound=true;} catch (NoSuchFieldException e) {  context.getFailureDescription().set(String.format("Unknown metric %s",attrName));} @TO@ try {  field=getField(protocolClass,attrName);  fieldFound=true;} catch (NoSuchFieldException e) {  context.getFailureDescription().set(JGroupsMessages.MESSAGES.unknownMetric(attrName));} @AT@ 4290 @LENGTH@ 259
------UPD CatchClause@@catch (NoSuchFieldException e) {  context.getFailureDescription().set(String.format("Unknown metric %s",attrName));} @TO@ catch (NoSuchFieldException e) {  context.getFailureDescription().set(JGroupsMessages.MESSAGES.unknownMetric(attrName));} @AT@ 4404 @LENGTH@ 145
---------UPD ExpressionStatement@@MethodInvocation:context.getFailureDescription().set(String.format("Unknown metric %s",attrName)) @TO@ MethodInvocation:context.getFailureDescription().set(JGroupsMessages.MESSAGES.unknownMetric(attrName)) @AT@ 4453 @LENGTH@ 82
------------UPD MethodInvocation@@context.getFailureDescription().set(String.format("Unknown metric %s",attrName)) @TO@ context.getFailureDescription().set(JGroupsMessages.MESSAGES.unknownMetric(attrName)) @AT@ 4453 @LENGTH@ 81
---------------UPD SimpleName@@MethodName:set:[String.format("Unknown metric %s",attrName)] @TO@ MethodName:set:[JGroupsMessages.MESSAGES.unknownMetric(attrName)] @AT@ 4485 @LENGTH@ 49
------------------UPD MethodInvocation@@String.format("Unknown metric %s",attrName) @TO@ JGroupsMessages.MESSAGES.unknownMetric(attrName) @AT@ 4489 @LENGTH@ 44
---------------------DEL SimpleName@@Name:String @AT@ 4489 @LENGTH@ 6
---------------------UPD SimpleName@@MethodName:format:["Unknown metric %s", attrName] @TO@ MethodName:unknownMetric:[attrName] @AT@ 4496 @LENGTH@ 37
------------------------DEL StringLiteral@@"Unknown metric %s" @AT@ 4503 @LENGTH@ 19
---------------------INS QualifiedName@@Name:JGroupsMessages.MESSAGES @TO@ MethodInvocation@@String.format("Unknown metric %s",attrName) @AT@ 5565 @LENGTH@ 24
---UPD IfStatement@@if (fieldFound && started) {  Channel channel=(Channel)controller.getValue();  int index=protocolName.lastIndexOf('.');  if (index > 0)   protocolName=protocolName.substring(index + 1);  Protocol protocol=channel.getProtocolStack().findProtocol(protocolName);  if (protocol == null) {    System.out.println("protocol is null");    context.getFailureDescription().set(String.format("Could not retrieve protocol %s",protocolName));  }  FieldTypes type=null;  if (ChannelInstanceResourceDefinition.isEquivalentModelTypeAvailable(field.getType())) {    type=FieldTypes.getStat(field.getType().toString());  } else {    type=FieldTypes.NON_PRIMITIVE;  }  try {    result=getProtocolFieldValue(protocol,field,type);  } catch (  PrivilegedActionException pae) {    context.getFailureDescription().set(String.format("Privileged access exception on attribute %s",attrName));    System.out.println(pae.toString());  }catch (  InstantiationException ie) {    context.getFailureDescription().set(String.format("Instantiation exception on converter for attribute %s",attrName));    System.out.println(ie.toString());  }  context.getResult().set(result);} @TO@ if (fieldFound && started) {  Channel channel=(Channel)controller.getValue();  int index=protocolName.lastIndexOf('.');  if (index > 0)   protocolName=protocolName.substring(index + 1);  Protocol protocol=channel.getProtocolStack().findProtocol(protocolName);  if (protocol == null) {    context.getFailureDescription().set(JGroupsMessages.MESSAGES.protocolNotFoundInStack(protocolName));  }  FieldTypes type=null;  if (ChannelInstanceResourceDefinition.isEquivalentModelTypeAvailable(field.getType())) {    type=FieldTypes.getStat(field.getType().toString());  } else {    type=FieldTypes.NON_PRIMITIVE;  }  try {    result=getProtocolFieldValue(protocol,field,type);  } catch (  PrivilegedActionException pae) {    context.getFailureDescription().set(JGroupsMessages.MESSAGES.privilegedAccessExceptionForAttribute(attrName));  }catch (  InstantiationException ie) {    context.getFailureDescription().set(JGroupsMessages.MESSAGES.instantiationExceptionOnConverterForAttribute(attrName));  }  context.getResult().set(result);} @AT@ 4649 @LENGTH@ 1772
------UPD Block@@ThenBody:{  Channel channel=(Channel)controller.getValue();  int index=protocolName.lastIndexOf('.');  if (index > 0)   protocolName=protocolName.substring(index + 1);  Protocol protocol=channel.getProtocolStack().findProtocol(protocolName);  if (protocol == null) {    System.out.println("protocol is null");    context.getFailureDescription().set(String.format("Could not retrieve protocol %s",protocolName));  }  FieldTypes type=null;  if (ChannelInstanceResourceDefinition.isEquivalentModelTypeAvailable(field.getType())) {    type=FieldTypes.getStat(field.getType().toString());  } else {    type=FieldTypes.NON_PRIMITIVE;  }  try {    result=getProtocolFieldValue(protocol,field,type);  } catch (  PrivilegedActionException pae) {    context.getFailureDescription().set(String.format("Privileged access exception on attribute %s",attrName));    System.out.println(pae.toString());  }catch (  InstantiationException ie) {    context.getFailureDescription().set(String.format("Instantiation exception on converter for attribute %s",attrName));    System.out.println(ie.toString());  }  context.getResult().set(result);} @TO@ ThenBody:{  Channel channel=(Channel)controller.getValue();  int index=protocolName.lastIndexOf('.');  if (index > 0)   protocolName=protocolName.substring(index + 1);  Protocol protocol=channel.getProtocolStack().findProtocol(protocolName);  if (protocol == null) {    context.getFailureDescription().set(JGroupsMessages.MESSAGES.protocolNotFoundInStack(protocolName));  }  FieldTypes type=null;  if (ChannelInstanceResourceDefinition.isEquivalentModelTypeAvailable(field.getType())) {    type=FieldTypes.getStat(field.getType().toString());  } else {    type=FieldTypes.NON_PRIMITIVE;  }  try {    result=getProtocolFieldValue(protocol,field,type);  } catch (  PrivilegedActionException pae) {    context.getFailureDescription().set(JGroupsMessages.MESSAGES.privilegedAccessExceptionForAttribute(attrName));  }catch (  InstantiationException ie) {    context.getFailureDescription().set(JGroupsMessages.MESSAGES.instantiationExceptionOnConverterForAttribute(attrName));  }  context.getResult().set(result);} @AT@ 4676 @LENGTH@ 1745
---------UPD IfStatement@@if (protocol == null) {  System.out.println("protocol is null");  context.getFailureDescription().set(String.format("Could not retrieve protocol %s",protocolName));} @TO@ if (protocol == null) {  context.getFailureDescription().set(JGroupsMessages.MESSAGES.protocolNotFoundInStack(protocolName));} @AT@ 5104 @LENGTH@ 221
------------UPD Block@@ThenBody:{  System.out.println("protocol is null");  context.getFailureDescription().set(String.format("Could not retrieve protocol %s",protocolName));} @TO@ ThenBody:{  context.getFailureDescription().set(JGroupsMessages.MESSAGES.protocolNotFoundInStack(protocolName));} @AT@ 5126 @LENGTH@ 199
---------------DEL ExpressionStatement@@MethodInvocation:System.out.println("protocol is null") @AT@ 5148 @LENGTH@ 39
------------------DEL MethodInvocation@@System.out.println("protocol is null") @AT@ 5148 @LENGTH@ 38
---------------------DEL QualifiedName@@Name:System.out @AT@ 5148 @LENGTH@ 10
---------------------DEL SimpleName@@MethodName:println:["protocol is null"] @AT@ 5159 @LENGTH@ 27
------------------------DEL StringLiteral@@"protocol is null" @AT@ 5167 @LENGTH@ 18
---------------UPD ExpressionStatement@@MethodInvocation:context.getFailureDescription().set(String.format("Could not retrieve protocol %s",protocolName)) @TO@ MethodInvocation:context.getFailureDescription().set(JGroupsMessages.MESSAGES.protocolNotFoundInStack(protocolName)) @AT@ 5208 @LENGTH@ 99
------------------UPD MethodInvocation@@context.getFailureDescription().set(String.format("Could not retrieve protocol %s",protocolName)) @TO@ context.getFailureDescription().set(JGroupsMessages.MESSAGES.protocolNotFoundInStack(protocolName)) @AT@ 5208 @LENGTH@ 98
---------------------UPD SimpleName@@MethodName:set:[String.format("Could not retrieve protocol %s",protocolName)] @TO@ MethodName:set:[JGroupsMessages.MESSAGES.protocolNotFoundInStack(protocolName)] @AT@ 5240 @LENGTH@ 66
------------------------UPD MethodInvocation@@String.format("Could not retrieve protocol %s",protocolName) @TO@ JGroupsMessages.MESSAGES.protocolNotFoundInStack(protocolName) @AT@ 5244 @LENGTH@ 61
---------------------------DEL SimpleName@@Name:String @AT@ 5244 @LENGTH@ 6
---------------------------UPD SimpleName@@MethodName:format:["Could not retrieve protocol %s", protocolName] @TO@ MethodName:protocolNotFoundInStack:[protocolName] @AT@ 5251 @LENGTH@ 54
------------------------------DEL StringLiteral@@"Could not retrieve protocol %s" @AT@ 5258 @LENGTH@ 32
---------------------------INS QualifiedName@@Name:JGroupsMessages.MESSAGES @TO@ MethodInvocation@@String.format("Could not retrieve protocol %s",protocolName) @AT@ 6264 @LENGTH@ 24
---------UPD TryStatement@@try {  result=getProtocolFieldValue(protocol,field,type);} catch (PrivilegedActionException pae) {  context.getFailureDescription().set(String.format("Privileged access exception on attribute %s",attrName));  System.out.println(pae.toString());}catch (InstantiationException ie) {  context.getFailureDescription().set(String.format("Instantiation exception on converter for attribute %s",attrName));  System.out.println(ie.toString());} @TO@ try {  result=getProtocolFieldValue(protocol,field,type);} catch (PrivilegedActionException pae) {  context.getFailureDescription().set(JGroupsMessages.MESSAGES.privilegedAccessExceptionForAttribute(attrName));}catch (InstantiationException ie) {  context.getFailureDescription().set(JGroupsMessages.MESSAGES.instantiationExceptionOnConverterForAttribute(attrName));} @AT@ 5745 @LENGTH@ 620
------------UPD CatchClause@@catch (PrivilegedActionException pae) {  context.getFailureDescription().set(String.format("Privileged access exception on attribute %s",attrName));  System.out.println(pae.toString());} @TO@ catch (PrivilegedActionException pae) {  context.getFailureDescription().set(JGroupsMessages.MESSAGES.privilegedAccessExceptionForAttribute(attrName));} @AT@ 5860 @LENGTH@ 242
---------------UPD ExpressionStatement@@MethodInvocation:context.getFailureDescription().set(String.format("Privileged access exception on attribute %s",attrName)) @TO@ MethodInvocation:context.getFailureDescription().set(JGroupsMessages.MESSAGES.privilegedAccessExceptionForAttribute(attrName)) @AT@ 5920 @LENGTH@ 108
------------------UPD MethodInvocation@@context.getFailureDescription().set(String.format("Privileged access exception on attribute %s",attrName)) @TO@ context.getFailureDescription().set(JGroupsMessages.MESSAGES.privilegedAccessExceptionForAttribute(attrName)) @AT@ 5920 @LENGTH@ 107
---------------------UPD SimpleName@@MethodName:set:[String.format("Privileged access exception on attribute %s",attrName)] @TO@ MethodName:set:[JGroupsMessages.MESSAGES.privilegedAccessExceptionForAttribute(attrName)] @AT@ 5952 @LENGTH@ 75
------------------------UPD MethodInvocation@@String.format("Privileged access exception on attribute %s",attrName) @TO@ JGroupsMessages.MESSAGES.privilegedAccessExceptionForAttribute(attrName) @AT@ 5956 @LENGTH@ 70
---------------------------DEL SimpleName@@Name:String @AT@ 5956 @LENGTH@ 6
---------------------------UPD SimpleName@@MethodName:format:["Privileged access exception on attribute %s", attrName] @TO@ MethodName:privilegedAccessExceptionForAttribute:[attrName] @AT@ 5963 @LENGTH@ 63
------------------------------DEL StringLiteral@@"Privileged access exception on attribute %s" @AT@ 5970 @LENGTH@ 45
---------------------------INS QualifiedName@@Name:JGroupsMessages.MESSAGES @TO@ MethodInvocation@@String.format("Privileged access exception on attribute %s",attrName) @AT@ 6977 @LENGTH@ 24
---------------DEL ExpressionStatement@@MethodInvocation:System.out.println(pae.toString()) @AT@ 6049 @LENGTH@ 35
------------------DEL MethodInvocation@@System.out.println(pae.toString()) @AT@ 6049 @LENGTH@ 34
---------------------DEL QualifiedName@@Name:System.out @AT@ 6049 @LENGTH@ 10
---------------------DEL SimpleName@@MethodName:println:[pae.toString()] @AT@ 6060 @LENGTH@ 23
------------------------DEL MethodInvocation@@pae.toString() @AT@ 6068 @LENGTH@ 14
---------------------------DEL SimpleName@@Name:pae @AT@ 6068 @LENGTH@ 3
---------------------------DEL SimpleName@@MethodName:toString:[] @AT@ 6072 @LENGTH@ 10
------------UPD CatchClause@@catch (InstantiationException ie) {  context.getFailureDescription().set(String.format("Instantiation exception on converter for attribute %s",attrName));  System.out.println(ie.toString());} @TO@ catch (InstantiationException ie) {  context.getFailureDescription().set(JGroupsMessages.MESSAGES.instantiationExceptionOnConverterForAttribute(attrName));} @AT@ 6119 @LENGTH@ 246
---------------UPD ExpressionStatement@@MethodInvocation:context.getFailureDescription().set(String.format("Instantiation exception on converter for attribute %s",attrName)) @TO@ MethodInvocation:context.getFailureDescription().set(JGroupsMessages.MESSAGES.instantiationExceptionOnConverterForAttribute(attrName)) @AT@ 6174 @LENGTH@ 118
------------------UPD MethodInvocation@@context.getFailureDescription().set(String.format("Instantiation exception on converter for attribute %s",attrName)) @TO@ context.getFailureDescription().set(JGroupsMessages.MESSAGES.instantiationExceptionOnConverterForAttribute(attrName)) @AT@ 6174 @LENGTH@ 117
---------------------UPD SimpleName@@MethodName:set:[String.format("Instantiation exception on converter for attribute %s",attrName)] @TO@ MethodName:set:[JGroupsMessages.MESSAGES.instantiationExceptionOnConverterForAttribute(attrName)] @AT@ 6206 @LENGTH@ 85
------------------------UPD MethodInvocation@@String.format("Instantiation exception on converter for attribute %s",attrName) @TO@ JGroupsMessages.MESSAGES.instantiationExceptionOnConverterForAttribute(attrName) @AT@ 6210 @LENGTH@ 80
---------------------------DEL SimpleName@@Name:String @AT@ 6210 @LENGTH@ 6
---------------------------UPD SimpleName@@MethodName:format:["Instantiation exception on converter for attribute %s", attrName] @TO@ MethodName:instantiationExceptionOnConverterForAttribute:[attrName] @AT@ 6217 @LENGTH@ 73
------------------------------DEL StringLiteral@@"Instantiation exception on converter for attribute %s" @AT@ 6224 @LENGTH@ 55
---------------------------INS QualifiedName@@Name:JGroupsMessages.MESSAGES @TO@ MethodInvocation@@String.format("Instantiation exception on converter for attribute %s",attrName) @AT@ 7177 @LENGTH@ 24
---------------DEL ExpressionStatement@@MethodInvocation:System.out.println(ie.toString()) @AT@ 6313 @LENGTH@ 34
------------------DEL MethodInvocation@@System.out.println(ie.toString()) @AT@ 6313 @LENGTH@ 33
---------------------DEL QualifiedName@@Name:System.out @AT@ 6313 @LENGTH@ 10
---------------------DEL SimpleName@@MethodName:println:[ie.toString()] @AT@ 6324 @LENGTH@ 22
------------------------DEL MethodInvocation@@ie.toString() @AT@ 6332 @LENGTH@ 13
---------------------------DEL SimpleName@@Name:ie @AT@ 6332 @LENGTH@ 2
---------------------------DEL SimpleName@@MethodName:toString:[] @AT@ 6335 @LENGTH@ 10


UPD IfStatement@@if (messageHandler == null) {  EjbLogger.ROOT_LOGGER.unsupportedMessageHeader(Integer.toHexString(header),channel);  return;} @TO@ if (messageHandler == null) {  channel.receiveMessage(this);  EjbLogger.ROOT_LOGGER.unsupportedMessageHeader(Integer.toHexString(header),channel);  return;} @AT@ 10151 @LENGTH@ 157
---UPD Block@@ThenBody:{  EjbLogger.ROOT_LOGGER.unsupportedMessageHeader(Integer.toHexString(header),channel);  return;} @TO@ ThenBody:{  channel.receiveMessage(this);  EjbLogger.ROOT_LOGGER.unsupportedMessageHeader(Integer.toHexString(header),channel);  return;} @AT@ 10179 @LENGTH@ 129
------INS ExpressionStatement@@MethodInvocation:channel.receiveMessage(this) @TO@ Block@@ThenBody:{  EjbLogger.ROOT_LOGGER.unsupportedMessageHeader(Integer.toHexString(header),channel);  return;} @AT@ 10258 @LENGTH@ 29
---------INS MethodInvocation@@channel.receiveMessage(this) @TO@ ExpressionStatement@@MethodInvocation:channel.receiveMessage(this) @AT@ 10258 @LENGTH@ 28
------------INS SimpleName@@Name:channel @TO@ MethodInvocation@@channel.receiveMessage(this) @AT@ 10258 @LENGTH@ 7
------------INS SimpleName@@MethodName:receiveMessage:[this] @TO@ MethodInvocation@@channel.receiveMessage(this) @AT@ 10266 @LENGTH@ 20
---------------INS ThisExpression@@this @TO@ SimpleName@@MethodName:receiveMessage:[this] @AT@ 10281 @LENGTH@ 4


UPD ReturnStatement@@ClassInstanceCreation:new FileHandlerReloadingDetector(handler,params.getReloadingRefreshDelay()) @TO@ ConditionalExpression:(refreshDelay != null) ? new FileHandlerReloadingDetector(handler,refreshDelay) : new FileHandlerReloadingDetector(handler) @AT@ 1698 @LENGTH@ 100
---DEL ClassInstanceCreation@@FileHandlerReloadingDetector[handler, params.getReloadingRefreshDelay()] @AT@ 1705 @LENGTH@ 92
------DEL MethodInvocation@@params.getReloadingRefreshDelay() @AT@ 1763 @LENGTH@ 33
---------DEL SimpleName@@Name:params @AT@ 1763 @LENGTH@ 6
---------DEL SimpleName@@MethodName:getReloadingRefreshDelay:[] @AT@ 1770 @LENGTH@ 26
---INS ConditionalExpression@@(refreshDelay != null) ? new FileHandlerReloadingDetector(handler,refreshDelay) : new FileHandlerReloadingDetector(handler) @TO@ ReturnStatement@@ClassInstanceCreation:new FileHandlerReloadingDetector(handler,params.getReloadingRefreshDelay()) @AT@ 1768 @LENGTH@ 158
------INS ParenthesizedExpression@@(refreshDelay != null) @TO@ ConditionalExpression@@(refreshDelay != null) ? new FileHandlerReloadingDetector(handler,refreshDelay) : new FileHandlerReloadingDetector(handler) @AT@ 1768 @LENGTH@ 22
---------INS InfixExpression@@refreshDelay != null @TO@ ParenthesizedExpression@@(refreshDelay != null) @AT@ 1769 @LENGTH@ 20
------------INS SimpleName@@refreshDelay @TO@ InfixExpression@@refreshDelay != null @AT@ 1769 @LENGTH@ 12
------------INS Operator@@!= @TO@ InfixExpression@@refreshDelay != null @AT@ 1781 @LENGTH@ 2
------------INS NullLiteral@@null @TO@ InfixExpression@@refreshDelay != null @AT@ 1785 @LENGTH@ 4
------INS ClassInstanceCreation@@FileHandlerReloadingDetector[handler, refreshDelay] @TO@ ConditionalExpression@@(refreshDelay != null) ? new FileHandlerReloadingDetector(handler,refreshDelay) : new FileHandlerReloadingDetector(handler) @AT@ 1793 @LENGTH@ 72
---------MOV New@@new @TO@ ClassInstanceCreation@@FileHandlerReloadingDetector[handler, refreshDelay] @AT@ 1705 @LENGTH@ 3
---------MOV SimpleType@@FileHandlerReloadingDetector @TO@ ClassInstanceCreation@@FileHandlerReloadingDetector[handler, refreshDelay] @AT@ 1709 @LENGTH@ 28
---------MOV SimpleName@@handler @TO@ ClassInstanceCreation@@FileHandlerReloadingDetector[handler, refreshDelay] @AT@ 1738 @LENGTH@ 7
---------INS SimpleName@@refreshDelay @TO@ ClassInstanceCreation@@FileHandlerReloadingDetector[handler, refreshDelay] @AT@ 1852 @LENGTH@ 12
------INS ClassInstanceCreation@@FileHandlerReloadingDetector[handler] @TO@ ConditionalExpression@@(refreshDelay != null) ? new FileHandlerReloadingDetector(handler,refreshDelay) : new FileHandlerReloadingDetector(handler) @AT@ 1868 @LENGTH@ 58
---------INS New@@new @TO@ ClassInstanceCreation@@FileHandlerReloadingDetector[handler] @AT@ 1868 @LENGTH@ 3
---------INS SimpleType@@FileHandlerReloadingDetector @TO@ ClassInstanceCreation@@FileHandlerReloadingDetector[handler] @AT@ 1872 @LENGTH@ 28
---------INS SimpleName@@handler @TO@ ClassInstanceCreation@@FileHandlerReloadingDetector[handler] @AT@ 1918 @LENGTH@ 7


UPD ExpressionStatement@@MethodInvocation:subscriber.punsubscribe(RjcUtils.decodeMultiple(channels)) @TO@ MethodInvocation:subscriber.unsubscribe(RjcUtils.decodeMultiple(channels)) @AT@ 1809 @LENGTH@ 59
---UPD MethodInvocation@@subscriber.punsubscribe(RjcUtils.decodeMultiple(channels)) @TO@ subscriber.unsubscribe(RjcUtils.decodeMultiple(channels)) @AT@ 1809 @LENGTH@ 58
------UPD SimpleName@@MethodName:punsubscribe:[RjcUtils.decodeMultiple(channels)] @TO@ MethodName:unsubscribe:[RjcUtils.decodeMultiple(channels)] @AT@ 1820 @LENGTH@ 47


UPD IfStatement@@if (restartRequired) {  context.restartRequired();} else if (reloadRequired) {  context.reloadRequired();} @TO@ if (restartRequired) {  context.revertRestartRequired();} else if (reloadRequired) {  context.revertReloadRequired();} @AT@ 7411 @LENGTH@ 194
---UPD Block@@ThenBody:{  context.restartRequired();} @TO@ ThenBody:{  context.revertRestartRequired();} @AT@ 7432 @LENGTH@ 74
------UPD ExpressionStatement@@MethodInvocation:context.restartRequired() @TO@ MethodInvocation:context.revertRestartRequired() @AT@ 7458 @LENGTH@ 26
---------UPD MethodInvocation@@context.restartRequired() @TO@ context.revertRestartRequired() @AT@ 7458 @LENGTH@ 25
------------UPD SimpleName@@MethodName:restartRequired:[] @TO@ MethodName:revertRestartRequired:[] @AT@ 7466 @LENGTH@ 17
---UPD Block@@ElseBody:if (reloadRequired) {  context.reloadRequired();} @TO@ ElseBody:if (reloadRequired) {  context.revertReloadRequired();} @AT@ 7512 @LENGTH@ 93
------UPD IfStatement@@if (reloadRequired) {  context.reloadRequired();} @TO@ if (reloadRequired) {  context.revertReloadRequired();} @AT@ 7512 @LENGTH@ 93
---------UPD Block@@ThenBody:{  context.reloadRequired();} @TO@ ThenBody:{  context.revertReloadRequired();} @AT@ 7532 @LENGTH@ 73
------------UPD ExpressionStatement@@MethodInvocation:context.reloadRequired() @TO@ MethodInvocation:context.revertReloadRequired() @AT@ 7558 @LENGTH@ 25
---------------UPD MethodInvocation@@context.reloadRequired() @TO@ context.revertReloadRequired() @AT@ 7558 @LENGTH@ 24
------------------UPD SimpleName@@MethodName:reloadRequired:[] @TO@ MethodName:revertReloadRequired:[] @AT@ 7566 @LENGTH@ 16


INS MethodDeclaration@@public, ResourceProcessor<RepositoryLinksResource>, MethodName:rootLinksResourceProcessor,  @TO@ TypeDeclaration@@[@Configuration, public]RestExporterExampleRestConfig, RepositoryRestMvcConfiguration @AT@ 2085 @LENGTH@ 308
---INS Modifier@@public @TO@ MethodDeclaration@@public, ResourceProcessor<RepositoryLinksResource>, MethodName:rootLinksResourceProcessor,  @AT@ 2085 @LENGTH@ 6
---INS ParameterizedType@@ResourceProcessor<RepositoryLinksResource> @TO@ MethodDeclaration@@public, ResourceProcessor<RepositoryLinksResource>, MethodName:rootLinksResourceProcessor,  @AT@ 2092 @LENGTH@ 42
------INS SimpleType@@ResourceProcessor @TO@ ParameterizedType@@ResourceProcessor<RepositoryLinksResource> @AT@ 2092 @LENGTH@ 17
------INS SimpleType@@RepositoryLinksResource @TO@ ParameterizedType@@ResourceProcessor<RepositoryLinksResource> @AT@ 2110 @LENGTH@ 23
---INS SimpleName@@MethodName:rootLinksResourceProcessor @TO@ MethodDeclaration@@public, ResourceProcessor<RepositoryLinksResource>, MethodName:rootLinksResourceProcessor,  @AT@ 2135 @LENGTH@ 26
---INS ReturnStatement@@ClassInstanceCreation:new ResourceProcessor<RepositoryLinksResource>(){
  @Override public RepositoryLinksResource process(  RepositoryLinksResource resource){
    resource.add(new Link("href","rel"));
    return resource;
  }
}
 @TO@ MethodDeclaration@@public, ResourceProcessor<RepositoryLinksResource>, MethodName:rootLinksResourceProcessor,  @AT@ 2168 @LENGTH@ 222
------INS ClassInstanceCreation@@ResourceProcessor<RepositoryLinksResource>[] @TO@ ReturnStatement@@ClassInstanceCreation:new ResourceProcessor<RepositoryLinksResource>(){
  @Override public RepositoryLinksResource process(  RepositoryLinksResource resource){
    resource.add(new Link("href","rel"));
    return resource;
  }
}
 @AT@ 2175 @LENGTH@ 214
---------INS New@@new @TO@ ClassInstanceCreation@@ResourceProcessor<RepositoryLinksResource>[] @AT@ 2175 @LENGTH@ 3
---------INS ParameterizedType@@ResourceProcessor<RepositoryLinksResource> @TO@ ClassInstanceCreation@@ResourceProcessor<RepositoryLinksResource>[] @AT@ 2179 @LENGTH@ 42
------------INS SimpleType@@ResourceProcessor @TO@ ParameterizedType@@ResourceProcessor<RepositoryLinksResource> @AT@ 2179 @LENGTH@ 17
------------INS SimpleType@@RepositoryLinksResource @TO@ ParameterizedType@@ResourceProcessor<RepositoryLinksResource> @AT@ 2197 @LENGTH@ 23
---------INS AnonymousClassDeclaration@@AnonymousClass @TO@ ClassInstanceCreation@@ResourceProcessor<RepositoryLinksResource>[] @AT@ 2224 @LENGTH@ 165
------------INS MethodDeclaration@@public, RepositoryLinksResource, MethodName:process, RepositoryLinksResource resource,  @TO@ AnonymousClassDeclaration@@AnonymousClass @AT@ 2242 @LENGTH@ 143
---------------INS Modifier@@public @TO@ MethodDeclaration@@public, RepositoryLinksResource, MethodName:process, RepositoryLinksResource resource,  @AT@ 2242 @LENGTH@ 6
---------------INS SimpleType@@RepositoryLinksResource @TO@ MethodDeclaration@@public, RepositoryLinksResource, MethodName:process, RepositoryLinksResource resource,  @AT@ 2249 @LENGTH@ 23
---------------INS SimpleName@@MethodName:process @TO@ MethodDeclaration@@public, RepositoryLinksResource, MethodName:process, RepositoryLinksResource resource,  @AT@ 2273 @LENGTH@ 7
---------------INS SingleVariableDeclaration@@RepositoryLinksResource resource @TO@ MethodDeclaration@@public, RepositoryLinksResource, MethodName:process, RepositoryLinksResource resource,  @AT@ 2281 @LENGTH@ 32
------------------INS SimpleType@@RepositoryLinksResource @TO@ SingleVariableDeclaration@@RepositoryLinksResource resource @AT@ 2281 @LENGTH@ 23
------------------INS SimpleName@@resource @TO@ SingleVariableDeclaration@@RepositoryLinksResource resource @AT@ 2305 @LENGTH@ 8
---------------INS ExpressionStatement@@MethodInvocation:resource.add(new Link("href","rel")) @TO@ MethodDeclaration@@public, RepositoryLinksResource, MethodName:process, RepositoryLinksResource resource,  @AT@ 2321 @LENGTH@ 38
------------------INS MethodInvocation@@resource.add(new Link("href","rel")) @TO@ ExpressionStatement@@MethodInvocation:resource.add(new Link("href","rel")) @AT@ 2321 @LENGTH@ 37
---------------------INS SimpleName@@Name:resource @TO@ MethodInvocation@@resource.add(new Link("href","rel")) @AT@ 2321 @LENGTH@ 8
---------------------INS SimpleName@@MethodName:add:[new Link("href","rel")] @TO@ MethodInvocation@@resource.add(new Link("href","rel")) @AT@ 2330 @LENGTH@ 28
------------------------INS ClassInstanceCreation@@Link["href", "rel"] @TO@ SimpleName@@MethodName:add:[new Link("href","rel")] @AT@ 2334 @LENGTH@ 23
---------------------------INS New@@new @TO@ ClassInstanceCreation@@Link["href", "rel"] @AT@ 2334 @LENGTH@ 3
---------------------------INS SimpleType@@Link @TO@ ClassInstanceCreation@@Link["href", "rel"] @AT@ 2338 @LENGTH@ 4
---------------------------INS StringLiteral@@"href" @TO@ ClassInstanceCreation@@Link["href", "rel"] @AT@ 2343 @LENGTH@ 6
---------------------------INS StringLiteral@@"rel" @TO@ ClassInstanceCreation@@Link["href", "rel"] @AT@ 2351 @LENGTH@ 5
---------------INS ReturnStatement@@SimpleName:resource @TO@ MethodDeclaration@@public, RepositoryLinksResource, MethodName:process, RepositoryLinksResource resource,  @AT@ 2364 @LENGTH@ 16
------------------INS SimpleName@@resource @TO@ ReturnStatement@@SimpleName:resource @AT@ 2371 @LENGTH@ 8


DEL MethodDeclaration@@public, void, MethodName:startBroker, Exception,  @AT@ 3499 @LENGTH@ 393
---DEL Modifier@@public @AT@ 3499 @LENGTH@ 6
---DEL PrimitiveType@@void @AT@ 3506 @LENGTH@ 4
---DEL SimpleName@@MethodName:startBroker @AT@ 3511 @LENGTH@ 11
---DEL SimpleType@@Exception @AT@ 3532 @LENGTH@ 9
---DEL VariableDeclarationStatement@@String brokerName="test-broker-" + System.currentTimeMillis(); @AT@ 3552 @LENGTH@ 64
------DEL SimpleType@@String @AT@ 3552 @LENGTH@ 6
------DEL VariableDeclarationFragment@@brokerName="test-broker-" + System.currentTimeMillis() @AT@ 3559 @LENGTH@ 56
---------DEL SimpleName@@brokerName @AT@ 3559 @LENGTH@ 10
---------DEL InfixExpression@@"test-broker-" + System.currentTimeMillis() @AT@ 3572 @LENGTH@ 43
------------DEL StringLiteral@@"test-broker-" @AT@ 3572 @LENGTH@ 14
------------DEL Operator@@+ @AT@ 3586 @LENGTH@ 1
------------DEL MethodInvocation@@System.currentTimeMillis() @AT@ 3589 @LENGTH@ 26
---------------DEL SimpleName@@Name:System @AT@ 3589 @LENGTH@ 6
---------------DEL SimpleName@@MethodName:currentTimeMillis:[] @AT@ 3596 @LENGTH@ 19
---DEL VariableDeclarationStatement@@String brokerUri="vm://" + brokerName; @AT@ 3625 @LENGTH@ 40
------DEL SimpleType@@String @AT@ 3625 @LENGTH@ 6
------DEL VariableDeclarationFragment@@brokerUri="vm://" + brokerName @AT@ 3632 @LENGTH@ 32
---------DEL SimpleName@@brokerUri @AT@ 3632 @LENGTH@ 9
---------DEL InfixExpression@@"vm://" + brokerName @AT@ 3644 @LENGTH@ 20
------------DEL StringLiteral@@"vm://" @AT@ 3644 @LENGTH@ 7
------------DEL Operator@@+ @AT@ 3651 @LENGTH@ 1
------------DEL SimpleName@@brokerName @AT@ 3654 @LENGTH@ 10
---DEL ExpressionStatement@@Assignment:broker=new BrokerService() @AT@ 3674 @LENGTH@ 29
------DEL Assignment@@broker=new BrokerService() @AT@ 3674 @LENGTH@ 28
---------DEL SimpleName@@broker @AT@ 3674 @LENGTH@ 6
---------DEL Operator@@= @AT@ 3680 @LENGTH@ 1
---------DEL ClassInstanceCreation@@BrokerService[] @AT@ 3683 @LENGTH@ 19
------------DEL New@@new @AT@ 3683 @LENGTH@ 3
------------DEL SimpleType@@BrokerService @AT@ 3687 @LENGTH@ 13
---DEL ExpressionStatement@@MethodInvocation:broker.setBrokerName(brokerName) @AT@ 3712 @LENGTH@ 33
------DEL MethodInvocation@@broker.setBrokerName(brokerName) @AT@ 3712 @LENGTH@ 32
---------DEL SimpleName@@Name:broker @AT@ 3712 @LENGTH@ 6
---------DEL SimpleName@@MethodName:setBrokerName:[brokerName] @AT@ 3719 @LENGTH@ 25
------------DEL SimpleName@@brokerName @AT@ 3733 @LENGTH@ 10
---DEL ExpressionStatement@@MethodInvocation:broker.setBrokerId(brokerName) @AT@ 3754 @LENGTH@ 31
------DEL MethodInvocation@@broker.setBrokerId(brokerName) @AT@ 3754 @LENGTH@ 30
---------DEL SimpleName@@Name:broker @AT@ 3754 @LENGTH@ 6
---------DEL SimpleName@@MethodName:setBrokerId:[brokerName] @AT@ 3761 @LENGTH@ 23
------------DEL SimpleName@@brokerName @AT@ 3773 @LENGTH@ 10
---DEL ExpressionStatement@@MethodInvocation:broker.addConnector(brokerUri) @AT@ 3794 @LENGTH@ 31
------DEL MethodInvocation@@broker.addConnector(brokerUri) @AT@ 3794 @LENGTH@ 30
---------DEL SimpleName@@Name:broker @AT@ 3794 @LENGTH@ 6
---------DEL SimpleName@@MethodName:addConnector:[brokerUri] @AT@ 3801 @LENGTH@ 23
------------DEL SimpleName@@brokerUri @AT@ 3814 @LENGTH@ 9
---DEL ExpressionStatement@@MethodInvocation:broker.setPersistent(false) @AT@ 3834 @LENGTH@ 28
------DEL MethodInvocation@@broker.setPersistent(false) @AT@ 3834 @LENGTH@ 27
---------DEL SimpleName@@Name:broker @AT@ 3834 @LENGTH@ 6
---------DEL SimpleName@@MethodName:setPersistent:[false] @AT@ 3841 @LENGTH@ 20
------------DEL BooleanLiteral@@false @AT@ 3855 @LENGTH@ 5
---DEL ExpressionStatement@@MethodInvocation:broker.start() @AT@ 3871 @LENGTH@ 15
------DEL MethodInvocation@@broker.start() @AT@ 3871 @LENGTH@ 14
---------DEL SimpleName@@Name:broker @AT@ 3871 @LENGTH@ 6
---------DEL SimpleName@@MethodName:start:[] @AT@ 3878 @LENGTH@ 7


UPD TypeDeclaration@@SynchronizedBagSet, SynchronizedSet<E> @TO@ SynchronizedBagSet, SynchronizedCollection<E>[Set<E>] @AT@ 3715 @LENGTH@ 424
---INS ParameterizedType@@Set<E> @TO@ TypeDeclaration@@SynchronizedBagSet, SynchronizedSet<E> @AT@ 3720 @LENGTH@ 6
------INS SimpleType@@Set @TO@ ParameterizedType@@Set<E> @AT@ 3720 @LENGTH@ 3
------INS SimpleType@@E @TO@ ParameterizedType@@Set<E> @AT@ 3724 @LENGTH@ 1
---UPD ParameterizedType@@SynchronizedSet<E> @TO@ SynchronizedCollection<E> @AT@ 3742 @LENGTH@ 18
------UPD SimpleType@@SynchronizedSet @TO@ SynchronizedCollection @AT@ 3742 @LENGTH@ 15


MOV ExpressionStatement@@MethodInvocation:EeSubsystemRootResource.EAR_SUBDEPLOYMENTS_ISOLATED.marshallAsElement(eeSubSystem,writer) @TO@ MethodDeclaration@@public, void, MethodName:writeContent, XMLExtendedStreamWriter writer, SubsystemMarshallingContext context, XMLStreamException,  @AT@ 2830 @LENGTH@ 91


UPD ReturnStatement@@MethodInvocation:receive(0L) @TO@ MethodInvocation:receive(JmsTemplate.RECEIVE_TIMEOUT_INDEFINITE_WAIT) @AT@ 1665 @LENGTH@ 19
---UPD MethodInvocation@@receive(0L) @TO@ receive(JmsTemplate.RECEIVE_TIMEOUT_INDEFINITE_WAIT) @AT@ 1672 @LENGTH@ 11
------UPD SimpleName@@MethodName:receive:[0L] @TO@ MethodName:receive:[JmsTemplate.RECEIVE_TIMEOUT_INDEFINITE_WAIT] @AT@ 1672 @LENGTH@ 11
---------DEL NumberLiteral@@0L @AT@ 1680 @LENGTH@ 2
---------INS QualifiedName@@JmsTemplate.RECEIVE_TIMEOUT_INDEFINITE_WAIT @TO@ SimpleName@@MethodName:receive:[0L] @AT@ 1714 @LENGTH@ 43
------------INS SimpleName@@JmsTemplate @TO@ QualifiedName@@JmsTemplate.RECEIVE_TIMEOUT_INDEFINITE_WAIT @AT@ 1714 @LENGTH@ 11
------------INS SimpleName@@RECEIVE_TIMEOUT_INDEFINITE_WAIT @TO@ QualifiedName@@JmsTemplate.RECEIVE_TIMEOUT_INDEFINITE_WAIT @AT@ 1726 @LENGTH@ 31


UPD IfStatement@@if (pipeline != null) {  List<Object> execute=new ArrayList<Object>(callback.complete());  callback.close();  callback=null;  if (execute != null && !execute.isEmpty()) {    Exception cause=null;    for (int i=0; i < execute.size(); i++) {      Object object=execute.get(i);      if (object instanceof Exception) {        DataAccessException dataAccessException=convertSrpAccessException((Exception)object);        if (cause == null) {          cause=dataAccessException;        }        execute.set(i,dataAccessException);      }    }    if (cause != null) {      throw new RedisPipelineException(cause,execute);    }    return execute;  }} @TO@ if (pipeline != null) {  pipeline=null;  List<Object> execute=new ArrayList<Object>(callback.complete());  callback.close();  callback=null;  if (execute != null && !execute.isEmpty()) {    Exception cause=null;    for (int i=0; i < execute.size(); i++) {      Object object=execute.get(i);      if (object instanceof Exception) {        DataAccessException dataAccessException=convertSrpAccessException((Exception)object);        if (cause == null) {          cause=dataAccessException;        }        execute.set(i,dataAccessException);      }    }    if (cause != null) {      throw new RedisPipelineException(cause,execute);    }    return execute;  }} @AT@ 5147 @LENGTH@ 672
---UPD Block@@ThenBody:{  List<Object> execute=new ArrayList<Object>(callback.complete());  callback.close();  callback=null;  if (execute != null && !execute.isEmpty()) {    Exception cause=null;    for (int i=0; i < execute.size(); i++) {      Object object=execute.get(i);      if (object instanceof Exception) {        DataAccessException dataAccessException=convertSrpAccessException((Exception)object);        if (cause == null) {          cause=dataAccessException;        }        execute.set(i,dataAccessException);      }    }    if (cause != null) {      throw new RedisPipelineException(cause,execute);    }    return execute;  }} @TO@ ThenBody:{  pipeline=null;  List<Object> execute=new ArrayList<Object>(callback.complete());  callback.close();  callback=null;  if (execute != null && !execute.isEmpty()) {    Exception cause=null;    for (int i=0; i < execute.size(); i++) {      Object object=execute.get(i);      if (object instanceof Exception) {        DataAccessException dataAccessException=convertSrpAccessException((Exception)object);        if (cause == null) {          cause=dataAccessException;        }        execute.set(i,dataAccessException);      }    }    if (cause != null) {      throw new RedisPipelineException(cause,execute);    }    return execute;  }} @AT@ 5169 @LENGTH@ 650
------INS ExpressionStatement@@Assignment:pipeline=null @TO@ Block@@ThenBody:{  List<Object> execute=new ArrayList<Object>(callback.complete());  callback.close();  callback=null;  if (execute != null && !execute.isEmpty()) {    Exception cause=null;    for (int i=0; i < execute.size(); i++) {      Object object=execute.get(i);      if (object instanceof Exception) {        DataAccessException dataAccessException=convertSrpAccessException((Exception)object);        if (cause == null) {          cause=dataAccessException;        }        execute.set(i,dataAccessException);      }    }    if (cause != null) {      throw new RedisPipelineException(cause,execute);    }    return execute;  }} @AT@ 5174 @LENGTH@ 16
---------INS Assignment@@pipeline=null @TO@ ExpressionStatement@@Assignment:pipeline=null @AT@ 5174 @LENGTH@ 15
------------INS SimpleName@@pipeline @TO@ Assignment@@pipeline=null @AT@ 5174 @LENGTH@ 8
------------INS Operator@@= @TO@ Assignment@@pipeline=null @AT@ 5182 @LENGTH@ 1
------------INS NullLiteral@@null @TO@ Assignment@@pipeline=null @AT@ 5185 @LENGTH@ 4


UPD ThrowStatement@@ClassInstanceCreation:new IllegalStateException("<?" + TemplateParser.SUBSYSTEMS_PI + "?> should not take any data") @TO@ ClassInstanceCreation:new IllegalStateException("<?" + TemplateParser.EXTENSIONS_PI + "?> should not take any data") @AT@ 3896 @LENGTH@ 101
---UPD ClassInstanceCreation@@IllegalStateException["<?" + TemplateParser.SUBSYSTEMS_PI + "?> should not take any data"] @TO@ IllegalStateException["<?" + TemplateParser.EXTENSIONS_PI + "?> should not take any data"] @AT@ 3902 @LENGTH@ 94
------UPD InfixExpression@@"<?" + TemplateParser.SUBSYSTEMS_PI + "?> should not take any data" @TO@ "<?" + TemplateParser.EXTENSIONS_PI + "?> should not take any data" @AT@ 3928 @LENGTH@ 67
---------UPD QualifiedName@@TemplateParser.SUBSYSTEMS_PI @TO@ TemplateParser.EXTENSIONS_PI @AT@ 3935 @LENGTH@ 28
------------UPD SimpleName@@SUBSYSTEMS_PI @TO@ EXTENSIONS_PI @AT@ 3950 @LENGTH@ 13


UPD ReturnStatement@@ClassInstanceCreation:new TransformersLogger(getTarget()) @TO@ MethodInvocation:TransformersLogger.getLogger(getTarget()) @AT@ 20447 @LENGTH@ 43
---INS MethodInvocation@@TransformersLogger.getLogger(getTarget()) @TO@ ReturnStatement@@ClassInstanceCreation:new TransformersLogger(getTarget()) @AT@ 20454 @LENGTH@ 41
------INS SimpleName@@Name:TransformersLogger @TO@ MethodInvocation@@TransformersLogger.getLogger(getTarget()) @AT@ 20454 @LENGTH@ 18
------INS SimpleName@@MethodName:getLogger:[getTarget()] @TO@ MethodInvocation@@TransformersLogger.getLogger(getTarget()) @AT@ 20473 @LENGTH@ 22
---------INS MethodInvocation@@MethodName:getTarget:[] @TO@ SimpleName@@MethodName:getLogger:[getTarget()] @AT@ 20483 @LENGTH@ 11
---DEL ClassInstanceCreation@@TransformersLogger[getTarget()] @AT@ 20454 @LENGTH@ 35
------DEL New@@new @AT@ 20454 @LENGTH@ 3
------DEL SimpleType@@TransformersLogger @AT@ 20458 @LENGTH@ 18
------DEL MethodInvocation@@MethodName:getTarget:[] @AT@ 20477 @LENGTH@ 11


UPD ExpressionStatement@@MethodInvocation:checkFailedTransformedBootOperations(mainServices,VERSION_1_1_0,modelNodes,new FailedOperationTransformationConfig().addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH),createChainedConfig(HornetQServerResourceDefinition.ATTRIBUTES_WITH_EXPRESSION_AFTER_1_1_0,HornetQServerResourceDefinition.NEW_ATTRIBUTES_ADDED_AFTER_1_1_0)).addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH).append(pathElement(ModelDescriptionConstants.PATH)),new RejectExpressionsConfig(ModelDescriptionConstants.PATH)).addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH).append(pathElement(CommonAttributes.IN_VM_CONNECTOR)),new RejectExpressionsConfig(InVMTransportDefinition.SERVER_ID)).addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH).append(pathElement(CommonAttributes.IN_VM_ACCEPTOR)),new RejectExpressionsConfig(InVMTransportDefinition.SERVER_ID)).addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH).append(BroadcastGroupDefinition.PATH),new RejectExpressionsConfig(BroadcastGroupDefinition.BROADCAST_PERIOD){
  @Override public boolean expectFailed(  ModelNode operation){
    if ("groupT".equals(operation.get(OP_ADDR).get(2).get(CommonAttributes.BROADCAST_GROUP).asString())) {
      return true;
    }
    return super.expectFailed(operation);
  }
}
).addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH).append(DiscoveryGroupDefinition.PATH),new RejectExpressionsConfig(DiscoveryGroupDefinition.REFRESH_TIMEOUT,DiscoveryGroupDefinition.INITIAL_WAIT_TIMEOUT){
  @Override public boolean expectFailed(  ModelNode operation){
    if ("groupU".equals(operation.get(OP_ADDR).get(2).get(CommonAttributes.DISCOVERY_GROUP).asString())) {
      return true;
    }
    return super.expectFailed(operation);
  }
}
).addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH).append(DivertDefinition.PATH),new RejectExpressionsConfig(DivertDefinition.ATTRIBUTES_WITH_EXPRESSION_AFTER_1_1_0)).addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH).append(QueueDefinition.PATH),new RejectExpressionsConfig(QueueDefinition.ATTRIBUTES_WITH_EXPRESSION_AFTER_1_1_0)).addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH).append(ClusterConnectionDefinition.PATH),createChainedConfig(ClusterConnectionDefinition.ATTRIBUTES_WITH_EXPRESSION_AFTER_1_1_0,ClusterConnectionDefinition.NEW_ATTRIBUTES_ADDED_AFTER_1_1_0)).addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH).append(BridgeDefinition.PATH),new RejectExpressionsConfig(BridgeDefinition.ATTRIBUTES_WITH_EXPRESSION_AFTER_1_1_0)).addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH).append(GroupingHandlerDefinition.PATH),new RejectExpressionsConfig(GroupingHandlerDefinition.ATTRIBUTES_WITH_EXPRESSION_AFTER_1_1_0)).addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH).append(AddressSettingDefinition.PATH),new RejectExpressionsConfig(AddressSettingDefinition.REJECTED_EXPRESSION_ATTRIBUTES)).addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH).append(ConnectorServiceDefinition.PATH).append(ConnectorServiceParamDefinition.PATH),new RejectExpressionsConfig(ConnectorServiceParamDefinition.VALUE)).addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH).append(ConnectionFactoryDefinition.PATH),createChainedConfig(ConnectionFactoryDefinition.ATTRIBUTES_WITH_EXPRESSION_AFTER_1_1_0,new AttributeDefinition[]{CALL_FAILOVER_TIMEOUT}).setReadOnly(FACTORY_TYPE)).addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH).append(PooledConnectionFactoryDefinition.PATH),createChainedConfig(PooledConnectionFactoryDefinition.ATTRIBUTES_WITH_EXPRESSION_AFTER_1_1_0,PooledConnectionFactoryDefinition.NEW_ATTRIBUTES_ADDED_AFTER_1_1_0).setReadOnly(ConnectionFactoryAttributes.Pooled.TRANSACTION)).addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH).append(JMSQueueDefinition.PATH),new RejectExpressionsConfig(JMSQueueDefinition.ATTRIBUTES_WITH_EXPRESSION_AFTER_1_1_0)).addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH).append(JMSTopicDefinition.PATH),new RejectExpressionsConfig(JMSTopicDefinition.ATTRIBUTES_WITH_EXPRESSION_AFTER_1_1_0)).addFailedAttribute(subsystemAddress.append(JMSBridgeDefinition.PATH),new RejectExpressionsConfig(new String[0]){
  @Override public boolean expectFailed(  ModelNode operation){
    return true;
  }
}
)) @TO@ MethodInvocation:checkFailedTransformedBootOperations(mainServices,VERSION_1_1_0,modelNodes,new FailedOperationTransformationConfig().addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH),createChainedConfig(HornetQServerResourceDefinition.ATTRIBUTES_WITH_EXPRESSION_AFTER_1_1_0,HornetQServerResourceDefinition.NEW_ATTRIBUTES_ADDED_AFTER_1_1_0)).addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH).append(pathElement(ModelDescriptionConstants.PATH)),new RejectExpressionsConfig(ModelDescriptionConstants.PATH)).addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH).append(pathElement(CommonAttributes.IN_VM_CONNECTOR)),new RejectExpressionsConfig(InVMTransportDefinition.SERVER_ID)).addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH).append(pathElement(CommonAttributes.IN_VM_ACCEPTOR)),new RejectExpressionsConfig(InVMTransportDefinition.SERVER_ID)).addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH).append(BroadcastGroupDefinition.PATH),new RejectExpressionsConfig(BroadcastGroupDefinition.BROADCAST_PERIOD){
  @Override public boolean expectFailed(  ModelNode operation){
    if ("groupT".equals(operation.get(OP_ADDR).get(2).get(CommonAttributes.BROADCAST_GROUP).asString())) {
      return true;
    }
    return super.expectFailed(operation);
  }
}
).addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH).append(DiscoveryGroupDefinition.PATH),new RejectExpressionsConfig(DiscoveryGroupDefinition.REFRESH_TIMEOUT,DiscoveryGroupDefinition.INITIAL_WAIT_TIMEOUT){
  @Override public boolean expectFailed(  ModelNode operation){
    if ("groupU".equals(operation.get(OP_ADDR).get(2).get(CommonAttributes.DISCOVERY_GROUP).asString())) {
      return true;
    }
    return super.expectFailed(operation);
  }
}
).addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH).append(DivertDefinition.PATH),new RejectExpressionsConfig(DivertDefinition.ATTRIBUTES_WITH_EXPRESSION_AFTER_1_1_0)).addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH).append(QueueDefinition.PATH),new RejectExpressionsConfig(QueueDefinition.ATTRIBUTES_WITH_EXPRESSION_AFTER_1_1_0)).addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH).append(ClusterConnectionDefinition.PATH),createChainedConfig(ClusterConnectionDefinition.ATTRIBUTES_WITH_EXPRESSION_AFTER_1_1_0,ClusterConnectionDefinition.NEW_ATTRIBUTES_ADDED_AFTER_1_1_0)).addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH).append(BridgeDefinition.PATH),new RejectExpressionsConfig(BridgeDefinition.ATTRIBUTES_WITH_EXPRESSION_AFTER_1_1_0)).addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH).append(GroupingHandlerDefinition.PATH),new RejectExpressionsConfig(GroupingHandlerDefinition.ATTRIBUTES_WITH_EXPRESSION_AFTER_1_1_0)).addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH).append(AddressSettingDefinition.PATH),new RejectExpressionsConfig(AddressSettingDefinition.REJECTED_EXPRESSION_ATTRIBUTES)).addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH).append(ConnectorServiceDefinition.PATH).append(ConnectorServiceParamDefinition.PATH),new RejectExpressionsConfig(ConnectorServiceParamDefinition.VALUE)).addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH).append(ConnectionFactoryDefinition.PATH),createChainedConfig(ConnectionFactoryDefinition.ATTRIBUTES_WITH_EXPRESSION_AFTER_1_1_0,new AttributeDefinition[]{CALL_FAILOVER_TIMEOUT}).setReadOnly(FACTORY_TYPE)).addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH).append(PooledConnectionFactoryDefinition.PATH),createChainedConfig(PooledConnectionFactoryDefinition.ATTRIBUTES_WITH_EXPRESSION_AFTER_1_1_0,PooledConnectionFactoryDefinition.NEW_ATTRIBUTES_ADDED_AFTER_1_1_0).setReadOnly(ConnectionFactoryAttributes.Pooled.TRANSACTION)).addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH).append(JMSQueueDefinition.PATH),new RejectExpressionsConfig(JMSQueueDefinition.ATTRIBUTES_WITH_EXPRESSION_AFTER_1_1_0)).addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH).append(JMSTopicDefinition.PATH),new RejectExpressionsConfig(JMSTopicDefinition.ATTRIBUTES_WITH_EXPRESSION_AFTER_1_1_0)).addFailedAttribute(subsystemAddress.append(JMSBridgeDefinition.PATH),FailedOperationTransformationConfig.DISCARDED_RESOURCE)) @AT@ 9429 @LENGTH@ 7329
---UPD MethodInvocation@@checkFailedTransformedBootOperations(mainServices,VERSION_1_1_0,modelNodes,new FailedOperationTransformationConfig().addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH),createChainedConfig(HornetQServerResourceDefinition.ATTRIBUTES_WITH_EXPRESSION_AFTER_1_1_0,HornetQServerResourceDefinition.NEW_ATTRIBUTES_ADDED_AFTER_1_1_0)).addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH).append(pathElement(ModelDescriptionConstants.PATH)),new RejectExpressionsConfig(ModelDescriptionConstants.PATH)).addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH).append(pathElement(CommonAttributes.IN_VM_CONNECTOR)),new RejectExpressionsConfig(InVMTransportDefinition.SERVER_ID)).addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH).append(pathElement(CommonAttributes.IN_VM_ACCEPTOR)),new RejectExpressionsConfig(InVMTransportDefinition.SERVER_ID)).addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH).append(BroadcastGroupDefinition.PATH),new RejectExpressionsConfig(BroadcastGroupDefinition.BROADCAST_PERIOD){
  @Override public boolean expectFailed(  ModelNode operation){
    if ("groupT".equals(operation.get(OP_ADDR).get(2).get(CommonAttributes.BROADCAST_GROUP).asString())) {
      return true;
    }
    return super.expectFailed(operation);
  }
}
).addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH).append(DiscoveryGroupDefinition.PATH),new RejectExpressionsConfig(DiscoveryGroupDefinition.REFRESH_TIMEOUT,DiscoveryGroupDefinition.INITIAL_WAIT_TIMEOUT){
  @Override public boolean expectFailed(  ModelNode operation){
    if ("groupU".equals(operation.get(OP_ADDR).get(2).get(CommonAttributes.DISCOVERY_GROUP).asString())) {
      return true;
    }
    return super.expectFailed(operation);
  }
}
).addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH).append(DivertDefinition.PATH),new RejectExpressionsConfig(DivertDefinition.ATTRIBUTES_WITH_EXPRESSION_AFTER_1_1_0)).addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH).append(QueueDefinition.PATH),new RejectExpressionsConfig(QueueDefinition.ATTRIBUTES_WITH_EXPRESSION_AFTER_1_1_0)).addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH).append(ClusterConnectionDefinition.PATH),createChainedConfig(ClusterConnectionDefinition.ATTRIBUTES_WITH_EXPRESSION_AFTER_1_1_0,ClusterConnectionDefinition.NEW_ATTRIBUTES_ADDED_AFTER_1_1_0)).addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH).append(BridgeDefinition.PATH),new RejectExpressionsConfig(BridgeDefinition.ATTRIBUTES_WITH_EXPRESSION_AFTER_1_1_0)).addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH).append(GroupingHandlerDefinition.PATH),new RejectExpressionsConfig(GroupingHandlerDefinition.ATTRIBUTES_WITH_EXPRESSION_AFTER_1_1_0)).addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH).append(AddressSettingDefinition.PATH),new RejectExpressionsConfig(AddressSettingDefinition.REJECTED_EXPRESSION_ATTRIBUTES)).addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH).append(ConnectorServiceDefinition.PATH).append(ConnectorServiceParamDefinition.PATH),new RejectExpressionsConfig(ConnectorServiceParamDefinition.VALUE)).addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH).append(ConnectionFactoryDefinition.PATH),createChainedConfig(ConnectionFactoryDefinition.ATTRIBUTES_WITH_EXPRESSION_AFTER_1_1_0,new AttributeDefinition[]{CALL_FAILOVER_TIMEOUT}).setReadOnly(FACTORY_TYPE)).addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH).append(PooledConnectionFactoryDefinition.PATH),createChainedConfig(PooledConnectionFactoryDefinition.ATTRIBUTES_WITH_EXPRESSION_AFTER_1_1_0,PooledConnectionFactoryDefinition.NEW_ATTRIBUTES_ADDED_AFTER_1_1_0).setReadOnly(ConnectionFactoryAttributes.Pooled.TRANSACTION)).addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH).append(JMSQueueDefinition.PATH),new RejectExpressionsConfig(JMSQueueDefinition.ATTRIBUTES_WITH_EXPRESSION_AFTER_1_1_0)).addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH).append(JMSTopicDefinition.PATH),new RejectExpressionsConfig(JMSTopicDefinition.ATTRIBUTES_WITH_EXPRESSION_AFTER_1_1_0)).addFailedAttribute(subsystemAddress.append(JMSBridgeDefinition.PATH),new RejectExpressionsConfig(new String[0]){
  @Override public boolean expectFailed(  ModelNode operation){
    return true;
  }
}
)) @TO@ checkFailedTransformedBootOperations(mainServices,VERSION_1_1_0,modelNodes,new FailedOperationTransformationConfig().addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH),createChainedConfig(HornetQServerResourceDefinition.ATTRIBUTES_WITH_EXPRESSION_AFTER_1_1_0,HornetQServerResourceDefinition.NEW_ATTRIBUTES_ADDED_AFTER_1_1_0)).addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH).append(pathElement(ModelDescriptionConstants.PATH)),new RejectExpressionsConfig(ModelDescriptionConstants.PATH)).addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH).append(pathElement(CommonAttributes.IN_VM_CONNECTOR)),new RejectExpressionsConfig(InVMTransportDefinition.SERVER_ID)).addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH).append(pathElement(CommonAttributes.IN_VM_ACCEPTOR)),new RejectExpressionsConfig(InVMTransportDefinition.SERVER_ID)).addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH).append(BroadcastGroupDefinition.PATH),new RejectExpressionsConfig(BroadcastGroupDefinition.BROADCAST_PERIOD){
  @Override public boolean expectFailed(  ModelNode operation){
    if ("groupT".equals(operation.get(OP_ADDR).get(2).get(CommonAttributes.BROADCAST_GROUP).asString())) {
      return true;
    }
    return super.expectFailed(operation);
  }
}
).addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH).append(DiscoveryGroupDefinition.PATH),new RejectExpressionsConfig(DiscoveryGroupDefinition.REFRESH_TIMEOUT,DiscoveryGroupDefinition.INITIAL_WAIT_TIMEOUT){
  @Override public boolean expectFailed(  ModelNode operation){
    if ("groupU".equals(operation.get(OP_ADDR).get(2).get(CommonAttributes.DISCOVERY_GROUP).asString())) {
      return true;
    }
    return super.expectFailed(operation);
  }
}
).addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH).append(DivertDefinition.PATH),new RejectExpressionsConfig(DivertDefinition.ATTRIBUTES_WITH_EXPRESSION_AFTER_1_1_0)).addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH).append(QueueDefinition.PATH),new RejectExpressionsConfig(QueueDefinition.ATTRIBUTES_WITH_EXPRESSION_AFTER_1_1_0)).addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH).append(ClusterConnectionDefinition.PATH),createChainedConfig(ClusterConnectionDefinition.ATTRIBUTES_WITH_EXPRESSION_AFTER_1_1_0,ClusterConnectionDefinition.NEW_ATTRIBUTES_ADDED_AFTER_1_1_0)).addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH).append(BridgeDefinition.PATH),new RejectExpressionsConfig(BridgeDefinition.ATTRIBUTES_WITH_EXPRESSION_AFTER_1_1_0)).addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH).append(GroupingHandlerDefinition.PATH),new RejectExpressionsConfig(GroupingHandlerDefinition.ATTRIBUTES_WITH_EXPRESSION_AFTER_1_1_0)).addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH).append(AddressSettingDefinition.PATH),new RejectExpressionsConfig(AddressSettingDefinition.REJECTED_EXPRESSION_ATTRIBUTES)).addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH).append(ConnectorServiceDefinition.PATH).append(ConnectorServiceParamDefinition.PATH),new RejectExpressionsConfig(ConnectorServiceParamDefinition.VALUE)).addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH).append(ConnectionFactoryDefinition.PATH),createChainedConfig(ConnectionFactoryDefinition.ATTRIBUTES_WITH_EXPRESSION_AFTER_1_1_0,new AttributeDefinition[]{CALL_FAILOVER_TIMEOUT}).setReadOnly(FACTORY_TYPE)).addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH).append(PooledConnectionFactoryDefinition.PATH),createChainedConfig(PooledConnectionFactoryDefinition.ATTRIBUTES_WITH_EXPRESSION_AFTER_1_1_0,PooledConnectionFactoryDefinition.NEW_ATTRIBUTES_ADDED_AFTER_1_1_0).setReadOnly(ConnectionFactoryAttributes.Pooled.TRANSACTION)).addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH).append(JMSQueueDefinition.PATH),new RejectExpressionsConfig(JMSQueueDefinition.ATTRIBUTES_WITH_EXPRESSION_AFTER_1_1_0)).addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH).append(JMSTopicDefinition.PATH),new RejectExpressionsConfig(JMSTopicDefinition.ATTRIBUTES_WITH_EXPRESSION_AFTER_1_1_0)).addFailedAttribute(subsystemAddress.append(JMSBridgeDefinition.PATH),FailedOperationTransformationConfig.DISCARDED_RESOURCE)) @AT@ 9429 @LENGTH@ 7328
------UPD SimpleName@@MethodName:checkFailedTransformedBootOperations:[mainServices, VERSION_1_1_0, modelNodes, new FailedOperationTransformationConfig().addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH),createChainedConfig(HornetQServerResourceDefinition.ATTRIBUTES_WITH_EXPRESSION_AFTER_1_1_0,HornetQServerResourceDefinition.NEW_ATTRIBUTES_ADDED_AFTER_1_1_0)).addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH).append(pathElement(ModelDescriptionConstants.PATH)),new RejectExpressionsConfig(ModelDescriptionConstants.PATH)).addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH).append(pathElement(CommonAttributes.IN_VM_CONNECTOR)),new RejectExpressionsConfig(InVMTransportDefinition.SERVER_ID)).addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH).append(pathElement(CommonAttributes.IN_VM_ACCEPTOR)),new RejectExpressionsConfig(InVMTransportDefinition.SERVER_ID)).addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH).append(BroadcastGroupDefinition.PATH),new RejectExpressionsConfig(BroadcastGroupDefinition.BROADCAST_PERIOD){
  @Override public boolean expectFailed(  ModelNode operation){
    if ("groupT".equals(operation.get(OP_ADDR).get(2).get(CommonAttributes.BROADCAST_GROUP).asString())) {
      return true;
    }
    return super.expectFailed(operation);
  }
}
).addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH).append(DiscoveryGroupDefinition.PATH),new RejectExpressionsConfig(DiscoveryGroupDefinition.REFRESH_TIMEOUT,DiscoveryGroupDefinition.INITIAL_WAIT_TIMEOUT){
  @Override public boolean expectFailed(  ModelNode operation){
    if ("groupU".equals(operation.get(OP_ADDR).get(2).get(CommonAttributes.DISCOVERY_GROUP).asString())) {
      return true;
    }
    return super.expectFailed(operation);
  }
}
).addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH).append(DivertDefinition.PATH),new RejectExpressionsConfig(DivertDefinition.ATTRIBUTES_WITH_EXPRESSION_AFTER_1_1_0)).addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH).append(QueueDefinition.PATH),new RejectExpressionsConfig(QueueDefinition.ATTRIBUTES_WITH_EXPRESSION_AFTER_1_1_0)).addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH).append(ClusterConnectionDefinition.PATH),createChainedConfig(ClusterConnectionDefinition.ATTRIBUTES_WITH_EXPRESSION_AFTER_1_1_0,ClusterConnectionDefinition.NEW_ATTRIBUTES_ADDED_AFTER_1_1_0)).addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH).append(BridgeDefinition.PATH),new RejectExpressionsConfig(BridgeDefinition.ATTRIBUTES_WITH_EXPRESSION_AFTER_1_1_0)).addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH).append(GroupingHandlerDefinition.PATH),new RejectExpressionsConfig(GroupingHandlerDefinition.ATTRIBUTES_WITH_EXPRESSION_AFTER_1_1_0)).addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH).append(AddressSettingDefinition.PATH),new RejectExpressionsConfig(AddressSettingDefinition.REJECTED_EXPRESSION_ATTRIBUTES)).addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH).append(ConnectorServiceDefinition.PATH).append(ConnectorServiceParamDefinition.PATH),new RejectExpressionsConfig(ConnectorServiceParamDefinition.VALUE)).addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH).append(ConnectionFactoryDefinition.PATH),createChainedConfig(ConnectionFactoryDefinition.ATTRIBUTES_WITH_EXPRESSION_AFTER_1_1_0,new AttributeDefinition[]{CALL_FAILOVER_TIMEOUT}).setReadOnly(FACTORY_TYPE)).addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH).append(PooledConnectionFactoryDefinition.PATH),createChainedConfig(PooledConnectionFactoryDefinition.ATTRIBUTES_WITH_EXPRESSION_AFTER_1_1_0,PooledConnectionFactoryDefinition.NEW_ATTRIBUTES_ADDED_AFTER_1_1_0).setReadOnly(ConnectionFactoryAttributes.Pooled.TRANSACTION)).addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH).append(JMSQueueDefinition.PATH),new RejectExpressionsConfig(JMSQueueDefinition.ATTRIBUTES_WITH_EXPRESSION_AFTER_1_1_0)).addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH).append(JMSTopicDefinition.PATH),new RejectExpressionsConfig(JMSTopicDefinition.ATTRIBUTES_WITH_EXPRESSION_AFTER_1_1_0)).addFailedAttribute(subsystemAddress.append(JMSBridgeDefinition.PATH),new RejectExpressionsConfig(new String[0]){
  @Override public boolean expectFailed(  ModelNode operation){
    return true;
  }
}
)] @TO@ MethodName:checkFailedTransformedBootOperations:[mainServices, VERSION_1_1_0, modelNodes, new FailedOperationTransformationConfig().addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH),createChainedConfig(HornetQServerResourceDefinition.ATTRIBUTES_WITH_EXPRESSION_AFTER_1_1_0,HornetQServerResourceDefinition.NEW_ATTRIBUTES_ADDED_AFTER_1_1_0)).addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH).append(pathElement(ModelDescriptionConstants.PATH)),new RejectExpressionsConfig(ModelDescriptionConstants.PATH)).addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH).append(pathElement(CommonAttributes.IN_VM_CONNECTOR)),new RejectExpressionsConfig(InVMTransportDefinition.SERVER_ID)).addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH).append(pathElement(CommonAttributes.IN_VM_ACCEPTOR)),new RejectExpressionsConfig(InVMTransportDefinition.SERVER_ID)).addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH).append(BroadcastGroupDefinition.PATH),new RejectExpressionsConfig(BroadcastGroupDefinition.BROADCAST_PERIOD){
  @Override public boolean expectFailed(  ModelNode operation){
    if ("groupT".equals(operation.get(OP_ADDR).get(2).get(CommonAttributes.BROADCAST_GROUP).asString())) {
      return true;
    }
    return super.expectFailed(operation);
  }
}
).addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH).append(DiscoveryGroupDefinition.PATH),new RejectExpressionsConfig(DiscoveryGroupDefinition.REFRESH_TIMEOUT,DiscoveryGroupDefinition.INITIAL_WAIT_TIMEOUT){
  @Override public boolean expectFailed(  ModelNode operation){
    if ("groupU".equals(operation.get(OP_ADDR).get(2).get(CommonAttributes.DISCOVERY_GROUP).asString())) {
      return true;
    }
    return super.expectFailed(operation);
  }
}
).addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH).append(DivertDefinition.PATH),new RejectExpressionsConfig(DivertDefinition.ATTRIBUTES_WITH_EXPRESSION_AFTER_1_1_0)).addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH).append(QueueDefinition.PATH),new RejectExpressionsConfig(QueueDefinition.ATTRIBUTES_WITH_EXPRESSION_AFTER_1_1_0)).addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH).append(ClusterConnectionDefinition.PATH),createChainedConfig(ClusterConnectionDefinition.ATTRIBUTES_WITH_EXPRESSION_AFTER_1_1_0,ClusterConnectionDefinition.NEW_ATTRIBUTES_ADDED_AFTER_1_1_0)).addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH).append(BridgeDefinition.PATH),new RejectExpressionsConfig(BridgeDefinition.ATTRIBUTES_WITH_EXPRESSION_AFTER_1_1_0)).addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH).append(GroupingHandlerDefinition.PATH),new RejectExpressionsConfig(GroupingHandlerDefinition.ATTRIBUTES_WITH_EXPRESSION_AFTER_1_1_0)).addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH).append(AddressSettingDefinition.PATH),new RejectExpressionsConfig(AddressSettingDefinition.REJECTED_EXPRESSION_ATTRIBUTES)).addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH).append(ConnectorServiceDefinition.PATH).append(ConnectorServiceParamDefinition.PATH),new RejectExpressionsConfig(ConnectorServiceParamDefinition.VALUE)).addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH).append(ConnectionFactoryDefinition.PATH),createChainedConfig(ConnectionFactoryDefinition.ATTRIBUTES_WITH_EXPRESSION_AFTER_1_1_0,new AttributeDefinition[]{CALL_FAILOVER_TIMEOUT}).setReadOnly(FACTORY_TYPE)).addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH).append(PooledConnectionFactoryDefinition.PATH),createChainedConfig(PooledConnectionFactoryDefinition.ATTRIBUTES_WITH_EXPRESSION_AFTER_1_1_0,PooledConnectionFactoryDefinition.NEW_ATTRIBUTES_ADDED_AFTER_1_1_0).setReadOnly(ConnectionFactoryAttributes.Pooled.TRANSACTION)).addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH).append(JMSQueueDefinition.PATH),new RejectExpressionsConfig(JMSQueueDefinition.ATTRIBUTES_WITH_EXPRESSION_AFTER_1_1_0)).addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH).append(JMSTopicDefinition.PATH),new RejectExpressionsConfig(JMSTopicDefinition.ATTRIBUTES_WITH_EXPRESSION_AFTER_1_1_0)).addFailedAttribute(subsystemAddress.append(JMSBridgeDefinition.PATH),FailedOperationTransformationConfig.DISCARDED_RESOURCE)] @AT@ 9429 @LENGTH@ 7328
---------UPD MethodInvocation@@new FailedOperationTransformationConfig().addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH),createChainedConfig(HornetQServerResourceDefinition.ATTRIBUTES_WITH_EXPRESSION_AFTER_1_1_0,HornetQServerResourceDefinition.NEW_ATTRIBUTES_ADDED_AFTER_1_1_0)).addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH).append(pathElement(ModelDescriptionConstants.PATH)),new RejectExpressionsConfig(ModelDescriptionConstants.PATH)).addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH).append(pathElement(CommonAttributes.IN_VM_CONNECTOR)),new RejectExpressionsConfig(InVMTransportDefinition.SERVER_ID)).addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH).append(pathElement(CommonAttributes.IN_VM_ACCEPTOR)),new RejectExpressionsConfig(InVMTransportDefinition.SERVER_ID)).addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH).append(BroadcastGroupDefinition.PATH),new RejectExpressionsConfig(BroadcastGroupDefinition.BROADCAST_PERIOD){
  @Override public boolean expectFailed(  ModelNode operation){
    if ("groupT".equals(operation.get(OP_ADDR).get(2).get(CommonAttributes.BROADCAST_GROUP).asString())) {
      return true;
    }
    return super.expectFailed(operation);
  }
}
).addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH).append(DiscoveryGroupDefinition.PATH),new RejectExpressionsConfig(DiscoveryGroupDefinition.REFRESH_TIMEOUT,DiscoveryGroupDefinition.INITIAL_WAIT_TIMEOUT){
  @Override public boolean expectFailed(  ModelNode operation){
    if ("groupU".equals(operation.get(OP_ADDR).get(2).get(CommonAttributes.DISCOVERY_GROUP).asString())) {
      return true;
    }
    return super.expectFailed(operation);
  }
}
).addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH).append(DivertDefinition.PATH),new RejectExpressionsConfig(DivertDefinition.ATTRIBUTES_WITH_EXPRESSION_AFTER_1_1_0)).addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH).append(QueueDefinition.PATH),new RejectExpressionsConfig(QueueDefinition.ATTRIBUTES_WITH_EXPRESSION_AFTER_1_1_0)).addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH).append(ClusterConnectionDefinition.PATH),createChainedConfig(ClusterConnectionDefinition.ATTRIBUTES_WITH_EXPRESSION_AFTER_1_1_0,ClusterConnectionDefinition.NEW_ATTRIBUTES_ADDED_AFTER_1_1_0)).addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH).append(BridgeDefinition.PATH),new RejectExpressionsConfig(BridgeDefinition.ATTRIBUTES_WITH_EXPRESSION_AFTER_1_1_0)).addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH).append(GroupingHandlerDefinition.PATH),new RejectExpressionsConfig(GroupingHandlerDefinition.ATTRIBUTES_WITH_EXPRESSION_AFTER_1_1_0)).addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH).append(AddressSettingDefinition.PATH),new RejectExpressionsConfig(AddressSettingDefinition.REJECTED_EXPRESSION_ATTRIBUTES)).addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH).append(ConnectorServiceDefinition.PATH).append(ConnectorServiceParamDefinition.PATH),new RejectExpressionsConfig(ConnectorServiceParamDefinition.VALUE)).addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH).append(ConnectionFactoryDefinition.PATH),createChainedConfig(ConnectionFactoryDefinition.ATTRIBUTES_WITH_EXPRESSION_AFTER_1_1_0,new AttributeDefinition[]{CALL_FAILOVER_TIMEOUT}).setReadOnly(FACTORY_TYPE)).addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH).append(PooledConnectionFactoryDefinition.PATH),createChainedConfig(PooledConnectionFactoryDefinition.ATTRIBUTES_WITH_EXPRESSION_AFTER_1_1_0,PooledConnectionFactoryDefinition.NEW_ATTRIBUTES_ADDED_AFTER_1_1_0).setReadOnly(ConnectionFactoryAttributes.Pooled.TRANSACTION)).addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH).append(JMSQueueDefinition.PATH),new RejectExpressionsConfig(JMSQueueDefinition.ATTRIBUTES_WITH_EXPRESSION_AFTER_1_1_0)).addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH).append(JMSTopicDefinition.PATH),new RejectExpressionsConfig(JMSTopicDefinition.ATTRIBUTES_WITH_EXPRESSION_AFTER_1_1_0)).addFailedAttribute(subsystemAddress.append(JMSBridgeDefinition.PATH),new RejectExpressionsConfig(new String[0]){
  @Override public boolean expectFailed(  ModelNode operation){
    return true;
  }
}
) @TO@ new FailedOperationTransformationConfig().addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH),createChainedConfig(HornetQServerResourceDefinition.ATTRIBUTES_WITH_EXPRESSION_AFTER_1_1_0,HornetQServerResourceDefinition.NEW_ATTRIBUTES_ADDED_AFTER_1_1_0)).addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH).append(pathElement(ModelDescriptionConstants.PATH)),new RejectExpressionsConfig(ModelDescriptionConstants.PATH)).addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH).append(pathElement(CommonAttributes.IN_VM_CONNECTOR)),new RejectExpressionsConfig(InVMTransportDefinition.SERVER_ID)).addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH).append(pathElement(CommonAttributes.IN_VM_ACCEPTOR)),new RejectExpressionsConfig(InVMTransportDefinition.SERVER_ID)).addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH).append(BroadcastGroupDefinition.PATH),new RejectExpressionsConfig(BroadcastGroupDefinition.BROADCAST_PERIOD){
  @Override public boolean expectFailed(  ModelNode operation){
    if ("groupT".equals(operation.get(OP_ADDR).get(2).get(CommonAttributes.BROADCAST_GROUP).asString())) {
      return true;
    }
    return super.expectFailed(operation);
  }
}
).addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH).append(DiscoveryGroupDefinition.PATH),new RejectExpressionsConfig(DiscoveryGroupDefinition.REFRESH_TIMEOUT,DiscoveryGroupDefinition.INITIAL_WAIT_TIMEOUT){
  @Override public boolean expectFailed(  ModelNode operation){
    if ("groupU".equals(operation.get(OP_ADDR).get(2).get(CommonAttributes.DISCOVERY_GROUP).asString())) {
      return true;
    }
    return super.expectFailed(operation);
  }
}
).addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH).append(DivertDefinition.PATH),new RejectExpressionsConfig(DivertDefinition.ATTRIBUTES_WITH_EXPRESSION_AFTER_1_1_0)).addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH).append(QueueDefinition.PATH),new RejectExpressionsConfig(QueueDefinition.ATTRIBUTES_WITH_EXPRESSION_AFTER_1_1_0)).addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH).append(ClusterConnectionDefinition.PATH),createChainedConfig(ClusterConnectionDefinition.ATTRIBUTES_WITH_EXPRESSION_AFTER_1_1_0,ClusterConnectionDefinition.NEW_ATTRIBUTES_ADDED_AFTER_1_1_0)).addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH).append(BridgeDefinition.PATH),new RejectExpressionsConfig(BridgeDefinition.ATTRIBUTES_WITH_EXPRESSION_AFTER_1_1_0)).addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH).append(GroupingHandlerDefinition.PATH),new RejectExpressionsConfig(GroupingHandlerDefinition.ATTRIBUTES_WITH_EXPRESSION_AFTER_1_1_0)).addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH).append(AddressSettingDefinition.PATH),new RejectExpressionsConfig(AddressSettingDefinition.REJECTED_EXPRESSION_ATTRIBUTES)).addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH).append(ConnectorServiceDefinition.PATH).append(ConnectorServiceParamDefinition.PATH),new RejectExpressionsConfig(ConnectorServiceParamDefinition.VALUE)).addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH).append(ConnectionFactoryDefinition.PATH),createChainedConfig(ConnectionFactoryDefinition.ATTRIBUTES_WITH_EXPRESSION_AFTER_1_1_0,new AttributeDefinition[]{CALL_FAILOVER_TIMEOUT}).setReadOnly(FACTORY_TYPE)).addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH).append(PooledConnectionFactoryDefinition.PATH),createChainedConfig(PooledConnectionFactoryDefinition.ATTRIBUTES_WITH_EXPRESSION_AFTER_1_1_0,PooledConnectionFactoryDefinition.NEW_ATTRIBUTES_ADDED_AFTER_1_1_0).setReadOnly(ConnectionFactoryAttributes.Pooled.TRANSACTION)).addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH).append(JMSQueueDefinition.PATH),new RejectExpressionsConfig(JMSQueueDefinition.ATTRIBUTES_WITH_EXPRESSION_AFTER_1_1_0)).addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH).append(JMSTopicDefinition.PATH),new RejectExpressionsConfig(JMSTopicDefinition.ATTRIBUTES_WITH_EXPRESSION_AFTER_1_1_0)).addFailedAttribute(subsystemAddress.append(JMSBridgeDefinition.PATH),FailedOperationTransformationConfig.DISCARDED_RESOURCE) @AT@ 9572 @LENGTH@ 7175
------------UPD SimpleName@@MethodName:addFailedAttribute:[subsystemAddress.append(JMSBridgeDefinition.PATH), new RejectExpressionsConfig(new String[0]){
  @Override public boolean expectFailed(  ModelNode operation){
    return true;
  }
}
] @TO@ MethodName:addFailedAttribute:[subsystemAddress.append(JMSBridgeDefinition.PATH), FailedOperationTransformationConfig.DISCARDED_RESOURCE] @AT@ 16214 @LENGTH@ 533
---------------INS QualifiedName@@FailedOperationTransformationConfig.DISCARDED_RESOURCE @TO@ SimpleName@@MethodName:addFailedAttribute:[subsystemAddress.append(JMSBridgeDefinition.PATH), new RejectExpressionsConfig(new String[0]){
  @Override public boolean expectFailed(  ModelNode operation){
    return true;
  }
}
] @AT@ 16327 @LENGTH@ 54
------------------INS SimpleName@@FailedOperationTransformationConfig @TO@ QualifiedName@@FailedOperationTransformationConfig.DISCARDED_RESOURCE @AT@ 16327 @LENGTH@ 35
------------------INS SimpleName@@DISCARDED_RESOURCE @TO@ QualifiedName@@FailedOperationTransformationConfig.DISCARDED_RESOURCE @AT@ 16363 @LENGTH@ 18
---------------DEL ClassInstanceCreation@@RejectExpressionsConfig[new String[0]] @AT@ 16349 @LENGTH@ 397
------------------DEL New@@new @AT@ 16349 @LENGTH@ 3
------------------DEL SimpleType@@RejectExpressionsConfig @AT@ 16353 @LENGTH@ 23
------------------DEL ArrayCreation@@new String[0] @AT@ 16377 @LENGTH@ 13
---------------------DEL ArrayType@@String[] @AT@ 16381 @LENGTH@ 9
------------------------DEL SimpleType@@String @AT@ 16381 @LENGTH@ 6
---------------------DEL NumberLiteral@@0 @AT@ 16388 @LENGTH@ 1
------------------DEL AnonymousClassDeclaration@@AnonymousClass @AT@ 16392 @LENGTH@ 354
---------------------DEL MethodDeclaration@@public, boolean, MethodName:expectFailed, ModelNode operation,  @AT@ 16476 @LENGTH@ 236
------------------------DEL Modifier@@public @AT@ 16476 @LENGTH@ 6
------------------------DEL PrimitiveType@@boolean @AT@ 16483 @LENGTH@ 7
------------------------DEL SimpleName@@MethodName:expectFailed @AT@ 16491 @LENGTH@ 12
------------------------DEL SingleVariableDeclaration@@ModelNode operation @AT@ 16504 @LENGTH@ 19
---------------------------DEL SimpleType@@ModelNode @AT@ 16504 @LENGTH@ 9
---------------------------DEL SimpleName@@operation @AT@ 16514 @LENGTH@ 9
------------------------DEL ReturnStatement@@BooleanLiteral:true @AT@ 16662 @LENGTH@ 12
---------------------------DEL BooleanLiteral@@true @AT@ 16669 @LENGTH@ 4


UPD ExpressionStatement@@MethodInvocation:java.util.logging.Logger.getLogger(Mina2UdpNoCamelTest.class.getName()).log(Level.SEVERE,null,ex) @TO@ MethodInvocation:logger.warn(null,ex) @AT@ 5898 @LENGTH@ 121
---UPD MethodInvocation@@java.util.logging.Logger.getLogger(Mina2UdpNoCamelTest.class.getName()).log(Level.SEVERE,null,ex) @TO@ logger.warn(null,ex) @AT@ 5898 @LENGTH@ 120
------DEL MethodInvocation@@MethodName:getLogger:[Mina2UdpNoCamelTest.class.getName()] @AT@ 5898 @LENGTH@ 71
---------DEL MethodInvocation@@Mina2UdpNoCamelTest.class.getName() @AT@ 5933 @LENGTH@ 35
------------DEL TypeLiteral@@Mina2UdpNoCamelTest.class @AT@ 5933 @LENGTH@ 25
------DEL QualifiedName@@Name:java.util.logging.Logger @AT@ 5898 @LENGTH@ 24
------MOV SimpleName@@MethodName:getName:[] @TO@ MethodInvocation@@java.util.logging.Logger.getLogger(Mina2UdpNoCamelTest.class.getName()).log(Level.SEVERE,null,ex) @AT@ 5959 @LENGTH@ 9
------UPD SimpleName@@MethodName:log:[Level.SEVERE, null, ex] @TO@ MethodName:warn:[null, ex] @AT@ 5970 @LENGTH@ 48
---------DEL QualifiedName@@Level.SEVERE @AT@ 5995 @LENGTH@ 12
------------DEL SimpleName@@Level @AT@ 5995 @LENGTH@ 5
------------DEL SimpleName@@SEVERE @AT@ 6001 @LENGTH@ 6


UPD IfStatement@@if (opAddr.size() > 0 && opAddr.getElement(0).equals(pathElement)) {  final Map<PathAddress,ModelVersion> subsystem=Collections.singletonMap(PathAddress.EMPTY_ADDRESS.append(pathElement),modelVersion);  final TransformationTarget transformationTarget=TransformationTargetImpl.create(extensionRegistry.getTransformerRegistry(),getCoreModelVersionByLegacyModelVersion(modelVersion),subsystem,MOCK_IGNORED_DOMAIN_RESOURCE_REGISTRY,TransformationTarget.TransformationTargetType.SERVER);  final Transformers transformers=Transformers.Factory.create(transformationTarget);  final TransformationContext transformationContext=createTransformationContext(transformationTarget);  return transformers.transformOperation(transformationContext,operation);} @TO@ if ((opAddr.size() > 0 && opAddr.getElement(0).equals(pathElement)) || operation.get(OP).asString().equals(COMPOSITE)) {  final Map<PathAddress,ModelVersion> subsystem=Collections.singletonMap(PathAddress.EMPTY_ADDRESS.append(pathElement),modelVersion);  final TransformationTarget transformationTarget=TransformationTargetImpl.create(extensionRegistry.getTransformerRegistry(),getCoreModelVersionByLegacyModelVersion(modelVersion),subsystem,MOCK_IGNORED_DOMAIN_RESOURCE_REGISTRY,TransformationTarget.TransformationTargetType.SERVER);  final Transformers transformers=Transformers.Factory.create(transformationTarget);  final TransformationContext transformationContext=createTransformationContext(transformationTarget);  return transformers.transformOperation(transformationContext,operation);} @AT@ 7152 @LENGTH@ 844
---INS InfixExpression@@(opAddr.size() > 0 && opAddr.getElement(0).equals(pathElement)) || operation.get(OP).asString().equals(COMPOSITE) @TO@ IfStatement@@if (opAddr.size() > 0 && opAddr.getElement(0).equals(pathElement)) {  final Map<PathAddress,ModelVersion> subsystem=Collections.singletonMap(PathAddress.EMPTY_ADDRESS.append(pathElement),modelVersion);  final TransformationTarget transformationTarget=TransformationTargetImpl.create(extensionRegistry.getTransformerRegistry(),getCoreModelVersionByLegacyModelVersion(modelVersion),subsystem,MOCK_IGNORED_DOMAIN_RESOURCE_REGISTRY,TransformationTarget.TransformationTargetType.SERVER);  final Transformers transformers=Transformers.Factory.create(transformationTarget);  final TransformationContext transformationContext=createTransformationContext(transformationTarget);  return transformers.transformOperation(transformationContext,operation);} @AT@ 7292 @LENGTH@ 113
------INS ParenthesizedExpression@@(opAddr.size() > 0 && opAddr.getElement(0).equals(pathElement)) @TO@ InfixExpression@@(opAddr.size() > 0 && opAddr.getElement(0).equals(pathElement)) || operation.get(OP).asString().equals(COMPOSITE) @AT@ 7292 @LENGTH@ 63
---------MOV InfixExpression@@opAddr.size() > 0 && opAddr.getElement(0).equals(pathElement) @TO@ ParenthesizedExpression@@(opAddr.size() > 0 && opAddr.getElement(0).equals(pathElement)) @AT@ 7156 @LENGTH@ 61
------INS Operator@@|| @TO@ InfixExpression@@(opAddr.size() > 0 && opAddr.getElement(0).equals(pathElement)) || operation.get(OP).asString().equals(COMPOSITE) @AT@ 7355 @LENGTH@ 2
------INS MethodInvocation@@operation.get(OP).asString().equals(COMPOSITE) @TO@ InfixExpression@@(opAddr.size() > 0 && opAddr.getElement(0).equals(pathElement)) || operation.get(OP).asString().equals(COMPOSITE) @AT@ 7359 @LENGTH@ 46
---------INS MethodInvocation@@MethodName:asString:[] @TO@ MethodInvocation@@operation.get(OP).asString().equals(COMPOSITE) @AT@ 7359 @LENGTH@ 28
---------INS MethodInvocation@@MethodName:get:[OP] @TO@ MethodInvocation@@operation.get(OP).asString().equals(COMPOSITE) @AT@ 7359 @LENGTH@ 17
------------INS SimpleName@@OP @TO@ MethodInvocation@@MethodName:get:[OP] @AT@ 7373 @LENGTH@ 2
---------INS SimpleName@@Name:operation @TO@ MethodInvocation@@operation.get(OP).asString().equals(COMPOSITE) @AT@ 7359 @LENGTH@ 9
---------INS SimpleName@@MethodName:equals:[COMPOSITE] @TO@ MethodInvocation@@operation.get(OP).asString().equals(COMPOSITE) @AT@ 7388 @LENGTH@ 17
------------INS SimpleName@@COMPOSITE @TO@ SimpleName@@MethodName:equals:[COMPOSITE] @AT@ 7395 @LENGTH@ 9


UPD ExpressionStatement@@MethodInvocation:context.getFailureDescription().set(String.format("Unknown metric %s",attrName)) @TO@ MethodInvocation:context.getFailureDescription().set(InfinispanMessages.MESSAGES.unknownMetric(attrName)) @AT@ 3401 @LENGTH@ 82
---UPD MethodInvocation@@context.getFailureDescription().set(String.format("Unknown metric %s",attrName)) @TO@ context.getFailureDescription().set(InfinispanMessages.MESSAGES.unknownMetric(attrName)) @AT@ 3401 @LENGTH@ 81
------UPD SimpleName@@MethodName:set:[String.format("Unknown metric %s",attrName)] @TO@ MethodName:set:[InfinispanMessages.MESSAGES.unknownMetric(attrName)] @AT@ 3433 @LENGTH@ 49
---------UPD MethodInvocation@@String.format("Unknown metric %s",attrName) @TO@ InfinispanMessages.MESSAGES.unknownMetric(attrName) @AT@ 3437 @LENGTH@ 44
------------DEL SimpleName@@Name:String @AT@ 3437 @LENGTH@ 6
------------UPD SimpleName@@MethodName:format:["Unknown metric %s", attrName] @TO@ MethodName:unknownMetric:[attrName] @AT@ 3444 @LENGTH@ 37
---------------DEL StringLiteral@@"Unknown metric %s" @AT@ 3451 @LENGTH@ 19
------------INS QualifiedName@@Name:InfinispanMessages.MESSAGES @TO@ MethodInvocation@@String.format("Unknown metric %s",attrName) @AT@ 3499 @LENGTH@ 27


UPD MethodDeclaration@@public, Long, MethodName:doInRedis, RedisConnection connection,  @TO@ public, Object, MethodName:doInRedis, RedisConnection connection,  @AT@ 15980 @LENGTH@ 111
---UPD SimpleType@@Long @TO@ Object @AT@ 15987 @LENGTH@ 4
---INS ExpressionStatement@@MethodInvocation:connection.publish(rawChannel,rawMessage) @TO@ MethodDeclaration@@public, Long, MethodName:doInRedis, RedisConnection connection,  @AT@ 16033 @LENGTH@ 43
------MOV MethodInvocation@@connection.publish(rawChannel,rawMessage) @TO@ ExpressionStatement@@MethodInvocation:connection.publish(rawChannel,rawMessage) @AT@ 16043 @LENGTH@ 42
---UPD ReturnStatement@@MethodInvocation:connection.publish(rawChannel,rawMessage) @TO@ NullLiteral:null @AT@ 16036 @LENGTH@ 50
------INS NullLiteral@@null @TO@ ReturnStatement@@MethodInvocation:connection.publish(rawChannel,rawMessage) @AT@ 16088 @LENGTH@ 4


INS MethodDeclaration@@Object, MethodName:convertToMongoType, Object obj, TypeInformation<?> typeInformation,  @TO@ TypeDeclaration@@[public]MongoWriter, [EntityWriter<T,DBObject>] @AT@ 1883 @LENGTH@ 67
---INS SimpleType@@Object @TO@ MethodDeclaration@@Object, MethodName:convertToMongoType, Object obj, TypeInformation<?> typeInformation,  @AT@ 1876 @LENGTH@ 6
---INS SimpleName@@MethodName:convertToMongoType @TO@ MethodDeclaration@@Object, MethodName:convertToMongoType, Object obj, TypeInformation<?> typeInformation,  @AT@ 1883 @LENGTH@ 18
---INS SingleVariableDeclaration@@Object obj @TO@ MethodDeclaration@@Object, MethodName:convertToMongoType, Object obj, TypeInformation<?> typeInformation,  @AT@ 1902 @LENGTH@ 10
------INS SimpleType@@Object @TO@ SingleVariableDeclaration@@Object obj @AT@ 1902 @LENGTH@ 6
------INS SimpleName@@obj @TO@ SingleVariableDeclaration@@Object obj @AT@ 1909 @LENGTH@ 3
---INS SingleVariableDeclaration@@TypeInformation<?> typeInformation @TO@ MethodDeclaration@@Object, MethodName:convertToMongoType, Object obj, TypeInformation<?> typeInformation,  @AT@ 1914 @LENGTH@ 34
------INS ParameterizedType@@TypeInformation<?> @TO@ SingleVariableDeclaration@@TypeInformation<?> typeInformation @AT@ 1914 @LENGTH@ 18
---------INS SimpleType@@TypeInformation @TO@ ParameterizedType@@TypeInformation<?> @AT@ 1914 @LENGTH@ 15
---------INS WildcardType@@? @TO@ ParameterizedType@@TypeInformation<?> @AT@ 1930 @LENGTH@ 1
------INS SimpleName@@typeInformation @TO@ SingleVariableDeclaration@@TypeInformation<?> typeInformation @AT@ 1933 @LENGTH@ 15


UPD ExpressionStatement@@MethodInvocation:System.out.println(String.format("All %d servers processed at least %f of calls",expectedServers,minCalls)) @TO@ MethodInvocation:log.info(String.format("All %d servers processed at least %f of calls",expectedServers,minCalls)) @AT@ 11364 @LENGTH@ 110
---UPD MethodInvocation@@System.out.println(String.format("All %d servers processed at least %f of calls",expectedServers,minCalls)) @TO@ log.info(String.format("All %d servers processed at least %f of calls",expectedServers,minCalls)) @AT@ 11364 @LENGTH@ 109
------DEL QualifiedName@@Name:System.out @AT@ 11364 @LENGTH@ 10
------INS SimpleName@@Name:log @TO@ MethodInvocation@@System.out.println(String.format("All %d servers processed at least %f of calls",expectedServers,minCalls)) @AT@ 11364 @LENGTH@ 3
------UPD SimpleName@@MethodName:println:[String.format("All %d servers processed at least %f of calls",expectedServers,minCalls)] @TO@ MethodName:info:[String.format("All %d servers processed at least %f of calls",expectedServers,minCalls)] @AT@ 11375 @LENGTH@ 98


UPD IfStatement@@if (subscription != null) {  subscription.doClose();  subscription=null;} @TO@ if (subscription != null) {  if (subscription.isAlive()) {    subscription.doClose();  }  subscription=null;} @AT@ 5461 @LENGTH@ 82
---UPD Block@@ThenBody:{  subscription.doClose();  subscription=null;} @TO@ ThenBody:{  if (subscription.isAlive()) {    subscription.doClose();  }  subscription=null;} @AT@ 5487 @LENGTH@ 56
------INS IfStatement@@if (subscription.isAlive()) {  subscription.doClose();} @TO@ Block@@ThenBody:{  subscription.doClose();  subscription=null;} @AT@ 5492 @LENGTH@ 61
---------INS MethodInvocation@@subscription.isAlive() @TO@ IfStatement@@if (subscription.isAlive()) {  subscription.doClose();} @AT@ 5495 @LENGTH@ 22
------------INS SimpleName@@Name:subscription @TO@ MethodInvocation@@subscription.isAlive() @AT@ 5495 @LENGTH@ 12
------------INS SimpleName@@MethodName:isAlive:[] @TO@ MethodInvocation@@subscription.isAlive() @AT@ 5508 @LENGTH@ 9
---------INS Block@@ThenBody:{  subscription.doClose();} @TO@ IfStatement@@if (subscription.isAlive()) {  subscription.doClose();} @AT@ 5519 @LENGTH@ 34
------------MOV ExpressionStatement@@MethodInvocation:subscription.doClose() @TO@ Block@@ThenBody:{  subscription.doClose();} @AT@ 5492 @LENGTH@ 23


INS IfStatement@@if (mongo != null) {  mongo.close();} @TO@ MethodDeclaration@@public, void, MethodName:close,  @AT@ 6025 @LENGTH@ 42
---INS InfixExpression@@mongo != null @TO@ IfStatement@@if (mongo != null) {  mongo.close();} @AT@ 6029 @LENGTH@ 13
------INS SimpleName@@mongo @TO@ InfixExpression@@mongo != null @AT@ 6029 @LENGTH@ 5
------INS Operator@@!= @TO@ InfixExpression@@mongo != null @AT@ 6034 @LENGTH@ 2
------INS NullLiteral@@null @TO@ InfixExpression@@mongo != null @AT@ 6038 @LENGTH@ 4
---INS Block@@ThenBody:{  mongo.close();} @TO@ IfStatement@@if (mongo != null) {  mongo.close();} @AT@ 6044 @LENGTH@ 23
------MOV ExpressionStatement@@MethodInvocation:mongo.close() @TO@ Block@@ThenBody:{  mongo.close();} @AT@ 5758 @LENGTH@ 14


UPD VariableDeclarationStatement@@Map<String,Properties> info=(Map<String,Properties>)mbeanServer.invoke(on,"findComponents",null,null); @TO@ @SuppressWarnings("unchecked") Map<String,Properties> info=(Map<String,Properties>)mbeanServer.invoke(on,"findComponents",null,null); @AT@ 7339 @LENGTH@ 110


UPD FieldDeclaration@@static, final, SimpleAttributeDefinition, [BINDING_TYPE=new SimpleAttributeDefinitionBuilder(NamingSubsystemModel.BINDING_TYPE,ModelType.STRING,false).setAllowExpression(true).setFlags(AttributeAccess.Flag.RESTART_RESOURCE_SERVICES).build()] @TO@ static, final, SimpleAttributeDefinition, [BINDING_TYPE=new SimpleAttributeDefinitionBuilder(NamingSubsystemModel.BINDING_TYPE,ModelType.STRING,false).setFlags(AttributeAccess.Flag.RESTART_RESOURCE_SERVICES).setValidator(EnumValidator.create(BindingType.class,false,false)).build()] @AT@ 1908 @LENGTH@ 280
---UPD VariableDeclarationFragment@@BINDING_TYPE=new SimpleAttributeDefinitionBuilder(NamingSubsystemModel.BINDING_TYPE,ModelType.STRING,false).setAllowExpression(true).setFlags(AttributeAccess.Flag.RESTART_RESOURCE_SERVICES).build() @TO@ BINDING_TYPE=new SimpleAttributeDefinitionBuilder(NamingSubsystemModel.BINDING_TYPE,ModelType.STRING,false).setFlags(AttributeAccess.Flag.RESTART_RESOURCE_SERVICES).setValidator(EnumValidator.create(BindingType.class,false,false)).build() @AT@ 1947 @LENGTH@ 240
------UPD MethodInvocation@@new SimpleAttributeDefinitionBuilder(NamingSubsystemModel.BINDING_TYPE,ModelType.STRING,false).setAllowExpression(true).setFlags(AttributeAccess.Flag.RESTART_RESOURCE_SERVICES).build() @TO@ new SimpleAttributeDefinitionBuilder(NamingSubsystemModel.BINDING_TYPE,ModelType.STRING,false).setFlags(AttributeAccess.Flag.RESTART_RESOURCE_SERVICES).setValidator(EnumValidator.create(BindingType.class,false,false)).build() @AT@ 1962 @LENGTH@ 225
---------UPD MethodInvocation@@MethodName:setAllowExpression:[true] @TO@ MethodName:setValidator:[EnumValidator.create(BindingType.class,false,false)] @AT@ 1962 @LENGTH@ 134
------------DEL BooleanLiteral@@true @AT@ 2091 @LENGTH@ 4
------------INS MethodInvocation@@EnumValidator.create(BindingType.class,false,false) @TO@ MethodInvocation@@MethodName:setAllowExpression:[true] @AT@ 2223 @LENGTH@ 53
---------------INS SimpleName@@Name:EnumValidator @TO@ MethodInvocation@@EnumValidator.create(BindingType.class,false,false) @AT@ 2223 @LENGTH@ 13
---------------INS SimpleName@@MethodName:create:[BindingType.class, false, false] @TO@ MethodInvocation@@EnumValidator.create(BindingType.class,false,false) @AT@ 2237 @LENGTH@ 39
------------------INS TypeLiteral@@BindingType.class @TO@ SimpleName@@MethodName:create:[BindingType.class, false, false] @AT@ 2244 @LENGTH@ 17
------------------INS BooleanLiteral@@false @TO@ SimpleName@@MethodName:create:[BindingType.class, false, false] @AT@ 2263 @LENGTH@ 5
------------------INS BooleanLiteral@@false @TO@ SimpleName@@MethodName:create:[BindingType.class, false, false] @AT@ 2270 @LENGTH@ 5
---------MOV MethodInvocation@@MethodName:setAllowExpression:[true] @TO@ MethodInvocation@@new SimpleAttributeDefinitionBuilder(NamingSubsystemModel.BINDING_TYPE,ModelType.STRING,false).setAllowExpression(true).setFlags(AttributeAccess.Flag.RESTART_RESOURCE_SERVICES).build() @AT@ 1962 @LENGTH@ 134


UPD IfStatement@@if (isQueueing()) {  pipeline(pipeline.zcount(key,min,max));  return null;} @TO@ if (isPipelined()) {  pipeline(pipeline.zcount(key,min,max));  return null;} @AT@ 28895 @LENGTH@ 87
---UPD MethodInvocation@@MethodName:isQueueing:[] @TO@ MethodName:isPipelined:[] @AT@ 28899 @LENGTH@ 12


UPD ReturnStatement@@MethodInvocation:builder.dumpExpressionIfPresentInto(expressions) @TO@ ConditionalExpression:builder == null ? Collections.<String>emptyList() : builder.dumpExpressionIfPresentInto(expressions) @AT@ 12117 @LENGTH@ 56
---INS ConditionalExpression@@builder == null ? Collections.<String>emptyList() : builder.dumpExpressionIfPresentInto(expressions) @TO@ ReturnStatement@@MethodInvocation:builder.dumpExpressionIfPresentInto(expressions) @AT@ 12207 @LENGTH@ 101
------MOV MethodInvocation@@builder.dumpExpressionIfPresentInto(expressions) @TO@ ConditionalExpression@@builder == null ? Collections.<String>emptyList() : builder.dumpExpressionIfPresentInto(expressions) @AT@ 12124 @LENGTH@ 48
------INS InfixExpression@@builder == null @TO@ ConditionalExpression@@builder == null ? Collections.<String>emptyList() : builder.dumpExpressionIfPresentInto(expressions) @AT@ 12207 @LENGTH@ 15
---------INS SimpleName@@builder @TO@ InfixExpression@@builder == null @AT@ 12207 @LENGTH@ 7
---------INS Operator@@== @TO@ InfixExpression@@builder == null @AT@ 12214 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@builder == null @AT@ 12218 @LENGTH@ 4
------INS MethodInvocation@@Collections.<String>emptyList() @TO@ ConditionalExpression@@builder == null ? Collections.<String>emptyList() : builder.dumpExpressionIfPresentInto(expressions) @AT@ 12225 @LENGTH@ 32
---------INS SimpleName@@Name:Collections @TO@ MethodInvocation@@Collections.<String>emptyList() @AT@ 12225 @LENGTH@ 11
---------INS SimpleName@@MethodName:emptyList:[] @TO@ MethodInvocation@@Collections.<String>emptyList() @AT@ 12246 @LENGTH@ 11


UPD IfStatement@@if (reg != null) {  reg.resolvePathTransformers(iterator,list);  return;} @TO@ if (reg != null) {  list.add(reg.getPathAddressTransformer());  reg.resolvePathTransformers(iterator,list);  return;} @AT@ 8064 @LENGTH@ 128
---UPD Block@@ThenBody:{  reg.resolvePathTransformers(iterator,list);  return;} @TO@ ThenBody:{  list.add(reg.getPathAddressTransformer());  reg.resolvePathTransformers(iterator,list);  return;} @AT@ 8080 @LENGTH@ 112
------INS ExpressionStatement@@MethodInvocation:list.add(reg.getPathAddressTransformer()) @TO@ Block@@ThenBody:{  reg.resolvePathTransformers(iterator,list);  return;} @AT@ 8060 @LENGTH@ 42
---------INS MethodInvocation@@list.add(reg.getPathAddressTransformer()) @TO@ ExpressionStatement@@MethodInvocation:list.add(reg.getPathAddressTransformer()) @AT@ 8060 @LENGTH@ 41
------------INS SimpleName@@Name:list @TO@ MethodInvocation@@list.add(reg.getPathAddressTransformer()) @AT@ 8060 @LENGTH@ 4
------------INS SimpleName@@MethodName:add:[reg.getPathAddressTransformer()] @TO@ MethodInvocation@@list.add(reg.getPathAddressTransformer()) @AT@ 8065 @LENGTH@ 36
---------------INS MethodInvocation@@reg.getPathAddressTransformer() @TO@ SimpleName@@MethodName:add:[reg.getPathAddressTransformer()] @AT@ 8069 @LENGTH@ 31
------------------INS SimpleName@@Name:reg @TO@ MethodInvocation@@reg.getPathAddressTransformer() @AT@ 8069 @LENGTH@ 3
------------------INS SimpleName@@MethodName:getPathAddressTransformer:[] @TO@ MethodInvocation@@reg.getPathAddressTransformer() @AT@ 8073 @LENGTH@ 27


UPD ExpressionStatement@@MethodInvocation:from("direct:start").to("spring-redis://localhost:6379?redisTemplate=#redisTemplate") @TO@ MethodInvocation:from("direct:start").startupOrder(2).delay(2000).to("spring-redis://localhost:6379?redisTemplate=#redisTemplate") @AT@ 2523 @LENGTH@ 111
---UPD MethodInvocation@@from("direct:start").to("spring-redis://localhost:6379?redisTemplate=#redisTemplate") @TO@ from("direct:start").startupOrder(2).delay(2000).to("spring-redis://localhost:6379?redisTemplate=#redisTemplate") @AT@ 2523 @LENGTH@ 110
------INS MethodInvocation@@MethodName:delay:[2000] @TO@ MethodInvocation@@from("direct:start").to("spring-redis://localhost:6379?redisTemplate=#redisTemplate") @AT@ 2564 @LENGTH@ 98
---------INS NumberLiteral@@2000 @TO@ MethodInvocation@@MethodName:delay:[2000] @AT@ 2657 @LENGTH@ 4
------INS MethodInvocation@@MethodName:startupOrder:[2] @TO@ MethodInvocation@@from("direct:start").to("spring-redis://localhost:6379?redisTemplate=#redisTemplate") @AT@ 2564 @LENGTH@ 61
---------INS NumberLiteral@@2 @TO@ MethodInvocation@@MethodName:startupOrder:[2] @AT@ 2623 @LENGTH@ 1


UPD ExpressionStatement@@MethodInvocation:context.restartRequired() @TO@ MethodInvocation:context.reloadRequired() @AT@ 4891 @LENGTH@ 26
---UPD MethodInvocation@@context.restartRequired() @TO@ context.reloadRequired() @AT@ 4891 @LENGTH@ 25
------UPD SimpleName@@MethodName:restartRequired:[] @TO@ MethodName:reloadRequired:[] @AT@ 4899 @LENGTH@ 17


UPD FieldDeclaration@@protected, static, final, SimpleAttributeDefinition, [PREFIX=new SimpleAttributeDefinitionBuilder(Constants.PREFIX,ModelType.STRING,true).setXmlName(Constants.PREFIX).setFlags(AttributeAccess.Flag.RESTART_ALL_SERVICES).setDefaultValue(new ModelNode(false)).setValidator(new StringLengthValidator(1,true)).build()] @TO@ protected, static, final, SimpleAttributeDefinition, [PREFIX=new SimpleAttributeDefinitionBuilder(Constants.PREFIX,ModelType.STRING,true).setXmlName(Constants.PREFIX).setFlags(AttributeAccess.Flag.RESTART_ALL_SERVICES).setDefaultValue(new ModelNode("access_log.")).setValidator(new StringLengthValidator(1,true)).build()] @AT@ 2993 @LENGTH@ 430
---UPD VariableDeclarationFragment@@PREFIX=new SimpleAttributeDefinitionBuilder(Constants.PREFIX,ModelType.STRING,true).setXmlName(Constants.PREFIX).setFlags(AttributeAccess.Flag.RESTART_ALL_SERVICES).setDefaultValue(new ModelNode(false)).setValidator(new StringLengthValidator(1,true)).build() @TO@ PREFIX=new SimpleAttributeDefinitionBuilder(Constants.PREFIX,ModelType.STRING,true).setXmlName(Constants.PREFIX).setFlags(AttributeAccess.Flag.RESTART_ALL_SERVICES).setDefaultValue(new ModelNode("access_log.")).setValidator(new StringLengthValidator(1,true)).build() @AT@ 3042 @LENGTH@ 380
------UPD MethodInvocation@@new SimpleAttributeDefinitionBuilder(Constants.PREFIX,ModelType.STRING,true).setXmlName(Constants.PREFIX).setFlags(AttributeAccess.Flag.RESTART_ALL_SERVICES).setDefaultValue(new ModelNode(false)).setValidator(new StringLengthValidator(1,true)).build() @TO@ new SimpleAttributeDefinitionBuilder(Constants.PREFIX,ModelType.STRING,true).setXmlName(Constants.PREFIX).setFlags(AttributeAccess.Flag.RESTART_ALL_SERVICES).setDefaultValue(new ModelNode("access_log.")).setValidator(new StringLengthValidator(1,true)).build() @AT@ 3063 @LENGTH@ 359
---------UPD MethodInvocation@@MethodName:setDefaultValue:[new ModelNode(false)] @TO@ MethodName:setDefaultValue:[new ModelNode("access_log.")] @AT@ 3063 @LENGTH@ 260
------------UPD ClassInstanceCreation@@ModelNode[false] @TO@ ModelNode["access_log."] @AT@ 3302 @LENGTH@ 20
---------------INS StringLiteral@@"access_log." @TO@ ClassInstanceCreation@@ModelNode[false] @AT@ 3316 @LENGTH@ 13
---------------DEL BooleanLiteral@@false @AT@ 3316 @LENGTH@ 5


UPD MethodDeclaration@@private, void, MethodName:cleanStartServers, final ModelNode servers, final ModelNode domainModel,  @TO@ private, void, MethodName:cleanStartServers, final ModelNode servers, final ModelNode domainModel, OperationContext context, OperationFailedException,  @AT@ 5012 @LENGTH@ 463
---UPD EnhancedForStatement@@for (final String serverName : servers.keys()) {  if (servers.get(serverName,AUTO_START).asBoolean(true)) {    try {      serverInventory.startServer(serverName,domainModel);    } catch (    Exception e) {      ROOT_LOGGER.failedToStartServer(e,serverName);    }  }} @TO@ for (final Property serverProp : servers.asPropertyList()) {  String serverName=serverProp.getName();  if (ServerConfigResourceDefinition.AUTO_START.resolveModelAttribute(context,serverProp.getValue()).asBoolean(true)) {    try {      serverInventory.startServer(serverName,domainModel);    } catch (    Exception e) {      ROOT_LOGGER.failedToStartServer(e,serverName);    }  }} @AT@ 5106 @LENGTH@ 363
------UPD SingleVariableDeclaration@@final String serverName @TO@ final Property serverProp @AT@ 5110 @LENGTH@ 23
---------UPD SimpleType@@String @TO@ Property @AT@ 5116 @LENGTH@ 6
---------UPD SimpleName@@serverName @TO@ serverProp @AT@ 5123 @LENGTH@ 10
------UPD MethodInvocation@@servers.keys() @TO@ servers.asPropertyList() @AT@ 5136 @LENGTH@ 14
---------UPD SimpleName@@MethodName:keys:[] @TO@ MethodName:asPropertyList:[] @AT@ 5144 @LENGTH@ 6
------UPD IfStatement@@if (servers.get(serverName,AUTO_START).asBoolean(true)) {  try {    serverInventory.startServer(serverName,domainModel);  } catch (  Exception e) {    ROOT_LOGGER.failedToStartServer(e,serverName);  }} @TO@ if (ServerConfigResourceDefinition.AUTO_START.resolveModelAttribute(context,serverProp.getValue()).asBoolean(true)) {  try {    serverInventory.startServer(serverName,domainModel);  } catch (  Exception e) {    ROOT_LOGGER.failedToStartServer(e,serverName);  }} @AT@ 5166 @LENGTH@ 293
---------UPD MethodInvocation@@servers.get(serverName,AUTO_START).asBoolean(true) @TO@ ServerConfigResourceDefinition.AUTO_START.resolveModelAttribute(context,serverProp.getValue()).asBoolean(true) @AT@ 5169 @LENGTH@ 51
------------UPD MethodInvocation@@MethodName:get:[serverName, AUTO_START] @TO@ serverProp.getValue() @AT@ 5169 @LENGTH@ 35
------------UPD SimpleName@@Name:servers @TO@ context @AT@ 5169 @LENGTH@ 7
------------INS MethodInvocation@@MethodName:resolveModelAttribute:[context, serverProp.getValue()] @TO@ MethodInvocation@@servers.get(serverName,AUTO_START).asBoolean(true) @AT@ 5372 @LENGTH@ 95
---------------MOV MethodInvocation@@MethodName:get:[serverName, AUTO_START] @TO@ MethodInvocation@@MethodName:resolveModelAttribute:[context, serverProp.getValue()] @AT@ 5169 @LENGTH@ 35
------------------UPD SimpleName@@serverName @TO@ Name:serverProp @AT@ 5181 @LENGTH@ 10
------------------UPD SimpleName@@AUTO_START @TO@ MethodName:getValue:[] @AT@ 5193 @LENGTH@ 10
---------------MOV SimpleName@@Name:servers @TO@ MethodInvocation@@MethodName:resolveModelAttribute:[context, serverProp.getValue()] @AT@ 5169 @LENGTH@ 7
------------INS QualifiedName@@Name:ServerConfigResourceDefinition.AUTO_START @TO@ MethodInvocation@@servers.get(serverName,AUTO_START).asBoolean(true) @AT@ 5372 @LENGTH@ 41
------INS VariableDeclarationStatement@@String serverName=serverProp.getName(); @TO@ EnhancedForStatement@@for (final String serverName : servers.keys()) {  if (servers.get(serverName,AUTO_START).asBoolean(true)) {    try {      serverInventory.startServer(serverName,domainModel);    } catch (    Exception e) {      ROOT_LOGGER.failedToStartServer(e,serverName);    }  }} @AT@ 5314 @LENGTH@ 41
---------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String serverName=serverProp.getName(); @AT@ 5314 @LENGTH@ 6
---------INS VariableDeclarationFragment@@serverName=serverProp.getName() @TO@ VariableDeclarationStatement@@String serverName=serverProp.getName(); @AT@ 5321 @LENGTH@ 33
------------INS SimpleName@@serverName @TO@ VariableDeclarationFragment@@serverName=serverProp.getName() @AT@ 5321 @LENGTH@ 10
------------INS MethodInvocation@@serverProp.getName() @TO@ VariableDeclarationFragment@@serverName=serverProp.getName() @AT@ 5334 @LENGTH@ 20
---------------INS SimpleName@@Name:serverProp @TO@ MethodInvocation@@serverProp.getName() @AT@ 5334 @LENGTH@ 10
---------------INS SimpleName@@MethodName:getName:[] @TO@ MethodInvocation@@serverProp.getName() @AT@ 5345 @LENGTH@ 9
---INS SingleVariableDeclaration@@OperationContext context @TO@ MethodDeclaration@@private, void, MethodName:cleanStartServers, final ModelNode servers, final ModelNode domainModel,  @AT@ 5174 @LENGTH@ 24
------INS SimpleType@@OperationContext @TO@ SingleVariableDeclaration@@OperationContext context @AT@ 5174 @LENGTH@ 16
------INS SimpleName@@context @TO@ SingleVariableDeclaration@@OperationContext context @AT@ 5191 @LENGTH@ 7
---INS SimpleType@@OperationFailedException @TO@ MethodDeclaration@@private, void, MethodName:cleanStartServers, final ModelNode servers, final ModelNode domainModel,  @AT@ 5207 @LENGTH@ 24


UPD ExpressionStatement@@MethodInvocation:breadcrumbs.add((String)exchange.getIn().getHeader(Exchange.BREADCRUMB_ID)) @TO@ MethodInvocation:breadcrumbs.add(exchange.getExchangeId()) @AT@ 2221 @LENGTH@ 77
---UPD MethodInvocation@@breadcrumbs.add((String)exchange.getIn().getHeader(Exchange.BREADCRUMB_ID)) @TO@ breadcrumbs.add(exchange.getExchangeId()) @AT@ 2221 @LENGTH@ 76
------UPD SimpleName@@MethodName:add:[(String)exchange.getIn().getHeader(Exchange.BREADCRUMB_ID)] @TO@ MethodName:add:[exchange.getExchangeId()] @AT@ 2233 @LENGTH@ 64
---------DEL CastExpression@@(String)exchange.getIn().getHeader(Exchange.BREADCRUMB_ID) @AT@ 2237 @LENGTH@ 59
------------DEL SimpleType@@String @AT@ 2238 @LENGTH@ 6
------------DEL MethodInvocation@@exchange.getIn().getHeader(Exchange.BREADCRUMB_ID) @AT@ 2246 @LENGTH@ 50
---------------DEL MethodInvocation@@MethodName:getIn:[] @AT@ 2246 @LENGTH@ 16
---------INS MethodInvocation@@exchange.getExchangeId() @TO@ SimpleName@@MethodName:add:[(String)exchange.getIn().getHeader(Exchange.BREADCRUMB_ID)] @AT@ 2237 @LENGTH@ 24
------------MOV SimpleName@@Name:exchange @TO@ MethodInvocation@@exchange.getExchangeId() @AT@ 2246 @LENGTH@ 8
------------MOV SimpleName@@MethodName:getHeader:[Exchange.BREADCRUMB_ID] @TO@ MethodInvocation@@exchange.getExchangeId() @AT@ 2263 @LENGTH@ 33


UPD Block@@ThenBody:{  child=VFS.getChild(path.getPath().split("!")[0].split(":")[1]);  closable=VFS.mountZip(new File(path.getPath().split("!")[0].split(":")[1]),child,TempFileProviderService.provider());} @TO@ ThenBody:{  child=VFS.getChild(path.getPath().split("!")[0].split("file:")[1]);  closable=VFS.mountZip(new File(path.getPath().split("!")[0].split("file:")[1]),child,TempFileProviderService.provider());} @AT@ 23407 @LENGTH@ 248
---UPD ExpressionStatement@@Assignment:child=VFS.getChild(path.getPath().split("!")[0].split(":")[1]) @TO@ Assignment:child=VFS.getChild(path.getPath().split("!")[0].split("file:")[1]) @AT@ 23429 @LENGTH@ 65
------UPD Assignment@@child=VFS.getChild(path.getPath().split("!")[0].split(":")[1]) @TO@ child=VFS.getChild(path.getPath().split("!")[0].split("file:")[1]) @AT@ 23429 @LENGTH@ 64
---------UPD MethodInvocation@@VFS.getChild(path.getPath().split("!")[0].split(":")[1]) @TO@ VFS.getChild(path.getPath().split("!")[0].split("file:")[1]) @AT@ 23437 @LENGTH@ 56
------------UPD SimpleName@@MethodName:getChild:[path.getPath().split("!")[0].split(":")[1]] @TO@ MethodName:getChild:[path.getPath().split("!")[0].split("file:")[1]] @AT@ 23441 @LENGTH@ 52
---------------UPD ArrayAccess@@path.getPath().split("!")[0].split(":")[1] @TO@ path.getPath().split("!")[0].split("file:")[1] @AT@ 23450 @LENGTH@ 42
------------------UPD MethodInvocation@@path.getPath().split("!")[0].split(":") @TO@ path.getPath().split("!")[0].split("file:") @AT@ 23450 @LENGTH@ 39
---------------------UPD SimpleName@@MethodName:split:[":"] @TO@ MethodName:split:["file:"] @AT@ 23479 @LENGTH@ 10
------------------------UPD StringLiteral@@":" @TO@ "file:" @AT@ 23485 @LENGTH@ 3
---UPD ExpressionStatement@@Assignment:closable=VFS.mountZip(new File(path.getPath().split("!")[0].split(":")[1]),child,TempFileProviderService.provider()) @TO@ Assignment:closable=VFS.mountZip(new File(path.getPath().split("!")[0].split("file:")[1]),child,TempFileProviderService.provider()) @AT@ 23516 @LENGTH@ 121
------UPD Assignment@@closable=VFS.mountZip(new File(path.getPath().split("!")[0].split(":")[1]),child,TempFileProviderService.provider()) @TO@ closable=VFS.mountZip(new File(path.getPath().split("!")[0].split("file:")[1]),child,TempFileProviderService.provider()) @AT@ 23516 @LENGTH@ 120
---------UPD MethodInvocation@@VFS.mountZip(new File(path.getPath().split("!")[0].split(":")[1]),child,TempFileProviderService.provider()) @TO@ VFS.mountZip(new File(path.getPath().split("!")[0].split("file:")[1]),child,TempFileProviderService.provider()) @AT@ 23527 @LENGTH@ 109
------------UPD SimpleName@@MethodName:mountZip:[new File(path.getPath().split("!")[0].split(":")[1]), child, TempFileProviderService.provider()] @TO@ MethodName:mountZip:[new File(path.getPath().split("!")[0].split("file:")[1]), child, TempFileProviderService.provider()] @AT@ 23531 @LENGTH@ 105
---------------UPD ClassInstanceCreation@@File[path.getPath().split("!")[0].split(":")[1]] @TO@ File[path.getPath().split("!")[0].split("file:")[1]] @AT@ 23540 @LENGTH@ 52
------------------UPD ArrayAccess@@path.getPath().split("!")[0].split(":")[1] @TO@ path.getPath().split("!")[0].split("file:")[1] @AT@ 23549 @LENGTH@ 42
---------------------UPD MethodInvocation@@path.getPath().split("!")[0].split(":") @TO@ path.getPath().split("!")[0].split("file:") @AT@ 23549 @LENGTH@ 39
------------------------UPD SimpleName@@MethodName:split:[":"] @TO@ MethodName:split:["file:"] @AT@ 23578 @LENGTH@ 10
---------------------------UPD StringLiteral@@":" @TO@ "file:" @AT@ 23584 @LENGTH@ 3


INS FieldDeclaration@@Credentials, [credentials] @TO@ TypeDeclaration@@[@Document, public]Person, Contact @AT@ 1524 @LENGTH@ 24
---INS SimpleType@@Credentials @TO@ FieldDeclaration@@Credentials, [credentials] @AT@ 1524 @LENGTH@ 11
---INS VariableDeclarationFragment@@credentials @TO@ FieldDeclaration@@Credentials, [credentials] @AT@ 1536 @LENGTH@ 11
------INS SimpleName@@credentials @TO@ VariableDeclarationFragment@@credentials @AT@ 1536 @LENGTH@ 11


INS MethodDeclaration@@public, OperationTransformer, MethodName:getOperationTransformer,  @TO@ TypeDeclaration@@[public]RejectExpressionValuesTransformer, [ResourceTransformer, OperationTransformer] @AT@ 4602 @LENGTH@ 82
---INS Modifier@@public @TO@ MethodDeclaration@@public, OperationTransformer, MethodName:getOperationTransformer,  @AT@ 4602 @LENGTH@ 6
---INS SimpleType@@OperationTransformer @TO@ MethodDeclaration@@public, OperationTransformer, MethodName:getOperationTransformer,  @AT@ 4609 @LENGTH@ 20
---INS SimpleName@@MethodName:getOperationTransformer @TO@ MethodDeclaration@@public, OperationTransformer, MethodName:getOperationTransformer,  @AT@ 4630 @LENGTH@ 23
---INS ReturnStatement@@ThisExpression:this @TO@ MethodDeclaration@@public, OperationTransformer, MethodName:getOperationTransformer,  @AT@ 4666 @LENGTH@ 12
------INS ThisExpression@@this @TO@ ReturnStatement@@ThisExpression:this @AT@ 4673 @LENGTH@ 4


INS IfStatement@@if (subscription != null) {  subscription.doClose();  subscription=null;} @TO@ MethodDeclaration@@public, void, MethodName:close, DataAccessException,  @AT@ 4547 @LENGTH@ 82
---INS InfixExpression@@subscription != null @TO@ IfStatement@@if (subscription != null) {  subscription.doClose();  subscription=null;} @AT@ 4551 @LENGTH@ 20
------INS SimpleName@@subscription @TO@ InfixExpression@@subscription != null @AT@ 4551 @LENGTH@ 12
------INS Operator@@!= @TO@ InfixExpression@@subscription != null @AT@ 4563 @LENGTH@ 2
------INS NullLiteral@@null @TO@ InfixExpression@@subscription != null @AT@ 4567 @LENGTH@ 4
---INS Block@@ThenBody:{  subscription.doClose();  subscription=null;} @TO@ IfStatement@@if (subscription != null) {  subscription.doClose();  subscription=null;} @AT@ 4573 @LENGTH@ 56
------INS ExpressionStatement@@MethodInvocation:subscription.doClose() @TO@ Block@@ThenBody:{  subscription.doClose();  subscription=null;} @AT@ 4578 @LENGTH@ 23
---------INS MethodInvocation@@subscription.doClose() @TO@ ExpressionStatement@@MethodInvocation:subscription.doClose() @AT@ 4578 @LENGTH@ 22
------------INS SimpleName@@Name:subscription @TO@ MethodInvocation@@subscription.doClose() @AT@ 4578 @LENGTH@ 12
------------INS SimpleName@@MethodName:doClose:[] @TO@ MethodInvocation@@subscription.doClose() @AT@ 4591 @LENGTH@ 9
------INS ExpressionStatement@@Assignment:subscription=null @TO@ Block@@ThenBody:{  subscription.doClose();  subscription=null;} @AT@ 4605 @LENGTH@ 20
---------INS Assignment@@subscription=null @TO@ ExpressionStatement@@Assignment:subscription=null @AT@ 4605 @LENGTH@ 19
------------INS SimpleName@@subscription @TO@ Assignment@@subscription=null @AT@ 4605 @LENGTH@ 12
------------INS Operator@@= @TO@ Assignment@@subscription=null @AT@ 4617 @LENGTH@ 1
------------INS NullLiteral@@null @TO@ Assignment@@subscription=null @AT@ 4620 @LENGTH@ 4


UPD IfStatement@@if (opAddr.size() > 0 && opAddr.getElement(0).equals(pathElement)) {  final Map<PathAddress,ModelVersion> subsystem=Collections.singletonMap(PathAddress.EMPTY_ADDRESS.append(pathElement),modelVersion);  final TransformationTarget transformationTarget=TransformationTargetImpl.create(extensionRegistry.getTransformerRegistry(),getCoreModelVersionByLegacyModelVersion(modelVersion),subsystem,MOCK_IGNORED_DOMAIN_RESOURCE_REGISTRY,TransformationTarget.TransformationTargetType.SERVER);  final Transformers transformers=Transformers.Factory.create(transformationTarget);  final TransformationContext transformationContext=createTransformationContext(transformationTarget);  return transformers.transformOperation(transformationContext,operation);} @TO@ if ((opAddr.size() > 0 && opAddr.getElement(0).equals(pathElement)) || operation.get(OP).asString().equals(COMPOSITE)) {  final Map<PathAddress,ModelVersion> subsystem=Collections.singletonMap(PathAddress.EMPTY_ADDRESS.append(pathElement),modelVersion);  final TransformationTarget transformationTarget=TransformationTargetImpl.create(extensionRegistry.getTransformerRegistry(),getCoreModelVersionByLegacyModelVersion(modelVersion),subsystem,MOCK_IGNORED_DOMAIN_RESOURCE_REGISTRY,TransformationTarget.TransformationTargetType.SERVER);  final Transformers transformers=Transformers.Factory.create(transformationTarget);  final TransformationContext transformationContext=createTransformationContext(transformationTarget);  return transformers.transformOperation(transformationContext,operation);} @AT@ 7152 @LENGTH@ 844
---INS InfixExpression@@(opAddr.size() > 0 && opAddr.getElement(0).equals(pathElement)) || operation.get(OP).asString().equals(COMPOSITE) @TO@ IfStatement@@if (opAddr.size() > 0 && opAddr.getElement(0).equals(pathElement)) {  final Map<PathAddress,ModelVersion> subsystem=Collections.singletonMap(PathAddress.EMPTY_ADDRESS.append(pathElement),modelVersion);  final TransformationTarget transformationTarget=TransformationTargetImpl.create(extensionRegistry.getTransformerRegistry(),getCoreModelVersionByLegacyModelVersion(modelVersion),subsystem,MOCK_IGNORED_DOMAIN_RESOURCE_REGISTRY,TransformationTarget.TransformationTargetType.SERVER);  final Transformers transformers=Transformers.Factory.create(transformationTarget);  final TransformationContext transformationContext=createTransformationContext(transformationTarget);  return transformers.transformOperation(transformationContext,operation);} @AT@ 7292 @LENGTH@ 113
------INS ParenthesizedExpression@@(opAddr.size() > 0 && opAddr.getElement(0).equals(pathElement)) @TO@ InfixExpression@@(opAddr.size() > 0 && opAddr.getElement(0).equals(pathElement)) || operation.get(OP).asString().equals(COMPOSITE) @AT@ 7292 @LENGTH@ 63
---------MOV InfixExpression@@opAddr.size() > 0 && opAddr.getElement(0).equals(pathElement) @TO@ ParenthesizedExpression@@(opAddr.size() > 0 && opAddr.getElement(0).equals(pathElement)) @AT@ 7156 @LENGTH@ 61
------INS Operator@@|| @TO@ InfixExpression@@(opAddr.size() > 0 && opAddr.getElement(0).equals(pathElement)) || operation.get(OP).asString().equals(COMPOSITE) @AT@ 7355 @LENGTH@ 2
------INS MethodInvocation@@operation.get(OP).asString().equals(COMPOSITE) @TO@ InfixExpression@@(opAddr.size() > 0 && opAddr.getElement(0).equals(pathElement)) || operation.get(OP).asString().equals(COMPOSITE) @AT@ 7359 @LENGTH@ 46
---------INS MethodInvocation@@MethodName:asString:[] @TO@ MethodInvocation@@operation.get(OP).asString().equals(COMPOSITE) @AT@ 7359 @LENGTH@ 28
---------INS MethodInvocation@@MethodName:get:[OP] @TO@ MethodInvocation@@operation.get(OP).asString().equals(COMPOSITE) @AT@ 7359 @LENGTH@ 17
------------INS SimpleName@@OP @TO@ MethodInvocation@@MethodName:get:[OP] @AT@ 7373 @LENGTH@ 2
---------INS SimpleName@@Name:operation @TO@ MethodInvocation@@operation.get(OP).asString().equals(COMPOSITE) @AT@ 7359 @LENGTH@ 9
---------INS SimpleName@@MethodName:equals:[COMPOSITE] @TO@ MethodInvocation@@operation.get(OP).asString().equals(COMPOSITE) @AT@ 7388 @LENGTH@ 17
------------INS SimpleName@@COMPOSITE @TO@ SimpleName@@MethodName:equals:[COMPOSITE] @AT@ 7395 @LENGTH@ 9


UPD FieldDeclaration@@public, static, final, SimpleAttributeDefinition, [TYPE=create("type",STRING).setDefaultValue(null).setAllowNull(true).setAllowExpression(true).setValidator(GroupingHandlerTypeValidator.INSTANCE).setFlags(RESTART_ALL_SERVICES).build()] @TO@ public, static, final, SimpleAttributeDefinition, [TYPE=create("type",STRING).setAllowExpression(true).setValidator(new EnumValidator<GroupingHandlerConfiguration.TYPE>(GroupingHandlerConfiguration.TYPE.class,false,true)).setFlags(RESTART_ALL_SERVICES).build()] @AT@ 2912 @LENGTH@ 311
---UPD VariableDeclarationFragment@@TYPE=create("type",STRING).setDefaultValue(null).setAllowNull(true).setAllowExpression(true).setValidator(GroupingHandlerTypeValidator.INSTANCE).setFlags(RESTART_ALL_SERVICES).build() @TO@ TYPE=create("type",STRING).setAllowExpression(true).setValidator(new EnumValidator<GroupingHandlerConfiguration.TYPE>(GroupingHandlerConfiguration.TYPE.class,false,true)).setFlags(RESTART_ALL_SERVICES).build() @AT@ 2958 @LENGTH@ 264
------UPD MethodInvocation@@create("type",STRING).setDefaultValue(null).setAllowNull(true).setAllowExpression(true).setValidator(GroupingHandlerTypeValidator.INSTANCE).setFlags(RESTART_ALL_SERVICES).build() @TO@ create("type",STRING).setAllowExpression(true).setValidator(new EnumValidator<GroupingHandlerConfiguration.TYPE>(GroupingHandlerConfiguration.TYPE.class,false,true)).setFlags(RESTART_ALL_SERVICES).build() @AT@ 2965 @LENGTH@ 257
---------DEL MethodInvocation@@MethodName:setValidator:[GroupingHandlerTypeValidator.INSTANCE] @AT@ 2965 @LENGTH@ 192
------------DEL QualifiedName@@GroupingHandlerTypeValidator.INSTANCE @AT@ 3119 @LENGTH@ 37
---------------DEL SimpleName@@GroupingHandlerTypeValidator @AT@ 3119 @LENGTH@ 28
---------------DEL SimpleName@@INSTANCE @AT@ 3148 @LENGTH@ 8
---------UPD MethodInvocation@@MethodName:setAllowExpression:[true] @TO@ MethodName:setValidator:[new EnumValidator<GroupingHandlerConfiguration.TYPE>(GroupingHandlerConfiguration.TYPE.class,false,true)] @AT@ 2965 @LENGTH@ 127
------------INS ClassInstanceCreation@@EnumValidator<GroupingHandlerConfiguration.TYPE>[GroupingHandlerConfiguration.TYPE.class, false, true] @TO@ MethodInvocation@@MethodName:setAllowExpression:[true] @AT@ 3084 @LENGTH@ 106
---------------INS New@@new @TO@ ClassInstanceCreation@@EnumValidator<GroupingHandlerConfiguration.TYPE>[GroupingHandlerConfiguration.TYPE.class, false, true] @AT@ 3084 @LENGTH@ 3
---------------INS ParameterizedType@@EnumValidator<GroupingHandlerConfiguration.TYPE> @TO@ ClassInstanceCreation@@EnumValidator<GroupingHandlerConfiguration.TYPE>[GroupingHandlerConfiguration.TYPE.class, false, true] @AT@ 3088 @LENGTH@ 48
------------------INS SimpleType@@EnumValidator @TO@ ParameterizedType@@EnumValidator<GroupingHandlerConfiguration.TYPE> @AT@ 3088 @LENGTH@ 13
------------------INS SimpleType@@GroupingHandlerConfiguration.TYPE @TO@ ParameterizedType@@EnumValidator<GroupingHandlerConfiguration.TYPE> @AT@ 3102 @LENGTH@ 33
---------------INS TypeLiteral@@GroupingHandlerConfiguration.TYPE.class @TO@ ClassInstanceCreation@@EnumValidator<GroupingHandlerConfiguration.TYPE>[GroupingHandlerConfiguration.TYPE.class, false, true] @AT@ 3137 @LENGTH@ 39
---------------INS BooleanLiteral@@false @TO@ ClassInstanceCreation@@EnumValidator<GroupingHandlerConfiguration.TYPE>[GroupingHandlerConfiguration.TYPE.class, false, true] @AT@ 3178 @LENGTH@ 5
---------------INS BooleanLiteral@@true @TO@ ClassInstanceCreation@@EnumValidator<GroupingHandlerConfiguration.TYPE>[GroupingHandlerConfiguration.TYPE.class, false, true] @AT@ 3185 @LENGTH@ 4
------------DEL BooleanLiteral@@true @AT@ 3087 @LENGTH@ 4
---------UPD MethodInvocation@@MethodName:setAllowNull:[true] @TO@ MethodName:setAllowExpression:[true] @AT@ 2965 @LENGTH@ 89
---------DEL MethodInvocation@@MethodName:setDefaultValue:[null] @AT@ 2965 @LENGTH@ 57
------------DEL NullLiteral@@null @AT@ 3017 @LENGTH@ 4


UPD IfStatement@@if (pipeline != null) {  try {    return RjcUtils.maybeConvert(client.getAll());  } catch (  Exception ex) {    throw new RedisPipelineException(convertRjcAccessException(ex));  }} @TO@ if (pipeline != null) {  pipeline=null;  try {    return RjcUtils.maybeConvert(client.getAll());  } catch (  Exception ex) {    throw new RedisPipelineException(convertRjcAccessException(ex));  }} @AT@ 4189 @LENGTH@ 189
---UPD Block@@ThenBody:{  try {    return RjcUtils.maybeConvert(client.getAll());  } catch (  Exception ex) {    throw new RedisPipelineException(convertRjcAccessException(ex));  }} @TO@ ThenBody:{  pipeline=null;  try {    return RjcUtils.maybeConvert(client.getAll());  } catch (  Exception ex) {    throw new RedisPipelineException(convertRjcAccessException(ex));  }} @AT@ 4211 @LENGTH@ 167
------INS ExpressionStatement@@Assignment:pipeline=null @TO@ Block@@ThenBody:{  try {    return RjcUtils.maybeConvert(client.getAll());  } catch (  Exception ex) {    throw new RedisPipelineException(convertRjcAccessException(ex));  }} @AT@ 4216 @LENGTH@ 16
---------INS Assignment@@pipeline=null @TO@ ExpressionStatement@@Assignment:pipeline=null @AT@ 4216 @LENGTH@ 15
------------INS SimpleName@@pipeline @TO@ Assignment@@pipeline=null @AT@ 4216 @LENGTH@ 8
------------INS Operator@@= @TO@ Assignment@@pipeline=null @AT@ 4224 @LENGTH@ 1
------------INS NullLiteral@@null @TO@ Assignment@@pipeline=null @AT@ 4227 @LENGTH@ 4


UPD ForStatement@@for (int attempts=0; attempts < 10 && !reloaded; attempts++) {  writeDefinitionFile(defFile,src2);  reloaded=builder.getReloadingController().checkForReloading(null);  if (!reloaded) {    Thread.sleep(100);  }} @TO@ for (int attempts=0; attempts < 50 && !reloaded; attempts++) {  writeDefinitionFile(defFile,src2);  reloaded=builder.getReloadingController().checkForReloading(null);  if (!reloaded) {    Thread.sleep(100);  }} @AT@ 11316 @LENGTH@ 301
---UPD InfixExpression@@attempts < 10 && !reloaded @TO@ attempts < 50 && !reloaded @AT@ 11339 @LENGTH@ 26
------UPD InfixExpression@@attempts < 10 @TO@ attempts < 50 @AT@ 11339 @LENGTH@ 13
---------UPD NumberLiteral@@10 @TO@ 50 @AT@ 11350 @LENGTH@ 2


INS MethodDeclaration@@void, MethodName:addStep, final ModelNode operation, final OperationStepHandler step, final Stage stage, boolean addFirst, IllegalArgumentException,  @TO@ TypeDeclaration@@[public]OperationContext, [ExpressionResolver] @AT@ 4526 @LENGTH@ 137
---INS PrimitiveType@@void @TO@ MethodDeclaration@@void, MethodName:addStep, final ModelNode operation, final OperationStepHandler step, final Stage stage, boolean addFirst, IllegalArgumentException,  @AT@ 4521 @LENGTH@ 4
---INS SimpleName@@MethodName:addStep @TO@ MethodDeclaration@@void, MethodName:addStep, final ModelNode operation, final OperationStepHandler step, final Stage stage, boolean addFirst, IllegalArgumentException,  @AT@ 4526 @LENGTH@ 7
---INS SingleVariableDeclaration@@final ModelNode operation @TO@ MethodDeclaration@@void, MethodName:addStep, final ModelNode operation, final OperationStepHandler step, final Stage stage, boolean addFirst, IllegalArgumentException,  @AT@ 4534 @LENGTH@ 25
------INS Modifier@@final @TO@ SingleVariableDeclaration@@final ModelNode operation @AT@ 4534 @LENGTH@ 5
------INS SimpleType@@ModelNode @TO@ SingleVariableDeclaration@@final ModelNode operation @AT@ 4540 @LENGTH@ 9
------INS SimpleName@@operation @TO@ SingleVariableDeclaration@@final ModelNode operation @AT@ 4550 @LENGTH@ 9
---INS SingleVariableDeclaration@@final OperationStepHandler step @TO@ MethodDeclaration@@void, MethodName:addStep, final ModelNode operation, final OperationStepHandler step, final Stage stage, boolean addFirst, IllegalArgumentException,  @AT@ 4561 @LENGTH@ 31
------INS Modifier@@final @TO@ SingleVariableDeclaration@@final OperationStepHandler step @AT@ 4561 @LENGTH@ 5
------INS SimpleType@@OperationStepHandler @TO@ SingleVariableDeclaration@@final OperationStepHandler step @AT@ 4567 @LENGTH@ 20
------INS SimpleName@@step @TO@ SingleVariableDeclaration@@final OperationStepHandler step @AT@ 4588 @LENGTH@ 4
---INS SingleVariableDeclaration@@final Stage stage @TO@ MethodDeclaration@@void, MethodName:addStep, final ModelNode operation, final OperationStepHandler step, final Stage stage, boolean addFirst, IllegalArgumentException,  @AT@ 4594 @LENGTH@ 17
------INS Modifier@@final @TO@ SingleVariableDeclaration@@final Stage stage @AT@ 4594 @LENGTH@ 5
------INS SimpleType@@Stage @TO@ SingleVariableDeclaration@@final Stage stage @AT@ 4600 @LENGTH@ 5
------INS SimpleName@@stage @TO@ SingleVariableDeclaration@@final Stage stage @AT@ 4606 @LENGTH@ 5
---INS SingleVariableDeclaration@@boolean addFirst @TO@ MethodDeclaration@@void, MethodName:addStep, final ModelNode operation, final OperationStepHandler step, final Stage stage, boolean addFirst, IllegalArgumentException,  @AT@ 4613 @LENGTH@ 16
------INS PrimitiveType@@boolean @TO@ SingleVariableDeclaration@@boolean addFirst @AT@ 4613 @LENGTH@ 7
------INS SimpleName@@addFirst @TO@ SingleVariableDeclaration@@boolean addFirst @AT@ 4621 @LENGTH@ 8
---INS SimpleType@@IllegalArgumentException @TO@ MethodDeclaration@@void, MethodName:addStep, final ModelNode operation, final OperationStepHandler step, final Stage stage, boolean addFirst, IllegalArgumentException,  @AT@ 4638 @LENGTH@ 24


UPD ExpressionStatement@@MethodInvocation:main.setPFileName("src/test/resources/etc/stuff.cfg") @TO@ MethodInvocation:main.setConfigAdminFileName("src/test/resources/etc/stuff.cfg") @AT@ 1561 @LENGTH@ 54
---UPD MethodInvocation@@main.setPFileName("src/test/resources/etc/stuff.cfg") @TO@ main.setConfigAdminFileName("src/test/resources/etc/stuff.cfg") @AT@ 1561 @LENGTH@ 53
------UPD SimpleName@@MethodName:setPFileName:["src/test/resources/etc/stuff.cfg"] @TO@ MethodName:setConfigAdminFileName:["src/test/resources/etc/stuff.cfg"] @AT@ 1566 @LENGTH@ 48


UPD IfStatement@@if (statistics.getRemovedCount() > 0) {  return;} @TO@ if (serviceContainer.isShutdown()) {  return;} @AT@ 3315 @LENGTH@ 227
---DEL InfixExpression@@statistics.getRemovedCount() > 0 @AT@ 3319 @LENGTH@ 32
------DEL MethodInvocation@@statistics.getRemovedCount() @AT@ 3319 @LENGTH@ 28
------DEL Operator@@> @AT@ 3347 @LENGTH@ 1
------DEL NumberLiteral@@0 @AT@ 3350 @LENGTH@ 1
---INS MethodInvocation@@serviceContainer.isShutdown() @TO@ IfStatement@@if (statistics.getRemovedCount() > 0) {  return;} @AT@ 3319 @LENGTH@ 29
------MOV SimpleName@@Name:statistics @TO@ MethodInvocation@@serviceContainer.isShutdown() @AT@ 3319 @LENGTH@ 10
------MOV SimpleName@@MethodName:getRemovedCount:[] @TO@ MethodInvocation@@serviceContainer.isShutdown() @AT@ 3330 @LENGTH@ 17


UPD IfStatement@@if (isWriteAttribute && attribute.isDefined() && attrName.equals(CacheResource.INDEXING_PROPERTIES.getName())) {  ModelNode resolved=attribute.resolve();  return resolved.equals(attribute);} @TO@ if (attribute.isDefined() && attrName.equals(CacheResource.INDEXING_PROPERTIES.getName())) {  ModelNode resolved=attribute.resolve();  return resolved.equals(attribute);} @AT@ 12370 @LENGTH@ 235
---UPD InfixExpression@@isWriteAttribute && attribute.isDefined() && attrName.equals(CacheResource.INDEXING_PROPERTIES.getName()) @TO@ attribute.isDefined() && attrName.equals(CacheResource.INDEXING_PROPERTIES.getName()) @AT@ 12374 @LENGTH@ 105
------INS Operator@@&& @TO@ InfixExpression@@isWriteAttribute && attribute.isDefined() && attrName.equals(CacheResource.INDEXING_PROPERTIES.getName()) @AT@ 11496 @LENGTH@ 2
------DEL SimpleName@@isWriteAttribute @AT@ 12374 @LENGTH@ 16
------DEL Operator@@&& @AT@ 12390 @LENGTH@ 2


UPD IfStatement@@if (handler != null) {  try {    handler.onReply(correlationID,message);  }  finally {    correlation.remove(correlationID);  }} else {  log.warn("Reply received for unknown correlationID [{}]. The message will be ignored: {}",correlationID,message);} @TO@ if (handler != null) {  correlation.remove(correlationID);  handler.onReply(correlationID,message);} else {  log.warn("Reply received for unknown correlationID [{}]. The message will be ignored: {}",correlationID,message);} @AT@ 3482 @LENGTH@ 558
---DEL Block@@ThenBody:{  try {    handler.onReply(correlationID,message);  }  finally {    correlation.remove(correlationID);  }} @AT@ 3503 @LENGTH@ 175
------DEL TryStatement@@try {  handler.onReply(correlationID,message);}  finally {  correlation.remove(correlationID);} @AT@ 3517 @LENGTH@ 151
---MOV Block@@FinallyBody:{  correlation.remove(correlationID);} @TO@ IfStatement@@if (handler != null) {  try {    handler.onReply(correlationID,message);  }  finally {    correlation.remove(correlationID);  }} else {  log.warn("Reply received for unknown correlationID [{}]. The message will be ignored: {}",correlationID,message);} @AT@ 3602 @LENGTH@ 66
------MOV ExpressionStatement@@MethodInvocation:handler.onReply(correlationID,message) @TO@ Block@@FinallyBody:{  correlation.remove(correlationID);} @AT@ 3539 @LENGTH@ 40


UPD IfStatement@@if (event.getType() == ServiceEvent.REGISTERED && event.getServiceReference().isAssignableTo(bundleContext.getBundle(),"org.osgi.service.blueprint.container.BlueprintContainer")) {  try {    maybeStart();  } catch (  Exception e) {    LOG.error("Error occurred during starting Camel: " + this + " due "+ e.getMessage(),e);  }} @TO@ if (event.getType() == ServiceEvent.REGISTERED && event.getServiceReference().isAssignableTo(bundleContext.getBundle(),"org.osgi.service.blueprint.container.BlueprintContainer") && bundleContext.getBundle().equals(event.getServiceReference().getBundle())) {  try {    maybeStart();  } catch (  Exception e) {    LOG.error("Error occurred during starting Camel: " + this + " due "+ e.getMessage(),e);  }} @AT@ 4961 @LENGTH@ 411
---INS InfixExpression@@event.getType() == ServiceEvent.REGISTERED && event.getServiceReference().isAssignableTo(bundleContext.getBundle(),"org.osgi.service.blueprint.container.BlueprintContainer") && bundleContext.getBundle().equals(event.getServiceReference().getBundle()) @TO@ IfStatement@@if (event.getType() == ServiceEvent.REGISTERED && event.getServiceReference().isAssignableTo(bundleContext.getBundle(),"org.osgi.service.blueprint.container.BlueprintContainer")) {  try {    maybeStart();  } catch (  Exception e) {    LOG.error("Error occurred during starting Camel: " + this + " due "+ e.getMessage(),e);  }} @AT@ 4965 @LENGTH@ 283
------MOV InfixExpression@@event.getType() == ServiceEvent.REGISTERED && event.getServiceReference().isAssignableTo(bundleContext.getBundle(),"org.osgi.service.blueprint.container.BlueprintContainer") @TO@ InfixExpression@@event.getType() == ServiceEvent.REGISTERED && event.getServiceReference().isAssignableTo(bundleContext.getBundle(),"org.osgi.service.blueprint.container.BlueprintContainer") && bundleContext.getBundle().equals(event.getServiceReference().getBundle()) @AT@ 4965 @LENGTH@ 190
------INS Operator@@&& @TO@ InfixExpression@@event.getType() == ServiceEvent.REGISTERED && event.getServiceReference().isAssignableTo(bundleContext.getBundle(),"org.osgi.service.blueprint.container.BlueprintContainer") && bundleContext.getBundle().equals(event.getServiceReference().getBundle()) @AT@ 5155 @LENGTH@ 2
------INS MethodInvocation@@bundleContext.getBundle().equals(event.getServiceReference().getBundle()) @TO@ InfixExpression@@event.getType() == ServiceEvent.REGISTERED && event.getServiceReference().isAssignableTo(bundleContext.getBundle(),"org.osgi.service.blueprint.container.BlueprintContainer") && bundleContext.getBundle().equals(event.getServiceReference().getBundle()) @AT@ 5175 @LENGTH@ 73
---------INS MethodInvocation@@MethodName:getBundle:[] @TO@ MethodInvocation@@bundleContext.getBundle().equals(event.getServiceReference().getBundle()) @AT@ 5175 @LENGTH@ 25
---------INS SimpleName@@Name:bundleContext @TO@ MethodInvocation@@bundleContext.getBundle().equals(event.getServiceReference().getBundle()) @AT@ 5175 @LENGTH@ 13
---------INS SimpleName@@MethodName:equals:[event.getServiceReference().getBundle()] @TO@ MethodInvocation@@bundleContext.getBundle().equals(event.getServiceReference().getBundle()) @AT@ 5201 @LENGTH@ 47
------------INS MethodInvocation@@event.getServiceReference().getBundle() @TO@ SimpleName@@MethodName:equals:[event.getServiceReference().getBundle()] @AT@ 5208 @LENGTH@ 39
---------------INS MethodInvocation@@MethodName:getServiceReference:[] @TO@ MethodInvocation@@event.getServiceReference().getBundle() @AT@ 5208 @LENGTH@ 27
---------------INS SimpleName@@Name:event @TO@ MethodInvocation@@event.getServiceReference().getBundle() @AT@ 5208 @LENGTH@ 5
---------------INS SimpleName@@MethodName:getBundle:[] @TO@ MethodInvocation@@event.getServiceReference().getBundle() @AT@ 5236 @LENGTH@ 11


UPD TypeDeclaration@@[@RunWith(SpringJUnit4ClassRunner.class), @ContextConfiguration, public]DistributedCacheTest,  @TO@ [@RunWith(SpringJUnit4ClassRunner.class), @ContextConfiguration, @DirtiesContext(classMode=DirtiesContext.ClassMode.AFTER_EACH_TEST_METHOD), public]DistributedCacheTest,  @AT@ 1534 @LENGTH@ 4029
---INS NormalAnnotation@@@DirtiesContext(classMode=DirtiesContext.ClassMode.AFTER_EACH_TEST_METHOD) @TO@ TypeDeclaration@@[@RunWith(SpringJUnit4ClassRunner.class), @ContextConfiguration, public]DistributedCacheTest,  @AT@ 1655 @LENGTH@ 76


DEL MethodDeclaration@@public, void, MethodName:setUp,  @AT@ 1869 @LENGTH@ 41
---DEL Modifier@@public @AT@ 1869 @LENGTH@ 6
---DEL PrimitiveType@@void @AT@ 1876 @LENGTH@ 4
---DEL SimpleName@@MethodName:setUp @AT@ 1881 @LENGTH@ 5
---DEL ExpressionStatement@@SuperMethodInvocation:super.setUp() @AT@ 1893 @LENGTH@ 14
------DEL SuperMethodInvocation@@super.setUp() @AT@ 1893 @LENGTH@ 13
---------DEL SimpleName@@MethodName:setUp:[] @AT@ 1899 @LENGTH@ 5


INS FieldDeclaration@@private, static, final, AsyncCallback, [NOOP_ASYNC_CALLBACK=new AsyncCallback(){
  @Override public void done(  boolean doneSync){
  }
}
] @TO@ TypeDeclaration@@[public]DisruptorConsumer, ServiceSupport[Consumer, SuspendableService, ShutdownAware] @AT@ 1830 @LENGTH@ 177
---INS Modifier@@private @TO@ FieldDeclaration@@private, static, final, AsyncCallback, [NOOP_ASYNC_CALLBACK=new AsyncCallback(){
  @Override public void done(  boolean doneSync){
  }
}
] @AT@ 1830 @LENGTH@ 7
---INS Modifier@@static @TO@ FieldDeclaration@@private, static, final, AsyncCallback, [NOOP_ASYNC_CALLBACK=new AsyncCallback(){
  @Override public void done(  boolean doneSync){
  }
}
] @AT@ 1838 @LENGTH@ 6
---INS Modifier@@final @TO@ FieldDeclaration@@private, static, final, AsyncCallback, [NOOP_ASYNC_CALLBACK=new AsyncCallback(){
  @Override public void done(  boolean doneSync){
  }
}
] @AT@ 1845 @LENGTH@ 5
---INS SimpleType@@AsyncCallback @TO@ FieldDeclaration@@private, static, final, AsyncCallback, [NOOP_ASYNC_CALLBACK=new AsyncCallback(){
  @Override public void done(  boolean doneSync){
  }
}
] @AT@ 1851 @LENGTH@ 13
---INS VariableDeclarationFragment@@NOOP_ASYNC_CALLBACK=new AsyncCallback(){
  @Override public void done(  boolean doneSync){
  }
}
 @TO@ FieldDeclaration@@private, static, final, AsyncCallback, [NOOP_ASYNC_CALLBACK=new AsyncCallback(){
  @Override public void done(  boolean doneSync){
  }
}
] @AT@ 1865 @LENGTH@ 141
------INS SimpleName@@NOOP_ASYNC_CALLBACK @TO@ VariableDeclarationFragment@@NOOP_ASYNC_CALLBACK=new AsyncCallback(){
  @Override public void done(  boolean doneSync){
  }
}
 @AT@ 1865 @LENGTH@ 19
------INS ClassInstanceCreation@@AsyncCallback[] @TO@ VariableDeclarationFragment@@NOOP_ASYNC_CALLBACK=new AsyncCallback(){
  @Override public void done(  boolean doneSync){
  }
}
 @AT@ 1887 @LENGTH@ 119
---------INS New@@new @TO@ ClassInstanceCreation@@AsyncCallback[] @AT@ 1887 @LENGTH@ 3
---------INS SimpleType@@AsyncCallback @TO@ ClassInstanceCreation@@AsyncCallback[] @AT@ 1891 @LENGTH@ 13
---------INS AnonymousClassDeclaration@@AnonymousClass @TO@ ClassInstanceCreation@@AsyncCallback[] @AT@ 1907 @LENGTH@ 99
------------INS MethodDeclaration@@public, void, MethodName:done, boolean doneSync,  @TO@ AnonymousClassDeclaration@@AnonymousClass @AT@ 1935 @LENGTH@ 65
---------------INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:done, boolean doneSync,  @AT@ 1935 @LENGTH@ 6
---------------INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:done, boolean doneSync,  @AT@ 1942 @LENGTH@ 4
---------------INS SimpleName@@MethodName:done @TO@ MethodDeclaration@@public, void, MethodName:done, boolean doneSync,  @AT@ 1947 @LENGTH@ 4
---------------INS SingleVariableDeclaration@@boolean doneSync @TO@ MethodDeclaration@@public, void, MethodName:done, boolean doneSync,  @AT@ 1952 @LENGTH@ 16
------------------INS PrimitiveType@@boolean @TO@ SingleVariableDeclaration@@boolean doneSync @AT@ 1952 @LENGTH@ 7
------------------INS SimpleName@@doneSync @TO@ SingleVariableDeclaration@@boolean doneSync @AT@ 1960 @LENGTH@ 8


UPD ForStatement@@for (int i=0; i < ROUNDS || done; i++) {  if (connection != null) {synchronized (localMonitor) {      if (connection != null && connection.isSubscribed()) {        done=true;        connection.getSubscription().pSubscribe(unwrap(patternMapping.keySet()));      } else {        try {          Thread.sleep(WAIT);        } catch (        InterruptedException ex) {          done=true;        }      }    }  }} @TO@ for (int i=0; i < ROUNDS && !done; i++) {  if (connection != null) {synchronized (localMonitor) {      if (connection != null && connection.isSubscribed()) {        done=true;        connection.getSubscription().pSubscribe(unwrap(patternMapping.keySet()));      } else {        try {          Thread.sleep(WAIT);        } catch (        InterruptedException ex) {          done=true;        }      }    }  }} @AT@ 21384 @LENGTH@ 446
---UPD InfixExpression@@i < ROUNDS || done @TO@ i < ROUNDS && !done @AT@ 21400 @LENGTH@ 18
------UPD Operator@@|| @TO@ && @AT@ 21410 @LENGTH@ 2
------INS PrefixExpression@@!done @TO@ InfixExpression@@i < ROUNDS || done @AT@ 21414 @LENGTH@ 5
---------INS Operator@@! @TO@ PrefixExpression@@!done @AT@ 21414 @LENGTH@ 1
---------INS SimpleName@@done @TO@ PrefixExpression@@!done @AT@ 21415 @LENGTH@ 4
------DEL SimpleName@@done @AT@ 21414 @LENGTH@ 4


UPD VariableDeclarationStatement@@Map map=new HashMap(); @TO@ Map<String,Object> map=new HashMap<String,Object>(); @AT@ 2665 @LENGTH@ 24
---DEL SimpleType@@Map @AT@ 2665 @LENGTH@ 3
---UPD VariableDeclarationFragment@@map=new HashMap() @TO@ map=new HashMap<String,Object>() @AT@ 2669 @LENGTH@ 19
------UPD ClassInstanceCreation@@HashMap[] @TO@ HashMap<String,Object>[] @AT@ 2675 @LENGTH@ 13
---------DEL SimpleType@@HashMap @AT@ 2679 @LENGTH@ 7
---------INS ParameterizedType@@HashMap<String,Object> @TO@ ClassInstanceCreation@@HashMap[] @AT@ 2727 @LENGTH@ 23
------------INS SimpleType@@HashMap @TO@ ParameterizedType@@HashMap<String,Object> @AT@ 2727 @LENGTH@ 7
------------INS SimpleType@@String @TO@ ParameterizedType@@HashMap<String,Object> @AT@ 2735 @LENGTH@ 6
------------INS SimpleType@@Object @TO@ ParameterizedType@@HashMap<String,Object> @AT@ 2743 @LENGTH@ 6
---INS ParameterizedType@@Map<String,Object> @TO@ VariableDeclarationStatement@@Map map=new HashMap(); @AT@ 2697 @LENGTH@ 19
------INS SimpleType@@Map @TO@ ParameterizedType@@Map<String,Object> @AT@ 2697 @LENGTH@ 3
------INS SimpleType@@String @TO@ ParameterizedType@@Map<String,Object> @AT@ 2701 @LENGTH@ 6
------INS SimpleType@@Object @TO@ ParameterizedType@@Map<String,Object> @AT@ 2709 @LENGTH@ 6


UPD ExpressionStatement@@MethodInvocation:connection.closePipeline() @TO@ MethodInvocation:getResults() @AT@ 3250 @LENGTH@ 27
---UPD MethodInvocation@@connection.closePipeline() @TO@ MethodName:getResults:[] @AT@ 3250 @LENGTH@ 26
------DEL SimpleName@@Name:connection @AT@ 3250 @LENGTH@ 10
------DEL SimpleName@@MethodName:closePipeline:[] @AT@ 3261 @LENGTH@ 15


UPD VariableDeclarationStatement@@String bundles=executeCommand("container-connect " + containerName + " osgi:list -s -t 0 | grep "+ expectedSymbolicName); @TO@ String bundles=executeCommand("container-connect -u admin -p admin " + containerName + " osgi:list -s -t 0 | grep "+ expectedSymbolicName); @AT@ 2817 @LENGTH@ 124
---UPD VariableDeclarationFragment@@bundles=executeCommand("container-connect " + containerName + " osgi:list -s -t 0 | grep "+ expectedSymbolicName) @TO@ bundles=executeCommand("container-connect -u admin -p admin " + containerName + " osgi:list -s -t 0 | grep "+ expectedSymbolicName) @AT@ 2824 @LENGTH@ 116
------UPD MethodInvocation@@executeCommand("container-connect " + containerName + " osgi:list -s -t 0 | grep "+ expectedSymbolicName) @TO@ executeCommand("container-connect -u admin -p admin " + containerName + " osgi:list -s -t 0 | grep "+ expectedSymbolicName) @AT@ 2834 @LENGTH@ 106
---------UPD SimpleName@@MethodName:executeCommand:["container-connect " + containerName + " osgi:list -s -t 0 | grep "+ expectedSymbolicName] @TO@ MethodName:executeCommand:["container-connect -u admin -p admin " + containerName + " osgi:list -s -t 0 | grep "+ expectedSymbolicName] @AT@ 2834 @LENGTH@ 106
------------UPD InfixExpression@@"container-connect " + containerName + " osgi:list -s -t 0 | grep "+ expectedSymbolicName @TO@ "container-connect -u admin -p admin " + containerName + " osgi:list -s -t 0 | grep "+ expectedSymbolicName @AT@ 2849 @LENGTH@ 90
---------------UPD StringLiteral@@"container-connect " @TO@ "container-connect -u admin -p admin " @AT@ 2849 @LENGTH@ 20


UPD ExpressionStatement@@Assignment:objectToSave=(T)JSON.parse((String)objectToSave) @TO@ Assignment:dbDoc=(DBObject)JSON.parse((String)objectToSave) @AT@ 30508 @LENGTH@ 53
---UPD Assignment@@objectToSave=(T)JSON.parse((String)objectToSave) @TO@ dbDoc=(DBObject)JSON.parse((String)objectToSave) @AT@ 30508 @LENGTH@ 52
------UPD SimpleName@@objectToSave @TO@ dbDoc @AT@ 30508 @LENGTH@ 12
------UPD CastExpression@@(T)JSON.parse((String)objectToSave) @TO@ (DBObject)JSON.parse((String)objectToSave) @AT@ 30523 @LENGTH@ 37
---------UPD SimpleType@@T @TO@ DBObject @AT@ 30524 @LENGTH@ 1


UPD IfStatement@@if (maximumNumber < numberOfContainers) {  numberOfContainers=minimumNumber;} @TO@ if (maximumNumber < numberOfContainers && maximumNumber != 0) {  numberOfContainers=minimumNumber;} @AT@ 2312 @LENGTH@ 99
---INS InfixExpression@@maximumNumber < numberOfContainers && maximumNumber != 0 @TO@ IfStatement@@if (maximumNumber < numberOfContainers) {  numberOfContainers=minimumNumber;} @AT@ 2316 @LENGTH@ 56
------INS InfixExpression@@maximumNumber < numberOfContainers @TO@ InfixExpression@@maximumNumber < numberOfContainers && maximumNumber != 0 @AT@ 2316 @LENGTH@ 34
---------MOV SimpleName@@maximumNumber @TO@ InfixExpression@@maximumNumber < numberOfContainers @AT@ 2316 @LENGTH@ 13
---------MOV Operator@@< @TO@ InfixExpression@@maximumNumber < numberOfContainers @AT@ 2329 @LENGTH@ 1
---------MOV SimpleName@@numberOfContainers @TO@ InfixExpression@@maximumNumber < numberOfContainers @AT@ 2332 @LENGTH@ 18
------INS Operator@@&& @TO@ InfixExpression@@maximumNumber < numberOfContainers && maximumNumber != 0 @AT@ 2350 @LENGTH@ 2
------INS InfixExpression@@maximumNumber != 0 @TO@ InfixExpression@@maximumNumber < numberOfContainers && maximumNumber != 0 @AT@ 2354 @LENGTH@ 18
---------INS SimpleName@@maximumNumber @TO@ InfixExpression@@maximumNumber != 0 @AT@ 2354 @LENGTH@ 13
---------INS Operator@@!= @TO@ InfixExpression@@maximumNumber != 0 @AT@ 2367 @LENGTH@ 2
---------INS NumberLiteral@@0 @TO@ InfixExpression@@maximumNumber != 0 @AT@ 2371 @LENGTH@ 1
---DEL InfixExpression@@maximumNumber < numberOfContainers @AT@ 2316 @LENGTH@ 34


UPD IfStatement@@if (skipRequestHeaders != null && skipRequestHeaders.containsKey(key)) {  Object skipValue=skipRequestHeaders.get(key);  if (ObjectHelper.equal(skipValue,value)) {    continue;  }} @TO@ if (skipRequestHeaders != null && skipRequestHeaders.containsKey(key)) {  continue;} @AT@ 5593 @LENGTH@ 298
---DEL Block@@ThenBody:{  Object skipValue=skipRequestHeaders.get(key);  if (ObjectHelper.equal(skipValue,value)) {    continue;  }} @AT@ 5664 @LENGTH@ 227
------DEL VariableDeclarationStatement@@Object skipValue=skipRequestHeaders.get(key); @AT@ 5690 @LENGTH@ 47
---------DEL SimpleType@@Object @AT@ 5690 @LENGTH@ 6
---------DEL VariableDeclarationFragment@@skipValue=skipRequestHeaders.get(key) @AT@ 5697 @LENGTH@ 39
------------DEL SimpleName@@skipValue @AT@ 5697 @LENGTH@ 9
------------DEL MethodInvocation@@skipRequestHeaders.get(key) @AT@ 5709 @LENGTH@ 27
---------------DEL SimpleName@@Name:skipRequestHeaders @AT@ 5709 @LENGTH@ 18
---------------DEL SimpleName@@MethodName:get:[key] @AT@ 5728 @LENGTH@ 8
------------------DEL SimpleName@@key @AT@ 5732 @LENGTH@ 3
------DEL IfStatement@@if (ObjectHelper.equal(skipValue,value)) {  continue;} @AT@ 5762 @LENGTH@ 107
---------DEL MethodInvocation@@ObjectHelper.equal(skipValue,value) @AT@ 5766 @LENGTH@ 36
------------DEL SimpleName@@Name:ObjectHelper @AT@ 5766 @LENGTH@ 12
------------DEL SimpleName@@MethodName:equal:[skipValue, value] @AT@ 5779 @LENGTH@ 23
---------------DEL SimpleName@@skipValue @AT@ 5785 @LENGTH@ 9
---------------DEL SimpleName@@value @AT@ 5796 @LENGTH@ 5
---MOV Block@@ThenBody:{  continue;} @TO@ IfStatement@@if (skipRequestHeaders != null && skipRequestHeaders.containsKey(key)) {  Object skipValue=skipRequestHeaders.get(key);  if (ObjectHelper.equal(skipValue,value)) {    continue;  }} @AT@ 5804 @LENGTH@ 65


UPD IfStatement@@if (!required.isEmpty()) {  missingRequired(reader,required);} @TO@ if (!required.isEmpty()) {  throw missingRequired(reader,required);} @AT@ 6003 @LENGTH@ 82
---UPD Block@@ThenBody:{  missingRequired(reader,required);} @TO@ ThenBody:{  throw missingRequired(reader,required);} @AT@ 6027 @LENGTH@ 58
------INS ThrowStatement@@MethodInvocation:missingRequired(reader,required) @TO@ Block@@ThenBody:{  missingRequired(reader,required);} @AT@ 6041 @LENGTH@ 40
---------MOV MethodInvocation@@missingRequired(reader,required) @TO@ ThrowStatement@@MethodInvocation:missingRequired(reader,required) @AT@ 6041 @LENGTH@ 33
------DEL ExpressionStatement@@MethodInvocation:missingRequired(reader,required) @AT@ 6041 @LENGTH@ 34


UPD MethodDeclaration@@public, static, void, MethodName:createDeploymentService, final ManagementResourceRegistration registration, ConnectorXmlDescriptor connectorXmlDescriptor, Module module, ServiceTarget serviceTarget, final String deploymentUnitName, ServiceName deploymentUnitServiceName, String deployment, ResourceAdapter raxml, final Resource deploymentResource,  @TO@ public, static, void, MethodName:createDeploymentService, final ManagementResourceRegistration registration, ConnectorXmlDescriptor connectorXmlDescriptor, Module module, ServiceTarget serviceTarget, final String deploymentUnitName, ServiceName deploymentUnitServiceName, String deployment, ResourceAdapter raxml, final Resource deploymentResource, final ServiceVerificationHandler serviceVerificationHandler,  @AT@ 2928 @LENGTH@ 3251
---INS SingleVariableDeclaration@@final ServiceVerificationHandler serviceVerificationHandler @TO@ MethodDeclaration@@public, static, void, MethodName:createDeploymentService, final ManagementResourceRegistration registration, ConnectorXmlDescriptor connectorXmlDescriptor, Module module, ServiceTarget serviceTarget, final String deploymentUnitName, ServiceName deploymentUnitServiceName, String deployment, ResourceAdapter raxml, final Resource deploymentResource,  @AT@ 3456 @LENGTH@ 59
------INS Modifier@@final @TO@ SingleVariableDeclaration@@final ServiceVerificationHandler serviceVerificationHandler @AT@ 3456 @LENGTH@ 5
------INS SimpleType@@ServiceVerificationHandler @TO@ SingleVariableDeclaration@@final ServiceVerificationHandler serviceVerificationHandler @AT@ 3462 @LENGTH@ 26
------INS SimpleName@@serviceVerificationHandler @TO@ SingleVariableDeclaration@@final ServiceVerificationHandler serviceVerificationHandler @AT@ 3489 @LENGTH@ 26
---INS IfStatement@@if (serviceVerificationHandler != null) {  builder.addListener(ServiceListener.Inheritance.ALL,serviceVerificationHandler);} @TO@ MethodDeclaration@@public, static, void, MethodName:createDeploymentService, final ManagementResourceRegistration registration, ConnectorXmlDescriptor connectorXmlDescriptor, Module module, ServiceTarget serviceTarget, final String deploymentUnitName, ServiceName deploymentUnitServiceName, String deployment, ResourceAdapter raxml, final Resource deploymentResource,  @AT@ 5545 @LENGTH@ 144
------INS InfixExpression@@serviceVerificationHandler != null @TO@ IfStatement@@if (serviceVerificationHandler != null) {  builder.addListener(ServiceListener.Inheritance.ALL,serviceVerificationHandler);} @AT@ 5548 @LENGTH@ 34
---------INS SimpleName@@serviceVerificationHandler @TO@ InfixExpression@@serviceVerificationHandler != null @AT@ 5548 @LENGTH@ 26
---------INS Operator@@!= @TO@ InfixExpression@@serviceVerificationHandler != null @AT@ 5574 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@serviceVerificationHandler != null @AT@ 5578 @LENGTH@ 4
------INS Block@@ThenBody:{  builder.addListener(ServiceListener.Inheritance.ALL,serviceVerificationHandler);} @TO@ IfStatement@@if (serviceVerificationHandler != null) {  builder.addListener(ServiceListener.Inheritance.ALL,serviceVerificationHandler);} @AT@ 5584 @LENGTH@ 105
---------INS ExpressionStatement@@MethodInvocation:builder.addListener(ServiceListener.Inheritance.ALL,serviceVerificationHandler) @TO@ Block@@ThenBody:{  builder.addListener(ServiceListener.Inheritance.ALL,serviceVerificationHandler);} @AT@ 5598 @LENGTH@ 81
------------INS MethodInvocation@@builder.addListener(ServiceListener.Inheritance.ALL,serviceVerificationHandler) @TO@ ExpressionStatement@@MethodInvocation:builder.addListener(ServiceListener.Inheritance.ALL,serviceVerificationHandler) @AT@ 5598 @LENGTH@ 80
---------------INS SimpleName@@Name:builder @TO@ MethodInvocation@@builder.addListener(ServiceListener.Inheritance.ALL,serviceVerificationHandler) @AT@ 5598 @LENGTH@ 7
---------------INS SimpleName@@MethodName:addListener:[ServiceListener.Inheritance.ALL, serviceVerificationHandler] @TO@ MethodInvocation@@builder.addListener(ServiceListener.Inheritance.ALL,serviceVerificationHandler) @AT@ 5606 @LENGTH@ 72
------------------INS QualifiedName@@ServiceListener.Inheritance.ALL @TO@ SimpleName@@MethodName:addListener:[ServiceListener.Inheritance.ALL, serviceVerificationHandler] @AT@ 5618 @LENGTH@ 31
---------------------INS QualifiedName@@ServiceListener.Inheritance @TO@ QualifiedName@@ServiceListener.Inheritance.ALL @AT@ 5618 @LENGTH@ 27
------------------------INS SimpleName@@ServiceListener @TO@ QualifiedName@@ServiceListener.Inheritance @AT@ 5618 @LENGTH@ 15
------------------------INS SimpleName@@Inheritance @TO@ QualifiedName@@ServiceListener.Inheritance @AT@ 5634 @LENGTH@ 11
---------------------INS SimpleName@@ALL @TO@ QualifiedName@@ServiceListener.Inheritance.ALL @AT@ 5646 @LENGTH@ 3
------------------INS SimpleName@@serviceVerificationHandler @TO@ SimpleName@@MethodName:addListener:[ServiceListener.Inheritance.ALL, serviceVerificationHandler] @AT@ 5651 @LENGTH@ 26


UPD IfStatement@@if ("http".equals(roleHint)) {  return new DefaultPlexusContainer().lookup(Wagon.class,roleHint);} @TO@ if ("http".equals(roleHint)) {  PlexusContainer container=new DefaultPlexusContainer();  Wagon httpWagon=(Wagon)container.lookup(org.apache.maven.wagon.Wagon.ROLE,"http");  container.dispose();  return httpWagon;} @AT@ 10257 @LENGTH@ 181
---UPD Block@@ThenBody:{  return new DefaultPlexusContainer().lookup(Wagon.class,roleHint);} @TO@ ThenBody:{  PlexusContainer container=new DefaultPlexusContainer();  Wagon httpWagon=(Wagon)container.lookup(org.apache.maven.wagon.Wagon.ROLE,"http");  container.dispose();  return httpWagon;} @AT@ 10286 @LENGTH@ 152
------INS VariableDeclarationStatement@@PlexusContainer container=new DefaultPlexusContainer(); @TO@ Block@@ThenBody:{  return new DefaultPlexusContainer().lookup(Wagon.class,roleHint);} @AT@ 10214 @LENGTH@ 56
---------INS SimpleType@@PlexusContainer @TO@ VariableDeclarationStatement@@PlexusContainer container=new DefaultPlexusContainer(); @AT@ 10214 @LENGTH@ 15
---------INS VariableDeclarationFragment@@container=new DefaultPlexusContainer() @TO@ VariableDeclarationStatement@@PlexusContainer container=new DefaultPlexusContainer(); @AT@ 10230 @LENGTH@ 39
------------INS SimpleName@@container @TO@ VariableDeclarationFragment@@container=new DefaultPlexusContainer() @AT@ 10230 @LENGTH@ 9
------------INS ClassInstanceCreation@@DefaultPlexusContainer[] @TO@ VariableDeclarationFragment@@container=new DefaultPlexusContainer() @AT@ 10241 @LENGTH@ 28
---------------MOV New@@new @TO@ ClassInstanceCreation@@DefaultPlexusContainer[] @AT@ 10311 @LENGTH@ 3
---------------MOV SimpleType@@DefaultPlexusContainer @TO@ ClassInstanceCreation@@DefaultPlexusContainer[] @AT@ 10315 @LENGTH@ 22
------INS VariableDeclarationStatement@@Wagon httpWagon=(Wagon)container.lookup(org.apache.maven.wagon.Wagon.ROLE,"http"); @TO@ Block@@ThenBody:{  return new DefaultPlexusContainer().lookup(Wagon.class,roleHint);} @AT@ 10287 @LENGTH@ 88
---------INS SimpleType@@Wagon @TO@ VariableDeclarationStatement@@Wagon httpWagon=(Wagon)container.lookup(org.apache.maven.wagon.Wagon.ROLE,"http"); @AT@ 10287 @LENGTH@ 5
---------INS VariableDeclarationFragment@@httpWagon=(Wagon)container.lookup(org.apache.maven.wagon.Wagon.ROLE,"http") @TO@ VariableDeclarationStatement@@Wagon httpWagon=(Wagon)container.lookup(org.apache.maven.wagon.Wagon.ROLE,"http"); @AT@ 10293 @LENGTH@ 81
------------INS SimpleName@@httpWagon @TO@ VariableDeclarationFragment@@httpWagon=(Wagon)container.lookup(org.apache.maven.wagon.Wagon.ROLE,"http") @AT@ 10293 @LENGTH@ 9
------------INS CastExpression@@(Wagon)container.lookup(org.apache.maven.wagon.Wagon.ROLE,"http") @TO@ VariableDeclarationFragment@@httpWagon=(Wagon)container.lookup(org.apache.maven.wagon.Wagon.ROLE,"http") @AT@ 10305 @LENGTH@ 69
---------------INS SimpleType@@Wagon @TO@ CastExpression@@(Wagon)container.lookup(org.apache.maven.wagon.Wagon.ROLE,"http") @AT@ 10306 @LENGTH@ 5
---------------INS MethodInvocation@@container.lookup(org.apache.maven.wagon.Wagon.ROLE,"http") @TO@ CastExpression@@(Wagon)container.lookup(org.apache.maven.wagon.Wagon.ROLE,"http") @AT@ 10313 @LENGTH@ 61
------------------INS SimpleName@@Name:container @TO@ MethodInvocation@@container.lookup(org.apache.maven.wagon.Wagon.ROLE,"http") @AT@ 10313 @LENGTH@ 9
------------------MOV SimpleName@@MethodName:lookup:[Wagon.class, roleHint] @TO@ MethodInvocation@@container.lookup(org.apache.maven.wagon.Wagon.ROLE,"http") @AT@ 10340 @LENGTH@ 29
---------------------INS QualifiedName@@org.apache.maven.wagon.Wagon.ROLE @TO@ SimpleName@@MethodName:lookup:[Wagon.class, roleHint] @AT@ 10331 @LENGTH@ 33
------------------------INS QualifiedName@@org.apache.maven.wagon.Wagon @TO@ QualifiedName@@org.apache.maven.wagon.Wagon.ROLE @AT@ 10331 @LENGTH@ 28
---------------------------INS QualifiedName@@org.apache.maven.wagon @TO@ QualifiedName@@org.apache.maven.wagon.Wagon @AT@ 10331 @LENGTH@ 22
------------------------------INS QualifiedName@@org.apache.maven @TO@ QualifiedName@@org.apache.maven.wagon @AT@ 10331 @LENGTH@ 16
---------------------------------INS QualifiedName@@org.apache @TO@ QualifiedName@@org.apache.maven @AT@ 10331 @LENGTH@ 10
------------------------------------INS SimpleName@@org @TO@ QualifiedName@@org.apache @AT@ 10331 @LENGTH@ 3
------------------------------------INS SimpleName@@apache @TO@ QualifiedName@@org.apache @AT@ 10335 @LENGTH@ 6
---------------------------------INS SimpleName@@maven @TO@ QualifiedName@@org.apache.maven @AT@ 10342 @LENGTH@ 5
------------------------------INS SimpleName@@wagon @TO@ QualifiedName@@org.apache.maven.wagon @AT@ 10348 @LENGTH@ 5
---------------------------INS SimpleName@@Wagon @TO@ QualifiedName@@org.apache.maven.wagon.Wagon @AT@ 10354 @LENGTH@ 5
------------------------INS SimpleName@@ROLE @TO@ QualifiedName@@org.apache.maven.wagon.Wagon.ROLE @AT@ 10360 @LENGTH@ 4
---------------------INS StringLiteral@@"http" @TO@ SimpleName@@MethodName:lookup:[Wagon.class, roleHint] @AT@ 10366 @LENGTH@ 6
------DEL ReturnStatement@@MethodInvocation:new DefaultPlexusContainer().lookup(Wagon.class,roleHint) @AT@ 10304 @LENGTH@ 66
---------DEL MethodInvocation@@new DefaultPlexusContainer().lookup(Wagon.class,roleHint) @AT@ 10311 @LENGTH@ 58
------------DEL ClassInstanceCreation@@DefaultPlexusContainer[] @AT@ 10311 @LENGTH@ 28
------INS ExpressionStatement@@MethodInvocation:container.dispose() @TO@ Block@@ThenBody:{  return new DefaultPlexusContainer().lookup(Wagon.class,roleHint);} @AT@ 10392 @LENGTH@ 20
---------INS MethodInvocation@@container.dispose() @TO@ ExpressionStatement@@MethodInvocation:container.dispose() @AT@ 10392 @LENGTH@ 19
------------INS SimpleName@@Name:container @TO@ MethodInvocation@@container.dispose() @AT@ 10392 @LENGTH@ 9
------------INS SimpleName@@MethodName:dispose:[] @TO@ MethodInvocation@@container.dispose() @AT@ 10402 @LENGTH@ 9
------INS ReturnStatement@@SimpleName:httpWagon @TO@ Block@@ThenBody:{  return new DefaultPlexusContainer().lookup(Wagon.class,roleHint);} @AT@ 10429 @LENGTH@ 17
---------INS SimpleName@@httpWagon @TO@ ReturnStatement@@SimpleName:httpWagon @AT@ 10436 @LENGTH@ 9


UPD ReturnStatement@@ClassInstanceCreation:new TransformersLogger(getTarget()) @TO@ MethodInvocation:TransformersLogger.getLogger(getTarget()) @AT@ 14299 @LENGTH@ 43
---INS MethodInvocation@@TransformersLogger.getLogger(getTarget()) @TO@ ReturnStatement@@ClassInstanceCreation:new TransformersLogger(getTarget()) @AT@ 14306 @LENGTH@ 41
------INS SimpleName@@Name:TransformersLogger @TO@ MethodInvocation@@TransformersLogger.getLogger(getTarget()) @AT@ 14306 @LENGTH@ 18
------INS SimpleName@@MethodName:getLogger:[getTarget()] @TO@ MethodInvocation@@TransformersLogger.getLogger(getTarget()) @AT@ 14325 @LENGTH@ 22
---------INS MethodInvocation@@MethodName:getTarget:[] @TO@ SimpleName@@MethodName:getLogger:[getTarget()] @AT@ 14335 @LENGTH@ 11
---DEL ClassInstanceCreation@@TransformersLogger[getTarget()] @AT@ 14306 @LENGTH@ 35
------DEL New@@new @AT@ 14306 @LENGTH@ 3
------DEL SimpleType@@TransformersLogger @AT@ 14310 @LENGTH@ 18
------DEL MethodInvocation@@MethodName:getTarget:[] @AT@ 14329 @LENGTH@ 11


UPD IfStatement@@if (null != obj && conversions.isSimpleType(obj.getClass())) {  return getPotentiallyConvertedSimpleWrite(obj);} @TO@ if (conversions.isSimpleType(obj.getClass())) {  return getPotentiallyConvertedSimpleWrite(obj);} @AT@ 29703 @LENGTH@ 147
---DEL InfixExpression@@null != obj && conversions.isSimpleType(obj.getClass()) @AT@ 29707 @LENGTH@ 55
------DEL InfixExpression@@null != obj @AT@ 29707 @LENGTH@ 11
---------DEL NullLiteral@@null @AT@ 29707 @LENGTH@ 4
---------DEL Operator@@!= @AT@ 29711 @LENGTH@ 2
---------DEL SimpleName@@obj @AT@ 29715 @LENGTH@ 3
------DEL Operator@@&& @AT@ 29718 @LENGTH@ 2
---MOV MethodInvocation@@conversions.isSimpleType(obj.getClass()) @TO@ IfStatement@@if (null != obj && conversions.isSimpleType(obj.getClass())) {  return getPotentiallyConvertedSimpleWrite(obj);} @AT@ 29722 @LENGTH@ 40


UPD MethodDeclaration@@public, static, ServiceBuilder, MethodName:process, final ConnectorXmlDescriptor connectorXmlDescriptor, final IronJacamarXmlDescriptor ironJacamarXmlDescriptor, final ClassLoader classLoader, final ServiceTarget serviceTarget, final Map<ResourceRoot,Index> annotationIndexes, final ServiceName duServiceName, DeploymentUnitProcessingException,  @TO@ public, static, ServiceBuilder, MethodName:process, final ConnectorXmlDescriptor connectorXmlDescriptor, final IronJacamarXmlDescriptor ironJacamarXmlDescriptor, final ClassLoader classLoader, final ServiceTarget serviceTarget, final Map<ResourceRoot,Index> annotationIndexes, final ServiceName duServiceName, final ServiceVerificationHandler verificationHandler, DeploymentUnitProcessingException,  @AT@ 7761 @LENGTH@ 4068
---INS SingleVariableDeclaration@@final ServiceVerificationHandler verificationHandler @TO@ MethodDeclaration@@public, static, ServiceBuilder, MethodName:process, final ConnectorXmlDescriptor connectorXmlDescriptor, final IronJacamarXmlDescriptor ironJacamarXmlDescriptor, final ClassLoader classLoader, final ServiceTarget serviceTarget, final Map<ResourceRoot,Index> annotationIndexes, final ServiceName duServiceName, DeploymentUnitProcessingException,  @AT@ 8140 @LENGTH@ 52
------INS Modifier@@final @TO@ SingleVariableDeclaration@@final ServiceVerificationHandler verificationHandler @AT@ 8140 @LENGTH@ 5
------INS SimpleType@@ServiceVerificationHandler @TO@ SingleVariableDeclaration@@final ServiceVerificationHandler verificationHandler @AT@ 8146 @LENGTH@ 26
------INS SimpleName@@verificationHandler @TO@ SingleVariableDeclaration@@final ServiceVerificationHandler verificationHandler @AT@ 8173 @LENGTH@ 19
---UPD TryStatement@@try {  Annotations annotator=new Annotations();  if (annotationIndexes != null && annotationIndexes.size() > 0) {    DEPLOYMENT_CONNECTOR_LOGGER.debugf("ParsedRaDeploymentProcessor: Found %d annotationIndexes",annotationIndexes.size());    for (    Index index : annotationIndexes.values()) {      if (index.getKnownClasses() != null && index.getKnownClasses().size() > 0) {        AnnotationRepository repository=new JandexAnnotationRepositoryImpl(index,classLoader);        cmd=annotator.merge(cmd,repository,classLoader);        DEPLOYMENT_CONNECTOR_LOGGER.debugf("ParsedRaDeploymentProcessor: CMD=%s",cmd);      }    }  }  if (annotationIndexes == null || annotationIndexes.size() == 0)   DEPLOYMENT_CONNECTOR_LOGGER.debugf("ParsedRaDeploymentProcessor: Found 0 annotationIndexes");  if (cmd != null) {    cmd.validate();    cmd=(new Merger()).mergeConnectorWithCommonIronJacamar(ijmd,cmd);  }  final ServiceName deployerServiceName=ConnectorServices.RESOURCE_ADAPTER_DEPLOYER_SERVICE_PREFIX.append(connectorXmlDescriptor.getDeploymentName());  final ResourceAdapterDeploymentService raDeploymentService=new ResourceAdapterDeploymentService(connectorXmlDescriptor,cmd,ijmd,classLoader,deployerServiceName,duServiceName);  ServiceBuilder builder=serviceTarget.addService(deployerServiceName,raDeploymentService).addDependency(ConnectorServices.IRONJACAMAR_MDR,AS7MetadataRepository.class,raDeploymentService.getMdrInjector()).addDependency(ConnectorServices.RA_REPOSITORY_SERVICE,ResourceAdapterRepository.class,raDeploymentService.getRaRepositoryInjector()).addDependency(ConnectorServices.MANAGEMENT_REPOSITORY_SERVICE,ManagementRepository.class,raDeploymentService.getManagementRepositoryInjector()).addDependency(ConnectorServices.RESOURCE_ADAPTER_REGISTRY_SERVICE,ResourceAdapterDeploymentRegistry.class,raDeploymentService.getRegistryInjector()).addDependency(ConnectorServices.TRANSACTION_INTEGRATION_SERVICE,TransactionIntegration.class,raDeploymentService.getTxIntegrationInjector()).addDependency(ConnectorServices.CONNECTOR_CONFIG_SERVICE,JcaSubsystemConfiguration.class,raDeploymentService.getConfigInjector()).addDependency(SubjectFactoryService.SERVICE_NAME,SubjectFactory.class,raDeploymentService.getSubjectFactoryInjector()).addDependency(ConnectorServices.CCM_SERVICE,CachedConnectionManager.class,raDeploymentService.getCcmInjector()).addDependency(ConnectorServices.IDLE_REMOVER_SERVICE).addDependency(ConnectorServices.CONNECTION_VALIDATOR_SERVICE).addDependency(NamingService.SERVICE_NAME);  return builder;} catch (Throwable t) {  throw new DeploymentUnitProcessingException(t);} @TO@ try {  Annotations annotator=new Annotations();  if (annotationIndexes != null && annotationIndexes.size() > 0) {    DEPLOYMENT_CONNECTOR_LOGGER.debugf("ParsedRaDeploymentProcessor: Found %d annotationIndexes",annotationIndexes.size());    for (    Index index : annotationIndexes.values()) {      if (index.getKnownClasses() != null && index.getKnownClasses().size() > 0) {        AnnotationRepository repository=new JandexAnnotationRepositoryImpl(index,classLoader);        cmd=annotator.merge(cmd,repository,classLoader);        DEPLOYMENT_CONNECTOR_LOGGER.debugf("ParsedRaDeploymentProcessor: CMD=%s",cmd);      }    }  }  if (annotationIndexes == null || annotationIndexes.size() == 0)   DEPLOYMENT_CONNECTOR_LOGGER.debugf("ParsedRaDeploymentProcessor: Found 0 annotationIndexes");  if (cmd != null) {    cmd.validate();    cmd=(new Merger()).mergeConnectorWithCommonIronJacamar(ijmd,cmd);  }  final ServiceName deployerServiceName=ConnectorServices.RESOURCE_ADAPTER_DEPLOYER_SERVICE_PREFIX.append(connectorXmlDescriptor.getDeploymentName());  final ResourceAdapterDeploymentService raDeploymentService=new ResourceAdapterDeploymentService(connectorXmlDescriptor,cmd,ijmd,classLoader,deployerServiceName,duServiceName);  ServiceBuilder builder=serviceTarget.addService(deployerServiceName,raDeploymentService).addDependency(ConnectorServices.IRONJACAMAR_MDR,AS7MetadataRepository.class,raDeploymentService.getMdrInjector()).addDependency(ConnectorServices.RA_REPOSITORY_SERVICE,ResourceAdapterRepository.class,raDeploymentService.getRaRepositoryInjector()).addDependency(ConnectorServices.MANAGEMENT_REPOSITORY_SERVICE,ManagementRepository.class,raDeploymentService.getManagementRepositoryInjector()).addDependency(ConnectorServices.RESOURCE_ADAPTER_REGISTRY_SERVICE,ResourceAdapterDeploymentRegistry.class,raDeploymentService.getRegistryInjector()).addDependency(ConnectorServices.TRANSACTION_INTEGRATION_SERVICE,TransactionIntegration.class,raDeploymentService.getTxIntegrationInjector()).addDependency(ConnectorServices.CONNECTOR_CONFIG_SERVICE,JcaSubsystemConfiguration.class,raDeploymentService.getConfigInjector()).addDependency(SubjectFactoryService.SERVICE_NAME,SubjectFactory.class,raDeploymentService.getSubjectFactoryInjector()).addDependency(ConnectorServices.CCM_SERVICE,CachedConnectionManager.class,raDeploymentService.getCcmInjector()).addDependency(ConnectorServices.IDLE_REMOVER_SERVICE).addDependency(ConnectorServices.CONNECTION_VALIDATOR_SERVICE).addDependency(NamingService.SERVICE_NAME);  if (verificationHandler != null) {    builder.addListener(ServiceListener.Inheritance.ALL,verificationHandler);  }  return builder;} catch (Throwable t) {  throw new DeploymentUnitProcessingException(t);} @AT@ 8331 @LENGTH@ 3492
------INS IfStatement@@if (verificationHandler != null) {  builder.addListener(ServiceListener.Inheritance.ALL,verificationHandler);} @TO@ TryStatement@@try {  Annotations annotator=new Annotations();  if (annotationIndexes != null && annotationIndexes.size() > 0) {    DEPLOYMENT_CONNECTOR_LOGGER.debugf("ParsedRaDeploymentProcessor: Found %d annotationIndexes",annotationIndexes.size());    for (    Index index : annotationIndexes.values()) {      if (index.getKnownClasses() != null && index.getKnownClasses().size() > 0) {        AnnotationRepository repository=new JandexAnnotationRepositoryImpl(index,classLoader);        cmd=annotator.merge(cmd,repository,classLoader);        DEPLOYMENT_CONNECTOR_LOGGER.debugf("ParsedRaDeploymentProcessor: CMD=%s",cmd);      }    }  }  if (annotationIndexes == null || annotationIndexes.size() == 0)   DEPLOYMENT_CONNECTOR_LOGGER.debugf("ParsedRaDeploymentProcessor: Found 0 annotationIndexes");  if (cmd != null) {    cmd.validate();    cmd=(new Merger()).mergeConnectorWithCommonIronJacamar(ijmd,cmd);  }  final ServiceName deployerServiceName=ConnectorServices.RESOURCE_ADAPTER_DEPLOYER_SERVICE_PREFIX.append(connectorXmlDescriptor.getDeploymentName());  final ResourceAdapterDeploymentService raDeploymentService=new ResourceAdapterDeploymentService(connectorXmlDescriptor,cmd,ijmd,classLoader,deployerServiceName,duServiceName);  ServiceBuilder builder=serviceTarget.addService(deployerServiceName,raDeploymentService).addDependency(ConnectorServices.IRONJACAMAR_MDR,AS7MetadataRepository.class,raDeploymentService.getMdrInjector()).addDependency(ConnectorServices.RA_REPOSITORY_SERVICE,ResourceAdapterRepository.class,raDeploymentService.getRaRepositoryInjector()).addDependency(ConnectorServices.MANAGEMENT_REPOSITORY_SERVICE,ManagementRepository.class,raDeploymentService.getManagementRepositoryInjector()).addDependency(ConnectorServices.RESOURCE_ADAPTER_REGISTRY_SERVICE,ResourceAdapterDeploymentRegistry.class,raDeploymentService.getRegistryInjector()).addDependency(ConnectorServices.TRANSACTION_INTEGRATION_SERVICE,TransactionIntegration.class,raDeploymentService.getTxIntegrationInjector()).addDependency(ConnectorServices.CONNECTOR_CONFIG_SERVICE,JcaSubsystemConfiguration.class,raDeploymentService.getConfigInjector()).addDependency(SubjectFactoryService.SERVICE_NAME,SubjectFactory.class,raDeploymentService.getSubjectFactoryInjector()).addDependency(ConnectorServices.CCM_SERVICE,CachedConnectionManager.class,raDeploymentService.getCcmInjector()).addDependency(ConnectorServices.IDLE_REMOVER_SERVICE).addDependency(ConnectorServices.CONNECTION_VALIDATOR_SERVICE).addDependency(NamingService.SERVICE_NAME);  return builder;} catch (Throwable t) {  throw new DeploymentUnitProcessingException(t);} @AT@ 11843 @LENGTH@ 138
---------INS InfixExpression@@verificationHandler != null @TO@ IfStatement@@if (verificationHandler != null) {  builder.addListener(ServiceListener.Inheritance.ALL,verificationHandler);} @AT@ 11846 @LENGTH@ 27
------------INS SimpleName@@verificationHandler @TO@ InfixExpression@@verificationHandler != null @AT@ 11846 @LENGTH@ 19
------------INS Operator@@!= @TO@ InfixExpression@@verificationHandler != null @AT@ 11865 @LENGTH@ 2
------------INS NullLiteral@@null @TO@ InfixExpression@@verificationHandler != null @AT@ 11869 @LENGTH@ 4
---------INS Block@@ThenBody:{  builder.addListener(ServiceListener.Inheritance.ALL,verificationHandler);} @TO@ IfStatement@@if (verificationHandler != null) {  builder.addListener(ServiceListener.Inheritance.ALL,verificationHandler);} @AT@ 11875 @LENGTH@ 106
------------INS ExpressionStatement@@MethodInvocation:builder.addListener(ServiceListener.Inheritance.ALL,verificationHandler) @TO@ Block@@ThenBody:{  builder.addListener(ServiceListener.Inheritance.ALL,verificationHandler);} @AT@ 11893 @LENGTH@ 74
---------------INS MethodInvocation@@builder.addListener(ServiceListener.Inheritance.ALL,verificationHandler) @TO@ ExpressionStatement@@MethodInvocation:builder.addListener(ServiceListener.Inheritance.ALL,verificationHandler) @AT@ 11893 @LENGTH@ 73
------------------INS SimpleName@@Name:builder @TO@ MethodInvocation@@builder.addListener(ServiceListener.Inheritance.ALL,verificationHandler) @AT@ 11893 @LENGTH@ 7
------------------INS SimpleName@@MethodName:addListener:[ServiceListener.Inheritance.ALL, verificationHandler] @TO@ MethodInvocation@@builder.addListener(ServiceListener.Inheritance.ALL,verificationHandler) @AT@ 11901 @LENGTH@ 65
---------------------INS QualifiedName@@ServiceListener.Inheritance.ALL @TO@ SimpleName@@MethodName:addListener:[ServiceListener.Inheritance.ALL, verificationHandler] @AT@ 11913 @LENGTH@ 31
------------------------INS QualifiedName@@ServiceListener.Inheritance @TO@ QualifiedName@@ServiceListener.Inheritance.ALL @AT@ 11913 @LENGTH@ 27
---------------------------INS SimpleName@@ServiceListener @TO@ QualifiedName@@ServiceListener.Inheritance @AT@ 11913 @LENGTH@ 15
---------------------------INS SimpleName@@Inheritance @TO@ QualifiedName@@ServiceListener.Inheritance @AT@ 11929 @LENGTH@ 11
------------------------INS SimpleName@@ALL @TO@ QualifiedName@@ServiceListener.Inheritance.ALL @AT@ 11941 @LENGTH@ 3
---------------------INS SimpleName@@verificationHandler @TO@ SimpleName@@MethodName:addListener:[ServiceListener.Inheritance.ALL, verificationHandler] @AT@ 11946 @LENGTH@ 19


UPD IfStatement@@if (cache.isCached(context.getParameters()[0])) {  return this.localHome ? cmpComponent.getEJBLocalObject(context.getParameters()[0]) : cmpComponent.getEJBObject(context.getParameters()[0]);} @TO@ if (cache.containsNotRemoved(context.getParameters()[0])) {  return this.localHome ? cmpComponent.getEJBLocalObject(context.getParameters()[0]) : cmpComponent.getEJBObject(context.getParameters()[0]);} @AT@ 3690 @LENGTH@ 218
---UPD MethodInvocation@@cache.isCached(context.getParameters()[0]) @TO@ cache.containsNotRemoved(context.getParameters()[0]) @AT@ 3693 @LENGTH@ 42
------UPD SimpleName@@MethodName:isCached:[context.getParameters()[0]] @TO@ MethodName:containsNotRemoved:[context.getParameters()[0]] @AT@ 3699 @LENGTH@ 36


UPD ExpressionStatement@@MethodInvocation:transformer.transformOperation(ctx,address,transformedOperation.getTransformedOperation()) @TO@ MethodInvocation:recordTransformedOperation(transformer.transformOperation(ctx,address,transformedOperation.getTransformedOperation())) @AT@ 4733 @LENGTH@ 93
---INS MethodInvocation@@recordTransformedOperation(transformer.transformOperation(ctx,address,transformedOperation.getTransformedOperation())) @TO@ ExpressionStatement@@MethodInvocation:transformer.transformOperation(ctx,address,transformedOperation.getTransformedOperation()) @AT@ 4733 @LENGTH@ 120
------INS SimpleName@@MethodName:recordTransformedOperation:[transformer.transformOperation(ctx,address,transformedOperation.getTransformedOperation())] @TO@ MethodInvocation@@recordTransformedOperation(transformer.transformOperation(ctx,address,transformedOperation.getTransformedOperation())) @AT@ 4733 @LENGTH@ 120
---------MOV MethodInvocation@@transformer.transformOperation(ctx,address,transformedOperation.getTransformedOperation()) @TO@ SimpleName@@MethodName:recordTransformedOperation:[transformer.transformOperation(ctx,address,transformedOperation.getTransformedOperation())] @AT@ 4733 @LENGTH@ 92


UPD IfStatement@@if (model.get(ARCHIVE.getName()).isDefined()) {  archiveOrModuleName=model.get(ARCHIVE.getName()).asString();} else {  archiveOrModuleName=model.get(MODULE.getName()).asString();} @TO@ if (model.get(ARCHIVE.getName()).isDefined()) {  archiveOrModuleName=ARCHIVE.resolveModelAttribute(context,model).asString();} else {  archiveOrModuleName=MODULE.resolveModelAttribute(context,model).asString();} @AT@ 2793 @LENGTH@ 223
---UPD Block@@ThenBody:{  archiveOrModuleName=model.get(ARCHIVE.getName()).asString();} @TO@ ThenBody:{  archiveOrModuleName=ARCHIVE.resolveModelAttribute(context,model).asString();} @AT@ 2839 @LENGTH@ 86
------UPD ExpressionStatement@@Assignment:archiveOrModuleName=model.get(ARCHIVE.getName()).asString() @TO@ Assignment:archiveOrModuleName=ARCHIVE.resolveModelAttribute(context,model).asString() @AT@ 2853 @LENGTH@ 62
---------UPD Assignment@@archiveOrModuleName=model.get(ARCHIVE.getName()).asString() @TO@ archiveOrModuleName=ARCHIVE.resolveModelAttribute(context,model).asString() @AT@ 2853 @LENGTH@ 61
------------UPD MethodInvocation@@model.get(ARCHIVE.getName()).asString() @TO@ ARCHIVE.resolveModelAttribute(context,model).asString() @AT@ 2875 @LENGTH@ 39
---------------UPD MethodInvocation@@MethodName:get:[ARCHIVE.getName()] @TO@ MethodName:resolveModelAttribute:[context, model] @AT@ 2875 @LENGTH@ 28
------------------DEL MethodInvocation@@ARCHIVE.getName() @AT@ 2885 @LENGTH@ 17
------------------MOV SimpleName@@Name:ARCHIVE @TO@ MethodInvocation@@MethodName:get:[ARCHIVE.getName()] @AT@ 2885 @LENGTH@ 7
------------------MOV SimpleName@@MethodName:getName:[] @TO@ MethodInvocation@@MethodName:get:[ARCHIVE.getName()] @AT@ 2893 @LENGTH@ 9
---------------UPD SimpleName@@Name:model @TO@ Name:ARCHIVE @AT@ 2875 @LENGTH@ 5
---UPD Block@@ElseBody:{  archiveOrModuleName=model.get(MODULE.getName()).asString();} @TO@ ElseBody:{  archiveOrModuleName=MODULE.resolveModelAttribute(context,model).asString();} @AT@ 2931 @LENGTH@ 85
------UPD ExpressionStatement@@Assignment:archiveOrModuleName=model.get(MODULE.getName()).asString() @TO@ Assignment:archiveOrModuleName=MODULE.resolveModelAttribute(context,model).asString() @AT@ 2945 @LENGTH@ 61
---------UPD Assignment@@archiveOrModuleName=model.get(MODULE.getName()).asString() @TO@ archiveOrModuleName=MODULE.resolveModelAttribute(context,model).asString() @AT@ 2945 @LENGTH@ 60
------------UPD MethodInvocation@@model.get(MODULE.getName()).asString() @TO@ MODULE.resolveModelAttribute(context,model).asString() @AT@ 2967 @LENGTH@ 38
---------------UPD MethodInvocation@@MethodName:get:[MODULE.getName()] @TO@ MethodName:resolveModelAttribute:[context, model] @AT@ 2967 @LENGTH@ 27
------------------DEL MethodInvocation@@MODULE.getName() @AT@ 2977 @LENGTH@ 16
------------------MOV SimpleName@@Name:MODULE @TO@ MethodInvocation@@MethodName:get:[MODULE.getName()] @AT@ 2977 @LENGTH@ 6
------------------MOV SimpleName@@MethodName:getName:[] @TO@ MethodInvocation@@MethodName:get:[MODULE.getName()] @AT@ 2984 @LENGTH@ 9
---------------UPD SimpleName@@Name:model @TO@ Name:MODULE @AT@ 2967 @LENGTH@ 5


UPD ExpressionStatement@@MethodInvocation:d.addWelcomePages(welcomeFiles) @TO@ MethodInvocation:d.addWelcomePages(file) @AT@ 26359 @LENGTH@ 32
---UPD MethodInvocation@@d.addWelcomePages(welcomeFiles) @TO@ d.addWelcomePages(file) @AT@ 26359 @LENGTH@ 31
------UPD SimpleName@@MethodName:addWelcomePages:[welcomeFiles] @TO@ MethodName:addWelcomePages:[file] @AT@ 26361 @LENGTH@ 29
---------UPD SimpleName@@welcomeFiles @TO@ file @AT@ 26377 @LENGTH@ 12


DEL VariableDeclarationStatement@@String version=container.getVersion().toString(); @AT@ 4084 @LENGTH@ 51
---DEL SimpleType@@String @AT@ 4084 @LENGTH@ 6
---DEL VariableDeclarationFragment@@version=container.getVersion().toString() @AT@ 4091 @LENGTH@ 43
------DEL SimpleName@@version @AT@ 4091 @LENGTH@ 7
------DEL MethodInvocation@@container.getVersion().toString() @AT@ 4101 @LENGTH@ 33
---------DEL MethodInvocation@@MethodName:getVersion:[] @AT@ 4101 @LENGTH@ 22
---------DEL SimpleName@@Name:container @AT@ 4101 @LENGTH@ 9
---------DEL SimpleName@@MethodName:toString:[] @AT@ 4124 @LENGTH@ 10


UPD Block@@ElseBody:{  resourceRegistration.registerReadWriteAttribute(parameter.getAttribute(),null,new ReloadRequiredWriteAttributeHandler());} @TO@ ElseBody:{  AttributeDefinition ad=parameter.getAttribute();  resourceRegistration.registerReadWriteAttribute(ad,null,new ReloadRequiredWriteAttributeHandler(ad));} @AT@ 2918 @LENGTH@ 155
---UPD ExpressionStatement@@MethodInvocation:resourceRegistration.registerReadWriteAttribute(parameter.getAttribute(),null,new ReloadRequiredWriteAttributeHandler()) @TO@ MethodInvocation:resourceRegistration.registerReadWriteAttribute(ad,null,new ReloadRequiredWriteAttributeHandler(ad)) @AT@ 2936 @LENGTH@ 123
------UPD MethodInvocation@@resourceRegistration.registerReadWriteAttribute(parameter.getAttribute(),null,new ReloadRequiredWriteAttributeHandler()) @TO@ resourceRegistration.registerReadWriteAttribute(ad,null,new ReloadRequiredWriteAttributeHandler(ad)) @AT@ 2936 @LENGTH@ 122
---------UPD SimpleName@@MethodName:registerReadWriteAttribute:[parameter.getAttribute(), null, new ReloadRequiredWriteAttributeHandler()] @TO@ MethodName:registerReadWriteAttribute:[ad, null, new ReloadRequiredWriteAttributeHandler(ad)] @AT@ 2957 @LENGTH@ 101
------------DEL MethodInvocation@@parameter.getAttribute() @AT@ 2984 @LENGTH@ 24
---------------DEL SimpleName@@Name:parameter @AT@ 2984 @LENGTH@ 9
---------------DEL SimpleName@@MethodName:getAttribute:[] @AT@ 2994 @LENGTH@ 14
------------UPD ClassInstanceCreation@@ReloadRequiredWriteAttributeHandler[] @TO@ ReloadRequiredWriteAttributeHandler[ad] @AT@ 3016 @LENGTH@ 41
---------------INS SimpleName@@ad @TO@ ClassInstanceCreation@@ReloadRequiredWriteAttributeHandler[] @AT@ 3153 @LENGTH@ 2
------------INS SimpleName@@ad @TO@ SimpleName@@MethodName:registerReadWriteAttribute:[parameter.getAttribute(), null, new ReloadRequiredWriteAttributeHandler()] @AT@ 3103 @LENGTH@ 2
---INS VariableDeclarationStatement@@AttributeDefinition ad=parameter.getAttribute(); @TO@ Block@@ElseBody:{  resourceRegistration.registerReadWriteAttribute(parameter.getAttribute(),null,new ReloadRequiredWriteAttributeHandler());} @AT@ 2988 @LENGTH@ 50
------INS SimpleType@@AttributeDefinition @TO@ VariableDeclarationStatement@@AttributeDefinition ad=parameter.getAttribute(); @AT@ 2988 @LENGTH@ 19
------INS VariableDeclarationFragment@@ad=parameter.getAttribute() @TO@ VariableDeclarationStatement@@AttributeDefinition ad=parameter.getAttribute(); @AT@ 3008 @LENGTH@ 29
---------INS SimpleName@@ad @TO@ VariableDeclarationFragment@@ad=parameter.getAttribute() @AT@ 3008 @LENGTH@ 2
---------INS MethodInvocation@@parameter.getAttribute() @TO@ VariableDeclarationFragment@@ad=parameter.getAttribute() @AT@ 3013 @LENGTH@ 24
------------INS SimpleName@@Name:parameter @TO@ MethodInvocation@@parameter.getAttribute() @AT@ 3013 @LENGTH@ 9
------------INS SimpleName@@MethodName:getAttribute:[] @TO@ MethodInvocation@@parameter.getAttribute() @AT@ 3023 @LENGTH@ 14


UPD ExpressionStatement@@MethodInvocation:producerTemplate.send(uri,new Processor(){
  public void process(  Exchange exchange) throws Exception {
    InputStream is=IOHelper.buffered(new FileInputStream("src/test/resources/test.txt"));
    byte buffer[]=IOConverter.toBytes(is);
    is.close();
    exchange.setProperty(Exchange.CHARSET_NAME,"UTF-8");
    Message in=exchange.getIn();
    in.setBody(buffer);
  }
}
) @TO@ MethodInvocation:template.send(uri,new Processor(){
  public void process(  Exchange exchange) throws Exception {
    InputStream is=IOHelper.buffered(new FileInputStream("src/test/resources/test.txt"));
    byte buffer[]=IOConverter.toBytes(is);
    is.close();
    exchange.setProperty(Exchange.CHARSET_NAME,"UTF-8");
    Message in=exchange.getIn();
    in.setBody(buffer);
  }
}
) @AT@ 1628 @LENGTH@ 589
---UPD MethodInvocation@@producerTemplate.send(uri,new Processor(){
  public void process(  Exchange exchange) throws Exception {
    InputStream is=IOHelper.buffered(new FileInputStream("src/test/resources/test.txt"));
    byte buffer[]=IOConverter.toBytes(is);
    is.close();
    exchange.setProperty(Exchange.CHARSET_NAME,"UTF-8");
    Message in=exchange.getIn();
    in.setBody(buffer);
  }
}
) @TO@ template.send(uri,new Processor(){
  public void process(  Exchange exchange) throws Exception {
    InputStream is=IOHelper.buffered(new FileInputStream("src/test/resources/test.txt"));
    byte buffer[]=IOConverter.toBytes(is);
    is.close();
    exchange.setProperty(Exchange.CHARSET_NAME,"UTF-8");
    Message in=exchange.getIn();
    in.setBody(buffer);
  }
}
) @AT@ 1628 @LENGTH@ 588
------UPD SimpleName@@Name:producerTemplate @TO@ Name:template @AT@ 1628 @LENGTH@ 16


UPD EnhancedForStatement@@for (ProcessorDefinition out : outputs) {  if (type.isInstance(out)) {    found.add((T)out);  }  if (out instanceof SendDefinition) {    SendDefinition send=(SendDefinition)out;    List<ProcessorDefinition<?>> children=send.getOutputs();    doFindType(children,type,found);  }  if (out instanceof ChoiceDefinition) {    ChoiceDefinition choice=(ChoiceDefinition)out;    for (    WhenDefinition when : choice.getWhenClauses()) {      List<ProcessorDefinition<?>> children=when.getOutputs();      doFindType(children,type,found);    }    if (choice.getOtherwise() != null) {      List<ProcessorDefinition<?>> children=choice.getOtherwise().getOutputs();      doFindType(children,type,found);    }  }  List<ProcessorDefinition<?>> children=out.getOutputs();  doFindType(children,type,found);} @TO@ for (ProcessorDefinition out : outputs) {  if (type.isInstance(out)) {    found.add((T)out);  }  if (out instanceof SendDefinition) {    SendDefinition send=(SendDefinition)out;    List<ProcessorDefinition<?>> children=send.getOutputs();    doFindType(children,type,found);  }  if (out instanceof ChoiceDefinition) {    ChoiceDefinition choice=(ChoiceDefinition)out;    for (    WhenDefinition when : choice.getWhenClauses()) {      List<ProcessorDefinition<?>> children=when.getOutputs();      doFindType(children,type,found);    }    if (choice.getOtherwise() != null) {      List<ProcessorDefinition<?>> children=choice.getOtherwise().getOutputs();      doFindType(children,type,found);    }  }  if (out instanceof TryDefinition) {    TryDefinition doTry=(TryDefinition)out;    List<ProcessorDefinition<?>> doTryOut=doTry.getOutputsWithoutCatches();    doFindType(doTryOut,type,found);    List<CatchDefinition> doTryCatch=doTry.getCatchClauses();    for (    CatchDefinition doCatch : doTryCatch) {      doFindType(doCatch.getOutputs(),type,found);    }    if (doTry.getFinallyClause() != null) {      doFindType(doTry.getFinallyClause().getOutputs(),type,found);    }    continue;  }  List<ProcessorDefinition<?>> children=out.getOutputs();  doFindType(children,type,found);} @AT@ 6658 @LENGTH@ 1231
---INS IfStatement@@if (out instanceof TryDefinition) {  TryDefinition doTry=(TryDefinition)out;  List<ProcessorDefinition<?>> doTryOut=doTry.getOutputsWithoutCatches();  doFindType(doTryOut,type,found);  List<CatchDefinition> doTryCatch=doTry.getCatchClauses();  for (  CatchDefinition doCatch : doTryCatch) {    doFindType(doCatch.getOutputs(),type,found);  }  if (doTry.getFinallyClause() != null) {    doFindType(doTry.getFinallyClause().getOutputs(),type,found);  }  continue;} @TO@ EnhancedForStatement@@for (ProcessorDefinition out : outputs) {  if (type.isInstance(out)) {    found.add((T)out);  }  if (out instanceof SendDefinition) {    SendDefinition send=(SendDefinition)out;    List<ProcessorDefinition<?>> children=send.getOutputs();    doFindType(children,type,found);  }  if (out instanceof ChoiceDefinition) {    ChoiceDefinition choice=(ChoiceDefinition)out;    for (    WhenDefinition when : choice.getWhenClauses()) {      List<ProcessorDefinition<?>> children=when.getOutputs();      doFindType(children,type,found);    }    if (choice.getOtherwise() != null) {      List<ProcessorDefinition<?>> children=choice.getOtherwise().getOutputs();      doFindType(children,type,found);    }  }  List<ProcessorDefinition<?>> children=out.getOutputs();  doFindType(children,type,found);} @AT@ 7792 @LENGTH@ 722
------INS InstanceofExpression@@out instanceof TryDefinition @TO@ IfStatement@@if (out instanceof TryDefinition) {  TryDefinition doTry=(TryDefinition)out;  List<ProcessorDefinition<?>> doTryOut=doTry.getOutputsWithoutCatches();  doFindType(doTryOut,type,found);  List<CatchDefinition> doTryCatch=doTry.getCatchClauses();  for (  CatchDefinition doCatch : doTryCatch) {    doFindType(doCatch.getOutputs(),type,found);  }  if (doTry.getFinallyClause() != null) {    doFindType(doTry.getFinallyClause().getOutputs(),type,found);  }  continue;} @AT@ 7796 @LENGTH@ 28
---------INS SimpleName@@out @TO@ InstanceofExpression@@out instanceof TryDefinition @AT@ 7796 @LENGTH@ 3
---------INS Instanceof@@instanceof @TO@ InstanceofExpression@@out instanceof TryDefinition @AT@ 7800 @LENGTH@ 10
---------INS SimpleType@@TryDefinition @TO@ InstanceofExpression@@out instanceof TryDefinition @AT@ 7811 @LENGTH@ 13
------INS Block@@ThenBody:{  TryDefinition doTry=(TryDefinition)out;  List<ProcessorDefinition<?>> doTryOut=doTry.getOutputsWithoutCatches();  doFindType(doTryOut,type,found);  List<CatchDefinition> doTryCatch=doTry.getCatchClauses();  for (  CatchDefinition doCatch : doTryCatch) {    doFindType(doCatch.getOutputs(),type,found);  }  if (doTry.getFinallyClause() != null) {    doFindType(doTry.getFinallyClause().getOutputs(),type,found);  }  continue;} @TO@ IfStatement@@if (out instanceof TryDefinition) {  TryDefinition doTry=(TryDefinition)out;  List<ProcessorDefinition<?>> doTryOut=doTry.getOutputsWithoutCatches();  doFindType(doTryOut,type,found);  List<CatchDefinition> doTryCatch=doTry.getCatchClauses();  for (  CatchDefinition doCatch : doTryCatch) {    doFindType(doCatch.getOutputs(),type,found);  }  if (doTry.getFinallyClause() != null) {    doFindType(doTry.getFinallyClause().getOutputs(),type,found);  }  continue;} @AT@ 7826 @LENGTH@ 688
---------INS VariableDeclarationStatement@@TryDefinition doTry=(TryDefinition)out; @TO@ Block@@ThenBody:{  TryDefinition doTry=(TryDefinition)out;  List<ProcessorDefinition<?>> doTryOut=doTry.getOutputsWithoutCatches();  doFindType(doTryOut,type,found);  List<CatchDefinition> doTryCatch=doTry.getCatchClauses();  for (  CatchDefinition doCatch : doTryCatch) {    doFindType(doCatch.getOutputs(),type,found);  }  if (doTry.getFinallyClause() != null) {    doFindType(doTry.getFinallyClause().getOutputs(),type,found);  }  continue;} @AT@ 7844 @LENGTH@ 42
------------INS SimpleType@@TryDefinition @TO@ VariableDeclarationStatement@@TryDefinition doTry=(TryDefinition)out; @AT@ 7844 @LENGTH@ 13
------------INS VariableDeclarationFragment@@doTry=(TryDefinition)out @TO@ VariableDeclarationStatement@@TryDefinition doTry=(TryDefinition)out; @AT@ 7858 @LENGTH@ 27
---------------INS SimpleName@@doTry @TO@ VariableDeclarationFragment@@doTry=(TryDefinition)out @AT@ 7858 @LENGTH@ 5
---------------INS CastExpression@@(TryDefinition)out @TO@ VariableDeclarationFragment@@doTry=(TryDefinition)out @AT@ 7866 @LENGTH@ 19
------------------INS SimpleType@@TryDefinition @TO@ CastExpression@@(TryDefinition)out @AT@ 7867 @LENGTH@ 13
------------------INS SimpleName@@out @TO@ CastExpression@@(TryDefinition)out @AT@ 7882 @LENGTH@ 3
---------INS VariableDeclarationStatement@@List<ProcessorDefinition<?>> doTryOut=doTry.getOutputsWithoutCatches(); @TO@ Block@@ThenBody:{  TryDefinition doTry=(TryDefinition)out;  List<ProcessorDefinition<?>> doTryOut=doTry.getOutputsWithoutCatches();  doFindType(doTryOut,type,found);  List<CatchDefinition> doTryCatch=doTry.getCatchClauses();  for (  CatchDefinition doCatch : doTryCatch) {    doFindType(doCatch.getOutputs(),type,found);  }  if (doTry.getFinallyClause() != null) {    doFindType(doTry.getFinallyClause().getOutputs(),type,found);  }  continue;} @AT@ 7903 @LENGTH@ 73
------------INS ParameterizedType@@List<ProcessorDefinition<?>> @TO@ VariableDeclarationStatement@@List<ProcessorDefinition<?>> doTryOut=doTry.getOutputsWithoutCatches(); @AT@ 7903 @LENGTH@ 28
---------------INS SimpleType@@List @TO@ ParameterizedType@@List<ProcessorDefinition<?>> @AT@ 7903 @LENGTH@ 4
---------------INS ParameterizedType@@ProcessorDefinition<?> @TO@ ParameterizedType@@List<ProcessorDefinition<?>> @AT@ 7908 @LENGTH@ 22
------------------INS SimpleType@@ProcessorDefinition @TO@ ParameterizedType@@ProcessorDefinition<?> @AT@ 7908 @LENGTH@ 19
------------------INS WildcardType@@? @TO@ ParameterizedType@@ProcessorDefinition<?> @AT@ 7928 @LENGTH@ 1
------------INS VariableDeclarationFragment@@doTryOut=doTry.getOutputsWithoutCatches() @TO@ VariableDeclarationStatement@@List<ProcessorDefinition<?>> doTryOut=doTry.getOutputsWithoutCatches(); @AT@ 7932 @LENGTH@ 43
---------------INS SimpleName@@doTryOut @TO@ VariableDeclarationFragment@@doTryOut=doTry.getOutputsWithoutCatches() @AT@ 7932 @LENGTH@ 8
---------------INS MethodInvocation@@doTry.getOutputsWithoutCatches() @TO@ VariableDeclarationFragment@@doTryOut=doTry.getOutputsWithoutCatches() @AT@ 7943 @LENGTH@ 32
------------------INS SimpleName@@Name:doTry @TO@ MethodInvocation@@doTry.getOutputsWithoutCatches() @AT@ 7943 @LENGTH@ 5
------------------INS SimpleName@@MethodName:getOutputsWithoutCatches:[] @TO@ MethodInvocation@@doTry.getOutputsWithoutCatches() @AT@ 7949 @LENGTH@ 26
---------INS ExpressionStatement@@MethodInvocation:doFindType(doTryOut,type,found) @TO@ Block@@ThenBody:{  TryDefinition doTry=(TryDefinition)out;  List<ProcessorDefinition<?>> doTryOut=doTry.getOutputsWithoutCatches();  doFindType(doTryOut,type,found);  List<CatchDefinition> doTryCatch=doTry.getCatchClauses();  for (  CatchDefinition doCatch : doTryCatch) {    doFindType(doCatch.getOutputs(),type,found);  }  if (doTry.getFinallyClause() != null) {    doFindType(doTry.getFinallyClause().getOutputs(),type,found);  }  continue;} @AT@ 7993 @LENGTH@ 34
------------INS MethodInvocation@@doFindType(doTryOut,type,found) @TO@ ExpressionStatement@@MethodInvocation:doFindType(doTryOut,type,found) @AT@ 7993 @LENGTH@ 33
---------------INS SimpleName@@MethodName:doFindType:[doTryOut, type, found] @TO@ MethodInvocation@@doFindType(doTryOut,type,found) @AT@ 7993 @LENGTH@ 33
------------------INS SimpleName@@doTryOut @TO@ SimpleName@@MethodName:doFindType:[doTryOut, type, found] @AT@ 8004 @LENGTH@ 8
------------------INS SimpleName@@type @TO@ SimpleName@@MethodName:doFindType:[doTryOut, type, found] @AT@ 8014 @LENGTH@ 4
------------------INS SimpleName@@found @TO@ SimpleName@@MethodName:doFindType:[doTryOut, type, found] @AT@ 8020 @LENGTH@ 5
---------INS VariableDeclarationStatement@@List<CatchDefinition> doTryCatch=doTry.getCatchClauses(); @TO@ Block@@ThenBody:{  TryDefinition doTry=(TryDefinition)out;  List<ProcessorDefinition<?>> doTryOut=doTry.getOutputsWithoutCatches();  doFindType(doTryOut,type,found);  List<CatchDefinition> doTryCatch=doTry.getCatchClauses();  for (  CatchDefinition doCatch : doTryCatch) {    doFindType(doCatch.getOutputs(),type,found);  }  if (doTry.getFinallyClause() != null) {    doFindType(doTry.getFinallyClause().getOutputs(),type,found);  }  continue;} @AT@ 8045 @LENGTH@ 59
------------INS ParameterizedType@@List<CatchDefinition> @TO@ VariableDeclarationStatement@@List<CatchDefinition> doTryCatch=doTry.getCatchClauses(); @AT@ 8045 @LENGTH@ 21
---------------INS SimpleType@@List @TO@ ParameterizedType@@List<CatchDefinition> @AT@ 8045 @LENGTH@ 4
---------------INS SimpleType@@CatchDefinition @TO@ ParameterizedType@@List<CatchDefinition> @AT@ 8050 @LENGTH@ 15
------------INS VariableDeclarationFragment@@doTryCatch=doTry.getCatchClauses() @TO@ VariableDeclarationStatement@@List<CatchDefinition> doTryCatch=doTry.getCatchClauses(); @AT@ 8067 @LENGTH@ 36
---------------INS SimpleName@@doTryCatch @TO@ VariableDeclarationFragment@@doTryCatch=doTry.getCatchClauses() @AT@ 8067 @LENGTH@ 10
---------------INS MethodInvocation@@doTry.getCatchClauses() @TO@ VariableDeclarationFragment@@doTryCatch=doTry.getCatchClauses() @AT@ 8080 @LENGTH@ 23
------------------INS SimpleName@@Name:doTry @TO@ MethodInvocation@@doTry.getCatchClauses() @AT@ 8080 @LENGTH@ 5
------------------INS SimpleName@@MethodName:getCatchClauses:[] @TO@ MethodInvocation@@doTry.getCatchClauses() @AT@ 8086 @LENGTH@ 17
---------INS EnhancedForStatement@@for (CatchDefinition doCatch : doTryCatch) {  doFindType(doCatch.getOutputs(),type,found);} @TO@ Block@@ThenBody:{  TryDefinition doTry=(TryDefinition)out;  List<ProcessorDefinition<?>> doTryOut=doTry.getOutputsWithoutCatches();  doFindType(doTryOut,type,found);  List<CatchDefinition> doTryCatch=doTry.getCatchClauses();  for (  CatchDefinition doCatch : doTryCatch) {    doFindType(doCatch.getOutputs(),type,found);  }  if (doTry.getFinallyClause() != null) {    doFindType(doTry.getFinallyClause().getOutputs(),type,found);  }  continue;} @AT@ 8121 @LENGTH@ 129
------------INS SingleVariableDeclaration@@CatchDefinition doCatch @TO@ EnhancedForStatement@@for (CatchDefinition doCatch : doTryCatch) {  doFindType(doCatch.getOutputs(),type,found);} @AT@ 8126 @LENGTH@ 23
---------------INS SimpleType@@CatchDefinition @TO@ SingleVariableDeclaration@@CatchDefinition doCatch @AT@ 8126 @LENGTH@ 15
---------------INS SimpleName@@doCatch @TO@ SingleVariableDeclaration@@CatchDefinition doCatch @AT@ 8142 @LENGTH@ 7
------------INS SimpleName@@doTryCatch @TO@ EnhancedForStatement@@for (CatchDefinition doCatch : doTryCatch) {  doFindType(doCatch.getOutputs(),type,found);} @AT@ 8152 @LENGTH@ 10
------------INS ExpressionStatement@@MethodInvocation:doFindType(doCatch.getOutputs(),type,found) @TO@ EnhancedForStatement@@for (CatchDefinition doCatch : doTryCatch) {  doFindType(doCatch.getOutputs(),type,found);} @AT@ 8186 @LENGTH@ 46
---------------INS MethodInvocation@@doFindType(doCatch.getOutputs(),type,found) @TO@ ExpressionStatement@@MethodInvocation:doFindType(doCatch.getOutputs(),type,found) @AT@ 8186 @LENGTH@ 45
------------------INS SimpleName@@MethodName:doFindType:[doCatch.getOutputs(), type, found] @TO@ MethodInvocation@@doFindType(doCatch.getOutputs(),type,found) @AT@ 8186 @LENGTH@ 45
---------------------INS MethodInvocation@@doCatch.getOutputs() @TO@ SimpleName@@MethodName:doFindType:[doCatch.getOutputs(), type, found] @AT@ 8197 @LENGTH@ 20
------------------------INS SimpleName@@Name:doCatch @TO@ MethodInvocation@@doCatch.getOutputs() @AT@ 8197 @LENGTH@ 7
------------------------INS SimpleName@@MethodName:getOutputs:[] @TO@ MethodInvocation@@doCatch.getOutputs() @AT@ 8205 @LENGTH@ 12
---------------------INS SimpleName@@type @TO@ SimpleName@@MethodName:doFindType:[doCatch.getOutputs(), type, found] @AT@ 8219 @LENGTH@ 4
---------------------INS SimpleName@@found @TO@ SimpleName@@MethodName:doFindType:[doCatch.getOutputs(), type, found] @AT@ 8225 @LENGTH@ 5
---------INS IfStatement@@if (doTry.getFinallyClause() != null) {  doFindType(doTry.getFinallyClause().getOutputs(),type,found);} @TO@ Block@@ThenBody:{  TryDefinition doTry=(TryDefinition)out;  List<ProcessorDefinition<?>> doTryOut=doTry.getOutputsWithoutCatches();  doFindType(doTryOut,type,found);  List<CatchDefinition> doTryCatch=doTry.getCatchClauses();  for (  CatchDefinition doCatch : doTryCatch) {    doFindType(doCatch.getOutputs(),type,found);  }  if (doTry.getFinallyClause() != null) {    doFindType(doTry.getFinallyClause().getOutputs(),type,found);  }  continue;} @AT@ 8268 @LENGTH@ 141
------------INS InfixExpression@@doTry.getFinallyClause() != null @TO@ IfStatement@@if (doTry.getFinallyClause() != null) {  doFindType(doTry.getFinallyClause().getOutputs(),type,found);} @AT@ 8272 @LENGTH@ 32
---------------INS MethodInvocation@@doTry.getFinallyClause() @TO@ InfixExpression@@doTry.getFinallyClause() != null @AT@ 8272 @LENGTH@ 24
------------------INS SimpleName@@Name:doTry @TO@ MethodInvocation@@doTry.getFinallyClause() @AT@ 8272 @LENGTH@ 5
------------------INS SimpleName@@MethodName:getFinallyClause:[] @TO@ MethodInvocation@@doTry.getFinallyClause() @AT@ 8278 @LENGTH@ 18
---------------INS Operator@@!= @TO@ InfixExpression@@doTry.getFinallyClause() != null @AT@ 8296 @LENGTH@ 2
---------------INS NullLiteral@@null @TO@ InfixExpression@@doTry.getFinallyClause() != null @AT@ 8300 @LENGTH@ 4
------------INS Block@@ThenBody:{  doFindType(doTry.getFinallyClause().getOutputs(),type,found);} @TO@ IfStatement@@if (doTry.getFinallyClause() != null) {  doFindType(doTry.getFinallyClause().getOutputs(),type,found);} @AT@ 8306 @LENGTH@ 103
---------------INS ExpressionStatement@@MethodInvocation:doFindType(doTry.getFinallyClause().getOutputs(),type,found) @TO@ Block@@ThenBody:{  doFindType(doTry.getFinallyClause().getOutputs(),type,found);} @AT@ 8328 @LENGTH@ 63
------------------INS MethodInvocation@@doFindType(doTry.getFinallyClause().getOutputs(),type,found) @TO@ ExpressionStatement@@MethodInvocation:doFindType(doTry.getFinallyClause().getOutputs(),type,found) @AT@ 8328 @LENGTH@ 62
---------------------INS SimpleName@@MethodName:doFindType:[doTry.getFinallyClause().getOutputs(), type, found] @TO@ MethodInvocation@@doFindType(doTry.getFinallyClause().getOutputs(),type,found) @AT@ 8328 @LENGTH@ 62
------------------------INS MethodInvocation@@doTry.getFinallyClause().getOutputs() @TO@ SimpleName@@MethodName:doFindType:[doTry.getFinallyClause().getOutputs(), type, found] @AT@ 8339 @LENGTH@ 37
---------------------------INS MethodInvocation@@MethodName:getFinallyClause:[] @TO@ MethodInvocation@@doTry.getFinallyClause().getOutputs() @AT@ 8339 @LENGTH@ 24
---------------------------INS SimpleName@@Name:doTry @TO@ MethodInvocation@@doTry.getFinallyClause().getOutputs() @AT@ 8339 @LENGTH@ 5
---------------------------INS SimpleName@@MethodName:getOutputs:[] @TO@ MethodInvocation@@doTry.getFinallyClause().getOutputs() @AT@ 8364 @LENGTH@ 12
------------------------INS SimpleName@@type @TO@ SimpleName@@MethodName:doFindType:[doTry.getFinallyClause().getOutputs(), type, found] @AT@ 8378 @LENGTH@ 4
------------------------INS SimpleName@@found @TO@ SimpleName@@MethodName:doFindType:[doTry.getFinallyClause().getOutputs(), type, found] @AT@ 8384 @LENGTH@ 5
---------INS ContinueStatement@@ @TO@ Block@@ThenBody:{  TryDefinition doTry=(TryDefinition)out;  List<ProcessorDefinition<?>> doTryOut=doTry.getOutputsWithoutCatches();  doFindType(doTryOut,type,found);  List<CatchDefinition> doTryCatch=doTry.getCatchClauses();  for (  CatchDefinition doCatch : doTryCatch) {    doFindType(doCatch.getOutputs(),type,found);  }  if (doTry.getFinallyClause() != null) {    doFindType(doTry.getFinallyClause().getOutputs(),type,found);  }  continue;} @AT@ 8491 @LENGTH@ 9


UPD ExpressionStatement@@MethodInvocation:System.out.println(war.toString(true)) @TO@ MethodInvocation:log.info(war.toString(true)) @AT@ 2508 @LENGTH@ 39
---UPD MethodInvocation@@System.out.println(war.toString(true)) @TO@ log.info(war.toString(true)) @AT@ 2508 @LENGTH@ 38
------DEL QualifiedName@@Name:System.out @AT@ 2508 @LENGTH@ 10
------INS SimpleName@@Name:log @TO@ MethodInvocation@@System.out.println(war.toString(true)) @AT@ 2508 @LENGTH@ 3
------UPD SimpleName@@MethodName:println:[war.toString(true)] @TO@ MethodName:info:[war.toString(true)] @AT@ 2519 @LENGTH@ 27


UPD EnhancedForStatement@@for (Session session : sso.findSessions()) {  WebLogger.WEB_SSO_LOGGER.tracef(" Invalidating session %s",session);synchronized (reverse) {    reverse.remove(session);  }  ClusteredSession<OutgoingDistributableSessionData> clusteredSession=(ClusteredSession<OutgoingDistributableSessionData>)session;  boolean notify=true;  boolean localCall=false;  boolean localOnly=true;  clusteredSession.expire(notify,localCall,localOnly,ClusteredSessionNotificationCause.INVALIDATE);} @TO@ for (Session session : sso.findSessions()) {  WebLogger.WEB_SSO_LOGGER.tracef(" Invalidating session %s",session);synchronized (reverse) {    reverse.remove(session);  }  if (session instanceof ClusteredSession) {    ClusteredSession<OutgoingDistributableSessionData> clusteredSession=(ClusteredSession<OutgoingDistributableSessionData>)session;    boolean notify=true;    boolean localCall=false;    boolean localOnly=true;    clusteredSession.expire(notify,localCall,localOnly,ClusteredSessionNotificationCause.INVALIDATE);  } else {    session.expire();  }} @AT@ 21254 @LENGTH@ 762
---INS IfStatement@@if (session instanceof ClusteredSession) {  ClusteredSession<OutgoingDistributableSessionData> clusteredSession=(ClusteredSession<OutgoingDistributableSessionData>)session;  boolean notify=true;  boolean localCall=false;  boolean localOnly=true;  clusteredSession.expire(notify,localCall,localOnly,ClusteredSessionNotificationCause.INVALIDATE);} else {  session.expire();} @TO@ EnhancedForStatement@@for (Session session : sso.findSessions()) {  WebLogger.WEB_SSO_LOGGER.tracef(" Invalidating session %s",session);synchronized (reverse) {    reverse.remove(session);  }  ClusteredSession<OutgoingDistributableSessionData> clusteredSession=(ClusteredSession<OutgoingDistributableSessionData>)session;  boolean notify=true;  boolean localCall=false;  boolean localOnly=true;  clusteredSession.expire(notify,localCall,localOnly,ClusteredSessionNotificationCause.INVALIDATE);} @AT@ 21550 @LENGTH@ 651
------INS InstanceofExpression@@session instanceof ClusteredSession @TO@ IfStatement@@if (session instanceof ClusteredSession) {  ClusteredSession<OutgoingDistributableSessionData> clusteredSession=(ClusteredSession<OutgoingDistributableSessionData>)session;  boolean notify=true;  boolean localCall=false;  boolean localOnly=true;  clusteredSession.expire(notify,localCall,localOnly,ClusteredSessionNotificationCause.INVALIDATE);} else {  session.expire();} @AT@ 21554 @LENGTH@ 35
---------INS SimpleName@@session @TO@ InstanceofExpression@@session instanceof ClusteredSession @AT@ 21554 @LENGTH@ 7
---------INS Instanceof@@instanceof @TO@ InstanceofExpression@@session instanceof ClusteredSession @AT@ 21562 @LENGTH@ 10
---------INS SimpleType@@ClusteredSession @TO@ InstanceofExpression@@session instanceof ClusteredSession @AT@ 21573 @LENGTH@ 16
------INS Block@@ThenBody:{  ClusteredSession<OutgoingDistributableSessionData> clusteredSession=(ClusteredSession<OutgoingDistributableSessionData>)session;  boolean notify=true;  boolean localCall=false;  boolean localOnly=true;  clusteredSession.expire(notify,localCall,localOnly,ClusteredSessionNotificationCause.INVALIDATE);} @TO@ IfStatement@@if (session instanceof ClusteredSession) {  ClusteredSession<OutgoingDistributableSessionData> clusteredSession=(ClusteredSession<OutgoingDistributableSessionData>)session;  boolean notify=true;  boolean localCall=false;  boolean localOnly=true;  clusteredSession.expire(notify,localCall,localOnly,ClusteredSessionNotificationCause.INVALIDATE);} else {  session.expire();} @AT@ 21591 @LENGTH@ 512
---------MOV VariableDeclarationStatement@@ClusteredSession<OutgoingDistributableSessionData> clusteredSession=(ClusteredSession<OutgoingDistributableSessionData>)session; @TO@ Block@@ThenBody:{  ClusteredSession<OutgoingDistributableSessionData> clusteredSession=(ClusteredSession<OutgoingDistributableSessionData>)session;  boolean notify=true;  boolean localCall=false;  boolean localOnly=true;  clusteredSession.expire(notify,localCall,localOnly,ClusteredSessionNotificationCause.INVALIDATE);} @AT@ 21626 @LENGTH@ 152
---------MOV VariableDeclarationStatement@@boolean notify=true; @TO@ Block@@ThenBody:{  ClusteredSession<OutgoingDistributableSessionData> clusteredSession=(ClusteredSession<OutgoingDistributableSessionData>)session;  boolean notify=true;  boolean localCall=false;  boolean localOnly=true;  clusteredSession.expire(notify,localCall,localOnly,ClusteredSessionNotificationCause.INVALIDATE);} @AT@ 21791 @LENGTH@ 23
---------MOV VariableDeclarationStatement@@boolean localCall=false; @TO@ Block@@ThenBody:{  ClusteredSession<OutgoingDistributableSessionData> clusteredSession=(ClusteredSession<OutgoingDistributableSessionData>)session;  boolean notify=true;  boolean localCall=false;  boolean localOnly=true;  clusteredSession.expire(notify,localCall,localOnly,ClusteredSessionNotificationCause.INVALIDATE);} @AT@ 21827 @LENGTH@ 27
---------MOV VariableDeclarationStatement@@boolean localOnly=true; @TO@ Block@@ThenBody:{  ClusteredSession<OutgoingDistributableSessionData> clusteredSession=(ClusteredSession<OutgoingDistributableSessionData>)session;  boolean notify=true;  boolean localCall=false;  boolean localOnly=true;  clusteredSession.expire(notify,localCall,localOnly,ClusteredSessionNotificationCause.INVALIDATE);} @AT@ 21867 @LENGTH@ 26
---------MOV ExpressionStatement@@MethodInvocation:clusteredSession.expire(notify,localCall,localOnly,ClusteredSessionNotificationCause.INVALIDATE) @TO@ Block@@ThenBody:{  ClusteredSession<OutgoingDistributableSessionData> clusteredSession=(ClusteredSession<OutgoingDistributableSessionData>)session;  boolean notify=true;  boolean localCall=false;  boolean localOnly=true;  clusteredSession.expire(notify,localCall,localOnly,ClusteredSessionNotificationCause.INVALIDATE);} @AT@ 21906 @LENGTH@ 100
------INS Block@@ElseBody:{  session.expire();} @TO@ IfStatement@@if (session instanceof ClusteredSession) {  ClusteredSession<OutgoingDistributableSessionData> clusteredSession=(ClusteredSession<OutgoingDistributableSessionData>)session;  boolean notify=true;  boolean localCall=false;  boolean localOnly=true;  clusteredSession.expire(notify,localCall,localOnly,ClusteredSessionNotificationCause.INVALIDATE);} else {  session.expire();} @AT@ 22109 @LENGTH@ 92
---------INS ExpressionStatement@@MethodInvocation:session.expire() @TO@ Block@@ElseBody:{  session.expire();} @AT@ 22170 @LENGTH@ 17
------------INS MethodInvocation@@session.expire() @TO@ ExpressionStatement@@MethodInvocation:session.expire() @AT@ 22170 @LENGTH@ 16
---------------INS SimpleName@@Name:session @TO@ MethodInvocation@@session.expire() @AT@ 22170 @LENGTH@ 7
---------------INS SimpleName@@MethodName:expire:[] @TO@ MethodInvocation@@session.expire() @AT@ 22178 @LENGTH@ 8


UPD TryStatement@@try {  VirtualFile child;  if (path.getPath().contains("!")) {    child=VFS.getChild(path.getPath().split("!")[0].split("file:")[1]);    closable=VFS.mountZip(new File(path.getPath().split("!")[0].split("file:")[1]),child,TempFileProviderService.provider());  } else {    child=VFS.getChild(path.getPath().split("META-INF")[0]);    closable=VFS.mountReal(new File(path.getPath().split("META-INF")[0]),child);  }  final MountHandle mountHandle=new MountHandle(closable);  final ResourceRoot resourceRoot=new ResourceRoot(child,mountHandle);  final VirtualFile deploymentRoot=resourceRoot.getRoot();  if (deploymentRoot == null || !deploymentRoot.exists())   return;  ConnectorXmlDescriptor connectorXmlDescriptor=RaDeploymentParsingProcessor.process(resolveProperties,deploymentRoot,null,deploymentName);  IronJacamarXmlDescriptor ironJacamarXmlDescriptor=IronJacamarDeploymentParsingProcessor.process(deploymentRoot,resolveProperties);  RaNativeProcessor.process(deploymentRoot);  Map<ResourceRoot,Index> annotationIndexes=new HashMap<ResourceRoot,Index>();  ResourceRootIndexer.indexResourceRoot(resourceRoot);  Index index=resourceRoot.getAttachment(Attachments.ANNOTATION_INDEX);  if (index != null) {    annotationIndexes.put(resourceRoot,index);  }  if (ironJacamarXmlDescriptor != null) {    ConnectorLogger.SUBSYSTEM_RA_LOGGER.forceIJToNull();    ironJacamarXmlDescriptor=null;  }  ServiceBuilder builder=ParsedRaDeploymentProcessor.process(connectorXmlDescriptor,ironJacamarXmlDescriptor,module.getClassLoader(),serviceTarget,annotationIndexes,RAR_MODULE.append(deploymentName));  builder.addDependency(raServiceName).setInitialMode(ServiceController.Mode.ACTIVE).install();  String rarName=resourceAdapter.getArchive();  Integer identifier=null;  if (rarName.contains(ConnectorServices.RA_SERVICE_NAME_SEPARATOR)) {    rarName=rarName.substring(0,rarName.indexOf(ConnectorServices.RA_SERVICE_NAME_SEPARATOR));  }  if (deploymentName.equals(rarName)) {    RaServicesFactory.createDeploymentService(connectorXmlDescriptor,module,serviceTarget,deploymentName,RAR_MODULE.append(deploymentName),resourceAdapter);  }} catch (Exception e) {  throw new OperationFailedException(MESSAGES.failedToLoadModuleRA(moduleName),e);} finally {  if (closable != null) {    try {      closable.close();    } catch (    IOException e) {    }  }} @TO@ try {  VirtualFile child;  if (path.getPath().contains("!")) {    child=VFS.getChild(path.getPath().split("!")[0].split("file:")[1]);    closable=VFS.mountZip(new File(path.getPath().split("!")[0].split("file:")[1]),child,TempFileProviderService.provider());  } else {    child=VFS.getChild(path.getPath().split("META-INF")[0]);    closable=VFS.mountReal(new File(path.getPath().split("META-INF")[0]),child);  }  final MountHandle mountHandle=new MountHandle(closable);  final ResourceRoot resourceRoot=new ResourceRoot(child,mountHandle);  final VirtualFile deploymentRoot=resourceRoot.getRoot();  if (deploymentRoot == null || !deploymentRoot.exists())   return;  ConnectorXmlDescriptor connectorXmlDescriptor=RaDeploymentParsingProcessor.process(resolveProperties,deploymentRoot,null,deploymentName);  IronJacamarXmlDescriptor ironJacamarXmlDescriptor=IronJacamarDeploymentParsingProcessor.process(deploymentRoot,resolveProperties);  RaNativeProcessor.process(deploymentRoot);  Map<ResourceRoot,Index> annotationIndexes=new HashMap<ResourceRoot,Index>();  ResourceRootIndexer.indexResourceRoot(resourceRoot);  Index index=resourceRoot.getAttachment(Attachments.ANNOTATION_INDEX);  if (index != null) {    annotationIndexes.put(resourceRoot,index);  }  if (ironJacamarXmlDescriptor != null) {    ConnectorLogger.SUBSYSTEM_RA_LOGGER.forceIJToNull();    ironJacamarXmlDescriptor=null;  }  ServiceBuilder builder=ParsedRaDeploymentProcessor.process(connectorXmlDescriptor,ironJacamarXmlDescriptor,module.getClassLoader(),serviceTarget,annotationIndexes,RAR_MODULE.append(deploymentName),verificationHandler);  builder.addDependency(raServiceName).setInitialMode(ServiceController.Mode.ACTIVE).install();  String rarName=resourceAdapter.getArchive();  Integer identifier=null;  if (rarName.contains(ConnectorServices.RA_SERVICE_NAME_SEPARATOR)) {    rarName=rarName.substring(0,rarName.indexOf(ConnectorServices.RA_SERVICE_NAME_SEPARATOR));  }  if (deploymentName.equals(rarName)) {    RaServicesFactory.createDeploymentService(connectorXmlDescriptor,module,serviceTarget,deploymentName,RAR_MODULE.append(deploymentName),resourceAdapter,verificationHandler);  }} catch (Exception e) {  throw new OperationFailedException(MESSAGES.failedToLoadModuleRA(moduleName),e);} finally {  if (closable != null) {    try {      closable.close();    } catch (    IOException e) {    }  }} @AT@ 23231 @LENGTH@ 3353
---UPD VariableDeclarationStatement@@ServiceBuilder builder=ParsedRaDeploymentProcessor.process(connectorXmlDescriptor,ironJacamarXmlDescriptor,module.getClassLoader(),serviceTarget,annotationIndexes,RAR_MODULE.append(deploymentName)); @TO@ ServiceBuilder builder=ParsedRaDeploymentProcessor.process(connectorXmlDescriptor,ironJacamarXmlDescriptor,module.getClassLoader(),serviceTarget,annotationIndexes,RAR_MODULE.append(deploymentName),verificationHandler); @AT@ 25326 @LENGTH@ 205
------UPD VariableDeclarationFragment@@builder=ParsedRaDeploymentProcessor.process(connectorXmlDescriptor,ironJacamarXmlDescriptor,module.getClassLoader(),serviceTarget,annotationIndexes,RAR_MODULE.append(deploymentName)) @TO@ builder=ParsedRaDeploymentProcessor.process(connectorXmlDescriptor,ironJacamarXmlDescriptor,module.getClassLoader(),serviceTarget,annotationIndexes,RAR_MODULE.append(deploymentName),verificationHandler) @AT@ 25341 @LENGTH@ 189
---------UPD MethodInvocation@@ParsedRaDeploymentProcessor.process(connectorXmlDescriptor,ironJacamarXmlDescriptor,module.getClassLoader(),serviceTarget,annotationIndexes,RAR_MODULE.append(deploymentName)) @TO@ ParsedRaDeploymentProcessor.process(connectorXmlDescriptor,ironJacamarXmlDescriptor,module.getClassLoader(),serviceTarget,annotationIndexes,RAR_MODULE.append(deploymentName),verificationHandler) @AT@ 25351 @LENGTH@ 179
------------UPD SimpleName@@MethodName:process:[connectorXmlDescriptor, ironJacamarXmlDescriptor, module.getClassLoader(), serviceTarget, annotationIndexes, RAR_MODULE.append(deploymentName)] @TO@ MethodName:process:[connectorXmlDescriptor, ironJacamarXmlDescriptor, module.getClassLoader(), serviceTarget, annotationIndexes, RAR_MODULE.append(deploymentName), verificationHandler] @AT@ 25379 @LENGTH@ 151
---------------INS SimpleName@@verificationHandler @TO@ SimpleName@@MethodName:process:[connectorXmlDescriptor, ironJacamarXmlDescriptor, module.getClassLoader(), serviceTarget, annotationIndexes, RAR_MODULE.append(deploymentName)] @AT@ 25620 @LENGTH@ 19
---UPD IfStatement@@if (deploymentName.equals(rarName)) {  RaServicesFactory.createDeploymentService(connectorXmlDescriptor,module,serviceTarget,deploymentName,RAR_MODULE.append(deploymentName),resourceAdapter);} @TO@ if (deploymentName.equals(rarName)) {  RaServicesFactory.createDeploymentService(connectorXmlDescriptor,module,serviceTarget,deploymentName,RAR_MODULE.append(deploymentName),resourceAdapter,verificationHandler);} @AT@ 25981 @LENGTH@ 235
------UPD Block@@ThenBody:{  RaServicesFactory.createDeploymentService(connectorXmlDescriptor,module,serviceTarget,deploymentName,RAR_MODULE.append(deploymentName),resourceAdapter);} @TO@ ThenBody:{  RaServicesFactory.createDeploymentService(connectorXmlDescriptor,module,serviceTarget,deploymentName,RAR_MODULE.append(deploymentName),resourceAdapter,verificationHandler);} @AT@ 26017 @LENGTH@ 199
---------UPD ExpressionStatement@@MethodInvocation:RaServicesFactory.createDeploymentService(connectorXmlDescriptor,module,serviceTarget,deploymentName,RAR_MODULE.append(deploymentName),resourceAdapter) @TO@ MethodInvocation:RaServicesFactory.createDeploymentService(connectorXmlDescriptor,module,serviceTarget,deploymentName,RAR_MODULE.append(deploymentName),resourceAdapter,verificationHandler) @AT@ 26039 @LENGTH@ 157
------------UPD MethodInvocation@@RaServicesFactory.createDeploymentService(connectorXmlDescriptor,module,serviceTarget,deploymentName,RAR_MODULE.append(deploymentName),resourceAdapter) @TO@ RaServicesFactory.createDeploymentService(connectorXmlDescriptor,module,serviceTarget,deploymentName,RAR_MODULE.append(deploymentName),resourceAdapter,verificationHandler) @AT@ 26039 @LENGTH@ 156
---------------UPD SimpleName@@MethodName:createDeploymentService:[connectorXmlDescriptor, module, serviceTarget, deploymentName, RAR_MODULE.append(deploymentName), resourceAdapter] @TO@ MethodName:createDeploymentService:[connectorXmlDescriptor, module, serviceTarget, deploymentName, RAR_MODULE.append(deploymentName), resourceAdapter, verificationHandler] @AT@ 26057 @LENGTH@ 138
------------------INS SimpleName@@verificationHandler @TO@ SimpleName@@MethodName:createDeploymentService:[connectorXmlDescriptor, module, serviceTarget, deploymentName, RAR_MODULE.append(deploymentName), resourceAdapter] @AT@ 26306 @LENGTH@ 19


UPD IfStatement@@if (trimmed != null) {  node=new ModelNode().set(trimmed);} else {  node=new ModelNode();} @TO@ if (isAllowExpression()) {  node=ParseUtils.parsePossibleExpression(trimmed);} else {  node=new ModelNode().set(trimmed);} @AT@ 13923 @LENGTH@ 135


INS IfStatement@@if (zrange == null) {  return null;} @TO@ MethodDeclaration@@static, Set<Tuple>, MethodName:convertTuple, List<ScoredValue<byte[]>> zrange,  @AT@ 3031 @LENGTH@ 40
---INS InfixExpression@@zrange == null @TO@ IfStatement@@if (zrange == null) {  return null;} @AT@ 3034 @LENGTH@ 14
------INS SimpleName@@zrange @TO@ InfixExpression@@zrange == null @AT@ 3034 @LENGTH@ 6
------INS Operator@@== @TO@ InfixExpression@@zrange == null @AT@ 3040 @LENGTH@ 2
------INS NullLiteral@@null @TO@ InfixExpression@@zrange == null @AT@ 3044 @LENGTH@ 4
---INS Block@@ThenBody:{  return null;} @TO@ IfStatement@@if (zrange == null) {  return null;} @AT@ 3050 @LENGTH@ 21
------INS ReturnStatement@@NullLiteral:null @TO@ Block@@ThenBody:{  return null;} @AT@ 3055 @LENGTH@ 12
---------INS NullLiteral@@null @TO@ ReturnStatement@@NullLiteral:null @AT@ 3062 @LENGTH@ 4


INS MethodDeclaration@@TransformersSubRegistration, MethodName:registerSubResource, PathElement element, CombinedTransformer transformer,  @TO@ TypeDeclaration@@[public]TransformersSubRegistration,  @AT@ 3448 @LENGTH@ 74
---INS SimpleType@@TransformersSubRegistration @TO@ MethodDeclaration@@TransformersSubRegistration, MethodName:registerSubResource, PathElement element, CombinedTransformer transformer,  @AT@ 3420 @LENGTH@ 27
---INS SimpleName@@MethodName:registerSubResource @TO@ MethodDeclaration@@TransformersSubRegistration, MethodName:registerSubResource, PathElement element, CombinedTransformer transformer,  @AT@ 3448 @LENGTH@ 19
---INS SingleVariableDeclaration@@PathElement element @TO@ MethodDeclaration@@TransformersSubRegistration, MethodName:registerSubResource, PathElement element, CombinedTransformer transformer,  @AT@ 3468 @LENGTH@ 19
------INS SimpleType@@PathElement @TO@ SingleVariableDeclaration@@PathElement element @AT@ 3468 @LENGTH@ 11
------INS SimpleName@@element @TO@ SingleVariableDeclaration@@PathElement element @AT@ 3480 @LENGTH@ 7
---INS SingleVariableDeclaration@@CombinedTransformer transformer @TO@ MethodDeclaration@@TransformersSubRegistration, MethodName:registerSubResource, PathElement element, CombinedTransformer transformer,  @AT@ 3489 @LENGTH@ 31
------INS SimpleType@@CombinedTransformer @TO@ SingleVariableDeclaration@@CombinedTransformer transformer @AT@ 3489 @LENGTH@ 19
------INS SimpleName@@transformer @TO@ SingleVariableDeclaration@@CombinedTransformer transformer @AT@ 3509 @LENGTH@ 11


UPD SwitchStatement@@switch (c) {case 'r':  return CR;case 'n':return LF;case 't':return TAB;case 'b':return BACKSPACE;case 'f':return FF;case END_OF_STREAM:throw new IOException("EOF whilst processing escape sequence");default :return c;} @TO@ switch (c) {case 'r':  return CR;case 'n':return LF;case 't':return TAB;case 'b':return BACKSPACE;case 'f':return FF;case CR:case LF:case FF:case TAB:case BACKSPACE:return c;case END_OF_STREAM:throw new IOException("EOF whilst processing escape sequence");default :if (isDelimiter(c) || isEscape(c) || isQuoteChar(c)|| isCommentStart(c)) {return c;}return END_OF_STREAM;} @AT@ 2980 @LENGTH@ 378
---DEL ReturnStatement@@SimpleName:c @AT@ 3339 @LENGTH@ 9
---INS SwitchCase@@case CR: @TO@ SwitchStatement@@switch (c) {case 'r':  return CR;case 'n':return LF;case 't':return TAB;case 'b':return BACKSPACE;case 'f':return FF;case END_OF_STREAM:throw new IOException("EOF whilst processing escape sequence");default :return c;} @AT@ 3752 @LENGTH@ 8
------INS SimpleName@@CR @TO@ SwitchCase@@case CR: @AT@ 3757 @LENGTH@ 2
---INS SwitchCase@@case LF: @TO@ SwitchStatement@@switch (c) {case 'r':  return CR;case 'n':return LF;case 't':return TAB;case 'b':return BACKSPACE;case 'f':return FF;case END_OF_STREAM:throw new IOException("EOF whilst processing escape sequence");default :return c;} @AT@ 3769 @LENGTH@ 8
------INS SimpleName@@LF @TO@ SwitchCase@@case LF: @AT@ 3774 @LENGTH@ 2
---INS SwitchCase@@case FF: @TO@ SwitchStatement@@switch (c) {case 'r':  return CR;case 'n':return LF;case 't':return TAB;case 'b':return BACKSPACE;case 'f':return FF;case END_OF_STREAM:throw new IOException("EOF whilst processing escape sequence");default :return c;} @AT@ 3786 @LENGTH@ 8
------INS SimpleName@@FF @TO@ SwitchCase@@case FF: @AT@ 3791 @LENGTH@ 2
---INS SwitchCase@@case TAB: @TO@ SwitchStatement@@switch (c) {case 'r':  return CR;case 'n':return LF;case 't':return TAB;case 'b':return BACKSPACE;case 'f':return FF;case END_OF_STREAM:throw new IOException("EOF whilst processing escape sequence");default :return c;} @AT@ 3828 @LENGTH@ 9
------INS SimpleName@@TAB @TO@ SwitchCase@@case TAB: @AT@ 3833 @LENGTH@ 3
---INS SwitchCase@@case BACKSPACE: @TO@ SwitchStatement@@switch (c) {case 'r':  return CR;case 'n':return LF;case 't':return TAB;case 'b':return BACKSPACE;case 'f':return FF;case END_OF_STREAM:throw new IOException("EOF whilst processing escape sequence");default :return c;} @AT@ 3899 @LENGTH@ 15
------INS SimpleName@@BACKSPACE @TO@ SwitchCase@@case BACKSPACE: @AT@ 3904 @LENGTH@ 9
---INS ReturnStatement@@SimpleName:c @TO@ SwitchStatement@@switch (c) {case 'r':  return CR;case 'n':return LF;case 't':return TAB;case 'b':return BACKSPACE;case 'f':return FF;case END_OF_STREAM:throw new IOException("EOF whilst processing escape sequence");default :return c;} @AT@ 3952 @LENGTH@ 9
------INS SimpleName@@c @TO@ ReturnStatement@@SimpleName:c @AT@ 3959 @LENGTH@ 1
---INS IfStatement@@if (isDelimiter(c) || isEscape(c) || isQuoteChar(c)|| isCommentStart(c)) {  return c;} @TO@ SwitchStatement@@switch (c) {case 'r':  return CR;case 'n':return LF;case 't':return TAB;case 'b':return BACKSPACE;case 'f':return FF;case END_OF_STREAM:throw new IOException("EOF whilst processing escape sequence");default :return c;} @AT@ 4140 @LENGTH@ 115
------INS InfixExpression@@isDelimiter(c) || isEscape(c) || isQuoteChar(c)|| isCommentStart(c) @TO@ IfStatement@@if (isDelimiter(c) || isEscape(c) || isQuoteChar(c)|| isCommentStart(c)) {  return c;} @AT@ 4144 @LENGTH@ 68
---------INS MethodInvocation@@isDelimiter(c) @TO@ InfixExpression@@isDelimiter(c) || isEscape(c) || isQuoteChar(c)|| isCommentStart(c) @AT@ 4144 @LENGTH@ 14
------------INS SimpleName@@MethodName:isDelimiter:[c] @TO@ MethodInvocation@@isDelimiter(c) @AT@ 4144 @LENGTH@ 14
---------------INS SimpleName@@c @TO@ SimpleName@@MethodName:isDelimiter:[c] @AT@ 4156 @LENGTH@ 1
---------INS Operator@@|| @TO@ InfixExpression@@isDelimiter(c) || isEscape(c) || isQuoteChar(c)|| isCommentStart(c) @AT@ 4158 @LENGTH@ 2
---------INS MethodInvocation@@isEscape(c) @TO@ InfixExpression@@isDelimiter(c) || isEscape(c) || isQuoteChar(c)|| isCommentStart(c) @AT@ 4162 @LENGTH@ 11
------------INS SimpleName@@MethodName:isEscape:[c] @TO@ MethodInvocation@@isEscape(c) @AT@ 4162 @LENGTH@ 11
---------------INS SimpleName@@c @TO@ SimpleName@@MethodName:isEscape:[c] @AT@ 4171 @LENGTH@ 1
---------INS MethodInvocation@@isQuoteChar(c) @TO@ InfixExpression@@isDelimiter(c) || isEscape(c) || isQuoteChar(c)|| isCommentStart(c) @AT@ 4177 @LENGTH@ 14
------------INS SimpleName@@MethodName:isQuoteChar:[c] @TO@ MethodInvocation@@isQuoteChar(c) @AT@ 4177 @LENGTH@ 14
---------------INS SimpleName@@c @TO@ SimpleName@@MethodName:isQuoteChar:[c] @AT@ 4189 @LENGTH@ 1
---------INS MethodInvocation@@isCommentStart(c) @TO@ InfixExpression@@isDelimiter(c) || isEscape(c) || isQuoteChar(c)|| isCommentStart(c) @AT@ 4195 @LENGTH@ 17
------------INS SimpleName@@MethodName:isCommentStart:[c] @TO@ MethodInvocation@@isCommentStart(c) @AT@ 4195 @LENGTH@ 17
---------------INS SimpleName@@c @TO@ SimpleName@@MethodName:isCommentStart:[c] @AT@ 4210 @LENGTH@ 1
------INS Block@@ThenBody:{  return c;} @TO@ IfStatement@@if (isDelimiter(c) || isEscape(c) || isQuoteChar(c)|| isCommentStart(c)) {  return c;} @AT@ 4214 @LENGTH@ 41
---------INS ReturnStatement@@SimpleName:c @TO@ Block@@ThenBody:{  return c;} @AT@ 4232 @LENGTH@ 9
------------MOV SimpleName@@c @TO@ ReturnStatement@@SimpleName:c @AT@ 3346 @LENGTH@ 1
---INS ReturnStatement@@SimpleName:END_OF_STREAM @TO@ SwitchStatement@@switch (c) {case 'r':  return CR;case 'n':return LF;case 't':return TAB;case 'b':return BACKSPACE;case 'f':return FF;case END_OF_STREAM:throw new IOException("EOF whilst processing escape sequence");default :return c;} @AT@ 4342 @LENGTH@ 21
------INS SimpleName@@END_OF_STREAM @TO@ ReturnStatement@@SimpleName:END_OF_STREAM @AT@ 4349 @LENGTH@ 13


MOV ExpressionStatement@@MethodInvocation:template.sendBody("direct:start","<order><type>myType</type><user>Func</user></order>") @TO@ MethodDeclaration@@public, void, MethodName:testFunctionalError, Exception,  @AT@ 2010 @LENGTH@ 89


UPD ExpressionStatement@@MethodInvocation:assertEquals("text/html",connection.getHeaderField("Content-Type")) @TO@ MethodInvocation:assertEquals("text/html;utf-8",connection.getHeaderField("Content-Type")) @AT@ 4256 @LENGTH@ 69
---UPD MethodInvocation@@assertEquals("text/html",connection.getHeaderField("Content-Type")) @TO@ assertEquals("text/html;utf-8",connection.getHeaderField("Content-Type")) @AT@ 4256 @LENGTH@ 68
------UPD SimpleName@@MethodName:assertEquals:["text/html", connection.getHeaderField("Content-Type")] @TO@ MethodName:assertEquals:["text/html;utf-8", connection.getHeaderField("Content-Type")] @AT@ 4256 @LENGTH@ 68
---------UPD StringLiteral@@"text/html" @TO@ "text/html;utf-8" @AT@ 4269 @LENGTH@ 11


UPD ExpressionStatement@@MethodInvocation:jar.addAsManifestResource(SB_TO_TEST.getPackage(),"jboss-ejb3.xml","jboss-ejb3.xml") @TO@ MethodInvocation:jar.addAsManifestResource(AnnSBTest.class.getPackage(),"jboss-ejb3.xml","jboss-ejb3.xml") @AT@ 3871 @LENGTH@ 87
---UPD MethodInvocation@@jar.addAsManifestResource(SB_TO_TEST.getPackage(),"jboss-ejb3.xml","jboss-ejb3.xml") @TO@ jar.addAsManifestResource(AnnSBTest.class.getPackage(),"jboss-ejb3.xml","jboss-ejb3.xml") @AT@ 3871 @LENGTH@ 86
------UPD SimpleName@@MethodName:addAsManifestResource:[SB_TO_TEST.getPackage(), "jboss-ejb3.xml", "jboss-ejb3.xml"] @TO@ MethodName:addAsManifestResource:[AnnSBTest.class.getPackage(), "jboss-ejb3.xml", "jboss-ejb3.xml"] @AT@ 3875 @LENGTH@ 82
---------UPD MethodInvocation@@SB_TO_TEST.getPackage() @TO@ AnnSBTest.class.getPackage() @AT@ 3897 @LENGTH@ 23
------------INS TypeLiteral@@AnnSBTest.class @TO@ MethodInvocation@@SB_TO_TEST.getPackage() @AT@ 3897 @LENGTH@ 15
------------DEL SimpleName@@Name:SB_TO_TEST @AT@ 3897 @LENGTH@ 10


UPD FieldDeclaration@@private, static, final, Logger, [LOGGER=Logger.getLogger(RequestProcessor.class.getName())] @TO@ private, static, final, Logger, [LOGGER=LoggerFactory.getLogger(RequestProcessor.class)] @AT@ 1114 @LENGTH@ 88
---UPD VariableDeclarationFragment@@LOGGER=Logger.getLogger(RequestProcessor.class.getName()) @TO@ LOGGER=LoggerFactory.getLogger(RequestProcessor.class) @AT@ 1142 @LENGTH@ 59
------UPD MethodInvocation@@Logger.getLogger(RequestProcessor.class.getName()) @TO@ LoggerFactory.getLogger(RequestProcessor.class) @AT@ 1151 @LENGTH@ 50
---------UPD SimpleName@@Name:Logger @TO@ Name:LoggerFactory @AT@ 1151 @LENGTH@ 6
---------UPD SimpleName@@MethodName:getLogger:[RequestProcessor.class.getName()] @TO@ MethodName:getLogger:[RequestProcessor.class] @AT@ 1158 @LENGTH@ 43
------------DEL MethodInvocation@@RequestProcessor.class.getName() @AT@ 1168 @LENGTH@ 32
---------------DEL TypeLiteral@@RequestProcessor.class @AT@ 1168 @LENGTH@ 22
---------------DEL SimpleName@@MethodName:getName:[] @AT@ 1191 @LENGTH@ 9
------------INS TypeLiteral@@RequestProcessor.class @TO@ SimpleName@@MethodName:getLogger:[RequestProcessor.class.getName()] @AT@ 1198 @LENGTH@ 22


UPD EnhancedForStatement@@for (Property sysprop : sysPropRoot.get(SYSTEM_PROPERTY).asPropertyList()) {  ModelNode bootTime;  if (sysprop.getValue().hasDefined(BOOT_TIME) && (bootTime=sysprop.getValue().get(BOOT_TIME)).getType() == ModelType.STRING) {    sysPropRoot.get(SYSTEM_PROPERTY,sysprop.getName(),BOOT_TIME).set(bootTime.asBoolean());  }} @TO@ for (Property sysprop : sysPropRoot.get(SYSTEM_PROPERTY).asPropertyList()) {  ModelNode bootTime;} @AT@ 9469 @LENGTH@ 488
---DEL IfStatement@@if (sysprop.getValue().hasDefined(BOOT_TIME) && (bootTime=sysprop.getValue().get(BOOT_TIME)).getType() == ModelType.STRING) {  sysPropRoot.get(SYSTEM_PROPERTY,sysprop.getName(),BOOT_TIME).set(bootTime.asBoolean());} @AT@ 9614 @LENGTH@ 321
------DEL InfixExpression@@sysprop.getValue().hasDefined(BOOT_TIME) && (bootTime=sysprop.getValue().get(BOOT_TIME)).getType() == ModelType.STRING @AT@ 9618 @LENGTH@ 120
---------DEL MethodInvocation@@sysprop.getValue().hasDefined(BOOT_TIME) @AT@ 9618 @LENGTH@ 40
------------DEL MethodInvocation@@MethodName:getValue:[] @AT@ 9618 @LENGTH@ 18
------------DEL SimpleName@@Name:sysprop @AT@ 9618 @LENGTH@ 7
------------DEL SimpleName@@MethodName:hasDefined:[BOOT_TIME] @AT@ 9637 @LENGTH@ 21
---------------DEL SimpleName@@BOOT_TIME @AT@ 9648 @LENGTH@ 9
---------DEL Operator@@&& @AT@ 9658 @LENGTH@ 2
---------DEL InfixExpression@@(bootTime=sysprop.getValue().get(BOOT_TIME)).getType() == ModelType.STRING @AT@ 9662 @LENGTH@ 76
------------DEL MethodInvocation@@(bootTime=sysprop.getValue().get(BOOT_TIME)).getType() @AT@ 9662 @LENGTH@ 56
---------------DEL ParenthesizedExpression@@(bootTime=sysprop.getValue().get(BOOT_TIME)) @AT@ 9662 @LENGTH@ 46
------------------DEL Assignment@@bootTime=sysprop.getValue().get(BOOT_TIME) @AT@ 9663 @LENGTH@ 44
---------------------DEL SimpleName@@bootTime @AT@ 9663 @LENGTH@ 8
---------------------DEL Operator@@= @AT@ 9671 @LENGTH@ 1
---------------------DEL MethodInvocation@@sysprop.getValue().get(BOOT_TIME) @AT@ 9674 @LENGTH@ 33
------------------------DEL MethodInvocation@@MethodName:getValue:[] @AT@ 9674 @LENGTH@ 18
------------------------DEL SimpleName@@Name:sysprop @AT@ 9674 @LENGTH@ 7
------------------------DEL SimpleName@@MethodName:get:[BOOT_TIME] @AT@ 9693 @LENGTH@ 14
---------------------------DEL SimpleName@@BOOT_TIME @AT@ 9697 @LENGTH@ 9
---------------DEL SimpleName@@MethodName:getType:[] @AT@ 9709 @LENGTH@ 9
------------DEL Operator@@== @AT@ 9718 @LENGTH@ 2
------------DEL QualifiedName@@ModelType.STRING @AT@ 9722 @LENGTH@ 16
---------------DEL SimpleName@@ModelType @AT@ 9722 @LENGTH@ 9
---------------DEL SimpleName@@STRING @AT@ 9732 @LENGTH@ 6
------DEL Block@@ThenBody:{  sysPropRoot.get(SYSTEM_PROPERTY,sysprop.getName(),BOOT_TIME).set(bootTime.asBoolean());} @AT@ 9740 @LENGTH@ 195
---------DEL ExpressionStatement@@MethodInvocation:sysPropRoot.get(SYSTEM_PROPERTY,sysprop.getName(),BOOT_TIME).set(bootTime.asBoolean()) @AT@ 9820 @LENGTH@ 89
------------DEL MethodInvocation@@sysPropRoot.get(SYSTEM_PROPERTY,sysprop.getName(),BOOT_TIME).set(bootTime.asBoolean()) @AT@ 9820 @LENGTH@ 88
---------------DEL MethodInvocation@@MethodName:get:[SYSTEM_PROPERTY, sysprop.getName(), BOOT_TIME] @AT@ 9820 @LENGTH@ 62
------------------DEL SimpleName@@SYSTEM_PROPERTY @AT@ 9836 @LENGTH@ 15
------------------DEL MethodInvocation@@sysprop.getName() @AT@ 9853 @LENGTH@ 17
---------------------DEL SimpleName@@Name:sysprop @AT@ 9853 @LENGTH@ 7
---------------------DEL SimpleName@@MethodName:getName:[] @AT@ 9861 @LENGTH@ 9
------------------DEL SimpleName@@BOOT_TIME @AT@ 9872 @LENGTH@ 9
---------------DEL SimpleName@@Name:sysPropRoot @AT@ 9820 @LENGTH@ 11
---------------DEL SimpleName@@MethodName:set:[bootTime.asBoolean()] @AT@ 9883 @LENGTH@ 25
------------------DEL MethodInvocation@@bootTime.asBoolean() @AT@ 9887 @LENGTH@ 20
---------------------DEL SimpleName@@Name:bootTime @AT@ 9887 @LENGTH@ 8
---------------------DEL SimpleName@@MethodName:asBoolean:[] @AT@ 9896 @LENGTH@ 11


UPD MethodDeclaration@@public, Lock, MethodName:getLock, IZKClient zooKeeper, String path,  @TO@ public, synchronized, Lock, MethodName:getLock, IZKClient zooKeeper, String path,  @AT@ 902 @LENGTH@ 107
---DEL ReturnStatement@@ClassInstanceCreation:new LockImpl(zooKeeper,path) @AT@ 966 @LENGTH@ 37
------DEL ClassInstanceCreation@@LockImpl[zooKeeper, path] @AT@ 973 @LENGTH@ 29
---INS Modifier@@synchronized @TO@ MethodDeclaration@@public, Lock, MethodName:getLock, IZKClient zooKeeper, String path,  @AT@ 1032 @LENGTH@ 12
---INS IfStatement@@if (locks.containsKey(path)) {  return locks.get(path);} else {  locks.put(path,new LockImpl(zooKeeper,path));  return locks.get(path);} @TO@ MethodDeclaration@@public, Lock, MethodName:getLock, IZKClient zooKeeper, String path,  @AT@ 1102 @LENGTH@ 189
------INS MethodInvocation@@locks.containsKey(path) @TO@ IfStatement@@if (locks.containsKey(path)) {  return locks.get(path);} else {  locks.put(path,new LockImpl(zooKeeper,path));  return locks.get(path);} @AT@ 1106 @LENGTH@ 23
---------INS SimpleName@@Name:locks @TO@ MethodInvocation@@locks.containsKey(path) @AT@ 1106 @LENGTH@ 5
---------INS SimpleName@@MethodName:containsKey:[path] @TO@ MethodInvocation@@locks.containsKey(path) @AT@ 1112 @LENGTH@ 17
------------INS SimpleName@@path @TO@ SimpleName@@MethodName:containsKey:[path] @AT@ 1124 @LENGTH@ 4
------INS Block@@ThenBody:{  return locks.get(path);} @TO@ IfStatement@@if (locks.containsKey(path)) {  return locks.get(path);} else {  locks.put(path,new LockImpl(zooKeeper,path));  return locks.get(path);} @AT@ 1131 @LENGTH@ 47
---------INS ReturnStatement@@MethodInvocation:locks.get(path) @TO@ Block@@ThenBody:{  return locks.get(path);} @AT@ 1145 @LENGTH@ 23
------------INS MethodInvocation@@locks.get(path) @TO@ ReturnStatement@@MethodInvocation:locks.get(path) @AT@ 1152 @LENGTH@ 15
---------------INS SimpleName@@Name:locks @TO@ MethodInvocation@@locks.get(path) @AT@ 1152 @LENGTH@ 5
---------------INS SimpleName@@MethodName:get:[path] @TO@ MethodInvocation@@locks.get(path) @AT@ 1158 @LENGTH@ 9
------------------INS SimpleName@@path @TO@ SimpleName@@MethodName:get:[path] @AT@ 1162 @LENGTH@ 4
------INS Block@@ElseBody:{  locks.put(path,new LockImpl(zooKeeper,path));  return locks.get(path);} @TO@ IfStatement@@if (locks.containsKey(path)) {  return locks.get(path);} else {  locks.put(path,new LockImpl(zooKeeper,path));  return locks.get(path);} @AT@ 1184 @LENGTH@ 107
---------INS ExpressionStatement@@MethodInvocation:locks.put(path,new LockImpl(zooKeeper,path)) @TO@ Block@@ElseBody:{  locks.put(path,new LockImpl(zooKeeper,path));  return locks.get(path);} @AT@ 1198 @LENGTH@ 47
------------INS MethodInvocation@@locks.put(path,new LockImpl(zooKeeper,path)) @TO@ ExpressionStatement@@MethodInvocation:locks.put(path,new LockImpl(zooKeeper,path)) @AT@ 1198 @LENGTH@ 46
---------------INS SimpleName@@Name:locks @TO@ MethodInvocation@@locks.put(path,new LockImpl(zooKeeper,path)) @AT@ 1198 @LENGTH@ 5
---------------INS SimpleName@@MethodName:put:[path, new LockImpl(zooKeeper,path)] @TO@ MethodInvocation@@locks.put(path,new LockImpl(zooKeeper,path)) @AT@ 1204 @LENGTH@ 40
------------------INS SimpleName@@path @TO@ SimpleName@@MethodName:put:[path, new LockImpl(zooKeeper,path)] @AT@ 1208 @LENGTH@ 4
------------------INS ClassInstanceCreation@@LockImpl[zooKeeper, path] @TO@ SimpleName@@MethodName:put:[path, new LockImpl(zooKeeper,path)] @AT@ 1214 @LENGTH@ 29
---------------------MOV New@@new @TO@ ClassInstanceCreation@@LockImpl[zooKeeper, path] @AT@ 973 @LENGTH@ 3
---------------------MOV SimpleType@@LockImpl @TO@ ClassInstanceCreation@@LockImpl[zooKeeper, path] @AT@ 977 @LENGTH@ 8
---------------------MOV SimpleName@@zooKeeper @TO@ ClassInstanceCreation@@LockImpl[zooKeeper, path] @AT@ 986 @LENGTH@ 9
---------------------MOV SimpleName@@path @TO@ ClassInstanceCreation@@LockImpl[zooKeeper, path] @AT@ 997 @LENGTH@ 4
---------INS ReturnStatement@@MethodInvocation:locks.get(path) @TO@ Block@@ElseBody:{  locks.put(path,new LockImpl(zooKeeper,path));  return locks.get(path);} @AT@ 1258 @LENGTH@ 23
------------INS MethodInvocation@@locks.get(path) @TO@ ReturnStatement@@MethodInvocation:locks.get(path) @AT@ 1265 @LENGTH@ 15
---------------INS SimpleName@@Name:locks @TO@ MethodInvocation@@locks.get(path) @AT@ 1265 @LENGTH@ 5
---------------INS SimpleName@@MethodName:get:[path] @TO@ MethodInvocation@@locks.get(path) @AT@ 1271 @LENGTH@ 9
------------------INS SimpleName@@path @TO@ SimpleName@@MethodName:get:[path] @AT@ 1275 @LENGTH@ 4


INS ReturnStatement@@BooleanLiteral:false @TO@ MethodDeclaration@@public, boolean, MethodName:expectFailedWriteAttributeOperation, ModelNode operation,  @AT@ 14687 @LENGTH@ 13
---INS BooleanLiteral@@false @TO@ ReturnStatement@@BooleanLiteral:false @AT@ 14694 @LENGTH@ 5


UPD MethodDeclaration@@public, int, MethodName:compare, Route o1, Route o2,  @TO@ public, int, MethodName:compare, Route route1, Route route2,  @AT@ 3160 @LENGTH@ 896
---UPD SingleVariableDeclaration@@Route o1 @TO@ Route route1 @AT@ 3179 @LENGTH@ 8
------UPD SimpleName@@o1 @TO@ route1 @AT@ 3185 @LENGTH@ 2
---UPD SingleVariableDeclaration@@Route o2 @TO@ Route route2 @AT@ 3189 @LENGTH@ 8
------UPD SimpleName@@o2 @TO@ route2 @AT@ 3195 @LENGTH@ 2
---UPD VariableDeclarationStatement@@CamelContext camel1=o1.getRouteContext().getCamelContext(); @TO@ CamelContext camel1=route1.getRouteContext().getCamelContext(); @AT@ 3256 @LENGTH@ 61
------UPD VariableDeclarationFragment@@camel1=o1.getRouteContext().getCamelContext() @TO@ camel1=route1.getRouteContext().getCamelContext() @AT@ 3269 @LENGTH@ 47
---------UPD MethodInvocation@@o1.getRouteContext().getCamelContext() @TO@ route1.getRouteContext().getCamelContext() @AT@ 3278 @LENGTH@ 38
------------UPD SimpleName@@Name:o1 @TO@ Name:route1 @AT@ 3278 @LENGTH@ 2
---UPD VariableDeclarationStatement@@CamelContext camel2=o2.getRouteContext().getCamelContext(); @TO@ CamelContext camel2=route2.getRouteContext().getCamelContext(); @AT@ 3330 @LENGTH@ 61
------UPD VariableDeclarationFragment@@camel2=o2.getRouteContext().getCamelContext() @TO@ camel2=route2.getRouteContext().getCamelContext() @AT@ 3343 @LENGTH@ 47
---------UPD MethodInvocation@@o2.getRouteContext().getCamelContext() @TO@ route2.getRouteContext().getCamelContext() @AT@ 3352 @LENGTH@ 38
------------UPD SimpleName@@Name:o2 @TO@ Name:route2 @AT@ 3352 @LENGTH@ 2
---UPD IfStatement@@if (camel1.getName().equals(camel2.getName())) {  int order1=getRouteStartupOrder(camel1,o1.getId());  int order2=getRouteStartupOrder(camel2,o2.getId());  if (order1 == 0 && order2 == 0) {    return o1.getId().compareTo(o2.getId());  } else {    return Integer.compare(order1,order2);  }} else {  return camel1.getName().compareTo(camel2.getName());} @TO@ if (camel1.getName().equals(camel2.getName())) {  Integer order1=getRouteStartupOrder(camel1,route1.getId());  Integer order2=getRouteStartupOrder(camel2,route2.getId());  if (order1 == 0 && order2 == 0) {    return route1.getId().compareTo(route2.getId());  } else {    return order1.compareTo(order2);  }} else {  return camel1.getName().compareTo(camel2.getName());} @AT@ 3405 @LENGTH@ 641
------UPD Block@@ThenBody:{  int order1=getRouteStartupOrder(camel1,o1.getId());  int order2=getRouteStartupOrder(camel2,o2.getId());  if (order1 == 0 && order2 == 0) {    return o1.getId().compareTo(o2.getId());  } else {    return Integer.compare(order1,order2);  }} @TO@ ThenBody:{  Integer order1=getRouteStartupOrder(camel1,route1.getId());  Integer order2=getRouteStartupOrder(camel2,route2.getId());  if (order1 == 0 && order2 == 0) {    return route1.getId().compareTo(route2.getId());  } else {    return order1.compareTo(order2);  }} @AT@ 3452 @LENGTH@ 504
---------UPD VariableDeclarationStatement@@int order1=getRouteStartupOrder(camel1,o1.getId()); @TO@ Integer order1=getRouteStartupOrder(camel1,route1.getId()); @AT@ 3527 @LENGTH@ 54
------------DEL PrimitiveType@@int @AT@ 3527 @LENGTH@ 3
------------UPD VariableDeclarationFragment@@order1=getRouteStartupOrder(camel1,o1.getId()) @TO@ order1=getRouteStartupOrder(camel1,route1.getId()) @AT@ 3531 @LENGTH@ 49
---------------UPD MethodInvocation@@getRouteStartupOrder(camel1,o1.getId()) @TO@ getRouteStartupOrder(camel1,route1.getId()) @AT@ 3540 @LENGTH@ 40
------------------UPD SimpleName@@MethodName:getRouteStartupOrder:[camel1, o1.getId()] @TO@ MethodName:getRouteStartupOrder:[camel1, route1.getId()] @AT@ 3540 @LENGTH@ 40
---------------------UPD MethodInvocation@@o1.getId() @TO@ route1.getId() @AT@ 3569 @LENGTH@ 10
------------------------UPD SimpleName@@Name:o1 @TO@ Name:route1 @AT@ 3569 @LENGTH@ 2
------------INS SimpleType@@Integer @TO@ VariableDeclarationStatement@@int order1=getRouteStartupOrder(camel1,o1.getId()); @AT@ 3543 @LENGTH@ 7
---------UPD VariableDeclarationStatement@@int order2=getRouteStartupOrder(camel2,o2.getId()); @TO@ Integer order2=getRouteStartupOrder(camel2,route2.getId()); @AT@ 3598 @LENGTH@ 54
------------DEL PrimitiveType@@int @AT@ 3598 @LENGTH@ 3
------------UPD VariableDeclarationFragment@@order2=getRouteStartupOrder(camel2,o2.getId()) @TO@ order2=getRouteStartupOrder(camel2,route2.getId()) @AT@ 3602 @LENGTH@ 49
---------------UPD MethodInvocation@@getRouteStartupOrder(camel2,o2.getId()) @TO@ getRouteStartupOrder(camel2,route2.getId()) @AT@ 3611 @LENGTH@ 40
------------------UPD SimpleName@@MethodName:getRouteStartupOrder:[camel2, o2.getId()] @TO@ MethodName:getRouteStartupOrder:[camel2, route2.getId()] @AT@ 3611 @LENGTH@ 40
---------------------UPD MethodInvocation@@o2.getId() @TO@ route2.getId() @AT@ 3640 @LENGTH@ 10
------------------------UPD SimpleName@@Name:o2 @TO@ Name:route2 @AT@ 3640 @LENGTH@ 2
------------INS SimpleType@@Integer @TO@ VariableDeclarationStatement@@int order2=getRouteStartupOrder(camel2,o2.getId()); @AT@ 3622 @LENGTH@ 7
---------UPD IfStatement@@if (order1 == 0 && order2 == 0) {  return o1.getId().compareTo(o2.getId());} else {  return Integer.compare(order1,order2);} @TO@ if (order1 == 0 && order2 == 0) {  return route1.getId().compareTo(route2.getId());} else {  return order1.compareTo(order2);} @AT@ 3669 @LENGTH@ 273
------------UPD Block@@ThenBody:{  return o1.getId().compareTo(o2.getId());} @TO@ ThenBody:{  return route1.getId().compareTo(route2.getId());} @AT@ 3701 @LENGTH@ 156
---------------UPD ReturnStatement@@MethodInvocation:o1.getId().compareTo(o2.getId()) @TO@ MethodInvocation:route1.getId().compareTo(route2.getId()) @AT@ 3799 @LENGTH@ 40
------------------UPD MethodInvocation@@o1.getId().compareTo(o2.getId()) @TO@ route1.getId().compareTo(route2.getId()) @AT@ 3806 @LENGTH@ 32
---------------------UPD SimpleName@@Name:o1 @TO@ Name:route1 @AT@ 3806 @LENGTH@ 2
---------------------UPD SimpleName@@MethodName:compareTo:[o2.getId()] @TO@ MethodName:compareTo:[route2.getId()] @AT@ 3817 @LENGTH@ 21
------------------------UPD MethodInvocation@@o2.getId() @TO@ route2.getId() @AT@ 3827 @LENGTH@ 10
---------------------------UPD SimpleName@@Name:o2 @TO@ Name:route2 @AT@ 3827 @LENGTH@ 2
------------UPD Block@@ElseBody:{  return Integer.compare(order1,order2);} @TO@ ElseBody:{  return order1.compareTo(order2);} @AT@ 3863 @LENGTH@ 79
---------------UPD ReturnStatement@@MethodInvocation:Integer.compare(order1,order2) @TO@ MethodInvocation:order1.compareTo(order2) @AT@ 3885 @LENGTH@ 39
------------------UPD MethodInvocation@@Integer.compare(order1,order2) @TO@ order1.compareTo(order2) @AT@ 3892 @LENGTH@ 31
---------------------UPD SimpleName@@Name:Integer @TO@ Name:order1 @AT@ 3892 @LENGTH@ 7
---------------------UPD SimpleName@@MethodName:compare:[order1, order2] @TO@ MethodName:compareTo:[order2] @AT@ 3900 @LENGTH@ 23
------------------------DEL SimpleName@@order1 @AT@ 3908 @LENGTH@ 6


UPD ExpressionStatement@@MethodInvocation:createAndAssertChildContainer("esb1","root","esb-medium") @TO@ MethodInvocation:createAndAssertChildContainer("esb1","root","fuse-esb-medium") @AT@ 955 @LENGTH@ 60
---UPD MethodInvocation@@createAndAssertChildContainer("esb1","root","esb-medium") @TO@ createAndAssertChildContainer("esb1","root","fuse-esb-medium") @AT@ 955 @LENGTH@ 59
------UPD SimpleName@@MethodName:createAndAssertChildContainer:["esb1", "root", "esb-medium"] @TO@ MethodName:createAndAssertChildContainer:["esb1", "root", "fuse-esb-medium"] @AT@ 955 @LENGTH@ 59
---------UPD StringLiteral@@"esb-medium" @TO@ "fuse-esb-medium" @AT@ 1001 @LENGTH@ 12


DEL FieldDeclaration@@private, static, final, Logger, [LOG=LoggerFactory.getLogger(HdfsInputStream.class)] @AT@ 1182 @LENGTH@ 81
---DEL Modifier@@private @AT@ 1182 @LENGTH@ 7
---DEL Modifier@@static @AT@ 1190 @LENGTH@ 6
---DEL Modifier@@final @AT@ 1197 @LENGTH@ 5
---DEL SimpleType@@Logger @AT@ 1203 @LENGTH@ 6
---DEL VariableDeclarationFragment@@LOG=LoggerFactory.getLogger(HdfsInputStream.class) @AT@ 1210 @LENGTH@ 52
------DEL SimpleName@@LOG @AT@ 1210 @LENGTH@ 3
------DEL MethodInvocation@@LoggerFactory.getLogger(HdfsInputStream.class) @AT@ 1216 @LENGTH@ 46
---------DEL SimpleName@@Name:LoggerFactory @AT@ 1216 @LENGTH@ 13
---------DEL SimpleName@@MethodName:getLogger:[HdfsInputStream.class] @AT@ 1230 @LENGTH@ 32
------------DEL TypeLiteral@@HdfsInputStream.class @AT@ 1240 @LENGTH@ 21


INS MethodDeclaration@@public, void, MethodName:testFileNotSupported, Exception,  @TO@ TypeDeclaration@@[public]DefaultExchangeHolderTest, ContextTestSupport @AT@ 5146 @LENGTH@ 399
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testFileNotSupported, Exception,  @AT@ 5146 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testFileNotSupported, Exception,  @AT@ 5153 @LENGTH@ 4
---INS SimpleName@@MethodName:testFileNotSupported @TO@ MethodDeclaration@@public, void, MethodName:testFileNotSupported, Exception,  @AT@ 5158 @LENGTH@ 20
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:testFileNotSupported, Exception,  @AT@ 5188 @LENGTH@ 9
---INS VariableDeclarationStatement@@Exchange exchange=new DefaultExchange(context); @TO@ MethodDeclaration@@public, void, MethodName:testFileNotSupported, Exception,  @AT@ 5208 @LENGTH@ 49
------INS SimpleType@@Exchange @TO@ VariableDeclarationStatement@@Exchange exchange=new DefaultExchange(context); @AT@ 5208 @LENGTH@ 8
------INS VariableDeclarationFragment@@exchange=new DefaultExchange(context) @TO@ VariableDeclarationStatement@@Exchange exchange=new DefaultExchange(context); @AT@ 5217 @LENGTH@ 39
---------INS SimpleName@@exchange @TO@ VariableDeclarationFragment@@exchange=new DefaultExchange(context) @AT@ 5217 @LENGTH@ 8
---------INS ClassInstanceCreation@@DefaultExchange[context] @TO@ VariableDeclarationFragment@@exchange=new DefaultExchange(context) @AT@ 5228 @LENGTH@ 28
------------INS New@@new @TO@ ClassInstanceCreation@@DefaultExchange[context] @AT@ 5228 @LENGTH@ 3
------------INS SimpleType@@DefaultExchange @TO@ ClassInstanceCreation@@DefaultExchange[context] @AT@ 5232 @LENGTH@ 15
------------INS SimpleName@@context @TO@ ClassInstanceCreation@@DefaultExchange[context] @AT@ 5248 @LENGTH@ 7
---INS ExpressionStatement@@MethodInvocation:exchange.getIn().setBody(new File("src/test/resources/log4j.properties")) @TO@ MethodDeclaration@@public, void, MethodName:testFileNotSupported, Exception,  @AT@ 5266 @LENGTH@ 74
------INS MethodInvocation@@exchange.getIn().setBody(new File("src/test/resources/log4j.properties")) @TO@ ExpressionStatement@@MethodInvocation:exchange.getIn().setBody(new File("src/test/resources/log4j.properties")) @AT@ 5266 @LENGTH@ 73
---------INS MethodInvocation@@MethodName:getIn:[] @TO@ MethodInvocation@@exchange.getIn().setBody(new File("src/test/resources/log4j.properties")) @AT@ 5266 @LENGTH@ 16
---------INS SimpleName@@Name:exchange @TO@ MethodInvocation@@exchange.getIn().setBody(new File("src/test/resources/log4j.properties")) @AT@ 5266 @LENGTH@ 8
---------INS SimpleName@@MethodName:setBody:[new File("src/test/resources/log4j.properties")] @TO@ MethodInvocation@@exchange.getIn().setBody(new File("src/test/resources/log4j.properties")) @AT@ 5283 @LENGTH@ 56
------------INS ClassInstanceCreation@@File["src/test/resources/log4j.properties"] @TO@ SimpleName@@MethodName:setBody:[new File("src/test/resources/log4j.properties")] @AT@ 5291 @LENGTH@ 47
---------------INS New@@new @TO@ ClassInstanceCreation@@File["src/test/resources/log4j.properties"] @AT@ 5291 @LENGTH@ 3
---------------INS SimpleType@@File @TO@ ClassInstanceCreation@@File["src/test/resources/log4j.properties"] @AT@ 5295 @LENGTH@ 4
---------------INS StringLiteral@@"src/test/resources/log4j.properties" @TO@ ClassInstanceCreation@@File["src/test/resources/log4j.properties"] @AT@ 5300 @LENGTH@ 37
---INS TryStatement@@try {  DefaultExchangeHolder.marshal(exchange);  fail("Should have thrown exception");} catch (RuntimeExchangeException e) {} @TO@ MethodDeclaration@@public, void, MethodName:testFileNotSupported, Exception,  @AT@ 5350 @LENGTH@ 189
------INS ExpressionStatement@@MethodInvocation:DefaultExchangeHolder.marshal(exchange) @TO@ TryStatement@@try {  DefaultExchangeHolder.marshal(exchange);  fail("Should have thrown exception");} catch (RuntimeExchangeException e) {} @AT@ 5368 @LENGTH@ 40
---------INS MethodInvocation@@DefaultExchangeHolder.marshal(exchange) @TO@ ExpressionStatement@@MethodInvocation:DefaultExchangeHolder.marshal(exchange) @AT@ 5368 @LENGTH@ 39
------------INS SimpleName@@Name:DefaultExchangeHolder @TO@ MethodInvocation@@DefaultExchangeHolder.marshal(exchange) @AT@ 5368 @LENGTH@ 21
------------INS SimpleName@@MethodName:marshal:[exchange] @TO@ MethodInvocation@@DefaultExchangeHolder.marshal(exchange) @AT@ 5390 @LENGTH@ 17
---------------INS SimpleName@@exchange @TO@ SimpleName@@MethodName:marshal:[exchange] @AT@ 5398 @LENGTH@ 8
------INS ExpressionStatement@@MethodInvocation:fail("Should have thrown exception") @TO@ TryStatement@@try {  DefaultExchangeHolder.marshal(exchange);  fail("Should have thrown exception");} catch (RuntimeExchangeException e) {} @AT@ 5421 @LENGTH@ 37
---------INS MethodInvocation@@fail("Should have thrown exception") @TO@ ExpressionStatement@@MethodInvocation:fail("Should have thrown exception") @AT@ 5421 @LENGTH@ 36
------------INS SimpleName@@MethodName:fail:["Should have thrown exception"] @TO@ MethodInvocation@@fail("Should have thrown exception") @AT@ 5421 @LENGTH@ 36
---------------INS StringLiteral@@"Should have thrown exception" @TO@ SimpleName@@MethodName:fail:["Should have thrown exception"] @AT@ 5426 @LENGTH@ 30
------INS CatchClause@@catch (RuntimeExchangeException e) {} @TO@ TryStatement@@try {  DefaultExchangeHolder.marshal(exchange);  fail("Should have thrown exception");} catch (RuntimeExchangeException e) {} @AT@ 5469 @LENGTH@ 70
---------INS SingleVariableDeclaration@@RuntimeExchangeException e @TO@ CatchClause@@catch (RuntimeExchangeException e) {} @AT@ 5476 @LENGTH@ 26
------------INS SimpleType@@RuntimeExchangeException @TO@ SingleVariableDeclaration@@RuntimeExchangeException e @AT@ 5476 @LENGTH@ 24
------------INS SimpleName@@e @TO@ SingleVariableDeclaration@@RuntimeExchangeException e @AT@ 5501 @LENGTH@ 1


UPD ReturnStatement@@MethodInvocation:builder.dumpExpressionIfPresentInto(expressions) @TO@ ConditionalExpression:builder == null ? Collections.<String>emptyList() : builder.dumpExpressionIfPresentInto(expressions) @AT@ 11173 @LENGTH@ 56
---INS ConditionalExpression@@builder == null ? Collections.<String>emptyList() : builder.dumpExpressionIfPresentInto(expressions) @TO@ ReturnStatement@@MethodInvocation:builder.dumpExpressionIfPresentInto(expressions) @AT@ 11210 @LENGTH@ 101
------MOV MethodInvocation@@builder.dumpExpressionIfPresentInto(expressions) @TO@ ConditionalExpression@@builder == null ? Collections.<String>emptyList() : builder.dumpExpressionIfPresentInto(expressions) @AT@ 11180 @LENGTH@ 48
------INS InfixExpression@@builder == null @TO@ ConditionalExpression@@builder == null ? Collections.<String>emptyList() : builder.dumpExpressionIfPresentInto(expressions) @AT@ 11210 @LENGTH@ 15
---------INS SimpleName@@builder @TO@ InfixExpression@@builder == null @AT@ 11210 @LENGTH@ 7
---------INS Operator@@== @TO@ InfixExpression@@builder == null @AT@ 11217 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@builder == null @AT@ 11221 @LENGTH@ 4
------INS MethodInvocation@@Collections.<String>emptyList() @TO@ ConditionalExpression@@builder == null ? Collections.<String>emptyList() : builder.dumpExpressionIfPresentInto(expressions) @AT@ 11228 @LENGTH@ 32
---------INS SimpleName@@Name:Collections @TO@ MethodInvocation@@Collections.<String>emptyList() @AT@ 11228 @LENGTH@ 11
---------INS SimpleName@@MethodName:emptyList:[] @TO@ MethodInvocation@@Collections.<String>emptyList() @AT@ 11249 @LENGTH@ 11


INS ExpressionStatement@@MethodInvocation:bindy.setLocale("en") @TO@ MethodDeclaration@@public, void, MethodName:configure, Exception,  @AT@ 1947 @LENGTH@ 22
---INS MethodInvocation@@bindy.setLocale("en") @TO@ ExpressionStatement@@MethodInvocation:bindy.setLocale("en") @AT@ 1947 @LENGTH@ 21
------INS SimpleName@@Name:bindy @TO@ MethodInvocation@@bindy.setLocale("en") @AT@ 1947 @LENGTH@ 5
------INS SimpleName@@MethodName:setLocale:["en"] @TO@ MethodInvocation@@bindy.setLocale("en") @AT@ 1953 @LENGTH@ 15
---------INS StringLiteral@@"en" @TO@ SimpleName@@MethodName:setLocale:["en"] @AT@ 1963 @LENGTH@ 4


UPD TryStatement@@try {  final ModelNode dmr=new ModelNode();  dmr.get("operation").set("upload-deployment-stream");  dmr.get("address").setEmptyList();  dmr.get("input-stream-index").set(0);  OperationBuilder operation=new OperationBuilder(dmr);  operation.addInputStream(in);  response=modelController.execute(operation.build());  if (!response.get(OUTCOME).asString().equals(SUCCESS)) {    Common.sendError(exchange,false,response.get(FAILURE_DESCRIPTION).asString());    return;  }} catch (Throwable t) {  ROOT_LOGGER.uploadError(t);  Common.sendError(exchange,false,t.getLocalizedMessage());  return;} finally {  IoUtils.safeClose(in);} @TO@ try {  final ModelNode dmr=new ModelNode();  dmr.get("operation").set("upload-deployment-stream");  dmr.get("address").setEmptyList();  dmr.get("input-stream-index").set(0);  OperationBuilder operation=new OperationBuilder(dmr);  operation.addInputStream(in);  response=modelController.execute(operation.build());  if (!response.get(OUTCOME).asString().equals(SUCCESS)) {    Common.sendError(exchange,false,false,response.get(FAILURE_DESCRIPTION).asString());    return;  }} catch (Throwable t) {  ROOT_LOGGER.uploadError(t);  Common.sendError(exchange,false,false,t.getLocalizedMessage());  return;} finally {  IoUtils.safeClose(in);} @AT@ 2891 @LENGTH@ 1032
---UPD IfStatement@@if (!response.get(OUTCOME).asString().equals(SUCCESS)) {  Common.sendError(exchange,false,response.get(FAILURE_DESCRIPTION).asString());  return;} @TO@ if (!response.get(OUTCOME).asString().equals(SUCCESS)) {  Common.sendError(exchange,false,false,response.get(FAILURE_DESCRIPTION).asString());  return;} @AT@ 3365 @LENGTH@ 214
------UPD Block@@ThenBody:{  Common.sendError(exchange,false,response.get(FAILURE_DESCRIPTION).asString());  return;} @TO@ ThenBody:{  Common.sendError(exchange,false,false,response.get(FAILURE_DESCRIPTION).asString());  return;} @AT@ 3419 @LENGTH@ 160
---------UPD ExpressionStatement@@MethodInvocation:Common.sendError(exchange,false,response.get(FAILURE_DESCRIPTION).asString()) @TO@ MethodInvocation:Common.sendError(exchange,false,false,response.get(FAILURE_DESCRIPTION).asString()) @AT@ 3445 @LENGTH@ 80
------------UPD MethodInvocation@@Common.sendError(exchange,false,response.get(FAILURE_DESCRIPTION).asString()) @TO@ Common.sendError(exchange,false,false,response.get(FAILURE_DESCRIPTION).asString()) @AT@ 3445 @LENGTH@ 79
---------------UPD SimpleName@@MethodName:sendError:[exchange, false, response.get(FAILURE_DESCRIPTION).asString()] @TO@ MethodName:sendError:[exchange, false, false, response.get(FAILURE_DESCRIPTION).asString()] @AT@ 3452 @LENGTH@ 72
------------------INS BooleanLiteral@@false @TO@ SimpleName@@MethodName:sendError:[exchange, false, response.get(FAILURE_DESCRIPTION).asString()] @AT@ 3479 @LENGTH@ 5
---UPD CatchClause@@catch (Throwable t) {  ROOT_LOGGER.uploadError(t);  Common.sendError(exchange,false,t.getLocalizedMessage());  return;} @TO@ catch (Throwable t) {  ROOT_LOGGER.uploadError(t);  Common.sendError(exchange,false,false,t.getLocalizedMessage());  return;} @AT@ 3598 @LENGTH@ 254
------UPD ExpressionStatement@@MethodInvocation:Common.sendError(exchange,false,t.getLocalizedMessage()) @TO@ MethodInvocation:Common.sendError(exchange,false,false,t.getLocalizedMessage()) @AT@ 3747 @LENGTH@ 59
---------UPD MethodInvocation@@Common.sendError(exchange,false,t.getLocalizedMessage()) @TO@ Common.sendError(exchange,false,false,t.getLocalizedMessage()) @AT@ 3747 @LENGTH@ 58
------------UPD SimpleName@@MethodName:sendError:[exchange, false, t.getLocalizedMessage()] @TO@ MethodName:sendError:[exchange, false, false, t.getLocalizedMessage()] @AT@ 3754 @LENGTH@ 51
---------------INS BooleanLiteral@@false @TO@ SimpleName@@MethodName:sendError:[exchange, false, t.getLocalizedMessage()] @AT@ 3788 @LENGTH@ 5


INS MethodDeclaration@@public, void, MethodName:logWarning, final String message,  @TO@ TypeDeclaration@@[public]TransformersLogger,  @AT@ 10820 @LENGTH@ 215
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:logWarning, final String message,  @AT@ 10820 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:logWarning, final String message,  @AT@ 10827 @LENGTH@ 4
---INS SimpleName@@MethodName:logWarning @TO@ MethodDeclaration@@public, void, MethodName:logWarning, final String message,  @AT@ 10832 @LENGTH@ 10
---INS SingleVariableDeclaration@@final String message @TO@ MethodDeclaration@@public, void, MethodName:logWarning, final String message,  @AT@ 10843 @LENGTH@ 20
------INS Modifier@@final @TO@ SingleVariableDeclaration@@final String message @AT@ 10843 @LENGTH@ 5
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@final String message @AT@ 10849 @LENGTH@ 6
------INS SimpleName@@message @TO@ SingleVariableDeclaration@@final String message @AT@ 10856 @LENGTH@ 7
---INS ExpressionStatement@@MethodInvocation:messageQueue.add(new LogEntry(){
  @Override public String getMessage(){
    return message;
  }
}
) @TO@ MethodDeclaration@@public, void, MethodName:logWarning, final String message,  @AT@ 10875 @LENGTH@ 154
------INS MethodInvocation@@messageQueue.add(new LogEntry(){
  @Override public String getMessage(){
    return message;
  }
}
) @TO@ ExpressionStatement@@MethodInvocation:messageQueue.add(new LogEntry(){
  @Override public String getMessage(){
    return message;
  }
}
) @AT@ 10875 @LENGTH@ 153
---------INS SimpleName@@Name:messageQueue @TO@ MethodInvocation@@messageQueue.add(new LogEntry(){
  @Override public String getMessage(){
    return message;
  }
}
) @AT@ 10875 @LENGTH@ 12
---------INS SimpleName@@MethodName:add:[new LogEntry(){
  @Override public String getMessage(){
    return message;
  }
}
] @TO@ MethodInvocation@@messageQueue.add(new LogEntry(){
  @Override public String getMessage(){
    return message;
  }
}
) @AT@ 10888 @LENGTH@ 140
------------INS ClassInstanceCreation@@LogEntry[] @TO@ SimpleName@@MethodName:add:[new LogEntry(){
  @Override public String getMessage(){
    return message;
  }
}
] @AT@ 10892 @LENGTH@ 135
---------------INS New@@new @TO@ ClassInstanceCreation@@LogEntry[] @AT@ 10892 @LENGTH@ 3
---------------INS SimpleType@@LogEntry @TO@ ClassInstanceCreation@@LogEntry[] @AT@ 10896 @LENGTH@ 8
---------------INS AnonymousClassDeclaration@@AnonymousClass @TO@ ClassInstanceCreation@@LogEntry[] @AT@ 10907 @LENGTH@ 120
------------------INS MethodDeclaration@@public, String, MethodName:getMessage,  @TO@ AnonymousClassDeclaration@@AnonymousClass @AT@ 10943 @LENGTH@ 74
---------------------INS Modifier@@public @TO@ MethodDeclaration@@public, String, MethodName:getMessage,  @AT@ 10943 @LENGTH@ 6
---------------------INS SimpleType@@String @TO@ MethodDeclaration@@public, String, MethodName:getMessage,  @AT@ 10950 @LENGTH@ 6
---------------------INS SimpleName@@MethodName:getMessage @TO@ MethodDeclaration@@public, String, MethodName:getMessage,  @AT@ 10957 @LENGTH@ 10
---------------------INS ReturnStatement@@SimpleName:message @TO@ MethodDeclaration@@public, String, MethodName:getMessage,  @AT@ 10988 @LENGTH@ 15
------------------------INS SimpleName@@message @TO@ ReturnStatement@@SimpleName:message @AT@ 10995 @LENGTH@ 7


INS ExpressionStatement@@MethodInvocation:context.attachIfAbsent(CompositeOperationHandler.DOMAIN_EXECUTION_KEY,Boolean.TRUE) @TO@ MethodDeclaration@@public, void, MethodName:execute, final OperationContext context, final ModelNode operation, OperationFailedException,  @AT@ 3412 @LENGTH@ 85
---INS MethodInvocation@@context.attachIfAbsent(CompositeOperationHandler.DOMAIN_EXECUTION_KEY,Boolean.TRUE) @TO@ ExpressionStatement@@MethodInvocation:context.attachIfAbsent(CompositeOperationHandler.DOMAIN_EXECUTION_KEY,Boolean.TRUE) @AT@ 3412 @LENGTH@ 84
------INS SimpleName@@Name:context @TO@ MethodInvocation@@context.attachIfAbsent(CompositeOperationHandler.DOMAIN_EXECUTION_KEY,Boolean.TRUE) @AT@ 3412 @LENGTH@ 7
------INS SimpleName@@MethodName:attachIfAbsent:[CompositeOperationHandler.DOMAIN_EXECUTION_KEY, Boolean.TRUE] @TO@ MethodInvocation@@context.attachIfAbsent(CompositeOperationHandler.DOMAIN_EXECUTION_KEY,Boolean.TRUE) @AT@ 3420 @LENGTH@ 76
---------INS QualifiedName@@CompositeOperationHandler.DOMAIN_EXECUTION_KEY @TO@ SimpleName@@MethodName:attachIfAbsent:[CompositeOperationHandler.DOMAIN_EXECUTION_KEY, Boolean.TRUE] @AT@ 3435 @LENGTH@ 46
------------INS SimpleName@@CompositeOperationHandler @TO@ QualifiedName@@CompositeOperationHandler.DOMAIN_EXECUTION_KEY @AT@ 3435 @LENGTH@ 25
------------INS SimpleName@@DOMAIN_EXECUTION_KEY @TO@ QualifiedName@@CompositeOperationHandler.DOMAIN_EXECUTION_KEY @AT@ 3461 @LENGTH@ 20
---------INS QualifiedName@@Boolean.TRUE @TO@ SimpleName@@MethodName:attachIfAbsent:[CompositeOperationHandler.DOMAIN_EXECUTION_KEY, Boolean.TRUE] @AT@ 3483 @LENGTH@ 12
------------INS SimpleName@@Boolean @TO@ QualifiedName@@Boolean.TRUE @AT@ 3483 @LENGTH@ 7
------------INS SimpleName@@TRUE @TO@ QualifiedName@@Boolean.TRUE @AT@ 3491 @LENGTH@ 4


UPD FieldDeclaration@@public, static, final, SimpleAttributeDefinition, [ALLOW_DIRECT_CONNECTIONS_ONLY=create("allow-direct-connections-only",BOOLEAN).setDefaultValue(new ModelNode(false)).setAllowNull(true).setAllowExpression(true).setRestartAllServices().build()] @TO@ public, static, final, SimpleAttributeDefinition, [ALLOW_DIRECT_CONNECTIONS_ONLY=create("allow-direct-connections-only",BOOLEAN).setDefaultValue(new ModelNode(false)).setAllowNull(true).setAllowExpression(true).setAlternatives(CommonAttributes.DISCOVERY_GROUP_NAME).setRestartAllServices().build()] @AT@ 4054 @LENGTH@ 306
---UPD VariableDeclarationFragment@@ALLOW_DIRECT_CONNECTIONS_ONLY=create("allow-direct-connections-only",BOOLEAN).setDefaultValue(new ModelNode(false)).setAllowNull(true).setAllowExpression(true).setRestartAllServices().build() @TO@ ALLOW_DIRECT_CONNECTIONS_ONLY=create("allow-direct-connections-only",BOOLEAN).setDefaultValue(new ModelNode(false)).setAllowNull(true).setAllowExpression(true).setAlternatives(CommonAttributes.DISCOVERY_GROUP_NAME).setRestartAllServices().build() @AT@ 4100 @LENGTH@ 259
------UPD MethodInvocation@@create("allow-direct-connections-only",BOOLEAN).setDefaultValue(new ModelNode(false)).setAllowNull(true).setAllowExpression(true).setRestartAllServices().build() @TO@ create("allow-direct-connections-only",BOOLEAN).setDefaultValue(new ModelNode(false)).setAllowNull(true).setAllowExpression(true).setAlternatives(CommonAttributes.DISCOVERY_GROUP_NAME).setRestartAllServices().build() @AT@ 4132 @LENGTH@ 227
---------INS MethodInvocation@@MethodName:setAlternatives:[CommonAttributes.DISCOVERY_GROUP_NAME] @TO@ MethodInvocation@@create("allow-direct-connections-only",BOOLEAN).setDefaultValue(new ModelNode(false)).setAllowNull(true).setAllowExpression(true).setRestartAllServices().build() @AT@ 4207 @LENGTH@ 237
------------INS QualifiedName@@CommonAttributes.DISCOVERY_GROUP_NAME @TO@ MethodInvocation@@MethodName:setAlternatives:[CommonAttributes.DISCOVERY_GROUP_NAME] @AT@ 4406 @LENGTH@ 37
---------------INS SimpleName@@CommonAttributes @TO@ QualifiedName@@CommonAttributes.DISCOVERY_GROUP_NAME @AT@ 4406 @LENGTH@ 16
---------------INS SimpleName@@DISCOVERY_GROUP_NAME @TO@ QualifiedName@@CommonAttributes.DISCOVERY_GROUP_NAME @AT@ 4423 @LENGTH@ 20


UPD FieldDeclaration@@static, final, String, [DEFAULT_FAB_PROIVDED_DEPENDENCY="org.apache.activemq:* org.apache.camel:* org.apache.cxf:*"] @TO@ static, final, String, [DEFAULT_FAB_PROVIDED_DEPENDENCY="org.apache.activemq:* org.apache.camel:* org.apache.cxf:*"] @AT@ 2331 @LENGTH@ 114
---UPD VariableDeclarationFragment@@DEFAULT_FAB_PROIVDED_DEPENDENCY="org.apache.activemq:* org.apache.camel:* org.apache.cxf:*" @TO@ DEFAULT_FAB_PROVIDED_DEPENDENCY="org.apache.activemq:* org.apache.camel:* org.apache.cxf:*" @AT@ 2351 @LENGTH@ 93
------UPD SimpleName@@DEFAULT_FAB_PROIVDED_DEPENDENCY @TO@ DEFAULT_FAB_PROVIDED_DEPENDENCY @AT@ 2351 @LENGTH@ 31


UPD MethodDeclaration@@protected, void, MethodName:standardSubsystemTest, final String configId, boolean compareXml, Exception,  @TO@ protected, KernelServices, MethodName:standardSubsystemTest, final String configId, boolean compareXml, Exception,  @AT@ 4367 @LENGTH@ 2318
---INS SimpleType@@KernelServices @TO@ MethodDeclaration@@protected, void, MethodName:standardSubsystemTest, final String configId, boolean compareXml, Exception,  @AT@ 4377 @LENGTH@ 14
---DEL PrimitiveType@@void @AT@ 4377 @LENGTH@ 4
---INS ReturnStatement@@SimpleName:servicesA @TO@ MethodDeclaration@@protected, void, MethodName:standardSubsystemTest, final String configId, boolean compareXml, Exception,  @AT@ 6698 @LENGTH@ 17
------INS SimpleName@@servicesA @TO@ ReturnStatement@@SimpleName:servicesA @AT@ 6705 @LENGTH@ 9


DEL MethodDeclaration@@DeploymentUnitProcessingException, MethodName:failToLoadComponentClass, String componentClassName,  @AT@ 58216 @LENGTH@ 52
---DEL SimpleType@@DeploymentUnitProcessingException @AT@ 58182 @LENGTH@ 33
---DEL SimpleName@@MethodName:failToLoadComponentClass @AT@ 58216 @LENGTH@ 24
---DEL SingleVariableDeclaration@@String componentClassName @AT@ 58241 @LENGTH@ 25
------DEL SimpleType@@String @AT@ 58241 @LENGTH@ 6
------DEL SimpleName@@componentClassName @AT@ 58248 @LENGTH@ 18


INS MethodDeclaration@@String, MethodName:unknownMetric, String metricName,  @TO@ TypeDeclaration@@[@MessageBundle(projectCode="JBAS"), public]InfinispanMessages,  @AT@ 8436 @LENGTH@ 33
---INS SimpleType@@String @TO@ MethodDeclaration@@String, MethodName:unknownMetric, String metricName,  @AT@ 8429 @LENGTH@ 6
---INS SimpleName@@MethodName:unknownMetric @TO@ MethodDeclaration@@String, MethodName:unknownMetric, String metricName,  @AT@ 8436 @LENGTH@ 13
---INS SingleVariableDeclaration@@String metricName @TO@ MethodDeclaration@@String, MethodName:unknownMetric, String metricName,  @AT@ 8450 @LENGTH@ 17
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String metricName @AT@ 8450 @LENGTH@ 6
------INS SimpleName@@metricName @TO@ SingleVariableDeclaration@@String metricName @AT@ 8457 @LENGTH@ 10


UPD IfStatement@@if (endpoint.getConfiguration().getWaitTimeMs() > 0) {} else {  try {    Thread.sleep(100);  } catch (  InterruptedException ignored) {  }} @TO@ if (endpoint.getConfiguration().getWaitTimeMs() <= 0) {  try {    Thread.sleep(100);  } catch (  InterruptedException ignored) {  }} @AT@ 8135 @LENGTH@ 589
---UPD InfixExpression@@endpoint.getConfiguration().getWaitTimeMs() > 0 @TO@ endpoint.getConfiguration().getWaitTimeMs() <= 0 @AT@ 8139 @LENGTH@ 47
------UPD Operator@@> @TO@ <= @AT@ 8182 @LENGTH@ 1
---DEL Block@@ThenBody:{} @AT@ 8188 @LENGTH@ 90
---UPD Block@@ElseBody:{  try {    Thread.sleep(100);  } catch (  InterruptedException ignored) {  }} @TO@ ThenBody:{  try {    Thread.sleep(100);  } catch (  InterruptedException ignored) {  }} @AT@ 8284 @LENGTH@ 440


UPD IfStatement@@if (cache != null) {  Assert.isTrue(!ClientCache.class.isAssignableFrom(cache.getClass()),"You cannot create an index from a client cache");  queryService=cache.getQueryService();} @TO@ if (cache != null) {  queryService=cache.getQueryService();} @AT@ 1813 @LENGTH@ 199
---UPD Block@@ThenBody:{  Assert.isTrue(!ClientCache.class.isAssignableFrom(cache.getClass()),"You cannot create an index from a client cache");  queryService=cache.getQueryService();} @TO@ ThenBody:{  queryService=cache.getQueryService();} @AT@ 1832 @LENGTH@ 180
------DEL ExpressionStatement@@MethodInvocation:Assert.isTrue(!ClientCache.class.isAssignableFrom(cache.getClass()),"You cannot create an index from a client cache") @AT@ 1838 @LENGTH@ 125
---------DEL MethodInvocation@@Assert.isTrue(!ClientCache.class.isAssignableFrom(cache.getClass()),"You cannot create an index from a client cache") @AT@ 1838 @LENGTH@ 124
------------DEL SimpleName@@Name:Assert @AT@ 1838 @LENGTH@ 6
------------DEL SimpleName@@MethodName:isTrue:[!ClientCache.class.isAssignableFrom(cache.getClass()), "You cannot create an index from a client cache"] @AT@ 1845 @LENGTH@ 117
---------------DEL PrefixExpression@@!ClientCache.class.isAssignableFrom(cache.getClass()) @AT@ 1852 @LENGTH@ 53
------------------DEL Operator@@! @AT@ 1852 @LENGTH@ 1
------------------DEL MethodInvocation@@ClientCache.class.isAssignableFrom(cache.getClass()) @AT@ 1853 @LENGTH@ 52
---------------------DEL TypeLiteral@@ClientCache.class @AT@ 1853 @LENGTH@ 17
---------------------DEL SimpleName@@MethodName:isAssignableFrom:[cache.getClass()] @AT@ 1871 @LENGTH@ 34
------------------------DEL MethodInvocation@@cache.getClass() @AT@ 1888 @LENGTH@ 16
---------------------------DEL SimpleName@@Name:cache @AT@ 1888 @LENGTH@ 5
---------------------------DEL SimpleName@@MethodName:getClass:[] @AT@ 1894 @LENGTH@ 10
---------------DEL StringLiteral@@"You cannot create an index from a client cache" @AT@ 1913 @LENGTH@ 48


INS ExpressionStatement@@MethodInvocation:camelDataFormat.setLocale("en") @TO@ MethodDeclaration@@public, void, MethodName:configure,  @AT@ 3447 @LENGTH@ 32
---INS MethodInvocation@@camelDataFormat.setLocale("en") @TO@ ExpressionStatement@@MethodInvocation:camelDataFormat.setLocale("en") @AT@ 3447 @LENGTH@ 31
------INS SimpleName@@Name:camelDataFormat @TO@ MethodInvocation@@camelDataFormat.setLocale("en") @AT@ 3447 @LENGTH@ 15
------INS SimpleName@@MethodName:setLocale:["en"] @TO@ MethodInvocation@@camelDataFormat.setLocale("en") @AT@ 3463 @LENGTH@ 15
---------INS StringLiteral@@"en" @TO@ SimpleName@@MethodName:setLocale:["en"] @AT@ 3473 @LENGTH@ 4


UPD ExpressionStatement@@MethodInvocation:assertEquals((Long)123l,resultMessage.getHeader("long",Long.class)) @TO@ MethodInvocation:assertEquals((Long)123L,resultMessage.getHeader("long",Long.class)) @AT@ 4135 @LENGTH@ 71
---UPD MethodInvocation@@assertEquals((Long)123l,resultMessage.getHeader("long",Long.class)) @TO@ assertEquals((Long)123L,resultMessage.getHeader("long",Long.class)) @AT@ 4135 @LENGTH@ 70
------UPD SimpleName@@MethodName:assertEquals:[(Long)123l, resultMessage.getHeader("long",Long.class)] @TO@ MethodName:assertEquals:[(Long)123L, resultMessage.getHeader("long",Long.class)] @AT@ 4135 @LENGTH@ 70
---------UPD CastExpression@@(Long)123l @TO@ (Long)123L @AT@ 4148 @LENGTH@ 11
------------UPD NumberLiteral@@123l @TO@ 123L @AT@ 4155 @LENGTH@ 4


INS ExpressionStatement@@MethodInvocation:stopCamelContext() @TO@ MethodDeclaration@@public, void, MethodName:testSimpleWriteFileWithIdleSplit, Exception,  @AT@ 2299 @LENGTH@ 19
---INS MethodInvocation@@MethodName:stopCamelContext:[] @TO@ ExpressionStatement@@MethodInvocation:stopCamelContext() @AT@ 2299 @LENGTH@ 18


UPD IfStatement@@if (skipRequestHeaders != null && skipRequestHeaders.containsKey(key)) {  Object skipValue=skipRequestHeaders.get(key);  if (ObjectHelper.equal(skipValue,value)) {    continue;  }} @TO@ if (skipRequestHeaders != null && skipRequestHeaders.containsKey(key)) {  continue;} @AT@ 8986 @LENGTH@ 298
---DEL Block@@ThenBody:{  Object skipValue=skipRequestHeaders.get(key);  if (ObjectHelper.equal(skipValue,value)) {    continue;  }} @AT@ 9057 @LENGTH@ 227
------DEL VariableDeclarationStatement@@Object skipValue=skipRequestHeaders.get(key); @AT@ 9083 @LENGTH@ 47
---------DEL SimpleType@@Object @AT@ 9083 @LENGTH@ 6
---------DEL VariableDeclarationFragment@@skipValue=skipRequestHeaders.get(key) @AT@ 9090 @LENGTH@ 39
------------DEL SimpleName@@skipValue @AT@ 9090 @LENGTH@ 9
------------DEL MethodInvocation@@skipRequestHeaders.get(key) @AT@ 9102 @LENGTH@ 27
---------------DEL SimpleName@@Name:skipRequestHeaders @AT@ 9102 @LENGTH@ 18
---------------DEL SimpleName@@MethodName:get:[key] @AT@ 9121 @LENGTH@ 8
------------------DEL SimpleName@@key @AT@ 9125 @LENGTH@ 3
------DEL IfStatement@@if (ObjectHelper.equal(skipValue,value)) {  continue;} @AT@ 9155 @LENGTH@ 107
---------DEL MethodInvocation@@ObjectHelper.equal(skipValue,value) @AT@ 9159 @LENGTH@ 36
------------DEL SimpleName@@Name:ObjectHelper @AT@ 9159 @LENGTH@ 12
------------DEL SimpleName@@MethodName:equal:[skipValue, value] @AT@ 9172 @LENGTH@ 23
---------------DEL SimpleName@@skipValue @AT@ 9178 @LENGTH@ 9
---------------DEL SimpleName@@value @AT@ 9189 @LENGTH@ 5
---MOV Block@@ThenBody:{  continue;} @TO@ IfStatement@@if (skipRequestHeaders != null && skipRequestHeaders.containsKey(key)) {  Object skipValue=skipRequestHeaders.get(key);  if (ObjectHelper.equal(skipValue,value)) {    continue;  }} @AT@ 9197 @LENGTH@ 65


UPD ReturnStatement@@ArrayCreation:new Option[]{new DefaultCompositeOption(fabricDistributionConfiguration()),debugConfiguration("5005",false),copySystemProperty("feature")} @TO@ ArrayCreation:new Option[]{new DefaultCompositeOption(fabricDistributionConfiguration()),copySystemProperty("feature")} @AT@ 5028 @LENGTH@ 206
---UPD ArrayCreation@@new Option[]{new DefaultCompositeOption(fabricDistributionConfiguration()),debugConfiguration("5005",false),copySystemProperty("feature")} @TO@ new Option[]{new DefaultCompositeOption(fabricDistributionConfiguration()),copySystemProperty("feature")} @AT@ 5035 @LENGTH@ 198
------UPD ArrayInitializer@@{new DefaultCompositeOption(fabricDistributionConfiguration()),debugConfiguration("5005",false),copySystemProperty("feature")} @TO@ {new DefaultCompositeOption(fabricDistributionConfiguration()),copySystemProperty("feature")} @AT@ 5047 @LENGTH@ 186
---------DEL MethodInvocation@@debugConfiguration("5005",false) @AT@ 5144 @LENGTH@ 32
------------DEL SimpleName@@MethodName:debugConfiguration:["5005", false] @AT@ 5144 @LENGTH@ 32
---------------DEL StringLiteral@@"5005" @AT@ 5163 @LENGTH@ 6
---------------DEL BooleanLiteral@@false @AT@ 5170 @LENGTH@ 5


UPD EnhancedForStatement@@for (final Map.Entry<String,SubsystemInformation> entry : subsystemsInfo.entrySet()) {  subsystems.add(entry.getKey(),entry.getValue().getManagementInterfaceMajorVersion() + "." + entry.getValue().getManagementInterfaceMicroVersion());} @TO@ for (final Map.Entry<String,SubsystemInformation> entry : subsystemsInfo.entrySet()) {  SubsystemInformation subsystem=entry.getValue();  subsystems.add(entry.getKey(),subsystem.getManagementInterfaceMajorVersion() + "." + subsystem.getManagementInterfaceMinorVersion()+ "."+ subsystem.getManagementInterfaceMicroVersion());} @AT@ 16776 @LENGTH@ 263
---UPD ExpressionStatement@@MethodInvocation:subsystems.add(entry.getKey(),entry.getValue().getManagementInterfaceMajorVersion() + "." + entry.getValue().getManagementInterfaceMicroVersion()) @TO@ MethodInvocation:subsystems.add(entry.getKey(),subsystem.getManagementInterfaceMajorVersion() + "." + subsystem.getManagementInterfaceMinorVersion()+ "."+ subsystem.getManagementInterfaceMicroVersion()) @AT@ 16879 @LENGTH@ 146
------UPD MethodInvocation@@subsystems.add(entry.getKey(),entry.getValue().getManagementInterfaceMajorVersion() + "." + entry.getValue().getManagementInterfaceMicroVersion()) @TO@ subsystems.add(entry.getKey(),subsystem.getManagementInterfaceMajorVersion() + "." + subsystem.getManagementInterfaceMinorVersion()+ "."+ subsystem.getManagementInterfaceMicroVersion()) @AT@ 16879 @LENGTH@ 145
---------UPD SimpleName@@MethodName:add:[entry.getKey(), entry.getValue().getManagementInterfaceMajorVersion() + "." + entry.getValue().getManagementInterfaceMicroVersion()] @TO@ MethodName:add:[entry.getKey(), subsystem.getManagementInterfaceMajorVersion() + "." + subsystem.getManagementInterfaceMinorVersion()+ "."+ subsystem.getManagementInterfaceMicroVersion()] @AT@ 16890 @LENGTH@ 134
------------UPD InfixExpression@@entry.getValue().getManagementInterfaceMajorVersion() + "." + entry.getValue().getManagementInterfaceMicroVersion() @TO@ subsystem.getManagementInterfaceMajorVersion() + "." + subsystem.getManagementInterfaceMinorVersion()+ "."+ subsystem.getManagementInterfaceMicroVersion() @AT@ 16910 @LENGTH@ 113
---------------UPD MethodInvocation@@entry.getValue().getManagementInterfaceMajorVersion() @TO@ subsystem.getManagementInterfaceMajorVersion() @AT@ 16910 @LENGTH@ 53
------------------DEL MethodInvocation@@MethodName:getValue:[] @AT@ 16910 @LENGTH@ 16
------------------UPD SimpleName@@Name:entry @TO@ Name:subsystem @AT@ 16910 @LENGTH@ 5
---------------UPD MethodInvocation@@entry.getValue().getManagementInterfaceMicroVersion() @TO@ subsystem.getManagementInterfaceMicroVersion() @AT@ 16970 @LENGTH@ 53
------------------DEL MethodInvocation@@MethodName:getValue:[] @AT@ 16970 @LENGTH@ 16
------------------UPD SimpleName@@Name:entry @TO@ Name:subsystem @AT@ 16970 @LENGTH@ 5
---------------INS MethodInvocation@@subsystem.getManagementInterfaceMinorVersion() @TO@ InfixExpression@@entry.getValue().getManagementInterfaceMajorVersion() + "." + entry.getValue().getManagementInterfaceMicroVersion() @AT@ 17080 @LENGTH@ 46
------------------INS SimpleName@@Name:subsystem @TO@ MethodInvocation@@subsystem.getManagementInterfaceMinorVersion() @AT@ 17080 @LENGTH@ 9
------------------INS SimpleName@@MethodName:getManagementInterfaceMinorVersion:[] @TO@ MethodInvocation@@subsystem.getManagementInterfaceMinorVersion() @AT@ 17090 @LENGTH@ 36
---------------INS StringLiteral@@"." @TO@ InfixExpression@@entry.getValue().getManagementInterfaceMajorVersion() + "." + entry.getValue().getManagementInterfaceMicroVersion() @AT@ 17153 @LENGTH@ 3
---INS VariableDeclarationStatement@@SubsystemInformation subsystem=entry.getValue(); @TO@ EnhancedForStatement@@for (final Map.Entry<String,SubsystemInformation> entry : subsystemsInfo.entrySet()) {  subsystems.add(entry.getKey(),entry.getValue().getManagementInterfaceMajorVersion() + "." + entry.getValue().getManagementInterfaceMicroVersion());} @AT@ 16879 @LENGTH@ 50
------INS SimpleType@@SubsystemInformation @TO@ VariableDeclarationStatement@@SubsystemInformation subsystem=entry.getValue(); @AT@ 16879 @LENGTH@ 20
------INS VariableDeclarationFragment@@subsystem=entry.getValue() @TO@ VariableDeclarationStatement@@SubsystemInformation subsystem=entry.getValue(); @AT@ 16900 @LENGTH@ 28
---------INS SimpleName@@subsystem @TO@ VariableDeclarationFragment@@subsystem=entry.getValue() @AT@ 16900 @LENGTH@ 9
---------INS MethodInvocation@@entry.getValue() @TO@ VariableDeclarationFragment@@subsystem=entry.getValue() @AT@ 16912 @LENGTH@ 16
------------INS SimpleName@@Name:entry @TO@ MethodInvocation@@entry.getValue() @AT@ 16912 @LENGTH@ 5
------------INS SimpleName@@MethodName:getValue:[] @TO@ MethodInvocation@@entry.getValue() @AT@ 16918 @LENGTH@ 10


MOV ExpressionStatement@@Assignment:cache=getEndpoint().initializeCache() @TO@ MethodDeclaration@@protected, void, MethodName:doStart, Exception,  @AT@ 1936 @LENGTH@ 40


UPD IfStatement@@if (node.hasDefined(DEEP_COPY_SUBJECT_MODE) && node.get(DEEP_COPY_SUBJECT_MODE).asBoolean()) {  writer.writeEmptyElement(Element.SECURITY_MANAGEMENT.getLocalName());  writeAttribute(writer,Attribute.DEEP_COPY_SUBJECT_MODE,node.get(DEEP_COPY_SUBJECT_MODE));} @TO@ if (SecuritySubsystemRootResourceDefinition.DEEP_COPY_SUBJECT_MODE.isMarshallable(node)) {  writer.writeEmptyElement(Element.SECURITY_MANAGEMENT.getLocalName());  SecuritySubsystemRootResourceDefinition.DEEP_COPY_SUBJECT_MODE.marshallAsAttribute(node,writer);} @AT@ 8076 @LENGTH@ 302
---INS MethodInvocation@@SecuritySubsystemRootResourceDefinition.DEEP_COPY_SUBJECT_MODE.isMarshallable(node) @TO@ IfStatement@@if (node.hasDefined(DEEP_COPY_SUBJECT_MODE) && node.get(DEEP_COPY_SUBJECT_MODE).asBoolean()) {  writer.writeEmptyElement(Element.SECURITY_MANAGEMENT.getLocalName());  writeAttribute(writer,Attribute.DEEP_COPY_SUBJECT_MODE,node.get(DEEP_COPY_SUBJECT_MODE));} @AT@ 8079 @LENGTH@ 83
------INS QualifiedName@@Name:SecuritySubsystemRootResourceDefinition.DEEP_COPY_SUBJECT_MODE @TO@ MethodInvocation@@SecuritySubsystemRootResourceDefinition.DEEP_COPY_SUBJECT_MODE.isMarshallable(node) @AT@ 8079 @LENGTH@ 62
------MOV SimpleName@@MethodName:hasDefined:[DEEP_COPY_SUBJECT_MODE] @TO@ MethodInvocation@@SecuritySubsystemRootResourceDefinition.DEEP_COPY_SUBJECT_MODE.isMarshallable(node) @AT@ 8085 @LENGTH@ 34
---DEL InfixExpression@@node.hasDefined(DEEP_COPY_SUBJECT_MODE) && node.get(DEEP_COPY_SUBJECT_MODE).asBoolean() @AT@ 8080 @LENGTH@ 87
------DEL MethodInvocation@@node.hasDefined(DEEP_COPY_SUBJECT_MODE) @AT@ 8080 @LENGTH@ 39
---------DEL SimpleName@@Name:node @AT@ 8080 @LENGTH@ 4
------DEL Operator@@&& @AT@ 8119 @LENGTH@ 2
------DEL MethodInvocation@@node.get(DEEP_COPY_SUBJECT_MODE).asBoolean() @AT@ 8123 @LENGTH@ 44
---------DEL MethodInvocation@@MethodName:get:[DEEP_COPY_SUBJECT_MODE] @AT@ 8123 @LENGTH@ 32
------------DEL SimpleName@@DEEP_COPY_SUBJECT_MODE @AT@ 8132 @LENGTH@ 22
---------DEL SimpleName@@Name:node @AT@ 8123 @LENGTH@ 4
---------DEL SimpleName@@MethodName:asBoolean:[] @AT@ 8156 @LENGTH@ 11
---UPD Block@@ThenBody:{  writer.writeEmptyElement(Element.SECURITY_MANAGEMENT.getLocalName());  writeAttribute(writer,Attribute.DEEP_COPY_SUBJECT_MODE,node.get(DEEP_COPY_SUBJECT_MODE));} @TO@ ThenBody:{  writer.writeEmptyElement(Element.SECURITY_MANAGEMENT.getLocalName());  SecuritySubsystemRootResourceDefinition.DEEP_COPY_SUBJECT_MODE.marshallAsAttribute(node,writer);} @AT@ 8169 @LENGTH@ 209
------UPD ExpressionStatement@@MethodInvocation:writeAttribute(writer,Attribute.DEEP_COPY_SUBJECT_MODE,node.get(DEEP_COPY_SUBJECT_MODE)) @TO@ MethodInvocation:SecuritySubsystemRootResourceDefinition.DEEP_COPY_SUBJECT_MODE.marshallAsAttribute(node,writer) @AT@ 8273 @LENGTH@ 91
---------UPD MethodInvocation@@writeAttribute(writer,Attribute.DEEP_COPY_SUBJECT_MODE,node.get(DEEP_COPY_SUBJECT_MODE)) @TO@ SecuritySubsystemRootResourceDefinition.DEEP_COPY_SUBJECT_MODE.marshallAsAttribute(node,writer) @AT@ 8273 @LENGTH@ 90
------------INS QualifiedName@@Name:SecuritySubsystemRootResourceDefinition.DEEP_COPY_SUBJECT_MODE @TO@ MethodInvocation@@writeAttribute(writer,Attribute.DEEP_COPY_SUBJECT_MODE,node.get(DEEP_COPY_SUBJECT_MODE)) @AT@ 8268 @LENGTH@ 62
------------DEL SimpleName@@MethodName:writeAttribute:[writer, Attribute.DEEP_COPY_SUBJECT_MODE, node.get(DEEP_COPY_SUBJECT_MODE)] @AT@ 8273 @LENGTH@ 90
---------------DEL SimpleName@@writer @AT@ 8288 @LENGTH@ 6
---------------DEL QualifiedName@@Attribute.DEEP_COPY_SUBJECT_MODE @AT@ 8296 @LENGTH@ 32
------------------DEL SimpleName@@Attribute @AT@ 8296 @LENGTH@ 9
------------------DEL SimpleName@@DEEP_COPY_SUBJECT_MODE @AT@ 8306 @LENGTH@ 22
---------------DEL MethodInvocation@@node.get(DEEP_COPY_SUBJECT_MODE) @AT@ 8330 @LENGTH@ 32
------------------DEL SimpleName@@Name:node @AT@ 8330 @LENGTH@ 4
------------------DEL SimpleName@@MethodName:get:[DEEP_COPY_SUBJECT_MODE] @AT@ 8335 @LENGTH@ 27
------------INS SimpleName@@MethodName:marshallAsAttribute:[node, writer] @TO@ MethodInvocation@@writeAttribute(writer,Attribute.DEEP_COPY_SUBJECT_MODE,node.get(DEEP_COPY_SUBJECT_MODE)) @AT@ 8331 @LENGTH@ 32
---------------MOV SimpleName@@DEEP_COPY_SUBJECT_MODE @TO@ SimpleName@@MethodName:marshallAsAttribute:[node, writer] @AT@ 8339 @LENGTH@ 22
---------------INS SimpleName@@node @TO@ SimpleName@@MethodName:marshallAsAttribute:[node, writer] @AT@ 8351 @LENGTH@ 4


DEL FieldDeclaration@@private, BrokerService, [broker] @AT@ 1951 @LENGTH@ 29
---DEL Modifier@@private @AT@ 1951 @LENGTH@ 7
---DEL SimpleType@@BrokerService @AT@ 1959 @LENGTH@ 13
---DEL VariableDeclarationFragment@@broker @AT@ 1973 @LENGTH@ 6
------DEL SimpleName@@broker @AT@ 1973 @LENGTH@ 6


UPD ReturnStatement@@ArrayCreation:new Option[]{new DefaultCompositeOption(fabricDistributionConfiguration()),debugConfiguration("5005",false)} @TO@ ArrayCreation:new Option[]{new DefaultCompositeOption(fabricDistributionConfiguration())} @AT@ 9561 @LENGTH@ 160
---UPD ArrayCreation@@new Option[]{new DefaultCompositeOption(fabricDistributionConfiguration()),debugConfiguration("5005",false)} @TO@ new Option[]{new DefaultCompositeOption(fabricDistributionConfiguration())} @AT@ 9568 @LENGTH@ 152
------UPD ArrayInitializer@@{new DefaultCompositeOption(fabricDistributionConfiguration()),debugConfiguration("5005",false)} @TO@ {new DefaultCompositeOption(fabricDistributionConfiguration())} @AT@ 9580 @LENGTH@ 140
---------DEL MethodInvocation@@debugConfiguration("5005",false) @AT@ 9677 @LENGTH@ 33
------------DEL SimpleName@@MethodName:debugConfiguration:["5005", false] @AT@ 9677 @LENGTH@ 33
---------------DEL StringLiteral@@"5005" @AT@ 9696 @LENGTH@ 6
---------------DEL BooleanLiteral@@false @AT@ 9704 @LENGTH@ 5


INS MethodDeclaration@@public, void, MethodName:testLastIsQuote, Exception,  @TO@ TypeDeclaration@@[public]StingQuoteHelperTest, TestCase @AT@ 4607 @LENGTH@ 560
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testLastIsQuote, Exception,  @AT@ 4607 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testLastIsQuote, Exception,  @AT@ 4614 @LENGTH@ 4
---INS SimpleName@@MethodName:testLastIsQuote @TO@ MethodDeclaration@@public, void, MethodName:testLastIsQuote, Exception,  @AT@ 4619 @LENGTH@ 15
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:testLastIsQuote, Exception,  @AT@ 4644 @LENGTH@ 9
---INS VariableDeclarationStatement@@String[] out=StringQuoteHelper.splitSafeQuote(" ${body}, 5, 'Hello World'",',',true); @TO@ MethodDeclaration@@public, void, MethodName:testLastIsQuote, Exception,  @AT@ 4664 @LENGTH@ 89
------INS ArrayType@@String[] @TO@ VariableDeclarationStatement@@String[] out=StringQuoteHelper.splitSafeQuote(" ${body}, 5, 'Hello World'",',',true); @AT@ 4664 @LENGTH@ 8
---------INS SimpleType@@String @TO@ ArrayType@@String[] @AT@ 4664 @LENGTH@ 6
------INS VariableDeclarationFragment@@out=StringQuoteHelper.splitSafeQuote(" ${body}, 5, 'Hello World'",',',true) @TO@ VariableDeclarationStatement@@String[] out=StringQuoteHelper.splitSafeQuote(" ${body}, 5, 'Hello World'",',',true); @AT@ 4673 @LENGTH@ 79
---------INS SimpleName@@out @TO@ VariableDeclarationFragment@@out=StringQuoteHelper.splitSafeQuote(" ${body}, 5, 'Hello World'",',',true) @AT@ 4673 @LENGTH@ 3
---------INS MethodInvocation@@StringQuoteHelper.splitSafeQuote(" ${body}, 5, 'Hello World'",',',true) @TO@ VariableDeclarationFragment@@out=StringQuoteHelper.splitSafeQuote(" ${body}, 5, 'Hello World'",',',true) @AT@ 4679 @LENGTH@ 73
------------INS SimpleName@@Name:StringQuoteHelper @TO@ MethodInvocation@@StringQuoteHelper.splitSafeQuote(" ${body}, 5, 'Hello World'",',',true) @AT@ 4679 @LENGTH@ 17
------------INS SimpleName@@MethodName:splitSafeQuote:[" ${body}, 5, 'Hello World'", ',', true] @TO@ MethodInvocation@@StringQuoteHelper.splitSafeQuote(" ${body}, 5, 'Hello World'",',',true) @AT@ 4697 @LENGTH@ 55
---------------INS StringLiteral@@" ${body}, 5, 'Hello World'" @TO@ SimpleName@@MethodName:splitSafeQuote:[" ${body}, 5, 'Hello World'", ',', true] @AT@ 4712 @LENGTH@ 28
---------------INS CharacterLiteral@@',' @TO@ SimpleName@@MethodName:splitSafeQuote:[" ${body}, 5, 'Hello World'", ',', true] @AT@ 4742 @LENGTH@ 3
---------------INS BooleanLiteral@@true @TO@ SimpleName@@MethodName:splitSafeQuote:[" ${body}, 5, 'Hello World'", ',', true] @AT@ 4747 @LENGTH@ 4
---INS ExpressionStatement@@MethodInvocation:assertEquals(3,out.length) @TO@ MethodDeclaration@@public, void, MethodName:testLastIsQuote, Exception,  @AT@ 4762 @LENGTH@ 28
------INS MethodInvocation@@assertEquals(3,out.length) @TO@ ExpressionStatement@@MethodInvocation:assertEquals(3,out.length) @AT@ 4762 @LENGTH@ 27
---------INS SimpleName@@MethodName:assertEquals:[3, out.length] @TO@ MethodInvocation@@assertEquals(3,out.length) @AT@ 4762 @LENGTH@ 27
------------INS NumberLiteral@@3 @TO@ SimpleName@@MethodName:assertEquals:[3, out.length] @AT@ 4775 @LENGTH@ 1
------------INS QualifiedName@@out.length @TO@ SimpleName@@MethodName:assertEquals:[3, out.length] @AT@ 4778 @LENGTH@ 10
---------------INS SimpleName@@out @TO@ QualifiedName@@out.length @AT@ 4778 @LENGTH@ 3
---------------INS SimpleName@@length @TO@ QualifiedName@@out.length @AT@ 4782 @LENGTH@ 6
---INS ExpressionStatement@@MethodInvocation:assertEquals("${body}",out[0]) @TO@ MethodDeclaration@@public, void, MethodName:testLastIsQuote, Exception,  @AT@ 4799 @LENGTH@ 32
------INS MethodInvocation@@assertEquals("${body}",out[0]) @TO@ ExpressionStatement@@MethodInvocation:assertEquals("${body}",out[0]) @AT@ 4799 @LENGTH@ 31
---------INS SimpleName@@MethodName:assertEquals:["${body}", out[0]] @TO@ MethodInvocation@@assertEquals("${body}",out[0]) @AT@ 4799 @LENGTH@ 31
------------INS StringLiteral@@"${body}" @TO@ SimpleName@@MethodName:assertEquals:["${body}", out[0]] @AT@ 4812 @LENGTH@ 9
------------INS ArrayAccess@@out[0] @TO@ SimpleName@@MethodName:assertEquals:["${body}", out[0]] @AT@ 4823 @LENGTH@ 6
---------------INS SimpleName@@out @TO@ ArrayAccess@@out[0] @AT@ 4823 @LENGTH@ 3
---------------INS NumberLiteral@@0 @TO@ ArrayAccess@@out[0] @AT@ 4827 @LENGTH@ 1
---INS ExpressionStatement@@MethodInvocation:assertEquals("5",out[1]) @TO@ MethodDeclaration@@public, void, MethodName:testLastIsQuote, Exception,  @AT@ 4840 @LENGTH@ 26
------INS MethodInvocation@@assertEquals("5",out[1]) @TO@ ExpressionStatement@@MethodInvocation:assertEquals("5",out[1]) @AT@ 4840 @LENGTH@ 25
---------INS SimpleName@@MethodName:assertEquals:["5", out[1]] @TO@ MethodInvocation@@assertEquals("5",out[1]) @AT@ 4840 @LENGTH@ 25
------------INS StringLiteral@@"5" @TO@ SimpleName@@MethodName:assertEquals:["5", out[1]] @AT@ 4853 @LENGTH@ 3
------------INS ArrayAccess@@out[1] @TO@ SimpleName@@MethodName:assertEquals:["5", out[1]] @AT@ 4858 @LENGTH@ 6
---------------INS SimpleName@@out @TO@ ArrayAccess@@out[1] @AT@ 4858 @LENGTH@ 3
---------------INS NumberLiteral@@1 @TO@ ArrayAccess@@out[1] @AT@ 4862 @LENGTH@ 1
---INS ExpressionStatement@@MethodInvocation:assertEquals("Hello World",out[2]) @TO@ MethodDeclaration@@public, void, MethodName:testLastIsQuote, Exception,  @AT@ 4875 @LENGTH@ 36
------INS MethodInvocation@@assertEquals("Hello World",out[2]) @TO@ ExpressionStatement@@MethodInvocation:assertEquals("Hello World",out[2]) @AT@ 4875 @LENGTH@ 35
---------INS SimpleName@@MethodName:assertEquals:["Hello World", out[2]] @TO@ MethodInvocation@@assertEquals("Hello World",out[2]) @AT@ 4875 @LENGTH@ 35
------------INS StringLiteral@@"Hello World" @TO@ SimpleName@@MethodName:assertEquals:["Hello World", out[2]] @AT@ 4888 @LENGTH@ 13
------------INS ArrayAccess@@out[2] @TO@ SimpleName@@MethodName:assertEquals:["Hello World", out[2]] @AT@ 4903 @LENGTH@ 6
---------------INS SimpleName@@out @TO@ ArrayAccess@@out[2] @AT@ 4903 @LENGTH@ 3
---------------INS NumberLiteral@@2 @TO@ ArrayAccess@@out[2] @AT@ 4907 @LENGTH@ 1
---INS ExpressionStatement@@Assignment:out=StringQuoteHelper.splitSafeQuote(" ${body}, 5, \"Hello World\"",',',true) @TO@ MethodDeclaration@@public, void, MethodName:testLastIsQuote, Exception,  @AT@ 4921 @LENGTH@ 82
------INS Assignment@@out=StringQuoteHelper.splitSafeQuote(" ${body}, 5, \"Hello World\"",',',true) @TO@ ExpressionStatement@@Assignment:out=StringQuoteHelper.splitSafeQuote(" ${body}, 5, \"Hello World\"",',',true) @AT@ 4921 @LENGTH@ 81
---------INS SimpleName@@out @TO@ Assignment@@out=StringQuoteHelper.splitSafeQuote(" ${body}, 5, \"Hello World\"",',',true) @AT@ 4921 @LENGTH@ 3
---------INS Operator@@= @TO@ Assignment@@out=StringQuoteHelper.splitSafeQuote(" ${body}, 5, \"Hello World\"",',',true) @AT@ 4924 @LENGTH@ 1
---------INS MethodInvocation@@StringQuoteHelper.splitSafeQuote(" ${body}, 5, \"Hello World\"",',',true) @TO@ Assignment@@out=StringQuoteHelper.splitSafeQuote(" ${body}, 5, \"Hello World\"",',',true) @AT@ 4927 @LENGTH@ 75
------------INS SimpleName@@Name:StringQuoteHelper @TO@ MethodInvocation@@StringQuoteHelper.splitSafeQuote(" ${body}, 5, \"Hello World\"",',',true) @AT@ 4927 @LENGTH@ 17
------------INS SimpleName@@MethodName:splitSafeQuote:[" ${body}, 5, \"Hello World\"", ',', true] @TO@ MethodInvocation@@StringQuoteHelper.splitSafeQuote(" ${body}, 5, \"Hello World\"",',',true) @AT@ 4945 @LENGTH@ 57
---------------INS StringLiteral@@" ${body}, 5, \"Hello World\"" @TO@ SimpleName@@MethodName:splitSafeQuote:[" ${body}, 5, \"Hello World\"", ',', true] @AT@ 4960 @LENGTH@ 30
---------------INS CharacterLiteral@@',' @TO@ SimpleName@@MethodName:splitSafeQuote:[" ${body}, 5, \"Hello World\"", ',', true] @AT@ 4992 @LENGTH@ 3
---------------INS BooleanLiteral@@true @TO@ SimpleName@@MethodName:splitSafeQuote:[" ${body}, 5, \"Hello World\"", ',', true] @AT@ 4997 @LENGTH@ 4
---INS ExpressionStatement@@MethodInvocation:assertEquals(3,out.length) @TO@ MethodDeclaration@@public, void, MethodName:testLastIsQuote, Exception,  @AT@ 5012 @LENGTH@ 28
------INS MethodInvocation@@assertEquals(3,out.length) @TO@ ExpressionStatement@@MethodInvocation:assertEquals(3,out.length) @AT@ 5012 @LENGTH@ 27
---------INS SimpleName@@MethodName:assertEquals:[3, out.length] @TO@ MethodInvocation@@assertEquals(3,out.length) @AT@ 5012 @LENGTH@ 27
------------INS NumberLiteral@@3 @TO@ SimpleName@@MethodName:assertEquals:[3, out.length] @AT@ 5025 @LENGTH@ 1
------------INS QualifiedName@@out.length @TO@ SimpleName@@MethodName:assertEquals:[3, out.length] @AT@ 5028 @LENGTH@ 10
---------------INS SimpleName@@out @TO@ QualifiedName@@out.length @AT@ 5028 @LENGTH@ 3
---------------INS SimpleName@@length @TO@ QualifiedName@@out.length @AT@ 5032 @LENGTH@ 6
---INS ExpressionStatement@@MethodInvocation:assertEquals("${body}",out[0]) @TO@ MethodDeclaration@@public, void, MethodName:testLastIsQuote, Exception,  @AT@ 5049 @LENGTH@ 32
------INS MethodInvocation@@assertEquals("${body}",out[0]) @TO@ ExpressionStatement@@MethodInvocation:assertEquals("${body}",out[0]) @AT@ 5049 @LENGTH@ 31
---------INS SimpleName@@MethodName:assertEquals:["${body}", out[0]] @TO@ MethodInvocation@@assertEquals("${body}",out[0]) @AT@ 5049 @LENGTH@ 31
------------INS StringLiteral@@"${body}" @TO@ SimpleName@@MethodName:assertEquals:["${body}", out[0]] @AT@ 5062 @LENGTH@ 9
------------INS ArrayAccess@@out[0] @TO@ SimpleName@@MethodName:assertEquals:["${body}", out[0]] @AT@ 5073 @LENGTH@ 6
---------------INS SimpleName@@out @TO@ ArrayAccess@@out[0] @AT@ 5073 @LENGTH@ 3
---------------INS NumberLiteral@@0 @TO@ ArrayAccess@@out[0] @AT@ 5077 @LENGTH@ 1
---INS ExpressionStatement@@MethodInvocation:assertEquals("5",out[1]) @TO@ MethodDeclaration@@public, void, MethodName:testLastIsQuote, Exception,  @AT@ 5090 @LENGTH@ 26
------INS MethodInvocation@@assertEquals("5",out[1]) @TO@ ExpressionStatement@@MethodInvocation:assertEquals("5",out[1]) @AT@ 5090 @LENGTH@ 25
---------INS SimpleName@@MethodName:assertEquals:["5", out[1]] @TO@ MethodInvocation@@assertEquals("5",out[1]) @AT@ 5090 @LENGTH@ 25
------------INS StringLiteral@@"5" @TO@ SimpleName@@MethodName:assertEquals:["5", out[1]] @AT@ 5103 @LENGTH@ 3
------------INS ArrayAccess@@out[1] @TO@ SimpleName@@MethodName:assertEquals:["5", out[1]] @AT@ 5108 @LENGTH@ 6
---------------INS SimpleName@@out @TO@ ArrayAccess@@out[1] @AT@ 5108 @LENGTH@ 3
---------------INS NumberLiteral@@1 @TO@ ArrayAccess@@out[1] @AT@ 5112 @LENGTH@ 1
---INS ExpressionStatement@@MethodInvocation:assertEquals("Hello World",out[2]) @TO@ MethodDeclaration@@public, void, MethodName:testLastIsQuote, Exception,  @AT@ 5125 @LENGTH@ 36
------INS MethodInvocation@@assertEquals("Hello World",out[2]) @TO@ ExpressionStatement@@MethodInvocation:assertEquals("Hello World",out[2]) @AT@ 5125 @LENGTH@ 35
---------INS SimpleName@@MethodName:assertEquals:["Hello World", out[2]] @TO@ MethodInvocation@@assertEquals("Hello World",out[2]) @AT@ 5125 @LENGTH@ 35
------------INS StringLiteral@@"Hello World" @TO@ SimpleName@@MethodName:assertEquals:["Hello World", out[2]] @AT@ 5138 @LENGTH@ 13
------------INS ArrayAccess@@out[2] @TO@ SimpleName@@MethodName:assertEquals:["Hello World", out[2]] @AT@ 5153 @LENGTH@ 6
---------------INS SimpleName@@out @TO@ ArrayAccess@@out[2] @AT@ 5153 @LENGTH@ 3
---------------INS NumberLiteral@@2 @TO@ ArrayAccess@@out[2] @AT@ 5157 @LENGTH@ 1


UPD FieldDeclaration@@String, [VIRUTAL_HOST="virtualhost"] @TO@ String, [VIRTUAL_HOST="virtualhost"] @AT@ 3353 @LENGTH@ 36
---UPD VariableDeclarationFragment@@VIRUTAL_HOST="virtualhost" @TO@ VIRTUAL_HOST="virtualhost" @AT@ 3360 @LENGTH@ 28
------UPD SimpleName@@VIRUTAL_HOST @TO@ VIRTUAL_HOST @AT@ 3360 @LENGTH@ 12


UPD ExpressionStatement@@MethodInvocation:context.restartRequired() @TO@ MethodInvocation:context.reloadRequired() @AT@ 4151 @LENGTH@ 26
---UPD MethodInvocation@@context.restartRequired() @TO@ context.reloadRequired() @AT@ 4151 @LENGTH@ 25
------UPD SimpleName@@MethodName:restartRequired:[] @TO@ MethodName:reloadRequired:[] @AT@ 4159 @LENGTH@ 17


UPD MethodDeclaration@@private, static, void, MethodName:transformModulesToAttributes, final PathAddress address, final String newName, final String oldName, final TransformationContext context, final ModelNode model,  @TO@ private, void, MethodName:transformModulesToAttributes, final PathAddress address, final String newName, final String oldName, final TransformationContext context, final ModelNode model,  @AT@ 12313 @LENGTH@ 526


DEL FieldDeclaration@@public, static, final, String, [REGULAR_EXPRESSION="regular-expression"] @AT@ 12659 @LENGTH@ 69
---DEL Modifier@@public @AT@ 12659 @LENGTH@ 6
---DEL Modifier@@static @AT@ 12666 @LENGTH@ 6
---DEL Modifier@@final @AT@ 12673 @LENGTH@ 5
---DEL SimpleType@@String @AT@ 12679 @LENGTH@ 6
---DEL VariableDeclarationFragment@@REGULAR_EXPRESSION="regular-expression" @AT@ 12686 @LENGTH@ 41
------DEL SimpleName@@REGULAR_EXPRESSION @AT@ 12686 @LENGTH@ 18
------DEL StringLiteral@@"regular-expression" @AT@ 12707 @LENGTH@ 20


INS ExpressionStatement@@MethodInvocation:this.handler.setOption(WSHandlerConstants.IS_BSP_COMPLIANT,true) @TO@ MethodDeclaration@@public, void, MethodName:setBspCompliant, boolean bspCompliant,  @AT@ 21896 @LENGTH@ 66
---INS MethodInvocation@@this.handler.setOption(WSHandlerConstants.IS_BSP_COMPLIANT,true) @TO@ ExpressionStatement@@MethodInvocation:this.handler.setOption(WSHandlerConstants.IS_BSP_COMPLIANT,true) @AT@ 21896 @LENGTH@ 65
------INS FieldAccess@@this.handler @TO@ MethodInvocation@@this.handler.setOption(WSHandlerConstants.IS_BSP_COMPLIANT,true) @AT@ 21896 @LENGTH@ 12
---------INS ThisExpression@@this @TO@ FieldAccess@@this.handler @AT@ 21896 @LENGTH@ 4
---------INS SimpleName@@handler @TO@ FieldAccess@@this.handler @AT@ 21901 @LENGTH@ 7
------INS SimpleName@@MethodName:setOption:[WSHandlerConstants.IS_BSP_COMPLIANT, true] @TO@ MethodInvocation@@this.handler.setOption(WSHandlerConstants.IS_BSP_COMPLIANT,true) @AT@ 21909 @LENGTH@ 52
---------INS QualifiedName@@WSHandlerConstants.IS_BSP_COMPLIANT @TO@ SimpleName@@MethodName:setOption:[WSHandlerConstants.IS_BSP_COMPLIANT, true] @AT@ 21919 @LENGTH@ 35
------------INS SimpleName@@WSHandlerConstants @TO@ QualifiedName@@WSHandlerConstants.IS_BSP_COMPLIANT @AT@ 21919 @LENGTH@ 18
------------INS SimpleName@@IS_BSP_COMPLIANT @TO@ QualifiedName@@WSHandlerConstants.IS_BSP_COMPLIANT @AT@ 21938 @LENGTH@ 16
---------INS BooleanLiteral@@true @TO@ SimpleName@@MethodName:setOption:[WSHandlerConstants.IS_BSP_COMPLIANT, true] @AT@ 21956 @LENGTH@ 4


UPD ReturnStatement@@ConditionalExpression:session == null || data == null ? null : SignInAttempts.add(session,data) @TO@ ConditionalExpression:session == null || data == null ? false : SignInAttempts.add(session,data) @AT@ 13053 @LENGTH@ 82
---UPD ConditionalExpression@@session == null || data == null ? null : SignInAttempts.add(session,data) @TO@ session == null || data == null ? false : SignInAttempts.add(session,data) @AT@ 13060 @LENGTH@ 74
------INS BooleanLiteral@@false @TO@ ConditionalExpression@@session == null || data == null ? null : SignInAttempts.add(session,data) @AT@ 13094 @LENGTH@ 5
------DEL NullLiteral@@null @AT@ 13094 @LENGTH@ 4


INS MethodDeclaration@@public, Collection<Timer>, MethodName:getAllTimers, IllegalStateException, EJBException,  @TO@ TypeDeclaration@@[public]NonFunctionalTimerService, [TimerService] @AT@ 4854 @LENGTH@ 321
---INS Modifier@@public @TO@ MethodDeclaration@@public, Collection<Timer>, MethodName:getAllTimers, IllegalStateException, EJBException,  @AT@ 4854 @LENGTH@ 6
---INS ParameterizedType@@Collection<Timer> @TO@ MethodDeclaration@@public, Collection<Timer>, MethodName:getAllTimers, IllegalStateException, EJBException,  @AT@ 4861 @LENGTH@ 17
------INS SimpleType@@Collection @TO@ ParameterizedType@@Collection<Timer> @AT@ 4861 @LENGTH@ 10
------INS SimpleType@@Timer @TO@ ParameterizedType@@Collection<Timer> @AT@ 4872 @LENGTH@ 5
---INS SimpleName@@MethodName:getAllTimers @TO@ MethodDeclaration@@public, Collection<Timer>, MethodName:getAllTimers, IllegalStateException, EJBException,  @AT@ 4879 @LENGTH@ 12
---INS SimpleType@@IllegalStateException @TO@ MethodDeclaration@@public, Collection<Timer>, MethodName:getAllTimers, IllegalStateException, EJBException,  @AT@ 4901 @LENGTH@ 21
---INS SimpleType@@EJBException @TO@ MethodDeclaration@@public, Collection<Timer>, MethodName:getAllTimers, IllegalStateException, EJBException,  @AT@ 4924 @LENGTH@ 12
---INS ReturnStatement@@MethodInvocation:this.getTimers() @TO@ MethodDeclaration@@public, Collection<Timer>, MethodName:getAllTimers, IllegalStateException, EJBException,  @AT@ 5145 @LENGTH@ 24
------INS MethodInvocation@@this.getTimers() @TO@ ReturnStatement@@MethodInvocation:this.getTimers() @AT@ 5152 @LENGTH@ 16
---------INS ThisExpression@@this @TO@ MethodInvocation@@this.getTimers() @AT@ 5152 @LENGTH@ 4
---------INS SimpleName@@MethodName:getTimers:[] @TO@ MethodInvocation@@this.getTimers() @AT@ 5157 @LENGTH@ 11


DEL MethodDeclaration@@public, void, MethodName:testMultiExec, Exception,  @AT@ 1745 @LENGTH@ 49
---DEL Modifier@@public @AT@ 1745 @LENGTH@ 6
---DEL PrimitiveType@@void @AT@ 1752 @LENGTH@ 4
---DEL SimpleName@@MethodName:testMultiExec @AT@ 1757 @LENGTH@ 13
---DEL SimpleType@@Exception @AT@ 1780 @LENGTH@ 9


INS MethodDeclaration@@public, void, MethodName:testDeleteIfEmptyRestart, Exception,  @TO@ TypeDeclaration@@[public]StaxEventItemWriterTests,  @AT@ 13642 @LENGTH@ 467
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testDeleteIfEmptyRestart, Exception,  @AT@ 13642 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testDeleteIfEmptyRestart, Exception,  @AT@ 13649 @LENGTH@ 4
---INS SimpleName@@MethodName:testDeleteIfEmptyRestart @TO@ MethodDeclaration@@public, void, MethodName:testDeleteIfEmptyRestart, Exception,  @AT@ 13654 @LENGTH@ 24
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:testDeleteIfEmptyRestart, Exception,  @AT@ 13688 @LENGTH@ 9
---INS ExpressionStatement@@MethodInvocation:writer.setShouldDeleteIfEmpty(true) @TO@ MethodDeclaration@@public, void, MethodName:testDeleteIfEmptyRestart, Exception,  @AT@ 13702 @LENGTH@ 36
------INS MethodInvocation@@writer.setShouldDeleteIfEmpty(true) @TO@ ExpressionStatement@@MethodInvocation:writer.setShouldDeleteIfEmpty(true) @AT@ 13702 @LENGTH@ 35
---------INS SimpleName@@Name:writer @TO@ MethodInvocation@@writer.setShouldDeleteIfEmpty(true) @AT@ 13702 @LENGTH@ 6
---------INS SimpleName@@MethodName:setShouldDeleteIfEmpty:[true] @TO@ MethodInvocation@@writer.setShouldDeleteIfEmpty(true) @AT@ 13709 @LENGTH@ 28
------------INS BooleanLiteral@@true @TO@ SimpleName@@MethodName:setShouldDeleteIfEmpty:[true] @AT@ 13732 @LENGTH@ 4
---INS ExpressionStatement@@MethodInvocation:writer.open(executionContext) @TO@ MethodDeclaration@@public, void, MethodName:testDeleteIfEmptyRestart, Exception,  @AT@ 13741 @LENGTH@ 30
------INS MethodInvocation@@writer.open(executionContext) @TO@ ExpressionStatement@@MethodInvocation:writer.open(executionContext) @AT@ 13741 @LENGTH@ 29
---------INS SimpleName@@Name:writer @TO@ MethodInvocation@@writer.open(executionContext) @AT@ 13741 @LENGTH@ 6
---------INS SimpleName@@MethodName:open:[executionContext] @TO@ MethodInvocation@@writer.open(executionContext) @AT@ 13748 @LENGTH@ 22
------------INS SimpleName@@executionContext @TO@ SimpleName@@MethodName:open:[executionContext] @AT@ 13753 @LENGTH@ 16
---INS ExpressionStatement@@MethodInvocation:writer.update(executionContext) @TO@ MethodDeclaration@@public, void, MethodName:testDeleteIfEmptyRestart, Exception,  @AT@ 13774 @LENGTH@ 32
------INS MethodInvocation@@writer.update(executionContext) @TO@ ExpressionStatement@@MethodInvocation:writer.update(executionContext) @AT@ 13774 @LENGTH@ 31
---------INS SimpleName@@Name:writer @TO@ MethodInvocation@@writer.update(executionContext) @AT@ 13774 @LENGTH@ 6
---------INS SimpleName@@MethodName:update:[executionContext] @TO@ MethodInvocation@@writer.update(executionContext) @AT@ 13781 @LENGTH@ 24
------------INS SimpleName@@executionContext @TO@ SimpleName@@MethodName:update:[executionContext] @AT@ 13788 @LENGTH@ 16
---INS ExpressionStatement@@MethodInvocation:writer.close() @TO@ MethodDeclaration@@public, void, MethodName:testDeleteIfEmptyRestart, Exception,  @AT@ 13809 @LENGTH@ 15
------INS MethodInvocation@@writer.close() @TO@ ExpressionStatement@@MethodInvocation:writer.close() @AT@ 13809 @LENGTH@ 14
---------INS SimpleName@@Name:writer @TO@ MethodInvocation@@writer.close() @AT@ 13809 @LENGTH@ 6
---------INS SimpleName@@MethodName:close:[] @TO@ MethodInvocation@@writer.close() @AT@ 13816 @LENGTH@ 7
---INS ExpressionStatement@@MethodInvocation:assertFalse(resource.getFile().exists()) @TO@ MethodDeclaration@@public, void, MethodName:testDeleteIfEmptyRestart, Exception,  @AT@ 13827 @LENGTH@ 41
------INS MethodInvocation@@assertFalse(resource.getFile().exists()) @TO@ ExpressionStatement@@MethodInvocation:assertFalse(resource.getFile().exists()) @AT@ 13827 @LENGTH@ 40
---------INS SimpleName@@MethodName:assertFalse:[resource.getFile().exists()] @TO@ MethodInvocation@@assertFalse(resource.getFile().exists()) @AT@ 13827 @LENGTH@ 40
------------INS MethodInvocation@@resource.getFile().exists() @TO@ SimpleName@@MethodName:assertFalse:[resource.getFile().exists()] @AT@ 13839 @LENGTH@ 27
---------------INS MethodInvocation@@MethodName:getFile:[] @TO@ MethodInvocation@@resource.getFile().exists() @AT@ 13839 @LENGTH@ 18
---------------INS SimpleName@@Name:resource @TO@ MethodInvocation@@resource.getFile().exists() @AT@ 13839 @LENGTH@ 8
---------------INS SimpleName@@MethodName:exists:[] @TO@ MethodInvocation@@resource.getFile().exists() @AT@ 13858 @LENGTH@ 8
---INS ExpressionStatement@@Assignment:writer=createItemWriter() @TO@ MethodDeclaration@@public, void, MethodName:testDeleteIfEmptyRestart, Exception,  @AT@ 13871 @LENGTH@ 28
------INS Assignment@@writer=createItemWriter() @TO@ ExpressionStatement@@Assignment:writer=createItemWriter() @AT@ 13871 @LENGTH@ 27
---------INS SimpleName@@writer @TO@ Assignment@@writer=createItemWriter() @AT@ 13871 @LENGTH@ 6
---------INS Operator@@= @TO@ Assignment@@writer=createItemWriter() @AT@ 13877 @LENGTH@ 1
---------INS MethodInvocation@@MethodName:createItemWriter:[] @TO@ Assignment@@writer=createItemWriter() @AT@ 13880 @LENGTH@ 18
---INS ExpressionStatement@@MethodInvocation:writer.setShouldDeleteIfEmpty(true) @TO@ MethodDeclaration@@public, void, MethodName:testDeleteIfEmptyRestart, Exception,  @AT@ 13902 @LENGTH@ 36
------INS MethodInvocation@@writer.setShouldDeleteIfEmpty(true) @TO@ ExpressionStatement@@MethodInvocation:writer.setShouldDeleteIfEmpty(true) @AT@ 13902 @LENGTH@ 35
---------INS SimpleName@@Name:writer @TO@ MethodInvocation@@writer.setShouldDeleteIfEmpty(true) @AT@ 13902 @LENGTH@ 6
---------INS SimpleName@@MethodName:setShouldDeleteIfEmpty:[true] @TO@ MethodInvocation@@writer.setShouldDeleteIfEmpty(true) @AT@ 13909 @LENGTH@ 28
------------INS BooleanLiteral@@true @TO@ SimpleName@@MethodName:setShouldDeleteIfEmpty:[true] @AT@ 13932 @LENGTH@ 4
---INS ExpressionStatement@@MethodInvocation:writer.open(executionContext) @TO@ MethodDeclaration@@public, void, MethodName:testDeleteIfEmptyRestart, Exception,  @AT@ 13941 @LENGTH@ 30
------INS MethodInvocation@@writer.open(executionContext) @TO@ ExpressionStatement@@MethodInvocation:writer.open(executionContext) @AT@ 13941 @LENGTH@ 29
---------INS SimpleName@@Name:writer @TO@ MethodInvocation@@writer.open(executionContext) @AT@ 13941 @LENGTH@ 6
---------INS SimpleName@@MethodName:open:[executionContext] @TO@ MethodInvocation@@writer.open(executionContext) @AT@ 13948 @LENGTH@ 22
------------INS SimpleName@@executionContext @TO@ SimpleName@@MethodName:open:[executionContext] @AT@ 13953 @LENGTH@ 16
---INS ExpressionStatement@@MethodInvocation:writer.close() @TO@ MethodDeclaration@@public, void, MethodName:testDeleteIfEmptyRestart, Exception,  @AT@ 13974 @LENGTH@ 15
------INS MethodInvocation@@writer.close() @TO@ ExpressionStatement@@MethodInvocation:writer.close() @AT@ 13974 @LENGTH@ 14
---------INS SimpleName@@Name:writer @TO@ MethodInvocation@@writer.close() @AT@ 13974 @LENGTH@ 6
---------INS SimpleName@@MethodName:close:[] @TO@ MethodInvocation@@writer.close() @AT@ 13981 @LENGTH@ 7
---INS VariableDeclarationStatement@@String content=getOutputFileContent(); @TO@ MethodDeclaration@@public, void, MethodName:testDeleteIfEmptyRestart, Exception,  @AT@ 13992 @LENGTH@ 40
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String content=getOutputFileContent(); @AT@ 13992 @LENGTH@ 6
------INS VariableDeclarationFragment@@content=getOutputFileContent() @TO@ VariableDeclarationStatement@@String content=getOutputFileContent(); @AT@ 13999 @LENGTH@ 32
---------INS SimpleName@@content @TO@ VariableDeclarationFragment@@content=getOutputFileContent() @AT@ 13999 @LENGTH@ 7
---------INS MethodInvocation@@MethodName:getOutputFileContent:[] @TO@ VariableDeclarationFragment@@content=getOutputFileContent() @AT@ 14009 @LENGTH@ 22
---INS ExpressionStatement@@MethodInvocation:assertTrue("Wrong content: " + content,content.contains(TEST_STRING)) @TO@ MethodDeclaration@@public, void, MethodName:testDeleteIfEmptyRestart, Exception,  @AT@ 14035 @LENGTH@ 71
------INS MethodInvocation@@assertTrue("Wrong content: " + content,content.contains(TEST_STRING)) @TO@ ExpressionStatement@@MethodInvocation:assertTrue("Wrong content: " + content,content.contains(TEST_STRING)) @AT@ 14035 @LENGTH@ 70
---------INS SimpleName@@MethodName:assertTrue:["Wrong content: " + content, content.contains(TEST_STRING)] @TO@ MethodInvocation@@assertTrue("Wrong content: " + content,content.contains(TEST_STRING)) @AT@ 14035 @LENGTH@ 70
------------INS InfixExpression@@"Wrong content: " + content @TO@ SimpleName@@MethodName:assertTrue:["Wrong content: " + content, content.contains(TEST_STRING)] @AT@ 14046 @LENGTH@ 27
---------------INS StringLiteral@@"Wrong content: " @TO@ InfixExpression@@"Wrong content: " + content @AT@ 14046 @LENGTH@ 17
---------------INS Operator@@+ @TO@ InfixExpression@@"Wrong content: " + content @AT@ 14063 @LENGTH@ 1
---------------INS SimpleName@@content @TO@ InfixExpression@@"Wrong content: " + content @AT@ 14066 @LENGTH@ 7
------------INS MethodInvocation@@content.contains(TEST_STRING) @TO@ SimpleName@@MethodName:assertTrue:["Wrong content: " + content, content.contains(TEST_STRING)] @AT@ 14075 @LENGTH@ 29
---------------INS SimpleName@@Name:content @TO@ MethodInvocation@@content.contains(TEST_STRING) @AT@ 14075 @LENGTH@ 7
---------------INS SimpleName@@MethodName:contains:[TEST_STRING] @TO@ MethodInvocation@@content.contains(TEST_STRING) @AT@ 14083 @LENGTH@ 21
------------------INS SimpleName@@TEST_STRING @TO@ SimpleName@@MethodName:contains:[TEST_STRING] @AT@ 14092 @LENGTH@ 11


UPD ReturnStatement@@MethodInvocation:FunctorUtils.copy(iClosures) @TO@ MethodInvocation:FunctorUtils.<E>copy(iClosures) @AT@ 6494 @LENGTH@ 36
---UPD MethodInvocation@@FunctorUtils.copy(iClosures) @TO@ FunctorUtils.<E>copy(iClosures) @AT@ 6501 @LENGTH@ 28


UPD VariableDeclarationStatement@@FailedOperationTransformationConfig config=new FailedOperationTransformationConfig().addFailedAttribute(PathAddress.pathAddress(PathElement.pathElement(SUBSYSTEM,"jacorb")),new FailedOperationTransformationConfig.RejectExpressionsConfig(ORB_NAME,ORB_PRINT_VERSION,ORB_USE_IMR,ORB_USE_BOM,ORB_CACHE_TYPECODES,ORB_CACHE_POA_NAMES,ORB_GIOP_MINOR_VERSION,ORB_CONN_RETRIES,ORB_CONN_RETRY_INTERVAL,ORB_CONN_CLIENT_TIMEOUT,ORB_CONN_SERVER_TIMEOUT,ORB_CONN_MAX_SERVER_CONNECTIONS,ORB_CONN_MAX_MANAGED_BUF_SIZE,ORB_CONN_OUTBUF_SIZE,ORB_CONN_OUTBUF_CACHE_TIMEOUT,ORB_INIT_SECURITY,ORB_INIT_TX,POA_MONITORING,POA_QUEUE_WAIT,POA_QUEUE_MIN,POA_QUEUE_MAX,POA_REQUEST_PROC_POOL_SIZE,POA_REQUEST_PROC_MAX_THREADS,NAMING_ROOT_CONTEXT,NAMING_EXPORT_CORBALOC,INTEROP_SUN,INTEROP_COMET,INTEROP_IONA,INTEROP_CHUNK_RMI_VALUETYPES,INTEROP_LAX_BOOLEAN_ENCODING,INTEROP_INDIRECT_ENCODING_DISABLE,INTEROP_STRICT_CHECK_ON_TC_CREATION,SECURITY_SUPPORT_SSL,SECURITY_SECURITY_DOMAIN,SECURITY_ADD_COMPONENT_INTERCEPTOR,SECURITY_CLIENT_SUPPORTS,SECURITY_CLIENT_REQUIRES,SECURITY_SERVER_SUPPORTS,SECURITY_SERVER_REQUIRES)); @TO@ FailedOperationTransformationConfig config=new FailedOperationTransformationConfig().addFailedAttribute(PathAddress.pathAddress(PathElement.pathElement(SUBSYSTEM,"jacorb")),new FailedOperationTransformationConfig.RejectExpressionsConfig(ORB_NAME,ORB_PRINT_VERSION,ORB_USE_IMR,ORB_USE_BOM,ORB_CACHE_TYPECODES,ORB_CACHE_POA_NAMES,ORB_GIOP_MINOR_VERSION,ORB_CONN_RETRIES,ORB_CONN_RETRY_INTERVAL,ORB_CONN_CLIENT_TIMEOUT,ORB_CONN_SERVER_TIMEOUT,ORB_CONN_MAX_SERVER_CONNECTIONS,ORB_CONN_MAX_MANAGED_BUF_SIZE,ORB_CONN_OUTBUF_SIZE,ORB_CONN_OUTBUF_CACHE_TIMEOUT,ORB_INIT_SECURITY,ORB_INIT_TX,POA_MONITORING,POA_QUEUE_WAIT,POA_QUEUE_MIN,POA_QUEUE_MAX,POA_REQUEST_PROC_POOL_SIZE,POA_REQUEST_PROC_MAX_THREADS,NAMING_ROOT_CONTEXT,NAMING_EXPORT_CORBALOC,INTEROP_SUN,INTEROP_COMET,INTEROP_IONA,INTEROP_CHUNK_RMI_VALUETYPES,INTEROP_LAX_BOOLEAN_ENCODING,INTEROP_INDIRECT_ENCODING_DISABLE,INTEROP_STRICT_CHECK_ON_TC_CREATION,PROPERTIES,SECURITY_SUPPORT_SSL,SECURITY_SECURITY_DOMAIN,SECURITY_ADD_COMPONENT_INTERCEPTOR,SECURITY_CLIENT_SUPPORTS,SECURITY_CLIENT_REQUIRES,SECURITY_SERVER_SUPPORTS,SECURITY_SERVER_REQUIRES)); @AT@ 14458 @LENGTH@ 1301
---UPD VariableDeclarationFragment@@config=new FailedOperationTransformationConfig().addFailedAttribute(PathAddress.pathAddress(PathElement.pathElement(SUBSYSTEM,"jacorb")),new FailedOperationTransformationConfig.RejectExpressionsConfig(ORB_NAME,ORB_PRINT_VERSION,ORB_USE_IMR,ORB_USE_BOM,ORB_CACHE_TYPECODES,ORB_CACHE_POA_NAMES,ORB_GIOP_MINOR_VERSION,ORB_CONN_RETRIES,ORB_CONN_RETRY_INTERVAL,ORB_CONN_CLIENT_TIMEOUT,ORB_CONN_SERVER_TIMEOUT,ORB_CONN_MAX_SERVER_CONNECTIONS,ORB_CONN_MAX_MANAGED_BUF_SIZE,ORB_CONN_OUTBUF_SIZE,ORB_CONN_OUTBUF_CACHE_TIMEOUT,ORB_INIT_SECURITY,ORB_INIT_TX,POA_MONITORING,POA_QUEUE_WAIT,POA_QUEUE_MIN,POA_QUEUE_MAX,POA_REQUEST_PROC_POOL_SIZE,POA_REQUEST_PROC_MAX_THREADS,NAMING_ROOT_CONTEXT,NAMING_EXPORT_CORBALOC,INTEROP_SUN,INTEROP_COMET,INTEROP_IONA,INTEROP_CHUNK_RMI_VALUETYPES,INTEROP_LAX_BOOLEAN_ENCODING,INTEROP_INDIRECT_ENCODING_DISABLE,INTEROP_STRICT_CHECK_ON_TC_CREATION,SECURITY_SUPPORT_SSL,SECURITY_SECURITY_DOMAIN,SECURITY_ADD_COMPONENT_INTERCEPTOR,SECURITY_CLIENT_SUPPORTS,SECURITY_CLIENT_REQUIRES,SECURITY_SERVER_SUPPORTS,SECURITY_SERVER_REQUIRES)) @TO@ config=new FailedOperationTransformationConfig().addFailedAttribute(PathAddress.pathAddress(PathElement.pathElement(SUBSYSTEM,"jacorb")),new FailedOperationTransformationConfig.RejectExpressionsConfig(ORB_NAME,ORB_PRINT_VERSION,ORB_USE_IMR,ORB_USE_BOM,ORB_CACHE_TYPECODES,ORB_CACHE_POA_NAMES,ORB_GIOP_MINOR_VERSION,ORB_CONN_RETRIES,ORB_CONN_RETRY_INTERVAL,ORB_CONN_CLIENT_TIMEOUT,ORB_CONN_SERVER_TIMEOUT,ORB_CONN_MAX_SERVER_CONNECTIONS,ORB_CONN_MAX_MANAGED_BUF_SIZE,ORB_CONN_OUTBUF_SIZE,ORB_CONN_OUTBUF_CACHE_TIMEOUT,ORB_INIT_SECURITY,ORB_INIT_TX,POA_MONITORING,POA_QUEUE_WAIT,POA_QUEUE_MIN,POA_QUEUE_MAX,POA_REQUEST_PROC_POOL_SIZE,POA_REQUEST_PROC_MAX_THREADS,NAMING_ROOT_CONTEXT,NAMING_EXPORT_CORBALOC,INTEROP_SUN,INTEROP_COMET,INTEROP_IONA,INTEROP_CHUNK_RMI_VALUETYPES,INTEROP_LAX_BOOLEAN_ENCODING,INTEROP_INDIRECT_ENCODING_DISABLE,INTEROP_STRICT_CHECK_ON_TC_CREATION,PROPERTIES,SECURITY_SUPPORT_SSL,SECURITY_SECURITY_DOMAIN,SECURITY_ADD_COMPONENT_INTERCEPTOR,SECURITY_CLIENT_SUPPORTS,SECURITY_CLIENT_REQUIRES,SECURITY_SERVER_SUPPORTS,SECURITY_SERVER_REQUIRES)) @AT@ 14494 @LENGTH@ 1264
------UPD MethodInvocation@@new FailedOperationTransformationConfig().addFailedAttribute(PathAddress.pathAddress(PathElement.pathElement(SUBSYSTEM,"jacorb")),new FailedOperationTransformationConfig.RejectExpressionsConfig(ORB_NAME,ORB_PRINT_VERSION,ORB_USE_IMR,ORB_USE_BOM,ORB_CACHE_TYPECODES,ORB_CACHE_POA_NAMES,ORB_GIOP_MINOR_VERSION,ORB_CONN_RETRIES,ORB_CONN_RETRY_INTERVAL,ORB_CONN_CLIENT_TIMEOUT,ORB_CONN_SERVER_TIMEOUT,ORB_CONN_MAX_SERVER_CONNECTIONS,ORB_CONN_MAX_MANAGED_BUF_SIZE,ORB_CONN_OUTBUF_SIZE,ORB_CONN_OUTBUF_CACHE_TIMEOUT,ORB_INIT_SECURITY,ORB_INIT_TX,POA_MONITORING,POA_QUEUE_WAIT,POA_QUEUE_MIN,POA_QUEUE_MAX,POA_REQUEST_PROC_POOL_SIZE,POA_REQUEST_PROC_MAX_THREADS,NAMING_ROOT_CONTEXT,NAMING_EXPORT_CORBALOC,INTEROP_SUN,INTEROP_COMET,INTEROP_IONA,INTEROP_CHUNK_RMI_VALUETYPES,INTEROP_LAX_BOOLEAN_ENCODING,INTEROP_INDIRECT_ENCODING_DISABLE,INTEROP_STRICT_CHECK_ON_TC_CREATION,SECURITY_SUPPORT_SSL,SECURITY_SECURITY_DOMAIN,SECURITY_ADD_COMPONENT_INTERCEPTOR,SECURITY_CLIENT_SUPPORTS,SECURITY_CLIENT_REQUIRES,SECURITY_SERVER_SUPPORTS,SECURITY_SERVER_REQUIRES)) @TO@ new FailedOperationTransformationConfig().addFailedAttribute(PathAddress.pathAddress(PathElement.pathElement(SUBSYSTEM,"jacorb")),new FailedOperationTransformationConfig.RejectExpressionsConfig(ORB_NAME,ORB_PRINT_VERSION,ORB_USE_IMR,ORB_USE_BOM,ORB_CACHE_TYPECODES,ORB_CACHE_POA_NAMES,ORB_GIOP_MINOR_VERSION,ORB_CONN_RETRIES,ORB_CONN_RETRY_INTERVAL,ORB_CONN_CLIENT_TIMEOUT,ORB_CONN_SERVER_TIMEOUT,ORB_CONN_MAX_SERVER_CONNECTIONS,ORB_CONN_MAX_MANAGED_BUF_SIZE,ORB_CONN_OUTBUF_SIZE,ORB_CONN_OUTBUF_CACHE_TIMEOUT,ORB_INIT_SECURITY,ORB_INIT_TX,POA_MONITORING,POA_QUEUE_WAIT,POA_QUEUE_MIN,POA_QUEUE_MAX,POA_REQUEST_PROC_POOL_SIZE,POA_REQUEST_PROC_MAX_THREADS,NAMING_ROOT_CONTEXT,NAMING_EXPORT_CORBALOC,INTEROP_SUN,INTEROP_COMET,INTEROP_IONA,INTEROP_CHUNK_RMI_VALUETYPES,INTEROP_LAX_BOOLEAN_ENCODING,INTEROP_INDIRECT_ENCODING_DISABLE,INTEROP_STRICT_CHECK_ON_TC_CREATION,PROPERTIES,SECURITY_SUPPORT_SSL,SECURITY_SECURITY_DOMAIN,SECURITY_ADD_COMPONENT_INTERCEPTOR,SECURITY_CLIENT_SUPPORTS,SECURITY_CLIENT_REQUIRES,SECURITY_SERVER_SUPPORTS,SECURITY_SERVER_REQUIRES)) @AT@ 14503 @LENGTH@ 1255
---------UPD SimpleName@@MethodName:addFailedAttribute:[PathAddress.pathAddress(PathElement.pathElement(SUBSYSTEM,"jacorb")), new FailedOperationTransformationConfig.RejectExpressionsConfig(ORB_NAME,ORB_PRINT_VERSION,ORB_USE_IMR,ORB_USE_BOM,ORB_CACHE_TYPECODES,ORB_CACHE_POA_NAMES,ORB_GIOP_MINOR_VERSION,ORB_CONN_RETRIES,ORB_CONN_RETRY_INTERVAL,ORB_CONN_CLIENT_TIMEOUT,ORB_CONN_SERVER_TIMEOUT,ORB_CONN_MAX_SERVER_CONNECTIONS,ORB_CONN_MAX_MANAGED_BUF_SIZE,ORB_CONN_OUTBUF_SIZE,ORB_CONN_OUTBUF_CACHE_TIMEOUT,ORB_INIT_SECURITY,ORB_INIT_TX,POA_MONITORING,POA_QUEUE_WAIT,POA_QUEUE_MIN,POA_QUEUE_MAX,POA_REQUEST_PROC_POOL_SIZE,POA_REQUEST_PROC_MAX_THREADS,NAMING_ROOT_CONTEXT,NAMING_EXPORT_CORBALOC,INTEROP_SUN,INTEROP_COMET,INTEROP_IONA,INTEROP_CHUNK_RMI_VALUETYPES,INTEROP_LAX_BOOLEAN_ENCODING,INTEROP_INDIRECT_ENCODING_DISABLE,INTEROP_STRICT_CHECK_ON_TC_CREATION,SECURITY_SUPPORT_SSL,SECURITY_SECURITY_DOMAIN,SECURITY_ADD_COMPONENT_INTERCEPTOR,SECURITY_CLIENT_SUPPORTS,SECURITY_CLIENT_REQUIRES,SECURITY_SERVER_SUPPORTS,SECURITY_SERVER_REQUIRES)] @TO@ MethodName:addFailedAttribute:[PathAddress.pathAddress(PathElement.pathElement(SUBSYSTEM,"jacorb")), new FailedOperationTransformationConfig.RejectExpressionsConfig(ORB_NAME,ORB_PRINT_VERSION,ORB_USE_IMR,ORB_USE_BOM,ORB_CACHE_TYPECODES,ORB_CACHE_POA_NAMES,ORB_GIOP_MINOR_VERSION,ORB_CONN_RETRIES,ORB_CONN_RETRY_INTERVAL,ORB_CONN_CLIENT_TIMEOUT,ORB_CONN_SERVER_TIMEOUT,ORB_CONN_MAX_SERVER_CONNECTIONS,ORB_CONN_MAX_MANAGED_BUF_SIZE,ORB_CONN_OUTBUF_SIZE,ORB_CONN_OUTBUF_CACHE_TIMEOUT,ORB_INIT_SECURITY,ORB_INIT_TX,POA_MONITORING,POA_QUEUE_WAIT,POA_QUEUE_MIN,POA_QUEUE_MAX,POA_REQUEST_PROC_POOL_SIZE,POA_REQUEST_PROC_MAX_THREADS,NAMING_ROOT_CONTEXT,NAMING_EXPORT_CORBALOC,INTEROP_SUN,INTEROP_COMET,INTEROP_IONA,INTEROP_CHUNK_RMI_VALUETYPES,INTEROP_LAX_BOOLEAN_ENCODING,INTEROP_INDIRECT_ENCODING_DISABLE,INTEROP_STRICT_CHECK_ON_TC_CREATION,PROPERTIES,SECURITY_SUPPORT_SSL,SECURITY_SECURITY_DOMAIN,SECURITY_ADD_COMPONENT_INTERCEPTOR,SECURITY_CLIENT_SUPPORTS,SECURITY_CLIENT_REQUIRES,SECURITY_SERVER_SUPPORTS,SECURITY_SERVER_REQUIRES)] @AT@ 14554 @LENGTH@ 1204
------------UPD ClassInstanceCreation@@FailedOperationTransformationConfig.RejectExpressionsConfig[ORB_NAME, ORB_PRINT_VERSION, ORB_USE_IMR, ORB_USE_BOM, ORB_CACHE_TYPECODES, ORB_CACHE_POA_NAMES, ORB_GIOP_MINOR_VERSION, ORB_CONN_RETRIES, ORB_CONN_RETRY_INTERVAL, ORB_CONN_CLIENT_TIMEOUT, ORB_CONN_SERVER_TIMEOUT, ORB_CONN_MAX_SERVER_CONNECTIONS, ORB_CONN_MAX_MANAGED_BUF_SIZE, ORB_CONN_OUTBUF_SIZE, ORB_CONN_OUTBUF_CACHE_TIMEOUT, ORB_INIT_SECURITY, ORB_INIT_TX, POA_MONITORING, POA_QUEUE_WAIT, POA_QUEUE_MIN, POA_QUEUE_MAX, POA_REQUEST_PROC_POOL_SIZE, POA_REQUEST_PROC_MAX_THREADS, NAMING_ROOT_CONTEXT, NAMING_EXPORT_CORBALOC, INTEROP_SUN, INTEROP_COMET, INTEROP_IONA, INTEROP_CHUNK_RMI_VALUETYPES, INTEROP_LAX_BOOLEAN_ENCODING, INTEROP_INDIRECT_ENCODING_DISABLE, INTEROP_STRICT_CHECK_ON_TC_CREATION, SECURITY_SUPPORT_SSL, SECURITY_SECURITY_DOMAIN, SECURITY_ADD_COMPONENT_INTERCEPTOR, SECURITY_CLIENT_SUPPORTS, SECURITY_CLIENT_REQUIRES, SECURITY_SERVER_SUPPORTS, SECURITY_SERVER_REQUIRES] @TO@ FailedOperationTransformationConfig.RejectExpressionsConfig[ORB_NAME, ORB_PRINT_VERSION, ORB_USE_IMR, ORB_USE_BOM, ORB_CACHE_TYPECODES, ORB_CACHE_POA_NAMES, ORB_GIOP_MINOR_VERSION, ORB_CONN_RETRIES, ORB_CONN_RETRY_INTERVAL, ORB_CONN_CLIENT_TIMEOUT, ORB_CONN_SERVER_TIMEOUT, ORB_CONN_MAX_SERVER_CONNECTIONS, ORB_CONN_MAX_MANAGED_BUF_SIZE, ORB_CONN_OUTBUF_SIZE, ORB_CONN_OUTBUF_CACHE_TIMEOUT, ORB_INIT_SECURITY, ORB_INIT_TX, POA_MONITORING, POA_QUEUE_WAIT, POA_QUEUE_MIN, POA_QUEUE_MAX, POA_REQUEST_PROC_POOL_SIZE, POA_REQUEST_PROC_MAX_THREADS, NAMING_ROOT_CONTEXT, NAMING_EXPORT_CORBALOC, INTEROP_SUN, INTEROP_COMET, INTEROP_IONA, INTEROP_CHUNK_RMI_VALUETYPES, INTEROP_LAX_BOOLEAN_ENCODING, INTEROP_INDIRECT_ENCODING_DISABLE, INTEROP_STRICT_CHECK_ON_TC_CREATION, PROPERTIES, SECURITY_SUPPORT_SSL, SECURITY_SECURITY_DOMAIN, SECURITY_ADD_COMPONENT_INTERCEPTOR, SECURITY_CLIENT_SUPPORTS, SECURITY_CLIENT_REQUIRES, SECURITY_SERVER_SUPPORTS, SECURITY_SERVER_REQUIRES] @AT@ 14660 @LENGTH@ 1097
---------------INS SimpleName@@PROPERTIES @TO@ ClassInstanceCreation@@FailedOperationTransformationConfig.RejectExpressionsConfig[ORB_NAME, ORB_PRINT_VERSION, ORB_USE_IMR, ORB_USE_BOM, ORB_CACHE_TYPECODES, ORB_CACHE_POA_NAMES, ORB_GIOP_MINOR_VERSION, ORB_CONN_RETRIES, ORB_CONN_RETRY_INTERVAL, ORB_CONN_CLIENT_TIMEOUT, ORB_CONN_SERVER_TIMEOUT, ORB_CONN_MAX_SERVER_CONNECTIONS, ORB_CONN_MAX_MANAGED_BUF_SIZE, ORB_CONN_OUTBUF_SIZE, ORB_CONN_OUTBUF_CACHE_TIMEOUT, ORB_INIT_SECURITY, ORB_INIT_TX, POA_MONITORING, POA_QUEUE_WAIT, POA_QUEUE_MIN, POA_QUEUE_MAX, POA_REQUEST_PROC_POOL_SIZE, POA_REQUEST_PROC_MAX_THREADS, NAMING_ROOT_CONTEXT, NAMING_EXPORT_CORBALOC, INTEROP_SUN, INTEROP_COMET, INTEROP_IONA, INTEROP_CHUNK_RMI_VALUETYPES, INTEROP_LAX_BOOLEAN_ENCODING, INTEROP_INDIRECT_ENCODING_DISABLE, INTEROP_STRICT_CHECK_ON_TC_CREATION, SECURITY_SUPPORT_SSL, SECURITY_SECURITY_DOMAIN, SECURITY_ADD_COMPONENT_INTERCEPTOR, SECURITY_CLIENT_SUPPORTS, SECURITY_CLIENT_REQUIRES, SECURITY_SERVER_SUPPORTS, SECURITY_SERVER_REQUIRES] @AT@ 15619 @LENGTH@ 10


INS MethodDeclaration@@protected, void, MethodName:performRuntime, OperationContext context, ModelNode operation, ModelNode model, OperationFailedException,  @TO@ TypeDeclaration@@[public]JGroupsSubsystemRemove, AbstractRemoveStepHandler @AT@ 1802 @LENGTH@ 200
---INS Modifier@@protected @TO@ MethodDeclaration@@protected, void, MethodName:performRuntime, OperationContext context, ModelNode operation, ModelNode model, OperationFailedException,  @AT@ 1802 @LENGTH@ 9
---INS PrimitiveType@@void @TO@ MethodDeclaration@@protected, void, MethodName:performRuntime, OperationContext context, ModelNode operation, ModelNode model, OperationFailedException,  @AT@ 1812 @LENGTH@ 4
---INS SimpleName@@MethodName:performRuntime @TO@ MethodDeclaration@@protected, void, MethodName:performRuntime, OperationContext context, ModelNode operation, ModelNode model, OperationFailedException,  @AT@ 1817 @LENGTH@ 14
---INS SingleVariableDeclaration@@OperationContext context @TO@ MethodDeclaration@@protected, void, MethodName:performRuntime, OperationContext context, ModelNode operation, ModelNode model, OperationFailedException,  @AT@ 1832 @LENGTH@ 24
------INS SimpleType@@OperationContext @TO@ SingleVariableDeclaration@@OperationContext context @AT@ 1832 @LENGTH@ 16
------INS SimpleName@@context @TO@ SingleVariableDeclaration@@OperationContext context @AT@ 1849 @LENGTH@ 7
---INS SingleVariableDeclaration@@ModelNode operation @TO@ MethodDeclaration@@protected, void, MethodName:performRuntime, OperationContext context, ModelNode operation, ModelNode model, OperationFailedException,  @AT@ 1858 @LENGTH@ 19
------INS SimpleType@@ModelNode @TO@ SingleVariableDeclaration@@ModelNode operation @AT@ 1858 @LENGTH@ 9
------INS SimpleName@@operation @TO@ SingleVariableDeclaration@@ModelNode operation @AT@ 1868 @LENGTH@ 9
---INS SingleVariableDeclaration@@ModelNode model @TO@ MethodDeclaration@@protected, void, MethodName:performRuntime, OperationContext context, ModelNode operation, ModelNode model, OperationFailedException,  @AT@ 1879 @LENGTH@ 15
------INS SimpleType@@ModelNode @TO@ SingleVariableDeclaration@@ModelNode model @AT@ 1879 @LENGTH@ 9
------INS SimpleName@@model @TO@ SingleVariableDeclaration@@ModelNode model @AT@ 1889 @LENGTH@ 5
---INS SimpleType@@OperationFailedException @TO@ MethodDeclaration@@protected, void, MethodName:performRuntime, OperationContext context, ModelNode operation, ModelNode model, OperationFailedException,  @AT@ 1911 @LENGTH@ 24
---INS ExpressionStatement@@MethodInvocation:removeRuntimeServices(context,operation,model) @TO@ MethodDeclaration@@protected, void, MethodName:performRuntime, OperationContext context, ModelNode operation, ModelNode model, OperationFailedException,  @AT@ 1947 @LENGTH@ 49
------INS MethodInvocation@@removeRuntimeServices(context,operation,model) @TO@ ExpressionStatement@@MethodInvocation:removeRuntimeServices(context,operation,model) @AT@ 1947 @LENGTH@ 48
---------INS SimpleName@@MethodName:removeRuntimeServices:[context, operation, model] @TO@ MethodInvocation@@removeRuntimeServices(context,operation,model) @AT@ 1947 @LENGTH@ 48
------------INS SimpleName@@context @TO@ SimpleName@@MethodName:removeRuntimeServices:[context, operation, model] @AT@ 1969 @LENGTH@ 7
------------INS SimpleName@@operation @TO@ SimpleName@@MethodName:removeRuntimeServices:[context, operation, model] @AT@ 1978 @LENGTH@ 9
------------INS SimpleName@@model @TO@ SimpleName@@MethodName:removeRuntimeServices:[context, operation, model] @AT@ 1989 @LENGTH@ 5


UPD FieldDeclaration@@private, static, final, Logger, [LOGGER=Logger.getLogger(RequestProcessor.class.getName())] @TO@ private, static, final, Logger, [LOGGER=LoggerFactory.getLogger(RequestProcessor.class)] @AT@ 1071 @LENGTH@ 88
---UPD VariableDeclarationFragment@@LOGGER=Logger.getLogger(RequestProcessor.class.getName()) @TO@ LOGGER=LoggerFactory.getLogger(RequestProcessor.class) @AT@ 1099 @LENGTH@ 59
------UPD MethodInvocation@@Logger.getLogger(RequestProcessor.class.getName()) @TO@ LoggerFactory.getLogger(RequestProcessor.class) @AT@ 1108 @LENGTH@ 50
---------UPD SimpleName@@Name:Logger @TO@ Name:LoggerFactory @AT@ 1108 @LENGTH@ 6
---------UPD SimpleName@@MethodName:getLogger:[RequestProcessor.class.getName()] @TO@ MethodName:getLogger:[RequestProcessor.class] @AT@ 1115 @LENGTH@ 43
------------DEL MethodInvocation@@RequestProcessor.class.getName() @AT@ 1125 @LENGTH@ 32
---------------DEL TypeLiteral@@RequestProcessor.class @AT@ 1125 @LENGTH@ 22
---------------DEL SimpleName@@MethodName:getName:[] @AT@ 1148 @LENGTH@ 9
------------INS TypeLiteral@@RequestProcessor.class @TO@ SimpleName@@MethodName:getLogger:[RequestProcessor.class.getName()] @AT@ 1160 @LENGTH@ 22


UPD ReturnStatement@@SimpleName:iTransformers @TO@ MethodInvocation:FunctorUtils.<I,O>copy(iTransformers) @AT@ 7495 @LENGTH@ 21
---INS MethodInvocation@@FunctorUtils.<I,O>copy(iTransformers) @TO@ ReturnStatement@@SimpleName:iTransformers @AT@ 7494 @LENGTH@ 38
------INS SimpleName@@Name:FunctorUtils @TO@ MethodInvocation@@FunctorUtils.<I,O>copy(iTransformers) @AT@ 7494 @LENGTH@ 12
------INS SimpleName@@MethodName:copy:[iTransformers] @TO@ MethodInvocation@@FunctorUtils.<I,O>copy(iTransformers) @AT@ 7513 @LENGTH@ 19
---------INS SimpleName@@iTransformers @TO@ SimpleName@@MethodName:copy:[iTransformers] @AT@ 7518 @LENGTH@ 13
---DEL SimpleName@@iTransformers @AT@ 7502 @LENGTH@ 13


INS VariableDeclarationStatement@@Object body=exchange.getIn().getBody(); @TO@ MethodDeclaration@@public, static, DefaultExchangeHolder, MethodName:marshal, Exchange exchange, boolean includeProperties,  @AT@ 3326 @LENGTH@ 41
---INS SimpleType@@Object @TO@ VariableDeclarationStatement@@Object body=exchange.getIn().getBody(); @AT@ 3326 @LENGTH@ 6
---INS VariableDeclarationFragment@@body=exchange.getIn().getBody() @TO@ VariableDeclarationStatement@@Object body=exchange.getIn().getBody(); @AT@ 3333 @LENGTH@ 33
------INS SimpleName@@body @TO@ VariableDeclarationFragment@@body=exchange.getIn().getBody() @AT@ 3333 @LENGTH@ 4
------INS MethodInvocation@@exchange.getIn().getBody() @TO@ VariableDeclarationFragment@@body=exchange.getIn().getBody() @AT@ 3340 @LENGTH@ 26
---------INS MethodInvocation@@MethodName:getIn:[] @TO@ MethodInvocation@@exchange.getIn().getBody() @AT@ 3340 @LENGTH@ 16
---------INS SimpleName@@Name:exchange @TO@ MethodInvocation@@exchange.getIn().getBody() @AT@ 3340 @LENGTH@ 8
---------INS SimpleName@@MethodName:getBody:[] @TO@ MethodInvocation@@exchange.getIn().getBody() @AT@ 3357 @LENGTH@ 9


INS FieldDeclaration@@private, MavenProjectHelper, [projectHelper] @TO@ TypeDeclaration@@[public]PackageMojo, AbstractMojo @AT@ 1855 @LENGTH@ 41
---INS Modifier@@private @TO@ FieldDeclaration@@private, MavenProjectHelper, [projectHelper] @AT@ 1855 @LENGTH@ 7
---INS SimpleType@@MavenProjectHelper @TO@ FieldDeclaration@@private, MavenProjectHelper, [projectHelper] @AT@ 1863 @LENGTH@ 18
---INS VariableDeclarationFragment@@projectHelper @TO@ FieldDeclaration@@private, MavenProjectHelper, [projectHelper] @AT@ 1882 @LENGTH@ 13
------INS SimpleName@@projectHelper @TO@ VariableDeclarationFragment@@projectHelper @AT@ 1882 @LENGTH@ 13


UPD IfStatement@@if (getOutputs().isEmpty()) {  setId(id);} else {  List<ProcessorDefinition<?>> outputs=getOutputs();  if (!blocks.isEmpty()) {    if (blocks.getLast() instanceof ProcessorDefinition) {      ProcessorDefinition<?> block=(ProcessorDefinition<?>)blocks.getLast();      if (!block.getOutputs().isEmpty()) {        outputs=block.getOutputs();      }    }  }  outputs.get(outputs.size() - 1).setId(id);} @TO@ if (isOutputSupported() && getOutputs().isEmpty()) {  setId(id);} else {  List<ProcessorDefinition<?>> outputs=getOutputs();  if (!blocks.isEmpty()) {    if (blocks.getLast() instanceof ProcessorDefinition) {      ProcessorDefinition<?> block=(ProcessorDefinition<?>)blocks.getLast();      if (!block.getOutputs().isEmpty()) {        outputs=block.getOutputs();      }    }  }  outputs.get(outputs.size() - 1).setId(id);} @AT@ 41276 @LENGTH@ 808
---INS InfixExpression@@isOutputSupported() && getOutputs().isEmpty() @TO@ IfStatement@@if (getOutputs().isEmpty()) {  setId(id);} else {  List<ProcessorDefinition<?>> outputs=getOutputs();  if (!blocks.isEmpty()) {    if (blocks.getLast() instanceof ProcessorDefinition) {      ProcessorDefinition<?> block=(ProcessorDefinition<?>)blocks.getLast();      if (!block.getOutputs().isEmpty()) {        outputs=block.getOutputs();      }    }  }  outputs.get(outputs.size() - 1).setId(id);} @AT@ 41280 @LENGTH@ 45
------INS MethodInvocation@@MethodName:isOutputSupported:[] @TO@ InfixExpression@@isOutputSupported() && getOutputs().isEmpty() @AT@ 41280 @LENGTH@ 19
------INS Operator@@&& @TO@ InfixExpression@@isOutputSupported() && getOutputs().isEmpty() @AT@ 41299 @LENGTH@ 2
------INS MethodInvocation@@getOutputs().isEmpty() @TO@ InfixExpression@@isOutputSupported() && getOutputs().isEmpty() @AT@ 41303 @LENGTH@ 22
---------MOV MethodInvocation@@MethodName:getOutputs:[] @TO@ MethodInvocation@@getOutputs().isEmpty() @AT@ 41280 @LENGTH@ 12
---------MOV SimpleName@@MethodName:isEmpty:[] @TO@ MethodInvocation@@getOutputs().isEmpty() @AT@ 41293 @LENGTH@ 9
---DEL MethodInvocation@@getOutputs().isEmpty() @AT@ 41280 @LENGTH@ 22


INS MethodDeclaration@@public, OperationTransformer, MethodName:getOperationTransformer,  @TO@ TypeDeclaration@@[public]RejectExpressionValuesTransformer, [ResourceTransformer, OperationTransformer] @AT@ 4602 @LENGTH@ 82
---INS Modifier@@public @TO@ MethodDeclaration@@public, OperationTransformer, MethodName:getOperationTransformer,  @AT@ 4602 @LENGTH@ 6
---INS SimpleType@@OperationTransformer @TO@ MethodDeclaration@@public, OperationTransformer, MethodName:getOperationTransformer,  @AT@ 4609 @LENGTH@ 20
---INS SimpleName@@MethodName:getOperationTransformer @TO@ MethodDeclaration@@public, OperationTransformer, MethodName:getOperationTransformer,  @AT@ 4630 @LENGTH@ 23
---INS ReturnStatement@@ThisExpression:this @TO@ MethodDeclaration@@public, OperationTransformer, MethodName:getOperationTransformer,  @AT@ 4666 @LENGTH@ 12
------INS ThisExpression@@this @TO@ ReturnStatement@@ThisExpression:this @AT@ 4673 @LENGTH@ 4


UPD IfStatement@@if (mongoPersistentEntity == null || mongoPersistentEntity.hasVersionProperty()) {  BeanWrapper<PersistentEntity<Object,?>,Object> wrapper=BeanWrapper.create(entity,null);  wrapper.setProperty(mongoPersistentEntity.getVersionProperty(),0);} @TO@ if (mongoPersistentEntity != null && mongoPersistentEntity.hasVersionProperty()) {  BeanWrapper<PersistentEntity<Object,?>,Object> wrapper=BeanWrapper.create(entity,null);  wrapper.setProperty(mongoPersistentEntity.getVersionProperty(),0);} @AT@ 25525 @LENGTH@ 253
---UPD InfixExpression@@mongoPersistentEntity == null || mongoPersistentEntity.hasVersionProperty() @TO@ mongoPersistentEntity != null && mongoPersistentEntity.hasVersionProperty() @AT@ 25529 @LENGTH@ 75
------UPD InfixExpression@@mongoPersistentEntity == null @TO@ mongoPersistentEntity != null @AT@ 25529 @LENGTH@ 29
---------UPD Operator@@== @TO@ != @AT@ 25550 @LENGTH@ 2
------UPD Operator@@|| @TO@ && @AT@ 25558 @LENGTH@ 2


UPD TypeDeclaration@@[@SuppressWarnings({"rawtypes"}), @Converter, public, final]MongoDbBasicConverters,  @TO@ [@Converter, public, final]MongoDbBasicConverters,  @AT@ 1485 @LENGTH@ 3222
---DEL SingleMemberAnnotation@@@SuppressWarnings({"rawtypes"}) @AT@ 1485 @LENGTH@ 31


UPD ExpressionStatement@@MethodInvocation:mock.assertIsSatisfied() @TO@ MethodInvocation:assertMockEndpointsSatisfied() @AT@ 2338 @LENGTH@ 25
---UPD MethodInvocation@@mock.assertIsSatisfied() @TO@ MethodName:assertMockEndpointsSatisfied:[] @AT@ 2338 @LENGTH@ 24
------DEL SimpleName@@Name:mock @AT@ 2338 @LENGTH@ 4
------DEL SimpleName@@MethodName:assertIsSatisfied:[] @AT@ 2343 @LENGTH@ 19


DEL TryStatement@@try {  template.sendBody("direct:start","<order><type>myType</type><user>Func</user></order>");  fail("Should have thrown a MyFunctionalException");} catch (RuntimeCamelException e) {  assertIsInstanceOf(MyFunctionalException.class,e.getCause());} @AT@ 1992 @LENGTH@ 300
---DEL ExpressionStatement@@MethodInvocation:fail("Should have thrown a MyFunctionalException") @AT@ 2112 @LENGTH@ 51
------DEL MethodInvocation@@fail("Should have thrown a MyFunctionalException") @AT@ 2112 @LENGTH@ 50
---------DEL SimpleName@@MethodName:fail:["Should have thrown a MyFunctionalException"] @AT@ 2112 @LENGTH@ 50
------------DEL StringLiteral@@"Should have thrown a MyFunctionalException" @AT@ 2117 @LENGTH@ 44
---DEL CatchClause@@catch (RuntimeCamelException e) {  assertIsInstanceOf(MyFunctionalException.class,e.getCause());} @AT@ 2174 @LENGTH@ 118
------DEL SingleVariableDeclaration@@RuntimeCamelException e @AT@ 2181 @LENGTH@ 23
---------DEL SimpleType@@RuntimeCamelException @AT@ 2181 @LENGTH@ 21
---------DEL SimpleName@@e @AT@ 2203 @LENGTH@ 1
------DEL ExpressionStatement@@MethodInvocation:assertIsInstanceOf(MyFunctionalException.class,e.getCause()) @AT@ 2220 @LENGTH@ 62
---------DEL MethodInvocation@@assertIsInstanceOf(MyFunctionalException.class,e.getCause()) @AT@ 2220 @LENGTH@ 61
------------DEL SimpleName@@MethodName:assertIsInstanceOf:[MyFunctionalException.class, e.getCause()] @AT@ 2220 @LENGTH@ 61
---------------DEL TypeLiteral@@MyFunctionalException.class @AT@ 2239 @LENGTH@ 27
---------------DEL MethodInvocation@@e.getCause() @AT@ 2268 @LENGTH@ 12
------------------DEL SimpleName@@Name:e @AT@ 2268 @LENGTH@ 1
------------------DEL SimpleName@@MethodName:getCause:[] @AT@ 2270 @LENGTH@ 10


UPD IfStatement@@if (group == null) {  throw MESSAGES.undefinedSocketBindingGroup(ref);} @TO@ if (includedGroup == null) {  throw MESSAGES.undefinedSocketBindingGroup(ref);} @AT@ 21432 @LENGTH@ 115
---UPD InfixExpression@@group == null @TO@ includedGroup == null @AT@ 21436 @LENGTH@ 13
------UPD SimpleName@@group @TO@ includedGroup @AT@ 21436 @LENGTH@ 5


DEL ExpressionStatement@@MethodInvocation:list.add(pathAddressTransformer) @AT@ 7728 @LENGTH@ 33
---DEL MethodInvocation@@list.add(pathAddressTransformer) @AT@ 7728 @LENGTH@ 32
------DEL SimpleName@@Name:list @AT@ 7728 @LENGTH@ 4
------DEL SimpleName@@MethodName:add:[pathAddressTransformer] @AT@ 7733 @LENGTH@ 27
---------DEL SimpleName@@pathAddressTransformer @AT@ 7737 @LENGTH@ 22


UPD ExpressionStatement@@Assignment:limit=Integer.parseInt(sLimit) @TO@ Assignment:limit=Math.min(Integer.parseInt(sLimit),config.getMaxPageSize()) @AT@ 2701 @LENGTH@ 33
---UPD Assignment@@limit=Integer.parseInt(sLimit) @TO@ limit=Math.min(Integer.parseInt(sLimit),config.getMaxPageSize()) @AT@ 2701 @LENGTH@ 32
------INS MethodInvocation@@Math.min(Integer.parseInt(sLimit),config.getMaxPageSize()) @TO@ Assignment@@limit=Integer.parseInt(sLimit) @AT@ 2708 @LENGTH@ 59
---------INS SimpleName@@Name:Math @TO@ MethodInvocation@@Math.min(Integer.parseInt(sLimit),config.getMaxPageSize()) @AT@ 2708 @LENGTH@ 4
---------INS SimpleName@@MethodName:min:[Integer.parseInt(sLimit), config.getMaxPageSize()] @TO@ MethodInvocation@@Math.min(Integer.parseInt(sLimit),config.getMaxPageSize()) @AT@ 2713 @LENGTH@ 54
------------MOV MethodInvocation@@Integer.parseInt(sLimit) @TO@ SimpleName@@MethodName:min:[Integer.parseInt(sLimit), config.getMaxPageSize()] @AT@ 2709 @LENGTH@ 24
------------INS MethodInvocation@@config.getMaxPageSize() @TO@ SimpleName@@MethodName:min:[Integer.parseInt(sLimit), config.getMaxPageSize()] @AT@ 2743 @LENGTH@ 23
---------------INS SimpleName@@Name:config @TO@ MethodInvocation@@config.getMaxPageSize() @AT@ 2743 @LENGTH@ 6
---------------INS SimpleName@@MethodName:getMaxPageSize:[] @TO@ MethodInvocation@@config.getMaxPageSize() @AT@ 2750 @LENGTH@ 16


UPD ReturnStatement@@MethodInvocation:FunctorUtils.copy(iPredicates) @TO@ MethodInvocation:FunctorUtils.<T>copy(iPredicates) @AT@ 1870 @LENGTH@ 38
---UPD MethodInvocation@@FunctorUtils.copy(iPredicates) @TO@ FunctorUtils.<T>copy(iPredicates) @AT@ 1877 @LENGTH@ 30


UPD ExpressionStatement@@Assignment:modulePath=modulePath.split(File.pathSeparator)[1] @TO@ Assignment:modulePath=modulePath.split(File.pathSeparator)[0] @AT@ 11261 @LENGTH@ 53
---UPD Assignment@@modulePath=modulePath.split(File.pathSeparator)[1] @TO@ modulePath=modulePath.split(File.pathSeparator)[0] @AT@ 11261 @LENGTH@ 52
------UPD ArrayAccess@@modulePath.split(File.pathSeparator)[1] @TO@ modulePath.split(File.pathSeparator)[0] @AT@ 11274 @LENGTH@ 39
---------UPD NumberLiteral@@1 @TO@ 0 @AT@ 11311 @LENGTH@ 1


UPD ReturnStatement@@ArrayCreation:new Option[]{new DefaultCompositeOption(fabricDistributionConfiguration()),copySystemProperty("feature")} @TO@ ArrayCreation:new Option[]{new DefaultCompositeOption(fabricDistributionConfiguration()),debugConfiguration("5005",false),copySystemProperty("feature")} @AT@ 4783 @LENGTH@ 207
---UPD ArrayCreation@@new Option[]{new DefaultCompositeOption(fabricDistributionConfiguration()),copySystemProperty("feature")} @TO@ new Option[]{new DefaultCompositeOption(fabricDistributionConfiguration()),debugConfiguration("5005",false),copySystemProperty("feature")} @AT@ 4790 @LENGTH@ 199
------UPD ArrayInitializer@@{new DefaultCompositeOption(fabricDistributionConfiguration()),copySystemProperty("feature")} @TO@ {new DefaultCompositeOption(fabricDistributionConfiguration()),debugConfiguration("5005",false),copySystemProperty("feature")} @AT@ 4802 @LENGTH@ 187
---------INS MethodInvocation@@debugConfiguration("5005",false) @TO@ ArrayInitializer@@{new DefaultCompositeOption(fabricDistributionConfiguration()),copySystemProperty("feature")} @AT@ 4999 @LENGTH@ 32
------------INS SimpleName@@MethodName:debugConfiguration:["5005", false] @TO@ MethodInvocation@@debugConfiguration("5005",false) @AT@ 4999 @LENGTH@ 32
---------------INS StringLiteral@@"5005" @TO@ SimpleName@@MethodName:debugConfiguration:["5005", false] @AT@ 5018 @LENGTH@ 6
---------------INS BooleanLiteral@@false @TO@ SimpleName@@MethodName:debugConfiguration:["5005", false] @AT@ 5025 @LENGTH@ 5


DEL FieldDeclaration@@private, final, Map<Class<?>,Map<String,Object>>, [typeCacheMap=new ConcurrentHashMap<Class<?>,Map<String,Object>>()] @AT@ 1634 @LENGTH@ 119
---DEL Modifier@@private @AT@ 1634 @LENGTH@ 7
---DEL Modifier@@final @AT@ 1642 @LENGTH@ 5
---DEL ParameterizedType@@Map<Class<?>,Map<String,Object>> @AT@ 1648 @LENGTH@ 34
------DEL SimpleType@@Map @AT@ 1648 @LENGTH@ 3
------DEL ParameterizedType@@Class<?> @AT@ 1652 @LENGTH@ 8
---------DEL SimpleType@@Class @AT@ 1652 @LENGTH@ 5
---------DEL WildcardType@@? @AT@ 1658 @LENGTH@ 1
------DEL ParameterizedType@@Map<String,Object> @AT@ 1662 @LENGTH@ 19
---------DEL SimpleType@@Map @AT@ 1662 @LENGTH@ 3
---------DEL SimpleType@@String @AT@ 1666 @LENGTH@ 6
---------DEL SimpleType@@Object @AT@ 1674 @LENGTH@ 6
---DEL VariableDeclarationFragment@@typeCacheMap=new ConcurrentHashMap<Class<?>,Map<String,Object>>() @AT@ 1683 @LENGTH@ 69
------DEL SimpleName@@typeCacheMap @AT@ 1683 @LENGTH@ 12
------DEL ClassInstanceCreation@@ConcurrentHashMap<Class<?>,Map<String,Object>>[] @AT@ 1698 @LENGTH@ 54
---------DEL New@@new @AT@ 1698 @LENGTH@ 3
---------DEL ParameterizedType@@ConcurrentHashMap<Class<?>,Map<String,Object>> @AT@ 1702 @LENGTH@ 48
------------DEL SimpleType@@ConcurrentHashMap @AT@ 1702 @LENGTH@ 17
------------DEL ParameterizedType@@Class<?> @AT@ 1720 @LENGTH@ 8
---------------DEL SimpleType@@Class @AT@ 1720 @LENGTH@ 5
---------------DEL WildcardType@@? @AT@ 1726 @LENGTH@ 1
------------DEL ParameterizedType@@Map<String,Object> @AT@ 1730 @LENGTH@ 19
---------------DEL SimpleType@@Map @AT@ 1730 @LENGTH@ 3
---------------DEL SimpleType@@String @AT@ 1734 @LENGTH@ 6
---------------DEL SimpleType@@Object @AT@ 1742 @LENGTH@ 6


UPD IfStatement@@if (!config.expectFailedWriteAttributeOperation(writeOp)) {  Assert.assertEquals("Failed: " + writeOp + "\n"+ result,SUCCESS,result.get(OUTCOME).asString());} else {  Assert.assertEquals("Expected failure: " + writeOp,FAILED,result.get(OUTCOME).asString());  transformedOperation=mainServices.transformOperation(modelVersion,config.correctWriteAttributeOperation(writeOp));  result=mainServices.executeOperation(modelVersion,transformedOperation);  Assert.assertEquals(result.get(FAILURE_DESCRIPTION).asString() + " for\n:" + transformedOperation.getTransformedOperation(),SUCCESS,result.get(OUTCOME).asString());} @TO@ if (!config.expectFailedWriteAttributeOperation(writeOp)) {  ModelNode result=mainServices.executeOperation(modelVersion,transformedOperation);  Assert.assertEquals("Failed: " + writeOp + "\n"+ result,SUCCESS,result.get(OUTCOME).asString());} else {  Assert.assertNotNull("Expected transformation to get rejected " + writeOp,transformedOperation.getFailureDescription());  transformedOperation=mainServices.transformOperation(modelVersion,config.correctWriteAttributeOperation(writeOp));  ModelNode result=mainServices.executeOperation(modelVersion,transformedOperation);  Assert.assertEquals(result.get(FAILURE_DESCRIPTION).asString() + " for\n:" + transformedOperation.getTransformedOperation(),SUCCESS,result.get(OUTCOME).asString());} @AT@ 24304 @LENGTH@ 757
---UPD Block@@ThenBody:{  Assert.assertEquals("Failed: " + writeOp + "\n"+ result,SUCCESS,result.get(OUTCOME).asString());} @TO@ ThenBody:{  ModelNode result=mainServices.executeOperation(modelVersion,transformedOperation);  Assert.assertEquals("Failed: " + writeOp + "\n"+ result,SUCCESS,result.get(OUTCOME).asString());} @AT@ 24362 @LENGTH@ 139
------INS VariableDeclarationStatement@@ModelNode result=mainServices.executeOperation(modelVersion,transformedOperation); @TO@ Block@@ThenBody:{  Assert.assertEquals("Failed: " + writeOp + "\n"+ result,SUCCESS,result.get(OUTCOME).asString());} @AT@ 24282 @LENGTH@ 85
---------INS SimpleType@@ModelNode @TO@ VariableDeclarationStatement@@ModelNode result=mainServices.executeOperation(modelVersion,transformedOperation); @AT@ 24282 @LENGTH@ 9
---------INS VariableDeclarationFragment@@result=mainServices.executeOperation(modelVersion,transformedOperation) @TO@ VariableDeclarationStatement@@ModelNode result=mainServices.executeOperation(modelVersion,transformedOperation); @AT@ 24292 @LENGTH@ 74
------------INS SimpleName@@result @TO@ VariableDeclarationFragment@@result=mainServices.executeOperation(modelVersion,transformedOperation) @AT@ 24292 @LENGTH@ 6
------------INS MethodInvocation@@mainServices.executeOperation(modelVersion,transformedOperation) @TO@ VariableDeclarationFragment@@result=mainServices.executeOperation(modelVersion,transformedOperation) @AT@ 24301 @LENGTH@ 65
---------------INS SimpleName@@Name:mainServices @TO@ MethodInvocation@@mainServices.executeOperation(modelVersion,transformedOperation) @AT@ 24301 @LENGTH@ 12
---------------INS SimpleName@@MethodName:executeOperation:[modelVersion, transformedOperation] @TO@ MethodInvocation@@mainServices.executeOperation(modelVersion,transformedOperation) @AT@ 24314 @LENGTH@ 52
------------------INS SimpleName@@modelVersion @TO@ SimpleName@@MethodName:executeOperation:[modelVersion, transformedOperation] @AT@ 24331 @LENGTH@ 12
------------------INS SimpleName@@transformedOperation @TO@ SimpleName@@MethodName:executeOperation:[modelVersion, transformedOperation] @AT@ 24345 @LENGTH@ 20
---UPD Block@@ElseBody:{  Assert.assertEquals("Expected failure: " + writeOp,FAILED,result.get(OUTCOME).asString());  transformedOperation=mainServices.transformOperation(modelVersion,config.correctWriteAttributeOperation(writeOp));  result=mainServices.executeOperation(modelVersion,transformedOperation);  Assert.assertEquals(result.get(FAILURE_DESCRIPTION).asString() + " for\n:" + transformedOperation.getTransformedOperation(),SUCCESS,result.get(OUTCOME).asString());} @TO@ ElseBody:{  Assert.assertNotNull("Expected transformation to get rejected " + writeOp,transformedOperation.getFailureDescription());  transformedOperation=mainServices.transformOperation(modelVersion,config.correctWriteAttributeOperation(writeOp));  ModelNode result=mainServices.executeOperation(modelVersion,transformedOperation);  Assert.assertEquals(result.get(FAILURE_DESCRIPTION).asString() + " for\n:" + transformedOperation.getTransformedOperation(),SUCCESS,result.get(OUTCOME).asString());} @AT@ 24507 @LENGTH@ 554
------MOV VariableDeclarationStatement@@ModelNode result=mainServices.executeOperation(modelVersion,transformedOperation); @TO@ Block@@ElseBody:{  Assert.assertEquals("Expected failure: " + writeOp,FAILED,result.get(OUTCOME).asString());  transformedOperation=mainServices.transformOperation(modelVersion,config.correctWriteAttributeOperation(writeOp));  result=mainServices.executeOperation(modelVersion,transformedOperation);  Assert.assertEquals(result.get(FAILURE_DESCRIPTION).asString() + " for\n:" + transformedOperation.getTransformedOperation(),SUCCESS,result.get(OUTCOME).asString());} @AT@ 24202 @LENGTH@ 85
------UPD ExpressionStatement@@MethodInvocation:Assert.assertEquals("Expected failure: " + writeOp,FAILED,result.get(OUTCOME).asString()) @TO@ MethodInvocation:Assert.assertNotNull("Expected transformation to get rejected " + writeOp,transformedOperation.getFailureDescription()) @AT@ 24529 @LENGTH@ 93
---------UPD MethodInvocation@@Assert.assertEquals("Expected failure: " + writeOp,FAILED,result.get(OUTCOME).asString()) @TO@ Assert.assertNotNull("Expected transformation to get rejected " + writeOp,transformedOperation.getFailureDescription()) @AT@ 24529 @LENGTH@ 92
------------UPD SimpleName@@MethodName:assertEquals:["Expected failure: " + writeOp, FAILED, result.get(OUTCOME).asString()] @TO@ MethodName:assertNotNull:["Expected transformation to get rejected " + writeOp, transformedOperation.getFailureDescription()] @AT@ 24536 @LENGTH@ 85
---------------UPD InfixExpression@@"Expected failure: " + writeOp @TO@ "Expected transformation to get rejected " + writeOp @AT@ 24549 @LENGTH@ 30
------------------UPD StringLiteral@@"Expected failure: " @TO@ "Expected transformation to get rejected " @AT@ 24549 @LENGTH@ 20
---------------DEL SimpleName@@FAILED @AT@ 24582 @LENGTH@ 6
---------------UPD MethodInvocation@@result.get(OUTCOME).asString() @TO@ transformedOperation.getFailureDescription() @AT@ 24590 @LENGTH@ 30
------------------DEL MethodInvocation@@MethodName:get:[OUTCOME] @AT@ 24590 @LENGTH@ 19
---------------------DEL SimpleName@@OUTCOME @AT@ 24601 @LENGTH@ 7
------------------UPD SimpleName@@Name:result @TO@ Name:transformedOperation @AT@ 24590 @LENGTH@ 6
------------------UPD SimpleName@@MethodName:asString:[] @TO@ MethodName:getFailureDescription:[] @AT@ 24610 @LENGTH@ 10
------DEL ExpressionStatement@@Assignment:result=mainServices.executeOperation(modelVersion,transformedOperation) @AT@ 24781 @LENGTH@ 75
---------DEL Assignment@@result=mainServices.executeOperation(modelVersion,transformedOperation) @AT@ 24781 @LENGTH@ 74
------------DEL SimpleName@@result @AT@ 24781 @LENGTH@ 6
------------DEL Operator@@= @AT@ 24787 @LENGTH@ 1
------------DEL MethodInvocation@@mainServices.executeOperation(modelVersion,transformedOperation) @AT@ 24790 @LENGTH@ 65
---------------DEL SimpleName@@Name:mainServices @AT@ 24790 @LENGTH@ 12
---------------DEL SimpleName@@MethodName:executeOperation:[modelVersion, transformedOperation] @AT@ 24803 @LENGTH@ 52
------------------DEL SimpleName@@modelVersion @AT@ 24820 @LENGTH@ 12
------------------DEL SimpleName@@transformedOperation @AT@ 24834 @LENGTH@ 20


UPD ReturnStatement@@ClassInstanceCreation:new LightweightHttpWagon() @TO@ MethodInvocation:new DefaultPlexusContainer().lookup(Wagon.class,roleHint) @AT@ 10192 @LENGTH@ 34
---DEL ClassInstanceCreation@@LightweightHttpWagon[] @AT@ 10199 @LENGTH@ 26
---INS MethodInvocation@@new DefaultPlexusContainer().lookup(Wagon.class,roleHint) @TO@ ReturnStatement@@ClassInstanceCreation:new LightweightHttpWagon() @AT@ 10311 @LENGTH@ 58
------INS ClassInstanceCreation@@DefaultPlexusContainer[] @TO@ MethodInvocation@@new DefaultPlexusContainer().lookup(Wagon.class,roleHint) @AT@ 10311 @LENGTH@ 28
---------MOV New@@new @TO@ ClassInstanceCreation@@DefaultPlexusContainer[] @AT@ 10199 @LENGTH@ 3
---------MOV SimpleType@@LightweightHttpWagon @TO@ ClassInstanceCreation@@DefaultPlexusContainer[] @AT@ 10203 @LENGTH@ 20
------INS SimpleName@@MethodName:lookup:[Wagon.class, roleHint] @TO@ MethodInvocation@@new DefaultPlexusContainer().lookup(Wagon.class,roleHint) @AT@ 10340 @LENGTH@ 29
---------INS TypeLiteral@@Wagon.class @TO@ SimpleName@@MethodName:lookup:[Wagon.class, roleHint] @AT@ 10347 @LENGTH@ 11
---------INS SimpleName@@roleHint @TO@ SimpleName@@MethodName:lookup:[Wagon.class, roleHint] @AT@ 10360 @LENGTH@ 8


INS ExpressionStatement@@MethodInvocation:System.out.println("EventListenser is " + ehcacheEventListners.iterator().next()) @TO@ MethodDeclaration@@public, void, MethodName:testConfig, Exception,  @AT@ 4533 @LENGTH@ 82
---INS MethodInvocation@@System.out.println("EventListenser is " + ehcacheEventListners.iterator().next()) @TO@ ExpressionStatement@@MethodInvocation:System.out.println("EventListenser is " + ehcacheEventListners.iterator().next()) @AT@ 4533 @LENGTH@ 81
------INS QualifiedName@@Name:System.out @TO@ MethodInvocation@@System.out.println("EventListenser is " + ehcacheEventListners.iterator().next()) @AT@ 4533 @LENGTH@ 10
------INS SimpleName@@MethodName:println:["EventListenser is " + ehcacheEventListners.iterator().next()] @TO@ MethodInvocation@@System.out.println("EventListenser is " + ehcacheEventListners.iterator().next()) @AT@ 4544 @LENGTH@ 70
---------INS InfixExpression@@"EventListenser is " + ehcacheEventListners.iterator().next() @TO@ SimpleName@@MethodName:println:["EventListenser is " + ehcacheEventListners.iterator().next()] @AT@ 4552 @LENGTH@ 61
------------INS StringLiteral@@"EventListenser is " @TO@ InfixExpression@@"EventListenser is " + ehcacheEventListners.iterator().next() @AT@ 4552 @LENGTH@ 20
------------INS Operator@@+ @TO@ InfixExpression@@"EventListenser is " + ehcacheEventListners.iterator().next() @AT@ 4572 @LENGTH@ 1
------------INS MethodInvocation@@ehcacheEventListners.iterator().next() @TO@ InfixExpression@@"EventListenser is " + ehcacheEventListners.iterator().next() @AT@ 4575 @LENGTH@ 38
---------------INS MethodInvocation@@MethodName:iterator:[] @TO@ MethodInvocation@@ehcacheEventListners.iterator().next() @AT@ 4575 @LENGTH@ 31
---------------INS SimpleName@@Name:ehcacheEventListners @TO@ MethodInvocation@@ehcacheEventListners.iterator().next() @AT@ 4575 @LENGTH@ 20
---------------INS SimpleName@@MethodName:next:[] @TO@ MethodInvocation@@ehcacheEventListners.iterator().next() @AT@ 4607 @LENGTH@ 6


INS MethodDeclaration@@public, void, MethodName:setUp,  @TO@ TypeDeclaration@@[@RunWith(SpringJUnit4ClassRunner.class), @ContextConfiguration, public]JRedisConnectionIntegrationTests, AbstractConnectionIntegrationTests @AT@ 1695 @LENGTH@ 143
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:setUp,  @AT@ 1695 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:setUp,  @AT@ 1702 @LENGTH@ 4
---INS SimpleName@@MethodName:setUp @TO@ MethodDeclaration@@public, void, MethodName:setUp,  @AT@ 1707 @LENGTH@ 5
---INS ExpressionStatement@@Assignment:byteConnection=connectionFactory.getConnection() @TO@ MethodDeclaration@@public, void, MethodName:setUp,  @AT@ 1719 @LENGTH@ 51
------INS Assignment@@byteConnection=connectionFactory.getConnection() @TO@ ExpressionStatement@@Assignment:byteConnection=connectionFactory.getConnection() @AT@ 1719 @LENGTH@ 50
---------INS SimpleName@@byteConnection @TO@ Assignment@@byteConnection=connectionFactory.getConnection() @AT@ 1719 @LENGTH@ 14
---------INS Operator@@= @TO@ Assignment@@byteConnection=connectionFactory.getConnection() @AT@ 1733 @LENGTH@ 1
---------INS MethodInvocation@@connectionFactory.getConnection() @TO@ Assignment@@byteConnection=connectionFactory.getConnection() @AT@ 1736 @LENGTH@ 33
------------INS SimpleName@@Name:connectionFactory @TO@ MethodInvocation@@connectionFactory.getConnection() @AT@ 1736 @LENGTH@ 17
------------INS SimpleName@@MethodName:getConnection:[] @TO@ MethodInvocation@@connectionFactory.getConnection() @AT@ 1754 @LENGTH@ 15
---INS ExpressionStatement@@Assignment:connection=new DefaultStringRedisConnection(byteConnection) @TO@ MethodDeclaration@@public, void, MethodName:setUp,  @AT@ 1773 @LENGTH@ 62
------INS Assignment@@connection=new DefaultStringRedisConnection(byteConnection) @TO@ ExpressionStatement@@Assignment:connection=new DefaultStringRedisConnection(byteConnection) @AT@ 1773 @LENGTH@ 61
---------INS SimpleName@@connection @TO@ Assignment@@connection=new DefaultStringRedisConnection(byteConnection) @AT@ 1773 @LENGTH@ 10
---------INS Operator@@= @TO@ Assignment@@connection=new DefaultStringRedisConnection(byteConnection) @AT@ 1783 @LENGTH@ 1
---------INS ClassInstanceCreation@@DefaultStringRedisConnection[byteConnection] @TO@ Assignment@@connection=new DefaultStringRedisConnection(byteConnection) @AT@ 1786 @LENGTH@ 48
------------INS New@@new @TO@ ClassInstanceCreation@@DefaultStringRedisConnection[byteConnection] @AT@ 1786 @LENGTH@ 3
------------INS SimpleType@@DefaultStringRedisConnection @TO@ ClassInstanceCreation@@DefaultStringRedisConnection[byteConnection] @AT@ 1790 @LENGTH@ 28
------------INS SimpleName@@byteConnection @TO@ ClassInstanceCreation@@DefaultStringRedisConnection[byteConnection] @AT@ 1819 @LENGTH@ 14


UPD EnhancedForStatement@@for (String p : str.split(" +")) {  profiles.add(new ProfileImpl(p,version,service));} @TO@ for (String p : str.split(" +")) {  if (!p.isEmpty()) {    profiles.add(new ProfileImpl(p,version,service));  }} @AT@ 7576 @LENGTH@ 124
---INS IfStatement@@if (!p.isEmpty()) {  profiles.add(new ProfileImpl(p,version,service));} @TO@ EnhancedForStatement@@for (String p : str.split(" +")) {  profiles.add(new ProfileImpl(p,version,service));} @AT@ 7625 @LENGTH@ 117
------INS PrefixExpression@@!p.isEmpty() @TO@ IfStatement@@if (!p.isEmpty()) {  profiles.add(new ProfileImpl(p,version,service));} @AT@ 7629 @LENGTH@ 12
---------INS Operator@@! @TO@ PrefixExpression@@!p.isEmpty() @AT@ 7629 @LENGTH@ 1
---------INS MethodInvocation@@p.isEmpty() @TO@ PrefixExpression@@!p.isEmpty() @AT@ 7630 @LENGTH@ 11
------------INS SimpleName@@Name:p @TO@ MethodInvocation@@p.isEmpty() @AT@ 7630 @LENGTH@ 1
------------INS SimpleName@@MethodName:isEmpty:[] @TO@ MethodInvocation@@p.isEmpty() @AT@ 7632 @LENGTH@ 9
------INS Block@@ThenBody:{  profiles.add(new ProfileImpl(p,version,service));} @TO@ IfStatement@@if (!p.isEmpty()) {  profiles.add(new ProfileImpl(p,version,service));} @AT@ 7643 @LENGTH@ 99
---------MOV ExpressionStatement@@MethodInvocation:profiles.add(new ProfileImpl(p,version,service)) @TO@ Block@@ThenBody:{  profiles.add(new ProfileImpl(p,version,service));} @AT@ 7631 @LENGTH@ 51


UPD CatchClause@@catch (BeanInstantiationException e) {  new MappingInstantiationException(entity,Collections.emptyList(),e);} @TO@ catch (BeanInstantiationException e) {  throw new MappingInstantiationException(entity,Collections.emptyList(),e);} @AT@ 2221 @LENGTH@ 118
---INS ThrowStatement@@ClassInstanceCreation:new MappingInstantiationException(entity,Collections.emptyList(),e) @TO@ CatchClause@@catch (BeanInstantiationException e) {  new MappingInstantiationException(entity,Collections.emptyList(),e);} @AT@ 2264 @LENGTH@ 76
------MOV ClassInstanceCreation@@MappingInstantiationException[entity, Collections.emptyList(), e] @TO@ ThrowStatement@@ClassInstanceCreation:new MappingInstantiationException(entity,Collections.emptyList(),e) @AT@ 2264 @LENGTH@ 69
---DEL ExpressionStatement@@ClassInstanceCreation:new MappingInstantiationException(entity,Collections.emptyList(),e) @AT@ 2264 @LENGTH@ 70


UPD IfStatement@@if (prop.property.isCollectionLike()) {  List<Resource<?>> resources=new ArrayList<Resource<?>>();  PersistentEntity entity=repositories.getPersistentEntity(prop.propertyType);  for (  Object obj : ((Iterable)prop.propertyValue)) {    PersistentEntityResource per=PersistentEntityResource.wrap(entity,obj,repoRequest.getBaseUri());    Link selfLink=repoRequest.buildEntitySelfLink(obj,conversionService);    per.add(selfLink);    resources.add(per);  }  return new Resource<Object>(resources);} else if (prop.property.isMap()) {  Map<Object,Resource<?>> resources=new HashMap<Object,Resource<?>>();  PersistentEntity entity=repositories.getPersistentEntity(prop.propertyType);  for (  Map.Entry<Object,Object> entry : ((Map<Object,Object>)prop.propertyValue).entrySet()) {    PersistentEntityResource per=PersistentEntityResource.wrap(entity,entry.getValue(),repoRequest.getBaseUri());    Link selfLink=repoRequest.buildEntitySelfLink(entry.getValue(),conversionService);    per.add(selfLink);    resources.put(entry.getKey(),per);  }  return new Resource<Object>(resources);} else {  PersistentEntityResource per=PersistentEntityResource.wrap(repositories.getPersistentEntity(prop.propertyType),prop.propertyValue,repoRequest.getBaseUri());  Link selfLink=repoRequest.buildEntitySelfLink(prop.propertyValue,conversionService);  per.add(selfLink);  headers.set("Content-Location",selfLink.getHref());  return new Resource<Object>(per);} @TO@ if (prop.property.isCollectionLike()) {  List<Resource<?>> resources=new ArrayList<Resource<?>>();  PersistentEntity entity=repositories.getPersistentEntity(prop.propertyType);  for (  Object obj : ((Iterable)prop.propertyValue)) {    BeanWrapper wrapper=BeanWrapper.create(obj,conversionService);    PersistentEntityResource per=PersistentEntityResource.wrap(entity,obj,repoRequest.getBaseUri());    Link selfLink=entityLinks.linkForSingleResource(entity.getType(),wrapper.getProperty(entity.getIdProperty())).withSelfRel();    per.add(selfLink);    resources.add(per);  }  return new Resource<Object>(resources);} else if (prop.property.isMap()) {  Map<Object,Resource<?>> resources=new HashMap<Object,Resource<?>>();  PersistentEntity entity=repositories.getPersistentEntity(prop.propertyType);  for (  Map.Entry<Object,Object> entry : ((Map<Object,Object>)prop.propertyValue).entrySet()) {    PersistentEntityResource per=PersistentEntityResource.wrap(entity,entry.getValue(),repoRequest.getBaseUri());    BeanWrapper wrapper=BeanWrapper.create(entry.getValue(),conversionService);    Link selfLink=entityLinks.linkForSingleResource(entity.getType(),wrapper.getProperty(entity.getIdProperty())).withSelfRel();    per.add(selfLink);    resources.put(entry.getKey(),per);  }  return new Resource<Object>(resources);} else {  PersistentEntityResource per=PersistentEntityResource.wrap(repositories.getPersistentEntity(prop.propertyType),prop.propertyValue,repoRequest.getBaseUri());  BeanWrapper wrapper=BeanWrapper.create(prop.propertyValue,conversionService);  Link selfLink=entityLinks.linkForSingleResource(prop.propertyType,wrapper.getProperty(prop.entity.getIdProperty())).withSelfRel();  per.add(selfLink);  headers.set("Content-Location",selfLink.getHref());  return new Resource<Object>(per);} @AT@ 3580 @LENGTH@ 1832
---UPD Block@@ThenBody:{  List<Resource<?>> resources=new ArrayList<Resource<?>>();  PersistentEntity entity=repositories.getPersistentEntity(prop.propertyType);  for (  Object obj : ((Iterable)prop.propertyValue)) {    PersistentEntityResource per=PersistentEntityResource.wrap(entity,obj,repoRequest.getBaseUri());    Link selfLink=repoRequest.buildEntitySelfLink(obj,conversionService);    per.add(selfLink);    resources.add(per);  }  return new Resource<Object>(resources);} @TO@ ThenBody:{  List<Resource<?>> resources=new ArrayList<Resource<?>>();  PersistentEntity entity=repositories.getPersistentEntity(prop.propertyType);  for (  Object obj : ((Iterable)prop.propertyValue)) {    BeanWrapper wrapper=BeanWrapper.create(obj,conversionService);    PersistentEntityResource per=PersistentEntityResource.wrap(entity,obj,repoRequest.getBaseUri());    Link selfLink=entityLinks.linkForSingleResource(entity.getType(),wrapper.getProperty(entity.getIdProperty())).withSelfRel();    per.add(selfLink);    resources.add(per);  }  return new Resource<Object>(resources);} @AT@ 3617 @LENGTH@ 502
------UPD EnhancedForStatement@@for (Object obj : ((Iterable)prop.propertyValue)) {  PersistentEntityResource per=PersistentEntityResource.wrap(entity,obj,repoRequest.getBaseUri());  Link selfLink=repoRequest.buildEntitySelfLink(obj,conversionService);  per.add(selfLink);  resources.add(per);} @TO@ for (Object obj : ((Iterable)prop.propertyValue)) {  BeanWrapper wrapper=BeanWrapper.create(obj,conversionService);  PersistentEntityResource per=PersistentEntityResource.wrap(entity,obj,repoRequest.getBaseUri());  Link selfLink=entityLinks.linkForSingleResource(entity.getType(),wrapper.getProperty(entity.getIdProperty())).withSelfRel();  per.add(selfLink);  resources.add(per);} @AT@ 3773 @LENGTH@ 294
---------MOV VariableDeclarationStatement@@PersistentEntityResource per=PersistentEntityResource.wrap(entity,obj,repoRequest.getBaseUri()); @TO@ EnhancedForStatement@@for (Object obj : ((Iterable)prop.propertyValue)) {  PersistentEntityResource per=PersistentEntityResource.wrap(entity,obj,repoRequest.getBaseUri());  Link selfLink=repoRequest.buildEntitySelfLink(obj,conversionService);  per.add(selfLink);  resources.add(per);} @AT@ 3830 @LENGTH@ 100
---------UPD VariableDeclarationStatement@@Link selfLink=repoRequest.buildEntitySelfLink(obj,conversionService); @TO@ BeanWrapper wrapper=BeanWrapper.create(obj,conversionService); @AT@ 3937 @LENGTH@ 72
------------UPD SimpleType@@Link @TO@ BeanWrapper @AT@ 3937 @LENGTH@ 4
------------UPD VariableDeclarationFragment@@selfLink=repoRequest.buildEntitySelfLink(obj,conversionService) @TO@ wrapper=BeanWrapper.create(obj,conversionService) @AT@ 3942 @LENGTH@ 66
---------------UPD SimpleName@@selfLink @TO@ wrapper @AT@ 3942 @LENGTH@ 8
---------------UPD MethodInvocation@@repoRequest.buildEntitySelfLink(obj,conversionService) @TO@ BeanWrapper.create(obj,conversionService) @AT@ 3953 @LENGTH@ 55
------------------UPD SimpleName@@Name:repoRequest @TO@ Name:BeanWrapper @AT@ 3953 @LENGTH@ 11
------------------UPD SimpleName@@MethodName:buildEntitySelfLink:[obj, conversionService] @TO@ MethodName:create:[obj, conversionService] @AT@ 3965 @LENGTH@ 43
---------INS VariableDeclarationStatement@@Link selfLink=entityLinks.linkForSingleResource(entity.getType(),wrapper.getProperty(entity.getIdProperty())).withSelfRel(); @TO@ EnhancedForStatement@@for (Object obj : ((Iterable)prop.propertyValue)) {  PersistentEntityResource per=PersistentEntityResource.wrap(entity,obj,repoRequest.getBaseUri());  Link selfLink=repoRequest.buildEntitySelfLink(obj,conversionService);  per.add(selfLink);  resources.add(per);} @AT@ 4009 @LENGTH@ 217
------------INS SimpleType@@Link @TO@ VariableDeclarationStatement@@Link selfLink=entityLinks.linkForSingleResource(entity.getType(),wrapper.getProperty(entity.getIdProperty())).withSelfRel(); @AT@ 4009 @LENGTH@ 4
------------INS VariableDeclarationFragment@@selfLink=entityLinks.linkForSingleResource(entity.getType(),wrapper.getProperty(entity.getIdProperty())).withSelfRel() @TO@ VariableDeclarationStatement@@Link selfLink=entityLinks.linkForSingleResource(entity.getType(),wrapper.getProperty(entity.getIdProperty())).withSelfRel(); @AT@ 4014 @LENGTH@ 211
---------------INS SimpleName@@selfLink @TO@ VariableDeclarationFragment@@selfLink=entityLinks.linkForSingleResource(entity.getType(),wrapper.getProperty(entity.getIdProperty())).withSelfRel() @AT@ 4014 @LENGTH@ 8
---------------INS MethodInvocation@@entityLinks.linkForSingleResource(entity.getType(),wrapper.getProperty(entity.getIdProperty())).withSelfRel() @TO@ VariableDeclarationFragment@@selfLink=entityLinks.linkForSingleResource(entity.getType(),wrapper.getProperty(entity.getIdProperty())).withSelfRel() @AT@ 4025 @LENGTH@ 200
------------------INS MethodInvocation@@MethodName:linkForSingleResource:[entity.getType(), wrapper.getProperty(entity.getIdProperty())] @TO@ MethodInvocation@@entityLinks.linkForSingleResource(entity.getType(),wrapper.getProperty(entity.getIdProperty())).withSelfRel() @AT@ 4025 @LENGTH@ 152
---------------------INS MethodInvocation@@entity.getType() @TO@ MethodInvocation@@MethodName:linkForSingleResource:[entity.getType(), wrapper.getProperty(entity.getIdProperty())] @AT@ 4059 @LENGTH@ 16
------------------------INS SimpleName@@Name:entity @TO@ MethodInvocation@@entity.getType() @AT@ 4059 @LENGTH@ 6
------------------------INS SimpleName@@MethodName:getType:[] @TO@ MethodInvocation@@entity.getType() @AT@ 4066 @LENGTH@ 9
---------------------INS MethodInvocation@@wrapper.getProperty(entity.getIdProperty()) @TO@ MethodInvocation@@MethodName:linkForSingleResource:[entity.getType(), wrapper.getProperty(entity.getIdProperty())] @AT@ 4133 @LENGTH@ 43
------------------------INS SimpleName@@Name:wrapper @TO@ MethodInvocation@@wrapper.getProperty(entity.getIdProperty()) @AT@ 4133 @LENGTH@ 7
------------------------INS SimpleName@@MethodName:getProperty:[entity.getIdProperty()] @TO@ MethodInvocation@@wrapper.getProperty(entity.getIdProperty()) @AT@ 4141 @LENGTH@ 35
---------------------------INS MethodInvocation@@entity.getIdProperty() @TO@ SimpleName@@MethodName:getProperty:[entity.getIdProperty()] @AT@ 4153 @LENGTH@ 22
------------------------------INS SimpleName@@Name:entity @TO@ MethodInvocation@@entity.getIdProperty() @AT@ 4153 @LENGTH@ 6
------------------------------INS SimpleName@@MethodName:getIdProperty:[] @TO@ MethodInvocation@@entity.getIdProperty() @AT@ 4160 @LENGTH@ 15
------------------INS SimpleName@@Name:entityLinks @TO@ MethodInvocation@@entityLinks.linkForSingleResource(entity.getType(),wrapper.getProperty(entity.getIdProperty())).withSelfRel() @AT@ 4025 @LENGTH@ 11
------------------INS SimpleName@@MethodName:withSelfRel:[] @TO@ MethodInvocation@@entityLinks.linkForSingleResource(entity.getType(),wrapper.getProperty(entity.getIdProperty())).withSelfRel() @AT@ 4212 @LENGTH@ 13
---UPD Block@@ElseBody:if (prop.property.isMap()) {  Map<Object,Resource<?>> resources=new HashMap<Object,Resource<?>>();  PersistentEntity entity=repositories.getPersistentEntity(prop.propertyType);  for (  Map.Entry<Object,Object> entry : ((Map<Object,Object>)prop.propertyValue).entrySet()) {    PersistentEntityResource per=PersistentEntityResource.wrap(entity,entry.getValue(),repoRequest.getBaseUri());    Link selfLink=repoRequest.buildEntitySelfLink(entry.getValue(),conversionService);    per.add(selfLink);    resources.put(entry.getKey(),per);  }  return new Resource<Object>(resources);} else {  PersistentEntityResource per=PersistentEntityResource.wrap(repositories.getPersistentEntity(prop.propertyType),prop.propertyValue,repoRequest.getBaseUri());  Link selfLink=repoRequest.buildEntitySelfLink(prop.propertyValue,conversionService);  per.add(selfLink);  headers.set("Content-Location",selfLink.getHref());  return new Resource<Object>(per);} @TO@ ElseBody:if (prop.property.isMap()) {  Map<Object,Resource<?>> resources=new HashMap<Object,Resource<?>>();  PersistentEntity entity=repositories.getPersistentEntity(prop.propertyType);  for (  Map.Entry<Object,Object> entry : ((Map<Object,Object>)prop.propertyValue).entrySet()) {    PersistentEntityResource per=PersistentEntityResource.wrap(entity,entry.getValue(),repoRequest.getBaseUri());    BeanWrapper wrapper=BeanWrapper.create(entry.getValue(),conversionService);    Link selfLink=entityLinks.linkForSingleResource(entity.getType(),wrapper.getProperty(entity.getIdProperty())).withSelfRel();    per.add(selfLink);    resources.put(entry.getKey(),per);  }  return new Resource<Object>(resources);} else {  PersistentEntityResource per=PersistentEntityResource.wrap(repositories.getPersistentEntity(prop.propertyType),prop.propertyValue,repoRequest.getBaseUri());  BeanWrapper wrapper=BeanWrapper.create(prop.propertyValue,conversionService);  Link selfLink=entityLinks.linkForSingleResource(prop.propertyType,wrapper.getProperty(prop.entity.getIdProperty())).withSelfRel();  per.add(selfLink);  headers.set("Content-Location",selfLink.getHref());  return new Resource<Object>(per);} @AT@ 4125 @LENGTH@ 1287
------UPD IfStatement@@if (prop.property.isMap()) {  Map<Object,Resource<?>> resources=new HashMap<Object,Resource<?>>();  PersistentEntity entity=repositories.getPersistentEntity(prop.propertyType);  for (  Map.Entry<Object,Object> entry : ((Map<Object,Object>)prop.propertyValue).entrySet()) {    PersistentEntityResource per=PersistentEntityResource.wrap(entity,entry.getValue(),repoRequest.getBaseUri());    Link selfLink=repoRequest.buildEntitySelfLink(entry.getValue(),conversionService);    per.add(selfLink);    resources.put(entry.getKey(),per);  }  return new Resource<Object>(resources);} else {  PersistentEntityResource per=PersistentEntityResource.wrap(repositories.getPersistentEntity(prop.propertyType),prop.propertyValue,repoRequest.getBaseUri());  Link selfLink=repoRequest.buildEntitySelfLink(prop.propertyValue,conversionService);  per.add(selfLink);  headers.set("Content-Location",selfLink.getHref());  return new Resource<Object>(per);} @TO@ if (prop.property.isMap()) {  Map<Object,Resource<?>> resources=new HashMap<Object,Resource<?>>();  PersistentEntity entity=repositories.getPersistentEntity(prop.propertyType);  for (  Map.Entry<Object,Object> entry : ((Map<Object,Object>)prop.propertyValue).entrySet()) {    PersistentEntityResource per=PersistentEntityResource.wrap(entity,entry.getValue(),repoRequest.getBaseUri());    BeanWrapper wrapper=BeanWrapper.create(entry.getValue(),conversionService);    Link selfLink=entityLinks.linkForSingleResource(entity.getType(),wrapper.getProperty(entity.getIdProperty())).withSelfRel();    per.add(selfLink);    resources.put(entry.getKey(),per);  }  return new Resource<Object>(resources);} else {  PersistentEntityResource per=PersistentEntityResource.wrap(repositories.getPersistentEntity(prop.propertyType),prop.propertyValue,repoRequest.getBaseUri());  BeanWrapper wrapper=BeanWrapper.create(prop.propertyValue,conversionService);  Link selfLink=entityLinks.linkForSingleResource(prop.propertyType,wrapper.getProperty(prop.entity.getIdProperty())).withSelfRel();  per.add(selfLink);  headers.set("Content-Location",selfLink.getHref());  return new Resource<Object>(per);} @AT@ 4125 @LENGTH@ 1287
---------UPD Block@@ThenBody:{  Map<Object,Resource<?>> resources=new HashMap<Object,Resource<?>>();  PersistentEntity entity=repositories.getPersistentEntity(prop.propertyType);  for (  Map.Entry<Object,Object> entry : ((Map<Object,Object>)prop.propertyValue).entrySet()) {    PersistentEntityResource per=PersistentEntityResource.wrap(entity,entry.getValue(),repoRequest.getBaseUri());    Link selfLink=repoRequest.buildEntitySelfLink(entry.getValue(),conversionService);    per.add(selfLink);    resources.put(entry.getKey(),per);  }  return new Resource<Object>(resources);} @TO@ ThenBody:{  Map<Object,Resource<?>> resources=new HashMap<Object,Resource<?>>();  PersistentEntity entity=repositories.getPersistentEntity(prop.propertyType);  for (  Map.Entry<Object,Object> entry : ((Map<Object,Object>)prop.propertyValue).entrySet()) {    PersistentEntityResource per=PersistentEntityResource.wrap(entity,entry.getValue(),repoRequest.getBaseUri());    BeanWrapper wrapper=BeanWrapper.create(entry.getValue(),conversionService);    Link selfLink=entityLinks.linkForSingleResource(entity.getType(),wrapper.getProperty(entity.getIdProperty())).withSelfRel();    per.add(selfLink);    resources.put(entry.getKey(),per);  }  return new Resource<Object>(resources);} @AT@ 4151 @LENGTH@ 734
------------UPD EnhancedForStatement@@for (Map.Entry<Object,Object> entry : ((Map<Object,Object>)prop.propertyValue).entrySet()) {  PersistentEntityResource per=PersistentEntityResource.wrap(entity,entry.getValue(),repoRequest.getBaseUri());  Link selfLink=repoRequest.buildEntitySelfLink(entry.getValue(),conversionService);  per.add(selfLink);  resources.put(entry.getKey(),per);} @TO@ for (Map.Entry<Object,Object> entry : ((Map<Object,Object>)prop.propertyValue).entrySet()) {  PersistentEntityResource per=PersistentEntityResource.wrap(entity,entry.getValue(),repoRequest.getBaseUri());  BeanWrapper wrapper=BeanWrapper.create(entry.getValue(),conversionService);  Link selfLink=entityLinks.linkForSingleResource(entity.getType(),wrapper.getProperty(entity.getIdProperty())).withSelfRel();  per.add(selfLink);  resources.put(entry.getKey(),per);} @AT@ 4320 @LENGTH@ 513
---------------UPD VariableDeclarationStatement@@Link selfLink=repoRequest.buildEntitySelfLink(entry.getValue(),conversionService); @TO@ BeanWrapper wrapper=BeanWrapper.create(entry.getValue(),conversionService); @AT@ 4674 @LENGTH@ 85
------------------UPD SimpleType@@Link @TO@ BeanWrapper @AT@ 4674 @LENGTH@ 4
------------------UPD VariableDeclarationFragment@@selfLink=repoRequest.buildEntitySelfLink(entry.getValue(),conversionService) @TO@ wrapper=BeanWrapper.create(entry.getValue(),conversionService) @AT@ 4679 @LENGTH@ 79
---------------------UPD SimpleName@@selfLink @TO@ wrapper @AT@ 4679 @LENGTH@ 8
---------------------UPD MethodInvocation@@repoRequest.buildEntitySelfLink(entry.getValue(),conversionService) @TO@ BeanWrapper.create(entry.getValue(),conversionService) @AT@ 4690 @LENGTH@ 68
------------------------UPD SimpleName@@Name:repoRequest @TO@ Name:BeanWrapper @AT@ 4690 @LENGTH@ 11
------------------------UPD SimpleName@@MethodName:buildEntitySelfLink:[entry.getValue(), conversionService] @TO@ MethodName:create:[entry.getValue(), conversionService] @AT@ 4702 @LENGTH@ 56
---------------INS VariableDeclarationStatement@@Link selfLink=entityLinks.linkForSingleResource(entity.getType(),wrapper.getProperty(entity.getIdProperty())).withSelfRel(); @TO@ EnhancedForStatement@@for (Map.Entry<Object,Object> entry : ((Map<Object,Object>)prop.propertyValue).entrySet()) {  PersistentEntityResource per=PersistentEntityResource.wrap(entity,entry.getValue(),repoRequest.getBaseUri());  Link selfLink=repoRequest.buildEntitySelfLink(entry.getValue(),conversionService);  per.add(selfLink);  resources.put(entry.getKey(),per);} @AT@ 4976 @LENGTH@ 217
------------------INS SimpleType@@Link @TO@ VariableDeclarationStatement@@Link selfLink=entityLinks.linkForSingleResource(entity.getType(),wrapper.getProperty(entity.getIdProperty())).withSelfRel(); @AT@ 4976 @LENGTH@ 4
------------------INS VariableDeclarationFragment@@selfLink=entityLinks.linkForSingleResource(entity.getType(),wrapper.getProperty(entity.getIdProperty())).withSelfRel() @TO@ VariableDeclarationStatement@@Link selfLink=entityLinks.linkForSingleResource(entity.getType(),wrapper.getProperty(entity.getIdProperty())).withSelfRel(); @AT@ 4981 @LENGTH@ 211
---------------------INS SimpleName@@selfLink @TO@ VariableDeclarationFragment@@selfLink=entityLinks.linkForSingleResource(entity.getType(),wrapper.getProperty(entity.getIdProperty())).withSelfRel() @AT@ 4981 @LENGTH@ 8
---------------------INS MethodInvocation@@entityLinks.linkForSingleResource(entity.getType(),wrapper.getProperty(entity.getIdProperty())).withSelfRel() @TO@ VariableDeclarationFragment@@selfLink=entityLinks.linkForSingleResource(entity.getType(),wrapper.getProperty(entity.getIdProperty())).withSelfRel() @AT@ 4992 @LENGTH@ 200
------------------------INS MethodInvocation@@MethodName:linkForSingleResource:[entity.getType(), wrapper.getProperty(entity.getIdProperty())] @TO@ MethodInvocation@@entityLinks.linkForSingleResource(entity.getType(),wrapper.getProperty(entity.getIdProperty())).withSelfRel() @AT@ 4992 @LENGTH@ 152
---------------------------INS MethodInvocation@@entity.getType() @TO@ MethodInvocation@@MethodName:linkForSingleResource:[entity.getType(), wrapper.getProperty(entity.getIdProperty())] @AT@ 5026 @LENGTH@ 16
------------------------------INS SimpleName@@Name:entity @TO@ MethodInvocation@@entity.getType() @AT@ 5026 @LENGTH@ 6
------------------------------INS SimpleName@@MethodName:getType:[] @TO@ MethodInvocation@@entity.getType() @AT@ 5033 @LENGTH@ 9
---------------------------INS MethodInvocation@@wrapper.getProperty(entity.getIdProperty()) @TO@ MethodInvocation@@MethodName:linkForSingleResource:[entity.getType(), wrapper.getProperty(entity.getIdProperty())] @AT@ 5100 @LENGTH@ 43
------------------------------INS SimpleName@@Name:wrapper @TO@ MethodInvocation@@wrapper.getProperty(entity.getIdProperty()) @AT@ 5100 @LENGTH@ 7
------------------------------INS SimpleName@@MethodName:getProperty:[entity.getIdProperty()] @TO@ MethodInvocation@@wrapper.getProperty(entity.getIdProperty()) @AT@ 5108 @LENGTH@ 35
---------------------------------INS MethodInvocation@@entity.getIdProperty() @TO@ SimpleName@@MethodName:getProperty:[entity.getIdProperty()] @AT@ 5120 @LENGTH@ 22
------------------------------------INS SimpleName@@Name:entity @TO@ MethodInvocation@@entity.getIdProperty() @AT@ 5120 @LENGTH@ 6
------------------------------------INS SimpleName@@MethodName:getIdProperty:[] @TO@ MethodInvocation@@entity.getIdProperty() @AT@ 5127 @LENGTH@ 15
------------------------INS SimpleName@@Name:entityLinks @TO@ MethodInvocation@@entityLinks.linkForSingleResource(entity.getType(),wrapper.getProperty(entity.getIdProperty())).withSelfRel() @AT@ 4992 @LENGTH@ 11
------------------------INS SimpleName@@MethodName:withSelfRel:[] @TO@ MethodInvocation@@entityLinks.linkForSingleResource(entity.getType(),wrapper.getProperty(entity.getIdProperty())).withSelfRel() @AT@ 5179 @LENGTH@ 13
---------UPD Block@@ElseBody:{  PersistentEntityResource per=PersistentEntityResource.wrap(repositories.getPersistentEntity(prop.propertyType),prop.propertyValue,repoRequest.getBaseUri());  Link selfLink=repoRequest.buildEntitySelfLink(prop.propertyValue,conversionService);  per.add(selfLink);  headers.set("Content-Location",selfLink.getHref());  return new Resource<Object>(per);} @TO@ ElseBody:{  PersistentEntityResource per=PersistentEntityResource.wrap(repositories.getPersistentEntity(prop.propertyType),prop.propertyValue,repoRequest.getBaseUri());  BeanWrapper wrapper=BeanWrapper.create(prop.propertyValue,conversionService);  Link selfLink=entityLinks.linkForSingleResource(prop.propertyType,wrapper.getProperty(prop.entity.getIdProperty())).withSelfRel();  per.add(selfLink);  headers.set("Content-Location",selfLink.getHref());  return new Resource<Object>(per);} @AT@ 4891 @LENGTH@ 521
------------UPD VariableDeclarationStatement@@Link selfLink=repoRequest.buildEntitySelfLink(prop.propertyValue,conversionService); @TO@ BeanWrapper wrapper=BeanWrapper.create(prop.propertyValue,conversionService); @AT@ 5196 @LENGTH@ 87
---------------UPD SimpleType@@Link @TO@ BeanWrapper @AT@ 5196 @LENGTH@ 4
---------------UPD VariableDeclarationFragment@@selfLink=repoRequest.buildEntitySelfLink(prop.propertyValue,conversionService) @TO@ wrapper=BeanWrapper.create(prop.propertyValue,conversionService) @AT@ 5201 @LENGTH@ 81
------------------UPD SimpleName@@selfLink @TO@ wrapper @AT@ 5201 @LENGTH@ 8
------------------UPD MethodInvocation@@repoRequest.buildEntitySelfLink(prop.propertyValue,conversionService) @TO@ BeanWrapper.create(prop.propertyValue,conversionService) @AT@ 5212 @LENGTH@ 70
---------------------UPD SimpleName@@Name:repoRequest @TO@ Name:BeanWrapper @AT@ 5212 @LENGTH@ 11
---------------------UPD SimpleName@@MethodName:buildEntitySelfLink:[prop.propertyValue, conversionService] @TO@ MethodName:create:[prop.propertyValue, conversionService] @AT@ 5224 @LENGTH@ 58
------------INS VariableDeclarationStatement@@Link selfLink=entityLinks.linkForSingleResource(prop.propertyType,wrapper.getProperty(prop.entity.getIdProperty())).withSelfRel(); @TO@ Block@@ElseBody:{  PersistentEntityResource per=PersistentEntityResource.wrap(repositories.getPersistentEntity(prop.propertyType),prop.propertyValue,repoRequest.getBaseUri());  Link selfLink=repoRequest.buildEntitySelfLink(prop.propertyValue,conversionService);  per.add(selfLink);  headers.set("Content-Location",selfLink.getHref());  return new Resource<Object>(per);} @AT@ 5716 @LENGTH@ 221
---------------INS SimpleType@@Link @TO@ VariableDeclarationStatement@@Link selfLink=entityLinks.linkForSingleResource(prop.propertyType,wrapper.getProperty(prop.entity.getIdProperty())).withSelfRel(); @AT@ 5716 @LENGTH@ 4
---------------INS VariableDeclarationFragment@@selfLink=entityLinks.linkForSingleResource(prop.propertyType,wrapper.getProperty(prop.entity.getIdProperty())).withSelfRel() @TO@ VariableDeclarationStatement@@Link selfLink=entityLinks.linkForSingleResource(prop.propertyType,wrapper.getProperty(prop.entity.getIdProperty())).withSelfRel(); @AT@ 5721 @LENGTH@ 215
------------------INS SimpleName@@selfLink @TO@ VariableDeclarationFragment@@selfLink=entityLinks.linkForSingleResource(prop.propertyType,wrapper.getProperty(prop.entity.getIdProperty())).withSelfRel() @AT@ 5721 @LENGTH@ 8
------------------INS MethodInvocation@@entityLinks.linkForSingleResource(prop.propertyType,wrapper.getProperty(prop.entity.getIdProperty())).withSelfRel() @TO@ VariableDeclarationFragment@@selfLink=entityLinks.linkForSingleResource(prop.propertyType,wrapper.getProperty(prop.entity.getIdProperty())).withSelfRel() @AT@ 5732 @LENGTH@ 204
---------------------INS MethodInvocation@@MethodName:linkForSingleResource:[prop.propertyType, wrapper.getProperty(prop.entity.getIdProperty())] @TO@ MethodInvocation@@entityLinks.linkForSingleResource(prop.propertyType,wrapper.getProperty(prop.entity.getIdProperty())).withSelfRel() @AT@ 5732 @LENGTH@ 157
------------------------INS QualifiedName@@prop.propertyType @TO@ MethodInvocation@@MethodName:linkForSingleResource:[prop.propertyType, wrapper.getProperty(prop.entity.getIdProperty())] @AT@ 5766 @LENGTH@ 17
---------------------------INS SimpleName@@prop @TO@ QualifiedName@@prop.propertyType @AT@ 5766 @LENGTH@ 4
---------------------------INS SimpleName@@propertyType @TO@ QualifiedName@@prop.propertyType @AT@ 5771 @LENGTH@ 12
------------------------INS MethodInvocation@@wrapper.getProperty(prop.entity.getIdProperty()) @TO@ MethodInvocation@@MethodName:linkForSingleResource:[prop.propertyType, wrapper.getProperty(prop.entity.getIdProperty())] @AT@ 5840 @LENGTH@ 48
---------------------------INS SimpleName@@Name:wrapper @TO@ MethodInvocation@@wrapper.getProperty(prop.entity.getIdProperty()) @AT@ 5840 @LENGTH@ 7
---------------------------INS SimpleName@@MethodName:getProperty:[prop.entity.getIdProperty()] @TO@ MethodInvocation@@wrapper.getProperty(prop.entity.getIdProperty()) @AT@ 5848 @LENGTH@ 40
------------------------------INS MethodInvocation@@prop.entity.getIdProperty() @TO@ SimpleName@@MethodName:getProperty:[prop.entity.getIdProperty()] @AT@ 5860 @LENGTH@ 27
---------------------------------INS QualifiedName@@Name:prop.entity @TO@ MethodInvocation@@prop.entity.getIdProperty() @AT@ 5860 @LENGTH@ 11
---------------------------------INS SimpleName@@MethodName:getIdProperty:[] @TO@ MethodInvocation@@prop.entity.getIdProperty() @AT@ 5872 @LENGTH@ 15
---------------------INS SimpleName@@Name:entityLinks @TO@ MethodInvocation@@entityLinks.linkForSingleResource(prop.propertyType,wrapper.getProperty(prop.entity.getIdProperty())).withSelfRel() @AT@ 5732 @LENGTH@ 11
---------------------INS SimpleName@@MethodName:withSelfRel:[] @TO@ MethodInvocation@@entityLinks.linkForSingleResource(prop.propertyType,wrapper.getProperty(prop.entity.getIdProperty())).withSelfRel() @AT@ 5923 @LENGTH@ 13


UPD VariableDeclarationStatement@@final Collection originalCollection=new ArrayList(); @TO@ final Collection<Object> originalCollection=new ArrayList<Object>(); @AT@ 3881 @LENGTH@ 54
---INS ParameterizedType@@Collection<Object> @TO@ VariableDeclarationStatement@@final Collection originalCollection=new ArrayList(); @AT@ 3887 @LENGTH@ 18
------INS SimpleType@@Collection @TO@ ParameterizedType@@Collection<Object> @AT@ 3887 @LENGTH@ 10
------INS SimpleType@@Object @TO@ ParameterizedType@@Collection<Object> @AT@ 3898 @LENGTH@ 6
---DEL SimpleType@@Collection @AT@ 3887 @LENGTH@ 10
---UPD VariableDeclarationFragment@@originalCollection=new ArrayList() @TO@ originalCollection=new ArrayList<Object>() @AT@ 3898 @LENGTH@ 36
------UPD ClassInstanceCreation@@ArrayList[] @TO@ ArrayList<Object>[] @AT@ 3919 @LENGTH@ 15
---------DEL SimpleType@@ArrayList @AT@ 3923 @LENGTH@ 9
---------INS ParameterizedType@@ArrayList<Object> @TO@ ClassInstanceCreation@@ArrayList[] @AT@ 3931 @LENGTH@ 17
------------INS SimpleType@@ArrayList @TO@ ParameterizedType@@ArrayList<Object> @AT@ 3931 @LENGTH@ 9
------------INS SimpleType@@Object @TO@ ParameterizedType@@ArrayList<Object> @AT@ 3941 @LENGTH@ 6


UPD IfStatement@@if (isNoop() && !isIdempotent()) {  log.info("Endpoint is configured with noop=true so forcing endpoint to be idempotent as well");  setIdempotent(true);} @TO@ if (isNoop() && !isIdempotentSet()) {  log.info("Endpoint is configured with noop=true so forcing endpoint to be idempotent as well");  setIdempotent(true);} @AT@ 3697 @LENGTH@ 185
---UPD InfixExpression@@isNoop() && !isIdempotent() @TO@ isNoop() && !isIdempotentSet() @AT@ 3701 @LENGTH@ 27
------UPD PrefixExpression@@!isIdempotent() @TO@ !isIdempotentSet() @AT@ 3713 @LENGTH@ 15
---------UPD MethodInvocation@@MethodName:isIdempotent:[] @TO@ MethodName:isIdempotentSet:[] @AT@ 3714 @LENGTH@ 14


UPD ExpressionStatement@@MethodInvocation:assertEquals(false,PredicateUtils.identityPredicate(Integer.valueOf(6)).evaluate(cInteger)) @TO@ MethodInvocation:assertEquals(false,PredicateUtils.identityPredicate(new Integer(6)).evaluate(cInteger)) @AT@ 4443 @LENGTH@ 93
---UPD MethodInvocation@@assertEquals(false,PredicateUtils.identityPredicate(Integer.valueOf(6)).evaluate(cInteger)) @TO@ assertEquals(false,PredicateUtils.identityPredicate(new Integer(6)).evaluate(cInteger)) @AT@ 4443 @LENGTH@ 92
------UPD SimpleName@@MethodName:assertEquals:[false, PredicateUtils.identityPredicate(Integer.valueOf(6)).evaluate(cInteger)] @TO@ MethodName:assertEquals:[false, PredicateUtils.identityPredicate(new Integer(6)).evaluate(cInteger)] @AT@ 4443 @LENGTH@ 92
---------UPD MethodInvocation@@PredicateUtils.identityPredicate(Integer.valueOf(6)).evaluate(cInteger) @TO@ PredicateUtils.identityPredicate(new Integer(6)).evaluate(cInteger) @AT@ 4463 @LENGTH@ 71
------------UPD MethodInvocation@@MethodName:identityPredicate:[Integer.valueOf(6)] @TO@ MethodName:identityPredicate:[new Integer(6)] @AT@ 4463 @LENGTH@ 52
---------------DEL MethodInvocation@@Integer.valueOf(6) @AT@ 4496 @LENGTH@ 18
------------------DEL SimpleName@@Name:Integer @AT@ 4496 @LENGTH@ 7
------------------DEL SimpleName@@MethodName:valueOf:[6] @AT@ 4504 @LENGTH@ 10
---------------------DEL NumberLiteral@@6 @AT@ 4512 @LENGTH@ 1
---------------INS ClassInstanceCreation@@Integer[6] @TO@ MethodInvocation@@MethodName:identityPredicate:[Integer.valueOf(6)] @AT@ 4496 @LENGTH@ 14
------------------INS New@@new @TO@ ClassInstanceCreation@@Integer[6] @AT@ 4496 @LENGTH@ 3
------------------INS SimpleType@@Integer @TO@ ClassInstanceCreation@@Integer[6] @AT@ 4500 @LENGTH@ 7
------------------INS NumberLiteral@@6 @TO@ ClassInstanceCreation@@Integer[6] @AT@ 4508 @LENGTH@ 1


INS MethodDeclaration@@public, void, MethodName:testCurrentUriWithLegalSpaces, Exception,  @TO@ TypeDeclaration@@[public]TestOAuth2ClientContextFilter,  @AT@ 595 @LENGTH@ 330
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testCurrentUriWithLegalSpaces, Exception,  @AT@ 595 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testCurrentUriWithLegalSpaces, Exception,  @AT@ 602 @LENGTH@ 4
---INS SimpleName@@MethodName:testCurrentUriWithLegalSpaces @TO@ MethodDeclaration@@public, void, MethodName:testCurrentUriWithLegalSpaces, Exception,  @AT@ 607 @LENGTH@ 29
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:testCurrentUriWithLegalSpaces, Exception,  @AT@ 646 @LENGTH@ 9
---INS VariableDeclarationStatement@@OAuth2ClientContextFilter filter=new OAuth2ClientContextFilter(); @TO@ MethodDeclaration@@public, void, MethodName:testCurrentUriWithLegalSpaces, Exception,  @AT@ 660 @LENGTH@ 67
------INS SimpleType@@OAuth2ClientContextFilter @TO@ VariableDeclarationStatement@@OAuth2ClientContextFilter filter=new OAuth2ClientContextFilter(); @AT@ 660 @LENGTH@ 25
------INS VariableDeclarationFragment@@filter=new OAuth2ClientContextFilter() @TO@ VariableDeclarationStatement@@OAuth2ClientContextFilter filter=new OAuth2ClientContextFilter(); @AT@ 686 @LENGTH@ 40
---------INS SimpleName@@filter @TO@ VariableDeclarationFragment@@filter=new OAuth2ClientContextFilter() @AT@ 686 @LENGTH@ 6
---------INS ClassInstanceCreation@@OAuth2ClientContextFilter[] @TO@ VariableDeclarationFragment@@filter=new OAuth2ClientContextFilter() @AT@ 695 @LENGTH@ 31
------------INS New@@new @TO@ ClassInstanceCreation@@OAuth2ClientContextFilter[] @AT@ 695 @LENGTH@ 3
------------INS SimpleType@@OAuth2ClientContextFilter @TO@ ClassInstanceCreation@@OAuth2ClientContextFilter[] @AT@ 699 @LENGTH@ 25
---INS VariableDeclarationStatement@@MockHttpServletRequest request=new MockHttpServletRequest(); @TO@ MethodDeclaration@@public, void, MethodName:testCurrentUriWithLegalSpaces, Exception,  @AT@ 730 @LENGTH@ 62
------INS SimpleType@@MockHttpServletRequest @TO@ VariableDeclarationStatement@@MockHttpServletRequest request=new MockHttpServletRequest(); @AT@ 730 @LENGTH@ 22
------INS VariableDeclarationFragment@@request=new MockHttpServletRequest() @TO@ VariableDeclarationStatement@@MockHttpServletRequest request=new MockHttpServletRequest(); @AT@ 753 @LENGTH@ 38
---------INS SimpleName@@request @TO@ VariableDeclarationFragment@@request=new MockHttpServletRequest() @AT@ 753 @LENGTH@ 7
---------INS ClassInstanceCreation@@MockHttpServletRequest[] @TO@ VariableDeclarationFragment@@request=new MockHttpServletRequest() @AT@ 763 @LENGTH@ 28
------------INS New@@new @TO@ ClassInstanceCreation@@MockHttpServletRequest[] @AT@ 763 @LENGTH@ 3
------------INS SimpleType@@MockHttpServletRequest @TO@ ClassInstanceCreation@@MockHttpServletRequest[] @AT@ 767 @LENGTH@ 22
---INS ExpressionStatement@@MethodInvocation:request.setQueryString("foo=bar%20spam") @TO@ MethodDeclaration@@public, void, MethodName:testCurrentUriWithLegalSpaces, Exception,  @AT@ 795 @LENGTH@ 41
------INS MethodInvocation@@request.setQueryString("foo=bar%20spam") @TO@ ExpressionStatement@@MethodInvocation:request.setQueryString("foo=bar%20spam") @AT@ 795 @LENGTH@ 40
---------INS SimpleName@@Name:request @TO@ MethodInvocation@@request.setQueryString("foo=bar%20spam") @AT@ 795 @LENGTH@ 7
---------INS SimpleName@@MethodName:setQueryString:["foo=bar%20spam"] @TO@ MethodInvocation@@request.setQueryString("foo=bar%20spam") @AT@ 803 @LENGTH@ 32
------------INS StringLiteral@@"foo=bar%20spam" @TO@ SimpleName@@MethodName:setQueryString:["foo=bar%20spam"] @AT@ 818 @LENGTH@ 16
---INS ExpressionStatement@@MethodInvocation:assertEquals("http://localhost?foo=bar+spam",filter.calculateCurrentUri(request)) @TO@ MethodDeclaration@@public, void, MethodName:testCurrentUriWithLegalSpaces, Exception,  @AT@ 839 @LENGTH@ 83
------INS MethodInvocation@@assertEquals("http://localhost?foo=bar+spam",filter.calculateCurrentUri(request)) @TO@ ExpressionStatement@@MethodInvocation:assertEquals("http://localhost?foo=bar+spam",filter.calculateCurrentUri(request)) @AT@ 839 @LENGTH@ 82
---------INS SimpleName@@MethodName:assertEquals:["http://localhost?foo=bar+spam", filter.calculateCurrentUri(request)] @TO@ MethodInvocation@@assertEquals("http://localhost?foo=bar+spam",filter.calculateCurrentUri(request)) @AT@ 839 @LENGTH@ 82
------------INS StringLiteral@@"http://localhost?foo=bar+spam" @TO@ SimpleName@@MethodName:assertEquals:["http://localhost?foo=bar+spam", filter.calculateCurrentUri(request)] @AT@ 852 @LENGTH@ 31
------------INS MethodInvocation@@filter.calculateCurrentUri(request) @TO@ SimpleName@@MethodName:assertEquals:["http://localhost?foo=bar+spam", filter.calculateCurrentUri(request)] @AT@ 885 @LENGTH@ 35
---------------INS SimpleName@@Name:filter @TO@ MethodInvocation@@filter.calculateCurrentUri(request) @AT@ 885 @LENGTH@ 6
---------------INS SimpleName@@MethodName:calculateCurrentUri:[request] @TO@ MethodInvocation@@filter.calculateCurrentUri(request) @AT@ 892 @LENGTH@ 28
------------------INS SimpleName@@request @TO@ SimpleName@@MethodName:calculateCurrentUri:[request] @AT@ 912 @LENGTH@ 7


UPD ReturnStatement@@MethodInvocation:output.toString() @TO@ MethodInvocation:output.toString(Charsets.UTF_8) @AT@ 2283 @LENGTH@ 25
---UPD MethodInvocation@@output.toString() @TO@ output.toString(Charsets.UTF_8) @AT@ 2290 @LENGTH@ 17
------UPD SimpleName@@MethodName:toString:[] @TO@ MethodName:toString:[Charsets.UTF_8] @AT@ 2297 @LENGTH@ 10
---------INS QualifiedName@@Charsets.UTF_8 @TO@ SimpleName@@MethodName:toString:[] @AT@ 2306 @LENGTH@ 14
------------INS SimpleName@@Charsets @TO@ QualifiedName@@Charsets.UTF_8 @AT@ 2306 @LENGTH@ 8
------------INS SimpleName@@UTF_8 @TO@ QualifiedName@@Charsets.UTF_8 @AT@ 2315 @LENGTH@ 5


UPD VariableDeclarationStatement@@final Comparator comp=new ReverseComparator(new ComparableComparator()); @TO@ final Comparator<?> comp=new ReverseComparator<String>(new ComparableComparator<String>()); @AT@ 3038 @LENGTH@ 74
---INS ParameterizedType@@Comparator<?> @TO@ VariableDeclarationStatement@@final Comparator comp=new ReverseComparator(new ComparableComparator()); @AT@ 3009 @LENGTH@ 13
------INS SimpleType@@Comparator @TO@ ParameterizedType@@Comparator<?> @AT@ 3009 @LENGTH@ 10
------INS WildcardType@@? @TO@ ParameterizedType@@Comparator<?> @AT@ 3020 @LENGTH@ 1
---DEL SimpleType@@Comparator @AT@ 3044 @LENGTH@ 10
---UPD VariableDeclarationFragment@@comp=new ReverseComparator(new ComparableComparator()) @TO@ comp=new ReverseComparator<String>(new ComparableComparator<String>()) @AT@ 3055 @LENGTH@ 56
------UPD ClassInstanceCreation@@ReverseComparator[new ComparableComparator()] @TO@ ReverseComparator<String>[new ComparableComparator<String>()] @AT@ 3062 @LENGTH@ 49
---------INS ParameterizedType@@ReverseComparator<String> @TO@ ClassInstanceCreation@@ReverseComparator[new ComparableComparator()] @AT@ 3034 @LENGTH@ 25
------------INS SimpleType@@ReverseComparator @TO@ ParameterizedType@@ReverseComparator<String> @AT@ 3034 @LENGTH@ 17
------------INS SimpleType@@String @TO@ ParameterizedType@@ReverseComparator<String> @AT@ 3052 @LENGTH@ 6
---------DEL SimpleType@@ReverseComparator @AT@ 3066 @LENGTH@ 17
---------UPD ClassInstanceCreation@@ComparableComparator[] @TO@ ComparableComparator<String>[] @AT@ 3084 @LENGTH@ 26
------------INS ParameterizedType@@ComparableComparator<String> @TO@ ClassInstanceCreation@@ComparableComparator[] @AT@ 3064 @LENGTH@ 28
---------------INS SimpleType@@ComparableComparator @TO@ ParameterizedType@@ComparableComparator<String> @AT@ 3064 @LENGTH@ 20
---------------INS SimpleType@@String @TO@ ParameterizedType@@ComparableComparator<String> @AT@ 3085 @LENGTH@ 6
------------DEL SimpleType@@ComparableComparator @AT@ 3088 @LENGTH@ 20


UPD ExpressionStatement@@MethodInvocation:client.persist(key) @TO@ MethodInvocation:transaction.persist(key) @AT@ 15455 @LENGTH@ 20
---UPD MethodInvocation@@client.persist(key) @TO@ transaction.persist(key) @AT@ 15455 @LENGTH@ 19
------UPD SimpleName@@Name:client @TO@ Name:transaction @AT@ 15455 @LENGTH@ 6


UPD ExpressionStatement@@Assignment:javaType=new JavaType("java.sql.Timestamp") @TO@ Assignment:javaType=CALENDAR @AT@ 6153 @LENGTH@ 46
---UPD Assignment@@javaType=new JavaType("java.sql.Timestamp") @TO@ javaType=CALENDAR @AT@ 6153 @LENGTH@ 45
------DEL ClassInstanceCreation@@JavaType["java.sql.Timestamp"] @AT@ 6164 @LENGTH@ 34
---------DEL New@@new @AT@ 6164 @LENGTH@ 3
---------DEL SimpleType@@JavaType @AT@ 6168 @LENGTH@ 8
---------DEL StringLiteral@@"java.sql.Timestamp" @AT@ 6177 @LENGTH@ 20
------INS SimpleName@@CALENDAR @TO@ Assignment@@javaType=new JavaType("java.sql.Timestamp") @AT@ 6230 @LENGTH@ 8


UPD MethodDeclaration@@public, void, MethodName:marshal, Exchange exchange, Object inputObject, OutputStream stream, IOException,  @TO@ public, void, MethodName:marshal, Exchange exchange, Object inputObject, OutputStream stream, IOException, SAXException,  @AT@ 4652 @LENGTH@ 772
---INS SimpleType@@SAXException @TO@ MethodDeclaration@@public, void, MethodName:marshal, Exchange exchange, Object inputObject, OutputStream stream, IOException,  @AT@ 4826 @LENGTH@ 12


INS MethodDeclaration@@public, void, MethodName:testSortStore,  @TO@ TypeDeclaration@@[public, abstract]AbstractConnectionIntegrationTests,  @AT@ 12998 @LENGTH@ 409
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testSortStore,  @AT@ 12998 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testSortStore,  @AT@ 13005 @LENGTH@ 4
---INS SimpleName@@MethodName:testSortStore @TO@ MethodDeclaration@@public, void, MethodName:testSortStore,  @AT@ 13010 @LENGTH@ 13
---INS ExpressionStatement@@MethodInvocation:connection.del("sortlist") @TO@ MethodDeclaration@@public, void, MethodName:testSortStore,  @AT@ 13030 @LENGTH@ 27
------INS MethodInvocation@@connection.del("sortlist") @TO@ ExpressionStatement@@MethodInvocation:connection.del("sortlist") @AT@ 13030 @LENGTH@ 26
---------INS SimpleName@@Name:connection @TO@ MethodInvocation@@connection.del("sortlist") @AT@ 13030 @LENGTH@ 10
---------INS SimpleName@@MethodName:del:["sortlist"] @TO@ MethodInvocation@@connection.del("sortlist") @AT@ 13041 @LENGTH@ 15
------------INS StringLiteral@@"sortlist" @TO@ SimpleName@@MethodName:del:["sortlist"] @AT@ 13045 @LENGTH@ 10
---INS ExpressionStatement@@MethodInvocation:connection.rPush("sortlist","foo") @TO@ MethodDeclaration@@public, void, MethodName:testSortStore,  @AT@ 13060 @LENGTH@ 36
------INS MethodInvocation@@connection.rPush("sortlist","foo") @TO@ ExpressionStatement@@MethodInvocation:connection.rPush("sortlist","foo") @AT@ 13060 @LENGTH@ 35
---------INS SimpleName@@Name:connection @TO@ MethodInvocation@@connection.rPush("sortlist","foo") @AT@ 13060 @LENGTH@ 10
---------INS SimpleName@@MethodName:rPush:["sortlist", "foo"] @TO@ MethodInvocation@@connection.rPush("sortlist","foo") @AT@ 13071 @LENGTH@ 24
------------INS StringLiteral@@"sortlist" @TO@ SimpleName@@MethodName:rPush:["sortlist", "foo"] @AT@ 13077 @LENGTH@ 10
------------INS StringLiteral@@"foo" @TO@ SimpleName@@MethodName:rPush:["sortlist", "foo"] @AT@ 13089 @LENGTH@ 5
---INS ExpressionStatement@@MethodInvocation:connection.rPush("sortlist","bar") @TO@ MethodDeclaration@@public, void, MethodName:testSortStore,  @AT@ 13099 @LENGTH@ 36
------INS MethodInvocation@@connection.rPush("sortlist","bar") @TO@ ExpressionStatement@@MethodInvocation:connection.rPush("sortlist","bar") @AT@ 13099 @LENGTH@ 35
---------INS SimpleName@@Name:connection @TO@ MethodInvocation@@connection.rPush("sortlist","bar") @AT@ 13099 @LENGTH@ 10
---------INS SimpleName@@MethodName:rPush:["sortlist", "bar"] @TO@ MethodInvocation@@connection.rPush("sortlist","bar") @AT@ 13110 @LENGTH@ 24
------------INS StringLiteral@@"sortlist" @TO@ SimpleName@@MethodName:rPush:["sortlist", "bar"] @AT@ 13116 @LENGTH@ 10
------------INS StringLiteral@@"bar" @TO@ SimpleName@@MethodName:rPush:["sortlist", "bar"] @AT@ 13128 @LENGTH@ 5
---INS ExpressionStatement@@MethodInvocation:connection.rPush("sortlist","baz") @TO@ MethodDeclaration@@public, void, MethodName:testSortStore,  @AT@ 13138 @LENGTH@ 36
------INS MethodInvocation@@connection.rPush("sortlist","baz") @TO@ ExpressionStatement@@MethodInvocation:connection.rPush("sortlist","baz") @AT@ 13138 @LENGTH@ 35
---------INS SimpleName@@Name:connection @TO@ MethodInvocation@@connection.rPush("sortlist","baz") @AT@ 13138 @LENGTH@ 10
---------INS SimpleName@@MethodName:rPush:["sortlist", "baz"] @TO@ MethodInvocation@@connection.rPush("sortlist","baz") @AT@ 13149 @LENGTH@ 24
------------INS StringLiteral@@"sortlist" @TO@ SimpleName@@MethodName:rPush:["sortlist", "baz"] @AT@ 13155 @LENGTH@ 10
------------INS StringLiteral@@"baz" @TO@ SimpleName@@MethodName:rPush:["sortlist", "baz"] @AT@ 13167 @LENGTH@ 5
---INS ExpressionStatement@@MethodInvocation:assertEquals(Long.valueOf(3),connection.sort("sortlist",new DefaultSortParameters(null,Order.ASC,true),"newlist")) @TO@ MethodDeclaration@@public, void, MethodName:testSortStore,  @AT@ 13177 @LENGTH@ 124
------INS MethodInvocation@@assertEquals(Long.valueOf(3),connection.sort("sortlist",new DefaultSortParameters(null,Order.ASC,true),"newlist")) @TO@ ExpressionStatement@@MethodInvocation:assertEquals(Long.valueOf(3),connection.sort("sortlist",new DefaultSortParameters(null,Order.ASC,true),"newlist")) @AT@ 13177 @LENGTH@ 123
---------INS SimpleName@@MethodName:assertEquals:[Long.valueOf(3), connection.sort("sortlist",new DefaultSortParameters(null,Order.ASC,true),"newlist")] @TO@ MethodInvocation@@assertEquals(Long.valueOf(3),connection.sort("sortlist",new DefaultSortParameters(null,Order.ASC,true),"newlist")) @AT@ 13177 @LENGTH@ 123
------------INS MethodInvocation@@Long.valueOf(3) @TO@ SimpleName@@MethodName:assertEquals:[Long.valueOf(3), connection.sort("sortlist",new DefaultSortParameters(null,Order.ASC,true),"newlist")] @AT@ 13190 @LENGTH@ 15
---------------INS SimpleName@@Name:Long @TO@ MethodInvocation@@Long.valueOf(3) @AT@ 13190 @LENGTH@ 4
---------------INS SimpleName@@MethodName:valueOf:[3] @TO@ MethodInvocation@@Long.valueOf(3) @AT@ 13195 @LENGTH@ 10
------------------INS NumberLiteral@@3 @TO@ SimpleName@@MethodName:valueOf:[3] @AT@ 13203 @LENGTH@ 1
------------INS MethodInvocation@@connection.sort("sortlist",new DefaultSortParameters(null,Order.ASC,true),"newlist") @TO@ SimpleName@@MethodName:assertEquals:[Long.valueOf(3), connection.sort("sortlist",new DefaultSortParameters(null,Order.ASC,true),"newlist")] @AT@ 13211 @LENGTH@ 88
---------------INS SimpleName@@Name:connection @TO@ MethodInvocation@@connection.sort("sortlist",new DefaultSortParameters(null,Order.ASC,true),"newlist") @AT@ 13211 @LENGTH@ 10
---------------INS SimpleName@@MethodName:sort:["sortlist", new DefaultSortParameters(null,Order.ASC,true), "newlist"] @TO@ MethodInvocation@@connection.sort("sortlist",new DefaultSortParameters(null,Order.ASC,true),"newlist") @AT@ 13222 @LENGTH@ 77
------------------INS StringLiteral@@"sortlist" @TO@ SimpleName@@MethodName:sort:["sortlist", new DefaultSortParameters(null,Order.ASC,true), "newlist"] @AT@ 13227 @LENGTH@ 10
------------------INS ClassInstanceCreation@@DefaultSortParameters[null, Order.ASC, true] @TO@ SimpleName@@MethodName:sort:["sortlist", new DefaultSortParameters(null,Order.ASC,true), "newlist"] @AT@ 13239 @LENGTH@ 48
---------------------INS New@@new @TO@ ClassInstanceCreation@@DefaultSortParameters[null, Order.ASC, true] @AT@ 13239 @LENGTH@ 3
---------------------INS SimpleType@@DefaultSortParameters @TO@ ClassInstanceCreation@@DefaultSortParameters[null, Order.ASC, true] @AT@ 13243 @LENGTH@ 21
---------------------INS NullLiteral@@null @TO@ ClassInstanceCreation@@DefaultSortParameters[null, Order.ASC, true] @AT@ 13265 @LENGTH@ 4
---------------------INS QualifiedName@@Order.ASC @TO@ ClassInstanceCreation@@DefaultSortParameters[null, Order.ASC, true] @AT@ 13271 @LENGTH@ 9
------------------------INS SimpleName@@Order @TO@ QualifiedName@@Order.ASC @AT@ 13271 @LENGTH@ 5
------------------------INS SimpleName@@ASC @TO@ QualifiedName@@Order.ASC @AT@ 13277 @LENGTH@ 3
---------------------INS BooleanLiteral@@true @TO@ ClassInstanceCreation@@DefaultSortParameters[null, Order.ASC, true] @AT@ 13282 @LENGTH@ 4
------------------INS StringLiteral@@"newlist" @TO@ SimpleName@@MethodName:sort:["sortlist", new DefaultSortParameters(null,Order.ASC,true), "newlist"] @AT@ 13289 @LENGTH@ 9
---INS ExpressionStatement@@MethodInvocation:assertEquals(Arrays.asList(new String[]{"bar","baz","foo"}),connection.lRange("newlist",0,9)) @TO@ MethodDeclaration@@public, void, MethodName:testSortStore,  @AT@ 13304 @LENGTH@ 100
------INS MethodInvocation@@assertEquals(Arrays.asList(new String[]{"bar","baz","foo"}),connection.lRange("newlist",0,9)) @TO@ ExpressionStatement@@MethodInvocation:assertEquals(Arrays.asList(new String[]{"bar","baz","foo"}),connection.lRange("newlist",0,9)) @AT@ 13304 @LENGTH@ 99
---------INS SimpleName@@MethodName:assertEquals:[Arrays.asList(new String[]{"bar","baz","foo"}), connection.lRange("newlist",0,9)] @TO@ MethodInvocation@@assertEquals(Arrays.asList(new String[]{"bar","baz","foo"}),connection.lRange("newlist",0,9)) @AT@ 13304 @LENGTH@ 99
------------INS MethodInvocation@@Arrays.asList(new String[]{"bar","baz","foo"}) @TO@ SimpleName@@MethodName:assertEquals:[Arrays.asList(new String[]{"bar","baz","foo"}), connection.lRange("newlist",0,9)] @AT@ 13317 @LENGTH@ 49
---------------INS SimpleName@@Name:Arrays @TO@ MethodInvocation@@Arrays.asList(new String[]{"bar","baz","foo"}) @AT@ 13317 @LENGTH@ 6
---------------INS SimpleName@@MethodName:asList:[new String[]{"bar","baz","foo"}] @TO@ MethodInvocation@@Arrays.asList(new String[]{"bar","baz","foo"}) @AT@ 13324 @LENGTH@ 42
------------------INS ArrayCreation@@new String[]{"bar","baz","foo"} @TO@ SimpleName@@MethodName:asList:[new String[]{"bar","baz","foo"}] @AT@ 13331 @LENGTH@ 34
---------------------INS ArrayType@@String[] @TO@ ArrayCreation@@new String[]{"bar","baz","foo"} @AT@ 13335 @LENGTH@ 8
------------------------INS SimpleType@@String @TO@ ArrayType@@String[] @AT@ 13335 @LENGTH@ 6
---------------------INS ArrayInitializer@@{"bar","baz","foo"} @TO@ ArrayCreation@@new String[]{"bar","baz","foo"} @AT@ 13344 @LENGTH@ 21
------------------------INS StringLiteral@@"bar" @TO@ ArrayInitializer@@{"bar","baz","foo"} @AT@ 13345 @LENGTH@ 5
------------------------INS StringLiteral@@"baz" @TO@ ArrayInitializer@@{"bar","baz","foo"} @AT@ 13352 @LENGTH@ 5
------------------------INS StringLiteral@@"foo" @TO@ ArrayInitializer@@{"bar","baz","foo"} @AT@ 13359 @LENGTH@ 5
------------INS MethodInvocation@@connection.lRange("newlist",0,9) @TO@ SimpleName@@MethodName:assertEquals:[Arrays.asList(new String[]{"bar","baz","foo"}), connection.lRange("newlist",0,9)] @AT@ 13368 @LENGTH@ 34
---------------INS SimpleName@@Name:connection @TO@ MethodInvocation@@connection.lRange("newlist",0,9) @AT@ 13368 @LENGTH@ 10
---------------INS SimpleName@@MethodName:lRange:["newlist", 0, 9] @TO@ MethodInvocation@@connection.lRange("newlist",0,9) @AT@ 13379 @LENGTH@ 23
------------------INS StringLiteral@@"newlist" @TO@ SimpleName@@MethodName:lRange:["newlist", 0, 9] @AT@ 13386 @LENGTH@ 9
------------------INS NumberLiteral@@0 @TO@ SimpleName@@MethodName:lRange:["newlist", 0, 9] @AT@ 13397 @LENGTH@ 1
------------------INS NumberLiteral@@9 @TO@ SimpleName@@MethodName:lRange:["newlist", 0, 9] @AT@ 13400 @LENGTH@ 1


UPD MethodDeclaration@@static, void, MethodName:registerTransformers_1_1_0, TransformersSubRegistration parent,  @TO@ static, void, MethodName:registerTransformers_1_1_0, ResourceTransformationDescriptionBuilder parent,  @AT@ 9101 @LENGTH@ 572
---INS ExpressionStatement@@MethodInvocation:parent.addChildResource(INSTANCE.getPathElement()).getAttributeBuilder().addRejectCheck(RejectAttributeChecker.SIMPLE_EXPRESSIONS,CHANNEL_CREATION_OPTION_VALUE) @TO@ MethodDeclaration@@static, void, MethodName:registerTransformers_1_1_0, TransformersSubRegistration parent,  @AT@ 8976 @LENGTH@ 192
------INS MethodInvocation@@parent.addChildResource(INSTANCE.getPathElement()).getAttributeBuilder().addRejectCheck(RejectAttributeChecker.SIMPLE_EXPRESSIONS,CHANNEL_CREATION_OPTION_VALUE) @TO@ ExpressionStatement@@MethodInvocation:parent.addChildResource(INSTANCE.getPathElement()).getAttributeBuilder().addRejectCheck(RejectAttributeChecker.SIMPLE_EXPRESSIONS,CHANNEL_CREATION_OPTION_VALUE) @AT@ 8976 @LENGTH@ 191
---------INS MethodInvocation@@MethodName:getAttributeBuilder:[] @TO@ MethodInvocation@@parent.addChildResource(INSTANCE.getPathElement()).getAttributeBuilder().addRejectCheck(RejectAttributeChecker.SIMPLE_EXPRESSIONS,CHANNEL_CREATION_OPTION_VALUE) @AT@ 8976 @LENGTH@ 85
---------INS MethodInvocation@@MethodName:addChildResource:[INSTANCE.getPathElement()] @TO@ MethodInvocation@@parent.addChildResource(INSTANCE.getPathElement()).getAttributeBuilder().addRejectCheck(RejectAttributeChecker.SIMPLE_EXPRESSIONS,CHANNEL_CREATION_OPTION_VALUE) @AT@ 8976 @LENGTH@ 50
------------INS MethodInvocation@@INSTANCE.getPathElement() @TO@ MethodInvocation@@MethodName:addChildResource:[INSTANCE.getPathElement()] @AT@ 9000 @LENGTH@ 25
---------------MOV SimpleName@@Name:INSTANCE @TO@ MethodInvocation@@INSTANCE.getPathElement() @AT@ 9392 @LENGTH@ 8
---------------MOV SimpleName@@MethodName:getPathElement:[] @TO@ MethodInvocation@@INSTANCE.getPathElement() @AT@ 9401 @LENGTH@ 16
---------INS SimpleName@@Name:parent @TO@ MethodInvocation@@parent.addChildResource(INSTANCE.getPathElement()).getAttributeBuilder().addRejectCheck(RejectAttributeChecker.SIMPLE_EXPRESSIONS,CHANNEL_CREATION_OPTION_VALUE) @AT@ 8976 @LENGTH@ 6
---------MOV SimpleName@@MethodName:registerOperationTransformer:[WRITE_ATTRIBUTE_OPERATION, transformer.getWriteAttributeTransformer()] @TO@ MethodInvocation@@parent.addChildResource(INSTANCE.getPathElement()).getAttributeBuilder().addRejectCheck(RejectAttributeChecker.SIMPLE_EXPRESSIONS,CHANNEL_CREATION_OPTION_VALUE) @AT@ 9567 @LENGTH@ 99
------------INS QualifiedName@@RejectAttributeChecker.SIMPLE_EXPRESSIONS @TO@ SimpleName@@MethodName:registerOperationTransformer:[WRITE_ATTRIBUTE_OPERATION, transformer.getWriteAttributeTransformer()] @AT@ 9094 @LENGTH@ 41
---------------INS SimpleName@@RejectAttributeChecker @TO@ QualifiedName@@RejectAttributeChecker.SIMPLE_EXPRESSIONS @AT@ 9094 @LENGTH@ 22
---------------INS SimpleName@@SIMPLE_EXPRESSIONS @TO@ QualifiedName@@RejectAttributeChecker.SIMPLE_EXPRESSIONS @AT@ 9117 @LENGTH@ 18
------------INS QualifiedName@@RejectAttributeChecker.SIMPLE_EXPRESSIONS @TO@ SimpleName@@MethodName:registerOperationTransformer:[WRITE_ATTRIBUTE_OPERATION, transformer.getWriteAttributeTransformer()] @AT@ 9094 @LENGTH@ 41
---------------INS SimpleName@@RejectAttributeChecker @TO@ QualifiedName@@RejectAttributeChecker.SIMPLE_EXPRESSIONS @AT@ 9094 @LENGTH@ 22
---------------INS SimpleName@@SIMPLE_EXPRESSIONS @TO@ QualifiedName@@RejectAttributeChecker.SIMPLE_EXPRESSIONS @AT@ 9117 @LENGTH@ 18
------------INS SimpleName@@CHANNEL_CREATION_OPTION_VALUE @TO@ SimpleName@@MethodName:registerOperationTransformer:[WRITE_ATTRIBUTE_OPERATION, transformer.getWriteAttributeTransformer()] @AT@ 9137 @LENGTH@ 29
------------INS SimpleName@@CHANNEL_CREATION_OPTION_VALUE @TO@ SimpleName@@MethodName:registerOperationTransformer:[WRITE_ATTRIBUTE_OPERATION, transformer.getWriteAttributeTransformer()] @AT@ 9137 @LENGTH@ 29
---UPD SingleVariableDeclaration@@TransformersSubRegistration parent @TO@ ResourceTransformationDescriptionBuilder parent @AT@ 9140 @LENGTH@ 34
------UPD SimpleType@@TransformersSubRegistration @TO@ ResourceTransformationDescriptionBuilder @AT@ 9140 @LENGTH@ 27
---DEL VariableDeclarationStatement@@RejectExpressionValuesTransformer transformer=new RejectExpressionValuesTransformer(CHANNEL_CREATION_OPTION_VALUE); @AT@ 9187 @LENGTH@ 117
------DEL SimpleType@@RejectExpressionValuesTransformer @AT@ 9187 @LENGTH@ 33
------DEL VariableDeclarationFragment@@transformer=new RejectExpressionValuesTransformer(CHANNEL_CREATION_OPTION_VALUE) @AT@ 9221 @LENGTH@ 82
---------DEL SimpleName@@transformer @AT@ 9221 @LENGTH@ 11
---------DEL ClassInstanceCreation@@RejectExpressionValuesTransformer[CHANNEL_CREATION_OPTION_VALUE] @AT@ 9235 @LENGTH@ 68
------------DEL New@@new @AT@ 9235 @LENGTH@ 3
------------DEL SimpleType@@RejectExpressionValuesTransformer @AT@ 9239 @LENGTH@ 33
------------DEL SimpleName@@CHANNEL_CREATION_OPTION_VALUE @AT@ 9273 @LENGTH@ 29
---DEL VariableDeclarationStatement@@final TransformersSubRegistration transformers110=parent.registerSubResource(INSTANCE.getPathElement(),(ResourceTransformer)transformer); @AT@ 9313 @LENGTH@ 157
------DEL Modifier@@final @AT@ 9313 @LENGTH@ 5
------DEL SimpleType@@TransformersSubRegistration @AT@ 9319 @LENGTH@ 27
------DEL VariableDeclarationFragment@@transformers110=parent.registerSubResource(INSTANCE.getPathElement(),(ResourceTransformer)transformer) @AT@ 9347 @LENGTH@ 122
---------DEL SimpleName@@transformers110 @AT@ 9347 @LENGTH@ 15
---------DEL MethodInvocation@@parent.registerSubResource(INSTANCE.getPathElement(),(ResourceTransformer)transformer) @AT@ 9365 @LENGTH@ 104
------------DEL SimpleName@@Name:parent @AT@ 9365 @LENGTH@ 6
------------DEL SimpleName@@MethodName:registerSubResource:[INSTANCE.getPathElement(), (ResourceTransformer)transformer] @AT@ 9372 @LENGTH@ 97
---------------DEL MethodInvocation@@INSTANCE.getPathElement() @AT@ 9392 @LENGTH@ 25
---------------DEL CastExpression@@(ResourceTransformer)transformer @AT@ 9435 @LENGTH@ 33
------------------DEL SimpleType@@ResourceTransformer @AT@ 9436 @LENGTH@ 19
------------------DEL SimpleName@@transformer @AT@ 9457 @LENGTH@ 11
---DEL ExpressionStatement@@MethodInvocation:transformers110.registerOperationTransformer(ADD,transformer) @AT@ 9479 @LENGTH@ 63
------DEL MethodInvocation@@transformers110.registerOperationTransformer(ADD,transformer) @AT@ 9479 @LENGTH@ 62
---------DEL SimpleName@@Name:transformers110 @AT@ 9479 @LENGTH@ 15
---------DEL SimpleName@@MethodName:registerOperationTransformer:[ADD, transformer] @AT@ 9495 @LENGTH@ 46
------------DEL SimpleName@@ADD @AT@ 9524 @LENGTH@ 3
------------DEL SimpleName@@transformer @AT@ 9529 @LENGTH@ 11
---DEL ExpressionStatement@@MethodInvocation:transformers110.registerOperationTransformer(WRITE_ATTRIBUTE_OPERATION,transformer.getWriteAttributeTransformer()) @AT@ 9551 @LENGTH@ 116
------DEL MethodInvocation@@transformers110.registerOperationTransformer(WRITE_ATTRIBUTE_OPERATION,transformer.getWriteAttributeTransformer()) @AT@ 9551 @LENGTH@ 115
---------DEL SimpleName@@Name:transformers110 @AT@ 9551 @LENGTH@ 15


UPD IfStatement@@if (this.mark != NO_MARK) {  this.cbuf.position(this.mark);  this.mark=NO_MARK;} @TO@ if (this.mark != NO_MARK) {  this.cbuf.position(this.mark);  this.mark=NO_MARK;  this.bbuf.limit(0);  this.encoder.reset();} @AT@ 7098 @LENGTH@ 113
---UPD Block@@ThenBody:{  this.cbuf.position(this.mark);  this.mark=NO_MARK;} @TO@ ThenBody:{  this.cbuf.position(this.mark);  this.mark=NO_MARK;  this.bbuf.limit(0);  this.encoder.reset();} @AT@ 7124 @LENGTH@ 87
------INS ExpressionStatement@@MethodInvocation:this.bbuf.limit(0) @TO@ Block@@ThenBody:{  this.cbuf.position(this.mark);  this.mark=NO_MARK;} @AT@ 7214 @LENGTH@ 19
---------INS MethodInvocation@@this.bbuf.limit(0) @TO@ ExpressionStatement@@MethodInvocation:this.bbuf.limit(0) @AT@ 7214 @LENGTH@ 18
------------INS FieldAccess@@this.bbuf @TO@ MethodInvocation@@this.bbuf.limit(0) @AT@ 7214 @LENGTH@ 9
---------------INS ThisExpression@@this @TO@ FieldAccess@@this.bbuf @AT@ 7214 @LENGTH@ 4
---------------INS SimpleName@@bbuf @TO@ FieldAccess@@this.bbuf @AT@ 7219 @LENGTH@ 4
------------INS SimpleName@@MethodName:limit:[0] @TO@ MethodInvocation@@this.bbuf.limit(0) @AT@ 7224 @LENGTH@ 8
---------------INS NumberLiteral@@0 @TO@ SimpleName@@MethodName:limit:[0] @AT@ 7230 @LENGTH@ 1
------INS ExpressionStatement@@MethodInvocation:this.encoder.reset() @TO@ Block@@ThenBody:{  this.cbuf.position(this.mark);  this.mark=NO_MARK;} @AT@ 7246 @LENGTH@ 21
---------INS MethodInvocation@@this.encoder.reset() @TO@ ExpressionStatement@@MethodInvocation:this.encoder.reset() @AT@ 7246 @LENGTH@ 20
------------INS FieldAccess@@this.encoder @TO@ MethodInvocation@@this.encoder.reset() @AT@ 7246 @LENGTH@ 12
---------------INS ThisExpression@@this @TO@ FieldAccess@@this.encoder @AT@ 7246 @LENGTH@ 4
---------------INS SimpleName@@encoder @TO@ FieldAccess@@this.encoder @AT@ 7251 @LENGTH@ 7
------------INS SimpleName@@MethodName:reset:[] @TO@ MethodInvocation@@this.encoder.reset() @AT@ 7259 @LENGTH@ 7


UPD MethodDeclaration@@public, void, MethodName:testMulti, Exception,  @TO@ public, void, MethodName:testMultiExec, Exception,  @AT@ 1491 @LENGTH@ 45
---UPD SimpleName@@MethodName:testMulti @TO@ MethodName:testMultiExec @AT@ 1503 @LENGTH@ 9


INS IfStatement@@if (attributes.contains(name)) {  return !noWriteFailureAttributes.contains(name) && hasExpressions(name,operation.clone().get(VALUE));} @TO@ MethodDeclaration@@public, boolean, MethodName:expectFailedWriteAttributeOperation, ModelNode operation,  @AT@ 14509 @LENGTH@ 165
---INS MethodInvocation@@attributes.contains(name) @TO@ IfStatement@@if (attributes.contains(name)) {  return !noWriteFailureAttributes.contains(name) && hasExpressions(name,operation.clone().get(VALUE));} @AT@ 14513 @LENGTH@ 25
------INS SimpleName@@Name:attributes @TO@ MethodInvocation@@attributes.contains(name) @AT@ 14513 @LENGTH@ 10
------INS SimpleName@@MethodName:contains:[name] @TO@ MethodInvocation@@attributes.contains(name) @AT@ 14524 @LENGTH@ 14
---------INS SimpleName@@name @TO@ SimpleName@@MethodName:contains:[name] @AT@ 14533 @LENGTH@ 4
---INS Block@@ThenBody:{  return !noWriteFailureAttributes.contains(name) && hasExpressions(name,operation.clone().get(VALUE));} @TO@ IfStatement@@if (attributes.contains(name)) {  return !noWriteFailureAttributes.contains(name) && hasExpressions(name,operation.clone().get(VALUE));} @AT@ 14540 @LENGTH@ 134
------MOV ReturnStatement@@InfixExpression:!noWriteFailureAttributes.contains(name) && hasExpressions(name,operation.clone().get(VALUE)) @TO@ Block@@ThenBody:{  return !noWriteFailureAttributes.contains(name) && hasExpressions(name,operation.clone().get(VALUE));} @AT@ 14509 @LENGTH@ 102


UPD ReturnStatement@@InfixExpression:"<subsystem xmlns=\"urn:jboss:domain:ee:1.1\" > " + "<ear-subdeployments-isolated>true</ear-subdeployments-isolated>" + "<spec-descriptor-property-replacement>true</spec-descriptor-property-replacement>"+ "</subsystem>" @TO@ InfixExpression:"<subsystem xmlns=\"urn:jboss:domain:ee:1.1\" > " + "<global-modules><module name=\"org.jboss.logging\" slot=\"main\"/><module name=\"org.apache.log4j\"/></global-modules>" + "<ear-subdeployments-isolated>${test-exp:true}</ear-subdeployments-isolated>"+ "<spec-descriptor-property-replacement>${test-exp:true}</spec-descriptor-property-replacement>"+ "<jboss-descriptor-property-replacement>${test-exp:true}</jboss-descriptor-property-replacement>"+ "</subsystem>" @AT@ 1553 @LENGTH@ 276
---UPD InfixExpression@@"<subsystem xmlns=\"urn:jboss:domain:ee:1.1\" > " + "<ear-subdeployments-isolated>true</ear-subdeployments-isolated>" + "<spec-descriptor-property-replacement>true</spec-descriptor-property-replacement>"+ "</subsystem>" @TO@ "<subsystem xmlns=\"urn:jboss:domain:ee:1.1\" > " + "<global-modules><module name=\"org.jboss.logging\" slot=\"main\"/><module name=\"org.apache.log4j\"/></global-modules>" + "<ear-subdeployments-isolated>${test-exp:true}</ear-subdeployments-isolated>"+ "<spec-descriptor-property-replacement>${test-exp:true}</spec-descriptor-property-replacement>"+ "<jboss-descriptor-property-replacement>${test-exp:true}</jboss-descriptor-property-replacement>"+ "</subsystem>" @AT@ 1560 @LENGTH@ 268
------INS StringLiteral@@"<global-modules><module name=\"org.jboss.logging\" slot=\"main\"/><module name=\"org.apache.log4j\"/></global-modules>" @TO@ InfixExpression@@"<subsystem xmlns=\"urn:jboss:domain:ee:1.1\" > " + "<ear-subdeployments-isolated>true</ear-subdeployments-isolated>" + "<spec-descriptor-property-replacement>true</spec-descriptor-property-replacement>"+ "</subsystem>" @AT@ 1539 @LENGTH@ 120
------UPD StringLiteral@@"<ear-subdeployments-isolated>true</ear-subdeployments-isolated>" @TO@ "<ear-subdeployments-isolated>${test-exp:true}</ear-subdeployments-isolated>" @AT@ 1628 @LENGTH@ 65
------UPD StringLiteral@@"<spec-descriptor-property-replacement>true</spec-descriptor-property-replacement>" @TO@ "<spec-descriptor-property-replacement>${test-exp:true}</spec-descriptor-property-replacement>" @AT@ 1712 @LENGTH@ 83
------INS StringLiteral@@"<jboss-descriptor-property-replacement>${test-exp:true}</jboss-descriptor-property-replacement>" @TO@ InfixExpression@@"<subsystem xmlns=\"urn:jboss:domain:ee:1.1\" > " + "<ear-subdeployments-isolated>true</ear-subdeployments-isolated>" + "<spec-descriptor-property-replacement>true</spec-descriptor-property-replacement>"+ "</subsystem>" @AT@ 1888 @LENGTH@ 97


UPD CatchClause@@catch (Throwable t) {  String message="Skipping command " + command.toString();  ROOT_LOGGER.debugf(message);  skips.append(message);  PrintWriter pw=new PrintWriter(new StringWriter());  t.printStackTrace(pw);  skips.append(pw.toString());} @TO@ catch (Throwable t) {  String message="Skipping command " + command.toString();  ROOT_LOGGER.debugf(message);  skips.append(message);  PrintWriter pw=new PrintWriter(new StringWriter());  t.printStackTrace(pw);  skips.append(pw.toString());  pw.close();} @AT@ 4407 @LENGTH@ 348
---INS ExpressionStatement@@MethodInvocation:pw.close() @TO@ CatchClause@@catch (Throwable t) {  String message="Skipping command " + command.toString();  ROOT_LOGGER.debugf(message);  skips.append(message);  PrintWriter pw=new PrintWriter(new StringWriter());  t.printStackTrace(pw);  skips.append(pw.toString());} @AT@ 4794 @LENGTH@ 11
------INS MethodInvocation@@pw.close() @TO@ ExpressionStatement@@MethodInvocation:pw.close() @AT@ 4794 @LENGTH@ 10
---------INS SimpleName@@Name:pw @TO@ MethodInvocation@@pw.close() @AT@ 4794 @LENGTH@ 2
---------INS SimpleName@@MethodName:close:[] @TO@ MethodInvocation@@pw.close() @AT@ 4797 @LENGTH@ 7


INS IfStatement@@if (DELETE_WORK_DIR_ONCONTEXTDESTROY) {  super.destroy();} @TO@ MethodDeclaration@@protected, void, MethodName:destroy,  @AT@ 27478 @LENGTH@ 77
---INS SimpleName@@DELETE_WORK_DIR_ONCONTEXTDESTROY @TO@ IfStatement@@if (DELETE_WORK_DIR_ONCONTEXTDESTROY) {  super.destroy();} @AT@ 27482 @LENGTH@ 32
---INS Block@@ThenBody:{  super.destroy();} @TO@ IfStatement@@if (DELETE_WORK_DIR_ONCONTEXTDESTROY) {  super.destroy();} @AT@ 27516 @LENGTH@ 39
------INS ExpressionStatement@@SuperMethodInvocation:super.destroy() @TO@ Block@@ThenBody:{  super.destroy();} @AT@ 27529 @LENGTH@ 16
---------INS SuperMethodInvocation@@super.destroy() @TO@ ExpressionStatement@@SuperMethodInvocation:super.destroy() @AT@ 27529 @LENGTH@ 15
------------INS SimpleName@@MethodName:destroy:[] @TO@ SuperMethodInvocation@@super.destroy() @AT@ 27535 @LENGTH@ 7


INS MethodDeclaration@@TransformersSubRegistration, MethodName:registerSubResource, PathElement element, CombinedTransformer transformer,  @TO@ TypeDeclaration@@[public]TransformersSubRegistration,  @AT@ 3448 @LENGTH@ 74
---INS SimpleType@@TransformersSubRegistration @TO@ MethodDeclaration@@TransformersSubRegistration, MethodName:registerSubResource, PathElement element, CombinedTransformer transformer,  @AT@ 3420 @LENGTH@ 27
---INS SimpleName@@MethodName:registerSubResource @TO@ MethodDeclaration@@TransformersSubRegistration, MethodName:registerSubResource, PathElement element, CombinedTransformer transformer,  @AT@ 3448 @LENGTH@ 19
---INS SingleVariableDeclaration@@PathElement element @TO@ MethodDeclaration@@TransformersSubRegistration, MethodName:registerSubResource, PathElement element, CombinedTransformer transformer,  @AT@ 3468 @LENGTH@ 19
------INS SimpleType@@PathElement @TO@ SingleVariableDeclaration@@PathElement element @AT@ 3468 @LENGTH@ 11
------INS SimpleName@@element @TO@ SingleVariableDeclaration@@PathElement element @AT@ 3480 @LENGTH@ 7
---INS SingleVariableDeclaration@@CombinedTransformer transformer @TO@ MethodDeclaration@@TransformersSubRegistration, MethodName:registerSubResource, PathElement element, CombinedTransformer transformer,  @AT@ 3489 @LENGTH@ 31
------INS SimpleType@@CombinedTransformer @TO@ SingleVariableDeclaration@@CombinedTransformer transformer @AT@ 3489 @LENGTH@ 19
------INS SimpleName@@transformer @TO@ SingleVariableDeclaration@@CombinedTransformer transformer @AT@ 3509 @LENGTH@ 11


UPD ExpressionStatement@@MethodInvocation:from("spring-redis://localhost:6379?command=SUBSCRIBE&channels=one,two&listenerContainer=#listenerContainer&redisTemplate=#redisTemplate").to("mock:result") @TO@ MethodInvocation:from("spring-redis://localhost:6379?command=SUBSCRIBE&channels=one,two&listenerContainer=#listenerContainer&redisTemplate=#redisTemplate").startupOrder(1).to("mock:result") @AT@ 2323 @LENGTH@ 182
---UPD MethodInvocation@@from("spring-redis://localhost:6379?command=SUBSCRIBE&channels=one,two&listenerContainer=#listenerContainer&redisTemplate=#redisTemplate").to("mock:result") @TO@ from("spring-redis://localhost:6379?command=SUBSCRIBE&channels=one,two&listenerContainer=#listenerContainer&redisTemplate=#redisTemplate").startupOrder(1).to("mock:result") @AT@ 2323 @LENGTH@ 181
------INS MethodInvocation@@MethodName:startupOrder:[1] @TO@ MethodInvocation@@from("spring-redis://localhost:6379?command=SUBSCRIBE&channels=one,two&listenerContainer=#listenerContainer&redisTemplate=#redisTemplate").to("mock:result") @AT@ 2323 @LENGTH@ 179
---------INS NumberLiteral@@1 @TO@ MethodInvocation@@MethodName:startupOrder:[1] @AT@ 2500 @LENGTH@ 1


UPD IfStatement@@if (name == null) {  ParseUtils.missingRequired(reader,Collections.singleton("name"));} @TO@ if (name == null) {  throw ParseUtils.missingRequired(reader,Collections.singleton("name"));} @AT@ 6922 @LENGTH@ 108
---UPD Block@@ThenBody:{  ParseUtils.missingRequired(reader,Collections.singleton("name"));} @TO@ ThenBody:{  throw ParseUtils.missingRequired(reader,Collections.singleton("name"));} @AT@ 6940 @LENGTH@ 90
------DEL ExpressionStatement@@MethodInvocation:ParseUtils.missingRequired(reader,Collections.singleton("name")) @AT@ 6954 @LENGTH@ 66
------INS ThrowStatement@@MethodInvocation:ParseUtils.missingRequired(reader,Collections.singleton("name")) @TO@ Block@@ThenBody:{  ParseUtils.missingRequired(reader,Collections.singleton("name"));} @AT@ 6960 @LENGTH@ 72
---------MOV MethodInvocation@@ParseUtils.missingRequired(reader,Collections.singleton("name")) @TO@ ThrowStatement@@MethodInvocation:ParseUtils.missingRequired(reader,Collections.singleton("name")) @AT@ 6954 @LENGTH@ 65


UPD MethodDeclaration@@public, Object, MethodName:convertToMongoType, Object obj,  @TO@ public, Object, MethodName:convertToMongoType, Object obj, TypeInformation<?> typeInformation,  @AT@ 29248 @LENGTH@ 1293
---INS SingleVariableDeclaration@@TypeInformation<?> typeInformation @TO@ MethodDeclaration@@public, Object, MethodName:convertToMongoType, Object obj,  @AT@ 29471 @LENGTH@ 34
------INS ParameterizedType@@TypeInformation<?> @TO@ SingleVariableDeclaration@@TypeInformation<?> typeInformation @AT@ 29471 @LENGTH@ 18
---------INS SimpleType@@TypeInformation @TO@ ParameterizedType@@TypeInformation<?> @AT@ 29471 @LENGTH@ 15
---------INS WildcardType@@? @TO@ ParameterizedType@@TypeInformation<?> @AT@ 29487 @LENGTH@ 1
------INS SimpleName@@typeInformation @TO@ SingleVariableDeclaration@@TypeInformation<?> typeInformation @AT@ 29490 @LENGTH@ 15
---INS IfStatement@@if (typeInformation == null) {  return removeTypeInfoRecursively(newDbo);} @TO@ MethodDeclaration@@public, Object, MethodName:convertToMongoType, Object obj,  @AT@ 30712 @LENGTH@ 79
------INS InfixExpression@@typeInformation == null @TO@ IfStatement@@if (typeInformation == null) {  return removeTypeInfoRecursively(newDbo);} @AT@ 30716 @LENGTH@ 23
---------INS SimpleName@@typeInformation @TO@ InfixExpression@@typeInformation == null @AT@ 30716 @LENGTH@ 15
---------INS Operator@@== @TO@ InfixExpression@@typeInformation == null @AT@ 30731 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@typeInformation == null @AT@ 30735 @LENGTH@ 4
------INS Block@@ThenBody:{  return removeTypeInfoRecursively(newDbo);} @TO@ IfStatement@@if (typeInformation == null) {  return removeTypeInfoRecursively(newDbo);} @AT@ 30741 @LENGTH@ 50
---------MOV ReturnStatement@@MethodInvocation:removeTypeInfoRecursively(newDbo) @TO@ Block@@ThenBody:{  return removeTypeInfoRecursively(newDbo);} @AT@ 30497 @LENGTH@ 41
---INS ReturnStatement@@ConditionalExpression:!obj.getClass().equals(typeInformation.getType()) ? newDbo : removeTypeInfoRecursively(newDbo) @TO@ MethodDeclaration@@public, Object, MethodName:convertToMongoType, Object obj,  @AT@ 30795 @LENGTH@ 102
------INS ConditionalExpression@@!obj.getClass().equals(typeInformation.getType()) ? newDbo : removeTypeInfoRecursively(newDbo) @TO@ ReturnStatement@@ConditionalExpression:!obj.getClass().equals(typeInformation.getType()) ? newDbo : removeTypeInfoRecursively(newDbo) @AT@ 30802 @LENGTH@ 94
---------INS PrefixExpression@@!obj.getClass().equals(typeInformation.getType()) @TO@ ConditionalExpression@@!obj.getClass().equals(typeInformation.getType()) ? newDbo : removeTypeInfoRecursively(newDbo) @AT@ 30802 @LENGTH@ 49
------------INS Operator@@! @TO@ PrefixExpression@@!obj.getClass().equals(typeInformation.getType()) @AT@ 30802 @LENGTH@ 1
------------INS MethodInvocation@@obj.getClass().equals(typeInformation.getType()) @TO@ PrefixExpression@@!obj.getClass().equals(typeInformation.getType()) @AT@ 30803 @LENGTH@ 48
---------------INS MethodInvocation@@MethodName:getClass:[] @TO@ MethodInvocation@@obj.getClass().equals(typeInformation.getType()) @AT@ 30803 @LENGTH@ 14
---------------INS SimpleName@@Name:obj @TO@ MethodInvocation@@obj.getClass().equals(typeInformation.getType()) @AT@ 30803 @LENGTH@ 3
---------------INS SimpleName@@MethodName:equals:[typeInformation.getType()] @TO@ MethodInvocation@@obj.getClass().equals(typeInformation.getType()) @AT@ 30818 @LENGTH@ 33
------------------INS MethodInvocation@@typeInformation.getType() @TO@ SimpleName@@MethodName:equals:[typeInformation.getType()] @AT@ 30825 @LENGTH@ 25
---------------------INS SimpleName@@Name:typeInformation @TO@ MethodInvocation@@typeInformation.getType() @AT@ 30825 @LENGTH@ 15
---------------------INS SimpleName@@MethodName:getType:[] @TO@ MethodInvocation@@typeInformation.getType() @AT@ 30841 @LENGTH@ 9
---------INS SimpleName@@newDbo @TO@ ConditionalExpression@@!obj.getClass().equals(typeInformation.getType()) ? newDbo : removeTypeInfoRecursively(newDbo) @AT@ 30854 @LENGTH@ 6
---------INS MethodInvocation@@removeTypeInfoRecursively(newDbo) @TO@ ConditionalExpression@@!obj.getClass().equals(typeInformation.getType()) ? newDbo : removeTypeInfoRecursively(newDbo) @AT@ 30863 @LENGTH@ 33
------------INS SimpleName@@MethodName:removeTypeInfoRecursively:[newDbo] @TO@ MethodInvocation@@removeTypeInfoRecursively(newDbo) @AT@ 30863 @LENGTH@ 33
---------------INS SimpleName@@newDbo @TO@ SimpleName@@MethodName:removeTypeInfoRecursively:[newDbo] @AT@ 30889 @LENGTH@ 6


UPD IfStatement@@if (cacheData) {  try {    Stat stat=new Stat();    byte[] bytes=dataIsCompressed ? client.getData().decompressed().storingStatIn(stat).forPath(fullPath) : client.getData().storingStatIn(stat).forPath(fullPath);    List<String> children=client.getChildren().forPath(fullPath);    currentData.put(fullPath,new TreeData(fullPath,stat,bytes,children));  } catch (  KeeperException.NoNodeException ignore) {    currentData.invalidate(fullPath);  }} else {  Stat stat=client.checkExists().forPath(fullPath);  if (stat != null) {    List<String> children=client.getChildren().forPath(fullPath);    currentData.put(fullPath,new TreeData(fullPath,stat,null,children));  } else {    currentData.invalidate(fullPath);  }} @TO@ if (cacheData) {  try {    Stat stat=new Stat();    byte[] bytes=dataIsCompressed ? client.getData().decompressed().storingStatIn(stat).forPath(fullPath) : client.getData().storingStatIn(stat).forPath(fullPath);    List<String> children=client.getChildren().forPath(fullPath);    currentData.put(fullPath,new TreeData(fullPath,stat,bytes,children));    for (    String child : children) {      String childPath=ZKPaths.makePath(fullPath,child);      internalRebuildNode(childPath);    }  } catch (  KeeperException.NoNodeException ignore) {    currentData.invalidate(fullPath);    removeFromParent(fullPath);  }} else {  Stat stat=client.checkExists().forPath(fullPath);  if (stat != null) {    List<String> children=client.getChildren().forPath(fullPath);    currentData.put(fullPath,new TreeData(fullPath,stat,null,children));    for (    String child : children) {      String childPath=ZKPaths.makePath(fullPath,child);      internalRebuildNode(childPath);    }  } else {    currentData.invalidate(fullPath);    removeFromParent(fullPath);  }} @AT@ 22350 @LENGTH@ 1134
---UPD Block@@ThenBody:{  try {    Stat stat=new Stat();    byte[] bytes=dataIsCompressed ? client.getData().decompressed().storingStatIn(stat).forPath(fullPath) : client.getData().storingStatIn(stat).forPath(fullPath);    List<String> children=client.getChildren().forPath(fullPath);    currentData.put(fullPath,new TreeData(fullPath,stat,bytes,children));  } catch (  KeeperException.NoNodeException ignore) {    currentData.invalidate(fullPath);  }} @TO@ ThenBody:{  try {    Stat stat=new Stat();    byte[] bytes=dataIsCompressed ? client.getData().decompressed().storingStatIn(stat).forPath(fullPath) : client.getData().storingStatIn(stat).forPath(fullPath);    List<String> children=client.getChildren().forPath(fullPath);    currentData.put(fullPath,new TreeData(fullPath,stat,bytes,children));    for (    String child : children) {      String childPath=ZKPaths.makePath(fullPath,child);      internalRebuildNode(childPath);    }  } catch (  KeeperException.NoNodeException ignore) {    currentData.invalidate(fullPath);    removeFromParent(fullPath);  }} @AT@ 22375 @LENGTH@ 635
------UPD TryStatement@@try {  Stat stat=new Stat();  byte[] bytes=dataIsCompressed ? client.getData().decompressed().storingStatIn(stat).forPath(fullPath) : client.getData().storingStatIn(stat).forPath(fullPath);  List<String> children=client.getChildren().forPath(fullPath);  currentData.put(fullPath,new TreeData(fullPath,stat,bytes,children));} catch (KeeperException.NoNodeException ignore) {  currentData.invalidate(fullPath);} @TO@ try {  Stat stat=new Stat();  byte[] bytes=dataIsCompressed ? client.getData().decompressed().storingStatIn(stat).forPath(fullPath) : client.getData().storingStatIn(stat).forPath(fullPath);  List<String> children=client.getChildren().forPath(fullPath);  currentData.put(fullPath,new TreeData(fullPath,stat,bytes,children));  for (  String child : children) {    String childPath=ZKPaths.makePath(fullPath,child);    internalRebuildNode(childPath);  }} catch (KeeperException.NoNodeException ignore) {  currentData.invalidate(fullPath);  removeFromParent(fullPath);} @AT@ 22389 @LENGTH@ 611
---------INS EnhancedForStatement@@for (String child : children) {  String childPath=ZKPaths.makePath(fullPath,child);  internalRebuildNode(childPath);} @TO@ TryStatement@@try {  Stat stat=new Stat();  byte[] bytes=dataIsCompressed ? client.getData().decompressed().storingStatIn(stat).forPath(fullPath) : client.getData().storingStatIn(stat).forPath(fullPath);  List<String> children=client.getChildren().forPath(fullPath);  currentData.put(fullPath,new TreeData(fullPath,stat,bytes,children));} catch (KeeperException.NoNodeException ignore) {  currentData.invalidate(fullPath);} @AT@ 22815 @LENGTH@ 175
------------INS SingleVariableDeclaration@@String child @TO@ EnhancedForStatement@@for (String child : children) {  String childPath=ZKPaths.makePath(fullPath,child);  internalRebuildNode(childPath);} @AT@ 22820 @LENGTH@ 12
---------------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String child @AT@ 22820 @LENGTH@ 6
---------------INS SimpleName@@child @TO@ SingleVariableDeclaration@@String child @AT@ 22827 @LENGTH@ 5
------------INS SimpleName@@children @TO@ EnhancedForStatement@@for (String child : children) {  String childPath=ZKPaths.makePath(fullPath,child);  internalRebuildNode(childPath);} @AT@ 22835 @LENGTH@ 8
------------INS VariableDeclarationStatement@@String childPath=ZKPaths.makePath(fullPath,child); @TO@ EnhancedForStatement@@for (String child : children) {  String childPath=ZKPaths.makePath(fullPath,child);  internalRebuildNode(childPath);} @AT@ 22867 @LENGTH@ 53
---------------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String childPath=ZKPaths.makePath(fullPath,child); @AT@ 22867 @LENGTH@ 6
---------------INS VariableDeclarationFragment@@childPath=ZKPaths.makePath(fullPath,child) @TO@ VariableDeclarationStatement@@String childPath=ZKPaths.makePath(fullPath,child); @AT@ 22874 @LENGTH@ 45
------------------INS SimpleName@@childPath @TO@ VariableDeclarationFragment@@childPath=ZKPaths.makePath(fullPath,child) @AT@ 22874 @LENGTH@ 9
------------------INS MethodInvocation@@ZKPaths.makePath(fullPath,child) @TO@ VariableDeclarationFragment@@childPath=ZKPaths.makePath(fullPath,child) @AT@ 22886 @LENGTH@ 33
---------------------INS SimpleName@@Name:ZKPaths @TO@ MethodInvocation@@ZKPaths.makePath(fullPath,child) @AT@ 22886 @LENGTH@ 7
---------------------INS SimpleName@@MethodName:makePath:[fullPath, child] @TO@ MethodInvocation@@ZKPaths.makePath(fullPath,child) @AT@ 22894 @LENGTH@ 25
------------------------INS SimpleName@@fullPath @TO@ SimpleName@@MethodName:makePath:[fullPath, child] @AT@ 22903 @LENGTH@ 8
------------------------INS SimpleName@@child @TO@ SimpleName@@MethodName:makePath:[fullPath, child] @AT@ 22913 @LENGTH@ 5
------------INS ExpressionStatement@@MethodInvocation:internalRebuildNode(childPath) @TO@ EnhancedForStatement@@for (String child : children) {  String childPath=ZKPaths.makePath(fullPath,child);  internalRebuildNode(childPath);} @AT@ 22941 @LENGTH@ 31
---------------INS MethodInvocation@@internalRebuildNode(childPath) @TO@ ExpressionStatement@@MethodInvocation:internalRebuildNode(childPath) @AT@ 22941 @LENGTH@ 30
------------------INS SimpleName@@MethodName:internalRebuildNode:[childPath] @TO@ MethodInvocation@@internalRebuildNode(childPath) @AT@ 22941 @LENGTH@ 30
---------------------INS SimpleName@@childPath @TO@ SimpleName@@MethodName:internalRebuildNode:[childPath] @AT@ 22961 @LENGTH@ 9
---------UPD CatchClause@@catch (KeeperException.NoNodeException ignore) {  currentData.invalidate(fullPath);} @TO@ catch (KeeperException.NoNodeException ignore) {  currentData.invalidate(fullPath);  removeFromParent(fullPath);} @AT@ 22821 @LENGTH@ 179
------------INS ExpressionStatement@@MethodInvocation:removeFromParent(fullPath) @TO@ CatchClause@@catch (KeeperException.NoNodeException ignore) {  currentData.invalidate(fullPath);} @AT@ 23199 @LENGTH@ 27
---------------INS MethodInvocation@@removeFromParent(fullPath) @TO@ ExpressionStatement@@MethodInvocation:removeFromParent(fullPath) @AT@ 23199 @LENGTH@ 26
------------------INS SimpleName@@MethodName:removeFromParent:[fullPath] @TO@ MethodInvocation@@removeFromParent(fullPath) @AT@ 23199 @LENGTH@ 26
---------------------INS SimpleName@@fullPath @TO@ SimpleName@@MethodName:removeFromParent:[fullPath] @AT@ 23216 @LENGTH@ 8
---UPD Block@@ElseBody:{  Stat stat=client.checkExists().forPath(fullPath);  if (stat != null) {    List<String> children=client.getChildren().forPath(fullPath);    currentData.put(fullPath,new TreeData(fullPath,stat,null,children));  } else {    currentData.invalidate(fullPath);  }} @TO@ ElseBody:{  Stat stat=client.checkExists().forPath(fullPath);  if (stat != null) {    List<String> children=client.getChildren().forPath(fullPath);    currentData.put(fullPath,new TreeData(fullPath,stat,null,children));    for (    String child : children) {      String childPath=ZKPaths.makePath(fullPath,child);      internalRebuildNode(childPath);    }  } else {    currentData.invalidate(fullPath);    removeFromParent(fullPath);  }} @AT@ 23032 @LENGTH@ 452
------UPD IfStatement@@if (stat != null) {  List<String> children=client.getChildren().forPath(fullPath);  currentData.put(fullPath,new TreeData(fullPath,stat,null,children));} else {  currentData.invalidate(fullPath);} @TO@ if (stat != null) {  List<String> children=client.getChildren().forPath(fullPath);  currentData.put(fullPath,new TreeData(fullPath,stat,null,children));  for (  String child : children) {    String childPath=ZKPaths.makePath(fullPath,child);    internalRebuildNode(childPath);  }} else {  currentData.invalidate(fullPath);  removeFromParent(fullPath);} @AT@ 23110 @LENGTH@ 364
---------UPD Block@@ThenBody:{  List<String> children=client.getChildren().forPath(fullPath);  currentData.put(fullPath,new TreeData(fullPath,stat,null,children));} @TO@ ThenBody:{  List<String> children=client.getChildren().forPath(fullPath);  currentData.put(fullPath,new TreeData(fullPath,stat,null,children));  for (  String child : children) {    String childPath=ZKPaths.makePath(fullPath,child);    internalRebuildNode(childPath);  }} @AT@ 23142 @LENGTH@ 184
------------INS EnhancedForStatement@@for (String child : children) {  String childPath=ZKPaths.makePath(fullPath,child);  internalRebuildNode(childPath);} @TO@ Block@@ThenBody:{  List<String> children=client.getChildren().forPath(fullPath);  currentData.put(fullPath,new TreeData(fullPath,stat,null,children));} @AT@ 23569 @LENGTH@ 175
---------------INS SingleVariableDeclaration@@String child @TO@ EnhancedForStatement@@for (String child : children) {  String childPath=ZKPaths.makePath(fullPath,child);  internalRebuildNode(childPath);} @AT@ 23574 @LENGTH@ 12
------------------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String child @AT@ 23574 @LENGTH@ 6
------------------INS SimpleName@@child @TO@ SingleVariableDeclaration@@String child @AT@ 23581 @LENGTH@ 5
---------------INS SimpleName@@children @TO@ EnhancedForStatement@@for (String child : children) {  String childPath=ZKPaths.makePath(fullPath,child);  internalRebuildNode(childPath);} @AT@ 23589 @LENGTH@ 8
---------------INS VariableDeclarationStatement@@String childPath=ZKPaths.makePath(fullPath,child); @TO@ EnhancedForStatement@@for (String child : children) {  String childPath=ZKPaths.makePath(fullPath,child);  internalRebuildNode(childPath);} @AT@ 23621 @LENGTH@ 53
------------------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String childPath=ZKPaths.makePath(fullPath,child); @AT@ 23621 @LENGTH@ 6
------------------INS VariableDeclarationFragment@@childPath=ZKPaths.makePath(fullPath,child) @TO@ VariableDeclarationStatement@@String childPath=ZKPaths.makePath(fullPath,child); @AT@ 23628 @LENGTH@ 45
---------------------INS SimpleName@@childPath @TO@ VariableDeclarationFragment@@childPath=ZKPaths.makePath(fullPath,child) @AT@ 23628 @LENGTH@ 9
---------------------INS MethodInvocation@@ZKPaths.makePath(fullPath,child) @TO@ VariableDeclarationFragment@@childPath=ZKPaths.makePath(fullPath,child) @AT@ 23640 @LENGTH@ 33
------------------------INS SimpleName@@Name:ZKPaths @TO@ MethodInvocation@@ZKPaths.makePath(fullPath,child) @AT@ 23640 @LENGTH@ 7
------------------------INS SimpleName@@MethodName:makePath:[fullPath, child] @TO@ MethodInvocation@@ZKPaths.makePath(fullPath,child) @AT@ 23648 @LENGTH@ 25
---------------------------INS SimpleName@@fullPath @TO@ SimpleName@@MethodName:makePath:[fullPath, child] @AT@ 23657 @LENGTH@ 8
---------------------------INS SimpleName@@child @TO@ SimpleName@@MethodName:makePath:[fullPath, child] @AT@ 23667 @LENGTH@ 5
---------------INS ExpressionStatement@@MethodInvocation:internalRebuildNode(childPath) @TO@ EnhancedForStatement@@for (String child : children) {  String childPath=ZKPaths.makePath(fullPath,child);  internalRebuildNode(childPath);} @AT@ 23695 @LENGTH@ 31
------------------INS MethodInvocation@@internalRebuildNode(childPath) @TO@ ExpressionStatement@@MethodInvocation:internalRebuildNode(childPath) @AT@ 23695 @LENGTH@ 30
---------------------INS SimpleName@@MethodName:internalRebuildNode:[childPath] @TO@ MethodInvocation@@internalRebuildNode(childPath) @AT@ 23695 @LENGTH@ 30
------------------------INS SimpleName@@childPath @TO@ SimpleName@@MethodName:internalRebuildNode:[childPath] @AT@ 23715 @LENGTH@ 9
---------UPD Block@@ElseBody:{  currentData.invalidate(fullPath);} @TO@ ElseBody:{  currentData.invalidate(fullPath);  removeFromParent(fullPath);} @AT@ 23356 @LENGTH@ 118
------------INS ExpressionStatement@@MethodInvocation:removeFromParent(fullPath) @TO@ Block@@ElseBody:{  currentData.invalidate(fullPath);} @AT@ 23909 @LENGTH@ 27
---------------INS MethodInvocation@@removeFromParent(fullPath) @TO@ ExpressionStatement@@MethodInvocation:removeFromParent(fullPath) @AT@ 23909 @LENGTH@ 26
------------------INS SimpleName@@MethodName:removeFromParent:[fullPath] @TO@ MethodInvocation@@removeFromParent(fullPath) @AT@ 23909 @LENGTH@ 26
---------------------INS SimpleName@@fullPath @TO@ SimpleName@@MethodName:removeFromParent:[fullPath] @AT@ 23926 @LENGTH@ 8


UPD ExpressionStatement@@MethodInvocation:assertTrue("Wrong header: " + header,header.contains("error=\"invalid_client\"")) @TO@ MethodInvocation:assertTrue("Wrong header: " + header,header.contains("Basic realm")) @AT@ 4163 @LENGTH@ 83
---UPD MethodInvocation@@assertTrue("Wrong header: " + header,header.contains("error=\"invalid_client\"")) @TO@ assertTrue("Wrong header: " + header,header.contains("Basic realm")) @AT@ 4163 @LENGTH@ 82
------UPD SimpleName@@MethodName:assertTrue:["Wrong header: " + header, header.contains("error=\"invalid_client\"")] @TO@ MethodName:assertTrue:["Wrong header: " + header, header.contains("Basic realm")] @AT@ 4163 @LENGTH@ 82
---------UPD MethodInvocation@@header.contains("error=\"invalid_client\"") @TO@ header.contains("Basic realm") @AT@ 4201 @LENGTH@ 43
------------UPD SimpleName@@MethodName:contains:["error=\"invalid_client\""] @TO@ MethodName:contains:["Basic realm"] @AT@ 4208 @LENGTH@ 36
---------------UPD StringLiteral@@"error=\"invalid_client\"" @TO@ "Basic realm" @AT@ 4217 @LENGTH@ 26


UPD ExpressionStatement@@MethodInvocation:assertTrue(token.getPrincipal() instanceof ConnectionData) @TO@ MethodInvocation:assertTrue(token.getConnection() instanceof Connection) @AT@ 4453 @LENGTH@ 59
---UPD MethodInvocation@@assertTrue(token.getPrincipal() instanceof ConnectionData) @TO@ assertTrue(token.getConnection() instanceof Connection) @AT@ 4453 @LENGTH@ 58
------UPD SimpleName@@MethodName:assertTrue:[token.getPrincipal() instanceof ConnectionData] @TO@ MethodName:assertTrue:[token.getConnection() instanceof Connection] @AT@ 4453 @LENGTH@ 58
---------UPD InstanceofExpression@@token.getPrincipal() instanceof ConnectionData @TO@ token.getConnection() instanceof Connection @AT@ 4464 @LENGTH@ 46
------------UPD MethodInvocation@@token.getPrincipal() @TO@ token.getConnection() @AT@ 4464 @LENGTH@ 20
---------------UPD SimpleName@@MethodName:getPrincipal:[] @TO@ MethodName:getConnection:[] @AT@ 4470 @LENGTH@ 14
------------UPD SimpleType@@ConnectionData @TO@ Connection @AT@ 4496 @LENGTH@ 14


INS IfStatement@@if (thread != null) {  thread.interrupt();} @TO@ MethodDeclaration@@public, void, MethodName:destroy,  @AT@ 1875 @LENGTH@ 63
---INS InfixExpression@@thread != null @TO@ IfStatement@@if (thread != null) {  thread.interrupt();} @AT@ 1879 @LENGTH@ 14
------INS SimpleName@@thread @TO@ InfixExpression@@thread != null @AT@ 1879 @LENGTH@ 6
------INS Operator@@!= @TO@ InfixExpression@@thread != null @AT@ 1885 @LENGTH@ 2
------INS NullLiteral@@null @TO@ InfixExpression@@thread != null @AT@ 1889 @LENGTH@ 4
---INS Block@@ThenBody:{  thread.interrupt();} @TO@ IfStatement@@if (thread != null) {  thread.interrupt();} @AT@ 1895 @LENGTH@ 43
------MOV ExpressionStatement@@MethodInvocation:thread.interrupt() @TO@ Block@@ThenBody:{  thread.interrupt();} @AT@ 1875 @LENGTH@ 19


UPD VariableDeclarationStatement@@SnsComponent component=new SnsComponent(context); @TO@ CwComponent component=new CwComponent(context); @AT@ 2207 @LENGTH@ 51
---UPD SimpleType@@SnsComponent @TO@ CwComponent @AT@ 2207 @LENGTH@ 12
---UPD VariableDeclarationFragment@@component=new SnsComponent(context) @TO@ component=new CwComponent(context) @AT@ 2220 @LENGTH@ 37
------UPD ClassInstanceCreation@@SnsComponent[context] @TO@ CwComponent[context] @AT@ 2232 @LENGTH@ 25
---------UPD SimpleType@@SnsComponent @TO@ CwComponent @AT@ 2236 @LENGTH@ 12


INS ExpressionStatement@@MethodInvocation:localServer.awaitTermination(1000) @TO@ MethodDeclaration@@public, void, MethodName:httpConnectionNotOk, Exception,  @AT@ 1787 @LENGTH@ 35
---INS MethodInvocation@@localServer.awaitTermination(1000) @TO@ ExpressionStatement@@MethodInvocation:localServer.awaitTermination(1000) @AT@ 1787 @LENGTH@ 34
------INS SimpleName@@Name:localServer @TO@ MethodInvocation@@localServer.awaitTermination(1000) @AT@ 1787 @LENGTH@ 11
------INS SimpleName@@MethodName:awaitTermination:[1000] @TO@ MethodInvocation@@localServer.awaitTermination(1000) @AT@ 1799 @LENGTH@ 22
---------INS NumberLiteral@@1000 @TO@ SimpleName@@MethodName:awaitTermination:[1000] @AT@ 1816 @LENGTH@ 4


UPD VariableDeclarationStatement@@boolean isUpload=UPLOAD_REQUEST.equals(exchange.getCanonicalPath()); @TO@ boolean isUpload=UPLOAD_REQUEST.equals(exchange.getRequestPath()); @AT@ 2852 @LENGTH@ 70
---UPD VariableDeclarationFragment@@isUpload=UPLOAD_REQUEST.equals(exchange.getCanonicalPath()) @TO@ isUpload=UPLOAD_REQUEST.equals(exchange.getRequestPath()) @AT@ 2860 @LENGTH@ 61
------UPD MethodInvocation@@UPLOAD_REQUEST.equals(exchange.getCanonicalPath()) @TO@ UPLOAD_REQUEST.equals(exchange.getRequestPath()) @AT@ 2871 @LENGTH@ 50
---------UPD SimpleName@@MethodName:equals:[exchange.getCanonicalPath()] @TO@ MethodName:equals:[exchange.getRequestPath()] @AT@ 2886 @LENGTH@ 35
------------UPD MethodInvocation@@exchange.getCanonicalPath() @TO@ exchange.getRequestPath() @AT@ 2893 @LENGTH@ 27
---------------UPD SimpleName@@MethodName:getCanonicalPath:[] @TO@ MethodName:getRequestPath:[] @AT@ 2902 @LENGTH@ 18


UPD FieldDeclaration@@private, boolean, [addTen=false] @TO@ private, boolean, [addTen] @AT@ 4835 @LENGTH@ 31
---UPD VariableDeclarationFragment@@addTen=false @TO@ addTen @AT@ 4851 @LENGTH@ 14
------DEL BooleanLiteral@@false @AT@ 4860 @LENGTH@ 5


UPD MethodDeclaration@@private, String, MethodName:getMetricName, OperationContext context, String clazz,  @TO@ private, String, MethodName:getMetricName, OperationContext context, String type,  @AT@ 2583 @LENGTH@ 566
---UPD SingleVariableDeclaration@@String clazz @TO@ String type @AT@ 2638 @LENGTH@ 12
------UPD SimpleName@@clazz @TO@ type @AT@ 2645 @LENGTH@ 5
---UPD VariableDeclarationStatement@@ModelNode loadProvider=context.readResource(PathAddress.pathAddress(ModClusterExtension.DYNAMIC_LOAD_PROVIDER)).getModel(); @TO@ Set<String> metrics=context.readResource(PathAddress.pathAddress(ModClusterExtension.DYNAMIC_LOAD_PROVIDER)).getChildrenNames(CommonAttributes.CUSTOM_LOAD_METRIC); @AT@ 2662 @LENGTH@ 125
------DEL SimpleType@@ModelNode @AT@ 2662 @LENGTH@ 9
------UPD VariableDeclarationFragment@@loadProvider=context.readResource(PathAddress.pathAddress(ModClusterExtension.DYNAMIC_LOAD_PROVIDER)).getModel() @TO@ metrics=context.readResource(PathAddress.pathAddress(ModClusterExtension.DYNAMIC_LOAD_PROVIDER)).getChildrenNames(CommonAttributes.CUSTOM_LOAD_METRIC) @AT@ 2672 @LENGTH@ 114
---------UPD SimpleName@@loadProvider @TO@ metrics @AT@ 2672 @LENGTH@ 12
---------UPD MethodInvocation@@context.readResource(PathAddress.pathAddress(ModClusterExtension.DYNAMIC_LOAD_PROVIDER)).getModel() @TO@ context.readResource(PathAddress.pathAddress(ModClusterExtension.DYNAMIC_LOAD_PROVIDER)).getChildrenNames(CommonAttributes.CUSTOM_LOAD_METRIC) @AT@ 2687 @LENGTH@ 99
------------UPD SimpleName@@MethodName:getModel:[] @TO@ MethodName:getChildrenNames:[CommonAttributes.CUSTOM_LOAD_METRIC] @AT@ 2776 @LENGTH@ 10
---------------INS QualifiedName@@CommonAttributes.CUSTOM_LOAD_METRIC @TO@ SimpleName@@MethodName:getModel:[] @AT@ 2812 @LENGTH@ 35
------------------INS SimpleName@@CommonAttributes @TO@ QualifiedName@@CommonAttributes.CUSTOM_LOAD_METRIC @AT@ 2812 @LENGTH@ 16
------------------INS SimpleName@@CUSTOM_LOAD_METRIC @TO@ QualifiedName@@CommonAttributes.CUSTOM_LOAD_METRIC @AT@ 2829 @LENGTH@ 18
------INS ParameterizedType@@Set<String> @TO@ VariableDeclarationStatement@@ModelNode loadProvider=context.readResource(PathAddress.pathAddress(ModClusterExtension.DYNAMIC_LOAD_PROVIDER)).getModel(); @AT@ 2684 @LENGTH@ 11
---------INS SimpleType@@Set @TO@ ParameterizedType@@Set<String> @AT@ 2684 @LENGTH@ 3
---------INS SimpleType@@String @TO@ ParameterizedType@@Set<String> @AT@ 2688 @LENGTH@ 6
---DEL VariableDeclarationStatement@@ModelNode loadMetrics=loadProvider.get(CommonAttributes.CUSTOM_LOAD_METRIC); @AT@ 2796 @LENGTH@ 78
------DEL SimpleType@@ModelNode @AT@ 2796 @LENGTH@ 9
------DEL VariableDeclarationFragment@@loadMetrics=loadProvider.get(CommonAttributes.CUSTOM_LOAD_METRIC) @AT@ 2806 @LENGTH@ 67
---------DEL SimpleName@@loadMetrics @AT@ 2806 @LENGTH@ 11
---------DEL MethodInvocation@@loadProvider.get(CommonAttributes.CUSTOM_LOAD_METRIC) @AT@ 2820 @LENGTH@ 53
------------DEL SimpleName@@Name:loadProvider @AT@ 2820 @LENGTH@ 12
------------DEL SimpleName@@MethodName:get:[CommonAttributes.CUSTOM_LOAD_METRIC] @AT@ 2833 @LENGTH@ 40
---------------DEL QualifiedName@@CommonAttributes.CUSTOM_LOAD_METRIC @AT@ 2837 @LENGTH@ 35
------------------DEL SimpleName@@CommonAttributes @AT@ 2837 @LENGTH@ 16
------------------DEL SimpleName@@CUSTOM_LOAD_METRIC @AT@ 2854 @LENGTH@ 18
---UPD EnhancedForStatement@@for (Property p : loadMetrics.asPropertyList()) {  String metricClass=p.getValue().get(CommonAttributes.TYPE).asString();  if (metricClass.equals(clazz)) {    return p.getName();  }} @TO@ for (String name : metrics) {  if (name.equals(type)) {    return name;  }} @AT@ 2883 @LENGTH@ 239
------INS SimpleName@@metrics @TO@ EnhancedForStatement@@for (Property p : loadMetrics.asPropertyList()) {  String metricClass=p.getValue().get(CommonAttributes.TYPE).asString();  if (metricClass.equals(clazz)) {    return p.getName();  }} @AT@ 2877 @LENGTH@ 7
------UPD SingleVariableDeclaration@@Property p @TO@ String name @AT@ 2888 @LENGTH@ 10
---------UPD SimpleType@@Property @TO@ String @AT@ 2888 @LENGTH@ 8
---------UPD SimpleName@@p @TO@ name @AT@ 2897 @LENGTH@ 1
------DEL MethodInvocation@@loadMetrics.asPropertyList() @AT@ 2901 @LENGTH@ 28
---------DEL SimpleName@@Name:loadMetrics @AT@ 2901 @LENGTH@ 11
---------DEL SimpleName@@MethodName:asPropertyList:[] @AT@ 2913 @LENGTH@ 16
------DEL VariableDeclarationStatement@@String metricClass=p.getValue().get(CommonAttributes.TYPE).asString(); @AT@ 2945 @LENGTH@ 72
---------DEL SimpleType@@String @AT@ 2945 @LENGTH@ 6
---------DEL VariableDeclarationFragment@@metricClass=p.getValue().get(CommonAttributes.TYPE).asString() @AT@ 2952 @LENGTH@ 64
------------DEL SimpleName@@metricClass @AT@ 2952 @LENGTH@ 11
------------DEL MethodInvocation@@p.getValue().get(CommonAttributes.TYPE).asString() @AT@ 2966 @LENGTH@ 50
---------------DEL MethodInvocation@@MethodName:get:[CommonAttributes.TYPE] @AT@ 2966 @LENGTH@ 39
------------------DEL QualifiedName@@CommonAttributes.TYPE @AT@ 2983 @LENGTH@ 21
---------------------DEL SimpleName@@CommonAttributes @AT@ 2983 @LENGTH@ 16
---------------------DEL SimpleName@@TYPE @AT@ 3000 @LENGTH@ 4
---------------DEL MethodInvocation@@MethodName:getValue:[] @AT@ 2966 @LENGTH@ 12
---------------DEL SimpleName@@Name:p @AT@ 2966 @LENGTH@ 1
---------------DEL SimpleName@@MethodName:asString:[] @AT@ 3006 @LENGTH@ 10
------UPD IfStatement@@if (metricClass.equals(clazz)) {  return p.getName();} @TO@ if (name.equals(type)) {  return name;} @AT@ 3030 @LENGTH@ 82
---------UPD MethodInvocation@@metricClass.equals(clazz) @TO@ name.equals(type) @AT@ 3034 @LENGTH@ 25
------------UPD SimpleName@@Name:metricClass @TO@ Name:name @AT@ 3034 @LENGTH@ 11
------------UPD SimpleName@@MethodName:equals:[clazz] @TO@ MethodName:equals:[type] @AT@ 3046 @LENGTH@ 13
---------------UPD SimpleName@@clazz @TO@ type @AT@ 3053 @LENGTH@ 5
---------UPD Block@@ThenBody:{  return p.getName();} @TO@ ThenBody:{  return name;} @AT@ 3061 @LENGTH@ 51
------------UPD ReturnStatement@@MethodInvocation:p.getName() @TO@ SimpleName:name @AT@ 3079 @LENGTH@ 19
---------------INS SimpleName@@name @TO@ ReturnStatement@@MethodInvocation:p.getName() @AT@ 2948 @LENGTH@ 4
---------------DEL MethodInvocation@@p.getName() @AT@ 3086 @LENGTH@ 11
------------------DEL SimpleName@@Name:p @AT@ 3086 @LENGTH@ 1
------------------DEL SimpleName@@MethodName:getName:[] @AT@ 3088 @LENGTH@ 9


UPD MethodDeclaration@@public, Map<String,String>, MethodName:getContainerConfguration,  @TO@ public, Map<String,String>, MethodName:getContainerConfiguration,  @AT@ 1835 @LENGTH@ 99
---UPD SimpleName@@MethodName:getContainerConfguration @TO@ MethodName:getContainerConfiguration @AT@ 1862 @LENGTH@ 24
---UPD ReturnStatement@@SimpleName:containerConfguration @TO@ SimpleName:containerConfiguration @AT@ 1899 @LENGTH@ 29
------UPD SimpleName@@containerConfguration @TO@ containerConfiguration @AT@ 1906 @LENGTH@ 21


UPD ExpressionStatement@@MethodInvocation:BindingAddHandler.installBindingService(context,model,name) @TO@ MethodInvocation:BindingAddHandler.installBindingService(context,model,name,null) @AT@ 3581 @LENGTH@ 62
---UPD MethodInvocation@@BindingAddHandler.installBindingService(context,model,name) @TO@ BindingAddHandler.installBindingService(context,model,name,null) @AT@ 3581 @LENGTH@ 61
------UPD SimpleName@@MethodName:installBindingService:[context, model, name] @TO@ MethodName:installBindingService:[context, model, name, null] @AT@ 3599 @LENGTH@ 43
---------INS NullLiteral@@null @TO@ SimpleName@@MethodName:installBindingService:[context, model, name] @AT@ 3643 @LENGTH@ 4


UPD TypeDeclaration@@[@RunWith(JUnit4TestRunner.class), public]CamelSpringNeo4jTest, AbstractFeatureTest @TO@ [@RunWith(JUnit4TestRunner.class), @Ignore("camel-spring-neo4j feature does not work yet"), public]CamelSpringNeo4jTest, AbstractFeatureTest @AT@ 1031 @LENGTH@ 381
---INS SingleMemberAnnotation@@@Ignore("camel-spring-neo4j feature does not work yet") @TO@ TypeDeclaration@@[@RunWith(JUnit4TestRunner.class), public]CamelSpringNeo4jTest, AbstractFeatureTest @AT@ 1089 @LENGTH@ 55


UPD Block@@ThenBody:{  boolean valvestartwritten=false;  for (  final Property valve : node.get(VALVE).asPropertyList()) {    final ModelNode config=valve.getValue();    writer.writeStartElement(Element.VALVE.getLocalName());    valvestartwritten=true;    writer.writeAttribute(NAME,valve.getName());    for (    SimpleAttributeDefinition attr : WebValveDefinition.ATTRIBUTES) {      attr.marshallAsAttribute(config,false,writer);    }    if (config.hasDefined(PARAM)) {      for (      final Property entry : config.get(PARAM).asPropertyList()) {        writer.writeEmptyElement(Element.PARAM.getLocalName());        writer.writeAttribute(Attribute.PARAM_NAME.getLocalName(),entry.getName());        writer.writeAttribute(Attribute.PARAM_VALUE.getLocalName(),entry.getValue().asString());      }    }  }  if (valvestartwritten)   writer.writeEndElement();} @TO@ ThenBody:{  for (  final Property valve : node.get(VALVE).asPropertyList()) {    final ModelNode config=valve.getValue();    writer.writeStartElement(Element.VALVE.getLocalName());    writer.writeAttribute(NAME,valve.getName());    for (    SimpleAttributeDefinition attr : WebValveDefinition.ATTRIBUTES) {      attr.marshallAsAttribute(config,false,writer);    }    if (config.hasDefined(PARAM)) {      for (      final Property entry : config.get(PARAM).asPropertyList()) {        writer.writeEmptyElement(Element.PARAM.getLocalName());        writer.writeAttribute(Attribute.PARAM_NAME.getLocalName(),entry.getName());        writer.writeAttribute(Attribute.PARAM_VALUE.getLocalName(),entry.getValue().asString());      }    }    writer.writeEndElement();  }} @AT@ 11330 @LENGTH@ 1184
---DEL VariableDeclarationStatement@@boolean valvestartwritten=false; @AT@ 11348 @LENGTH@ 34
------DEL PrimitiveType@@boolean @AT@ 11348 @LENGTH@ 7
------DEL VariableDeclarationFragment@@valvestartwritten=false @AT@ 11356 @LENGTH@ 25
---------DEL SimpleName@@valvestartwritten @AT@ 11356 @LENGTH@ 17
---------DEL BooleanLiteral@@false @AT@ 11376 @LENGTH@ 5
---UPD EnhancedForStatement@@for (final Property valve : node.get(VALVE).asPropertyList()) {  final ModelNode config=valve.getValue();  writer.writeStartElement(Element.VALVE.getLocalName());  valvestartwritten=true;  writer.writeAttribute(NAME,valve.getName());  for (  SimpleAttributeDefinition attr : WebValveDefinition.ATTRIBUTES) {    attr.marshallAsAttribute(config,false,writer);  }  if (config.hasDefined(PARAM)) {    for (    final Property entry : config.get(PARAM).asPropertyList()) {      writer.writeEmptyElement(Element.PARAM.getLocalName());      writer.writeAttribute(Attribute.PARAM_NAME.getLocalName(),entry.getName());      writer.writeAttribute(Attribute.PARAM_VALUE.getLocalName(),entry.getValue().asString());    }  }} @TO@ for (final Property valve : node.get(VALVE).asPropertyList()) {  final ModelNode config=valve.getValue();  writer.writeStartElement(Element.VALVE.getLocalName());  writer.writeAttribute(NAME,valve.getName());  for (  SimpleAttributeDefinition attr : WebValveDefinition.ATTRIBUTES) {    attr.marshallAsAttribute(config,false,writer);  }  if (config.hasDefined(PARAM)) {    for (    final Property entry : config.get(PARAM).asPropertyList()) {      writer.writeEmptyElement(Element.PARAM.getLocalName());      writer.writeAttribute(Attribute.PARAM_NAME.getLocalName(),entry.getName());      writer.writeAttribute(Attribute.PARAM_VALUE.getLocalName(),entry.getValue().asString());    }  }  writer.writeEndElement();} @AT@ 11399 @LENGTH@ 1016
------UPD ExpressionStatement@@Assignment:valvestartwritten=true @TO@ MethodInvocation:writer.writeEndElement() @AT@ 11622 @LENGTH@ 25
---------DEL Assignment@@valvestartwritten=true @AT@ 11622 @LENGTH@ 24
------------DEL SimpleName@@valvestartwritten @AT@ 11622 @LENGTH@ 17
------------DEL Operator@@= @AT@ 11639 @LENGTH@ 1
------------DEL BooleanLiteral@@true @AT@ 11642 @LENGTH@ 4
---------MOV MethodInvocation@@writer.writeEndElement() @TO@ ExpressionStatement@@Assignment:valvestartwritten=true @AT@ 12475 @LENGTH@ 24
------MOV ExpressionStatement@@Assignment:valvestartwritten=true @TO@ EnhancedForStatement@@for (final Property valve : node.get(VALVE).asPropertyList()) {  final ModelNode config=valve.getValue();  writer.writeStartElement(Element.VALVE.getLocalName());  valvestartwritten=true;  writer.writeAttribute(NAME,valve.getName());  for (  SimpleAttributeDefinition attr : WebValveDefinition.ATTRIBUTES) {    attr.marshallAsAttribute(config,false,writer);  }  if (config.hasDefined(PARAM)) {    for (    final Property entry : config.get(PARAM).asPropertyList()) {      writer.writeEmptyElement(Element.PARAM.getLocalName());      writer.writeAttribute(Attribute.PARAM_NAME.getLocalName(),entry.getName());      writer.writeAttribute(Attribute.PARAM_VALUE.getLocalName(),entry.getValue().asString());    }  }} @AT@ 11622 @LENGTH@ 25
---DEL IfStatement@@if (valvestartwritten) writer.writeEndElement(); @AT@ 12432 @LENGTH@ 68
------DEL SimpleName@@valvestartwritten @AT@ 12436 @LENGTH@ 17
------DEL Block@@ThenBody:writer.writeEndElement(); @AT@ 12475 @LENGTH@ 25


INS IfStatement@@if (!getChannels().isEmpty()) {  jedisPubSub.unsubscribe();} @TO@ MethodDeclaration@@protected, void, MethodName:doClose,  @AT@ 1267 @LENGTH@ 64
---INS PrefixExpression@@!getChannels().isEmpty() @TO@ IfStatement@@if (!getChannels().isEmpty()) {  jedisPubSub.unsubscribe();} @AT@ 1270 @LENGTH@ 24
------INS Operator@@! @TO@ PrefixExpression@@!getChannels().isEmpty() @AT@ 1270 @LENGTH@ 1
------INS MethodInvocation@@getChannels().isEmpty() @TO@ PrefixExpression@@!getChannels().isEmpty() @AT@ 1271 @LENGTH@ 23
---------INS MethodInvocation@@MethodName:getChannels:[] @TO@ MethodInvocation@@getChannels().isEmpty() @AT@ 1271 @LENGTH@ 13
---------INS SimpleName@@MethodName:isEmpty:[] @TO@ MethodInvocation@@getChannels().isEmpty() @AT@ 1285 @LENGTH@ 9
---INS Block@@ThenBody:{  jedisPubSub.unsubscribe();} @TO@ IfStatement@@if (!getChannels().isEmpty()) {  jedisPubSub.unsubscribe();} @AT@ 1296 @LENGTH@ 35
------MOV ExpressionStatement@@MethodInvocation:jedisPubSub.unsubscribe() @TO@ Block@@ThenBody:{  jedisPubSub.unsubscribe();} @AT@ 1267 @LENGTH@ 26


UPD ReturnStatement@@MethodInvocation:receive(1) @TO@ MethodInvocation:receive(JmsTemplate.RECEIVE_TIMEOUT_NO_WAIT) @AT@ 1599 @LENGTH@ 18
---UPD MethodInvocation@@receive(1) @TO@ receive(JmsTemplate.RECEIVE_TIMEOUT_NO_WAIT) @AT@ 1606 @LENGTH@ 10
------UPD SimpleName@@MethodName:receive:[1] @TO@ MethodName:receive:[JmsTemplate.RECEIVE_TIMEOUT_NO_WAIT] @AT@ 1606 @LENGTH@ 10
---------INS QualifiedName@@JmsTemplate.RECEIVE_TIMEOUT_NO_WAIT @TO@ SimpleName@@MethodName:receive:[1] @AT@ 1614 @LENGTH@ 35
------------INS SimpleName@@JmsTemplate @TO@ QualifiedName@@JmsTemplate.RECEIVE_TIMEOUT_NO_WAIT @AT@ 1614 @LENGTH@ 11
------------INS SimpleName@@RECEIVE_TIMEOUT_NO_WAIT @TO@ QualifiedName@@JmsTemplate.RECEIVE_TIMEOUT_NO_WAIT @AT@ 1626 @LENGTH@ 23
---------DEL NumberLiteral@@1 @AT@ 1614 @LENGTH@ 1


UPD FieldDeclaration@@public, static, final, SimpleAttributeDefinition, [DISCOVERY_GROUP_NAME=create(CommonAttributes.DISCOVERY_GROUP_NAME,STRING).setAllowNull(true).setAlternatives(STATIC_CONNECTORS).setAttributeMarshaller(AttributeMarshallers.DISCOVERY_GROUP_MARSHALLER).setRestartAllServices().build()] @TO@ public, static, final, SimpleAttributeDefinition, [DISCOVERY_GROUP_NAME=create(CommonAttributes.DISCOVERY_GROUP_NAME,STRING).setAllowNull(true).setAlternatives(ALLOW_DIRECT_CONNECTIONS_ONLY.getName(),CONNECTOR_REFS.getName()).setAttributeMarshaller(AttributeMarshallers.DISCOVERY_GROUP_MARSHALLER).setRestartAllServices().build()] @AT@ 5732 @LENGTH@ 346
---UPD VariableDeclarationFragment@@DISCOVERY_GROUP_NAME=create(CommonAttributes.DISCOVERY_GROUP_NAME,STRING).setAllowNull(true).setAlternatives(STATIC_CONNECTORS).setAttributeMarshaller(AttributeMarshallers.DISCOVERY_GROUP_MARSHALLER).setRestartAllServices().build() @TO@ DISCOVERY_GROUP_NAME=create(CommonAttributes.DISCOVERY_GROUP_NAME,STRING).setAllowNull(true).setAlternatives(ALLOW_DIRECT_CONNECTIONS_ONLY.getName(),CONNECTOR_REFS.getName()).setAttributeMarshaller(AttributeMarshallers.DISCOVERY_GROUP_MARSHALLER).setRestartAllServices().build() @AT@ 5778 @LENGTH@ 299
------UPD MethodInvocation@@create(CommonAttributes.DISCOVERY_GROUP_NAME,STRING).setAllowNull(true).setAlternatives(STATIC_CONNECTORS).setAttributeMarshaller(AttributeMarshallers.DISCOVERY_GROUP_MARSHALLER).setRestartAllServices().build() @TO@ create(CommonAttributes.DISCOVERY_GROUP_NAME,STRING).setAllowNull(true).setAlternatives(ALLOW_DIRECT_CONNECTIONS_ONLY.getName(),CONNECTOR_REFS.getName()).setAttributeMarshaller(AttributeMarshallers.DISCOVERY_GROUP_MARSHALLER).setRestartAllServices().build() @AT@ 5801 @LENGTH@ 276
---------UPD MethodInvocation@@MethodName:setAlternatives:[STATIC_CONNECTORS] @TO@ MethodName:setAlternatives:[ALLOW_DIRECT_CONNECTIONS_ONLY.getName(), CONNECTOR_REFS.getName()] @AT@ 5801 @LENGTH@ 133
------------UPD SimpleName@@STATIC_CONNECTORS @TO@ Name:CONNECTOR_REFS @AT@ 5916 @LENGTH@ 17
------------INS MethodInvocation@@ALLOW_DIRECT_CONNECTIONS_ONLY.getName() @TO@ MethodInvocation@@MethodName:setAlternatives:[STATIC_CONNECTORS] @AT@ 6059 @LENGTH@ 39
---------------INS SimpleName@@Name:ALLOW_DIRECT_CONNECTIONS_ONLY @TO@ MethodInvocation@@ALLOW_DIRECT_CONNECTIONS_ONLY.getName() @AT@ 6059 @LENGTH@ 29
---------------INS SimpleName@@MethodName:getName:[] @TO@ MethodInvocation@@ALLOW_DIRECT_CONNECTIONS_ONLY.getName() @AT@ 6089 @LENGTH@ 9
------------INS MethodInvocation@@CONNECTOR_REFS.getName() @TO@ MethodInvocation@@MethodName:setAlternatives:[STATIC_CONNECTORS] @AT@ 6100 @LENGTH@ 24
---------------MOV SimpleName@@STATIC_CONNECTORS @TO@ MethodInvocation@@CONNECTOR_REFS.getName() @AT@ 5916 @LENGTH@ 17
---------------INS SimpleName@@MethodName:getName:[] @TO@ MethodInvocation@@CONNECTOR_REFS.getName() @AT@ 6115 @LENGTH@ 9


UPD ReturnStatement@@MethodInvocation:FunctorUtils.copy(iTransformers) @TO@ MethodInvocation:FunctorUtils.<T,T>copy(iTransformers) @AT@ 4449 @LENGTH@ 40
---UPD MethodInvocation@@FunctorUtils.copy(iTransformers) @TO@ FunctorUtils.<T,T>copy(iTransformers) @AT@ 4456 @LENGTH@ 32


INS MethodDeclaration@@public, void, MethodName:testExecute,  @TO@ TypeDeclaration@@[@RunWith(SpringJUnit4ClassRunner.class), @ContextConfiguration, public]RjcConnectionIntegrationTests, AbstractConnectionIntegrationTests @AT@ 3294 @LENGTH@ 218
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testExecute,  @AT@ 3294 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testExecute,  @AT@ 3301 @LENGTH@ 4
---INS SimpleName@@MethodName:testExecute @TO@ MethodDeclaration@@public, void, MethodName:testExecute,  @AT@ 3306 @LENGTH@ 11
---INS ExpressionStatement@@MethodInvocation:connection.set("foo","bar") @TO@ MethodDeclaration@@public, void, MethodName:testExecute,  @AT@ 3324 @LENGTH@ 29
------INS MethodInvocation@@connection.set("foo","bar") @TO@ ExpressionStatement@@MethodInvocation:connection.set("foo","bar") @AT@ 3324 @LENGTH@ 28
---------INS SimpleName@@Name:connection @TO@ MethodInvocation@@connection.set("foo","bar") @AT@ 3324 @LENGTH@ 10
---------INS SimpleName@@MethodName:set:["foo", "bar"] @TO@ MethodInvocation@@connection.set("foo","bar") @AT@ 3335 @LENGTH@ 17
------------INS StringLiteral@@"foo" @TO@ SimpleName@@MethodName:set:["foo", "bar"] @AT@ 3339 @LENGTH@ 5
------------INS StringLiteral@@"bar" @TO@ SimpleName@@MethodName:set:["foo", "bar"] @AT@ 3346 @LENGTH@ 5
---INS ExpressionStatement@@MethodInvocation:assertEquals(Arrays.asList(new Object[]{RjcUtils.decode("bar".getBytes())}),(List)connection.execute("GET",RjcUtils.decode("foo".getBytes()))) @TO@ MethodDeclaration@@public, void, MethodName:testExecute,  @AT@ 3356 @LENGTH@ 153
------INS MethodInvocation@@assertEquals(Arrays.asList(new Object[]{RjcUtils.decode("bar".getBytes())}),(List)connection.execute("GET",RjcUtils.decode("foo".getBytes()))) @TO@ ExpressionStatement@@MethodInvocation:assertEquals(Arrays.asList(new Object[]{RjcUtils.decode("bar".getBytes())}),(List)connection.execute("GET",RjcUtils.decode("foo".getBytes()))) @AT@ 3356 @LENGTH@ 152
---------INS SimpleName@@MethodName:assertEquals:[Arrays.asList(new Object[]{RjcUtils.decode("bar".getBytes())}), (List)connection.execute("GET",RjcUtils.decode("foo".getBytes()))] @TO@ MethodInvocation@@assertEquals(Arrays.asList(new Object[]{RjcUtils.decode("bar".getBytes())}),(List)connection.execute("GET",RjcUtils.decode("foo".getBytes()))) @AT@ 3356 @LENGTH@ 152
------------INS MethodInvocation@@Arrays.asList(new Object[]{RjcUtils.decode("bar".getBytes())}) @TO@ SimpleName@@MethodName:assertEquals:[Arrays.asList(new Object[]{RjcUtils.decode("bar".getBytes())}), (List)connection.execute("GET",RjcUtils.decode("foo".getBytes()))] @AT@ 3369 @LENGTH@ 65
---------------INS SimpleName@@Name:Arrays @TO@ MethodInvocation@@Arrays.asList(new Object[]{RjcUtils.decode("bar".getBytes())}) @AT@ 3369 @LENGTH@ 6
---------------INS SimpleName@@MethodName:asList:[new Object[]{RjcUtils.decode("bar".getBytes())}] @TO@ MethodInvocation@@Arrays.asList(new Object[]{RjcUtils.decode("bar".getBytes())}) @AT@ 3376 @LENGTH@ 58
------------------INS ArrayCreation@@new Object[]{RjcUtils.decode("bar".getBytes())} @TO@ SimpleName@@MethodName:asList:[new Object[]{RjcUtils.decode("bar".getBytes())}] @AT@ 3383 @LENGTH@ 50
---------------------INS ArrayType@@Object[] @TO@ ArrayCreation@@new Object[]{RjcUtils.decode("bar".getBytes())} @AT@ 3387 @LENGTH@ 8
------------------------INS SimpleType@@Object @TO@ ArrayType@@Object[] @AT@ 3387 @LENGTH@ 6
---------------------INS ArrayInitializer@@{RjcUtils.decode("bar".getBytes())} @TO@ ArrayCreation@@new Object[]{RjcUtils.decode("bar".getBytes())} @AT@ 3396 @LENGTH@ 37
------------------------INS MethodInvocation@@RjcUtils.decode("bar".getBytes()) @TO@ ArrayInitializer@@{RjcUtils.decode("bar".getBytes())} @AT@ 3398 @LENGTH@ 33
---------------------------INS SimpleName@@Name:RjcUtils @TO@ MethodInvocation@@RjcUtils.decode("bar".getBytes()) @AT@ 3398 @LENGTH@ 8
---------------------------INS SimpleName@@MethodName:decode:["bar".getBytes()] @TO@ MethodInvocation@@RjcUtils.decode("bar".getBytes()) @AT@ 3407 @LENGTH@ 24
------------------------------INS MethodInvocation@@"bar".getBytes() @TO@ SimpleName@@MethodName:decode:["bar".getBytes()] @AT@ 3414 @LENGTH@ 16
---------------------------------INS StringLiteral@@"bar" @TO@ MethodInvocation@@"bar".getBytes() @AT@ 3414 @LENGTH@ 5
---------------------------------INS SimpleName@@MethodName:getBytes:[] @TO@ MethodInvocation@@"bar".getBytes() @AT@ 3420 @LENGTH@ 10
------------INS CastExpression@@(List)connection.execute("GET",RjcUtils.decode("foo".getBytes())) @TO@ SimpleName@@MethodName:assertEquals:[Arrays.asList(new Object[]{RjcUtils.decode("bar".getBytes())}), (List)connection.execute("GET",RjcUtils.decode("foo".getBytes()))] @AT@ 3440 @LENGTH@ 67
---------------INS SimpleType@@List @TO@ CastExpression@@(List)connection.execute("GET",RjcUtils.decode("foo".getBytes())) @AT@ 3441 @LENGTH@ 4
---------------INS MethodInvocation@@connection.execute("GET",RjcUtils.decode("foo".getBytes())) @TO@ CastExpression@@(List)connection.execute("GET",RjcUtils.decode("foo".getBytes())) @AT@ 3447 @LENGTH@ 60
------------------INS SimpleName@@Name:connection @TO@ MethodInvocation@@connection.execute("GET",RjcUtils.decode("foo".getBytes())) @AT@ 3447 @LENGTH@ 10
------------------INS SimpleName@@MethodName:execute:["GET", RjcUtils.decode("foo".getBytes())] @TO@ MethodInvocation@@connection.execute("GET",RjcUtils.decode("foo".getBytes())) @AT@ 3458 @LENGTH@ 49
---------------------INS StringLiteral@@"GET" @TO@ SimpleName@@MethodName:execute:["GET", RjcUtils.decode("foo".getBytes())] @AT@ 3466 @LENGTH@ 5
---------------------INS MethodInvocation@@RjcUtils.decode("foo".getBytes()) @TO@ SimpleName@@MethodName:execute:["GET", RjcUtils.decode("foo".getBytes())] @AT@ 3473 @LENGTH@ 33
------------------------INS SimpleName@@Name:RjcUtils @TO@ MethodInvocation@@RjcUtils.decode("foo".getBytes()) @AT@ 3473 @LENGTH@ 8
------------------------INS SimpleName@@MethodName:decode:["foo".getBytes()] @TO@ MethodInvocation@@RjcUtils.decode("foo".getBytes()) @AT@ 3482 @LENGTH@ 24
---------------------------INS MethodInvocation@@"foo".getBytes() @TO@ SimpleName@@MethodName:decode:["foo".getBytes()] @AT@ 3489 @LENGTH@ 16
------------------------------INS StringLiteral@@"foo" @TO@ MethodInvocation@@"foo".getBytes() @AT@ 3489 @LENGTH@ 5
------------------------------INS SimpleName@@MethodName:getBytes:[] @TO@ MethodInvocation@@"foo".getBytes() @AT@ 3495 @LENGTH@ 10


UPD IfStatement@@if (Integer.MIN_VALUE == retval) {  retval=Integer.MAX_VALUE;} else {  retval*=-1;} @TO@ if (retval > 0) {  retval=-1;} else {  retval=1;} @AT@ 10276 @LENGTH@ 175
---UPD InfixExpression@@Integer.MIN_VALUE == retval @TO@ retval > 0 @AT@ 10280 @LENGTH@ 27
------DEL QualifiedName@@Integer.MIN_VALUE @AT@ 10280 @LENGTH@ 17
---------DEL SimpleName@@Integer @AT@ 10280 @LENGTH@ 7
---------DEL SimpleName@@MIN_VALUE @AT@ 10288 @LENGTH@ 9
------INS SimpleName@@retval @TO@ InfixExpression@@Integer.MIN_VALUE == retval @AT@ 10280 @LENGTH@ 6
------INS NumberLiteral@@0 @TO@ InfixExpression@@Integer.MIN_VALUE == retval @AT@ 10289 @LENGTH@ 1
------UPD Operator@@== @TO@ > @AT@ 10297 @LENGTH@ 2
------DEL SimpleName@@retval @AT@ 10301 @LENGTH@ 6
---UPD Block@@ThenBody:{  retval=Integer.MAX_VALUE;} @TO@ ThenBody:{  retval=-1;} @AT@ 10309 @LENGTH@ 75
------UPD ExpressionStatement@@Assignment:retval=Integer.MAX_VALUE @TO@ Assignment:retval=-1 @AT@ 10335 @LENGTH@ 27
---------UPD Assignment@@retval=Integer.MAX_VALUE @TO@ retval=-1 @AT@ 10335 @LENGTH@ 26
------------INS PrefixExpression@@-1 @TO@ Assignment@@retval=Integer.MAX_VALUE @AT@ 10327 @LENGTH@ 2
---------------INS Operator@@- @TO@ PrefixExpression@@-1 @AT@ 10327 @LENGTH@ 1
---------------INS NumberLiteral@@1 @TO@ PrefixExpression@@-1 @AT@ 10328 @LENGTH@ 1
------------DEL QualifiedName@@Integer.MAX_VALUE @AT@ 10344 @LENGTH@ 17
---------------DEL SimpleName@@Integer @AT@ 10344 @LENGTH@ 7
---------------DEL SimpleName@@MAX_VALUE @AT@ 10352 @LENGTH@ 9
---UPD Block@@ElseBody:{  retval*=-1;} @TO@ ElseBody:{  retval=1;} @AT@ 10390 @LENGTH@ 61
------UPD ExpressionStatement@@Assignment:retval*=-1 @TO@ Assignment:retval=1 @AT@ 10416 @LENGTH@ 13
---------UPD Assignment@@retval*=-1 @TO@ retval=1 @AT@ 10416 @LENGTH@ 12
------------INS NumberLiteral@@1 @TO@ Assignment@@retval*=-1 @AT@ 10393 @LENGTH@ 1
------------UPD Operator@@*= @TO@ = @AT@ 10422 @LENGTH@ 2
------------DEL PrefixExpression@@-1 @AT@ 10426 @LENGTH@ 2
---------------DEL Operator@@- @AT@ 10426 @LENGTH@ 1
---------------DEL NumberLiteral@@1 @AT@ 10427 @LENGTH@ 1


INS ExpressionStatement@@MethodInvocation:context.attachIfAbsent(CompositeOperationHandler.DOMAIN_EXECUTION_KEY,Boolean.TRUE) @TO@ MethodDeclaration@@public, void, MethodName:execute, final OperationContext context, final ModelNode operation, OperationFailedException,  @AT@ 3412 @LENGTH@ 85
---INS MethodInvocation@@context.attachIfAbsent(CompositeOperationHandler.DOMAIN_EXECUTION_KEY,Boolean.TRUE) @TO@ ExpressionStatement@@MethodInvocation:context.attachIfAbsent(CompositeOperationHandler.DOMAIN_EXECUTION_KEY,Boolean.TRUE) @AT@ 3412 @LENGTH@ 84
------INS SimpleName@@Name:context @TO@ MethodInvocation@@context.attachIfAbsent(CompositeOperationHandler.DOMAIN_EXECUTION_KEY,Boolean.TRUE) @AT@ 3412 @LENGTH@ 7
------INS SimpleName@@MethodName:attachIfAbsent:[CompositeOperationHandler.DOMAIN_EXECUTION_KEY, Boolean.TRUE] @TO@ MethodInvocation@@context.attachIfAbsent(CompositeOperationHandler.DOMAIN_EXECUTION_KEY,Boolean.TRUE) @AT@ 3420 @LENGTH@ 76
---------INS QualifiedName@@CompositeOperationHandler.DOMAIN_EXECUTION_KEY @TO@ SimpleName@@MethodName:attachIfAbsent:[CompositeOperationHandler.DOMAIN_EXECUTION_KEY, Boolean.TRUE] @AT@ 3435 @LENGTH@ 46
------------INS SimpleName@@CompositeOperationHandler @TO@ QualifiedName@@CompositeOperationHandler.DOMAIN_EXECUTION_KEY @AT@ 3435 @LENGTH@ 25
------------INS SimpleName@@DOMAIN_EXECUTION_KEY @TO@ QualifiedName@@CompositeOperationHandler.DOMAIN_EXECUTION_KEY @AT@ 3461 @LENGTH@ 20
---------INS QualifiedName@@Boolean.TRUE @TO@ SimpleName@@MethodName:attachIfAbsent:[CompositeOperationHandler.DOMAIN_EXECUTION_KEY, Boolean.TRUE] @AT@ 3483 @LENGTH@ 12
------------INS SimpleName@@Boolean @TO@ QualifiedName@@Boolean.TRUE @AT@ 3483 @LENGTH@ 7
------------INS SimpleName@@TRUE @TO@ QualifiedName@@Boolean.TRUE @AT@ 3491 @LENGTH@ 4


MOV ExpressionStatement@@MethodInvocation:aggregationRepository.remove(aggregated.getContext(),key,original) @TO@ MethodDeclaration@@protected, void, MethodName:onCompletion, final String key, final Exchange original, final Exchange aggregated, boolean fromTimeout,  @AT@ 18928 @LENGTH@ 69


UPD TypeDeclaration@@[@RunWith(Arquillian.class), @RunAsClient, @ServerSetup(ValveUnitTestCase.ValveSetup.class), @Ignore("We don't support valves yet in undertow"), public]ValveUnitTestCase,  @TO@ [@RunWith(Arquillian.class), @RunAsClient, @ServerSetup(ValveUnitTestCase.ValveSetup.class), @Ignore("AS7-6797 Undertow - valves"), public]ValveUnitTestCase,  @AT@ 2259 @LENGTH@ 3428
---UPD SingleMemberAnnotation@@@Ignore("We don't support valves yet in undertow") @TO@ @Ignore("AS7-6797 Undertow - valves") @AT@ 2348 @LENGTH@ 50


UPD ExpressionStatement@@Assignment:content=exchange.getContext().getTypeConverter().mandatoryConvertTo(byte[].class,exchange,file.getFile()) @TO@ Assignment:content=exchange.getContext().getTypeConverter().mandatoryConvertTo(byte[].class,exchange,file) @AT@ 2290 @LENGTH@ 110
---UPD Assignment@@content=exchange.getContext().getTypeConverter().mandatoryConvertTo(byte[].class,exchange,file.getFile()) @TO@ content=exchange.getContext().getTypeConverter().mandatoryConvertTo(byte[].class,exchange,file) @AT@ 2290 @LENGTH@ 109
------UPD MethodInvocation@@exchange.getContext().getTypeConverter().mandatoryConvertTo(byte[].class,exchange,file.getFile()) @TO@ exchange.getContext().getTypeConverter().mandatoryConvertTo(byte[].class,exchange,file) @AT@ 2300 @LENGTH@ 99
---------UPD SimpleName@@MethodName:mandatoryConvertTo:[byte[].class, exchange, file.getFile()] @TO@ MethodName:mandatoryConvertTo:[byte[].class, exchange, file] @AT@ 2341 @LENGTH@ 58
------------DEL MethodInvocation@@file.getFile() @AT@ 2384 @LENGTH@ 14
---------------DEL SimpleName@@Name:file @AT@ 2384 @LENGTH@ 4
---------------DEL SimpleName@@MethodName:getFile:[] @AT@ 2389 @LENGTH@ 9
------------INS SimpleName@@file @TO@ SimpleName@@MethodName:mandatoryConvertTo:[byte[].class, exchange, file.getFile()] @AT@ 2385 @LENGTH@ 4


UPD ExpressionStatement@@MethodInvocation:DeploymentOverlayDeploymentAdd.installServices(context,null,null,name,deploymentOverlay,regularExpression,priority) @TO@ MethodInvocation:DeploymentOverlayDeploymentAdd.installServices(context,null,null,name,deploymentOverlay,priority) @AT@ 2540 @LENGTH@ 122
---UPD MethodInvocation@@DeploymentOverlayDeploymentAdd.installServices(context,null,null,name,deploymentOverlay,regularExpression,priority) @TO@ DeploymentOverlayDeploymentAdd.installServices(context,null,null,name,deploymentOverlay,priority) @AT@ 2540 @LENGTH@ 121
------UPD SimpleName@@MethodName:installServices:[context, null, null, name, deploymentOverlay, regularExpression, priority] @TO@ MethodName:installServices:[context, null, null, name, deploymentOverlay, priority] @AT@ 2571 @LENGTH@ 90
---------DEL SimpleName@@regularExpression @AT@ 2633 @LENGTH@ 17


UPD FieldDeclaration@@private, static, final, String, [OLD_VERSION="7.0.0.fuse-061"] @TO@ private, static, final, String, [OLD_VERSION="7.1.0.fuse-047"] @AT@ 2116 @LENGTH@ 59
---UPD VariableDeclarationFragment@@OLD_VERSION="7.0.0.fuse-061" @TO@ OLD_VERSION="7.1.0.fuse-047" @AT@ 2144 @LENGTH@ 30
------UPD StringLiteral@@"7.0.0.fuse-061" @TO@ "7.1.0.fuse-047" @AT@ 2158 @LENGTH@ 16


INS IfStatement@@if (config.isReturnBodyOnCreate()) {  return resourceResponse(headers,new PersistentEntityResource<Object>(repoRequest.getPersistentEntity(),obj,selfLink).setBaseUri(repoRequest.getBaseUri()),HttpStatus.CREATED);} else {  return resourceResponse(headers,null,HttpStatus.CREATED);} @TO@ MethodDeclaration@@public, ResponseEntity<Resource<?>>, MethodName:createNewEntity, RepositoryRestRequest repoRequest, PersistentEntityResource<?> incoming,  @AT@ 7530 @LENGTH@ 594
---INS MethodInvocation@@config.isReturnBodyOnCreate() @TO@ IfStatement@@if (config.isReturnBodyOnCreate()) {  return resourceResponse(headers,new PersistentEntityResource<Object>(repoRequest.getPersistentEntity(),obj,selfLink).setBaseUri(repoRequest.getBaseUri()),HttpStatus.CREATED);} else {  return resourceResponse(headers,null,HttpStatus.CREATED);} @AT@ 7533 @LENGTH@ 29
------INS SimpleName@@Name:config @TO@ MethodInvocation@@config.isReturnBodyOnCreate() @AT@ 7533 @LENGTH@ 6
------INS SimpleName@@MethodName:isReturnBodyOnCreate:[] @TO@ MethodInvocation@@config.isReturnBodyOnCreate() @AT@ 7540 @LENGTH@ 22
---INS Block@@ThenBody:{  return resourceResponse(headers,new PersistentEntityResource<Object>(repoRequest.getPersistentEntity(),obj,selfLink).setBaseUri(repoRequest.getBaseUri()),HttpStatus.CREATED);} @TO@ IfStatement@@if (config.isReturnBodyOnCreate()) {  return resourceResponse(headers,new PersistentEntityResource<Object>(repoRequest.getPersistentEntity(),obj,selfLink).setBaseUri(repoRequest.getBaseUri()),HttpStatus.CREATED);} else {  return resourceResponse(headers,null,HttpStatus.CREATED);} @AT@ 7564 @LENGTH@ 421
------MOV ReturnStatement@@MethodInvocation:resourceResponse(headers,new PersistentEntityResource<Object>(repoRequest.getPersistentEntity(),obj,selfLink).setBaseUri(repoRequest.getBaseUri()),HttpStatus.CREATED) @TO@ Block@@ThenBody:{  return resourceResponse(headers,new PersistentEntityResource<Object>(repoRequest.getPersistentEntity(),obj,selfLink).setBaseUri(repoRequest.getBaseUri()),HttpStatus.CREATED);} @AT@ 7530 @LENGTH@ 397
---INS Block@@ElseBody:{  return resourceResponse(headers,null,HttpStatus.CREATED);} @TO@ IfStatement@@if (config.isReturnBodyOnCreate()) {  return resourceResponse(headers,new PersistentEntityResource<Object>(repoRequest.getPersistentEntity(),obj,selfLink).setBaseUri(repoRequest.getBaseUri()),HttpStatus.CREATED);} else {  return resourceResponse(headers,null,HttpStatus.CREATED);} @AT@ 7991 @LENGTH@ 133
------INS ReturnStatement@@MethodInvocation:resourceResponse(headers,null,HttpStatus.CREATED) @TO@ Block@@ElseBody:{  return resourceResponse(headers,null,HttpStatus.CREATED);} @AT@ 7999 @LENGTH@ 119
---------INS MethodInvocation@@resourceResponse(headers,null,HttpStatus.CREATED) @TO@ ReturnStatement@@MethodInvocation:resourceResponse(headers,null,HttpStatus.CREATED) @AT@ 8006 @LENGTH@ 111
------------INS SimpleName@@MethodName:resourceResponse:[headers, null, HttpStatus.CREATED] @TO@ MethodInvocation@@resourceResponse(headers,null,HttpStatus.CREATED) @AT@ 8006 @LENGTH@ 111
---------------INS SimpleName@@headers @TO@ SimpleName@@MethodName:resourceResponse:[headers, null, HttpStatus.CREATED] @AT@ 8023 @LENGTH@ 7
---------------INS NullLiteral@@null @TO@ SimpleName@@MethodName:resourceResponse:[headers, null, HttpStatus.CREATED] @AT@ 8062 @LENGTH@ 4
---------------INS QualifiedName@@HttpStatus.CREATED @TO@ SimpleName@@MethodName:resourceResponse:[headers, null, HttpStatus.CREATED] @AT@ 8098 @LENGTH@ 18
------------------INS SimpleName@@HttpStatus @TO@ QualifiedName@@HttpStatus.CREATED @AT@ 8098 @LENGTH@ 10
------------------INS SimpleName@@CREATED @TO@ QualifiedName@@HttpStatus.CREATED @AT@ 8109 @LENGTH@ 7


UPD ExpressionStatement@@MethodInvocation:this.setExecutionContextName(ClassUtils.getShortName(this.getClass())) @TO@ MethodInvocation:this.setExecutionContextName(ChunkMonitor.class.getName()) @AT@ 2169 @LENGTH@ 71
---UPD MethodInvocation@@this.setExecutionContextName(ClassUtils.getShortName(this.getClass())) @TO@ this.setExecutionContextName(ChunkMonitor.class.getName()) @AT@ 2169 @LENGTH@ 70
------UPD SimpleName@@MethodName:setExecutionContextName:[ClassUtils.getShortName(this.getClass())] @TO@ MethodName:setExecutionContextName:[ChunkMonitor.class.getName()] @AT@ 2174 @LENGTH@ 65
---------UPD MethodInvocation@@ClassUtils.getShortName(this.getClass()) @TO@ ChunkMonitor.class.getName() @AT@ 2198 @LENGTH@ 40
------------INS TypeLiteral@@ChunkMonitor.class @TO@ MethodInvocation@@ClassUtils.getShortName(this.getClass()) @AT@ 2198 @LENGTH@ 18
------------DEL SimpleName@@Name:ClassUtils @AT@ 2198 @LENGTH@ 10
------------DEL SimpleName@@MethodName:getShortName:[this.getClass()] @AT@ 2209 @LENGTH@ 29
---------------DEL MethodInvocation@@this.getClass() @AT@ 2222 @LENGTH@ 15
------------------DEL ThisExpression@@this @AT@ 2222 @LENGTH@ 4
------------MOV SimpleName@@MethodName:getClass:[] @TO@ MethodInvocation@@ClassUtils.getShortName(this.getClass()) @AT@ 2227 @LENGTH@ 10


UPD ExpressionStatement@@Assignment:transformedOp=Util.createEmptyOperation(COMPOSITE,pa) @TO@ Assignment:transformedOp=Util.createEmptyOperation(COMPOSITE,null) @AT@ 19398 @LENGTH@ 57
---UPD Assignment@@transformedOp=Util.createEmptyOperation(COMPOSITE,pa) @TO@ transformedOp=Util.createEmptyOperation(COMPOSITE,null) @AT@ 19398 @LENGTH@ 56
------UPD MethodInvocation@@Util.createEmptyOperation(COMPOSITE,pa) @TO@ Util.createEmptyOperation(COMPOSITE,null) @AT@ 19414 @LENGTH@ 40
---------UPD SimpleName@@MethodName:createEmptyOperation:[COMPOSITE, pa] @TO@ MethodName:createEmptyOperation:[COMPOSITE, null] @AT@ 19419 @LENGTH@ 35
------------INS NullLiteral@@null @TO@ SimpleName@@MethodName:createEmptyOperation:[COMPOSITE, pa] @AT@ 19451 @LENGTH@ 4
------------DEL SimpleName@@pa @AT@ 19451 @LENGTH@ 2


INS MethodDeclaration@@private, String, MethodName:assertParameterJsonSchema, MBeanServer mbeanServer, ObjectName on, String componentName, Exception,  @TO@ TypeDeclaration@@[public]EndpointCompletionTest, ManagementTestSupport @AT@ 3427 @LENGTH@ 487
---INS Modifier@@private @TO@ MethodDeclaration@@private, String, MethodName:assertParameterJsonSchema, MBeanServer mbeanServer, ObjectName on, String componentName, Exception,  @AT@ 3427 @LENGTH@ 7
---INS SimpleType@@String @TO@ MethodDeclaration@@private, String, MethodName:assertParameterJsonSchema, MBeanServer mbeanServer, ObjectName on, String componentName, Exception,  @AT@ 3435 @LENGTH@ 6
---INS SimpleName@@MethodName:assertParameterJsonSchema @TO@ MethodDeclaration@@private, String, MethodName:assertParameterJsonSchema, MBeanServer mbeanServer, ObjectName on, String componentName, Exception,  @AT@ 3442 @LENGTH@ 25
---INS SingleVariableDeclaration@@MBeanServer mbeanServer @TO@ MethodDeclaration@@private, String, MethodName:assertParameterJsonSchema, MBeanServer mbeanServer, ObjectName on, String componentName, Exception,  @AT@ 3468 @LENGTH@ 23
------INS SimpleType@@MBeanServer @TO@ SingleVariableDeclaration@@MBeanServer mbeanServer @AT@ 3468 @LENGTH@ 11
------INS SimpleName@@mbeanServer @TO@ SingleVariableDeclaration@@MBeanServer mbeanServer @AT@ 3480 @LENGTH@ 11
---INS SingleVariableDeclaration@@ObjectName on @TO@ MethodDeclaration@@private, String, MethodName:assertParameterJsonSchema, MBeanServer mbeanServer, ObjectName on, String componentName, Exception,  @AT@ 3493 @LENGTH@ 13
------INS SimpleType@@ObjectName @TO@ SingleVariableDeclaration@@ObjectName on @AT@ 3493 @LENGTH@ 10
------INS SimpleName@@on @TO@ SingleVariableDeclaration@@ObjectName on @AT@ 3504 @LENGTH@ 2
---INS SingleVariableDeclaration@@String componentName @TO@ MethodDeclaration@@private, String, MethodName:assertParameterJsonSchema, MBeanServer mbeanServer, ObjectName on, String componentName, Exception,  @AT@ 3508 @LENGTH@ 20
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String componentName @AT@ 3508 @LENGTH@ 6
------INS SimpleName@@componentName @TO@ SingleVariableDeclaration@@String componentName @AT@ 3515 @LENGTH@ 13
---INS SimpleType@@Exception @TO@ MethodDeclaration@@private, String, MethodName:assertParameterJsonSchema, MBeanServer mbeanServer, ObjectName on, String componentName, Exception,  @AT@ 3549 @LENGTH@ 9
---INS VariableDeclarationStatement@@Object[] params={componentName}; @TO@ MethodDeclaration@@private, String, MethodName:assertParameterJsonSchema, MBeanServer mbeanServer, ObjectName on, String componentName, Exception,  @AT@ 3569 @LENGTH@ 34
------INS ArrayType@@Object[] @TO@ VariableDeclarationStatement@@Object[] params={componentName}; @AT@ 3569 @LENGTH@ 8
---------INS SimpleType@@Object @TO@ ArrayType@@Object[] @AT@ 3569 @LENGTH@ 6
------INS VariableDeclarationFragment@@params={componentName} @TO@ VariableDeclarationStatement@@Object[] params={componentName}; @AT@ 3578 @LENGTH@ 24
---------INS SimpleName@@params @TO@ VariableDeclarationFragment@@params={componentName} @AT@ 3578 @LENGTH@ 6
---------INS ArrayInitializer@@{componentName} @TO@ VariableDeclarationFragment@@params={componentName} @AT@ 3587 @LENGTH@ 15
------------INS SimpleName@@componentName @TO@ ArrayInitializer@@{componentName} @AT@ 3588 @LENGTH@ 13
---INS VariableDeclarationStatement@@String[] signature={"java.lang.String"}; @TO@ MethodDeclaration@@private, String, MethodName:assertParameterJsonSchema, MBeanServer mbeanServer, ObjectName on, String componentName, Exception,  @AT@ 3612 @LENGTH@ 44
------INS ArrayType@@String[] @TO@ VariableDeclarationStatement@@String[] signature={"java.lang.String"}; @AT@ 3612 @LENGTH@ 8
---------INS SimpleType@@String @TO@ ArrayType@@String[] @AT@ 3612 @LENGTH@ 6
------INS VariableDeclarationFragment@@signature={"java.lang.String"} @TO@ VariableDeclarationStatement@@String[] signature={"java.lang.String"}; @AT@ 3621 @LENGTH@ 34
---------INS SimpleName@@signature @TO@ VariableDeclarationFragment@@signature={"java.lang.String"} @AT@ 3621 @LENGTH@ 9
---------INS ArrayInitializer@@{"java.lang.String"} @TO@ VariableDeclarationFragment@@signature={"java.lang.String"} @AT@ 3633 @LENGTH@ 22
------------INS StringLiteral@@"java.lang.String" @TO@ ArrayInitializer@@{"java.lang.String"} @AT@ 3635 @LENGTH@ 18
---INS VariableDeclarationStatement@@String answer=assertIsInstanceOf(String.class,mbeanServer.invoke(on,"componentParameterJsonSchema",params,signature)); @TO@ MethodDeclaration@@private, String, MethodName:assertParameterJsonSchema, MBeanServer mbeanServer, ObjectName on, String componentName, Exception,  @AT@ 3666 @LENGTH@ 140
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String answer=assertIsInstanceOf(String.class,mbeanServer.invoke(on,"componentParameterJsonSchema",params,signature)); @AT@ 3666 @LENGTH@ 6
------INS VariableDeclarationFragment@@answer=assertIsInstanceOf(String.class,mbeanServer.invoke(on,"componentParameterJsonSchema",params,signature)) @TO@ VariableDeclarationStatement@@String answer=assertIsInstanceOf(String.class,mbeanServer.invoke(on,"componentParameterJsonSchema",params,signature)); @AT@ 3673 @LENGTH@ 132
---------INS SimpleName@@answer @TO@ VariableDeclarationFragment@@answer=assertIsInstanceOf(String.class,mbeanServer.invoke(on,"componentParameterJsonSchema",params,signature)) @AT@ 3673 @LENGTH@ 6
---------INS MethodInvocation@@assertIsInstanceOf(String.class,mbeanServer.invoke(on,"componentParameterJsonSchema",params,signature)) @TO@ VariableDeclarationFragment@@answer=assertIsInstanceOf(String.class,mbeanServer.invoke(on,"componentParameterJsonSchema",params,signature)) @AT@ 3682 @LENGTH@ 123
------------INS SimpleName@@MethodName:assertIsInstanceOf:[String.class, mbeanServer.invoke(on,"componentParameterJsonSchema",params,signature)] @TO@ MethodInvocation@@assertIsInstanceOf(String.class,mbeanServer.invoke(on,"componentParameterJsonSchema",params,signature)) @AT@ 3682 @LENGTH@ 123
---------------INS TypeLiteral@@String.class @TO@ SimpleName@@MethodName:assertIsInstanceOf:[String.class, mbeanServer.invoke(on,"componentParameterJsonSchema",params,signature)] @AT@ 3701 @LENGTH@ 12
---------------INS MethodInvocation@@mbeanServer.invoke(on,"componentParameterJsonSchema",params,signature) @TO@ SimpleName@@MethodName:assertIsInstanceOf:[String.class, mbeanServer.invoke(on,"componentParameterJsonSchema",params,signature)] @AT@ 3731 @LENGTH@ 73
------------------INS SimpleName@@Name:mbeanServer @TO@ MethodInvocation@@mbeanServer.invoke(on,"componentParameterJsonSchema",params,signature) @AT@ 3731 @LENGTH@ 11
------------------INS SimpleName@@MethodName:invoke:[on, "componentParameterJsonSchema", params, signature] @TO@ MethodInvocation@@mbeanServer.invoke(on,"componentParameterJsonSchema",params,signature) @AT@ 3743 @LENGTH@ 61
---------------------INS SimpleName@@on @TO@ SimpleName@@MethodName:invoke:[on, "componentParameterJsonSchema", params, signature] @AT@ 3750 @LENGTH@ 2
---------------------INS StringLiteral@@"componentParameterJsonSchema" @TO@ SimpleName@@MethodName:invoke:[on, "componentParameterJsonSchema", params, signature] @AT@ 3754 @LENGTH@ 30
---------------------INS SimpleName@@params @TO@ SimpleName@@MethodName:invoke:[on, "componentParameterJsonSchema", params, signature] @AT@ 3786 @LENGTH@ 6
---------------------INS SimpleName@@signature @TO@ SimpleName@@MethodName:invoke:[on, "componentParameterJsonSchema", params, signature] @AT@ 3794 @LENGTH@ 9
---INS ExpressionStatement@@MethodInvocation:LOG.info("Component " + componentName + " returned JSON: "+ answer) @TO@ MethodDeclaration@@private, String, MethodName:assertParameterJsonSchema, MBeanServer mbeanServer, ObjectName on, String componentName, Exception,  @AT@ 3816 @LENGTH@ 69
------INS MethodInvocation@@LOG.info("Component " + componentName + " returned JSON: "+ answer) @TO@ ExpressionStatement@@MethodInvocation:LOG.info("Component " + componentName + " returned JSON: "+ answer) @AT@ 3816 @LENGTH@ 68
---------INS SimpleName@@Name:LOG @TO@ MethodInvocation@@LOG.info("Component " + componentName + " returned JSON: "+ answer) @AT@ 3816 @LENGTH@ 3
---------INS SimpleName@@MethodName:info:["Component " + componentName + " returned JSON: "+ answer] @TO@ MethodInvocation@@LOG.info("Component " + componentName + " returned JSON: "+ answer) @AT@ 3820 @LENGTH@ 64
------------INS InfixExpression@@"Component " + componentName + " returned JSON: "+ answer @TO@ SimpleName@@MethodName:info:["Component " + componentName + " returned JSON: "+ answer] @AT@ 3825 @LENGTH@ 58
---------------INS StringLiteral@@"Component " @TO@ InfixExpression@@"Component " + componentName + " returned JSON: "+ answer @AT@ 3825 @LENGTH@ 12
---------------INS Operator@@+ @TO@ InfixExpression@@"Component " + componentName + " returned JSON: "+ answer @AT@ 3837 @LENGTH@ 1
---------------INS SimpleName@@componentName @TO@ InfixExpression@@"Component " + componentName + " returned JSON: "+ answer @AT@ 3840 @LENGTH@ 13
---------------INS StringLiteral@@" returned JSON: " @TO@ InfixExpression@@"Component " + componentName + " returned JSON: "+ answer @AT@ 3856 @LENGTH@ 18
---------------INS SimpleName@@answer @TO@ InfixExpression@@"Component " + componentName + " returned JSON: "+ answer @AT@ 3877 @LENGTH@ 6
---INS ReturnStatement@@SimpleName:answer @TO@ MethodDeclaration@@private, String, MethodName:assertParameterJsonSchema, MBeanServer mbeanServer, ObjectName on, String componentName, Exception,  @AT@ 3894 @LENGTH@ 14
------INS SimpleName@@answer @TO@ ReturnStatement@@SimpleName:answer @AT@ 3901 @LENGTH@ 6


INS ExpressionStatement@@MethodInvocation:camelDataFormat.setLocale("en") @TO@ MethodDeclaration@@public, void, MethodName:configure,  @AT@ 3727 @LENGTH@ 32
---INS MethodInvocation@@camelDataFormat.setLocale("en") @TO@ ExpressionStatement@@MethodInvocation:camelDataFormat.setLocale("en") @AT@ 3727 @LENGTH@ 31
------INS SimpleName@@Name:camelDataFormat @TO@ MethodInvocation@@camelDataFormat.setLocale("en") @AT@ 3727 @LENGTH@ 15
------INS SimpleName@@MethodName:setLocale:["en"] @TO@ MethodInvocation@@camelDataFormat.setLocale("en") @AT@ 3743 @LENGTH@ 15
---------INS StringLiteral@@"en" @TO@ SimpleName@@MethodName:setLocale:["en"] @AT@ 3753 @LENGTH@ 4


UPD MethodDeclaration@@public, void, MethodName:testCreatModeExtraction,  @TO@ public, void, MethodName:testCreateModeExtraction,  @AT@ 1261 @LENGTH@ 616
---UPD SimpleName@@MethodName:testCreatModeExtraction @TO@ MethodName:testCreateModeExtraction @AT@ 1273 @LENGTH@ 23


UPD TypeDeclaration@@[public]MultiKeyMap, AbstractMapDecorator<MultiKey<? extends K>,V>[IterableMap<MultiKey<? extends K>,V>, Serializable] @TO@ [public]MultiKeyMap, AbstractMapDecorator<MultiKey<? extends K>,V>[IterableMap<MultiKey<? extends K>,V>, Serializable, Cloneable] @AT@ 3385 @LENGTH@ 30089
---INS SimpleType@@Cloneable @TO@ TypeDeclaration@@[public]MultiKeyMap, AbstractMapDecorator<MultiKey<? extends K>,V>[IterableMap<MultiKey<? extends K>,V>, Serializable] @AT@ 3543 @LENGTH@ 9


UPD MethodDeclaration@@static, Map<byte[],byte[]>, MethodName:toMap, Object[] byteArrays,  @TO@ static, Map<byte[],byte[]>, MethodName:toMap, Reply[] byteArrays,  @AT@ 4831 @LENGTH@ 272
---UPD SingleVariableDeclaration@@Object[] byteArrays @TO@ Reply[] byteArrays @AT@ 4864 @LENGTH@ 19
------UPD ArrayType@@Object[] @TO@ Reply[] @AT@ 4864 @LENGTH@ 8
---------UPD SimpleType@@Object @TO@ Reply @AT@ 4864 @LENGTH@ 6
---UPD ForStatement@@for (int i=0; i < byteArrays.length; i++) {  map.put((byte[])byteArrays[i++],(byte[])byteArrays[i]);} @TO@ for (int i=0; i < byteArrays.length; i++) {  map.put((byte[])byteArrays[i++].data(),(byte[])byteArrays[i].data());} @AT@ 4975 @LENGTH@ 111
------UPD ExpressionStatement@@MethodInvocation:map.put((byte[])byteArrays[i++],(byte[])byteArrays[i]) @TO@ MethodInvocation:map.put((byte[])byteArrays[i++].data(),(byte[])byteArrays[i].data()) @AT@ 5024 @LENGTH@ 58
---------UPD MethodInvocation@@map.put((byte[])byteArrays[i++],(byte[])byteArrays[i]) @TO@ map.put((byte[])byteArrays[i++].data(),(byte[])byteArrays[i].data()) @AT@ 5024 @LENGTH@ 57
------------UPD SimpleName@@MethodName:put:[(byte[])byteArrays[i++], (byte[])byteArrays[i]] @TO@ MethodName:put:[(byte[])byteArrays[i++].data(), (byte[])byteArrays[i].data()] @AT@ 5028 @LENGTH@ 53
---------------UPD CastExpression@@(byte[])byteArrays[i++] @TO@ (byte[])byteArrays[i++].data() @AT@ 5032 @LENGTH@ 24
------------------INS MethodInvocation@@byteArrays[i++].data() @TO@ CastExpression@@(byte[])byteArrays[i++] @AT@ 5040 @LENGTH@ 22
---------------------MOV ArrayAccess@@byteArrays[i++] @TO@ MethodInvocation@@byteArrays[i++].data() @AT@ 5041 @LENGTH@ 15
---------------------INS SimpleName@@MethodName:data:[] @TO@ MethodInvocation@@byteArrays[i++].data() @AT@ 5056 @LENGTH@ 6
---------------UPD CastExpression@@(byte[])byteArrays[i] @TO@ (byte[])byteArrays[i].data() @AT@ 5058 @LENGTH@ 22
------------------DEL ArrayAccess@@byteArrays[i] @AT@ 5067 @LENGTH@ 13
------------------INS MethodInvocation@@byteArrays[i].data() @TO@ CastExpression@@(byte[])byteArrays[i] @AT@ 5073 @LENGTH@ 20
---------------------INS ArrayAccess@@byteArrays[i] @TO@ MethodInvocation@@byteArrays[i].data() @AT@ 5073 @LENGTH@ 13
------------------------MOV SimpleName@@byteArrays @TO@ ArrayAccess@@byteArrays[i] @AT@ 5067 @LENGTH@ 10
------------------------MOV SimpleName@@i @TO@ ArrayAccess@@byteArrays[i] @AT@ 5078 @LENGTH@ 1
---------------------INS SimpleName@@MethodName:data:[] @TO@ MethodInvocation@@byteArrays[i].data() @AT@ 5087 @LENGTH@ 6


UPD ExpressionStatement@@MethodInvocation:context.restartRequired() @TO@ MethodInvocation:context.reloadRequired() @AT@ 5279 @LENGTH@ 26
---UPD MethodInvocation@@context.restartRequired() @TO@ context.reloadRequired() @AT@ 5279 @LENGTH@ 25
------UPD SimpleName@@MethodName:restartRequired:[] @TO@ MethodName:reloadRequired:[] @AT@ 5287 @LENGTH@ 17


UPD TypeDeclaration@@EESubsystemParser10, [XMLStreamConstants, XMLElementReader<List<ModelNode>>, XMLElementWriter<SubsystemMarshallingContext>] @TO@ EESubsystemParser10, [XMLStreamConstants, XMLElementReader<List<ModelNode>>] @AT@ 2246 @LENGTH@ 5698
---DEL ParameterizedType@@XMLElementWriter<SubsystemMarshallingContext> @AT@ 2332 @LENGTH@ 45
------DEL SimpleType@@XMLElementWriter @AT@ 2332 @LENGTH@ 16
------DEL SimpleType@@SubsystemMarshallingContext @AT@ 2349 @LENGTH@ 27


INS MethodDeclaration@@public, void, MethodName:testExistsForDomainObjectsWithCompositeKeys, Exception,  @TO@ TypeDeclaration@@[@RunWith(SpringJUnit4ClassRunner.class), @ContextConfiguration({"classpath:infrastructure.xml"}), @Transactional, public]JpaRepositoryTests,  @AT@ 3151 @LENGTH@ 449
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testExistsForDomainObjectsWithCompositeKeys, Exception,  @AT@ 3151 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testExistsForDomainObjectsWithCompositeKeys, Exception,  @AT@ 3158 @LENGTH@ 4
---INS SimpleName@@MethodName:testExistsForDomainObjectsWithCompositeKeys @TO@ MethodDeclaration@@public, void, MethodName:testExistsForDomainObjectsWithCompositeKeys, Exception,  @AT@ 3163 @LENGTH@ 43
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:testExistsForDomainObjectsWithCompositeKeys, Exception,  @AT@ 3216 @LENGTH@ 9
---INS VariableDeclarationStatement@@SampleWithIdClass s1=idClassRepository.save(new SampleWithIdClass(1L,1L)); @TO@ MethodDeclaration@@public, void, MethodName:testExistsForDomainObjectsWithCompositeKeys, Exception,  @AT@ 3231 @LENGTH@ 77
------INS SimpleType@@SampleWithIdClass @TO@ VariableDeclarationStatement@@SampleWithIdClass s1=idClassRepository.save(new SampleWithIdClass(1L,1L)); @AT@ 3231 @LENGTH@ 17
------INS VariableDeclarationFragment@@s1=idClassRepository.save(new SampleWithIdClass(1L,1L)) @TO@ VariableDeclarationStatement@@SampleWithIdClass s1=idClassRepository.save(new SampleWithIdClass(1L,1L)); @AT@ 3249 @LENGTH@ 58
---------INS SimpleName@@s1 @TO@ VariableDeclarationFragment@@s1=idClassRepository.save(new SampleWithIdClass(1L,1L)) @AT@ 3249 @LENGTH@ 2
---------INS MethodInvocation@@idClassRepository.save(new SampleWithIdClass(1L,1L)) @TO@ VariableDeclarationFragment@@s1=idClassRepository.save(new SampleWithIdClass(1L,1L)) @AT@ 3254 @LENGTH@ 53
------------INS SimpleName@@Name:idClassRepository @TO@ MethodInvocation@@idClassRepository.save(new SampleWithIdClass(1L,1L)) @AT@ 3254 @LENGTH@ 17
------------INS SimpleName@@MethodName:save:[new SampleWithIdClass(1L,1L)] @TO@ MethodInvocation@@idClassRepository.save(new SampleWithIdClass(1L,1L)) @AT@ 3272 @LENGTH@ 35
---------------INS ClassInstanceCreation@@SampleWithIdClass[1L, 1L] @TO@ SimpleName@@MethodName:save:[new SampleWithIdClass(1L,1L)] @AT@ 3277 @LENGTH@ 29
------------------INS New@@new @TO@ ClassInstanceCreation@@SampleWithIdClass[1L, 1L] @AT@ 3277 @LENGTH@ 3
------------------INS SimpleType@@SampleWithIdClass @TO@ ClassInstanceCreation@@SampleWithIdClass[1L, 1L] @AT@ 3281 @LENGTH@ 17
------------------INS NumberLiteral@@1L @TO@ ClassInstanceCreation@@SampleWithIdClass[1L, 1L] @AT@ 3299 @LENGTH@ 2
------------------INS NumberLiteral@@1L @TO@ ClassInstanceCreation@@SampleWithIdClass[1L, 1L] @AT@ 3303 @LENGTH@ 2
---INS VariableDeclarationStatement@@SampleWithIdClass s2=idClassRepository.save(new SampleWithIdClass(2L,2L)); @TO@ MethodDeclaration@@public, void, MethodName:testExistsForDomainObjectsWithCompositeKeys, Exception,  @AT@ 3311 @LENGTH@ 77
------INS SimpleType@@SampleWithIdClass @TO@ VariableDeclarationStatement@@SampleWithIdClass s2=idClassRepository.save(new SampleWithIdClass(2L,2L)); @AT@ 3311 @LENGTH@ 17
------INS VariableDeclarationFragment@@s2=idClassRepository.save(new SampleWithIdClass(2L,2L)) @TO@ VariableDeclarationStatement@@SampleWithIdClass s2=idClassRepository.save(new SampleWithIdClass(2L,2L)); @AT@ 3329 @LENGTH@ 58
---------INS SimpleName@@s2 @TO@ VariableDeclarationFragment@@s2=idClassRepository.save(new SampleWithIdClass(2L,2L)) @AT@ 3329 @LENGTH@ 2
---------INS MethodInvocation@@idClassRepository.save(new SampleWithIdClass(2L,2L)) @TO@ VariableDeclarationFragment@@s2=idClassRepository.save(new SampleWithIdClass(2L,2L)) @AT@ 3334 @LENGTH@ 53
------------INS SimpleName@@Name:idClassRepository @TO@ MethodInvocation@@idClassRepository.save(new SampleWithIdClass(2L,2L)) @AT@ 3334 @LENGTH@ 17
------------INS SimpleName@@MethodName:save:[new SampleWithIdClass(2L,2L)] @TO@ MethodInvocation@@idClassRepository.save(new SampleWithIdClass(2L,2L)) @AT@ 3352 @LENGTH@ 35
---------------INS ClassInstanceCreation@@SampleWithIdClass[2L, 2L] @TO@ SimpleName@@MethodName:save:[new SampleWithIdClass(2L,2L)] @AT@ 3357 @LENGTH@ 29
------------------INS New@@new @TO@ ClassInstanceCreation@@SampleWithIdClass[2L, 2L] @AT@ 3357 @LENGTH@ 3
------------------INS SimpleType@@SampleWithIdClass @TO@ ClassInstanceCreation@@SampleWithIdClass[2L, 2L] @AT@ 3361 @LENGTH@ 17
------------------INS NumberLiteral@@2L @TO@ ClassInstanceCreation@@SampleWithIdClass[2L, 2L] @AT@ 3379 @LENGTH@ 2
------------------INS NumberLiteral@@2L @TO@ ClassInstanceCreation@@SampleWithIdClass[2L, 2L] @AT@ 3383 @LENGTH@ 2
---INS ExpressionStatement@@MethodInvocation:assertThat(idClassRepository.exists(s1.getId()),is(true)) @TO@ MethodDeclaration@@public, void, MethodName:testExistsForDomainObjectsWithCompositeKeys, Exception,  @AT@ 3392 @LENGTH@ 59
------INS MethodInvocation@@assertThat(idClassRepository.exists(s1.getId()),is(true)) @TO@ ExpressionStatement@@MethodInvocation:assertThat(idClassRepository.exists(s1.getId()),is(true)) @AT@ 3392 @LENGTH@ 58
---------INS SimpleName@@MethodName:assertThat:[idClassRepository.exists(s1.getId()), is(true)] @TO@ MethodInvocation@@assertThat(idClassRepository.exists(s1.getId()),is(true)) @AT@ 3392 @LENGTH@ 58
------------INS MethodInvocation@@idClassRepository.exists(s1.getId()) @TO@ SimpleName@@MethodName:assertThat:[idClassRepository.exists(s1.getId()), is(true)] @AT@ 3403 @LENGTH@ 36
---------------INS SimpleName@@Name:idClassRepository @TO@ MethodInvocation@@idClassRepository.exists(s1.getId()) @AT@ 3403 @LENGTH@ 17
---------------INS SimpleName@@MethodName:exists:[s1.getId()] @TO@ MethodInvocation@@idClassRepository.exists(s1.getId()) @AT@ 3421 @LENGTH@ 18
------------------INS MethodInvocation@@s1.getId() @TO@ SimpleName@@MethodName:exists:[s1.getId()] @AT@ 3428 @LENGTH@ 10
---------------------INS SimpleName@@Name:s1 @TO@ MethodInvocation@@s1.getId() @AT@ 3428 @LENGTH@ 2
---------------------INS SimpleName@@MethodName:getId:[] @TO@ MethodInvocation@@s1.getId() @AT@ 3431 @LENGTH@ 7
------------INS MethodInvocation@@is(true) @TO@ SimpleName@@MethodName:assertThat:[idClassRepository.exists(s1.getId()), is(true)] @AT@ 3441 @LENGTH@ 8
---------------INS SimpleName@@MethodName:is:[true] @TO@ MethodInvocation@@is(true) @AT@ 3441 @LENGTH@ 8
------------------INS BooleanLiteral@@true @TO@ SimpleName@@MethodName:is:[true] @AT@ 3444 @LENGTH@ 4
---------------INS SimpleName@@MethodName:is:[true] @TO@ MethodInvocation@@is(true) @AT@ 3441 @LENGTH@ 8
------------------INS BooleanLiteral@@true @TO@ SimpleName@@MethodName:is:[true] @AT@ 3444 @LENGTH@ 4
---INS ExpressionStatement@@MethodInvocation:assertThat(idClassRepository.exists(s2.getId()),is(true)) @TO@ MethodDeclaration@@public, void, MethodName:testExistsForDomainObjectsWithCompositeKeys, Exception,  @AT@ 3454 @LENGTH@ 59
------INS MethodInvocation@@assertThat(idClassRepository.exists(s2.getId()),is(true)) @TO@ ExpressionStatement@@MethodInvocation:assertThat(idClassRepository.exists(s2.getId()),is(true)) @AT@ 3454 @LENGTH@ 58
---------INS SimpleName@@MethodName:assertThat:[idClassRepository.exists(s2.getId()), is(true)] @TO@ MethodInvocation@@assertThat(idClassRepository.exists(s2.getId()),is(true)) @AT@ 3454 @LENGTH@ 58
------------INS MethodInvocation@@idClassRepository.exists(s2.getId()) @TO@ SimpleName@@MethodName:assertThat:[idClassRepository.exists(s2.getId()), is(true)] @AT@ 3465 @LENGTH@ 36
---------------INS SimpleName@@Name:idClassRepository @TO@ MethodInvocation@@idClassRepository.exists(s2.getId()) @AT@ 3465 @LENGTH@ 17
---------------INS SimpleName@@MethodName:exists:[s2.getId()] @TO@ MethodInvocation@@idClassRepository.exists(s2.getId()) @AT@ 3483 @LENGTH@ 18
------------------INS MethodInvocation@@s2.getId() @TO@ SimpleName@@MethodName:exists:[s2.getId()] @AT@ 3490 @LENGTH@ 10
---------------------INS SimpleName@@Name:s2 @TO@ MethodInvocation@@s2.getId() @AT@ 3490 @LENGTH@ 2
---------------------INS SimpleName@@MethodName:getId:[] @TO@ MethodInvocation@@s2.getId() @AT@ 3493 @LENGTH@ 7
------------INS MethodInvocation@@is(true) @TO@ SimpleName@@MethodName:assertThat:[idClassRepository.exists(s2.getId()), is(true)] @AT@ 3503 @LENGTH@ 8
---------------INS SimpleName@@MethodName:is:[true] @TO@ MethodInvocation@@is(true) @AT@ 3503 @LENGTH@ 8
------------------INS BooleanLiteral@@true @TO@ SimpleName@@MethodName:is:[true] @AT@ 3506 @LENGTH@ 4
---------------INS SimpleName@@MethodName:is:[true] @TO@ MethodInvocation@@is(true) @AT@ 3503 @LENGTH@ 8
------------------INS BooleanLiteral@@true @TO@ SimpleName@@MethodName:is:[true] @AT@ 3506 @LENGTH@ 4
---INS ExpressionStatement@@MethodInvocation:assertThat(idClassRepository.exists(new SampleWithIdClassPK(1L,2L)),is(false)) @TO@ MethodDeclaration@@public, void, MethodName:testExistsForDomainObjectsWithCompositeKeys, Exception,  @AT@ 3516 @LENGTH@ 81
------INS MethodInvocation@@assertThat(idClassRepository.exists(new SampleWithIdClassPK(1L,2L)),is(false)) @TO@ ExpressionStatement@@MethodInvocation:assertThat(idClassRepository.exists(new SampleWithIdClassPK(1L,2L)),is(false)) @AT@ 3516 @LENGTH@ 80
---------INS SimpleName@@MethodName:assertThat:[idClassRepository.exists(new SampleWithIdClassPK(1L,2L)), is(false)] @TO@ MethodInvocation@@assertThat(idClassRepository.exists(new SampleWithIdClassPK(1L,2L)),is(false)) @AT@ 3516 @LENGTH@ 80
------------INS MethodInvocation@@idClassRepository.exists(new SampleWithIdClassPK(1L,2L)) @TO@ SimpleName@@MethodName:assertThat:[idClassRepository.exists(new SampleWithIdClassPK(1L,2L)), is(false)] @AT@ 3527 @LENGTH@ 57
---------------INS SimpleName@@Name:idClassRepository @TO@ MethodInvocation@@idClassRepository.exists(new SampleWithIdClassPK(1L,2L)) @AT@ 3527 @LENGTH@ 17
---------------INS SimpleName@@MethodName:exists:[new SampleWithIdClassPK(1L,2L)] @TO@ MethodInvocation@@idClassRepository.exists(new SampleWithIdClassPK(1L,2L)) @AT@ 3545 @LENGTH@ 39
------------------INS ClassInstanceCreation@@SampleWithIdClassPK[1L, 2L] @TO@ SimpleName@@MethodName:exists:[new SampleWithIdClassPK(1L,2L)] @AT@ 3552 @LENGTH@ 31
---------------------INS New@@new @TO@ ClassInstanceCreation@@SampleWithIdClassPK[1L, 2L] @AT@ 3552 @LENGTH@ 3
---------------------INS SimpleType@@SampleWithIdClassPK @TO@ ClassInstanceCreation@@SampleWithIdClassPK[1L, 2L] @AT@ 3556 @LENGTH@ 19
---------------------INS NumberLiteral@@1L @TO@ ClassInstanceCreation@@SampleWithIdClassPK[1L, 2L] @AT@ 3576 @LENGTH@ 2
---------------------INS NumberLiteral@@2L @TO@ ClassInstanceCreation@@SampleWithIdClassPK[1L, 2L] @AT@ 3580 @LENGTH@ 2
------------INS MethodInvocation@@is(false) @TO@ SimpleName@@MethodName:assertThat:[idClassRepository.exists(new SampleWithIdClassPK(1L,2L)), is(false)] @AT@ 3586 @LENGTH@ 9
---------------INS SimpleName@@MethodName:is:[false] @TO@ MethodInvocation@@is(false) @AT@ 3586 @LENGTH@ 9
------------------INS BooleanLiteral@@false @TO@ SimpleName@@MethodName:is:[false] @AT@ 3589 @LENGTH@ 5


UPD ExpressionStatement@@MethodInvocation:JdbcTestUtils.deleteFromTables(jdbcTemplate,"BATCH_JOB_EXECUTION_CONTEXT","BATCH_STEP_EXECUTION_CONTEXT","BATCH_STEP_EXECUTION","BATCH_JOB_EXECUTION","BATCH_JOB_EXECUTION_PARAMS","BATCH_JOB_INSTANCE") @TO@ MethodInvocation:JdbcTestUtils.deleteFromTables(jdbcTemplate,"BATCH_JOB_EXECUTION_CONTEXT","BATCH_STEP_EXECUTION_CONTEXT","BATCH_STEP_EXECUTION","BATCH_JOB_EXECUTION_PARAMS","BATCH_JOB_EXECUTION","BATCH_JOB_INSTANCE") @AT@ 1312 @LENGTH@ 217
---UPD MethodInvocation@@JdbcTestUtils.deleteFromTables(jdbcTemplate,"BATCH_JOB_EXECUTION_CONTEXT","BATCH_STEP_EXECUTION_CONTEXT","BATCH_STEP_EXECUTION","BATCH_JOB_EXECUTION","BATCH_JOB_EXECUTION_PARAMS","BATCH_JOB_INSTANCE") @TO@ JdbcTestUtils.deleteFromTables(jdbcTemplate,"BATCH_JOB_EXECUTION_CONTEXT","BATCH_STEP_EXECUTION_CONTEXT","BATCH_STEP_EXECUTION","BATCH_JOB_EXECUTION_PARAMS","BATCH_JOB_EXECUTION","BATCH_JOB_INSTANCE") @AT@ 1312 @LENGTH@ 216
------UPD SimpleName@@MethodName:deleteFromTables:[jdbcTemplate, "BATCH_JOB_EXECUTION_CONTEXT", "BATCH_STEP_EXECUTION_CONTEXT", "BATCH_STEP_EXECUTION", "BATCH_JOB_EXECUTION", "BATCH_JOB_EXECUTION_PARAMS", "BATCH_JOB_INSTANCE"] @TO@ MethodName:deleteFromTables:[jdbcTemplate, "BATCH_JOB_EXECUTION_CONTEXT", "BATCH_STEP_EXECUTION_CONTEXT", "BATCH_STEP_EXECUTION", "BATCH_JOB_EXECUTION_PARAMS", "BATCH_JOB_EXECUTION", "BATCH_JOB_INSTANCE"] @AT@ 1326 @LENGTH@ 202
---------UPD StringLiteral@@"BATCH_JOB_EXECUTION" @TO@ "BATCH_JOB_EXECUTION_PARAMS" @AT@ 1454 @LENGTH@ 21
---------UPD StringLiteral@@"BATCH_JOB_EXECUTION_PARAMS" @TO@ "BATCH_JOB_EXECUTION" @AT@ 1477 @LENGTH@ 28


UPD IfStatement@@if (isValid) {  UndertowLogger.ROOT_LOGGER.tracef("User: %s is authenticated",incomingPrincipal);  if (sc == null)   throw new IllegalStateException("No SecurityContext found!");  Principal userPrincipal=getPrincipal(subject);  sc.getUtil().createSubjectInfo(incomingPrincipal,credential,subject);  SecurityContextCallbackHandler scb=new SecurityContextCallbackHandler(sc);  if (mappingManager != null) {    MappingContext<RoleGroup> mc=mappingManager.getMappingContext(MappingType.ROLE.name());    if (mc != null && mc.hasModules()) {      SecurityRolesAssociation.setSecurityRoles(principalVersusRolesMap);    }  }  RoleGroup roles=authorizationManager.getSubjectRoles(subject,scb);  Set<String> roleSet=new HashSet<>();  for (  Role role : roles.getRoles()) {    roleSet.add(role.getRoleName());  }  Set<String> extra=principalVersusRolesMap.get(incomingPrincipal.getName());  if (extra != null) {    roleSet.addAll(extra);  }  return new AccountImpl(userPrincipal,roleSet,credential);} @TO@ if (isValid) {  UndertowLogger.ROOT_LOGGER.tracef("User: %s is authenticated",incomingPrincipal);  if (sc == null)   throw new IllegalStateException("No SecurityContext found!");  Principal userPrincipal=getPrincipal(subject);  sc.getUtil().createSubjectInfo(incomingPrincipal,credential,subject);  SecurityContextCallbackHandler scb=new SecurityContextCallbackHandler(sc);  if (mappingManager != null) {    MappingContext<RoleGroup> mc=mappingManager.getMappingContext(MappingType.ROLE.name());    if (mc != null && mc.hasModules()) {      SecurityRolesAssociation.setSecurityRoles(principalVersusRolesMap);    }  }  RoleGroup roles=authorizationManager.getSubjectRoles(subject,scb);  Set<String> roleSet=new HashSet<>();  for (  Role role : roles.getRoles()) {    roleSet.add(role.getRoleName());  }  if (principalVersusRolesMap != null) {    Set<String> extra=principalVersusRolesMap.get(incomingPrincipal.getName());    if (extra != null) {      roleSet.addAll(extra);    }  }  return new AccountImpl(userPrincipal,roleSet,credential);} @AT@ 5063 @LENGTH@ 1532
---UPD Block@@ThenBody:{  UndertowLogger.ROOT_LOGGER.tracef("User: %s is authenticated",incomingPrincipal);  if (sc == null)   throw new IllegalStateException("No SecurityContext found!");  Principal userPrincipal=getPrincipal(subject);  sc.getUtil().createSubjectInfo(incomingPrincipal,credential,subject);  SecurityContextCallbackHandler scb=new SecurityContextCallbackHandler(sc);  if (mappingManager != null) {    MappingContext<RoleGroup> mc=mappingManager.getMappingContext(MappingType.ROLE.name());    if (mc != null && mc.hasModules()) {      SecurityRolesAssociation.setSecurityRoles(principalVersusRolesMap);    }  }  RoleGroup roles=authorizationManager.getSubjectRoles(subject,scb);  Set<String> roleSet=new HashSet<>();  for (  Role role : roles.getRoles()) {    roleSet.add(role.getRoleName());  }  Set<String> extra=principalVersusRolesMap.get(incomingPrincipal.getName());  if (extra != null) {    roleSet.addAll(extra);  }  return new AccountImpl(userPrincipal,roleSet,credential);} @TO@ ThenBody:{  UndertowLogger.ROOT_LOGGER.tracef("User: %s is authenticated",incomingPrincipal);  if (sc == null)   throw new IllegalStateException("No SecurityContext found!");  Principal userPrincipal=getPrincipal(subject);  sc.getUtil().createSubjectInfo(incomingPrincipal,credential,subject);  SecurityContextCallbackHandler scb=new SecurityContextCallbackHandler(sc);  if (mappingManager != null) {    MappingContext<RoleGroup> mc=mappingManager.getMappingContext(MappingType.ROLE.name());    if (mc != null && mc.hasModules()) {      SecurityRolesAssociation.setSecurityRoles(principalVersusRolesMap);    }  }  RoleGroup roles=authorizationManager.getSubjectRoles(subject,scb);  Set<String> roleSet=new HashSet<>();  for (  Role role : roles.getRoles()) {    roleSet.add(role.getRoleName());  }  if (principalVersusRolesMap != null) {    Set<String> extra=principalVersusRolesMap.get(incomingPrincipal.getName());    if (extra != null) {      roleSet.addAll(extra);    }  }  return new AccountImpl(userPrincipal,roleSet,credential);} @AT@ 5076 @LENGTH@ 1519
------INS IfStatement@@if (principalVersusRolesMap != null) {  Set<String> extra=principalVersusRolesMap.get(incomingPrincipal.getName());  if (extra != null) {    roleSet.addAll(extra);  }} @TO@ Block@@ThenBody:{  UndertowLogger.ROOT_LOGGER.tracef("User: %s is authenticated",incomingPrincipal);  if (sc == null)   throw new IllegalStateException("No SecurityContext found!");  Principal userPrincipal=getPrincipal(subject);  sc.getUtil().createSubjectInfo(incomingPrincipal,credential,subject);  SecurityContextCallbackHandler scb=new SecurityContextCallbackHandler(sc);  if (mappingManager != null) {    MappingContext<RoleGroup> mc=mappingManager.getMappingContext(MappingType.ROLE.name());    if (mc != null && mc.hasModules()) {      SecurityRolesAssociation.setSecurityRoles(principalVersusRolesMap);    }  }  RoleGroup roles=authorizationManager.getSubjectRoles(subject,scb);  Set<String> roleSet=new HashSet<>();  for (  Role role : roles.getRoles()) {    roleSet.add(role.getRoleName());  }  Set<String> extra=principalVersusRolesMap.get(incomingPrincipal.getName());  if (extra != null) {    roleSet.addAll(extra);  }  return new AccountImpl(userPrincipal,roleSet,credential);} @AT@ 6330 @LENGTH@ 263
---------INS InfixExpression@@principalVersusRolesMap != null @TO@ IfStatement@@if (principalVersusRolesMap != null) {  Set<String> extra=principalVersusRolesMap.get(incomingPrincipal.getName());  if (extra != null) {    roleSet.addAll(extra);  }} @AT@ 6333 @LENGTH@ 31
------------INS SimpleName@@principalVersusRolesMap @TO@ InfixExpression@@principalVersusRolesMap != null @AT@ 6333 @LENGTH@ 23
------------INS Operator@@!= @TO@ InfixExpression@@principalVersusRolesMap != null @AT@ 6356 @LENGTH@ 2
------------INS NullLiteral@@null @TO@ InfixExpression@@principalVersusRolesMap != null @AT@ 6360 @LENGTH@ 4
---------INS Block@@ThenBody:{  Set<String> extra=principalVersusRolesMap.get(incomingPrincipal.getName());  if (extra != null) {    roleSet.addAll(extra);  }} @TO@ IfStatement@@if (principalVersusRolesMap != null) {  Set<String> extra=principalVersusRolesMap.get(incomingPrincipal.getName());  if (extra != null) {    roleSet.addAll(extra);  }} @AT@ 6366 @LENGTH@ 227
------------MOV VariableDeclarationStatement@@Set<String> extra=principalVersusRolesMap.get(incomingPrincipal.getName()); @TO@ Block@@ThenBody:{  Set<String> extra=principalVersusRolesMap.get(incomingPrincipal.getName());  if (extra != null) {    roleSet.addAll(extra);  }} @AT@ 6330 @LENGTH@ 77
------------MOV IfStatement@@if (extra != null) {  roleSet.addAll(extra);} @TO@ Block@@ThenBody:{  Set<String> extra=principalVersusRolesMap.get(incomingPrincipal.getName());  if (extra != null) {    roleSet.addAll(extra);  }} @AT@ 6424 @LENGTH@ 81


INS MethodDeclaration@@IllegalArgumentException, MethodName:illegalNumberOfArgumentsForFindByPrimaryKey, int noOfArguments,  @TO@ TypeDeclaration@@[@MessageBundle(projectCode="JBAS"), public]CmpMessages,  @AT@ 62616 @LENGTH@ 63
---INS SimpleType@@IllegalArgumentException @TO@ MethodDeclaration@@IllegalArgumentException, MethodName:illegalNumberOfArgumentsForFindByPrimaryKey, int noOfArguments,  @AT@ 62591 @LENGTH@ 24
---INS SimpleName@@MethodName:illegalNumberOfArgumentsForFindByPrimaryKey @TO@ MethodDeclaration@@IllegalArgumentException, MethodName:illegalNumberOfArgumentsForFindByPrimaryKey, int noOfArguments,  @AT@ 62616 @LENGTH@ 43
---INS SingleVariableDeclaration@@int noOfArguments @TO@ MethodDeclaration@@IllegalArgumentException, MethodName:illegalNumberOfArgumentsForFindByPrimaryKey, int noOfArguments,  @AT@ 62660 @LENGTH@ 17
------INS PrimitiveType@@int @TO@ SingleVariableDeclaration@@int noOfArguments @AT@ 62660 @LENGTH@ 3
------INS SimpleName@@noOfArguments @TO@ SingleVariableDeclaration@@int noOfArguments @AT@ 62664 @LENGTH@ 13


UPD VariableDeclarationStatement@@Class parameterType=setter.getParameterTypes()[0]; @TO@ Class<?> parameterType=setter.getParameterTypes()[0]; @AT@ 18311 @LENGTH@ 52
---DEL SimpleType@@Class @AT@ 18311 @LENGTH@ 5
---INS ParameterizedType@@Class<?> @TO@ VariableDeclarationStatement@@Class parameterType=setter.getParameterTypes()[0]; @AT@ 18317 @LENGTH@ 8
------INS SimpleType@@Class @TO@ ParameterizedType@@Class<?> @AT@ 18317 @LENGTH@ 5
------INS WildcardType@@? @TO@ ParameterizedType@@Class<?> @AT@ 18323 @LENGTH@ 1


UPD MethodDeclaration@@protected, void, MethodName:performRuntime, OperationContext context, ModelNode operation, ModelNode model, ServiceVerificationHandler verificationHandler, List<ServiceController<?>> newControllers,  @TO@ protected, void, MethodName:removeRuntimeServices, OperationContext context, ModelNode operation, ModelNode model, OperationFailedException,  @AT@ 1594 @LENGTH@ 336
---UPD SimpleName@@MethodName:performRuntime @TO@ MethodName:removeRuntimeServices @AT@ 1609 @LENGTH@ 14
---DEL SingleVariableDeclaration@@ServiceVerificationHandler verificationHandler @AT@ 1688 @LENGTH@ 46
------DEL SimpleType@@ServiceVerificationHandler @AT@ 1688 @LENGTH@ 26
------DEL SimpleName@@verificationHandler @AT@ 1715 @LENGTH@ 19
---DEL SingleVariableDeclaration@@List<ServiceController<?>> newControllers @AT@ 1736 @LENGTH@ 41
------DEL ParameterizedType@@List<ServiceController<?>> @AT@ 1736 @LENGTH@ 26
---------DEL ParameterizedType@@ServiceController<?> @AT@ 1741 @LENGTH@ 20
------------DEL WildcardType@@? @AT@ 1759 @LENGTH@ 1
------DEL SimpleName@@newControllers @AT@ 1763 @LENGTH@ 14
---UPD ExpressionStatement@@MethodInvocation:context.removeService(ProtocolDefaultsService.SERVICE_NAME) @TO@ MethodInvocation:context.removeService(protocolDefaultsService) @AT@ 1789 @LENGTH@ 60
------UPD MethodInvocation@@context.removeService(ProtocolDefaultsService.SERVICE_NAME) @TO@ context.removeService(protocolDefaultsService) @AT@ 1789 @LENGTH@ 59
---------UPD SimpleName@@MethodName:removeService:[ProtocolDefaultsService.SERVICE_NAME] @TO@ MethodName:removeService:[protocolDefaultsService] @AT@ 1797 @LENGTH@ 51
------------DEL QualifiedName@@ProtocolDefaultsService.SERVICE_NAME @AT@ 1811 @LENGTH@ 36
---------------DEL SimpleName@@ProtocolDefaultsService @AT@ 1811 @LENGTH@ 23
---------------DEL SimpleName@@SERVICE_NAME @AT@ 1835 @LENGTH@ 12
------------INS SimpleName@@protocolDefaultsService @TO@ SimpleName@@MethodName:removeService:[ProtocolDefaultsService.SERVICE_NAME] @AT@ 2947 @LENGTH@ 23
---UPD ExpressionStatement@@MethodInvocation:context.removeService(ChannelFactoryService.getServiceName(null)) @TO@ MethodInvocation:context.removeService(defaultChannelFactoryService) @AT@ 1858 @LENGTH@ 66
------UPD MethodInvocation@@context.removeService(ChannelFactoryService.getServiceName(null)) @TO@ context.removeService(defaultChannelFactoryService) @AT@ 1858 @LENGTH@ 65
---------UPD SimpleName@@MethodName:removeService:[ChannelFactoryService.getServiceName(null)] @TO@ MethodName:removeService:[defaultChannelFactoryService] @AT@ 1866 @LENGTH@ 57
------------INS SimpleName@@defaultChannelFactoryService @TO@ SimpleName@@MethodName:removeService:[ChannelFactoryService.getServiceName(null)] @AT@ 3155 @LENGTH@ 28
---INS SimpleType@@OperationFailedException @TO@ MethodDeclaration@@protected, void, MethodName:performRuntime, OperationContext context, ModelNode operation, ModelNode model, ServiceVerificationHandler verificationHandler, List<ServiceController<?>> newControllers,  @AT@ 2128 @LENGTH@ 24
---INS IfStatement@@if (model.hasDefined(ModelKeys.STACK)) {  List<Property> stacks=model.get(ModelKeys.STACK).asPropertyList();  for (  Property stack : stacks) {    PathAddress address=PathAddress.pathAddress(JGroupsExtension.SUBSYSTEM_PATH).append(ModelKeys.STACK,stack.getName());    ModelNode removeStack=Util.createOperation(REMOVE,address);    ProtocolStackAdd.INSTANCE.removeRuntimeServices(context,removeStack,stack.getValue());  }} @TO@ MethodDeclaration@@protected, void, MethodName:performRuntime, OperationContext context, ModelNode operation, ModelNode model, ServiceVerificationHandler verificationHandler, List<ServiceController<?>> newControllers,  @AT@ 2208 @LENGTH@ 577
------INS MethodInvocation@@model.hasDefined(ModelKeys.STACK) @TO@ IfStatement@@if (model.hasDefined(ModelKeys.STACK)) {  List<Property> stacks=model.get(ModelKeys.STACK).asPropertyList();  for (  Property stack : stacks) {    PathAddress address=PathAddress.pathAddress(JGroupsExtension.SUBSYSTEM_PATH).append(ModelKeys.STACK,stack.getName());    ModelNode removeStack=Util.createOperation(REMOVE,address);    ProtocolStackAdd.INSTANCE.removeRuntimeServices(context,removeStack,stack.getValue());  }} @AT@ 2212 @LENGTH@ 33
---------INS SimpleName@@Name:model @TO@ MethodInvocation@@model.hasDefined(ModelKeys.STACK) @AT@ 2212 @LENGTH@ 5
---------INS SimpleName@@MethodName:hasDefined:[ModelKeys.STACK] @TO@ MethodInvocation@@model.hasDefined(ModelKeys.STACK) @AT@ 2218 @LENGTH@ 27
------------INS QualifiedName@@ModelKeys.STACK @TO@ SimpleName@@MethodName:hasDefined:[ModelKeys.STACK] @AT@ 2229 @LENGTH@ 15
---------------INS SimpleName@@ModelKeys @TO@ QualifiedName@@ModelKeys.STACK @AT@ 2229 @LENGTH@ 9
---------------INS SimpleName@@STACK @TO@ QualifiedName@@ModelKeys.STACK @AT@ 2239 @LENGTH@ 5
------INS Block@@ThenBody:{  List<Property> stacks=model.get(ModelKeys.STACK).asPropertyList();  for (  Property stack : stacks) {    PathAddress address=PathAddress.pathAddress(JGroupsExtension.SUBSYSTEM_PATH).append(ModelKeys.STACK,stack.getName());    ModelNode removeStack=Util.createOperation(REMOVE,address);    ProtocolStackAdd.INSTANCE.removeRuntimeServices(context,removeStack,stack.getValue());  }} @TO@ IfStatement@@if (model.hasDefined(ModelKeys.STACK)) {  List<Property> stacks=model.get(ModelKeys.STACK).asPropertyList();  for (  Property stack : stacks) {    PathAddress address=PathAddress.pathAddress(JGroupsExtension.SUBSYSTEM_PATH).append(ModelKeys.STACK,stack.getName());    ModelNode removeStack=Util.createOperation(REMOVE,address);    ProtocolStackAdd.INSTANCE.removeRuntimeServices(context,removeStack,stack.getValue());  }} @AT@ 2247 @LENGTH@ 538
---------INS VariableDeclarationStatement@@List<Property> stacks=model.get(ModelKeys.STACK).asPropertyList(); @TO@ Block@@ThenBody:{  List<Property> stacks=model.get(ModelKeys.STACK).asPropertyList();  for (  Property stack : stacks) {    PathAddress address=PathAddress.pathAddress(JGroupsExtension.SUBSYSTEM_PATH).append(ModelKeys.STACK,stack.getName());    ModelNode removeStack=Util.createOperation(REMOVE,address);    ProtocolStackAdd.INSTANCE.removeRuntimeServices(context,removeStack,stack.getValue());  }} @AT@ 2261 @LENGTH@ 69
------------INS ParameterizedType@@List<Property> @TO@ VariableDeclarationStatement@@List<Property> stacks=model.get(ModelKeys.STACK).asPropertyList(); @AT@ 2261 @LENGTH@ 14
---------------MOV SimpleType@@List @TO@ ParameterizedType@@List<Property> @AT@ 1736 @LENGTH@ 4
---------------MOV SimpleType@@ServiceController @TO@ ParameterizedType@@List<Property> @AT@ 1741 @LENGTH@ 17
------------INS VariableDeclarationFragment@@stacks=model.get(ModelKeys.STACK).asPropertyList() @TO@ VariableDeclarationStatement@@List<Property> stacks=model.get(ModelKeys.STACK).asPropertyList(); @AT@ 2276 @LENGTH@ 52
---------------INS SimpleName@@stacks @TO@ VariableDeclarationFragment@@stacks=model.get(ModelKeys.STACK).asPropertyList() @AT@ 2276 @LENGTH@ 6
---------------INS MethodInvocation@@model.get(ModelKeys.STACK).asPropertyList() @TO@ VariableDeclarationFragment@@stacks=model.get(ModelKeys.STACK).asPropertyList() @AT@ 2285 @LENGTH@ 43
------------------INS MethodInvocation@@MethodName:get:[ModelKeys.STACK] @TO@ MethodInvocation@@model.get(ModelKeys.STACK).asPropertyList() @AT@ 2285 @LENGTH@ 26
---------------------INS QualifiedName@@ModelKeys.STACK @TO@ MethodInvocation@@MethodName:get:[ModelKeys.STACK] @AT@ 2295 @LENGTH@ 15
------------------------INS SimpleName@@ModelKeys @TO@ QualifiedName@@ModelKeys.STACK @AT@ 2295 @LENGTH@ 9
------------------------INS SimpleName@@STACK @TO@ QualifiedName@@ModelKeys.STACK @AT@ 2305 @LENGTH@ 5
------------------INS SimpleName@@Name:model @TO@ MethodInvocation@@model.get(ModelKeys.STACK).asPropertyList() @AT@ 2285 @LENGTH@ 5
------------------INS SimpleName@@MethodName:asPropertyList:[] @TO@ MethodInvocation@@model.get(ModelKeys.STACK).asPropertyList() @AT@ 2312 @LENGTH@ 16
---------INS EnhancedForStatement@@for (Property stack : stacks) {  PathAddress address=PathAddress.pathAddress(JGroupsExtension.SUBSYSTEM_PATH).append(ModelKeys.STACK,stack.getName());  ModelNode removeStack=Util.createOperation(REMOVE,address);  ProtocolStackAdd.INSTANCE.removeRuntimeServices(context,removeStack,stack.getValue());} @TO@ Block@@ThenBody:{  List<Property> stacks=model.get(ModelKeys.STACK).asPropertyList();  for (  Property stack : stacks) {    PathAddress address=PathAddress.pathAddress(JGroupsExtension.SUBSYSTEM_PATH).append(ModelKeys.STACK,stack.getName());    ModelNode removeStack=Util.createOperation(REMOVE,address);    ProtocolStackAdd.INSTANCE.removeRuntimeServices(context,removeStack,stack.getValue());  }} @AT@ 2343 @LENGTH@ 432
------------INS SingleVariableDeclaration@@Property stack @TO@ EnhancedForStatement@@for (Property stack : stacks) {  PathAddress address=PathAddress.pathAddress(JGroupsExtension.SUBSYSTEM_PATH).append(ModelKeys.STACK,stack.getName());  ModelNode removeStack=Util.createOperation(REMOVE,address);  ProtocolStackAdd.INSTANCE.removeRuntimeServices(context,removeStack,stack.getValue());} @AT@ 2348 @LENGTH@ 14
---------------INS SimpleType@@Property @TO@ SingleVariableDeclaration@@Property stack @AT@ 2348 @LENGTH@ 8
---------------INS SimpleName@@stack @TO@ SingleVariableDeclaration@@Property stack @AT@ 2357 @LENGTH@ 5
------------INS SimpleName@@stacks @TO@ EnhancedForStatement@@for (Property stack : stacks) {  PathAddress address=PathAddress.pathAddress(JGroupsExtension.SUBSYSTEM_PATH).append(ModelKeys.STACK,stack.getName());  ModelNode removeStack=Util.createOperation(REMOVE,address);  ProtocolStackAdd.INSTANCE.removeRuntimeServices(context,removeStack,stack.getValue());} @AT@ 2364 @LENGTH@ 6
------------INS VariableDeclarationStatement@@PathAddress address=PathAddress.pathAddress(JGroupsExtension.SUBSYSTEM_PATH).append(ModelKeys.STACK,stack.getName()); @TO@ EnhancedForStatement@@for (Property stack : stacks) {  PathAddress address=PathAddress.pathAddress(JGroupsExtension.SUBSYSTEM_PATH).append(ModelKeys.STACK,stack.getName());  ModelNode removeStack=Util.createOperation(REMOVE,address);  ProtocolStackAdd.INSTANCE.removeRuntimeServices(context,removeStack,stack.getValue());} @AT@ 2390 @LENGTH@ 120
---------------INS SimpleType@@PathAddress @TO@ VariableDeclarationStatement@@PathAddress address=PathAddress.pathAddress(JGroupsExtension.SUBSYSTEM_PATH).append(ModelKeys.STACK,stack.getName()); @AT@ 2390 @LENGTH@ 11
---------------INS VariableDeclarationFragment@@address=PathAddress.pathAddress(JGroupsExtension.SUBSYSTEM_PATH).append(ModelKeys.STACK,stack.getName()) @TO@ VariableDeclarationStatement@@PathAddress address=PathAddress.pathAddress(JGroupsExtension.SUBSYSTEM_PATH).append(ModelKeys.STACK,stack.getName()); @AT@ 2402 @LENGTH@ 107
------------------INS SimpleName@@address @TO@ VariableDeclarationFragment@@address=PathAddress.pathAddress(JGroupsExtension.SUBSYSTEM_PATH).append(ModelKeys.STACK,stack.getName()) @AT@ 2402 @LENGTH@ 7
------------------INS MethodInvocation@@PathAddress.pathAddress(JGroupsExtension.SUBSYSTEM_PATH).append(ModelKeys.STACK,stack.getName()) @TO@ VariableDeclarationFragment@@address=PathAddress.pathAddress(JGroupsExtension.SUBSYSTEM_PATH).append(ModelKeys.STACK,stack.getName()) @AT@ 2412 @LENGTH@ 97
---------------------INS MethodInvocation@@MethodName:pathAddress:[JGroupsExtension.SUBSYSTEM_PATH] @TO@ MethodInvocation@@PathAddress.pathAddress(JGroupsExtension.SUBSYSTEM_PATH).append(ModelKeys.STACK,stack.getName()) @AT@ 2412 @LENGTH@ 56
------------------------INS QualifiedName@@JGroupsExtension.SUBSYSTEM_PATH @TO@ MethodInvocation@@MethodName:pathAddress:[JGroupsExtension.SUBSYSTEM_PATH] @AT@ 2436 @LENGTH@ 31
---------------------------INS SimpleName@@JGroupsExtension @TO@ QualifiedName@@JGroupsExtension.SUBSYSTEM_PATH @AT@ 2436 @LENGTH@ 16
---------------------------INS SimpleName@@SUBSYSTEM_PATH @TO@ QualifiedName@@JGroupsExtension.SUBSYSTEM_PATH @AT@ 2453 @LENGTH@ 14
---------------------INS SimpleName@@Name:PathAddress @TO@ MethodInvocation@@PathAddress.pathAddress(JGroupsExtension.SUBSYSTEM_PATH).append(ModelKeys.STACK,stack.getName()) @AT@ 2412 @LENGTH@ 11
---------------------INS SimpleName@@MethodName:append:[ModelKeys.STACK, stack.getName()] @TO@ MethodInvocation@@PathAddress.pathAddress(JGroupsExtension.SUBSYSTEM_PATH).append(ModelKeys.STACK,stack.getName()) @AT@ 2469 @LENGTH@ 40
------------------------INS QualifiedName@@ModelKeys.STACK @TO@ SimpleName@@MethodName:append:[ModelKeys.STACK, stack.getName()] @AT@ 2476 @LENGTH@ 15
---------------------------INS SimpleName@@ModelKeys @TO@ QualifiedName@@ModelKeys.STACK @AT@ 2476 @LENGTH@ 9
---------------------------INS SimpleName@@STACK @TO@ QualifiedName@@ModelKeys.STACK @AT@ 2486 @LENGTH@ 5
------------------------INS MethodInvocation@@stack.getName() @TO@ SimpleName@@MethodName:append:[ModelKeys.STACK, stack.getName()] @AT@ 2493 @LENGTH@ 15
---------------------------INS SimpleName@@Name:stack @TO@ MethodInvocation@@stack.getName() @AT@ 2493 @LENGTH@ 5
---------------------------INS SimpleName@@MethodName:getName:[] @TO@ MethodInvocation@@stack.getName() @AT@ 2499 @LENGTH@ 9
------------INS VariableDeclarationStatement@@ModelNode removeStack=Util.createOperation(REMOVE,address); @TO@ EnhancedForStatement@@for (Property stack : stacks) {  PathAddress address=PathAddress.pathAddress(JGroupsExtension.SUBSYSTEM_PATH).append(ModelKeys.STACK,stack.getName());  ModelNode removeStack=Util.createOperation(REMOVE,address);  ProtocolStackAdd.INSTANCE.removeRuntimeServices(context,removeStack,stack.getValue());} @AT@ 2527 @LENGTH@ 62
---------------INS SimpleType@@ModelNode @TO@ VariableDeclarationStatement@@ModelNode removeStack=Util.createOperation(REMOVE,address); @AT@ 2527 @LENGTH@ 9
---------------INS VariableDeclarationFragment@@removeStack=Util.createOperation(REMOVE,address) @TO@ VariableDeclarationStatement@@ModelNode removeStack=Util.createOperation(REMOVE,address); @AT@ 2537 @LENGTH@ 51
------------------INS SimpleName@@removeStack @TO@ VariableDeclarationFragment@@removeStack=Util.createOperation(REMOVE,address) @AT@ 2537 @LENGTH@ 11
------------------INS MethodInvocation@@Util.createOperation(REMOVE,address) @TO@ VariableDeclarationFragment@@removeStack=Util.createOperation(REMOVE,address) @AT@ 2551 @LENGTH@ 37
---------------------INS SimpleName@@Name:Util @TO@ MethodInvocation@@Util.createOperation(REMOVE,address) @AT@ 2551 @LENGTH@ 4
---------------------INS SimpleName@@MethodName:createOperation:[REMOVE, address] @TO@ MethodInvocation@@Util.createOperation(REMOVE,address) @AT@ 2556 @LENGTH@ 32
------------------------INS SimpleName@@REMOVE @TO@ SimpleName@@MethodName:createOperation:[REMOVE, address] @AT@ 2572 @LENGTH@ 6
------------------------INS SimpleName@@address @TO@ SimpleName@@MethodName:createOperation:[REMOVE, address] @AT@ 2580 @LENGTH@ 7
------------INS ExpressionStatement@@MethodInvocation:ProtocolStackAdd.INSTANCE.removeRuntimeServices(context,removeStack,stack.getValue()) @TO@ EnhancedForStatement@@for (Property stack : stacks) {  PathAddress address=PathAddress.pathAddress(JGroupsExtension.SUBSYSTEM_PATH).append(ModelKeys.STACK,stack.getName());  ModelNode removeStack=Util.createOperation(REMOVE,address);  ProtocolStackAdd.INSTANCE.removeRuntimeServices(context,removeStack,stack.getValue());} @AT@ 2673 @LENGTH@ 88
---------------INS MethodInvocation@@ProtocolStackAdd.INSTANCE.removeRuntimeServices(context,removeStack,stack.getValue()) @TO@ ExpressionStatement@@MethodInvocation:ProtocolStackAdd.INSTANCE.removeRuntimeServices(context,removeStack,stack.getValue()) @AT@ 2673 @LENGTH@ 87
------------------INS QualifiedName@@Name:ProtocolStackAdd.INSTANCE @TO@ MethodInvocation@@ProtocolStackAdd.INSTANCE.removeRuntimeServices(context,removeStack,stack.getValue()) @AT@ 2673 @LENGTH@ 25
------------------INS SimpleName@@MethodName:removeRuntimeServices:[context, removeStack, stack.getValue()] @TO@ MethodInvocation@@ProtocolStackAdd.INSTANCE.removeRuntimeServices(context,removeStack,stack.getValue()) @AT@ 2699 @LENGTH@ 61
---------------------INS SimpleName@@context @TO@ SimpleName@@MethodName:removeRuntimeServices:[context, removeStack, stack.getValue()] @AT@ 2721 @LENGTH@ 7
---------------------INS SimpleName@@removeStack @TO@ SimpleName@@MethodName:removeRuntimeServices:[context, removeStack, stack.getValue()] @AT@ 2730 @LENGTH@ 11
---------------------INS MethodInvocation@@stack.getValue() @TO@ SimpleName@@MethodName:removeRuntimeServices:[context, removeStack, stack.getValue()] @AT@ 2743 @LENGTH@ 16
------------------------INS SimpleName@@Name:stack @TO@ MethodInvocation@@stack.getValue() @AT@ 2743 @LENGTH@ 5
------------------------INS SimpleName@@MethodName:getValue:[] @TO@ MethodInvocation@@stack.getValue() @AT@ 2749 @LENGTH@ 10
---INS VariableDeclarationStatement@@ServiceName protocolDefaultsService=ProtocolDefaultsService.SERVICE_NAME; @TO@ MethodDeclaration@@protected, void, MethodName:performRuntime, OperationContext context, ModelNode operation, ModelNode model, ServiceVerificationHandler verificationHandler, List<ServiceController<?>> newControllers,  @AT@ 2841 @LENGTH@ 75
------INS SimpleType@@ServiceName @TO@ VariableDeclarationStatement@@ServiceName protocolDefaultsService=ProtocolDefaultsService.SERVICE_NAME; @AT@ 2841 @LENGTH@ 11
------INS VariableDeclarationFragment@@protocolDefaultsService=ProtocolDefaultsService.SERVICE_NAME @TO@ VariableDeclarationStatement@@ServiceName protocolDefaultsService=ProtocolDefaultsService.SERVICE_NAME; @AT@ 2853 @LENGTH@ 62
---------INS SimpleName@@protocolDefaultsService @TO@ VariableDeclarationFragment@@protocolDefaultsService=ProtocolDefaultsService.SERVICE_NAME @AT@ 2853 @LENGTH@ 23
---------INS QualifiedName@@ProtocolDefaultsService.SERVICE_NAME @TO@ VariableDeclarationFragment@@protocolDefaultsService=ProtocolDefaultsService.SERVICE_NAME @AT@ 2879 @LENGTH@ 36
------------INS SimpleName@@ProtocolDefaultsService @TO@ QualifiedName@@ProtocolDefaultsService.SERVICE_NAME @AT@ 2879 @LENGTH@ 23
------------INS SimpleName@@SERVICE_NAME @TO@ QualifiedName@@ProtocolDefaultsService.SERVICE_NAME @AT@ 2903 @LENGTH@ 12
---INS VariableDeclarationStatement@@ServiceName defaultChannelFactoryService=ChannelFactoryService.getServiceName(null); @TO@ MethodDeclaration@@protected, void, MethodName:performRuntime, OperationContext context, ModelNode operation, ModelNode model, ServiceVerificationHandler verificationHandler, List<ServiceController<?>> newControllers,  @AT@ 3038 @LENGTH@ 86
------INS SimpleType@@ServiceName @TO@ VariableDeclarationStatement@@ServiceName defaultChannelFactoryService=ChannelFactoryService.getServiceName(null); @AT@ 3038 @LENGTH@ 11
------INS VariableDeclarationFragment@@defaultChannelFactoryService=ChannelFactoryService.getServiceName(null) @TO@ VariableDeclarationStatement@@ServiceName defaultChannelFactoryService=ChannelFactoryService.getServiceName(null); @AT@ 3050 @LENGTH@ 73
---------MOV MethodInvocation@@ChannelFactoryService.getServiceName(null) @TO@ VariableDeclarationFragment@@defaultChannelFactoryService=ChannelFactoryService.getServiceName(null) @AT@ 1880 @LENGTH@ 42
---------INS SimpleName@@defaultChannelFactoryService @TO@ VariableDeclarationFragment@@defaultChannelFactoryService=ChannelFactoryService.getServiceName(null) @AT@ 3050 @LENGTH@ 28


UPD IfStatement@@if (delegateContext == null) {  throw MESSAGES.noContextToDelegateTo(operationId);  ;} @TO@ if (delegateContext == null) {  throw MESSAGES.noContextToDelegateTo(operationId);} @AT@ 7607 @LENGTH@ 203
---UPD Block@@ThenBody:{  throw MESSAGES.noContextToDelegateTo(operationId);  ;} @TO@ ThenBody:{  throw MESSAGES.noContextToDelegateTo(operationId);} @AT@ 7635 @LENGTH@ 175


UPD IfStatement@@if (group == null) {  throw MESSAGES.undefinedSocketBindingGroup(ref);} @TO@ if (includedGroup == null) {  throw MESSAGES.undefinedSocketBindingGroup(ref);} @AT@ 21432 @LENGTH@ 115
---UPD InfixExpression@@group == null @TO@ includedGroup == null @AT@ 21436 @LENGTH@ 13
------UPD SimpleName@@group @TO@ includedGroup @AT@ 21436 @LENGTH@ 5


UPD ExpressionStatement@@MethodInvocation:Common.sendError(exchange,false,"No file found") @TO@ MethodInvocation:Common.sendError(exchange,false,false,"No file found") @AT@ 4176 @LENGTH@ 51
---UPD MethodInvocation@@Common.sendError(exchange,false,"No file found") @TO@ Common.sendError(exchange,false,false,"No file found") @AT@ 4176 @LENGTH@ 50
------UPD SimpleName@@MethodName:sendError:[exchange, false, "No file found"] @TO@ MethodName:sendError:[exchange, false, false, "No file found"] @AT@ 4183 @LENGTH@ 43
---------INS BooleanLiteral@@false @TO@ SimpleName@@MethodName:sendError:[exchange, false, "No file found"] @AT@ 4224 @LENGTH@ 5


UPD ThrowStatement@@ClassInstanceCreation:new CannotGetMongoDbConnectionException("Failed to authenticate to database [" + databaseName + "], username = ["+ username+ "], password = ["+ password+ "]",databaseName,credentials) @TO@ ClassInstanceCreation:new CannotGetMongoDbConnectionException("Failed to authenticate to database [" + databaseName + "], "+ credentials.toString(),databaseName,credentials) @AT@ 4053 @LENGTH@ 203
---UPD ClassInstanceCreation@@CannotGetMongoDbConnectionException["Failed to authenticate to database [" + databaseName + "], username = ["+ username+ "], password = ["+ password+ "]", databaseName, credentials] @TO@ CannotGetMongoDbConnectionException["Failed to authenticate to database [" + databaseName + "], "+ credentials.toString(), databaseName, credentials] @AT@ 4059 @LENGTH@ 196
------UPD InfixExpression@@"Failed to authenticate to database [" + databaseName + "], username = ["+ username+ "], password = ["+ password+ "]" @TO@ "Failed to authenticate to database [" + databaseName + "], "+ credentials.toString() @AT@ 4099 @LENGTH@ 128
---------UPD StringLiteral@@"], username = [" @TO@ "], " @AT@ 4162 @LENGTH@ 17
---------INS MethodInvocation@@credentials.toString() @TO@ InfixExpression@@"Failed to authenticate to database [" + databaseName + "], username = ["+ username+ "], password = ["+ password+ "]" @AT@ 4170 @LENGTH@ 22
------------INS SimpleName@@Name:credentials @TO@ MethodInvocation@@credentials.toString() @AT@ 4170 @LENGTH@ 11
------------INS SimpleName@@MethodName:toString:[] @TO@ MethodInvocation@@credentials.toString() @AT@ 4182 @LENGTH@ 10
---------DEL SimpleName@@username @AT@ 4182 @LENGTH@ 8
---------DEL StringLiteral@@"], password = [" @AT@ 4193 @LENGTH@ 17
---------DEL SimpleName@@password @AT@ 4213 @LENGTH@ 8
---------DEL StringLiteral@@"]" @AT@ 4224 @LENGTH@ 3


UPD ExpressionStatement@@Assignment:lines=FileUtils.readLines(file) @TO@ Assignment:lines=FileUtils.readLines(file,"UTF-8") @AT@ 7526 @LENGTH@ 34
---UPD Assignment@@lines=FileUtils.readLines(file) @TO@ lines=FileUtils.readLines(file,"UTF-8") @AT@ 7526 @LENGTH@ 33
------UPD MethodInvocation@@FileUtils.readLines(file) @TO@ FileUtils.readLines(file,"UTF-8") @AT@ 7534 @LENGTH@ 25
---------UPD SimpleName@@MethodName:readLines:[file] @TO@ MethodName:readLines:[file, "UTF-8"] @AT@ 7544 @LENGTH@ 15
------------INS StringLiteral@@"UTF-8" @TO@ SimpleName@@MethodName:readLines:[file] @AT@ 7560 @LENGTH@ 7


INS MethodDeclaration@@public, SimpleAttributeDefinitionBuilder, MethodName:addAlternatives, String... alternatives,  @TO@ TypeDeclaration@@[public]SimpleAttributeDefinitionBuilder, AbstractAttributeDefinitionBuilder<SimpleAttributeDefinitionBuilder,SimpleAttributeDefinition> @AT@ 6561 @LENGTH@ 138
---INS Modifier@@public @TO@ MethodDeclaration@@public, SimpleAttributeDefinitionBuilder, MethodName:addAlternatives, String... alternatives,  @AT@ 6561 @LENGTH@ 6
---INS SimpleType@@SimpleAttributeDefinitionBuilder @TO@ MethodDeclaration@@public, SimpleAttributeDefinitionBuilder, MethodName:addAlternatives, String... alternatives,  @AT@ 6568 @LENGTH@ 32
---INS SimpleName@@MethodName:addAlternatives @TO@ MethodDeclaration@@public, SimpleAttributeDefinitionBuilder, MethodName:addAlternatives, String... alternatives,  @AT@ 6601 @LENGTH@ 15
---INS SingleVariableDeclaration@@String... alternatives @TO@ MethodDeclaration@@public, SimpleAttributeDefinitionBuilder, MethodName:addAlternatives, String... alternatives,  @AT@ 6617 @LENGTH@ 21
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String... alternatives @AT@ 6617 @LENGTH@ 6
------INS SimpleName@@alternatives @TO@ SingleVariableDeclaration@@String... alternatives @AT@ 6626 @LENGTH@ 12
---INS ReturnStatement@@SuperMethodInvocation:super.addAlternatives(alternatives) @TO@ MethodDeclaration@@public, SimpleAttributeDefinitionBuilder, MethodName:addAlternatives, String... alternatives,  @AT@ 6650 @LENGTH@ 43
------INS SuperMethodInvocation@@super.addAlternatives(alternatives) @TO@ ReturnStatement@@SuperMethodInvocation:super.addAlternatives(alternatives) @AT@ 6657 @LENGTH@ 35
---------INS SimpleName@@MethodName:addAlternatives:[alternatives] @TO@ SuperMethodInvocation@@super.addAlternatives(alternatives) @AT@ 6663 @LENGTH@ 15
---------INS SimpleName@@alternatives @TO@ SuperMethodInvocation@@super.addAlternatives(alternatives) @AT@ 6679 @LENGTH@ 12


UPD ExpressionStatement@@MethodInvocation:context.restartRequired() @TO@ MethodInvocation:context.reloadRequired() @AT@ 3445 @LENGTH@ 26
---UPD MethodInvocation@@context.restartRequired() @TO@ context.reloadRequired() @AT@ 3445 @LENGTH@ 25
------UPD SimpleName@@MethodName:restartRequired:[] @TO@ MethodName:reloadRequired:[] @AT@ 3453 @LENGTH@ 17


INS MethodDeclaration@@public, void, MethodName:testZRevRangeByScoreOffsetCount,  @TO@ TypeDeclaration@@[@RunWith(SpringJUnit4ClassRunner.class), @ContextConfiguration("SrpConnectionIntegrationTests-context.xml"), public]SrpConnectionPipelineIntegrationTests, AbstractConnectionPipelineIntegrationTests @AT@ 3107 @LENGTH@ 50
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testZRevRangeByScoreOffsetCount,  @AT@ 3107 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testZRevRangeByScoreOffsetCount,  @AT@ 3114 @LENGTH@ 4
---INS SimpleName@@MethodName:testZRevRangeByScoreOffsetCount @TO@ MethodDeclaration@@public, void, MethodName:testZRevRangeByScoreOffsetCount,  @AT@ 3119 @LENGTH@ 31


UPD ExpressionStatement@@Assignment:modulePath=modulePath.split(File.pathSeparator)[1] @TO@ Assignment:modulePath=modulePath.split(File.pathSeparator)[0] @AT@ 7609 @LENGTH@ 53
---UPD Assignment@@modulePath=modulePath.split(File.pathSeparator)[1] @TO@ modulePath=modulePath.split(File.pathSeparator)[0] @AT@ 7609 @LENGTH@ 52
------UPD ArrayAccess@@modulePath.split(File.pathSeparator)[1] @TO@ modulePath.split(File.pathSeparator)[0] @AT@ 7622 @LENGTH@ 39
---------UPD NumberLiteral@@1 @TO@ 0 @AT@ 7659 @LENGTH@ 1


INS MethodDeclaration@@public, void, MethodName:testMultiDiscard,  @TO@ TypeDeclaration@@[public]SrpConnectionIntegrationTests, AbstractConnectionIntegrationTests @AT@ 1607 @LENGTH@ 35
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testMultiDiscard,  @AT@ 1607 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testMultiDiscard,  @AT@ 1614 @LENGTH@ 4
---INS SimpleName@@MethodName:testMultiDiscard @TO@ MethodDeclaration@@public, void, MethodName:testMultiDiscard,  @AT@ 1619 @LENGTH@ 16


INS TryStatement@@try {  if (model.hasDefined(ModelDescriptionConstants.DIRECTORY_GROUPING)) {    return DirectoryGrouping.forName(HostResourceDefinition.DIRECTORY_GROUPING.resolveModelAttribute(ExpressionResolver.DEFAULT,model).asString());  }} catch (OperationFailedException e) {  throw new IllegalStateException(e);} @TO@ MethodDeclaration@@public, static, DirectoryGrouping, MethodName:fromModel, final ModelNode model,  @AT@ 3415 @LENGTH@ 367
---INS IfStatement@@if (model.hasDefined(ModelDescriptionConstants.DIRECTORY_GROUPING)) {  return DirectoryGrouping.forName(HostResourceDefinition.DIRECTORY_GROUPING.resolveModelAttribute(ExpressionResolver.DEFAULT,model).asString());} @TO@ TryStatement@@try {  if (model.hasDefined(ModelDescriptionConstants.DIRECTORY_GROUPING)) {    return DirectoryGrouping.forName(HostResourceDefinition.DIRECTORY_GROUPING.resolveModelAttribute(ExpressionResolver.DEFAULT,model).asString());  }} catch (OperationFailedException e) {  throw new IllegalStateException(e);} @AT@ 3433 @LENGTH@ 244
------MOV MethodInvocation@@model.hasDefined(ModelDescriptionConstants.DIRECTORY_GROUPING) @TO@ IfStatement@@if (model.hasDefined(ModelDescriptionConstants.DIRECTORY_GROUPING)) {  return DirectoryGrouping.forName(HostResourceDefinition.DIRECTORY_GROUPING.resolveModelAttribute(ExpressionResolver.DEFAULT,model).asString());} @AT@ 3240 @LENGTH@ 62
------MOV Block@@ThenBody:{  return DirectoryGrouping.forName(model.get(ModelDescriptionConstants.DIRECTORY_GROUPING).asString());} @TO@ IfStatement@@if (model.hasDefined(ModelDescriptionConstants.DIRECTORY_GROUPING)) {  return DirectoryGrouping.forName(HostResourceDefinition.DIRECTORY_GROUPING.resolveModelAttribute(ExpressionResolver.DEFAULT,model).asString());} @AT@ 3304 @LENGTH@ 125
---------UPD ReturnStatement@@MethodInvocation:DirectoryGrouping.forName(model.get(ModelDescriptionConstants.DIRECTORY_GROUPING).asString()) @TO@ MethodInvocation:DirectoryGrouping.forName(HostResourceDefinition.DIRECTORY_GROUPING.resolveModelAttribute(ExpressionResolver.DEFAULT,model).asString()) @AT@ 3318 @LENGTH@ 101
------------UPD MethodInvocation@@DirectoryGrouping.forName(model.get(ModelDescriptionConstants.DIRECTORY_GROUPING).asString()) @TO@ DirectoryGrouping.forName(HostResourceDefinition.DIRECTORY_GROUPING.resolveModelAttribute(ExpressionResolver.DEFAULT,model).asString()) @AT@ 3325 @LENGTH@ 93
---------------UPD SimpleName@@MethodName:forName:[model.get(ModelDescriptionConstants.DIRECTORY_GROUPING).asString()] @TO@ MethodName:forName:[HostResourceDefinition.DIRECTORY_GROUPING.resolveModelAttribute(ExpressionResolver.DEFAULT,model).asString()] @AT@ 3343 @LENGTH@ 75
------------------UPD MethodInvocation@@model.get(ModelDescriptionConstants.DIRECTORY_GROUPING).asString() @TO@ HostResourceDefinition.DIRECTORY_GROUPING.resolveModelAttribute(ExpressionResolver.DEFAULT,model).asString() @AT@ 3351 @LENGTH@ 66
---------------------UPD MethodInvocation@@MethodName:get:[ModelDescriptionConstants.DIRECTORY_GROUPING] @TO@ MethodName:resolveModelAttribute:[ExpressionResolver.DEFAULT, model] @AT@ 3351 @LENGTH@ 55
------------------------UPD QualifiedName@@ModelDescriptionConstants.DIRECTORY_GROUPING @TO@ ExpressionResolver.DEFAULT @AT@ 3361 @LENGTH@ 44
---------------------------UPD SimpleName@@ModelDescriptionConstants @TO@ ExpressionResolver @AT@ 3361 @LENGTH@ 25
---------------------------UPD SimpleName@@DIRECTORY_GROUPING @TO@ DEFAULT @AT@ 3387 @LENGTH@ 18
------------------------INS SimpleName@@model @TO@ MethodInvocation@@MethodName:get:[ModelDescriptionConstants.DIRECTORY_GROUPING] @AT@ 3644 @LENGTH@ 5
---------------------DEL SimpleName@@Name:model @AT@ 3351 @LENGTH@ 5
---------------------INS QualifiedName@@Name:HostResourceDefinition.DIRECTORY_GROUPING @TO@ MethodInvocation@@model.get(ModelDescriptionConstants.DIRECTORY_GROUPING).asString() @AT@ 3552 @LENGTH@ 41
---INS CatchClause@@catch (OperationFailedException e) {  throw new IllegalStateException(e);} @TO@ TryStatement@@try {  if (model.hasDefined(ModelDescriptionConstants.DIRECTORY_GROUPING)) {    return DirectoryGrouping.forName(HostResourceDefinition.DIRECTORY_GROUPING.resolveModelAttribute(ExpressionResolver.DEFAULT,model).asString());  }} catch (OperationFailedException e) {  throw new IllegalStateException(e);} @AT@ 3688 @LENGTH@ 94
------INS SingleVariableDeclaration@@OperationFailedException e @TO@ CatchClause@@catch (OperationFailedException e) {  throw new IllegalStateException(e);} @AT@ 3695 @LENGTH@ 26
---------INS SimpleType@@OperationFailedException @TO@ SingleVariableDeclaration@@OperationFailedException e @AT@ 3695 @LENGTH@ 24
---------INS SimpleName@@e @TO@ SingleVariableDeclaration@@OperationFailedException e @AT@ 3720 @LENGTH@ 1
------INS ThrowStatement@@ClassInstanceCreation:new IllegalStateException(e) @TO@ CatchClause@@catch (OperationFailedException e) {  throw new IllegalStateException(e);} @AT@ 3737 @LENGTH@ 35
---------INS ClassInstanceCreation@@IllegalStateException[e] @TO@ ThrowStatement@@ClassInstanceCreation:new IllegalStateException(e) @AT@ 3743 @LENGTH@ 28
------------INS New@@new @TO@ ClassInstanceCreation@@IllegalStateException[e] @AT@ 3743 @LENGTH@ 3
------------INS SimpleType@@IllegalStateException @TO@ ClassInstanceCreation@@IllegalStateException[e] @AT@ 3747 @LENGTH@ 21
------------INS SimpleName@@e @TO@ ClassInstanceCreation@@IllegalStateException[e] @AT@ 3769 @LENGTH@ 1


UPD FieldDeclaration@@public, static, final, SimpleAttributeDefinition, [DIRECTORY_GROUPING=SimpleAttributeDefinitionBuilder.create(ModelDescriptionConstants.DIRECTORY_GROUPING,ModelType.STRING,true).addFlag(AttributeAccess.Flag.RESTART_ALL_SERVICES).setDefaultValue(DirectoryGrouping.defaultValue().toModelNode()).setValidator(EnumValidator.create(DirectoryGrouping.class,true,false)).build()] @TO@ public, static, final, SimpleAttributeDefinition, [DIRECTORY_GROUPING=SimpleAttributeDefinitionBuilder.create(ModelDescriptionConstants.DIRECTORY_GROUPING,ModelType.STRING,true).addFlag(AttributeAccess.Flag.RESTART_ALL_SERVICES).setDefaultValue(DirectoryGrouping.defaultValue().toModelNode()).setValidator(EnumValidator.create(DirectoryGrouping.class,true,true)).setAllowExpression(true).build()] @AT@ 8203 @LENGTH@ 425
---UPD VariableDeclarationFragment@@DIRECTORY_GROUPING=SimpleAttributeDefinitionBuilder.create(ModelDescriptionConstants.DIRECTORY_GROUPING,ModelType.STRING,true).addFlag(AttributeAccess.Flag.RESTART_ALL_SERVICES).setDefaultValue(DirectoryGrouping.defaultValue().toModelNode()).setValidator(EnumValidator.create(DirectoryGrouping.class,true,false)).build() @TO@ DIRECTORY_GROUPING=SimpleAttributeDefinitionBuilder.create(ModelDescriptionConstants.DIRECTORY_GROUPING,ModelType.STRING,true).addFlag(AttributeAccess.Flag.RESTART_ALL_SERVICES).setDefaultValue(DirectoryGrouping.defaultValue().toModelNode()).setValidator(EnumValidator.create(DirectoryGrouping.class,true,true)).setAllowExpression(true).build() @AT@ 8249 @LENGTH@ 378
------UPD MethodInvocation@@SimpleAttributeDefinitionBuilder.create(ModelDescriptionConstants.DIRECTORY_GROUPING,ModelType.STRING,true).addFlag(AttributeAccess.Flag.RESTART_ALL_SERVICES).setDefaultValue(DirectoryGrouping.defaultValue().toModelNode()).setValidator(EnumValidator.create(DirectoryGrouping.class,true,false)).build() @TO@ SimpleAttributeDefinitionBuilder.create(ModelDescriptionConstants.DIRECTORY_GROUPING,ModelType.STRING,true).addFlag(AttributeAccess.Flag.RESTART_ALL_SERVICES).setDefaultValue(DirectoryGrouping.defaultValue().toModelNode()).setValidator(EnumValidator.create(DirectoryGrouping.class,true,true)).setAllowExpression(true).build() @AT@ 8270 @LENGTH@ 357
---------UPD MethodInvocation@@MethodName:setValidator:[EnumValidator.create(DirectoryGrouping.class,true,false)] @TO@ MethodName:setValidator:[EnumValidator.create(DirectoryGrouping.class,true,true)] @AT@ 8270 @LENGTH@ 336
------------UPD MethodInvocation@@EnumValidator.create(DirectoryGrouping.class,true,false) @TO@ EnumValidator.create(DirectoryGrouping.class,true,true) @AT@ 8547 @LENGTH@ 58
---------------UPD SimpleName@@MethodName:create:[DirectoryGrouping.class, true, false] @TO@ MethodName:create:[DirectoryGrouping.class, true, true] @AT@ 8561 @LENGTH@ 44
------------------UPD BooleanLiteral@@false @TO@ true @AT@ 8599 @LENGTH@ 5
---------INS MethodInvocation@@MethodName:setAllowExpression:[true] @TO@ MethodInvocation@@SimpleAttributeDefinitionBuilder.create(ModelDescriptionConstants.DIRECTORY_GROUPING,ModelType.STRING,true).addFlag(AttributeAccess.Flag.RESTART_ALL_SERVICES).setDefaultValue(DirectoryGrouping.defaultValue().toModelNode()).setValidator(EnumValidator.create(DirectoryGrouping.class,true,false)).build() @AT@ 8270 @LENGTH@ 373
------------INS BooleanLiteral@@true @TO@ MethodInvocation@@MethodName:setAllowExpression:[true] @AT@ 8638 @LENGTH@ 4


INS MethodDeclaration@@public, void, MethodName:countAndFindWithoutTypeInformation,  @TO@ TypeDeclaration@@[@RunWith(SpringJUnit4ClassRunner.class), @ContextConfiguration("classpath:infrastructure.xml"), public]MongoTemplateTests,  @AT@ 49417 @LENGTH@ 377
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:countAndFindWithoutTypeInformation,  @AT@ 49417 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:countAndFindWithoutTypeInformation,  @AT@ 49424 @LENGTH@ 4
---INS SimpleName@@MethodName:countAndFindWithoutTypeInformation @TO@ MethodDeclaration@@public, void, MethodName:countAndFindWithoutTypeInformation,  @AT@ 49429 @LENGTH@ 34
---INS VariableDeclarationStatement@@Person person=new Person(); @TO@ MethodDeclaration@@public, void, MethodName:countAndFindWithoutTypeInformation,  @AT@ 49471 @LENGTH@ 29
------INS SimpleType@@Person @TO@ VariableDeclarationStatement@@Person person=new Person(); @AT@ 49471 @LENGTH@ 6
------INS VariableDeclarationFragment@@person=new Person() @TO@ VariableDeclarationStatement@@Person person=new Person(); @AT@ 49478 @LENGTH@ 21
---------INS SimpleName@@person @TO@ VariableDeclarationFragment@@person=new Person() @AT@ 49478 @LENGTH@ 6
---------INS ClassInstanceCreation@@Person[] @TO@ VariableDeclarationFragment@@person=new Person() @AT@ 49487 @LENGTH@ 12
------------INS New@@new @TO@ ClassInstanceCreation@@Person[] @AT@ 49487 @LENGTH@ 3
------------INS SimpleType@@Person @TO@ ClassInstanceCreation@@Person[] @AT@ 49491 @LENGTH@ 6
---INS ExpressionStatement@@MethodInvocation:template.save(person) @TO@ MethodDeclaration@@public, void, MethodName:countAndFindWithoutTypeInformation,  @AT@ 49503 @LENGTH@ 22
------INS MethodInvocation@@template.save(person) @TO@ ExpressionStatement@@MethodInvocation:template.save(person) @AT@ 49503 @LENGTH@ 21
---------INS SimpleName@@Name:template @TO@ MethodInvocation@@template.save(person) @AT@ 49503 @LENGTH@ 8
---------INS SimpleName@@MethodName:save:[person] @TO@ MethodInvocation@@template.save(person) @AT@ 49512 @LENGTH@ 12
------------INS SimpleName@@person @TO@ SimpleName@@MethodName:save:[person] @AT@ 49517 @LENGTH@ 6
---INS VariableDeclarationStatement@@Query query=query(where("_id").is(person.getId())); @TO@ MethodDeclaration@@public, void, MethodName:countAndFindWithoutTypeInformation,  @AT@ 49529 @LENGTH@ 53
------INS SimpleType@@Query @TO@ VariableDeclarationStatement@@Query query=query(where("_id").is(person.getId())); @AT@ 49529 @LENGTH@ 5
------INS VariableDeclarationFragment@@query=query(where("_id").is(person.getId())) @TO@ VariableDeclarationStatement@@Query query=query(where("_id").is(person.getId())); @AT@ 49535 @LENGTH@ 46
---------INS SimpleName@@query @TO@ VariableDeclarationFragment@@query=query(where("_id").is(person.getId())) @AT@ 49535 @LENGTH@ 5
---------INS MethodInvocation@@query(where("_id").is(person.getId())) @TO@ VariableDeclarationFragment@@query=query(where("_id").is(person.getId())) @AT@ 49543 @LENGTH@ 38
------------INS SimpleName@@MethodName:query:[where("_id").is(person.getId())] @TO@ MethodInvocation@@query(where("_id").is(person.getId())) @AT@ 49543 @LENGTH@ 38
---------------INS MethodInvocation@@where("_id").is(person.getId()) @TO@ SimpleName@@MethodName:query:[where("_id").is(person.getId())] @AT@ 49549 @LENGTH@ 31
------------------INS MethodInvocation@@MethodName:where:["_id"] @TO@ MethodInvocation@@where("_id").is(person.getId()) @AT@ 49549 @LENGTH@ 12
---------------------INS StringLiteral@@"_id" @TO@ MethodInvocation@@MethodName:where:["_id"] @AT@ 49555 @LENGTH@ 5
------------------INS SimpleName@@MethodName:is:[person.getId()] @TO@ MethodInvocation@@where("_id").is(person.getId()) @AT@ 49562 @LENGTH@ 18
---------------------INS MethodInvocation@@person.getId() @TO@ SimpleName@@MethodName:is:[person.getId()] @AT@ 49565 @LENGTH@ 14
------------------------INS SimpleName@@Name:person @TO@ MethodInvocation@@person.getId() @AT@ 49565 @LENGTH@ 6
------------------------INS SimpleName@@MethodName:getId:[] @TO@ MethodInvocation@@person.getId() @AT@ 49572 @LENGTH@ 7
---INS VariableDeclarationStatement@@String collectionName=template.getCollectionName(Person.class); @TO@ MethodDeclaration@@public, void, MethodName:countAndFindWithoutTypeInformation,  @AT@ 49585 @LENGTH@ 65
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String collectionName=template.getCollectionName(Person.class); @AT@ 49585 @LENGTH@ 6
------INS VariableDeclarationFragment@@collectionName=template.getCollectionName(Person.class) @TO@ VariableDeclarationStatement@@String collectionName=template.getCollectionName(Person.class); @AT@ 49592 @LENGTH@ 57
---------INS SimpleName@@collectionName @TO@ VariableDeclarationFragment@@collectionName=template.getCollectionName(Person.class) @AT@ 49592 @LENGTH@ 14
---------INS MethodInvocation@@template.getCollectionName(Person.class) @TO@ VariableDeclarationFragment@@collectionName=template.getCollectionName(Person.class) @AT@ 49609 @LENGTH@ 40
------------INS SimpleName@@Name:template @TO@ MethodInvocation@@template.getCollectionName(Person.class) @AT@ 49609 @LENGTH@ 8
------------INS SimpleName@@MethodName:getCollectionName:[Person.class] @TO@ MethodInvocation@@template.getCollectionName(Person.class) @AT@ 49618 @LENGTH@ 31
---------------INS TypeLiteral@@Person.class @TO@ SimpleName@@MethodName:getCollectionName:[Person.class] @AT@ 49636 @LENGTH@ 12
---INS ExpressionStatement@@MethodInvocation:assertThat(template.find(query,HashMap.class,collectionName),hasSize(1)) @TO@ MethodDeclaration@@public, void, MethodName:countAndFindWithoutTypeInformation,  @AT@ 49654 @LENGTH@ 76
------INS MethodInvocation@@assertThat(template.find(query,HashMap.class,collectionName),hasSize(1)) @TO@ ExpressionStatement@@MethodInvocation:assertThat(template.find(query,HashMap.class,collectionName),hasSize(1)) @AT@ 49654 @LENGTH@ 75
---------INS SimpleName@@MethodName:assertThat:[template.find(query,HashMap.class,collectionName), hasSize(1)] @TO@ MethodInvocation@@assertThat(template.find(query,HashMap.class,collectionName),hasSize(1)) @AT@ 49654 @LENGTH@ 75
------------INS MethodInvocation@@template.find(query,HashMap.class,collectionName) @TO@ SimpleName@@MethodName:assertThat:[template.find(query,HashMap.class,collectionName), hasSize(1)] @AT@ 49665 @LENGTH@ 51
---------------INS SimpleName@@Name:template @TO@ MethodInvocation@@template.find(query,HashMap.class,collectionName) @AT@ 49665 @LENGTH@ 8
---------------INS SimpleName@@MethodName:find:[query, HashMap.class, collectionName] @TO@ MethodInvocation@@template.find(query,HashMap.class,collectionName) @AT@ 49674 @LENGTH@ 42
------------------INS SimpleName@@query @TO@ SimpleName@@MethodName:find:[query, HashMap.class, collectionName] @AT@ 49679 @LENGTH@ 5
------------------INS TypeLiteral@@HashMap.class @TO@ SimpleName@@MethodName:find:[query, HashMap.class, collectionName] @AT@ 49686 @LENGTH@ 13
------------------INS SimpleName@@collectionName @TO@ SimpleName@@MethodName:find:[query, HashMap.class, collectionName] @AT@ 49701 @LENGTH@ 14
------------INS MethodInvocation@@hasSize(1) @TO@ SimpleName@@MethodName:assertThat:[template.find(query,HashMap.class,collectionName), hasSize(1)] @AT@ 49718 @LENGTH@ 10
---------------INS SimpleName@@MethodName:hasSize:[1] @TO@ MethodInvocation@@hasSize(1) @AT@ 49718 @LENGTH@ 10
------------------INS NumberLiteral@@1 @TO@ SimpleName@@MethodName:hasSize:[1] @AT@ 49726 @LENGTH@ 1
---------------INS SimpleName@@MethodName:hasSize:[1] @TO@ MethodInvocation@@hasSize(1) @AT@ 49718 @LENGTH@ 10
------------------INS NumberLiteral@@1 @TO@ SimpleName@@MethodName:hasSize:[1] @AT@ 49726 @LENGTH@ 1
---INS ExpressionStatement@@MethodInvocation:assertThat(template.count(query,collectionName),is(1L)) @TO@ MethodDeclaration@@public, void, MethodName:countAndFindWithoutTypeInformation,  @AT@ 49733 @LENGTH@ 58
------INS MethodInvocation@@assertThat(template.count(query,collectionName),is(1L)) @TO@ ExpressionStatement@@MethodInvocation:assertThat(template.count(query,collectionName),is(1L)) @AT@ 49733 @LENGTH@ 57
---------INS SimpleName@@MethodName:assertThat:[template.count(query,collectionName), is(1L)] @TO@ MethodInvocation@@assertThat(template.count(query,collectionName),is(1L)) @AT@ 49733 @LENGTH@ 57
------------INS MethodInvocation@@template.count(query,collectionName) @TO@ SimpleName@@MethodName:assertThat:[template.count(query,collectionName), is(1L)] @AT@ 49744 @LENGTH@ 37
---------------INS SimpleName@@Name:template @TO@ MethodInvocation@@template.count(query,collectionName) @AT@ 49744 @LENGTH@ 8
---------------INS SimpleName@@MethodName:count:[query, collectionName] @TO@ MethodInvocation@@template.count(query,collectionName) @AT@ 49753 @LENGTH@ 28
------------------INS SimpleName@@query @TO@ SimpleName@@MethodName:count:[query, collectionName] @AT@ 49759 @LENGTH@ 5
------------------INS SimpleName@@collectionName @TO@ SimpleName@@MethodName:count:[query, collectionName] @AT@ 49766 @LENGTH@ 14
------------INS MethodInvocation@@is(1L) @TO@ SimpleName@@MethodName:assertThat:[template.count(query,collectionName), is(1L)] @AT@ 49783 @LENGTH@ 6
---------------INS SimpleName@@MethodName:is:[1L] @TO@ MethodInvocation@@is(1L) @AT@ 49783 @LENGTH@ 6
------------------INS NumberLiteral@@1L @TO@ SimpleName@@MethodName:is:[1L] @AT@ 49786 @LENGTH@ 2
---------------INS SimpleName@@MethodName:is:[1L] @TO@ MethodInvocation@@is(1L) @AT@ 49783 @LENGTH@ 6
------------------INS NumberLiteral@@1L @TO@ SimpleName@@MethodName:is:[1L] @AT@ 49786 @LENGTH@ 2


UPD MethodDeclaration@@public, TransformedOperation, MethodName:transformOperation, final TransformationContext context, final PathAddress address, final ModelNode original,  @TO@ public, TransformedOperation, MethodName:transformOperation, final TransformationContext context, final PathAddress address, final ModelNode original, OperationFailedException,  @AT@ 1910 @LENGTH@ 476
---INS SimpleType@@OperationFailedException @TO@ MethodDeclaration@@public, TransformedOperation, MethodName:transformOperation, final TransformationContext context, final PathAddress address, final ModelNode original,  @AT@ 2111 @LENGTH@ 24
---DEL ReturnStatement@@ClassInstanceCreation:new TransformedOperation(operation,OperationResultTransformer.ORIGINAL_RESULT) @AT@ 2293 @LENGTH@ 87
------DEL ClassInstanceCreation@@TransformedOperation[operation, OperationResultTransformer.ORIGINAL_RESULT] @AT@ 2300 @LENGTH@ 79
---------DEL New@@new @AT@ 2300 @LENGTH@ 3
---------DEL SimpleType@@TransformedOperation @AT@ 2304 @LENGTH@ 20
---------DEL SimpleName@@operation @AT@ 2325 @LENGTH@ 9
---------DEL QualifiedName@@OperationResultTransformer.ORIGINAL_RESULT @AT@ 2336 @LENGTH@ 42
---INS VariableDeclarationStatement@@final String operationName=operation.get(ModelDescriptionConstants.OP).asString(); @TO@ MethodDeclaration@@public, TransformedOperation, MethodName:transformOperation, final TransformationContext context, final PathAddress address, final ModelNode original,  @AT@ 2456 @LENGTH@ 84
------INS Modifier@@final @TO@ VariableDeclarationStatement@@final String operationName=operation.get(ModelDescriptionConstants.OP).asString(); @AT@ 2456 @LENGTH@ 5
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@final String operationName=operation.get(ModelDescriptionConstants.OP).asString(); @AT@ 2462 @LENGTH@ 6
------INS VariableDeclarationFragment@@operationName=operation.get(ModelDescriptionConstants.OP).asString() @TO@ VariableDeclarationStatement@@final String operationName=operation.get(ModelDescriptionConstants.OP).asString(); @AT@ 2469 @LENGTH@ 70
---------INS SimpleName@@operationName @TO@ VariableDeclarationFragment@@operationName=operation.get(ModelDescriptionConstants.OP).asString() @AT@ 2469 @LENGTH@ 13
---------INS MethodInvocation@@operation.get(ModelDescriptionConstants.OP).asString() @TO@ VariableDeclarationFragment@@operationName=operation.get(ModelDescriptionConstants.OP).asString() @AT@ 2485 @LENGTH@ 54
------------INS MethodInvocation@@MethodName:get:[ModelDescriptionConstants.OP] @TO@ MethodInvocation@@operation.get(ModelDescriptionConstants.OP).asString() @AT@ 2485 @LENGTH@ 43
---------------INS QualifiedName@@ModelDescriptionConstants.OP @TO@ MethodInvocation@@MethodName:get:[ModelDescriptionConstants.OP] @AT@ 2499 @LENGTH@ 28
------------------MOV SimpleName@@OperationResultTransformer @TO@ QualifiedName@@ModelDescriptionConstants.OP @AT@ 2336 @LENGTH@ 26
------------------MOV SimpleName@@ORIGINAL_RESULT @TO@ QualifiedName@@ModelDescriptionConstants.OP @AT@ 2363 @LENGTH@ 15
------------INS SimpleName@@Name:operation @TO@ MethodInvocation@@operation.get(ModelDescriptionConstants.OP).asString() @AT@ 2485 @LENGTH@ 9
------------INS SimpleName@@MethodName:asString:[] @TO@ MethodInvocation@@operation.get(ModelDescriptionConstants.OP).asString() @AT@ 2529 @LENGTH@ 10
---INS VariableDeclarationStatement@@final OperationTransformer aliasTransformer=context.getTarget().resolveTransformer(transformedAddress,operationName); @TO@ MethodDeclaration@@public, TransformedOperation, MethodName:transformOperation, final TransformationContext context, final PathAddress address, final ModelNode original,  @AT@ 2549 @LENGTH@ 120
------INS Modifier@@final @TO@ VariableDeclarationStatement@@final OperationTransformer aliasTransformer=context.getTarget().resolveTransformer(transformedAddress,operationName); @AT@ 2549 @LENGTH@ 5
------INS SimpleType@@OperationTransformer @TO@ VariableDeclarationStatement@@final OperationTransformer aliasTransformer=context.getTarget().resolveTransformer(transformedAddress,operationName); @AT@ 2555 @LENGTH@ 20
------INS VariableDeclarationFragment@@aliasTransformer=context.getTarget().resolveTransformer(transformedAddress,operationName) @TO@ VariableDeclarationStatement@@final OperationTransformer aliasTransformer=context.getTarget().resolveTransformer(transformedAddress,operationName); @AT@ 2576 @LENGTH@ 92
---------INS SimpleName@@aliasTransformer @TO@ VariableDeclarationFragment@@aliasTransformer=context.getTarget().resolveTransformer(transformedAddress,operationName) @AT@ 2576 @LENGTH@ 16
---------INS MethodInvocation@@context.getTarget().resolveTransformer(transformedAddress,operationName) @TO@ VariableDeclarationFragment@@aliasTransformer=context.getTarget().resolveTransformer(transformedAddress,operationName) @AT@ 2595 @LENGTH@ 73
------------INS MethodInvocation@@MethodName:getTarget:[] @TO@ MethodInvocation@@context.getTarget().resolveTransformer(transformedAddress,operationName) @AT@ 2595 @LENGTH@ 19
------------INS SimpleName@@Name:context @TO@ MethodInvocation@@context.getTarget().resolveTransformer(transformedAddress,operationName) @AT@ 2595 @LENGTH@ 7
------------INS SimpleName@@MethodName:resolveTransformer:[transformedAddress, operationName] @TO@ MethodInvocation@@context.getTarget().resolveTransformer(transformedAddress,operationName) @AT@ 2615 @LENGTH@ 53
---------------INS SimpleName@@transformedAddress @TO@ SimpleName@@MethodName:resolveTransformer:[transformedAddress, operationName] @AT@ 2634 @LENGTH@ 18
---------------INS SimpleName@@operationName @TO@ SimpleName@@MethodName:resolveTransformer:[transformedAddress, operationName] @AT@ 2654 @LENGTH@ 13
---INS ReturnStatement@@MethodInvocation:aliasTransformer.transformOperation(context,transformedAddress,operation) @TO@ MethodDeclaration@@public, TransformedOperation, MethodName:transformOperation, final TransformationContext context, final PathAddress address, final ModelNode original,  @AT@ 2678 @LENGTH@ 83
------INS MethodInvocation@@aliasTransformer.transformOperation(context,transformedAddress,operation) @TO@ ReturnStatement@@MethodInvocation:aliasTransformer.transformOperation(context,transformedAddress,operation) @AT@ 2685 @LENGTH@ 75
---------INS SimpleName@@Name:aliasTransformer @TO@ MethodInvocation@@aliasTransformer.transformOperation(context,transformedAddress,operation) @AT@ 2685 @LENGTH@ 16
---------INS SimpleName@@MethodName:transformOperation:[context, transformedAddress, operation] @TO@ MethodInvocation@@aliasTransformer.transformOperation(context,transformedAddress,operation) @AT@ 2702 @LENGTH@ 58
------------INS SimpleName@@context @TO@ SimpleName@@MethodName:transformOperation:[context, transformedAddress, operation] @AT@ 2721 @LENGTH@ 7
------------INS SimpleName@@transformedAddress @TO@ SimpleName@@MethodName:transformOperation:[context, transformedAddress, operation] @AT@ 2730 @LENGTH@ 18
------------INS SimpleName@@operation @TO@ SimpleName@@MethodName:transformOperation:[context, transformedAddress, operation] @AT@ 2750 @LENGTH@ 9


UPD ExpressionStatement@@MethodInvocation:subsystems.add(entry.getKey(),entry.getValue().getManagementInterfaceMajorVersion() + "." + entry.getValue().getManagementInterfaceMinorVersion()) @TO@ MethodInvocation:subsystems.add(entry.getKey(),entry.getValue().getManagementInterfaceMajorVersion() + "." + entry.getValue().getManagementInterfaceMicroVersion()) @AT@ 16879 @LENGTH@ 146
---UPD MethodInvocation@@subsystems.add(entry.getKey(),entry.getValue().getManagementInterfaceMajorVersion() + "." + entry.getValue().getManagementInterfaceMinorVersion()) @TO@ subsystems.add(entry.getKey(),entry.getValue().getManagementInterfaceMajorVersion() + "." + entry.getValue().getManagementInterfaceMicroVersion()) @AT@ 16879 @LENGTH@ 145
------UPD SimpleName@@MethodName:add:[entry.getKey(), entry.getValue().getManagementInterfaceMajorVersion() + "." + entry.getValue().getManagementInterfaceMinorVersion()] @TO@ MethodName:add:[entry.getKey(), entry.getValue().getManagementInterfaceMajorVersion() + "." + entry.getValue().getManagementInterfaceMicroVersion()] @AT@ 16890 @LENGTH@ 134
---------UPD InfixExpression@@entry.getValue().getManagementInterfaceMajorVersion() + "." + entry.getValue().getManagementInterfaceMinorVersion() @TO@ entry.getValue().getManagementInterfaceMajorVersion() + "." + entry.getValue().getManagementInterfaceMicroVersion() @AT@ 16910 @LENGTH@ 113
------------UPD MethodInvocation@@entry.getValue().getManagementInterfaceMinorVersion() @TO@ entry.getValue().getManagementInterfaceMicroVersion() @AT@ 16970 @LENGTH@ 53
---------------UPD SimpleName@@MethodName:getManagementInterfaceMinorVersion:[] @TO@ MethodName:getManagementInterfaceMicroVersion:[] @AT@ 16987 @LENGTH@ 36


UPD FieldDeclaration@@private, static, ModuleIdentifier[], [DEFAULT_MODULES=new ModuleIdentifier[]{ModuleIdentifier.create("sun.jdk"),ModuleIdentifier.create("ibm.jdk"),ModuleIdentifier.create("javax.api"),ModuleIdentifier.create("org.jboss.logging"),ModuleIdentifier.create("org.jboss.vfs"),ModuleIdentifier.create("org.apache.commons.logging"),ModuleIdentifier.create("org.apache.log4j"),ModuleIdentifier.create("org.slf4j"),ModuleIdentifier.create("org.jboss.logging.jul-to-slf4j-stub"),ModuleIdentifier.create("org.glassfish.javax.json")}] @TO@ private, static, ModuleIdentifier[], [DEFAULT_MODULES=new ModuleIdentifier[]{ModuleIdentifier.create("sun.jdk"),ModuleIdentifier.create("ibm.jdk"),ModuleIdentifier.create("javax.api"),ModuleIdentifier.create("org.jboss.logging"),ModuleIdentifier.create("org.jboss.vfs"),ModuleIdentifier.create("org.apache.commons.logging"),ModuleIdentifier.create("org.apache.log4j"),ModuleIdentifier.create("org.slf4j"),ModuleIdentifier.create("org.jboss.logging.jul-to-slf4j-stub")}] @AT@ 1795 @LENGTH@ 616
---UPD VariableDeclarationFragment@@DEFAULT_MODULES=new ModuleIdentifier[]{ModuleIdentifier.create("sun.jdk"),ModuleIdentifier.create("ibm.jdk"),ModuleIdentifier.create("javax.api"),ModuleIdentifier.create("org.jboss.logging"),ModuleIdentifier.create("org.jboss.vfs"),ModuleIdentifier.create("org.apache.commons.logging"),ModuleIdentifier.create("org.apache.log4j"),ModuleIdentifier.create("org.slf4j"),ModuleIdentifier.create("org.jboss.logging.jul-to-slf4j-stub"),ModuleIdentifier.create("org.glassfish.javax.json")} @TO@ DEFAULT_MODULES=new ModuleIdentifier[]{ModuleIdentifier.create("sun.jdk"),ModuleIdentifier.create("ibm.jdk"),ModuleIdentifier.create("javax.api"),ModuleIdentifier.create("org.jboss.logging"),ModuleIdentifier.create("org.jboss.vfs"),ModuleIdentifier.create("org.apache.commons.logging"),ModuleIdentifier.create("org.apache.log4j"),ModuleIdentifier.create("org.slf4j"),ModuleIdentifier.create("org.jboss.logging.jul-to-slf4j-stub")} @AT@ 1829 @LENGTH@ 581
------UPD ArrayCreation@@new ModuleIdentifier[]{ModuleIdentifier.create("sun.jdk"),ModuleIdentifier.create("ibm.jdk"),ModuleIdentifier.create("javax.api"),ModuleIdentifier.create("org.jboss.logging"),ModuleIdentifier.create("org.jboss.vfs"),ModuleIdentifier.create("org.apache.commons.logging"),ModuleIdentifier.create("org.apache.log4j"),ModuleIdentifier.create("org.slf4j"),ModuleIdentifier.create("org.jboss.logging.jul-to-slf4j-stub"),ModuleIdentifier.create("org.glassfish.javax.json")} @TO@ new ModuleIdentifier[]{ModuleIdentifier.create("sun.jdk"),ModuleIdentifier.create("ibm.jdk"),ModuleIdentifier.create("javax.api"),ModuleIdentifier.create("org.jboss.logging"),ModuleIdentifier.create("org.jboss.vfs"),ModuleIdentifier.create("org.apache.commons.logging"),ModuleIdentifier.create("org.apache.log4j"),ModuleIdentifier.create("org.slf4j"),ModuleIdentifier.create("org.jboss.logging.jul-to-slf4j-stub")} @AT@ 1847 @LENGTH@ 563
---------UPD ArrayInitializer@@{ModuleIdentifier.create("sun.jdk"),ModuleIdentifier.create("ibm.jdk"),ModuleIdentifier.create("javax.api"),ModuleIdentifier.create("org.jboss.logging"),ModuleIdentifier.create("org.jboss.vfs"),ModuleIdentifier.create("org.apache.commons.logging"),ModuleIdentifier.create("org.apache.log4j"),ModuleIdentifier.create("org.slf4j"),ModuleIdentifier.create("org.jboss.logging.jul-to-slf4j-stub"),ModuleIdentifier.create("org.glassfish.javax.json")} @TO@ {ModuleIdentifier.create("sun.jdk"),ModuleIdentifier.create("ibm.jdk"),ModuleIdentifier.create("javax.api"),ModuleIdentifier.create("org.jboss.logging"),ModuleIdentifier.create("org.jboss.vfs"),ModuleIdentifier.create("org.apache.commons.logging"),ModuleIdentifier.create("org.apache.log4j"),ModuleIdentifier.create("org.slf4j"),ModuleIdentifier.create("org.jboss.logging.jul-to-slf4j-stub")} @AT@ 1870 @LENGTH@ 540
------------DEL MethodInvocation@@ModuleIdentifier.create("org.glassfish.javax.json") @AT@ 2352 @LENGTH@ 51
---------------DEL SimpleName@@Name:ModuleIdentifier @AT@ 2352 @LENGTH@ 16
---------------DEL SimpleName@@MethodName:create:["org.glassfish.javax.json"] @AT@ 2369 @LENGTH@ 34
------------------DEL StringLiteral@@"org.glassfish.javax.json" @AT@ 2376 @LENGTH@ 26


UPD ExpressionStatement@@MethodInvocation:context.getFailureDescription().set(String.format("Unknown metric %s",attrName)) @TO@ MethodInvocation:context.getFailureDescription().set(InfinispanMessages.MESSAGES.unknownMetric(attrName)) @AT@ 6299 @LENGTH@ 82
---UPD MethodInvocation@@context.getFailureDescription().set(String.format("Unknown metric %s",attrName)) @TO@ context.getFailureDescription().set(InfinispanMessages.MESSAGES.unknownMetric(attrName)) @AT@ 6299 @LENGTH@ 81
------UPD SimpleName@@MethodName:set:[String.format("Unknown metric %s",attrName)] @TO@ MethodName:set:[InfinispanMessages.MESSAGES.unknownMetric(attrName)] @AT@ 6331 @LENGTH@ 49
---------UPD MethodInvocation@@String.format("Unknown metric %s",attrName) @TO@ InfinispanMessages.MESSAGES.unknownMetric(attrName) @AT@ 6335 @LENGTH@ 44
------------DEL SimpleName@@Name:String @AT@ 6335 @LENGTH@ 6
------------UPD SimpleName@@MethodName:format:["Unknown metric %s", attrName] @TO@ MethodName:unknownMetric:[attrName] @AT@ 6342 @LENGTH@ 37
---------------DEL StringLiteral@@"Unknown metric %s" @AT@ 6349 @LENGTH@ 19
------------INS QualifiedName@@Name:InfinispanMessages.MESSAGES @TO@ MethodInvocation@@String.format("Unknown metric %s",attrName) @AT@ 6397 @LENGTH@ 27


UPD ExpressionStatement@@MethodInvocation:context.addStep(runningServerRemove,new OperationStepHandler(){
  @Override public void execute(  final OperationContext context,  final ModelNode operation) throws OperationFailedException {
    context.removeResource(PathAddress.EMPTY_ADDRESS);
    context.stepCompleted();
  }
}
,OperationContext.Stage.IMMEDIATE) @TO@ MethodInvocation:context.addStep(runningServerRemove,new OperationStepHandler(){
  @Override public void execute(  final OperationContext context,  final ModelNode operation) throws OperationFailedException {
    context.removeResource(PathAddress.EMPTY_ADDRESS);
    context.stepCompleted();
  }
}
,OperationContext.Stage.MODEL,true) @AT@ 3149 @LENGTH@ 380
---UPD MethodInvocation@@context.addStep(runningServerRemove,new OperationStepHandler(){
  @Override public void execute(  final OperationContext context,  final ModelNode operation) throws OperationFailedException {
    context.removeResource(PathAddress.EMPTY_ADDRESS);
    context.stepCompleted();
  }
}
,OperationContext.Stage.IMMEDIATE) @TO@ context.addStep(runningServerRemove,new OperationStepHandler(){
  @Override public void execute(  final OperationContext context,  final ModelNode operation) throws OperationFailedException {
    context.removeResource(PathAddress.EMPTY_ADDRESS);
    context.stepCompleted();
  }
}
,OperationContext.Stage.MODEL,true) @AT@ 3149 @LENGTH@ 379
------UPD SimpleName@@MethodName:addStep:[runningServerRemove, new OperationStepHandler(){
  @Override public void execute(  final OperationContext context,  final ModelNode operation) throws OperationFailedException {
    context.removeResource(PathAddress.EMPTY_ADDRESS);
    context.stepCompleted();
  }
}
, OperationContext.Stage.IMMEDIATE] @TO@ MethodName:addStep:[runningServerRemove, new OperationStepHandler(){
  @Override public void execute(  final OperationContext context,  final ModelNode operation) throws OperationFailedException {
    context.removeResource(PathAddress.EMPTY_ADDRESS);
    context.stepCompleted();
  }
}
, OperationContext.Stage.MODEL, true] @AT@ 3157 @LENGTH@ 371
---------UPD QualifiedName@@OperationContext.Stage.IMMEDIATE @TO@ OperationContext.Stage.MODEL @AT@ 3495 @LENGTH@ 32
------------UPD SimpleName@@IMMEDIATE @TO@ MODEL @AT@ 3518 @LENGTH@ 9
---------INS BooleanLiteral@@true @TO@ SimpleName@@MethodName:addStep:[runningServerRemove, new OperationStepHandler(){
  @Override public void execute(  final OperationContext context,  final ModelNode operation) throws OperationFailedException {
    context.removeResource(PathAddress.EMPTY_ADDRESS);
    context.stepCompleted();
  }
}
, OperationContext.Stage.IMMEDIATE] @AT@ 3525 @LENGTH@ 4


UPD ReturnStatement@@SimpleName:iClosures @TO@ MethodInvocation:FunctorUtils.copy(iClosures) @AT@ 4025 @LENGTH@ 17
---INS MethodInvocation@@FunctorUtils.copy(iClosures) @TO@ ReturnStatement@@SimpleName:iClosures @AT@ 4024 @LENGTH@ 28
------INS SimpleName@@Name:FunctorUtils @TO@ MethodInvocation@@FunctorUtils.copy(iClosures) @AT@ 4024 @LENGTH@ 12
------INS SimpleName@@MethodName:copy:[iClosures] @TO@ MethodInvocation@@FunctorUtils.copy(iClosures) @AT@ 4037 @LENGTH@ 15
---------INS SimpleName@@iClosures @TO@ SimpleName@@MethodName:copy:[iClosures] @AT@ 4042 @LENGTH@ 9
---DEL SimpleName@@iClosures @AT@ 4032 @LENGTH@ 9


UPD MethodDeclaration@@boolean, MethodName:isIdempotentSet,  @TO@ protected, boolean, MethodName:isIdempotentSet,  @AT@ 14456 @LENGTH@ 60
---INS Modifier@@protected @TO@ MethodDeclaration@@boolean, MethodName:isIdempotentSet,  @AT@ 14448 @LENGTH@ 9


UPD TryStatement@@try {  CmpEntityBeanComponent component=getJDBCStoreManager().getComponent();  TransactionManager tm=component.getTransactionManager();  Transaction tx=tm.getTransaction();  if (tx != null && (tx.getStatus() == Status.STATUS_ACTIVE || tx.getStatus() == Status.STATUS_PREPARING)) {    relationSet=new RelationSet(JDBCCMRFieldBridge.this,ctx,setHandle,false);    TxSynchronization sync=new TxSynchronization(FieldState.this);    tx.registerSynchronization(sync);  } else {    relationSet=new RelationSet(JDBCCMRFieldBridge.this,ctx,new List[1],false);  }  return relationSet;} catch (SystemException e) {  throw MESSAGES.errorCreatingRelationSet(e);}catch (RollbackException e) {  throw MESSAGES.errorCreatingRelationSet(e);} @TO@ try {  CmpEntityBeanComponent component=getJDBCStoreManager().getComponent();  TransactionManager tm=component.getTransactionManager();  Transaction tx=tm.getTransaction();  if (tx != null && (tx.getStatus() == Status.STATUS_ACTIVE || tx.getStatus() == Status.STATUS_PREPARING)) {    relationSet=new RelationSet(JDBCCMRFieldBridge.this,ctx,setHandle,false);    TxSynchronization sync=new TxSynchronization(FieldState.this);    ctx.getComponent().getTransactionSynchronizationRegistry().registerInterposedSynchronization(sync);  } else {    relationSet=new RelationSet(JDBCCMRFieldBridge.this,ctx,new List[1],false);  }  return relationSet;} catch (SystemException e) {  throw MESSAGES.errorCreatingRelationSet(e);} @AT@ 57719 @LENGTH@ 1239
---UPD IfStatement@@if (tx != null && (tx.getStatus() == Status.STATUS_ACTIVE || tx.getStatus() == Status.STATUS_PREPARING)) {  relationSet=new RelationSet(JDBCCMRFieldBridge.this,ctx,setHandle,false);  TxSynchronization sync=new TxSynchronization(FieldState.this);  tx.registerSynchronization(sync);} else {  relationSet=new RelationSet(JDBCCMRFieldBridge.this,ctx,new List[1],false);} @TO@ if (tx != null && (tx.getStatus() == Status.STATUS_ACTIVE || tx.getStatus() == Status.STATUS_PREPARING)) {  relationSet=new RelationSet(JDBCCMRFieldBridge.this,ctx,setHandle,false);  TxSynchronization sync=new TxSynchronization(FieldState.this);  ctx.getComponent().getTransactionSynchronizationRegistry().registerInterposedSynchronization(sync);} else {  relationSet=new RelationSet(JDBCCMRFieldBridge.this,ctx,new List[1],false);} @AT@ 58061 @LENGTH@ 640
------UPD Block@@ThenBody:{  relationSet=new RelationSet(JDBCCMRFieldBridge.this,ctx,setHandle,false);  TxSynchronization sync=new TxSynchronization(FieldState.this);  tx.registerSynchronization(sync);} @TO@ ThenBody:{  relationSet=new RelationSet(JDBCCMRFieldBridge.this,ctx,setHandle,false);  TxSynchronization sync=new TxSynchronization(FieldState.this);  ctx.getComponent().getTransactionSynchronizationRegistry().registerInterposedSynchronization(sync);} @AT@ 58166 @LENGTH@ 334
---------UPD ExpressionStatement@@MethodInvocation:tx.registerSynchronization(sync) @TO@ MethodInvocation:ctx.getComponent().getTransactionSynchronizationRegistry().registerInterposedSynchronization(sync) @AT@ 58449 @LENGTH@ 33
------------UPD MethodInvocation@@tx.registerSynchronization(sync) @TO@ ctx.getComponent().getTransactionSynchronizationRegistry().registerInterposedSynchronization(sync) @AT@ 58449 @LENGTH@ 32
---------------UPD SimpleName@@Name:tx @TO@ Name:ctx @AT@ 58449 @LENGTH@ 2
---------------UPD SimpleName@@MethodName:registerSynchronization:[sync] @TO@ MethodName:registerInterposedSynchronization:[sync] @AT@ 58452 @LENGTH@ 29
---------------INS MethodInvocation@@MethodName:getTransactionSynchronizationRegistry:[] @TO@ MethodInvocation@@tx.registerSynchronization(sync) @AT@ 58505 @LENGTH@ 58
---------------INS MethodInvocation@@MethodName:getComponent:[] @TO@ MethodInvocation@@tx.registerSynchronization(sync) @AT@ 58505 @LENGTH@ 18
---DEL CatchClause@@catch (RollbackException e) {  throw MESSAGES.errorCreatingRelationSet(e);} @AT@ 58855 @LENGTH@ 103
------DEL SingleVariableDeclaration@@RollbackException e @AT@ 58862 @LENGTH@ 19
---------DEL SimpleType@@RollbackException @AT@ 58862 @LENGTH@ 17
---------DEL SimpleName@@e @AT@ 58880 @LENGTH@ 1
------DEL ThrowStatement@@MethodInvocation:MESSAGES.errorCreatingRelationSet(e) @AT@ 58901 @LENGTH@ 43
---------DEL MethodInvocation@@MESSAGES.errorCreatingRelationSet(e) @AT@ 58907 @LENGTH@ 36
------------DEL SimpleName@@Name:MESSAGES @AT@ 58907 @LENGTH@ 8
------------DEL SimpleName@@MethodName:errorCreatingRelationSet:[e] @AT@ 58916 @LENGTH@ 27
---------------DEL SimpleName@@e @AT@ 58941 @LENGTH@ 1


DEL MethodDeclaration@@public, void, MethodName:writeContent, XMLExtendedStreamWriter writer, SubsystemMarshallingContext context, XMLStreamException,  @AT@ 2563 @LENGTH@ 480
---DEL Modifier@@public @AT@ 2563 @LENGTH@ 6
---DEL PrimitiveType@@void @AT@ 2570 @LENGTH@ 4
---DEL SimpleName@@MethodName:writeContent @AT@ 2575 @LENGTH@ 12
---DEL SingleVariableDeclaration@@XMLExtendedStreamWriter writer @AT@ 2588 @LENGTH@ 30
------DEL SimpleType@@XMLExtendedStreamWriter @AT@ 2588 @LENGTH@ 23
------DEL SimpleName@@writer @AT@ 2612 @LENGTH@ 6
---DEL SingleVariableDeclaration@@SubsystemMarshallingContext context @AT@ 2620 @LENGTH@ 35
------DEL SimpleType@@SubsystemMarshallingContext @AT@ 2620 @LENGTH@ 27
------DEL SimpleName@@context @AT@ 2648 @LENGTH@ 7
---DEL SimpleType@@XMLStreamException @AT@ 2664 @LENGTH@ 18
---DEL ExpressionStatement@@MethodInvocation:context.startSubsystemElement(Namespace.EE_1_0.getUriString(),false) @AT@ 2693 @LENGTH@ 70
------DEL MethodInvocation@@context.startSubsystemElement(Namespace.EE_1_0.getUriString(),false) @AT@ 2693 @LENGTH@ 69
---------DEL SimpleName@@Name:context @AT@ 2693 @LENGTH@ 7
---------DEL SimpleName@@MethodName:startSubsystemElement:[Namespace.EE_1_0.getUriString(), false] @AT@ 2701 @LENGTH@ 61
------------DEL MethodInvocation@@Namespace.EE_1_0.getUriString() @AT@ 2723 @LENGTH@ 31
---------------DEL QualifiedName@@Name:Namespace.EE_1_0 @AT@ 2723 @LENGTH@ 16
---------------DEL SimpleName@@MethodName:getUriString:[] @AT@ 2740 @LENGTH@ 14
------------DEL BooleanLiteral@@false @AT@ 2756 @LENGTH@ 5
---DEL VariableDeclarationStatement@@ModelNode eeSubSystem=context.getModelNode(); @AT@ 2773 @LENGTH@ 47
------DEL SimpleType@@ModelNode @AT@ 2773 @LENGTH@ 9
------DEL VariableDeclarationFragment@@eeSubSystem=context.getModelNode() @AT@ 2783 @LENGTH@ 36
---------DEL SimpleName@@eeSubSystem @AT@ 2783 @LENGTH@ 11
---------DEL MethodInvocation@@context.getModelNode() @AT@ 2797 @LENGTH@ 22
------------DEL SimpleName@@Name:context @AT@ 2797 @LENGTH@ 7
------------DEL SimpleName@@MethodName:getModelNode:[] @AT@ 2805 @LENGTH@ 14
---DEL ExpressionStatement@@MethodInvocation:EeSubsystemRootResource.EAR_SUBDEPLOYMENTS_ISOLATED.marshallAsElement(eeSubSystem,writer) @AT@ 2829 @LENGTH@ 91
------DEL MethodInvocation@@EeSubsystemRootResource.EAR_SUBDEPLOYMENTS_ISOLATED.marshallAsElement(eeSubSystem,writer) @AT@ 2829 @LENGTH@ 90
---------DEL QualifiedName@@Name:EeSubsystemRootResource.EAR_SUBDEPLOYMENTS_ISOLATED @AT@ 2829 @LENGTH@ 51
---------DEL SimpleName@@MethodName:marshallAsElement:[eeSubSystem, writer] @AT@ 2881 @LENGTH@ 38
------------DEL SimpleName@@eeSubSystem @AT@ 2899 @LENGTH@ 11
------------DEL SimpleName@@writer @AT@ 2912 @LENGTH@ 6
---DEL ExpressionStatement@@MethodInvocation:GlobalModulesDefinition.INSTANCE.marshallAsElement(eeSubSystem,writer) @AT@ 2929 @LENGTH@ 72
------DEL MethodInvocation@@GlobalModulesDefinition.INSTANCE.marshallAsElement(eeSubSystem,writer) @AT@ 2929 @LENGTH@ 71
---------DEL QualifiedName@@Name:GlobalModulesDefinition.INSTANCE @AT@ 2929 @LENGTH@ 32
---------DEL SimpleName@@MethodName:marshallAsElement:[eeSubSystem, writer] @AT@ 2962 @LENGTH@ 38
------------DEL SimpleName@@eeSubSystem @AT@ 2980 @LENGTH@ 11
------------DEL SimpleName@@writer @AT@ 2993 @LENGTH@ 6
---DEL ExpressionStatement@@MethodInvocation:writer.writeEndElement() @AT@ 3011 @LENGTH@ 25
------DEL MethodInvocation@@writer.writeEndElement() @AT@ 3011 @LENGTH@ 24
---------DEL SimpleName@@Name:writer @AT@ 3011 @LENGTH@ 6
---------DEL SimpleName@@MethodName:writeEndElement:[] @AT@ 3018 @LENGTH@ 17


UPD VariableDeclarationStatement@@Pattern viewStatePattern=Pattern.compile("id=\"javax.faces.ViewState\" value=\"([^\"]*)\""); @TO@ Pattern viewStatePattern=Pattern.compile("id=\".*javax.faces.ViewState.*\" value=\"([^\"]*)\""); @AT@ 5296 @LENGTH@ 94
---UPD VariableDeclarationFragment@@viewStatePattern=Pattern.compile("id=\"javax.faces.ViewState\" value=\"([^\"]*)\"") @TO@ viewStatePattern=Pattern.compile("id=\".*javax.faces.ViewState.*\" value=\"([^\"]*)\"") @AT@ 5304 @LENGTH@ 85
------UPD MethodInvocation@@Pattern.compile("id=\"javax.faces.ViewState\" value=\"([^\"]*)\"") @TO@ Pattern.compile("id=\".*javax.faces.ViewState.*\" value=\"([^\"]*)\"") @AT@ 5323 @LENGTH@ 66
---------UPD SimpleName@@MethodName:compile:["id=\"javax.faces.ViewState\" value=\"([^\"]*)\""] @TO@ MethodName:compile:["id=\".*javax.faces.ViewState.*\" value=\"([^\"]*)\""] @AT@ 5331 @LENGTH@ 58
------------UPD StringLiteral@@"id=\"javax.faces.ViewState\" value=\"([^\"]*)\"" @TO@ "id=\".*javax.faces.ViewState.*\" value=\"([^\"]*)\"" @AT@ 5339 @LENGTH@ 49


UPD VariableDeclarationStatement@@final RemoteViewManagedReferenceFactory factory=viewClassLoader != null ? new RemoteViewManagedReferenceFactory(appName,moduleName,distinctName,beanName,viewClass,stateful,viewClassLoader) : new RemoteViewManagedReferenceFactory(appName,moduleName,distinctName,beanName,viewClass,stateful); @TO@ final RemoteViewManagedReferenceFactory factory=new RemoteViewManagedReferenceFactory(appName,moduleName,distinctName,beanName,viewClass,stateful,viewClassLoader); @AT@ 3079 @LENGTH@ 315
---UPD VariableDeclarationFragment@@factory=viewClassLoader != null ? new RemoteViewManagedReferenceFactory(appName,moduleName,distinctName,beanName,viewClass,stateful,viewClassLoader) : new RemoteViewManagedReferenceFactory(appName,moduleName,distinctName,beanName,viewClass,stateful) @TO@ factory=new RemoteViewManagedReferenceFactory(appName,moduleName,distinctName,beanName,viewClass,stateful,viewClassLoader) @AT@ 3119 @LENGTH@ 274
------INS ClassInstanceCreation@@RemoteViewManagedReferenceFactory[appName, moduleName, distinctName, beanName, viewClass, stateful, viewClassLoader] @TO@ VariableDeclarationFragment@@factory=viewClassLoader != null ? new RemoteViewManagedReferenceFactory(appName,moduleName,distinctName,beanName,viewClass,stateful,viewClassLoader) : new RemoteViewManagedReferenceFactory(appName,moduleName,distinctName,beanName,viewClass,stateful) @AT@ 2808 @LENGTH@ 120
---------MOV New@@new @TO@ ClassInstanceCreation@@RemoteViewManagedReferenceFactory[appName, moduleName, distinctName, beanName, viewClass, stateful, viewClassLoader] @AT@ 3155 @LENGTH@ 3
---------MOV SimpleType@@RemoteViewManagedReferenceFactory @TO@ ClassInstanceCreation@@RemoteViewManagedReferenceFactory[appName, moduleName, distinctName, beanName, viewClass, stateful, viewClassLoader] @AT@ 3159 @LENGTH@ 33
---------MOV SimpleName@@appName @TO@ ClassInstanceCreation@@RemoteViewManagedReferenceFactory[appName, moduleName, distinctName, beanName, viewClass, stateful, viewClassLoader] @AT@ 3193 @LENGTH@ 7
---------MOV SimpleName@@moduleName @TO@ ClassInstanceCreation@@RemoteViewManagedReferenceFactory[appName, moduleName, distinctName, beanName, viewClass, stateful, viewClassLoader] @AT@ 3202 @LENGTH@ 10
---------MOV SimpleName@@distinctName @TO@ ClassInstanceCreation@@RemoteViewManagedReferenceFactory[appName, moduleName, distinctName, beanName, viewClass, stateful, viewClassLoader] @AT@ 3214 @LENGTH@ 12
---------MOV SimpleName@@beanName @TO@ ClassInstanceCreation@@RemoteViewManagedReferenceFactory[appName, moduleName, distinctName, beanName, viewClass, stateful, viewClassLoader] @AT@ 3228 @LENGTH@ 8
---------MOV SimpleName@@viewClass @TO@ ClassInstanceCreation@@RemoteViewManagedReferenceFactory[appName, moduleName, distinctName, beanName, viewClass, stateful, viewClassLoader] @AT@ 3238 @LENGTH@ 9
---------MOV SimpleName@@stateful @TO@ ClassInstanceCreation@@RemoteViewManagedReferenceFactory[appName, moduleName, distinctName, beanName, viewClass, stateful, viewClassLoader] @AT@ 3249 @LENGTH@ 8
---------MOV SimpleName@@viewClassLoader @TO@ ClassInstanceCreation@@RemoteViewManagedReferenceFactory[appName, moduleName, distinctName, beanName, viewClass, stateful, viewClassLoader] @AT@ 3259 @LENGTH@ 15
------DEL ConditionalExpression@@viewClassLoader != null ? new RemoteViewManagedReferenceFactory(appName,moduleName,distinctName,beanName,viewClass,stateful,viewClassLoader) : new RemoteViewManagedReferenceFactory(appName,moduleName,distinctName,beanName,viewClass,stateful) @AT@ 3129 @LENGTH@ 264
---------DEL InfixExpression@@viewClassLoader != null @AT@ 3129 @LENGTH@ 23
------------DEL SimpleName@@viewClassLoader @AT@ 3129 @LENGTH@ 15
------------DEL Operator@@!= @AT@ 3144 @LENGTH@ 2
------------DEL NullLiteral@@null @AT@ 3148 @LENGTH@ 4
---------DEL ClassInstanceCreation@@RemoteViewManagedReferenceFactory[appName, moduleName, distinctName, beanName, viewClass, stateful, viewClassLoader] @AT@ 3155 @LENGTH@ 120
---------DEL ClassInstanceCreation@@RemoteViewManagedReferenceFactory[appName, moduleName, distinctName, beanName, viewClass, stateful] @AT@ 3290 @LENGTH@ 103
------------DEL New@@new @AT@ 3290 @LENGTH@ 3
------------DEL SimpleType@@RemoteViewManagedReferenceFactory @AT@ 3294 @LENGTH@ 33
------------DEL SimpleName@@appName @AT@ 3328 @LENGTH@ 7
------------DEL SimpleName@@moduleName @AT@ 3337 @LENGTH@ 10
------------DEL SimpleName@@distinctName @AT@ 3349 @LENGTH@ 12
------------DEL SimpleName@@beanName @AT@ 3363 @LENGTH@ 8
------------DEL SimpleName@@viewClass @AT@ 3373 @LENGTH@ 9
------------DEL SimpleName@@stateful @AT@ 3384 @LENGTH@ 8


DEL ExpressionStatement@@MethodInvocation:list.add(pathAddressTransformer) @AT@ 7728 @LENGTH@ 33
---DEL MethodInvocation@@list.add(pathAddressTransformer) @AT@ 7728 @LENGTH@ 32
------DEL SimpleName@@Name:list @AT@ 7728 @LENGTH@ 4
------DEL SimpleName@@MethodName:add:[pathAddressTransformer] @AT@ 7733 @LENGTH@ 27
---------DEL SimpleName@@pathAddressTransformer @AT@ 7737 @LENGTH@ 22


UPD TryStatement@@try {  Method m=ReflectionUtils.findMethod(cmd,"processOptions",LinkedList.class);  ReflectionUtils.invokeMethod(m,target,args);  m=ReflectionUtils.findMethod(cmd,"processRawArguments",LinkedList.class);  ReflectionUtils.invokeMethod(m,target,args);} catch (IllegalStateException ex) {  throw new HadoopException("Cannot change permissions/ownership " + ex.getCause().getMessage(),ex.getCause());} @TO@ try {  Method m=ReflectionUtils.findMethod(cmd,"processOptions",LinkedList.class);  ReflectionUtils.makeAccessible(m);  ReflectionUtils.invokeMethod(m,target,args);  m=ReflectionUtils.findMethod(cmd,"processRawArguments",LinkedList.class);  ReflectionUtils.makeAccessible(m);  ReflectionUtils.invokeMethod(m,target,args);} catch (IllegalStateException ex) {  throw new HadoopException("Cannot change permissions/ownership " + ex);} @AT@ 3487 @LENGTH@ 432
---INS ExpressionStatement@@MethodInvocation:ReflectionUtils.makeAccessible(m) @TO@ TryStatement@@try {  Method m=ReflectionUtils.findMethod(cmd,"processOptions",LinkedList.class);  ReflectionUtils.invokeMethod(m,target,args);  m=ReflectionUtils.findMethod(cmd,"processRawArguments",LinkedList.class);  ReflectionUtils.invokeMethod(m,target,args);} catch (IllegalStateException ex) {  throw new HadoopException("Cannot change permissions/ownership " + ex.getCause().getMessage(),ex.getCause());} @AT@ 3581 @LENGTH@ 34
------INS MethodInvocation@@ReflectionUtils.makeAccessible(m) @TO@ ExpressionStatement@@MethodInvocation:ReflectionUtils.makeAccessible(m) @AT@ 3581 @LENGTH@ 33
---------INS SimpleName@@Name:ReflectionUtils @TO@ MethodInvocation@@ReflectionUtils.makeAccessible(m) @AT@ 3581 @LENGTH@ 15
---------INS SimpleName@@MethodName:makeAccessible:[m] @TO@ MethodInvocation@@ReflectionUtils.makeAccessible(m) @AT@ 3597 @LENGTH@ 17
------------INS SimpleName@@m @TO@ SimpleName@@MethodName:makeAccessible:[m] @AT@ 3612 @LENGTH@ 1
---INS ExpressionStatement@@MethodInvocation:ReflectionUtils.makeAccessible(m) @TO@ TryStatement@@try {  Method m=ReflectionUtils.findMethod(cmd,"processOptions",LinkedList.class);  ReflectionUtils.invokeMethod(m,target,args);  m=ReflectionUtils.findMethod(cmd,"processRawArguments",LinkedList.class);  ReflectionUtils.invokeMethod(m,target,args);} catch (IllegalStateException ex) {  throw new HadoopException("Cannot change permissions/ownership " + ex.getCause().getMessage(),ex.getCause());} @AT@ 3753 @LENGTH@ 34
------INS MethodInvocation@@ReflectionUtils.makeAccessible(m) @TO@ ExpressionStatement@@MethodInvocation:ReflectionUtils.makeAccessible(m) @AT@ 3753 @LENGTH@ 33
---------INS SimpleName@@Name:ReflectionUtils @TO@ MethodInvocation@@ReflectionUtils.makeAccessible(m) @AT@ 3753 @LENGTH@ 15
---------INS SimpleName@@MethodName:makeAccessible:[m] @TO@ MethodInvocation@@ReflectionUtils.makeAccessible(m) @AT@ 3769 @LENGTH@ 17
------------INS SimpleName@@m @TO@ SimpleName@@MethodName:makeAccessible:[m] @AT@ 3784 @LENGTH@ 1
---UPD CatchClause@@catch (IllegalStateException ex) {  throw new HadoopException("Cannot change permissions/ownership " + ex.getCause().getMessage(),ex.getCause());} @TO@ catch (IllegalStateException ex) {  throw new HadoopException("Cannot change permissions/ownership " + ex);} @AT@ 3766 @LENGTH@ 153
------UPD ThrowStatement@@ClassInstanceCreation:new HadoopException("Cannot change permissions/ownership " + ex.getCause().getMessage(),ex.getCause()) @TO@ ClassInstanceCreation:new HadoopException("Cannot change permissions/ownership " + ex) @AT@ 3804 @LENGTH@ 110
---------UPD ClassInstanceCreation@@HadoopException["Cannot change permissions/ownership " + ex.getCause().getMessage(), ex.getCause()] @TO@ HadoopException["Cannot change permissions/ownership " + ex] @AT@ 3810 @LENGTH@ 103
------------UPD InfixExpression@@"Cannot change permissions/ownership " + ex.getCause().getMessage() @TO@ "Cannot change permissions/ownership " + ex @AT@ 3830 @LENGTH@ 67
---------------DEL MethodInvocation@@ex.getCause().getMessage() @AT@ 3871 @LENGTH@ 26
------------------DEL MethodInvocation@@MethodName:getCause:[] @AT@ 3871 @LENGTH@ 13
------------------DEL SimpleName@@Name:ex @AT@ 3871 @LENGTH@ 2
------------------DEL SimpleName@@MethodName:getMessage:[] @AT@ 3885 @LENGTH@ 12
---------------INS SimpleName@@ex @TO@ InfixExpression@@"Cannot change permissions/ownership " + ex.getCause().getMessage() @AT@ 3949 @LENGTH@ 2
------------DEL MethodInvocation@@ex.getCause() @AT@ 3899 @LENGTH@ 13
---------------DEL SimpleName@@Name:ex @AT@ 3899 @LENGTH@ 2
---------------DEL SimpleName@@MethodName:getCause:[] @AT@ 3902 @LENGTH@ 10


DEL ExpressionStatement@@MethodInvocation:System.out.println(ret) @AT@ 7090 @LENGTH@ 24
---DEL MethodInvocation@@System.out.println(ret) @AT@ 7090 @LENGTH@ 23
------DEL QualifiedName@@Name:System.out @AT@ 7090 @LENGTH@ 10
------DEL SimpleName@@MethodName:println:[ret] @AT@ 7101 @LENGTH@ 12
---------DEL SimpleName@@ret @AT@ 7109 @LENGTH@ 3


INS MethodDeclaration@@public, synchronized, void, MethodName:associate, Object primaryKey,  @TO@ TypeDeclaration@@[public]EntityBeanComponentInstance, EjbComponentInstance @AT@ 5466 @LENGTH@ 99
---INS Modifier@@public @TO@ MethodDeclaration@@public, synchronized, void, MethodName:associate, Object primaryKey,  @AT@ 5466 @LENGTH@ 6
---INS Modifier@@synchronized @TO@ MethodDeclaration@@public, synchronized, void, MethodName:associate, Object primaryKey,  @AT@ 5473 @LENGTH@ 12
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, synchronized, void, MethodName:associate, Object primaryKey,  @AT@ 5486 @LENGTH@ 4
---INS SimpleName@@MethodName:associate @TO@ MethodDeclaration@@public, synchronized, void, MethodName:associate, Object primaryKey,  @AT@ 5491 @LENGTH@ 9
---INS SingleVariableDeclaration@@Object primaryKey @TO@ MethodDeclaration@@public, synchronized, void, MethodName:associate, Object primaryKey,  @AT@ 5501 @LENGTH@ 17
------INS SimpleType@@Object @TO@ SingleVariableDeclaration@@Object primaryKey @AT@ 5501 @LENGTH@ 6
------INS SimpleName@@primaryKey @TO@ SingleVariableDeclaration@@Object primaryKey @AT@ 5508 @LENGTH@ 10
---INS ExpressionStatement@@Assignment:this.primaryKey=primaryKey @TO@ MethodDeclaration@@public, synchronized, void, MethodName:associate, Object primaryKey,  @AT@ 5530 @LENGTH@ 29
------INS Assignment@@this.primaryKey=primaryKey @TO@ ExpressionStatement@@Assignment:this.primaryKey=primaryKey @AT@ 5530 @LENGTH@ 28
---------INS FieldAccess@@this.primaryKey @TO@ Assignment@@this.primaryKey=primaryKey @AT@ 5530 @LENGTH@ 15
------------INS ThisExpression@@this @TO@ FieldAccess@@this.primaryKey @AT@ 5530 @LENGTH@ 4
------------INS SimpleName@@primaryKey @TO@ FieldAccess@@this.primaryKey @AT@ 5535 @LENGTH@ 10
---------INS Operator@@= @TO@ Assignment@@this.primaryKey=primaryKey @AT@ 5545 @LENGTH@ 1
---------INS SimpleName@@primaryKey @TO@ Assignment@@this.primaryKey=primaryKey @AT@ 5548 @LENGTH@ 10


INS ExpressionStatement@@MethodInvocation:camelDataFormat.setLocale("en") @TO@ MethodDeclaration@@public, void, MethodName:configure,  @AT@ 3289 @LENGTH@ 32
---INS MethodInvocation@@camelDataFormat.setLocale("en") @TO@ ExpressionStatement@@MethodInvocation:camelDataFormat.setLocale("en") @AT@ 3289 @LENGTH@ 31
------INS SimpleName@@Name:camelDataFormat @TO@ MethodInvocation@@camelDataFormat.setLocale("en") @AT@ 3289 @LENGTH@ 15
------INS SimpleName@@MethodName:setLocale:["en"] @TO@ MethodInvocation@@camelDataFormat.setLocale("en") @AT@ 3305 @LENGTH@ 15
---------INS StringLiteral@@"en" @TO@ SimpleName@@MethodName:setLocale:["en"] @AT@ 3315 @LENGTH@ 4


INS MethodDeclaration@@public, ResourceTransformer, MethodName:getResourceTransformer,  @TO@ TypeDeclaration@@[public]RejectExpressionValuesTransformer, [ResourceTransformer, OperationTransformer] @AT@ 4414 @LENGTH@ 80
---INS Modifier@@public @TO@ MethodDeclaration@@public, ResourceTransformer, MethodName:getResourceTransformer,  @AT@ 4414 @LENGTH@ 6
---INS SimpleType@@ResourceTransformer @TO@ MethodDeclaration@@public, ResourceTransformer, MethodName:getResourceTransformer,  @AT@ 4421 @LENGTH@ 19
---INS SimpleName@@MethodName:getResourceTransformer @TO@ MethodDeclaration@@public, ResourceTransformer, MethodName:getResourceTransformer,  @AT@ 4441 @LENGTH@ 22
---INS ReturnStatement@@ThisExpression:this @TO@ MethodDeclaration@@public, ResourceTransformer, MethodName:getResourceTransformer,  @AT@ 4476 @LENGTH@ 12
------INS ThisExpression@@this @TO@ ReturnStatement@@ThisExpression:this @AT@ 4483 @LENGTH@ 4


INS FieldDeclaration@@private, static, final, Configuration, [DEFAULT_CONFIG] @TO@ TypeDeclaration@@[public]DomainTestSupport,  @AT@ 2213 @LENGTH@ 50
---INS Modifier@@private @TO@ FieldDeclaration@@private, static, final, Configuration, [DEFAULT_CONFIG] @AT@ 2213 @LENGTH@ 7
---INS Modifier@@static @TO@ FieldDeclaration@@private, static, final, Configuration, [DEFAULT_CONFIG] @AT@ 2221 @LENGTH@ 6
---INS Modifier@@final @TO@ FieldDeclaration@@private, static, final, Configuration, [DEFAULT_CONFIG] @AT@ 2228 @LENGTH@ 5
---INS SimpleType@@Configuration @TO@ FieldDeclaration@@private, static, final, Configuration, [DEFAULT_CONFIG] @AT@ 2234 @LENGTH@ 13
---INS VariableDeclarationFragment@@DEFAULT_CONFIG @TO@ FieldDeclaration@@private, static, final, Configuration, [DEFAULT_CONFIG] @AT@ 2248 @LENGTH@ 14
------INS SimpleName@@DEFAULT_CONFIG @TO@ VariableDeclarationFragment@@DEFAULT_CONFIG @AT@ 2248 @LENGTH@ 14


UPD IfStatement@@if (action.actionName.equals(actionName)) return action; @TO@ if (action.actionName.equalsIgnoreCase(actionName)) return action; @AT@ 4789 @LENGTH@ 75
---UPD MethodInvocation@@action.actionName.equals(actionName) @TO@ action.actionName.equalsIgnoreCase(actionName) @AT@ 4792 @LENGTH@ 36
------UPD SimpleName@@MethodName:equals:[actionName] @TO@ MethodName:equalsIgnoreCase:[actionName] @AT@ 4810 @LENGTH@ 18


INS ExpressionStatement@@MethodInvocation:camelExchange.getOut().setHeaders(camelExchange.getIn().getHeaders()) @TO@ MethodDeclaration@@public, void, MethodName:handleResult, XmlRpcRequest pRequest, Object pResult,  @AT@ 1638 @LENGTH@ 70
---INS MethodInvocation@@camelExchange.getOut().setHeaders(camelExchange.getIn().getHeaders()) @TO@ ExpressionStatement@@MethodInvocation:camelExchange.getOut().setHeaders(camelExchange.getIn().getHeaders()) @AT@ 1638 @LENGTH@ 69
------INS MethodInvocation@@MethodName:getOut:[] @TO@ MethodInvocation@@camelExchange.getOut().setHeaders(camelExchange.getIn().getHeaders()) @AT@ 1638 @LENGTH@ 22
------INS SimpleName@@Name:camelExchange @TO@ MethodInvocation@@camelExchange.getOut().setHeaders(camelExchange.getIn().getHeaders()) @AT@ 1638 @LENGTH@ 13
------INS SimpleName@@MethodName:setHeaders:[camelExchange.getIn().getHeaders()] @TO@ MethodInvocation@@camelExchange.getOut().setHeaders(camelExchange.getIn().getHeaders()) @AT@ 1661 @LENGTH@ 46
---------INS MethodInvocation@@camelExchange.getIn().getHeaders() @TO@ SimpleName@@MethodName:setHeaders:[camelExchange.getIn().getHeaders()] @AT@ 1672 @LENGTH@ 34
------------INS MethodInvocation@@MethodName:getIn:[] @TO@ MethodInvocation@@camelExchange.getIn().getHeaders() @AT@ 1672 @LENGTH@ 21
------------INS SimpleName@@Name:camelExchange @TO@ MethodInvocation@@camelExchange.getIn().getHeaders() @AT@ 1672 @LENGTH@ 13
------------INS SimpleName@@MethodName:getHeaders:[] @TO@ MethodInvocation@@camelExchange.getIn().getHeaders() @AT@ 1694 @LENGTH@ 12


INS MethodDeclaration@@public, static, Property, MethodName:readProperty, final XMLExtendedStreamReader reader, XMLStreamException,  @TO@ TypeDeclaration@@[public, final]ParseUtils,  @AT@ 11730 @LENGTH@ 151
---INS Modifier@@public @TO@ MethodDeclaration@@public, static, Property, MethodName:readProperty, final XMLExtendedStreamReader reader, XMLStreamException,  @AT@ 11730 @LENGTH@ 6
---INS Modifier@@static @TO@ MethodDeclaration@@public, static, Property, MethodName:readProperty, final XMLExtendedStreamReader reader, XMLStreamException,  @AT@ 11737 @LENGTH@ 6
---INS SimpleType@@Property @TO@ MethodDeclaration@@public, static, Property, MethodName:readProperty, final XMLExtendedStreamReader reader, XMLStreamException,  @AT@ 11744 @LENGTH@ 8
---INS SimpleName@@MethodName:readProperty @TO@ MethodDeclaration@@public, static, Property, MethodName:readProperty, final XMLExtendedStreamReader reader, XMLStreamException,  @AT@ 11753 @LENGTH@ 12
---INS SingleVariableDeclaration@@final XMLExtendedStreamReader reader @TO@ MethodDeclaration@@public, static, Property, MethodName:readProperty, final XMLExtendedStreamReader reader, XMLStreamException,  @AT@ 11766 @LENGTH@ 36
------INS Modifier@@final @TO@ SingleVariableDeclaration@@final XMLExtendedStreamReader reader @AT@ 11766 @LENGTH@ 5
------INS SimpleType@@XMLExtendedStreamReader @TO@ SingleVariableDeclaration@@final XMLExtendedStreamReader reader @AT@ 11772 @LENGTH@ 23
------INS SimpleName@@reader @TO@ SingleVariableDeclaration@@final XMLExtendedStreamReader reader @AT@ 11796 @LENGTH@ 6
---INS SimpleType@@XMLStreamException @TO@ MethodDeclaration@@public, static, Property, MethodName:readProperty, final XMLExtendedStreamReader reader, XMLStreamException,  @AT@ 11811 @LENGTH@ 18
---INS ReturnStatement@@MethodInvocation:readProperty(reader,false) @TO@ MethodDeclaration@@public, static, Property, MethodName:readProperty, final XMLExtendedStreamReader reader, XMLStreamException,  @AT@ 11840 @LENGTH@ 35
------INS MethodInvocation@@readProperty(reader,false) @TO@ ReturnStatement@@MethodInvocation:readProperty(reader,false) @AT@ 11847 @LENGTH@ 27
---------INS SimpleName@@MethodName:readProperty:[reader, false] @TO@ MethodInvocation@@readProperty(reader,false) @AT@ 11847 @LENGTH@ 27
------------INS SimpleName@@reader @TO@ SimpleName@@MethodName:readProperty:[reader, false] @AT@ 11860 @LENGTH@ 6
------------INS BooleanLiteral@@false @TO@ SimpleName@@MethodName:readProperty:[reader, false] @AT@ 11868 @LENGTH@ 5


UPD ExpressionStatement@@MethodInvocation:ModelTestUtils.checkFailedTransformedBootOperations(mainServices,oldVersion,ops,new FailedOperationTransformationConfig().addFailedAttribute(PathAddress.pathAddress(PathElement.pathElement(SUBSYSTEM,JPAExtension.SUBSYSTEM_NAME)),new FailedOperationTransformationConfig.RejectExpressionsConfig(DEFAULT_DATASOURCE,DEFAULT_EXTENDEDPERSISTENCE_INHERITANCE))) @TO@ MethodInvocation:ModelTestUtils.checkFailedTransformedBootOperations(mainServices,oldVersion,ops,new FailedOperationTransformationConfig().addFailedAttribute(PathAddress.pathAddress(PathElement.pathElement(SUBSYSTEM,JPAExtension.SUBSYSTEM_NAME)),new FailedOperationTransformationConfig.RejectExpressionsConfig(DEFAULT_DATASOURCE,DEFAULT_EXTENDEDPERSISTENCE_INHERITANCE).setNotExpectedWriteFailure(JPADefinition.DEFAULT_EXTENDEDPERSISTENCE_INHERITANCE))) @AT@ 4280 @LENGTH@ 426
---UPD MethodInvocation@@ModelTestUtils.checkFailedTransformedBootOperations(mainServices,oldVersion,ops,new FailedOperationTransformationConfig().addFailedAttribute(PathAddress.pathAddress(PathElement.pathElement(SUBSYSTEM,JPAExtension.SUBSYSTEM_NAME)),new FailedOperationTransformationConfig.RejectExpressionsConfig(DEFAULT_DATASOURCE,DEFAULT_EXTENDEDPERSISTENCE_INHERITANCE))) @TO@ ModelTestUtils.checkFailedTransformedBootOperations(mainServices,oldVersion,ops,new FailedOperationTransformationConfig().addFailedAttribute(PathAddress.pathAddress(PathElement.pathElement(SUBSYSTEM,JPAExtension.SUBSYSTEM_NAME)),new FailedOperationTransformationConfig.RejectExpressionsConfig(DEFAULT_DATASOURCE,DEFAULT_EXTENDEDPERSISTENCE_INHERITANCE).setNotExpectedWriteFailure(JPADefinition.DEFAULT_EXTENDEDPERSISTENCE_INHERITANCE))) @AT@ 4280 @LENGTH@ 425
------UPD SimpleName@@MethodName:checkFailedTransformedBootOperations:[mainServices, oldVersion, ops, new FailedOperationTransformationConfig().addFailedAttribute(PathAddress.pathAddress(PathElement.pathElement(SUBSYSTEM,JPAExtension.SUBSYSTEM_NAME)),new FailedOperationTransformationConfig.RejectExpressionsConfig(DEFAULT_DATASOURCE,DEFAULT_EXTENDEDPERSISTENCE_INHERITANCE))] @TO@ MethodName:checkFailedTransformedBootOperations:[mainServices, oldVersion, ops, new FailedOperationTransformationConfig().addFailedAttribute(PathAddress.pathAddress(PathElement.pathElement(SUBSYSTEM,JPAExtension.SUBSYSTEM_NAME)),new FailedOperationTransformationConfig.RejectExpressionsConfig(DEFAULT_DATASOURCE,DEFAULT_EXTENDEDPERSISTENCE_INHERITANCE).setNotExpectedWriteFailure(JPADefinition.DEFAULT_EXTENDEDPERSISTENCE_INHERITANCE))] @AT@ 4295 @LENGTH@ 410
---------UPD MethodInvocation@@new FailedOperationTransformationConfig().addFailedAttribute(PathAddress.pathAddress(PathElement.pathElement(SUBSYSTEM,JPAExtension.SUBSYSTEM_NAME)),new FailedOperationTransformationConfig.RejectExpressionsConfig(DEFAULT_DATASOURCE,DEFAULT_EXTENDEDPERSISTENCE_INHERITANCE)) @TO@ new FailedOperationTransformationConfig().addFailedAttribute(PathAddress.pathAddress(PathElement.pathElement(SUBSYSTEM,JPAExtension.SUBSYSTEM_NAME)),new FailedOperationTransformationConfig.RejectExpressionsConfig(DEFAULT_DATASOURCE,DEFAULT_EXTENDEDPERSISTENCE_INHERITANCE).setNotExpectedWriteFailure(JPADefinition.DEFAULT_EXTENDEDPERSISTENCE_INHERITANCE)) @AT@ 4379 @LENGTH@ 325
------------UPD SimpleName@@MethodName:addFailedAttribute:[PathAddress.pathAddress(PathElement.pathElement(SUBSYSTEM,JPAExtension.SUBSYSTEM_NAME)), new FailedOperationTransformationConfig.RejectExpressionsConfig(DEFAULT_DATASOURCE,DEFAULT_EXTENDEDPERSISTENCE_INHERITANCE)] @TO@ MethodName:addFailedAttribute:[PathAddress.pathAddress(PathElement.pathElement(SUBSYSTEM,JPAExtension.SUBSYSTEM_NAME)), new FailedOperationTransformationConfig.RejectExpressionsConfig(DEFAULT_DATASOURCE,DEFAULT_EXTENDEDPERSISTENCE_INHERITANCE).setNotExpectedWriteFailure(JPADefinition.DEFAULT_EXTENDEDPERSISTENCE_INHERITANCE)] @AT@ 4442 @LENGTH@ 262
---------------INS MethodInvocation@@new FailedOperationTransformationConfig.RejectExpressionsConfig(DEFAULT_DATASOURCE,DEFAULT_EXTENDEDPERSISTENCE_INHERITANCE).setNotExpectedWriteFailure(JPADefinition.DEFAULT_EXTENDEDPERSISTENCE_INHERITANCE) @TO@ SimpleName@@MethodName:addFailedAttribute:[PathAddress.pathAddress(PathElement.pathElement(SUBSYSTEM,JPAExtension.SUBSYSTEM_NAME)), new FailedOperationTransformationConfig.RejectExpressionsConfig(DEFAULT_DATASOURCE,DEFAULT_EXTENDEDPERSISTENCE_INHERITANCE)] @AT@ 4579 @LENGTH@ 239
------------------INS ClassInstanceCreation@@FailedOperationTransformationConfig.RejectExpressionsConfig[DEFAULT_DATASOURCE, DEFAULT_EXTENDEDPERSISTENCE_INHERITANCE] @TO@ MethodInvocation@@new FailedOperationTransformationConfig.RejectExpressionsConfig(DEFAULT_DATASOURCE,DEFAULT_EXTENDEDPERSISTENCE_INHERITANCE).setNotExpectedWriteFailure(JPADefinition.DEFAULT_EXTENDEDPERSISTENCE_INHERITANCE) @AT@ 4579 @LENGTH@ 124
---------------------MOV New@@new @TO@ ClassInstanceCreation@@FailedOperationTransformationConfig.RejectExpressionsConfig[DEFAULT_DATASOURCE, DEFAULT_EXTENDEDPERSISTENCE_INHERITANCE] @AT@ 4579 @LENGTH@ 3
---------------------MOV SimpleType@@FailedOperationTransformationConfig.RejectExpressionsConfig @TO@ ClassInstanceCreation@@FailedOperationTransformationConfig.RejectExpressionsConfig[DEFAULT_DATASOURCE, DEFAULT_EXTENDEDPERSISTENCE_INHERITANCE] @AT@ 4583 @LENGTH@ 59
---------------------MOV SimpleName@@DEFAULT_DATASOURCE @TO@ ClassInstanceCreation@@FailedOperationTransformationConfig.RejectExpressionsConfig[DEFAULT_DATASOURCE, DEFAULT_EXTENDEDPERSISTENCE_INHERITANCE] @AT@ 4643 @LENGTH@ 18
---------------------MOV SimpleName@@DEFAULT_EXTENDEDPERSISTENCE_INHERITANCE @TO@ ClassInstanceCreation@@FailedOperationTransformationConfig.RejectExpressionsConfig[DEFAULT_DATASOURCE, DEFAULT_EXTENDEDPERSISTENCE_INHERITANCE] @AT@ 4663 @LENGTH@ 39
------------------INS SimpleName@@MethodName:setNotExpectedWriteFailure:[JPADefinition.DEFAULT_EXTENDEDPERSISTENCE_INHERITANCE] @TO@ MethodInvocation@@new FailedOperationTransformationConfig.RejectExpressionsConfig(DEFAULT_DATASOURCE,DEFAULT_EXTENDEDPERSISTENCE_INHERITANCE).setNotExpectedWriteFailure(JPADefinition.DEFAULT_EXTENDEDPERSISTENCE_INHERITANCE) @AT@ 4737 @LENGTH@ 81
---------------------INS QualifiedName@@JPADefinition.DEFAULT_EXTENDEDPERSISTENCE_INHERITANCE @TO@ SimpleName@@MethodName:setNotExpectedWriteFailure:[JPADefinition.DEFAULT_EXTENDEDPERSISTENCE_INHERITANCE] @AT@ 4764 @LENGTH@ 53
------------------------INS SimpleName@@JPADefinition @TO@ QualifiedName@@JPADefinition.DEFAULT_EXTENDEDPERSISTENCE_INHERITANCE @AT@ 4764 @LENGTH@ 13
------------------------INS SimpleName@@DEFAULT_EXTENDEDPERSISTENCE_INHERITANCE @TO@ QualifiedName@@JPADefinition.DEFAULT_EXTENDEDPERSISTENCE_INHERITANCE @AT@ 4778 @LENGTH@ 39
---------------DEL ClassInstanceCreation@@FailedOperationTransformationConfig.RejectExpressionsConfig[DEFAULT_DATASOURCE, DEFAULT_EXTENDEDPERSISTENCE_INHERITANCE] @AT@ 4579 @LENGTH@ 124


UPD TypeDeclaration@@[@ContextConfiguration, @Ignore("Manual test as you need to start a Kestrel broker"), public]KestrelSpringXmlTest, AbstractJUnit38SpringContextTests @TO@ [@ContextConfiguration, @RunWith(SpringJUnit4ClassRunner.class), @Ignore("Manual test as you need to start a Kestrel broker"), public]KestrelSpringXmlTest, AbstractJUnit4SpringContextTests @AT@ 1266 @LENGTH@ 824
---INS SingleMemberAnnotation@@@RunWith(SpringJUnit4ClassRunner.class) @TO@ TypeDeclaration@@[@ContextConfiguration, @Ignore("Manual test as you need to start a Kestrel broker"), public]KestrelSpringXmlTest, AbstractJUnit38SpringContextTests @AT@ 1391 @LENGTH@ 39
---UPD SimpleType@@AbstractJUnit38SpringContextTests @TO@ AbstractJUnit4SpringContextTests @AT@ 1391 @LENGTH@ 33


UPD ExpressionStatement@@MethodInvocation:context.restartRequired() @TO@ MethodInvocation:context.reloadRequired() @AT@ 2671 @LENGTH@ 26
---UPD MethodInvocation@@context.restartRequired() @TO@ context.reloadRequired() @AT@ 2671 @LENGTH@ 25
------UPD SimpleName@@MethodName:restartRequired:[] @TO@ MethodName:reloadRequired:[] @AT@ 2679 @LENGTH@ 17


DEL VariableDeclarationStatement@@final URL rolesPrintingURL=new URL(webAppURL.toExternalForm() + RolePrintingServlet.SERVLET_PATH.substring(1) + "?"+ QUERY_ROLES); @AT@ 8673 @LENGTH@ 149
---DEL Modifier@@final @AT@ 8673 @LENGTH@ 5
---DEL SimpleType@@URL @AT@ 8679 @LENGTH@ 3
---DEL VariableDeclarationFragment@@rolesPrintingURL=new URL(webAppURL.toExternalForm() + RolePrintingServlet.SERVLET_PATH.substring(1) + "?"+ QUERY_ROLES) @AT@ 8683 @LENGTH@ 138
------DEL SimpleName@@rolesPrintingURL @AT@ 8683 @LENGTH@ 16
------DEL ClassInstanceCreation@@URL[webAppURL.toExternalForm() + RolePrintingServlet.SERVLET_PATH.substring(1) + "?"+ QUERY_ROLES] @AT@ 8702 @LENGTH@ 119
---------DEL New@@new @AT@ 8702 @LENGTH@ 3
---------DEL SimpleType@@URL @AT@ 8706 @LENGTH@ 3
---------DEL InfixExpression@@webAppURL.toExternalForm() + RolePrintingServlet.SERVLET_PATH.substring(1) + "?"+ QUERY_ROLES @AT@ 8710 @LENGTH@ 110
------------DEL MethodInvocation@@webAppURL.toExternalForm() @AT@ 8710 @LENGTH@ 26
---------------DEL SimpleName@@Name:webAppURL @AT@ 8710 @LENGTH@ 9
---------------DEL SimpleName@@MethodName:toExternalForm:[] @AT@ 8720 @LENGTH@ 16
------------DEL Operator@@+ @AT@ 8736 @LENGTH@ 1
------------DEL MethodInvocation@@RolePrintingServlet.SERVLET_PATH.substring(1) @AT@ 8739 @LENGTH@ 45
---------------DEL QualifiedName@@Name:RolePrintingServlet.SERVLET_PATH @AT@ 8739 @LENGTH@ 32
---------------DEL SimpleName@@MethodName:substring:[1] @AT@ 8772 @LENGTH@ 12
------------------DEL NumberLiteral@@1 @AT@ 8782 @LENGTH@ 1
------------DEL StringLiteral@@"?" @AT@ 8787 @LENGTH@ 3
------------DEL SimpleName@@QUERY_ROLES @AT@ 8809 @LENGTH@ 11


INS TryStatement@@try {  if (model.hasDefined(ModelDescriptionConstants.DIRECTORY_GROUPING)) {    return DirectoryGrouping.forName(HostResourceDefinition.DIRECTORY_GROUPING.resolveModelAttribute(ExpressionResolver.DEFAULT,model).asString());  }} catch (OperationFailedException e) {  throw new IllegalStateException(e);} @TO@ MethodDeclaration@@public, static, DirectoryGrouping, MethodName:fromModel, final ModelNode model,  @AT@ 3415 @LENGTH@ 367
---INS IfStatement@@if (model.hasDefined(ModelDescriptionConstants.DIRECTORY_GROUPING)) {  return DirectoryGrouping.forName(HostResourceDefinition.DIRECTORY_GROUPING.resolveModelAttribute(ExpressionResolver.DEFAULT,model).asString());} @TO@ TryStatement@@try {  if (model.hasDefined(ModelDescriptionConstants.DIRECTORY_GROUPING)) {    return DirectoryGrouping.forName(HostResourceDefinition.DIRECTORY_GROUPING.resolveModelAttribute(ExpressionResolver.DEFAULT,model).asString());  }} catch (OperationFailedException e) {  throw new IllegalStateException(e);} @AT@ 3433 @LENGTH@ 244
------MOV MethodInvocation@@model.hasDefined(ModelDescriptionConstants.DIRECTORY_GROUPING) @TO@ IfStatement@@if (model.hasDefined(ModelDescriptionConstants.DIRECTORY_GROUPING)) {  return DirectoryGrouping.forName(HostResourceDefinition.DIRECTORY_GROUPING.resolveModelAttribute(ExpressionResolver.DEFAULT,model).asString());} @AT@ 3240 @LENGTH@ 62
------MOV Block@@ThenBody:{  return DirectoryGrouping.forName(model.get(ModelDescriptionConstants.DIRECTORY_GROUPING).asString());} @TO@ IfStatement@@if (model.hasDefined(ModelDescriptionConstants.DIRECTORY_GROUPING)) {  return DirectoryGrouping.forName(HostResourceDefinition.DIRECTORY_GROUPING.resolveModelAttribute(ExpressionResolver.DEFAULT,model).asString());} @AT@ 3304 @LENGTH@ 125
---------UPD ReturnStatement@@MethodInvocation:DirectoryGrouping.forName(model.get(ModelDescriptionConstants.DIRECTORY_GROUPING).asString()) @TO@ MethodInvocation:DirectoryGrouping.forName(HostResourceDefinition.DIRECTORY_GROUPING.resolveModelAttribute(ExpressionResolver.DEFAULT,model).asString()) @AT@ 3318 @LENGTH@ 101
------------UPD MethodInvocation@@DirectoryGrouping.forName(model.get(ModelDescriptionConstants.DIRECTORY_GROUPING).asString()) @TO@ DirectoryGrouping.forName(HostResourceDefinition.DIRECTORY_GROUPING.resolveModelAttribute(ExpressionResolver.DEFAULT,model).asString()) @AT@ 3325 @LENGTH@ 93
---------------UPD SimpleName@@MethodName:forName:[model.get(ModelDescriptionConstants.DIRECTORY_GROUPING).asString()] @TO@ MethodName:forName:[HostResourceDefinition.DIRECTORY_GROUPING.resolveModelAttribute(ExpressionResolver.DEFAULT,model).asString()] @AT@ 3343 @LENGTH@ 75
------------------UPD MethodInvocation@@model.get(ModelDescriptionConstants.DIRECTORY_GROUPING).asString() @TO@ HostResourceDefinition.DIRECTORY_GROUPING.resolveModelAttribute(ExpressionResolver.DEFAULT,model).asString() @AT@ 3351 @LENGTH@ 66
---------------------UPD MethodInvocation@@MethodName:get:[ModelDescriptionConstants.DIRECTORY_GROUPING] @TO@ MethodName:resolveModelAttribute:[ExpressionResolver.DEFAULT, model] @AT@ 3351 @LENGTH@ 55
------------------------UPD QualifiedName@@ModelDescriptionConstants.DIRECTORY_GROUPING @TO@ ExpressionResolver.DEFAULT @AT@ 3361 @LENGTH@ 44
---------------------------UPD SimpleName@@ModelDescriptionConstants @TO@ ExpressionResolver @AT@ 3361 @LENGTH@ 25
---------------------------UPD SimpleName@@DIRECTORY_GROUPING @TO@ DEFAULT @AT@ 3387 @LENGTH@ 18
------------------------INS SimpleName@@model @TO@ MethodInvocation@@MethodName:get:[ModelDescriptionConstants.DIRECTORY_GROUPING] @AT@ 3644 @LENGTH@ 5
---------------------DEL SimpleName@@Name:model @AT@ 3351 @LENGTH@ 5
---------------------INS QualifiedName@@Name:HostResourceDefinition.DIRECTORY_GROUPING @TO@ MethodInvocation@@model.get(ModelDescriptionConstants.DIRECTORY_GROUPING).asString() @AT@ 3552 @LENGTH@ 41
---INS CatchClause@@catch (OperationFailedException e) {  throw new IllegalStateException(e);} @TO@ TryStatement@@try {  if (model.hasDefined(ModelDescriptionConstants.DIRECTORY_GROUPING)) {    return DirectoryGrouping.forName(HostResourceDefinition.DIRECTORY_GROUPING.resolveModelAttribute(ExpressionResolver.DEFAULT,model).asString());  }} catch (OperationFailedException e) {  throw new IllegalStateException(e);} @AT@ 3688 @LENGTH@ 94
------INS SingleVariableDeclaration@@OperationFailedException e @TO@ CatchClause@@catch (OperationFailedException e) {  throw new IllegalStateException(e);} @AT@ 3695 @LENGTH@ 26
---------INS SimpleType@@OperationFailedException @TO@ SingleVariableDeclaration@@OperationFailedException e @AT@ 3695 @LENGTH@ 24
---------INS SimpleName@@e @TO@ SingleVariableDeclaration@@OperationFailedException e @AT@ 3720 @LENGTH@ 1
------INS ThrowStatement@@ClassInstanceCreation:new IllegalStateException(e) @TO@ CatchClause@@catch (OperationFailedException e) {  throw new IllegalStateException(e);} @AT@ 3737 @LENGTH@ 35
---------INS ClassInstanceCreation@@IllegalStateException[e] @TO@ ThrowStatement@@ClassInstanceCreation:new IllegalStateException(e) @AT@ 3743 @LENGTH@ 28
------------INS New@@new @TO@ ClassInstanceCreation@@IllegalStateException[e] @AT@ 3743 @LENGTH@ 3
------------INS SimpleType@@IllegalStateException @TO@ ClassInstanceCreation@@IllegalStateException[e] @AT@ 3747 @LENGTH@ 21
------------INS SimpleName@@e @TO@ ClassInstanceCreation@@IllegalStateException[e] @AT@ 3769 @LENGTH@ 1


UPD TryStatement@@try {  return zk.getStringData(ZkPath.CONTAINER_PARENT.getPath(containerId)).trim();} catch (KeeperException.NoNodeException e) {  return "";}catch (Throwable e) {  throw new FabricException(e);} @TO@ try {  String parent=zk.getStringData(ZkPath.CONTAINER_PARENT.getPath(containerId));  if (parent == null) {    return "";  }  return parent.trim();} catch (KeeperException.NoNodeException e) {  return "";}catch (Throwable e) {  throw new FabricException(e);} @AT@ 4482 @LENGTH@ 278
---INS VariableDeclarationStatement@@String parent=zk.getStringData(ZkPath.CONTAINER_PARENT.getPath(containerId)); @TO@ TryStatement@@try {  return zk.getStringData(ZkPath.CONTAINER_PARENT.getPath(containerId)).trim();} catch (KeeperException.NoNodeException e) {  return "";}catch (Throwable e) {  throw new FabricException(e);} @AT@ 4500 @LENGTH@ 79
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String parent=zk.getStringData(ZkPath.CONTAINER_PARENT.getPath(containerId)); @AT@ 4500 @LENGTH@ 6
------INS VariableDeclarationFragment@@parent=zk.getStringData(ZkPath.CONTAINER_PARENT.getPath(containerId)) @TO@ VariableDeclarationStatement@@String parent=zk.getStringData(ZkPath.CONTAINER_PARENT.getPath(containerId)); @AT@ 4507 @LENGTH@ 71
---------MOV MethodInvocation@@MethodName:getStringData:[ZkPath.CONTAINER_PARENT.getPath(containerId)] @TO@ VariableDeclarationFragment@@parent=zk.getStringData(ZkPath.CONTAINER_PARENT.getPath(containerId)) @AT@ 4507 @LENGTH@ 62
------------INS SimpleName@@Name:zk @TO@ MethodInvocation@@MethodName:getStringData:[ZkPath.CONTAINER_PARENT.getPath(containerId)] @AT@ 4516 @LENGTH@ 2
------------INS SimpleName@@MethodName:getStringData:[ZkPath.CONTAINER_PARENT.getPath(containerId)] @TO@ MethodInvocation@@MethodName:getStringData:[ZkPath.CONTAINER_PARENT.getPath(containerId)] @AT@ 4519 @LENGTH@ 59
---------------MOV MethodInvocation@@ZkPath.CONTAINER_PARENT.getPath(containerId) @TO@ SimpleName@@MethodName:getStringData:[ZkPath.CONTAINER_PARENT.getPath(containerId)] @AT@ 4524 @LENGTH@ 44
---------INS SimpleName@@parent @TO@ VariableDeclarationFragment@@parent=zk.getStringData(ZkPath.CONTAINER_PARENT.getPath(containerId)) @AT@ 4507 @LENGTH@ 6
---UPD ReturnStatement@@MethodInvocation:zk.getStringData(ZkPath.CONTAINER_PARENT.getPath(containerId)).trim() @TO@ MethodInvocation:parent.trim() @AT@ 4500 @LENGTH@ 77
------UPD MethodInvocation@@zk.getStringData(ZkPath.CONTAINER_PARENT.getPath(containerId)).trim() @TO@ parent.trim() @AT@ 4507 @LENGTH@ 69
---------UPD MethodInvocation@@MethodName:getStringData:[ZkPath.CONTAINER_PARENT.getPath(containerId)] @TO@ zk.getStringData(ZkPath.CONTAINER_PARENT.getPath(containerId)) @AT@ 4507 @LENGTH@ 62
---------UPD SimpleName@@Name:zk @TO@ Name:parent @AT@ 4507 @LENGTH@ 2
---INS IfStatement@@if (parent == null) {  return "";} @TO@ TryStatement@@try {  return zk.getStringData(ZkPath.CONTAINER_PARENT.getPath(containerId)).trim();} catch (KeeperException.NoNodeException e) {  return "";}catch (Throwable e) {  throw new FabricException(e);} @AT@ 4592 @LENGTH@ 62
------INS InfixExpression@@parent == null @TO@ IfStatement@@if (parent == null) {  return "";} @AT@ 4596 @LENGTH@ 14
---------INS SimpleName@@parent @TO@ InfixExpression@@parent == null @AT@ 4596 @LENGTH@ 6
---------INS Operator@@== @TO@ InfixExpression@@parent == null @AT@ 4602 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@parent == null @AT@ 4606 @LENGTH@ 4
------INS Block@@ThenBody:{  return "";} @TO@ IfStatement@@if (parent == null) {  return "";} @AT@ 4612 @LENGTH@ 42
---------INS ReturnStatement@@StringLiteral:"" @TO@ Block@@ThenBody:{  return "";} @AT@ 4630 @LENGTH@ 10
------------INS StringLiteral@@"" @TO@ ReturnStatement@@StringLiteral:"" @AT@ 4637 @LENGTH@ 2


UPD MethodDeclaration@@public, boolean, MethodName:isCached, final Object key,  @TO@ public, synchronized, boolean, MethodName:isCached, final Object key,  @AT@ 2681 @LENGTH@ 88
---DEL ReturnStatement@@MethodInvocation:cache.containsKey(key) @AT@ 2733 @LENGTH@ 30
---INS Modifier@@synchronized @TO@ MethodDeclaration@@public, boolean, MethodName:isCached, final Object key,  @AT@ 2747 @LENGTH@ 12
---INS IfStatement@@if (cache.containsKey(key)) {  final CacheEntry cacheEntry=cache.get(key);  return !cacheEntry.instance.isRemoved();} @TO@ MethodDeclaration@@public, boolean, MethodName:isCached, final Object key,  @AT@ 2805 @LENGTH@ 149
------MOV MethodInvocation@@cache.containsKey(key) @TO@ IfStatement@@if (cache.containsKey(key)) {  final CacheEntry cacheEntry=cache.get(key);  return !cacheEntry.instance.isRemoved();} @AT@ 2740 @LENGTH@ 22
------INS Block@@ThenBody:{  final CacheEntry cacheEntry=cache.get(key);  return !cacheEntry.instance.isRemoved();} @TO@ IfStatement@@if (cache.containsKey(key)) {  final CacheEntry cacheEntry=cache.get(key);  return !cacheEntry.instance.isRemoved();} @AT@ 2832 @LENGTH@ 122
---------INS VariableDeclarationStatement@@final CacheEntry cacheEntry=cache.get(key); @TO@ Block@@ThenBody:{  final CacheEntry cacheEntry=cache.get(key);  return !cacheEntry.instance.isRemoved();} @AT@ 2846 @LENGTH@ 45
------------INS Modifier@@final @TO@ VariableDeclarationStatement@@final CacheEntry cacheEntry=cache.get(key); @AT@ 2846 @LENGTH@ 5
------------INS SimpleType@@CacheEntry @TO@ VariableDeclarationStatement@@final CacheEntry cacheEntry=cache.get(key); @AT@ 2852 @LENGTH@ 10
------------INS VariableDeclarationFragment@@cacheEntry=cache.get(key) @TO@ VariableDeclarationStatement@@final CacheEntry cacheEntry=cache.get(key); @AT@ 2863 @LENGTH@ 27
---------------INS SimpleName@@cacheEntry @TO@ VariableDeclarationFragment@@cacheEntry=cache.get(key) @AT@ 2863 @LENGTH@ 10
---------------INS MethodInvocation@@cache.get(key) @TO@ VariableDeclarationFragment@@cacheEntry=cache.get(key) @AT@ 2876 @LENGTH@ 14
------------------INS SimpleName@@Name:cache @TO@ MethodInvocation@@cache.get(key) @AT@ 2876 @LENGTH@ 5
------------------INS SimpleName@@MethodName:get:[key] @TO@ MethodInvocation@@cache.get(key) @AT@ 2882 @LENGTH@ 8
---------------------INS SimpleName@@key @TO@ SimpleName@@MethodName:get:[key] @AT@ 2886 @LENGTH@ 3
---------INS ReturnStatement@@PrefixExpression:!cacheEntry.instance.isRemoved() @TO@ Block@@ThenBody:{  final CacheEntry cacheEntry=cache.get(key);  return !cacheEntry.instance.isRemoved();} @AT@ 2904 @LENGTH@ 40
------------INS PrefixExpression@@!cacheEntry.instance.isRemoved() @TO@ ReturnStatement@@PrefixExpression:!cacheEntry.instance.isRemoved() @AT@ 2911 @LENGTH@ 32
---------------INS Operator@@! @TO@ PrefixExpression@@!cacheEntry.instance.isRemoved() @AT@ 2911 @LENGTH@ 1
---------------INS MethodInvocation@@cacheEntry.instance.isRemoved() @TO@ PrefixExpression@@!cacheEntry.instance.isRemoved() @AT@ 2912 @LENGTH@ 31
------------------INS QualifiedName@@Name:cacheEntry.instance @TO@ MethodInvocation@@cacheEntry.instance.isRemoved() @AT@ 2912 @LENGTH@ 19
------------------INS SimpleName@@MethodName:isRemoved:[] @TO@ MethodInvocation@@cacheEntry.instance.isRemoved() @AT@ 2932 @LENGTH@ 11
---INS ReturnStatement@@BooleanLiteral:false @TO@ MethodDeclaration@@public, boolean, MethodName:isCached, final Object key,  @AT@ 2963 @LENGTH@ 13
------INS BooleanLiteral@@false @TO@ ReturnStatement@@BooleanLiteral:false @AT@ 2970 @LENGTH@ 5


UPD VariableDeclarationStatement@@final ModelControllerImpl controller=new ModelControllerImpl(container,target,rootResourceRegistration,new ContainerStateMonitor(container,serviceController),configurationPersister,processType,runningModeControl,prepareStep,processState,executorService,expressionResolver); @TO@ final ModelControllerImpl controller=new ModelControllerImpl(container,target,rootResourceRegistration,new ContainerStateMonitor(container),configurationPersister,processType,runningModeControl,prepareStep,processState,executorService,expressionResolver); @AT@ 8579 @LENGTH@ 350
---UPD VariableDeclarationFragment@@controller=new ModelControllerImpl(container,target,rootResourceRegistration,new ContainerStateMonitor(container,serviceController),configurationPersister,processType,runningModeControl,prepareStep,processState,executorService,expressionResolver) @TO@ controller=new ModelControllerImpl(container,target,rootResourceRegistration,new ContainerStateMonitor(container),configurationPersister,processType,runningModeControl,prepareStep,processState,executorService,expressionResolver) @AT@ 8605 @LENGTH@ 323
------UPD ClassInstanceCreation@@ModelControllerImpl[container, target, rootResourceRegistration, new ContainerStateMonitor(container,serviceController), configurationPersister, processType, runningModeControl, prepareStep, processState, executorService, expressionResolver] @TO@ ModelControllerImpl[container, target, rootResourceRegistration, new ContainerStateMonitor(container), configurationPersister, processType, runningModeControl, prepareStep, processState, executorService, expressionResolver] @AT@ 8618 @LENGTH@ 310
---------UPD ClassInstanceCreation@@ContainerStateMonitor[container, serviceController] @TO@ ContainerStateMonitor[container] @AT@ 8719 @LENGTH@ 55
------------DEL SimpleName@@serviceController @AT@ 8756 @LENGTH@ 17


UPD MethodDeclaration@@public, static, void, MethodName:startDriverServices, final ServiceTarget target, final ModuleIdentifier moduleId, Driver driver, final String driverName, final Integer majorVersion, final Integer minorVersion, final String dataSourceClassName, final String xaDataSourceClassName, IllegalStateException,  @TO@ public, static, void, MethodName:startDriverServices, final ServiceTarget target, final ModuleIdentifier moduleId, Driver driver, final String driverName, final Integer majorVersion, final Integer minorVersion, final String dataSourceClassName, final String xaDataSourceClassName, final ServiceVerificationHandler serviceVerificationHandler, IllegalStateException,  @AT@ 7633 @LENGTH@ 1607
---INS SingleVariableDeclaration@@final ServiceVerificationHandler serviceVerificationHandler @TO@ MethodDeclaration@@public, static, void, MethodName:startDriverServices, final ServiceTarget target, final ModuleIdentifier moduleId, Driver driver, final String driverName, final Integer majorVersion, final Integer minorVersion, final String dataSourceClassName, final String xaDataSourceClassName, IllegalStateException,  @AT@ 7986 @LENGTH@ 59
------INS Modifier@@final @TO@ SingleVariableDeclaration@@final ServiceVerificationHandler serviceVerificationHandler @AT@ 7986 @LENGTH@ 5
------INS SimpleType@@ServiceVerificationHandler @TO@ SingleVariableDeclaration@@final ServiceVerificationHandler serviceVerificationHandler @AT@ 7992 @LENGTH@ 26
------INS SimpleName@@serviceVerificationHandler @TO@ SingleVariableDeclaration@@final ServiceVerificationHandler serviceVerificationHandler @AT@ 8019 @LENGTH@ 26
---UPD ExpressionStatement@@MethodInvocation:target.addService(ServiceName.JBOSS.append("jdbc-driver",driverName.replaceAll("\\.","_")),driverService).addDependency(ConnectorServices.JDBC_DRIVER_REGISTRY_SERVICE,DriverRegistry.class,driverService.getDriverRegistryServiceInjector()).setInitialMode(ServiceController.Mode.ACTIVE).install() @TO@ MethodInvocation:builder.install() @AT@ 8877 @LENGTH@ 357
------UPD MethodInvocation@@target.addService(ServiceName.JBOSS.append("jdbc-driver",driverName.replaceAll("\\.","_")),driverService).addDependency(ConnectorServices.JDBC_DRIVER_REGISTRY_SERVICE,DriverRegistry.class,driverService.getDriverRegistryServiceInjector()).setInitialMode(ServiceController.Mode.ACTIVE).install() @TO@ target.addService(ServiceName.JBOSS.append("jdbc-driver",driverName.replaceAll("\\.","_")),driverService).addDependency(ConnectorServices.JDBC_DRIVER_REGISTRY_SERVICE,DriverRegistry.class,driverService.getDriverRegistryServiceInjector()).setInitialMode(ServiceController.Mode.ACTIVE) @AT@ 8877 @LENGTH@ 356
------INS MethodInvocation@@builder.install() @TO@ ExpressionStatement@@MethodInvocation:target.addService(ServiceName.JBOSS.append("jdbc-driver",driverName.replaceAll("\\.","_")),driverService).addDependency(ConnectorServices.JDBC_DRIVER_REGISTRY_SERVICE,DriverRegistry.class,driverService.getDriverRegistryServiceInjector()).setInitialMode(ServiceController.Mode.ACTIVE).install() @AT@ 9540 @LENGTH@ 17
---------INS SimpleName@@Name:builder @TO@ MethodInvocation@@builder.install() @AT@ 9540 @LENGTH@ 7
---------INS SimpleName@@MethodName:install:[] @TO@ MethodInvocation@@builder.install() @AT@ 9548 @LENGTH@ 9
---INS VariableDeclarationStatement@@final ServiceBuilder<Driver> builder=target.addService(ServiceName.JBOSS.append("jdbc-driver",driverName.replaceAll("\\.","_")),driverService).addDependency(ConnectorServices.JDBC_DRIVER_REGISTRY_SERVICE,DriverRegistry.class,driverService.getDriverRegistryServiceInjector()).setInitialMode(ServiceController.Mode.ACTIVE); @TO@ MethodDeclaration@@public, static, void, MethodName:startDriverServices, final ServiceTarget target, final ModuleIdentifier moduleId, Driver driver, final String driverName, final Integer majorVersion, final Integer minorVersion, final String dataSourceClassName, final String xaDataSourceClassName, IllegalStateException,  @AT@ 9025 @LENGTH@ 386
------INS Modifier@@final @TO@ VariableDeclarationStatement@@final ServiceBuilder<Driver> builder=target.addService(ServiceName.JBOSS.append("jdbc-driver",driverName.replaceAll("\\.","_")),driverService).addDependency(ConnectorServices.JDBC_DRIVER_REGISTRY_SERVICE,DriverRegistry.class,driverService.getDriverRegistryServiceInjector()).setInitialMode(ServiceController.Mode.ACTIVE); @AT@ 9025 @LENGTH@ 5
------INS ParameterizedType@@ServiceBuilder<Driver> @TO@ VariableDeclarationStatement@@final ServiceBuilder<Driver> builder=target.addService(ServiceName.JBOSS.append("jdbc-driver",driverName.replaceAll("\\.","_")),driverService).addDependency(ConnectorServices.JDBC_DRIVER_REGISTRY_SERVICE,DriverRegistry.class,driverService.getDriverRegistryServiceInjector()).setInitialMode(ServiceController.Mode.ACTIVE); @AT@ 9031 @LENGTH@ 22
---------INS SimpleType@@ServiceBuilder @TO@ ParameterizedType@@ServiceBuilder<Driver> @AT@ 9031 @LENGTH@ 14
---------INS SimpleType@@Driver @TO@ ParameterizedType@@ServiceBuilder<Driver> @AT@ 9046 @LENGTH@ 6
------INS VariableDeclarationFragment@@builder=target.addService(ServiceName.JBOSS.append("jdbc-driver",driverName.replaceAll("\\.","_")),driverService).addDependency(ConnectorServices.JDBC_DRIVER_REGISTRY_SERVICE,DriverRegistry.class,driverService.getDriverRegistryServiceInjector()).setInitialMode(ServiceController.Mode.ACTIVE) @TO@ VariableDeclarationStatement@@final ServiceBuilder<Driver> builder=target.addService(ServiceName.JBOSS.append("jdbc-driver",driverName.replaceAll("\\.","_")),driverService).addDependency(ConnectorServices.JDBC_DRIVER_REGISTRY_SERVICE,DriverRegistry.class,driverService.getDriverRegistryServiceInjector()).setInitialMode(ServiceController.Mode.ACTIVE); @AT@ 9054 @LENGTH@ 356
---------MOV MethodInvocation@@target.addService(ServiceName.JBOSS.append("jdbc-driver",driverName.replaceAll("\\.","_")),driverService).addDependency(ConnectorServices.JDBC_DRIVER_REGISTRY_SERVICE,DriverRegistry.class,driverService.getDriverRegistryServiceInjector()).setInitialMode(ServiceController.Mode.ACTIVE).install() @TO@ VariableDeclarationFragment@@builder=target.addService(ServiceName.JBOSS.append("jdbc-driver",driverName.replaceAll("\\.","_")),driverService).addDependency(ConnectorServices.JDBC_DRIVER_REGISTRY_SERVICE,DriverRegistry.class,driverService.getDriverRegistryServiceInjector()).setInitialMode(ServiceController.Mode.ACTIVE) @AT@ 8877 @LENGTH@ 356
------------DEL MethodInvocation@@MethodName:setInitialMode:[ServiceController.Mode.ACTIVE] @AT@ 8877 @LENGTH@ 346
------------UPD SimpleName@@MethodName:install:[] @TO@ MethodName:setInitialMode:[ServiceController.Mode.ACTIVE] @AT@ 9224 @LENGTH@ 9
---------------MOV QualifiedName@@ServiceController.Mode.ACTIVE @TO@ SimpleName@@MethodName:install:[] @AT@ 9193 @LENGTH@ 29
---------------MOV QualifiedName@@ServiceController.Mode.ACTIVE @TO@ SimpleName@@MethodName:install:[] @AT@ 9193 @LENGTH@ 29
---------INS SimpleName@@builder @TO@ VariableDeclarationFragment@@builder=target.addService(ServiceName.JBOSS.append("jdbc-driver",driverName.replaceAll("\\.","_")),driverService).addDependency(ConnectorServices.JDBC_DRIVER_REGISTRY_SERVICE,DriverRegistry.class,driverService.getDriverRegistryServiceInjector()).setInitialMode(ServiceController.Mode.ACTIVE) @AT@ 9054 @LENGTH@ 7
---INS IfStatement@@if (serviceVerificationHandler != null) {  builder.addListener(serviceVerificationHandler);} @TO@ MethodDeclaration@@public, static, void, MethodName:startDriverServices, final ServiceTarget target, final ModuleIdentifier moduleId, Driver driver, final String driverName, final Integer majorVersion, final Integer minorVersion, final String dataSourceClassName, final String xaDataSourceClassName, IllegalStateException,  @AT@ 9420 @LENGTH@ 111
------INS InfixExpression@@serviceVerificationHandler != null @TO@ IfStatement@@if (serviceVerificationHandler != null) {  builder.addListener(serviceVerificationHandler);} @AT@ 9423 @LENGTH@ 34
---------INS SimpleName@@serviceVerificationHandler @TO@ InfixExpression@@serviceVerificationHandler != null @AT@ 9423 @LENGTH@ 26
---------INS Operator@@!= @TO@ InfixExpression@@serviceVerificationHandler != null @AT@ 9449 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@serviceVerificationHandler != null @AT@ 9453 @LENGTH@ 4
------INS Block@@ThenBody:{  builder.addListener(serviceVerificationHandler);} @TO@ IfStatement@@if (serviceVerificationHandler != null) {  builder.addListener(serviceVerificationHandler);} @AT@ 9459 @LENGTH@ 72
---------INS ExpressionStatement@@MethodInvocation:builder.addListener(serviceVerificationHandler) @TO@ Block@@ThenBody:{  builder.addListener(serviceVerificationHandler);} @AT@ 9473 @LENGTH@ 48
------------INS MethodInvocation@@builder.addListener(serviceVerificationHandler) @TO@ ExpressionStatement@@MethodInvocation:builder.addListener(serviceVerificationHandler) @AT@ 9473 @LENGTH@ 47
---------------INS SimpleName@@Name:builder @TO@ MethodInvocation@@builder.addListener(serviceVerificationHandler) @AT@ 9473 @LENGTH@ 7
---------------INS SimpleName@@MethodName:addListener:[serviceVerificationHandler] @TO@ MethodInvocation@@builder.addListener(serviceVerificationHandler) @AT@ 9481 @LENGTH@ 39
------------------INS SimpleName@@serviceVerificationHandler @TO@ SimpleName@@MethodName:addListener:[serviceVerificationHandler] @AT@ 9493 @LENGTH@ 26


INS MethodDeclaration@@public, String, MethodName:componentParameterJsonSchema, String componentName, Exception,  @TO@ TypeDeclaration@@[@ManagedResource(description="Managed CamelContext"), public]ManagedCamelContext, ManagedPerformanceCounter[TimerListener, ManagedCamelContextMBean] @AT@ 13428 @LENGTH@ 303
---INS Modifier@@public @TO@ MethodDeclaration@@public, String, MethodName:componentParameterJsonSchema, String componentName, Exception,  @AT@ 13428 @LENGTH@ 6
---INS SimpleType@@String @TO@ MethodDeclaration@@public, String, MethodName:componentParameterJsonSchema, String componentName, Exception,  @AT@ 13435 @LENGTH@ 6
---INS SimpleName@@MethodName:componentParameterJsonSchema @TO@ MethodDeclaration@@public, String, MethodName:componentParameterJsonSchema, String componentName, Exception,  @AT@ 13442 @LENGTH@ 28
---INS SingleVariableDeclaration@@String componentName @TO@ MethodDeclaration@@public, String, MethodName:componentParameterJsonSchema, String componentName, Exception,  @AT@ 13471 @LENGTH@ 20
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String componentName @AT@ 13471 @LENGTH@ 6
------INS SimpleName@@componentName @TO@ SingleVariableDeclaration@@String componentName @AT@ 13478 @LENGTH@ 13
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, String, MethodName:componentParameterJsonSchema, String componentName, Exception,  @AT@ 13500 @LENGTH@ 9
---INS VariableDeclarationStatement@@Component component=context.getComponent(componentName); @TO@ MethodDeclaration@@public, String, MethodName:componentParameterJsonSchema, String componentName, Exception,  @AT@ 13520 @LENGTH@ 58
------INS SimpleType@@Component @TO@ VariableDeclarationStatement@@Component component=context.getComponent(componentName); @AT@ 13520 @LENGTH@ 9
------INS VariableDeclarationFragment@@component=context.getComponent(componentName) @TO@ VariableDeclarationStatement@@Component component=context.getComponent(componentName); @AT@ 13530 @LENGTH@ 47
---------INS SimpleName@@component @TO@ VariableDeclarationFragment@@component=context.getComponent(componentName) @AT@ 13530 @LENGTH@ 9
---------INS MethodInvocation@@context.getComponent(componentName) @TO@ VariableDeclarationFragment@@component=context.getComponent(componentName) @AT@ 13542 @LENGTH@ 35
------------INS SimpleName@@Name:context @TO@ MethodInvocation@@context.getComponent(componentName) @AT@ 13542 @LENGTH@ 7
------------INS SimpleName@@MethodName:getComponent:[componentName] @TO@ MethodInvocation@@context.getComponent(componentName) @AT@ 13550 @LENGTH@ 27
---------------INS SimpleName@@componentName @TO@ SimpleName@@MethodName:getComponent:[componentName] @AT@ 13563 @LENGTH@ 13
---INS VariableDeclarationStatement@@ComponentConfiguration configuration=component.createComponentConfiguration(); @TO@ MethodDeclaration@@public, String, MethodName:componentParameterJsonSchema, String componentName, Exception,  @AT@ 13587 @LENGTH@ 80
------INS SimpleType@@ComponentConfiguration @TO@ VariableDeclarationStatement@@ComponentConfiguration configuration=component.createComponentConfiguration(); @AT@ 13587 @LENGTH@ 22
------INS VariableDeclarationFragment@@configuration=component.createComponentConfiguration() @TO@ VariableDeclarationStatement@@ComponentConfiguration configuration=component.createComponentConfiguration(); @AT@ 13610 @LENGTH@ 56
---------INS SimpleName@@configuration @TO@ VariableDeclarationFragment@@configuration=component.createComponentConfiguration() @AT@ 13610 @LENGTH@ 13
---------INS MethodInvocation@@component.createComponentConfiguration() @TO@ VariableDeclarationFragment@@configuration=component.createComponentConfiguration() @AT@ 13626 @LENGTH@ 40
------------INS SimpleName@@Name:component @TO@ MethodInvocation@@component.createComponentConfiguration() @AT@ 13626 @LENGTH@ 9
------------INS SimpleName@@MethodName:createComponentConfiguration:[] @TO@ MethodInvocation@@component.createComponentConfiguration() @AT@ 13636 @LENGTH@ 30
---INS ReturnStatement@@MethodInvocation:configuration.createParameterJsonSchema() @TO@ MethodDeclaration@@public, String, MethodName:componentParameterJsonSchema, String componentName, Exception,  @AT@ 13676 @LENGTH@ 49
------INS MethodInvocation@@configuration.createParameterJsonSchema() @TO@ ReturnStatement@@MethodInvocation:configuration.createParameterJsonSchema() @AT@ 13683 @LENGTH@ 41
---------INS SimpleName@@Name:configuration @TO@ MethodInvocation@@configuration.createParameterJsonSchema() @AT@ 13683 @LENGTH@ 13
---------INS SimpleName@@MethodName:createParameterJsonSchema:[] @TO@ MethodInvocation@@configuration.createParameterJsonSchema() @AT@ 13697 @LENGTH@ 27


UPD ExpressionStatement@@MethodInvocation:doAnswer(new Answer<Object>(){
  public Object answer(  InvocationOnMock invocation) throws Throwable {
    return invocation.getArguments()[0];
  }
}
).when(converter).convertToMongoType(any()) @TO@ MethodInvocation:doAnswer(new Answer<Object>(){
  public Object answer(  InvocationOnMock invocation) throws Throwable {
    return invocation.getArguments()[0];
  }
}
).when(converter).convertToMongoType(any(),Mockito.any(TypeInformation.class)) @AT@ 2784 @LENGTH@ 197
---UPD MethodInvocation@@doAnswer(new Answer<Object>(){
  public Object answer(  InvocationOnMock invocation) throws Throwable {
    return invocation.getArguments()[0];
  }
}
).when(converter).convertToMongoType(any()) @TO@ doAnswer(new Answer<Object>(){
  public Object answer(  InvocationOnMock invocation) throws Throwable {
    return invocation.getArguments()[0];
  }
}
).when(converter).convertToMongoType(any(),Mockito.any(TypeInformation.class)) @AT@ 2784 @LENGTH@ 196
------UPD SimpleName@@MethodName:convertToMongoType:[any()] @TO@ MethodName:convertToMongoType:[any(), Mockito.any(TypeInformation.class)] @AT@ 2955 @LENGTH@ 25
---------INS MethodInvocation@@Mockito.any(TypeInformation.class) @TO@ SimpleName@@MethodName:convertToMongoType:[any()] @AT@ 3035 @LENGTH@ 34
------------INS SimpleName@@Name:Mockito @TO@ MethodInvocation@@Mockito.any(TypeInformation.class) @AT@ 3035 @LENGTH@ 7
------------INS SimpleName@@MethodName:any:[TypeInformation.class] @TO@ MethodInvocation@@Mockito.any(TypeInformation.class) @AT@ 3043 @LENGTH@ 26
---------------INS TypeLiteral@@TypeInformation.class @TO@ SimpleName@@MethodName:any:[TypeInformation.class] @AT@ 3047 @LENGTH@ 21


UPD ExpressionStatement@@MethodInvocation:context.restartRequired() @TO@ MethodInvocation:context.reloadRequired() @AT@ 2878 @LENGTH@ 26
---UPD MethodInvocation@@context.restartRequired() @TO@ context.reloadRequired() @AT@ 2878 @LENGTH@ 25
------UPD SimpleName@@MethodName:restartRequired:[] @TO@ MethodName:reloadRequired:[] @AT@ 2886 @LENGTH@ 17


UPD ExpressionStatement@@MethodInvocation:cleanStartServers(servers,domainModel) @TO@ MethodInvocation:cleanStartServers(servers,domainModel,context) @AT@ 4734 @LENGTH@ 40
---UPD MethodInvocation@@cleanStartServers(servers,domainModel) @TO@ cleanStartServers(servers,domainModel,context) @AT@ 4734 @LENGTH@ 39
------UPD SimpleName@@MethodName:cleanStartServers:[servers, domainModel] @TO@ MethodName:cleanStartServers:[servers, domainModel, context] @AT@ 4734 @LENGTH@ 39
---------INS SimpleName@@context @TO@ SimpleName@@MethodName:cleanStartServers:[servers, domainModel] @AT@ 4842 @LENGTH@ 7


UPD VariableDeclarationStatement@@String val=null; @TO@ ModelNode val=null; @AT@ 28478 @LENGTH@ 18
---UPD SimpleType@@String @TO@ ModelNode @AT@ 28478 @LENGTH@ 6


UPD ExpressionStatement@@MethodInvocation:cleanStartServers(servers,domainModel) @TO@ MethodInvocation:cleanStartServers(servers,domainModel,context) @AT@ 4734 @LENGTH@ 40
---UPD MethodInvocation@@cleanStartServers(servers,domainModel) @TO@ cleanStartServers(servers,domainModel,context) @AT@ 4734 @LENGTH@ 39
------UPD SimpleName@@MethodName:cleanStartServers:[servers, domainModel] @TO@ MethodName:cleanStartServers:[servers, domainModel, context] @AT@ 4734 @LENGTH@ 39
---------INS SimpleName@@context @TO@ SimpleName@@MethodName:cleanStartServers:[servers, domainModel] @AT@ 4842 @LENGTH@ 7


UPD ExpressionStatement@@MethodInvocation:update.set(key,object.get(key)) @TO@ MethodInvocation:update.modifierOps.put(key,object.get(key)) @AT@ 1982 @LENGTH@ 33
---UPD MethodInvocation@@update.set(key,object.get(key)) @TO@ update.modifierOps.put(key,object.get(key)) @AT@ 1982 @LENGTH@ 32
------DEL SimpleName@@Name:update @AT@ 1982 @LENGTH@ 6
------UPD SimpleName@@MethodName:set:[key, object.get(key)] @TO@ MethodName:put:[key, object.get(key)] @AT@ 1989 @LENGTH@ 25
------INS QualifiedName@@Name:update.modifierOps @TO@ MethodInvocation@@update.set(key,object.get(key)) @AT@ 2301 @LENGTH@ 18


UPD Block@@ThenBody:{  for (  AttributeDefinition attribute : attributes) {    handleProperty(attribute,context,model,logContextConfiguration,configuration);    if (Logging.requiresRestart(attribute.getFlags())) {      context.restartRequired();    }  }} @TO@ ThenBody:{  boolean restartRequired=false;  boolean reloadRequired=false;  for (  AttributeDefinition attribute : attributes) {    handleProperty(attribute,context,model,logContextConfiguration,configuration);    restartRequired=restartRequired || Logging.requiresRestart(attribute.getFlags());    reloadRequired=reloadRequired || Logging.requiresReload(attribute.getFlags());  }  if (restartRequired) {    context.restartRequired();  } else   if (reloadRequired) {    context.reloadRequired();  }} @AT@ 5192 @LENGTH@ 349
---UPD EnhancedForStatement@@for (AttributeDefinition attribute : attributes) {  handleProperty(attribute,context,model,logContextConfiguration,configuration);  if (Logging.requiresRestart(attribute.getFlags())) {    context.restartRequired();  }} @TO@ for (AttributeDefinition attribute : attributes) {  handleProperty(attribute,context,model,logContextConfiguration,configuration);  restartRequired=restartRequired || Logging.requiresRestart(attribute.getFlags());  reloadRequired=reloadRequired || Logging.requiresReload(attribute.getFlags());} @AT@ 5210 @LENGTH@ 317
------DEL IfStatement@@if (Logging.requiresRestart(attribute.getFlags())) {  context.restartRequired();} @AT@ 5384 @LENGTH@ 125
------INS ExpressionStatement@@Assignment:restartRequired=restartRequired || Logging.requiresRestart(attribute.getFlags()) @TO@ EnhancedForStatement@@for (AttributeDefinition attribute : attributes) {  handleProperty(attribute,context,model,logContextConfiguration,configuration);  if (Logging.requiresRestart(attribute.getFlags())) {    context.restartRequired();  }} @AT@ 5481 @LENGTH@ 83
---------INS Assignment@@restartRequired=restartRequired || Logging.requiresRestart(attribute.getFlags()) @TO@ ExpressionStatement@@Assignment:restartRequired=restartRequired || Logging.requiresRestart(attribute.getFlags()) @AT@ 5481 @LENGTH@ 82
------------INS SimpleName@@restartRequired @TO@ Assignment@@restartRequired=restartRequired || Logging.requiresRestart(attribute.getFlags()) @AT@ 5481 @LENGTH@ 15
------------INS Operator@@= @TO@ Assignment@@restartRequired=restartRequired || Logging.requiresRestart(attribute.getFlags()) @AT@ 5496 @LENGTH@ 1
------------INS InfixExpression@@restartRequired || Logging.requiresRestart(attribute.getFlags()) @TO@ Assignment@@restartRequired=restartRequired || Logging.requiresRestart(attribute.getFlags()) @AT@ 5499 @LENGTH@ 64
---------------MOV MethodInvocation@@Logging.requiresRestart(attribute.getFlags()) @TO@ InfixExpression@@restartRequired || Logging.requiresRestart(attribute.getFlags()) @AT@ 5388 @LENGTH@ 45
---------------INS SimpleName@@restartRequired @TO@ InfixExpression@@restartRequired || Logging.requiresRestart(attribute.getFlags()) @AT@ 5499 @LENGTH@ 15
---------------INS Operator@@|| @TO@ InfixExpression@@restartRequired || Logging.requiresRestart(attribute.getFlags()) @AT@ 5514 @LENGTH@ 2
------INS ExpressionStatement@@Assignment:reloadRequired=reloadRequired || Logging.requiresReload(attribute.getFlags()) @TO@ EnhancedForStatement@@for (AttributeDefinition attribute : attributes) {  handleProperty(attribute,context,model,logContextConfiguration,configuration);  if (Logging.requiresRestart(attribute.getFlags())) {    context.restartRequired();  }} @AT@ 5585 @LENGTH@ 80
---------INS Assignment@@reloadRequired=reloadRequired || Logging.requiresReload(attribute.getFlags()) @TO@ ExpressionStatement@@Assignment:reloadRequired=reloadRequired || Logging.requiresReload(attribute.getFlags()) @AT@ 5585 @LENGTH@ 79
------------INS SimpleName@@reloadRequired @TO@ Assignment@@reloadRequired=reloadRequired || Logging.requiresReload(attribute.getFlags()) @AT@ 5585 @LENGTH@ 14
------------INS Operator@@= @TO@ Assignment@@reloadRequired=reloadRequired || Logging.requiresReload(attribute.getFlags()) @AT@ 5599 @LENGTH@ 1
------------INS InfixExpression@@reloadRequired || Logging.requiresReload(attribute.getFlags()) @TO@ Assignment@@reloadRequired=reloadRequired || Logging.requiresReload(attribute.getFlags()) @AT@ 5602 @LENGTH@ 62
---------------INS SimpleName@@reloadRequired @TO@ InfixExpression@@reloadRequired || Logging.requiresReload(attribute.getFlags()) @AT@ 5602 @LENGTH@ 14
---------------INS Operator@@|| @TO@ InfixExpression@@reloadRequired || Logging.requiresReload(attribute.getFlags()) @AT@ 5616 @LENGTH@ 2
---------------INS MethodInvocation@@Logging.requiresReload(attribute.getFlags()) @TO@ InfixExpression@@reloadRequired || Logging.requiresReload(attribute.getFlags()) @AT@ 5620 @LENGTH@ 44
------------------INS SimpleName@@Name:Logging @TO@ MethodInvocation@@Logging.requiresReload(attribute.getFlags()) @AT@ 5620 @LENGTH@ 7
------------------INS SimpleName@@MethodName:requiresReload:[attribute.getFlags()] @TO@ MethodInvocation@@Logging.requiresReload(attribute.getFlags()) @AT@ 5628 @LENGTH@ 36
---------------------INS MethodInvocation@@attribute.getFlags() @TO@ SimpleName@@MethodName:requiresReload:[attribute.getFlags()] @AT@ 5643 @LENGTH@ 20
------------------------INS SimpleName@@Name:attribute @TO@ MethodInvocation@@attribute.getFlags() @AT@ 5643 @LENGTH@ 9
------------------------INS SimpleName@@MethodName:getFlags:[] @TO@ MethodInvocation@@attribute.getFlags() @AT@ 5653 @LENGTH@ 10
---INS VariableDeclarationStatement@@boolean restartRequired=false; @TO@ Block@@ThenBody:{  for (  AttributeDefinition attribute : attributes) {    handleProperty(attribute,context,model,logContextConfiguration,configuration);    if (Logging.requiresRestart(attribute.getFlags())) {      context.restartRequired();    }  }} @AT@ 5210 @LENGTH@ 32
------INS PrimitiveType@@boolean @TO@ VariableDeclarationStatement@@boolean restartRequired=false; @AT@ 5210 @LENGTH@ 7
------INS VariableDeclarationFragment@@restartRequired=false @TO@ VariableDeclarationStatement@@boolean restartRequired=false; @AT@ 5218 @LENGTH@ 23
---------INS SimpleName@@restartRequired @TO@ VariableDeclarationFragment@@restartRequired=false @AT@ 5218 @LENGTH@ 15
---------INS BooleanLiteral@@false @TO@ VariableDeclarationFragment@@restartRequired=false @AT@ 5236 @LENGTH@ 5
---INS VariableDeclarationStatement@@boolean reloadRequired=false; @TO@ Block@@ThenBody:{  for (  AttributeDefinition attribute : attributes) {    handleProperty(attribute,context,model,logContextConfiguration,configuration);    if (Logging.requiresRestart(attribute.getFlags())) {      context.restartRequired();    }  }} @AT@ 5259 @LENGTH@ 31
------INS PrimitiveType@@boolean @TO@ VariableDeclarationStatement@@boolean reloadRequired=false; @AT@ 5259 @LENGTH@ 7
------INS VariableDeclarationFragment@@reloadRequired=false @TO@ VariableDeclarationStatement@@boolean reloadRequired=false; @AT@ 5267 @LENGTH@ 22
---------INS SimpleName@@reloadRequired @TO@ VariableDeclarationFragment@@reloadRequired=false @AT@ 5267 @LENGTH@ 14
---------INS BooleanLiteral@@false @TO@ VariableDeclarationFragment@@reloadRequired=false @AT@ 5284 @LENGTH@ 5
---INS IfStatement@@if (restartRequired) {  context.restartRequired();} else if (reloadRequired) {  context.reloadRequired();} @TO@ Block@@ThenBody:{  for (  AttributeDefinition attribute : attributes) {    handleProperty(attribute,context,model,logContextConfiguration,configuration);    if (Logging.requiresRestart(attribute.getFlags())) {      context.restartRequired();    }  }} @AT@ 5700 @LENGTH@ 178
------MOV Block@@ThenBody:{  context.restartRequired();} @TO@ IfStatement@@if (restartRequired) {  context.restartRequired();} else if (reloadRequired) {  context.reloadRequired();} @AT@ 5435 @LENGTH@ 74
------INS SimpleName@@restartRequired @TO@ IfStatement@@if (restartRequired) {  context.restartRequired();} else if (reloadRequired) {  context.reloadRequired();} @AT@ 5704 @LENGTH@ 15
------INS Block@@ElseBody:if (reloadRequired) {  context.reloadRequired();} @TO@ IfStatement@@if (restartRequired) {  context.restartRequired();} else if (reloadRequired) {  context.reloadRequired();} @AT@ 5793 @LENGTH@ 85
---------INS IfStatement@@if (reloadRequired) {  context.reloadRequired();} @TO@ Block@@ElseBody:if (reloadRequired) {  context.reloadRequired();} @AT@ 5793 @LENGTH@ 85
------------INS SimpleName@@reloadRequired @TO@ IfStatement@@if (reloadRequired) {  context.reloadRequired();} @AT@ 5797 @LENGTH@ 14
------------INS Block@@ThenBody:{  context.reloadRequired();} @TO@ IfStatement@@if (reloadRequired) {  context.reloadRequired();} @AT@ 5813 @LENGTH@ 65
---------------INS ExpressionStatement@@MethodInvocation:context.reloadRequired() @TO@ Block@@ThenBody:{  context.reloadRequired();} @AT@ 5835 @LENGTH@ 25
------------------INS MethodInvocation@@context.reloadRequired() @TO@ ExpressionStatement@@MethodInvocation:context.reloadRequired() @AT@ 5835 @LENGTH@ 24
---------------------INS SimpleName@@Name:context @TO@ MethodInvocation@@context.reloadRequired() @AT@ 5835 @LENGTH@ 7
---------------------INS SimpleName@@MethodName:reloadRequired:[] @TO@ MethodInvocation@@context.reloadRequired() @AT@ 5843 @LENGTH@ 16


INS MethodDeclaration@@List<Person>, MethodName:findByCredentials, Credentials credentials,  @TO@ TypeDeclaration@@[public]PersonRepository, [MongoRepository<Person,String>, QueryDslPredicateExecutor<Person>] @AT@ 5495 @LENGTH@ 43
---INS ParameterizedType@@List<Person> @TO@ MethodDeclaration@@List<Person>, MethodName:findByCredentials, Credentials credentials,  @AT@ 5482 @LENGTH@ 12
------INS SimpleType@@List @TO@ ParameterizedType@@List<Person> @AT@ 5482 @LENGTH@ 4
------INS SimpleType@@Person @TO@ ParameterizedType@@List<Person> @AT@ 5487 @LENGTH@ 6
---INS SimpleName@@MethodName:findByCredentials @TO@ MethodDeclaration@@List<Person>, MethodName:findByCredentials, Credentials credentials,  @AT@ 5495 @LENGTH@ 17
---INS SingleVariableDeclaration@@Credentials credentials @TO@ MethodDeclaration@@List<Person>, MethodName:findByCredentials, Credentials credentials,  @AT@ 5513 @LENGTH@ 23
------INS SimpleType@@Credentials @TO@ SingleVariableDeclaration@@Credentials credentials @AT@ 5513 @LENGTH@ 11
------INS SimpleName@@credentials @TO@ SingleVariableDeclaration@@Credentials credentials @AT@ 5525 @LENGTH@ 11


UPD ExpressionStatement@@MethodInvocation:properties.setProperty("fs.default.name",fsUri.trim()) @TO@ MethodInvocation:internalConfig.set("fs.default.name",fsUri.trim()) @AT@ 2383 @LENGTH@ 56
---UPD MethodInvocation@@properties.setProperty("fs.default.name",fsUri.trim()) @TO@ internalConfig.set("fs.default.name",fsUri.trim()) @AT@ 2383 @LENGTH@ 55
------UPD SimpleName@@Name:properties @TO@ Name:internalConfig @AT@ 2383 @LENGTH@ 10
------UPD SimpleName@@MethodName:setProperty:["fs.default.name", fsUri.trim()] @TO@ MethodName:set:["fs.default.name", fsUri.trim()] @AT@ 2394 @LENGTH@ 44


DEL MethodDeclaration@@private, int, MethodName:getRedisVersion,  @AT@ 2698 @LENGTH@ 122
---DEL Modifier@@private @AT@ 2698 @LENGTH@ 7
---DEL PrimitiveType@@int @AT@ 2706 @LENGTH@ 3
---DEL SimpleName@@MethodName:getRedisVersion @AT@ 2710 @LENGTH@ 15
---DEL ReturnStatement@@MethodInvocation:RedisClientBase.parseVersion((String)connection.info().get("redis_version")) @AT@ 2732 @LENGTH@ 85
------DEL MethodInvocation@@RedisClientBase.parseVersion((String)connection.info().get("redis_version")) @AT@ 2739 @LENGTH@ 77
---------DEL SimpleName@@Name:RedisClientBase @AT@ 2739 @LENGTH@ 15
---------DEL SimpleName@@MethodName:parseVersion:[(String)connection.info().get("redis_version")] @AT@ 2755 @LENGTH@ 61
------------DEL CastExpression@@(String)connection.info().get("redis_version") @AT@ 2768 @LENGTH@ 47
---------------DEL SimpleType@@String @AT@ 2769 @LENGTH@ 6
---------------DEL MethodInvocation@@connection.info().get("redis_version") @AT@ 2777 @LENGTH@ 38
------------------DEL MethodInvocation@@MethodName:info:[] @AT@ 2777 @LENGTH@ 17
------------------DEL SimpleName@@Name:connection @AT@ 2777 @LENGTH@ 10
------------------DEL SimpleName@@MethodName:get:["redis_version"] @AT@ 2795 @LENGTH@ 20
---------------------DEL StringLiteral@@"redis_version" @AT@ 2799 @LENGTH@ 15


UPD MethodDeclaration@@public, long, MethodName:getDebugCounter,  @TO@ long, MethodName:getDebugCounter,  @AT@ 3113 @LENGTH@ 30
---DEL Modifier@@public @AT@ 3113 @LENGTH@ 6


INS IfStatement@@if (symbolicName != null) {  symbolicName=Matcher.quoteReplacement(symbolicName);} else {  symbolicName="";} @TO@ MethodDeclaration@@protected, String, MethodName:customResolveManagementName, String pattern, String answer,  @AT@ 2318 @LENGTH@ 152
---INS InfixExpression@@symbolicName != null @TO@ IfStatement@@if (symbolicName != null) {  symbolicName=Matcher.quoteReplacement(symbolicName);} else {  symbolicName="";} @AT@ 2322 @LENGTH@ 20
------INS SimpleName@@symbolicName @TO@ InfixExpression@@symbolicName != null @AT@ 2322 @LENGTH@ 12
------INS Operator@@!= @TO@ InfixExpression@@symbolicName != null @AT@ 2334 @LENGTH@ 2
------INS NullLiteral@@null @TO@ InfixExpression@@symbolicName != null @AT@ 2338 @LENGTH@ 4
---INS Block@@ThenBody:{  symbolicName=Matcher.quoteReplacement(symbolicName);} @TO@ IfStatement@@if (symbolicName != null) {  symbolicName=Matcher.quoteReplacement(symbolicName);} else {  symbolicName="";} @AT@ 2344 @LENGTH@ 78
------INS ExpressionStatement@@Assignment:symbolicName=Matcher.quoteReplacement(symbolicName) @TO@ Block@@ThenBody:{  symbolicName=Matcher.quoteReplacement(symbolicName);} @AT@ 2358 @LENGTH@ 54
---------INS Assignment@@symbolicName=Matcher.quoteReplacement(symbolicName) @TO@ ExpressionStatement@@Assignment:symbolicName=Matcher.quoteReplacement(symbolicName) @AT@ 2358 @LENGTH@ 53
------------INS SimpleName@@symbolicName @TO@ Assignment@@symbolicName=Matcher.quoteReplacement(symbolicName) @AT@ 2358 @LENGTH@ 12
------------INS Operator@@= @TO@ Assignment@@symbolicName=Matcher.quoteReplacement(symbolicName) @AT@ 2370 @LENGTH@ 1
------------INS MethodInvocation@@Matcher.quoteReplacement(symbolicName) @TO@ Assignment@@symbolicName=Matcher.quoteReplacement(symbolicName) @AT@ 2373 @LENGTH@ 38
---------------INS SimpleName@@Name:Matcher @TO@ MethodInvocation@@Matcher.quoteReplacement(symbolicName) @AT@ 2373 @LENGTH@ 7
---------------INS SimpleName@@MethodName:quoteReplacement:[symbolicName] @TO@ MethodInvocation@@Matcher.quoteReplacement(symbolicName) @AT@ 2381 @LENGTH@ 30
------------------INS SimpleName@@symbolicName @TO@ SimpleName@@MethodName:quoteReplacement:[symbolicName] @AT@ 2398 @LENGTH@ 12
---INS Block@@ElseBody:{  symbolicName="";} @TO@ IfStatement@@if (symbolicName != null) {  symbolicName=Matcher.quoteReplacement(symbolicName);} else {  symbolicName="";} @AT@ 2428 @LENGTH@ 42
------INS ExpressionStatement@@Assignment:symbolicName="" @TO@ Block@@ElseBody:{  symbolicName="";} @AT@ 2442 @LENGTH@ 18
---------INS Assignment@@symbolicName="" @TO@ ExpressionStatement@@Assignment:symbolicName="" @AT@ 2442 @LENGTH@ 17
------------INS SimpleName@@symbolicName @TO@ Assignment@@symbolicName="" @AT@ 2442 @LENGTH@ 12
------------INS Operator@@= @TO@ Assignment@@symbolicName="" @AT@ 2454 @LENGTH@ 1
------------INS StringLiteral@@"" @TO@ Assignment@@symbolicName="" @AT@ 2457 @LENGTH@ 2


UPD FieldDeclaration@@private, static, final, String, [TEST="test"] @TO@ private, static, final, String, [TEST="mgmt-access-test"] @AT@ 4154 @LENGTH@ 42
---UPD VariableDeclarationFragment@@TEST="test" @TO@ TEST="mgmt-access-test" @AT@ 4182 @LENGTH@ 13
------UPD StringLiteral@@"test" @TO@ "mgmt-access-test" @AT@ 4189 @LENGTH@ 6


UPD ExpressionStatement@@MethodInvocation:Preconditions.checkArgument(ZKPaths.getPathAndNode(fullPath).getPath().equals(path),"Node is not part of this cache: " + fullPath) @TO@ MethodInvocation:Preconditions.checkArgument(ZKPaths.getPathAndNode(fullPath).getPath().startsWith(path),"Node is not part of this cache: " + fullPath) @AT@ 14145 @LENGTH@ 132
---UPD MethodInvocation@@Preconditions.checkArgument(ZKPaths.getPathAndNode(fullPath).getPath().equals(path),"Node is not part of this cache: " + fullPath) @TO@ Preconditions.checkArgument(ZKPaths.getPathAndNode(fullPath).getPath().startsWith(path),"Node is not part of this cache: " + fullPath) @AT@ 14145 @LENGTH@ 131
------UPD SimpleName@@MethodName:checkArgument:[ZKPaths.getPathAndNode(fullPath).getPath().equals(path), "Node is not part of this cache: " + fullPath] @TO@ MethodName:checkArgument:[ZKPaths.getPathAndNode(fullPath).getPath().startsWith(path), "Node is not part of this cache: " + fullPath] @AT@ 14159 @LENGTH@ 117
---------UPD MethodInvocation@@ZKPaths.getPathAndNode(fullPath).getPath().equals(path) @TO@ ZKPaths.getPathAndNode(fullPath).getPath().startsWith(path) @AT@ 14173 @LENGTH@ 55
------------UPD SimpleName@@MethodName:equals:[path] @TO@ MethodName:startsWith:[path] @AT@ 14216 @LENGTH@ 12


INS IfStatement@@if (null == acceptType) {  acceptType=config.getDefaultMediaType().toString();} @TO@ MethodDeclaration@@protected, HandlerMethod, MethodName:lookupHandlerMethod, String lookupPath, HttpServletRequest origRequest, Exception,  @AT@ 2305 @LENGTH@ 90
---INS InfixExpression@@null == acceptType @TO@ IfStatement@@if (null == acceptType) {  acceptType=config.getDefaultMediaType().toString();} @AT@ 2308 @LENGTH@ 18
------INS NullLiteral@@null @TO@ InfixExpression@@null == acceptType @AT@ 2308 @LENGTH@ 4
------INS Operator@@== @TO@ InfixExpression@@null == acceptType @AT@ 2312 @LENGTH@ 2
------INS SimpleName@@acceptType @TO@ InfixExpression@@null == acceptType @AT@ 2316 @LENGTH@ 10
---INS Block@@ThenBody:{  acceptType=config.getDefaultMediaType().toString();} @TO@ IfStatement@@if (null == acceptType) {  acceptType=config.getDefaultMediaType().toString();} @AT@ 2328 @LENGTH@ 67
------INS ExpressionStatement@@Assignment:acceptType=config.getDefaultMediaType().toString() @TO@ Block@@ThenBody:{  acceptType=config.getDefaultMediaType().toString();} @AT@ 2336 @LENGTH@ 53
---------INS Assignment@@acceptType=config.getDefaultMediaType().toString() @TO@ ExpressionStatement@@Assignment:acceptType=config.getDefaultMediaType().toString() @AT@ 2336 @LENGTH@ 52
------------INS SimpleName@@acceptType @TO@ Assignment@@acceptType=config.getDefaultMediaType().toString() @AT@ 2336 @LENGTH@ 10
------------INS Operator@@= @TO@ Assignment@@acceptType=config.getDefaultMediaType().toString() @AT@ 2346 @LENGTH@ 1
------------INS MethodInvocation@@config.getDefaultMediaType().toString() @TO@ Assignment@@acceptType=config.getDefaultMediaType().toString() @AT@ 2349 @LENGTH@ 39
---------------INS MethodInvocation@@MethodName:getDefaultMediaType:[] @TO@ MethodInvocation@@config.getDefaultMediaType().toString() @AT@ 2349 @LENGTH@ 28
---------------INS SimpleName@@Name:config @TO@ MethodInvocation@@config.getDefaultMediaType().toString() @AT@ 2349 @LENGTH@ 6
---------------INS SimpleName@@MethodName:toString:[] @TO@ MethodInvocation@@config.getDefaultMediaType().toString() @AT@ 2378 @LENGTH@ 10


UPD ThrowStatement@@MethodInvocation:MESSAGES.failToLoadComponentClass(ejbComponentDescription.getComponentClassName()) @TO@ MethodInvocation:MESSAGES.failToLoadComponentClass(e,ejbComponentDescription.getComponentClassName()) @AT@ 7745 @LENGTH@ 89
---UPD MethodInvocation@@MESSAGES.failToLoadComponentClass(ejbComponentDescription.getComponentClassName()) @TO@ MESSAGES.failToLoadComponentClass(e,ejbComponentDescription.getComponentClassName()) @AT@ 7751 @LENGTH@ 82
------UPD SimpleName@@MethodName:failToLoadComponentClass:[ejbComponentDescription.getComponentClassName()] @TO@ MethodName:failToLoadComponentClass:[e, ejbComponentDescription.getComponentClassName()] @AT@ 7760 @LENGTH@ 73
---------INS SimpleName@@e @TO@ SimpleName@@MethodName:failToLoadComponentClass:[ejbComponentDescription.getComponentClassName()] @AT@ 7785 @LENGTH@ 1


INS MethodDeclaration@@IllegalStateException, MethodName:noContextToDelegateTo, int operationId,  @TO@ TypeDeclaration@@[@MessageBundle(projectCode="JBAS"), public]ControllerMessages,  @AT@ 110388 @LENGTH@ 39
---INS SimpleType@@IllegalStateException @TO@ MethodDeclaration@@IllegalStateException, MethodName:noContextToDelegateTo, int operationId,  @AT@ 110366 @LENGTH@ 21
---INS SimpleName@@MethodName:noContextToDelegateTo @TO@ MethodDeclaration@@IllegalStateException, MethodName:noContextToDelegateTo, int operationId,  @AT@ 110388 @LENGTH@ 21
---INS SingleVariableDeclaration@@int operationId @TO@ MethodDeclaration@@IllegalStateException, MethodName:noContextToDelegateTo, int operationId,  @AT@ 110410 @LENGTH@ 15
------INS PrimitiveType@@int @TO@ SingleVariableDeclaration@@int operationId @AT@ 110410 @LENGTH@ 3
------INS SimpleName@@operationId @TO@ SingleVariableDeclaration@@int operationId @AT@ 110414 @LENGTH@ 11


UPD IfStatement@@if (prop.property.isCollectionLike()) {  PersistentEntity entity=repositories.getPersistentEntity(prop.propertyType);  for (  Object obj : ((Iterable)prop.propertyValue)) {    BeanWrapper propValWrapper=BeanWrapper.create(obj,conversionService);    String sId=propValWrapper.getProperty(prop.entity.getIdProperty()).toString();    if (propertyId.equals(sId)) {      PersistentEntityResource per=PersistentEntityResource.wrap(entity,obj,repoRequest.getBaseUri());      Link selfLink=repoRequest.buildEntitySelfLink(obj,conversionService);      per.add(selfLink);      headers.set("Content-Location",selfLink.getHref());      return per;    }  }} else if (prop.property.isMap()) {  PersistentEntity entity=repositories.getPersistentEntity(prop.propertyType);  for (  Map.Entry<Object,Object> entry : ((Map<Object,Object>)prop.propertyValue).entrySet()) {    BeanWrapper propValWrapper=BeanWrapper.create(entry.getValue(),conversionService);    String sId=propValWrapper.getProperty(prop.entity.getIdProperty()).toString();    if (propertyId.equals(sId)) {      PersistentEntityResource per=PersistentEntityResource.wrap(entity,entry.getValue(),repoRequest.getBaseUri());      Link selfLink=repoRequest.buildEntitySelfLink(entry.getValue(),conversionService);      per.add(selfLink);      headers.set("Content-Location",selfLink.getHref());      return per;    }  }} else {  return new Resource<Object>(prop.propertyValue);} @TO@ if (prop.property.isCollectionLike()) {  PersistentEntity entity=repositories.getPersistentEntity(prop.propertyType);  for (  Object obj : ((Iterable)prop.propertyValue)) {    BeanWrapper propValWrapper=BeanWrapper.create(obj,conversionService);    String sId=propValWrapper.getProperty(prop.entity.getIdProperty()).toString();    if (propertyId.equals(sId)) {      PersistentEntityResource per=PersistentEntityResource.wrap(entity,obj,repoRequest.getBaseUri());      Link selfLink=entityLinks.linkForSingleResource(entity.getType(),sId).withSelfRel();      per.add(selfLink);      headers.set("Content-Location",selfLink.getHref());      return per;    }  }} else if (prop.property.isMap()) {  PersistentEntity entity=repositories.getPersistentEntity(prop.propertyType);  for (  Map.Entry<Object,Object> entry : ((Map<Object,Object>)prop.propertyValue).entrySet()) {    BeanWrapper propValWrapper=BeanWrapper.create(entry.getValue(),conversionService);    String sId=propValWrapper.getProperty(prop.entity.getIdProperty()).toString();    if (propertyId.equals(sId)) {      PersistentEntityResource per=PersistentEntityResource.wrap(entity,entry.getValue(),repoRequest.getBaseUri());      Link selfLink=entityLinks.linkForSingleResource(entity.getType(),sId).withSelfRel();      per.add(selfLink);      headers.set("Content-Location",selfLink.getHref());      return per;    }  }} else {  return new Resource<Object>(prop.propertyValue);} @AT@ 6714 @LENGTH@ 1666
---UPD Block@@ThenBody:{  PersistentEntity entity=repositories.getPersistentEntity(prop.propertyType);  for (  Object obj : ((Iterable)prop.propertyValue)) {    BeanWrapper propValWrapper=BeanWrapper.create(obj,conversionService);    String sId=propValWrapper.getProperty(prop.entity.getIdProperty()).toString();    if (propertyId.equals(sId)) {      PersistentEntityResource per=PersistentEntityResource.wrap(entity,obj,repoRequest.getBaseUri());      Link selfLink=repoRequest.buildEntitySelfLink(obj,conversionService);      per.add(selfLink);      headers.set("Content-Location",selfLink.getHref());      return per;    }  }} @TO@ ThenBody:{  PersistentEntity entity=repositories.getPersistentEntity(prop.propertyType);  for (  Object obj : ((Iterable)prop.propertyValue)) {    BeanWrapper propValWrapper=BeanWrapper.create(obj,conversionService);    String sId=propValWrapper.getProperty(prop.entity.getIdProperty()).toString();    if (propertyId.equals(sId)) {      PersistentEntityResource per=PersistentEntityResource.wrap(entity,obj,repoRequest.getBaseUri());      Link selfLink=entityLinks.linkForSingleResource(entity.getType(),sId).withSelfRel();      per.add(selfLink);      headers.set("Content-Location",selfLink.getHref());      return per;    }  }} @AT@ 6751 @LENGTH@ 656
------UPD EnhancedForStatement@@for (Object obj : ((Iterable)prop.propertyValue)) {  BeanWrapper propValWrapper=BeanWrapper.create(obj,conversionService);  String sId=propValWrapper.getProperty(prop.entity.getIdProperty()).toString();  if (propertyId.equals(sId)) {    PersistentEntityResource per=PersistentEntityResource.wrap(entity,obj,repoRequest.getBaseUri());    Link selfLink=repoRequest.buildEntitySelfLink(obj,conversionService);    per.add(selfLink);    headers.set("Content-Location",selfLink.getHref());    return per;  }} @TO@ for (Object obj : ((Iterable)prop.propertyValue)) {  BeanWrapper propValWrapper=BeanWrapper.create(obj,conversionService);  String sId=propValWrapper.getProperty(prop.entity.getIdProperty()).toString();  if (propertyId.equals(sId)) {    PersistentEntityResource per=PersistentEntityResource.wrap(entity,obj,repoRequest.getBaseUri());    Link selfLink=entityLinks.linkForSingleResource(entity.getType(),sId).withSelfRel();    per.add(selfLink);    headers.set("Content-Location",selfLink.getHref());    return per;  }} @AT@ 6842 @LENGTH@ 559
---------UPD IfStatement@@if (propertyId.equals(sId)) {  PersistentEntityResource per=PersistentEntityResource.wrap(entity,obj,repoRequest.getBaseUri());  Link selfLink=repoRequest.buildEntitySelfLink(obj,conversionService);  per.add(selfLink);  headers.set("Content-Location",selfLink.getHref());  return per;} @TO@ if (propertyId.equals(sId)) {  PersistentEntityResource per=PersistentEntityResource.wrap(entity,obj,repoRequest.getBaseUri());  Link selfLink=entityLinks.linkForSingleResource(entity.getType(),sId).withSelfRel();  per.add(selfLink);  headers.set("Content-Location",selfLink.getHref());  return per;} @AT@ 7065 @LENGTH@ 329
------------UPD Block@@ThenBody:{  PersistentEntityResource per=PersistentEntityResource.wrap(entity,obj,repoRequest.getBaseUri());  Link selfLink=repoRequest.buildEntitySelfLink(obj,conversionService);  per.add(selfLink);  headers.set("Content-Location",selfLink.getHref());  return per;} @TO@ ThenBody:{  PersistentEntityResource per=PersistentEntityResource.wrap(entity,obj,repoRequest.getBaseUri());  Link selfLink=entityLinks.linkForSingleResource(entity.getType(),sId).withSelfRel();  per.add(selfLink);  headers.set("Content-Location",selfLink.getHref());  return per;} @AT@ 7092 @LENGTH@ 302
---------------UPD VariableDeclarationStatement@@Link selfLink=repoRequest.buildEntitySelfLink(obj,conversionService); @TO@ Link selfLink=entityLinks.linkForSingleResource(entity.getType(),sId).withSelfRel(); @AT@ 7209 @LENGTH@ 72
------------------UPD VariableDeclarationFragment@@selfLink=repoRequest.buildEntitySelfLink(obj,conversionService) @TO@ selfLink=entityLinks.linkForSingleResource(entity.getType(),sId).withSelfRel() @AT@ 7214 @LENGTH@ 66
---------------------UPD MethodInvocation@@repoRequest.buildEntitySelfLink(obj,conversionService) @TO@ entityLinks.linkForSingleResource(entity.getType(),sId).withSelfRel() @AT@ 7225 @LENGTH@ 55
------------------------UPD SimpleName@@Name:repoRequest @TO@ Name:entity @AT@ 7225 @LENGTH@ 11
------------------------DEL SimpleName@@MethodName:buildEntitySelfLink:[obj, conversionService] @AT@ 7237 @LENGTH@ 43
---------------------------DEL SimpleName@@obj @AT@ 7257 @LENGTH@ 3
---------------------------DEL SimpleName@@conversionService @AT@ 7262 @LENGTH@ 17
------------------------INS MethodInvocation@@MethodName:linkForSingleResource:[entity.getType(), sId] @TO@ MethodInvocation@@repoRequest.buildEntitySelfLink(obj,conversionService) @AT@ 7878 @LENGTH@ 56
---------------------------INS MethodInvocation@@entity.getType() @TO@ MethodInvocation@@MethodName:linkForSingleResource:[entity.getType(), sId] @AT@ 7912 @LENGTH@ 16
------------------------------MOV SimpleName@@Name:repoRequest @TO@ MethodInvocation@@entity.getType() @AT@ 7225 @LENGTH@ 11
------------------------------INS SimpleName@@MethodName:getType:[] @TO@ MethodInvocation@@entity.getType() @AT@ 7919 @LENGTH@ 9
---------------------------INS SimpleName@@sId @TO@ MethodInvocation@@MethodName:linkForSingleResource:[entity.getType(), sId] @AT@ 7930 @LENGTH@ 3
------------------------INS SimpleName@@Name:entityLinks @TO@ MethodInvocation@@repoRequest.buildEntitySelfLink(obj,conversionService) @AT@ 7878 @LENGTH@ 11
------------------------INS SimpleName@@MethodName:withSelfRel:[] @TO@ MethodInvocation@@repoRequest.buildEntitySelfLink(obj,conversionService) @AT@ 7935 @LENGTH@ 13
---------------MOV ExpressionStatement@@MethodInvocation:per.add(selfLink) @TO@ Block@@ThenBody:{  PersistentEntityResource per=PersistentEntityResource.wrap(entity,obj,repoRequest.getBaseUri());  Link selfLink=repoRequest.buildEntitySelfLink(obj,conversionService);  per.add(selfLink);  headers.set("Content-Location",selfLink.getHref());  return per;} @AT@ 8195 @LENGTH@ 18
---------------MOV ExpressionStatement@@MethodInvocation:headers.set("Content-Location",selfLink.getHref()) @TO@ Block@@ThenBody:{  PersistentEntityResource per=PersistentEntityResource.wrap(entity,obj,repoRequest.getBaseUri());  Link selfLink=repoRequest.buildEntitySelfLink(obj,conversionService);  per.add(selfLink);  headers.set("Content-Location",selfLink.getHref());  return per;} @AT@ 8221 @LENGTH@ 52
------------MOV MethodInvocation@@propertyId.equals(sId) @TO@ IfStatement@@if (propertyId.equals(sId)) {  PersistentEntityResource per=PersistentEntityResource.wrap(entity,obj,repoRequest.getBaseUri());  Link selfLink=repoRequest.buildEntitySelfLink(obj,conversionService);  per.add(selfLink);  headers.set("Content-Location",selfLink.getHref());  return per;} @AT@ 7812 @LENGTH@ 22
---UPD Block@@ElseBody:if (prop.property.isMap()) {  PersistentEntity entity=repositories.getPersistentEntity(prop.propertyType);  for (  Map.Entry<Object,Object> entry : ((Map<Object,Object>)prop.propertyValue).entrySet()) {    BeanWrapper propValWrapper=BeanWrapper.create(entry.getValue(),conversionService);    String sId=propValWrapper.getProperty(prop.entity.getIdProperty()).toString();    if (propertyId.equals(sId)) {      PersistentEntityResource per=PersistentEntityResource.wrap(entity,entry.getValue(),repoRequest.getBaseUri());      Link selfLink=repoRequest.buildEntitySelfLink(entry.getValue(),conversionService);      per.add(selfLink);      headers.set("Content-Location",selfLink.getHref());      return per;    }  }} else {  return new Resource<Object>(prop.propertyValue);} @TO@ ElseBody:if (prop.property.isMap()) {  PersistentEntity entity=repositories.getPersistentEntity(prop.propertyType);  for (  Map.Entry<Object,Object> entry : ((Map<Object,Object>)prop.propertyValue).entrySet()) {    BeanWrapper propValWrapper=BeanWrapper.create(entry.getValue(),conversionService);    String sId=propValWrapper.getProperty(prop.entity.getIdProperty()).toString();    if (propertyId.equals(sId)) {      PersistentEntityResource per=PersistentEntityResource.wrap(entity,entry.getValue(),repoRequest.getBaseUri());      Link selfLink=entityLinks.linkForSingleResource(entity.getType(),sId).withSelfRel();      per.add(selfLink);      headers.set("Content-Location",selfLink.getHref());      return per;    }  }} else {  return new Resource<Object>(prop.propertyValue);} @AT@ 7413 @LENGTH@ 967
------UPD IfStatement@@if (prop.property.isMap()) {  PersistentEntity entity=repositories.getPersistentEntity(prop.propertyType);  for (  Map.Entry<Object,Object> entry : ((Map<Object,Object>)prop.propertyValue).entrySet()) {    BeanWrapper propValWrapper=BeanWrapper.create(entry.getValue(),conversionService);    String sId=propValWrapper.getProperty(prop.entity.getIdProperty()).toString();    if (propertyId.equals(sId)) {      PersistentEntityResource per=PersistentEntityResource.wrap(entity,entry.getValue(),repoRequest.getBaseUri());      Link selfLink=repoRequest.buildEntitySelfLink(entry.getValue(),conversionService);      per.add(selfLink);      headers.set("Content-Location",selfLink.getHref());      return per;    }  }} else {  return new Resource<Object>(prop.propertyValue);} @TO@ if (prop.property.isMap()) {  PersistentEntity entity=repositories.getPersistentEntity(prop.propertyType);  for (  Map.Entry<Object,Object> entry : ((Map<Object,Object>)prop.propertyValue).entrySet()) {    BeanWrapper propValWrapper=BeanWrapper.create(entry.getValue(),conversionService);    String sId=propValWrapper.getProperty(prop.entity.getIdProperty()).toString();    if (propertyId.equals(sId)) {      PersistentEntityResource per=PersistentEntityResource.wrap(entity,entry.getValue(),repoRequest.getBaseUri());      Link selfLink=entityLinks.linkForSingleResource(entity.getType(),sId).withSelfRel();      per.add(selfLink);      headers.set("Content-Location",selfLink.getHref());      return per;    }  }} else {  return new Resource<Object>(prop.propertyValue);} @AT@ 7413 @LENGTH@ 967
---------UPD Block@@ThenBody:{  PersistentEntity entity=repositories.getPersistentEntity(prop.propertyType);  for (  Map.Entry<Object,Object> entry : ((Map<Object,Object>)prop.propertyValue).entrySet()) {    BeanWrapper propValWrapper=BeanWrapper.create(entry.getValue(),conversionService);    String sId=propValWrapper.getProperty(prop.entity.getIdProperty()).toString();    if (propertyId.equals(sId)) {      PersistentEntityResource per=PersistentEntityResource.wrap(entity,entry.getValue(),repoRequest.getBaseUri());      Link selfLink=repoRequest.buildEntitySelfLink(entry.getValue(),conversionService);      per.add(selfLink);      headers.set("Content-Location",selfLink.getHref());      return per;    }  }} @TO@ ThenBody:{  PersistentEntity entity=repositories.getPersistentEntity(prop.propertyType);  for (  Map.Entry<Object,Object> entry : ((Map<Object,Object>)prop.propertyValue).entrySet()) {    BeanWrapper propValWrapper=BeanWrapper.create(entry.getValue(),conversionService);    String sId=propValWrapper.getProperty(prop.entity.getIdProperty()).toString();    if (propertyId.equals(sId)) {      PersistentEntityResource per=PersistentEntityResource.wrap(entity,entry.getValue(),repoRequest.getBaseUri());      Link selfLink=entityLinks.linkForSingleResource(entity.getType(),sId).withSelfRel();      per.add(selfLink);      headers.set("Content-Location",selfLink.getHref());      return per;    }  }} @AT@ 7439 @LENGTH@ 874
------------UPD EnhancedForStatement@@for (Map.Entry<Object,Object> entry : ((Map<Object,Object>)prop.propertyValue).entrySet()) {  BeanWrapper propValWrapper=BeanWrapper.create(entry.getValue(),conversionService);  String sId=propValWrapper.getProperty(prop.entity.getIdProperty()).toString();  if (propertyId.equals(sId)) {    PersistentEntityResource per=PersistentEntityResource.wrap(entity,entry.getValue(),repoRequest.getBaseUri());    Link selfLink=repoRequest.buildEntitySelfLink(entry.getValue(),conversionService);    per.add(selfLink);    headers.set("Content-Location",selfLink.getHref());    return per;  }} @TO@ for (Map.Entry<Object,Object> entry : ((Map<Object,Object>)prop.propertyValue).entrySet()) {  BeanWrapper propValWrapper=BeanWrapper.create(entry.getValue(),conversionService);  String sId=propValWrapper.getProperty(prop.entity.getIdProperty()).toString();  if (propertyId.equals(sId)) {    PersistentEntityResource per=PersistentEntityResource.wrap(entity,entry.getValue(),repoRequest.getBaseUri());    Link selfLink=entityLinks.linkForSingleResource(entity.getType(),sId).withSelfRel();    per.add(selfLink);    headers.set("Content-Location",selfLink.getHref());    return per;  }} @AT@ 7530 @LENGTH@ 777
---------------UPD IfStatement@@if (propertyId.equals(sId)) {  PersistentEntityResource per=PersistentEntityResource.wrap(entity,entry.getValue(),repoRequest.getBaseUri());  Link selfLink=repoRequest.buildEntitySelfLink(entry.getValue(),conversionService);  per.add(selfLink);  headers.set("Content-Location",selfLink.getHref());  return per;} @TO@ if (propertyId.equals(sId)) {  PersistentEntityResource per=PersistentEntityResource.wrap(entity,entry.getValue(),repoRequest.getBaseUri());  Link selfLink=entityLinks.linkForSingleResource(entity.getType(),sId).withSelfRel();  per.add(selfLink);  headers.set("Content-Location",selfLink.getHref());  return per;} @AT@ 7809 @LENGTH@ 491
------------------MOV MethodInvocation@@propertyId.equals(sId) @TO@ IfStatement@@if (propertyId.equals(sId)) {  PersistentEntityResource per=PersistentEntityResource.wrap(entity,entry.getValue(),repoRequest.getBaseUri());  Link selfLink=repoRequest.buildEntitySelfLink(entry.getValue(),conversionService);  per.add(selfLink);  headers.set("Content-Location",selfLink.getHref());  return per;} @AT@ 7068 @LENGTH@ 22
------------------UPD Block@@ThenBody:{  PersistentEntityResource per=PersistentEntityResource.wrap(entity,entry.getValue(),repoRequest.getBaseUri());  Link selfLink=repoRequest.buildEntitySelfLink(entry.getValue(),conversionService);  per.add(selfLink);  headers.set("Content-Location",selfLink.getHref());  return per;} @TO@ ThenBody:{  PersistentEntityResource per=PersistentEntityResource.wrap(entity,entry.getValue(),repoRequest.getBaseUri());  Link selfLink=entityLinks.linkForSingleResource(entity.getType(),sId).withSelfRel();  per.add(selfLink);  headers.set("Content-Location",selfLink.getHref());  return per;} @AT@ 7836 @LENGTH@ 464
---------------------MOV ExpressionStatement@@MethodInvocation:per.add(selfLink) @TO@ Block@@ThenBody:{  PersistentEntityResource per=PersistentEntityResource.wrap(entity,entry.getValue(),repoRequest.getBaseUri());  Link selfLink=repoRequest.buildEntitySelfLink(entry.getValue(),conversionService);  per.add(selfLink);  headers.set("Content-Location",selfLink.getHref());  return per;} @AT@ 7289 @LENGTH@ 18
---------------------MOV ExpressionStatement@@MethodInvocation:headers.set("Content-Location",selfLink.getHref()) @TO@ Block@@ThenBody:{  PersistentEntityResource per=PersistentEntityResource.wrap(entity,entry.getValue(),repoRequest.getBaseUri());  Link selfLink=repoRequest.buildEntitySelfLink(entry.getValue(),conversionService);  per.add(selfLink);  headers.set("Content-Location",selfLink.getHref());  return per;} @AT@ 7315 @LENGTH@ 52
---------------------UPD VariableDeclarationStatement@@Link selfLink=repoRequest.buildEntitySelfLink(entry.getValue(),conversionService); @TO@ Link selfLink=entityLinks.linkForSingleResource(entity.getType(),sId).withSelfRel(); @AT@ 8102 @LENGTH@ 85
------------------------UPD VariableDeclarationFragment@@selfLink=repoRequest.buildEntitySelfLink(entry.getValue(),conversionService) @TO@ selfLink=entityLinks.linkForSingleResource(entity.getType(),sId).withSelfRel() @AT@ 8107 @LENGTH@ 79
---------------------------UPD MethodInvocation@@repoRequest.buildEntitySelfLink(entry.getValue(),conversionService) @TO@ entityLinks.linkForSingleResource(entity.getType(),sId).withSelfRel() @AT@ 8118 @LENGTH@ 68
------------------------------UPD SimpleName@@Name:repoRequest @TO@ Name:entityLinks @AT@ 8118 @LENGTH@ 11
------------------------------DEL SimpleName@@MethodName:buildEntitySelfLink:[entry.getValue(), conversionService] @AT@ 8130 @LENGTH@ 56
---------------------------------DEL MethodInvocation@@entry.getValue() @AT@ 8150 @LENGTH@ 16
---------------------------------DEL SimpleName@@conversionService @AT@ 8168 @LENGTH@ 17
------------------------------INS MethodInvocation@@MethodName:linkForSingleResource:[entity.getType(), sId] @TO@ MethodInvocation@@repoRequest.buildEntitySelfLink(entry.getValue(),conversionService) @AT@ 8786 @LENGTH@ 56
---------------------------------INS MethodInvocation@@entity.getType() @TO@ MethodInvocation@@MethodName:linkForSingleResource:[entity.getType(), sId] @AT@ 8820 @LENGTH@ 16
------------------------------------MOV SimpleName@@Name:entry @TO@ MethodInvocation@@entity.getType() @AT@ 8150 @LENGTH@ 5
------------------------------------MOV SimpleName@@Name:entry @TO@ MethodInvocation@@entity.getType() @AT@ 8150 @LENGTH@ 5
------------------------------------MOV SimpleName@@MethodName:getValue:[] @TO@ MethodInvocation@@entity.getType() @AT@ 8156 @LENGTH@ 10
------------------------------------MOV SimpleName@@MethodName:getValue:[] @TO@ MethodInvocation@@entity.getType() @AT@ 8156 @LENGTH@ 10
---------------------------------INS SimpleName@@sId @TO@ MethodInvocation@@MethodName:linkForSingleResource:[entity.getType(), sId] @AT@ 8838 @LENGTH@ 3
------------------------------INS SimpleName@@MethodName:withSelfRel:[] @TO@ MethodInvocation@@repoRequest.buildEntitySelfLink(entry.getValue(),conversionService) @AT@ 8843 @LENGTH@ 13


MOV IfStatement@@if (batch) {  Iterator<?> iterator=exchange.getIn().getBody(Iterator.class);  while (iterator != null && iterator.hasNext()) {    Object value=iterator.next();    Iterator<?> i=getEndpoint().getPrepareStatementStrategy().createPopulateIterator(sql,preparedQuery,expected,exchange,value);    getEndpoint().getPrepareStatementStrategy().populateStatement(ps,i,expected);    ps.addBatch();  }} else {  Iterator<?> i=getEndpoint().getPrepareStatementStrategy().createPopulateIterator(sql,preparedQuery,expected,exchange,exchange.getIn().getBody());  getEndpoint().getPrepareStatementStrategy().populateStatement(ps,i,expected);} @TO@ MethodDeclaration@@public, Map<?,?>, MethodName:doInPreparedStatement, PreparedStatement ps, SQLException,  @AT@ 2607 @LENGTH@ 901


DEL MethodDeclaration@@protected, void, MethodName:removeRuntimeServices, OperationContext context, ModelNode operation, ModelNode model, OperationFailedException,  @AT@ 4255 @LENGTH@ 552
---DEL Modifier@@protected @AT@ 4255 @LENGTH@ 9
---DEL PrimitiveType@@void @AT@ 4265 @LENGTH@ 4
---DEL SimpleName@@MethodName:removeRuntimeServices @AT@ 4270 @LENGTH@ 21
---DEL SingleVariableDeclaration@@OperationContext context @AT@ 4292 @LENGTH@ 24
------DEL SimpleType@@OperationContext @AT@ 4292 @LENGTH@ 16
------DEL SimpleName@@context @AT@ 4309 @LENGTH@ 7
---DEL SingleVariableDeclaration@@ModelNode operation @AT@ 4318 @LENGTH@ 19
------DEL SimpleType@@ModelNode @AT@ 4318 @LENGTH@ 9
------DEL SimpleName@@operation @AT@ 4328 @LENGTH@ 9
---DEL SingleVariableDeclaration@@ModelNode model @AT@ 4339 @LENGTH@ 15
------DEL SimpleType@@ModelNode @AT@ 4339 @LENGTH@ 9
------DEL SimpleName@@model @AT@ 4349 @LENGTH@ 5
---DEL SimpleType@@OperationFailedException @AT@ 4375 @LENGTH@ 24
---DEL VariableDeclarationStatement@@ServiceName protocolDefaultsService=ProtocolDefaultsService.SERVICE_NAME; @AT@ 4457 @LENGTH@ 75
------DEL SimpleType@@ServiceName @AT@ 4457 @LENGTH@ 11
------DEL VariableDeclarationFragment@@protocolDefaultsService=ProtocolDefaultsService.SERVICE_NAME @AT@ 4469 @LENGTH@ 62
---------DEL SimpleName@@protocolDefaultsService @AT@ 4469 @LENGTH@ 23
---------DEL QualifiedName@@ProtocolDefaultsService.SERVICE_NAME @AT@ 4495 @LENGTH@ 36
------------DEL SimpleName@@ProtocolDefaultsService @AT@ 4495 @LENGTH@ 23
------------DEL SimpleName@@SERVICE_NAME @AT@ 4519 @LENGTH@ 12
---DEL ExpressionStatement@@MethodInvocation:context.removeService(protocolDefaultsService) @AT@ 4541 @LENGTH@ 47
------DEL MethodInvocation@@context.removeService(protocolDefaultsService) @AT@ 4541 @LENGTH@ 46
---------DEL SimpleName@@Name:context @AT@ 4541 @LENGTH@ 7
---------DEL SimpleName@@MethodName:removeService:[protocolDefaultsService] @AT@ 4549 @LENGTH@ 38
------------DEL SimpleName@@protocolDefaultsService @AT@ 4563 @LENGTH@ 23
---DEL VariableDeclarationStatement@@ServiceName defaultChannelFactoryService=ChannelFactoryService.getServiceName(null); @AT@ 4654 @LENGTH@ 86
------DEL SimpleType@@ServiceName @AT@ 4654 @LENGTH@ 11
------DEL VariableDeclarationFragment@@defaultChannelFactoryService=ChannelFactoryService.getServiceName(null) @AT@ 4666 @LENGTH@ 73
---------DEL SimpleName@@defaultChannelFactoryService @AT@ 4666 @LENGTH@ 28
---------DEL MethodInvocation@@ChannelFactoryService.getServiceName(null) @AT@ 4697 @LENGTH@ 42
------------DEL SimpleName@@Name:ChannelFactoryService @AT@ 4697 @LENGTH@ 21
------------DEL SimpleName@@MethodName:getServiceName:[null] @AT@ 4719 @LENGTH@ 20
---------------DEL NullLiteral@@null @AT@ 4734 @LENGTH@ 4
---DEL ExpressionStatement@@MethodInvocation:context.removeService(defaultChannelFactoryService) @AT@ 4749 @LENGTH@ 52
------DEL MethodInvocation@@context.removeService(defaultChannelFactoryService) @AT@ 4749 @LENGTH@ 51
---------DEL SimpleName@@Name:context @AT@ 4749 @LENGTH@ 7
---------DEL SimpleName@@MethodName:removeService:[defaultChannelFactoryService] @AT@ 4757 @LENGTH@ 43
------------DEL SimpleName@@defaultChannelFactoryService @AT@ 4771 @LENGTH@ 28


UPD ExpressionStatement@@MethodInvocation:context.addStep(runningServerRemove,new OperationStepHandler(){
  @Override public void execute(  final OperationContext context,  final ModelNode operation) throws OperationFailedException {
    context.removeResource(PathAddress.EMPTY_ADDRESS);
    context.stepCompleted();
  }
}
,OperationContext.Stage.IMMEDIATE) @TO@ MethodInvocation:context.addStep(runningServerRemove,new OperationStepHandler(){
  @Override public void execute(  final OperationContext context,  final ModelNode operation) throws OperationFailedException {
    context.removeResource(PathAddress.EMPTY_ADDRESS);
    context.stepCompleted();
  }
}
,OperationContext.Stage.MODEL,true) @AT@ 3149 @LENGTH@ 380
---UPD MethodInvocation@@context.addStep(runningServerRemove,new OperationStepHandler(){
  @Override public void execute(  final OperationContext context,  final ModelNode operation) throws OperationFailedException {
    context.removeResource(PathAddress.EMPTY_ADDRESS);
    context.stepCompleted();
  }
}
,OperationContext.Stage.IMMEDIATE) @TO@ context.addStep(runningServerRemove,new OperationStepHandler(){
  @Override public void execute(  final OperationContext context,  final ModelNode operation) throws OperationFailedException {
    context.removeResource(PathAddress.EMPTY_ADDRESS);
    context.stepCompleted();
  }
}
,OperationContext.Stage.MODEL,true) @AT@ 3149 @LENGTH@ 379
------UPD SimpleName@@MethodName:addStep:[runningServerRemove, new OperationStepHandler(){
  @Override public void execute(  final OperationContext context,  final ModelNode operation) throws OperationFailedException {
    context.removeResource(PathAddress.EMPTY_ADDRESS);
    context.stepCompleted();
  }
}
, OperationContext.Stage.IMMEDIATE] @TO@ MethodName:addStep:[runningServerRemove, new OperationStepHandler(){
  @Override public void execute(  final OperationContext context,  final ModelNode operation) throws OperationFailedException {
    context.removeResource(PathAddress.EMPTY_ADDRESS);
    context.stepCompleted();
  }
}
, OperationContext.Stage.MODEL, true] @AT@ 3157 @LENGTH@ 371
---------UPD QualifiedName@@OperationContext.Stage.IMMEDIATE @TO@ OperationContext.Stage.MODEL @AT@ 3495 @LENGTH@ 32
------------UPD SimpleName@@IMMEDIATE @TO@ MODEL @AT@ 3518 @LENGTH@ 9
---------INS BooleanLiteral@@true @TO@ SimpleName@@MethodName:addStep:[runningServerRemove, new OperationStepHandler(){
  @Override public void execute(  final OperationContext context,  final ModelNode operation) throws OperationFailedException {
    context.removeResource(PathAddress.EMPTY_ADDRESS);
    context.stepCompleted();
  }
}
, OperationContext.Stage.IMMEDIATE] @AT@ 3525 @LENGTH@ 4


DEL ExpressionStatement@@MethodInvocation:connection.get("testitnow") @AT@ 13144 @LENGTH@ 28
---DEL MethodInvocation@@connection.get("testitnow") @AT@ 13144 @LENGTH@ 27
------DEL SimpleName@@Name:connection @AT@ 13144 @LENGTH@ 10
------DEL SimpleName@@MethodName:get:["testitnow"] @AT@ 13155 @LENGTH@ 16
---------DEL StringLiteral@@"testitnow" @AT@ 13159 @LENGTH@ 11


MOV ExpressionStatement@@MethodInvocation:set.add(bag.poll(1,TimeUnit.SECONDS)) @TO@ MethodDeclaration@@public, void, MethodName:testInitializeContainerWithMultipleTopicsIncludingPattern, Exception,  @AT@ 7252 @LENGTH@ 39


UPD VariableDeclarationStatement@@TypeInformation<?> info=fieldTypes.get(head); @TO@ TypeInformation<?> info=getProperty(head); @AT@ 5150 @LENGTH@ 47
---UPD VariableDeclarationFragment@@info=fieldTypes.get(head) @TO@ info=getProperty(head) @AT@ 5169 @LENGTH@ 27
------UPD MethodInvocation@@fieldTypes.get(head) @TO@ getProperty(head) @AT@ 5176 @LENGTH@ 20
---------DEL SimpleName@@Name:fieldTypes @AT@ 5176 @LENGTH@ 10
---------UPD SimpleName@@MethodName:get:[head] @TO@ MethodName:getProperty:[head] @AT@ 5187 @LENGTH@ 9


UPD ExpressionStatement@@MethodInvocation:subsystems.add(entry.getKey(),entry.getValue().getManagementInterfaceMajorVersion() + "." + entry.getValue().getManagementInterfaceMinorVersion()) @TO@ MethodInvocation:subsystems.add(entry.getKey(),entry.getValue().getManagementInterfaceMajorVersion() + "." + entry.getValue().getManagementInterfaceMicroVersion()) @AT@ 16879 @LENGTH@ 146
---UPD MethodInvocation@@subsystems.add(entry.getKey(),entry.getValue().getManagementInterfaceMajorVersion() + "." + entry.getValue().getManagementInterfaceMinorVersion()) @TO@ subsystems.add(entry.getKey(),entry.getValue().getManagementInterfaceMajorVersion() + "." + entry.getValue().getManagementInterfaceMicroVersion()) @AT@ 16879 @LENGTH@ 145
------UPD SimpleName@@MethodName:add:[entry.getKey(), entry.getValue().getManagementInterfaceMajorVersion() + "." + entry.getValue().getManagementInterfaceMinorVersion()] @TO@ MethodName:add:[entry.getKey(), entry.getValue().getManagementInterfaceMajorVersion() + "." + entry.getValue().getManagementInterfaceMicroVersion()] @AT@ 16890 @LENGTH@ 134
---------UPD InfixExpression@@entry.getValue().getManagementInterfaceMajorVersion() + "." + entry.getValue().getManagementInterfaceMinorVersion() @TO@ entry.getValue().getManagementInterfaceMajorVersion() + "." + entry.getValue().getManagementInterfaceMicroVersion() @AT@ 16910 @LENGTH@ 113
------------UPD MethodInvocation@@entry.getValue().getManagementInterfaceMinorVersion() @TO@ entry.getValue().getManagementInterfaceMicroVersion() @AT@ 16970 @LENGTH@ 53
---------------UPD SimpleName@@MethodName:getManagementInterfaceMinorVersion:[] @TO@ MethodName:getManagementInterfaceMicroVersion:[] @AT@ 16987 @LENGTH@ 36


UPD ReturnStatement@@MethodInvocation:init().read() @TO@ MethodInvocation:init().read(b,off,len) @AT@ 9806 @LENGTH@ 21
---UPD MethodInvocation@@init().read() @TO@ init().read(b,off,len) @AT@ 9813 @LENGTH@ 13
------UPD SimpleName@@MethodName:read:[] @TO@ MethodName:read:[b, off, len] @AT@ 9820 @LENGTH@ 6
---------INS SimpleName@@b @TO@ SimpleName@@MethodName:read:[] @AT@ 9825 @LENGTH@ 1
---------INS SimpleName@@off @TO@ SimpleName@@MethodName:read:[] @AT@ 9828 @LENGTH@ 3
---------INS SimpleName@@len @TO@ SimpleName@@MethodName:read:[] @AT@ 9833 @LENGTH@ 3


UPD MethodDeclaration@@protected, ResourceTransformationContext, MethodName:getContext,  @TO@ protected, TransformationContext, MethodName:getContext,  @AT@ 4334 @LENGTH@ 136
---UPD SimpleType@@ResourceTransformationContext @TO@ TransformationContext @AT@ 4344 @LENGTH@ 29
---UPD ReturnStatement@@CastExpression:(ResourceTransformationContext)super.getContext() @TO@ SuperMethodInvocation:super.getContext() @AT@ 4401 @LENGTH@ 59
------INS SuperMethodInvocation@@super.getContext() @TO@ ReturnStatement@@CastExpression:(ResourceTransformationContext)super.getContext() @AT@ 4400 @LENGTH@ 18
---------MOV SimpleName@@MethodName:getContext:[] @TO@ SuperMethodInvocation@@super.getContext() @AT@ 4447 @LENGTH@ 10
------DEL CastExpression@@(ResourceTransformationContext)super.getContext() @AT@ 4408 @LENGTH@ 51
---------DEL SimpleType@@ResourceTransformationContext @AT@ 4409 @LENGTH@ 29
---------DEL SuperMethodInvocation@@super.getContext() @AT@ 4441 @LENGTH@ 18


UPD FieldDeclaration@@public, static, final, SimpleAttributeDefinition, [DIRECTORY_GROUPING=SimpleAttributeDefinitionBuilder.create(ModelDescriptionConstants.DIRECTORY_GROUPING,ModelType.STRING,true).addFlag(AttributeAccess.Flag.RESTART_ALL_SERVICES).setDefaultValue(DirectoryGrouping.defaultValue().toModelNode()).setValidator(EnumValidator.create(DirectoryGrouping.class,true,false)).build()] @TO@ public, static, final, SimpleAttributeDefinition, [DIRECTORY_GROUPING=SimpleAttributeDefinitionBuilder.create(ModelDescriptionConstants.DIRECTORY_GROUPING,ModelType.STRING,true).addFlag(AttributeAccess.Flag.RESTART_ALL_SERVICES).setDefaultValue(DirectoryGrouping.defaultValue().toModelNode()).setValidator(EnumValidator.create(DirectoryGrouping.class,true,true)).setAllowExpression(true).build()] @AT@ 8203 @LENGTH@ 425
---UPD VariableDeclarationFragment@@DIRECTORY_GROUPING=SimpleAttributeDefinitionBuilder.create(ModelDescriptionConstants.DIRECTORY_GROUPING,ModelType.STRING,true).addFlag(AttributeAccess.Flag.RESTART_ALL_SERVICES).setDefaultValue(DirectoryGrouping.defaultValue().toModelNode()).setValidator(EnumValidator.create(DirectoryGrouping.class,true,false)).build() @TO@ DIRECTORY_GROUPING=SimpleAttributeDefinitionBuilder.create(ModelDescriptionConstants.DIRECTORY_GROUPING,ModelType.STRING,true).addFlag(AttributeAccess.Flag.RESTART_ALL_SERVICES).setDefaultValue(DirectoryGrouping.defaultValue().toModelNode()).setValidator(EnumValidator.create(DirectoryGrouping.class,true,true)).setAllowExpression(true).build() @AT@ 8249 @LENGTH@ 378
------UPD MethodInvocation@@SimpleAttributeDefinitionBuilder.create(ModelDescriptionConstants.DIRECTORY_GROUPING,ModelType.STRING,true).addFlag(AttributeAccess.Flag.RESTART_ALL_SERVICES).setDefaultValue(DirectoryGrouping.defaultValue().toModelNode()).setValidator(EnumValidator.create(DirectoryGrouping.class,true,false)).build() @TO@ SimpleAttributeDefinitionBuilder.create(ModelDescriptionConstants.DIRECTORY_GROUPING,ModelType.STRING,true).addFlag(AttributeAccess.Flag.RESTART_ALL_SERVICES).setDefaultValue(DirectoryGrouping.defaultValue().toModelNode()).setValidator(EnumValidator.create(DirectoryGrouping.class,true,true)).setAllowExpression(true).build() @AT@ 8270 @LENGTH@ 357
---------UPD MethodInvocation@@MethodName:setValidator:[EnumValidator.create(DirectoryGrouping.class,true,false)] @TO@ MethodName:setValidator:[EnumValidator.create(DirectoryGrouping.class,true,true)] @AT@ 8270 @LENGTH@ 336
------------UPD MethodInvocation@@EnumValidator.create(DirectoryGrouping.class,true,false) @TO@ EnumValidator.create(DirectoryGrouping.class,true,true) @AT@ 8547 @LENGTH@ 58
---------------UPD SimpleName@@MethodName:create:[DirectoryGrouping.class, true, false] @TO@ MethodName:create:[DirectoryGrouping.class, true, true] @AT@ 8561 @LENGTH@ 44
------------------UPD BooleanLiteral@@false @TO@ true @AT@ 8599 @LENGTH@ 5
---------INS MethodInvocation@@MethodName:setAllowExpression:[true] @TO@ MethodInvocation@@SimpleAttributeDefinitionBuilder.create(ModelDescriptionConstants.DIRECTORY_GROUPING,ModelType.STRING,true).addFlag(AttributeAccess.Flag.RESTART_ALL_SERVICES).setDefaultValue(DirectoryGrouping.defaultValue().toModelNode()).setValidator(EnumValidator.create(DirectoryGrouping.class,true,false)).build() @AT@ 8270 @LENGTH@ 373
------------INS BooleanLiteral@@true @TO@ MethodInvocation@@MethodName:setAllowExpression:[true] @AT@ 8638 @LENGTH@ 4


INS MethodDeclaration@@public, void, MethodName:testDbSize,  @TO@ TypeDeclaration@@[public]LettuceConnectionPipelineTxIntegrationTests, LettuceConnectionTransactionIntegrationTests @AT@ 773 @LENGTH@ 215
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testDbSize,  @AT@ 773 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testDbSize,  @AT@ 780 @LENGTH@ 4
---INS SimpleName@@MethodName:testDbSize @TO@ MethodDeclaration@@public, void, MethodName:testDbSize,  @AT@ 785 @LENGTH@ 10
---INS ExpressionStatement@@MethodInvocation:connection.set("dbparam","foo") @TO@ MethodDeclaration@@public, void, MethodName:testDbSize,  @AT@ 802 @LENGTH@ 33
------INS MethodInvocation@@connection.set("dbparam","foo") @TO@ ExpressionStatement@@MethodInvocation:connection.set("dbparam","foo") @AT@ 802 @LENGTH@ 32
---------INS SimpleName@@Name:connection @TO@ MethodInvocation@@connection.set("dbparam","foo") @AT@ 802 @LENGTH@ 10
---------INS SimpleName@@MethodName:set:["dbparam", "foo"] @TO@ MethodInvocation@@connection.set("dbparam","foo") @AT@ 813 @LENGTH@ 21
------------INS StringLiteral@@"dbparam" @TO@ SimpleName@@MethodName:set:["dbparam", "foo"] @AT@ 817 @LENGTH@ 9
------------INS StringLiteral@@"foo" @TO@ SimpleName@@MethodName:set:["dbparam", "foo"] @AT@ 828 @LENGTH@ 5
---INS ExpressionStatement@@MethodInvocation:assertNull(connection.dbSize()) @TO@ MethodDeclaration@@public, void, MethodName:testDbSize,  @AT@ 838 @LENGTH@ 32
------INS MethodInvocation@@assertNull(connection.dbSize()) @TO@ ExpressionStatement@@MethodInvocation:assertNull(connection.dbSize()) @AT@ 838 @LENGTH@ 31
---------INS SimpleName@@MethodName:assertNull:[connection.dbSize()] @TO@ MethodInvocation@@assertNull(connection.dbSize()) @AT@ 838 @LENGTH@ 31
------------INS MethodInvocation@@connection.dbSize() @TO@ SimpleName@@MethodName:assertNull:[connection.dbSize()] @AT@ 849 @LENGTH@ 19
---------------INS SimpleName@@Name:connection @TO@ MethodInvocation@@connection.dbSize() @AT@ 849 @LENGTH@ 10
---------------INS SimpleName@@MethodName:dbSize:[] @TO@ MethodInvocation@@connection.dbSize() @AT@ 860 @LENGTH@ 8
---INS VariableDeclarationStatement@@List<Object> results=getResults(); @TO@ MethodDeclaration@@public, void, MethodName:testDbSize,  @AT@ 873 @LENGTH@ 36
------INS ParameterizedType@@List<Object> @TO@ VariableDeclarationStatement@@List<Object> results=getResults(); @AT@ 873 @LENGTH@ 12
---------INS SimpleType@@List @TO@ ParameterizedType@@List<Object> @AT@ 873 @LENGTH@ 4
---------INS SimpleType@@Object @TO@ ParameterizedType@@List<Object> @AT@ 878 @LENGTH@ 6
------INS VariableDeclarationFragment@@results=getResults() @TO@ VariableDeclarationStatement@@List<Object> results=getResults(); @AT@ 886 @LENGTH@ 22
---------INS SimpleName@@results @TO@ VariableDeclarationFragment@@results=getResults() @AT@ 886 @LENGTH@ 7
---------INS MethodInvocation@@MethodName:getResults:[] @TO@ VariableDeclarationFragment@@results=getResults() @AT@ 896 @LENGTH@ 12
---INS ExpressionStatement@@MethodInvocation:assertEquals(1,results.size()) @TO@ MethodDeclaration@@public, void, MethodName:testDbSize,  @AT@ 912 @LENGTH@ 32
------INS MethodInvocation@@assertEquals(1,results.size()) @TO@ ExpressionStatement@@MethodInvocation:assertEquals(1,results.size()) @AT@ 912 @LENGTH@ 31
---------INS SimpleName@@MethodName:assertEquals:[1, results.size()] @TO@ MethodInvocation@@assertEquals(1,results.size()) @AT@ 912 @LENGTH@ 31
------------INS NumberLiteral@@1 @TO@ SimpleName@@MethodName:assertEquals:[1, results.size()] @AT@ 925 @LENGTH@ 1
------------INS MethodInvocation@@results.size() @TO@ SimpleName@@MethodName:assertEquals:[1, results.size()] @AT@ 928 @LENGTH@ 14
---------------INS SimpleName@@Name:results @TO@ MethodInvocation@@results.size() @AT@ 928 @LENGTH@ 7
---------------INS SimpleName@@MethodName:size:[] @TO@ MethodInvocation@@results.size() @AT@ 936 @LENGTH@ 6
---INS ExpressionStatement@@MethodInvocation:assertTrue((Long)results.get(0) > 0) @TO@ MethodDeclaration@@public, void, MethodName:testDbSize,  @AT@ 947 @LENGTH@ 38
------INS MethodInvocation@@assertTrue((Long)results.get(0) > 0) @TO@ ExpressionStatement@@MethodInvocation:assertTrue((Long)results.get(0) > 0) @AT@ 947 @LENGTH@ 37
---------INS SimpleName@@MethodName:assertTrue:[(Long)results.get(0) > 0] @TO@ MethodInvocation@@assertTrue((Long)results.get(0) > 0) @AT@ 947 @LENGTH@ 37
------------INS InfixExpression@@(Long)results.get(0) > 0 @TO@ SimpleName@@MethodName:assertTrue:[(Long)results.get(0) > 0] @AT@ 958 @LENGTH@ 25
---------------INS CastExpression@@(Long)results.get(0) @TO@ InfixExpression@@(Long)results.get(0) > 0 @AT@ 958 @LENGTH@ 21
------------------INS SimpleType@@Long @TO@ CastExpression@@(Long)results.get(0) @AT@ 959 @LENGTH@ 4
------------------INS MethodInvocation@@results.get(0) @TO@ CastExpression@@(Long)results.get(0) @AT@ 965 @LENGTH@ 14
---------------------INS SimpleName@@Name:results @TO@ MethodInvocation@@results.get(0) @AT@ 965 @LENGTH@ 7
---------------------INS SimpleName@@MethodName:get:[0] @TO@ MethodInvocation@@results.get(0) @AT@ 973 @LENGTH@ 6
------------------------INS NumberLiteral@@0 @TO@ SimpleName@@MethodName:get:[0] @AT@ 977 @LENGTH@ 1
---------------INS Operator@@> @TO@ InfixExpression@@(Long)results.get(0) > 0 @AT@ 979 @LENGTH@ 1
---------------INS NumberLiteral@@0 @TO@ InfixExpression@@(Long)results.get(0) > 0 @AT@ 982 @LENGTH@ 1


UPD FieldDeclaration@@protected, JUnit4Mockery, [context=new JUnit4Mockery(){
{
    setImposteriser(ClassImposteriser.INSTANCE);
  }
}
] @TO@ protected, JUnitRuleMockery, [context=new JUnitRuleMockery(){
{
    setImposteriser(ClassImposteriser.INSTANCE);
  }
}
] @AT@ 381 @LENGTH@ 111
---UPD SimpleType@@JUnit4Mockery @TO@ JUnitRuleMockery @AT@ 391 @LENGTH@ 13
---UPD VariableDeclarationFragment@@context=new JUnit4Mockery(){
{
    setImposteriser(ClassImposteriser.INSTANCE);
  }
}
 @TO@ context=new JUnitRuleMockery(){
{
    setImposteriser(ClassImposteriser.INSTANCE);
  }
}
 @AT@ 405 @LENGTH@ 86
------UPD ClassInstanceCreation@@JUnit4Mockery[] @TO@ JUnitRuleMockery[] @AT@ 415 @LENGTH@ 76
---------UPD SimpleType@@JUnit4Mockery @TO@ JUnitRuleMockery @AT@ 419 @LENGTH@ 13


UPD IfStatement@@if (PAUSED.equals(name)) {  context.getResult().set(bridge.isPaused());} else {  throw MESSAGES.unsupportedAttribute(name);} @TO@ if (PAUSED.getName().equals(name)) {  context.getResult().set(bridge.isPaused());} else {  throw MESSAGES.unsupportedAttribute(name);} @AT@ 4457 @LENGTH@ 180
---UPD MethodInvocation@@PAUSED.equals(name) @TO@ PAUSED.getName().equals(name) @AT@ 4461 @LENGTH@ 19
------INS MethodInvocation@@MethodName:getName:[] @TO@ MethodInvocation@@PAUSED.equals(name) @AT@ 4461 @LENGTH@ 16


UPD EnhancedForStatement@@for (RouteStartupOrder order : routeStartupOrder) {  String otherId=order.getRoute().getId();  if (answer.getStartupOrder() == order.getStartupOrder()) {    throw new FailedToStartRouteException(answer.getRoute().getId(),"startupOrder clash. Route " + otherId + " already has startupOrder "+ answer.getStartupOrder()+ " configured which this route have as well. Please correct startupOrder to be unique among all your routes.");  }} @TO@ for (RouteStartupOrder order : routeStartupOrder) {  String otherId=order.getRoute().getId();  if (answer.getRoute().getId().equals(otherId)) {  } else   if (answer.getStartupOrder() == order.getStartupOrder()) {    throw new FailedToStartRouteException(answer.getRoute().getId(),"startupOrder clash. Route " + otherId + " already has startupOrder "+ answer.getStartupOrder()+ " configured which this route have as well. Please correct startupOrder to be unique among all your routes.");  }} @AT@ 82458 @LENGTH@ 512
---INS IfStatement@@if (answer.getRoute().getId().equals(otherId)) {} else if (answer.getStartupOrder() == order.getStartupOrder()) {  throw new FailedToStartRouteException(answer.getRoute().getId(),"startupOrder clash. Route " + otherId + " already has startupOrder "+ answer.getStartupOrder()+ " configured which this route have as well. Please correct startupOrder to be unique among all your routes.");} @TO@ EnhancedForStatement@@for (RouteStartupOrder order : routeStartupOrder) {  String otherId=order.getRoute().getId();  if (answer.getStartupOrder() == order.getStartupOrder()) {    throw new FailedToStartRouteException(answer.getRoute().getId(),"startupOrder clash. Route " + otherId + " already has startupOrder "+ answer.getStartupOrder()+ " configured which this route have as well. Please correct startupOrder to be unique among all your routes.");  }} @AT@ 82577 @LENGTH@ 573
------INS MethodInvocation@@answer.getRoute().getId().equals(otherId) @TO@ IfStatement@@if (answer.getRoute().getId().equals(otherId)) {} else if (answer.getStartupOrder() == order.getStartupOrder()) {  throw new FailedToStartRouteException(answer.getRoute().getId(),"startupOrder clash. Route " + otherId + " already has startupOrder "+ answer.getStartupOrder()+ " configured which this route have as well. Please correct startupOrder to be unique among all your routes.");} @AT@ 82581 @LENGTH@ 41
---------INS MethodInvocation@@MethodName:getId:[] @TO@ MethodInvocation@@answer.getRoute().getId().equals(otherId) @AT@ 82581 @LENGTH@ 25
---------INS MethodInvocation@@MethodName:getRoute:[] @TO@ MethodInvocation@@answer.getRoute().getId().equals(otherId) @AT@ 82581 @LENGTH@ 17
---------INS SimpleName@@Name:answer @TO@ MethodInvocation@@answer.getRoute().getId().equals(otherId) @AT@ 82581 @LENGTH@ 6
---------INS SimpleName@@MethodName:equals:[otherId] @TO@ MethodInvocation@@answer.getRoute().getId().equals(otherId) @AT@ 82607 @LENGTH@ 15
------------INS SimpleName@@otherId @TO@ SimpleName@@MethodName:equals:[otherId] @AT@ 82614 @LENGTH@ 7
------INS Block@@ThenBody:{} @TO@ IfStatement@@if (answer.getRoute().getId().equals(otherId)) {} else if (answer.getStartupOrder() == order.getStartupOrder()) {  throw new FailedToStartRouteException(answer.getRoute().getId(),"startupOrder clash. Route " + otherId + " already has startupOrder "+ answer.getStartupOrder()+ " configured which this route have as well. Please correct startupOrder to be unique among all your routes.");} @AT@ 82624 @LENGTH@ 137
------INS Block@@ElseBody:if (answer.getStartupOrder() == order.getStartupOrder()) {  throw new FailedToStartRouteException(answer.getRoute().getId(),"startupOrder clash. Route " + otherId + " already has startupOrder "+ answer.getStartupOrder()+ " configured which this route have as well. Please correct startupOrder to be unique among all your routes.");} @TO@ IfStatement@@if (answer.getRoute().getId().equals(otherId)) {} else if (answer.getStartupOrder() == order.getStartupOrder()) {  throw new FailedToStartRouteException(answer.getRoute().getId(),"startupOrder clash. Route " + otherId + " already has startupOrder "+ answer.getStartupOrder()+ " configured which this route have as well. Please correct startupOrder to be unique among all your routes.");} @AT@ 82767 @LENGTH@ 383
---------MOV IfStatement@@if (answer.getStartupOrder() == order.getStartupOrder()) {  throw new FailedToStartRouteException(answer.getRoute().getId(),"startupOrder clash. Route " + otherId + " already has startupOrder "+ answer.getStartupOrder()+ " configured which this route have as well. Please correct startupOrder to be unique among all your routes.");} @TO@ Block@@ElseBody:if (answer.getStartupOrder() == order.getStartupOrder()) {  throw new FailedToStartRouteException(answer.getRoute().getId(),"startupOrder clash. Route " + otherId + " already has startupOrder "+ answer.getStartupOrder()+ " configured which this route have as well. Please correct startupOrder to be unique among all your routes.");} @AT@ 82577 @LENGTH@ 383


UPD IfStatement@@if (flags.length == 0) {  this.flags=EnumSet.of(flags[0]);} else {  this.flags=EnumSet.of(flags[0],flags);} @TO@ if (flags.length == 1) {  this.flags=EnumSet.of(flags[0]);} else {  this.flags=EnumSet.of(flags[0],flags);} @AT@ 5063 @LENGTH@ 152
---UPD InfixExpression@@flags.length == 0 @TO@ flags.length == 1 @AT@ 5067 @LENGTH@ 17
------UPD NumberLiteral@@0 @TO@ 1 @AT@ 5083 @LENGTH@ 1


UPD IfStatement@@if (mergedMetaData.getSessionConfig().getSessionTimeoutSet()) {  SessionManager sessionManager=deploymentInfo.getSessionManager();  sessionManager.setDefaultSessionTimeout(mergedMetaData.getSessionConfig().getSessionTimeout());} @TO@ if (mergedMetaData.getSessionConfig() != null && mergedMetaData.getSessionConfig().getSessionTimeoutSet()) {  SessionManager sessionManager=deploymentInfo.getSessionManager();  sessionManager.setDefaultSessionTimeout(mergedMetaData.getSessionConfig().getSessionTimeout());} @AT@ 8908 @LENGTH@ 260
---INS InfixExpression@@mergedMetaData.getSessionConfig() != null && mergedMetaData.getSessionConfig().getSessionTimeoutSet() @TO@ IfStatement@@if (mergedMetaData.getSessionConfig().getSessionTimeoutSet()) {  SessionManager sessionManager=deploymentInfo.getSessionManager();  sessionManager.setDefaultSessionTimeout(mergedMetaData.getSessionConfig().getSessionTimeout());} @AT@ 8854 @LENGTH@ 101
------INS InfixExpression@@mergedMetaData.getSessionConfig() != null @TO@ InfixExpression@@mergedMetaData.getSessionConfig() != null && mergedMetaData.getSessionConfig().getSessionTimeoutSet() @AT@ 8854 @LENGTH@ 41
---------INS MethodInvocation@@mergedMetaData.getSessionConfig() @TO@ InfixExpression@@mergedMetaData.getSessionConfig() != null @AT@ 8854 @LENGTH@ 33
------------INS SimpleName@@Name:mergedMetaData @TO@ MethodInvocation@@mergedMetaData.getSessionConfig() @AT@ 8854 @LENGTH@ 14
------------INS SimpleName@@MethodName:getSessionConfig:[] @TO@ MethodInvocation@@mergedMetaData.getSessionConfig() @AT@ 8869 @LENGTH@ 18
---------INS Operator@@!= @TO@ InfixExpression@@mergedMetaData.getSessionConfig() != null @AT@ 8887 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@mergedMetaData.getSessionConfig() != null @AT@ 8891 @LENGTH@ 4
------INS Operator@@&& @TO@ InfixExpression@@mergedMetaData.getSessionConfig() != null && mergedMetaData.getSessionConfig().getSessionTimeoutSet() @AT@ 8895 @LENGTH@ 2
------INS MethodInvocation@@mergedMetaData.getSessionConfig().getSessionTimeoutSet() @TO@ InfixExpression@@mergedMetaData.getSessionConfig() != null && mergedMetaData.getSessionConfig().getSessionTimeoutSet() @AT@ 8899 @LENGTH@ 56
---------MOV MethodInvocation@@MethodName:getSessionConfig:[] @TO@ MethodInvocation@@mergedMetaData.getSessionConfig().getSessionTimeoutSet() @AT@ 8911 @LENGTH@ 33
---------MOV SimpleName@@Name:mergedMetaData @TO@ MethodInvocation@@mergedMetaData.getSessionConfig().getSessionTimeoutSet() @AT@ 8911 @LENGTH@ 14
---------MOV SimpleName@@MethodName:getSessionTimeoutSet:[] @TO@ MethodInvocation@@mergedMetaData.getSessionConfig().getSessionTimeoutSet() @AT@ 8945 @LENGTH@ 22
---DEL MethodInvocation@@mergedMetaData.getSessionConfig().getSessionTimeoutSet() @AT@ 8911 @LENGTH@ 56


DEL ExpressionStatement@@MethodInvocation:errorHandler(deadLetterChannel("mock:error")) @AT@ 3418 @LENGTH@ 46
---DEL MethodInvocation@@errorHandler(deadLetterChannel("mock:error")) @AT@ 3418 @LENGTH@ 45
------DEL SimpleName@@MethodName:errorHandler:[deadLetterChannel("mock:error")] @AT@ 3418 @LENGTH@ 45
---------DEL MethodInvocation@@deadLetterChannel("mock:error") @AT@ 3431 @LENGTH@ 31
------------DEL SimpleName@@MethodName:deadLetterChannel:["mock:error"] @AT@ 3431 @LENGTH@ 31
---------------DEL StringLiteral@@"mock:error" @AT@ 3449 @LENGTH@ 12


UPD FieldDeclaration@@private, static, final, Pattern, [PATTERN=Pattern.compile("jboss.*\\.xsd$")] @TO@ private, static, final, Pattern, [PATTERN=Pattern.compile("(jboss|wildfly)-.*\\.xsd$")] @AT@ 9944 @LENGTH@ 73
---UPD VariableDeclarationFragment@@PATTERN=Pattern.compile("jboss.*\\.xsd$") @TO@ PATTERN=Pattern.compile("(jboss|wildfly)-.*\\.xsd$") @AT@ 9973 @LENGTH@ 43
------UPD MethodInvocation@@Pattern.compile("jboss.*\\.xsd$") @TO@ Pattern.compile("(jboss|wildfly)-.*\\.xsd$") @AT@ 9983 @LENGTH@ 33
---------UPD SimpleName@@MethodName:compile:["jboss.*\\.xsd$"] @TO@ MethodName:compile:["(jboss|wildfly)-.*\\.xsd$"] @AT@ 9991 @LENGTH@ 25
------------UPD StringLiteral@@"jboss.*\\.xsd$" @TO@ "(jboss|wildfly)-.*\\.xsd$" @AT@ 9999 @LENGTH@ 16


UPD ExpressionStatement@@MethodInvocation:System.out.println(war.toString(true)) @TO@ MethodInvocation:log.info(war.toString(true)) @AT@ 4121 @LENGTH@ 39
---UPD MethodInvocation@@System.out.println(war.toString(true)) @TO@ log.info(war.toString(true)) @AT@ 4121 @LENGTH@ 38
------DEL QualifiedName@@Name:System.out @AT@ 4121 @LENGTH@ 10
------INS SimpleName@@Name:log @TO@ MethodInvocation@@System.out.println(war.toString(true)) @AT@ 4121 @LENGTH@ 3
------UPD SimpleName@@MethodName:println:[war.toString(true)] @TO@ MethodName:info:[war.toString(true)] @AT@ 4132 @LENGTH@ 27


UPD MethodDeclaration@@public, void, MethodName:test, IOException, InterruptedException,  @TO@ public, void, MethodName:test, IOException,  @AT@ 460 @LENGTH@ 684
---DEL SimpleType@@InterruptedException @AT@ 499 @LENGTH@ 20
---UPD TryStatement@@try {  Bootstrap bootstrap=new Bootstrap(null);  JLineShellComponent shell=bootstrap.getJLineShellComponent();  shell.start();  while (shell.getShellStatus().getStatus() != ShellStatus.Status.USER_INPUT) {    Thread.sleep(100);  }  Assert.assertEquals("Number of CommandMarkers is incorrect",4,shell.getSimpleParser().getCommandMarkers().size());  Assert.assertEquals("Number of Converters is incorrect",16,shell.getSimpleParser().getConverters().size());  shell.stop();} catch (RuntimeException t) {  throw t;} finally {  HandlerUtils.flushAllHandlers(Logger.getLogger(""));} @TO@ try {  Bootstrap bootstrap=new Bootstrap(null);  JLineShellComponent shell=bootstrap.getJLineShellComponent();  System.out.println("about to start shell...");  Assert.assertEquals("Number of CommandMarkers is incorrect",4,shell.getSimpleParser().getCommandMarkers().size());  Assert.assertEquals("Number of Converters is incorrect",16,shell.getSimpleParser().getConverters().size());} catch (RuntimeException t) {  throw t;} finally {  HandlerUtils.flushAllHandlers(Logger.getLogger(""));} @AT@ 524 @LENGTH@ 614
------UPD ExpressionStatement@@MethodInvocation:shell.start() @TO@ MethodInvocation:System.out.println("about to start shell...") @AT@ 646 @LENGTH@ 14
---------UPD MethodInvocation@@shell.start() @TO@ System.out.println("about to start shell...") @AT@ 646 @LENGTH@ 13
------------INS QualifiedName@@Name:System.out @TO@ MethodInvocation@@shell.start() @AT@ 478 @LENGTH@ 10
------------DEL SimpleName@@Name:shell @AT@ 646 @LENGTH@ 5
------------UPD SimpleName@@MethodName:start:[] @TO@ MethodName:println:["about to start shell..."] @AT@ 652 @LENGTH@ 7
---------------INS StringLiteral@@"about to start shell..." @TO@ SimpleName@@MethodName:start:[] @AT@ 497 @LENGTH@ 25
------DEL WhileStatement@@while (shell.getShellStatus().getStatus() != ShellStatus.Status.USER_INPUT) {  Thread.sleep(100);} @AT@ 664 @LENGTH@ 105
---------DEL InfixExpression@@shell.getShellStatus().getStatus() != ShellStatus.Status.USER_INPUT @AT@ 671 @LENGTH@ 67
------------DEL MethodInvocation@@shell.getShellStatus().getStatus() @AT@ 671 @LENGTH@ 34
---------------DEL MethodInvocation@@MethodName:getShellStatus:[] @AT@ 671 @LENGTH@ 22
---------------DEL SimpleName@@Name:shell @AT@ 671 @LENGTH@ 5
---------------DEL SimpleName@@MethodName:getStatus:[] @AT@ 694 @LENGTH@ 11
------------DEL Operator@@!= @AT@ 705 @LENGTH@ 2
------------DEL QualifiedName@@ShellStatus.Status.USER_INPUT @AT@ 709 @LENGTH@ 29
---------------DEL QualifiedName@@ShellStatus.Status @AT@ 709 @LENGTH@ 18
------------------DEL SimpleName@@ShellStatus @AT@ 709 @LENGTH@ 11
------------------DEL SimpleName@@Status @AT@ 721 @LENGTH@ 6
---------------DEL SimpleName@@USER_INPUT @AT@ 728 @LENGTH@ 10
---------DEL Block@@WhileBody:{  Thread.sleep(100);} @AT@ 740 @LENGTH@ 29
------------DEL ExpressionStatement@@MethodInvocation:Thread.sleep(100) @AT@ 746 @LENGTH@ 18
---------------DEL MethodInvocation@@Thread.sleep(100) @AT@ 746 @LENGTH@ 17
------------------DEL SimpleName@@Name:Thread @AT@ 746 @LENGTH@ 6
------------------DEL SimpleName@@MethodName:sleep:[100] @AT@ 753 @LENGTH@ 10
---------------------DEL NumberLiteral@@100 @AT@ 759 @LENGTH@ 3
------DEL ExpressionStatement@@MethodInvocation:shell.stop() @AT@ 1006 @LENGTH@ 13
---------DEL MethodInvocation@@shell.stop() @AT@ 1006 @LENGTH@ 12
------------DEL SimpleName@@Name:shell @AT@ 1006 @LENGTH@ 5
------------DEL SimpleName@@MethodName:stop:[] @AT@ 1012 @LENGTH@ 6


UPD IfStatement@@if ("http".equals(roleHint)) {  return new DefaultPlexusContainer().lookup(Wagon.class,roleHint);} @TO@ if ("http".equals(roleHint)) {  PlexusContainer container=new DefaultPlexusContainer();  Wagon httpWagon=(Wagon)container.lookup(org.apache.maven.wagon.Wagon.ROLE,"http");  container.dispose();  return httpWagon;} @AT@ 10257 @LENGTH@ 181
---UPD Block@@ThenBody:{  return new DefaultPlexusContainer().lookup(Wagon.class,roleHint);} @TO@ ThenBody:{  PlexusContainer container=new DefaultPlexusContainer();  Wagon httpWagon=(Wagon)container.lookup(org.apache.maven.wagon.Wagon.ROLE,"http");  container.dispose();  return httpWagon;} @AT@ 10286 @LENGTH@ 152
------INS VariableDeclarationStatement@@PlexusContainer container=new DefaultPlexusContainer(); @TO@ Block@@ThenBody:{  return new DefaultPlexusContainer().lookup(Wagon.class,roleHint);} @AT@ 10214 @LENGTH@ 56
---------INS SimpleType@@PlexusContainer @TO@ VariableDeclarationStatement@@PlexusContainer container=new DefaultPlexusContainer(); @AT@ 10214 @LENGTH@ 15
---------INS VariableDeclarationFragment@@container=new DefaultPlexusContainer() @TO@ VariableDeclarationStatement@@PlexusContainer container=new DefaultPlexusContainer(); @AT@ 10230 @LENGTH@ 39
------------INS SimpleName@@container @TO@ VariableDeclarationFragment@@container=new DefaultPlexusContainer() @AT@ 10230 @LENGTH@ 9
------------INS ClassInstanceCreation@@DefaultPlexusContainer[] @TO@ VariableDeclarationFragment@@container=new DefaultPlexusContainer() @AT@ 10241 @LENGTH@ 28
---------------MOV New@@new @TO@ ClassInstanceCreation@@DefaultPlexusContainer[] @AT@ 10311 @LENGTH@ 3
---------------MOV SimpleType@@DefaultPlexusContainer @TO@ ClassInstanceCreation@@DefaultPlexusContainer[] @AT@ 10315 @LENGTH@ 22
------INS VariableDeclarationStatement@@Wagon httpWagon=(Wagon)container.lookup(org.apache.maven.wagon.Wagon.ROLE,"http"); @TO@ Block@@ThenBody:{  return new DefaultPlexusContainer().lookup(Wagon.class,roleHint);} @AT@ 10287 @LENGTH@ 88
---------INS SimpleType@@Wagon @TO@ VariableDeclarationStatement@@Wagon httpWagon=(Wagon)container.lookup(org.apache.maven.wagon.Wagon.ROLE,"http"); @AT@ 10287 @LENGTH@ 5
---------INS VariableDeclarationFragment@@httpWagon=(Wagon)container.lookup(org.apache.maven.wagon.Wagon.ROLE,"http") @TO@ VariableDeclarationStatement@@Wagon httpWagon=(Wagon)container.lookup(org.apache.maven.wagon.Wagon.ROLE,"http"); @AT@ 10293 @LENGTH@ 81
------------INS SimpleName@@httpWagon @TO@ VariableDeclarationFragment@@httpWagon=(Wagon)container.lookup(org.apache.maven.wagon.Wagon.ROLE,"http") @AT@ 10293 @LENGTH@ 9
------------INS CastExpression@@(Wagon)container.lookup(org.apache.maven.wagon.Wagon.ROLE,"http") @TO@ VariableDeclarationFragment@@httpWagon=(Wagon)container.lookup(org.apache.maven.wagon.Wagon.ROLE,"http") @AT@ 10305 @LENGTH@ 69
---------------INS SimpleType@@Wagon @TO@ CastExpression@@(Wagon)container.lookup(org.apache.maven.wagon.Wagon.ROLE,"http") @AT@ 10306 @LENGTH@ 5
---------------INS MethodInvocation@@container.lookup(org.apache.maven.wagon.Wagon.ROLE,"http") @TO@ CastExpression@@(Wagon)container.lookup(org.apache.maven.wagon.Wagon.ROLE,"http") @AT@ 10313 @LENGTH@ 61
------------------INS SimpleName@@Name:container @TO@ MethodInvocation@@container.lookup(org.apache.maven.wagon.Wagon.ROLE,"http") @AT@ 10313 @LENGTH@ 9
------------------MOV SimpleName@@MethodName:lookup:[Wagon.class, roleHint] @TO@ MethodInvocation@@container.lookup(org.apache.maven.wagon.Wagon.ROLE,"http") @AT@ 10340 @LENGTH@ 29
---------------------INS QualifiedName@@org.apache.maven.wagon.Wagon.ROLE @TO@ SimpleName@@MethodName:lookup:[Wagon.class, roleHint] @AT@ 10331 @LENGTH@ 33
------------------------INS QualifiedName@@org.apache.maven.wagon.Wagon @TO@ QualifiedName@@org.apache.maven.wagon.Wagon.ROLE @AT@ 10331 @LENGTH@ 28
---------------------------INS QualifiedName@@org.apache.maven.wagon @TO@ QualifiedName@@org.apache.maven.wagon.Wagon @AT@ 10331 @LENGTH@ 22
------------------------------INS QualifiedName@@org.apache.maven @TO@ QualifiedName@@org.apache.maven.wagon @AT@ 10331 @LENGTH@ 16
---------------------------------INS QualifiedName@@org.apache @TO@ QualifiedName@@org.apache.maven @AT@ 10331 @LENGTH@ 10
------------------------------------INS SimpleName@@org @TO@ QualifiedName@@org.apache @AT@ 10331 @LENGTH@ 3
------------------------------------INS SimpleName@@apache @TO@ QualifiedName@@org.apache @AT@ 10335 @LENGTH@ 6
---------------------------------INS SimpleName@@maven @TO@ QualifiedName@@org.apache.maven @AT@ 10342 @LENGTH@ 5
------------------------------INS SimpleName@@wagon @TO@ QualifiedName@@org.apache.maven.wagon @AT@ 10348 @LENGTH@ 5
---------------------------INS SimpleName@@Wagon @TO@ QualifiedName@@org.apache.maven.wagon.Wagon @AT@ 10354 @LENGTH@ 5
------------------------INS SimpleName@@ROLE @TO@ QualifiedName@@org.apache.maven.wagon.Wagon.ROLE @AT@ 10360 @LENGTH@ 4
---------------------INS StringLiteral@@"http" @TO@ SimpleName@@MethodName:lookup:[Wagon.class, roleHint] @AT@ 10366 @LENGTH@ 6
------DEL ReturnStatement@@MethodInvocation:new DefaultPlexusContainer().lookup(Wagon.class,roleHint) @AT@ 10304 @LENGTH@ 66
---------DEL MethodInvocation@@new DefaultPlexusContainer().lookup(Wagon.class,roleHint) @AT@ 10311 @LENGTH@ 58
------------DEL ClassInstanceCreation@@DefaultPlexusContainer[] @AT@ 10311 @LENGTH@ 28
------INS ExpressionStatement@@MethodInvocation:container.dispose() @TO@ Block@@ThenBody:{  return new DefaultPlexusContainer().lookup(Wagon.class,roleHint);} @AT@ 10392 @LENGTH@ 20
---------INS MethodInvocation@@container.dispose() @TO@ ExpressionStatement@@MethodInvocation:container.dispose() @AT@ 10392 @LENGTH@ 19
------------INS SimpleName@@Name:container @TO@ MethodInvocation@@container.dispose() @AT@ 10392 @LENGTH@ 9
------------INS SimpleName@@MethodName:dispose:[] @TO@ MethodInvocation@@container.dispose() @AT@ 10402 @LENGTH@ 9
------INS ReturnStatement@@SimpleName:httpWagon @TO@ Block@@ThenBody:{  return new DefaultPlexusContainer().lookup(Wagon.class,roleHint);} @AT@ 10429 @LENGTH@ 17
---------INS SimpleName@@httpWagon @TO@ ReturnStatement@@SimpleName:httpWagon @AT@ 10436 @LENGTH@ 9


INS MethodDeclaration@@LegacyKernelServicesInitializer, MethodName:configureReverseControllerCheck, AdditionalInitialization additionalInit, ModelFixer modelFixer, OperationFixer operationFixer,  @TO@ TypeDeclaration@@[public]LegacyKernelServicesInitializer,  @AT@ 7394 @LENGTH@ 146
---INS SimpleType@@LegacyKernelServicesInitializer @TO@ MethodDeclaration@@LegacyKernelServicesInitializer, MethodName:configureReverseControllerCheck, AdditionalInitialization additionalInit, ModelFixer modelFixer, OperationFixer operationFixer,  @AT@ 7362 @LENGTH@ 31
---INS SimpleName@@MethodName:configureReverseControllerCheck @TO@ MethodDeclaration@@LegacyKernelServicesInitializer, MethodName:configureReverseControllerCheck, AdditionalInitialization additionalInit, ModelFixer modelFixer, OperationFixer operationFixer,  @AT@ 7394 @LENGTH@ 31
---INS SingleVariableDeclaration@@AdditionalInitialization additionalInit @TO@ MethodDeclaration@@LegacyKernelServicesInitializer, MethodName:configureReverseControllerCheck, AdditionalInitialization additionalInit, ModelFixer modelFixer, OperationFixer operationFixer,  @AT@ 7426 @LENGTH@ 39
------INS SimpleType@@AdditionalInitialization @TO@ SingleVariableDeclaration@@AdditionalInitialization additionalInit @AT@ 7426 @LENGTH@ 24
------INS SimpleName@@additionalInit @TO@ SingleVariableDeclaration@@AdditionalInitialization additionalInit @AT@ 7451 @LENGTH@ 14
---INS SingleVariableDeclaration@@ModelFixer modelFixer @TO@ MethodDeclaration@@LegacyKernelServicesInitializer, MethodName:configureReverseControllerCheck, AdditionalInitialization additionalInit, ModelFixer modelFixer, OperationFixer operationFixer,  @AT@ 7486 @LENGTH@ 21
------INS SimpleType@@ModelFixer @TO@ SingleVariableDeclaration@@ModelFixer modelFixer @AT@ 7486 @LENGTH@ 10
------INS SimpleName@@modelFixer @TO@ SingleVariableDeclaration@@ModelFixer modelFixer @AT@ 7497 @LENGTH@ 10
---INS SingleVariableDeclaration@@OperationFixer operationFixer @TO@ MethodDeclaration@@LegacyKernelServicesInitializer, MethodName:configureReverseControllerCheck, AdditionalInitialization additionalInit, ModelFixer modelFixer, OperationFixer operationFixer,  @AT@ 7509 @LENGTH@ 29
------INS SimpleType@@OperationFixer @TO@ SingleVariableDeclaration@@OperationFixer operationFixer @AT@ 7509 @LENGTH@ 14
------INS SimpleName@@operationFixer @TO@ SingleVariableDeclaration@@OperationFixer operationFixer @AT@ 7524 @LENGTH@ 14


UPD IfStatement@@if (driverClassName == null) {  final ServiceLoader<Driver> serviceLoader=module.loadService(Driver.class);  if (serviceLoader != null)   for (  Driver driver : serviceLoader) {    startDriverServices(target,moduleId,driver,driverName,majorVersion,minorVersion,dataSourceClassName,xaDataSourceClassName);  }} else {  try {    final Class<? extends Driver> driverClass=module.getClassLoader().loadClass(driverClassName).asSubclass(Driver.class);    final Constructor<? extends Driver> constructor=driverClass.getConstructor();    final Driver driver=constructor.newInstance();    startDriverServices(target,moduleId,driver,driverName,majorVersion,minorVersion,dataSourceClassName,xaDataSourceClassName);  } catch (  Exception e) {    SUBSYSTEM_DATASOURCES_LOGGER.cannotInstantiateDriverClass(driverClassName,e);  }} @TO@ if (driverClassName == null) {  final ServiceLoader<Driver> serviceLoader=module.loadService(Driver.class);  if (serviceLoader != null)   for (  Driver driver : serviceLoader) {    startDriverServices(target,moduleId,driver,driverName,majorVersion,minorVersion,dataSourceClassName,xaDataSourceClassName,null);  }} else {  try {    final Class<? extends Driver> driverClass=module.getClassLoader().loadClass(driverClassName).asSubclass(Driver.class);    final Constructor<? extends Driver> constructor=driverClass.getConstructor();    final Driver driver=constructor.newInstance();    startDriverServices(target,moduleId,driver,driverName,majorVersion,minorVersion,dataSourceClassName,xaDataSourceClassName,null);  } catch (  Exception e) {    SUBSYSTEM_DATASOURCES_LOGGER.cannotInstantiateDriverClass(driverClassName,e);  }} @AT@ 4910 @LENGTH@ 1043
---UPD Block@@ThenBody:{  final ServiceLoader<Driver> serviceLoader=module.loadService(Driver.class);  if (serviceLoader != null)   for (  Driver driver : serviceLoader) {    startDriverServices(target,moduleId,driver,driverName,majorVersion,minorVersion,dataSourceClassName,xaDataSourceClassName);  }} @TO@ ThenBody:{  final ServiceLoader<Driver> serviceLoader=module.loadService(Driver.class);  if (serviceLoader != null)   for (  Driver driver : serviceLoader) {    startDriverServices(target,moduleId,driver,driverName,majorVersion,minorVersion,dataSourceClassName,xaDataSourceClassName,null);  }} @AT@ 4939 @LENGTH@ 363
------UPD IfStatement@@if (serviceLoader != null) for (Driver driver : serviceLoader) {  startDriverServices(target,moduleId,driver,driverName,majorVersion,minorVersion,dataSourceClassName,xaDataSourceClassName);} @TO@ if (serviceLoader != null) for (Driver driver : serviceLoader) {  startDriverServices(target,moduleId,driver,driverName,majorVersion,minorVersion,dataSourceClassName,xaDataSourceClassName,null);} @AT@ 5043 @LENGTH@ 249
---------UPD Block@@ThenBody:for (Driver driver : serviceLoader) {  startDriverServices(target,moduleId,driver,driverName,majorVersion,minorVersion,dataSourceClassName,xaDataSourceClassName);} @TO@ ThenBody:for (Driver driver : serviceLoader) {  startDriverServices(target,moduleId,driver,driverName,majorVersion,minorVersion,dataSourceClassName,xaDataSourceClassName,null);} @AT@ 5086 @LENGTH@ 206
------------UPD EnhancedForStatement@@for (Driver driver : serviceLoader) {  startDriverServices(target,moduleId,driver,driverName,majorVersion,minorVersion,dataSourceClassName,xaDataSourceClassName);} @TO@ for (Driver driver : serviceLoader) {  startDriverServices(target,moduleId,driver,driverName,majorVersion,minorVersion,dataSourceClassName,xaDataSourceClassName,null);} @AT@ 5086 @LENGTH@ 206
---------------UPD ExpressionStatement@@MethodInvocation:startDriverServices(target,moduleId,driver,driverName,majorVersion,minorVersion,dataSourceClassName,xaDataSourceClassName) @TO@ MethodInvocation:startDriverServices(target,moduleId,driver,driverName,majorVersion,minorVersion,dataSourceClassName,xaDataSourceClassName,null) @AT@ 5144 @LENGTH@ 130
------------------UPD MethodInvocation@@startDriverServices(target,moduleId,driver,driverName,majorVersion,minorVersion,dataSourceClassName,xaDataSourceClassName) @TO@ startDriverServices(target,moduleId,driver,driverName,majorVersion,minorVersion,dataSourceClassName,xaDataSourceClassName,null) @AT@ 5144 @LENGTH@ 129
---------------------UPD SimpleName@@MethodName:startDriverServices:[target, moduleId, driver, driverName, majorVersion, minorVersion, dataSourceClassName, xaDataSourceClassName] @TO@ MethodName:startDriverServices:[target, moduleId, driver, driverName, majorVersion, minorVersion, dataSourceClassName, xaDataSourceClassName, null] @AT@ 5144 @LENGTH@ 129
------------------------INS NullLiteral@@null @TO@ SimpleName@@MethodName:startDriverServices:[target, moduleId, driver, driverName, majorVersion, minorVersion, dataSourceClassName, xaDataSourceClassName] @AT@ 5274 @LENGTH@ 4
---------------------UPD SimpleName@@MethodName:startDriverServices:[target, moduleId, driver, driverName, majorVersion, minorVersion, dataSourceClassName, xaDataSourceClassName] @TO@ MethodName:startDriverServices:[target, moduleId, driver, driverName, majorVersion, minorVersion, dataSourceClassName, xaDataSourceClassName, null] @AT@ 5144 @LENGTH@ 129
------------------------INS NullLiteral@@null @TO@ SimpleName@@MethodName:startDriverServices:[target, moduleId, driver, driverName, majorVersion, minorVersion, dataSourceClassName, xaDataSourceClassName] @AT@ 5274 @LENGTH@ 4
---UPD Block@@ElseBody:{  try {    final Class<? extends Driver> driverClass=module.getClassLoader().loadClass(driverClassName).asSubclass(Driver.class);    final Constructor<? extends Driver> constructor=driverClass.getConstructor();    final Driver driver=constructor.newInstance();    startDriverServices(target,moduleId,driver,driverName,majorVersion,minorVersion,dataSourceClassName,xaDataSourceClassName);  } catch (  Exception e) {    SUBSYSTEM_DATASOURCES_LOGGER.cannotInstantiateDriverClass(driverClassName,e);  }} @TO@ ElseBody:{  try {    final Class<? extends Driver> driverClass=module.getClassLoader().loadClass(driverClassName).asSubclass(Driver.class);    final Constructor<? extends Driver> constructor=driverClass.getConstructor();    final Driver driver=constructor.newInstance();    startDriverServices(target,moduleId,driver,driverName,majorVersion,minorVersion,dataSourceClassName,xaDataSourceClassName,null);  } catch (  Exception e) {    SUBSYSTEM_DATASOURCES_LOGGER.cannotInstantiateDriverClass(driverClassName,e);  }} @AT@ 5308 @LENGTH@ 645
------UPD TryStatement@@try {  final Class<? extends Driver> driverClass=module.getClassLoader().loadClass(driverClassName).asSubclass(Driver.class);  final Constructor<? extends Driver> constructor=driverClass.getConstructor();  final Driver driver=constructor.newInstance();  startDriverServices(target,moduleId,driver,driverName,majorVersion,minorVersion,dataSourceClassName,xaDataSourceClassName);} catch (Exception e) {  SUBSYSTEM_DATASOURCES_LOGGER.cannotInstantiateDriverClass(driverClassName,e);} @TO@ try {  final Class<? extends Driver> driverClass=module.getClassLoader().loadClass(driverClassName).asSubclass(Driver.class);  final Constructor<? extends Driver> constructor=driverClass.getConstructor();  final Driver driver=constructor.newInstance();  startDriverServices(target,moduleId,driver,driverName,majorVersion,minorVersion,dataSourceClassName,xaDataSourceClassName,null);} catch (Exception e) {  SUBSYSTEM_DATASOURCES_LOGGER.cannotInstantiateDriverClass(driverClassName,e);} @AT@ 5322 @LENGTH@ 621
---------UPD ExpressionStatement@@MethodInvocation:startDriverServices(target,moduleId,driver,driverName,majorVersion,minorVersion,dataSourceClassName,xaDataSourceClassName) @TO@ MethodInvocation:startDriverServices(target,moduleId,driver,driverName,majorVersion,minorVersion,dataSourceClassName,xaDataSourceClassName,null) @AT@ 5667 @LENGTH@ 130
------------UPD MethodInvocation@@startDriverServices(target,moduleId,driver,driverName,majorVersion,minorVersion,dataSourceClassName,xaDataSourceClassName) @TO@ startDriverServices(target,moduleId,driver,driverName,majorVersion,minorVersion,dataSourceClassName,xaDataSourceClassName,null) @AT@ 5667 @LENGTH@ 129
---------------UPD SimpleName@@MethodName:startDriverServices:[target, moduleId, driver, driverName, majorVersion, minorVersion, dataSourceClassName, xaDataSourceClassName] @TO@ MethodName:startDriverServices:[target, moduleId, driver, driverName, majorVersion, minorVersion, dataSourceClassName, xaDataSourceClassName, null] @AT@ 5667 @LENGTH@ 129
------------------INS NullLiteral@@null @TO@ SimpleName@@MethodName:startDriverServices:[target, moduleId, driver, driverName, majorVersion, minorVersion, dataSourceClassName, xaDataSourceClassName] @AT@ 5803 @LENGTH@ 4


UPD VariableDeclarationStatement@@ServiceBuilder serviceBuilder=serviceTarget.addService(hornetQResourceAdapterService,resourceAdapterService).addDependency(TxnServices.JBOSS_TXN_TRANSACTION_MANAGER,resourceAdapterService.getTransactionManager()).addDependency(hqServiceName,HornetQServer.class,resourceAdapterService.getHornetQService()).addDependency(JMSServices.getJmsManagerBaseServiceName(hqServiceName)).addListener(verificationHandler); @TO@ ServiceBuilder serviceBuilder=serviceTarget.addService(hornetQResourceAdapterService,resourceAdapterService).addDependency(TxnServices.JBOSS_TXN_TRANSACTION_MANAGER,resourceAdapterService.getTransactionManager()).addDependency(hqServiceName,HornetQServer.class,resourceAdapterService.getHornetQService()).addDependency(JMSServices.getJmsManagerBaseServiceName(hqServiceName)).addListener(ServiceListener.Inheritance.ALL,verificationHandler); @AT@ 5964 @LENGTH@ 500
---UPD VariableDeclarationFragment@@serviceBuilder=serviceTarget.addService(hornetQResourceAdapterService,resourceAdapterService).addDependency(TxnServices.JBOSS_TXN_TRANSACTION_MANAGER,resourceAdapterService.getTransactionManager()).addDependency(hqServiceName,HornetQServer.class,resourceAdapterService.getHornetQService()).addDependency(JMSServices.getJmsManagerBaseServiceName(hqServiceName)).addListener(verificationHandler) @TO@ serviceBuilder=serviceTarget.addService(hornetQResourceAdapterService,resourceAdapterService).addDependency(TxnServices.JBOSS_TXN_TRANSACTION_MANAGER,resourceAdapterService.getTransactionManager()).addDependency(hqServiceName,HornetQServer.class,resourceAdapterService.getHornetQService()).addDependency(JMSServices.getJmsManagerBaseServiceName(hqServiceName)).addListener(ServiceListener.Inheritance.ALL,verificationHandler) @AT@ 5979 @LENGTH@ 484
------UPD MethodInvocation@@serviceTarget.addService(hornetQResourceAdapterService,resourceAdapterService).addDependency(TxnServices.JBOSS_TXN_TRANSACTION_MANAGER,resourceAdapterService.getTransactionManager()).addDependency(hqServiceName,HornetQServer.class,resourceAdapterService.getHornetQService()).addDependency(JMSServices.getJmsManagerBaseServiceName(hqServiceName)).addListener(verificationHandler) @TO@ serviceTarget.addService(hornetQResourceAdapterService,resourceAdapterService).addDependency(TxnServices.JBOSS_TXN_TRANSACTION_MANAGER,resourceAdapterService.getTransactionManager()).addDependency(hqServiceName,HornetQServer.class,resourceAdapterService.getHornetQService()).addDependency(JMSServices.getJmsManagerBaseServiceName(hqServiceName)).addListener(ServiceListener.Inheritance.ALL,verificationHandler) @AT@ 5996 @LENGTH@ 467
---------UPD SimpleName@@MethodName:addListener:[verificationHandler] @TO@ MethodName:addListener:[ServiceListener.Inheritance.ALL, verificationHandler] @AT@ 6431 @LENGTH@ 32
------------INS QualifiedName@@ServiceListener.Inheritance.ALL @TO@ SimpleName@@MethodName:addListener:[verificationHandler] @AT@ 6489 @LENGTH@ 31
---------------INS QualifiedName@@ServiceListener.Inheritance @TO@ QualifiedName@@ServiceListener.Inheritance.ALL @AT@ 6489 @LENGTH@ 27
------------------INS SimpleName@@ServiceListener @TO@ QualifiedName@@ServiceListener.Inheritance @AT@ 6489 @LENGTH@ 15
------------------INS SimpleName@@Inheritance @TO@ QualifiedName@@ServiceListener.Inheritance @AT@ 6505 @LENGTH@ 11
---------------INS SimpleName@@ALL @TO@ QualifiedName@@ServiceListener.Inheritance.ALL @AT@ 6517 @LENGTH@ 3


INS IfStatement@@if (attributes.contains(name)) {  return !noWriteFailureAttributes.contains(name) && hasExpressions(name,operation.clone().get(VALUE));} @TO@ MethodDeclaration@@public, boolean, MethodName:expectFailedWriteAttributeOperation, ModelNode operation,  @AT@ 14509 @LENGTH@ 165
---INS MethodInvocation@@attributes.contains(name) @TO@ IfStatement@@if (attributes.contains(name)) {  return !noWriteFailureAttributes.contains(name) && hasExpressions(name,operation.clone().get(VALUE));} @AT@ 14513 @LENGTH@ 25
------INS SimpleName@@Name:attributes @TO@ MethodInvocation@@attributes.contains(name) @AT@ 14513 @LENGTH@ 10
------INS SimpleName@@MethodName:contains:[name] @TO@ MethodInvocation@@attributes.contains(name) @AT@ 14524 @LENGTH@ 14
---------INS SimpleName@@name @TO@ SimpleName@@MethodName:contains:[name] @AT@ 14533 @LENGTH@ 4
---INS Block@@ThenBody:{  return !noWriteFailureAttributes.contains(name) && hasExpressions(name,operation.clone().get(VALUE));} @TO@ IfStatement@@if (attributes.contains(name)) {  return !noWriteFailureAttributes.contains(name) && hasExpressions(name,operation.clone().get(VALUE));} @AT@ 14540 @LENGTH@ 134
------MOV ReturnStatement@@InfixExpression:!noWriteFailureAttributes.contains(name) && hasExpressions(name,operation.clone().get(VALUE)) @TO@ Block@@ThenBody:{  return !noWriteFailureAttributes.contains(name) && hasExpressions(name,operation.clone().get(VALUE));} @AT@ 14509 @LENGTH@ 102


UPD IfStatement@@if (!config.expectFailedWriteAttributeOperation(writeOp)) {  Assert.assertEquals("Failed: " + writeOp + "\n"+ result,SUCCESS,result.get(OUTCOME).asString());} else {  Assert.assertEquals("Expected failure: " + writeOp,FAILED,result.get(OUTCOME).asString());  transformedOperation=mainServices.transformOperation(modelVersion,config.correctWriteAttributeOperation(writeOp));  result=mainServices.executeOperation(modelVersion,transformedOperation);  Assert.assertEquals(result.get(FAILURE_DESCRIPTION).asString() + " for\n:" + transformedOperation.getTransformedOperation(),SUCCESS,result.get(OUTCOME).asString());} @TO@ if (!config.expectFailedWriteAttributeOperation(writeOp)) {  Assert.assertEquals("Failed: " + writeOp + "\n"+ result,SUCCESS,result.get(OUTCOME).asString());} else {  Assert.assertEquals("Expected failure: " + writeOp,FAILED,result.get(OUTCOME).asString());  transformedOperation=mainServices.transformOperation(modelVersion,config.correctWriteAttributeOperation(writeOp));  result=mainServices.executeOperation(modelVersion,transformedOperation);} @AT@ 22269 @LENGTH@ 757
---UPD Block@@ElseBody:{  Assert.assertEquals("Expected failure: " + writeOp,FAILED,result.get(OUTCOME).asString());  transformedOperation=mainServices.transformOperation(modelVersion,config.correctWriteAttributeOperation(writeOp));  result=mainServices.executeOperation(modelVersion,transformedOperation);  Assert.assertEquals(result.get(FAILURE_DESCRIPTION).asString() + " for\n:" + transformedOperation.getTransformedOperation(),SUCCESS,result.get(OUTCOME).asString());} @TO@ ElseBody:{  Assert.assertEquals("Expected failure: " + writeOp,FAILED,result.get(OUTCOME).asString());  transformedOperation=mainServices.transformOperation(modelVersion,config.correctWriteAttributeOperation(writeOp));  result=mainServices.executeOperation(modelVersion,transformedOperation);} @AT@ 22472 @LENGTH@ 554
------DEL ExpressionStatement@@MethodInvocation:Assert.assertEquals(result.get(FAILURE_DESCRIPTION).asString() + " for\n:" + transformedOperation.getTransformedOperation(),SUCCESS,result.get(OUTCOME).asString()) @AT@ 22842 @LENGTH@ 166
---------DEL MethodInvocation@@Assert.assertEquals(result.get(FAILURE_DESCRIPTION).asString() + " for\n:" + transformedOperation.getTransformedOperation(),SUCCESS,result.get(OUTCOME).asString()) @AT@ 22842 @LENGTH@ 165
------------DEL SimpleName@@Name:Assert @AT@ 22842 @LENGTH@ 6
------------DEL SimpleName@@MethodName:assertEquals:[result.get(FAILURE_DESCRIPTION).asString() + " for\n:" + transformedOperation.getTransformedOperation(), SUCCESS, result.get(OUTCOME).asString()] @AT@ 22849 @LENGTH@ 158
---------------DEL InfixExpression@@result.get(FAILURE_DESCRIPTION).asString() + " for\n:" + transformedOperation.getTransformedOperation() @AT@ 22862 @LENGTH@ 103
------------------DEL MethodInvocation@@result.get(FAILURE_DESCRIPTION).asString() @AT@ 22862 @LENGTH@ 42
---------------------DEL MethodInvocation@@MethodName:get:[FAILURE_DESCRIPTION] @AT@ 22862 @LENGTH@ 31
------------------------DEL SimpleName@@FAILURE_DESCRIPTION @AT@ 22873 @LENGTH@ 19
---------------------DEL SimpleName@@Name:result @AT@ 22862 @LENGTH@ 6
---------------------DEL SimpleName@@MethodName:asString:[] @AT@ 22894 @LENGTH@ 10
------------------DEL Operator@@+ @AT@ 22904 @LENGTH@ 1
------------------DEL StringLiteral@@" for\n:" @AT@ 22907 @LENGTH@ 9
------------------DEL MethodInvocation@@transformedOperation.getTransformedOperation() @AT@ 22919 @LENGTH@ 46
---------------------DEL SimpleName@@Name:transformedOperation @AT@ 22919 @LENGTH@ 20
---------------------DEL SimpleName@@MethodName:getTransformedOperation:[] @AT@ 22940 @LENGTH@ 25
---------------DEL SimpleName@@SUCCESS @AT@ 22967 @LENGTH@ 7
---------------DEL MethodInvocation@@result.get(OUTCOME).asString() @AT@ 22976 @LENGTH@ 30
------------------DEL MethodInvocation@@MethodName:get:[OUTCOME] @AT@ 22976 @LENGTH@ 19
---------------------DEL SimpleName@@OUTCOME @AT@ 22987 @LENGTH@ 7
------------------DEL SimpleName@@Name:result @AT@ 22976 @LENGTH@ 6
------------------DEL SimpleName@@MethodName:asString:[] @AT@ 22996 @LENGTH@ 10


UPD ExpressionStatement@@MethodInvocation:System.out.println("URLs are: " + url1 + ", "+ url2) @TO@ MethodInvocation:log.info("URLs are: " + url1 + ", "+ url2) @AT@ 9219 @LENGTH@ 54
---UPD MethodInvocation@@System.out.println("URLs are: " + url1 + ", "+ url2) @TO@ log.info("URLs are: " + url1 + ", "+ url2) @AT@ 9219 @LENGTH@ 53
------DEL QualifiedName@@Name:System.out @AT@ 9219 @LENGTH@ 10
------INS SimpleName@@Name:log @TO@ MethodInvocation@@System.out.println("URLs are: " + url1 + ", "+ url2) @AT@ 9219 @LENGTH@ 3
------UPD SimpleName@@MethodName:println:["URLs are: " + url1 + ", "+ url2] @TO@ MethodName:info:["URLs are: " + url1 + ", "+ url2] @AT@ 9230 @LENGTH@ 42


INS MethodDeclaration@@public, static, DomainTestSupport, MethodName:createAndStartDefaultSupport, final String testName,  @TO@ TypeDeclaration@@[public]DomainTestSupport,  @AT@ 3310 @LENGTH@ 379
---INS Modifier@@public @TO@ MethodDeclaration@@public, static, DomainTestSupport, MethodName:createAndStartDefaultSupport, final String testName,  @AT@ 3310 @LENGTH@ 6
---INS Modifier@@static @TO@ MethodDeclaration@@public, static, DomainTestSupport, MethodName:createAndStartDefaultSupport, final String testName,  @AT@ 3317 @LENGTH@ 6
---INS SimpleType@@DomainTestSupport @TO@ MethodDeclaration@@public, static, DomainTestSupport, MethodName:createAndStartDefaultSupport, final String testName,  @AT@ 3324 @LENGTH@ 17
---INS SimpleName@@MethodName:createAndStartDefaultSupport @TO@ MethodDeclaration@@public, static, DomainTestSupport, MethodName:createAndStartDefaultSupport, final String testName,  @AT@ 3342 @LENGTH@ 28
---INS SingleVariableDeclaration@@final String testName @TO@ MethodDeclaration@@public, static, DomainTestSupport, MethodName:createAndStartDefaultSupport, final String testName,  @AT@ 3371 @LENGTH@ 21
------INS Modifier@@final @TO@ SingleVariableDeclaration@@final String testName @AT@ 3371 @LENGTH@ 5
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@final String testName @AT@ 3377 @LENGTH@ 6
------INS SimpleName@@testName @TO@ SingleVariableDeclaration@@final String testName @AT@ 3384 @LENGTH@ 8
---INS TryStatement@@try {  final DomainTestSupport testSupport=DomainTestSupport.create(testName,DEFAULT_CONFIG);  testSupport.start();  return testSupport;} catch (Exception e) {  throw new RuntimeException(e);} @TO@ MethodDeclaration@@public, static, DomainTestSupport, MethodName:createAndStartDefaultSupport, final String testName,  @AT@ 3404 @LENGTH@ 279
------INS VariableDeclarationStatement@@final DomainTestSupport testSupport=DomainTestSupport.create(testName,DEFAULT_CONFIG); @TO@ TryStatement@@try {  final DomainTestSupport testSupport=DomainTestSupport.create(testName,DEFAULT_CONFIG);  testSupport.start();  return testSupport;} catch (Exception e) {  throw new RuntimeException(e);} @AT@ 3422 @LENGTH@ 89
---------INS Modifier@@final @TO@ VariableDeclarationStatement@@final DomainTestSupport testSupport=DomainTestSupport.create(testName,DEFAULT_CONFIG); @AT@ 3422 @LENGTH@ 5
---------INS SimpleType@@DomainTestSupport @TO@ VariableDeclarationStatement@@final DomainTestSupport testSupport=DomainTestSupport.create(testName,DEFAULT_CONFIG); @AT@ 3428 @LENGTH@ 17
---------INS VariableDeclarationFragment@@testSupport=DomainTestSupport.create(testName,DEFAULT_CONFIG) @TO@ VariableDeclarationStatement@@final DomainTestSupport testSupport=DomainTestSupport.create(testName,DEFAULT_CONFIG); @AT@ 3446 @LENGTH@ 64
------------INS SimpleName@@testSupport @TO@ VariableDeclarationFragment@@testSupport=DomainTestSupport.create(testName,DEFAULT_CONFIG) @AT@ 3446 @LENGTH@ 11
------------INS MethodInvocation@@DomainTestSupport.create(testName,DEFAULT_CONFIG) @TO@ VariableDeclarationFragment@@testSupport=DomainTestSupport.create(testName,DEFAULT_CONFIG) @AT@ 3460 @LENGTH@ 50
---------------INS SimpleName@@Name:DomainTestSupport @TO@ MethodInvocation@@DomainTestSupport.create(testName,DEFAULT_CONFIG) @AT@ 3460 @LENGTH@ 17
---------------INS SimpleName@@MethodName:create:[testName, DEFAULT_CONFIG] @TO@ MethodInvocation@@DomainTestSupport.create(testName,DEFAULT_CONFIG) @AT@ 3478 @LENGTH@ 32
------------------INS SimpleName@@testName @TO@ SimpleName@@MethodName:create:[testName, DEFAULT_CONFIG] @AT@ 3485 @LENGTH@ 8
------------------INS SimpleName@@DEFAULT_CONFIG @TO@ SimpleName@@MethodName:create:[testName, DEFAULT_CONFIG] @AT@ 3495 @LENGTH@ 14
------INS ExpressionStatement@@MethodInvocation:testSupport.start() @TO@ TryStatement@@try {  final DomainTestSupport testSupport=DomainTestSupport.create(testName,DEFAULT_CONFIG);  testSupport.start();  return testSupport;} catch (Exception e) {  throw new RuntimeException(e);} @AT@ 3546 @LENGTH@ 20
---------INS MethodInvocation@@testSupport.start() @TO@ ExpressionStatement@@MethodInvocation:testSupport.start() @AT@ 3546 @LENGTH@ 19
------------INS SimpleName@@Name:testSupport @TO@ MethodInvocation@@testSupport.start() @AT@ 3546 @LENGTH@ 11
------------INS SimpleName@@MethodName:start:[] @TO@ MethodInvocation@@testSupport.start() @AT@ 3558 @LENGTH@ 7
------INS ReturnStatement@@SimpleName:testSupport @TO@ TryStatement@@try {  final DomainTestSupport testSupport=DomainTestSupport.create(testName,DEFAULT_CONFIG);  testSupport.start();  return testSupport;} catch (Exception e) {  throw new RuntimeException(e);} @AT@ 3579 @LENGTH@ 19
---------INS SimpleName@@testSupport @TO@ ReturnStatement@@SimpleName:testSupport @AT@ 3586 @LENGTH@ 11
------INS CatchClause@@catch (Exception e) {  throw new RuntimeException(e);} @TO@ TryStatement@@try {  final DomainTestSupport testSupport=DomainTestSupport.create(testName,DEFAULT_CONFIG);  testSupport.start();  return testSupport;} catch (Exception e) {  throw new RuntimeException(e);} @AT@ 3609 @LENGTH@ 74
---------INS SingleVariableDeclaration@@Exception e @TO@ CatchClause@@catch (Exception e) {  throw new RuntimeException(e);} @AT@ 3616 @LENGTH@ 11
------------INS SimpleType@@Exception @TO@ SingleVariableDeclaration@@Exception e @AT@ 3616 @LENGTH@ 9
------------INS SimpleName@@e @TO@ SingleVariableDeclaration@@Exception e @AT@ 3626 @LENGTH@ 1
---------INS ThrowStatement@@ClassInstanceCreation:new RuntimeException(e) @TO@ CatchClause@@catch (Exception e) {  throw new RuntimeException(e);} @AT@ 3643 @LENGTH@ 30
------------INS ClassInstanceCreation@@RuntimeException[e] @TO@ ThrowStatement@@ClassInstanceCreation:new RuntimeException(e) @AT@ 3649 @LENGTH@ 23
---------------INS New@@new @TO@ ClassInstanceCreation@@RuntimeException[e] @AT@ 3649 @LENGTH@ 3
---------------INS SimpleType@@RuntimeException @TO@ ClassInstanceCreation@@RuntimeException[e] @AT@ 3653 @LENGTH@ 16
---------------INS SimpleName@@e @TO@ ClassInstanceCreation@@RuntimeException[e] @AT@ 3670 @LENGTH@ 1


UPD IfStatement@@if (entity == null && DEFAULT_ID_NAMES.contains(key)) {  return "_id";} @TO@ if (!entity.hasIdProperty() && DEFAULT_ID_NAMES.contains(key)) {  return "_id";} @AT@ 6844 @LENGTH@ 76
---UPD InfixExpression@@entity == null && DEFAULT_ID_NAMES.contains(key) @TO@ !entity.hasIdProperty() && DEFAULT_ID_NAMES.contains(key) @AT@ 6848 @LENGTH@ 48
------DEL InfixExpression@@entity == null @AT@ 6848 @LENGTH@ 14
---------DEL SimpleName@@entity @AT@ 6848 @LENGTH@ 6
---------DEL Operator@@== @AT@ 6854 @LENGTH@ 2
---------DEL NullLiteral@@null @AT@ 6858 @LENGTH@ 4
------INS PrefixExpression@@!entity.hasIdProperty() @TO@ InfixExpression@@entity == null && DEFAULT_ID_NAMES.contains(key) @AT@ 6892 @LENGTH@ 23
---------INS Operator@@! @TO@ PrefixExpression@@!entity.hasIdProperty() @AT@ 6892 @LENGTH@ 1
---------INS MethodInvocation@@entity.hasIdProperty() @TO@ PrefixExpression@@!entity.hasIdProperty() @AT@ 6893 @LENGTH@ 22
------------INS SimpleName@@Name:entity @TO@ MethodInvocation@@entity.hasIdProperty() @AT@ 6893 @LENGTH@ 6
------------INS SimpleName@@MethodName:hasIdProperty:[] @TO@ MethodInvocation@@entity.hasIdProperty() @AT@ 6900 @LENGTH@ 15


INS ExpressionStatement@@MethodInvocation:camelDataFormat.setLocale("en") @TO@ MethodDeclaration@@public, void, MethodName:configure,  @AT@ 3854 @LENGTH@ 32
---INS MethodInvocation@@camelDataFormat.setLocale("en") @TO@ ExpressionStatement@@MethodInvocation:camelDataFormat.setLocale("en") @AT@ 3854 @LENGTH@ 31
------INS SimpleName@@Name:camelDataFormat @TO@ MethodInvocation@@camelDataFormat.setLocale("en") @AT@ 3854 @LENGTH@ 15
------INS SimpleName@@MethodName:setLocale:["en"] @TO@ MethodInvocation@@camelDataFormat.setLocale("en") @AT@ 3870 @LENGTH@ 15
---------INS StringLiteral@@"en" @TO@ SimpleName@@MethodName:setLocale:["en"] @AT@ 3880 @LENGTH@ 4


INS MethodDeclaration@@public, void, MethodName:testSortStore,  @TO@ TypeDeclaration@@[public]SrpConnectionIntegrationTests, AbstractConnectionIntegrationTests @AT@ 1583 @LENGTH@ 32
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testSortStore,  @AT@ 1583 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testSortStore,  @AT@ 1590 @LENGTH@ 4
---INS SimpleName@@MethodName:testSortStore @TO@ MethodDeclaration@@public, void, MethodName:testSortStore,  @AT@ 1595 @LENGTH@ 13


INS MethodDeclaration@@public, void, MethodName:testBeanDefinitionParserAndInvokeGreeter, Exception,  @TO@ TypeDeclaration@@[public]CxfConsumerSoap12Test, CamelBlueprintTestSupport @AT@ 2200 @LENGTH@ 226
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testBeanDefinitionParserAndInvokeGreeter, Exception,  @AT@ 2200 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testBeanDefinitionParserAndInvokeGreeter, Exception,  @AT@ 2207 @LENGTH@ 4
---INS SimpleName@@MethodName:testBeanDefinitionParserAndInvokeGreeter @TO@ MethodDeclaration@@public, void, MethodName:testBeanDefinitionParserAndInvokeGreeter, Exception,  @AT@ 2212 @LENGTH@ 40
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:testBeanDefinitionParserAndInvokeGreeter, Exception,  @AT@ 2262 @LENGTH@ 9
---INS ExpressionStatement@@MethodInvocation:testInvokeGreeter() @TO@ MethodDeclaration@@public, void, MethodName:testBeanDefinitionParserAndInvokeGreeter, Exception,  @AT@ 2353 @LENGTH@ 20
------INS MethodInvocation@@MethodName:testInvokeGreeter:[] @TO@ ExpressionStatement@@MethodInvocation:testInvokeGreeter() @AT@ 2353 @LENGTH@ 19
---INS ExpressionStatement@@MethodInvocation:testCxfEndpointBeanDefinitionParser() @TO@ MethodDeclaration@@public, void, MethodName:testBeanDefinitionParserAndInvokeGreeter, Exception,  @AT@ 2382 @LENGTH@ 38
------INS MethodInvocation@@MethodName:testCxfEndpointBeanDefinitionParser:[] @TO@ ExpressionStatement@@MethodInvocation:testCxfEndpointBeanDefinitionParser() @AT@ 2382 @LENGTH@ 37


UPD FieldDeclaration@@private, final, AtomicInteger, [count=new AtomicInteger()] @TO@ private, final, AtomicInteger, [count=new AtomicInteger(1)] @AT@ 829 @LENGTH@ 56
---UPD VariableDeclarationFragment@@count=new AtomicInteger() @TO@ count=new AtomicInteger(1) @AT@ 857 @LENGTH@ 27
------UPD ClassInstanceCreation@@AtomicInteger[] @TO@ AtomicInteger[1] @AT@ 865 @LENGTH@ 19
---------INS NumberLiteral@@1 @TO@ ClassInstanceCreation@@AtomicInteger[] @AT@ 883 @LENGTH@ 1


INS TryStatement@@try {  verifyResults(Arrays.asList(new Object[]{}),actual);  if (redisVersion.compareTo(parseVersion("2.6.5")) >= 0) {    fail("Redis 2.6 should throw an Exception on exec if commands are invalid");  }} catch (InvalidDataAccessApiUsageException e) {} @TO@ MethodDeclaration@@public, void, MethodName:exceptionExecuteNative, Exception,  @AT@ 2477 @LENGTH@ 348
---MOV ExpressionStatement@@MethodInvocation:verifyResults(Arrays.asList(new Object[]{}),actual) @TO@ TryStatement@@try {  verifyResults(Arrays.asList(new Object[]{}),actual);  if (redisVersion.compareTo(parseVersion("2.6.5")) >= 0) {    fail("Redis 2.6 should throw an Exception on exec if commands are invalid");  }} catch (InvalidDataAccessApiUsageException e) {} @AT@ 2403 @LENGTH@ 54
---INS IfStatement@@if (redisVersion.compareTo(parseVersion("2.6.5")) >= 0) {  fail("Redis 2.6 should throw an Exception on exec if commands are invalid");} @TO@ TryStatement@@try {  verifyResults(Arrays.asList(new Object[]{}),actual);  if (redisVersion.compareTo(parseVersion("2.6.5")) >= 0) {    fail("Redis 2.6 should throw an Exception on exec if commands are invalid");  }} catch (InvalidDataAccessApiUsageException e) {} @AT@ 2630 @LENGTH@ 142
------INS InfixExpression@@redisVersion.compareTo(parseVersion("2.6.5")) >= 0 @TO@ IfStatement@@if (redisVersion.compareTo(parseVersion("2.6.5")) >= 0) {  fail("Redis 2.6 should throw an Exception on exec if commands are invalid");} @AT@ 2633 @LENGTH@ 50
---------INS MethodInvocation@@redisVersion.compareTo(parseVersion("2.6.5")) @TO@ InfixExpression@@redisVersion.compareTo(parseVersion("2.6.5")) >= 0 @AT@ 2633 @LENGTH@ 45
------------INS SimpleName@@Name:redisVersion @TO@ MethodInvocation@@redisVersion.compareTo(parseVersion("2.6.5")) @AT@ 2633 @LENGTH@ 12
------------INS SimpleName@@MethodName:compareTo:[parseVersion("2.6.5")] @TO@ MethodInvocation@@redisVersion.compareTo(parseVersion("2.6.5")) @AT@ 2646 @LENGTH@ 32
---------------INS MethodInvocation@@parseVersion("2.6.5") @TO@ SimpleName@@MethodName:compareTo:[parseVersion("2.6.5")] @AT@ 2656 @LENGTH@ 21
------------------INS SimpleName@@MethodName:parseVersion:["2.6.5"] @TO@ MethodInvocation@@parseVersion("2.6.5") @AT@ 2656 @LENGTH@ 21
---------------------INS StringLiteral@@"2.6.5" @TO@ SimpleName@@MethodName:parseVersion:["2.6.5"] @AT@ 2669 @LENGTH@ 7
---------INS Operator@@>= @TO@ InfixExpression@@redisVersion.compareTo(parseVersion("2.6.5")) >= 0 @AT@ 2678 @LENGTH@ 2
---------INS NumberLiteral@@0 @TO@ InfixExpression@@redisVersion.compareTo(parseVersion("2.6.5")) >= 0 @AT@ 2682 @LENGTH@ 1
------INS Block@@ThenBody:{  fail("Redis 2.6 should throw an Exception on exec if commands are invalid");} @TO@ IfStatement@@if (redisVersion.compareTo(parseVersion("2.6.5")) >= 0) {  fail("Redis 2.6 should throw an Exception on exec if commands are invalid");} @AT@ 2685 @LENGTH@ 87
---------INS ExpressionStatement@@MethodInvocation:fail("Redis 2.6 should throw an Exception on exec if commands are invalid") @TO@ Block@@ThenBody:{  fail("Redis 2.6 should throw an Exception on exec if commands are invalid");} @AT@ 2691 @LENGTH@ 76
------------INS MethodInvocation@@fail("Redis 2.6 should throw an Exception on exec if commands are invalid") @TO@ ExpressionStatement@@MethodInvocation:fail("Redis 2.6 should throw an Exception on exec if commands are invalid") @AT@ 2691 @LENGTH@ 75
---------------INS SimpleName@@MethodName:fail:["Redis 2.6 should throw an Exception on exec if commands are invalid"] @TO@ MethodInvocation@@fail("Redis 2.6 should throw an Exception on exec if commands are invalid") @AT@ 2691 @LENGTH@ 75
------------------INS StringLiteral@@"Redis 2.6 should throw an Exception on exec if commands are invalid" @TO@ SimpleName@@MethodName:fail:["Redis 2.6 should throw an Exception on exec if commands are invalid"] @AT@ 2696 @LENGTH@ 69
---INS CatchClause@@catch (InvalidDataAccessApiUsageException e) {} @TO@ TryStatement@@try {  verifyResults(Arrays.asList(new Object[]{}),actual);  if (redisVersion.compareTo(parseVersion("2.6.5")) >= 0) {    fail("Redis 2.6 should throw an Exception on exec if commands are invalid");  }} catch (InvalidDataAccessApiUsageException e) {} @AT@ 2776 @LENGTH@ 49
------INS SingleVariableDeclaration@@InvalidDataAccessApiUsageException e @TO@ CatchClause@@catch (InvalidDataAccessApiUsageException e) {} @AT@ 2782 @LENGTH@ 36
---------INS SimpleType@@InvalidDataAccessApiUsageException @TO@ SingleVariableDeclaration@@InvalidDataAccessApiUsageException e @AT@ 2782 @LENGTH@ 34
---------INS SimpleName@@e @TO@ SingleVariableDeclaration@@InvalidDataAccessApiUsageException e @AT@ 2817 @LENGTH@ 1


UPD FieldDeclaration@@private, static, final, Logger, [LOG=Logger.getLogger(GreeterImpl.class.getPackage().getName())] @TO@ private, static, final, Logger, [LOG=LoggerFactory.getLogger(GreeterImpl.class)] @AT@ 1348 @LENGTH@ 101
---UPD VariableDeclarationFragment@@LOG=Logger.getLogger(GreeterImpl.class.getPackage().getName()) @TO@ LOG=LoggerFactory.getLogger(GreeterImpl.class) @AT@ 1376 @LENGTH@ 72
------UPD MethodInvocation@@Logger.getLogger(GreeterImpl.class.getPackage().getName()) @TO@ LoggerFactory.getLogger(GreeterImpl.class) @AT@ 1390 @LENGTH@ 58
---------UPD SimpleName@@Name:Logger @TO@ Name:LoggerFactory @AT@ 1390 @LENGTH@ 6
---------UPD SimpleName@@MethodName:getLogger:[GreeterImpl.class.getPackage().getName()] @TO@ MethodName:getLogger:[GreeterImpl.class] @AT@ 1397 @LENGTH@ 51
------------DEL MethodInvocation@@GreeterImpl.class.getPackage().getName() @AT@ 1407 @LENGTH@ 40
---------------DEL MethodInvocation@@MethodName:getPackage:[] @AT@ 1407 @LENGTH@ 30
---------------DEL TypeLiteral@@GreeterImpl.class @AT@ 1407 @LENGTH@ 17
---------------DEL SimpleName@@MethodName:getName:[] @AT@ 1438 @LENGTH@ 9
------------INS TypeLiteral@@GreeterImpl.class @TO@ SimpleName@@MethodName:getLogger:[GreeterImpl.class.getPackage().getName()] @AT@ 1429 @LENGTH@ 17


DEL ExpressionStatement@@MethodInvocation:errorHandler(deadLetterChannel("mock:failed").maximumRedeliveries(0)) @AT@ 10011 @LENGTH@ 70
---DEL MethodInvocation@@errorHandler(deadLetterChannel("mock:failed").maximumRedeliveries(0)) @AT@ 10011 @LENGTH@ 69
------DEL SimpleName@@MethodName:errorHandler:[deadLetterChannel("mock:failed").maximumRedeliveries(0)] @AT@ 10011 @LENGTH@ 69
---------DEL MethodInvocation@@deadLetterChannel("mock:failed").maximumRedeliveries(0) @AT@ 10024 @LENGTH@ 55
------------DEL MethodInvocation@@MethodName:deadLetterChannel:["mock:failed"] @AT@ 10024 @LENGTH@ 32
---------------DEL StringLiteral@@"mock:failed" @AT@ 10042 @LENGTH@ 13
------------DEL SimpleName@@MethodName:maximumRedeliveries:[0] @AT@ 10057 @LENGTH@ 22
---------------DEL NumberLiteral@@0 @AT@ 10077 @LENGTH@ 1


UPD EnhancedForStatement@@for (OperationTransformer entry : entries) {  TransformedOperation transformed=entry.transformOperation(context,address,currentOperation);  currentOperation=transformed.getTransformedOperation();  delegates.add(transformed);} @TO@ for (OperationTransformer entry : entries) {  TransformedOperation transformed=entry.transformOperation(context,address,currentOperation);  currentOperation=transformed.getTransformedOperation();  delegates.add(transformed);  if (currentOperation == null) {    break;  }} @AT@ 2225 @LENGTH@ 273
---INS IfStatement@@if (currentOperation == null) {  break;} @TO@ EnhancedForStatement@@for (OperationTransformer entry : entries) {  TransformedOperation transformed=entry.transformOperation(context,address,currentOperation);  currentOperation=transformed.getTransformedOperation();  delegates.add(transformed);} @AT@ 2501 @LENGTH@ 68
------INS InfixExpression@@currentOperation == null @TO@ IfStatement@@if (currentOperation == null) {  break;} @AT@ 2505 @LENGTH@ 24
---------INS SimpleName@@currentOperation @TO@ InfixExpression@@currentOperation == null @AT@ 2505 @LENGTH@ 16
---------INS Operator@@== @TO@ InfixExpression@@currentOperation == null @AT@ 2521 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@currentOperation == null @AT@ 2525 @LENGTH@ 4
------INS Block@@ThenBody:{  break;} @TO@ IfStatement@@if (currentOperation == null) {  break;} @AT@ 2531 @LENGTH@ 38
---------INS BreakStatement@@ @TO@ Block@@ThenBody:{  break;} @AT@ 2549 @LENGTH@ 6


INS IfStatement@@if (!"sendFileAndDelete".equals(getTestMethodName())) {  assertEquals("This is my bucket content.",resultExchange.getIn().getBody(String.class));} @TO@ MethodDeclaration@@private, void, MethodName:assertResultExchange, Exchange resultExchange,  @AT@ 4081 @LENGTH@ 292
---INS PrefixExpression@@!"sendFileAndDelete".equals(getTestMethodName()) @TO@ IfStatement@@if (!"sendFileAndDelete".equals(getTestMethodName())) {  assertEquals("This is my bucket content.",resultExchange.getIn().getBody(String.class));} @AT@ 4085 @LENGTH@ 48
------INS Operator@@! @TO@ PrefixExpression@@!"sendFileAndDelete".equals(getTestMethodName()) @AT@ 4085 @LENGTH@ 1
------INS MethodInvocation@@"sendFileAndDelete".equals(getTestMethodName()) @TO@ PrefixExpression@@!"sendFileAndDelete".equals(getTestMethodName()) @AT@ 4086 @LENGTH@ 47
---------INS StringLiteral@@"sendFileAndDelete" @TO@ MethodInvocation@@"sendFileAndDelete".equals(getTestMethodName()) @AT@ 4086 @LENGTH@ 19
---------INS SimpleName@@MethodName:equals:[getTestMethodName()] @TO@ MethodInvocation@@"sendFileAndDelete".equals(getTestMethodName()) @AT@ 4106 @LENGTH@ 27
------------INS MethodInvocation@@MethodName:getTestMethodName:[] @TO@ SimpleName@@MethodName:equals:[getTestMethodName()] @AT@ 4113 @LENGTH@ 19
---INS Block@@ThenBody:{  assertEquals("This is my bucket content.",resultExchange.getIn().getBody(String.class));} @TO@ IfStatement@@if (!"sendFileAndDelete".equals(getTestMethodName())) {  assertEquals("This is my bucket content.",resultExchange.getIn().getBody(String.class));} @AT@ 4135 @LENGTH@ 238
------MOV ExpressionStatement@@MethodInvocation:assertEquals("This is my bucket content.",resultExchange.getIn().getBody(String.class)) @TO@ Block@@ThenBody:{  assertEquals("This is my bucket content.",resultExchange.getIn().getBody(String.class));} @AT@ 4080 @LENGTH@ 89


INS MethodDeclaration@@public, void, MethodName:testPasswordSetAndRemovedFromParameters, Exception,  @TO@ TypeDeclaration@@[public]TestDefaultAuthorizationRequest,  @AT@ 2864 @LENGTH@ 572
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testPasswordSetAndRemovedFromParameters, Exception,  @AT@ 2864 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testPasswordSetAndRemovedFromParameters, Exception,  @AT@ 2871 @LENGTH@ 4
---INS SimpleName@@MethodName:testPasswordSetAndRemovedFromParameters @TO@ MethodDeclaration@@public, void, MethodName:testPasswordSetAndRemovedFromParameters, Exception,  @AT@ 2876 @LENGTH@ 39
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:testPasswordSetAndRemovedFromParameters, Exception,  @AT@ 2925 @LENGTH@ 9
---INS ExpressionStatement@@MethodInvocation:parameters.put("username","sample") @TO@ MethodDeclaration@@public, void, MethodName:testPasswordSetAndRemovedFromParameters, Exception,  @AT@ 2939 @LENGTH@ 37
------INS MethodInvocation@@parameters.put("username","sample") @TO@ ExpressionStatement@@MethodInvocation:parameters.put("username","sample") @AT@ 2939 @LENGTH@ 36
---------INS SimpleName@@Name:parameters @TO@ MethodInvocation@@parameters.put("username","sample") @AT@ 2939 @LENGTH@ 10
---------INS SimpleName@@MethodName:put:["username", "sample"] @TO@ MethodInvocation@@parameters.put("username","sample") @AT@ 2950 @LENGTH@ 25
------------INS StringLiteral@@"username" @TO@ SimpleName@@MethodName:put:["username", "sample"] @AT@ 2954 @LENGTH@ 10
------------INS StringLiteral@@"sample" @TO@ SimpleName@@MethodName:put:["username", "sample"] @AT@ 2966 @LENGTH@ 8
---INS ExpressionStatement@@MethodInvocation:parameters.put("password","testing") @TO@ MethodDeclaration@@public, void, MethodName:testPasswordSetAndRemovedFromParameters, Exception,  @AT@ 2979 @LENGTH@ 38
------INS MethodInvocation@@parameters.put("password","testing") @TO@ ExpressionStatement@@MethodInvocation:parameters.put("password","testing") @AT@ 2979 @LENGTH@ 37
---------INS SimpleName@@Name:parameters @TO@ MethodInvocation@@parameters.put("password","testing") @AT@ 2979 @LENGTH@ 10
---------INS SimpleName@@MethodName:put:["password", "testing"] @TO@ MethodInvocation@@parameters.put("password","testing") @AT@ 2990 @LENGTH@ 26
------------INS StringLiteral@@"password" @TO@ SimpleName@@MethodName:put:["password", "testing"] @AT@ 2994 @LENGTH@ 10
------------INS StringLiteral@@"testing" @TO@ SimpleName@@MethodName:put:["password", "testing"] @AT@ 3006 @LENGTH@ 9
---INS VariableDeclarationStatement@@DefaultAuthorizationRequest authorizationRequest=new DefaultAuthorizationRequest(parameters); @TO@ MethodDeclaration@@public, void, MethodName:testPasswordSetAndRemovedFromParameters, Exception,  @AT@ 3020 @LENGTH@ 95
------INS SimpleType@@DefaultAuthorizationRequest @TO@ VariableDeclarationStatement@@DefaultAuthorizationRequest authorizationRequest=new DefaultAuthorizationRequest(parameters); @AT@ 3020 @LENGTH@ 27
------INS VariableDeclarationFragment@@authorizationRequest=new DefaultAuthorizationRequest(parameters) @TO@ VariableDeclarationStatement@@DefaultAuthorizationRequest authorizationRequest=new DefaultAuthorizationRequest(parameters); @AT@ 3048 @LENGTH@ 66
---------INS SimpleName@@authorizationRequest @TO@ VariableDeclarationFragment@@authorizationRequest=new DefaultAuthorizationRequest(parameters) @AT@ 3048 @LENGTH@ 20
---------INS ClassInstanceCreation@@DefaultAuthorizationRequest[parameters] @TO@ VariableDeclarationFragment@@authorizationRequest=new DefaultAuthorizationRequest(parameters) @AT@ 3071 @LENGTH@ 43
------------INS New@@new @TO@ ClassInstanceCreation@@DefaultAuthorizationRequest[parameters] @AT@ 3071 @LENGTH@ 3
------------INS SimpleType@@DefaultAuthorizationRequest @TO@ ClassInstanceCreation@@DefaultAuthorizationRequest[parameters] @AT@ 3075 @LENGTH@ 27
------------INS SimpleName@@parameters @TO@ ClassInstanceCreation@@DefaultAuthorizationRequest[parameters] @AT@ 3103 @LENGTH@ 10
---INS ExpressionStatement@@MethodInvocation:assertEquals("testing",authorizationRequest.getAuthorizationParameters().get("password")) @TO@ MethodDeclaration@@public, void, MethodName:testPasswordSetAndRemovedFromParameters, Exception,  @AT@ 3118 @LENGTH@ 91
------INS MethodInvocation@@assertEquals("testing",authorizationRequest.getAuthorizationParameters().get("password")) @TO@ ExpressionStatement@@MethodInvocation:assertEquals("testing",authorizationRequest.getAuthorizationParameters().get("password")) @AT@ 3118 @LENGTH@ 90
---------INS SimpleName@@MethodName:assertEquals:["testing", authorizationRequest.getAuthorizationParameters().get("password")] @TO@ MethodInvocation@@assertEquals("testing",authorizationRequest.getAuthorizationParameters().get("password")) @AT@ 3118 @LENGTH@ 90
------------INS StringLiteral@@"testing" @TO@ SimpleName@@MethodName:assertEquals:["testing", authorizationRequest.getAuthorizationParameters().get("password")] @AT@ 3131 @LENGTH@ 9
------------INS MethodInvocation@@authorizationRequest.getAuthorizationParameters().get("password") @TO@ SimpleName@@MethodName:assertEquals:["testing", authorizationRequest.getAuthorizationParameters().get("password")] @AT@ 3142 @LENGTH@ 65
---------------INS MethodInvocation@@MethodName:getAuthorizationParameters:[] @TO@ MethodInvocation@@authorizationRequest.getAuthorizationParameters().get("password") @AT@ 3142 @LENGTH@ 49
---------------INS SimpleName@@Name:authorizationRequest @TO@ MethodInvocation@@authorizationRequest.getAuthorizationParameters().get("password") @AT@ 3142 @LENGTH@ 20
---------------INS SimpleName@@MethodName:get:["password"] @TO@ MethodInvocation@@authorizationRequest.getAuthorizationParameters().get("password") @AT@ 3192 @LENGTH@ 15
------------------INS StringLiteral@@"password" @TO@ SimpleName@@MethodName:get:["password"] @AT@ 3196 @LENGTH@ 10
---INS ExpressionStatement@@MethodInvocation:authorizationRequest.remove(Arrays.asList("password")) @TO@ MethodDeclaration@@public, void, MethodName:testPasswordSetAndRemovedFromParameters, Exception,  @AT@ 3213 @LENGTH@ 55
------INS MethodInvocation@@authorizationRequest.remove(Arrays.asList("password")) @TO@ ExpressionStatement@@MethodInvocation:authorizationRequest.remove(Arrays.asList("password")) @AT@ 3213 @LENGTH@ 54
---------INS SimpleName@@Name:authorizationRequest @TO@ MethodInvocation@@authorizationRequest.remove(Arrays.asList("password")) @AT@ 3213 @LENGTH@ 20
---------INS SimpleName@@MethodName:remove:[Arrays.asList("password")] @TO@ MethodInvocation@@authorizationRequest.remove(Arrays.asList("password")) @AT@ 3234 @LENGTH@ 33
------------INS MethodInvocation@@Arrays.asList("password") @TO@ SimpleName@@MethodName:remove:[Arrays.asList("password")] @AT@ 3241 @LENGTH@ 25
---------------INS SimpleName@@Name:Arrays @TO@ MethodInvocation@@Arrays.asList("password") @AT@ 3241 @LENGTH@ 6
---------------INS SimpleName@@MethodName:asList:["password"] @TO@ MethodInvocation@@Arrays.asList("password") @AT@ 3248 @LENGTH@ 18
------------------INS StringLiteral@@"password" @TO@ SimpleName@@MethodName:asList:["password"] @AT@ 3255 @LENGTH@ 10
---INS ExpressionStatement@@MethodInvocation:assertNotNull(authorizationRequest.getAuthorizationParameters().get("username")) @TO@ MethodDeclaration@@public, void, MethodName:testPasswordSetAndRemovedFromParameters, Exception,  @AT@ 3271 @LENGTH@ 81
------INS MethodInvocation@@assertNotNull(authorizationRequest.getAuthorizationParameters().get("username")) @TO@ ExpressionStatement@@MethodInvocation:assertNotNull(authorizationRequest.getAuthorizationParameters().get("username")) @AT@ 3271 @LENGTH@ 80
---------INS SimpleName@@MethodName:assertNotNull:[authorizationRequest.getAuthorizationParameters().get("username")] @TO@ MethodInvocation@@assertNotNull(authorizationRequest.getAuthorizationParameters().get("username")) @AT@ 3271 @LENGTH@ 80
------------INS MethodInvocation@@authorizationRequest.getAuthorizationParameters().get("username") @TO@ SimpleName@@MethodName:assertNotNull:[authorizationRequest.getAuthorizationParameters().get("username")] @AT@ 3285 @LENGTH@ 65
---------------INS MethodInvocation@@MethodName:getAuthorizationParameters:[] @TO@ MethodInvocation@@authorizationRequest.getAuthorizationParameters().get("username") @AT@ 3285 @LENGTH@ 49
---------------INS SimpleName@@Name:authorizationRequest @TO@ MethodInvocation@@authorizationRequest.getAuthorizationParameters().get("username") @AT@ 3285 @LENGTH@ 20
---------------INS SimpleName@@MethodName:get:["username"] @TO@ MethodInvocation@@authorizationRequest.getAuthorizationParameters().get("username") @AT@ 3335 @LENGTH@ 15
------------------INS StringLiteral@@"username" @TO@ SimpleName@@MethodName:get:["username"] @AT@ 3339 @LENGTH@ 10
---INS ExpressionStatement@@MethodInvocation:assertNull(authorizationRequest.getAuthorizationParameters().get("password")) @TO@ MethodDeclaration@@public, void, MethodName:testPasswordSetAndRemovedFromParameters, Exception,  @AT@ 3355 @LENGTH@ 78
------INS MethodInvocation@@assertNull(authorizationRequest.getAuthorizationParameters().get("password")) @TO@ ExpressionStatement@@MethodInvocation:assertNull(authorizationRequest.getAuthorizationParameters().get("password")) @AT@ 3355 @LENGTH@ 77
---------INS SimpleName@@MethodName:assertNull:[authorizationRequest.getAuthorizationParameters().get("password")] @TO@ MethodInvocation@@assertNull(authorizationRequest.getAuthorizationParameters().get("password")) @AT@ 3355 @LENGTH@ 77
------------INS MethodInvocation@@authorizationRequest.getAuthorizationParameters().get("password") @TO@ SimpleName@@MethodName:assertNull:[authorizationRequest.getAuthorizationParameters().get("password")] @AT@ 3366 @LENGTH@ 65
---------------INS MethodInvocation@@MethodName:getAuthorizationParameters:[] @TO@ MethodInvocation@@authorizationRequest.getAuthorizationParameters().get("password") @AT@ 3366 @LENGTH@ 49
---------------INS SimpleName@@Name:authorizationRequest @TO@ MethodInvocation@@authorizationRequest.getAuthorizationParameters().get("password") @AT@ 3366 @LENGTH@ 20
---------------INS SimpleName@@MethodName:get:["password"] @TO@ MethodInvocation@@authorizationRequest.getAuthorizationParameters().get("password") @AT@ 3416 @LENGTH@ 15
------------------INS StringLiteral@@"password" @TO@ SimpleName@@MethodName:get:["password"] @AT@ 3420 @LENGTH@ 10


UPD MethodDeclaration@@public, TransformedOperation, MethodName:transformOperation, final TransformationContext context, final PathAddress address, final ModelNode original,  @TO@ public, TransformedOperation, MethodName:transformOperation, final TransformationContext context, final PathAddress address, final ModelNode original, OperationFailedException,  @AT@ 1910 @LENGTH@ 476
---INS SimpleType@@OperationFailedException @TO@ MethodDeclaration@@public, TransformedOperation, MethodName:transformOperation, final TransformationContext context, final PathAddress address, final ModelNode original,  @AT@ 2111 @LENGTH@ 24
---DEL ReturnStatement@@ClassInstanceCreation:new TransformedOperation(operation,OperationResultTransformer.ORIGINAL_RESULT) @AT@ 2293 @LENGTH@ 87
------DEL ClassInstanceCreation@@TransformedOperation[operation, OperationResultTransformer.ORIGINAL_RESULT] @AT@ 2300 @LENGTH@ 79
---------DEL New@@new @AT@ 2300 @LENGTH@ 3
---------DEL SimpleType@@TransformedOperation @AT@ 2304 @LENGTH@ 20
---------DEL SimpleName@@operation @AT@ 2325 @LENGTH@ 9
---------DEL QualifiedName@@OperationResultTransformer.ORIGINAL_RESULT @AT@ 2336 @LENGTH@ 42
---INS VariableDeclarationStatement@@final String operationName=operation.get(ModelDescriptionConstants.OP).asString(); @TO@ MethodDeclaration@@public, TransformedOperation, MethodName:transformOperation, final TransformationContext context, final PathAddress address, final ModelNode original,  @AT@ 2456 @LENGTH@ 84
------INS Modifier@@final @TO@ VariableDeclarationStatement@@final String operationName=operation.get(ModelDescriptionConstants.OP).asString(); @AT@ 2456 @LENGTH@ 5
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@final String operationName=operation.get(ModelDescriptionConstants.OP).asString(); @AT@ 2462 @LENGTH@ 6
------INS VariableDeclarationFragment@@operationName=operation.get(ModelDescriptionConstants.OP).asString() @TO@ VariableDeclarationStatement@@final String operationName=operation.get(ModelDescriptionConstants.OP).asString(); @AT@ 2469 @LENGTH@ 70
---------INS SimpleName@@operationName @TO@ VariableDeclarationFragment@@operationName=operation.get(ModelDescriptionConstants.OP).asString() @AT@ 2469 @LENGTH@ 13
---------INS MethodInvocation@@operation.get(ModelDescriptionConstants.OP).asString() @TO@ VariableDeclarationFragment@@operationName=operation.get(ModelDescriptionConstants.OP).asString() @AT@ 2485 @LENGTH@ 54
------------INS MethodInvocation@@MethodName:get:[ModelDescriptionConstants.OP] @TO@ MethodInvocation@@operation.get(ModelDescriptionConstants.OP).asString() @AT@ 2485 @LENGTH@ 43
---------------INS QualifiedName@@ModelDescriptionConstants.OP @TO@ MethodInvocation@@MethodName:get:[ModelDescriptionConstants.OP] @AT@ 2499 @LENGTH@ 28
------------------MOV SimpleName@@OperationResultTransformer @TO@ QualifiedName@@ModelDescriptionConstants.OP @AT@ 2336 @LENGTH@ 26
------------------MOV SimpleName@@ORIGINAL_RESULT @TO@ QualifiedName@@ModelDescriptionConstants.OP @AT@ 2363 @LENGTH@ 15
------------INS SimpleName@@Name:operation @TO@ MethodInvocation@@operation.get(ModelDescriptionConstants.OP).asString() @AT@ 2485 @LENGTH@ 9
------------INS SimpleName@@MethodName:asString:[] @TO@ MethodInvocation@@operation.get(ModelDescriptionConstants.OP).asString() @AT@ 2529 @LENGTH@ 10
---INS VariableDeclarationStatement@@final OperationTransformer aliasTransformer=context.getTarget().resolveTransformer(transformedAddress,operationName); @TO@ MethodDeclaration@@public, TransformedOperation, MethodName:transformOperation, final TransformationContext context, final PathAddress address, final ModelNode original,  @AT@ 2549 @LENGTH@ 120
------INS Modifier@@final @TO@ VariableDeclarationStatement@@final OperationTransformer aliasTransformer=context.getTarget().resolveTransformer(transformedAddress,operationName); @AT@ 2549 @LENGTH@ 5
------INS SimpleType@@OperationTransformer @TO@ VariableDeclarationStatement@@final OperationTransformer aliasTransformer=context.getTarget().resolveTransformer(transformedAddress,operationName); @AT@ 2555 @LENGTH@ 20
------INS VariableDeclarationFragment@@aliasTransformer=context.getTarget().resolveTransformer(transformedAddress,operationName) @TO@ VariableDeclarationStatement@@final OperationTransformer aliasTransformer=context.getTarget().resolveTransformer(transformedAddress,operationName); @AT@ 2576 @LENGTH@ 92
---------INS SimpleName@@aliasTransformer @TO@ VariableDeclarationFragment@@aliasTransformer=context.getTarget().resolveTransformer(transformedAddress,operationName) @AT@ 2576 @LENGTH@ 16
---------INS MethodInvocation@@context.getTarget().resolveTransformer(transformedAddress,operationName) @TO@ VariableDeclarationFragment@@aliasTransformer=context.getTarget().resolveTransformer(transformedAddress,operationName) @AT@ 2595 @LENGTH@ 73
------------INS MethodInvocation@@MethodName:getTarget:[] @TO@ MethodInvocation@@context.getTarget().resolveTransformer(transformedAddress,operationName) @AT@ 2595 @LENGTH@ 19
------------INS SimpleName@@Name:context @TO@ MethodInvocation@@context.getTarget().resolveTransformer(transformedAddress,operationName) @AT@ 2595 @LENGTH@ 7
------------INS SimpleName@@MethodName:resolveTransformer:[transformedAddress, operationName] @TO@ MethodInvocation@@context.getTarget().resolveTransformer(transformedAddress,operationName) @AT@ 2615 @LENGTH@ 53
---------------INS SimpleName@@transformedAddress @TO@ SimpleName@@MethodName:resolveTransformer:[transformedAddress, operationName] @AT@ 2634 @LENGTH@ 18
---------------INS SimpleName@@operationName @TO@ SimpleName@@MethodName:resolveTransformer:[transformedAddress, operationName] @AT@ 2654 @LENGTH@ 13
---INS ReturnStatement@@MethodInvocation:aliasTransformer.transformOperation(context,transformedAddress,operation) @TO@ MethodDeclaration@@public, TransformedOperation, MethodName:transformOperation, final TransformationContext context, final PathAddress address, final ModelNode original,  @AT@ 2678 @LENGTH@ 83
------INS MethodInvocation@@aliasTransformer.transformOperation(context,transformedAddress,operation) @TO@ ReturnStatement@@MethodInvocation:aliasTransformer.transformOperation(context,transformedAddress,operation) @AT@ 2685 @LENGTH@ 75
---------INS SimpleName@@Name:aliasTransformer @TO@ MethodInvocation@@aliasTransformer.transformOperation(context,transformedAddress,operation) @AT@ 2685 @LENGTH@ 16
---------INS SimpleName@@MethodName:transformOperation:[context, transformedAddress, operation] @TO@ MethodInvocation@@aliasTransformer.transformOperation(context,transformedAddress,operation) @AT@ 2702 @LENGTH@ 58
------------INS SimpleName@@context @TO@ SimpleName@@MethodName:transformOperation:[context, transformedAddress, operation] @AT@ 2721 @LENGTH@ 7
------------INS SimpleName@@transformedAddress @TO@ SimpleName@@MethodName:transformOperation:[context, transformedAddress, operation] @AT@ 2730 @LENGTH@ 18
------------INS SimpleName@@operation @TO@ SimpleName@@MethodName:transformOperation:[context, transformedAddress, operation] @AT@ 2750 @LENGTH@ 9


UPD ExpressionStatement@@MethodInvocation:context.getLogger().logAttributeWarning(address,SLOT_ATTRIBUTE_NAME,MESSAGES.invalidJSFSlotValue(slot.asString())) @TO@ MethodInvocation:context.getLogger().logAttributeWarning(address,MESSAGES.invalidJSFSlotValue(slot.asString()),SLOT_ATTRIBUTE_NAME) @AT@ 3683 @LENGTH@ 117
---UPD MethodInvocation@@context.getLogger().logAttributeWarning(address,SLOT_ATTRIBUTE_NAME,MESSAGES.invalidJSFSlotValue(slot.asString())) @TO@ context.getLogger().logAttributeWarning(address,MESSAGES.invalidJSFSlotValue(slot.asString()),SLOT_ATTRIBUTE_NAME) @AT@ 3683 @LENGTH@ 116
------UPD SimpleName@@MethodName:logAttributeWarning:[address, SLOT_ATTRIBUTE_NAME, MESSAGES.invalidJSFSlotValue(slot.asString())] @TO@ MethodName:logAttributeWarning:[address, MESSAGES.invalidJSFSlotValue(slot.asString()), SLOT_ATTRIBUTE_NAME] @AT@ 3703 @LENGTH@ 96
---------MOV SimpleName@@SLOT_ATTRIBUTE_NAME @TO@ SimpleName@@MethodName:logAttributeWarning:[address, SLOT_ATTRIBUTE_NAME, MESSAGES.invalidJSFSlotValue(slot.asString())] @AT@ 3732 @LENGTH@ 19


UPD ExpressionStatement@@MethodInvocation:assertTrue(token.getPrincipal() instanceof ConnectionData) @TO@ MethodInvocation:assertTrue(token.getConnection() instanceof Connection) @AT@ 4019 @LENGTH@ 59
---UPD MethodInvocation@@assertTrue(token.getPrincipal() instanceof ConnectionData) @TO@ assertTrue(token.getConnection() instanceof Connection) @AT@ 4019 @LENGTH@ 58
------UPD SimpleName@@MethodName:assertTrue:[token.getPrincipal() instanceof ConnectionData] @TO@ MethodName:assertTrue:[token.getConnection() instanceof Connection] @AT@ 4019 @LENGTH@ 58
---------UPD InstanceofExpression@@token.getPrincipal() instanceof ConnectionData @TO@ token.getConnection() instanceof Connection @AT@ 4030 @LENGTH@ 46
------------UPD MethodInvocation@@token.getPrincipal() @TO@ token.getConnection() @AT@ 4030 @LENGTH@ 20
---------------UPD SimpleName@@MethodName:getPrincipal:[] @TO@ MethodName:getConnection:[] @AT@ 4036 @LENGTH@ 14
------------UPD SimpleType@@ConnectionData @TO@ Connection @AT@ 4062 @LENGTH@ 14


MOV MethodDeclaration@@protected, RouteBuilder, MethodName:createRouteBuilder, Exception,  @TO@ TypeDeclaration@@[public]EndpointCompletionTest, ManagementTestSupport @AT@ 3934 @LENGTH@ 206


UPD FieldDeclaration@@private, static, final, long, [serialVersionUID=1L] @TO@ private, static, final, long, [serialVersionUID=-2565832100451369997L] @AT@ 976 @LENGTH@ 48
---UPD VariableDeclarationFragment@@serialVersionUID=1L @TO@ serialVersionUID=-2565832100451369997L @AT@ 1002 @LENGTH@ 21
------INS PrefixExpression@@-2565832100451369997L @TO@ VariableDeclarationFragment@@serialVersionUID=1L @AT@ 1021 @LENGTH@ 21
---------INS Operator@@- @TO@ PrefixExpression@@-2565832100451369997L @AT@ 1021 @LENGTH@ 1
---------INS NumberLiteral@@2565832100451369997L @TO@ PrefixExpression@@-2565832100451369997L @AT@ 1022 @LENGTH@ 20
------DEL NumberLiteral@@1L @AT@ 1021 @LENGTH@ 2


UPD Block@@ThenBody:{  String clusterName=getClusterName(dir,childDir);  HashMap<String,ClusterNode> cluster=clusters.get(clusterName);  if (cluster == null) {    cluster=new HashMap<String,ClusterNode>();    clusters.put(clusterName,cluster);  }  ObjectMapper mapper=new ObjectMapper();  Map<String,Object> map=mapper.readValue(data,HashMap.class);  Object id=value(map,"id","container");  Object agent=value(map,"agent");  List services=(List)value(map,"services");  ClusterNode node=cluster.get(id);  if (node == null) {    node=new ClusterNode();    cluster.put(id.toString(),node);  }  if (services != null) {    if (!services.isEmpty()) {      for (      Object service : services) {        node.services.add(ZooKeeperUtils.getSubstitutedData(getZooKeeper(),service.toString()));      }      node.masters.add(agent);    } else {      node.slaves.add(agent);    }  } else {    node.slaves.add(agent);  }} @TO@ ThenBody:{  String clusterName=getClusterName(dir,childDir);  HashMap<String,ClusterNode> cluster=clusters.get(clusterName);  if (cluster == null) {    cluster=new HashMap<String,ClusterNode>();    clusters.put(clusterName,cluster);  }  ObjectMapper mapper=new ObjectMapper();  Map<String,Object> map=mapper.readValue(data,HashMap.class);  ClusterNode node=null;  Object id=value(map,"id","container");  if (id != null) {    Object agent=value(map,"agent");    List services=(List)value(map,"services");    node=cluster.get(id);    if (node == null) {      node=new ClusterNode();      cluster.put(id.toString(),node);    }    if (services != null) {      if (!services.isEmpty()) {        for (        Object service : services) {          node.services.add(ZooKeeperUtils.getSubstitutedData(getZooKeeper(),service.toString()));        }        node.masters.add(agent);      } else {        node.slaves.add(agent);      }    } else {      node.slaves.add(agent);    }  }} @AT@ 2864 @LENGTH@ 1509
---MOV VariableDeclarationStatement@@Object id=value(map,"id","container"); @TO@ Block@@ThenBody:{  String clusterName=getClusterName(dir,childDir);  HashMap<String,ClusterNode> cluster=clusters.get(clusterName);  if (cluster == null) {    cluster=new HashMap<String,ClusterNode>();    clusters.put(clusterName,cluster);  }  ObjectMapper mapper=new ObjectMapper();  Map<String,Object> map=mapper.readValue(data,HashMap.class);  Object id=value(map,"id","container");  Object agent=value(map,"agent");  List services=(List)value(map,"services");  ClusterNode node=cluster.get(id);  if (node == null) {    node=new ClusterNode();    cluster.put(id.toString(),node);  }  if (services != null) {    if (!services.isEmpty()) {      for (      Object service : services) {        node.services.add(ZooKeeperUtils.getSubstitutedData(getZooKeeper(),service.toString()));      }      node.masters.add(agent);    } else {      node.slaves.add(agent);    }  } else {    node.slaves.add(agent);  }} @AT@ 3388 @LENGTH@ 42
---INS IfStatement@@if (id != null) {  Object agent=value(map,"agent");  List services=(List)value(map,"services");  node=cluster.get(id);  if (node == null) {    node=new ClusterNode();    cluster.put(id.toString(),node);  }  if (services != null) {    if (!services.isEmpty()) {      for (      Object service : services) {        node.services.add(ZooKeeperUtils.getSubstitutedData(getZooKeeper(),service.toString()));      }      node.masters.add(agent);    } else {      node.slaves.add(agent);    }  } else {    node.slaves.add(agent);  }} @TO@ Block@@ThenBody:{  String clusterName=getClusterName(dir,childDir);  HashMap<String,ClusterNode> cluster=clusters.get(clusterName);  if (cluster == null) {    cluster=new HashMap<String,ClusterNode>();    clusters.put(clusterName,cluster);  }  ObjectMapper mapper=new ObjectMapper();  Map<String,Object> map=mapper.readValue(data,HashMap.class);  Object id=value(map,"id","container");  Object agent=value(map,"agent");  List services=(List)value(map,"services");  ClusterNode node=cluster.get(id);  if (node == null) {    node=new ClusterNode();    cluster.put(id.toString(),node);  }  if (services != null) {    if (!services.isEmpty()) {      for (      Object service : services) {        node.services.add(ZooKeeperUtils.getSubstitutedData(getZooKeeper(),service.toString()));      }      node.masters.add(agent);    } else {      node.slaves.add(agent);    }  } else {    node.slaves.add(agent);  }} @AT@ 3497 @LENGTH@ 1027
------INS InfixExpression@@id != null @TO@ IfStatement@@if (id != null) {  Object agent=value(map,"agent");  List services=(List)value(map,"services");  node=cluster.get(id);  if (node == null) {    node=new ClusterNode();    cluster.put(id.toString(),node);  }  if (services != null) {    if (!services.isEmpty()) {      for (      Object service : services) {        node.services.add(ZooKeeperUtils.getSubstitutedData(getZooKeeper(),service.toString()));      }      node.masters.add(agent);    } else {      node.slaves.add(agent);    }  } else {    node.slaves.add(agent);  }} @AT@ 3501 @LENGTH@ 10
---------INS SimpleName@@id @TO@ InfixExpression@@id != null @AT@ 3501 @LENGTH@ 2
---------INS Operator@@!= @TO@ InfixExpression@@id != null @AT@ 3503 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@id != null @AT@ 3507 @LENGTH@ 4
------INS Block@@ThenBody:{  Object agent=value(map,"agent");  List services=(List)value(map,"services");  node=cluster.get(id);  if (node == null) {    node=new ClusterNode();    cluster.put(id.toString(),node);  }  if (services != null) {    if (!services.isEmpty()) {      for (      Object service : services) {        node.services.add(ZooKeeperUtils.getSubstitutedData(getZooKeeper(),service.toString()));      }      node.masters.add(agent);    } else {      node.slaves.add(agent);    }  } else {    node.slaves.add(agent);  }} @TO@ IfStatement@@if (id != null) {  Object agent=value(map,"agent");  List services=(List)value(map,"services");  node=cluster.get(id);  if (node == null) {    node=new ClusterNode();    cluster.put(id.toString(),node);  }  if (services != null) {    if (!services.isEmpty()) {      for (      Object service : services) {        node.services.add(ZooKeeperUtils.getSubstitutedData(getZooKeeper(),service.toString()));      }      node.masters.add(agent);    } else {      node.slaves.add(agent);    }  } else {    node.slaves.add(agent);  }} @AT@ 3513 @LENGTH@ 1011
---------MOV VariableDeclarationStatement@@Object agent=value(map,"agent"); @TO@ Block@@ThenBody:{  Object agent=value(map,"agent");  List services=(List)value(map,"services");  node=cluster.get(id);  if (node == null) {    node=new ClusterNode();    cluster.put(id.toString(),node);  }  if (services != null) {    if (!services.isEmpty()) {      for (      Object service : services) {        node.services.add(ZooKeeperUtils.getSubstitutedData(getZooKeeper(),service.toString()));      }      node.masters.add(agent);    } else {      node.slaves.add(agent);    }  } else {    node.slaves.add(agent);  }} @AT@ 3451 @LENGTH@ 35
---------MOV VariableDeclarationStatement@@List services=(List)value(map,"services"); @TO@ Block@@ThenBody:{  Object agent=value(map,"agent");  List services=(List)value(map,"services");  node=cluster.get(id);  if (node == null) {    node=new ClusterNode();    cluster.put(id.toString(),node);  }  if (services != null) {    if (!services.isEmpty()) {      for (      Object service : services) {        node.services.add(ZooKeeperUtils.getSubstitutedData(getZooKeeper(),service.toString()));      }      node.masters.add(agent);    } else {      node.slaves.add(agent);    }  } else {    node.slaves.add(agent);  }} @AT@ 3507 @LENGTH@ 46
---------MOV IfStatement@@if (node == null) {  node=new ClusterNode();  cluster.put(id.toString(),node);} @TO@ Block@@ThenBody:{  Object agent=value(map,"agent");  List services=(List)value(map,"services");  node=cluster.get(id);  if (node == null) {    node=new ClusterNode();    cluster.put(id.toString(),node);  }  if (services != null) {    if (!services.isEmpty()) {      for (      Object service : services) {        node.services.add(ZooKeeperUtils.getSubstitutedData(getZooKeeper(),service.toString()));      }      node.masters.add(agent);    } else {      node.slaves.add(agent);    }  } else {    node.slaves.add(agent);  }} @AT@ 3631 @LENGTH@ 149
---------INS ExpressionStatement@@Assignment:node=cluster.get(id) @TO@ Block@@ThenBody:{  Object agent=value(map,"agent");  List services=(List)value(map,"services");  node=cluster.get(id);  if (node == null) {    node=new ClusterNode();    cluster.put(id.toString(),node);  }  if (services != null) {    if (!services.isEmpty()) {      for (      Object service : services) {        node.services.add(ZooKeeperUtils.getSubstitutedData(getZooKeeper(),service.toString()));      }      node.masters.add(agent);    } else {      node.slaves.add(agent);    }  } else {    node.slaves.add(agent);  }} @AT@ 3671 @LENGTH@ 23
------------INS Assignment@@node=cluster.get(id) @TO@ ExpressionStatement@@Assignment:node=cluster.get(id) @AT@ 3671 @LENGTH@ 22
---------------MOV MethodInvocation@@cluster.get(id) @TO@ Assignment@@node=cluster.get(id) @AT@ 3594 @LENGTH@ 15
---------------INS SimpleName@@node @TO@ Assignment@@node=cluster.get(id) @AT@ 3671 @LENGTH@ 4
---------------INS Operator@@= @TO@ Assignment@@node=cluster.get(id) @AT@ 3675 @LENGTH@ 1
---------MOV IfStatement@@if (services != null) {  if (!services.isEmpty()) {    for (    Object service : services) {      node.services.add(ZooKeeperUtils.getSubstitutedData(getZooKeeper(),service.toString()));    }    node.masters.add(agent);  } else {    node.slaves.add(agent);  }} else {  node.slaves.add(agent);} @TO@ Block@@ThenBody:{  Object agent=value(map,"agent");  List services=(List)value(map,"services");  node=cluster.get(id);  if (node == null) {    node=new ClusterNode();    cluster.put(id.toString(),node);  }  if (services != null) {    if (!services.isEmpty()) {      for (      Object service : services) {        node.services.add(ZooKeeperUtils.getSubstitutedData(getZooKeeper(),service.toString()));      }      node.masters.add(agent);    } else {      node.slaves.add(agent);    }  } else {    node.slaves.add(agent);  }} @AT@ 3802 @LENGTH@ 552
---UPD VariableDeclarationStatement@@ClusterNode node=cluster.get(id); @TO@ ClusterNode node=null; @AT@ 3575 @LENGTH@ 35
------UPD VariableDeclarationFragment@@node=cluster.get(id) @TO@ node=null @AT@ 3587 @LENGTH@ 22
---------INS NullLiteral@@null @TO@ VariableDeclarationFragment@@node=cluster.get(id) @AT@ 3407 @LENGTH@ 4


UPD VariableDeclarationStatement@@Map map=new HashMap(); @TO@ Map<String,Object> map=new HashMap<String,Object>(); @AT@ 2029 @LENGTH@ 24
---INS ParameterizedType@@Map<String,Object> @TO@ VariableDeclarationStatement@@Map map=new HashMap(); @AT@ 2029 @LENGTH@ 19
------INS SimpleType@@Map @TO@ ParameterizedType@@Map<String,Object> @AT@ 2029 @LENGTH@ 3
------INS SimpleType@@String @TO@ ParameterizedType@@Map<String,Object> @AT@ 2033 @LENGTH@ 6
------INS SimpleType@@Object @TO@ ParameterizedType@@Map<String,Object> @AT@ 2041 @LENGTH@ 6
---DEL SimpleType@@Map @AT@ 2029 @LENGTH@ 3
---UPD VariableDeclarationFragment@@map=new HashMap() @TO@ map=new HashMap<String,Object>() @AT@ 2033 @LENGTH@ 19
------UPD ClassInstanceCreation@@HashMap[] @TO@ HashMap<String,Object>[] @AT@ 2039 @LENGTH@ 13
---------DEL SimpleType@@HashMap @AT@ 2043 @LENGTH@ 7
---------INS ParameterizedType@@HashMap<String,Object> @TO@ ClassInstanceCreation@@HashMap[] @AT@ 2059 @LENGTH@ 23
------------INS SimpleType@@HashMap @TO@ ParameterizedType@@HashMap<String,Object> @AT@ 2059 @LENGTH@ 7
------------INS SimpleType@@String @TO@ ParameterizedType@@HashMap<String,Object> @AT@ 2067 @LENGTH@ 6
------------INS SimpleType@@Object @TO@ ParameterizedType@@HashMap<String,Object> @AT@ 2075 @LENGTH@ 6


INS MethodDeclaration@@public, void, MethodName:testMultiDiscard, Exception,  @TO@ TypeDeclaration@@[public]JRedisConnectionIntegrationTests, AbstractConnectionIntegrationTests @AT@ 2216 @LENGTH@ 80
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testMultiDiscard, Exception,  @AT@ 2216 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testMultiDiscard, Exception,  @AT@ 2223 @LENGTH@ 4
---INS SimpleName@@MethodName:testMultiDiscard @TO@ MethodDeclaration@@public, void, MethodName:testMultiDiscard, Exception,  @AT@ 2228 @LENGTH@ 16
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:testMultiDiscard, Exception,  @AT@ 2254 @LENGTH@ 9
---INS ExpressionStatement@@SuperMethodInvocation:super.testMultiDiscard() @TO@ MethodDeclaration@@public, void, MethodName:testMultiDiscard, Exception,  @AT@ 2268 @LENGTH@ 25
------INS SuperMethodInvocation@@super.testMultiDiscard() @TO@ ExpressionStatement@@SuperMethodInvocation:super.testMultiDiscard() @AT@ 2268 @LENGTH@ 24
---------INS SimpleName@@MethodName:testMultiDiscard:[] @TO@ SuperMethodInvocation@@super.testMultiDiscard() @AT@ 2274 @LENGTH@ 16


UPD VariableDeclarationStatement@@int defaultPageSize=getSpecificPropertyOrDefaultFromValue(defaults,"size"); @TO@ Integer defaultPageSize=getSpecificPropertyOrDefaultFromValue(defaults,"size"); @AT@ 10780 @LENGTH@ 78
---DEL PrimitiveType@@int @AT@ 10780 @LENGTH@ 3
---INS SimpleType@@Integer @TO@ VariableDeclarationStatement@@int defaultPageSize=getSpecificPropertyOrDefaultFromValue(defaults,"size"); @AT@ 10784 @LENGTH@ 7


INS MethodDeclaration@@public, void, MethodName:testHashIncrDecrBy,  @TO@ TypeDeclaration@@[public]JedisConnectionIntegrationTests, AbstractConnectionIntegrationTests @AT@ 2611 @LENGTH@ 496
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testHashIncrDecrBy,  @AT@ 2611 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testHashIncrDecrBy,  @AT@ 2618 @LENGTH@ 4
---INS SimpleName@@MethodName:testHashIncrDecrBy @TO@ MethodDeclaration@@public, void, MethodName:testHashIncrDecrBy,  @AT@ 2623 @LENGTH@ 18
---INS VariableDeclarationStatement@@byte[] key="test.hcount".getBytes(); @TO@ MethodDeclaration@@public, void, MethodName:testHashIncrDecrBy,  @AT@ 2648 @LENGTH@ 38
------INS ArrayType@@byte[] @TO@ VariableDeclarationStatement@@byte[] key="test.hcount".getBytes(); @AT@ 2648 @LENGTH@ 6
---------INS PrimitiveType@@byte @TO@ ArrayType@@byte[] @AT@ 2648 @LENGTH@ 4
------INS VariableDeclarationFragment@@key="test.hcount".getBytes() @TO@ VariableDeclarationStatement@@byte[] key="test.hcount".getBytes(); @AT@ 2655 @LENGTH@ 30
---------INS SimpleName@@key @TO@ VariableDeclarationFragment@@key="test.hcount".getBytes() @AT@ 2655 @LENGTH@ 3
---------INS MethodInvocation@@"test.hcount".getBytes() @TO@ VariableDeclarationFragment@@key="test.hcount".getBytes() @AT@ 2661 @LENGTH@ 24
------------INS StringLiteral@@"test.hcount" @TO@ MethodInvocation@@"test.hcount".getBytes() @AT@ 2661 @LENGTH@ 13
------------INS SimpleName@@MethodName:getBytes:[] @TO@ MethodInvocation@@"test.hcount".getBytes() @AT@ 2675 @LENGTH@ 10
---INS VariableDeclarationStatement@@byte[] hkey="hashkey".getBytes(); @TO@ MethodDeclaration@@public, void, MethodName:testHashIncrDecrBy,  @AT@ 2689 @LENGTH@ 35
------INS ArrayType@@byte[] @TO@ VariableDeclarationStatement@@byte[] hkey="hashkey".getBytes(); @AT@ 2689 @LENGTH@ 6
---------INS PrimitiveType@@byte @TO@ ArrayType@@byte[] @AT@ 2689 @LENGTH@ 4
------INS VariableDeclarationFragment@@hkey="hashkey".getBytes() @TO@ VariableDeclarationStatement@@byte[] hkey="hashkey".getBytes(); @AT@ 2696 @LENGTH@ 27
---------INS SimpleName@@hkey @TO@ VariableDeclarationFragment@@hkey="hashkey".getBytes() @AT@ 2696 @LENGTH@ 4
---------INS MethodInvocation@@"hashkey".getBytes() @TO@ VariableDeclarationFragment@@hkey="hashkey".getBytes() @AT@ 2703 @LENGTH@ 20
------------INS StringLiteral@@"hashkey" @TO@ MethodInvocation@@"hashkey".getBytes() @AT@ 2703 @LENGTH@ 9
------------INS SimpleName@@MethodName:getBytes:[] @TO@ MethodInvocation@@"hashkey".getBytes() @AT@ 2713 @LENGTH@ 10
---INS VariableDeclarationStatement@@long largeNumber=0x123456789L; @TO@ MethodDeclaration@@public, void, MethodName:testHashIncrDecrBy,  @AT@ 2728 @LENGTH@ 32
------INS PrimitiveType@@long @TO@ VariableDeclarationStatement@@long largeNumber=0x123456789L; @AT@ 2728 @LENGTH@ 4
------INS VariableDeclarationFragment@@largeNumber=0x123456789L @TO@ VariableDeclarationStatement@@long largeNumber=0x123456789L; @AT@ 2733 @LENGTH@ 26
---------INS SimpleName@@largeNumber @TO@ VariableDeclarationFragment@@largeNumber=0x123456789L @AT@ 2733 @LENGTH@ 11
---------INS NumberLiteral@@0x123456789L @TO@ VariableDeclarationFragment@@largeNumber=0x123456789L @AT@ 2747 @LENGTH@ 12
---INS ExpressionStatement@@MethodInvocation:connection.hSet(key,hkey,"0".getBytes()) @TO@ MethodDeclaration@@public, void, MethodName:testHashIncrDecrBy,  @AT@ 2775 @LENGTH@ 43
------INS MethodInvocation@@connection.hSet(key,hkey,"0".getBytes()) @TO@ ExpressionStatement@@MethodInvocation:connection.hSet(key,hkey,"0".getBytes()) @AT@ 2775 @LENGTH@ 42
---------INS SimpleName@@Name:connection @TO@ MethodInvocation@@connection.hSet(key,hkey,"0".getBytes()) @AT@ 2775 @LENGTH@ 10
---------INS SimpleName@@MethodName:hSet:[key, hkey, "0".getBytes()] @TO@ MethodInvocation@@connection.hSet(key,hkey,"0".getBytes()) @AT@ 2786 @LENGTH@ 31
------------INS SimpleName@@key @TO@ SimpleName@@MethodName:hSet:[key, hkey, "0".getBytes()] @AT@ 2791 @LENGTH@ 3
------------INS SimpleName@@hkey @TO@ SimpleName@@MethodName:hSet:[key, hkey, "0".getBytes()] @AT@ 2796 @LENGTH@ 4
------------INS MethodInvocation@@"0".getBytes() @TO@ SimpleName@@MethodName:hSet:[key, hkey, "0".getBytes()] @AT@ 2802 @LENGTH@ 14
---------------INS StringLiteral@@"0" @TO@ MethodInvocation@@"0".getBytes() @AT@ 2802 @LENGTH@ 3
---------------INS SimpleName@@MethodName:getBytes:[] @TO@ MethodInvocation@@"0".getBytes() @AT@ 2806 @LENGTH@ 10
---INS ExpressionStatement@@MethodInvocation:connection.hIncrBy(key,hkey,largeNumber) @TO@ MethodDeclaration@@public, void, MethodName:testHashIncrDecrBy,  @AT@ 2821 @LENGTH@ 43
------INS MethodInvocation@@connection.hIncrBy(key,hkey,largeNumber) @TO@ ExpressionStatement@@MethodInvocation:connection.hIncrBy(key,hkey,largeNumber) @AT@ 2821 @LENGTH@ 42
---------INS SimpleName@@Name:connection @TO@ MethodInvocation@@connection.hIncrBy(key,hkey,largeNumber) @AT@ 2821 @LENGTH@ 10
---------INS SimpleName@@MethodName:hIncrBy:[key, hkey, largeNumber] @TO@ MethodInvocation@@connection.hIncrBy(key,hkey,largeNumber) @AT@ 2832 @LENGTH@ 31
------------INS SimpleName@@key @TO@ SimpleName@@MethodName:hIncrBy:[key, hkey, largeNumber] @AT@ 2840 @LENGTH@ 3
------------INS SimpleName@@hkey @TO@ SimpleName@@MethodName:hIncrBy:[key, hkey, largeNumber] @AT@ 2845 @LENGTH@ 4
------------INS SimpleName@@largeNumber @TO@ SimpleName@@MethodName:hIncrBy:[key, hkey, largeNumber] @AT@ 2851 @LENGTH@ 11
---INS ExpressionStatement@@MethodInvocation:assertEquals(largeNumber,Long.valueOf(new String(connection.hGet(key,hkey))).longValue()) @TO@ MethodDeclaration@@public, void, MethodName:testHashIncrDecrBy,  @AT@ 2867 @LENGTH@ 92
------INS MethodInvocation@@assertEquals(largeNumber,Long.valueOf(new String(connection.hGet(key,hkey))).longValue()) @TO@ ExpressionStatement@@MethodInvocation:assertEquals(largeNumber,Long.valueOf(new String(connection.hGet(key,hkey))).longValue()) @AT@ 2867 @LENGTH@ 91
---------INS SimpleName@@MethodName:assertEquals:[largeNumber, Long.valueOf(new String(connection.hGet(key,hkey))).longValue()] @TO@ MethodInvocation@@assertEquals(largeNumber,Long.valueOf(new String(connection.hGet(key,hkey))).longValue()) @AT@ 2867 @LENGTH@ 91
------------INS SimpleName@@largeNumber @TO@ SimpleName@@MethodName:assertEquals:[largeNumber, Long.valueOf(new String(connection.hGet(key,hkey))).longValue()] @AT@ 2880 @LENGTH@ 11
------------INS MethodInvocation@@Long.valueOf(new String(connection.hGet(key,hkey))).longValue() @TO@ SimpleName@@MethodName:assertEquals:[largeNumber, Long.valueOf(new String(connection.hGet(key,hkey))).longValue()] @AT@ 2893 @LENGTH@ 64
---------------INS MethodInvocation@@MethodName:valueOf:[new String(connection.hGet(key,hkey))] @TO@ MethodInvocation@@Long.valueOf(new String(connection.hGet(key,hkey))).longValue() @AT@ 2893 @LENGTH@ 52
------------------INS ClassInstanceCreation@@String[connection.hGet(key,hkey)] @TO@ MethodInvocation@@MethodName:valueOf:[new String(connection.hGet(key,hkey))] @AT@ 2906 @LENGTH@ 38
---------------------INS New@@new @TO@ ClassInstanceCreation@@String[connection.hGet(key,hkey)] @AT@ 2906 @LENGTH@ 3
---------------------INS SimpleType@@String @TO@ ClassInstanceCreation@@String[connection.hGet(key,hkey)] @AT@ 2910 @LENGTH@ 6
---------------------INS MethodInvocation@@connection.hGet(key,hkey) @TO@ ClassInstanceCreation@@String[connection.hGet(key,hkey)] @AT@ 2917 @LENGTH@ 26
------------------------INS SimpleName@@Name:connection @TO@ MethodInvocation@@connection.hGet(key,hkey) @AT@ 2917 @LENGTH@ 10
------------------------INS SimpleName@@MethodName:hGet:[key, hkey] @TO@ MethodInvocation@@connection.hGet(key,hkey) @AT@ 2928 @LENGTH@ 15
---------------------------INS SimpleName@@key @TO@ SimpleName@@MethodName:hGet:[key, hkey] @AT@ 2933 @LENGTH@ 3
---------------------------INS SimpleName@@hkey @TO@ SimpleName@@MethodName:hGet:[key, hkey] @AT@ 2938 @LENGTH@ 4
---------------INS SimpleName@@Name:Long @TO@ MethodInvocation@@Long.valueOf(new String(connection.hGet(key,hkey))).longValue() @AT@ 2893 @LENGTH@ 4
---------------INS SimpleName@@MethodName:longValue:[] @TO@ MethodInvocation@@Long.valueOf(new String(connection.hGet(key,hkey))).longValue() @AT@ 2946 @LENGTH@ 11
---INS ExpressionStatement@@MethodInvocation:connection.hIncrBy(key,hkey,-2 * largeNumber) @TO@ MethodDeclaration@@public, void, MethodName:testHashIncrDecrBy,  @AT@ 2962 @LENGTH@ 46
------INS MethodInvocation@@connection.hIncrBy(key,hkey,-2 * largeNumber) @TO@ ExpressionStatement@@MethodInvocation:connection.hIncrBy(key,hkey,-2 * largeNumber) @AT@ 2962 @LENGTH@ 45
---------INS SimpleName@@Name:connection @TO@ MethodInvocation@@connection.hIncrBy(key,hkey,-2 * largeNumber) @AT@ 2962 @LENGTH@ 10
---------INS SimpleName@@MethodName:hIncrBy:[key, hkey, -2 * largeNumber] @TO@ MethodInvocation@@connection.hIncrBy(key,hkey,-2 * largeNumber) @AT@ 2973 @LENGTH@ 34
------------INS SimpleName@@key @TO@ SimpleName@@MethodName:hIncrBy:[key, hkey, -2 * largeNumber] @AT@ 2981 @LENGTH@ 3
------------INS SimpleName@@hkey @TO@ SimpleName@@MethodName:hIncrBy:[key, hkey, -2 * largeNumber] @AT@ 2986 @LENGTH@ 4
------------INS InfixExpression@@-2 * largeNumber @TO@ SimpleName@@MethodName:hIncrBy:[key, hkey, -2 * largeNumber] @AT@ 2992 @LENGTH@ 14
---------------INS PrefixExpression@@-2 @TO@ InfixExpression@@-2 * largeNumber @AT@ 2992 @LENGTH@ 2
------------------INS Operator@@- @TO@ PrefixExpression@@-2 @AT@ 2992 @LENGTH@ 1
------------------INS NumberLiteral@@2 @TO@ PrefixExpression@@-2 @AT@ 2993 @LENGTH@ 1
---------------INS Operator@@* @TO@ InfixExpression@@-2 * largeNumber @AT@ 2994 @LENGTH@ 1
---------------INS SimpleName@@largeNumber @TO@ InfixExpression@@-2 * largeNumber @AT@ 2995 @LENGTH@ 11
---INS ExpressionStatement@@MethodInvocation:assertEquals(-largeNumber,Long.valueOf(new String(connection.hGet(key,hkey))).longValue()) @TO@ MethodDeclaration@@public, void, MethodName:testHashIncrDecrBy,  @AT@ 3011 @LENGTH@ 93
------INS MethodInvocation@@assertEquals(-largeNumber,Long.valueOf(new String(connection.hGet(key,hkey))).longValue()) @TO@ ExpressionStatement@@MethodInvocation:assertEquals(-largeNumber,Long.valueOf(new String(connection.hGet(key,hkey))).longValue()) @AT@ 3011 @LENGTH@ 92
---------INS SimpleName@@MethodName:assertEquals:[-largeNumber, Long.valueOf(new String(connection.hGet(key,hkey))).longValue()] @TO@ MethodInvocation@@assertEquals(-largeNumber,Long.valueOf(new String(connection.hGet(key,hkey))).longValue()) @AT@ 3011 @LENGTH@ 92
------------INS PrefixExpression@@-largeNumber @TO@ SimpleName@@MethodName:assertEquals:[-largeNumber, Long.valueOf(new String(connection.hGet(key,hkey))).longValue()] @AT@ 3024 @LENGTH@ 12
---------------INS Operator@@- @TO@ PrefixExpression@@-largeNumber @AT@ 3024 @LENGTH@ 1
---------------INS SimpleName@@largeNumber @TO@ PrefixExpression@@-largeNumber @AT@ 3025 @LENGTH@ 11
------------INS MethodInvocation@@Long.valueOf(new String(connection.hGet(key,hkey))).longValue() @TO@ SimpleName@@MethodName:assertEquals:[-largeNumber, Long.valueOf(new String(connection.hGet(key,hkey))).longValue()] @AT@ 3038 @LENGTH@ 64
---------------INS MethodInvocation@@MethodName:valueOf:[new String(connection.hGet(key,hkey))] @TO@ MethodInvocation@@Long.valueOf(new String(connection.hGet(key,hkey))).longValue() @AT@ 3038 @LENGTH@ 52
------------------INS ClassInstanceCreation@@String[connection.hGet(key,hkey)] @TO@ MethodInvocation@@MethodName:valueOf:[new String(connection.hGet(key,hkey))] @AT@ 3051 @LENGTH@ 38
---------------------INS New@@new @TO@ ClassInstanceCreation@@String[connection.hGet(key,hkey)] @AT@ 3051 @LENGTH@ 3
---------------------INS SimpleType@@String @TO@ ClassInstanceCreation@@String[connection.hGet(key,hkey)] @AT@ 3055 @LENGTH@ 6
---------------------INS MethodInvocation@@connection.hGet(key,hkey) @TO@ ClassInstanceCreation@@String[connection.hGet(key,hkey)] @AT@ 3062 @LENGTH@ 26
------------------------INS SimpleName@@Name:connection @TO@ MethodInvocation@@connection.hGet(key,hkey) @AT@ 3062 @LENGTH@ 10
------------------------INS SimpleName@@MethodName:hGet:[key, hkey] @TO@ MethodInvocation@@connection.hGet(key,hkey) @AT@ 3073 @LENGTH@ 15
---------------------------INS SimpleName@@key @TO@ SimpleName@@MethodName:hGet:[key, hkey] @AT@ 3078 @LENGTH@ 3
---------------------------INS SimpleName@@hkey @TO@ SimpleName@@MethodName:hGet:[key, hkey] @AT@ 3083 @LENGTH@ 4
---------------INS SimpleName@@Name:Long @TO@ MethodInvocation@@Long.valueOf(new String(connection.hGet(key,hkey))).longValue() @AT@ 3038 @LENGTH@ 4
---------------INS SimpleName@@MethodName:longValue:[] @TO@ MethodInvocation@@Long.valueOf(new String(connection.hGet(key,hkey))).longValue() @AT@ 3091 @LENGTH@ 11


INS MethodDeclaration@@public, void, MethodName:appliesIgnoreCaseOrderingCorrectly,  @TO@ TypeDeclaration@@[public]QueryUtilsUnitTests,  @AT@ 5547 @LENGTH@ 255
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:appliesIgnoreCaseOrderingCorrectly,  @AT@ 5547 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:appliesIgnoreCaseOrderingCorrectly,  @AT@ 5554 @LENGTH@ 4
---INS SimpleName@@MethodName:appliesIgnoreCaseOrderingCorrectly @TO@ MethodDeclaration@@public, void, MethodName:appliesIgnoreCaseOrderingCorrectly,  @AT@ 5559 @LENGTH@ 34
---INS VariableDeclarationStatement@@Sort sort=new Sort(new Sort.Order("firstname").ignoreCase()); @TO@ MethodDeclaration@@public, void, MethodName:appliesIgnoreCaseOrderingCorrectly,  @AT@ 5601 @LENGTH@ 63
------INS SimpleType@@Sort @TO@ VariableDeclarationStatement@@Sort sort=new Sort(new Sort.Order("firstname").ignoreCase()); @AT@ 5601 @LENGTH@ 4
------INS VariableDeclarationFragment@@sort=new Sort(new Sort.Order("firstname").ignoreCase()) @TO@ VariableDeclarationStatement@@Sort sort=new Sort(new Sort.Order("firstname").ignoreCase()); @AT@ 5606 @LENGTH@ 57
---------INS SimpleName@@sort @TO@ VariableDeclarationFragment@@sort=new Sort(new Sort.Order("firstname").ignoreCase()) @AT@ 5606 @LENGTH@ 4
---------INS ClassInstanceCreation@@Sort[new Sort.Order("firstname").ignoreCase()] @TO@ VariableDeclarationFragment@@sort=new Sort(new Sort.Order("firstname").ignoreCase()) @AT@ 5613 @LENGTH@ 50
------------INS New@@new @TO@ ClassInstanceCreation@@Sort[new Sort.Order("firstname").ignoreCase()] @AT@ 5613 @LENGTH@ 3
------------INS SimpleType@@Sort @TO@ ClassInstanceCreation@@Sort[new Sort.Order("firstname").ignoreCase()] @AT@ 5617 @LENGTH@ 4
------------INS MethodInvocation@@new Sort.Order("firstname").ignoreCase() @TO@ ClassInstanceCreation@@Sort[new Sort.Order("firstname").ignoreCase()] @AT@ 5622 @LENGTH@ 40
---------------INS ClassInstanceCreation@@Sort.Order["firstname"] @TO@ MethodInvocation@@new Sort.Order("firstname").ignoreCase() @AT@ 5622 @LENGTH@ 27
------------------INS New@@new @TO@ ClassInstanceCreation@@Sort.Order["firstname"] @AT@ 5622 @LENGTH@ 3
------------------INS SimpleType@@Sort.Order @TO@ ClassInstanceCreation@@Sort.Order["firstname"] @AT@ 5626 @LENGTH@ 10
------------------INS StringLiteral@@"firstname" @TO@ ClassInstanceCreation@@Sort.Order["firstname"] @AT@ 5637 @LENGTH@ 11
---------------INS SimpleName@@MethodName:ignoreCase:[] @TO@ MethodInvocation@@new Sort.Order("firstname").ignoreCase() @AT@ 5650 @LENGTH@ 12
---INS VariableDeclarationStatement@@String query="select p from Person p"; @TO@ MethodDeclaration@@public, void, MethodName:appliesIgnoreCaseOrderingCorrectly,  @AT@ 5668 @LENGTH@ 40
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String query="select p from Person p"; @AT@ 5668 @LENGTH@ 6
------INS VariableDeclarationFragment@@query="select p from Person p" @TO@ VariableDeclarationStatement@@String query="select p from Person p"; @AT@ 5675 @LENGTH@ 32
---------INS SimpleName@@query @TO@ VariableDeclarationFragment@@query="select p from Person p" @AT@ 5675 @LENGTH@ 5
---------INS StringLiteral@@"select p from Person p" @TO@ VariableDeclarationFragment@@query="select p from Person p" @AT@ 5683 @LENGTH@ 24
---INS ExpressionStatement@@MethodInvocation:assertThat(applySorting(query,sort,"p"),endsWith("order by lower(p.firstname) asc")) @TO@ MethodDeclaration@@public, void, MethodName:appliesIgnoreCaseOrderingCorrectly,  @AT@ 5711 @LENGTH@ 88
------INS MethodInvocation@@assertThat(applySorting(query,sort,"p"),endsWith("order by lower(p.firstname) asc")) @TO@ ExpressionStatement@@MethodInvocation:assertThat(applySorting(query,sort,"p"),endsWith("order by lower(p.firstname) asc")) @AT@ 5711 @LENGTH@ 87
---------INS SimpleName@@MethodName:assertThat:[applySorting(query,sort,"p"), endsWith("order by lower(p.firstname) asc")] @TO@ MethodInvocation@@assertThat(applySorting(query,sort,"p"),endsWith("order by lower(p.firstname) asc")) @AT@ 5711 @LENGTH@ 87
------------INS MethodInvocation@@applySorting(query,sort,"p") @TO@ SimpleName@@MethodName:assertThat:[applySorting(query,sort,"p"), endsWith("order by lower(p.firstname) asc")] @AT@ 5722 @LENGTH@ 30
---------------INS SimpleName@@MethodName:applySorting:[query, sort, "p"] @TO@ MethodInvocation@@applySorting(query,sort,"p") @AT@ 5722 @LENGTH@ 30
------------------INS SimpleName@@query @TO@ SimpleName@@MethodName:applySorting:[query, sort, "p"] @AT@ 5735 @LENGTH@ 5
------------------INS SimpleName@@sort @TO@ SimpleName@@MethodName:applySorting:[query, sort, "p"] @AT@ 5742 @LENGTH@ 4
------------------INS StringLiteral@@"p" @TO@ SimpleName@@MethodName:applySorting:[query, sort, "p"] @AT@ 5748 @LENGTH@ 3
---------------INS SimpleName@@MethodName:applySorting:[query, sort, "p"] @TO@ MethodInvocation@@applySorting(query,sort,"p") @AT@ 5722 @LENGTH@ 30
------------------INS SimpleName@@query @TO@ SimpleName@@MethodName:applySorting:[query, sort, "p"] @AT@ 5735 @LENGTH@ 5
------------------INS SimpleName@@sort @TO@ SimpleName@@MethodName:applySorting:[query, sort, "p"] @AT@ 5742 @LENGTH@ 4
------------------INS StringLiteral@@"p" @TO@ SimpleName@@MethodName:applySorting:[query, sort, "p"] @AT@ 5748 @LENGTH@ 3
------------INS MethodInvocation@@endsWith("order by lower(p.firstname) asc") @TO@ SimpleName@@MethodName:assertThat:[applySorting(query,sort,"p"), endsWith("order by lower(p.firstname) asc")] @AT@ 5754 @LENGTH@ 43
---------------INS SimpleName@@MethodName:endsWith:["order by lower(p.firstname) asc"] @TO@ MethodInvocation@@endsWith("order by lower(p.firstname) asc") @AT@ 5754 @LENGTH@ 43
------------------INS StringLiteral@@"order by lower(p.firstname) asc" @TO@ SimpleName@@MethodName:endsWith:["order by lower(p.firstname) asc"] @AT@ 5763 @LENGTH@ 33
---------------INS SimpleName@@MethodName:endsWith:["order by lower(p.firstname) asc"] @TO@ MethodInvocation@@endsWith("order by lower(p.firstname) asc") @AT@ 5754 @LENGTH@ 43
------------------INS StringLiteral@@"order by lower(p.firstname) asc" @TO@ SimpleName@@MethodName:endsWith:["order by lower(p.firstname) asc"] @AT@ 5763 @LENGTH@ 33


UPD TypeDeclaration@@[private]FlipThread, Thread @TO@ [private, final]FlipThread, Thread @AT@ 1883 @LENGTH@ 727
---INS Modifier@@final @TO@ TypeDeclaration@@[private]FlipThread, Thread @AT@ 1891 @LENGTH@ 5


UPD FieldDeclaration@@private, Map<Integer,Field>, [annotatedFields=new LinkedHashMap<Integer,Field>()] @TO@ private, Map<Integer,Field>, [annotatedFields=new TreeMap<Integer,Field>()] @AT@ 2180 @LENGTH@ 82
---UPD VariableDeclarationFragment@@annotatedFields=new LinkedHashMap<Integer,Field>() @TO@ annotatedFields=new TreeMap<Integer,Field>() @AT@ 2208 @LENGTH@ 53
------UPD ClassInstanceCreation@@LinkedHashMap<Integer,Field>[] @TO@ TreeMap<Integer,Field>[] @AT@ 2226 @LENGTH@ 35
---------UPD ParameterizedType@@LinkedHashMap<Integer,Field> @TO@ TreeMap<Integer,Field> @AT@ 2230 @LENGTH@ 29
------------UPD SimpleType@@LinkedHashMap @TO@ TreeMap @AT@ 2230 @LENGTH@ 13


UPD ExpressionStatement@@MethodInvocation:Assert.assertFalse(child2.asString(),child2.isDefined()) @TO@ MethodInvocation:Assert.assertFalse("key=" + key + "\n with child1 undefined has child2 \n"+ child2.asString(),child2.isDefined()) @AT@ 15863 @LENGTH@ 58
---UPD MethodInvocation@@Assert.assertFalse(child2.asString(),child2.isDefined()) @TO@ Assert.assertFalse("key=" + key + "\n with child1 undefined has child2 \n"+ child2.asString(),child2.isDefined()) @AT@ 15863 @LENGTH@ 57
------UPD SimpleName@@MethodName:assertFalse:[child2.asString(), child2.isDefined()] @TO@ MethodName:assertFalse:["key=" + key + "\n with child1 undefined has child2 \n"+ child2.asString(), child2.isDefined()] @AT@ 15870 @LENGTH@ 50
---------INS InfixExpression@@"key=" + key + "\n with child1 undefined has child2 \n"+ child2.asString() @TO@ SimpleName@@MethodName:assertFalse:[child2.asString(), child2.isDefined()] @AT@ 15882 @LENGTH@ 75
------------INS StringLiteral@@"key=" @TO@ InfixExpression@@"key=" + key + "\n with child1 undefined has child2 \n"+ child2.asString() @AT@ 15882 @LENGTH@ 6
------------INS Operator@@+ @TO@ InfixExpression@@"key=" + key + "\n with child1 undefined has child2 \n"+ child2.asString() @AT@ 15888 @LENGTH@ 1
------------INS SimpleName@@key @TO@ InfixExpression@@"key=" + key + "\n with child1 undefined has child2 \n"+ child2.asString() @AT@ 15891 @LENGTH@ 3
------------INS StringLiteral@@"\n with child1 undefined has child2 \n" @TO@ InfixExpression@@"key=" + key + "\n with child1 undefined has child2 \n"+ child2.asString() @AT@ 15897 @LENGTH@ 40
------------INS MethodInvocation@@child2.asString() @TO@ InfixExpression@@"key=" + key + "\n with child1 undefined has child2 \n"+ child2.asString() @AT@ 15940 @LENGTH@ 17
---------------MOV SimpleName@@Name:child2 @TO@ MethodInvocation@@child2.asString() @AT@ 15882 @LENGTH@ 6
---------------MOV SimpleName@@Name:child2 @TO@ MethodInvocation@@child2.asString() @AT@ 15882 @LENGTH@ 6
---------------MOV SimpleName@@MethodName:asString:[] @TO@ MethodInvocation@@child2.asString() @AT@ 15889 @LENGTH@ 10
---------------MOV SimpleName@@MethodName:asString:[] @TO@ MethodInvocation@@child2.asString() @AT@ 15889 @LENGTH@ 10
---------DEL MethodInvocation@@child2.asString() @AT@ 15882 @LENGTH@ 17


INS FieldDeclaration@@private, final, List<String>, [discardedOperations=new LinkedList<String>()] @TO@ TypeDeclaration@@[public, final]ExplicitTransformationDescriptionBuilder, AbstractTransformationDescriptionBuilder[TransformationDescriptionBuilder] @AT@ 1850 @LENGTH@ 74
---INS Modifier@@private @TO@ FieldDeclaration@@private, final, List<String>, [discardedOperations=new LinkedList<String>()] @AT@ 1850 @LENGTH@ 7
---INS Modifier@@final @TO@ FieldDeclaration@@private, final, List<String>, [discardedOperations=new LinkedList<String>()] @AT@ 1858 @LENGTH@ 5
---INS ParameterizedType@@List<String> @TO@ FieldDeclaration@@private, final, List<String>, [discardedOperations=new LinkedList<String>()] @AT@ 1864 @LENGTH@ 12
------INS SimpleType@@List @TO@ ParameterizedType@@List<String> @AT@ 1864 @LENGTH@ 4
------INS SimpleType@@String @TO@ ParameterizedType@@List<String> @AT@ 1869 @LENGTH@ 6
---INS VariableDeclarationFragment@@discardedOperations=new LinkedList<String>() @TO@ FieldDeclaration@@private, final, List<String>, [discardedOperations=new LinkedList<String>()] @AT@ 1877 @LENGTH@ 46
------INS SimpleName@@discardedOperations @TO@ VariableDeclarationFragment@@discardedOperations=new LinkedList<String>() @AT@ 1877 @LENGTH@ 19
------INS ClassInstanceCreation@@LinkedList<String>[] @TO@ VariableDeclarationFragment@@discardedOperations=new LinkedList<String>() @AT@ 1899 @LENGTH@ 24
---------INS New@@new @TO@ ClassInstanceCreation@@LinkedList<String>[] @AT@ 1899 @LENGTH@ 3
---------INS ParameterizedType@@LinkedList<String> @TO@ ClassInstanceCreation@@LinkedList<String>[] @AT@ 1903 @LENGTH@ 18
------------INS SimpleType@@LinkedList @TO@ ParameterizedType@@LinkedList<String> @AT@ 1903 @LENGTH@ 10
------------INS SimpleType@@String @TO@ ParameterizedType@@LinkedList<String> @AT@ 1914 @LENGTH@ 6


UPD MethodDeclaration@@public, void, MethodName:testMulti, Exception,  @TO@ public, void, MethodName:testMultiExec, Exception,  @AT@ 1558 @LENGTH@ 417
---UPD SimpleName@@MethodName:testMulti @TO@ MethodName:testMultiExec @AT@ 1570 @LENGTH@ 9


UPD IfStatement@@if (count == 0 && afterClassRun) {  for (  final ServerSetupTask instance : current) {    instance.tearDown(managementClient.get(),container.getName());  }  active.remove(container.getName());  deployed.remove(container.getName());} @TO@ if (count == 0 && afterClassRun) {  for (int i=current.size() - 1; i >= 0; i--) {    current.get(i).tearDown(managementClient.get(),container.getName());  }  active.remove(container.getName());  deployed.remove(container.getName());} @AT@ 5952 @LENGTH@ 297
---UPD Block@@ThenBody:{  for (  final ServerSetupTask instance : current) {    instance.tearDown(managementClient.get(),container.getName());  }  active.remove(container.getName());  deployed.remove(container.getName());} @TO@ ThenBody:{  for (int i=current.size() - 1; i >= 0; i--) {    current.get(i).tearDown(managementClient.get(),container.getName());  }  active.remove(container.getName());  deployed.remove(container.getName());} @AT@ 5985 @LENGTH@ 264
------INS ForStatement@@for (int i=current.size() - 1; i >= 0; i--) {  current.get(i).tearDown(managementClient.get(),container.getName());} @TO@ Block@@ThenBody:{  for (  final ServerSetupTask instance : current) {    instance.tearDown(managementClient.get(),container.getName());  }  active.remove(container.getName());  deployed.remove(container.getName());} @AT@ 5999 @LENGTH@ 147
---------INS VariableDeclarationExpression@@int i=current.size() - 1 @TO@ ForStatement@@for (int i=current.size() - 1; i >= 0; i--) {  current.get(i).tearDown(managementClient.get(),container.getName());} @AT@ 6004 @LENGTH@ 26
------------INS PrimitiveType@@int @TO@ VariableDeclarationExpression@@int i=current.size() - 1 @AT@ 6004 @LENGTH@ 3
------------INS VariableDeclarationFragment@@i=current.size() - 1 @TO@ VariableDeclarationExpression@@int i=current.size() - 1 @AT@ 6008 @LENGTH@ 22
---------------INS SimpleName@@i @TO@ VariableDeclarationFragment@@i=current.size() - 1 @AT@ 6008 @LENGTH@ 1
---------------INS InfixExpression@@current.size() - 1 @TO@ VariableDeclarationFragment@@i=current.size() - 1 @AT@ 6012 @LENGTH@ 18
------------------INS MethodInvocation@@current.size() @TO@ InfixExpression@@current.size() - 1 @AT@ 6012 @LENGTH@ 14
---------------------INS SimpleName@@Name:current @TO@ MethodInvocation@@current.size() @AT@ 6012 @LENGTH@ 7
---------------------INS SimpleName@@MethodName:size:[] @TO@ MethodInvocation@@current.size() @AT@ 6020 @LENGTH@ 6
------------------INS Operator@@- @TO@ InfixExpression@@current.size() - 1 @AT@ 6026 @LENGTH@ 1
------------------INS NumberLiteral@@1 @TO@ InfixExpression@@current.size() - 1 @AT@ 6029 @LENGTH@ 1
---------INS InfixExpression@@i >= 0 @TO@ ForStatement@@for (int i=current.size() - 1; i >= 0; i--) {  current.get(i).tearDown(managementClient.get(),container.getName());} @AT@ 6032 @LENGTH@ 6
------------INS SimpleName@@i @TO@ InfixExpression@@i >= 0 @AT@ 6032 @LENGTH@ 1
------------INS Operator@@>= @TO@ InfixExpression@@i >= 0 @AT@ 6033 @LENGTH@ 2
------------INS NumberLiteral@@0 @TO@ InfixExpression@@i >= 0 @AT@ 6037 @LENGTH@ 1
---------INS PostfixExpression@@i-- @TO@ ForStatement@@for (int i=current.size() - 1; i >= 0; i--) {  current.get(i).tearDown(managementClient.get(),container.getName());} @AT@ 6040 @LENGTH@ 3
------------INS SimpleName@@i @TO@ PostfixExpression@@i-- @AT@ 6040 @LENGTH@ 1
------------INS Operator@@-- @TO@ PostfixExpression@@i-- @AT@ 6042 @LENGTH@ 2
---------MOV ExpressionStatement@@MethodInvocation:instance.tearDown(managementClient.get(),container.getName()) @TO@ ForStatement@@for (int i=current.size() - 1; i >= 0; i--) {  current.get(i).tearDown(managementClient.get(),container.getName());} @AT@ 6064 @LENGTH@ 63
------DEL EnhancedForStatement@@for (final ServerSetupTask instance : current) {  instance.tearDown(managementClient.get(),container.getName());} @AT@ 5999 @LENGTH@ 142
---------DEL SingleVariableDeclaration@@final ServerSetupTask instance @AT@ 6004 @LENGTH@ 30
------------DEL Modifier@@final @AT@ 6004 @LENGTH@ 5
------------DEL SimpleType@@ServerSetupTask @AT@ 6010 @LENGTH@ 15
------------DEL SimpleName@@instance @AT@ 6026 @LENGTH@ 8
---------DEL SimpleName@@current @AT@ 6037 @LENGTH@ 7


UPD ExpressionStatement@@MethodInvocation:context.restartRequired() @TO@ MethodInvocation:context.reloadRequired() @AT@ 2939 @LENGTH@ 26
---UPD MethodInvocation@@context.restartRequired() @TO@ context.reloadRequired() @AT@ 2939 @LENGTH@ 25
------UPD SimpleName@@MethodName:restartRequired:[] @TO@ MethodName:reloadRequired:[] @AT@ 2947 @LENGTH@ 17


INS VariableDeclarationStatement@@IZKClient zookeeer=getZookeeper(); @TO@ MethodDeclaration@@public, void, MethodName:testLocalFabricCluster, Exception,  @AT@ 1990 @LENGTH@ 36
---INS SimpleType@@IZKClient @TO@ VariableDeclarationStatement@@IZKClient zookeeer=getZookeeper(); @AT@ 1990 @LENGTH@ 9
---INS VariableDeclarationFragment@@zookeeer=getZookeeper() @TO@ VariableDeclarationStatement@@IZKClient zookeeer=getZookeeper(); @AT@ 2000 @LENGTH@ 25
------INS SimpleName@@zookeeer @TO@ VariableDeclarationFragment@@zookeeer=getZookeeper() @AT@ 2000 @LENGTH@ 8
------INS MethodInvocation@@MethodName:getZookeeper:[] @TO@ VariableDeclarationFragment@@zookeeer=getZookeeper() @AT@ 2011 @LENGTH@ 14


UPD ExpressionStatement@@MethodInvocation:checkFailedTransformedAddOperation(mainServices,modelVersion,config.correctOperation(operation),config) @TO@ MethodInvocation:checkFailedTransformedAddOperation(mainServices,modelVersion,config.correctOperation(transformedOperation.getTransformedOperation()),config) @AT@ 23596 @LENGTH@ 107
---UPD MethodInvocation@@checkFailedTransformedAddOperation(mainServices,modelVersion,config.correctOperation(operation),config) @TO@ checkFailedTransformedAddOperation(mainServices,modelVersion,config.correctOperation(transformedOperation.getTransformedOperation()),config) @AT@ 23596 @LENGTH@ 106
------UPD SimpleName@@MethodName:checkFailedTransformedAddOperation:[mainServices, modelVersion, config.correctOperation(operation), config] @TO@ MethodName:checkFailedTransformedAddOperation:[mainServices, modelVersion, config.correctOperation(transformedOperation.getTransformedOperation()), config] @AT@ 23596 @LENGTH@ 106
---------UPD MethodInvocation@@config.correctOperation(operation) @TO@ config.correctOperation(transformedOperation.getTransformedOperation()) @AT@ 23659 @LENGTH@ 34
------------UPD SimpleName@@MethodName:correctOperation:[operation] @TO@ MethodName:correctOperation:[transformedOperation.getTransformedOperation()] @AT@ 23666 @LENGTH@ 27
---------------DEL SimpleName@@operation @AT@ 23683 @LENGTH@ 9
---------------INS MethodInvocation@@transformedOperation.getTransformedOperation() @TO@ SimpleName@@MethodName:correctOperation:[operation] @AT@ 23936 @LENGTH@ 46
------------------INS SimpleName@@Name:transformedOperation @TO@ MethodInvocation@@transformedOperation.getTransformedOperation() @AT@ 23936 @LENGTH@ 20
------------------INS SimpleName@@MethodName:getTransformedOperation:[] @TO@ MethodInvocation@@transformedOperation.getTransformedOperation() @AT@ 23957 @LENGTH@ 25


INS MethodDeclaration@@public, ResourceTransformer, MethodName:getResourceTransformer,  @TO@ TypeDeclaration@@[public]RejectExpressionValuesTransformer, [ResourceTransformer, OperationTransformer] @AT@ 4414 @LENGTH@ 80
---INS Modifier@@public @TO@ MethodDeclaration@@public, ResourceTransformer, MethodName:getResourceTransformer,  @AT@ 4414 @LENGTH@ 6
---INS SimpleType@@ResourceTransformer @TO@ MethodDeclaration@@public, ResourceTransformer, MethodName:getResourceTransformer,  @AT@ 4421 @LENGTH@ 19
---INS SimpleName@@MethodName:getResourceTransformer @TO@ MethodDeclaration@@public, ResourceTransformer, MethodName:getResourceTransformer,  @AT@ 4441 @LENGTH@ 22
---INS ReturnStatement@@ThisExpression:this @TO@ MethodDeclaration@@public, ResourceTransformer, MethodName:getResourceTransformer,  @AT@ 4476 @LENGTH@ 12
------INS ThisExpression@@this @TO@ ReturnStatement@@ThisExpression:this @AT@ 4483 @LENGTH@ 4


INS FieldDeclaration@@private, boolean, [DELETE_WORK_DIR_ONCONTEXTDESTROY=Boolean.valueOf(System.getProperty("org.jboss.as.web.deployment.DELETE_WORK_DIR_ONCONTEXTDESTROY","false")).booleanValue()] @TO@ TypeDeclaration@@[public]JBossContextConfig, ContextConfig @AT@ 6285 @LENGTH@ 175
---INS Modifier@@private @TO@ FieldDeclaration@@private, boolean, [DELETE_WORK_DIR_ONCONTEXTDESTROY=Boolean.valueOf(System.getProperty("org.jboss.as.web.deployment.DELETE_WORK_DIR_ONCONTEXTDESTROY","false")).booleanValue()] @AT@ 6285 @LENGTH@ 7
---INS PrimitiveType@@boolean @TO@ FieldDeclaration@@private, boolean, [DELETE_WORK_DIR_ONCONTEXTDESTROY=Boolean.valueOf(System.getProperty("org.jboss.as.web.deployment.DELETE_WORK_DIR_ONCONTEXTDESTROY","false")).booleanValue()] @AT@ 6293 @LENGTH@ 7
---INS VariableDeclarationFragment@@DELETE_WORK_DIR_ONCONTEXTDESTROY=Boolean.valueOf(System.getProperty("org.jboss.as.web.deployment.DELETE_WORK_DIR_ONCONTEXTDESTROY","false")).booleanValue() @TO@ FieldDeclaration@@private, boolean, [DELETE_WORK_DIR_ONCONTEXTDESTROY=Boolean.valueOf(System.getProperty("org.jboss.as.web.deployment.DELETE_WORK_DIR_ONCONTEXTDESTROY","false")).booleanValue()] @AT@ 6301 @LENGTH@ 158
------INS SimpleName@@DELETE_WORK_DIR_ONCONTEXTDESTROY @TO@ VariableDeclarationFragment@@DELETE_WORK_DIR_ONCONTEXTDESTROY=Boolean.valueOf(System.getProperty("org.jboss.as.web.deployment.DELETE_WORK_DIR_ONCONTEXTDESTROY","false")).booleanValue() @AT@ 6301 @LENGTH@ 32
------INS MethodInvocation@@Boolean.valueOf(System.getProperty("org.jboss.as.web.deployment.DELETE_WORK_DIR_ONCONTEXTDESTROY","false")).booleanValue() @TO@ VariableDeclarationFragment@@DELETE_WORK_DIR_ONCONTEXTDESTROY=Boolean.valueOf(System.getProperty("org.jboss.as.web.deployment.DELETE_WORK_DIR_ONCONTEXTDESTROY","false")).booleanValue() @AT@ 6336 @LENGTH@ 123
---------INS MethodInvocation@@MethodName:valueOf:[System.getProperty("org.jboss.as.web.deployment.DELETE_WORK_DIR_ONCONTEXTDESTROY","false")] @TO@ MethodInvocation@@Boolean.valueOf(System.getProperty("org.jboss.as.web.deployment.DELETE_WORK_DIR_ONCONTEXTDESTROY","false")).booleanValue() @AT@ 6336 @LENGTH@ 108
------------INS MethodInvocation@@System.getProperty("org.jboss.as.web.deployment.DELETE_WORK_DIR_ONCONTEXTDESTROY","false") @TO@ MethodInvocation@@MethodName:valueOf:[System.getProperty("org.jboss.as.web.deployment.DELETE_WORK_DIR_ONCONTEXTDESTROY","false")] @AT@ 6352 @LENGTH@ 91
---------------INS SimpleName@@Name:System @TO@ MethodInvocation@@System.getProperty("org.jboss.as.web.deployment.DELETE_WORK_DIR_ONCONTEXTDESTROY","false") @AT@ 6352 @LENGTH@ 6
---------------INS SimpleName@@MethodName:getProperty:["org.jboss.as.web.deployment.DELETE_WORK_DIR_ONCONTEXTDESTROY", "false"] @TO@ MethodInvocation@@System.getProperty("org.jboss.as.web.deployment.DELETE_WORK_DIR_ONCONTEXTDESTROY","false") @AT@ 6359 @LENGTH@ 84
------------------INS StringLiteral@@"org.jboss.as.web.deployment.DELETE_WORK_DIR_ONCONTEXTDESTROY" @TO@ SimpleName@@MethodName:getProperty:["org.jboss.as.web.deployment.DELETE_WORK_DIR_ONCONTEXTDESTROY", "false"] @AT@ 6371 @LENGTH@ 62
------------------INS StringLiteral@@"false" @TO@ SimpleName@@MethodName:getProperty:["org.jboss.as.web.deployment.DELETE_WORK_DIR_ONCONTEXTDESTROY", "false"] @AT@ 6435 @LENGTH@ 7
---------INS SimpleName@@Name:Boolean @TO@ MethodInvocation@@Boolean.valueOf(System.getProperty("org.jboss.as.web.deployment.DELETE_WORK_DIR_ONCONTEXTDESTROY","false")).booleanValue() @AT@ 6336 @LENGTH@ 7
---------INS SimpleName@@MethodName:booleanValue:[] @TO@ MethodInvocation@@Boolean.valueOf(System.getProperty("org.jboss.as.web.deployment.DELETE_WORK_DIR_ONCONTEXTDESTROY","false")).booleanValue() @AT@ 6445 @LENGTH@ 14


UPD Block@@ThenBody:{  final EEModuleDescription moduleDescription=componentDescription.getModuleDescription();  moduleDescription.getBindingConfigurations().add(new BindingConfiguration(jndiName,new RemoteViewInjectionSource(null,moduleDescription.getEarApplicationName(),moduleDescription.getModuleName(),moduleDescription.getDistinctName(),componentDescription.getComponentName(),viewDescription.getViewClassName(),componentDescription.isStateful())));} @TO@ ThenBody:{  registerRemoteBinding(componentDescription,viewDescription,jndiName);} @AT@ 9835 @LENGTH@ 476
---DEL VariableDeclarationStatement@@final EEModuleDescription moduleDescription=componentDescription.getModuleDescription(); @AT@ 9849 @LENGTH@ 90
------DEL Modifier@@final @AT@ 9849 @LENGTH@ 5
------DEL SimpleType@@EEModuleDescription @AT@ 9855 @LENGTH@ 19
------DEL VariableDeclarationFragment@@moduleDescription=componentDescription.getModuleDescription() @AT@ 9875 @LENGTH@ 63
---------DEL SimpleName@@moduleDescription @AT@ 9875 @LENGTH@ 17
---------DEL MethodInvocation@@componentDescription.getModuleDescription() @AT@ 9895 @LENGTH@ 43
------------DEL SimpleName@@Name:componentDescription @AT@ 9895 @LENGTH@ 20
------------DEL SimpleName@@MethodName:getModuleDescription:[] @AT@ 9916 @LENGTH@ 22
---UPD ExpressionStatement@@MethodInvocation:moduleDescription.getBindingConfigurations().add(new BindingConfiguration(jndiName,new RemoteViewInjectionSource(null,moduleDescription.getEarApplicationName(),moduleDescription.getModuleName(),moduleDescription.getDistinctName(),componentDescription.getComponentName(),viewDescription.getViewClassName(),componentDescription.isStateful()))) @TO@ MethodInvocation:registerRemoteBinding(componentDescription,viewDescription,jndiName) @AT@ 9952 @LENGTH@ 349
------UPD MethodInvocation@@moduleDescription.getBindingConfigurations().add(new BindingConfiguration(jndiName,new RemoteViewInjectionSource(null,moduleDescription.getEarApplicationName(),moduleDescription.getModuleName(),moduleDescription.getDistinctName(),componentDescription.getComponentName(),viewDescription.getViewClassName(),componentDescription.isStateful()))) @TO@ registerRemoteBinding(componentDescription,viewDescription,jndiName) @AT@ 9952 @LENGTH@ 348
---------DEL MethodInvocation@@MethodName:getBindingConfigurations:[] @AT@ 9952 @LENGTH@ 44
---------DEL SimpleName@@Name:moduleDescription @AT@ 9952 @LENGTH@ 17
---------UPD SimpleName@@MethodName:add:[new BindingConfiguration(jndiName,new RemoteViewInjectionSource(null,moduleDescription.getEarApplicationName(),moduleDescription.getModuleName(),moduleDescription.getDistinctName(),componentDescription.getComponentName(),viewDescription.getViewClassName(),componentDescription.isStateful()))] @TO@ MethodName:registerRemoteBinding:[componentDescription, viewDescription, jndiName] @AT@ 9997 @LENGTH@ 303
------------INS SimpleName@@componentDescription @TO@ SimpleName@@MethodName:add:[new BindingConfiguration(jndiName,new RemoteViewInjectionSource(null,moduleDescription.getEarApplicationName(),moduleDescription.getModuleName(),moduleDescription.getDistinctName(),componentDescription.getComponentName(),viewDescription.getViewClassName(),componentDescription.isStateful()))] @AT@ 9871 @LENGTH@ 20
------------INS SimpleName@@viewDescription @TO@ SimpleName@@MethodName:add:[new BindingConfiguration(jndiName,new RemoteViewInjectionSource(null,moduleDescription.getEarApplicationName(),moduleDescription.getModuleName(),moduleDescription.getDistinctName(),componentDescription.getComponentName(),viewDescription.getViewClassName(),componentDescription.isStateful()))] @AT@ 9893 @LENGTH@ 15
------------INS SimpleName@@jndiName @TO@ SimpleName@@MethodName:add:[new BindingConfiguration(jndiName,new RemoteViewInjectionSource(null,moduleDescription.getEarApplicationName(),moduleDescription.getModuleName(),moduleDescription.getDistinctName(),componentDescription.getComponentName(),viewDescription.getViewClassName(),componentDescription.isStateful()))] @AT@ 9910 @LENGTH@ 8
------------DEL ClassInstanceCreation@@BindingConfiguration[jndiName, new RemoteViewInjectionSource(null,moduleDescription.getEarApplicationName(),moduleDescription.getModuleName(),moduleDescription.getDistinctName(),componentDescription.getComponentName(),viewDescription.getViewClassName(),componentDescription.isStateful())] @AT@ 10001 @LENGTH@ 298
---------------DEL New@@new @AT@ 10001 @LENGTH@ 3
---------------DEL SimpleType@@BindingConfiguration @AT@ 10005 @LENGTH@ 20
---------------DEL SimpleName@@jndiName @AT@ 10026 @LENGTH@ 8
---------------DEL ClassInstanceCreation@@RemoteViewInjectionSource[null, moduleDescription.getEarApplicationName(), moduleDescription.getModuleName(), moduleDescription.getDistinctName(), componentDescription.getComponentName(), viewDescription.getViewClassName(), componentDescription.isStateful()] @AT@ 10036 @LENGTH@ 262
------------------DEL New@@new @AT@ 10036 @LENGTH@ 3
------------------DEL SimpleType@@RemoteViewInjectionSource @AT@ 10040 @LENGTH@ 25
------------------DEL NullLiteral@@null @AT@ 10066 @LENGTH@ 4
------------------DEL MethodInvocation@@moduleDescription.getEarApplicationName() @AT@ 10072 @LENGTH@ 41
---------------------DEL SimpleName@@Name:moduleDescription @AT@ 10072 @LENGTH@ 17
---------------------DEL SimpleName@@MethodName:getEarApplicationName:[] @AT@ 10090 @LENGTH@ 23
------------------DEL MethodInvocation@@moduleDescription.getModuleName() @AT@ 10115 @LENGTH@ 33
---------------------DEL SimpleName@@Name:moduleDescription @AT@ 10115 @LENGTH@ 17
---------------------DEL SimpleName@@MethodName:getModuleName:[] @AT@ 10133 @LENGTH@ 15
------------------DEL MethodInvocation@@moduleDescription.getDistinctName() @AT@ 10150 @LENGTH@ 35
---------------------DEL SimpleName@@Name:moduleDescription @AT@ 10150 @LENGTH@ 17
---------------------DEL SimpleName@@MethodName:getDistinctName:[] @AT@ 10168 @LENGTH@ 17
------------------DEL MethodInvocation@@componentDescription.getComponentName() @AT@ 10187 @LENGTH@ 39
---------------------DEL SimpleName@@Name:componentDescription @AT@ 10187 @LENGTH@ 20
---------------------DEL SimpleName@@MethodName:getComponentName:[] @AT@ 10208 @LENGTH@ 18
------------------DEL MethodInvocation@@viewDescription.getViewClassName() @AT@ 10228 @LENGTH@ 34
---------------------DEL SimpleName@@Name:viewDescription @AT@ 10228 @LENGTH@ 15
---------------------DEL SimpleName@@MethodName:getViewClassName:[] @AT@ 10244 @LENGTH@ 18
------------------DEL MethodInvocation@@componentDescription.isStateful() @AT@ 10264 @LENGTH@ 33
---------------------DEL SimpleName@@Name:componentDescription @AT@ 10264 @LENGTH@ 20
---------------------DEL SimpleName@@MethodName:isStateful:[] @AT@ 10285 @LENGTH@ 12


INS ExpressionStatement@@Assignment:path=path.substring(path.lastIndexOf("/")) @TO@ MethodDeclaration@@public, void, MethodName:process, Exchange exchange, Exception,  @AT@ 7166 @LENGTH@ 45
---INS Assignment@@path=path.substring(path.lastIndexOf("/")) @TO@ ExpressionStatement@@Assignment:path=path.substring(path.lastIndexOf("/")) @AT@ 7166 @LENGTH@ 44
------INS SimpleName@@path @TO@ Assignment@@path=path.substring(path.lastIndexOf("/")) @AT@ 7166 @LENGTH@ 4
------INS Operator@@= @TO@ Assignment@@path=path.substring(path.lastIndexOf("/")) @AT@ 7170 @LENGTH@ 1
------INS MethodInvocation@@path.substring(path.lastIndexOf("/")) @TO@ Assignment@@path=path.substring(path.lastIndexOf("/")) @AT@ 7173 @LENGTH@ 37
---------INS SimpleName@@Name:path @TO@ MethodInvocation@@path.substring(path.lastIndexOf("/")) @AT@ 7173 @LENGTH@ 4
---------INS SimpleName@@MethodName:substring:[path.lastIndexOf("/")] @TO@ MethodInvocation@@path.substring(path.lastIndexOf("/")) @AT@ 7178 @LENGTH@ 32
------------INS MethodInvocation@@path.lastIndexOf("/") @TO@ SimpleName@@MethodName:substring:[path.lastIndexOf("/")] @AT@ 7188 @LENGTH@ 21
---------------INS SimpleName@@Name:path @TO@ MethodInvocation@@path.lastIndexOf("/") @AT@ 7188 @LENGTH@ 4
---------------INS SimpleName@@MethodName:lastIndexOf:["/"] @TO@ MethodInvocation@@path.lastIndexOf("/") @AT@ 7193 @LENGTH@ 16
------------------INS StringLiteral@@"/" @TO@ SimpleName@@MethodName:lastIndexOf:["/"] @AT@ 7205 @LENGTH@ 3


UPD CatchClause@@catch (MappingInstantiationException o_O) {  assertThat(o_O.getConstructor(),is(constructor));  assertThat(o_O.getConstructorArguments(),is(parameters));  assertEquals(Sample.class,o_O.getEntityType());  assertThat(o_O.getMessage(),containsString(Sample.class.getName()));  assertThat(o_O.getMessage(),containsString(Long.class.getName()));  assertThat(o_O.getMessage(),containsString(String.class.getName()));  assertThat(o_O.getMessage(),containsString("FOO"));  System.out.println(o_O.getMessage());} @TO@ catch (MappingInstantiationException o_O) {  assertThat(o_O.getConstructor(),is(constructor));  assertThat(o_O.getConstructorArguments(),is(parameters));  assertEquals(Sample.class,o_O.getEntityType());  assertThat(o_O.getMessage(),containsString(Sample.class.getName()));  assertThat(o_O.getMessage(),containsString(Long.class.getName()));  assertThat(o_O.getMessage(),containsString(String.class.getName()));  assertThat(o_O.getMessage(),containsString("FOO"));} @AT@ 4995 @LENGTH@ 531
---DEL ExpressionStatement@@MethodInvocation:System.out.println(o_O.getMessage()) @AT@ 5485 @LENGTH@ 37
------DEL MethodInvocation@@System.out.println(o_O.getMessage()) @AT@ 5485 @LENGTH@ 36
---------DEL QualifiedName@@Name:System.out @AT@ 5485 @LENGTH@ 10
---------DEL SimpleName@@MethodName:println:[o_O.getMessage()] @AT@ 5496 @LENGTH@ 25
------------DEL MethodInvocation@@o_O.getMessage() @AT@ 5504 @LENGTH@ 16
---------------DEL SimpleName@@Name:o_O @AT@ 5504 @LENGTH@ 3
---------------DEL SimpleName@@MethodName:getMessage:[] @AT@ 5508 @LENGTH@ 12


UPD ExpressionStatement@@MethodInvocation:deleteFromTables("BATCH_JOB_EXECUTION_CONTEXT","BATCH_STEP_EXECUTION_CONTEXT","BATCH_STEP_EXECUTION","BATCH_JOB_EXECUTION","BATCH_JOB_EXECUTION_PARAMS","BATCH_JOB_INSTANCE") @TO@ MethodInvocation:deleteFromTables("BATCH_JOB_EXECUTION_CONTEXT","BATCH_STEP_EXECUTION_CONTEXT","BATCH_STEP_EXECUTION","BATCH_JOB_EXECUTION_PARAMS","BATCH_JOB_EXECUTION","BATCH_JOB_INSTANCE") @AT@ 923 @LENGTH@ 184
---UPD MethodInvocation@@deleteFromTables("BATCH_JOB_EXECUTION_CONTEXT","BATCH_STEP_EXECUTION_CONTEXT","BATCH_STEP_EXECUTION","BATCH_JOB_EXECUTION","BATCH_JOB_EXECUTION_PARAMS","BATCH_JOB_INSTANCE") @TO@ deleteFromTables("BATCH_JOB_EXECUTION_CONTEXT","BATCH_STEP_EXECUTION_CONTEXT","BATCH_STEP_EXECUTION","BATCH_JOB_EXECUTION_PARAMS","BATCH_JOB_EXECUTION","BATCH_JOB_INSTANCE") @AT@ 923 @LENGTH@ 183
------UPD SimpleName@@MethodName:deleteFromTables:["BATCH_JOB_EXECUTION_CONTEXT", "BATCH_STEP_EXECUTION_CONTEXT", "BATCH_STEP_EXECUTION", "BATCH_JOB_EXECUTION", "BATCH_JOB_EXECUTION_PARAMS", "BATCH_JOB_INSTANCE"] @TO@ MethodName:deleteFromTables:["BATCH_JOB_EXECUTION_CONTEXT", "BATCH_STEP_EXECUTION_CONTEXT", "BATCH_STEP_EXECUTION", "BATCH_JOB_EXECUTION_PARAMS", "BATCH_JOB_EXECUTION", "BATCH_JOB_INSTANCE"] @AT@ 923 @LENGTH@ 183
---------UPD StringLiteral@@"BATCH_JOB_EXECUTION" @TO@ "BATCH_JOB_EXECUTION_PARAMS" @AT@ 1027 @LENGTH@ 21
---------UPD StringLiteral@@"BATCH_JOB_EXECUTION_PARAMS" @TO@ "BATCH_JOB_EXECUTION" @AT@ 1055 @LENGTH@ 28


UPD ExpressionStatement@@MethodInvocation:builder.append("(select\\s+((distinct )?(.+)?)\\s+)?(from\\s+") @TO@ MethodInvocation:builder.append("(select\\s+((distinct )?(.+?)?)\\s+)?(from\\s+") @AT@ 3610 @LENGTH@ 64
---UPD MethodInvocation@@builder.append("(select\\s+((distinct )?(.+)?)\\s+)?(from\\s+") @TO@ builder.append("(select\\s+((distinct )?(.+?)?)\\s+)?(from\\s+") @AT@ 3610 @LENGTH@ 63
------UPD SimpleName@@MethodName:append:["(select\\s+((distinct )?(.+)?)\\s+)?(from\\s+"] @TO@ MethodName:append:["(select\\s+((distinct )?(.+?)?)\\s+)?(from\\s+"] @AT@ 3618 @LENGTH@ 55
---------UPD StringLiteral@@"(select\\s+((distinct )?(.+)?)\\s+)?(from\\s+" @TO@ "(select\\s+((distinct )?(.+?)?)\\s+)?(from\\s+" @AT@ 3625 @LENGTH@ 47


INS ExpressionStatement@@MethodInvocation:NamespaceUtils.setPropertyValue(element,builder,"write-dot","writeDOT") @TO@ MethodDeclaration@@protected, void, MethodName:doParse, Element element, ParserContext parserContext, BeanDefinitionBuilder builder,  @AT@ 1595 @LENGTH@ 75
---INS MethodInvocation@@NamespaceUtils.setPropertyValue(element,builder,"write-dot","writeDOT") @TO@ ExpressionStatement@@MethodInvocation:NamespaceUtils.setPropertyValue(element,builder,"write-dot","writeDOT") @AT@ 1595 @LENGTH@ 74
------INS SimpleName@@Name:NamespaceUtils @TO@ MethodInvocation@@NamespaceUtils.setPropertyValue(element,builder,"write-dot","writeDOT") @AT@ 1595 @LENGTH@ 14
------INS SimpleName@@MethodName:setPropertyValue:[element, builder, "write-dot", "writeDOT"] @TO@ MethodInvocation@@NamespaceUtils.setPropertyValue(element,builder,"write-dot","writeDOT") @AT@ 1610 @LENGTH@ 59
---------INS SimpleName@@element @TO@ SimpleName@@MethodName:setPropertyValue:[element, builder, "write-dot", "writeDOT"] @AT@ 1627 @LENGTH@ 7
---------INS SimpleName@@builder @TO@ SimpleName@@MethodName:setPropertyValue:[element, builder, "write-dot", "writeDOT"] @AT@ 1636 @LENGTH@ 7
---------INS StringLiteral@@"write-dot" @TO@ SimpleName@@MethodName:setPropertyValue:[element, builder, "write-dot", "writeDOT"] @AT@ 1645 @LENGTH@ 11
---------INS StringLiteral@@"writeDOT" @TO@ SimpleName@@MethodName:setPropertyValue:[element, builder, "write-dot", "writeDOT"] @AT@ 1658 @LENGTH@ 10


UPD MethodDeclaration@@public, void, MethodName:testRetry, KeeperException, InterruptedException,  @TO@ public, void, MethodName:testRetry, KeeperException, InterruptedException, TimeoutException,  @AT@ 265 @LENGTH@ 476
---INS SimpleType@@TimeoutException @TO@ MethodDeclaration@@public, void, MethodName:testRetry, KeeperException, InterruptedException,  @AT@ 423 @LENGTH@ 16
---INS ExpressionStatement@@MethodInvocation:zookeeper.waitForConnected(eq(new Timespan(5,Timespan.TimeUnit.SECOND))) @TO@ MethodDeclaration@@public, void, MethodName:testRetry, KeeperException, InterruptedException,  @AT@ 617 @LENGTH@ 74
------INS MethodInvocation@@zookeeper.waitForConnected(eq(new Timespan(5,Timespan.TimeUnit.SECOND))) @TO@ ExpressionStatement@@MethodInvocation:zookeeper.waitForConnected(eq(new Timespan(5,Timespan.TimeUnit.SECOND))) @AT@ 617 @LENGTH@ 73
---------INS SimpleName@@Name:zookeeper @TO@ MethodInvocation@@zookeeper.waitForConnected(eq(new Timespan(5,Timespan.TimeUnit.SECOND))) @AT@ 617 @LENGTH@ 9
---------INS SimpleName@@MethodName:waitForConnected:[eq(new Timespan(5,Timespan.TimeUnit.SECOND))] @TO@ MethodInvocation@@zookeeper.waitForConnected(eq(new Timespan(5,Timespan.TimeUnit.SECOND))) @AT@ 627 @LENGTH@ 63
------------INS MethodInvocation@@eq(new Timespan(5,Timespan.TimeUnit.SECOND)) @TO@ SimpleName@@MethodName:waitForConnected:[eq(new Timespan(5,Timespan.TimeUnit.SECOND))] @AT@ 644 @LENGTH@ 45
---------------INS SimpleName@@MethodName:eq:[new Timespan(5,Timespan.TimeUnit.SECOND)] @TO@ MethodInvocation@@eq(new Timespan(5,Timespan.TimeUnit.SECOND)) @AT@ 644 @LENGTH@ 45
------------------INS ClassInstanceCreation@@Timespan[5, Timespan.TimeUnit.SECOND] @TO@ SimpleName@@MethodName:eq:[new Timespan(5,Timespan.TimeUnit.SECOND)] @AT@ 647 @LENGTH@ 41
---------------------INS New@@new @TO@ ClassInstanceCreation@@Timespan[5, Timespan.TimeUnit.SECOND] @AT@ 647 @LENGTH@ 3
---------------------INS SimpleType@@Timespan @TO@ ClassInstanceCreation@@Timespan[5, Timespan.TimeUnit.SECOND] @AT@ 651 @LENGTH@ 8
---------------------INS NumberLiteral@@5 @TO@ ClassInstanceCreation@@Timespan[5, Timespan.TimeUnit.SECOND] @AT@ 660 @LENGTH@ 1
---------------------INS QualifiedName@@Timespan.TimeUnit.SECOND @TO@ ClassInstanceCreation@@Timespan[5, Timespan.TimeUnit.SECOND] @AT@ 663 @LENGTH@ 24
------------------------INS QualifiedName@@Timespan.TimeUnit @TO@ QualifiedName@@Timespan.TimeUnit.SECOND @AT@ 663 @LENGTH@ 17
---------------------------INS SimpleName@@Timespan @TO@ QualifiedName@@Timespan.TimeUnit @AT@ 663 @LENGTH@ 8
---------------------------INS SimpleName@@TimeUnit @TO@ QualifiedName@@Timespan.TimeUnit @AT@ 672 @LENGTH@ 8
------------------------INS SimpleName@@SECOND @TO@ QualifiedName@@Timespan.TimeUnit.SECOND @AT@ 681 @LENGTH@ 6
---INS ExpressionStatement@@MethodInvocation:expectLastCall().anyTimes() @TO@ MethodDeclaration@@public, void, MethodName:testRetry, KeeperException, InterruptedException,  @AT@ 700 @LENGTH@ 28
------INS MethodInvocation@@expectLastCall().anyTimes() @TO@ ExpressionStatement@@MethodInvocation:expectLastCall().anyTimes() @AT@ 700 @LENGTH@ 27
---------INS MethodInvocation@@MethodName:expectLastCall:[] @TO@ MethodInvocation@@expectLastCall().anyTimes() @AT@ 700 @LENGTH@ 16
---------INS SimpleName@@MethodName:anyTimes:[] @TO@ MethodInvocation@@expectLastCall().anyTimes() @AT@ 717 @LENGTH@ 10


UPD ReturnStatement@@SimpleName:iPredicates @TO@ MethodInvocation:FunctorUtils.<I>copy(iPredicates) @AT@ 7262 @LENGTH@ 19
---INS MethodInvocation@@FunctorUtils.<I>copy(iPredicates) @TO@ ReturnStatement@@SimpleName:iPredicates @AT@ 7254 @LENGTH@ 33
------INS SimpleName@@Name:FunctorUtils @TO@ MethodInvocation@@FunctorUtils.<I>copy(iPredicates) @AT@ 7254 @LENGTH@ 12
------INS SimpleName@@MethodName:copy:[iPredicates] @TO@ MethodInvocation@@FunctorUtils.<I>copy(iPredicates) @AT@ 7270 @LENGTH@ 17
---------INS SimpleName@@iPredicates @TO@ SimpleName@@MethodName:copy:[iPredicates] @AT@ 7275 @LENGTH@ 11
---DEL SimpleName@@iPredicates @AT@ 7269 @LENGTH@ 11


INS MethodDeclaration@@public, static, AttributeConverter, MethodName:createHardCoded, final ModelNode hardCodedValue,  @TO@ TypeDeclaration@@[public, static]Factory,  @AT@ 4394 @LENGTH@ 151
---INS Modifier@@public @TO@ MethodDeclaration@@public, static, AttributeConverter, MethodName:createHardCoded, final ModelNode hardCodedValue,  @AT@ 4394 @LENGTH@ 6
---INS Modifier@@static @TO@ MethodDeclaration@@public, static, AttributeConverter, MethodName:createHardCoded, final ModelNode hardCodedValue,  @AT@ 4401 @LENGTH@ 6
---INS SimpleType@@AttributeConverter @TO@ MethodDeclaration@@public, static, AttributeConverter, MethodName:createHardCoded, final ModelNode hardCodedValue,  @AT@ 4408 @LENGTH@ 18
---INS SimpleName@@MethodName:createHardCoded @TO@ MethodDeclaration@@public, static, AttributeConverter, MethodName:createHardCoded, final ModelNode hardCodedValue,  @AT@ 4427 @LENGTH@ 15
---INS SingleVariableDeclaration@@final ModelNode hardCodedValue @TO@ MethodDeclaration@@public, static, AttributeConverter, MethodName:createHardCoded, final ModelNode hardCodedValue,  @AT@ 4443 @LENGTH@ 30
------INS Modifier@@final @TO@ SingleVariableDeclaration@@final ModelNode hardCodedValue @AT@ 4443 @LENGTH@ 5
------INS SimpleType@@ModelNode @TO@ SingleVariableDeclaration@@final ModelNode hardCodedValue @AT@ 4449 @LENGTH@ 9
------INS SimpleName@@hardCodedValue @TO@ SingleVariableDeclaration@@final ModelNode hardCodedValue @AT@ 4459 @LENGTH@ 14
---INS ReturnStatement@@MethodInvocation:createHardCoded(hardCodedValue,false) @TO@ MethodDeclaration@@public, static, AttributeConverter, MethodName:createHardCoded, final ModelNode hardCodedValue,  @AT@ 4489 @LENGTH@ 46
------INS MethodInvocation@@createHardCoded(hardCodedValue,false) @TO@ ReturnStatement@@MethodInvocation:createHardCoded(hardCodedValue,false) @AT@ 4496 @LENGTH@ 38
---------INS SimpleName@@MethodName:createHardCoded:[hardCodedValue, false] @TO@ MethodInvocation@@createHardCoded(hardCodedValue,false) @AT@ 4496 @LENGTH@ 38
------------INS SimpleName@@hardCodedValue @TO@ SimpleName@@MethodName:createHardCoded:[hardCodedValue, false] @AT@ 4512 @LENGTH@ 14
------------INS BooleanLiteral@@false @TO@ SimpleName@@MethodName:createHardCoded:[hardCodedValue, false] @AT@ 4528 @LENGTH@ 5


UPD VariableDeclarationStatement@@int max=Math.min(total,(min + 1) * range); @TO@ int max=Math.min(total,i * range); @AT@ 1296 @LENGTH@ 41
---UPD VariableDeclarationFragment@@max=Math.min(total,(min + 1) * range) @TO@ max=Math.min(total,i * range) @AT@ 1300 @LENGTH@ 36
------UPD MethodInvocation@@Math.min(total,(min + 1) * range) @TO@ Math.min(total,i * range) @AT@ 1306 @LENGTH@ 30
---------UPD SimpleName@@MethodName:min:[total, (min + 1) * range] @TO@ MethodName:min:[total, i * range] @AT@ 1311 @LENGTH@ 25
------------UPD InfixExpression@@(min + 1) * range @TO@ i * range @AT@ 1322 @LENGTH@ 13
---------------DEL ParenthesizedExpression@@(min + 1) @AT@ 1322 @LENGTH@ 7
------------------DEL InfixExpression@@min + 1 @AT@ 1323 @LENGTH@ 5
---------------------DEL Operator@@+ @AT@ 1326 @LENGTH@ 1
---------------------DEL NumberLiteral@@1 @AT@ 1327 @LENGTH@ 1
---------------MOV SimpleName@@min @TO@ InfixExpression@@(min + 1) * range @AT@ 1323 @LENGTH@ 3


UPD MethodDeclaration@@public, static, int, MethodName:maxSize, final Collection<?> coll,  @TO@ public, static, int, MethodName:maxSize, final Collection<? extends Object> coll,  @AT@ 49428 @LENGTH@ 587
---UPD SingleVariableDeclaration@@final Collection<?> coll @TO@ final Collection<? extends Object> coll @AT@ 49454 @LENGTH@ 24
------UPD ParameterizedType@@Collection<?> @TO@ Collection<? extends Object> @AT@ 49460 @LENGTH@ 13
---UPD TryStatement@@try {  final BoundedCollection<?> bcoll=UnmodifiableBoundedCollection.unmodifiableBoundedCollection((Collection<Object>)coll);  return bcoll.maxSize();} catch (final IllegalArgumentException ex) {  return -1;} @TO@ try {  final BoundedCollection<?> bcoll=UnmodifiableBoundedCollection.unmodifiableBoundedCollection(coll);  return bcoll.maxSize();} catch (final IllegalArgumentException ex) {  return -1;} @AT@ 49726 @LENGTH@ 283
------UPD VariableDeclarationStatement@@final BoundedCollection<?> bcoll=UnmodifiableBoundedCollection.unmodifiableBoundedCollection((Collection<Object>)coll); @TO@ final BoundedCollection<?> bcoll=UnmodifiableBoundedCollection.unmodifiableBoundedCollection(coll); @AT@ 49744 @LENGTH@ 142
---------UPD VariableDeclarationFragment@@bcoll=UnmodifiableBoundedCollection.unmodifiableBoundedCollection((Collection<Object>)coll) @TO@ bcoll=UnmodifiableBoundedCollection.unmodifiableBoundedCollection(coll) @AT@ 49771 @LENGTH@ 114
------------UPD MethodInvocation@@UnmodifiableBoundedCollection.unmodifiableBoundedCollection((Collection<Object>)coll) @TO@ UnmodifiableBoundedCollection.unmodifiableBoundedCollection(coll) @AT@ 49799 @LENGTH@ 86
---------------UPD SimpleName@@MethodName:unmodifiableBoundedCollection:[(Collection<Object>)coll] @TO@ MethodName:unmodifiableBoundedCollection:[coll] @AT@ 49829 @LENGTH@ 56
------------------DEL CastExpression@@(Collection<Object>)coll @AT@ 49859 @LENGTH@ 25
---------------------DEL ParameterizedType@@Collection<Object> @AT@ 49860 @LENGTH@ 18
------------------------DEL SimpleType@@Collection @AT@ 49860 @LENGTH@ 10
------------------------DEL SimpleType@@Object @AT@ 49871 @LENGTH@ 6
---------------------DEL SimpleName@@coll @AT@ 49880 @LENGTH@ 4
------------------INS SimpleName@@coll @TO@ SimpleName@@MethodName:unmodifiableBoundedCollection:[(Collection<Object>)coll] @AT@ 49902 @LENGTH@ 4


INS ExpressionStatement@@MethodInvocation:transformers.registerSubResource(JMSBridgeDefinition.PATH,true) @TO@ MethodDeclaration@@private, static, void, MethodName:registerTransformers_1_1_0, final SubsystemRegistration subsystem,  @AT@ 18550 @LENGTH@ 65
---INS MethodInvocation@@transformers.registerSubResource(JMSBridgeDefinition.PATH,true) @TO@ ExpressionStatement@@MethodInvocation:transformers.registerSubResource(JMSBridgeDefinition.PATH,true) @AT@ 18550 @LENGTH@ 64
------INS SimpleName@@Name:transformers @TO@ MethodInvocation@@transformers.registerSubResource(JMSBridgeDefinition.PATH,true) @AT@ 18550 @LENGTH@ 12
------INS SimpleName@@MethodName:registerSubResource:[JMSBridgeDefinition.PATH, true] @TO@ MethodInvocation@@transformers.registerSubResource(JMSBridgeDefinition.PATH,true) @AT@ 18563 @LENGTH@ 51
---------INS QualifiedName@@JMSBridgeDefinition.PATH @TO@ SimpleName@@MethodName:registerSubResource:[JMSBridgeDefinition.PATH, true] @AT@ 18583 @LENGTH@ 24
------------INS SimpleName@@JMSBridgeDefinition @TO@ QualifiedName@@JMSBridgeDefinition.PATH @AT@ 18583 @LENGTH@ 19
------------INS SimpleName@@PATH @TO@ QualifiedName@@JMSBridgeDefinition.PATH @AT@ 18603 @LENGTH@ 4
---------INS BooleanLiteral@@true @TO@ SimpleName@@MethodName:registerSubResource:[JMSBridgeDefinition.PATH, true] @AT@ 18609 @LENGTH@ 4


UPD IfStatement@@if (!subject.getPrivateCredentials(String.class).isEmpty() && !subject.getPrincipals(UserPrincipal.class).isEmpty()) {  return subject.getPrivateCredentials(String.class).iterator().next();} @TO@ if (subject != null && subject.getPrivateCredentials(String.class) != null && !subject.getPrivateCredentials(String.class).isEmpty() && subject.getPrincipals(UserPrincipal.class) != null && !subject.getPrincipals(UserPrincipal.class).isEmpty()) {  return subject.getPrivateCredentials(String.class).iterator().next();} @AT@ 2601 @LENGTH@ 210
---UPD InfixExpression@@!subject.getPrivateCredentials(String.class).isEmpty() && !subject.getPrincipals(UserPrincipal.class).isEmpty() @TO@ subject != null && subject.getPrivateCredentials(String.class) != null && !subject.getPrivateCredentials(String.class).isEmpty() && subject.getPrincipals(UserPrincipal.class) != null && !subject.getPrincipals(UserPrincipal.class).isEmpty() @AT@ 2605 @LENGTH@ 111
------INS InfixExpression@@subject != null && subject.getPrivateCredentials(String.class) != null && !subject.getPrivateCredentials(String.class).isEmpty() && subject.getPrincipals(UserPrincipal.class) != null @TO@ InfixExpression@@!subject.getPrivateCredentials(String.class).isEmpty() && !subject.getPrincipals(UserPrincipal.class).isEmpty() @AT@ 2711 @LENGTH@ 214
---------INS InfixExpression@@subject != null && subject.getPrivateCredentials(String.class) != null && !subject.getPrivateCredentials(String.class).isEmpty() @TO@ InfixExpression@@subject != null && subject.getPrivateCredentials(String.class) != null && !subject.getPrivateCredentials(String.class).isEmpty() && subject.getPrincipals(UserPrincipal.class) != null @AT@ 2711 @LENGTH@ 144
------------MOV PrefixExpression@@!subject.getPrivateCredentials(String.class).isEmpty() @TO@ InfixExpression@@subject != null && subject.getPrivateCredentials(String.class) != null && !subject.getPrivateCredentials(String.class).isEmpty() @AT@ 2605 @LENGTH@ 54
------------INS InfixExpression@@subject != null && subject.getPrivateCredentials(String.class) != null @TO@ InfixExpression@@subject != null && subject.getPrivateCredentials(String.class) != null && !subject.getPrivateCredentials(String.class).isEmpty() @AT@ 2711 @LENGTH@ 86
---------------MOV Operator@@&& @TO@ InfixExpression@@subject != null && subject.getPrivateCredentials(String.class) != null @AT@ 2659 @LENGTH@ 2
---------------INS InfixExpression@@subject != null @TO@ InfixExpression@@subject != null && subject.getPrivateCredentials(String.class) != null @AT@ 2711 @LENGTH@ 15
------------------INS SimpleName@@subject @TO@ InfixExpression@@subject != null @AT@ 2711 @LENGTH@ 7
------------------INS Operator@@!= @TO@ InfixExpression@@subject != null @AT@ 2718 @LENGTH@ 2
------------------INS NullLiteral@@null @TO@ InfixExpression@@subject != null @AT@ 2722 @LENGTH@ 4
---------------INS InfixExpression@@subject.getPrivateCredentials(String.class) != null @TO@ InfixExpression@@subject != null && subject.getPrivateCredentials(String.class) != null @AT@ 2746 @LENGTH@ 51
------------------INS MethodInvocation@@subject.getPrivateCredentials(String.class) @TO@ InfixExpression@@subject.getPrivateCredentials(String.class) != null @AT@ 2746 @LENGTH@ 43
---------------------INS SimpleName@@Name:subject @TO@ MethodInvocation@@subject.getPrivateCredentials(String.class) @AT@ 2746 @LENGTH@ 7
---------------------INS SimpleName@@MethodName:getPrivateCredentials:[String.class] @TO@ MethodInvocation@@subject.getPrivateCredentials(String.class) @AT@ 2754 @LENGTH@ 35
------------------------INS TypeLiteral@@String.class @TO@ SimpleName@@MethodName:getPrivateCredentials:[String.class] @AT@ 2776 @LENGTH@ 12
------------------INS Operator@@!= @TO@ InfixExpression@@subject.getPrivateCredentials(String.class) != null @AT@ 2789 @LENGTH@ 2
------------------INS NullLiteral@@null @TO@ InfixExpression@@subject.getPrivateCredentials(String.class) != null @AT@ 2793 @LENGTH@ 4
------------INS Operator@@&& @TO@ InfixExpression@@subject != null && subject.getPrivateCredentials(String.class) != null && !subject.getPrivateCredentials(String.class).isEmpty() @AT@ 2797 @LENGTH@ 2
---------INS Operator@@&& @TO@ InfixExpression@@subject != null && subject.getPrivateCredentials(String.class) != null && !subject.getPrivateCredentials(String.class).isEmpty() && subject.getPrincipals(UserPrincipal.class) != null @AT@ 2855 @LENGTH@ 2
---------INS InfixExpression@@subject.getPrincipals(UserPrincipal.class) != null @TO@ InfixExpression@@subject != null && subject.getPrivateCredentials(String.class) != null && !subject.getPrivateCredentials(String.class).isEmpty() && subject.getPrincipals(UserPrincipal.class) != null @AT@ 2875 @LENGTH@ 50
------------INS MethodInvocation@@subject.getPrincipals(UserPrincipal.class) @TO@ InfixExpression@@subject.getPrincipals(UserPrincipal.class) != null @AT@ 2875 @LENGTH@ 42
---------------INS SimpleName@@Name:subject @TO@ MethodInvocation@@subject.getPrincipals(UserPrincipal.class) @AT@ 2875 @LENGTH@ 7
---------------INS SimpleName@@MethodName:getPrincipals:[UserPrincipal.class] @TO@ MethodInvocation@@subject.getPrincipals(UserPrincipal.class) @AT@ 2883 @LENGTH@ 34
------------------INS TypeLiteral@@UserPrincipal.class @TO@ SimpleName@@MethodName:getPrincipals:[UserPrincipal.class] @AT@ 2897 @LENGTH@ 19
------------INS Operator@@!= @TO@ InfixExpression@@subject.getPrincipals(UserPrincipal.class) != null @AT@ 2917 @LENGTH@ 2
------------INS NullLiteral@@null @TO@ InfixExpression@@subject.getPrincipals(UserPrincipal.class) != null @AT@ 2921 @LENGTH@ 4
------INS Operator@@&& @TO@ InfixExpression@@!subject.getPrivateCredentials(String.class).isEmpty() && !subject.getPrincipals(UserPrincipal.class).isEmpty() @AT@ 2925 @LENGTH@ 2


UPD ExpressionStatement@@MethodInvocation:onException(CamelException.class).handled(false) @TO@ MethodInvocation:onException(CamelException.class).to("mock:failed") @AT@ 10163 @LENGTH@ 49
---UPD MethodInvocation@@onException(CamelException.class).handled(false) @TO@ onException(CamelException.class).to("mock:failed") @AT@ 10163 @LENGTH@ 48
------UPD SimpleName@@MethodName:handled:[false] @TO@ MethodName:to:["mock:failed"] @AT@ 10197 @LENGTH@ 14
---------INS StringLiteral@@"mock:failed" @TO@ SimpleName@@MethodName:handled:[false] @AT@ 10048 @LENGTH@ 13
---------DEL BooleanLiteral@@false @AT@ 10205 @LENGTH@ 5


UPD ThrowStatement@@ClassInstanceCreation:new IllegalStateException("Coult not find default template") @TO@ ClassInstanceCreation:new IllegalStateException("Could not find default template") @AT@ 2990 @LENGTH@ 67
---UPD ClassInstanceCreation@@IllegalStateException["Coult not find default template"] @TO@ IllegalStateException["Could not find default template"] @AT@ 2996 @LENGTH@ 60
------UPD StringLiteral@@"Coult not find default template" @TO@ "Could not find default template" @AT@ 3022 @LENGTH@ 33


DEL MethodDeclaration@@public, void, MethodName:testDbSize,  @AT@ 2388 @LENGTH@ 29
---DEL Modifier@@public @AT@ 2388 @LENGTH@ 6
---DEL PrimitiveType@@void @AT@ 2395 @LENGTH@ 4
---DEL SimpleName@@MethodName:testDbSize @AT@ 2400 @LENGTH@ 10


UPD ExpressionStatement@@MethodInvocation:getLog().info("Set the XSL transformer factory class name to be '" + transformerFactoryClassName + "'") @TO@ MethodInvocation:getLog().info("Set the XSLT factory class name to be '" + transformerFactoryClassName + "'") @AT@ 9601 @LENGTH@ 104
---UPD MethodInvocation@@getLog().info("Set the XSL transformer factory class name to be '" + transformerFactoryClassName + "'") @TO@ getLog().info("Set the XSLT factory class name to be '" + transformerFactoryClassName + "'") @AT@ 9601 @LENGTH@ 103
------UPD SimpleName@@MethodName:info:["Set the XSL transformer factory class name to be '" + transformerFactoryClassName + "'"] @TO@ MethodName:info:["Set the XSLT factory class name to be '" + transformerFactoryClassName + "'"] @AT@ 9610 @LENGTH@ 94
---------UPD InfixExpression@@"Set the XSL transformer factory class name to be '" + transformerFactoryClassName + "'" @TO@ "Set the XSLT factory class name to be '" + transformerFactoryClassName + "'" @AT@ 9615 @LENGTH@ 88
------------UPD StringLiteral@@"Set the XSL transformer factory class name to be '" @TO@ "Set the XSLT factory class name to be '" @AT@ 9615 @LENGTH@ 52


INS IfStatement@@if (gPattern == null) {  return;} @TO@ MethodDeclaration@@public, void, MethodName:setGetPattern, byte[][] gPattern,  @AT@ 2421 @LENGTH@ 37
---INS InfixExpression@@gPattern == null @TO@ IfStatement@@if (gPattern == null) {  return;} @AT@ 2424 @LENGTH@ 16
------INS SimpleName@@gPattern @TO@ InfixExpression@@gPattern == null @AT@ 2424 @LENGTH@ 8
------INS Operator@@== @TO@ InfixExpression@@gPattern == null @AT@ 2432 @LENGTH@ 2
------INS NullLiteral@@null @TO@ InfixExpression@@gPattern == null @AT@ 2436 @LENGTH@ 4
---INS Block@@ThenBody:{  return;} @TO@ IfStatement@@if (gPattern == null) {  return;} @AT@ 2442 @LENGTH@ 16
------INS ReturnStatement@@ @TO@ Block@@ThenBody:{  return;} @AT@ 2447 @LENGTH@ 7


UPD ReturnStatement@@ArrayCreation:new Option[]{new DefaultCompositeOption(fabricDistributionConfiguration()),debugConfiguration("5005",false)} @TO@ ArrayCreation:new Option[]{new DefaultCompositeOption(fabricDistributionConfiguration())} @AT@ 2847 @LENGTH@ 160
---UPD ArrayCreation@@new Option[]{new DefaultCompositeOption(fabricDistributionConfiguration()),debugConfiguration("5005",false)} @TO@ new Option[]{new DefaultCompositeOption(fabricDistributionConfiguration())} @AT@ 2854 @LENGTH@ 152
------UPD ArrayInitializer@@{new DefaultCompositeOption(fabricDistributionConfiguration()),debugConfiguration("5005",false)} @TO@ {new DefaultCompositeOption(fabricDistributionConfiguration())} @AT@ 2867 @LENGTH@ 139
---------DEL MethodInvocation@@debugConfiguration("5005",false) @AT@ 2964 @LENGTH@ 32
------------DEL SimpleName@@MethodName:debugConfiguration:["5005", false] @AT@ 2964 @LENGTH@ 32
---------------DEL StringLiteral@@"5005" @AT@ 2983 @LENGTH@ 6
---------------DEL BooleanLiteral@@false @AT@ 2990 @LENGTH@ 5


UPD TypeDeclaration@@[@RunWith(JMock.class), public, abstract]AbstractJMockTests,  @TO@ [public, abstract]AbstractJMockTests,  @AT@ 313 @LENGTH@ 182
---DEL SingleMemberAnnotation@@@RunWith(JMock.class) @AT@ 313 @LENGTH@ 21


UPD Block@@ThenBody:{  String groupId=pathMatcher.group(1).replaceAll("/",".");  String artifactId=pathMatcher.group(2);  String version=pathMatcher.group(3);  metadata=new DefaultMetadata(groupId,artifactId,version,"",Metadata.Nature.RELEASE_OR_SNAPSHOT);} @TO@ ThenBody:{  String groupId=pathMatcher.group(1).replaceAll("/",".");  String artifactId=pathMatcher.group(2);  String version=pathMatcher.group(3);  String type=pathMatcher.group(9);  if (type == null) {    type="";  }  metadata=new DefaultMetadata(groupId,artifactId,version,type,Metadata.Nature.RELEASE_OR_SNAPSHOT);} @AT@ 15716 @LENGTH@ 304
---UPD ExpressionStatement@@Assignment:metadata=new DefaultMetadata(groupId,artifactId,version,"",Metadata.Nature.RELEASE_OR_SNAPSHOT) @TO@ Assignment:metadata=new DefaultMetadata(groupId,artifactId,version,type,Metadata.Nature.RELEASE_OR_SNAPSHOT) @AT@ 15907 @LENGTH@ 102
------UPD Assignment@@metadata=new DefaultMetadata(groupId,artifactId,version,"",Metadata.Nature.RELEASE_OR_SNAPSHOT) @TO@ metadata=new DefaultMetadata(groupId,artifactId,version,type,Metadata.Nature.RELEASE_OR_SNAPSHOT) @AT@ 15907 @LENGTH@ 101
---------UPD ClassInstanceCreation@@DefaultMetadata[groupId, artifactId, version, "", Metadata.Nature.RELEASE_OR_SNAPSHOT] @TO@ DefaultMetadata[groupId, artifactId, version, type, Metadata.Nature.RELEASE_OR_SNAPSHOT] @AT@ 15918 @LENGTH@ 90
------------DEL StringLiteral@@"" @AT@ 15968 @LENGTH@ 2
------------INS SimpleName@@type @TO@ ClassInstanceCreation@@DefaultMetadata[groupId, artifactId, version, "", Metadata.Nature.RELEASE_OR_SNAPSHOT] @AT@ 16116 @LENGTH@ 4
---INS VariableDeclarationStatement@@String type=pathMatcher.group(9); @TO@ Block@@ThenBody:{  String groupId=pathMatcher.group(1).replaceAll("/",".");  String artifactId=pathMatcher.group(2);  String version=pathMatcher.group(3);  metadata=new DefaultMetadata(groupId,artifactId,version,"",Metadata.Nature.RELEASE_OR_SNAPSHOT);} @AT@ 15934 @LENGTH@ 35
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String type=pathMatcher.group(9); @AT@ 15934 @LENGTH@ 6
------INS VariableDeclarationFragment@@type=pathMatcher.group(9) @TO@ VariableDeclarationStatement@@String type=pathMatcher.group(9); @AT@ 15941 @LENGTH@ 27
---------INS SimpleName@@type @TO@ VariableDeclarationFragment@@type=pathMatcher.group(9) @AT@ 15941 @LENGTH@ 4
---------INS MethodInvocation@@pathMatcher.group(9) @TO@ VariableDeclarationFragment@@type=pathMatcher.group(9) @AT@ 15948 @LENGTH@ 20
------------INS SimpleName@@Name:pathMatcher @TO@ MethodInvocation@@pathMatcher.group(9) @AT@ 15948 @LENGTH@ 11
------------INS SimpleName@@MethodName:group:[9] @TO@ MethodInvocation@@pathMatcher.group(9) @AT@ 15960 @LENGTH@ 8
---------------INS NumberLiteral@@9 @TO@ SimpleName@@MethodName:group:[9] @AT@ 15966 @LENGTH@ 1
---INS IfStatement@@if (type == null) {  type="";} @TO@ Block@@ThenBody:{  String groupId=pathMatcher.group(1).replaceAll("/",".");  String artifactId=pathMatcher.group(2);  String version=pathMatcher.group(3);  metadata=new DefaultMetadata(groupId,artifactId,version,"",Metadata.Nature.RELEASE_OR_SNAPSHOT);} @AT@ 15982 @LENGTH@ 60
------INS InfixExpression@@type == null @TO@ IfStatement@@if (type == null) {  type="";} @AT@ 15986 @LENGTH@ 12
---------INS SimpleName@@type @TO@ InfixExpression@@type == null @AT@ 15986 @LENGTH@ 4
---------INS Operator@@== @TO@ InfixExpression@@type == null @AT@ 15990 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@type == null @AT@ 15994 @LENGTH@ 4
------INS Block@@ThenBody:{  type="";} @TO@ IfStatement@@if (type == null) {  type="";} @AT@ 16000 @LENGTH@ 42
---------INS ExpressionStatement@@Assignment:type="" @TO@ Block@@ThenBody:{  type="";} @AT@ 16018 @LENGTH@ 10
------------INS Assignment@@type="" @TO@ ExpressionStatement@@Assignment:type="" @AT@ 16018 @LENGTH@ 9
---------------INS SimpleName@@type @TO@ Assignment@@type="" @AT@ 16018 @LENGTH@ 4
---------------INS Operator@@= @TO@ Assignment@@type="" @AT@ 16022 @LENGTH@ 1
---------------INS StringLiteral@@"" @TO@ Assignment@@type="" @AT@ 16025 @LENGTH@ 2


UPD MethodDeclaration@@public, static, Query, MethodName:query, Criteria critera,  @TO@ public, static, Query, MethodName:query, Criteria criteria,  @AT@ 1718 @LENGTH@ 77
---UPD SingleVariableDeclaration@@Criteria critera @TO@ Criteria criteria @AT@ 1744 @LENGTH@ 16
------UPD SimpleName@@critera @TO@ criteria @AT@ 1753 @LENGTH@ 7
---UPD ReturnStatement@@ClassInstanceCreation:new Query(critera) @TO@ ClassInstanceCreation:new Query(criteria) @AT@ 1766 @LENGTH@ 26
------UPD ClassInstanceCreation@@Query[critera] @TO@ Query[criteria] @AT@ 1773 @LENGTH@ 18
---------UPD SimpleName@@critera @TO@ criteria @AT@ 1783 @LENGTH@ 7


INS MethodDeclaration@@protected, void, MethodName:preCreateProcessor,  @TO@ TypeDeclaration@@[@XmlRootElement(name="doTry"), @XmlAccessorType(XmlAccessType.FIELD), public]TryDefinition, OutputDefinition<TryDefinition> @AT@ 8630 @LENGTH@ 169
---INS Modifier@@protected @TO@ MethodDeclaration@@protected, void, MethodName:preCreateProcessor,  @AT@ 8630 @LENGTH@ 9
---INS PrimitiveType@@void @TO@ MethodDeclaration@@protected, void, MethodName:preCreateProcessor,  @AT@ 8640 @LENGTH@ 4
---INS SimpleName@@MethodName:preCreateProcessor @TO@ MethodDeclaration@@protected, void, MethodName:preCreateProcessor,  @AT@ 8645 @LENGTH@ 18
---INS ExpressionStatement@@Assignment:initialized=false @TO@ MethodDeclaration@@protected, void, MethodName:preCreateProcessor,  @AT@ 8745 @LENGTH@ 20
------INS Assignment@@initialized=false @TO@ ExpressionStatement@@Assignment:initialized=false @AT@ 8745 @LENGTH@ 19
---------INS SimpleName@@initialized @TO@ Assignment@@initialized=false @AT@ 8745 @LENGTH@ 11
---------INS Operator@@= @TO@ Assignment@@initialized=false @AT@ 8756 @LENGTH@ 1
---------INS BooleanLiteral@@false @TO@ Assignment@@initialized=false @AT@ 8759 @LENGTH@ 5
---INS ExpressionStatement@@MethodInvocation:checkInitialized() @TO@ MethodDeclaration@@protected, void, MethodName:preCreateProcessor,  @AT@ 8774 @LENGTH@ 19
------INS MethodInvocation@@MethodName:checkInitialized:[] @TO@ ExpressionStatement@@MethodInvocation:checkInitialized() @AT@ 8774 @LENGTH@ 18


UPD IfStatement@@if (consoleHandler != null && "/".equals(exchange.getCanonicalPath())) {  StringBuilder redirect=new StringBuilder(requestUrl);  redirect.append(consoleHandler.getContext()).append(consoleHandler.getDefaultPath());  exchange.getResponseHeaders().add(Headers.LOCATION,redirect.toString());  MOVED_PERMANENTLY.handleRequest(exchange);  return;} @TO@ if (consoleHandler != null && "/".equals(exchange.getRequestPath())) {  StringBuilder redirect=new StringBuilder(requestUrl);  redirect.append(consoleHandler.getContext()).append(consoleHandler.getDefaultPath());  exchange.getResponseHeaders().add(Headers.LOCATION,redirect.toString());  MOVED_PERMANENTLY.handleRequest(exchange);  return;} @AT@ 2153 @LENGTH@ 409
---UPD InfixExpression@@consoleHandler != null && "/".equals(exchange.getCanonicalPath()) @TO@ consoleHandler != null && "/".equals(exchange.getRequestPath()) @AT@ 2157 @LENGTH@ 65
------UPD MethodInvocation@@"/".equals(exchange.getCanonicalPath()) @TO@ "/".equals(exchange.getRequestPath()) @AT@ 2183 @LENGTH@ 39
---------UPD SimpleName@@MethodName:equals:[exchange.getCanonicalPath()] @TO@ MethodName:equals:[exchange.getRequestPath()] @AT@ 2187 @LENGTH@ 35
------------UPD MethodInvocation@@exchange.getCanonicalPath() @TO@ exchange.getRequestPath() @AT@ 2194 @LENGTH@ 27
---------------UPD SimpleName@@MethodName:getCanonicalPath:[] @TO@ MethodName:getRequestPath:[] @AT@ 2203 @LENGTH@ 18


DEL ExpressionStatement@@MethodInvocation:onException(IllegalArgumentException.class).handled(false) @AT@ 3206 @LENGTH@ 59
---DEL MethodInvocation@@onException(IllegalArgumentException.class).handled(false) @AT@ 3206 @LENGTH@ 58
------DEL MethodInvocation@@MethodName:onException:[IllegalArgumentException.class] @AT@ 3206 @LENGTH@ 43
---------DEL TypeLiteral@@IllegalArgumentException.class @AT@ 3218 @LENGTH@ 30
------DEL SimpleName@@MethodName:handled:[false] @AT@ 3250 @LENGTH@ 14
---------DEL BooleanLiteral@@false @AT@ 3258 @LENGTH@ 5


UPD ExpressionStatement@@MethodInvocation:Utils.makeCallWithBasicAuthn(rolesPrintingURL,"jduke","theduke",401) @TO@ MethodInvocation:testDeployment(webAppURL,"jduke","TheDuke","Echo","jduke") @AT@ 8831 @LENGTH@ 72
---UPD MethodInvocation@@Utils.makeCallWithBasicAuthn(rolesPrintingURL,"jduke","theduke",401) @TO@ testDeployment(webAppURL,"jduke","TheDuke","Echo","jduke") @AT@ 8831 @LENGTH@ 71
------DEL SimpleName@@Name:Utils @AT@ 8831 @LENGTH@ 5
------UPD SimpleName@@MethodName:makeCallWithBasicAuthn:[rolesPrintingURL, "jduke", "theduke", 401] @TO@ MethodName:testDeployment:[webAppURL, "jduke", "TheDuke", "Echo", "jduke"] @AT@ 8837 @LENGTH@ 65
---------INS StringLiteral@@"TheDuke" @TO@ SimpleName@@MethodName:makeCallWithBasicAuthn:[rolesPrintingURL, "jduke", "theduke", 401] @AT@ 8683 @LENGTH@ 9
---------INS StringLiteral@@"Echo" @TO@ SimpleName@@MethodName:makeCallWithBasicAuthn:[rolesPrintingURL, "jduke", "theduke", 401] @AT@ 8694 @LENGTH@ 6
---------UPD SimpleName@@rolesPrintingURL @TO@ webAppURL @AT@ 8860 @LENGTH@ 16
---------UPD StringLiteral@@"theduke" @TO@ "jduke" @AT@ 8887 @LENGTH@ 9
---------DEL NumberLiteral@@401 @AT@ 8898 @LENGTH@ 3


INS MethodDeclaration@@public, SimpleAttributeDefinitionBuilder, MethodName:addFlag, final AttributeAccess.Flag flag,  @TO@ TypeDeclaration@@[public]SimpleAttributeDefinitionBuilder, AbstractAttributeDefinitionBuilder<SimpleAttributeDefinitionBuilder,SimpleAttributeDefinition> @AT@ 6417 @LENGTH@ 124
---INS Modifier@@public @TO@ MethodDeclaration@@public, SimpleAttributeDefinitionBuilder, MethodName:addFlag, final AttributeAccess.Flag flag,  @AT@ 6417 @LENGTH@ 6
---INS SimpleType@@SimpleAttributeDefinitionBuilder @TO@ MethodDeclaration@@public, SimpleAttributeDefinitionBuilder, MethodName:addFlag, final AttributeAccess.Flag flag,  @AT@ 6424 @LENGTH@ 32
---INS SimpleName@@MethodName:addFlag @TO@ MethodDeclaration@@public, SimpleAttributeDefinitionBuilder, MethodName:addFlag, final AttributeAccess.Flag flag,  @AT@ 6457 @LENGTH@ 7
---INS SingleVariableDeclaration@@final AttributeAccess.Flag flag @TO@ MethodDeclaration@@public, SimpleAttributeDefinitionBuilder, MethodName:addFlag, final AttributeAccess.Flag flag,  @AT@ 6465 @LENGTH@ 31
------INS Modifier@@final @TO@ SingleVariableDeclaration@@final AttributeAccess.Flag flag @AT@ 6465 @LENGTH@ 5
------INS SimpleType@@AttributeAccess.Flag @TO@ SingleVariableDeclaration@@final AttributeAccess.Flag flag @AT@ 6471 @LENGTH@ 20
------INS SimpleName@@flag @TO@ SingleVariableDeclaration@@final AttributeAccess.Flag flag @AT@ 6492 @LENGTH@ 4
---INS ReturnStatement@@SuperMethodInvocation:super.addFlag(flag) @TO@ MethodDeclaration@@public, SimpleAttributeDefinitionBuilder, MethodName:addFlag, final AttributeAccess.Flag flag,  @AT@ 6508 @LENGTH@ 27
------INS SuperMethodInvocation@@super.addFlag(flag) @TO@ ReturnStatement@@SuperMethodInvocation:super.addFlag(flag) @AT@ 6515 @LENGTH@ 19
---------INS SimpleName@@MethodName:addFlag:[flag] @TO@ SuperMethodInvocation@@super.addFlag(flag) @AT@ 6521 @LENGTH@ 7
---------INS SimpleName@@flag @TO@ SuperMethodInvocation@@super.addFlag(flag) @AT@ 6529 @LENGTH@ 4


INS VariableDeclarationStatement@@final ClassLoader oldClassLoader=WildFlySecurityManager.setCurrentContextClassLoaderPrivileged((ClassLoader)null); @TO@ MethodDeclaration@@public, Object, MethodName:processInvocation, final InterceptorContext context, Exception,  @AT@ 4637 @LENGTH@ 117
---INS Modifier@@final @TO@ VariableDeclarationStatement@@final ClassLoader oldClassLoader=WildFlySecurityManager.setCurrentContextClassLoaderPrivileged((ClassLoader)null); @AT@ 4637 @LENGTH@ 5
---INS SimpleType@@ClassLoader @TO@ VariableDeclarationStatement@@final ClassLoader oldClassLoader=WildFlySecurityManager.setCurrentContextClassLoaderPrivileged((ClassLoader)null); @AT@ 4643 @LENGTH@ 11
---INS VariableDeclarationFragment@@oldClassLoader=WildFlySecurityManager.setCurrentContextClassLoaderPrivileged((ClassLoader)null) @TO@ VariableDeclarationStatement@@final ClassLoader oldClassLoader=WildFlySecurityManager.setCurrentContextClassLoaderPrivileged((ClassLoader)null); @AT@ 4655 @LENGTH@ 98
------INS SimpleName@@oldClassLoader @TO@ VariableDeclarationFragment@@oldClassLoader=WildFlySecurityManager.setCurrentContextClassLoaderPrivileged((ClassLoader)null) @AT@ 4655 @LENGTH@ 14
------INS MethodInvocation@@WildFlySecurityManager.setCurrentContextClassLoaderPrivileged((ClassLoader)null) @TO@ VariableDeclarationFragment@@oldClassLoader=WildFlySecurityManager.setCurrentContextClassLoaderPrivileged((ClassLoader)null) @AT@ 4672 @LENGTH@ 81
---------INS SimpleName@@Name:WildFlySecurityManager @TO@ MethodInvocation@@WildFlySecurityManager.setCurrentContextClassLoaderPrivileged((ClassLoader)null) @AT@ 4672 @LENGTH@ 22
---------INS SimpleName@@MethodName:setCurrentContextClassLoaderPrivileged:[(ClassLoader)null] @TO@ MethodInvocation@@WildFlySecurityManager.setCurrentContextClassLoaderPrivileged((ClassLoader)null) @AT@ 4695 @LENGTH@ 58
------------INS CastExpression@@(ClassLoader)null @TO@ SimpleName@@MethodName:setCurrentContextClassLoaderPrivileged:[(ClassLoader)null] @AT@ 4734 @LENGTH@ 18
---------------INS SimpleType@@ClassLoader @TO@ CastExpression@@(ClassLoader)null @AT@ 4735 @LENGTH@ 11
---------------INS NullLiteral@@null @TO@ CastExpression@@(ClassLoader)null @AT@ 4748 @LENGTH@ 4


UPD FieldDeclaration@@static, final, OperationStepHandler, [INSTANCE=new UndefineAttributeHandler()] @TO@ public, static, final, OperationStepHandler, [INSTANCE=new UndefineAttributeHandler()] @AT@ 1991 @LENGTH@ 76
---INS Modifier@@public @TO@ FieldDeclaration@@static, final, OperationStepHandler, [INSTANCE=new UndefineAttributeHandler()] @AT@ 1991 @LENGTH@ 6


UPD FieldDeclaration@@private, Map<Integer,DataField>, [dataFields=new LinkedHashMap<Integer,DataField>()] @TO@ private, Map<Integer,DataField>, [dataFields=new TreeMap<Integer,DataField>()] @AT@ 2090 @LENGTH@ 85
---UPD VariableDeclarationFragment@@dataFields=new LinkedHashMap<Integer,DataField>() @TO@ dataFields=new TreeMap<Integer,DataField>() @AT@ 2122 @LENGTH@ 52
------UPD ClassInstanceCreation@@LinkedHashMap<Integer,DataField>[] @TO@ TreeMap<Integer,DataField>[] @AT@ 2135 @LENGTH@ 39
---------UPD ParameterizedType@@LinkedHashMap<Integer,DataField> @TO@ TreeMap<Integer,DataField> @AT@ 2139 @LENGTH@ 33
------------UPD SimpleType@@LinkedHashMap @TO@ TreeMap @AT@ 2139 @LENGTH@ 13


UPD IfStatement@@if (viewClassLoader == null) {  throw MESSAGES.failToLoadViewClassEjb(beanName,e);} @TO@ if (viewClassLoader == null || viewClassLoader.getValue() == null) {  throw MESSAGES.failToLoadViewClassEjb(beanName,e);} @AT@ 3602 @LENGTH@ 111
---INS InfixExpression@@viewClassLoader == null || viewClassLoader.getValue() == null @TO@ IfStatement@@if (viewClassLoader == null) {  throw MESSAGES.failToLoadViewClassEjb(beanName,e);} @AT@ 3320 @LENGTH@ 61
------INS InfixExpression@@viewClassLoader == null @TO@ InfixExpression@@viewClassLoader == null || viewClassLoader.getValue() == null @AT@ 3320 @LENGTH@ 23
---------MOV SimpleName@@viewClassLoader @TO@ InfixExpression@@viewClassLoader == null @AT@ 3605 @LENGTH@ 15
---------MOV Operator@@== @TO@ InfixExpression@@viewClassLoader == null @AT@ 3620 @LENGTH@ 2
---------MOV NullLiteral@@null @TO@ InfixExpression@@viewClassLoader == null @AT@ 3624 @LENGTH@ 4
------INS Operator@@|| @TO@ InfixExpression@@viewClassLoader == null || viewClassLoader.getValue() == null @AT@ 3343 @LENGTH@ 2
------INS InfixExpression@@viewClassLoader.getValue() == null @TO@ InfixExpression@@viewClassLoader == null || viewClassLoader.getValue() == null @AT@ 3347 @LENGTH@ 34
---------INS MethodInvocation@@viewClassLoader.getValue() @TO@ InfixExpression@@viewClassLoader.getValue() == null @AT@ 3347 @LENGTH@ 26
------------INS SimpleName@@Name:viewClassLoader @TO@ MethodInvocation@@viewClassLoader.getValue() @AT@ 3347 @LENGTH@ 15
------------INS SimpleName@@MethodName:getValue:[] @TO@ MethodInvocation@@viewClassLoader.getValue() @AT@ 3363 @LENGTH@ 10
---------INS Operator@@== @TO@ InfixExpression@@viewClassLoader.getValue() == null @AT@ 3373 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@viewClassLoader.getValue() == null @AT@ 3377 @LENGTH@ 4
---DEL InfixExpression@@viewClassLoader == null @AT@ 3605 @LENGTH@ 23


INS FieldDeclaration@@private, static, final, Logger, [log=Logger.getLogger(SimpleWebTestCase.class)] @TO@ TypeDeclaration@@[@RunWith(Arquillian.class), @RunAsClient, public]SimpleWebTestCase,  @AT@ 2073 @LENGTH@ 76
---INS Modifier@@private @TO@ FieldDeclaration@@private, static, final, Logger, [log=Logger.getLogger(SimpleWebTestCase.class)] @AT@ 2073 @LENGTH@ 7
---INS Modifier@@static @TO@ FieldDeclaration@@private, static, final, Logger, [log=Logger.getLogger(SimpleWebTestCase.class)] @AT@ 2081 @LENGTH@ 6
---INS Modifier@@final @TO@ FieldDeclaration@@private, static, final, Logger, [log=Logger.getLogger(SimpleWebTestCase.class)] @AT@ 2088 @LENGTH@ 5
---INS SimpleType@@Logger @TO@ FieldDeclaration@@private, static, final, Logger, [log=Logger.getLogger(SimpleWebTestCase.class)] @AT@ 2094 @LENGTH@ 6
---INS VariableDeclarationFragment@@log=Logger.getLogger(SimpleWebTestCase.class) @TO@ FieldDeclaration@@private, static, final, Logger, [log=Logger.getLogger(SimpleWebTestCase.class)] @AT@ 2101 @LENGTH@ 47
------INS SimpleName@@log @TO@ VariableDeclarationFragment@@log=Logger.getLogger(SimpleWebTestCase.class) @AT@ 2101 @LENGTH@ 3
------INS MethodInvocation@@Logger.getLogger(SimpleWebTestCase.class) @TO@ VariableDeclarationFragment@@log=Logger.getLogger(SimpleWebTestCase.class) @AT@ 2107 @LENGTH@ 41
---------INS SimpleName@@Name:Logger @TO@ MethodInvocation@@Logger.getLogger(SimpleWebTestCase.class) @AT@ 2107 @LENGTH@ 6
---------INS SimpleName@@MethodName:getLogger:[SimpleWebTestCase.class] @TO@ MethodInvocation@@Logger.getLogger(SimpleWebTestCase.class) @AT@ 2114 @LENGTH@ 34
------------INS TypeLiteral@@SimpleWebTestCase.class @TO@ SimpleName@@MethodName:getLogger:[SimpleWebTestCase.class] @AT@ 2124 @LENGTH@ 23


INS MethodDeclaration@@private, voidMethodName:DefaultStatefulBeanAccessTimeoutWriteHandler,  @TO@ TypeDeclaration@@DefaultStatefulBeanAccessTimeoutWriteHandler, AbstractWriteAttributeHandler<Void> @AT@ 1781 @LENGTH@ 151
---INS Modifier@@private @TO@ MethodDeclaration@@private, voidMethodName:DefaultStatefulBeanAccessTimeoutWriteHandler,  @AT@ 1781 @LENGTH@ 7
---INS SimpleName@@MethodName:DefaultStatefulBeanAccessTimeoutWriteHandler @TO@ MethodDeclaration@@private, voidMethodName:DefaultStatefulBeanAccessTimeoutWriteHandler,  @AT@ 1789 @LENGTH@ 44
---INS SuperConstructorInvocation@@super(EJB3SubsystemRootResourceDefinition.DEFAULT_STATEFUL_BEAN_ACCESS_TIMEOUT);
 @TO@ MethodDeclaration@@private, voidMethodName:DefaultStatefulBeanAccessTimeoutWriteHandler,  @AT@ 1846 @LENGTH@ 80
------INS QualifiedName@@EJB3SubsystemRootResourceDefinition.DEFAULT_STATEFUL_BEAN_ACCESS_TIMEOUT @TO@ SuperConstructorInvocation@@super(EJB3SubsystemRootResourceDefinition.DEFAULT_STATEFUL_BEAN_ACCESS_TIMEOUT);
 @AT@ 1852 @LENGTH@ 72
---------INS SimpleName@@EJB3SubsystemRootResourceDefinition @TO@ QualifiedName@@EJB3SubsystemRootResourceDefinition.DEFAULT_STATEFUL_BEAN_ACCESS_TIMEOUT @AT@ 1852 @LENGTH@ 35
---------INS SimpleName@@DEFAULT_STATEFUL_BEAN_ACCESS_TIMEOUT @TO@ QualifiedName@@EJB3SubsystemRootResourceDefinition.DEFAULT_STATEFUL_BEAN_ACCESS_TIMEOUT @AT@ 1888 @LENGTH@ 36


UPD MethodDeclaration@@public, void, MethodName:resetDebugCounter,  @TO@ void, MethodName:resetDebugCounter,  @AT@ 3213 @LENGTH@ 32
---DEL Modifier@@public @AT@ 3213 @LENGTH@ 6


INS MethodDeclaration@@public, boolean, MethodName:agentConfigurationEquals, Profile other,  @TO@ TypeDeclaration@@[public]ProfileImpl, [Profile] @AT@ 13818 @LENGTH@ 193
---INS Modifier@@public @TO@ MethodDeclaration@@public, boolean, MethodName:agentConfigurationEquals, Profile other,  @AT@ 13818 @LENGTH@ 6
---INS PrimitiveType@@boolean @TO@ MethodDeclaration@@public, boolean, MethodName:agentConfigurationEquals, Profile other,  @AT@ 13825 @LENGTH@ 7
---INS SimpleName@@MethodName:agentConfigurationEquals @TO@ MethodDeclaration@@public, boolean, MethodName:agentConfigurationEquals, Profile other,  @AT@ 13833 @LENGTH@ 24
---INS SingleVariableDeclaration@@Profile other @TO@ MethodDeclaration@@public, boolean, MethodName:agentConfigurationEquals, Profile other,  @AT@ 13858 @LENGTH@ 13
------INS SimpleType@@Profile @TO@ SingleVariableDeclaration@@Profile other @AT@ 13858 @LENGTH@ 7
------INS SimpleName@@other @TO@ SingleVariableDeclaration@@Profile other @AT@ 13866 @LENGTH@ 5
---INS VariableDeclarationStatement@@ProfileOverlayImpl selfOverlay=new ProfileOverlayImpl(this); @TO@ MethodDeclaration@@public, boolean, MethodName:agentConfigurationEquals, Profile other,  @AT@ 13883 @LENGTH@ 62
------INS SimpleType@@ProfileOverlayImpl @TO@ VariableDeclarationStatement@@ProfileOverlayImpl selfOverlay=new ProfileOverlayImpl(this); @AT@ 13883 @LENGTH@ 18
------INS VariableDeclarationFragment@@selfOverlay=new ProfileOverlayImpl(this) @TO@ VariableDeclarationStatement@@ProfileOverlayImpl selfOverlay=new ProfileOverlayImpl(this); @AT@ 13902 @LENGTH@ 42
---------INS SimpleName@@selfOverlay @TO@ VariableDeclarationFragment@@selfOverlay=new ProfileOverlayImpl(this) @AT@ 13902 @LENGTH@ 11
---------INS ClassInstanceCreation@@ProfileOverlayImpl[this] @TO@ VariableDeclarationFragment@@selfOverlay=new ProfileOverlayImpl(this) @AT@ 13916 @LENGTH@ 28
------------INS New@@new @TO@ ClassInstanceCreation@@ProfileOverlayImpl[this] @AT@ 13916 @LENGTH@ 3
------------INS SimpleType@@ProfileOverlayImpl @TO@ ClassInstanceCreation@@ProfileOverlayImpl[this] @AT@ 13920 @LENGTH@ 18
------------INS ThisExpression@@this @TO@ ClassInstanceCreation@@ProfileOverlayImpl[this] @AT@ 13939 @LENGTH@ 4
---INS ReturnStatement@@MethodInvocation:selfOverlay.agentConfigurationEquals(other) @TO@ MethodDeclaration@@public, boolean, MethodName:agentConfigurationEquals, Profile other,  @AT@ 13954 @LENGTH@ 51
------INS MethodInvocation@@selfOverlay.agentConfigurationEquals(other) @TO@ ReturnStatement@@MethodInvocation:selfOverlay.agentConfigurationEquals(other) @AT@ 13961 @LENGTH@ 43
---------INS SimpleName@@Name:selfOverlay @TO@ MethodInvocation@@selfOverlay.agentConfigurationEquals(other) @AT@ 13961 @LENGTH@ 11
---------INS SimpleName@@MethodName:agentConfigurationEquals:[other] @TO@ MethodInvocation@@selfOverlay.agentConfigurationEquals(other) @AT@ 13973 @LENGTH@ 31
------------INS SimpleName@@other @TO@ SimpleName@@MethodName:agentConfigurationEquals:[other] @AT@ 13998 @LENGTH@ 5


INS MethodDeclaration@@public, String, MethodName:createParameterJsonSchema,  @TO@ TypeDeclaration@@[public, abstract]ComponentConfigurationSupport, [ComponentConfiguration] @AT@ 5754 @LENGTH@ 787
---INS Modifier@@public @TO@ MethodDeclaration@@public, String, MethodName:createParameterJsonSchema,  @AT@ 5754 @LENGTH@ 6
---INS SimpleType@@String @TO@ MethodDeclaration@@public, String, MethodName:createParameterJsonSchema,  @AT@ 5761 @LENGTH@ 6
---INS SimpleName@@MethodName:createParameterJsonSchema @TO@ MethodDeclaration@@public, String, MethodName:createParameterJsonSchema,  @AT@ 5768 @LENGTH@ 25
---INS VariableDeclarationStatement@@SortedMap<String,ParameterConfiguration> map=getParameterConfigurationMap(); @TO@ MethodDeclaration@@public, String, MethodName:createParameterJsonSchema,  @AT@ 5806 @LENGTH@ 78
------INS ParameterizedType@@SortedMap<String,ParameterConfiguration> @TO@ VariableDeclarationStatement@@SortedMap<String,ParameterConfiguration> map=getParameterConfigurationMap(); @AT@ 5806 @LENGTH@ 40
---------INS SimpleType@@SortedMap @TO@ ParameterizedType@@SortedMap<String,ParameterConfiguration> @AT@ 5806 @LENGTH@ 9
---------INS SimpleType@@String @TO@ ParameterizedType@@SortedMap<String,ParameterConfiguration> @AT@ 5816 @LENGTH@ 6
---------INS SimpleType@@ParameterConfiguration @TO@ ParameterizedType@@SortedMap<String,ParameterConfiguration> @AT@ 5823 @LENGTH@ 22
------INS VariableDeclarationFragment@@map=getParameterConfigurationMap() @TO@ VariableDeclarationStatement@@SortedMap<String,ParameterConfiguration> map=getParameterConfigurationMap(); @AT@ 5847 @LENGTH@ 36
---------INS SimpleName@@map @TO@ VariableDeclarationFragment@@map=getParameterConfigurationMap() @AT@ 5847 @LENGTH@ 3
---------INS MethodInvocation@@MethodName:getParameterConfigurationMap:[] @TO@ VariableDeclarationFragment@@map=getParameterConfigurationMap() @AT@ 5853 @LENGTH@ 30
---INS VariableDeclarationStatement@@Set<Map.Entry<String,ParameterConfiguration>> entries=map.entrySet(); @TO@ MethodDeclaration@@public, String, MethodName:createParameterJsonSchema,  @AT@ 5893 @LENGTH@ 72
------INS ParameterizedType@@Set<Map.Entry<String,ParameterConfiguration>> @TO@ VariableDeclarationStatement@@Set<Map.Entry<String,ParameterConfiguration>> entries=map.entrySet(); @AT@ 5893 @LENGTH@ 46
---------INS SimpleType@@Set @TO@ ParameterizedType@@Set<Map.Entry<String,ParameterConfiguration>> @AT@ 5893 @LENGTH@ 3
---------INS ParameterizedType@@Map.Entry<String,ParameterConfiguration> @TO@ ParameterizedType@@Set<Map.Entry<String,ParameterConfiguration>> @AT@ 5897 @LENGTH@ 41
------------INS SimpleType@@Map.Entry @TO@ ParameterizedType@@Map.Entry<String,ParameterConfiguration> @AT@ 5897 @LENGTH@ 9
------------INS SimpleType@@String @TO@ ParameterizedType@@Map.Entry<String,ParameterConfiguration> @AT@ 5907 @LENGTH@ 6
------------INS SimpleType@@ParameterConfiguration @TO@ ParameterizedType@@Map.Entry<String,ParameterConfiguration> @AT@ 5915 @LENGTH@ 22
------INS VariableDeclarationFragment@@entries=map.entrySet() @TO@ VariableDeclarationStatement@@Set<Map.Entry<String,ParameterConfiguration>> entries=map.entrySet(); @AT@ 5940 @LENGTH@ 24
---------INS SimpleName@@entries @TO@ VariableDeclarationFragment@@entries=map.entrySet() @AT@ 5940 @LENGTH@ 7
---------INS MethodInvocation@@map.entrySet() @TO@ VariableDeclarationFragment@@entries=map.entrySet() @AT@ 5950 @LENGTH@ 14
------------INS SimpleName@@Name:map @TO@ MethodInvocation@@map.entrySet() @AT@ 5950 @LENGTH@ 3
------------INS SimpleName@@MethodName:entrySet:[] @TO@ MethodInvocation@@map.entrySet() @AT@ 5954 @LENGTH@ 10
---INS VariableDeclarationStatement@@StringBuilder buffer=new StringBuilder("{\n  \"properties\": {"); @TO@ MethodDeclaration@@public, String, MethodName:createParameterJsonSchema,  @AT@ 5974 @LENGTH@ 67
------INS SimpleType@@StringBuilder @TO@ VariableDeclarationStatement@@StringBuilder buffer=new StringBuilder("{\n  \"properties\": {"); @AT@ 5974 @LENGTH@ 13
------INS VariableDeclarationFragment@@buffer=new StringBuilder("{\n  \"properties\": {") @TO@ VariableDeclarationStatement@@StringBuilder buffer=new StringBuilder("{\n  \"properties\": {"); @AT@ 5988 @LENGTH@ 52
---------INS SimpleName@@buffer @TO@ VariableDeclarationFragment@@buffer=new StringBuilder("{\n  \"properties\": {") @AT@ 5988 @LENGTH@ 6
---------INS ClassInstanceCreation@@StringBuilder["{\n  \"properties\": {"] @TO@ VariableDeclarationFragment@@buffer=new StringBuilder("{\n  \"properties\": {") @AT@ 5997 @LENGTH@ 43
------------INS New@@new @TO@ ClassInstanceCreation@@StringBuilder["{\n  \"properties\": {"] @AT@ 5997 @LENGTH@ 3
------------INS SimpleType@@StringBuilder @TO@ ClassInstanceCreation@@StringBuilder["{\n  \"properties\": {"] @AT@ 6001 @LENGTH@ 13
------------INS StringLiteral@@"{\n  \"properties\": {" @TO@ ClassInstanceCreation@@StringBuilder["{\n  \"properties\": {"] @AT@ 6015 @LENGTH@ 24
---INS VariableDeclarationStatement@@boolean first=true; @TO@ MethodDeclaration@@public, String, MethodName:createParameterJsonSchema,  @AT@ 6050 @LENGTH@ 21
------INS PrimitiveType@@boolean @TO@ VariableDeclarationStatement@@boolean first=true; @AT@ 6050 @LENGTH@ 7
------INS VariableDeclarationFragment@@first=true @TO@ VariableDeclarationStatement@@boolean first=true; @AT@ 6058 @LENGTH@ 12
---------INS SimpleName@@first @TO@ VariableDeclarationFragment@@first=true @AT@ 6058 @LENGTH@ 5
---------INS BooleanLiteral@@true @TO@ VariableDeclarationFragment@@first=true @AT@ 6066 @LENGTH@ 4
---INS EnhancedForStatement@@for (Map.Entry<String,ParameterConfiguration> entry : entries) {  String key=entry.getKey();  if (first) {    first=false;  } else {    buffer.append(",");  }  buffer.append("\n    ");  ParameterConfiguration value=entry.getValue();  buffer.append(value.toJson());} @TO@ MethodDeclaration@@public, String, MethodName:createParameterJsonSchema,  @AT@ 6080 @LENGTH@ 384
------INS SingleVariableDeclaration@@Map.Entry<String,ParameterConfiguration> entry @TO@ EnhancedForStatement@@for (Map.Entry<String,ParameterConfiguration> entry : entries) {  String key=entry.getKey();  if (first) {    first=false;  } else {    buffer.append(",");  }  buffer.append("\n    ");  ParameterConfiguration value=entry.getValue();  buffer.append(value.toJson());} @AT@ 6085 @LENGTH@ 47
---------INS ParameterizedType@@Map.Entry<String,ParameterConfiguration> @TO@ SingleVariableDeclaration@@Map.Entry<String,ParameterConfiguration> entry @AT@ 6085 @LENGTH@ 41
------------INS SimpleType@@Map.Entry @TO@ ParameterizedType@@Map.Entry<String,ParameterConfiguration> @AT@ 6085 @LENGTH@ 9
------------INS SimpleType@@String @TO@ ParameterizedType@@Map.Entry<String,ParameterConfiguration> @AT@ 6095 @LENGTH@ 6
------------INS SimpleType@@ParameterConfiguration @TO@ ParameterizedType@@Map.Entry<String,ParameterConfiguration> @AT@ 6103 @LENGTH@ 22
---------INS SimpleName@@entry @TO@ SingleVariableDeclaration@@Map.Entry<String,ParameterConfiguration> entry @AT@ 6127 @LENGTH@ 5
------INS SimpleName@@entries @TO@ EnhancedForStatement@@for (Map.Entry<String,ParameterConfiguration> entry : entries) {  String key=entry.getKey();  if (first) {    first=false;  } else {    buffer.append(",");  }  buffer.append("\n    ");  ParameterConfiguration value=entry.getValue();  buffer.append(value.toJson());} @AT@ 6135 @LENGTH@ 7
------INS VariableDeclarationStatement@@String key=entry.getKey(); @TO@ EnhancedForStatement@@for (Map.Entry<String,ParameterConfiguration> entry : entries) {  String key=entry.getKey();  if (first) {    first=false;  } else {    buffer.append(",");  }  buffer.append("\n    ");  ParameterConfiguration value=entry.getValue();  buffer.append(value.toJson());} @AT@ 6158 @LENGTH@ 28
---------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String key=entry.getKey(); @AT@ 6158 @LENGTH@ 6
---------INS VariableDeclarationFragment@@key=entry.getKey() @TO@ VariableDeclarationStatement@@String key=entry.getKey(); @AT@ 6165 @LENGTH@ 20
------------INS SimpleName@@key @TO@ VariableDeclarationFragment@@key=entry.getKey() @AT@ 6165 @LENGTH@ 3
------------INS MethodInvocation@@entry.getKey() @TO@ VariableDeclarationFragment@@key=entry.getKey() @AT@ 6171 @LENGTH@ 14
---------------INS SimpleName@@Name:entry @TO@ MethodInvocation@@entry.getKey() @AT@ 6171 @LENGTH@ 5
---------------INS SimpleName@@MethodName:getKey:[] @TO@ MethodInvocation@@entry.getKey() @AT@ 6177 @LENGTH@ 8
------INS IfStatement@@if (first) {  first=false;} else {  buffer.append(",");} @TO@ EnhancedForStatement@@for (Map.Entry<String,ParameterConfiguration> entry : entries) {  String key=entry.getKey();  if (first) {    first=false;  } else {    buffer.append(",");  }  buffer.append("\n    ");  ParameterConfiguration value=entry.getValue();  buffer.append(value.toJson());} @AT@ 6199 @LENGTH@ 114
---------INS SimpleName@@first @TO@ IfStatement@@if (first) {  first=false;} else {  buffer.append(",");} @AT@ 6203 @LENGTH@ 5
---------INS Block@@ThenBody:{  first=false;} @TO@ IfStatement@@if (first) {  first=false;} else {  buffer.append(",");} @AT@ 6210 @LENGTH@ 46
------------INS ExpressionStatement@@Assignment:first=false @TO@ Block@@ThenBody:{  first=false;} @AT@ 6228 @LENGTH@ 14
---------------INS Assignment@@first=false @TO@ ExpressionStatement@@Assignment:first=false @AT@ 6228 @LENGTH@ 13
------------------INS SimpleName@@first @TO@ Assignment@@first=false @AT@ 6228 @LENGTH@ 5
------------------INS Operator@@= @TO@ Assignment@@first=false @AT@ 6233 @LENGTH@ 1
------------------INS BooleanLiteral@@false @TO@ Assignment@@first=false @AT@ 6236 @LENGTH@ 5
---------INS Block@@ElseBody:{  buffer.append(",");} @TO@ IfStatement@@if (first) {  first=false;} else {  buffer.append(",");} @AT@ 6262 @LENGTH@ 51
------------INS ExpressionStatement@@MethodInvocation:buffer.append(",") @TO@ Block@@ElseBody:{  buffer.append(",");} @AT@ 6280 @LENGTH@ 19
---------------INS MethodInvocation@@buffer.append(",") @TO@ ExpressionStatement@@MethodInvocation:buffer.append(",") @AT@ 6280 @LENGTH@ 18
------------------INS SimpleName@@Name:buffer @TO@ MethodInvocation@@buffer.append(",") @AT@ 6280 @LENGTH@ 6
------------------INS SimpleName@@MethodName:append:[","] @TO@ MethodInvocation@@buffer.append(",") @AT@ 6287 @LENGTH@ 11
---------------------INS StringLiteral@@"," @TO@ SimpleName@@MethodName:append:[","] @AT@ 6294 @LENGTH@ 3
------INS ExpressionStatement@@MethodInvocation:buffer.append("\n    ") @TO@ EnhancedForStatement@@for (Map.Entry<String,ParameterConfiguration> entry : entries) {  String key=entry.getKey();  if (first) {    first=false;  } else {    buffer.append(",");  }  buffer.append("\n    ");  ParameterConfiguration value=entry.getValue();  buffer.append(value.toJson());} @AT@ 6326 @LENGTH@ 24
---------INS MethodInvocation@@buffer.append("\n    ") @TO@ ExpressionStatement@@MethodInvocation:buffer.append("\n    ") @AT@ 6326 @LENGTH@ 23
------------INS SimpleName@@Name:buffer @TO@ MethodInvocation@@buffer.append("\n    ") @AT@ 6326 @LENGTH@ 6
------------INS SimpleName@@MethodName:append:["\n    "] @TO@ MethodInvocation@@buffer.append("\n    ") @AT@ 6333 @LENGTH@ 16
---------------INS StringLiteral@@"\n    " @TO@ SimpleName@@MethodName:append:["\n    "] @AT@ 6340 @LENGTH@ 8
------INS VariableDeclarationStatement@@ParameterConfiguration value=entry.getValue(); @TO@ EnhancedForStatement@@for (Map.Entry<String,ParameterConfiguration> entry : entries) {  String key=entry.getKey();  if (first) {    first=false;  } else {    buffer.append(",");  }  buffer.append("\n    ");  ParameterConfiguration value=entry.getValue();  buffer.append(value.toJson());} @AT@ 6363 @LENGTH@ 48
---------INS SimpleType@@ParameterConfiguration @TO@ VariableDeclarationStatement@@ParameterConfiguration value=entry.getValue(); @AT@ 6363 @LENGTH@ 22
---------INS VariableDeclarationFragment@@value=entry.getValue() @TO@ VariableDeclarationStatement@@ParameterConfiguration value=entry.getValue(); @AT@ 6386 @LENGTH@ 24
------------INS SimpleName@@value @TO@ VariableDeclarationFragment@@value=entry.getValue() @AT@ 6386 @LENGTH@ 5
------------INS MethodInvocation@@entry.getValue() @TO@ VariableDeclarationFragment@@value=entry.getValue() @AT@ 6394 @LENGTH@ 16
---------------INS SimpleName@@Name:entry @TO@ MethodInvocation@@entry.getValue() @AT@ 6394 @LENGTH@ 5
---------------INS SimpleName@@MethodName:getValue:[] @TO@ MethodInvocation@@entry.getValue() @AT@ 6400 @LENGTH@ 10
------INS ExpressionStatement@@MethodInvocation:buffer.append(value.toJson()) @TO@ EnhancedForStatement@@for (Map.Entry<String,ParameterConfiguration> entry : entries) {  String key=entry.getKey();  if (first) {    first=false;  } else {    buffer.append(",");  }  buffer.append("\n    ");  ParameterConfiguration value=entry.getValue();  buffer.append(value.toJson());} @AT@ 6424 @LENGTH@ 30
---------INS MethodInvocation@@buffer.append(value.toJson()) @TO@ ExpressionStatement@@MethodInvocation:buffer.append(value.toJson()) @AT@ 6424 @LENGTH@ 29
------------INS SimpleName@@Name:buffer @TO@ MethodInvocation@@buffer.append(value.toJson()) @AT@ 6424 @LENGTH@ 6
------------INS SimpleName@@MethodName:append:[value.toJson()] @TO@ MethodInvocation@@buffer.append(value.toJson()) @AT@ 6431 @LENGTH@ 22
---------------INS MethodInvocation@@value.toJson() @TO@ SimpleName@@MethodName:append:[value.toJson()] @AT@ 6438 @LENGTH@ 14
------------------INS SimpleName@@Name:value @TO@ MethodInvocation@@value.toJson() @AT@ 6438 @LENGTH@ 5
------------------INS SimpleName@@MethodName:toJson:[] @TO@ MethodInvocation@@value.toJson() @AT@ 6444 @LENGTH@ 8
---INS ExpressionStatement@@MethodInvocation:buffer.append("\n  }\n}\n") @TO@ MethodDeclaration@@public, String, MethodName:createParameterJsonSchema,  @AT@ 6473 @LENGTH@ 28
------INS MethodInvocation@@buffer.append("\n  }\n}\n") @TO@ ExpressionStatement@@MethodInvocation:buffer.append("\n  }\n}\n") @AT@ 6473 @LENGTH@ 27
---------INS SimpleName@@Name:buffer @TO@ MethodInvocation@@buffer.append("\n  }\n}\n") @AT@ 6473 @LENGTH@ 6
---------INS SimpleName@@MethodName:append:["\n  }\n}\n"] @TO@ MethodInvocation@@buffer.append("\n  }\n}\n") @AT@ 6480 @LENGTH@ 20
------------INS StringLiteral@@"\n  }\n}\n" @TO@ SimpleName@@MethodName:append:["\n  }\n}\n"] @AT@ 6487 @LENGTH@ 12
---INS ReturnStatement@@MethodInvocation:buffer.toString() @TO@ MethodDeclaration@@public, String, MethodName:createParameterJsonSchema,  @AT@ 6510 @LENGTH@ 25
------INS MethodInvocation@@buffer.toString() @TO@ ReturnStatement@@MethodInvocation:buffer.toString() @AT@ 6517 @LENGTH@ 17
---------INS SimpleName@@Name:buffer @TO@ MethodInvocation@@buffer.toString() @AT@ 6517 @LENGTH@ 6
---------INS SimpleName@@MethodName:toString:[] @TO@ MethodInvocation@@buffer.toString() @AT@ 6524 @LENGTH@ 10


INS IfStatement@@if (reply == null) {  return null;} @TO@ MethodDeclaration@@static, Properties, MethodName:info, String reply,  @AT@ 2413 @LENGTH@ 39
---INS InfixExpression@@reply == null @TO@ IfStatement@@if (reply == null) {  return null;} @AT@ 2416 @LENGTH@ 13
------INS SimpleName@@reply @TO@ InfixExpression@@reply == null @AT@ 2416 @LENGTH@ 5
------INS Operator@@== @TO@ InfixExpression@@reply == null @AT@ 2421 @LENGTH@ 2
------INS NullLiteral@@null @TO@ InfixExpression@@reply == null @AT@ 2425 @LENGTH@ 4
---INS Block@@ThenBody:{  return null;} @TO@ IfStatement@@if (reply == null) {  return null;} @AT@ 2431 @LENGTH@ 21
------INS ReturnStatement@@NullLiteral:null @TO@ Block@@ThenBody:{  return null;} @AT@ 2436 @LENGTH@ 12
---------INS NullLiteral@@null @TO@ ReturnStatement@@NullLiteral:null @AT@ 2443 @LENGTH@ 4


UPD FieldDeclaration@@public, static, final, PropertiesAttributeDefinition, [PROPERTIES=new PropertiesAttributeDefinition(JacORBSubsystemConstants.PROPERTIES,JacORBSubsystemConstants.PROPERTIES,true)] @TO@ public, static, final, PropertiesAttributeDefinition, [PROPERTIES=new PropertiesAttributeDefinition.Builder(JacORBSubsystemConstants.PROPERTIES,true).setAllowExpression(true).build()] @AT@ 20682 @LENGTH@ 209
---UPD VariableDeclarationFragment@@PROPERTIES=new PropertiesAttributeDefinition(JacORBSubsystemConstants.PROPERTIES,JacORBSubsystemConstants.PROPERTIES,true) @TO@ PROPERTIES=new PropertiesAttributeDefinition.Builder(JacORBSubsystemConstants.PROPERTIES,true).setAllowExpression(true).build() @AT@ 20732 @LENGTH@ 158
------INS MethodInvocation@@new PropertiesAttributeDefinition.Builder(JacORBSubsystemConstants.PROPERTIES,true).setAllowExpression(true).build() @TO@ VariableDeclarationFragment@@PROPERTIES=new PropertiesAttributeDefinition(JacORBSubsystemConstants.PROPERTIES,JacORBSubsystemConstants.PROPERTIES,true) @AT@ 20291 @LENGTH@ 143
---------INS MethodInvocation@@MethodName:setAllowExpression:[true] @TO@ MethodInvocation@@new PropertiesAttributeDefinition.Builder(JacORBSubsystemConstants.PROPERTIES,true).setAllowExpression(true).build() @AT@ 20291 @LENGTH@ 122
------------INS BooleanLiteral@@true @TO@ MethodInvocation@@MethodName:setAllowExpression:[true] @AT@ 20408 @LENGTH@ 4
---------INS ClassInstanceCreation@@PropertiesAttributeDefinition.Builder[JacORBSubsystemConstants.PROPERTIES, true] @TO@ MethodInvocation@@new PropertiesAttributeDefinition.Builder(JacORBSubsystemConstants.PROPERTIES,true).setAllowExpression(true).build() @AT@ 20291 @LENGTH@ 84
------------MOV New@@new @TO@ ClassInstanceCreation@@PropertiesAttributeDefinition.Builder[JacORBSubsystemConstants.PROPERTIES, true] @AT@ 20757 @LENGTH@ 3
------------MOV SimpleType@@PropertiesAttributeDefinition @TO@ ClassInstanceCreation@@PropertiesAttributeDefinition.Builder[JacORBSubsystemConstants.PROPERTIES, true] @AT@ 20761 @LENGTH@ 29
------------MOV QualifiedName@@JacORBSubsystemConstants.PROPERTIES @TO@ ClassInstanceCreation@@PropertiesAttributeDefinition.Builder[JacORBSubsystemConstants.PROPERTIES, true] @AT@ 20791 @LENGTH@ 35
------------MOV BooleanLiteral@@true @TO@ ClassInstanceCreation@@PropertiesAttributeDefinition.Builder[JacORBSubsystemConstants.PROPERTIES, true] @AT@ 20885 @LENGTH@ 4
---------INS SimpleName@@MethodName:build:[] @TO@ MethodInvocation@@new PropertiesAttributeDefinition.Builder(JacORBSubsystemConstants.PROPERTIES,true).setAllowExpression(true).build() @AT@ 20427 @LENGTH@ 7
------DEL ClassInstanceCreation@@PropertiesAttributeDefinition[JacORBSubsystemConstants.PROPERTIES, JacORBSubsystemConstants.PROPERTIES, true] @AT@ 20757 @LENGTH@ 133
---------DEL QualifiedName@@JacORBSubsystemConstants.PROPERTIES @AT@ 20848 @LENGTH@ 35
------------DEL SimpleName@@JacORBSubsystemConstants @AT@ 20848 @LENGTH@ 24
------------DEL SimpleName@@PROPERTIES @AT@ 20873 @LENGTH@ 10


UPD ExpressionStatement@@Assignment:source=tc.convertTo(Source.class,body) @TO@ Assignment:source=tc.convertTo(Source.class,exchange,body) @AT@ 15293 @LENGTH@ 42
---UPD Assignment@@source=tc.convertTo(Source.class,body) @TO@ source=tc.convertTo(Source.class,exchange,body) @AT@ 15293 @LENGTH@ 41
------UPD MethodInvocation@@tc.convertTo(Source.class,body) @TO@ tc.convertTo(Source.class,exchange,body) @AT@ 15302 @LENGTH@ 32
---------UPD SimpleName@@MethodName:convertTo:[Source.class, body] @TO@ MethodName:convertTo:[Source.class, exchange, body] @AT@ 15305 @LENGTH@ 29
------------INS SimpleName@@exchange @TO@ SimpleName@@MethodName:convertTo:[Source.class, body] @AT@ 15329 @LENGTH@ 8


UPD ExpressionStatement@@MethodInvocation:instance.activate(primaryKey) @TO@ MethodInvocation:instance.associate(primaryKey) @AT@ 4378 @LENGTH@ 30
---UPD MethodInvocation@@instance.activate(primaryKey) @TO@ instance.associate(primaryKey) @AT@ 4378 @LENGTH@ 29
------UPD SimpleName@@MethodName:activate:[primaryKey] @TO@ MethodName:associate:[primaryKey] @AT@ 4387 @LENGTH@ 20


UPD ExpressionStatement@@MethodInvocation:fieldBuilder.setFieldInitializer("new java.sql.Timestamp(new java.util.Date().getTime())") @TO@ MethodInvocation:fieldBuilder.setFieldInitializer("java.util.Calendar.getInstance()") @AT@ 35011 @LENGTH@ 116
---UPD MethodInvocation@@fieldBuilder.setFieldInitializer("new java.sql.Timestamp(new java.util.Date().getTime())") @TO@ fieldBuilder.setFieldInitializer("java.util.Calendar.getInstance()") @AT@ 35011 @LENGTH@ 115
------UPD SimpleName@@MethodName:setFieldInitializer:["new java.sql.Timestamp(new java.util.Date().getTime())"] @TO@ MethodName:setFieldInitializer:["java.util.Calendar.getInstance()"] @AT@ 35049 @LENGTH@ 77
---------UPD StringLiteral@@"new java.sql.Timestamp(new java.util.Date().getTime())" @TO@ "java.util.Calendar.getInstance()" @AT@ 35069 @LENGTH@ 56


MOV FieldDeclaration@@public, static, final, JMSBridgeWriteAttributeHandler, [INSTANCE=new JMSBridgeWriteAttributeHandler()] @TO@ TypeDeclaration@@[public]JMSBridgeWriteAttributeHandler, ReloadRequiredWriteAttributeHandler @AT@ 1688 @LENGTH@ 99


UPD Block@@ThenBody:{  message.setRemoteAddress(exchange.getIn().getHeader("CamelNettyLocalAddress",String.class));  exchange.getOut().setHeader(SyslogConstants.SYSLOG_LOCAL_ADDRESS,message.getRemoteAddress());} @TO@ ThenBody:{  message.setLocalAddress(exchange.getIn().getHeader("CamelNettyLocalAddress",String.class));  exchange.getOut().setHeader(SyslogConstants.SYSLOG_LOCAL_ADDRESS,message.getLocalAddress());} @AT@ 2844 @LENGTH@ 224
---UPD ExpressionStatement@@MethodInvocation:message.setRemoteAddress(exchange.getIn().getHeader("CamelNettyLocalAddress",String.class)) @TO@ MethodInvocation:message.setLocalAddress(exchange.getIn().getHeader("CamelNettyLocalAddress",String.class)) @AT@ 2858 @LENGTH@ 93
------UPD MethodInvocation@@message.setRemoteAddress(exchange.getIn().getHeader("CamelNettyLocalAddress",String.class)) @TO@ message.setLocalAddress(exchange.getIn().getHeader("CamelNettyLocalAddress",String.class)) @AT@ 2858 @LENGTH@ 92
---------UPD SimpleName@@MethodName:setRemoteAddress:[exchange.getIn().getHeader("CamelNettyLocalAddress",String.class)] @TO@ MethodName:setLocalAddress:[exchange.getIn().getHeader("CamelNettyLocalAddress",String.class)] @AT@ 2866 @LENGTH@ 84
---UPD ExpressionStatement@@MethodInvocation:exchange.getOut().setHeader(SyslogConstants.SYSLOG_LOCAL_ADDRESS,message.getRemoteAddress()) @TO@ MethodInvocation:exchange.getOut().setHeader(SyslogConstants.SYSLOG_LOCAL_ADDRESS,message.getLocalAddress()) @AT@ 2964 @LENGTH@ 94
------UPD MethodInvocation@@exchange.getOut().setHeader(SyslogConstants.SYSLOG_LOCAL_ADDRESS,message.getRemoteAddress()) @TO@ exchange.getOut().setHeader(SyslogConstants.SYSLOG_LOCAL_ADDRESS,message.getLocalAddress()) @AT@ 2964 @LENGTH@ 93
---------UPD SimpleName@@MethodName:setHeader:[SyslogConstants.SYSLOG_LOCAL_ADDRESS, message.getRemoteAddress()] @TO@ MethodName:setHeader:[SyslogConstants.SYSLOG_LOCAL_ADDRESS, message.getLocalAddress()] @AT@ 2982 @LENGTH@ 75
------------UPD MethodInvocation@@message.getRemoteAddress() @TO@ message.getLocalAddress() @AT@ 3030 @LENGTH@ 26
---------------UPD SimpleName@@MethodName:getRemoteAddress:[] @TO@ MethodName:getLocalAddress:[] @AT@ 3038 @LENGTH@ 18


UPD IfStatement@@if (!transformedOp.rejectOperation(SUCCESS)) {  transformedBootOperations.add(transformedOp.getTransformedOperation());} else {  System.out.println(transformedOp.getFailureDescription());} @TO@ if (!transformedOp.rejectOperation(SUCCESS)) {  transformedBootOperations.add(transformedOp.getTransformedOperation());} @AT@ 28426 @LENGTH@ 292
---DEL Block@@ElseBody:{  System.out.println(transformedOp.getFailureDescription());} @AT@ 28604 @LENGTH@ 114
------DEL ExpressionStatement@@MethodInvocation:System.out.println(transformedOp.getFailureDescription()) @AT@ 28634 @LENGTH@ 58
---------DEL MethodInvocation@@System.out.println(transformedOp.getFailureDescription()) @AT@ 28634 @LENGTH@ 57
------------DEL QualifiedName@@Name:System.out @AT@ 28634 @LENGTH@ 10
------------DEL SimpleName@@MethodName:println:[transformedOp.getFailureDescription()] @AT@ 28645 @LENGTH@ 46
---------------DEL MethodInvocation@@transformedOp.getFailureDescription() @AT@ 28653 @LENGTH@ 37
------------------DEL SimpleName@@Name:transformedOp @AT@ 28653 @LENGTH@ 13
------------------DEL SimpleName@@MethodName:getFailureDescription:[] @AT@ 28667 @LENGTH@ 23


UPD MethodDeclaration@@public, static, void, MethodName:createDeploymentService, ConnectorXmlDescriptor connectorXmlDescriptor, Module module, ServiceTarget serviceTarget, final String deploymentUnitName, ServiceName deploymentUnitServiceName, ResourceAdapter raxml,  @TO@ public, static, void, MethodName:createDeploymentService, ConnectorXmlDescriptor connectorXmlDescriptor, Module module, ServiceTarget serviceTarget, final String deploymentUnitName, ServiceName deploymentUnitServiceName, ResourceAdapter raxml, final ServiceVerificationHandler serviceVerificationHandler,  @AT@ 2518 @LENGTH@ 405
---UPD ExpressionStatement@@MethodInvocation:createDeploymentService(null,connectorXmlDescriptor,module,serviceTarget,deploymentUnitName,deploymentUnitServiceName,deploymentUnitName,raxml,null) @TO@ MethodInvocation:createDeploymentService(null,connectorXmlDescriptor,module,serviceTarget,deploymentUnitName,deploymentUnitServiceName,deploymentUnitName,raxml,null,serviceVerificationHandler) @AT@ 2758 @LENGTH@ 158
------UPD MethodInvocation@@createDeploymentService(null,connectorXmlDescriptor,module,serviceTarget,deploymentUnitName,deploymentUnitServiceName,deploymentUnitName,raxml,null) @TO@ createDeploymentService(null,connectorXmlDescriptor,module,serviceTarget,deploymentUnitName,deploymentUnitServiceName,deploymentUnitName,raxml,null,serviceVerificationHandler) @AT@ 2758 @LENGTH@ 157
---------UPD SimpleName@@MethodName:createDeploymentService:[null, connectorXmlDescriptor, module, serviceTarget, deploymentUnitName, deploymentUnitServiceName, deploymentUnitName, raxml, null] @TO@ MethodName:createDeploymentService:[null, connectorXmlDescriptor, module, serviceTarget, deploymentUnitName, deploymentUnitServiceName, deploymentUnitName, raxml, null, serviceVerificationHandler] @AT@ 2758 @LENGTH@ 157
------------INS SimpleName@@serviceVerificationHandler @TO@ SimpleName@@MethodName:createDeploymentService:[null, connectorXmlDescriptor, module, serviceTarget, deploymentUnitName, deploymentUnitServiceName, deploymentUnitName, raxml, null] @AT@ 3082 @LENGTH@ 26
---INS SingleVariableDeclaration@@final ServiceVerificationHandler serviceVerificationHandler @TO@ MethodDeclaration@@public, static, void, MethodName:createDeploymentService, ConnectorXmlDescriptor connectorXmlDescriptor, Module module, ServiceTarget serviceTarget, final String deploymentUnitName, ServiceName deploymentUnitServiceName, ResourceAdapter raxml,  @AT@ 2852 @LENGTH@ 59
------INS Modifier@@final @TO@ SingleVariableDeclaration@@final ServiceVerificationHandler serviceVerificationHandler @AT@ 2852 @LENGTH@ 5
------INS SimpleType@@ServiceVerificationHandler @TO@ SingleVariableDeclaration@@final ServiceVerificationHandler serviceVerificationHandler @AT@ 2858 @LENGTH@ 26
------INS SimpleName@@serviceVerificationHandler @TO@ SingleVariableDeclaration@@final ServiceVerificationHandler serviceVerificationHandler @AT@ 2885 @LENGTH@ 26


UPD IfStatement@@if (config.getImapServer() != null) {  setServerProps(props,config.getImapServer(),"imap");} @TO@ if (config.getImapServer() != null) {  props.setProperty("mail.store.protocol","imap");  setServerProps(props,config.getImapServer(),"imap");} @AT@ 3379 @LENGTH@ 114
---UPD Block@@ThenBody:{  setServerProps(props,config.getImapServer(),"imap");} @TO@ ThenBody:{  props.setProperty("mail.store.protocol","imap");  setServerProps(props,config.getImapServer(),"imap");} @AT@ 3415 @LENGTH@ 78
------INS ExpressionStatement@@MethodInvocation:props.setProperty("mail.store.protocol","imap") @TO@ Block@@ThenBody:{  setServerProps(props,config.getImapServer(),"imap");} @AT@ 3429 @LENGTH@ 49
---------INS MethodInvocation@@props.setProperty("mail.store.protocol","imap") @TO@ ExpressionStatement@@MethodInvocation:props.setProperty("mail.store.protocol","imap") @AT@ 3429 @LENGTH@ 48
------------INS SimpleName@@Name:props @TO@ MethodInvocation@@props.setProperty("mail.store.protocol","imap") @AT@ 3429 @LENGTH@ 5
------------INS SimpleName@@MethodName:setProperty:["mail.store.protocol", "imap"] @TO@ MethodInvocation@@props.setProperty("mail.store.protocol","imap") @AT@ 3435 @LENGTH@ 42
---------------INS StringLiteral@@"mail.store.protocol" @TO@ SimpleName@@MethodName:setProperty:["mail.store.protocol", "imap"] @AT@ 3447 @LENGTH@ 21
---------------INS StringLiteral@@"imap" @TO@ SimpleName@@MethodName:setProperty:["mail.store.protocol", "imap"] @AT@ 3470 @LENGTH@ 6


UPD EnhancedForStatement@@for (final BootstrapCtxParameters parameter : BootstrapCtxParameters.values()) {  resourceRegistration.registerReadWriteAttribute(parameter.getAttribute(),null,new ReloadRequiredWriteAttributeHandler());} @TO@ for (final BootstrapCtxParameters parameter : BootstrapCtxParameters.values()) {  AttributeDefinition ad=parameter.getAttribute();  resourceRegistration.registerReadWriteAttribute(ad,null,new ReloadRequiredWriteAttributeHandler(ad));} @AT@ 2516 @LENGTH@ 226
---UPD ExpressionStatement@@MethodInvocation:resourceRegistration.registerReadWriteAttribute(parameter.getAttribute(),null,new ReloadRequiredWriteAttributeHandler()) @TO@ MethodInvocation:resourceRegistration.registerReadWriteAttribute(ad,null,new ReloadRequiredWriteAttributeHandler(ad)) @AT@ 2609 @LENGTH@ 123
------UPD MethodInvocation@@resourceRegistration.registerReadWriteAttribute(parameter.getAttribute(),null,new ReloadRequiredWriteAttributeHandler()) @TO@ resourceRegistration.registerReadWriteAttribute(ad,null,new ReloadRequiredWriteAttributeHandler(ad)) @AT@ 2609 @LENGTH@ 122
---------UPD SimpleName@@MethodName:registerReadWriteAttribute:[parameter.getAttribute(), null, new ReloadRequiredWriteAttributeHandler()] @TO@ MethodName:registerReadWriteAttribute:[ad, null, new ReloadRequiredWriteAttributeHandler(ad)] @AT@ 2630 @LENGTH@ 101
------------DEL MethodInvocation@@parameter.getAttribute() @AT@ 2657 @LENGTH@ 24
---------------DEL SimpleName@@Name:parameter @AT@ 2657 @LENGTH@ 9
---------------DEL SimpleName@@MethodName:getAttribute:[] @AT@ 2667 @LENGTH@ 14
------------UPD ClassInstanceCreation@@ReloadRequiredWriteAttributeHandler[] @TO@ ReloadRequiredWriteAttributeHandler[ad] @AT@ 2689 @LENGTH@ 41
---------------INS SimpleName@@ad @TO@ ClassInstanceCreation@@ReloadRequiredWriteAttributeHandler[] @AT@ 2822 @LENGTH@ 2
------------INS SimpleName@@ad @TO@ SimpleName@@MethodName:registerReadWriteAttribute:[parameter.getAttribute(), null, new ReloadRequiredWriteAttributeHandler()] @AT@ 2772 @LENGTH@ 2
---INS VariableDeclarationStatement@@AttributeDefinition ad=parameter.getAttribute(); @TO@ EnhancedForStatement@@for (final BootstrapCtxParameters parameter : BootstrapCtxParameters.values()) {  resourceRegistration.registerReadWriteAttribute(parameter.getAttribute(),null,new ReloadRequiredWriteAttributeHandler());} @AT@ 2661 @LENGTH@ 50
------INS SimpleType@@AttributeDefinition @TO@ VariableDeclarationStatement@@AttributeDefinition ad=parameter.getAttribute(); @AT@ 2661 @LENGTH@ 19
------INS VariableDeclarationFragment@@ad=parameter.getAttribute() @TO@ VariableDeclarationStatement@@AttributeDefinition ad=parameter.getAttribute(); @AT@ 2681 @LENGTH@ 29
---------INS SimpleName@@ad @TO@ VariableDeclarationFragment@@ad=parameter.getAttribute() @AT@ 2681 @LENGTH@ 2
---------INS MethodInvocation@@parameter.getAttribute() @TO@ VariableDeclarationFragment@@ad=parameter.getAttribute() @AT@ 2686 @LENGTH@ 24
------------INS SimpleName@@Name:parameter @TO@ MethodInvocation@@parameter.getAttribute() @AT@ 2686 @LENGTH@ 9
------------INS SimpleName@@MethodName:getAttribute:[] @TO@ MethodInvocation@@parameter.getAttribute() @AT@ 2696 @LENGTH@ 14


UPD FieldDeclaration@@protected, static, final, PropertiesAttributeDefinition, [PARAMS=new PropertiesAttributeDefinition.Builder(Constants.PARAM,true).build()] @TO@ protected, static, final, PropertiesAttributeDefinition, [PARAMS=new PropertiesAttributeDefinition.Builder(Constants.PARAM,true).setAllowExpression(true).build()] @AT@ 3097 @LENGTH@ 135
---UPD VariableDeclarationFragment@@PARAMS=new PropertiesAttributeDefinition.Builder(Constants.PARAM,true).build() @TO@ PARAMS=new PropertiesAttributeDefinition.Builder(Constants.PARAM,true).setAllowExpression(true).build() @AT@ 3150 @LENGTH@ 81
------UPD MethodInvocation@@new PropertiesAttributeDefinition.Builder(Constants.PARAM,true).build() @TO@ new PropertiesAttributeDefinition.Builder(Constants.PARAM,true).setAllowExpression(true).build() @AT@ 3159 @LENGTH@ 72
---------INS MethodInvocation@@MethodName:setAllowExpression:[true] @TO@ MethodInvocation@@new PropertiesAttributeDefinition.Builder(Constants.PARAM,true).build() @AT@ 3159 @LENGTH@ 102
------------INS BooleanLiteral@@true @TO@ MethodInvocation@@MethodName:setAllowExpression:[true] @AT@ 3256 @LENGTH@ 4


UPD TryStatement@@try {  final HostControllerUpdateTask.ExecutedHostRequest request=finalResults.get(hostName);  final ModelNode finalResult=prepared.getFinalResult().get();  final ModelNode transformedResult=request.transformResult(finalResult);  System.out.println(" final result " + transformedResult);  domainOperationContext.addHostControllerResult(hostName,transformedResult);  if (HOST_CONTROLLER_LOGGER.isTraceEnabled()) {    HOST_CONTROLLER_LOGGER.tracef("Final result for remote host %s is %s",hostName,finalResult);  }} catch (InterruptedException e) {  interruptThread=true;  CONTROLLER_LOGGER.interruptedAwaitingFinalResponse(hostName);}catch (ExecutionException e) {  CONTROLLER_LOGGER.caughtExceptionAwaitingFinalResponse(e.getCause(),hostName);} @TO@ try {  final HostControllerUpdateTask.ExecutedHostRequest request=finalResults.get(hostName);  final ModelNode finalResult=prepared.getFinalResult().get();  final ModelNode transformedResult=request.transformResult(finalResult);  domainOperationContext.addHostControllerResult(hostName,transformedResult);  if (HOST_CONTROLLER_LOGGER.isTraceEnabled()) {    HOST_CONTROLLER_LOGGER.tracef("Final result for remote host %s is %s",hostName,finalResult);  }} catch (InterruptedException e) {  interruptThread=true;  CONTROLLER_LOGGER.interruptedAwaitingFinalResponse(hostName);}catch (ExecutionException e) {  CONTROLLER_LOGGER.caughtExceptionAwaitingFinalResponse(e.getCause(),hostName);} @AT@ 10555 @LENGTH@ 1019
---DEL ExpressionStatement@@MethodInvocation:System.out.println(" final result " + transformedResult) @AT@ 10867 @LENGTH@ 57
------DEL MethodInvocation@@System.out.println(" final result " + transformedResult) @AT@ 10867 @LENGTH@ 56
---------DEL QualifiedName@@Name:System.out @AT@ 10867 @LENGTH@ 10
---------DEL SimpleName@@MethodName:println:[" final result " + transformedResult] @AT@ 10878 @LENGTH@ 45
------------DEL InfixExpression@@" final result " + transformedResult @AT@ 10886 @LENGTH@ 36
---------------DEL StringLiteral@@" final result " @AT@ 10886 @LENGTH@ 16
---------------DEL Operator@@+ @AT@ 10902 @LENGTH@ 1
---------------DEL SimpleName@@transformedResult @AT@ 10905 @LENGTH@ 17


UPD MethodDeclaration@@public, final, void, MethodName:setup, final ManagementClient managementClient, String containerId, Exception,  @TO@ public, void, MethodName:setup, final ManagementClient managementClient, String containerId, Exception,  @AT@ 2809 @LENGTH@ 3491
---DEL Modifier@@final @AT@ 2816 @LENGTH@ 5


UPD ThrowStatement@@MethodInvocation:MESSAGES.failToLoadComponentClass(componentDescription.getComponentClassName()) @TO@ MethodInvocation:MESSAGES.failToLoadComponentClass(e,componentDescription.getComponentClassName()) @AT@ 6352 @LENGTH@ 86
---UPD MethodInvocation@@MESSAGES.failToLoadComponentClass(componentDescription.getComponentClassName()) @TO@ MESSAGES.failToLoadComponentClass(e,componentDescription.getComponentClassName()) @AT@ 6358 @LENGTH@ 79
------UPD SimpleName@@MethodName:failToLoadComponentClass:[componentDescription.getComponentClassName()] @TO@ MethodName:failToLoadComponentClass:[e, componentDescription.getComponentClassName()] @AT@ 6367 @LENGTH@ 70
---------INS SimpleName@@e @TO@ SimpleName@@MethodName:failToLoadComponentClass:[componentDescription.getComponentClassName()] @AT@ 6392 @LENGTH@ 1


INS VariableDeclarationStatement@@final float maxBytesPerChar=encoder.maxBytesPerChar(); @TO@ MethodDeclaration@@public, voidMethodName:CharSequenceInputStream, final CharSequence cs, final Charset charset, final int bufferSize,  @AT@ 2379 @LENGTH@ 56
---INS Modifier@@final @TO@ VariableDeclarationStatement@@final float maxBytesPerChar=encoder.maxBytesPerChar(); @AT@ 2379 @LENGTH@ 5
---INS PrimitiveType@@float @TO@ VariableDeclarationStatement@@final float maxBytesPerChar=encoder.maxBytesPerChar(); @AT@ 2385 @LENGTH@ 5
---INS VariableDeclarationFragment@@maxBytesPerChar=encoder.maxBytesPerChar() @TO@ VariableDeclarationStatement@@final float maxBytesPerChar=encoder.maxBytesPerChar(); @AT@ 2391 @LENGTH@ 43
------INS SimpleName@@maxBytesPerChar @TO@ VariableDeclarationFragment@@maxBytesPerChar=encoder.maxBytesPerChar() @AT@ 2391 @LENGTH@ 15
------INS MethodInvocation@@encoder.maxBytesPerChar() @TO@ VariableDeclarationFragment@@maxBytesPerChar=encoder.maxBytesPerChar() @AT@ 2409 @LENGTH@ 25
---------INS SimpleName@@Name:encoder @TO@ MethodInvocation@@encoder.maxBytesPerChar() @AT@ 2409 @LENGTH@ 7
---------INS SimpleName@@MethodName:maxBytesPerChar:[] @TO@ MethodInvocation@@encoder.maxBytesPerChar() @AT@ 2417 @LENGTH@ 17


UPD VariableDeclarationStatement@@Map m=MongoDbBasicConverters.objectMapper.convertValue(value,Map.class); @TO@ Map<?,?> m=MongoDbBasicConverters.objectMapper.convertValue(value,Map.class); @AT@ 4298 @LENGTH@ 75
---INS ParameterizedType@@Map<?,?> @TO@ VariableDeclarationStatement@@Map m=MongoDbBasicConverters.objectMapper.convertValue(value,Map.class); @AT@ 4242 @LENGTH@ 9
------INS SimpleType@@Map @TO@ ParameterizedType@@Map<?,?> @AT@ 4242 @LENGTH@ 3
------INS WildcardType@@? @TO@ ParameterizedType@@Map<?,?> @AT@ 4246 @LENGTH@ 1
------INS WildcardType@@? @TO@ ParameterizedType@@Map<?,?> @AT@ 4249 @LENGTH@ 1
---DEL SimpleType@@Map @AT@ 4298 @LENGTH@ 3


INS MethodDeclaration@@public, void, MethodName:testInvalideBytesMessage, Exception,  @TO@ TypeDeclaration@@[public]ValidatorRouteTest, ContextTestSupport @AT@ 2030 @LENGTH@ 391
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testInvalideBytesMessage, Exception,  @AT@ 2030 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testInvalideBytesMessage, Exception,  @AT@ 2037 @LENGTH@ 4
---INS SimpleName@@MethodName:testInvalideBytesMessage @TO@ MethodDeclaration@@public, void, MethodName:testInvalideBytesMessage, Exception,  @AT@ 2042 @LENGTH@ 24
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:testInvalideBytesMessage, Exception,  @AT@ 2076 @LENGTH@ 9
---INS ExpressionStatement@@MethodInvocation:invalidEndpoint.expectedMessageCount(1) @TO@ MethodDeclaration@@public, void, MethodName:testInvalideBytesMessage, Exception,  @AT@ 2096 @LENGTH@ 40
------INS MethodInvocation@@invalidEndpoint.expectedMessageCount(1) @TO@ ExpressionStatement@@MethodInvocation:invalidEndpoint.expectedMessageCount(1) @AT@ 2096 @LENGTH@ 39
---------INS SimpleName@@Name:invalidEndpoint @TO@ MethodInvocation@@invalidEndpoint.expectedMessageCount(1) @AT@ 2096 @LENGTH@ 15
---------INS SimpleName@@MethodName:expectedMessageCount:[1] @TO@ MethodInvocation@@invalidEndpoint.expectedMessageCount(1) @AT@ 2112 @LENGTH@ 23
------------INS NumberLiteral@@1 @TO@ SimpleName@@MethodName:expectedMessageCount:[1] @AT@ 2133 @LENGTH@ 1
---INS ExpressionStatement@@MethodInvocation:finallyEndpoint.expectedMessageCount(1) @TO@ MethodDeclaration@@public, void, MethodName:testInvalideBytesMessage, Exception,  @AT@ 2145 @LENGTH@ 40
------INS MethodInvocation@@finallyEndpoint.expectedMessageCount(1) @TO@ ExpressionStatement@@MethodInvocation:finallyEndpoint.expectedMessageCount(1) @AT@ 2145 @LENGTH@ 39
---------INS SimpleName@@Name:finallyEndpoint @TO@ MethodInvocation@@finallyEndpoint.expectedMessageCount(1) @AT@ 2145 @LENGTH@ 15
---------INS SimpleName@@MethodName:expectedMessageCount:[1] @TO@ MethodInvocation@@finallyEndpoint.expectedMessageCount(1) @AT@ 2161 @LENGTH@ 23
------------INS NumberLiteral@@1 @TO@ SimpleName@@MethodName:expectedMessageCount:[1] @AT@ 2182 @LENGTH@ 1
---INS ExpressionStatement@@MethodInvocation:template.sendBody("direct:start","<mail xmlns='http://foo.com/bar'><body>Hello world!</body></mail>".getBytes()) @TO@ MethodDeclaration@@public, void, MethodName:testInvalideBytesMessage, Exception,  @AT@ 2195 @LENGTH@ 130
------INS MethodInvocation@@template.sendBody("direct:start","<mail xmlns='http://foo.com/bar'><body>Hello world!</body></mail>".getBytes()) @TO@ ExpressionStatement@@MethodInvocation:template.sendBody("direct:start","<mail xmlns='http://foo.com/bar'><body>Hello world!</body></mail>".getBytes()) @AT@ 2195 @LENGTH@ 129
---------INS SimpleName@@Name:template @TO@ MethodInvocation@@template.sendBody("direct:start","<mail xmlns='http://foo.com/bar'><body>Hello world!</body></mail>".getBytes()) @AT@ 2195 @LENGTH@ 8
---------INS SimpleName@@MethodName:sendBody:["direct:start", "<mail xmlns='http://foo.com/bar'><body>Hello world!</body></mail>".getBytes()] @TO@ MethodInvocation@@template.sendBody("direct:start","<mail xmlns='http://foo.com/bar'><body>Hello world!</body></mail>".getBytes()) @AT@ 2204 @LENGTH@ 120
------------INS StringLiteral@@"direct:start" @TO@ SimpleName@@MethodName:sendBody:["direct:start", "<mail xmlns='http://foo.com/bar'><body>Hello world!</body></mail>".getBytes()] @AT@ 2213 @LENGTH@ 14
------------INS MethodInvocation@@"<mail xmlns='http://foo.com/bar'><body>Hello world!</body></mail>".getBytes() @TO@ SimpleName@@MethodName:sendBody:["direct:start", "<mail xmlns='http://foo.com/bar'><body>Hello world!</body></mail>".getBytes()] @AT@ 2245 @LENGTH@ 78
---------------INS StringLiteral@@"<mail xmlns='http://foo.com/bar'><body>Hello world!</body></mail>" @TO@ MethodInvocation@@"<mail xmlns='http://foo.com/bar'><body>Hello world!</body></mail>".getBytes() @AT@ 2245 @LENGTH@ 67
---------------INS SimpleName@@MethodName:getBytes:[] @TO@ MethodInvocation@@"<mail xmlns='http://foo.com/bar'><body>Hello world!</body></mail>".getBytes() @AT@ 2313 @LENGTH@ 10
---INS ExpressionStatement@@MethodInvocation:MockEndpoint.assertIsSatisfied(validEndpoint,invalidEndpoint,finallyEndpoint) @TO@ MethodDeclaration@@public, void, MethodName:testInvalideBytesMessage, Exception,  @AT@ 2335 @LENGTH@ 80
------INS MethodInvocation@@MockEndpoint.assertIsSatisfied(validEndpoint,invalidEndpoint,finallyEndpoint) @TO@ ExpressionStatement@@MethodInvocation:MockEndpoint.assertIsSatisfied(validEndpoint,invalidEndpoint,finallyEndpoint) @AT@ 2335 @LENGTH@ 79
---------INS SimpleName@@Name:MockEndpoint @TO@ MethodInvocation@@MockEndpoint.assertIsSatisfied(validEndpoint,invalidEndpoint,finallyEndpoint) @AT@ 2335 @LENGTH@ 12
---------INS SimpleName@@MethodName:assertIsSatisfied:[validEndpoint, invalidEndpoint, finallyEndpoint] @TO@ MethodInvocation@@MockEndpoint.assertIsSatisfied(validEndpoint,invalidEndpoint,finallyEndpoint) @AT@ 2348 @LENGTH@ 66
------------INS SimpleName@@validEndpoint @TO@ SimpleName@@MethodName:assertIsSatisfied:[validEndpoint, invalidEndpoint, finallyEndpoint] @AT@ 2366 @LENGTH@ 13
------------INS SimpleName@@invalidEndpoint @TO@ SimpleName@@MethodName:assertIsSatisfied:[validEndpoint, invalidEndpoint, finallyEndpoint] @AT@ 2381 @LENGTH@ 15
------------INS SimpleName@@finallyEndpoint @TO@ SimpleName@@MethodName:assertIsSatisfied:[validEndpoint, invalidEndpoint, finallyEndpoint] @AT@ 2398 @LENGTH@ 15


UPD ExpressionStatement@@MethodInvocation:Assert.isInstanceOf(ConnectionData.class,token.getPrincipal(),"unexpected principle type") @TO@ MethodInvocation:Assert.notNull(token.getConnection()) @AT@ 7945 @LENGTH@ 93
---UPD MethodInvocation@@Assert.isInstanceOf(ConnectionData.class,token.getPrincipal(),"unexpected principle type") @TO@ Assert.notNull(token.getConnection()) @AT@ 7945 @LENGTH@ 92
------UPD SimpleName@@MethodName:isInstanceOf:[ConnectionData.class, token.getPrincipal(), "unexpected principle type"] @TO@ MethodName:notNull:[token.getConnection()] @AT@ 7952 @LENGTH@ 85
---------DEL TypeLiteral@@ConnectionData.class @AT@ 7965 @LENGTH@ 20
---------UPD MethodInvocation@@token.getPrincipal() @TO@ token.getConnection() @AT@ 7987 @LENGTH@ 20
------------UPD SimpleName@@MethodName:getPrincipal:[] @TO@ MethodName:getConnection:[] @AT@ 7993 @LENGTH@ 14
---------DEL StringLiteral@@"unexpected principle type" @AT@ 8009 @LENGTH@ 27


UPD VariableDeclarationStatement@@String path=exchange.getIn().getHeader(Exchange.HTTP_PATH,String.class); @TO@ String path=exchange.getIn().getHeader(Exchange.HTTP_URI,String.class); @AT@ 7071 @LENGTH@ 75
---UPD VariableDeclarationFragment@@path=exchange.getIn().getHeader(Exchange.HTTP_PATH,String.class) @TO@ path=exchange.getIn().getHeader(Exchange.HTTP_URI,String.class) @AT@ 7078 @LENGTH@ 67
------UPD MethodInvocation@@exchange.getIn().getHeader(Exchange.HTTP_PATH,String.class) @TO@ exchange.getIn().getHeader(Exchange.HTTP_URI,String.class) @AT@ 7085 @LENGTH@ 60
---------UPD SimpleName@@MethodName:getHeader:[Exchange.HTTP_PATH, String.class] @TO@ MethodName:getHeader:[Exchange.HTTP_URI, String.class] @AT@ 7102 @LENGTH@ 43
------------UPD QualifiedName@@Exchange.HTTP_PATH @TO@ Exchange.HTTP_URI @AT@ 7112 @LENGTH@ 18
---------------UPD SimpleName@@HTTP_PATH @TO@ HTTP_URI @AT@ 7121 @LENGTH@ 9


UPD IfStatement@@if (name == null) {  ParseUtils.missingRequired(reader,Collections.singleton("name"));} @TO@ if (name == null) {  throw ParseUtils.missingRequired(reader,Collections.singleton("name"));} @AT@ 5749 @LENGTH@ 108
---UPD Block@@ThenBody:{  ParseUtils.missingRequired(reader,Collections.singleton("name"));} @TO@ ThenBody:{  throw ParseUtils.missingRequired(reader,Collections.singleton("name"));} @AT@ 5767 @LENGTH@ 90
------INS ThrowStatement@@MethodInvocation:ParseUtils.missingRequired(reader,Collections.singleton("name")) @TO@ Block@@ThenBody:{  ParseUtils.missingRequired(reader,Collections.singleton("name"));} @AT@ 5781 @LENGTH@ 72
---------MOV MethodInvocation@@ParseUtils.missingRequired(reader,Collections.singleton("name")) @TO@ ThrowStatement@@MethodInvocation:ParseUtils.missingRequired(reader,Collections.singleton("name")) @AT@ 5781 @LENGTH@ 65
------DEL ExpressionStatement@@MethodInvocation:ParseUtils.missingRequired(reader,Collections.singleton("name")) @AT@ 5781 @LENGTH@ 66


INS FieldDeclaration@@private, final, List<String>, [discardedOperations=new LinkedList<String>()] @TO@ TypeDeclaration@@ResourceTransformationDescriptionBuilderImpl, AbstractTransformationDescriptionBuilder[ResourceTransformationDescriptionBuilder] @AT@ 1780 @LENGTH@ 74
---INS Modifier@@private @TO@ FieldDeclaration@@private, final, List<String>, [discardedOperations=new LinkedList<String>()] @AT@ 1780 @LENGTH@ 7
---INS Modifier@@final @TO@ FieldDeclaration@@private, final, List<String>, [discardedOperations=new LinkedList<String>()] @AT@ 1788 @LENGTH@ 5
---INS ParameterizedType@@List<String> @TO@ FieldDeclaration@@private, final, List<String>, [discardedOperations=new LinkedList<String>()] @AT@ 1794 @LENGTH@ 12
------INS SimpleType@@List @TO@ ParameterizedType@@List<String> @AT@ 1794 @LENGTH@ 4
------INS SimpleType@@String @TO@ ParameterizedType@@List<String> @AT@ 1799 @LENGTH@ 6
---INS VariableDeclarationFragment@@discardedOperations=new LinkedList<String>() @TO@ FieldDeclaration@@private, final, List<String>, [discardedOperations=new LinkedList<String>()] @AT@ 1807 @LENGTH@ 46
------INS SimpleName@@discardedOperations @TO@ VariableDeclarationFragment@@discardedOperations=new LinkedList<String>() @AT@ 1807 @LENGTH@ 19
------INS ClassInstanceCreation@@LinkedList<String>[] @TO@ VariableDeclarationFragment@@discardedOperations=new LinkedList<String>() @AT@ 1829 @LENGTH@ 24
---------INS New@@new @TO@ ClassInstanceCreation@@LinkedList<String>[] @AT@ 1829 @LENGTH@ 3
---------INS ParameterizedType@@LinkedList<String> @TO@ ClassInstanceCreation@@LinkedList<String>[] @AT@ 1833 @LENGTH@ 18
------------INS SimpleType@@LinkedList @TO@ ParameterizedType@@LinkedList<String> @AT@ 1833 @LENGTH@ 10
------------INS SimpleType@@String @TO@ ParameterizedType@@LinkedList<String> @AT@ 1844 @LENGTH@ 6


UPD FieldDeclaration@@private, static, final, Logger, [LOG=Logger.getLogger(GreeterImpl.class.getPackage().getName())] @TO@ private, static, final, Logger, [LOG=LoggerFactory.getLogger(GreeterImpl.class)] @AT@ 1429 @LENGTH@ 102
---UPD VariableDeclarationFragment@@LOG=Logger.getLogger(GreeterImpl.class.getPackage().getName()) @TO@ LOG=LoggerFactory.getLogger(GreeterImpl.class) @AT@ 1457 @LENGTH@ 73
------UPD MethodInvocation@@Logger.getLogger(GreeterImpl.class.getPackage().getName()) @TO@ LoggerFactory.getLogger(GreeterImpl.class) @AT@ 1472 @LENGTH@ 58
---------UPD SimpleName@@Name:Logger @TO@ Name:LoggerFactory @AT@ 1472 @LENGTH@ 6
---------UPD SimpleName@@MethodName:getLogger:[GreeterImpl.class.getPackage().getName()] @TO@ MethodName:getLogger:[GreeterImpl.class] @AT@ 1479 @LENGTH@ 51
------------DEL MethodInvocation@@GreeterImpl.class.getPackage().getName() @AT@ 1489 @LENGTH@ 40
---------------DEL MethodInvocation@@MethodName:getPackage:[] @AT@ 1489 @LENGTH@ 30
---------------DEL TypeLiteral@@GreeterImpl.class @AT@ 1489 @LENGTH@ 17
---------------DEL SimpleName@@MethodName:getName:[] @AT@ 1520 @LENGTH@ 9
------------INS TypeLiteral@@GreeterImpl.class @TO@ SimpleName@@MethodName:getLogger:[GreeterImpl.class.getPackage().getName()] @AT@ 1510 @LENGTH@ 17


UPD MethodDeclaration@@protected, static, ModelNode, MethodName:getSubsystemAddOperation,  @TO@ protected, static, ModelNode, MethodName:getSubsystemAddOperation, String defaultStack,  @AT@ 2281 @LENGTH@ 513
---INS SingleVariableDeclaration@@String defaultStack @TO@ MethodDeclaration@@protected, static, ModelNode, MethodName:getSubsystemAddOperation,  @AT@ 2333 @LENGTH@ 19
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String defaultStack @AT@ 2333 @LENGTH@ 6
------INS SimpleName@@defaultStack @TO@ SingleVariableDeclaration@@String defaultStack @AT@ 2340 @LENGTH@ 12
---UPD ExpressionStatement@@MethodInvocation:addOp.get(ModelKeys.DEFAULT_STACK).set("maximal2") @TO@ MethodInvocation:addOp.get(ModelKeys.DEFAULT_STACK).set(defaultStack) @AT@ 2714 @LENGTH@ 51
------UPD MethodInvocation@@addOp.get(ModelKeys.DEFAULT_STACK).set("maximal2") @TO@ addOp.get(ModelKeys.DEFAULT_STACK).set(defaultStack) @AT@ 2714 @LENGTH@ 50
---------UPD SimpleName@@MethodName:set:["maximal2"] @TO@ MethodName:set:[defaultStack] @AT@ 2749 @LENGTH@ 15
------------DEL StringLiteral@@"maximal2" @AT@ 2753 @LENGTH@ 10
------------INS SimpleName@@defaultStack @TO@ SimpleName@@MethodName:set:["maximal2"] @AT@ 2772 @LENGTH@ 12


UPD TryStatement@@try {  monitor.awaitStability(failed,problems);} catch (InterruptedException e) {  Thread.currentThread().interrupt();  context.getFailureDescription().set(MESSAGES.operationCancelled());  context.completeStep(OperationContext.RollbackHandler.NOOP_ROLLBACK_HANDLER);  return;} @TO@ try {  monitor.awaitStability(failed,problems);} catch (InterruptedException e) {  Thread.currentThread().interrupt();  context.getFailureDescription().set(MESSAGES.operationCancelled());  context.completeStep(OperationContext.RollbackHandler.NOOP_ROLLBACK_HANDLER);  return;} finally {  monitor.clear();} @AT@ 2589 @LENGTH@ 350
---INS Block@@FinallyBody:{  monitor.clear();} @TO@ TryStatement@@try {  monitor.awaitStability(failed,problems);} catch (InterruptedException e) {  Thread.currentThread().interrupt();  context.getFailureDescription().set(MESSAGES.operationCancelled());  context.completeStep(OperationContext.RollbackHandler.NOOP_ROLLBACK_HANDLER);  return;} @AT@ 2948 @LENGTH@ 40
------INS ExpressionStatement@@MethodInvocation:monitor.clear() @TO@ Block@@FinallyBody:{  monitor.clear();} @AT@ 2962 @LENGTH@ 16
---------INS MethodInvocation@@monitor.clear() @TO@ ExpressionStatement@@MethodInvocation:monitor.clear() @AT@ 2962 @LENGTH@ 15
------------INS SimpleName@@Name:monitor @TO@ MethodInvocation@@monitor.clear() @AT@ 2962 @LENGTH@ 7
------------INS SimpleName@@MethodName:clear:[] @TO@ MethodInvocation@@monitor.clear() @AT@ 2970 @LENGTH@ 7


UPD ExpressionStatement@@MethodInvocation:ModelTestUtils.checkFailedTransformedBootOperations(mainServices,modelVersion,ops,new FailedOperationTransformationConfig().addFailedAttribute(createRootLoggerAddress(),new RejectExpressionsConfig(RootLoggerResourceDefinition.EXPRESSION_ATTRIBUTES)).addFailedAttribute(SUBSYSTEM_ADDRESS.append(LoggerResourceDefinition.LOGGER_PATH),new RejectExpressionsConfig(LoggerResourceDefinition.EXPRESSION_ATTRIBUTES)).addFailedAttribute(SUBSYSTEM_ADDRESS.append(AsyncHandlerResourceDefinition.ASYNC_HANDLER_PATH),new RejectExpressionsConfig(AsyncHandlerResourceDefinition.ATTRIBUTES)).addFailedAttribute(SUBSYSTEM_ADDRESS.append(ConsoleHandlerResourceDefinition.CONSOLE_HANDLER_PATH),new RejectExpressionsConfig(ConsoleHandlerResourceDefinition.ATTRIBUTES)).addFailedAttribute(SUBSYSTEM_ADDRESS.append(FileHandlerResourceDefinition.FILE_HANDLER_PATH),new RejectExpressionsConfig(FileHandlerResourceDefinition.ATTRIBUTES)).addFailedAttribute(SUBSYSTEM_ADDRESS.append(PeriodicHandlerResourceDefinition.PERIODIC_HANDLER_PATH),new RejectExpressionsConfig(PeriodicHandlerResourceDefinition.ATTRIBUTES)).addFailedAttribute(SUBSYSTEM_ADDRESS.append(SizeRotatingHandlerResourceDefinition.SIZE_ROTATING_HANDLER_PATH),new RejectExpressionsConfig(SizeRotatingHandlerResourceDefinition.ATTRIBUTES)).addFailedAttribute(SUBSYSTEM_ADDRESS.append(CustomHandlerResourceDefinition.CUSTOM_HANDLE_PATH),new RejectExpressionsConfig(CustomHandlerResourceDefinition.WRITABLE_ATTRIBUTES)).addFailedAttribute(SUBSYSTEM_ADDRESS.append(SyslogHandlerResourceDefinition.SYSLOG_HANDLER_PATH),FailedOperationTransformationConfig.DISCARDED_RESOURCE).addFailedAttribute(SUBSYSTEM_ADDRESS.append(CommonAttributes.LOGGING_PROFILE),FailedOperationTransformationConfig.REJECTED_RESOURCE).addFailedAttribute(SUBSYSTEM_ADDRESS.append(CommonAttributes.LOGGING_PROFILE).append(ConsoleHandlerResourceDefinition.CONSOLE_HANDLER_PATH),FailedOperationTransformationConfig.REJECTED_RESOURCE).addFailedAttribute(SUBSYSTEM_ADDRESS.append(CommonAttributes.LOGGING_PROFILE).append(RootLoggerResourceDefinition.ROOT_LOGGER_PATH),FailedOperationTransformationConfig.REJECTED_RESOURCE).addFailedAttribute(SUBSYSTEM_ADDRESS.append(CommonAttributes.LOGGING_PROFILE).append(LoggerResourceDefinition.LOGGER_PATH),FailedOperationTransformationConfig.REJECTED_RESOURCE).addFailedAttribute(SUBSYSTEM_ADDRESS.append(CommonAttributes.LOGGING_PROFILE).append(SyslogHandlerResourceDefinition.SYSLOG_HANDLER_PATH),FailedOperationTransformationConfig.REJECTED_RESOURCE)) @TO@ MethodInvocation:ModelTestUtils.checkFailedTransformedBootOperations(mainServices,modelVersion,ops,new FailedOperationTransformationConfig().addFailedAttribute(createRootLoggerAddress(),new RejectExpressionsConfig(RootLoggerResourceDefinition.EXPRESSION_ATTRIBUTES)).addFailedAttribute(SUBSYSTEM_ADDRESS.append(LoggerResourceDefinition.LOGGER_PATH),new RejectExpressionsConfig(LoggerResourceDefinition.EXPRESSION_ATTRIBUTES)).addFailedAttribute(SUBSYSTEM_ADDRESS.append(AsyncHandlerResourceDefinition.ASYNC_HANDLER_PATH),new RejectExpressionsConfig(AsyncHandlerResourceDefinition.ATTRIBUTES)).addFailedAttribute(SUBSYSTEM_ADDRESS.append(ConsoleHandlerResourceDefinition.CONSOLE_HANDLER_PATH),new RejectExpressionsConfig(ConsoleHandlerResourceDefinition.ATTRIBUTES)).addFailedAttribute(SUBSYSTEM_ADDRESS.append(FileHandlerResourceDefinition.FILE_HANDLER_PATH),new RejectExpressionsConfig(FileHandlerResourceDefinition.ATTRIBUTES)).addFailedAttribute(SUBSYSTEM_ADDRESS.append(PeriodicHandlerResourceDefinition.PERIODIC_HANDLER_PATH),new RejectExpressionsConfig(PeriodicHandlerResourceDefinition.ATTRIBUTES)).addFailedAttribute(SUBSYSTEM_ADDRESS.append(SizeRotatingHandlerResourceDefinition.SIZE_ROTATING_HANDLER_PATH),new RejectExpressionsConfig(SizeRotatingHandlerResourceDefinition.ATTRIBUTES)).addFailedAttribute(SUBSYSTEM_ADDRESS.append(CustomHandlerResourceDefinition.CUSTOM_HANDLE_PATH),new RejectExpressionsConfig(CustomHandlerResourceDefinition.WRITABLE_ATTRIBUTES)).addFailedAttribute(SUBSYSTEM_ADDRESS.append(SyslogHandlerResourceDefinition.SYSLOG_HANDLER_PATH),FailedOperationTransformationConfig.REJECTED_RESOURCE).addFailedAttribute(SUBSYSTEM_ADDRESS.append(CommonAttributes.LOGGING_PROFILE),FailedOperationTransformationConfig.REJECTED_RESOURCE).addFailedAttribute(SUBSYSTEM_ADDRESS.append(CommonAttributes.LOGGING_PROFILE).append(ConsoleHandlerResourceDefinition.CONSOLE_HANDLER_PATH),FailedOperationTransformationConfig.REJECTED_RESOURCE).addFailedAttribute(SUBSYSTEM_ADDRESS.append(CommonAttributes.LOGGING_PROFILE).append(RootLoggerResourceDefinition.ROOT_LOGGER_PATH),FailedOperationTransformationConfig.REJECTED_RESOURCE).addFailedAttribute(SUBSYSTEM_ADDRESS.append(CommonAttributes.LOGGING_PROFILE).append(LoggerResourceDefinition.LOGGER_PATH),FailedOperationTransformationConfig.REJECTED_RESOURCE).addFailedAttribute(SUBSYSTEM_ADDRESS.append(CommonAttributes.LOGGING_PROFILE).append(SyslogHandlerResourceDefinition.SYSLOG_HANDLER_PATH),FailedOperationTransformationConfig.REJECTED_RESOURCE)) @AT@ 6434 @LENGTH@ 3336
---UPD MethodInvocation@@ModelTestUtils.checkFailedTransformedBootOperations(mainServices,modelVersion,ops,new FailedOperationTransformationConfig().addFailedAttribute(createRootLoggerAddress(),new RejectExpressionsConfig(RootLoggerResourceDefinition.EXPRESSION_ATTRIBUTES)).addFailedAttribute(SUBSYSTEM_ADDRESS.append(LoggerResourceDefinition.LOGGER_PATH),new RejectExpressionsConfig(LoggerResourceDefinition.EXPRESSION_ATTRIBUTES)).addFailedAttribute(SUBSYSTEM_ADDRESS.append(AsyncHandlerResourceDefinition.ASYNC_HANDLER_PATH),new RejectExpressionsConfig(AsyncHandlerResourceDefinition.ATTRIBUTES)).addFailedAttribute(SUBSYSTEM_ADDRESS.append(ConsoleHandlerResourceDefinition.CONSOLE_HANDLER_PATH),new RejectExpressionsConfig(ConsoleHandlerResourceDefinition.ATTRIBUTES)).addFailedAttribute(SUBSYSTEM_ADDRESS.append(FileHandlerResourceDefinition.FILE_HANDLER_PATH),new RejectExpressionsConfig(FileHandlerResourceDefinition.ATTRIBUTES)).addFailedAttribute(SUBSYSTEM_ADDRESS.append(PeriodicHandlerResourceDefinition.PERIODIC_HANDLER_PATH),new RejectExpressionsConfig(PeriodicHandlerResourceDefinition.ATTRIBUTES)).addFailedAttribute(SUBSYSTEM_ADDRESS.append(SizeRotatingHandlerResourceDefinition.SIZE_ROTATING_HANDLER_PATH),new RejectExpressionsConfig(SizeRotatingHandlerResourceDefinition.ATTRIBUTES)).addFailedAttribute(SUBSYSTEM_ADDRESS.append(CustomHandlerResourceDefinition.CUSTOM_HANDLE_PATH),new RejectExpressionsConfig(CustomHandlerResourceDefinition.WRITABLE_ATTRIBUTES)).addFailedAttribute(SUBSYSTEM_ADDRESS.append(SyslogHandlerResourceDefinition.SYSLOG_HANDLER_PATH),FailedOperationTransformationConfig.DISCARDED_RESOURCE).addFailedAttribute(SUBSYSTEM_ADDRESS.append(CommonAttributes.LOGGING_PROFILE),FailedOperationTransformationConfig.REJECTED_RESOURCE).addFailedAttribute(SUBSYSTEM_ADDRESS.append(CommonAttributes.LOGGING_PROFILE).append(ConsoleHandlerResourceDefinition.CONSOLE_HANDLER_PATH),FailedOperationTransformationConfig.REJECTED_RESOURCE).addFailedAttribute(SUBSYSTEM_ADDRESS.append(CommonAttributes.LOGGING_PROFILE).append(RootLoggerResourceDefinition.ROOT_LOGGER_PATH),FailedOperationTransformationConfig.REJECTED_RESOURCE).addFailedAttribute(SUBSYSTEM_ADDRESS.append(CommonAttributes.LOGGING_PROFILE).append(LoggerResourceDefinition.LOGGER_PATH),FailedOperationTransformationConfig.REJECTED_RESOURCE).addFailedAttribute(SUBSYSTEM_ADDRESS.append(CommonAttributes.LOGGING_PROFILE).append(SyslogHandlerResourceDefinition.SYSLOG_HANDLER_PATH),FailedOperationTransformationConfig.REJECTED_RESOURCE)) @TO@ ModelTestUtils.checkFailedTransformedBootOperations(mainServices,modelVersion,ops,new FailedOperationTransformationConfig().addFailedAttribute(createRootLoggerAddress(),new RejectExpressionsConfig(RootLoggerResourceDefinition.EXPRESSION_ATTRIBUTES)).addFailedAttribute(SUBSYSTEM_ADDRESS.append(LoggerResourceDefinition.LOGGER_PATH),new RejectExpressionsConfig(LoggerResourceDefinition.EXPRESSION_ATTRIBUTES)).addFailedAttribute(SUBSYSTEM_ADDRESS.append(AsyncHandlerResourceDefinition.ASYNC_HANDLER_PATH),new RejectExpressionsConfig(AsyncHandlerResourceDefinition.ATTRIBUTES)).addFailedAttribute(SUBSYSTEM_ADDRESS.append(ConsoleHandlerResourceDefinition.CONSOLE_HANDLER_PATH),new RejectExpressionsConfig(ConsoleHandlerResourceDefinition.ATTRIBUTES)).addFailedAttribute(SUBSYSTEM_ADDRESS.append(FileHandlerResourceDefinition.FILE_HANDLER_PATH),new RejectExpressionsConfig(FileHandlerResourceDefinition.ATTRIBUTES)).addFailedAttribute(SUBSYSTEM_ADDRESS.append(PeriodicHandlerResourceDefinition.PERIODIC_HANDLER_PATH),new RejectExpressionsConfig(PeriodicHandlerResourceDefinition.ATTRIBUTES)).addFailedAttribute(SUBSYSTEM_ADDRESS.append(SizeRotatingHandlerResourceDefinition.SIZE_ROTATING_HANDLER_PATH),new RejectExpressionsConfig(SizeRotatingHandlerResourceDefinition.ATTRIBUTES)).addFailedAttribute(SUBSYSTEM_ADDRESS.append(CustomHandlerResourceDefinition.CUSTOM_HANDLE_PATH),new RejectExpressionsConfig(CustomHandlerResourceDefinition.WRITABLE_ATTRIBUTES)).addFailedAttribute(SUBSYSTEM_ADDRESS.append(SyslogHandlerResourceDefinition.SYSLOG_HANDLER_PATH),FailedOperationTransformationConfig.REJECTED_RESOURCE).addFailedAttribute(SUBSYSTEM_ADDRESS.append(CommonAttributes.LOGGING_PROFILE),FailedOperationTransformationConfig.REJECTED_RESOURCE).addFailedAttribute(SUBSYSTEM_ADDRESS.append(CommonAttributes.LOGGING_PROFILE).append(ConsoleHandlerResourceDefinition.CONSOLE_HANDLER_PATH),FailedOperationTransformationConfig.REJECTED_RESOURCE).addFailedAttribute(SUBSYSTEM_ADDRESS.append(CommonAttributes.LOGGING_PROFILE).append(RootLoggerResourceDefinition.ROOT_LOGGER_PATH),FailedOperationTransformationConfig.REJECTED_RESOURCE).addFailedAttribute(SUBSYSTEM_ADDRESS.append(CommonAttributes.LOGGING_PROFILE).append(LoggerResourceDefinition.LOGGER_PATH),FailedOperationTransformationConfig.REJECTED_RESOURCE).addFailedAttribute(SUBSYSTEM_ADDRESS.append(CommonAttributes.LOGGING_PROFILE).append(SyslogHandlerResourceDefinition.SYSLOG_HANDLER_PATH),FailedOperationTransformationConfig.REJECTED_RESOURCE)) @AT@ 6434 @LENGTH@ 3335
------UPD SimpleName@@MethodName:checkFailedTransformedBootOperations:[mainServices, modelVersion, ops, new FailedOperationTransformationConfig().addFailedAttribute(createRootLoggerAddress(),new RejectExpressionsConfig(RootLoggerResourceDefinition.EXPRESSION_ATTRIBUTES)).addFailedAttribute(SUBSYSTEM_ADDRESS.append(LoggerResourceDefinition.LOGGER_PATH),new RejectExpressionsConfig(LoggerResourceDefinition.EXPRESSION_ATTRIBUTES)).addFailedAttribute(SUBSYSTEM_ADDRESS.append(AsyncHandlerResourceDefinition.ASYNC_HANDLER_PATH),new RejectExpressionsConfig(AsyncHandlerResourceDefinition.ATTRIBUTES)).addFailedAttribute(SUBSYSTEM_ADDRESS.append(ConsoleHandlerResourceDefinition.CONSOLE_HANDLER_PATH),new RejectExpressionsConfig(ConsoleHandlerResourceDefinition.ATTRIBUTES)).addFailedAttribute(SUBSYSTEM_ADDRESS.append(FileHandlerResourceDefinition.FILE_HANDLER_PATH),new RejectExpressionsConfig(FileHandlerResourceDefinition.ATTRIBUTES)).addFailedAttribute(SUBSYSTEM_ADDRESS.append(PeriodicHandlerResourceDefinition.PERIODIC_HANDLER_PATH),new RejectExpressionsConfig(PeriodicHandlerResourceDefinition.ATTRIBUTES)).addFailedAttribute(SUBSYSTEM_ADDRESS.append(SizeRotatingHandlerResourceDefinition.SIZE_ROTATING_HANDLER_PATH),new RejectExpressionsConfig(SizeRotatingHandlerResourceDefinition.ATTRIBUTES)).addFailedAttribute(SUBSYSTEM_ADDRESS.append(CustomHandlerResourceDefinition.CUSTOM_HANDLE_PATH),new RejectExpressionsConfig(CustomHandlerResourceDefinition.WRITABLE_ATTRIBUTES)).addFailedAttribute(SUBSYSTEM_ADDRESS.append(SyslogHandlerResourceDefinition.SYSLOG_HANDLER_PATH),FailedOperationTransformationConfig.DISCARDED_RESOURCE).addFailedAttribute(SUBSYSTEM_ADDRESS.append(CommonAttributes.LOGGING_PROFILE),FailedOperationTransformationConfig.REJECTED_RESOURCE).addFailedAttribute(SUBSYSTEM_ADDRESS.append(CommonAttributes.LOGGING_PROFILE).append(ConsoleHandlerResourceDefinition.CONSOLE_HANDLER_PATH),FailedOperationTransformationConfig.REJECTED_RESOURCE).addFailedAttribute(SUBSYSTEM_ADDRESS.append(CommonAttributes.LOGGING_PROFILE).append(RootLoggerResourceDefinition.ROOT_LOGGER_PATH),FailedOperationTransformationConfig.REJECTED_RESOURCE).addFailedAttribute(SUBSYSTEM_ADDRESS.append(CommonAttributes.LOGGING_PROFILE).append(LoggerResourceDefinition.LOGGER_PATH),FailedOperationTransformationConfig.REJECTED_RESOURCE).addFailedAttribute(SUBSYSTEM_ADDRESS.append(CommonAttributes.LOGGING_PROFILE).append(SyslogHandlerResourceDefinition.SYSLOG_HANDLER_PATH),FailedOperationTransformationConfig.REJECTED_RESOURCE)] @TO@ MethodName:checkFailedTransformedBootOperations:[mainServices, modelVersion, ops, new FailedOperationTransformationConfig().addFailedAttribute(createRootLoggerAddress(),new RejectExpressionsConfig(RootLoggerResourceDefinition.EXPRESSION_ATTRIBUTES)).addFailedAttribute(SUBSYSTEM_ADDRESS.append(LoggerResourceDefinition.LOGGER_PATH),new RejectExpressionsConfig(LoggerResourceDefinition.EXPRESSION_ATTRIBUTES)).addFailedAttribute(SUBSYSTEM_ADDRESS.append(AsyncHandlerResourceDefinition.ASYNC_HANDLER_PATH),new RejectExpressionsConfig(AsyncHandlerResourceDefinition.ATTRIBUTES)).addFailedAttribute(SUBSYSTEM_ADDRESS.append(ConsoleHandlerResourceDefinition.CONSOLE_HANDLER_PATH),new RejectExpressionsConfig(ConsoleHandlerResourceDefinition.ATTRIBUTES)).addFailedAttribute(SUBSYSTEM_ADDRESS.append(FileHandlerResourceDefinition.FILE_HANDLER_PATH),new RejectExpressionsConfig(FileHandlerResourceDefinition.ATTRIBUTES)).addFailedAttribute(SUBSYSTEM_ADDRESS.append(PeriodicHandlerResourceDefinition.PERIODIC_HANDLER_PATH),new RejectExpressionsConfig(PeriodicHandlerResourceDefinition.ATTRIBUTES)).addFailedAttribute(SUBSYSTEM_ADDRESS.append(SizeRotatingHandlerResourceDefinition.SIZE_ROTATING_HANDLER_PATH),new RejectExpressionsConfig(SizeRotatingHandlerResourceDefinition.ATTRIBUTES)).addFailedAttribute(SUBSYSTEM_ADDRESS.append(CustomHandlerResourceDefinition.CUSTOM_HANDLE_PATH),new RejectExpressionsConfig(CustomHandlerResourceDefinition.WRITABLE_ATTRIBUTES)).addFailedAttribute(SUBSYSTEM_ADDRESS.append(SyslogHandlerResourceDefinition.SYSLOG_HANDLER_PATH),FailedOperationTransformationConfig.REJECTED_RESOURCE).addFailedAttribute(SUBSYSTEM_ADDRESS.append(CommonAttributes.LOGGING_PROFILE),FailedOperationTransformationConfig.REJECTED_RESOURCE).addFailedAttribute(SUBSYSTEM_ADDRESS.append(CommonAttributes.LOGGING_PROFILE).append(ConsoleHandlerResourceDefinition.CONSOLE_HANDLER_PATH),FailedOperationTransformationConfig.REJECTED_RESOURCE).addFailedAttribute(SUBSYSTEM_ADDRESS.append(CommonAttributes.LOGGING_PROFILE).append(RootLoggerResourceDefinition.ROOT_LOGGER_PATH),FailedOperationTransformationConfig.REJECTED_RESOURCE).addFailedAttribute(SUBSYSTEM_ADDRESS.append(CommonAttributes.LOGGING_PROFILE).append(LoggerResourceDefinition.LOGGER_PATH),FailedOperationTransformationConfig.REJECTED_RESOURCE).addFailedAttribute(SUBSYSTEM_ADDRESS.append(CommonAttributes.LOGGING_PROFILE).append(SyslogHandlerResourceDefinition.SYSLOG_HANDLER_PATH),FailedOperationTransformationConfig.REJECTED_RESOURCE)] @AT@ 6449 @LENGTH@ 3320
---------UPD MethodInvocation@@new FailedOperationTransformationConfig().addFailedAttribute(createRootLoggerAddress(),new RejectExpressionsConfig(RootLoggerResourceDefinition.EXPRESSION_ATTRIBUTES)).addFailedAttribute(SUBSYSTEM_ADDRESS.append(LoggerResourceDefinition.LOGGER_PATH),new RejectExpressionsConfig(LoggerResourceDefinition.EXPRESSION_ATTRIBUTES)).addFailedAttribute(SUBSYSTEM_ADDRESS.append(AsyncHandlerResourceDefinition.ASYNC_HANDLER_PATH),new RejectExpressionsConfig(AsyncHandlerResourceDefinition.ATTRIBUTES)).addFailedAttribute(SUBSYSTEM_ADDRESS.append(ConsoleHandlerResourceDefinition.CONSOLE_HANDLER_PATH),new RejectExpressionsConfig(ConsoleHandlerResourceDefinition.ATTRIBUTES)).addFailedAttribute(SUBSYSTEM_ADDRESS.append(FileHandlerResourceDefinition.FILE_HANDLER_PATH),new RejectExpressionsConfig(FileHandlerResourceDefinition.ATTRIBUTES)).addFailedAttribute(SUBSYSTEM_ADDRESS.append(PeriodicHandlerResourceDefinition.PERIODIC_HANDLER_PATH),new RejectExpressionsConfig(PeriodicHandlerResourceDefinition.ATTRIBUTES)).addFailedAttribute(SUBSYSTEM_ADDRESS.append(SizeRotatingHandlerResourceDefinition.SIZE_ROTATING_HANDLER_PATH),new RejectExpressionsConfig(SizeRotatingHandlerResourceDefinition.ATTRIBUTES)).addFailedAttribute(SUBSYSTEM_ADDRESS.append(CustomHandlerResourceDefinition.CUSTOM_HANDLE_PATH),new RejectExpressionsConfig(CustomHandlerResourceDefinition.WRITABLE_ATTRIBUTES)).addFailedAttribute(SUBSYSTEM_ADDRESS.append(SyslogHandlerResourceDefinition.SYSLOG_HANDLER_PATH),FailedOperationTransformationConfig.DISCARDED_RESOURCE).addFailedAttribute(SUBSYSTEM_ADDRESS.append(CommonAttributes.LOGGING_PROFILE),FailedOperationTransformationConfig.REJECTED_RESOURCE).addFailedAttribute(SUBSYSTEM_ADDRESS.append(CommonAttributes.LOGGING_PROFILE).append(ConsoleHandlerResourceDefinition.CONSOLE_HANDLER_PATH),FailedOperationTransformationConfig.REJECTED_RESOURCE).addFailedAttribute(SUBSYSTEM_ADDRESS.append(CommonAttributes.LOGGING_PROFILE).append(RootLoggerResourceDefinition.ROOT_LOGGER_PATH),FailedOperationTransformationConfig.REJECTED_RESOURCE).addFailedAttribute(SUBSYSTEM_ADDRESS.append(CommonAttributes.LOGGING_PROFILE).append(LoggerResourceDefinition.LOGGER_PATH),FailedOperationTransformationConfig.REJECTED_RESOURCE).addFailedAttribute(SUBSYSTEM_ADDRESS.append(CommonAttributes.LOGGING_PROFILE).append(SyslogHandlerResourceDefinition.SYSLOG_HANDLER_PATH),FailedOperationTransformationConfig.REJECTED_RESOURCE) @TO@ new FailedOperationTransformationConfig().addFailedAttribute(createRootLoggerAddress(),new RejectExpressionsConfig(RootLoggerResourceDefinition.EXPRESSION_ATTRIBUTES)).addFailedAttribute(SUBSYSTEM_ADDRESS.append(LoggerResourceDefinition.LOGGER_PATH),new RejectExpressionsConfig(LoggerResourceDefinition.EXPRESSION_ATTRIBUTES)).addFailedAttribute(SUBSYSTEM_ADDRESS.append(AsyncHandlerResourceDefinition.ASYNC_HANDLER_PATH),new RejectExpressionsConfig(AsyncHandlerResourceDefinition.ATTRIBUTES)).addFailedAttribute(SUBSYSTEM_ADDRESS.append(ConsoleHandlerResourceDefinition.CONSOLE_HANDLER_PATH),new RejectExpressionsConfig(ConsoleHandlerResourceDefinition.ATTRIBUTES)).addFailedAttribute(SUBSYSTEM_ADDRESS.append(FileHandlerResourceDefinition.FILE_HANDLER_PATH),new RejectExpressionsConfig(FileHandlerResourceDefinition.ATTRIBUTES)).addFailedAttribute(SUBSYSTEM_ADDRESS.append(PeriodicHandlerResourceDefinition.PERIODIC_HANDLER_PATH),new RejectExpressionsConfig(PeriodicHandlerResourceDefinition.ATTRIBUTES)).addFailedAttribute(SUBSYSTEM_ADDRESS.append(SizeRotatingHandlerResourceDefinition.SIZE_ROTATING_HANDLER_PATH),new RejectExpressionsConfig(SizeRotatingHandlerResourceDefinition.ATTRIBUTES)).addFailedAttribute(SUBSYSTEM_ADDRESS.append(CustomHandlerResourceDefinition.CUSTOM_HANDLE_PATH),new RejectExpressionsConfig(CustomHandlerResourceDefinition.WRITABLE_ATTRIBUTES)).addFailedAttribute(SUBSYSTEM_ADDRESS.append(SyslogHandlerResourceDefinition.SYSLOG_HANDLER_PATH),FailedOperationTransformationConfig.REJECTED_RESOURCE).addFailedAttribute(SUBSYSTEM_ADDRESS.append(CommonAttributes.LOGGING_PROFILE),FailedOperationTransformationConfig.REJECTED_RESOURCE).addFailedAttribute(SUBSYSTEM_ADDRESS.append(CommonAttributes.LOGGING_PROFILE).append(ConsoleHandlerResourceDefinition.CONSOLE_HANDLER_PATH),FailedOperationTransformationConfig.REJECTED_RESOURCE).addFailedAttribute(SUBSYSTEM_ADDRESS.append(CommonAttributes.LOGGING_PROFILE).append(RootLoggerResourceDefinition.ROOT_LOGGER_PATH),FailedOperationTransformationConfig.REJECTED_RESOURCE).addFailedAttribute(SUBSYSTEM_ADDRESS.append(CommonAttributes.LOGGING_PROFILE).append(LoggerResourceDefinition.LOGGER_PATH),FailedOperationTransformationConfig.REJECTED_RESOURCE).addFailedAttribute(SUBSYSTEM_ADDRESS.append(CommonAttributes.LOGGING_PROFILE).append(SyslogHandlerResourceDefinition.SYSLOG_HANDLER_PATH),FailedOperationTransformationConfig.REJECTED_RESOURCE) @AT@ 6535 @LENGTH@ 3224
------------UPD MethodInvocation@@MethodName:addFailedAttribute:[SUBSYSTEM_ADDRESS.append(SyslogHandlerResourceDefinition.SYSLOG_HANDLER_PATH), FailedOperationTransformationConfig.DISCARDED_RESOURCE] @TO@ MethodName:addFailedAttribute:[SUBSYSTEM_ADDRESS.append(SyslogHandlerResourceDefinition.SYSLOG_HANDLER_PATH), FailedOperationTransformationConfig.REJECTED_RESOURCE] @AT@ 6535 @LENGTH@ 2048
---------------UPD QualifiedName@@FailedOperationTransformationConfig.DISCARDED_RESOURCE @TO@ FailedOperationTransformationConfig.REJECTED_RESOURCE @AT@ 8528 @LENGTH@ 54
------------------UPD SimpleName@@DISCARDED_RESOURCE @TO@ REJECTED_RESOURCE @AT@ 8564 @LENGTH@ 18


UPD ExpressionStatement@@MethodInvocation:addMultiFieldOperation("$pop",key,(pos == Position.FIRST ? -1 : 1)) @TO@ MethodInvocation:addMultiFieldOperation("$pop",key,pos == Position.FIRST ? -1 : 1) @AT@ 3678 @LENGTH@ 70
---UPD MethodInvocation@@addMultiFieldOperation("$pop",key,(pos == Position.FIRST ? -1 : 1)) @TO@ addMultiFieldOperation("$pop",key,pos == Position.FIRST ? -1 : 1) @AT@ 3678 @LENGTH@ 69
------UPD SimpleName@@MethodName:addMultiFieldOperation:["$pop", key, (pos == Position.FIRST ? -1 : 1)] @TO@ MethodName:addMultiFieldOperation:["$pop", key, pos == Position.FIRST ? -1 : 1] @AT@ 3678 @LENGTH@ 69
---------DEL ParenthesizedExpression@@(pos == Position.FIRST ? -1 : 1) @AT@ 3714 @LENGTH@ 32
---------MOV ConditionalExpression@@pos == Position.FIRST ? -1 : 1 @TO@ SimpleName@@MethodName:addMultiFieldOperation:["$pop", key, (pos == Position.FIRST ? -1 : 1)] @AT@ 3715 @LENGTH@ 30


UPD TryStatement@@try {  final ModelNode dmr=new ModelNode();  dmr.get("operation").set("upload-deployment-stream");  dmr.get("address").setEmptyList();  dmr.get("input-stream-index").set(0);  OperationBuilder operation=new OperationBuilder(dmr);  operation.addInputStream(in);  response=modelController.execute(operation.build());  if (!response.get(OUTCOME).asString().equals(SUCCESS)) {    Common.sendError(exchange,false,response.get(FAILURE_DESCRIPTION).asString());    return;  }} catch (Throwable t) {  ROOT_LOGGER.uploadError(t);  Common.sendError(exchange,false,t.getLocalizedMessage());  return;} finally {  IoUtils.safeClose(in);} @TO@ try {  final ModelNode dmr=new ModelNode();  dmr.get("operation").set("upload-deployment-stream");  dmr.get("address").setEmptyList();  dmr.get("input-stream-index").set(0);  OperationBuilder operation=new OperationBuilder(dmr);  operation.addInputStream(in);  response=modelController.execute(operation.build());  if (!response.get(OUTCOME).asString().equals(SUCCESS)) {    Common.sendError(exchange,false,false,response.get(FAILURE_DESCRIPTION).asString());    return;  }} catch (Throwable t) {  ROOT_LOGGER.uploadError(t);  Common.sendError(exchange,false,false,t.getLocalizedMessage());  return;} finally {  IoUtils.safeClose(in);} @AT@ 2891 @LENGTH@ 1032
---UPD IfStatement@@if (!response.get(OUTCOME).asString().equals(SUCCESS)) {  Common.sendError(exchange,false,response.get(FAILURE_DESCRIPTION).asString());  return;} @TO@ if (!response.get(OUTCOME).asString().equals(SUCCESS)) {  Common.sendError(exchange,false,false,response.get(FAILURE_DESCRIPTION).asString());  return;} @AT@ 3365 @LENGTH@ 214
------UPD Block@@ThenBody:{  Common.sendError(exchange,false,response.get(FAILURE_DESCRIPTION).asString());  return;} @TO@ ThenBody:{  Common.sendError(exchange,false,false,response.get(FAILURE_DESCRIPTION).asString());  return;} @AT@ 3419 @LENGTH@ 160
---------UPD ExpressionStatement@@MethodInvocation:Common.sendError(exchange,false,response.get(FAILURE_DESCRIPTION).asString()) @TO@ MethodInvocation:Common.sendError(exchange,false,false,response.get(FAILURE_DESCRIPTION).asString()) @AT@ 3445 @LENGTH@ 80
------------UPD MethodInvocation@@Common.sendError(exchange,false,response.get(FAILURE_DESCRIPTION).asString()) @TO@ Common.sendError(exchange,false,false,response.get(FAILURE_DESCRIPTION).asString()) @AT@ 3445 @LENGTH@ 79
---------------UPD SimpleName@@MethodName:sendError:[exchange, false, response.get(FAILURE_DESCRIPTION).asString()] @TO@ MethodName:sendError:[exchange, false, false, response.get(FAILURE_DESCRIPTION).asString()] @AT@ 3452 @LENGTH@ 72
------------------INS BooleanLiteral@@false @TO@ SimpleName@@MethodName:sendError:[exchange, false, response.get(FAILURE_DESCRIPTION).asString()] @AT@ 3479 @LENGTH@ 5
---UPD CatchClause@@catch (Throwable t) {  ROOT_LOGGER.uploadError(t);  Common.sendError(exchange,false,t.getLocalizedMessage());  return;} @TO@ catch (Throwable t) {  ROOT_LOGGER.uploadError(t);  Common.sendError(exchange,false,false,t.getLocalizedMessage());  return;} @AT@ 3598 @LENGTH@ 254
------UPD ExpressionStatement@@MethodInvocation:Common.sendError(exchange,false,t.getLocalizedMessage()) @TO@ MethodInvocation:Common.sendError(exchange,false,false,t.getLocalizedMessage()) @AT@ 3747 @LENGTH@ 59
---------UPD MethodInvocation@@Common.sendError(exchange,false,t.getLocalizedMessage()) @TO@ Common.sendError(exchange,false,false,t.getLocalizedMessage()) @AT@ 3747 @LENGTH@ 58
------------UPD SimpleName@@MethodName:sendError:[exchange, false, t.getLocalizedMessage()] @TO@ MethodName:sendError:[exchange, false, false, t.getLocalizedMessage()] @AT@ 3754 @LENGTH@ 51
---------------INS BooleanLiteral@@false @TO@ SimpleName@@MethodName:sendError:[exchange, false, t.getLocalizedMessage()] @AT@ 3788 @LENGTH@ 5


DEL MethodDeclaration@@public, static, DirectoryGrouping, MethodName:fromModel, final ModelNode model,  @AT@ 3340 @LENGTH@ 479
---DEL Modifier@@public @AT@ 3340 @LENGTH@ 6
---DEL Modifier@@static @AT@ 3347 @LENGTH@ 6
---DEL SimpleType@@DirectoryGrouping @AT@ 3354 @LENGTH@ 17
---DEL SimpleName@@MethodName:fromModel @AT@ 3372 @LENGTH@ 9
---DEL SingleVariableDeclaration@@final ModelNode model @AT@ 3382 @LENGTH@ 21
------DEL Modifier@@final @AT@ 3382 @LENGTH@ 5
------DEL SimpleType@@ModelNode @AT@ 3388 @LENGTH@ 9
------DEL SimpleName@@model @AT@ 3398 @LENGTH@ 5
---DEL TryStatement@@try {  if (model.hasDefined(ModelDescriptionConstants.DIRECTORY_GROUPING)) {    return DirectoryGrouping.forName(HostResourceDefinition.DIRECTORY_GROUPING.resolveModelAttribute(ExpressionResolver.DEFAULT,model).asString());  }} catch (OperationFailedException e) {  throw new IllegalStateException(e);} @AT@ 3415 @LENGTH@ 367
------DEL IfStatement@@if (model.hasDefined(ModelDescriptionConstants.DIRECTORY_GROUPING)) {  return DirectoryGrouping.forName(HostResourceDefinition.DIRECTORY_GROUPING.resolveModelAttribute(ExpressionResolver.DEFAULT,model).asString());} @AT@ 3433 @LENGTH@ 244
---------DEL MethodInvocation@@model.hasDefined(ModelDescriptionConstants.DIRECTORY_GROUPING) @AT@ 3437 @LENGTH@ 62
------------DEL SimpleName@@Name:model @AT@ 3437 @LENGTH@ 5
------------DEL SimpleName@@MethodName:hasDefined:[ModelDescriptionConstants.DIRECTORY_GROUPING] @AT@ 3443 @LENGTH@ 56
---------------DEL QualifiedName@@ModelDescriptionConstants.DIRECTORY_GROUPING @AT@ 3454 @LENGTH@ 44
------------------DEL SimpleName@@ModelDescriptionConstants @AT@ 3454 @LENGTH@ 25
------------------DEL SimpleName@@DIRECTORY_GROUPING @AT@ 3480 @LENGTH@ 18
---------DEL Block@@ThenBody:{  return DirectoryGrouping.forName(HostResourceDefinition.DIRECTORY_GROUPING.resolveModelAttribute(ExpressionResolver.DEFAULT,model).asString());} @AT@ 3501 @LENGTH@ 176
------------DEL ReturnStatement@@MethodInvocation:DirectoryGrouping.forName(HostResourceDefinition.DIRECTORY_GROUPING.resolveModelAttribute(ExpressionResolver.DEFAULT,model).asString()) @AT@ 3519 @LENGTH@ 144
---------------DEL MethodInvocation@@DirectoryGrouping.forName(HostResourceDefinition.DIRECTORY_GROUPING.resolveModelAttribute(ExpressionResolver.DEFAULT,model).asString()) @AT@ 3526 @LENGTH@ 136
------------------DEL SimpleName@@Name:DirectoryGrouping @AT@ 3526 @LENGTH@ 17
------------------DEL SimpleName@@MethodName:forName:[HostResourceDefinition.DIRECTORY_GROUPING.resolveModelAttribute(ExpressionResolver.DEFAULT,model).asString()] @AT@ 3544 @LENGTH@ 118
---------------------DEL MethodInvocation@@HostResourceDefinition.DIRECTORY_GROUPING.resolveModelAttribute(ExpressionResolver.DEFAULT,model).asString() @AT@ 3552 @LENGTH@ 109
------------------------DEL MethodInvocation@@MethodName:resolveModelAttribute:[ExpressionResolver.DEFAULT, model] @AT@ 3552 @LENGTH@ 98
---------------------------DEL QualifiedName@@ExpressionResolver.DEFAULT @AT@ 3616 @LENGTH@ 26
------------------------------DEL SimpleName@@ExpressionResolver @AT@ 3616 @LENGTH@ 18
------------------------------DEL SimpleName@@DEFAULT @AT@ 3635 @LENGTH@ 7
---------------------------DEL SimpleName@@model @AT@ 3644 @LENGTH@ 5
------------------------DEL QualifiedName@@Name:HostResourceDefinition.DIRECTORY_GROUPING @AT@ 3552 @LENGTH@ 41
------------------------DEL SimpleName@@MethodName:asString:[] @AT@ 3651 @LENGTH@ 10
------DEL CatchClause@@catch (OperationFailedException e) {  throw new IllegalStateException(e);} @AT@ 3688 @LENGTH@ 94
---------DEL SingleVariableDeclaration@@OperationFailedException e @AT@ 3695 @LENGTH@ 26
------------DEL SimpleType@@OperationFailedException @AT@ 3695 @LENGTH@ 24
------------DEL SimpleName@@e @AT@ 3720 @LENGTH@ 1
---------DEL ThrowStatement@@ClassInstanceCreation:new IllegalStateException(e) @AT@ 3737 @LENGTH@ 35
------------DEL ClassInstanceCreation@@IllegalStateException[e] @AT@ 3743 @LENGTH@ 28
---------------DEL New@@new @AT@ 3743 @LENGTH@ 3
---------------DEL SimpleType@@IllegalStateException @AT@ 3747 @LENGTH@ 21
---------------DEL SimpleName@@e @AT@ 3769 @LENGTH@ 1
---DEL ReturnStatement@@MethodInvocation:defaultValue() @AT@ 3791 @LENGTH@ 22
------DEL MethodInvocation@@MethodName:defaultValue:[] @AT@ 3798 @LENGTH@ 14


UPD VariableDeclarationStatement@@int defaultPageNumber=defaults.page(); @TO@ Integer defaultPageNumber=defaults.page(); @AT@ 10737 @LENGTH@ 40
---INS SimpleType@@Integer @TO@ VariableDeclarationStatement@@int defaultPageNumber=defaults.page(); @AT@ 10737 @LENGTH@ 7
---DEL PrimitiveType@@int @AT@ 10737 @LENGTH@ 3


UPD MethodDeclaration@@Map<String,String>, MethodName:getContainerConfguration,  @TO@ Map<String,String>, MethodName:getContainerConfiguration,  @AT@ 998 @LENGTH@ 27
---UPD SimpleName@@MethodName:getContainerConfguration @TO@ MethodName:getContainerConfiguration @AT@ 998 @LENGTH@ 24


UPD IfStatement@@if (!config.expectFailed(operation)) {  Assert.assertEquals("Failed: " + operation + "\n: "+ result,SUCCESS,result.get(OUTCOME).asString());} else {  Assert.assertEquals("Should not have worked: " + operation,FAILED,result.get(OUTCOME).asString());  if (config.canCorrectMore(operation)) {    checkFailedTransformedAddOperation(mainServices,modelVersion,config.correctOperation(operation),config);  }} @TO@ if (config.expectFailed(operation)) {  Assert.assertNotNull("Expected transformation to get rejected " + operation,transformedOperation.getFailureDescription());  if (config.canCorrectMore(operation)) {    checkFailedTransformedAddOperation(mainServices,modelVersion,config.correctOperation(operation),config);  }} else if (config.expectDiscarded(operation)) {  Assert.assertNull("Expected null transformed operation for discarded " + operation,transformedOperation.getTransformedOperation());} else {  ModelNode result=mainServices.executeOperation(modelVersion,transformedOperation);  Assert.assertEquals("Failed: " + operation + "\n: "+ result,SUCCESS,result.get(OUTCOME).asString());} @AT@ 25539 @LENGTH@ 484
---DEL PrefixExpression@@!config.expectFailed(operation) @AT@ 25543 @LENGTH@ 31
------DEL Operator@@! @AT@ 25543 @LENGTH@ 1
---MOV MethodInvocation@@config.expectFailed(operation) @TO@ IfStatement@@if (!config.expectFailed(operation)) {  Assert.assertEquals("Failed: " + operation + "\n: "+ result,SUCCESS,result.get(OUTCOME).asString());} else {  Assert.assertEquals("Should not have worked: " + operation,FAILED,result.get(OUTCOME).asString());  if (config.canCorrectMore(operation)) {    checkFailedTransformedAddOperation(mainServices,modelVersion,config.correctOperation(operation),config);  }} @AT@ 25544 @LENGTH@ 30
---UPD Block@@ThenBody:{  Assert.assertEquals("Failed: " + operation + "\n: "+ result,SUCCESS,result.get(OUTCOME).asString());} @TO@ ElseBody:{  ModelNode result=mainServices.executeOperation(modelVersion,transformedOperation);  Assert.assertEquals("Failed: " + operation + "\n: "+ result,SUCCESS,result.get(OUTCOME).asString());} @AT@ 25576 @LENGTH@ 127
---UPD Block@@ElseBody:{  Assert.assertEquals("Should not have worked: " + operation,FAILED,result.get(OUTCOME).asString());  if (config.canCorrectMore(operation)) {    checkFailedTransformedAddOperation(mainServices,modelVersion,config.correctOperation(operation),config);  }} @TO@ ThenBody:{  Assert.assertNotNull("Expected transformation to get rejected " + operation,transformedOperation.getFailureDescription());  if (config.canCorrectMore(operation)) {    checkFailedTransformedAddOperation(mainServices,modelVersion,config.correctOperation(operation),config);  }} @AT@ 25709 @LENGTH@ 314
------UPD ExpressionStatement@@MethodInvocation:Assert.assertEquals("Should not have worked: " + operation,FAILED,result.get(OUTCOME).asString()) @TO@ MethodInvocation:Assert.assertNotNull("Expected transformation to get rejected " + operation,transformedOperation.getFailureDescription()) @AT@ 25723 @LENGTH@ 100
---------UPD MethodInvocation@@Assert.assertEquals("Should not have worked: " + operation,FAILED,result.get(OUTCOME).asString()) @TO@ Assert.assertNotNull("Expected transformation to get rejected " + operation,transformedOperation.getFailureDescription()) @AT@ 25723 @LENGTH@ 99
------------UPD SimpleName@@MethodName:assertEquals:["Should not have worked: " + operation, FAILED, result.get(OUTCOME).asString()] @TO@ MethodName:assertNotNull:["Expected transformation to get rejected " + operation, transformedOperation.getFailureDescription()] @AT@ 25730 @LENGTH@ 92
---------------UPD InfixExpression@@"Should not have worked: " + operation @TO@ "Expected transformation to get rejected " + operation @AT@ 25743 @LENGTH@ 38
------------------UPD StringLiteral@@"Should not have worked: " @TO@ "Expected transformation to get rejected " @AT@ 25743 @LENGTH@ 26
---------------DEL SimpleName@@FAILED @AT@ 25783 @LENGTH@ 6
---------------UPD MethodInvocation@@result.get(OUTCOME).asString() @TO@ transformedOperation.getFailureDescription() @AT@ 25791 @LENGTH@ 30
------------------DEL MethodInvocation@@MethodName:get:[OUTCOME] @AT@ 25791 @LENGTH@ 19
---------------------DEL SimpleName@@OUTCOME @AT@ 25802 @LENGTH@ 7
------------------UPD SimpleName@@Name:result @TO@ Name:transformedOperation @AT@ 25791 @LENGTH@ 6
------------------UPD SimpleName@@MethodName:asString:[] @TO@ MethodName:getFailureDescription:[] @AT@ 25811 @LENGTH@ 10
---INS Block@@ElseBody:if (config.expectDiscarded(operation)) {  Assert.assertNull("Expected null transformed operation for discarded " + operation,transformedOperation.getTransformedOperation());} else {  ModelNode result=mainServices.executeOperation(modelVersion,transformedOperation);  Assert.assertEquals("Failed: " + operation + "\n: "+ result,SUCCESS,result.get(OUTCOME).asString());} @TO@ IfStatement@@if (!config.expectFailed(operation)) {  Assert.assertEquals("Failed: " + operation + "\n: "+ result,SUCCESS,result.get(OUTCOME).asString());} else {  Assert.assertEquals("Should not have worked: " + operation,FAILED,result.get(OUTCOME).asString());  if (config.canCorrectMore(operation)) {    checkFailedTransformedAddOperation(mainServices,modelVersion,config.correctOperation(operation),config);  }} @AT@ 25866 @LENGTH@ 426
------INS IfStatement@@if (config.expectDiscarded(operation)) {  Assert.assertNull("Expected null transformed operation for discarded " + operation,transformedOperation.getTransformedOperation());} else {  ModelNode result=mainServices.executeOperation(modelVersion,transformedOperation);  Assert.assertEquals("Failed: " + operation + "\n: "+ result,SUCCESS,result.get(OUTCOME).asString());} @TO@ Block@@ElseBody:if (config.expectDiscarded(operation)) {  Assert.assertNull("Expected null transformed operation for discarded " + operation,transformedOperation.getTransformedOperation());} else {  ModelNode result=mainServices.executeOperation(modelVersion,transformedOperation);  Assert.assertEquals("Failed: " + operation + "\n: "+ result,SUCCESS,result.get(OUTCOME).asString());} @AT@ 25866 @LENGTH@ 426
---------MOV Block@@ThenBody:{  Assert.assertEquals("Failed: " + operation + "\n: "+ result,SUCCESS,result.get(OUTCOME).asString());} @TO@ IfStatement@@if (config.expectDiscarded(operation)) {  Assert.assertNull("Expected null transformed operation for discarded " + operation,transformedOperation.getTransformedOperation());} else {  ModelNode result=mainServices.executeOperation(modelVersion,transformedOperation);  Assert.assertEquals("Failed: " + operation + "\n: "+ result,SUCCESS,result.get(OUTCOME).asString());} @AT@ 25576 @LENGTH@ 127
------------MOV VariableDeclarationStatement@@ModelNode result=mainServices.executeOperation(modelVersion,transformedOperation); @TO@ Block@@ThenBody:{  Assert.assertEquals("Failed: " + operation + "\n: "+ result,SUCCESS,result.get(OUTCOME).asString());} @AT@ 25445 @LENGTH@ 85
---------INS MethodInvocation@@config.expectDiscarded(operation) @TO@ IfStatement@@if (config.expectDiscarded(operation)) {  Assert.assertNull("Expected null transformed operation for discarded " + operation,transformedOperation.getTransformedOperation());} else {  ModelNode result=mainServices.executeOperation(modelVersion,transformedOperation);  Assert.assertEquals("Failed: " + operation + "\n: "+ result,SUCCESS,result.get(OUTCOME).asString());} @AT@ 25870 @LENGTH@ 33
------------INS SimpleName@@Name:config @TO@ MethodInvocation@@config.expectDiscarded(operation) @AT@ 25870 @LENGTH@ 6
------------INS SimpleName@@MethodName:expectDiscarded:[operation] @TO@ MethodInvocation@@config.expectDiscarded(operation) @AT@ 25877 @LENGTH@ 26
---------------INS SimpleName@@operation @TO@ SimpleName@@MethodName:expectDiscarded:[operation] @AT@ 25893 @LENGTH@ 9
---------INS Block@@ThenBody:{  Assert.assertNull("Expected null transformed operation for discarded " + operation,transformedOperation.getTransformedOperation());} @TO@ IfStatement@@if (config.expectDiscarded(operation)) {  Assert.assertNull("Expected null transformed operation for discarded " + operation,transformedOperation.getTransformedOperation());} else {  ModelNode result=mainServices.executeOperation(modelVersion,transformedOperation);  Assert.assertEquals("Failed: " + operation + "\n: "+ result,SUCCESS,result.get(OUTCOME).asString());} @AT@ 25905 @LENGTH@ 156
------------INS ExpressionStatement@@MethodInvocation:Assert.assertNull("Expected null transformed operation for discarded " + operation,transformedOperation.getTransformedOperation()) @TO@ Block@@ThenBody:{  Assert.assertNull("Expected null transformed operation for discarded " + operation,transformedOperation.getTransformedOperation());} @AT@ 25919 @LENGTH@ 132
---------------INS MethodInvocation@@Assert.assertNull("Expected null transformed operation for discarded " + operation,transformedOperation.getTransformedOperation()) @TO@ ExpressionStatement@@MethodInvocation:Assert.assertNull("Expected null transformed operation for discarded " + operation,transformedOperation.getTransformedOperation()) @AT@ 25919 @LENGTH@ 131
------------------INS SimpleName@@Name:Assert @TO@ MethodInvocation@@Assert.assertNull("Expected null transformed operation for discarded " + operation,transformedOperation.getTransformedOperation()) @AT@ 25919 @LENGTH@ 6
------------------INS SimpleName@@MethodName:assertNull:["Expected null transformed operation for discarded " + operation, transformedOperation.getTransformedOperation()] @TO@ MethodInvocation@@Assert.assertNull("Expected null transformed operation for discarded " + operation,transformedOperation.getTransformedOperation()) @AT@ 25926 @LENGTH@ 124
---------------------INS InfixExpression@@"Expected null transformed operation for discarded " + operation @TO@ SimpleName@@MethodName:assertNull:["Expected null transformed operation for discarded " + operation, transformedOperation.getTransformedOperation()] @AT@ 25937 @LENGTH@ 64
------------------------INS StringLiteral@@"Expected null transformed operation for discarded " @TO@ InfixExpression@@"Expected null transformed operation for discarded " + operation @AT@ 25937 @LENGTH@ 52
------------------------INS Operator@@+ @TO@ InfixExpression@@"Expected null transformed operation for discarded " + operation @AT@ 25989 @LENGTH@ 1
------------------------INS SimpleName@@operation @TO@ InfixExpression@@"Expected null transformed operation for discarded " + operation @AT@ 25992 @LENGTH@ 9
---------------------INS MethodInvocation@@transformedOperation.getTransformedOperation() @TO@ SimpleName@@MethodName:assertNull:["Expected null transformed operation for discarded " + operation, transformedOperation.getTransformedOperation()] @AT@ 26003 @LENGTH@ 46
------------------------INS SimpleName@@Name:transformedOperation @TO@ MethodInvocation@@transformedOperation.getTransformedOperation() @AT@ 26003 @LENGTH@ 20
------------------------INS SimpleName@@MethodName:getTransformedOperation:[] @TO@ MethodInvocation@@transformedOperation.getTransformedOperation() @AT@ 26024 @LENGTH@ 25


DEL MethodDeclaration@@public, void, MethodName:testHSetGet, Exception,  @AT@ 2955 @LENGTH@ 628
---DEL Modifier@@public @AT@ 2955 @LENGTH@ 6
---DEL PrimitiveType@@void @AT@ 2962 @LENGTH@ 4
---DEL SimpleName@@MethodName:testHSetGet @AT@ 2967 @LENGTH@ 11
---DEL SimpleType@@Exception @AT@ 2988 @LENGTH@ 9


INS IfStatement@@if (m_bundle == null) {  return null;} @TO@ MethodDeclaration@@private, static, String, MethodName:getMavenCoordinates, long bundleId,  @AT@ 8590 @LENGTH@ 114
---INS InfixExpression@@m_bundle == null @TO@ IfStatement@@if (m_bundle == null) {  return null;} @AT@ 8594 @LENGTH@ 16
------INS SimpleName@@m_bundle @TO@ InfixExpression@@m_bundle == null @AT@ 8594 @LENGTH@ 8
------INS Operator@@== @TO@ InfixExpression@@m_bundle == null @AT@ 8602 @LENGTH@ 2
------INS NullLiteral@@null @TO@ InfixExpression@@m_bundle == null @AT@ 8606 @LENGTH@ 4
---INS Block@@ThenBody:{  return null;} @TO@ IfStatement@@if (m_bundle == null) {  return null;} @AT@ 8612 @LENGTH@ 92
------INS ReturnStatement@@NullLiteral:null @TO@ Block@@ThenBody:{  return null;} @AT@ 8682 @LENGTH@ 12
---------INS NullLiteral@@null @TO@ ReturnStatement@@NullLiteral:null @AT@ 8689 @LENGTH@ 4


UPD IfStatement@@if (op.getTransformedOperation() != null) {  result=legacy.executeOperation(op.getTransformedOperation(),new ModelController.OperationTransactionControl(){    @Override public void operationPrepared(    ModelController.OperationTransaction transaction,    ModelNode result){      if (op.rejectOperation(result)) {        transaction.rollback();      } else {        transaction.commit();      }    }  });} @TO@ if (op.getTransformedOperation() != null) {  result=legacy.executeOperation(op.getTransformedOperation(),new ModelController.OperationTransactionControl(){    @Override public void operationPrepared(    ModelController.OperationTransaction transaction,    ModelNode result){      if (op.rejectOperation(result)) {        transaction.rollback();      } else {        transaction.commit();      }    }  });  if (op.rejectOperation(result)) {    final ModelNode newResponse=new ModelNode();    newResponse.get(OUTCOME).set(FAILED);    newResponse.get(FAILURE_DESCRIPTION).set(op.getFailureDescription());    return newResponse;  }} @AT@ 9636 @LENGTH@ 590
---UPD Block@@ThenBody:{  result=legacy.executeOperation(op.getTransformedOperation(),new ModelController.OperationTransactionControl(){    @Override public void operationPrepared(    ModelController.OperationTransaction transaction,    ModelNode result){      if (op.rejectOperation(result)) {        transaction.rollback();      } else {        transaction.commit();      }    }  });} @TO@ ThenBody:{  result=legacy.executeOperation(op.getTransformedOperation(),new ModelController.OperationTransactionControl(){    @Override public void operationPrepared(    ModelController.OperationTransaction transaction,    ModelNode result){      if (op.rejectOperation(result)) {        transaction.rollback();      } else {        transaction.commit();      }    }  });  if (op.rejectOperation(result)) {    final ModelNode newResponse=new ModelNode();    newResponse.get(OUTCOME).set(FAILED);    newResponse.get(FAILURE_DESCRIPTION).set(op.getFailureDescription());    return newResponse;  }} @AT@ 9678 @LENGTH@ 548
------INS IfStatement@@if (op.rejectOperation(result)) {  final ModelNode newResponse=new ModelNode();  newResponse.get(OUTCOME).set(FAILED);  newResponse.get(FAILURE_DESCRIPTION).set(op.getFailureDescription());  return newResponse;} @TO@ Block@@ThenBody:{  result=legacy.executeOperation(op.getTransformedOperation(),new ModelController.OperationTransactionControl(){    @Override public void operationPrepared(    ModelController.OperationTransaction transaction,    ModelNode result){      if (op.rejectOperation(result)) {        transaction.rollback();      } else {        transaction.commit();      }    }  });} @AT@ 10594 @LENGTH@ 285
---------INS MethodInvocation@@op.rejectOperation(result) @TO@ IfStatement@@if (op.rejectOperation(result)) {  final ModelNode newResponse=new ModelNode();  newResponse.get(OUTCOME).set(FAILED);  newResponse.get(FAILURE_DESCRIPTION).set(op.getFailureDescription());  return newResponse;} @AT@ 10597 @LENGTH@ 26
------------INS SimpleName@@Name:op @TO@ MethodInvocation@@op.rejectOperation(result) @AT@ 10597 @LENGTH@ 2
------------INS SimpleName@@MethodName:rejectOperation:[result] @TO@ MethodInvocation@@op.rejectOperation(result) @AT@ 10600 @LENGTH@ 23
---------------INS SimpleName@@result @TO@ SimpleName@@MethodName:rejectOperation:[result] @AT@ 10616 @LENGTH@ 6
---------INS Block@@ThenBody:{  final ModelNode newResponse=new ModelNode();  newResponse.get(OUTCOME).set(FAILED);  newResponse.get(FAILURE_DESCRIPTION).set(op.getFailureDescription());  return newResponse;} @TO@ IfStatement@@if (op.rejectOperation(result)) {  final ModelNode newResponse=new ModelNode();  newResponse.get(OUTCOME).set(FAILED);  newResponse.get(FAILURE_DESCRIPTION).set(op.getFailureDescription());  return newResponse;} @AT@ 10625 @LENGTH@ 254
------------INS VariableDeclarationStatement@@final ModelNode newResponse=new ModelNode(); @TO@ Block@@ThenBody:{  final ModelNode newResponse=new ModelNode();  newResponse.get(OUTCOME).set(FAILED);  newResponse.get(FAILURE_DESCRIPTION).set(op.getFailureDescription());  return newResponse;} @AT@ 10643 @LENGTH@ 46
---------------INS Modifier@@final @TO@ VariableDeclarationStatement@@final ModelNode newResponse=new ModelNode(); @AT@ 10643 @LENGTH@ 5
---------------INS SimpleType@@ModelNode @TO@ VariableDeclarationStatement@@final ModelNode newResponse=new ModelNode(); @AT@ 10649 @LENGTH@ 9
---------------INS VariableDeclarationFragment@@newResponse=new ModelNode() @TO@ VariableDeclarationStatement@@final ModelNode newResponse=new ModelNode(); @AT@ 10659 @LENGTH@ 29
------------------INS SimpleName@@newResponse @TO@ VariableDeclarationFragment@@newResponse=new ModelNode() @AT@ 10659 @LENGTH@ 11
------------------INS ClassInstanceCreation@@ModelNode[] @TO@ VariableDeclarationFragment@@newResponse=new ModelNode() @AT@ 10673 @LENGTH@ 15
---------------------INS New@@new @TO@ ClassInstanceCreation@@ModelNode[] @AT@ 10673 @LENGTH@ 3
---------------------INS SimpleType@@ModelNode @TO@ ClassInstanceCreation@@ModelNode[] @AT@ 10677 @LENGTH@ 9
------------INS ExpressionStatement@@MethodInvocation:newResponse.get(OUTCOME).set(FAILED) @TO@ Block@@ThenBody:{  final ModelNode newResponse=new ModelNode();  newResponse.get(OUTCOME).set(FAILED);  newResponse.get(FAILURE_DESCRIPTION).set(op.getFailureDescription());  return newResponse;} @AT@ 10706 @LENGTH@ 37
---------------INS MethodInvocation@@newResponse.get(OUTCOME).set(FAILED) @TO@ ExpressionStatement@@MethodInvocation:newResponse.get(OUTCOME).set(FAILED) @AT@ 10706 @LENGTH@ 36
------------------INS MethodInvocation@@MethodName:get:[OUTCOME] @TO@ MethodInvocation@@newResponse.get(OUTCOME).set(FAILED) @AT@ 10706 @LENGTH@ 24
---------------------INS SimpleName@@OUTCOME @TO@ MethodInvocation@@MethodName:get:[OUTCOME] @AT@ 10722 @LENGTH@ 7
------------------INS SimpleName@@Name:newResponse @TO@ MethodInvocation@@newResponse.get(OUTCOME).set(FAILED) @AT@ 10706 @LENGTH@ 11
------------------INS SimpleName@@MethodName:set:[FAILED] @TO@ MethodInvocation@@newResponse.get(OUTCOME).set(FAILED) @AT@ 10731 @LENGTH@ 11
---------------------INS SimpleName@@FAILED @TO@ SimpleName@@MethodName:set:[FAILED] @AT@ 10735 @LENGTH@ 6
------------INS ExpressionStatement@@MethodInvocation:newResponse.get(FAILURE_DESCRIPTION).set(op.getFailureDescription()) @TO@ Block@@ThenBody:{  final ModelNode newResponse=new ModelNode();  newResponse.get(OUTCOME).set(FAILED);  newResponse.get(FAILURE_DESCRIPTION).set(op.getFailureDescription());  return newResponse;} @AT@ 10760 @LENGTH@ 69
---------------INS MethodInvocation@@newResponse.get(FAILURE_DESCRIPTION).set(op.getFailureDescription()) @TO@ ExpressionStatement@@MethodInvocation:newResponse.get(FAILURE_DESCRIPTION).set(op.getFailureDescription()) @AT@ 10760 @LENGTH@ 68
------------------INS MethodInvocation@@MethodName:get:[FAILURE_DESCRIPTION] @TO@ MethodInvocation@@newResponse.get(FAILURE_DESCRIPTION).set(op.getFailureDescription()) @AT@ 10760 @LENGTH@ 36
---------------------INS SimpleName@@FAILURE_DESCRIPTION @TO@ MethodInvocation@@MethodName:get:[FAILURE_DESCRIPTION] @AT@ 10776 @LENGTH@ 19
------------------INS SimpleName@@Name:newResponse @TO@ MethodInvocation@@newResponse.get(FAILURE_DESCRIPTION).set(op.getFailureDescription()) @AT@ 10760 @LENGTH@ 11
------------------INS SimpleName@@MethodName:set:[op.getFailureDescription()] @TO@ MethodInvocation@@newResponse.get(FAILURE_DESCRIPTION).set(op.getFailureDescription()) @AT@ 10797 @LENGTH@ 31
---------------------INS MethodInvocation@@op.getFailureDescription() @TO@ SimpleName@@MethodName:set:[op.getFailureDescription()] @AT@ 10801 @LENGTH@ 26
------------------------INS SimpleName@@Name:op @TO@ MethodInvocation@@op.getFailureDescription() @AT@ 10801 @LENGTH@ 2
------------------------INS SimpleName@@MethodName:getFailureDescription:[] @TO@ MethodInvocation@@op.getFailureDescription() @AT@ 10804 @LENGTH@ 23
------------INS ReturnStatement@@SimpleName:newResponse @TO@ Block@@ThenBody:{  final ModelNode newResponse=new ModelNode();  newResponse.get(OUTCOME).set(FAILED);  newResponse.get(FAILURE_DESCRIPTION).set(op.getFailureDescription());  return newResponse;} @AT@ 10846 @LENGTH@ 19
---------------INS SimpleName@@newResponse @TO@ ReturnStatement@@SimpleName:newResponse @AT@ 10853 @LENGTH@ 11


DEL MethodDeclaration@@public, void, MethodName:testHSetGet, Exception,  @AT@ 3420 @LENGTH@ 626
---DEL Modifier@@public @AT@ 3420 @LENGTH@ 6
---DEL PrimitiveType@@void @AT@ 3427 @LENGTH@ 4
---DEL SimpleName@@MethodName:testHSetGet @AT@ 3432 @LENGTH@ 11
---DEL SimpleType@@Exception @AT@ 3453 @LENGTH@ 9


INS IfStatement@@if (!getPatterns().isEmpty()) {  client.punsubscribe((Object[])null);} @TO@ MethodDeclaration@@protected, void, MethodName:doClose,  @AT@ 1401 @LENGTH@ 75
---INS PrefixExpression@@!getPatterns().isEmpty() @TO@ IfStatement@@if (!getPatterns().isEmpty()) {  client.punsubscribe((Object[])null);} @AT@ 1404 @LENGTH@ 24
------INS Operator@@! @TO@ PrefixExpression@@!getPatterns().isEmpty() @AT@ 1404 @LENGTH@ 1
------INS MethodInvocation@@getPatterns().isEmpty() @TO@ PrefixExpression@@!getPatterns().isEmpty() @AT@ 1405 @LENGTH@ 23
---------INS MethodInvocation@@MethodName:getPatterns:[] @TO@ MethodInvocation@@getPatterns().isEmpty() @AT@ 1405 @LENGTH@ 13
---------INS SimpleName@@MethodName:isEmpty:[] @TO@ MethodInvocation@@getPatterns().isEmpty() @AT@ 1419 @LENGTH@ 9
---INS Block@@ThenBody:{  client.punsubscribe((Object[])null);} @TO@ IfStatement@@if (!getPatterns().isEmpty()) {  client.punsubscribe((Object[])null);} @AT@ 1430 @LENGTH@ 46
------MOV ExpressionStatement@@MethodInvocation:client.punsubscribe((Object[])null) @TO@ Block@@ThenBody:{  client.punsubscribe((Object[])null);} @AT@ 1363 @LENGTH@ 37


UPD CatchClause@@catch (final CloneNotSupportedException ex) {  return null;} @TO@ catch (final CloneNotSupportedException ex) {  throw new InternalError();} @AT@ 44401 @LENGTH@ 104
---DEL ReturnStatement@@NullLiteral:null @AT@ 44459 @LENGTH@ 12
------DEL NullLiteral@@null @AT@ 44466 @LENGTH@ 4
---INS ThrowStatement@@ClassInstanceCreation:new InternalError() @TO@ CatchClause@@catch (final CloneNotSupportedException ex) {  return null;} @AT@ 44530 @LENGTH@ 26
------INS ClassInstanceCreation@@InternalError[] @TO@ ThrowStatement@@ClassInstanceCreation:new InternalError() @AT@ 44536 @LENGTH@ 19
---------INS New@@new @TO@ ClassInstanceCreation@@InternalError[] @AT@ 44536 @LENGTH@ 3
---------INS SimpleType@@InternalError @TO@ ClassInstanceCreation@@InternalError[] @AT@ 44540 @LENGTH@ 13


INS IfStatement@@if (CLIModelControllerClient.this.closed) {  return;} @TO@ MethodDeclaration@@public, void, MethodName:handleClose, final Channel closed, final IOException exception,  @AT@ 10395 @LENGTH@ 80
---INS FieldAccess@@CLIModelControllerClient.this.closed @TO@ IfStatement@@if (CLIModelControllerClient.this.closed) {  return;} @AT@ 10398 @LENGTH@ 36
------INS ThisExpression@@this @TO@ FieldAccess@@CLIModelControllerClient.this.closed @AT@ 10398 @LENGTH@ 29
------INS SimpleName@@closed @TO@ FieldAccess@@CLIModelControllerClient.this.closed @AT@ 10428 @LENGTH@ 6
---INS Block@@ThenBody:{  return;} @TO@ IfStatement@@if (CLIModelControllerClient.this.closed) {  return;} @AT@ 10436 @LENGTH@ 39
------INS ReturnStatement@@ @TO@ Block@@ThenBody:{  return;} @AT@ 10454 @LENGTH@ 7


UPD IfStatement@@if (part.getContentType().startsWith("text")) {  return part.getContent().toString();} @TO@ if (part.getContentType().toLowerCase().startsWith("text")) {  return part.getContent().toString();} @AT@ 2935 @LENGTH@ 114
---UPD MethodInvocation@@part.getContentType().startsWith("text") @TO@ part.getContentType().toLowerCase().startsWith("text") @AT@ 2939 @LENGTH@ 40
------INS MethodInvocation@@MethodName:toLowerCase:[] @TO@ MethodInvocation@@part.getContentType().startsWith("text") @AT@ 2939 @LENGTH@ 35


UPD ReturnStatement@@CastExpression:(List<MetricDatum>)body @TO@ MethodInvocation:CastUtils.cast((List<?>)body) @AT@ 2087 @LENGTH@ 32
---DEL CastExpression@@(List<MetricDatum>)body @AT@ 2094 @LENGTH@ 24
---INS MethodInvocation@@CastUtils.cast((List<?>)body) @TO@ ReturnStatement@@CastExpression:(List<MetricDatum>)body @AT@ 2134 @LENGTH@ 29
------INS SimpleName@@Name:CastUtils @TO@ MethodInvocation@@CastUtils.cast((List<?>)body) @AT@ 2134 @LENGTH@ 9
------INS SimpleName@@MethodName:cast:[(List<?>)body] @TO@ MethodInvocation@@CastUtils.cast((List<?>)body) @AT@ 2144 @LENGTH@ 19
---------INS CastExpression@@(List<?>)body @TO@ SimpleName@@MethodName:cast:[(List<?>)body] @AT@ 2149 @LENGTH@ 13
------------MOV ParameterizedType@@List<MetricDatum> @TO@ CastExpression@@(List<?>)body @AT@ 2095 @LENGTH@ 17
---------------DEL SimpleType@@MetricDatum @AT@ 2100 @LENGTH@ 11
---------------INS WildcardType@@? @TO@ ParameterizedType@@List<MetricDatum> @AT@ 2155 @LENGTH@ 1
------------MOV SimpleName@@body @TO@ CastExpression@@(List<?>)body @AT@ 2114 @LENGTH@ 4


UPD MethodDeclaration@@public, String, MethodName:formatString, Format format, Object value, Exception,  @TO@ public, String, MethodName:formatString, Format<?> format, Object value, Exception,  @AT@ 8976 @LENGTH@ 401
---UPD SingleVariableDeclaration@@Format format @TO@ Format<?> format @AT@ 9003 @LENGTH@ 13
------INS ParameterizedType@@Format<?> @TO@ SingleVariableDeclaration@@Format format @AT@ 9001 @LENGTH@ 9
---------INS SimpleType@@Format @TO@ ParameterizedType@@Format<?> @AT@ 9001 @LENGTH@ 6
---------INS WildcardType@@? @TO@ ParameterizedType@@Format<?> @AT@ 9008 @LENGTH@ 1
------DEL SimpleType@@Format @AT@ 9003 @LENGTH@ 6
---UPD IfStatement@@if (value != null) {  try {    strValue=format.format(value);  } catch (  Exception e) {    throw new IllegalArgumentException("Formatting error detected for the value: " + value,e);  }} @TO@ if (value != null) {  try {    strValue=((Format<Object>)format).format(value);  } catch (  Exception e) {    throw new IllegalArgumentException("Formatting error detected for the value: " + value,e);  }} @AT@ 9090 @LENGTH@ 255
------UPD Block@@ThenBody:{  try {    strValue=format.format(value);  } catch (  Exception e) {    throw new IllegalArgumentException("Formatting error detected for the value: " + value,e);  }} @TO@ ThenBody:{  try {    strValue=((Format<Object>)format).format(value);  } catch (  Exception e) {    throw new IllegalArgumentException("Formatting error detected for the value: " + value,e);  }} @AT@ 9109 @LENGTH@ 236
---------UPD TryStatement@@try {  strValue=format.format(value);} catch (Exception e) {  throw new IllegalArgumentException("Formatting error detected for the value: " + value,e);} @TO@ try {  strValue=((Format<Object>)format).format(value);} catch (Exception e) {  throw new IllegalArgumentException("Formatting error detected for the value: " + value,e);} @AT@ 9123 @LENGTH@ 212
------------UPD ExpressionStatement@@Assignment:strValue=format.format(value) @TO@ Assignment:strValue=((Format<Object>)format).format(value) @AT@ 9145 @LENGTH@ 32
---------------UPD Assignment@@strValue=format.format(value) @TO@ strValue=((Format<Object>)format).format(value) @AT@ 9145 @LENGTH@ 31
------------------UPD MethodInvocation@@format.format(value) @TO@ ((Format<Object>)format).format(value) @AT@ 9156 @LENGTH@ 20
---------------------DEL SimpleName@@Name:format @AT@ 9156 @LENGTH@ 6
---------------------INS ParenthesizedExpression@@((Format<Object>)format) @TO@ MethodInvocation@@format.format(value) @AT@ 9157 @LENGTH@ 24
------------------------INS CastExpression@@(Format<Object>)format @TO@ ParenthesizedExpression@@((Format<Object>)format) @AT@ 9158 @LENGTH@ 22
---------------------------INS ParameterizedType@@Format<Object> @TO@ CastExpression@@(Format<Object>)format @AT@ 9159 @LENGTH@ 14
------------------------------INS SimpleType@@Format @TO@ ParameterizedType@@Format<Object> @AT@ 9159 @LENGTH@ 6
------------------------------INS SimpleType@@Object @TO@ ParameterizedType@@Format<Object> @AT@ 9166 @LENGTH@ 6
---------------------------INS SimpleName@@format @TO@ CastExpression@@(Format<Object>)format @AT@ 9174 @LENGTH@ 6


UPD IfStatement@@if (!transformedOp.rejectOperation(SUCCESS)) {  transformedBootOperations.add(transformedOp.getTransformedOperation());} else {  System.out.println(transformedOp.getFailureDescription());} @TO@ if (!transformedOp.rejectOperation(SUCCESS)) {  transformedBootOperations.add(transformedOp.getTransformedOperation());} @AT@ 28426 @LENGTH@ 292
---DEL Block@@ElseBody:{  System.out.println(transformedOp.getFailureDescription());} @AT@ 28604 @LENGTH@ 114
------DEL ExpressionStatement@@MethodInvocation:System.out.println(transformedOp.getFailureDescription()) @AT@ 28634 @LENGTH@ 58
---------DEL MethodInvocation@@System.out.println(transformedOp.getFailureDescription()) @AT@ 28634 @LENGTH@ 57
------------DEL QualifiedName@@Name:System.out @AT@ 28634 @LENGTH@ 10
------------DEL SimpleName@@MethodName:println:[transformedOp.getFailureDescription()] @AT@ 28645 @LENGTH@ 46
---------------DEL MethodInvocation@@transformedOp.getFailureDescription() @AT@ 28653 @LENGTH@ 37
------------------DEL SimpleName@@Name:transformedOp @AT@ 28653 @LENGTH@ 13
------------------DEL SimpleName@@MethodName:getFailureDescription:[] @AT@ 28667 @LENGTH@ 23


UPD ReturnStatement@@ClassInstanceCreation:new TransformersLogger(getTarget()) @TO@ MethodInvocation:TransformersLogger.getLogger(getTarget()) @AT@ 14299 @LENGTH@ 43
---INS MethodInvocation@@TransformersLogger.getLogger(getTarget()) @TO@ ReturnStatement@@ClassInstanceCreation:new TransformersLogger(getTarget()) @AT@ 14306 @LENGTH@ 41
------INS SimpleName@@Name:TransformersLogger @TO@ MethodInvocation@@TransformersLogger.getLogger(getTarget()) @AT@ 14306 @LENGTH@ 18
------INS SimpleName@@MethodName:getLogger:[getTarget()] @TO@ MethodInvocation@@TransformersLogger.getLogger(getTarget()) @AT@ 14325 @LENGTH@ 22
---------INS MethodInvocation@@MethodName:getTarget:[] @TO@ SimpleName@@MethodName:getLogger:[getTarget()] @AT@ 14335 @LENGTH@ 11
---DEL ClassInstanceCreation@@TransformersLogger[getTarget()] @AT@ 14306 @LENGTH@ 35
------DEL New@@new @AT@ 14306 @LENGTH@ 3
------DEL SimpleType@@TransformersLogger @AT@ 14310 @LENGTH@ 18
------DEL MethodInvocation@@MethodName:getTarget:[] @AT@ 14329 @LENGTH@ 11


MOV FieldDeclaration@@private, static, final, transient, Logger, [LOG=LoggerFactory.getLogger(BacklogTracer.class)] @TO@ TypeDeclaration@@[public]BacklogTracer, ServiceSupport[InterceptStrategy] @AT@ 2156 @LENGTH@ 89


UPD FieldDeclaration@@static, SimpleAttributeDefinition, [SAME_RM_OVERRIDE=new SimpleAttributeDefinitionBuilder(SAME_RM_OVERRIDE_NAME,ModelType.BOOLEAN).setAllowNull(true).setAllowExpression(true).setXmlName(CommonXaPool.Tag.IS_SAME_RM_OVERRIDE.getLocalName()).setDefaultValue(new ModelNode(false)).build()] @TO@ static, SimpleAttributeDefinition, [SAME_RM_OVERRIDE=new SimpleAttributeDefinitionBuilder(SAME_RM_OVERRIDE_NAME,ModelType.BOOLEAN).setAllowNull(true).setAllowExpression(true).setXmlName(CommonXaPool.Tag.IS_SAME_RM_OVERRIDE.getLocalName()).build()] @AT@ 14668 @LENGTH@ 465
---UPD VariableDeclarationFragment@@SAME_RM_OVERRIDE=new SimpleAttributeDefinitionBuilder(SAME_RM_OVERRIDE_NAME,ModelType.BOOLEAN).setAllowNull(true).setAllowExpression(true).setXmlName(CommonXaPool.Tag.IS_SAME_RM_OVERRIDE.getLocalName()).setDefaultValue(new ModelNode(false)).build() @TO@ SAME_RM_OVERRIDE=new SimpleAttributeDefinitionBuilder(SAME_RM_OVERRIDE_NAME,ModelType.BOOLEAN).setAllowNull(true).setAllowExpression(true).setXmlName(CommonXaPool.Tag.IS_SAME_RM_OVERRIDE.getLocalName()).build() @AT@ 14701 @LENGTH@ 431
------UPD MethodInvocation@@new SimpleAttributeDefinitionBuilder(SAME_RM_OVERRIDE_NAME,ModelType.BOOLEAN).setAllowNull(true).setAllowExpression(true).setXmlName(CommonXaPool.Tag.IS_SAME_RM_OVERRIDE.getLocalName()).setDefaultValue(new ModelNode(false)).build() @TO@ new SimpleAttributeDefinitionBuilder(SAME_RM_OVERRIDE_NAME,ModelType.BOOLEAN).setAllowNull(true).setAllowExpression(true).setXmlName(CommonXaPool.Tag.IS_SAME_RM_OVERRIDE.getLocalName()).build() @AT@ 14720 @LENGTH@ 412
---------DEL MethodInvocation@@MethodName:setDefaultValue:[new ModelNode(false)] @AT@ 14720 @LENGTH@ 391
------------DEL ClassInstanceCreation@@ModelNode[false] @AT@ 15090 @LENGTH@ 20
---------------DEL New@@new @AT@ 15090 @LENGTH@ 3
---------------DEL SimpleType@@ModelNode @AT@ 15094 @LENGTH@ 9
---------------DEL BooleanLiteral@@false @AT@ 15104 @LENGTH@ 5


DEL MethodDeclaration@@public, void, MethodName:testBRPop,  @AT@ 666 @LENGTH@ 28
---DEL Modifier@@public @AT@ 666 @LENGTH@ 6
---DEL PrimitiveType@@void @AT@ 673 @LENGTH@ 4
---DEL SimpleName@@MethodName:testBRPop @AT@ 678 @LENGTH@ 9


UPD ExpressionStatement@@MethodInvocation:context.restartRequired() @TO@ MethodInvocation:context.reloadRequired() @AT@ 3059 @LENGTH@ 26
---UPD MethodInvocation@@context.restartRequired() @TO@ context.reloadRequired() @AT@ 3059 @LENGTH@ 25
------UPD SimpleName@@MethodName:restartRequired:[] @TO@ MethodName:reloadRequired:[] @AT@ 3067 @LENGTH@ 17


UPD VariableDeclarationStatement@@DefaultServiceLocator locator=new DefaultServiceLocator(); @TO@ MavenServiceLocator locator=new MavenServiceLocator(); @AT@ 9590 @LENGTH@ 60
---UPD SimpleType@@DefaultServiceLocator @TO@ MavenServiceLocator @AT@ 9590 @LENGTH@ 21
---UPD VariableDeclarationFragment@@locator=new DefaultServiceLocator() @TO@ locator=new MavenServiceLocator() @AT@ 9612 @LENGTH@ 37
------UPD ClassInstanceCreation@@DefaultServiceLocator[] @TO@ MavenServiceLocator[] @AT@ 9622 @LENGTH@ 27
---------UPD SimpleType@@DefaultServiceLocator @TO@ MavenServiceLocator @AT@ 9626 @LENGTH@ 21


INS IfStatement@@if (!getChannels().isEmpty()) {  client.unsubscribe((Object[])null);} @TO@ MethodDeclaration@@protected, void, MethodName:doClose,  @AT@ 1324 @LENGTH@ 74
---INS PrefixExpression@@!getChannels().isEmpty() @TO@ IfStatement@@if (!getChannels().isEmpty()) {  client.unsubscribe((Object[])null);} @AT@ 1327 @LENGTH@ 24
------INS Operator@@! @TO@ PrefixExpression@@!getChannels().isEmpty() @AT@ 1327 @LENGTH@ 1
------INS MethodInvocation@@getChannels().isEmpty() @TO@ PrefixExpression@@!getChannels().isEmpty() @AT@ 1328 @LENGTH@ 23
---------INS MethodInvocation@@MethodName:getChannels:[] @TO@ MethodInvocation@@getChannels().isEmpty() @AT@ 1328 @LENGTH@ 13
---------INS SimpleName@@MethodName:isEmpty:[] @TO@ MethodInvocation@@getChannels().isEmpty() @AT@ 1342 @LENGTH@ 9
---INS Block@@ThenBody:{  client.unsubscribe((Object[])null);} @TO@ IfStatement@@if (!getChannels().isEmpty()) {  client.unsubscribe((Object[])null);} @AT@ 1353 @LENGTH@ 45
------MOV ExpressionStatement@@MethodInvocation:client.unsubscribe((Object[])null) @TO@ Block@@ThenBody:{  client.unsubscribe((Object[])null);} @AT@ 1324 @LENGTH@ 36


UPD ExpressionStatement@@MethodInvocation:System.out.println(war.toString(true)) @TO@ MethodInvocation:log.info(war.toString(true)) @AT@ 3116 @LENGTH@ 39
---UPD MethodInvocation@@System.out.println(war.toString(true)) @TO@ log.info(war.toString(true)) @AT@ 3116 @LENGTH@ 38
------DEL QualifiedName@@Name:System.out @AT@ 3116 @LENGTH@ 10
------INS SimpleName@@Name:log @TO@ MethodInvocation@@System.out.println(war.toString(true)) @AT@ 3116 @LENGTH@ 3
------UPD SimpleName@@MethodName:println:[war.toString(true)] @TO@ MethodName:info:[war.toString(true)] @AT@ 3127 @LENGTH@ 27


UPD IfStatement@@if (!config.expectFailedWriteAttributeOperation(writeOp)) {  Assert.assertEquals(SUCCESS,result.get(OUTCOME).asString());} else {  Assert.assertEquals(FAILED,result.get(OUTCOME).asString());  transformedOperation=mainServices.transformOperation(modelVersion,config.correctWriteAttributeOperation(writeOp));  checkOutcome(mainServices.executeOperation(modelVersion,transformedOperation));} @TO@ if (!config.expectFailedWriteAttributeOperation(writeOp)) {  Assert.assertEquals("Failed: " + writeOp + "\n"+ result,SUCCESS,result.get(OUTCOME).asString());} else {  Assert.assertEquals("Expected failure: " + writeOp,FAILED,result.get(OUTCOME).asString());  transformedOperation=mainServices.transformOperation(modelVersion,config.correctWriteAttributeOperation(writeOp));  result=mainServices.executeOperation(modelVersion,transformedOperation);  Assert.assertEquals(result.get(FAILURE_DESCRIPTION).asString() + " for\n:" + transformedOperation.getTransformedOperation(),SUCCESS,result.get(OUTCOME).asString());} @AT@ 22269 @LENGTH@ 504
---UPD Block@@ThenBody:{  Assert.assertEquals(SUCCESS,result.get(OUTCOME).asString());} @TO@ ThenBody:{  Assert.assertEquals("Failed: " + writeOp + "\n"+ result,SUCCESS,result.get(OUTCOME).asString());} @AT@ 22327 @LENGTH@ 101
------UPD ExpressionStatement@@MethodInvocation:Assert.assertEquals(SUCCESS,result.get(OUTCOME).asString()) @TO@ MethodInvocation:Assert.assertEquals("Expected failure: " + writeOp,FAILED,result.get(OUTCOME).asString()) @AT@ 22349 @LENGTH@ 61
------MOV ExpressionStatement@@MethodInvocation:Assert.assertEquals(FAILED,result.get(OUTCOME).asString()) @TO@ Block@@ThenBody:{  Assert.assertEquals(SUCCESS,result.get(OUTCOME).asString());} @AT@ 22456 @LENGTH@ 60
---------UPD MethodInvocation@@Assert.assertEquals(FAILED,result.get(OUTCOME).asString()) @TO@ Assert.assertEquals("Failed: " + writeOp + "\n"+ result,SUCCESS,result.get(OUTCOME).asString()) @AT@ 22456 @LENGTH@ 59
------------UPD SimpleName@@MethodName:assertEquals:[FAILED, result.get(OUTCOME).asString()] @TO@ MethodName:assertEquals:["Failed: " + writeOp + "\n"+ result, SUCCESS, result.get(OUTCOME).asString()] @AT@ 22463 @LENGTH@ 52
---------------INS InfixExpression@@"Failed: " + writeOp + "\n"+ result @TO@ SimpleName@@MethodName:assertEquals:[FAILED, result.get(OUTCOME).asString()] @AT@ 22369 @LENGTH@ 36
------------------INS StringLiteral@@"Failed: " @TO@ InfixExpression@@"Failed: " + writeOp + "\n"+ result @AT@ 22369 @LENGTH@ 10
------------------INS Operator@@+ @TO@ InfixExpression@@"Failed: " + writeOp + "\n"+ result @AT@ 22379 @LENGTH@ 1
------------------INS SimpleName@@writeOp @TO@ InfixExpression@@"Failed: " + writeOp + "\n"+ result @AT@ 22382 @LENGTH@ 7
------------------INS StringLiteral@@"\n" @TO@ InfixExpression@@"Failed: " + writeOp + "\n"+ result @AT@ 22392 @LENGTH@ 4
------------------INS SimpleName@@result @TO@ InfixExpression@@"Failed: " + writeOp + "\n"+ result @AT@ 22399 @LENGTH@ 6
---------------INS SimpleName@@SUCCESS @TO@ SimpleName@@MethodName:assertEquals:[FAILED, result.get(OUTCOME).asString()] @AT@ 22407 @LENGTH@ 7
---------------DEL SimpleName@@FAILED @AT@ 22476 @LENGTH@ 6
---UPD Block@@ElseBody:{  Assert.assertEquals(FAILED,result.get(OUTCOME).asString());  transformedOperation=mainServices.transformOperation(modelVersion,config.correctWriteAttributeOperation(writeOp));  checkOutcome(mainServices.executeOperation(modelVersion,transformedOperation));} @TO@ ElseBody:{  Assert.assertEquals("Expected failure: " + writeOp,FAILED,result.get(OUTCOME).asString());  transformedOperation=mainServices.transformOperation(modelVersion,config.correctWriteAttributeOperation(writeOp));  result=mainServices.executeOperation(modelVersion,transformedOperation);  Assert.assertEquals(result.get(FAILURE_DESCRIPTION).asString() + " for\n:" + transformedOperation.getTransformedOperation(),SUCCESS,result.get(OUTCOME).asString());} @AT@ 22434 @LENGTH@ 339
------MOV ExpressionStatement@@MethodInvocation:Assert.assertEquals(SUCCESS,result.get(OUTCOME).asString()) @TO@ Block@@ElseBody:{  Assert.assertEquals(FAILED,result.get(OUTCOME).asString());  transformedOperation=mainServices.transformOperation(modelVersion,config.correctWriteAttributeOperation(writeOp));  checkOutcome(mainServices.executeOperation(modelVersion,transformedOperation));} @AT@ 22349 @LENGTH@ 61
---------UPD MethodInvocation@@Assert.assertEquals(SUCCESS,result.get(OUTCOME).asString()) @TO@ Assert.assertEquals("Expected failure: " + writeOp,FAILED,result.get(OUTCOME).asString()) @AT@ 22349 @LENGTH@ 60
------------UPD SimpleName@@MethodName:assertEquals:[SUCCESS, result.get(OUTCOME).asString()] @TO@ MethodName:assertEquals:["Expected failure: " + writeOp, FAILED, result.get(OUTCOME).asString()] @AT@ 22356 @LENGTH@ 53
---------------DEL SimpleName@@SUCCESS @AT@ 22369 @LENGTH@ 7
---------------INS InfixExpression@@"Expected failure: " + writeOp @TO@ SimpleName@@MethodName:assertEquals:[SUCCESS, result.get(OUTCOME).asString()] @AT@ 22514 @LENGTH@ 30
------------------INS StringLiteral@@"Expected failure: " @TO@ InfixExpression@@"Expected failure: " + writeOp @AT@ 22514 @LENGTH@ 20
------------------INS Operator@@+ @TO@ InfixExpression@@"Expected failure: " + writeOp @AT@ 22534 @LENGTH@ 1
------------------INS SimpleName@@writeOp @TO@ InfixExpression@@"Expected failure: " + writeOp @AT@ 22537 @LENGTH@ 7
---------------INS SimpleName@@FAILED @TO@ SimpleName@@MethodName:assertEquals:[SUCCESS, result.get(OUTCOME).asString()] @AT@ 22547 @LENGTH@ 6
------UPD ExpressionStatement@@MethodInvocation:Assert.assertEquals(FAILED,result.get(OUTCOME).asString()) @TO@ MethodInvocation:Assert.assertEquals("Failed: " + writeOp + "\n"+ result,SUCCESS,result.get(OUTCOME).asString()) @AT@ 22456 @LENGTH@ 60
------UPD ExpressionStatement@@MethodInvocation:checkOutcome(mainServices.executeOperation(modelVersion,transformedOperation)) @TO@ Assignment:result=mainServices.executeOperation(modelVersion,transformedOperation) @AT@ 22675 @LENGTH@ 80
---------DEL MethodInvocation@@checkOutcome(mainServices.executeOperation(modelVersion,transformedOperation)) @AT@ 22675 @LENGTH@ 79
------------DEL SimpleName@@MethodName:checkOutcome:[mainServices.executeOperation(modelVersion,transformedOperation)] @AT@ 22675 @LENGTH@ 79
---------INS Assignment@@result=mainServices.executeOperation(modelVersion,transformedOperation) @TO@ ExpressionStatement@@MethodInvocation:checkOutcome(mainServices.executeOperation(modelVersion,transformedOperation)) @AT@ 22746 @LENGTH@ 74
------------MOV MethodInvocation@@mainServices.executeOperation(modelVersion,transformedOperation) @TO@ Assignment@@result=mainServices.executeOperation(modelVersion,transformedOperation) @AT@ 22688 @LENGTH@ 65
------------INS SimpleName@@result @TO@ Assignment@@result=mainServices.executeOperation(modelVersion,transformedOperation) @AT@ 22746 @LENGTH@ 6
------------INS Operator@@= @TO@ Assignment@@result=mainServices.executeOperation(modelVersion,transformedOperation) @AT@ 22752 @LENGTH@ 1
------INS ExpressionStatement@@MethodInvocation:Assert.assertEquals(result.get(FAILURE_DESCRIPTION).asString() + " for\n:" + transformedOperation.getTransformedOperation(),SUCCESS,result.get(OUTCOME).asString()) @TO@ Block@@ElseBody:{  Assert.assertEquals(FAILED,result.get(OUTCOME).asString());  transformedOperation=mainServices.transformOperation(modelVersion,config.correctWriteAttributeOperation(writeOp));  checkOutcome(mainServices.executeOperation(modelVersion,transformedOperation));} @AT@ 22842 @LENGTH@ 166
---------INS MethodInvocation@@Assert.assertEquals(result.get(FAILURE_DESCRIPTION).asString() + " for\n:" + transformedOperation.getTransformedOperation(),SUCCESS,result.get(OUTCOME).asString()) @TO@ ExpressionStatement@@MethodInvocation:Assert.assertEquals(result.get(FAILURE_DESCRIPTION).asString() + " for\n:" + transformedOperation.getTransformedOperation(),SUCCESS,result.get(OUTCOME).asString()) @AT@ 22842 @LENGTH@ 165
------------INS SimpleName@@Name:Assert @TO@ MethodInvocation@@Assert.assertEquals(result.get(FAILURE_DESCRIPTION).asString() + " for\n:" + transformedOperation.getTransformedOperation(),SUCCESS,result.get(OUTCOME).asString()) @AT@ 22842 @LENGTH@ 6
------------INS SimpleName@@MethodName:assertEquals:[result.get(FAILURE_DESCRIPTION).asString() + " for\n:" + transformedOperation.getTransformedOperation(), SUCCESS, result.get(OUTCOME).asString()] @TO@ MethodInvocation@@Assert.assertEquals(result.get(FAILURE_DESCRIPTION).asString() + " for\n:" + transformedOperation.getTransformedOperation(),SUCCESS,result.get(OUTCOME).asString()) @AT@ 22849 @LENGTH@ 158
---------------INS InfixExpression@@result.get(FAILURE_DESCRIPTION).asString() + " for\n:" + transformedOperation.getTransformedOperation() @TO@ SimpleName@@MethodName:assertEquals:[result.get(FAILURE_DESCRIPTION).asString() + " for\n:" + transformedOperation.getTransformedOperation(), SUCCESS, result.get(OUTCOME).asString()] @AT@ 22862 @LENGTH@ 103
------------------INS MethodInvocation@@result.get(FAILURE_DESCRIPTION).asString() @TO@ InfixExpression@@result.get(FAILURE_DESCRIPTION).asString() + " for\n:" + transformedOperation.getTransformedOperation() @AT@ 22862 @LENGTH@ 42
---------------------INS MethodInvocation@@MethodName:get:[FAILURE_DESCRIPTION] @TO@ MethodInvocation@@result.get(FAILURE_DESCRIPTION).asString() @AT@ 22862 @LENGTH@ 31
------------------------INS SimpleName@@FAILURE_DESCRIPTION @TO@ MethodInvocation@@MethodName:get:[FAILURE_DESCRIPTION] @AT@ 22873 @LENGTH@ 19
---------------------INS SimpleName@@Name:result @TO@ MethodInvocation@@result.get(FAILURE_DESCRIPTION).asString() @AT@ 22862 @LENGTH@ 6
---------------------INS SimpleName@@MethodName:asString:[] @TO@ MethodInvocation@@result.get(FAILURE_DESCRIPTION).asString() @AT@ 22894 @LENGTH@ 10
------------------INS Operator@@+ @TO@ InfixExpression@@result.get(FAILURE_DESCRIPTION).asString() + " for\n:" + transformedOperation.getTransformedOperation() @AT@ 22904 @LENGTH@ 1
------------------INS StringLiteral@@" for\n:" @TO@ InfixExpression@@result.get(FAILURE_DESCRIPTION).asString() + " for\n:" + transformedOperation.getTransformedOperation() @AT@ 22907 @LENGTH@ 9
------------------INS MethodInvocation@@transformedOperation.getTransformedOperation() @TO@ InfixExpression@@result.get(FAILURE_DESCRIPTION).asString() + " for\n:" + transformedOperation.getTransformedOperation() @AT@ 22919 @LENGTH@ 46
---------------------INS SimpleName@@Name:transformedOperation @TO@ MethodInvocation@@transformedOperation.getTransformedOperation() @AT@ 22919 @LENGTH@ 20
---------------------INS SimpleName@@MethodName:getTransformedOperation:[] @TO@ MethodInvocation@@transformedOperation.getTransformedOperation() @AT@ 22940 @LENGTH@ 25
---------------INS SimpleName@@SUCCESS @TO@ SimpleName@@MethodName:assertEquals:[result.get(FAILURE_DESCRIPTION).asString() + " for\n:" + transformedOperation.getTransformedOperation(), SUCCESS, result.get(OUTCOME).asString()] @AT@ 22967 @LENGTH@ 7
---------------INS MethodInvocation@@result.get(OUTCOME).asString() @TO@ SimpleName@@MethodName:assertEquals:[result.get(FAILURE_DESCRIPTION).asString() + " for\n:" + transformedOperation.getTransformedOperation(), SUCCESS, result.get(OUTCOME).asString()] @AT@ 22976 @LENGTH@ 30
------------------INS MethodInvocation@@MethodName:get:[OUTCOME] @TO@ MethodInvocation@@result.get(OUTCOME).asString() @AT@ 22976 @LENGTH@ 19
---------------------INS SimpleName@@OUTCOME @TO@ MethodInvocation@@MethodName:get:[OUTCOME] @AT@ 22987 @LENGTH@ 7
------------------INS SimpleName@@Name:result @TO@ MethodInvocation@@result.get(OUTCOME).asString() @AT@ 22976 @LENGTH@ 6
------------------INS SimpleName@@MethodName:asString:[] @TO@ MethodInvocation@@result.get(OUTCOME).asString() @AT@ 22996 @LENGTH@ 10


INS MethodDeclaration@@public, TransformersSubRegistration, MethodName:registerSubResource, PathElement element, CombinedTransformer transformer,  @TO@ TypeDeclaration@@[public, static]TransformersSubRegistrationImpl, [TransformersSubRegistration] @AT@ 12801 @LENGTH@ 240
---INS Modifier@@public @TO@ MethodDeclaration@@public, TransformersSubRegistration, MethodName:registerSubResource, PathElement element, CombinedTransformer transformer,  @AT@ 12801 @LENGTH@ 6
---INS SimpleType@@TransformersSubRegistration @TO@ MethodDeclaration@@public, TransformersSubRegistration, MethodName:registerSubResource, PathElement element, CombinedTransformer transformer,  @AT@ 12808 @LENGTH@ 27
---INS SimpleName@@MethodName:registerSubResource @TO@ MethodDeclaration@@public, TransformersSubRegistration, MethodName:registerSubResource, PathElement element, CombinedTransformer transformer,  @AT@ 12836 @LENGTH@ 19
---INS SingleVariableDeclaration@@PathElement element @TO@ MethodDeclaration@@public, TransformersSubRegistration, MethodName:registerSubResource, PathElement element, CombinedTransformer transformer,  @AT@ 12856 @LENGTH@ 19
------INS SimpleType@@PathElement @TO@ SingleVariableDeclaration@@PathElement element @AT@ 12856 @LENGTH@ 11
------INS SimpleName@@element @TO@ SingleVariableDeclaration@@PathElement element @AT@ 12868 @LENGTH@ 7
---INS SingleVariableDeclaration@@CombinedTransformer transformer @TO@ MethodDeclaration@@public, TransformersSubRegistration, MethodName:registerSubResource, PathElement element, CombinedTransformer transformer,  @AT@ 12877 @LENGTH@ 31
------INS SimpleType@@CombinedTransformer @TO@ SingleVariableDeclaration@@CombinedTransformer transformer @AT@ 12877 @LENGTH@ 19
------INS SimpleName@@transformer @TO@ SingleVariableDeclaration@@CombinedTransformer transformer @AT@ 12897 @LENGTH@ 11
---INS ReturnStatement@@MethodInvocation:registerSubResource(element,(ResourceTransformer)transformer,(OperationTransformer)transformer) @TO@ MethodDeclaration@@public, TransformersSubRegistration, MethodName:registerSubResource, PathElement element, CombinedTransformer transformer,  @AT@ 12924 @LENGTH@ 107
------INS MethodInvocation@@registerSubResource(element,(ResourceTransformer)transformer,(OperationTransformer)transformer) @TO@ ReturnStatement@@MethodInvocation:registerSubResource(element,(ResourceTransformer)transformer,(OperationTransformer)transformer) @AT@ 12931 @LENGTH@ 99
---------INS SimpleName@@MethodName:registerSubResource:[element, (ResourceTransformer)transformer, (OperationTransformer)transformer] @TO@ MethodInvocation@@registerSubResource(element,(ResourceTransformer)transformer,(OperationTransformer)transformer) @AT@ 12931 @LENGTH@ 99
------------INS SimpleName@@element @TO@ SimpleName@@MethodName:registerSubResource:[element, (ResourceTransformer)transformer, (OperationTransformer)transformer] @AT@ 12951 @LENGTH@ 7
------------INS CastExpression@@(ResourceTransformer)transformer @TO@ SimpleName@@MethodName:registerSubResource:[element, (ResourceTransformer)transformer, (OperationTransformer)transformer] @AT@ 12960 @LENGTH@ 33
---------------INS SimpleType@@ResourceTransformer @TO@ CastExpression@@(ResourceTransformer)transformer @AT@ 12961 @LENGTH@ 19
---------------INS SimpleName@@transformer @TO@ CastExpression@@(ResourceTransformer)transformer @AT@ 12982 @LENGTH@ 11
------------INS CastExpression@@(OperationTransformer)transformer @TO@ SimpleName@@MethodName:registerSubResource:[element, (ResourceTransformer)transformer, (OperationTransformer)transformer] @AT@ 12995 @LENGTH@ 34
---------------INS SimpleType@@OperationTransformer @TO@ CastExpression@@(OperationTransformer)transformer @AT@ 12996 @LENGTH@ 20
---------------INS SimpleName@@transformer @TO@ CastExpression@@(OperationTransformer)transformer @AT@ 13018 @LENGTH@ 11


INS MethodDeclaration@@public, void, MethodName:replacesDomainObjectWithPluralRegionNameCorrectly,  @TO@ TypeDeclaration@@[@RunWith(MockitoJUnitRunner.class), public]QueryStringUnitTests,  @AT@ 1584 @LENGTH@ 327
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:replacesDomainObjectWithPluralRegionNameCorrectly,  @AT@ 1584 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:replacesDomainObjectWithPluralRegionNameCorrectly,  @AT@ 1591 @LENGTH@ 4
---INS SimpleName@@MethodName:replacesDomainObjectWithPluralRegionNameCorrectly @TO@ MethodDeclaration@@public, void, MethodName:replacesDomainObjectWithPluralRegionNameCorrectly,  @AT@ 1596 @LENGTH@ 49
---INS VariableDeclarationStatement@@QueryString query=new QueryString("SELECT * FROM /Persons p WHERE p.firstname = $1"); @TO@ MethodDeclaration@@public, void, MethodName:replacesDomainObjectWithPluralRegionNameCorrectly,  @AT@ 1653 @LENGTH@ 87
------INS SimpleType@@QueryString @TO@ VariableDeclarationStatement@@QueryString query=new QueryString("SELECT * FROM /Persons p WHERE p.firstname = $1"); @AT@ 1653 @LENGTH@ 11
------INS VariableDeclarationFragment@@query=new QueryString("SELECT * FROM /Persons p WHERE p.firstname = $1") @TO@ VariableDeclarationStatement@@QueryString query=new QueryString("SELECT * FROM /Persons p WHERE p.firstname = $1"); @AT@ 1665 @LENGTH@ 74
---------INS SimpleName@@query @TO@ VariableDeclarationFragment@@query=new QueryString("SELECT * FROM /Persons p WHERE p.firstname = $1") @AT@ 1665 @LENGTH@ 5
---------INS ClassInstanceCreation@@QueryString["SELECT * FROM /Persons p WHERE p.firstname = $1"] @TO@ VariableDeclarationFragment@@query=new QueryString("SELECT * FROM /Persons p WHERE p.firstname = $1") @AT@ 1673 @LENGTH@ 66
------------INS New@@new @TO@ ClassInstanceCreation@@QueryString["SELECT * FROM /Persons p WHERE p.firstname = $1"] @AT@ 1673 @LENGTH@ 3
------------INS SimpleType@@QueryString @TO@ ClassInstanceCreation@@QueryString["SELECT * FROM /Persons p WHERE p.firstname = $1"] @AT@ 1677 @LENGTH@ 11
------------INS StringLiteral@@"SELECT * FROM /Persons p WHERE p.firstname = $1" @TO@ ClassInstanceCreation@@QueryString["SELECT * FROM /Persons p WHERE p.firstname = $1"] @AT@ 1689 @LENGTH@ 49
---INS ExpressionStatement@@MethodInvocation:when(region.getName()).thenReturn("Persons") @TO@ MethodDeclaration@@public, void, MethodName:replacesDomainObjectWithPluralRegionNameCorrectly,  @AT@ 1744 @LENGTH@ 45
------INS MethodInvocation@@when(region.getName()).thenReturn("Persons") @TO@ ExpressionStatement@@MethodInvocation:when(region.getName()).thenReturn("Persons") @AT@ 1744 @LENGTH@ 44
---------INS MethodInvocation@@MethodName:when:[region.getName()] @TO@ MethodInvocation@@when(region.getName()).thenReturn("Persons") @AT@ 1744 @LENGTH@ 22
------------INS MethodInvocation@@region.getName() @TO@ MethodInvocation@@MethodName:when:[region.getName()] @AT@ 1749 @LENGTH@ 16
---------------INS SimpleName@@Name:region @TO@ MethodInvocation@@region.getName() @AT@ 1749 @LENGTH@ 6
---------------INS SimpleName@@MethodName:getName:[] @TO@ MethodInvocation@@region.getName() @AT@ 1756 @LENGTH@ 9
---------INS SimpleName@@MethodName:thenReturn:["Persons"] @TO@ MethodInvocation@@when(region.getName()).thenReturn("Persons") @AT@ 1767 @LENGTH@ 21
------------INS StringLiteral@@"Persons" @TO@ SimpleName@@MethodName:thenReturn:["Persons"] @AT@ 1778 @LENGTH@ 9
---INS ExpressionStatement@@MethodInvocation:assertThat(query.forRegion(Person.class,region).toString(),is("SELECT * FROM /Persons p WHERE p.firstname = $1")) @TO@ MethodDeclaration@@public, void, MethodName:replacesDomainObjectWithPluralRegionNameCorrectly,  @AT@ 1792 @LENGTH@ 116
------INS MethodInvocation@@assertThat(query.forRegion(Person.class,region).toString(),is("SELECT * FROM /Persons p WHERE p.firstname = $1")) @TO@ ExpressionStatement@@MethodInvocation:assertThat(query.forRegion(Person.class,region).toString(),is("SELECT * FROM /Persons p WHERE p.firstname = $1")) @AT@ 1792 @LENGTH@ 115
---------INS SimpleName@@MethodName:assertThat:[query.forRegion(Person.class,region).toString(), is("SELECT * FROM /Persons p WHERE p.firstname = $1")] @TO@ MethodInvocation@@assertThat(query.forRegion(Person.class,region).toString(),is("SELECT * FROM /Persons p WHERE p.firstname = $1")) @AT@ 1792 @LENGTH@ 115
------------INS MethodInvocation@@query.forRegion(Person.class,region).toString() @TO@ SimpleName@@MethodName:assertThat:[query.forRegion(Person.class,region).toString(), is("SELECT * FROM /Persons p WHERE p.firstname = $1")] @AT@ 1803 @LENGTH@ 48
---------------INS MethodInvocation@@MethodName:forRegion:[Person.class, region] @TO@ MethodInvocation@@query.forRegion(Person.class,region).toString() @AT@ 1803 @LENGTH@ 37
------------------INS TypeLiteral@@Person.class @TO@ MethodInvocation@@MethodName:forRegion:[Person.class, region] @AT@ 1819 @LENGTH@ 12
------------------INS SimpleName@@region @TO@ MethodInvocation@@MethodName:forRegion:[Person.class, region] @AT@ 1833 @LENGTH@ 6
---------------INS SimpleName@@Name:query @TO@ MethodInvocation@@query.forRegion(Person.class,region).toString() @AT@ 1803 @LENGTH@ 5
---------------INS SimpleName@@MethodName:toString:[] @TO@ MethodInvocation@@query.forRegion(Person.class,region).toString() @AT@ 1841 @LENGTH@ 10
------------INS MethodInvocation@@is("SELECT * FROM /Persons p WHERE p.firstname = $1") @TO@ SimpleName@@MethodName:assertThat:[query.forRegion(Person.class,region).toString(), is("SELECT * FROM /Persons p WHERE p.firstname = $1")] @AT@ 1853 @LENGTH@ 53
---------------INS SimpleName@@MethodName:is:["SELECT * FROM /Persons p WHERE p.firstname = $1"] @TO@ MethodInvocation@@is("SELECT * FROM /Persons p WHERE p.firstname = $1") @AT@ 1853 @LENGTH@ 53
------------------INS StringLiteral@@"SELECT * FROM /Persons p WHERE p.firstname = $1" @TO@ SimpleName@@MethodName:is:["SELECT * FROM /Persons p WHERE p.firstname = $1"] @AT@ 1856 @LENGTH@ 49
---------------INS SimpleName@@MethodName:is:["SELECT * FROM /Persons p WHERE p.firstname = $1"] @TO@ MethodInvocation@@is("SELECT * FROM /Persons p WHERE p.firstname = $1") @AT@ 1853 @LENGTH@ 53
------------------INS StringLiteral@@"SELECT * FROM /Persons p WHERE p.firstname = $1" @TO@ SimpleName@@MethodName:is:["SELECT * FROM /Persons p WHERE p.firstname = $1"] @AT@ 1856 @LENGTH@ 49


UPD IfStatement@@if (!changeDetected) {  Thread.sleep(1000);} @TO@ if (!changeDetected) {  Thread.sleep(1000);  reloadConfig.save(outFile);} @AT@ 46031 @LENGTH@ 96
---UPD Block@@ThenBody:{  Thread.sleep(1000);} @TO@ ThenBody:{  Thread.sleep(1000);  reloadConfig.save(outFile);} @AT@ 46068 @LENGTH@ 59
------INS ExpressionStatement@@MethodInvocation:reloadConfig.save(outFile) @TO@ Block@@ThenBody:{  Thread.sleep(1000);} @AT@ 46130 @LENGTH@ 27
---------INS MethodInvocation@@reloadConfig.save(outFile) @TO@ ExpressionStatement@@MethodInvocation:reloadConfig.save(outFile) @AT@ 46130 @LENGTH@ 26
------------INS SimpleName@@Name:reloadConfig @TO@ MethodInvocation@@reloadConfig.save(outFile) @AT@ 46130 @LENGTH@ 12
------------INS SimpleName@@MethodName:save:[outFile] @TO@ MethodInvocation@@reloadConfig.save(outFile) @AT@ 46143 @LENGTH@ 13
---------------INS SimpleName@@outFile @TO@ SimpleName@@MethodName:save:[outFile] @AT@ 46148 @LENGTH@ 7


DEL ExpressionStatement@@MethodInvocation:NamespaceUtils.setPropertyValue(element,builder,"write-dot","writeDOT") @AT@ 1713 @LENGTH@ 75
---DEL MethodInvocation@@NamespaceUtils.setPropertyValue(element,builder,"write-dot","writeDOT") @AT@ 1713 @LENGTH@ 74
------DEL SimpleName@@Name:NamespaceUtils @AT@ 1713 @LENGTH@ 14
------DEL SimpleName@@MethodName:setPropertyValue:[element, builder, "write-dot", "writeDOT"] @AT@ 1728 @LENGTH@ 59
---------DEL SimpleName@@element @AT@ 1745 @LENGTH@ 7
---------DEL SimpleName@@builder @AT@ 1754 @LENGTH@ 7
---------DEL StringLiteral@@"write-dot" @AT@ 1763 @LENGTH@ 11
---------DEL StringLiteral@@"writeDOT" @AT@ 1776 @LENGTH@ 10


UPD TryStatement@@try {  List<byte[]> mArgs=new ArrayList<byte[]>();  if (!ObjectUtils.isEmpty(args)) {    Collections.addAll(mArgs,args);  }  Object result=ReflectionUtils.invokeMethod(SEND_COMMAND,client,Command.valueOf(command.trim().toUpperCase()),mArgs.toArray(new byte[mArgs.size()][]));  if (isQueueing() || isPipelined()) {    Object target=(isPipelined() ? pipeline : transaction);    ReflectionUtils.invokeMethod(GET_RESPONSE,target,new Builder<Object>(){      public Object build(      Object data){        return data;      }      public String toString(){        return "Object";      }    });  } else {    client.getOne();  }  return result;} catch (Exception ex) {  throw convertJedisAccessException(ex);} @TO@ try {  List<byte[]> mArgs=new ArrayList<byte[]>();  if (!ObjectUtils.isEmpty(args)) {    Collections.addAll(mArgs,args);  }  ReflectionUtils.invokeMethod(SEND_COMMAND,client,Command.valueOf(command.trim().toUpperCase()),mArgs.toArray(new byte[mArgs.size()][]));  if (isQueueing() || isPipelined()) {    Object target=(isPipelined() ? pipeline : transaction);    ReflectionUtils.invokeMethod(GET_RESPONSE,target,new Builder<Object>(){      public Object build(      Object data){        return data;      }      public String toString(){        return "Object";      }    });    return null;  }  return client.getOne();} catch (Exception ex) {  throw convertJedisAccessException(ex);} @AT@ 4991 @LENGTH@ 748
---DEL VariableDeclarationStatement@@Object result=ReflectionUtils.invokeMethod(SEND_COMMAND,client,Command.valueOf(command.trim().toUpperCase()),mArgs.toArray(new byte[mArgs.size()][])); @AT@ 5129 @LENGTH@ 160
------DEL SimpleType@@Object @AT@ 5129 @LENGTH@ 6
------DEL VariableDeclarationFragment@@result=ReflectionUtils.invokeMethod(SEND_COMMAND,client,Command.valueOf(command.trim().toUpperCase()),mArgs.toArray(new byte[mArgs.size()][])) @AT@ 5136 @LENGTH@ 152
---------DEL SimpleName@@result @AT@ 5136 @LENGTH@ 6
---INS ExpressionStatement@@MethodInvocation:ReflectionUtils.invokeMethod(SEND_COMMAND,client,Command.valueOf(command.trim().toUpperCase()),mArgs.toArray(new byte[mArgs.size()][])) @TO@ TryStatement@@try {  List<byte[]> mArgs=new ArrayList<byte[]>();  if (!ObjectUtils.isEmpty(args)) {    Collections.addAll(mArgs,args);  }  Object result=ReflectionUtils.invokeMethod(SEND_COMMAND,client,Command.valueOf(command.trim().toUpperCase()),mArgs.toArray(new byte[mArgs.size()][]));  if (isQueueing() || isPipelined()) {    Object target=(isPipelined() ? pipeline : transaction);    ReflectionUtils.invokeMethod(GET_RESPONSE,target,new Builder<Object>(){      public Object build(      Object data){        return data;      }      public String toString(){        return "Object";      }    });  } else {    client.getOne();  }  return result;} catch (Exception ex) {  throw convertJedisAccessException(ex);} @AT@ 5129 @LENGTH@ 144
------MOV MethodInvocation@@ReflectionUtils.invokeMethod(SEND_COMMAND,client,Command.valueOf(command.trim().toUpperCase()),mArgs.toArray(new byte[mArgs.size()][])) @TO@ ExpressionStatement@@MethodInvocation:ReflectionUtils.invokeMethod(SEND_COMMAND,client,Command.valueOf(command.trim().toUpperCase()),mArgs.toArray(new byte[mArgs.size()][])) @AT@ 5145 @LENGTH@ 143
---UPD IfStatement@@if (isQueueing() || isPipelined()) {  Object target=(isPipelined() ? pipeline : transaction);  ReflectionUtils.invokeMethod(GET_RESPONSE,target,new Builder<Object>(){    public Object build(    Object data){      return data;    }    public String toString(){      return "Object";    }  });} else {  client.getOne();} @TO@ if (isQueueing() || isPipelined()) {  Object target=(isPipelined() ? pipeline : transaction);  ReflectionUtils.invokeMethod(GET_RESPONSE,target,new Builder<Object>(){    public Object build(    Object data){      return data;    }    public String toString(){      return "Object";    }  });  return null;} @AT@ 5293 @LENGTH@ 355
------UPD Block@@ThenBody:{  Object target=(isPipelined() ? pipeline : transaction);  ReflectionUtils.invokeMethod(GET_RESPONSE,target,new Builder<Object>(){    public Object build(    Object data){      return data;    }    public String toString(){      return "Object";    }  });} @TO@ ThenBody:{  Object target=(isPipelined() ? pipeline : transaction);  ReflectionUtils.invokeMethod(GET_RESPONSE,target,new Builder<Object>(){    public Object build(    Object data){      return data;    }    public String toString(){      return "Object";    }  });  return null;} @AT@ 5328 @LENGTH@ 284
---------INS ReturnStatement@@NullLiteral:null @TO@ Block@@ThenBody:{  Object target=(isPipelined() ? pipeline : transaction);  ReflectionUtils.invokeMethod(GET_RESPONSE,target,new Builder<Object>(){    public Object build(    Object data){      return data;    }    public String toString(){      return "Object";    }  });} @AT@ 5596 @LENGTH@ 12
------------INS NullLiteral@@null @TO@ ReturnStatement@@NullLiteral:null @AT@ 5603 @LENGTH@ 4
------DEL Block@@ElseBody:{  client.getOne();} @AT@ 5621 @LENGTH@ 27
---------DEL ExpressionStatement@@MethodInvocation:client.getOne() @AT@ 5627 @LENGTH@ 16
------------DEL MethodInvocation@@client.getOne() @AT@ 5627 @LENGTH@ 15
---------------DEL SimpleName@@Name:client @AT@ 5627 @LENGTH@ 6
---------------DEL SimpleName@@MethodName:getOne:[] @AT@ 5634 @LENGTH@ 8
---INS ReturnStatement@@MethodInvocation:client.getOne() @TO@ TryStatement@@try {  List<byte[]> mArgs=new ArrayList<byte[]>();  if (!ObjectUtils.isEmpty(args)) {    Collections.addAll(mArgs,args);  }  Object result=ReflectionUtils.invokeMethod(SEND_COMMAND,client,Command.valueOf(command.trim().toUpperCase()),mArgs.toArray(new byte[mArgs.size()][]));  if (isQueueing() || isPipelined()) {    Object target=(isPipelined() ? pipeline : transaction);    ReflectionUtils.invokeMethod(GET_RESPONSE,target,new Builder<Object>(){      public Object build(      Object data){        return data;      }      public String toString(){        return "Object";      }    });  } else {    client.getOne();  }  return result;} catch (Exception ex) {  throw convertJedisAccessException(ex);} @AT@ 5617 @LENGTH@ 23
------INS MethodInvocation@@client.getOne() @TO@ ReturnStatement@@MethodInvocation:client.getOne() @AT@ 5624 @LENGTH@ 15
---------INS SimpleName@@Name:client @TO@ MethodInvocation@@client.getOne() @AT@ 5624 @LENGTH@ 6
---------INS SimpleName@@MethodName:getOne:[] @TO@ MethodInvocation@@client.getOne() @AT@ 5631 @LENGTH@ 8
---DEL ReturnStatement@@SimpleName:result @AT@ 5652 @LENGTH@ 14
------DEL SimpleName@@result @AT@ 5659 @LENGTH@ 6


INS MethodDeclaration@@public, void, MethodName:testBodyOgnlSpaces, Exception,  @TO@ TypeDeclaration@@[public]SimpleTest, LanguageTestSupport @AT@ 47124 @LENGTH@ 648
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testBodyOgnlSpaces, Exception,  @AT@ 47124 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testBodyOgnlSpaces, Exception,  @AT@ 47131 @LENGTH@ 4
---INS SimpleName@@MethodName:testBodyOgnlSpaces @TO@ MethodDeclaration@@public, void, MethodName:testBodyOgnlSpaces, Exception,  @AT@ 47136 @LENGTH@ 18
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:testBodyOgnlSpaces, Exception,  @AT@ 47164 @LENGTH@ 9
---INS ExpressionStatement@@MethodInvocation:exchange.getIn().setBody("Hello World") @TO@ MethodDeclaration@@public, void, MethodName:testBodyOgnlSpaces, Exception,  @AT@ 47184 @LENGTH@ 40
------INS MethodInvocation@@exchange.getIn().setBody("Hello World") @TO@ ExpressionStatement@@MethodInvocation:exchange.getIn().setBody("Hello World") @AT@ 47184 @LENGTH@ 39
---------INS MethodInvocation@@MethodName:getIn:[] @TO@ MethodInvocation@@exchange.getIn().setBody("Hello World") @AT@ 47184 @LENGTH@ 16
---------INS SimpleName@@Name:exchange @TO@ MethodInvocation@@exchange.getIn().setBody("Hello World") @AT@ 47184 @LENGTH@ 8
---------INS SimpleName@@MethodName:setBody:["Hello World"] @TO@ MethodInvocation@@exchange.getIn().setBody("Hello World") @AT@ 47201 @LENGTH@ 22
------------INS StringLiteral@@"Hello World" @TO@ SimpleName@@MethodName:setBody:["Hello World"] @AT@ 47209 @LENGTH@ 13
---INS ExpressionStatement@@MethodInvocation:assertExpression("${body.compareTo(Hello World)}",0) @TO@ MethodDeclaration@@public, void, MethodName:testBodyOgnlSpaces, Exception,  @AT@ 47284 @LENGTH@ 54
------INS MethodInvocation@@assertExpression("${body.compareTo(Hello World)}",0) @TO@ ExpressionStatement@@MethodInvocation:assertExpression("${body.compareTo(Hello World)}",0) @AT@ 47284 @LENGTH@ 53
---------INS SimpleName@@MethodName:assertExpression:["${body.compareTo(Hello World)}", 0] @TO@ MethodInvocation@@assertExpression("${body.compareTo(Hello World)}",0) @AT@ 47284 @LENGTH@ 53
------------INS StringLiteral@@"${body.compareTo(Hello World)}" @TO@ SimpleName@@MethodName:assertExpression:["${body.compareTo(Hello World)}", 0] @AT@ 47301 @LENGTH@ 32
------------INS NumberLiteral@@0 @TO@ SimpleName@@MethodName:assertExpression:["${body.compareTo(Hello World)}", 0] @AT@ 47335 @LENGTH@ 1
---INS ExpressionStatement@@MethodInvocation:assertExpression("${body.compareTo('Hello World')}",0) @TO@ MethodDeclaration@@public, void, MethodName:testBodyOgnlSpaces, Exception,  @AT@ 47348 @LENGTH@ 56
------INS MethodInvocation@@assertExpression("${body.compareTo('Hello World')}",0) @TO@ ExpressionStatement@@MethodInvocation:assertExpression("${body.compareTo('Hello World')}",0) @AT@ 47348 @LENGTH@ 55
---------INS SimpleName@@MethodName:assertExpression:["${body.compareTo('Hello World')}", 0] @TO@ MethodInvocation@@assertExpression("${body.compareTo('Hello World')}",0) @AT@ 47348 @LENGTH@ 55
------------INS StringLiteral@@"${body.compareTo('Hello World')}" @TO@ SimpleName@@MethodName:assertExpression:["${body.compareTo('Hello World')}", 0] @AT@ 47365 @LENGTH@ 34
------------INS NumberLiteral@@0 @TO@ SimpleName@@MethodName:assertExpression:["${body.compareTo('Hello World')}", 0] @AT@ 47401 @LENGTH@ 1
---INS ExpressionStatement@@MethodInvocation:assertExpression("${body.compareTo(${body})}",0) @TO@ MethodDeclaration@@public, void, MethodName:testBodyOgnlSpaces, Exception,  @AT@ 47413 @LENGTH@ 50
------INS MethodInvocation@@assertExpression("${body.compareTo(${body})}",0) @TO@ ExpressionStatement@@MethodInvocation:assertExpression("${body.compareTo(${body})}",0) @AT@ 47413 @LENGTH@ 49
---------INS SimpleName@@MethodName:assertExpression:["${body.compareTo(${body})}", 0] @TO@ MethodInvocation@@assertExpression("${body.compareTo(${body})}",0) @AT@ 47413 @LENGTH@ 49
------------INS StringLiteral@@"${body.compareTo(${body})}" @TO@ SimpleName@@MethodName:assertExpression:["${body.compareTo(${body})}", 0] @AT@ 47430 @LENGTH@ 28
------------INS NumberLiteral@@0 @TO@ SimpleName@@MethodName:assertExpression:["${body.compareTo(${body})}", 0] @AT@ 47460 @LENGTH@ 1
---INS ExpressionStatement@@MethodInvocation:assertExpression("${body.compareTo('foo')}","Hello World".compareTo("foo")) @TO@ MethodDeclaration@@public, void, MethodName:testBodyOgnlSpaces, Exception,  @AT@ 47472 @LENGTH@ 77
------INS MethodInvocation@@assertExpression("${body.compareTo('foo')}","Hello World".compareTo("foo")) @TO@ ExpressionStatement@@MethodInvocation:assertExpression("${body.compareTo('foo')}","Hello World".compareTo("foo")) @AT@ 47472 @LENGTH@ 76
---------INS SimpleName@@MethodName:assertExpression:["${body.compareTo('foo')}", "Hello World".compareTo("foo")] @TO@ MethodInvocation@@assertExpression("${body.compareTo('foo')}","Hello World".compareTo("foo")) @AT@ 47472 @LENGTH@ 76
------------INS StringLiteral@@"${body.compareTo('foo')}" @TO@ SimpleName@@MethodName:assertExpression:["${body.compareTo('foo')}", "Hello World".compareTo("foo")] @AT@ 47489 @LENGTH@ 26
------------INS MethodInvocation@@"Hello World".compareTo("foo") @TO@ SimpleName@@MethodName:assertExpression:["${body.compareTo('foo')}", "Hello World".compareTo("foo")] @AT@ 47517 @LENGTH@ 30
---------------INS StringLiteral@@"Hello World" @TO@ MethodInvocation@@"Hello World".compareTo("foo") @AT@ 47517 @LENGTH@ 13
---------------INS SimpleName@@MethodName:compareTo:["foo"] @TO@ MethodInvocation@@"Hello World".compareTo("foo") @AT@ 47531 @LENGTH@ 16
------------------INS StringLiteral@@"foo" @TO@ SimpleName@@MethodName:compareTo:["foo"] @AT@ 47541 @LENGTH@ 5
---INS ExpressionStatement@@MethodInvocation:assertExpression("${body.compareTo( 'Hello World' )}",0) @TO@ MethodDeclaration@@public, void, MethodName:testBodyOgnlSpaces, Exception,  @AT@ 47559 @LENGTH@ 58
------INS MethodInvocation@@assertExpression("${body.compareTo( 'Hello World' )}",0) @TO@ ExpressionStatement@@MethodInvocation:assertExpression("${body.compareTo( 'Hello World' )}",0) @AT@ 47559 @LENGTH@ 57
---------INS SimpleName@@MethodName:assertExpression:["${body.compareTo( 'Hello World' )}", 0] @TO@ MethodInvocation@@assertExpression("${body.compareTo( 'Hello World' )}",0) @AT@ 47559 @LENGTH@ 57
------------INS StringLiteral@@"${body.compareTo( 'Hello World' )}" @TO@ SimpleName@@MethodName:assertExpression:["${body.compareTo( 'Hello World' )}", 0] @AT@ 47576 @LENGTH@ 36
------------INS NumberLiteral@@0 @TO@ SimpleName@@MethodName:assertExpression:["${body.compareTo( 'Hello World' )}", 0] @AT@ 47614 @LENGTH@ 1
---INS ExpressionStatement@@MethodInvocation:assertExpression("${body.compareTo( ${body} )}",0) @TO@ MethodDeclaration@@public, void, MethodName:testBodyOgnlSpaces, Exception,  @AT@ 47626 @LENGTH@ 52
------INS MethodInvocation@@assertExpression("${body.compareTo( ${body} )}",0) @TO@ ExpressionStatement@@MethodInvocation:assertExpression("${body.compareTo( ${body} )}",0) @AT@ 47626 @LENGTH@ 51
---------INS SimpleName@@MethodName:assertExpression:["${body.compareTo( ${body} )}", 0] @TO@ MethodInvocation@@assertExpression("${body.compareTo( ${body} )}",0) @AT@ 47626 @LENGTH@ 51
------------INS StringLiteral@@"${body.compareTo( ${body} )}" @TO@ SimpleName@@MethodName:assertExpression:["${body.compareTo( ${body} )}", 0] @AT@ 47643 @LENGTH@ 30
------------INS NumberLiteral@@0 @TO@ SimpleName@@MethodName:assertExpression:["${body.compareTo( ${body} )}", 0] @AT@ 47675 @LENGTH@ 1
---INS ExpressionStatement@@MethodInvocation:assertExpression("${body.compareTo( 'foo' )}","Hello World".compareTo("foo")) @TO@ MethodDeclaration@@public, void, MethodName:testBodyOgnlSpaces, Exception,  @AT@ 47687 @LENGTH@ 79
------INS MethodInvocation@@assertExpression("${body.compareTo( 'foo' )}","Hello World".compareTo("foo")) @TO@ ExpressionStatement@@MethodInvocation:assertExpression("${body.compareTo( 'foo' )}","Hello World".compareTo("foo")) @AT@ 47687 @LENGTH@ 78
---------INS SimpleName@@MethodName:assertExpression:["${body.compareTo( 'foo' )}", "Hello World".compareTo("foo")] @TO@ MethodInvocation@@assertExpression("${body.compareTo( 'foo' )}","Hello World".compareTo("foo")) @AT@ 47687 @LENGTH@ 78
------------INS StringLiteral@@"${body.compareTo( 'foo' )}" @TO@ SimpleName@@MethodName:assertExpression:["${body.compareTo( 'foo' )}", "Hello World".compareTo("foo")] @AT@ 47704 @LENGTH@ 28
------------INS MethodInvocation@@"Hello World".compareTo("foo") @TO@ SimpleName@@MethodName:assertExpression:["${body.compareTo( 'foo' )}", "Hello World".compareTo("foo")] @AT@ 47734 @LENGTH@ 30
---------------INS StringLiteral@@"Hello World" @TO@ MethodInvocation@@"Hello World".compareTo("foo") @AT@ 47734 @LENGTH@ 13
---------------INS SimpleName@@MethodName:compareTo:["foo"] @TO@ MethodInvocation@@"Hello World".compareTo("foo") @AT@ 47748 @LENGTH@ 16
------------------INS StringLiteral@@"foo" @TO@ SimpleName@@MethodName:compareTo:["foo"] @AT@ 47758 @LENGTH@ 5


UPD MethodDeclaration@@private, int, MethodName:getRedisVersion,  @TO@ protected, int, MethodName:getRedisVersion,  @AT@ 5848 @LENGTH@ 205
---UPD Modifier@@private @TO@ protected @AT@ 5848 @LENGTH@ 7


INS MethodDeclaration@@public, void, MethodName:appendsIgnoreCaseOrderingCorrectly,  @TO@ TypeDeclaration@@[public]QueryUtilsUnitTests,  @AT@ 5843 @LENGTH@ 295
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:appendsIgnoreCaseOrderingCorrectly,  @AT@ 5843 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:appendsIgnoreCaseOrderingCorrectly,  @AT@ 5850 @LENGTH@ 4
---INS SimpleName@@MethodName:appendsIgnoreCaseOrderingCorrectly @TO@ MethodDeclaration@@public, void, MethodName:appendsIgnoreCaseOrderingCorrectly,  @AT@ 5855 @LENGTH@ 34
---INS VariableDeclarationStatement@@Sort sort=new Sort(new Sort.Order("firstname").ignoreCase()); @TO@ MethodDeclaration@@public, void, MethodName:appendsIgnoreCaseOrderingCorrectly,  @AT@ 5897 @LENGTH@ 63
------INS SimpleType@@Sort @TO@ VariableDeclarationStatement@@Sort sort=new Sort(new Sort.Order("firstname").ignoreCase()); @AT@ 5897 @LENGTH@ 4
------INS VariableDeclarationFragment@@sort=new Sort(new Sort.Order("firstname").ignoreCase()) @TO@ VariableDeclarationStatement@@Sort sort=new Sort(new Sort.Order("firstname").ignoreCase()); @AT@ 5902 @LENGTH@ 57
---------INS SimpleName@@sort @TO@ VariableDeclarationFragment@@sort=new Sort(new Sort.Order("firstname").ignoreCase()) @AT@ 5902 @LENGTH@ 4
---------INS ClassInstanceCreation@@Sort[new Sort.Order("firstname").ignoreCase()] @TO@ VariableDeclarationFragment@@sort=new Sort(new Sort.Order("firstname").ignoreCase()) @AT@ 5909 @LENGTH@ 50
------------INS New@@new @TO@ ClassInstanceCreation@@Sort[new Sort.Order("firstname").ignoreCase()] @AT@ 5909 @LENGTH@ 3
------------INS SimpleType@@Sort @TO@ ClassInstanceCreation@@Sort[new Sort.Order("firstname").ignoreCase()] @AT@ 5913 @LENGTH@ 4
------------INS MethodInvocation@@new Sort.Order("firstname").ignoreCase() @TO@ ClassInstanceCreation@@Sort[new Sort.Order("firstname").ignoreCase()] @AT@ 5918 @LENGTH@ 40
---------------INS ClassInstanceCreation@@Sort.Order["firstname"] @TO@ MethodInvocation@@new Sort.Order("firstname").ignoreCase() @AT@ 5918 @LENGTH@ 27
------------------INS New@@new @TO@ ClassInstanceCreation@@Sort.Order["firstname"] @AT@ 5918 @LENGTH@ 3
------------------INS SimpleType@@Sort.Order @TO@ ClassInstanceCreation@@Sort.Order["firstname"] @AT@ 5922 @LENGTH@ 10
------------------INS StringLiteral@@"firstname" @TO@ ClassInstanceCreation@@Sort.Order["firstname"] @AT@ 5933 @LENGTH@ 11
---------------INS SimpleName@@MethodName:ignoreCase:[] @TO@ MethodInvocation@@new Sort.Order("firstname").ignoreCase() @AT@ 5946 @LENGTH@ 12
---INS VariableDeclarationStatement@@String query="select p from Person p order by p.lastname asc"; @TO@ MethodDeclaration@@public, void, MethodName:appendsIgnoreCaseOrderingCorrectly,  @AT@ 5964 @LENGTH@ 64
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String query="select p from Person p order by p.lastname asc"; @AT@ 5964 @LENGTH@ 6
------INS VariableDeclarationFragment@@query="select p from Person p order by p.lastname asc" @TO@ VariableDeclarationStatement@@String query="select p from Person p order by p.lastname asc"; @AT@ 5971 @LENGTH@ 56
---------INS SimpleName@@query @TO@ VariableDeclarationFragment@@query="select p from Person p order by p.lastname asc" @AT@ 5971 @LENGTH@ 5
---------INS StringLiteral@@"select p from Person p order by p.lastname asc" @TO@ VariableDeclarationFragment@@query="select p from Person p order by p.lastname asc" @AT@ 5979 @LENGTH@ 48
---INS ExpressionStatement@@MethodInvocation:assertThat(applySorting(query,sort,"p"),endsWith("order by p.lastname asc, lower(p.firstname) asc")) @TO@ MethodDeclaration@@public, void, MethodName:appendsIgnoreCaseOrderingCorrectly,  @AT@ 6031 @LENGTH@ 104
------INS MethodInvocation@@assertThat(applySorting(query,sort,"p"),endsWith("order by p.lastname asc, lower(p.firstname) asc")) @TO@ ExpressionStatement@@MethodInvocation:assertThat(applySorting(query,sort,"p"),endsWith("order by p.lastname asc, lower(p.firstname) asc")) @AT@ 6031 @LENGTH@ 103
---------INS SimpleName@@MethodName:assertThat:[applySorting(query,sort,"p"), endsWith("order by p.lastname asc, lower(p.firstname) asc")] @TO@ MethodInvocation@@assertThat(applySorting(query,sort,"p"),endsWith("order by p.lastname asc, lower(p.firstname) asc")) @AT@ 6031 @LENGTH@ 103
------------INS MethodInvocation@@applySorting(query,sort,"p") @TO@ SimpleName@@MethodName:assertThat:[applySorting(query,sort,"p"), endsWith("order by p.lastname asc, lower(p.firstname) asc")] @AT@ 6042 @LENGTH@ 30
---------------INS SimpleName@@MethodName:applySorting:[query, sort, "p"] @TO@ MethodInvocation@@applySorting(query,sort,"p") @AT@ 6042 @LENGTH@ 30
------------------INS SimpleName@@query @TO@ SimpleName@@MethodName:applySorting:[query, sort, "p"] @AT@ 6055 @LENGTH@ 5
------------------INS SimpleName@@sort @TO@ SimpleName@@MethodName:applySorting:[query, sort, "p"] @AT@ 6062 @LENGTH@ 4
------------------INS StringLiteral@@"p" @TO@ SimpleName@@MethodName:applySorting:[query, sort, "p"] @AT@ 6068 @LENGTH@ 3
---------------INS SimpleName@@MethodName:applySorting:[query, sort, "p"] @TO@ MethodInvocation@@applySorting(query,sort,"p") @AT@ 6042 @LENGTH@ 30
------------------INS SimpleName@@query @TO@ SimpleName@@MethodName:applySorting:[query, sort, "p"] @AT@ 6055 @LENGTH@ 5
------------------INS SimpleName@@sort @TO@ SimpleName@@MethodName:applySorting:[query, sort, "p"] @AT@ 6062 @LENGTH@ 4
------------------INS StringLiteral@@"p" @TO@ SimpleName@@MethodName:applySorting:[query, sort, "p"] @AT@ 6068 @LENGTH@ 3
------------INS MethodInvocation@@endsWith("order by p.lastname asc, lower(p.firstname) asc") @TO@ SimpleName@@MethodName:assertThat:[applySorting(query,sort,"p"), endsWith("order by p.lastname asc, lower(p.firstname) asc")] @AT@ 6074 @LENGTH@ 59
---------------INS SimpleName@@MethodName:endsWith:["order by p.lastname asc, lower(p.firstname) asc"] @TO@ MethodInvocation@@endsWith("order by p.lastname asc, lower(p.firstname) asc") @AT@ 6074 @LENGTH@ 59
------------------INS StringLiteral@@"order by p.lastname asc, lower(p.firstname) asc" @TO@ SimpleName@@MethodName:endsWith:["order by p.lastname asc, lower(p.firstname) asc"] @AT@ 6083 @LENGTH@ 49


UPD IfStatement@@if (isIdempotent() && idempotentRepository == null) {  log.info("Using default memory based idempotent repository with cache max size: " + DEFAULT_IDEMPOTENT_CACHE_SIZE);  idempotentRepository=MemoryIdempotentRepository.memoryIdempotentRepository(DEFAULT_IDEMPOTENT_CACHE_SIZE);} @TO@ if (isIdempotentSet() && isIdempotent() && idempotentRepository == null) {  log.info("Using default memory based idempotent repository with cache max size: " + DEFAULT_IDEMPOTENT_CACHE_SIZE);  idempotentRepository=MemoryIdempotentRepository.memoryIdempotentRepository(DEFAULT_IDEMPOTENT_CACHE_SIZE);} @AT@ 3965 @LENGTH@ 312
---UPD InfixExpression@@isIdempotent() && idempotentRepository == null @TO@ isIdempotentSet() && isIdempotent() && idempotentRepository == null @AT@ 3969 @LENGTH@ 46
------UPD MethodInvocation@@MethodName:isIdempotent:[] @TO@ MethodName:isIdempotentSet:[] @AT@ 3969 @LENGTH@ 14
------INS MethodInvocation@@MethodName:isIdempotent:[] @TO@ InfixExpression@@isIdempotent() && idempotentRepository == null @AT@ 3994 @LENGTH@ 14


UPD ExpressionStatement@@Assignment:testSupport=DomainTestSuite.createSupport(DomainDeploymentOverlayTestCase.class.getSimpleName()) @TO@ Assignment:testSupport=DomainTestSupport.createAndStartDefaultSupport(DomainDeploymentOverlayTestCase.class.getSimpleName()) @AT@ 5401 @LENGTH@ 99
---UPD Assignment@@testSupport=DomainTestSuite.createSupport(DomainDeploymentOverlayTestCase.class.getSimpleName()) @TO@ testSupport=DomainTestSupport.createAndStartDefaultSupport(DomainDeploymentOverlayTestCase.class.getSimpleName()) @AT@ 5401 @LENGTH@ 98
------UPD MethodInvocation@@DomainTestSuite.createSupport(DomainDeploymentOverlayTestCase.class.getSimpleName()) @TO@ DomainTestSupport.createAndStartDefaultSupport(DomainDeploymentOverlayTestCase.class.getSimpleName()) @AT@ 5415 @LENGTH@ 84
---------UPD SimpleName@@Name:DomainTestSuite @TO@ Name:DomainTestSupport @AT@ 5415 @LENGTH@ 15
---------UPD SimpleName@@MethodName:createSupport:[DomainDeploymentOverlayTestCase.class.getSimpleName()] @TO@ MethodName:createAndStartDefaultSupport:[DomainDeploymentOverlayTestCase.class.getSimpleName()] @AT@ 5431 @LENGTH@ 68


UPD VariableDeclarationStatement@@String path=null; @TO@ ModelNode path=null; @AT@ 15678 @LENGTH@ 19
---UPD SimpleType@@String @TO@ ModelNode @AT@ 15678 @LENGTH@ 6


UPD IfStatement@@if (isQueueing()) {  pipeline(pipeline.zinterstore(args));  return null;} @TO@ if (isPipelined()) {  pipeline(pipeline.zinterstore(args));  return null;} @AT@ 29811 @LENGTH@ 83
---UPD MethodInvocation@@MethodName:isQueueing:[] @TO@ MethodName:isPipelined:[] @AT@ 29815 @LENGTH@ 12


INS FieldDeclaration@@private, static, final, Logger, [log=Logger.getLogger(MyServiceActivator.class)] @TO@ TypeDeclaration@@[public]MyServiceActivator, [ServiceActivator] @AT@ 1920 @LENGTH@ 77
---INS Modifier@@private @TO@ FieldDeclaration@@private, static, final, Logger, [log=Logger.getLogger(MyServiceActivator.class)] @AT@ 1920 @LENGTH@ 7
---INS Modifier@@static @TO@ FieldDeclaration@@private, static, final, Logger, [log=Logger.getLogger(MyServiceActivator.class)] @AT@ 1928 @LENGTH@ 6
---INS Modifier@@final @TO@ FieldDeclaration@@private, static, final, Logger, [log=Logger.getLogger(MyServiceActivator.class)] @AT@ 1935 @LENGTH@ 5
---INS SimpleType@@Logger @TO@ FieldDeclaration@@private, static, final, Logger, [log=Logger.getLogger(MyServiceActivator.class)] @AT@ 1941 @LENGTH@ 6
---INS VariableDeclarationFragment@@log=Logger.getLogger(MyServiceActivator.class) @TO@ FieldDeclaration@@private, static, final, Logger, [log=Logger.getLogger(MyServiceActivator.class)] @AT@ 1948 @LENGTH@ 48
------INS SimpleName@@log @TO@ VariableDeclarationFragment@@log=Logger.getLogger(MyServiceActivator.class) @AT@ 1948 @LENGTH@ 3
------INS MethodInvocation@@Logger.getLogger(MyServiceActivator.class) @TO@ VariableDeclarationFragment@@log=Logger.getLogger(MyServiceActivator.class) @AT@ 1954 @LENGTH@ 42
---------INS SimpleName@@Name:Logger @TO@ MethodInvocation@@Logger.getLogger(MyServiceActivator.class) @AT@ 1954 @LENGTH@ 6
---------INS SimpleName@@MethodName:getLogger:[MyServiceActivator.class] @TO@ MethodInvocation@@Logger.getLogger(MyServiceActivator.class) @AT@ 1961 @LENGTH@ 35
------------INS TypeLiteral@@MyServiceActivator.class @TO@ SimpleName@@MethodName:getLogger:[MyServiceActivator.class] @AT@ 1971 @LENGTH@ 24


INS ExpressionStatement@@MethodInvocation:dataSourceServiceBuilder.addListener(verificationHandler) @TO@ MethodDeclaration@@private, void, MethodName:performRuntime, final OperationContext context, final ModelNode operation, final Resource resource, final ModelNode model, final ServiceVerificationHandler verificationHandler, final List<ServiceController<?>> controllers, OperationFailedException,  @AT@ 8344 @LENGTH@ 58
---INS MethodInvocation@@dataSourceServiceBuilder.addListener(verificationHandler) @TO@ ExpressionStatement@@MethodInvocation:dataSourceServiceBuilder.addListener(verificationHandler) @AT@ 8344 @LENGTH@ 57
------INS SimpleName@@Name:dataSourceServiceBuilder @TO@ MethodInvocation@@dataSourceServiceBuilder.addListener(verificationHandler) @AT@ 8344 @LENGTH@ 24
------INS SimpleName@@MethodName:addListener:[verificationHandler] @TO@ MethodInvocation@@dataSourceServiceBuilder.addListener(verificationHandler) @AT@ 8369 @LENGTH@ 32
---------INS SimpleName@@verificationHandler @TO@ SimpleName@@MethodName:addListener:[verificationHandler] @AT@ 8381 @LENGTH@ 19


UPD ExpressionStatement@@MethodInvocation:assertTrue("Wrong header: " + header,header.contains("error=\"invalid_client\"")) @TO@ MethodInvocation:assertTrue("Wrong header: " + header,header.contains("Basic realm")) @AT@ 3142 @LENGTH@ 83
---UPD MethodInvocation@@assertTrue("Wrong header: " + header,header.contains("error=\"invalid_client\"")) @TO@ assertTrue("Wrong header: " + header,header.contains("Basic realm")) @AT@ 3142 @LENGTH@ 82
------UPD SimpleName@@MethodName:assertTrue:["Wrong header: " + header, header.contains("error=\"invalid_client\"")] @TO@ MethodName:assertTrue:["Wrong header: " + header, header.contains("Basic realm")] @AT@ 3142 @LENGTH@ 82
---------UPD MethodInvocation@@header.contains("error=\"invalid_client\"") @TO@ header.contains("Basic realm") @AT@ 3180 @LENGTH@ 43
------------UPD SimpleName@@MethodName:contains:["error=\"invalid_client\""] @TO@ MethodName:contains:["Basic realm"] @AT@ 3187 @LENGTH@ 36
---------------UPD StringLiteral@@"error=\"invalid_client\"" @TO@ "Basic realm" @AT@ 3196 @LENGTH@ 26


UPD MethodDeclaration@@public, InstanceFactory<T>, T, MethodName:createInstanceFactory, final Class<T> clazz,  @TO@ public, InstanceFactory<T>, T, MethodName:createInstanceFactory, final Class<T> clazz, NoSuchMethodException,  @AT@ 46863 @LENGTH@ 604
---INS SimpleType@@NoSuchMethodException @TO@ MethodDeclaration@@public, InstanceFactory<T>, T, MethodName:createInstanceFactory, final Class<T> clazz,  @AT@ 46944 @LENGTH@ 21
---DEL TryStatement@@try {  final ComponentRegistry.ComponentManagedReferenceFactory component=componentRegistry.getComponentsByClass().get(clazz);  if (component == null) {    return new ConstructorInstanceFactory<>(clazz.getDeclaredConstructor());  } else {    return new ManagedReferenceInstanceFactory<>(component);  }} catch (NoSuchMethodException e) {  throw new RuntimeException(e);} @AT@ 46951 @LENGTH@ 506
------DEL CatchClause@@catch (NoSuchMethodException e) {  throw new RuntimeException(e);} @AT@ 47363 @LENGTH@ 94
---------DEL SingleVariableDeclaration@@NoSuchMethodException e @AT@ 47370 @LENGTH@ 23
------------DEL SimpleType@@NoSuchMethodException @AT@ 47370 @LENGTH@ 21
------------DEL SimpleName@@e @AT@ 47392 @LENGTH@ 1
---------DEL ThrowStatement@@ClassInstanceCreation:new RuntimeException(e) @AT@ 47413 @LENGTH@ 30
------------DEL ClassInstanceCreation@@RuntimeException[e] @AT@ 47419 @LENGTH@ 23
---------------DEL New@@new @AT@ 47419 @LENGTH@ 3
---------------DEL SimpleType@@RuntimeException @AT@ 47423 @LENGTH@ 16
---------------DEL SimpleName@@e @AT@ 47440 @LENGTH@ 1
---MOV VariableDeclarationStatement@@final ComponentRegistry.ComponentManagedReferenceFactory component=componentRegistry.getComponentsByClass().get(clazz); @TO@ MethodDeclaration@@public, InstanceFactory<T>, T, MethodName:createInstanceFactory, final Class<T> clazz,  @AT@ 46973 @LENGTH@ 121
---MOV IfStatement@@if (component == null) {  return new ConstructorInstanceFactory<>(clazz.getDeclaredConstructor());} else {  return new ManagedReferenceInstanceFactory<>(component);} @TO@ MethodDeclaration@@public, InstanceFactory<T>, T, MethodName:createInstanceFactory, final Class<T> clazz,  @AT@ 47111 @LENGTH@ 237


UPD ReturnStatement@@NullLiteral:null @TO@ ClassInstanceCreation:new Base64DataFormat() @AT@ 1448 @LENGTH@ 12
---INS ClassInstanceCreation@@Base64DataFormat[] @TO@ ReturnStatement@@NullLiteral:null @AT@ 1413 @LENGTH@ 22
------INS New@@new @TO@ ClassInstanceCreation@@Base64DataFormat[] @AT@ 1413 @LENGTH@ 3
------INS SimpleType@@Base64DataFormat @TO@ ClassInstanceCreation@@Base64DataFormat[] @AT@ 1417 @LENGTH@ 16
---DEL NullLiteral@@null @AT@ 1455 @LENGTH@ 4


INS IfStatement@@if (order.isIgnoreCase()) {  property=builder.getString(order.getProperty()).lower();} @TO@ MethodDeclaration@@private, OrderSpecifier<?>, MethodName:toOrder, Order order,  @AT@ 3836 @LENGTH@ 93
---INS MethodInvocation@@order.isIgnoreCase() @TO@ IfStatement@@if (order.isIgnoreCase()) {  property=builder.getString(order.getProperty()).lower();} @AT@ 3840 @LENGTH@ 20
------INS SimpleName@@Name:order @TO@ MethodInvocation@@order.isIgnoreCase() @AT@ 3840 @LENGTH@ 5
------INS SimpleName@@MethodName:isIgnoreCase:[] @TO@ MethodInvocation@@order.isIgnoreCase() @AT@ 3846 @LENGTH@ 14
---INS Block@@ThenBody:{  property=builder.getString(order.getProperty()).lower();} @TO@ IfStatement@@if (order.isIgnoreCase()) {  property=builder.getString(order.getProperty()).lower();} @AT@ 3862 @LENGTH@ 67
------INS ExpressionStatement@@Assignment:property=builder.getString(order.getProperty()).lower() @TO@ Block@@ThenBody:{  property=builder.getString(order.getProperty()).lower();} @AT@ 3867 @LENGTH@ 58
---------INS Assignment@@property=builder.getString(order.getProperty()).lower() @TO@ ExpressionStatement@@Assignment:property=builder.getString(order.getProperty()).lower() @AT@ 3867 @LENGTH@ 57
------------INS SimpleName@@property @TO@ Assignment@@property=builder.getString(order.getProperty()).lower() @AT@ 3867 @LENGTH@ 8
------------INS Operator@@= @TO@ Assignment@@property=builder.getString(order.getProperty()).lower() @AT@ 3875 @LENGTH@ 1
------------INS MethodInvocation@@builder.getString(order.getProperty()).lower() @TO@ Assignment@@property=builder.getString(order.getProperty()).lower() @AT@ 3878 @LENGTH@ 46
---------------INS MethodInvocation@@MethodName:getString:[order.getProperty()] @TO@ MethodInvocation@@builder.getString(order.getProperty()).lower() @AT@ 3878 @LENGTH@ 38
------------------INS MethodInvocation@@order.getProperty() @TO@ MethodInvocation@@MethodName:getString:[order.getProperty()] @AT@ 3896 @LENGTH@ 19
---------------------INS SimpleName@@Name:order @TO@ MethodInvocation@@order.getProperty() @AT@ 3896 @LENGTH@ 5
---------------------INS SimpleName@@MethodName:getProperty:[] @TO@ MethodInvocation@@order.getProperty() @AT@ 3902 @LENGTH@ 13
---------------INS SimpleName@@Name:builder @TO@ MethodInvocation@@builder.getString(order.getProperty()).lower() @AT@ 3878 @LENGTH@ 7
---------------INS SimpleName@@MethodName:lower:[] @TO@ MethodInvocation@@builder.getString(order.getProperty()).lower() @AT@ 3917 @LENGTH@ 7


INS MethodDeclaration@@public, void, MethodName:testZRevRangeByScoreOffsetCount,  @TO@ TypeDeclaration@@[@RunWith(SpringJUnit4ClassRunner.class), @ContextConfiguration, public]SrpConnectionIntegrationTests, AbstractConnectionIntegrationTests @AT@ 2709 @LENGTH@ 50
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testZRevRangeByScoreOffsetCount,  @AT@ 2709 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testZRevRangeByScoreOffsetCount,  @AT@ 2716 @LENGTH@ 4
---INS SimpleName@@MethodName:testZRevRangeByScoreOffsetCount @TO@ MethodDeclaration@@public, void, MethodName:testZRevRangeByScoreOffsetCount,  @AT@ 2721 @LENGTH@ 31


MOV MethodDeclaration@@private, voidMethodName:JMSBridgeWriteAttributeHandler,  @TO@ TypeDeclaration@@[public]JMSBridgeWriteAttributeHandler, ReloadRequiredWriteAttributeHandler @AT@ 1873 @LENGTH@ 75


UPD ExpressionStatement@@Assignment:treeCache=new TreeCache(curator,ZkPath.CONFIGS.getPath(),true) @TO@ Assignment:treeCache=new TreeCache(curator,ZkPath.CONFIGS.getPath(),true,true) @AT@ 4731 @LENGTH@ 67
---UPD Assignment@@treeCache=new TreeCache(curator,ZkPath.CONFIGS.getPath(),true) @TO@ treeCache=new TreeCache(curator,ZkPath.CONFIGS.getPath(),true,true) @AT@ 4731 @LENGTH@ 66
------UPD ClassInstanceCreation@@TreeCache[curator, ZkPath.CONFIGS.getPath(), true] @TO@ TreeCache[curator, ZkPath.CONFIGS.getPath(), true, true] @AT@ 4743 @LENGTH@ 54
---------INS BooleanLiteral@@true @TO@ ClassInstanceCreation@@TreeCache[curator, ZkPath.CONFIGS.getPath(), true] @AT@ 4798 @LENGTH@ 4


UPD TryStatement@@try {  byte[] encoded=zk.getData(ZkPath.CONTAINER_METADATA.getPath(containerId));  byte[] decoded=Base64Encoder.decode(encoded);  ObjectInputStream ois=new ObjectInputStream(new ByteArrayInputStream(decoded));  return (CreateContainerMetadata)ois.readObject();} catch (Exception e) {  throw new FabricException(e);} @TO@ try {  byte[] encoded=zk.getData(ZkPath.CONTAINER_METADATA.getPath(containerId));  byte[] decoded=Base64Encoder.decode(encoded);  ObjectInputStream ois=new ObjectInputStream(new ByteArrayInputStream(decoded));  return (CreateContainerMetadata)ois.readObject();} catch (KeeperException.NoNodeException e) {  return null;}catch (Exception e) {  throw new FabricException(e);} @AT@ 9044 @LENGTH@ 395
---INS CatchClause@@catch (KeeperException.NoNodeException e) {  return null;} @TO@ TryStatement@@try {  byte[] encoded=zk.getData(ZkPath.CONTAINER_METADATA.getPath(containerId));  byte[] decoded=Base64Encoder.decode(encoded);  ObjectInputStream ois=new ObjectInputStream(new ByteArrayInputStream(decoded));  return (CreateContainerMetadata)ois.readObject();} catch (Exception e) {  throw new FabricException(e);} @AT@ 9366 @LENGTH@ 78
------INS SingleVariableDeclaration@@KeeperException.NoNodeException e @TO@ CatchClause@@catch (KeeperException.NoNodeException e) {  return null;} @AT@ 9373 @LENGTH@ 33
---------INS SimpleType@@KeeperException.NoNodeException @TO@ SingleVariableDeclaration@@KeeperException.NoNodeException e @AT@ 9373 @LENGTH@ 31
---------INS SimpleName@@e @TO@ SingleVariableDeclaration@@KeeperException.NoNodeException e @AT@ 9405 @LENGTH@ 1
------INS ReturnStatement@@NullLiteral:null @TO@ CatchClause@@catch (KeeperException.NoNodeException e) {  return null;} @AT@ 9422 @LENGTH@ 12
---------INS NullLiteral@@null @TO@ ReturnStatement@@NullLiteral:null @AT@ 9429 @LENGTH@ 4


UPD MethodDeclaration@@public, ResponseEntity<?>, MethodName:deleteEntity, final RepositoryRestRequest repoRequest, @PathVariable final String id, ResourceNotFoundException,  @TO@ public, ResponseEntity<?>, MethodName:deleteEntity, final RepositoryRestRequest repoRequest, @PathVariable final String id, ResourceNotFoundException, HttpRequestMethodNotSupportedException,  @AT@ 13235 @LENGTH@ 1941
---INS SimpleType@@HttpRequestMethodNotSupportedException @TO@ MethodDeclaration@@public, ResponseEntity<?>, MethodName:deleteEntity, final RepositoryRestRequest repoRequest, @PathVariable final String id, ResourceNotFoundException,  @AT@ 13492 @LENGTH@ 38
---UPD IfStatement@@if (null == repoMethodInvoker || (!repoMethodInvoker.hasFindOne() && !(repoMethodInvoker.hasDeleteOne() || repoMethodInvoker.hasDeleteOneById()))) {  throw new NoSuchMethodError();} @TO@ if (null == repoMethodInvoker || (!repoMethodInvoker.hasFindOne() && !(repoMethodInvoker.hasDeleteOne() || repoMethodInvoker.hasDeleteOneById()))) {  throw new HttpRequestMethodNotSupportedException("DELETE");} @AT@ 13518 @LENGTH@ 189
------UPD Block@@ThenBody:{  throw new NoSuchMethodError();} @TO@ ThenBody:{  throw new HttpRequestMethodNotSupportedException("DELETE");} @AT@ 13668 @LENGTH@ 39
---------UPD ThrowStatement@@ClassInstanceCreation:new NoSuchMethodError() @TO@ ClassInstanceCreation:new HttpRequestMethodNotSupportedException("DELETE") @AT@ 13673 @LENGTH@ 30
------------UPD ClassInstanceCreation@@NoSuchMethodError[] @TO@ HttpRequestMethodNotSupportedException["DELETE"] @AT@ 13679 @LENGTH@ 23
---------------UPD SimpleType@@NoSuchMethodError @TO@ HttpRequestMethodNotSupportedException @AT@ 13683 @LENGTH@ 17
---------------INS StringLiteral@@"DELETE" @TO@ ClassInstanceCreation@@NoSuchMethodError[] @AT@ 13833 @LENGTH@ 8
---INS VariableDeclarationStatement@@ResourceMapping methodMapping=repoRequest.getRepositoryResourceMapping().getResourceMappingFor("delete"); @TO@ MethodDeclaration@@public, ResponseEntity<?>, MethodName:deleteEntity, final RepositoryRestRequest repoRequest, @PathVariable final String id, ResourceNotFoundException,  @AT@ 13850 @LENGTH@ 107
------INS SimpleType@@ResourceMapping @TO@ VariableDeclarationStatement@@ResourceMapping methodMapping=repoRequest.getRepositoryResourceMapping().getResourceMappingFor("delete"); @AT@ 13850 @LENGTH@ 15
------INS VariableDeclarationFragment@@methodMapping=repoRequest.getRepositoryResourceMapping().getResourceMappingFor("delete") @TO@ VariableDeclarationStatement@@ResourceMapping methodMapping=repoRequest.getRepositoryResourceMapping().getResourceMappingFor("delete"); @AT@ 13866 @LENGTH@ 90
---------INS SimpleName@@methodMapping @TO@ VariableDeclarationFragment@@methodMapping=repoRequest.getRepositoryResourceMapping().getResourceMappingFor("delete") @AT@ 13866 @LENGTH@ 13
---------INS MethodInvocation@@repoRequest.getRepositoryResourceMapping().getResourceMappingFor("delete") @TO@ VariableDeclarationFragment@@methodMapping=repoRequest.getRepositoryResourceMapping().getResourceMappingFor("delete") @AT@ 13882 @LENGTH@ 74
------------INS MethodInvocation@@MethodName:getRepositoryResourceMapping:[] @TO@ MethodInvocation@@repoRequest.getRepositoryResourceMapping().getResourceMappingFor("delete") @AT@ 13882 @LENGTH@ 42
------------INS SimpleName@@Name:repoRequest @TO@ MethodInvocation@@repoRequest.getRepositoryResourceMapping().getResourceMappingFor("delete") @AT@ 13882 @LENGTH@ 11
------------INS SimpleName@@MethodName:getResourceMappingFor:["delete"] @TO@ MethodInvocation@@repoRequest.getRepositoryResourceMapping().getResourceMappingFor("delete") @AT@ 13925 @LENGTH@ 31
---------------INS StringLiteral@@"delete" @TO@ SimpleName@@MethodName:getResourceMappingFor:["delete"] @AT@ 13947 @LENGTH@ 8
---INS IfStatement@@if (null != methodMapping && !methodMapping.isExported()) {  throw new HttpRequestMethodNotSupportedException("DELETE");} @TO@ MethodDeclaration@@public, ResponseEntity<?>, MethodName:deleteEntity, final RepositoryRestRequest repoRequest, @PathVariable final String id, ResourceNotFoundException,  @AT@ 13960 @LENGTH@ 125
------INS InfixExpression@@null != methodMapping && !methodMapping.isExported() @TO@ IfStatement@@if (null != methodMapping && !methodMapping.isExported()) {  throw new HttpRequestMethodNotSupportedException("DELETE");} @AT@ 13963 @LENGTH@ 52
---------INS InfixExpression@@null != methodMapping @TO@ InfixExpression@@null != methodMapping && !methodMapping.isExported() @AT@ 13963 @LENGTH@ 21
------------INS NullLiteral@@null @TO@ InfixExpression@@null != methodMapping @AT@ 13963 @LENGTH@ 4
------------INS Operator@@!= @TO@ InfixExpression@@null != methodMapping @AT@ 13967 @LENGTH@ 2
------------INS SimpleName@@methodMapping @TO@ InfixExpression@@null != methodMapping @AT@ 13971 @LENGTH@ 13
---------INS Operator@@&& @TO@ InfixExpression@@null != methodMapping && !methodMapping.isExported() @AT@ 13984 @LENGTH@ 2
---------INS PrefixExpression@@!methodMapping.isExported() @TO@ InfixExpression@@null != methodMapping && !methodMapping.isExported() @AT@ 13988 @LENGTH@ 27
------------INS Operator@@! @TO@ PrefixExpression@@!methodMapping.isExported() @AT@ 13988 @LENGTH@ 1
------------INS MethodInvocation@@methodMapping.isExported() @TO@ PrefixExpression@@!methodMapping.isExported() @AT@ 13989 @LENGTH@ 26
---------------INS SimpleName@@Name:methodMapping @TO@ MethodInvocation@@methodMapping.isExported() @AT@ 13989 @LENGTH@ 13
---------------INS SimpleName@@MethodName:isExported:[] @TO@ MethodInvocation@@methodMapping.isExported() @AT@ 14003 @LENGTH@ 12
------INS Block@@ThenBody:{  throw new HttpRequestMethodNotSupportedException("DELETE");} @TO@ IfStatement@@if (null != methodMapping && !methodMapping.isExported()) {  throw new HttpRequestMethodNotSupportedException("DELETE");} @AT@ 14017 @LENGTH@ 68
---------INS ThrowStatement@@ClassInstanceCreation:new HttpRequestMethodNotSupportedException("DELETE") @TO@ Block@@ThenBody:{  throw new HttpRequestMethodNotSupportedException("DELETE");} @AT@ 14022 @LENGTH@ 59
------------INS ClassInstanceCreation@@HttpRequestMethodNotSupportedException["DELETE"] @TO@ ThrowStatement@@ClassInstanceCreation:new HttpRequestMethodNotSupportedException("DELETE") @AT@ 14028 @LENGTH@ 52
---------------INS New@@new @TO@ ClassInstanceCreation@@HttpRequestMethodNotSupportedException["DELETE"] @AT@ 14028 @LENGTH@ 3
---------------INS SimpleType@@HttpRequestMethodNotSupportedException @TO@ ClassInstanceCreation@@HttpRequestMethodNotSupportedException["DELETE"] @AT@ 14032 @LENGTH@ 38
---------------INS StringLiteral@@"DELETE" @TO@ ClassInstanceCreation@@HttpRequestMethodNotSupportedException["DELETE"] @AT@ 14071 @LENGTH@ 8


UPD TryStatement@@try {  Thread.sleep(5000);  if (managementClient.isServerInRunningState()) {    reloaded=true;  }} catch (Throwable t) {} finally {  if (!reloaded && i++ > 10) {    throw new Exception("Server reloading failed");  }} @TO@ try {  Thread.sleep(2000);  if (managementClient.isServerInRunningState()) {    reloaded=true;  }} catch (Throwable t) {} finally {  if (!reloaded && i++ > 20) {    throw new Exception("Server reloading failed");  }} @AT@ 8077 @LENGTH@ 413
---UPD ExpressionStatement@@MethodInvocation:Thread.sleep(5000) @TO@ MethodInvocation:Thread.sleep(2000) @AT@ 8099 @LENGTH@ 19
------UPD MethodInvocation@@Thread.sleep(5000) @TO@ Thread.sleep(2000) @AT@ 8099 @LENGTH@ 18
---------UPD SimpleName@@MethodName:sleep:[5000] @TO@ MethodName:sleep:[2000] @AT@ 8106 @LENGTH@ 11
------------UPD NumberLiteral@@5000 @TO@ 2000 @AT@ 8112 @LENGTH@ 4
---UPD Block@@FinallyBody:{  if (!reloaded && i++ > 10) {    throw new Exception("Server reloading failed");  }} @TO@ FinallyBody:{  if (!reloaded && i++ > 20) {    throw new Exception("Server reloading failed");  }} @AT@ 8344 @LENGTH@ 146
------UPD IfStatement@@if (!reloaded && i++ > 10) {  throw new Exception("Server reloading failed");} @TO@ if (!reloaded && i++ > 20) {  throw new Exception("Server reloading failed");} @AT@ 8362 @LENGTH@ 114
---------UPD InfixExpression@@!reloaded && i++ > 10 @TO@ !reloaded && i++ > 20 @AT@ 8366 @LENGTH@ 21
------------UPD InfixExpression@@i++ > 10 @TO@ i++ > 20 @AT@ 8379 @LENGTH@ 8
---------------UPD NumberLiteral@@10 @TO@ 20 @AT@ 8385 @LENGTH@ 2


UPD ExpressionStatement@@MethodInvocation:selectManager.getComponent().getTransactionManager().getTransaction().registerSynchronization(new Synchronization(){
  public void beforeCompletion(){
    closeResources();
  }
  public void afterCompletion(  int status){
    closeResources();
  }
}
) @TO@ MethodInvocation:selectManager.getComponent().getTransactionSynchronizationRegistry().registerInterposedSynchronization(new Synchronization(){
  public void beforeCompletion(){
    closeResources();
  }
  public void afterCompletion(  int status){
    closeResources();
  }
}
) @AT@ 31207 @LENGTH@ 437
---UPD MethodInvocation@@selectManager.getComponent().getTransactionManager().getTransaction().registerSynchronization(new Synchronization(){
  public void beforeCompletion(){
    closeResources();
  }
  public void afterCompletion(  int status){
    closeResources();
  }
}
) @TO@ selectManager.getComponent().getTransactionSynchronizationRegistry().registerInterposedSynchronization(new Synchronization(){
  public void beforeCompletion(){
    closeResources();
  }
  public void afterCompletion(  int status){
    closeResources();
  }
}
) @AT@ 31207 @LENGTH@ 436
------UPD MethodInvocation@@MethodName:getTransaction:[] @TO@ MethodName:getTransactionSynchronizationRegistry:[] @AT@ 31207 @LENGTH@ 69
------DEL MethodInvocation@@MethodName:getTransactionManager:[] @AT@ 31207 @LENGTH@ 52
------UPD SimpleName@@MethodName:registerSynchronization:[new Synchronization(){
  public void beforeCompletion(){
    closeResources();
  }
  public void afterCompletion(  int status){
    closeResources();
  }
}
] @TO@ MethodName:registerInterposedSynchronization:[new Synchronization(){
  public void beforeCompletion(){
    closeResources();
  }
  public void afterCompletion(  int status){
    closeResources();
  }
}
] @AT@ 31277 @LENGTH@ 366


UPD MethodDeclaration@@public, synchronized, boolean, MethodName:isCached, final Object key,  @TO@ public, synchronized, boolean, MethodName:containsNotRemoved, final Object key,  @AT@ 2740 @LENGTH@ 242
---UPD SimpleName@@MethodName:isCached @TO@ MethodName:containsNotRemoved @AT@ 2768 @LENGTH@ 8
---UPD IfStatement@@if (cache.containsKey(key)) {  final CacheEntry cacheEntry=cache.get(key);  return !cacheEntry.instance.isRemoved();} @TO@ if (cache.containsKey(key)) {  final CacheEntry cacheEntry=cache.get(key);  if (cacheEntry.replacedInstance != null) {    return !cacheEntry.replacedInstance.isRemoved();  } else {    return !cacheEntry.instance.isRemoved();  }} @AT@ 2805 @LENGTH@ 149
------UPD Block@@ThenBody:{  final CacheEntry cacheEntry=cache.get(key);  return !cacheEntry.instance.isRemoved();} @TO@ ThenBody:{  final CacheEntry cacheEntry=cache.get(key);  if (cacheEntry.replacedInstance != null) {    return !cacheEntry.replacedInstance.isRemoved();  } else {    return !cacheEntry.instance.isRemoved();  }} @AT@ 2832 @LENGTH@ 122
---------INS IfStatement@@if (cacheEntry.replacedInstance != null) {  return !cacheEntry.replacedInstance.isRemoved();} else {  return !cacheEntry.instance.isRemoved();} @TO@ Block@@ThenBody:{  final CacheEntry cacheEntry=cache.get(key);  return !cacheEntry.instance.isRemoved();} @AT@ 2914 @LENGTH@ 199
------------INS InfixExpression@@cacheEntry.replacedInstance != null @TO@ IfStatement@@if (cacheEntry.replacedInstance != null) {  return !cacheEntry.replacedInstance.isRemoved();} else {  return !cacheEntry.instance.isRemoved();} @AT@ 2918 @LENGTH@ 35
---------------INS QualifiedName@@cacheEntry.replacedInstance @TO@ InfixExpression@@cacheEntry.replacedInstance != null @AT@ 2918 @LENGTH@ 27
------------------INS SimpleName@@cacheEntry @TO@ QualifiedName@@cacheEntry.replacedInstance @AT@ 2918 @LENGTH@ 10
------------------INS SimpleName@@replacedInstance @TO@ QualifiedName@@cacheEntry.replacedInstance @AT@ 2929 @LENGTH@ 16
---------------INS Operator@@!= @TO@ InfixExpression@@cacheEntry.replacedInstance != null @AT@ 2945 @LENGTH@ 2
---------------INS NullLiteral@@null @TO@ InfixExpression@@cacheEntry.replacedInstance != null @AT@ 2949 @LENGTH@ 4
------------INS Block@@ThenBody:{  return !cacheEntry.replacedInstance.isRemoved();} @TO@ IfStatement@@if (cacheEntry.replacedInstance != null) {  return !cacheEntry.replacedInstance.isRemoved();} else {  return !cacheEntry.instance.isRemoved();} @AT@ 2955 @LENGTH@ 80
---------------INS ReturnStatement@@PrefixExpression:!cacheEntry.replacedInstance.isRemoved() @TO@ Block@@ThenBody:{  return !cacheEntry.replacedInstance.isRemoved();} @AT@ 2973 @LENGTH@ 48
------------------INS PrefixExpression@@!cacheEntry.replacedInstance.isRemoved() @TO@ ReturnStatement@@PrefixExpression:!cacheEntry.replacedInstance.isRemoved() @AT@ 2980 @LENGTH@ 40
---------------------INS Operator@@! @TO@ PrefixExpression@@!cacheEntry.replacedInstance.isRemoved() @AT@ 2980 @LENGTH@ 1
---------------------INS MethodInvocation@@cacheEntry.replacedInstance.isRemoved() @TO@ PrefixExpression@@!cacheEntry.replacedInstance.isRemoved() @AT@ 2981 @LENGTH@ 39
------------------------INS QualifiedName@@Name:cacheEntry.replacedInstance @TO@ MethodInvocation@@cacheEntry.replacedInstance.isRemoved() @AT@ 2981 @LENGTH@ 27
------------------------INS SimpleName@@MethodName:isRemoved:[] @TO@ MethodInvocation@@cacheEntry.replacedInstance.isRemoved() @AT@ 3009 @LENGTH@ 11
------------INS Block@@ElseBody:{  return !cacheEntry.instance.isRemoved();} @TO@ IfStatement@@if (cacheEntry.replacedInstance != null) {  return !cacheEntry.replacedInstance.isRemoved();} else {  return !cacheEntry.instance.isRemoved();} @AT@ 3041 @LENGTH@ 72
---------------MOV ReturnStatement@@PrefixExpression:!cacheEntry.instance.isRemoved() @TO@ Block@@ElseBody:{  return !cacheEntry.instance.isRemoved();} @AT@ 2904 @LENGTH@ 40


UPD VariableDeclarationStatement@@final String[][] res={{"one","two","three"},{"",""},{"'","'"},{"'","'"},{"'","'"},{",",","},{"/","/"},{"/","/"},{"   8   ","   \"quoted \"\" \" / string\"   "},{"9","   \n   "}}; @TO@ final String[][] res={{"one","two","three"},{"",""},{"'","'"},{"'","'"},{"'","'"},{",",","},{"/","/"},{"/","/"},{"   8   ","   \"quoted \"\" /\" / string\"   "},{"9","   \n   "}}; @AT@ 11571 @LENGTH@ 504
---UPD VariableDeclarationFragment@@res={{"one","two","three"},{"",""},{"'","'"},{"'","'"},{"'","'"},{",",","},{"/","/"},{"/","/"},{"   8   ","   \"quoted \"\" \" / string\"   "},{"9","   \n   "}} @TO@ res={{"one","two","three"},{"",""},{"'","'"},{"'","'"},{"'","'"},{",",","},{"/","/"},{"/","/"},{"   8   ","   \"quoted \"\" /\" / string\"   "},{"9","   \n   "}} @AT@ 11588 @LENGTH@ 486
------UPD ArrayInitializer@@{{"one","two","three"},{"",""},{"'","'"},{"'","'"},{"'","'"},{",",","},{"/","/"},{"/","/"},{"   8   ","   \"quoted \"\" \" / string\"   "},{"9","   \n   "}} @TO@ {{"one","two","three"},{"",""},{"'","'"},{"'","'"},{"'","'"},{",",","},{"/","/"},{"/","/"},{"   8   ","   \"quoted \"\" /\" / string\"   "},{"9","   \n   "}} @AT@ 11594 @LENGTH@ 480
---------UPD ArrayInitializer@@{"   8   ","   \"quoted \"\" \" / string\"   "} @TO@ {"   8   ","   \"quoted \"\" /\" / string\"   "} @AT@ 11980 @LENGTH@ 48
------------UPD StringLiteral@@"   \"quoted \"\" \" / string\"   " @TO@ "   \"quoted \"\" /\" / string\"   " @AT@ 11992 @LENGTH@ 35


INS MethodDeclaration@@public, void, MethodName:testDeleteOnExitNoRecordsWrittenAfterRestart, Exception,  @TO@ TypeDeclaration@@[public]FlatFileItemWriterTests,  @AT@ 17819 @LENGTH@ 378
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testDeleteOnExitNoRecordsWrittenAfterRestart, Exception,  @AT@ 17819 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testDeleteOnExitNoRecordsWrittenAfterRestart, Exception,  @AT@ 17826 @LENGTH@ 4
---INS SimpleName@@MethodName:testDeleteOnExitNoRecordsWrittenAfterRestart @TO@ MethodDeclaration@@public, void, MethodName:testDeleteOnExitNoRecordsWrittenAfterRestart, Exception,  @AT@ 17831 @LENGTH@ 44
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:testDeleteOnExitNoRecordsWrittenAfterRestart, Exception,  @AT@ 17885 @LENGTH@ 9
---INS ExpressionStatement@@MethodInvocation:writer.setShouldDeleteIfEmpty(true) @TO@ MethodDeclaration@@public, void, MethodName:testDeleteOnExitNoRecordsWrittenAfterRestart, Exception,  @AT@ 17899 @LENGTH@ 36
------INS MethodInvocation@@writer.setShouldDeleteIfEmpty(true) @TO@ ExpressionStatement@@MethodInvocation:writer.setShouldDeleteIfEmpty(true) @AT@ 17899 @LENGTH@ 35
---------INS SimpleName@@Name:writer @TO@ MethodInvocation@@writer.setShouldDeleteIfEmpty(true) @AT@ 17899 @LENGTH@ 6
---------INS SimpleName@@MethodName:setShouldDeleteIfEmpty:[true] @TO@ MethodInvocation@@writer.setShouldDeleteIfEmpty(true) @AT@ 17906 @LENGTH@ 28
------------INS BooleanLiteral@@true @TO@ SimpleName@@MethodName:setShouldDeleteIfEmpty:[true] @AT@ 17929 @LENGTH@ 4
---INS ExpressionStatement@@MethodInvocation:writer.open(executionContext) @TO@ MethodDeclaration@@public, void, MethodName:testDeleteOnExitNoRecordsWrittenAfterRestart, Exception,  @AT@ 17938 @LENGTH@ 30
------INS MethodInvocation@@writer.open(executionContext) @TO@ ExpressionStatement@@MethodInvocation:writer.open(executionContext) @AT@ 17938 @LENGTH@ 29
---------INS SimpleName@@Name:writer @TO@ MethodInvocation@@writer.open(executionContext) @AT@ 17938 @LENGTH@ 6
---------INS SimpleName@@MethodName:open:[executionContext] @TO@ MethodInvocation@@writer.open(executionContext) @AT@ 17945 @LENGTH@ 22
------------INS SimpleName@@executionContext @TO@ SimpleName@@MethodName:open:[executionContext] @AT@ 17950 @LENGTH@ 16
---INS ExpressionStatement@@MethodInvocation:writer.write(Collections.singletonList("test2")) @TO@ MethodDeclaration@@public, void, MethodName:testDeleteOnExitNoRecordsWrittenAfterRestart, Exception,  @AT@ 17971 @LENGTH@ 49
------INS MethodInvocation@@writer.write(Collections.singletonList("test2")) @TO@ ExpressionStatement@@MethodInvocation:writer.write(Collections.singletonList("test2")) @AT@ 17971 @LENGTH@ 48
---------INS SimpleName@@Name:writer @TO@ MethodInvocation@@writer.write(Collections.singletonList("test2")) @AT@ 17971 @LENGTH@ 6
---------INS SimpleName@@MethodName:write:[Collections.singletonList("test2")] @TO@ MethodInvocation@@writer.write(Collections.singletonList("test2")) @AT@ 17978 @LENGTH@ 41
------------INS MethodInvocation@@Collections.singletonList("test2") @TO@ SimpleName@@MethodName:write:[Collections.singletonList("test2")] @AT@ 17984 @LENGTH@ 34
---------------INS SimpleName@@Name:Collections @TO@ MethodInvocation@@Collections.singletonList("test2") @AT@ 17984 @LENGTH@ 11
---------------INS SimpleName@@MethodName:singletonList:["test2"] @TO@ MethodInvocation@@Collections.singletonList("test2") @AT@ 17996 @LENGTH@ 22
------------------INS StringLiteral@@"test2" @TO@ SimpleName@@MethodName:singletonList:["test2"] @AT@ 18010 @LENGTH@ 7
---INS ExpressionStatement@@MethodInvocation:writer.update(executionContext) @TO@ MethodDeclaration@@public, void, MethodName:testDeleteOnExitNoRecordsWrittenAfterRestart, Exception,  @AT@ 18023 @LENGTH@ 32
------INS MethodInvocation@@writer.update(executionContext) @TO@ ExpressionStatement@@MethodInvocation:writer.update(executionContext) @AT@ 18023 @LENGTH@ 31
---------INS SimpleName@@Name:writer @TO@ MethodInvocation@@writer.update(executionContext) @AT@ 18023 @LENGTH@ 6
---------INS SimpleName@@MethodName:update:[executionContext] @TO@ MethodInvocation@@writer.update(executionContext) @AT@ 18030 @LENGTH@ 24
------------INS SimpleName@@executionContext @TO@ SimpleName@@MethodName:update:[executionContext] @AT@ 18037 @LENGTH@ 16
---INS ExpressionStatement@@MethodInvocation:writer.close() @TO@ MethodDeclaration@@public, void, MethodName:testDeleteOnExitNoRecordsWrittenAfterRestart, Exception,  @AT@ 18058 @LENGTH@ 15
------INS MethodInvocation@@writer.close() @TO@ ExpressionStatement@@MethodInvocation:writer.close() @AT@ 18058 @LENGTH@ 14
---------INS SimpleName@@Name:writer @TO@ MethodInvocation@@writer.close() @AT@ 18058 @LENGTH@ 6
---------INS SimpleName@@MethodName:close:[] @TO@ MethodInvocation@@writer.close() @AT@ 18065 @LENGTH@ 7
---INS ExpressionStatement@@MethodInvocation:assertTrue(outputFile.exists()) @TO@ MethodDeclaration@@public, void, MethodName:testDeleteOnExitNoRecordsWrittenAfterRestart, Exception,  @AT@ 18076 @LENGTH@ 32
------INS MethodInvocation@@assertTrue(outputFile.exists()) @TO@ ExpressionStatement@@MethodInvocation:assertTrue(outputFile.exists()) @AT@ 18076 @LENGTH@ 31
---------INS SimpleName@@MethodName:assertTrue:[outputFile.exists()] @TO@ MethodInvocation@@assertTrue(outputFile.exists()) @AT@ 18076 @LENGTH@ 31
------------INS MethodInvocation@@outputFile.exists() @TO@ SimpleName@@MethodName:assertTrue:[outputFile.exists()] @AT@ 18087 @LENGTH@ 19
---------------INS SimpleName@@Name:outputFile @TO@ MethodInvocation@@outputFile.exists() @AT@ 18087 @LENGTH@ 10
---------------INS SimpleName@@MethodName:exists:[] @TO@ MethodInvocation@@outputFile.exists() @AT@ 18098 @LENGTH@ 8
---INS ExpressionStatement@@MethodInvocation:writer.open(executionContext) @TO@ MethodDeclaration@@public, void, MethodName:testDeleteOnExitNoRecordsWrittenAfterRestart, Exception,  @AT@ 18111 @LENGTH@ 30
------INS MethodInvocation@@writer.open(executionContext) @TO@ ExpressionStatement@@MethodInvocation:writer.open(executionContext) @AT@ 18111 @LENGTH@ 29
---------INS SimpleName@@Name:writer @TO@ MethodInvocation@@writer.open(executionContext) @AT@ 18111 @LENGTH@ 6
---------INS SimpleName@@MethodName:open:[executionContext] @TO@ MethodInvocation@@writer.open(executionContext) @AT@ 18118 @LENGTH@ 22
------------INS SimpleName@@executionContext @TO@ SimpleName@@MethodName:open:[executionContext] @AT@ 18123 @LENGTH@ 16
---INS ExpressionStatement@@MethodInvocation:writer.close() @TO@ MethodDeclaration@@public, void, MethodName:testDeleteOnExitNoRecordsWrittenAfterRestart, Exception,  @AT@ 18144 @LENGTH@ 15
------INS MethodInvocation@@writer.close() @TO@ ExpressionStatement@@MethodInvocation:writer.close() @AT@ 18144 @LENGTH@ 14
---------INS SimpleName@@Name:writer @TO@ MethodInvocation@@writer.close() @AT@ 18144 @LENGTH@ 6
---------INS SimpleName@@MethodName:close:[] @TO@ MethodInvocation@@writer.close() @AT@ 18151 @LENGTH@ 7
---INS ExpressionStatement@@MethodInvocation:assertTrue(outputFile.exists()) @TO@ MethodDeclaration@@public, void, MethodName:testDeleteOnExitNoRecordsWrittenAfterRestart, Exception,  @AT@ 18162 @LENGTH@ 32
------INS MethodInvocation@@assertTrue(outputFile.exists()) @TO@ ExpressionStatement@@MethodInvocation:assertTrue(outputFile.exists()) @AT@ 18162 @LENGTH@ 31
---------INS SimpleName@@MethodName:assertTrue:[outputFile.exists()] @TO@ MethodInvocation@@assertTrue(outputFile.exists()) @AT@ 18162 @LENGTH@ 31
------------INS MethodInvocation@@outputFile.exists() @TO@ SimpleName@@MethodName:assertTrue:[outputFile.exists()] @AT@ 18173 @LENGTH@ 19
---------------INS SimpleName@@Name:outputFile @TO@ MethodInvocation@@outputFile.exists() @AT@ 18173 @LENGTH@ 10
---------------INS SimpleName@@MethodName:exists:[] @TO@ MethodInvocation@@outputFile.exists() @AT@ 18184 @LENGTH@ 8


INS MethodDeclaration@@public, void, MethodName:testCopyPreserve, Exception,  @TO@ TypeDeclaration@@[@RunWith(SpringJUnit4ClassRunner.class), @ContextConfiguration, public]DistCpTest,  @AT@ 2708 @LENGTH@ 494
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testCopyPreserve, Exception,  @AT@ 2708 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testCopyPreserve, Exception,  @AT@ 2715 @LENGTH@ 4
---INS SimpleName@@MethodName:testCopyPreserve @TO@ MethodDeclaration@@public, void, MethodName:testCopyPreserve, Exception,  @AT@ 2720 @LENGTH@ 16
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:testCopyPreserve, Exception,  @AT@ 2746 @LENGTH@ 9
---INS VariableDeclarationStatement@@String src=dir + UUID.randomUUID(); @TO@ MethodDeclaration@@public, void, MethodName:testCopyPreserve, Exception,  @AT@ 2760 @LENGTH@ 37
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String src=dir + UUID.randomUUID(); @AT@ 2760 @LENGTH@ 6
------INS VariableDeclarationFragment@@src=dir + UUID.randomUUID() @TO@ VariableDeclarationStatement@@String src=dir + UUID.randomUUID(); @AT@ 2767 @LENGTH@ 29
---------INS SimpleName@@src @TO@ VariableDeclarationFragment@@src=dir + UUID.randomUUID() @AT@ 2767 @LENGTH@ 3
---------INS InfixExpression@@dir + UUID.randomUUID() @TO@ VariableDeclarationFragment@@src=dir + UUID.randomUUID() @AT@ 2773 @LENGTH@ 23
------------INS SimpleName@@dir @TO@ InfixExpression@@dir + UUID.randomUUID() @AT@ 2773 @LENGTH@ 3
------------INS Operator@@+ @TO@ InfixExpression@@dir + UUID.randomUUID() @AT@ 2776 @LENGTH@ 1
------------INS MethodInvocation@@UUID.randomUUID() @TO@ InfixExpression@@dir + UUID.randomUUID() @AT@ 2779 @LENGTH@ 17
---------------INS SimpleName@@Name:UUID @TO@ MethodInvocation@@UUID.randomUUID() @AT@ 2779 @LENGTH@ 4
---------------INS SimpleName@@MethodName:randomUUID:[] @TO@ MethodInvocation@@UUID.randomUUID() @AT@ 2784 @LENGTH@ 12
---INS ExpressionStatement@@MethodInvocation:TestUtils.writeToFS(cfg,src) @TO@ MethodDeclaration@@public, void, MethodName:testCopyPreserve, Exception,  @AT@ 2800 @LENGTH@ 30
------INS MethodInvocation@@TestUtils.writeToFS(cfg,src) @TO@ ExpressionStatement@@MethodInvocation:TestUtils.writeToFS(cfg,src) @AT@ 2800 @LENGTH@ 29
---------INS SimpleName@@Name:TestUtils @TO@ MethodInvocation@@TestUtils.writeToFS(cfg,src) @AT@ 2800 @LENGTH@ 9
---------INS SimpleName@@MethodName:writeToFS:[cfg, src] @TO@ MethodInvocation@@TestUtils.writeToFS(cfg,src) @AT@ 2810 @LENGTH@ 19
------------INS SimpleName@@cfg @TO@ SimpleName@@MethodName:writeToFS:[cfg, src] @AT@ 2820 @LENGTH@ 3
------------INS SimpleName@@src @TO@ SimpleName@@MethodName:writeToFS:[cfg, src] @AT@ 2825 @LENGTH@ 3
---INS VariableDeclarationStatement@@HdfsResourceLoader loader=new HdfsResourceLoader(cfg); @TO@ MethodDeclaration@@public, void, MethodName:testCopyPreserve, Exception,  @AT@ 2834 @LENGTH@ 56
------INS SimpleType@@HdfsResourceLoader @TO@ VariableDeclarationStatement@@HdfsResourceLoader loader=new HdfsResourceLoader(cfg); @AT@ 2834 @LENGTH@ 18
------INS VariableDeclarationFragment@@loader=new HdfsResourceLoader(cfg) @TO@ VariableDeclarationStatement@@HdfsResourceLoader loader=new HdfsResourceLoader(cfg); @AT@ 2853 @LENGTH@ 36
---------INS SimpleName@@loader @TO@ VariableDeclarationFragment@@loader=new HdfsResourceLoader(cfg) @AT@ 2853 @LENGTH@ 6
---------INS ClassInstanceCreation@@HdfsResourceLoader[cfg] @TO@ VariableDeclarationFragment@@loader=new HdfsResourceLoader(cfg) @AT@ 2862 @LENGTH@ 27
------------INS New@@new @TO@ ClassInstanceCreation@@HdfsResourceLoader[cfg] @AT@ 2862 @LENGTH@ 3
------------INS SimpleType@@HdfsResourceLoader @TO@ ClassInstanceCreation@@HdfsResourceLoader[cfg] @AT@ 2866 @LENGTH@ 18
------------INS SimpleName@@cfg @TO@ ClassInstanceCreation@@HdfsResourceLoader[cfg] @AT@ 2885 @LENGTH@ 3
---INS VariableDeclarationStatement@@String srcA=loader.getResource(src).getURI().toString(); @TO@ MethodDeclaration@@public, void, MethodName:testCopyPreserve, Exception,  @AT@ 2894 @LENGTH@ 58
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String srcA=loader.getResource(src).getURI().toString(); @AT@ 2894 @LENGTH@ 6
------INS VariableDeclarationFragment@@srcA=loader.getResource(src).getURI().toString() @TO@ VariableDeclarationStatement@@String srcA=loader.getResource(src).getURI().toString(); @AT@ 2901 @LENGTH@ 50
---------INS SimpleName@@srcA @TO@ VariableDeclarationFragment@@srcA=loader.getResource(src).getURI().toString() @AT@ 2901 @LENGTH@ 4
---------INS MethodInvocation@@loader.getResource(src).getURI().toString() @TO@ VariableDeclarationFragment@@srcA=loader.getResource(src).getURI().toString() @AT@ 2908 @LENGTH@ 43
------------INS MethodInvocation@@MethodName:getURI:[] @TO@ MethodInvocation@@loader.getResource(src).getURI().toString() @AT@ 2908 @LENGTH@ 32
------------INS MethodInvocation@@MethodName:getResource:[src] @TO@ MethodInvocation@@loader.getResource(src).getURI().toString() @AT@ 2908 @LENGTH@ 23
---------------INS SimpleName@@src @TO@ MethodInvocation@@MethodName:getResource:[src] @AT@ 2927 @LENGTH@ 3
------------INS SimpleName@@Name:loader @TO@ MethodInvocation@@loader.getResource(src).getURI().toString() @AT@ 2908 @LENGTH@ 6
------------INS SimpleName@@MethodName:toString:[] @TO@ MethodInvocation@@loader.getResource(src).getURI().toString() @AT@ 2941 @LENGTH@ 10
---INS VariableDeclarationStatement@@String dstA=loader.getResource(dir + "dst/").getURI().toString(); @TO@ MethodDeclaration@@public, void, MethodName:testCopyPreserve, Exception,  @AT@ 2955 @LENGTH@ 67
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String dstA=loader.getResource(dir + "dst/").getURI().toString(); @AT@ 2955 @LENGTH@ 6
------INS VariableDeclarationFragment@@dstA=loader.getResource(dir + "dst/").getURI().toString() @TO@ VariableDeclarationStatement@@String dstA=loader.getResource(dir + "dst/").getURI().toString(); @AT@ 2962 @LENGTH@ 59
---------INS SimpleName@@dstA @TO@ VariableDeclarationFragment@@dstA=loader.getResource(dir + "dst/").getURI().toString() @AT@ 2962 @LENGTH@ 4
---------INS MethodInvocation@@loader.getResource(dir + "dst/").getURI().toString() @TO@ VariableDeclarationFragment@@dstA=loader.getResource(dir + "dst/").getURI().toString() @AT@ 2969 @LENGTH@ 52
------------INS MethodInvocation@@MethodName:getURI:[] @TO@ MethodInvocation@@loader.getResource(dir + "dst/").getURI().toString() @AT@ 2969 @LENGTH@ 41
------------INS MethodInvocation@@MethodName:getResource:[dir + "dst/"] @TO@ MethodInvocation@@loader.getResource(dir + "dst/").getURI().toString() @AT@ 2969 @LENGTH@ 32
---------------INS InfixExpression@@dir + "dst/" @TO@ MethodInvocation@@MethodName:getResource:[dir + "dst/"] @AT@ 2988 @LENGTH@ 12
------------------INS SimpleName@@dir @TO@ InfixExpression@@dir + "dst/" @AT@ 2988 @LENGTH@ 3
------------------INS Operator@@+ @TO@ InfixExpression@@dir + "dst/" @AT@ 2991 @LENGTH@ 1
------------------INS StringLiteral@@"dst/" @TO@ InfixExpression@@dir + "dst/" @AT@ 2994 @LENGTH@ 6
------------INS SimpleName@@Name:loader @TO@ MethodInvocation@@loader.getResource(dir + "dst/").getURI().toString() @AT@ 2969 @LENGTH@ 6
------------INS SimpleName@@MethodName:toString:[] @TO@ MethodInvocation@@loader.getResource(dir + "dst/").getURI().toString() @AT@ 3011 @LENGTH@ 10
---INS ExpressionStatement@@MethodInvocation:loader.close() @TO@ MethodDeclaration@@public, void, MethodName:testCopyPreserve, Exception,  @AT@ 3025 @LENGTH@ 15
------INS MethodInvocation@@loader.close() @TO@ ExpressionStatement@@MethodInvocation:loader.close() @AT@ 3025 @LENGTH@ 14
---------INS SimpleName@@Name:loader @TO@ MethodInvocation@@loader.close() @AT@ 3025 @LENGTH@ 6
---------INS SimpleName@@MethodName:close:[] @TO@ MethodInvocation@@loader.close() @AT@ 3032 @LENGTH@ 7
---INS ExpressionStatement@@MethodInvocation:System.out.println(srcA) @TO@ MethodDeclaration@@public, void, MethodName:testCopyPreserve, Exception,  @AT@ 3044 @LENGTH@ 25
------INS MethodInvocation@@System.out.println(srcA) @TO@ ExpressionStatement@@MethodInvocation:System.out.println(srcA) @AT@ 3044 @LENGTH@ 24
---------INS QualifiedName@@Name:System.out @TO@ MethodInvocation@@System.out.println(srcA) @AT@ 3044 @LENGTH@ 10
---------INS SimpleName@@MethodName:println:[srcA] @TO@ MethodInvocation@@System.out.println(srcA) @AT@ 3055 @LENGTH@ 13
------------INS SimpleName@@srcA @TO@ SimpleName@@MethodName:println:[srcA] @AT@ 3063 @LENGTH@ 4
---INS ExpressionStatement@@MethodInvocation:System.out.println(dstA) @TO@ MethodDeclaration@@public, void, MethodName:testCopyPreserve, Exception,  @AT@ 3072 @LENGTH@ 25
------INS MethodInvocation@@System.out.println(dstA) @TO@ ExpressionStatement@@MethodInvocation:System.out.println(dstA) @AT@ 3072 @LENGTH@ 24
---------INS QualifiedName@@Name:System.out @TO@ MethodInvocation@@System.out.println(dstA) @AT@ 3072 @LENGTH@ 10
---------INS SimpleName@@MethodName:println:[dstA] @TO@ MethodInvocation@@System.out.println(dstA) @AT@ 3083 @LENGTH@ 13
------------INS SimpleName@@dstA @TO@ SimpleName@@MethodName:println:[dstA] @AT@ 3091 @LENGTH@ 4
---INS ExpressionStatement@@MethodInvocation:new DistCp(cfg).copy(EnumSet.allOf(DistCp.Preserve.class),false,true,false,false,srcA,dstA) @TO@ MethodDeclaration@@public, void, MethodName:testCopyPreserve, Exception,  @AT@ 3101 @LENGTH@ 98
------INS MethodInvocation@@new DistCp(cfg).copy(EnumSet.allOf(DistCp.Preserve.class),false,true,false,false,srcA,dstA) @TO@ ExpressionStatement@@MethodInvocation:new DistCp(cfg).copy(EnumSet.allOf(DistCp.Preserve.class),false,true,false,false,srcA,dstA) @AT@ 3101 @LENGTH@ 97
---------INS ClassInstanceCreation@@DistCp[cfg] @TO@ MethodInvocation@@new DistCp(cfg).copy(EnumSet.allOf(DistCp.Preserve.class),false,true,false,false,srcA,dstA) @AT@ 3101 @LENGTH@ 15
------------INS New@@new @TO@ ClassInstanceCreation@@DistCp[cfg] @AT@ 3101 @LENGTH@ 3
------------INS SimpleType@@DistCp @TO@ ClassInstanceCreation@@DistCp[cfg] @AT@ 3105 @LENGTH@ 6
------------INS SimpleName@@cfg @TO@ ClassInstanceCreation@@DistCp[cfg] @AT@ 3112 @LENGTH@ 3
---------INS SimpleName@@MethodName:copy:[EnumSet.allOf(DistCp.Preserve.class), false, true, false, false, srcA, dstA] @TO@ MethodInvocation@@new DistCp(cfg).copy(EnumSet.allOf(DistCp.Preserve.class),false,true,false,false,srcA,dstA) @AT@ 3117 @LENGTH@ 81
------------INS MethodInvocation@@EnumSet.allOf(DistCp.Preserve.class) @TO@ SimpleName@@MethodName:copy:[EnumSet.allOf(DistCp.Preserve.class), false, true, false, false, srcA, dstA] @AT@ 3122 @LENGTH@ 36
---------------INS SimpleName@@Name:EnumSet @TO@ MethodInvocation@@EnumSet.allOf(DistCp.Preserve.class) @AT@ 3122 @LENGTH@ 7
---------------INS SimpleName@@MethodName:allOf:[DistCp.Preserve.class] @TO@ MethodInvocation@@EnumSet.allOf(DistCp.Preserve.class) @AT@ 3130 @LENGTH@ 28
------------------INS TypeLiteral@@DistCp.Preserve.class @TO@ SimpleName@@MethodName:allOf:[DistCp.Preserve.class] @AT@ 3136 @LENGTH@ 21
------------INS BooleanLiteral@@false @TO@ SimpleName@@MethodName:copy:[EnumSet.allOf(DistCp.Preserve.class), false, true, false, false, srcA, dstA] @AT@ 3160 @LENGTH@ 5
------------INS BooleanLiteral@@true @TO@ SimpleName@@MethodName:copy:[EnumSet.allOf(DistCp.Preserve.class), false, true, false, false, srcA, dstA] @AT@ 3167 @LENGTH@ 4
------------INS BooleanLiteral@@false @TO@ SimpleName@@MethodName:copy:[EnumSet.allOf(DistCp.Preserve.class), false, true, false, false, srcA, dstA] @AT@ 3173 @LENGTH@ 5
------------INS BooleanLiteral@@false @TO@ SimpleName@@MethodName:copy:[EnumSet.allOf(DistCp.Preserve.class), false, true, false, false, srcA, dstA] @AT@ 3180 @LENGTH@ 5
------------INS SimpleName@@srcA @TO@ SimpleName@@MethodName:copy:[EnumSet.allOf(DistCp.Preserve.class), false, true, false, false, srcA, dstA] @AT@ 3187 @LENGTH@ 4
------------INS SimpleName@@dstA @TO@ SimpleName@@MethodName:copy:[EnumSet.allOf(DistCp.Preserve.class), false, true, false, false, srcA, dstA] @AT@ 3193 @LENGTH@ 4


UPD ExpressionStatement@@MethodInvocation:addOption(new ParameterOption("pid","persistentId","Sets the ConfigAdmin persistentId","persistentId"){
  protected void doProcess(  String arg,  String parameter,  LinkedList<String> remainingArgs){
    setConfigAdminPid(parameter);
  }
}
) @TO@ MethodInvocation:addOption(new ParameterOption("pid","configAdminPid","Sets the ConfigAdmin persistentId","configAdminPid"){
  protected void doProcess(  String arg,  String parameter,  LinkedList<String> remainingArgs){
    setConfigAdminPid(parameter);
  }
}
) @AT@ 2367 @LENGTH@ 300
---UPD MethodInvocation@@addOption(new ParameterOption("pid","persistentId","Sets the ConfigAdmin persistentId","persistentId"){
  protected void doProcess(  String arg,  String parameter,  LinkedList<String> remainingArgs){
    setConfigAdminPid(parameter);
  }
}
) @TO@ addOption(new ParameterOption("pid","configAdminPid","Sets the ConfigAdmin persistentId","configAdminPid"){
  protected void doProcess(  String arg,  String parameter,  LinkedList<String> remainingArgs){
    setConfigAdminPid(parameter);
  }
}
) @AT@ 2367 @LENGTH@ 299
------UPD SimpleName@@MethodName:addOption:[new ParameterOption("pid","persistentId","Sets the ConfigAdmin persistentId","persistentId"){
  protected void doProcess(  String arg,  String parameter,  LinkedList<String> remainingArgs){
    setConfigAdminPid(parameter);
  }
}
] @TO@ MethodName:addOption:[new ParameterOption("pid","configAdminPid","Sets the ConfigAdmin persistentId","configAdminPid"){
  protected void doProcess(  String arg,  String parameter,  LinkedList<String> remainingArgs){
    setConfigAdminPid(parameter);
  }
}
] @AT@ 2367 @LENGTH@ 299
---------UPD ClassInstanceCreation@@ParameterOption["pid", "persistentId", "Sets the ConfigAdmin persistentId", "persistentId"] @TO@ ParameterOption["pid", "configAdminPid", "Sets the ConfigAdmin persistentId", "configAdminPid"] @AT@ 2377 @LENGTH@ 288
------------UPD StringLiteral@@"persistentId" @TO@ "configAdminPid" @AT@ 2404 @LENGTH@ 14
------------UPD StringLiteral@@"persistentId" @TO@ "configAdminPid" @AT@ 2475 @LENGTH@ 14


DEL ExpressionStatement@@MethodInvocation:mock.await(5,TimeUnit.SECONDS) @AT@ 2297 @LENGTH@ 32
---DEL MethodInvocation@@mock.await(5,TimeUnit.SECONDS) @AT@ 2297 @LENGTH@ 31
------DEL SimpleName@@Name:mock @AT@ 2297 @LENGTH@ 4
------DEL SimpleName@@MethodName:await:[5, TimeUnit.SECONDS] @AT@ 2302 @LENGTH@ 26
---------DEL NumberLiteral@@5 @AT@ 2308 @LENGTH@ 1
---------DEL QualifiedName@@TimeUnit.SECONDS @AT@ 2311 @LENGTH@ 16
------------DEL SimpleName@@TimeUnit @AT@ 2311 @LENGTH@ 8
------------DEL SimpleName@@SECONDS @AT@ 2320 @LENGTH@ 7


UPD IfStatement@@if (super.hasImpliedDecimalPosition()) {  result=result.divide(new BigDecimal(super.getMultiplier()));} @TO@ if (super.hasImpliedDecimalPosition()) {  result=result.divide(new BigDecimal(super.getMultiplier()),super.getPrecision(),RoundingMode.HALF_EVEN);} else {  if (super.getPrecision() != -1) {    result=result.setScale(super.getPrecision());  }} @AT@ 1534 @LENGTH@ 125
---UPD Block@@ThenBody:{  result=result.divide(new BigDecimal(super.getMultiplier()));} @TO@ ThenBody:{  result=result.divide(new BigDecimal(super.getMultiplier()),super.getPrecision(),RoundingMode.HALF_EVEN);} @AT@ 1573 @LENGTH@ 86
------UPD ExpressionStatement@@Assignment:result=result.divide(new BigDecimal(super.getMultiplier())) @TO@ Assignment:result=result.divide(new BigDecimal(super.getMultiplier()),super.getPrecision(),RoundingMode.HALF_EVEN) @AT@ 1587 @LENGTH@ 62
---------UPD Assignment@@result=result.divide(new BigDecimal(super.getMultiplier())) @TO@ result=result.divide(new BigDecimal(super.getMultiplier()),super.getPrecision(),RoundingMode.HALF_EVEN) @AT@ 1587 @LENGTH@ 61
------------UPD MethodInvocation@@result.divide(new BigDecimal(super.getMultiplier())) @TO@ result.divide(new BigDecimal(super.getMultiplier()),super.getPrecision(),RoundingMode.HALF_EVEN) @AT@ 1596 @LENGTH@ 52
---------------UPD SimpleName@@MethodName:divide:[new BigDecimal(super.getMultiplier())] @TO@ MethodName:divide:[new BigDecimal(super.getMultiplier()), super.getPrecision(), RoundingMode.HALF_EVEN] @AT@ 1603 @LENGTH@ 45
------------------INS SuperMethodInvocation@@super.getPrecision() @TO@ SimpleName@@MethodName:divide:[new BigDecimal(super.getMultiplier())] @AT@ 1680 @LENGTH@ 20
---------------------INS SimpleName@@MethodName:getPrecision:[] @TO@ SuperMethodInvocation@@super.getPrecision() @AT@ 1686 @LENGTH@ 12
------------------INS QualifiedName@@RoundingMode.HALF_EVEN @TO@ SimpleName@@MethodName:divide:[new BigDecimal(super.getMultiplier())] @AT@ 1702 @LENGTH@ 22
---------------------INS SimpleName@@RoundingMode @TO@ QualifiedName@@RoundingMode.HALF_EVEN @AT@ 1702 @LENGTH@ 12
---------------------INS SimpleName@@HALF_EVEN @TO@ QualifiedName@@RoundingMode.HALF_EVEN @AT@ 1715 @LENGTH@ 9
---INS Block@@ElseBody:{  if (super.getPrecision() != -1) {    result=result.setScale(super.getPrecision());  }} @TO@ IfStatement@@if (super.hasImpliedDecimalPosition()) {  result=result.divide(new BigDecimal(super.getMultiplier()));} @AT@ 1742 @LENGTH@ 135
------MOV IfStatement@@if (super.getPrecision() != -1) {  result=result.setScale(super.getPrecision());} @TO@ Block@@ElseBody:{  if (super.getPrecision() != -1) {    result=result.setScale(super.getPrecision());  }} @AT@ 1668 @LENGTH@ 103


UPD ThrowStatement@@ClassInstanceCreation:new IllegalStateException("no context to delegate with id: " + operationId) @TO@ MethodInvocation:MESSAGES.noContextToDelegateTo(operationId) @AT@ 7749 @LENGTH@ 82
---DEL ClassInstanceCreation@@IllegalStateException["no context to delegate with id: " + operationId] @AT@ 7755 @LENGTH@ 75
------DEL New@@new @AT@ 7755 @LENGTH@ 3
------DEL SimpleType@@IllegalStateException @AT@ 7759 @LENGTH@ 21
------DEL InfixExpression@@"no context to delegate with id: " + operationId @AT@ 7781 @LENGTH@ 48
---------DEL StringLiteral@@"no context to delegate with id: " @AT@ 7781 @LENGTH@ 34
---------DEL Operator@@+ @AT@ 7815 @LENGTH@ 1
---------DEL SimpleName@@operationId @AT@ 7818 @LENGTH@ 11
---INS MethodInvocation@@MESSAGES.noContextToDelegateTo(operationId) @TO@ ThrowStatement@@ClassInstanceCreation:new IllegalStateException("no context to delegate with id: " + operationId) @AT@ 7755 @LENGTH@ 43
------INS SimpleName@@Name:MESSAGES @TO@ MethodInvocation@@MESSAGES.noContextToDelegateTo(operationId) @AT@ 7755 @LENGTH@ 8
------INS SimpleName@@MethodName:noContextToDelegateTo:[operationId] @TO@ MethodInvocation@@MESSAGES.noContextToDelegateTo(operationId) @AT@ 7764 @LENGTH@ 34
---------INS SimpleName@@operationId @TO@ SimpleName@@MethodName:noContextToDelegateTo:[operationId] @AT@ 7786 @LENGTH@ 11


UPD MethodDeclaration@@String, MethodName:invalidDiscoveryOptionsOrdering, String name,  @TO@ OperationFailedException, MethodName:invalidDiscoveryOptionsOrdering, String name,  @AT@ 29339 @LENGTH@ 45
---UPD SimpleType@@String @TO@ OperationFailedException @AT@ 29332 @LENGTH@ 6


UPD ReturnStatement@@ClassInstanceCreation:new TransformersLogger(getTarget()) @TO@ MethodInvocation:TransformersLogger.getLogger(getTarget()) @AT@ 20447 @LENGTH@ 43
---INS MethodInvocation@@TransformersLogger.getLogger(getTarget()) @TO@ ReturnStatement@@ClassInstanceCreation:new TransformersLogger(getTarget()) @AT@ 20454 @LENGTH@ 41
------INS SimpleName@@Name:TransformersLogger @TO@ MethodInvocation@@TransformersLogger.getLogger(getTarget()) @AT@ 20454 @LENGTH@ 18
------INS SimpleName@@MethodName:getLogger:[getTarget()] @TO@ MethodInvocation@@TransformersLogger.getLogger(getTarget()) @AT@ 20473 @LENGTH@ 22
---------INS MethodInvocation@@MethodName:getTarget:[] @TO@ SimpleName@@MethodName:getLogger:[getTarget()] @AT@ 20483 @LENGTH@ 11
---DEL ClassInstanceCreation@@TransformersLogger[getTarget()] @AT@ 20454 @LENGTH@ 35
------DEL New@@new @AT@ 20454 @LENGTH@ 3
------DEL SimpleType@@TransformersLogger @AT@ 20458 @LENGTH@ 18
------DEL MethodInvocation@@MethodName:getTarget:[] @AT@ 20477 @LENGTH@ 11


UPD ExpressionStatement@@MethodInvocation:foo.expectedMinimumMessageCount(5) @TO@ MethodInvocation:foo.expectedMinimumMessageCount(3) @AT@ 1235 @LENGTH@ 35
---UPD MethodInvocation@@foo.expectedMinimumMessageCount(5) @TO@ foo.expectedMinimumMessageCount(3) @AT@ 1235 @LENGTH@ 34
------UPD SimpleName@@MethodName:expectedMinimumMessageCount:[5] @TO@ MethodName:expectedMinimumMessageCount:[3] @AT@ 1239 @LENGTH@ 30
---------UPD NumberLiteral@@5 @TO@ 3 @AT@ 1267 @LENGTH@ 1


INS FieldDeclaration@@protected, static, final, SimpleAttributeDefinition[], [ATTRIBUTES={TEST,PATTERN,FLAGS}] @TO@ TypeDeclaration@@[public]WebReWriteConditionDefinition, SimpleResourceDefinition @AT@ 2975 @LENGTH@ 89
---INS Modifier@@protected @TO@ FieldDeclaration@@protected, static, final, SimpleAttributeDefinition[], [ATTRIBUTES={TEST,PATTERN,FLAGS}] @AT@ 2975 @LENGTH@ 9
---INS Modifier@@static @TO@ FieldDeclaration@@protected, static, final, SimpleAttributeDefinition[], [ATTRIBUTES={TEST,PATTERN,FLAGS}] @AT@ 2985 @LENGTH@ 6
---INS Modifier@@final @TO@ FieldDeclaration@@protected, static, final, SimpleAttributeDefinition[], [ATTRIBUTES={TEST,PATTERN,FLAGS}] @AT@ 2992 @LENGTH@ 5
---INS ArrayType@@SimpleAttributeDefinition[] @TO@ FieldDeclaration@@protected, static, final, SimpleAttributeDefinition[], [ATTRIBUTES={TEST,PATTERN,FLAGS}] @AT@ 2998 @LENGTH@ 27
------INS SimpleType@@SimpleAttributeDefinition @TO@ ArrayType@@SimpleAttributeDefinition[] @AT@ 2998 @LENGTH@ 25
---INS VariableDeclarationFragment@@ATTRIBUTES={TEST,PATTERN,FLAGS} @TO@ FieldDeclaration@@protected, static, final, SimpleAttributeDefinition[], [ATTRIBUTES={TEST,PATTERN,FLAGS}] @AT@ 3026 @LENGTH@ 37
------INS SimpleName@@ATTRIBUTES @TO@ VariableDeclarationFragment@@ATTRIBUTES={TEST,PATTERN,FLAGS} @AT@ 3026 @LENGTH@ 10
------INS ArrayInitializer@@{TEST,PATTERN,FLAGS} @TO@ VariableDeclarationFragment@@ATTRIBUTES={TEST,PATTERN,FLAGS} @AT@ 3039 @LENGTH@ 24
---------INS SimpleName@@TEST @TO@ ArrayInitializer@@{TEST,PATTERN,FLAGS} @AT@ 3041 @LENGTH@ 4
---------INS SimpleName@@PATTERN @TO@ ArrayInitializer@@{TEST,PATTERN,FLAGS} @AT@ 3047 @LENGTH@ 7
---------INS SimpleName@@FLAGS @TO@ ArrayInitializer@@{TEST,PATTERN,FLAGS} @AT@ 3056 @LENGTH@ 5


UPD ExpressionStatement@@MethodInvocation:builder.setId(entity.getId()).setTimedObjectId(entity.getTimedObjectId()).setInitialDate(entity.getInitialDate()).setRepeatInterval(entity.getInterval()).setNextDate(entity.getNextDate()).setPreviousRun(entity.getPreviousRun()).setInfo(entity.getInfo()).setPrimaryKey(entity.getPreviousRun()).setTimerState(entity.getTimerState()) @TO@ MethodInvocation:builder.setId(entity.getId()).setTimedObjectId(entity.getTimedObjectId()).setInitialDate(entity.getInitialDate()).setRepeatInterval(entity.getInterval()).setNextDate(entity.getNextDate()).setPreviousRun(entity.getPreviousRun()).setInfo(entity.getInfo()).setPrimaryKey(entity.getPrimaryKey()).setTimerState(entity.getTimerState()).setPersistent(true) @AT@ 13757 @LENGTH@ 563
---UPD MethodInvocation@@builder.setId(entity.getId()).setTimedObjectId(entity.getTimedObjectId()).setInitialDate(entity.getInitialDate()).setRepeatInterval(entity.getInterval()).setNextDate(entity.getNextDate()).setPreviousRun(entity.getPreviousRun()).setInfo(entity.getInfo()).setPrimaryKey(entity.getPreviousRun()).setTimerState(entity.getTimerState()) @TO@ builder.setId(entity.getId()).setTimedObjectId(entity.getTimedObjectId()).setInitialDate(entity.getInitialDate()).setRepeatInterval(entity.getInterval()).setNextDate(entity.getNextDate()).setPreviousRun(entity.getPreviousRun()).setInfo(entity.getInfo()).setPrimaryKey(entity.getPrimaryKey()).setTimerState(entity.getTimerState()).setPersistent(true) @AT@ 13757 @LENGTH@ 562
------INS MethodInvocation@@MethodName:setTimerState:[entity.getTimerState()] @TO@ MethodInvocation@@builder.setId(entity.getId()).setTimedObjectId(entity.getTimedObjectId()).setInitialDate(entity.getInitialDate()).setRepeatInterval(entity.getInterval()).setNextDate(entity.getNextDate()).setPreviousRun(entity.getPreviousRun()).setInfo(entity.getInfo()).setPrimaryKey(entity.getPreviousRun()).setTimerState(entity.getTimerState()) @AT@ 13756 @LENGTH@ 561
---------INS MethodInvocation@@entity.getTimerState() @TO@ MethodInvocation@@MethodName:setTimerState:[entity.getTimerState()] @AT@ 14294 @LENGTH@ 22
------------MOV SimpleName@@Name:entity @TO@ MethodInvocation@@entity.getTimerState() @AT@ 14296 @LENGTH@ 6
------------MOV SimpleName@@MethodName:getTimerState:[] @TO@ MethodInvocation@@entity.getTimerState() @AT@ 14303 @LENGTH@ 15
------UPD MethodInvocation@@MethodName:setPrimaryKey:[entity.getPreviousRun()] @TO@ MethodName:setPrimaryKey:[entity.getPrimaryKey()] @AT@ 13757 @LENGTH@ 495
---------UPD MethodInvocation@@entity.getPreviousRun() @TO@ entity.getPrimaryKey() @AT@ 14228 @LENGTH@ 23
------------UPD SimpleName@@MethodName:getPreviousRun:[] @TO@ MethodName:getPrimaryKey:[] @AT@ 14235 @LENGTH@ 16
------DEL SimpleName@@MethodName:setTimerState:[entity.getTimerState()] @AT@ 14282 @LENGTH@ 37
---------DEL MethodInvocation@@entity.getTimerState() @AT@ 14296 @LENGTH@ 22
------INS SimpleName@@MethodName:setPersistent:[true] @TO@ MethodInvocation@@builder.setId(entity.getId()).setTimedObjectId(entity.getTimedObjectId()).setInitialDate(entity.getInitialDate()).setRepeatInterval(entity.getInterval()).setNextDate(entity.getNextDate()).setPreviousRun(entity.getPreviousRun()).setInfo(entity.getInfo()).setPrimaryKey(entity.getPreviousRun()).setTimerState(entity.getTimerState()) @AT@ 14347 @LENGTH@ 19
---------INS BooleanLiteral@@true @TO@ SimpleName@@MethodName:setPersistent:[true] @AT@ 14361 @LENGTH@ 4


MOV WhileStatement@@while (name.endsWith("/")) {  name=name.substring(0,name.length() - 1);} @TO@ MethodDeclaration@@void, MethodName:writePaxHeaders, String entryName, Map<String,String> headers, IOException,  @AT@ 16424 @LENGTH@ 217


UPD ExpressionStatement@@Assignment:source=tc.convertTo(Source.class,body) @TO@ Assignment:source=tc.convertTo(Source.class,exchange,body) @AT@ 11487 @LENGTH@ 42
---UPD Assignment@@source=tc.convertTo(Source.class,body) @TO@ source=tc.convertTo(Source.class,exchange,body) @AT@ 11487 @LENGTH@ 41
------UPD MethodInvocation@@tc.convertTo(Source.class,body) @TO@ tc.convertTo(Source.class,exchange,body) @AT@ 11496 @LENGTH@ 32
---------UPD SimpleName@@MethodName:convertTo:[Source.class, body] @TO@ MethodName:convertTo:[Source.class, exchange, body] @AT@ 11499 @LENGTH@ 29
------------INS SimpleName@@exchange @TO@ SimpleName@@MethodName:convertTo:[Source.class, body] @AT@ 11523 @LENGTH@ 8


INS IfStatement@@if (closed) {  return;} @TO@ MethodDeclaration@@public, void, MethodName:close, IOException,  @AT@ 6741 @LENGTH@ 42
---INS SimpleName@@closed @TO@ IfStatement@@if (closed) {  return;} @AT@ 6744 @LENGTH@ 6
---INS Block@@ThenBody:{  return;} @TO@ IfStatement@@if (closed) {  return;} @AT@ 6752 @LENGTH@ 31
------INS ReturnStatement@@ @TO@ Block@@ThenBody:{  return;} @AT@ 6766 @LENGTH@ 7


INS VariableDeclarationStatement@@Boolean isAlpha=params.isAlphabetic(); @TO@ MethodDeclaration@@static, SortArgs, MethodName:sort, SortParameters params,  @AT@ 3909 @LENGTH@ 40
---INS SimpleType@@Boolean @TO@ VariableDeclarationStatement@@Boolean isAlpha=params.isAlphabetic(); @AT@ 3909 @LENGTH@ 7
---INS VariableDeclarationFragment@@isAlpha=params.isAlphabetic() @TO@ VariableDeclarationStatement@@Boolean isAlpha=params.isAlphabetic(); @AT@ 3917 @LENGTH@ 31
------INS SimpleName@@isAlpha @TO@ VariableDeclarationFragment@@isAlpha=params.isAlphabetic() @AT@ 3917 @LENGTH@ 7
------INS MethodInvocation@@params.isAlphabetic() @TO@ VariableDeclarationFragment@@isAlpha=params.isAlphabetic() @AT@ 3927 @LENGTH@ 21
---------INS SimpleName@@Name:params @TO@ MethodInvocation@@params.isAlphabetic() @AT@ 3927 @LENGTH@ 6
---------INS SimpleName@@MethodName:isAlphabetic:[] @TO@ MethodInvocation@@params.isAlphabetic() @AT@ 3934 @LENGTH@ 14


UPD IfStatement@@if (isPipelined()) {  return Collections.singletonList((Object)asyncConn.exec());} @TO@ if (isPipelined()) {  asyncConn.exec();  return null;} @AT@ 11194 @LENGTH@ 90
---UPD Block@@ThenBody:{  return Collections.singletonList((Object)asyncConn.exec());} @TO@ ThenBody:{  asyncConn.exec();  return null;} @AT@ 11213 @LENGTH@ 71
------DEL ReturnStatement@@MethodInvocation:Collections.singletonList((Object)asyncConn.exec()) @AT@ 11219 @LENGTH@ 60
---------DEL MethodInvocation@@Collections.singletonList((Object)asyncConn.exec()) @AT@ 11226 @LENGTH@ 52
------------DEL SimpleName@@Name:Collections @AT@ 11226 @LENGTH@ 11
------------DEL SimpleName@@MethodName:singletonList:[(Object)asyncConn.exec()] @AT@ 11238 @LENGTH@ 40
---------------DEL CastExpression@@(Object)asyncConn.exec() @AT@ 11252 @LENGTH@ 25
------------------DEL SimpleType@@Object @AT@ 11253 @LENGTH@ 6
------------------DEL MethodInvocation@@asyncConn.exec() @AT@ 11261 @LENGTH@ 16
------INS ExpressionStatement@@MethodInvocation:asyncConn.exec() @TO@ Block@@ThenBody:{  return Collections.singletonList((Object)asyncConn.exec());} @AT@ 11220 @LENGTH@ 17
---------INS MethodInvocation@@asyncConn.exec() @TO@ ExpressionStatement@@MethodInvocation:asyncConn.exec() @AT@ 11220 @LENGTH@ 16
------------MOV SimpleName@@Name:asyncConn @TO@ MethodInvocation@@asyncConn.exec() @AT@ 11261 @LENGTH@ 9
------------MOV SimpleName@@MethodName:exec:[] @TO@ MethodInvocation@@asyncConn.exec() @AT@ 11271 @LENGTH@ 6
------INS ReturnStatement@@NullLiteral:null @TO@ Block@@ThenBody:{  return Collections.singletonList((Object)asyncConn.exec());} @AT@ 11243 @LENGTH@ 12
---------INS NullLiteral@@null @TO@ ReturnStatement@@NullLiteral:null @AT@ 11250 @LENGTH@ 4


INS ExpressionStatement@@MethodInvocation:addSubsystemVersion(map,"jaxr","1.1.0",CORE_MODEL_7_1_2) @TO@ Initializer@@Initializer @AT@ 2677 @LENGTH@ 60
---INS MethodInvocation@@addSubsystemVersion(map,"jaxr","1.1.0",CORE_MODEL_7_1_2) @TO@ ExpressionStatement@@MethodInvocation:addSubsystemVersion(map,"jaxr","1.1.0",CORE_MODEL_7_1_2) @AT@ 2677 @LENGTH@ 59
------INS SimpleName@@MethodName:addSubsystemVersion:[map, "jaxr", "1.1.0", CORE_MODEL_7_1_2] @TO@ MethodInvocation@@addSubsystemVersion(map,"jaxr","1.1.0",CORE_MODEL_7_1_2) @AT@ 2677 @LENGTH@ 59
---------INS SimpleName@@map @TO@ SimpleName@@MethodName:addSubsystemVersion:[map, "jaxr", "1.1.0", CORE_MODEL_7_1_2] @AT@ 2697 @LENGTH@ 3
---------INS StringLiteral@@"jaxr" @TO@ SimpleName@@MethodName:addSubsystemVersion:[map, "jaxr", "1.1.0", CORE_MODEL_7_1_2] @AT@ 2702 @LENGTH@ 6
---------INS StringLiteral@@"1.1.0" @TO@ SimpleName@@MethodName:addSubsystemVersion:[map, "jaxr", "1.1.0", CORE_MODEL_7_1_2] @AT@ 2710 @LENGTH@ 7
---------INS SimpleName@@CORE_MODEL_7_1_2 @TO@ SimpleName@@MethodName:addSubsystemVersion:[map, "jaxr", "1.1.0", CORE_MODEL_7_1_2] @AT@ 2719 @LENGTH@ 16


INS ExpressionStatement@@MethodInvocation:listenerContainer.start() @TO@ MethodDeclaration@@private, RedisMessageListenerContainer, MethodName:createDefaultListenerContainer,  @AT@ 4466 @LENGTH@ 26
---INS MethodInvocation@@listenerContainer.start() @TO@ ExpressionStatement@@MethodInvocation:listenerContainer.start() @AT@ 4466 @LENGTH@ 25
------INS SimpleName@@Name:listenerContainer @TO@ MethodInvocation@@listenerContainer.start() @AT@ 4466 @LENGTH@ 17
------INS SimpleName@@MethodName:start:[] @TO@ MethodInvocation@@listenerContainer.start() @AT@ 4484 @LENGTH@ 7


UPD MethodDeclaration@@String, MethodName:invalidDiscoveryOptionsOrdering, String name,  @TO@ OperationFailedException, MethodName:invalidDiscoveryOptionsOrdering, String name,  @AT@ 29339 @LENGTH@ 45
---UPD SimpleType@@String @TO@ OperationFailedException @AT@ 29332 @LENGTH@ 6


UPD ReturnStatement@@MethodInvocation:FunctorUtils.copy(iPredicates) @TO@ MethodInvocation:FunctorUtils.<E>copy(iPredicates) @AT@ 6287 @LENGTH@ 38
---UPD MethodInvocation@@FunctorUtils.copy(iPredicates) @TO@ FunctorUtils.<E>copy(iPredicates) @AT@ 6294 @LENGTH@ 30


DEL MethodDeclaration@@public, void, MethodName:testFlushDb,  @AT@ 2508 @LENGTH@ 30
---DEL Modifier@@public @AT@ 2508 @LENGTH@ 6
---DEL PrimitiveType@@void @AT@ 2515 @LENGTH@ 4
---DEL SimpleName@@MethodName:testFlushDb @AT@ 2520 @LENGTH@ 11


UPD IfStatement@@if (fieldType.equals(DATE) || fieldType.equals(TIMESTAMP)) {  final AnnotationMetadataBuilder temporalBuilder=new AnnotationMetadataBuilder(TEMPORAL);  temporalBuilder.addEnumAttribute(VALUE,new EnumDetails(TEMPORAL_TYPE,new JavaSymbolName(column.getJdbcType())));  annotations.add(temporalBuilder);  final AnnotationMetadataBuilder dateTimeFormatBuilder=new AnnotationMetadataBuilder(DATE_TIME_FORMAT);  if (fieldType.equals(DATE)) {    dateTimeFormatBuilder.addStringAttribute("style","M-");  } else {    dateTimeFormatBuilder.addStringAttribute("style","MM");  }  if (fieldName.getSymbolName().equals(CREATED)) {    columnBuilder.addBooleanAttribute("updatable",false);  }  annotations.add(dateTimeFormatBuilder);} @TO@ if (fieldType.equals(DATE) || fieldType.equals(CALENDAR)) {  final AnnotationMetadataBuilder temporalBuilder=new AnnotationMetadataBuilder(TEMPORAL);  temporalBuilder.addEnumAttribute(VALUE,new EnumDetails(TEMPORAL_TYPE,new JavaSymbolName(column.getJdbcType())));  annotations.add(temporalBuilder);  final AnnotationMetadataBuilder dateTimeFormatBuilder=new AnnotationMetadataBuilder(DATE_TIME_FORMAT);  if (fieldType.equals(DATE)) {    dateTimeFormatBuilder.addStringAttribute("style","M-");  } else {    dateTimeFormatBuilder.addStringAttribute("style","MM");  }  if (fieldName.getSymbolName().equals(CREATED)) {    columnBuilder.addBooleanAttribute("updatable",false);  }  annotations.add(dateTimeFormatBuilder);} @AT@ 33494 @LENGTH@ 961
---UPD InfixExpression@@fieldType.equals(DATE) || fieldType.equals(TIMESTAMP) @TO@ fieldType.equals(DATE) || fieldType.equals(CALENDAR) @AT@ 33498 @LENGTH@ 53
------UPD MethodInvocation@@fieldType.equals(TIMESTAMP) @TO@ fieldType.equals(CALENDAR) @AT@ 33524 @LENGTH@ 27
---------UPD SimpleName@@MethodName:equals:[TIMESTAMP] @TO@ MethodName:equals:[CALENDAR] @AT@ 33534 @LENGTH@ 17
------------UPD SimpleName@@TIMESTAMP @TO@ CALENDAR @AT@ 33541 @LENGTH@ 9


INS ExpressionStatement@@MethodInvocation:Thread.sleep(500) @TO@ MethodDeclaration@@public, void, MethodName:testUnwatch, Exception,  @AT@ 6181 @LENGTH@ 18
---INS MethodInvocation@@Thread.sleep(500) @TO@ ExpressionStatement@@MethodInvocation:Thread.sleep(500) @AT@ 6181 @LENGTH@ 17
------INS SimpleName@@Name:Thread @TO@ MethodInvocation@@Thread.sleep(500) @AT@ 6181 @LENGTH@ 6
------INS SimpleName@@MethodName:sleep:[500] @TO@ MethodInvocation@@Thread.sleep(500) @AT@ 6188 @LENGTH@ 10
---------INS NumberLiteral@@500 @TO@ SimpleName@@MethodName:sleep:[500] @AT@ 6194 @LENGTH@ 3


UPD VariableDeclarationStatement@@final Integer position=map.put(obj,new Integer(counter++)); @TO@ final Integer position=map.put(obj,Integer.valueOf(counter++)); @AT@ 6795 @LENGTH@ 62
---UPD VariableDeclarationFragment@@position=map.put(obj,new Integer(counter++)) @TO@ position=map.put(obj,Integer.valueOf(counter++)) @AT@ 6809 @LENGTH@ 47
------UPD MethodInvocation@@map.put(obj,new Integer(counter++)) @TO@ map.put(obj,Integer.valueOf(counter++)) @AT@ 6820 @LENGTH@ 36
---------UPD SimpleName@@MethodName:put:[obj, new Integer(counter++)] @TO@ MethodName:put:[obj, Integer.valueOf(counter++)] @AT@ 6824 @LENGTH@ 32
------------INS MethodInvocation@@Integer.valueOf(counter++) @TO@ SimpleName@@MethodName:put:[obj, new Integer(counter++)] @AT@ 6833 @LENGTH@ 26
---------------INS SimpleName@@Name:Integer @TO@ MethodInvocation@@Integer.valueOf(counter++) @AT@ 6833 @LENGTH@ 7
---------------INS SimpleName@@MethodName:valueOf:[counter++] @TO@ MethodInvocation@@Integer.valueOf(counter++) @AT@ 6841 @LENGTH@ 18
------------------INS PostfixExpression@@counter++ @TO@ SimpleName@@MethodName:valueOf:[counter++] @AT@ 6849 @LENGTH@ 9
---------------------MOV SimpleName@@counter @TO@ PostfixExpression@@counter++ @AT@ 6845 @LENGTH@ 7
---------------------MOV Operator@@++ @TO@ PostfixExpression@@counter++ @AT@ 6853 @LENGTH@ 2
------------DEL ClassInstanceCreation@@Integer[counter++] @AT@ 6833 @LENGTH@ 22
---------------DEL New@@new @AT@ 6833 @LENGTH@ 3
---------------DEL SimpleType@@Integer @AT@ 6837 @LENGTH@ 7
---------------DEL PostfixExpression@@counter++ @AT@ 6845 @LENGTH@ 9


INS IfStatement@@if (original != null) {  original.setProperty(Exchange.AGGREGATED_CORRELATION_KEY,key);} @TO@ MethodDeclaration@@protected, void, MethodName:onCompletion, final String key, final Exchange original, final Exchange aggregated, boolean fromTimeout,  @AT@ 18917 @LENGTH@ 109
---INS InfixExpression@@original != null @TO@ IfStatement@@if (original != null) {  original.setProperty(Exchange.AGGREGATED_CORRELATION_KEY,key);} @AT@ 18921 @LENGTH@ 16
------INS SimpleName@@original @TO@ InfixExpression@@original != null @AT@ 18921 @LENGTH@ 8
------INS Operator@@!= @TO@ InfixExpression@@original != null @AT@ 18929 @LENGTH@ 2
------INS NullLiteral@@null @TO@ InfixExpression@@original != null @AT@ 18933 @LENGTH@ 4
---INS Block@@ThenBody:{  original.setProperty(Exchange.AGGREGATED_CORRELATION_KEY,key);} @TO@ IfStatement@@if (original != null) {  original.setProperty(Exchange.AGGREGATED_CORRELATION_KEY,key);} @AT@ 18939 @LENGTH@ 87
------INS ExpressionStatement@@MethodInvocation:original.setProperty(Exchange.AGGREGATED_CORRELATION_KEY,key) @TO@ Block@@ThenBody:{  original.setProperty(Exchange.AGGREGATED_CORRELATION_KEY,key);} @AT@ 18953 @LENGTH@ 63
---------INS MethodInvocation@@original.setProperty(Exchange.AGGREGATED_CORRELATION_KEY,key) @TO@ ExpressionStatement@@MethodInvocation:original.setProperty(Exchange.AGGREGATED_CORRELATION_KEY,key) @AT@ 18953 @LENGTH@ 62
------------INS SimpleName@@Name:original @TO@ MethodInvocation@@original.setProperty(Exchange.AGGREGATED_CORRELATION_KEY,key) @AT@ 18953 @LENGTH@ 8
------------INS SimpleName@@MethodName:setProperty:[Exchange.AGGREGATED_CORRELATION_KEY, key] @TO@ MethodInvocation@@original.setProperty(Exchange.AGGREGATED_CORRELATION_KEY,key) @AT@ 18962 @LENGTH@ 53
---------------INS QualifiedName@@Exchange.AGGREGATED_CORRELATION_KEY @TO@ SimpleName@@MethodName:setProperty:[Exchange.AGGREGATED_CORRELATION_KEY, key] @AT@ 18974 @LENGTH@ 35
------------------INS SimpleName@@Exchange @TO@ QualifiedName@@Exchange.AGGREGATED_CORRELATION_KEY @AT@ 18974 @LENGTH@ 8
------------------INS SimpleName@@AGGREGATED_CORRELATION_KEY @TO@ QualifiedName@@Exchange.AGGREGATED_CORRELATION_KEY @AT@ 18983 @LENGTH@ 26
---------------INS SimpleName@@key @TO@ SimpleName@@MethodName:setProperty:[Exchange.AGGREGATED_CORRELATION_KEY, key] @AT@ 19011 @LENGTH@ 3


UPD MethodDeclaration@@public, void, MethodName:testMulti, Exception,  @TO@ public, void, MethodName:testMultiExec, Exception,  @AT@ 1469 @LENGTH@ 391
---UPD SimpleName@@MethodName:testMulti @TO@ MethodName:testMultiExec @AT@ 1481 @LENGTH@ 9


UPD ExpressionStatement@@MethodInvocation:message.setRemoteAddress(exchange.getIn().getHeader("CamelMinaRemoteAddress",String.class)) @TO@ MethodInvocation:message.setRemoteAddress(exchange.getIn().getHeader("CamelNettyRemoteAddress",String.class)) @AT@ 2851 @LENGTH@ 93
---UPD MethodInvocation@@message.setRemoteAddress(exchange.getIn().getHeader("CamelMinaRemoteAddress",String.class)) @TO@ message.setRemoteAddress(exchange.getIn().getHeader("CamelNettyRemoteAddress",String.class)) @AT@ 2851 @LENGTH@ 92
------UPD SimpleName@@MethodName:setRemoteAddress:[exchange.getIn().getHeader("CamelMinaRemoteAddress",String.class)] @TO@ MethodName:setRemoteAddress:[exchange.getIn().getHeader("CamelNettyRemoteAddress",String.class)] @AT@ 2859 @LENGTH@ 84
---------UPD MethodInvocation@@exchange.getIn().getHeader("CamelMinaRemoteAddress",String.class) @TO@ exchange.getIn().getHeader("CamelNettyRemoteAddress",String.class) @AT@ 2876 @LENGTH@ 66
------------UPD SimpleName@@MethodName:getHeader:["CamelMinaRemoteAddress", String.class] @TO@ MethodName:getHeader:["CamelNettyRemoteAddress", String.class] @AT@ 2893 @LENGTH@ 49
---------------UPD StringLiteral@@"CamelMinaRemoteAddress" @TO@ "CamelNettyRemoteAddress" @AT@ 2903 @LENGTH@ 24


UPD MethodDeclaration@@static, void, MethodName:registerTransformers_1_1_0, TransformersSubRegistration parent,  @TO@ static, void, MethodName:registerTransformers_1_1_0, ResourceTransformationDescriptionBuilder builder,  @AT@ 4273 @LENGTH@ 339
---INS ExpressionStatement@@MethodInvocation:ChannelCreationOptionResource.registerTransformers_1_1_0(builder.addChildResource(EJB3SubsystemModel.REMOTE_SERVICE_PATH)) @TO@ MethodDeclaration@@static, void, MethodName:registerTransformers_1_1_0, TransformersSubRegistration parent,  @AT@ 4072 @LENGTH@ 123
------INS MethodInvocation@@ChannelCreationOptionResource.registerTransformers_1_1_0(builder.addChildResource(EJB3SubsystemModel.REMOTE_SERVICE_PATH)) @TO@ ExpressionStatement@@MethodInvocation:ChannelCreationOptionResource.registerTransformers_1_1_0(builder.addChildResource(EJB3SubsystemModel.REMOTE_SERVICE_PATH)) @AT@ 4072 @LENGTH@ 122
---------INS SimpleName@@Name:ChannelCreationOptionResource @TO@ MethodInvocation@@ChannelCreationOptionResource.registerTransformers_1_1_0(builder.addChildResource(EJB3SubsystemModel.REMOTE_SERVICE_PATH)) @AT@ 4072 @LENGTH@ 29
---------INS SimpleName@@MethodName:registerTransformers_1_1_0:[builder.addChildResource(EJB3SubsystemModel.REMOTE_SERVICE_PATH)] @TO@ MethodInvocation@@ChannelCreationOptionResource.registerTransformers_1_1_0(builder.addChildResource(EJB3SubsystemModel.REMOTE_SERVICE_PATH)) @AT@ 4102 @LENGTH@ 92
------------INS MethodInvocation@@builder.addChildResource(EJB3SubsystemModel.REMOTE_SERVICE_PATH) @TO@ SimpleName@@MethodName:registerTransformers_1_1_0:[builder.addChildResource(EJB3SubsystemModel.REMOTE_SERVICE_PATH)] @AT@ 4129 @LENGTH@ 64
---------------MOV SimpleName@@Name:parent @TO@ MethodInvocation@@builder.addChildResource(EJB3SubsystemModel.REMOTE_SERVICE_PATH) @AT@ 4411 @LENGTH@ 6
---------------MOV SimpleName@@MethodName:registerSubResource:[EJB3SubsystemModel.REMOTE_SERVICE_PATH, ResourceTransformer.DEFAULT] @TO@ MethodInvocation@@builder.addChildResource(EJB3SubsystemModel.REMOTE_SERVICE_PATH) @AT@ 4418 @LENGTH@ 104
---UPD SingleVariableDeclaration@@TransformersSubRegistration parent @TO@ ResourceTransformationDescriptionBuilder builder @AT@ 4312 @LENGTH@ 34
------UPD SimpleType@@TransformersSubRegistration @TO@ ResourceTransformationDescriptionBuilder @AT@ 4312 @LENGTH@ 27
------UPD SimpleName@@parent @TO@ builder @AT@ 4340 @LENGTH@ 6
---DEL VariableDeclarationStatement@@final TransformersSubRegistration transformers110=parent.registerSubResource(EJB3SubsystemModel.REMOTE_SERVICE_PATH,ResourceTransformer.DEFAULT); @AT@ 4359 @LENGTH@ 164
------DEL Modifier@@final @AT@ 4359 @LENGTH@ 5
------DEL SimpleType@@TransformersSubRegistration @AT@ 4365 @LENGTH@ 27
------DEL VariableDeclarationFragment@@transformers110=parent.registerSubResource(EJB3SubsystemModel.REMOTE_SERVICE_PATH,ResourceTransformer.DEFAULT) @AT@ 4393 @LENGTH@ 129
---------DEL SimpleName@@transformers110 @AT@ 4393 @LENGTH@ 15
---------DEL MethodInvocation@@parent.registerSubResource(EJB3SubsystemModel.REMOTE_SERVICE_PATH,ResourceTransformer.DEFAULT) @AT@ 4411 @LENGTH@ 111
---DEL ExpressionStatement@@MethodInvocation:ChannelCreationOptionResource.registerTransformers_1_1_0(transformers110) @AT@ 4532 @LENGTH@ 74
------DEL MethodInvocation@@ChannelCreationOptionResource.registerTransformers_1_1_0(transformers110) @AT@ 4532 @LENGTH@ 73
---------DEL SimpleName@@Name:ChannelCreationOptionResource @AT@ 4532 @LENGTH@ 29
---------DEL SimpleName@@MethodName:registerTransformers_1_1_0:[transformers110] @AT@ 4562 @LENGTH@ 43
------------DEL SimpleName@@transformers110 @AT@ 4589 @LENGTH@ 15


UPD IfStatement@@if (fs != null && internalFS) {  fs.close();} @TO@ if (fs != null && internalFS) {  try {    fs.close();  } catch (  NullPointerException npe) {  }} @AT@ 7508 @LENGTH@ 50
---UPD Block@@ThenBody:{  fs.close();} @TO@ ThenBody:{  try {    fs.close();  } catch (  NullPointerException npe) {  }} @AT@ 7538 @LENGTH@ 20
------INS TryStatement@@try {  fs.close();} catch (NullPointerException npe) {} @TO@ Block@@ThenBody:{  fs.close();} @AT@ 7543 @LENGTH@ 123
---------MOV ExpressionStatement@@MethodInvocation:fs.close() @TO@ TryStatement@@try {  fs.close();} catch (NullPointerException npe) {} @AT@ 7543 @LENGTH@ 11
---------INS CatchClause@@catch (NullPointerException npe) {} @TO@ TryStatement@@try {  fs.close();} catch (NullPointerException npe) {} @AT@ 7627 @LENGTH@ 39
------------INS SingleVariableDeclaration@@NullPointerException npe @TO@ CatchClause@@catch (NullPointerException npe) {} @AT@ 7634 @LENGTH@ 24
---------------INS SimpleType@@NullPointerException @TO@ SingleVariableDeclaration@@NullPointerException npe @AT@ 7634 @LENGTH@ 20
---------------INS SimpleName@@npe @TO@ SingleVariableDeclaration@@NullPointerException npe @AT@ 7655 @LENGTH@ 3


INS IfStatement@@if (CLIModelControllerClient.this.closed) {  return;} @TO@ MethodDeclaration@@public, void, MethodName:handleClose, final Channel closed, final IOException exception,  @AT@ 10395 @LENGTH@ 80
---INS FieldAccess@@CLIModelControllerClient.this.closed @TO@ IfStatement@@if (CLIModelControllerClient.this.closed) {  return;} @AT@ 10398 @LENGTH@ 36
------INS ThisExpression@@this @TO@ FieldAccess@@CLIModelControllerClient.this.closed @AT@ 10398 @LENGTH@ 29
------INS SimpleName@@closed @TO@ FieldAccess@@CLIModelControllerClient.this.closed @AT@ 10428 @LENGTH@ 6
---INS Block@@ThenBody:{  return;} @TO@ IfStatement@@if (CLIModelControllerClient.this.closed) {  return;} @AT@ 10436 @LENGTH@ 39
------INS ReturnStatement@@ @TO@ Block@@ThenBody:{  return;} @AT@ 10454 @LENGTH@ 7


UPD FieldDeclaration@@private, static, ModuleIdentifier[], [DEFAULT_MODULES=new ModuleIdentifier[]{ModuleIdentifier.create("sun.jdk"),ModuleIdentifier.create("ibm.jdk"),ModuleIdentifier.create("javax.api"),ModuleIdentifier.create("org.jboss.logging"),ModuleIdentifier.create("org.jboss.vfs"),ModuleIdentifier.create("org.apache.commons.logging"),ModuleIdentifier.create("org.apache.log4j"),ModuleIdentifier.create("org.slf4j"),ModuleIdentifier.create("org.jboss.logging.jul-to-slf4j-stub"),ModuleIdentifier.create("org.glassfish.javax.json")}] @TO@ private, static, ModuleIdentifier[], [DEFAULT_MODULES=new ModuleIdentifier[]{ModuleIdentifier.create("sun.jdk"),ModuleIdentifier.create("ibm.jdk"),ModuleIdentifier.create("javax.api"),ModuleIdentifier.create("org.jboss.logging"),ModuleIdentifier.create("org.jboss.vfs"),ModuleIdentifier.create("org.apache.commons.logging"),ModuleIdentifier.create("org.apache.log4j"),ModuleIdentifier.create("org.slf4j"),ModuleIdentifier.create("org.jboss.logging.jul-to-slf4j-stub")}] @AT@ 1795 @LENGTH@ 616
---UPD VariableDeclarationFragment@@DEFAULT_MODULES=new ModuleIdentifier[]{ModuleIdentifier.create("sun.jdk"),ModuleIdentifier.create("ibm.jdk"),ModuleIdentifier.create("javax.api"),ModuleIdentifier.create("org.jboss.logging"),ModuleIdentifier.create("org.jboss.vfs"),ModuleIdentifier.create("org.apache.commons.logging"),ModuleIdentifier.create("org.apache.log4j"),ModuleIdentifier.create("org.slf4j"),ModuleIdentifier.create("org.jboss.logging.jul-to-slf4j-stub"),ModuleIdentifier.create("org.glassfish.javax.json")} @TO@ DEFAULT_MODULES=new ModuleIdentifier[]{ModuleIdentifier.create("sun.jdk"),ModuleIdentifier.create("ibm.jdk"),ModuleIdentifier.create("javax.api"),ModuleIdentifier.create("org.jboss.logging"),ModuleIdentifier.create("org.jboss.vfs"),ModuleIdentifier.create("org.apache.commons.logging"),ModuleIdentifier.create("org.apache.log4j"),ModuleIdentifier.create("org.slf4j"),ModuleIdentifier.create("org.jboss.logging.jul-to-slf4j-stub")} @AT@ 1829 @LENGTH@ 581
------UPD ArrayCreation@@new ModuleIdentifier[]{ModuleIdentifier.create("sun.jdk"),ModuleIdentifier.create("ibm.jdk"),ModuleIdentifier.create("javax.api"),ModuleIdentifier.create("org.jboss.logging"),ModuleIdentifier.create("org.jboss.vfs"),ModuleIdentifier.create("org.apache.commons.logging"),ModuleIdentifier.create("org.apache.log4j"),ModuleIdentifier.create("org.slf4j"),ModuleIdentifier.create("org.jboss.logging.jul-to-slf4j-stub"),ModuleIdentifier.create("org.glassfish.javax.json")} @TO@ new ModuleIdentifier[]{ModuleIdentifier.create("sun.jdk"),ModuleIdentifier.create("ibm.jdk"),ModuleIdentifier.create("javax.api"),ModuleIdentifier.create("org.jboss.logging"),ModuleIdentifier.create("org.jboss.vfs"),ModuleIdentifier.create("org.apache.commons.logging"),ModuleIdentifier.create("org.apache.log4j"),ModuleIdentifier.create("org.slf4j"),ModuleIdentifier.create("org.jboss.logging.jul-to-slf4j-stub")} @AT@ 1847 @LENGTH@ 563
---------UPD ArrayInitializer@@{ModuleIdentifier.create("sun.jdk"),ModuleIdentifier.create("ibm.jdk"),ModuleIdentifier.create("javax.api"),ModuleIdentifier.create("org.jboss.logging"),ModuleIdentifier.create("org.jboss.vfs"),ModuleIdentifier.create("org.apache.commons.logging"),ModuleIdentifier.create("org.apache.log4j"),ModuleIdentifier.create("org.slf4j"),ModuleIdentifier.create("org.jboss.logging.jul-to-slf4j-stub"),ModuleIdentifier.create("org.glassfish.javax.json")} @TO@ {ModuleIdentifier.create("sun.jdk"),ModuleIdentifier.create("ibm.jdk"),ModuleIdentifier.create("javax.api"),ModuleIdentifier.create("org.jboss.logging"),ModuleIdentifier.create("org.jboss.vfs"),ModuleIdentifier.create("org.apache.commons.logging"),ModuleIdentifier.create("org.apache.log4j"),ModuleIdentifier.create("org.slf4j"),ModuleIdentifier.create("org.jboss.logging.jul-to-slf4j-stub")} @AT@ 1870 @LENGTH@ 540
------------DEL MethodInvocation@@ModuleIdentifier.create("org.glassfish.javax.json") @AT@ 2352 @LENGTH@ 51
---------------DEL SimpleName@@Name:ModuleIdentifier @AT@ 2352 @LENGTH@ 16
---------------DEL SimpleName@@MethodName:create:["org.glassfish.javax.json"] @AT@ 2369 @LENGTH@ 34
------------------DEL StringLiteral@@"org.glassfish.javax.json" @AT@ 2376 @LENGTH@ 26


UPD EnhancedForStatement@@for (Principal current : con.getPrincipals()) {  if (current instanceof UserPrincipal) {    up=(UserPrincipal)current;  }  break;} @TO@ for (Principal current : con.getPrincipals()) {  if (current instanceof UserPrincipal) {    up=(UserPrincipal)current;    break;  }} @AT@ 2310 @LENGTH@ 208
---UPD IfStatement@@if (current instanceof UserPrincipal) {  up=(UserPrincipal)current;} @TO@ if (current instanceof UserPrincipal) {  up=(UserPrincipal)current;  break;} @AT@ 2374 @LENGTH@ 107
------UPD Block@@ThenBody:{  up=(UserPrincipal)current;} @TO@ ThenBody:{  up=(UserPrincipal)current;  break;} @AT@ 2412 @LENGTH@ 69
---------INS BreakStatement@@ @TO@ Block@@ThenBody:{  up=(UserPrincipal)current;} @AT@ 2484 @LENGTH@ 6
---DEL BreakStatement@@ @AT@ 2498 @LENGTH@ 6


UPD TryStatement@@try {  moduleLoader.loadModule(moduleId);  boolean importServices=moduleId.getName().endsWith("jdk") || moduleId.getName().equals("org.glassfish.javax.json");  moduleSpecification.addSystemDependency(new ModuleDependency(moduleLoader,moduleId,false,false,importServices,false));} catch (ModuleLoadException ex) {  ServerLogger.ROOT_LOGGER.debugf("Module not found: %s",moduleId);} @TO@ try {  moduleLoader.loadModule(moduleId);  moduleSpecification.addSystemDependency(new ModuleDependency(moduleLoader,moduleId,false,false,false,false));} catch (ModuleLoadException ex) {  ServerLogger.ROOT_LOGGER.debugf("Module not found: %s",moduleId);} @AT@ 2880 @LENGTH@ 474
---DEL VariableDeclarationStatement@@boolean importServices=moduleId.getName().endsWith("jdk") || moduleId.getName().equals("org.glassfish.javax.json"); @AT@ 2953 @LENGTH@ 117
------DEL PrimitiveType@@boolean @AT@ 2953 @LENGTH@ 7
------DEL VariableDeclarationFragment@@importServices=moduleId.getName().endsWith("jdk") || moduleId.getName().equals("org.glassfish.javax.json") @AT@ 2961 @LENGTH@ 108
---------DEL SimpleName@@importServices @AT@ 2961 @LENGTH@ 14
---------DEL InfixExpression@@moduleId.getName().endsWith("jdk") || moduleId.getName().equals("org.glassfish.javax.json") @AT@ 2978 @LENGTH@ 91
------------DEL MethodInvocation@@moduleId.getName().endsWith("jdk") @AT@ 2978 @LENGTH@ 34
---------------DEL MethodInvocation@@MethodName:getName:[] @AT@ 2978 @LENGTH@ 18
---------------DEL SimpleName@@Name:moduleId @AT@ 2978 @LENGTH@ 8
---------------DEL SimpleName@@MethodName:endsWith:["jdk"] @AT@ 2997 @LENGTH@ 15
------------------DEL StringLiteral@@"jdk" @AT@ 3006 @LENGTH@ 5
------------DEL Operator@@|| @AT@ 3012 @LENGTH@ 2
------------DEL MethodInvocation@@moduleId.getName().equals("org.glassfish.javax.json") @AT@ 3016 @LENGTH@ 53
---------------DEL MethodInvocation@@MethodName:getName:[] @AT@ 3016 @LENGTH@ 18
---------------DEL SimpleName@@Name:moduleId @AT@ 3016 @LENGTH@ 8
---------------DEL SimpleName@@MethodName:equals:["org.glassfish.javax.json"] @AT@ 3035 @LENGTH@ 34
------------------DEL StringLiteral@@"org.glassfish.javax.json" @AT@ 3042 @LENGTH@ 26
---UPD ExpressionStatement@@MethodInvocation:moduleSpecification.addSystemDependency(new ModuleDependency(moduleLoader,moduleId,false,false,importServices,false)) @TO@ MethodInvocation:moduleSpecification.addSystemDependency(new ModuleDependency(moduleLoader,moduleId,false,false,false,false)) @AT@ 3087 @LENGTH@ 123
------UPD MethodInvocation@@moduleSpecification.addSystemDependency(new ModuleDependency(moduleLoader,moduleId,false,false,importServices,false)) @TO@ moduleSpecification.addSystemDependency(new ModuleDependency(moduleLoader,moduleId,false,false,false,false)) @AT@ 3087 @LENGTH@ 122
---------UPD SimpleName@@MethodName:addSystemDependency:[new ModuleDependency(moduleLoader,moduleId,false,false,importServices,false)] @TO@ MethodName:addSystemDependency:[new ModuleDependency(moduleLoader,moduleId,false,false,false,false)] @AT@ 3107 @LENGTH@ 102
------------UPD ClassInstanceCreation@@ModuleDependency[moduleLoader, moduleId, false, false, importServices, false] @TO@ ModuleDependency[moduleLoader, moduleId, false, false, false, false] @AT@ 3127 @LENGTH@ 81
---------------INS BooleanLiteral@@false @TO@ ClassInstanceCreation@@ModuleDependency[moduleLoader, moduleId, false, false, importServices, false] @AT@ 2998 @LENGTH@ 5
---------------DEL SimpleName@@importServices @AT@ 3186 @LENGTH@ 14


INS MethodDeclaration@@public, void, MethodName:testJdrZipName, Exception,  @TO@ TypeDeclaration@@[public]JdrTestCase,  @AT@ 1555 @LENGTH@ 480
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testJdrZipName, Exception,  @AT@ 1555 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testJdrZipName, Exception,  @AT@ 1562 @LENGTH@ 4
---INS SimpleName@@MethodName:testJdrZipName @TO@ MethodDeclaration@@public, void, MethodName:testJdrZipName, Exception,  @AT@ 1567 @LENGTH@ 14
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:testJdrZipName, Exception,  @AT@ 1591 @LENGTH@ 9
---INS VariableDeclarationStatement@@JdrEnvironment env=new JdrEnvironment(); @TO@ MethodDeclaration@@public, void, MethodName:testJdrZipName, Exception,  @AT@ 1611 @LENGTH@ 42
------INS SimpleType@@JdrEnvironment @TO@ VariableDeclarationStatement@@JdrEnvironment env=new JdrEnvironment(); @AT@ 1611 @LENGTH@ 14
------INS VariableDeclarationFragment@@env=new JdrEnvironment() @TO@ VariableDeclarationStatement@@JdrEnvironment env=new JdrEnvironment(); @AT@ 1626 @LENGTH@ 26
---------INS SimpleName@@env @TO@ VariableDeclarationFragment@@env=new JdrEnvironment() @AT@ 1626 @LENGTH@ 3
---------INS ClassInstanceCreation@@JdrEnvironment[] @TO@ VariableDeclarationFragment@@env=new JdrEnvironment() @AT@ 1632 @LENGTH@ 20
------------INS New@@new @TO@ ClassInstanceCreation@@JdrEnvironment[] @AT@ 1632 @LENGTH@ 3
------------INS SimpleType@@JdrEnvironment @TO@ ClassInstanceCreation@@JdrEnvironment[] @AT@ 1636 @LENGTH@ 14
---INS ExpressionStatement@@MethodInvocation:env.setJbossHome("/foo/bar/baz") @TO@ MethodDeclaration@@public, void, MethodName:testJdrZipName, Exception,  @AT@ 1662 @LENGTH@ 33
------INS MethodInvocation@@env.setJbossHome("/foo/bar/baz") @TO@ ExpressionStatement@@MethodInvocation:env.setJbossHome("/foo/bar/baz") @AT@ 1662 @LENGTH@ 32
---------INS SimpleName@@Name:env @TO@ MethodInvocation@@env.setJbossHome("/foo/bar/baz") @AT@ 1662 @LENGTH@ 3
---------INS SimpleName@@MethodName:setJbossHome:["/foo/bar/baz"] @TO@ MethodInvocation@@env.setJbossHome("/foo/bar/baz") @AT@ 1666 @LENGTH@ 28
------------INS StringLiteral@@"/foo/bar/baz" @TO@ SimpleName@@MethodName:setJbossHome:["/foo/bar/baz"] @AT@ 1679 @LENGTH@ 14
---INS ExpressionStatement@@MethodInvocation:env.setHostControllerName("host") @TO@ MethodDeclaration@@public, void, MethodName:testJdrZipName, Exception,  @AT@ 1704 @LENGTH@ 34
------INS MethodInvocation@@env.setHostControllerName("host") @TO@ ExpressionStatement@@MethodInvocation:env.setHostControllerName("host") @AT@ 1704 @LENGTH@ 33
---------INS SimpleName@@Name:env @TO@ MethodInvocation@@env.setHostControllerName("host") @AT@ 1704 @LENGTH@ 3
---------INS SimpleName@@MethodName:setHostControllerName:["host"] @TO@ MethodInvocation@@env.setHostControllerName("host") @AT@ 1708 @LENGTH@ 29
------------INS StringLiteral@@"host" @TO@ SimpleName@@MethodName:setHostControllerName:["host"] @AT@ 1730 @LENGTH@ 6
---INS VariableDeclarationStatement@@JdrZipFile zf=new JdrZipFile(env); @TO@ MethodDeclaration@@public, void, MethodName:testJdrZipName, Exception,  @AT@ 1747 @LENGTH@ 36
------INS SimpleType@@JdrZipFile @TO@ VariableDeclarationStatement@@JdrZipFile zf=new JdrZipFile(env); @AT@ 1747 @LENGTH@ 10
------INS VariableDeclarationFragment@@zf=new JdrZipFile(env) @TO@ VariableDeclarationStatement@@JdrZipFile zf=new JdrZipFile(env); @AT@ 1758 @LENGTH@ 24
---------INS SimpleName@@zf @TO@ VariableDeclarationFragment@@zf=new JdrZipFile(env) @AT@ 1758 @LENGTH@ 2
---------INS ClassInstanceCreation@@JdrZipFile[env] @TO@ VariableDeclarationFragment@@zf=new JdrZipFile(env) @AT@ 1763 @LENGTH@ 19
------------INS New@@new @TO@ ClassInstanceCreation@@JdrZipFile[env] @AT@ 1763 @LENGTH@ 3
------------INS SimpleType@@JdrZipFile @TO@ ClassInstanceCreation@@JdrZipFile[env] @AT@ 1767 @LENGTH@ 10
------------INS SimpleName@@env @TO@ ClassInstanceCreation@@JdrZipFile[env] @AT@ 1778 @LENGTH@ 3
---INS VariableDeclarationStatement@@String name=zf.name(); @TO@ MethodDeclaration@@public, void, MethodName:testJdrZipName, Exception,  @AT@ 1792 @LENGTH@ 24
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String name=zf.name(); @AT@ 1792 @LENGTH@ 6
------INS VariableDeclarationFragment@@name=zf.name() @TO@ VariableDeclarationStatement@@String name=zf.name(); @AT@ 1799 @LENGTH@ 16
---------INS SimpleName@@name @TO@ VariableDeclarationFragment@@name=zf.name() @AT@ 1799 @LENGTH@ 4
---------INS MethodInvocation@@zf.name() @TO@ VariableDeclarationFragment@@name=zf.name() @AT@ 1806 @LENGTH@ 9
------------INS SimpleName@@Name:zf @TO@ MethodInvocation@@zf.name() @AT@ 1806 @LENGTH@ 2
------------INS SimpleName@@MethodName:name:[] @TO@ MethodInvocation@@zf.name() @AT@ 1809 @LENGTH@ 6
---INS TryStatement@@try {  assertTrue(name.endsWith(".zip"));  assertTrue(name.contains("host"));}  finally {  File f=new File(zf.name());  f.delete();} @TO@ MethodDeclaration@@public, void, MethodName:testJdrZipName, Exception,  @AT@ 1826 @LENGTH@ 203
------INS ExpressionStatement@@MethodInvocation:assertTrue(name.endsWith(".zip")) @TO@ TryStatement@@try {  assertTrue(name.endsWith(".zip"));  assertTrue(name.contains("host"));}  finally {  File f=new File(zf.name());  f.delete();} @AT@ 1844 @LENGTH@ 34
---------INS MethodInvocation@@assertTrue(name.endsWith(".zip")) @TO@ ExpressionStatement@@MethodInvocation:assertTrue(name.endsWith(".zip")) @AT@ 1844 @LENGTH@ 33
------------INS SimpleName@@MethodName:assertTrue:[name.endsWith(".zip")] @TO@ MethodInvocation@@assertTrue(name.endsWith(".zip")) @AT@ 1844 @LENGTH@ 33
---------------INS MethodInvocation@@name.endsWith(".zip") @TO@ SimpleName@@MethodName:assertTrue:[name.endsWith(".zip")] @AT@ 1855 @LENGTH@ 21
------------------INS SimpleName@@Name:name @TO@ MethodInvocation@@name.endsWith(".zip") @AT@ 1855 @LENGTH@ 4
------------------INS SimpleName@@MethodName:endsWith:[".zip"] @TO@ MethodInvocation@@name.endsWith(".zip") @AT@ 1860 @LENGTH@ 16
---------------------INS StringLiteral@@".zip" @TO@ SimpleName@@MethodName:endsWith:[".zip"] @AT@ 1869 @LENGTH@ 6
------INS ExpressionStatement@@MethodInvocation:assertTrue(name.contains("host")) @TO@ TryStatement@@try {  assertTrue(name.endsWith(".zip"));  assertTrue(name.contains("host"));}  finally {  File f=new File(zf.name());  f.delete();} @AT@ 1891 @LENGTH@ 34
---------INS MethodInvocation@@assertTrue(name.contains("host")) @TO@ ExpressionStatement@@MethodInvocation:assertTrue(name.contains("host")) @AT@ 1891 @LENGTH@ 33
------------INS SimpleName@@MethodName:assertTrue:[name.contains("host")] @TO@ MethodInvocation@@assertTrue(name.contains("host")) @AT@ 1891 @LENGTH@ 33
---------------INS MethodInvocation@@name.contains("host") @TO@ SimpleName@@MethodName:assertTrue:[name.contains("host")] @AT@ 1902 @LENGTH@ 21
------------------INS SimpleName@@Name:name @TO@ MethodInvocation@@name.contains("host") @AT@ 1902 @LENGTH@ 4
------------------INS SimpleName@@MethodName:contains:["host"] @TO@ MethodInvocation@@name.contains("host") @AT@ 1907 @LENGTH@ 16
---------------------INS StringLiteral@@"host" @TO@ SimpleName@@MethodName:contains:["host"] @AT@ 1916 @LENGTH@ 6
------INS Block@@FinallyBody:{  File f=new File(zf.name());  f.delete();} @TO@ TryStatement@@try {  assertTrue(name.endsWith(".zip"));  assertTrue(name.contains("host"));}  finally {  File f=new File(zf.name());  f.delete();} @AT@ 1952 @LENGTH@ 77
---------INS VariableDeclarationStatement@@File f=new File(zf.name()); @TO@ Block@@FinallyBody:{  File f=new File(zf.name());  f.delete();} @AT@ 1966 @LENGTH@ 29
------------INS SimpleType@@File @TO@ VariableDeclarationStatement@@File f=new File(zf.name()); @AT@ 1966 @LENGTH@ 4
------------INS VariableDeclarationFragment@@f=new File(zf.name()) @TO@ VariableDeclarationStatement@@File f=new File(zf.name()); @AT@ 1971 @LENGTH@ 23
---------------INS SimpleName@@f @TO@ VariableDeclarationFragment@@f=new File(zf.name()) @AT@ 1971 @LENGTH@ 1
---------------INS ClassInstanceCreation@@File[zf.name()] @TO@ VariableDeclarationFragment@@f=new File(zf.name()) @AT@ 1975 @LENGTH@ 19
------------------INS New@@new @TO@ ClassInstanceCreation@@File[zf.name()] @AT@ 1975 @LENGTH@ 3
------------------INS SimpleType@@File @TO@ ClassInstanceCreation@@File[zf.name()] @AT@ 1979 @LENGTH@ 4
------------------INS MethodInvocation@@zf.name() @TO@ ClassInstanceCreation@@File[zf.name()] @AT@ 1984 @LENGTH@ 9
---------------------INS SimpleName@@Name:zf @TO@ MethodInvocation@@zf.name() @AT@ 1984 @LENGTH@ 2
---------------------INS SimpleName@@MethodName:name:[] @TO@ MethodInvocation@@zf.name() @AT@ 1987 @LENGTH@ 6
---------INS ExpressionStatement@@MethodInvocation:f.delete() @TO@ Block@@FinallyBody:{  File f=new File(zf.name());  f.delete();} @AT@ 2008 @LENGTH@ 11
------------INS MethodInvocation@@f.delete() @TO@ ExpressionStatement@@MethodInvocation:f.delete() @AT@ 2008 @LENGTH@ 10
---------------INS SimpleName@@Name:f @TO@ MethodInvocation@@f.delete() @AT@ 2008 @LENGTH@ 1
---------------INS SimpleName@@MethodName:delete:[] @TO@ MethodInvocation@@f.delete() @AT@ 2010 @LENGTH@ 8


UPD ExpressionStatement@@MethodInvocation:System.out.println("URLs are: " + url1 + ", "+ url2) @TO@ MethodInvocation:log.info("URLs are: " + url1 + ", "+ url2) @AT@ 5176 @LENGTH@ 54
---UPD MethodInvocation@@System.out.println("URLs are: " + url1 + ", "+ url2) @TO@ log.info("URLs are: " + url1 + ", "+ url2) @AT@ 5176 @LENGTH@ 53
------INS SimpleName@@Name:log @TO@ MethodInvocation@@System.out.println("URLs are: " + url1 + ", "+ url2) @AT@ 5166 @LENGTH@ 3
------DEL QualifiedName@@Name:System.out @AT@ 5176 @LENGTH@ 10
------UPD SimpleName@@MethodName:println:["URLs are: " + url1 + ", "+ url2] @TO@ MethodName:info:["URLs are: " + url1 + ", "+ url2] @AT@ 5187 @LENGTH@ 42


UPD ExpressionStatement@@MethodInvocation:parseDeploymentOverlays(reader,expectedNs,groupAddress,list) @TO@ MethodInvocation:parseDeploymentOverlays(reader,expectedNs,groupAddress,list,false,true) @AT@ 37572 @LENGTH@ 64
---UPD MethodInvocation@@parseDeploymentOverlays(reader,expectedNs,groupAddress,list) @TO@ parseDeploymentOverlays(reader,expectedNs,groupAddress,list,false,true) @AT@ 37572 @LENGTH@ 63
------UPD SimpleName@@MethodName:parseDeploymentOverlays:[reader, expectedNs, groupAddress, list] @TO@ MethodName:parseDeploymentOverlays:[reader, expectedNs, groupAddress, list, false, true] @AT@ 37572 @LENGTH@ 63
---------INS BooleanLiteral@@false @TO@ SimpleName@@MethodName:parseDeploymentOverlays:[reader, expectedNs, groupAddress, list] @AT@ 37649 @LENGTH@ 5
---------INS BooleanLiteral@@true @TO@ SimpleName@@MethodName:parseDeploymentOverlays:[reader, expectedNs, groupAddress, list] @AT@ 37656 @LENGTH@ 4


UPD ExpressionStatement@@MethodInvocation:System.out.println(war.toString(true)) @TO@ MethodInvocation:log.info(war.toString(true)) @AT@ 2859 @LENGTH@ 39
---UPD MethodInvocation@@System.out.println(war.toString(true)) @TO@ log.info(war.toString(true)) @AT@ 2859 @LENGTH@ 38
------DEL QualifiedName@@Name:System.out @AT@ 2859 @LENGTH@ 10
------INS SimpleName@@Name:log @TO@ MethodInvocation@@System.out.println(war.toString(true)) @AT@ 2859 @LENGTH@ 3
------UPD SimpleName@@MethodName:println:[war.toString(true)] @TO@ MethodName:info:[war.toString(true)] @AT@ 2870 @LENGTH@ 27


UPD IfStatement@@if (newProfile != null && !oldProfiles[i].configurationEquals(newProfile)) {  requiresUpgrade=true;} @TO@ if (newProfile != null && !oldProfiles[i].agentConfigurationEquals(newProfile)) {  requiresUpgrade=true;} @AT@ 24504 @LENGTH@ 130
---UPD InfixExpression@@newProfile != null && !oldProfiles[i].configurationEquals(newProfile) @TO@ newProfile != null && !oldProfiles[i].agentConfigurationEquals(newProfile) @AT@ 24508 @LENGTH@ 69
------UPD PrefixExpression@@!oldProfiles[i].configurationEquals(newProfile) @TO@ !oldProfiles[i].agentConfigurationEquals(newProfile) @AT@ 24530 @LENGTH@ 47
---------UPD MethodInvocation@@oldProfiles[i].configurationEquals(newProfile) @TO@ oldProfiles[i].agentConfigurationEquals(newProfile) @AT@ 24531 @LENGTH@ 46
------------UPD SimpleName@@MethodName:configurationEquals:[newProfile] @TO@ MethodName:agentConfigurationEquals:[newProfile] @AT@ 24546 @LENGTH@ 31


INS IfStatement@@if (!undefinedOnly || !attributeValue.isDefined()) {  attributeValue.set(hardCodedValue);} @TO@ MethodDeclaration@@public, void, MethodName:convertAttribute, PathAddress address, String name, ModelNode attributeValue, TransformationContext context,  @AT@ 5993 @LENGTH@ 134
---INS InfixExpression@@!undefinedOnly || !attributeValue.isDefined() @TO@ IfStatement@@if (!undefinedOnly || !attributeValue.isDefined()) {  attributeValue.set(hardCodedValue);} @AT@ 5997 @LENGTH@ 45
------INS PrefixExpression@@!undefinedOnly @TO@ InfixExpression@@!undefinedOnly || !attributeValue.isDefined() @AT@ 5997 @LENGTH@ 14
---------INS Operator@@! @TO@ PrefixExpression@@!undefinedOnly @AT@ 5997 @LENGTH@ 1
---------INS SimpleName@@undefinedOnly @TO@ PrefixExpression@@!undefinedOnly @AT@ 5998 @LENGTH@ 13
------INS Operator@@|| @TO@ InfixExpression@@!undefinedOnly || !attributeValue.isDefined() @AT@ 6011 @LENGTH@ 2
------INS PrefixExpression@@!attributeValue.isDefined() @TO@ InfixExpression@@!undefinedOnly || !attributeValue.isDefined() @AT@ 6015 @LENGTH@ 27
---------INS Operator@@! @TO@ PrefixExpression@@!attributeValue.isDefined() @AT@ 6015 @LENGTH@ 1
---------INS MethodInvocation@@attributeValue.isDefined() @TO@ PrefixExpression@@!attributeValue.isDefined() @AT@ 6016 @LENGTH@ 26
------------INS SimpleName@@Name:attributeValue @TO@ MethodInvocation@@attributeValue.isDefined() @AT@ 6016 @LENGTH@ 14
------------INS SimpleName@@MethodName:isDefined:[] @TO@ MethodInvocation@@attributeValue.isDefined() @AT@ 6031 @LENGTH@ 11
---INS Block@@ThenBody:{  attributeValue.set(hardCodedValue);} @TO@ IfStatement@@if (!undefinedOnly || !attributeValue.isDefined()) {  attributeValue.set(hardCodedValue);} @AT@ 6044 @LENGTH@ 83
------MOV ExpressionStatement@@MethodInvocation:attributeValue.set(hardCodedValue) @TO@ Block@@ThenBody:{  attributeValue.set(hardCodedValue);} @AT@ 4958 @LENGTH@ 35


INS IfStatement@@if (id.equals("*")) {  return true;} @TO@ MethodDeclaration@@public, boolean, MethodName:match, ProcessorDefinition<?> processor,  @AT@ 2105 @LENGTH@ 141
---INS MethodInvocation@@id.equals("*") @TO@ IfStatement@@if (id.equals("*")) {  return true;} @AT@ 2109 @LENGTH@ 14
------INS SimpleName@@Name:id @TO@ MethodInvocation@@id.equals("*") @AT@ 2109 @LENGTH@ 2
------INS SimpleName@@MethodName:equals:["*"] @TO@ MethodInvocation@@id.equals("*") @AT@ 2112 @LENGTH@ 11
---------INS StringLiteral@@"*" @TO@ SimpleName@@MethodName:equals:["*"] @AT@ 2119 @LENGTH@ 3
---INS Block@@ThenBody:{  return true;} @TO@ IfStatement@@if (id.equals("*")) {  return true;} @AT@ 2125 @LENGTH@ 121
------INS ReturnStatement@@BooleanLiteral:true @TO@ Block@@ThenBody:{  return true;} @AT@ 2220 @LENGTH@ 12
---------INS BooleanLiteral@@true @TO@ ReturnStatement@@BooleanLiteral:true @AT@ 2227 @LENGTH@ 4


UPD TryStatement@@try {  testSupport=null;  DomainTestSuite.stopSupport();}  finally {  war1.delete();  war2.delete();  war3.delete();} @TO@ try {  testSupport.stop();  testSupport=null;}  finally {  war1.delete();  war2.delete();  war3.delete();} @AT@ 5582 @LENGTH@ 191
---MOV ExpressionStatement@@Assignment:testSupport=null @TO@ TryStatement@@try {  testSupport=null;  DomainTestSuite.stopSupport();}  finally {  war1.delete();  war2.delete();  war3.delete();} @AT@ 5600 @LENGTH@ 19
---UPD ExpressionStatement@@MethodInvocation:DomainTestSuite.stopSupport() @TO@ MethodInvocation:testSupport.stop() @AT@ 5632 @LENGTH@ 30
------UPD MethodInvocation@@DomainTestSuite.stopSupport() @TO@ testSupport.stop() @AT@ 5632 @LENGTH@ 29
---------UPD SimpleName@@Name:DomainTestSuite @TO@ Name:testSupport @AT@ 5632 @LENGTH@ 15
---------UPD SimpleName@@MethodName:stopSupport:[] @TO@ MethodName:stop:[] @AT@ 5648 @LENGTH@ 13


INS IfStatement@@if (!getPatterns().isEmpty()) {  pubsub.punsubscribe(new byte[0]);} @TO@ MethodDeclaration@@protected, void, MethodName:doClose,  @AT@ 1476 @LENGTH@ 71
---INS PrefixExpression@@!getPatterns().isEmpty() @TO@ IfStatement@@if (!getPatterns().isEmpty()) {  pubsub.punsubscribe(new byte[0]);} @AT@ 1479 @LENGTH@ 24
------INS Operator@@! @TO@ PrefixExpression@@!getPatterns().isEmpty() @AT@ 1479 @LENGTH@ 1
------INS MethodInvocation@@getPatterns().isEmpty() @TO@ PrefixExpression@@!getPatterns().isEmpty() @AT@ 1480 @LENGTH@ 23
---------INS MethodInvocation@@MethodName:getPatterns:[] @TO@ MethodInvocation@@getPatterns().isEmpty() @AT@ 1480 @LENGTH@ 13
---------INS SimpleName@@MethodName:isEmpty:[] @TO@ MethodInvocation@@getPatterns().isEmpty() @AT@ 1494 @LENGTH@ 9
---INS Block@@ThenBody:{  pubsub.punsubscribe(new byte[0]);} @TO@ IfStatement@@if (!getPatterns().isEmpty()) {  pubsub.punsubscribe(new byte[0]);} @AT@ 1505 @LENGTH@ 42
------MOV ExpressionStatement@@MethodInvocation:pubsub.punsubscribe(new byte[0]) @TO@ Block@@ThenBody:{  pubsub.punsubscribe(new byte[0]);} @AT@ 1438 @LENGTH@ 33


DEL FieldDeclaration@@protected, final, List<String>, [discardedOperations=new LinkedList<String>()] @AT@ 1949 @LENGTH@ 76
---DEL Modifier@@protected @AT@ 1949 @LENGTH@ 9
---DEL Modifier@@final @AT@ 1959 @LENGTH@ 5
---DEL ParameterizedType@@List<String> @AT@ 1965 @LENGTH@ 12
------DEL SimpleType@@List @AT@ 1965 @LENGTH@ 4
------DEL SimpleType@@String @AT@ 1970 @LENGTH@ 6
---DEL VariableDeclarationFragment@@discardedOperations=new LinkedList<String>() @AT@ 1978 @LENGTH@ 46
------DEL SimpleName@@discardedOperations @AT@ 1978 @LENGTH@ 19
------DEL ClassInstanceCreation@@LinkedList<String>[] @AT@ 2000 @LENGTH@ 24
---------DEL New@@new @AT@ 2000 @LENGTH@ 3
---------DEL ParameterizedType@@LinkedList<String> @AT@ 2004 @LENGTH@ 18
------------DEL SimpleType@@LinkedList @AT@ 2004 @LENGTH@ 10
------------DEL SimpleType@@String @AT@ 2015 @LENGTH@ 6


UPD ExpressionStatement@@MethodInvocation:rootResourceRegistration.registerReadWriteAttribute(attr,null,ReloadRequiredRemoveStepHandler.INSTANCE) @TO@ MethodInvocation:rootResourceRegistration.registerReadWriteAttribute(attr,null,SessionAttributeWriteHandler.INSTANCE) @AT@ 3488 @LENGTH@ 106
---UPD MethodInvocation@@rootResourceRegistration.registerReadWriteAttribute(attr,null,ReloadRequiredRemoveStepHandler.INSTANCE) @TO@ rootResourceRegistration.registerReadWriteAttribute(attr,null,SessionAttributeWriteHandler.INSTANCE) @AT@ 3488 @LENGTH@ 105
------UPD SimpleName@@MethodName:registerReadWriteAttribute:[attr, null, ReloadRequiredRemoveStepHandler.INSTANCE] @TO@ MethodName:registerReadWriteAttribute:[attr, null, SessionAttributeWriteHandler.INSTANCE] @AT@ 3513 @LENGTH@ 80
---------UPD QualifiedName@@ReloadRequiredRemoveStepHandler.INSTANCE @TO@ SessionAttributeWriteHandler.INSTANCE @AT@ 3552 @LENGTH@ 40
------------UPD SimpleName@@ReloadRequiredRemoveStepHandler @TO@ SessionAttributeWriteHandler @AT@ 3552 @LENGTH@ 31


UPD MethodDeclaration@@public, synchronized, boolean, MethodName:isCached, final Object key,  @TO@ public, synchronized, boolean, MethodName:containsNotRemoved, final Object key,  @AT@ 2405 @LENGTH@ 264
---UPD SimpleName@@MethodName:isCached @TO@ MethodName:containsNotRemoved @AT@ 2433 @LENGTH@ 8
---UPD ReturnStatement@@MethodInvocation:cache.containsKey(key) @TO@ InfixExpression:cache.containsKey(key) && !cache.get(key).instance.isRemoved() @AT@ 2633 @LENGTH@ 30
------INS InfixExpression@@cache.containsKey(key) && !cache.get(key).instance.isRemoved() @TO@ ReturnStatement@@MethodInvocation:cache.containsKey(key) @AT@ 2651 @LENGTH@ 62
---------MOV MethodInvocation@@cache.containsKey(key) @TO@ InfixExpression@@cache.containsKey(key) && !cache.get(key).instance.isRemoved() @AT@ 2640 @LENGTH@ 22
---------INS Operator@@&& @TO@ InfixExpression@@cache.containsKey(key) && !cache.get(key).instance.isRemoved() @AT@ 2673 @LENGTH@ 2
---------INS PrefixExpression@@!cache.get(key).instance.isRemoved() @TO@ InfixExpression@@cache.containsKey(key) && !cache.get(key).instance.isRemoved() @AT@ 2677 @LENGTH@ 36
------------INS Operator@@! @TO@ PrefixExpression@@!cache.get(key).instance.isRemoved() @AT@ 2677 @LENGTH@ 1
------------INS MethodInvocation@@cache.get(key).instance.isRemoved() @TO@ PrefixExpression@@!cache.get(key).instance.isRemoved() @AT@ 2678 @LENGTH@ 35
---------------INS FieldAccess@@cache.get(key).instance @TO@ MethodInvocation@@cache.get(key).instance.isRemoved() @AT@ 2678 @LENGTH@ 23
------------------INS MethodInvocation@@cache.get(key) @TO@ FieldAccess@@cache.get(key).instance @AT@ 2678 @LENGTH@ 14
---------------------INS SimpleName@@Name:cache @TO@ MethodInvocation@@cache.get(key) @AT@ 2678 @LENGTH@ 5
---------------------INS SimpleName@@MethodName:get:[key] @TO@ MethodInvocation@@cache.get(key) @AT@ 2684 @LENGTH@ 8
------------------------INS SimpleName@@key @TO@ SimpleName@@MethodName:get:[key] @AT@ 2688 @LENGTH@ 3
------------------INS SimpleName@@instance @TO@ FieldAccess@@cache.get(key).instance @AT@ 2693 @LENGTH@ 8
---------------INS SimpleName@@MethodName:isRemoved:[] @TO@ MethodInvocation@@cache.get(key).instance.isRemoved() @AT@ 2702 @LENGTH@ 11


INS MethodDeclaration@@Name, MethodName:getBaseName, NamingException,  @TO@ TypeDeclaration@@[public]NamingStore,  @AT@ 1677 @LENGTH@ 37
---INS SimpleType@@Name @TO@ MethodDeclaration@@Name, MethodName:getBaseName, NamingException,  @AT@ 1672 @LENGTH@ 4
---INS SimpleName@@MethodName:getBaseName @TO@ MethodDeclaration@@Name, MethodName:getBaseName, NamingException,  @AT@ 1677 @LENGTH@ 11
---INS SimpleType@@NamingException @TO@ MethodDeclaration@@Name, MethodName:getBaseName, NamingException,  @AT@ 1698 @LENGTH@ 15


INS ExpressionStatement@@MethodInvocation:log.info("URLs are: " + defaultURI1 + ", "+ defaultURI2) @TO@ MethodDeclaration@@public, void, MethodName:testSingletonService, @ArquillianResource() @OperateOnDeployment(DEPLOYMENT_1) URL baseURL1, @ArquillianResource() @OperateOnDeployment(DEPLOYMENT_2) URL baseURL2, IOException, InterruptedException, URISyntaxException,  @AT@ 4640 @LENGTH@ 58
---INS MethodInvocation@@log.info("URLs are: " + defaultURI1 + ", "+ defaultURI2) @TO@ ExpressionStatement@@MethodInvocation:log.info("URLs are: " + defaultURI1 + ", "+ defaultURI2) @AT@ 4640 @LENGTH@ 57
------INS SimpleName@@Name:log @TO@ MethodInvocation@@log.info("URLs are: " + defaultURI1 + ", "+ defaultURI2) @AT@ 4640 @LENGTH@ 3
------INS SimpleName@@MethodName:info:["URLs are: " + defaultURI1 + ", "+ defaultURI2] @TO@ MethodInvocation@@log.info("URLs are: " + defaultURI1 + ", "+ defaultURI2) @AT@ 4644 @LENGTH@ 53
---------INS InfixExpression@@"URLs are: " + defaultURI1 + ", "+ defaultURI2 @TO@ SimpleName@@MethodName:info:["URLs are: " + defaultURI1 + ", "+ defaultURI2] @AT@ 4649 @LENGTH@ 47
------------INS StringLiteral@@"URLs are: " @TO@ InfixExpression@@"URLs are: " + defaultURI1 + ", "+ defaultURI2 @AT@ 4649 @LENGTH@ 12
------------INS Operator@@+ @TO@ InfixExpression@@"URLs are: " + defaultURI1 + ", "+ defaultURI2 @AT@ 4661 @LENGTH@ 1
------------INS SimpleName@@defaultURI1 @TO@ InfixExpression@@"URLs are: " + defaultURI1 + ", "+ defaultURI2 @AT@ 4664 @LENGTH@ 11
------------INS StringLiteral@@", " @TO@ InfixExpression@@"URLs are: " + defaultURI1 + ", "+ defaultURI2 @AT@ 4678 @LENGTH@ 4
------------INS SimpleName@@defaultURI2 @TO@ InfixExpression@@"URLs are: " + defaultURI1 + ", "+ defaultURI2 @AT@ 4685 @LENGTH@ 11


UPD WhileStatement@@while (it.hasNext()) {  Map.Entry<String,Object> entry=it.next();  String name=entry.getKey();  Object v=entry.getValue();  String value=v != null ? v.toString() : null;  if (value != null && isReferenceParameter(value)) {    List<Method> candidates=IntrospectionSupport.findSetterMethodsOrderedByParameterType(bean.getClass(),name,false);    Exception typeConversionFailed=null;    for (    Method setter : candidates) {      Class parameterType=setter.getParameterTypes()[0];      Object ref=resolveReferenceParameter(context,value,parameterType,false);      if (ref != null) {        try {          boolean hit=IntrospectionSupport.setProperty(context.getTypeConverter(),bean,setter,ref);          if (hit) {            if (LOG.isDebugEnabled()) {              LOG.debug("Configured property: {} on bean: {} with value: {}",new Object[]{name,bean,ref});            }            it.remove();            typeConversionFailed=null;            break;          }        } catch (        NoTypeConversionAvailableException e) {          typeConversionFailed=e;        }catch (        IllegalArgumentException e) {          typeConversionFailed=e;        }      }    }    if (typeConversionFailed != null) {      throw new IllegalArgumentException("Could not find a suitable setter for property: " + name + " as there isn't a setter method with same type: "+ value.getClass().getCanonicalName()+ " nor type conversion possible: "+ typeConversionFailed.getMessage());    }  }} @TO@ while (it.hasNext()) {  Map.Entry<String,Object> entry=it.next();  String name=entry.getKey();  Object v=entry.getValue();  String value=v != null ? v.toString() : null;  if (value != null && isReferenceParameter(value)) {    boolean hit=IntrospectionSupport.setProperty(context,context.getTypeConverter(),bean,name,null,value,true);    if (hit) {      it.remove();    }  }} @AT@ 9561 @LENGTH@ 2457
---UPD Block@@WhileBody:{  Map.Entry<String,Object> entry=it.next();  String name=entry.getKey();  Object v=entry.getValue();  String value=v != null ? v.toString() : null;  if (value != null && isReferenceParameter(value)) {    List<Method> candidates=IntrospectionSupport.findSetterMethodsOrderedByParameterType(bean.getClass(),name,false);    Exception typeConversionFailed=null;    for (    Method setter : candidates) {      Class parameterType=setter.getParameterTypes()[0];      Object ref=resolveReferenceParameter(context,value,parameterType,false);      if (ref != null) {        try {          boolean hit=IntrospectionSupport.setProperty(context.getTypeConverter(),bean,setter,ref);          if (hit) {            if (LOG.isDebugEnabled()) {              LOG.debug("Configured property: {} on bean: {} with value: {}",new Object[]{name,bean,ref});            }            it.remove();            typeConversionFailed=null;            break;          }        } catch (        NoTypeConversionAvailableException e) {          typeConversionFailed=e;        }catch (        IllegalArgumentException e) {          typeConversionFailed=e;        }      }    }    if (typeConversionFailed != null) {      throw new IllegalArgumentException("Could not find a suitable setter for property: " + name + " as there isn't a setter method with same type: "+ value.getClass().getCanonicalName()+ " nor type conversion possible: "+ typeConversionFailed.getMessage());    }  }} @TO@ WhileBody:{  Map.Entry<String,Object> entry=it.next();  String name=entry.getKey();  Object v=entry.getValue();  String value=v != null ? v.toString() : null;  if (value != null && isReferenceParameter(value)) {    boolean hit=IntrospectionSupport.setProperty(context,context.getTypeConverter(),bean,name,null,value,true);    if (hit) {      it.remove();    }  }} @AT@ 9582 @LENGTH@ 2436
------INS IfStatement@@if (value != null && isReferenceParameter(value)) {  boolean hit=IntrospectionSupport.setProperty(context,context.getTypeConverter(),bean,name,null,value,true);  if (hit) {    it.remove();  }} @TO@ Block@@WhileBody:{  Map.Entry<String,Object> entry=it.next();  String name=entry.getKey();  Object v=entry.getValue();  String value=v != null ? v.toString() : null;  if (value != null && isReferenceParameter(value)) {    List<Method> candidates=IntrospectionSupport.findSetterMethodsOrderedByParameterType(bean.getClass(),name,false);    Exception typeConversionFailed=null;    for (    Method setter : candidates) {      Class parameterType=setter.getParameterTypes()[0];      Object ref=resolveReferenceParameter(context,value,parameterType,false);      if (ref != null) {        try {          boolean hit=IntrospectionSupport.setProperty(context.getTypeConverter(),bean,setter,ref);          if (hit) {            if (LOG.isDebugEnabled()) {              LOG.debug("Configured property: {} on bean: {} with value: {}",new Object[]{name,bean,ref});            }            it.remove();            typeConversionFailed=null;            break;          }        } catch (        NoTypeConversionAvailableException e) {          typeConversionFailed=e;        }catch (        IllegalArgumentException e) {          typeConversionFailed=e;        }      }    }    if (typeConversionFailed != null) {      throw new IllegalArgumentException("Could not find a suitable setter for property: " + name + " as there isn't a setter method with same type: "+ value.getClass().getCanonicalName()+ " nor type conversion possible: "+ typeConversionFailed.getMessage());    }  }} @AT@ 9703 @LENGTH@ 358
---------MOV InfixExpression@@value != null && isReferenceParameter(value) @TO@ IfStatement@@if (value != null && isReferenceParameter(value)) {  boolean hit=IntrospectionSupport.setProperty(context,context.getTypeConverter(),bean,name,null,value,true);  if (hit) {    it.remove();  }} @AT@ 9800 @LENGTH@ 44
---------MOV Block@@ThenBody:{  try {    boolean hit=IntrospectionSupport.setProperty(context.getTypeConverter(),bean,setter,ref);    if (hit) {      if (LOG.isDebugEnabled()) {        LOG.debug("Configured property: {} on bean: {} with value: {}",new Object[]{name,bean,ref});      }      it.remove();      typeConversionFailed=null;      break;    }  } catch (  NoTypeConversionAvailableException e) {    typeConversionFailed=e;  }catch (  IllegalArgumentException e) {    typeConversionFailed=e;  }} @TO@ IfStatement@@if (value != null && isReferenceParameter(value)) {  boolean hit=IntrospectionSupport.setProperty(context,context.getTypeConverter(),bean,name,null,value,true);  if (hit) {    it.remove();  }} @AT@ 10390 @LENGTH@ 982
------------INS VariableDeclarationStatement@@boolean hit=IntrospectionSupport.setProperty(context,context.getTypeConverter(),bean,name,null,value,true); @TO@ Block@@ThenBody:{  try {    boolean hit=IntrospectionSupport.setProperty(context.getTypeConverter(),bean,setter,ref);    if (hit) {      if (LOG.isDebugEnabled()) {        LOG.debug("Configured property: {} on bean: {} with value: {}",new Object[]{name,bean,ref});      }      it.remove();      typeConversionFailed=null;      break;    }  } catch (  NoTypeConversionAvailableException e) {    typeConversionFailed=e;  }catch (  IllegalArgumentException e) {    typeConversionFailed=e;  }} @AT@ 9771 @LENGTH@ 115
---------------MOV PrimitiveType@@boolean @TO@ VariableDeclarationStatement@@boolean hit=IntrospectionSupport.setProperty(context,context.getTypeConverter(),bean,name,null,value,true); @AT@ 10450 @LENGTH@ 7
---------------MOV VariableDeclarationFragment@@hit=IntrospectionSupport.setProperty(context.getTypeConverter(),bean,setter,ref) @TO@ VariableDeclarationStatement@@boolean hit=IntrospectionSupport.setProperty(context,context.getTypeConverter(),bean,name,null,value,true); @AT@ 10458 @LENGTH@ 85
------------INS IfStatement@@if (hit) {  it.remove();} @TO@ Block@@ThenBody:{  try {    boolean hit=IntrospectionSupport.setProperty(context.getTypeConverter(),bean,setter,ref);    if (hit) {      if (LOG.isDebugEnabled()) {        LOG.debug("Configured property: {} on bean: {} with value: {}",new Object[]{name,bean,ref});      }      it.remove();      typeConversionFailed=null;      break;    }  } catch (  NoTypeConversionAvailableException e) {    typeConversionFailed=e;  }catch (  IllegalArgumentException e) {    typeConversionFailed=e;  }} @AT@ 9903 @LENGTH@ 144
---------------MOV SimpleName@@hit @TO@ IfStatement@@if (hit) {  it.remove();} @AT@ 10578 @LENGTH@ 3
---------------MOV Block@@ThenBody:{  if (LOG.isDebugEnabled()) {    LOG.debug("Configured property: {} on bean: {} with value: {}",new Object[]{name,bean,ref});  }  it.remove();  typeConversionFailed=null;  break;} @TO@ IfStatement@@if (hit) {  it.remove();} @AT@ 10583 @LENGTH@ 497
------DEL IfStatement@@if (value != null && isReferenceParameter(value)) {  List<Method> candidates=IntrospectionSupport.findSetterMethodsOrderedByParameterType(bean.getClass(),name,false);  Exception typeConversionFailed=null;  for (  Method setter : candidates) {    Class parameterType=setter.getParameterTypes()[0];    Object ref=resolveReferenceParameter(context,value,parameterType,false);    if (ref != null) {      try {        boolean hit=IntrospectionSupport.setProperty(context.getTypeConverter(),bean,setter,ref);        if (hit) {          if (LOG.isDebugEnabled()) {            LOG.debug("Configured property: {} on bean: {} with value: {}",new Object[]{name,bean,ref});          }          it.remove();          typeConversionFailed=null;          break;        }      } catch (      NoTypeConversionAvailableException e) {        typeConversionFailed=e;      }catch (      IllegalArgumentException e) {        typeConversionFailed=e;      }    }  }  if (typeConversionFailed != null) {    throw new IllegalArgumentException("Could not find a suitable setter for property: " + name + " as there isn't a setter method with same type: "+ value.getClass().getCanonicalName()+ " nor type conversion possible: "+ typeConversionFailed.getMessage());  }} @AT@ 9796 @LENGTH@ 2212
---------DEL Block@@ThenBody:{  List<Method> candidates=IntrospectionSupport.findSetterMethodsOrderedByParameterType(bean.getClass(),name,false);  Exception typeConversionFailed=null;  for (  Method setter : candidates) {    Class parameterType=setter.getParameterTypes()[0];    Object ref=resolveReferenceParameter(context,value,parameterType,false);    if (ref != null) {      try {        boolean hit=IntrospectionSupport.setProperty(context.getTypeConverter(),bean,setter,ref);        if (hit) {          if (LOG.isDebugEnabled()) {            LOG.debug("Configured property: {} on bean: {} with value: {}",new Object[]{name,bean,ref});          }          it.remove();          typeConversionFailed=null;          break;        }      } catch (      NoTypeConversionAvailableException e) {        typeConversionFailed=e;      }catch (      IllegalArgumentException e) {        typeConversionFailed=e;      }    }  }  if (typeConversionFailed != null) {    throw new IllegalArgumentException("Could not find a suitable setter for property: " + name + " as there isn't a setter method with same type: "+ value.getClass().getCanonicalName()+ " nor type conversion possible: "+ typeConversionFailed.getMessage());  }} @AT@ 9846 @LENGTH@ 2162
------------DEL VariableDeclarationStatement@@List<Method> candidates=IntrospectionSupport.findSetterMethodsOrderedByParameterType(bean.getClass(),name,false); @AT@ 9864 @LENGTH@ 117
---------------DEL ParameterizedType@@List<Method> @AT@ 9864 @LENGTH@ 12
------------------DEL SimpleType@@List @AT@ 9864 @LENGTH@ 4
------------------DEL SimpleType@@Method @AT@ 9869 @LENGTH@ 6
---------------DEL VariableDeclarationFragment@@candidates=IntrospectionSupport.findSetterMethodsOrderedByParameterType(bean.getClass(),name,false) @AT@ 9877 @LENGTH@ 103
------------------DEL SimpleName@@candidates @AT@ 9877 @LENGTH@ 10
------------------DEL MethodInvocation@@IntrospectionSupport.findSetterMethodsOrderedByParameterType(bean.getClass(),name,false) @AT@ 9890 @LENGTH@ 90
---------------------DEL SimpleName@@Name:IntrospectionSupport @AT@ 9890 @LENGTH@ 20
---------------------DEL SimpleName@@MethodName:findSetterMethodsOrderedByParameterType:[bean.getClass(), name, false] @AT@ 9911 @LENGTH@ 69
------------------------DEL MethodInvocation@@bean.getClass() @AT@ 9951 @LENGTH@ 15
---------------------------DEL SimpleName@@Name:bean @AT@ 9951 @LENGTH@ 4
---------------------------DEL SimpleName@@MethodName:getClass:[] @AT@ 9956 @LENGTH@ 10
------------------------DEL SimpleName@@name @AT@ 9968 @LENGTH@ 4
------------------------DEL BooleanLiteral@@false @AT@ 9974 @LENGTH@ 5
------------DEL VariableDeclarationStatement@@Exception typeConversionFailed=null; @AT@ 9999 @LENGTH@ 38
---------------DEL SimpleType@@Exception @AT@ 9999 @LENGTH@ 9
---------------DEL VariableDeclarationFragment@@typeConversionFailed=null @AT@ 10009 @LENGTH@ 27
------------------DEL SimpleName@@typeConversionFailed @AT@ 10009 @LENGTH@ 20
------------------DEL NullLiteral@@null @AT@ 10032 @LENGTH@ 4
------------DEL EnhancedForStatement@@for (Method setter : candidates) {  Class parameterType=setter.getParameterTypes()[0];  Object ref=resolveReferenceParameter(context,value,parameterType,false);  if (ref != null) {    try {      boolean hit=IntrospectionSupport.setProperty(context.getTypeConverter(),bean,setter,ref);      if (hit) {        if (LOG.isDebugEnabled()) {          LOG.debug("Configured property: {} on bean: {} with value: {}",new Object[]{name,bean,ref});        }        it.remove();        typeConversionFailed=null;        break;      }    } catch (    NoTypeConversionAvailableException e) {      typeConversionFailed=e;    }catch (    IllegalArgumentException e) {      typeConversionFailed=e;    }  }} @AT@ 10054 @LENGTH@ 1336
---------------DEL SingleVariableDeclaration@@Method setter @AT@ 10059 @LENGTH@ 13
------------------DEL SimpleType@@Method @AT@ 10059 @LENGTH@ 6
------------------DEL SimpleName@@setter @AT@ 10066 @LENGTH@ 6
---------------DEL SimpleName@@candidates @AT@ 10075 @LENGTH@ 10
---------------DEL VariableDeclarationStatement@@Class parameterType=setter.getParameterTypes()[0]; @AT@ 10109 @LENGTH@ 52
------------------DEL SimpleType@@Class @AT@ 10109 @LENGTH@ 5
------------------DEL VariableDeclarationFragment@@parameterType=setter.getParameterTypes()[0] @AT@ 10115 @LENGTH@ 45
---------------------DEL SimpleName@@parameterType @AT@ 10115 @LENGTH@ 13
---------------------DEL ArrayAccess@@setter.getParameterTypes()[0] @AT@ 10131 @LENGTH@ 29
------------------------DEL MethodInvocation@@setter.getParameterTypes() @AT@ 10131 @LENGTH@ 26
---------------------------DEL SimpleName@@Name:setter @AT@ 10131 @LENGTH@ 6
---------------------------DEL SimpleName@@MethodName:getParameterTypes:[] @AT@ 10138 @LENGTH@ 19
------------------------DEL NumberLiteral@@0 @AT@ 10158 @LENGTH@ 1
---------------DEL VariableDeclarationStatement@@Object ref=resolveReferenceParameter(context,value,parameterType,false); @AT@ 10275 @LENGTH@ 77
------------------DEL SimpleType@@Object @AT@ 10275 @LENGTH@ 6
------------------DEL VariableDeclarationFragment@@ref=resolveReferenceParameter(context,value,parameterType,false) @AT@ 10282 @LENGTH@ 69
---------------------DEL SimpleName@@ref @AT@ 10282 @LENGTH@ 3
---------------------DEL MethodInvocation@@resolveReferenceParameter(context,value,parameterType,false) @AT@ 10288 @LENGTH@ 63
------------------------DEL SimpleName@@MethodName:resolveReferenceParameter:[context, value, parameterType, false] @AT@ 10288 @LENGTH@ 63
---------------------------DEL SimpleName@@context @AT@ 10314 @LENGTH@ 7
---------------------------DEL SimpleName@@value @AT@ 10323 @LENGTH@ 5
---------------------------DEL SimpleName@@parameterType @AT@ 10330 @LENGTH@ 13
---------------------------DEL BooleanLiteral@@false @AT@ 10345 @LENGTH@ 5
---------------DEL IfStatement@@if (ref != null) {  try {    boolean hit=IntrospectionSupport.setProperty(context.getTypeConverter(),bean,setter,ref);    if (hit) {      if (LOG.isDebugEnabled()) {        LOG.debug("Configured property: {} on bean: {} with value: {}",new Object[]{name,bean,ref});      }      it.remove();      typeConversionFailed=null;      break;    }  } catch (  NoTypeConversionAvailableException e) {    typeConversionFailed=e;  }catch (  IllegalArgumentException e) {    typeConversionFailed=e;  }} @AT@ 10373 @LENGTH@ 999
------------------DEL InfixExpression@@ref != null @AT@ 10377 @LENGTH@ 11
---------------------DEL SimpleName@@ref @AT@ 10377 @LENGTH@ 3
---------------------DEL Operator@@!= @AT@ 10380 @LENGTH@ 2
---------------------DEL NullLiteral@@null @AT@ 10384 @LENGTH@ 4
------------DEL IfStatement@@if (typeConversionFailed != null) {  throw new IllegalArgumentException("Could not find a suitable setter for property: " + name + " as there isn't a setter method with same type: "+ value.getClass().getCanonicalName()+ " nor type conversion possible: "+ typeConversionFailed.getMessage());} @AT@ 11408 @LENGTH@ 586
---------------DEL InfixExpression@@typeConversionFailed != null @AT@ 11412 @LENGTH@ 28
------------------DEL SimpleName@@typeConversionFailed @AT@ 11412 @LENGTH@ 20
------------------DEL Operator@@!= @AT@ 11432 @LENGTH@ 2
------------------DEL NullLiteral@@null @AT@ 11436 @LENGTH@ 4
---------------DEL Block@@ThenBody:{  throw new IllegalArgumentException("Could not find a suitable setter for property: " + name + " as there isn't a setter method with same type: "+ value.getClass().getCanonicalName()+ " nor type conversion possible: "+ typeConversionFailed.getMessage());} @AT@ 11442 @LENGTH@ 552
------------------DEL ThrowStatement@@ClassInstanceCreation:new IllegalArgumentException("Could not find a suitable setter for property: " + name + " as there isn't a setter method with same type: "+ value.getClass().getCanonicalName()+ " nor type conversion possible: "+ typeConversionFailed.getMessage()) @AT@ 11664 @LENGTH@ 312
---------------------DEL ClassInstanceCreation@@IllegalArgumentException["Could not find a suitable setter for property: " + name + " as there isn't a setter method with same type: "+ value.getClass().getCanonicalName()+ " nor type conversion possible: "+ typeConversionFailed.getMessage()] @AT@ 11670 @LENGTH@ 305
------------------------DEL New@@new @AT@ 11670 @LENGTH@ 3
------------------------DEL SimpleType@@IllegalArgumentException @AT@ 11674 @LENGTH@ 24
------------------------DEL InfixExpression@@"Could not find a suitable setter for property: " + name + " as there isn't a setter method with same type: "+ value.getClass().getCanonicalName()+ " nor type conversion possible: "+ typeConversionFailed.getMessage() @AT@ 11699 @LENGTH@ 275
---------------------------DEL StringLiteral@@"Could not find a suitable setter for property: " @AT@ 11699 @LENGTH@ 49
---------------------------DEL Operator@@+ @AT@ 11748 @LENGTH@ 1
---------------------------DEL SimpleName@@name @AT@ 11751 @LENGTH@ 4
---------------------------DEL StringLiteral@@" as there isn't a setter method with same type: " @AT@ 11786 @LENGTH@ 50
---------------------------DEL MethodInvocation@@value.getClass().getCanonicalName() @AT@ 11839 @LENGTH@ 35
------------------------------DEL MethodInvocation@@MethodName:getClass:[] @AT@ 11839 @LENGTH@ 16
------------------------------DEL SimpleName@@Name:value @AT@ 11839 @LENGTH@ 5
------------------------------DEL SimpleName@@MethodName:getCanonicalName:[] @AT@ 11856 @LENGTH@ 18
---------------------------DEL StringLiteral@@" nor type conversion possible: " @AT@ 11905 @LENGTH@ 33
---------------------------DEL MethodInvocation@@typeConversionFailed.getMessage() @AT@ 11941 @LENGTH@ 33
------------------------------DEL SimpleName@@Name:typeConversionFailed @AT@ 11941 @LENGTH@ 20
------------------------------DEL SimpleName@@MethodName:getMessage:[] @AT@ 11962 @LENGTH@ 12


UPD ExpressionStatement@@MethodInvocation:onException(IllegalArgumentException.class).handled(false) @TO@ MethodInvocation:onException(IllegalArgumentException.class).to("mock:error") @AT@ 3025 @LENGTH@ 59
---UPD MethodInvocation@@onException(IllegalArgumentException.class).handled(false) @TO@ onException(IllegalArgumentException.class).to("mock:error") @AT@ 3025 @LENGTH@ 58
------UPD SimpleName@@MethodName:handled:[false] @TO@ MethodName:to:["mock:error"] @AT@ 3069 @LENGTH@ 14
---------INS StringLiteral@@"mock:error" @TO@ SimpleName@@MethodName:handled:[false] @AT@ 2965 @LENGTH@ 12
---------DEL BooleanLiteral@@false @AT@ 3077 @LENGTH@ 5


UPD ExpressionStatement@@MethodInvocation:actual.add(connection.execute("ZadD",getClass() + "#foo\t0.90\titem")) @TO@ MethodInvocation:connection.execute("ZadD",getClass() + "#foo\t0.90\titem") @AT@ 2202 @LENGTH@ 72
---DEL MethodInvocation@@actual.add(connection.execute("ZadD",getClass() + "#foo\t0.90\titem")) @AT@ 2202 @LENGTH@ 71
------DEL SimpleName@@Name:actual @AT@ 2202 @LENGTH@ 6
------DEL SimpleName@@MethodName:add:[connection.execute("ZadD",getClass() + "#foo\t0.90\titem")] @AT@ 2209 @LENGTH@ 64
---MOV MethodInvocation@@connection.execute("ZadD",getClass() + "#foo\t0.90\titem") @TO@ ExpressionStatement@@MethodInvocation:actual.add(connection.execute("ZadD",getClass() + "#foo\t0.90\titem")) @AT@ 2213 @LENGTH@ 59


INS MethodDeclaration@@public, void, MethodName:testExecute,  @TO@ TypeDeclaration@@[@RunWith(SpringJUnit4ClassRunner.class), @ContextConfiguration, public]SrpConnectionIntegrationTests, AbstractConnectionIntegrationTests @AT@ 3219 @LENGTH@ 195
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testExecute,  @AT@ 3219 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testExecute,  @AT@ 3226 @LENGTH@ 4
---INS SimpleName@@MethodName:testExecute @TO@ MethodDeclaration@@public, void, MethodName:testExecute,  @AT@ 3231 @LENGTH@ 11
---INS ExpressionStatement@@MethodInvocation:connection.set("foo","bar") @TO@ MethodDeclaration@@public, void, MethodName:testExecute,  @AT@ 3249 @LENGTH@ 29
------INS MethodInvocation@@connection.set("foo","bar") @TO@ ExpressionStatement@@MethodInvocation:connection.set("foo","bar") @AT@ 3249 @LENGTH@ 28
---------INS SimpleName@@Name:connection @TO@ MethodInvocation@@connection.set("foo","bar") @AT@ 3249 @LENGTH@ 10
---------INS SimpleName@@MethodName:set:["foo", "bar"] @TO@ MethodInvocation@@connection.set("foo","bar") @AT@ 3260 @LENGTH@ 17
------------INS StringLiteral@@"foo" @TO@ SimpleName@@MethodName:set:["foo", "bar"] @AT@ 3264 @LENGTH@ 5
------------INS StringLiteral@@"bar" @TO@ SimpleName@@MethodName:set:["foo", "bar"] @AT@ 3271 @LENGTH@ 5
---INS VariableDeclarationStatement@@BulkReply reply=(BulkReply)connection.execute("GET","foo"); @TO@ MethodDeclaration@@public, void, MethodName:testExecute,  @AT@ 3281 @LENGTH@ 63
------INS SimpleType@@BulkReply @TO@ VariableDeclarationStatement@@BulkReply reply=(BulkReply)connection.execute("GET","foo"); @AT@ 3281 @LENGTH@ 9
------INS VariableDeclarationFragment@@reply=(BulkReply)connection.execute("GET","foo") @TO@ VariableDeclarationStatement@@BulkReply reply=(BulkReply)connection.execute("GET","foo"); @AT@ 3291 @LENGTH@ 52
---------INS SimpleName@@reply @TO@ VariableDeclarationFragment@@reply=(BulkReply)connection.execute("GET","foo") @AT@ 3291 @LENGTH@ 5
---------INS CastExpression@@(BulkReply)connection.execute("GET","foo") @TO@ VariableDeclarationFragment@@reply=(BulkReply)connection.execute("GET","foo") @AT@ 3299 @LENGTH@ 44
------------INS SimpleType@@BulkReply @TO@ CastExpression@@(BulkReply)connection.execute("GET","foo") @AT@ 3300 @LENGTH@ 9
------------INS MethodInvocation@@connection.execute("GET","foo") @TO@ CastExpression@@(BulkReply)connection.execute("GET","foo") @AT@ 3311 @LENGTH@ 32
---------------INS SimpleName@@Name:connection @TO@ MethodInvocation@@connection.execute("GET","foo") @AT@ 3311 @LENGTH@ 10
---------------INS SimpleName@@MethodName:execute:["GET", "foo"] @TO@ MethodInvocation@@connection.execute("GET","foo") @AT@ 3322 @LENGTH@ 21
------------------INS StringLiteral@@"GET" @TO@ SimpleName@@MethodName:execute:["GET", "foo"] @AT@ 3330 @LENGTH@ 5
------------------INS StringLiteral@@"foo" @TO@ SimpleName@@MethodName:execute:["GET", "foo"] @AT@ 3337 @LENGTH@ 5
---INS ExpressionStatement@@MethodInvocation:assertEquals("bar",stringSerializer.deserialize(reply.data())) @TO@ MethodDeclaration@@public, void, MethodName:testExecute,  @AT@ 3347 @LENGTH@ 64
------INS MethodInvocation@@assertEquals("bar",stringSerializer.deserialize(reply.data())) @TO@ ExpressionStatement@@MethodInvocation:assertEquals("bar",stringSerializer.deserialize(reply.data())) @AT@ 3347 @LENGTH@ 63
---------INS SimpleName@@MethodName:assertEquals:["bar", stringSerializer.deserialize(reply.data())] @TO@ MethodInvocation@@assertEquals("bar",stringSerializer.deserialize(reply.data())) @AT@ 3347 @LENGTH@ 63
------------INS StringLiteral@@"bar" @TO@ SimpleName@@MethodName:assertEquals:["bar", stringSerializer.deserialize(reply.data())] @AT@ 3360 @LENGTH@ 5
------------INS MethodInvocation@@stringSerializer.deserialize(reply.data()) @TO@ SimpleName@@MethodName:assertEquals:["bar", stringSerializer.deserialize(reply.data())] @AT@ 3367 @LENGTH@ 42
---------------INS SimpleName@@Name:stringSerializer @TO@ MethodInvocation@@stringSerializer.deserialize(reply.data()) @AT@ 3367 @LENGTH@ 16
---------------INS SimpleName@@MethodName:deserialize:[reply.data()] @TO@ MethodInvocation@@stringSerializer.deserialize(reply.data()) @AT@ 3384 @LENGTH@ 25
------------------INS MethodInvocation@@reply.data() @TO@ SimpleName@@MethodName:deserialize:[reply.data()] @AT@ 3396 @LENGTH@ 12
---------------------INS SimpleName@@Name:reply @TO@ MethodInvocation@@reply.data() @AT@ 3396 @LENGTH@ 5
---------------------INS SimpleName@@MethodName:data:[] @TO@ MethodInvocation@@reply.data() @AT@ 3402 @LENGTH@ 6


UPD FieldDeclaration@@private, static, final, AttributeDefinition[], [ATTRIBUTES={REGULAR_EXPRESSION}] @TO@ private, static, final, AttributeDefinition[], [ATTRIBUTES={}] @AT@ 2284 @LENGTH@ 79
---UPD VariableDeclarationFragment@@ATTRIBUTES={REGULAR_EXPRESSION} @TO@ ATTRIBUTES={} @AT@ 2327 @LENGTH@ 35
------UPD ArrayInitializer@@{REGULAR_EXPRESSION} @TO@ {} @AT@ 2340 @LENGTH@ 22
---------DEL SimpleName@@REGULAR_EXPRESSION @AT@ 2342 @LENGTH@ 18


UPD ExpressionStatement@@MethodInvocation:assertEquals(Arrays.asList(new Object[]{Arrays.asList(new String[]{"OK","value"})}),convertedResults) @TO@ MethodInvocation:assertEquals(Arrays.asList(new Object[]{"value"}),convertedResults) @AT@ 8409 @LENGTH@ 114
---UPD MethodInvocation@@assertEquals(Arrays.asList(new Object[]{Arrays.asList(new String[]{"OK","value"})}),convertedResults) @TO@ assertEquals(Arrays.asList(new Object[]{"value"}),convertedResults) @AT@ 8409 @LENGTH@ 113
------UPD SimpleName@@MethodName:assertEquals:[Arrays.asList(new Object[]{Arrays.asList(new String[]{"OK","value"})}), convertedResults] @TO@ MethodName:assertEquals:[Arrays.asList(new Object[]{"value"}), convertedResults] @AT@ 8409 @LENGTH@ 113
---------UPD MethodInvocation@@Arrays.asList(new Object[]{Arrays.asList(new String[]{"OK","value"})}) @TO@ Arrays.asList(new Object[]{"value"}) @AT@ 8422 @LENGTH@ 77
------------UPD SimpleName@@MethodName:asList:[new Object[]{Arrays.asList(new String[]{"OK","value"})}] @TO@ MethodName:asList:[new Object[]{"value"}] @AT@ 8429 @LENGTH@ 70
---------------UPD ArrayCreation@@new Object[]{Arrays.asList(new String[]{"OK","value"})} @TO@ new Object[]{"value"} @AT@ 8436 @LENGTH@ 62
------------------DEL ArrayInitializer@@{Arrays.asList(new String[]{"OK","value"})} @AT@ 8449 @LENGTH@ 49
---------------------DEL MethodInvocation@@Arrays.asList(new String[]{"OK","value"}) @AT@ 8451 @LENGTH@ 45
------------------------DEL SimpleName@@Name:Arrays @AT@ 8451 @LENGTH@ 6
------------------------DEL SimpleName@@MethodName:asList:[new String[]{"OK","value"}] @AT@ 8458 @LENGTH@ 38
---------------------------DEL ArrayCreation@@new String[]{"OK","value"} @AT@ 8465 @LENGTH@ 30
------------------------------DEL ArrayType@@String[] @AT@ 8469 @LENGTH@ 8
---------------------------------DEL SimpleType@@String @AT@ 8469 @LENGTH@ 6
------------------MOV ArrayInitializer@@{"OK","value"} @TO@ ArrayCreation@@new Object[]{Arrays.asList(new String[]{"OK","value"})} @AT@ 8478 @LENGTH@ 17
---------------------DEL StringLiteral@@"OK" @AT@ 8480 @LENGTH@ 4


INS ExpressionStatement@@MethodInvocation:getMockEndpoint("mock:aggregated").expectedPropertyReceived(Exchange.AGGREGATED_COMPLETED_BY,"size") @TO@ MethodDeclaration@@public, void, MethodName:testAggregateExpressionSize, Exception,  @AT@ 1341 @LENGTH@ 102
---INS MethodInvocation@@getMockEndpoint("mock:aggregated").expectedPropertyReceived(Exchange.AGGREGATED_COMPLETED_BY,"size") @TO@ ExpressionStatement@@MethodInvocation:getMockEndpoint("mock:aggregated").expectedPropertyReceived(Exchange.AGGREGATED_COMPLETED_BY,"size") @AT@ 1341 @LENGTH@ 101
------INS MethodInvocation@@MethodName:getMockEndpoint:["mock:aggregated"] @TO@ MethodInvocation@@getMockEndpoint("mock:aggregated").expectedPropertyReceived(Exchange.AGGREGATED_COMPLETED_BY,"size") @AT@ 1341 @LENGTH@ 34
---------INS StringLiteral@@"mock:aggregated" @TO@ MethodInvocation@@MethodName:getMockEndpoint:["mock:aggregated"] @AT@ 1357 @LENGTH@ 17
------INS SimpleName@@MethodName:expectedPropertyReceived:[Exchange.AGGREGATED_COMPLETED_BY, "size"] @TO@ MethodInvocation@@getMockEndpoint("mock:aggregated").expectedPropertyReceived(Exchange.AGGREGATED_COMPLETED_BY,"size") @AT@ 1376 @LENGTH@ 66
---------INS QualifiedName@@Exchange.AGGREGATED_COMPLETED_BY @TO@ SimpleName@@MethodName:expectedPropertyReceived:[Exchange.AGGREGATED_COMPLETED_BY, "size"] @AT@ 1401 @LENGTH@ 32
------------INS SimpleName@@Exchange @TO@ QualifiedName@@Exchange.AGGREGATED_COMPLETED_BY @AT@ 1401 @LENGTH@ 8
------------INS SimpleName@@AGGREGATED_COMPLETED_BY @TO@ QualifiedName@@Exchange.AGGREGATED_COMPLETED_BY @AT@ 1410 @LENGTH@ 23
---------INS StringLiteral@@"size" @TO@ SimpleName@@MethodName:expectedPropertyReceived:[Exchange.AGGREGATED_COMPLETED_BY, "size"] @AT@ 1435 @LENGTH@ 6


UPD EnhancedForStatement@@for (InterceptStrategy strategy : interceptors) {  next=target == nextProcessor ? null : nextProcessor;  if (strategy instanceof Tracer) {    continue;  }  if (strategy instanceof StreamCaching) {    continue;  }  Processor wrapped=strategy.wrapProcessorInInterceptors(routeContext.getCamelContext(),targetOutputDef,target,next);  if (!(wrapped instanceof AsyncProcessor)) {    LOG.warn("Interceptor: " + strategy + " at: "+ outputDefinition+ " does not return an AsyncProcessor instance."+ " This causes the asynchronous routing engine to not work as optimal as possible."+ " See more details at the InterceptStrategy javadoc."+ " Camel will use a bridge to adapt the interceptor to the asynchronous routing engine,"+ " but its not the most optimal solution. Please consider changing your interceptor to comply.");    InterceptorToAsyncProcessorBridge bridge=new InterceptorToAsyncProcessorBridge(target);    wrapped=strategy.wrapProcessorInInterceptors(routeContext.getCamelContext(),targetOutputDef,bridge,next);    bridge.setTarget(wrapped);    wrapped=bridge;  }  target=wrapped;} @TO@ for (InterceptStrategy strategy : interceptors) {  next=target == nextProcessor ? null : nextProcessor;  if (strategy instanceof Tracer) {    continue;  }  if (strategy instanceof StreamCaching) {    continue;  }  Processor wrapped=strategy.wrapProcessorInInterceptors(routeContext.getCamelContext(),targetOutputDef,target,next);  if (!(wrapped instanceof AsyncProcessor)) {    LOG.warn("Interceptor: " + strategy + " at: "+ outputDefinition+ " does not return an AsyncProcessor instance."+ " This causes the asynchronous routing engine to not work as optimal as possible."+ " See more details at the InterceptStrategy javadoc."+ " Camel will use a bridge to adapt the interceptor to the asynchronous routing engine,"+ " but its not the most optimal solution. Please consider changing your interceptor to comply.");    InterceptorToAsyncProcessorBridge bridge=new InterceptorToAsyncProcessorBridge(target);    wrapped=strategy.wrapProcessorInInterceptors(routeContext.getCamelContext(),targetOutputDef,bridge,next);    bridge.setTarget(wrapped);    wrapped=bridge;  }  if (!(wrapped instanceof WrapProcessor)) {    wrapped=new WrapProcessor(wrapped,target);  }  target=wrapped;} @AT@ 8372 @LENGTH@ 1948
---INS IfStatement@@if (!(wrapped instanceof WrapProcessor)) {  wrapped=new WrapProcessor(wrapped,target);} @TO@ EnhancedForStatement@@for (InterceptStrategy strategy : interceptors) {  next=target == nextProcessor ? null : nextProcessor;  if (strategy instanceof Tracer) {    continue;  }  if (strategy instanceof StreamCaching) {    continue;  }  Processor wrapped=strategy.wrapProcessorInInterceptors(routeContext.getCamelContext(),targetOutputDef,target,next);  if (!(wrapped instanceof AsyncProcessor)) {    LOG.warn("Interceptor: " + strategy + " at: "+ outputDefinition+ " does not return an AsyncProcessor instance."+ " This causes the asynchronous routing engine to not work as optimal as possible."+ " See more details at the InterceptStrategy javadoc."+ " Camel will use a bridge to adapt the interceptor to the asynchronous routing engine,"+ " but its not the most optimal solution. Please consider changing your interceptor to comply.");    InterceptorToAsyncProcessorBridge bridge=new InterceptorToAsyncProcessorBridge(target);    wrapped=strategy.wrapProcessorInInterceptors(routeContext.getCamelContext(),targetOutputDef,bridge,next);    bridge.setTarget(wrapped);    wrapped=bridge;  }  target=wrapped;} @AT@ 10416 @LENGTH@ 118
------INS PrefixExpression@@!(wrapped instanceof WrapProcessor) @TO@ IfStatement@@if (!(wrapped instanceof WrapProcessor)) {  wrapped=new WrapProcessor(wrapped,target);} @AT@ 10420 @LENGTH@ 35
---------INS Operator@@! @TO@ PrefixExpression@@!(wrapped instanceof WrapProcessor) @AT@ 10420 @LENGTH@ 1
---------INS ParenthesizedExpression@@(wrapped instanceof WrapProcessor) @TO@ PrefixExpression@@!(wrapped instanceof WrapProcessor) @AT@ 10421 @LENGTH@ 34
------------INS InstanceofExpression@@wrapped instanceof WrapProcessor @TO@ ParenthesizedExpression@@(wrapped instanceof WrapProcessor) @AT@ 10422 @LENGTH@ 32
---------------INS SimpleName@@wrapped @TO@ InstanceofExpression@@wrapped instanceof WrapProcessor @AT@ 10422 @LENGTH@ 7
---------------INS Instanceof@@instanceof @TO@ InstanceofExpression@@wrapped instanceof WrapProcessor @AT@ 10430 @LENGTH@ 10
---------------INS SimpleType@@WrapProcessor @TO@ InstanceofExpression@@wrapped instanceof WrapProcessor @AT@ 10441 @LENGTH@ 13
------INS Block@@ThenBody:{  wrapped=new WrapProcessor(wrapped,target);} @TO@ IfStatement@@if (!(wrapped instanceof WrapProcessor)) {  wrapped=new WrapProcessor(wrapped,target);} @AT@ 10457 @LENGTH@ 77
---------INS ExpressionStatement@@Assignment:wrapped=new WrapProcessor(wrapped,target) @TO@ Block@@ThenBody:{  wrapped=new WrapProcessor(wrapped,target);} @AT@ 10475 @LENGTH@ 45
------------INS Assignment@@wrapped=new WrapProcessor(wrapped,target) @TO@ ExpressionStatement@@Assignment:wrapped=new WrapProcessor(wrapped,target) @AT@ 10475 @LENGTH@ 44
---------------INS SimpleName@@wrapped @TO@ Assignment@@wrapped=new WrapProcessor(wrapped,target) @AT@ 10475 @LENGTH@ 7
---------------INS Operator@@= @TO@ Assignment@@wrapped=new WrapProcessor(wrapped,target) @AT@ 10482 @LENGTH@ 1
---------------INS ClassInstanceCreation@@WrapProcessor[wrapped, target] @TO@ Assignment@@wrapped=new WrapProcessor(wrapped,target) @AT@ 10485 @LENGTH@ 34
------------------INS New@@new @TO@ ClassInstanceCreation@@WrapProcessor[wrapped, target] @AT@ 10485 @LENGTH@ 3
------------------INS SimpleType@@WrapProcessor @TO@ ClassInstanceCreation@@WrapProcessor[wrapped, target] @AT@ 10489 @LENGTH@ 13
------------------INS SimpleName@@wrapped @TO@ ClassInstanceCreation@@WrapProcessor[wrapped, target] @AT@ 10503 @LENGTH@ 7
------------------INS SimpleName@@target @TO@ ClassInstanceCreation@@WrapProcessor[wrapped, target] @AT@ 10512 @LENGTH@ 6


UPD EnhancedForStatement@@for (final Map.Entry<String,SubsystemInformation> entry : subsystemsInfo.entrySet()) {  subsystems.add(entry.getKey(),entry.getValue().getManagementInterfaceMajorVersion() + "." + entry.getValue().getManagementInterfaceMicroVersion());} @TO@ for (final Map.Entry<String,SubsystemInformation> entry : subsystemsInfo.entrySet()) {  SubsystemInformation subsystem=entry.getValue();  subsystems.add(entry.getKey(),subsystem.getManagementInterfaceMajorVersion() + "." + subsystem.getManagementInterfaceMinorVersion()+ "."+ subsystem.getManagementInterfaceMicroVersion());} @AT@ 16776 @LENGTH@ 263
---UPD ExpressionStatement@@MethodInvocation:subsystems.add(entry.getKey(),entry.getValue().getManagementInterfaceMajorVersion() + "." + entry.getValue().getManagementInterfaceMicroVersion()) @TO@ MethodInvocation:subsystems.add(entry.getKey(),subsystem.getManagementInterfaceMajorVersion() + "." + subsystem.getManagementInterfaceMinorVersion()+ "."+ subsystem.getManagementInterfaceMicroVersion()) @AT@ 16879 @LENGTH@ 146
------UPD MethodInvocation@@subsystems.add(entry.getKey(),entry.getValue().getManagementInterfaceMajorVersion() + "." + entry.getValue().getManagementInterfaceMicroVersion()) @TO@ subsystems.add(entry.getKey(),subsystem.getManagementInterfaceMajorVersion() + "." + subsystem.getManagementInterfaceMinorVersion()+ "."+ subsystem.getManagementInterfaceMicroVersion()) @AT@ 16879 @LENGTH@ 145
---------UPD SimpleName@@MethodName:add:[entry.getKey(), entry.getValue().getManagementInterfaceMajorVersion() + "." + entry.getValue().getManagementInterfaceMicroVersion()] @TO@ MethodName:add:[entry.getKey(), subsystem.getManagementInterfaceMajorVersion() + "." + subsystem.getManagementInterfaceMinorVersion()+ "."+ subsystem.getManagementInterfaceMicroVersion()] @AT@ 16890 @LENGTH@ 134
------------UPD InfixExpression@@entry.getValue().getManagementInterfaceMajorVersion() + "." + entry.getValue().getManagementInterfaceMicroVersion() @TO@ subsystem.getManagementInterfaceMajorVersion() + "." + subsystem.getManagementInterfaceMinorVersion()+ "."+ subsystem.getManagementInterfaceMicroVersion() @AT@ 16910 @LENGTH@ 113
---------------UPD MethodInvocation@@entry.getValue().getManagementInterfaceMajorVersion() @TO@ subsystem.getManagementInterfaceMajorVersion() @AT@ 16910 @LENGTH@ 53
------------------DEL MethodInvocation@@MethodName:getValue:[] @AT@ 16910 @LENGTH@ 16
------------------UPD SimpleName@@Name:entry @TO@ Name:subsystem @AT@ 16910 @LENGTH@ 5
---------------UPD MethodInvocation@@entry.getValue().getManagementInterfaceMicroVersion() @TO@ subsystem.getManagementInterfaceMicroVersion() @AT@ 16970 @LENGTH@ 53
------------------DEL MethodInvocation@@MethodName:getValue:[] @AT@ 16970 @LENGTH@ 16
------------------UPD SimpleName@@Name:entry @TO@ Name:subsystem @AT@ 16970 @LENGTH@ 5
---------------INS MethodInvocation@@subsystem.getManagementInterfaceMinorVersion() @TO@ InfixExpression@@entry.getValue().getManagementInterfaceMajorVersion() + "." + entry.getValue().getManagementInterfaceMicroVersion() @AT@ 17080 @LENGTH@ 46
------------------INS SimpleName@@Name:subsystem @TO@ MethodInvocation@@subsystem.getManagementInterfaceMinorVersion() @AT@ 17080 @LENGTH@ 9
------------------INS SimpleName@@MethodName:getManagementInterfaceMinorVersion:[] @TO@ MethodInvocation@@subsystem.getManagementInterfaceMinorVersion() @AT@ 17090 @LENGTH@ 36
---------------INS StringLiteral@@"." @TO@ InfixExpression@@entry.getValue().getManagementInterfaceMajorVersion() + "." + entry.getValue().getManagementInterfaceMicroVersion() @AT@ 17153 @LENGTH@ 3
---INS VariableDeclarationStatement@@SubsystemInformation subsystem=entry.getValue(); @TO@ EnhancedForStatement@@for (final Map.Entry<String,SubsystemInformation> entry : subsystemsInfo.entrySet()) {  subsystems.add(entry.getKey(),entry.getValue().getManagementInterfaceMajorVersion() + "." + entry.getValue().getManagementInterfaceMicroVersion());} @AT@ 16879 @LENGTH@ 50
------INS SimpleType@@SubsystemInformation @TO@ VariableDeclarationStatement@@SubsystemInformation subsystem=entry.getValue(); @AT@ 16879 @LENGTH@ 20
------INS VariableDeclarationFragment@@subsystem=entry.getValue() @TO@ VariableDeclarationStatement@@SubsystemInformation subsystem=entry.getValue(); @AT@ 16900 @LENGTH@ 28
---------INS SimpleName@@subsystem @TO@ VariableDeclarationFragment@@subsystem=entry.getValue() @AT@ 16900 @LENGTH@ 9
---------INS MethodInvocation@@entry.getValue() @TO@ VariableDeclarationFragment@@subsystem=entry.getValue() @AT@ 16912 @LENGTH@ 16
------------INS SimpleName@@Name:entry @TO@ MethodInvocation@@entry.getValue() @AT@ 16912 @LENGTH@ 5
------------INS SimpleName@@MethodName:getValue:[] @TO@ MethodInvocation@@entry.getValue() @AT@ 16918 @LENGTH@ 10


UPD IfStatement@@if (idx > 0) {  String name=remaining.substring(0,idx);  String fabricPath=getFabricPath(name);  String childUri=replaceAnyIpAddress(remaining.substring(idx + 1));  if (params != null && params.size() > 0) {    childUri=childUri + "?" + URISupport.createQueryString(params);  }  Group group=ZooKeeperGroupFactory.create(getZkClient(),fabricPath);  return new FabricPublisherEndpoint(uri,this,group,childUri);} else {  String fabricPath=getFabricPath(remaining);  Group group=ZooKeeperGroupFactory.create(getZkClient(),fabricPath);  return new FabricLocatorEndpoint(uri,this,group);} @TO@ if (idx > 0) {  String name=remaining.substring(0,idx);  String fabricPath=getFabricPath(name);  String childUri=replaceAnyIpAddress(remaining.substring(idx + 1));  Group group=ZooKeeperGroupFactory.create(getZkClient(),fabricPath);  return new FabricPublisherEndpoint(uri,this,group,childUri);} else {  String fabricPath=getFabricPath(remaining);  Group group=ZooKeeperGroupFactory.create(getZkClient(),fabricPath);  return new FabricLocatorEndpoint(uri,this,group);} @AT@ 3075 @LENGTH@ 915
---UPD Block@@ThenBody:{  String name=remaining.substring(0,idx);  String fabricPath=getFabricPath(name);  String childUri=replaceAnyIpAddress(remaining.substring(idx + 1));  if (params != null && params.size() > 0) {    childUri=childUri + "?" + URISupport.createQueryString(params);  }  Group group=ZooKeeperGroupFactory.create(getZkClient(),fabricPath);  return new FabricPublisherEndpoint(uri,this,group,childUri);} @TO@ ThenBody:{  String name=remaining.substring(0,idx);  String fabricPath=getFabricPath(name);  String childUri=replaceAnyIpAddress(remaining.substring(idx + 1));  Group group=ZooKeeperGroupFactory.create(getZkClient(),fabricPath);  return new FabricPublisherEndpoint(uri,this,group,childUri);} @AT@ 3088 @LENGTH@ 680
------DEL IfStatement@@if (params != null && params.size() > 0) {  childUri=childUri + "?" + URISupport.createQueryString(params);} @AT@ 3460 @LENGTH@ 138
---------DEL InfixExpression@@params != null && params.size() > 0 @AT@ 3464 @LENGTH@ 35
------------DEL InfixExpression@@params != null @AT@ 3464 @LENGTH@ 14
---------------DEL SimpleName@@params @AT@ 3464 @LENGTH@ 6
---------------DEL Operator@@!= @AT@ 3470 @LENGTH@ 2
---------------DEL NullLiteral@@null @AT@ 3474 @LENGTH@ 4
------------DEL Operator@@&& @AT@ 3478 @LENGTH@ 2
------------DEL InfixExpression@@params.size() > 0 @AT@ 3482 @LENGTH@ 17
---------------DEL MethodInvocation@@params.size() @AT@ 3482 @LENGTH@ 13
------------------DEL SimpleName@@Name:params @AT@ 3482 @LENGTH@ 6
------------------DEL SimpleName@@MethodName:size:[] @AT@ 3489 @LENGTH@ 6
---------------DEL Operator@@> @AT@ 3495 @LENGTH@ 1
---------------DEL NumberLiteral@@0 @AT@ 3498 @LENGTH@ 1
---------DEL Block@@ThenBody:{  childUri=childUri + "?" + URISupport.createQueryString(params);} @AT@ 3501 @LENGTH@ 97
------------DEL ExpressionStatement@@Assignment:childUri=childUri + "?" + URISupport.createQueryString(params) @AT@ 3519 @LENGTH@ 65
---------------DEL Assignment@@childUri=childUri + "?" + URISupport.createQueryString(params) @AT@ 3519 @LENGTH@ 64
------------------DEL SimpleName@@childUri @AT@ 3519 @LENGTH@ 8
------------------DEL Operator@@= @AT@ 3527 @LENGTH@ 1
------------------DEL InfixExpression@@childUri + "?" + URISupport.createQueryString(params) @AT@ 3530 @LENGTH@ 53
---------------------DEL SimpleName@@childUri @AT@ 3530 @LENGTH@ 8
---------------------DEL Operator@@+ @AT@ 3538 @LENGTH@ 1
---------------------DEL StringLiteral@@"?" @AT@ 3541 @LENGTH@ 3
---------------------DEL MethodInvocation@@URISupport.createQueryString(params) @AT@ 3547 @LENGTH@ 36
------------------------DEL SimpleName@@Name:URISupport @AT@ 3547 @LENGTH@ 10
------------------------DEL SimpleName@@MethodName:createQueryString:[params] @AT@ 3558 @LENGTH@ 25
---------------------------DEL SimpleName@@params @AT@ 3576 @LENGTH@ 6


INS ReturnStatement@@BooleanLiteral:false @TO@ MethodDeclaration@@public, boolean, MethodName:expectFailedWriteAttributeOperation, ModelNode operation,  @AT@ 14687 @LENGTH@ 13
---INS BooleanLiteral@@false @TO@ ReturnStatement@@BooleanLiteral:false @AT@ 14694 @LENGTH@ 5


UPD ExpressionStatement@@MethodInvocation:entry.setValue("88") @TO@ MethodInvocation:entry.setValue((V)"88") @AT@ 3965 @LENGTH@ 21
---UPD MethodInvocation@@entry.setValue("88") @TO@ entry.setValue((V)"88") @AT@ 3965 @LENGTH@ 20
------UPD SimpleName@@MethodName:setValue:["88"] @TO@ MethodName:setValue:[(V)"88"] @AT@ 3971 @LENGTH@ 14
---------DEL StringLiteral@@"88" @AT@ 3980 @LENGTH@ 4
---------INS CastExpression@@(V)"88" @TO@ SimpleName@@MethodName:setValue:["88"] @AT@ 3986 @LENGTH@ 8
------------INS SimpleType@@V @TO@ CastExpression@@(V)"88" @AT@ 3987 @LENGTH@ 1
------------INS StringLiteral@@"88" @TO@ CastExpression@@(V)"88" @AT@ 3990 @LENGTH@ 4


DEL MethodDeclaration@@public, void, MethodName:testWatch, Exception,  @AT@ 1547 @LENGTH@ 45
---DEL Modifier@@public @AT@ 1547 @LENGTH@ 6
---DEL PrimitiveType@@void @AT@ 1554 @LENGTH@ 4
---DEL SimpleName@@MethodName:testWatch @AT@ 1559 @LENGTH@ 9
---DEL SimpleType@@Exception @AT@ 1578 @LENGTH@ 9


UPD TypeDeclaration@@[public]ProfileRepository, [CrudRepository<Profile,String>] @TO@ [@RestResource(exported=false), public]ProfileRepository, [CrudRepository<Profile,String>] @AT@ 147 @LENGTH@ 78
---INS NormalAnnotation@@@RestResource(exported=false) @TO@ TypeDeclaration@@[public]ProfileRepository, [CrudRepository<Profile,String>] @AT@ 220 @LENGTH@ 31


UPD Block@@ThenBody:{  for (  AttributeDefinition attribute : attributes) {    handleProperty(attribute,context,model,logContextConfiguration,configuration);    if (Logging.requiresRestart(attribute.getFlags())) {      context.restartRequired();    }  }} @TO@ ThenBody:{  boolean restartRequired=false;  boolean reloadRequired=false;  for (  AttributeDefinition attribute : attributes) {    handleProperty(attribute,context,model,logContextConfiguration,configuration);    restartRequired=restartRequired || Logging.requiresRestart(attribute.getFlags());    reloadRequired=reloadRequired || Logging.requiresReload(attribute.getFlags());  }  if (restartRequired) {    context.restartRequired();  } else   if (reloadRequired) {    context.reloadRequired();  }} @AT@ 5192 @LENGTH@ 349
---UPD EnhancedForStatement@@for (AttributeDefinition attribute : attributes) {  handleProperty(attribute,context,model,logContextConfiguration,configuration);  if (Logging.requiresRestart(attribute.getFlags())) {    context.restartRequired();  }} @TO@ for (AttributeDefinition attribute : attributes) {  handleProperty(attribute,context,model,logContextConfiguration,configuration);  restartRequired=restartRequired || Logging.requiresRestart(attribute.getFlags());  reloadRequired=reloadRequired || Logging.requiresReload(attribute.getFlags());} @AT@ 5210 @LENGTH@ 317
------DEL IfStatement@@if (Logging.requiresRestart(attribute.getFlags())) {  context.restartRequired();} @AT@ 5384 @LENGTH@ 125
------INS ExpressionStatement@@Assignment:restartRequired=restartRequired || Logging.requiresRestart(attribute.getFlags()) @TO@ EnhancedForStatement@@for (AttributeDefinition attribute : attributes) {  handleProperty(attribute,context,model,logContextConfiguration,configuration);  if (Logging.requiresRestart(attribute.getFlags())) {    context.restartRequired();  }} @AT@ 5481 @LENGTH@ 83
---------INS Assignment@@restartRequired=restartRequired || Logging.requiresRestart(attribute.getFlags()) @TO@ ExpressionStatement@@Assignment:restartRequired=restartRequired || Logging.requiresRestart(attribute.getFlags()) @AT@ 5481 @LENGTH@ 82
------------INS SimpleName@@restartRequired @TO@ Assignment@@restartRequired=restartRequired || Logging.requiresRestart(attribute.getFlags()) @AT@ 5481 @LENGTH@ 15
------------INS Operator@@= @TO@ Assignment@@restartRequired=restartRequired || Logging.requiresRestart(attribute.getFlags()) @AT@ 5496 @LENGTH@ 1
------------INS InfixExpression@@restartRequired || Logging.requiresRestart(attribute.getFlags()) @TO@ Assignment@@restartRequired=restartRequired || Logging.requiresRestart(attribute.getFlags()) @AT@ 5499 @LENGTH@ 64
---------------MOV MethodInvocation@@Logging.requiresRestart(attribute.getFlags()) @TO@ InfixExpression@@restartRequired || Logging.requiresRestart(attribute.getFlags()) @AT@ 5388 @LENGTH@ 45
---------------INS SimpleName@@restartRequired @TO@ InfixExpression@@restartRequired || Logging.requiresRestart(attribute.getFlags()) @AT@ 5499 @LENGTH@ 15
---------------INS Operator@@|| @TO@ InfixExpression@@restartRequired || Logging.requiresRestart(attribute.getFlags()) @AT@ 5514 @LENGTH@ 2
------INS ExpressionStatement@@Assignment:reloadRequired=reloadRequired || Logging.requiresReload(attribute.getFlags()) @TO@ EnhancedForStatement@@for (AttributeDefinition attribute : attributes) {  handleProperty(attribute,context,model,logContextConfiguration,configuration);  if (Logging.requiresRestart(attribute.getFlags())) {    context.restartRequired();  }} @AT@ 5585 @LENGTH@ 80
---------INS Assignment@@reloadRequired=reloadRequired || Logging.requiresReload(attribute.getFlags()) @TO@ ExpressionStatement@@Assignment:reloadRequired=reloadRequired || Logging.requiresReload(attribute.getFlags()) @AT@ 5585 @LENGTH@ 79
------------INS SimpleName@@reloadRequired @TO@ Assignment@@reloadRequired=reloadRequired || Logging.requiresReload(attribute.getFlags()) @AT@ 5585 @LENGTH@ 14
------------INS Operator@@= @TO@ Assignment@@reloadRequired=reloadRequired || Logging.requiresReload(attribute.getFlags()) @AT@ 5599 @LENGTH@ 1
------------INS InfixExpression@@reloadRequired || Logging.requiresReload(attribute.getFlags()) @TO@ Assignment@@reloadRequired=reloadRequired || Logging.requiresReload(attribute.getFlags()) @AT@ 5602 @LENGTH@ 62
---------------INS SimpleName@@reloadRequired @TO@ InfixExpression@@reloadRequired || Logging.requiresReload(attribute.getFlags()) @AT@ 5602 @LENGTH@ 14
---------------INS Operator@@|| @TO@ InfixExpression@@reloadRequired || Logging.requiresReload(attribute.getFlags()) @AT@ 5616 @LENGTH@ 2
---------------INS MethodInvocation@@Logging.requiresReload(attribute.getFlags()) @TO@ InfixExpression@@reloadRequired || Logging.requiresReload(attribute.getFlags()) @AT@ 5620 @LENGTH@ 44
------------------INS SimpleName@@Name:Logging @TO@ MethodInvocation@@Logging.requiresReload(attribute.getFlags()) @AT@ 5620 @LENGTH@ 7
------------------INS SimpleName@@MethodName:requiresReload:[attribute.getFlags()] @TO@ MethodInvocation@@Logging.requiresReload(attribute.getFlags()) @AT@ 5628 @LENGTH@ 36
---------------------INS MethodInvocation@@attribute.getFlags() @TO@ SimpleName@@MethodName:requiresReload:[attribute.getFlags()] @AT@ 5643 @LENGTH@ 20
------------------------INS SimpleName@@Name:attribute @TO@ MethodInvocation@@attribute.getFlags() @AT@ 5643 @LENGTH@ 9
------------------------INS SimpleName@@MethodName:getFlags:[] @TO@ MethodInvocation@@attribute.getFlags() @AT@ 5653 @LENGTH@ 10
---INS VariableDeclarationStatement@@boolean restartRequired=false; @TO@ Block@@ThenBody:{  for (  AttributeDefinition attribute : attributes) {    handleProperty(attribute,context,model,logContextConfiguration,configuration);    if (Logging.requiresRestart(attribute.getFlags())) {      context.restartRequired();    }  }} @AT@ 5210 @LENGTH@ 32
------INS PrimitiveType@@boolean @TO@ VariableDeclarationStatement@@boolean restartRequired=false; @AT@ 5210 @LENGTH@ 7
------INS VariableDeclarationFragment@@restartRequired=false @TO@ VariableDeclarationStatement@@boolean restartRequired=false; @AT@ 5218 @LENGTH@ 23
---------INS SimpleName@@restartRequired @TO@ VariableDeclarationFragment@@restartRequired=false @AT@ 5218 @LENGTH@ 15
---------INS BooleanLiteral@@false @TO@ VariableDeclarationFragment@@restartRequired=false @AT@ 5236 @LENGTH@ 5
---INS VariableDeclarationStatement@@boolean reloadRequired=false; @TO@ Block@@ThenBody:{  for (  AttributeDefinition attribute : attributes) {    handleProperty(attribute,context,model,logContextConfiguration,configuration);    if (Logging.requiresRestart(attribute.getFlags())) {      context.restartRequired();    }  }} @AT@ 5259 @LENGTH@ 31
------INS PrimitiveType@@boolean @TO@ VariableDeclarationStatement@@boolean reloadRequired=false; @AT@ 5259 @LENGTH@ 7
------INS VariableDeclarationFragment@@reloadRequired=false @TO@ VariableDeclarationStatement@@boolean reloadRequired=false; @AT@ 5267 @LENGTH@ 22
---------INS SimpleName@@reloadRequired @TO@ VariableDeclarationFragment@@reloadRequired=false @AT@ 5267 @LENGTH@ 14
---------INS BooleanLiteral@@false @TO@ VariableDeclarationFragment@@reloadRequired=false @AT@ 5284 @LENGTH@ 5
---INS IfStatement@@if (restartRequired) {  context.restartRequired();} else if (reloadRequired) {  context.reloadRequired();} @TO@ Block@@ThenBody:{  for (  AttributeDefinition attribute : attributes) {    handleProperty(attribute,context,model,logContextConfiguration,configuration);    if (Logging.requiresRestart(attribute.getFlags())) {      context.restartRequired();    }  }} @AT@ 5700 @LENGTH@ 178
------MOV Block@@ThenBody:{  context.restartRequired();} @TO@ IfStatement@@if (restartRequired) {  context.restartRequired();} else if (reloadRequired) {  context.reloadRequired();} @AT@ 5435 @LENGTH@ 74
------INS SimpleName@@restartRequired @TO@ IfStatement@@if (restartRequired) {  context.restartRequired();} else if (reloadRequired) {  context.reloadRequired();} @AT@ 5704 @LENGTH@ 15
------INS Block@@ElseBody:if (reloadRequired) {  context.reloadRequired();} @TO@ IfStatement@@if (restartRequired) {  context.restartRequired();} else if (reloadRequired) {  context.reloadRequired();} @AT@ 5793 @LENGTH@ 85
---------INS IfStatement@@if (reloadRequired) {  context.reloadRequired();} @TO@ Block@@ElseBody:if (reloadRequired) {  context.reloadRequired();} @AT@ 5793 @LENGTH@ 85
------------INS SimpleName@@reloadRequired @TO@ IfStatement@@if (reloadRequired) {  context.reloadRequired();} @AT@ 5797 @LENGTH@ 14
------------INS Block@@ThenBody:{  context.reloadRequired();} @TO@ IfStatement@@if (reloadRequired) {  context.reloadRequired();} @AT@ 5813 @LENGTH@ 65
---------------INS ExpressionStatement@@MethodInvocation:context.reloadRequired() @TO@ Block@@ThenBody:{  context.reloadRequired();} @AT@ 5835 @LENGTH@ 25
------------------INS MethodInvocation@@context.reloadRequired() @TO@ ExpressionStatement@@MethodInvocation:context.reloadRequired() @AT@ 5835 @LENGTH@ 24
---------------------INS SimpleName@@Name:context @TO@ MethodInvocation@@context.reloadRequired() @AT@ 5835 @LENGTH@ 7
---------------------INS SimpleName@@MethodName:reloadRequired:[] @TO@ MethodInvocation@@context.reloadRequired() @AT@ 5843 @LENGTH@ 16


UPD MethodDeclaration@@public, boolean, MethodName:isUserInGroup, String group,  @TO@ public, boolean, MethodName:isUserInRole, String role,  @AT@ 8909 @LENGTH@ 135
---UPD SimpleName@@MethodName:isUserInGroup @TO@ MethodName:isUserInRole @AT@ 8924 @LENGTH@ 13
---UPD SingleVariableDeclaration@@String group @TO@ String role @AT@ 8938 @LENGTH@ 12
------UPD SimpleName@@group @TO@ role @AT@ 8945 @LENGTH@ 5


UPD TryStatement@@try {  copy(curator,ZkPath.CONFIG_VERSION.getPath(parentVersionId),ZkPath.CONFIG_VERSION.getPath(toVersion));  treeCache.rebuildNode(ZkPath.CONFIG_VERSION.getPath(toVersion));} catch (Exception e) {  throw new FabricException(e);} @TO@ try {  String sourcePath=ZkPath.CONFIG_VERSION.getPath(parentVersionId);  String targetPath=ZkPath.CONFIG_VERSION.getPath(toVersion);  copy(curator,sourcePath,targetPath);  treeCache.rebuildNode(targetPath);} catch (Exception e) {  throw new FabricException(e);} @AT@ 19795 @LENGTH@ 283
---UPD ExpressionStatement@@MethodInvocation:copy(curator,ZkPath.CONFIG_VERSION.getPath(parentVersionId),ZkPath.CONFIG_VERSION.getPath(toVersion)) @TO@ MethodInvocation:copy(curator,sourcePath,targetPath) @AT@ 19813 @LENGTH@ 104
------UPD MethodInvocation@@copy(curator,ZkPath.CONFIG_VERSION.getPath(parentVersionId),ZkPath.CONFIG_VERSION.getPath(toVersion)) @TO@ copy(curator,sourcePath,targetPath) @AT@ 19813 @LENGTH@ 103
---------UPD SimpleName@@MethodName:copy:[curator, ZkPath.CONFIG_VERSION.getPath(parentVersionId), ZkPath.CONFIG_VERSION.getPath(toVersion)] @TO@ MethodName:copy:[curator, sourcePath, targetPath] @AT@ 19813 @LENGTH@ 103
------------INS SimpleName@@sourcePath @TO@ SimpleName@@MethodName:copy:[curator, ZkPath.CONFIG_VERSION.getPath(parentVersionId), ZkPath.CONFIG_VERSION.getPath(toVersion)] @AT@ 19981 @LENGTH@ 10
------------INS SimpleName@@targetPath @TO@ SimpleName@@MethodName:copy:[curator, ZkPath.CONFIG_VERSION.getPath(parentVersionId), ZkPath.CONFIG_VERSION.getPath(toVersion)] @AT@ 19993 @LENGTH@ 10
---INS VariableDeclarationStatement@@String sourcePath=ZkPath.CONFIG_VERSION.getPath(parentVersionId); @TO@ TryStatement@@try {  copy(curator,ZkPath.CONFIG_VERSION.getPath(parentVersionId),ZkPath.CONFIG_VERSION.getPath(toVersion));  treeCache.rebuildNode(ZkPath.CONFIG_VERSION.getPath(toVersion));} catch (Exception e) {  throw new FabricException(e);} @AT@ 19813 @LENGTH@ 67
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String sourcePath=ZkPath.CONFIG_VERSION.getPath(parentVersionId); @AT@ 19813 @LENGTH@ 6
------INS VariableDeclarationFragment@@sourcePath=ZkPath.CONFIG_VERSION.getPath(parentVersionId) @TO@ VariableDeclarationStatement@@String sourcePath=ZkPath.CONFIG_VERSION.getPath(parentVersionId); @AT@ 19820 @LENGTH@ 59
---------INS SimpleName@@sourcePath @TO@ VariableDeclarationFragment@@sourcePath=ZkPath.CONFIG_VERSION.getPath(parentVersionId) @AT@ 19820 @LENGTH@ 10
---------MOV MethodInvocation@@ZkPath.CONFIG_VERSION.getPath(parentVersionId) @TO@ VariableDeclarationFragment@@sourcePath=ZkPath.CONFIG_VERSION.getPath(parentVersionId) @AT@ 19827 @LENGTH@ 46
---INS VariableDeclarationStatement@@String targetPath=ZkPath.CONFIG_VERSION.getPath(toVersion); @TO@ TryStatement@@try {  copy(curator,ZkPath.CONFIG_VERSION.getPath(parentVersionId),ZkPath.CONFIG_VERSION.getPath(toVersion));  treeCache.rebuildNode(ZkPath.CONFIG_VERSION.getPath(toVersion));} catch (Exception e) {  throw new FabricException(e);} @AT@ 19893 @LENGTH@ 61
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String targetPath=ZkPath.CONFIG_VERSION.getPath(toVersion); @AT@ 19893 @LENGTH@ 6
------INS VariableDeclarationFragment@@targetPath=ZkPath.CONFIG_VERSION.getPath(toVersion) @TO@ VariableDeclarationStatement@@String targetPath=ZkPath.CONFIG_VERSION.getPath(toVersion); @AT@ 19900 @LENGTH@ 53
---------MOV MethodInvocation@@ZkPath.CONFIG_VERSION.getPath(toVersion) @TO@ VariableDeclarationFragment@@targetPath=ZkPath.CONFIG_VERSION.getPath(toVersion) @AT@ 19875 @LENGTH@ 40
---------INS SimpleName@@targetPath @TO@ VariableDeclarationFragment@@targetPath=ZkPath.CONFIG_VERSION.getPath(toVersion) @AT@ 19900 @LENGTH@ 10
---UPD ExpressionStatement@@MethodInvocation:treeCache.rebuildNode(ZkPath.CONFIG_VERSION.getPath(toVersion)) @TO@ MethodInvocation:treeCache.rebuildNode(targetPath) @AT@ 19930 @LENGTH@ 64
------UPD MethodInvocation@@treeCache.rebuildNode(ZkPath.CONFIG_VERSION.getPath(toVersion)) @TO@ treeCache.rebuildNode(targetPath) @AT@ 19930 @LENGTH@ 63
---------UPD SimpleName@@MethodName:rebuildNode:[ZkPath.CONFIG_VERSION.getPath(toVersion)] @TO@ MethodName:rebuildNode:[targetPath] @AT@ 19940 @LENGTH@ 53
------------DEL MethodInvocation@@ZkPath.CONFIG_VERSION.getPath(toVersion) @AT@ 19952 @LENGTH@ 40
---------------DEL QualifiedName@@Name:ZkPath.CONFIG_VERSION @AT@ 19952 @LENGTH@ 21
---------------DEL SimpleName@@MethodName:getPath:[toVersion] @AT@ 19974 @LENGTH@ 18
------------------DEL SimpleName@@toVersion @AT@ 19982 @LENGTH@ 9
------------INS SimpleName@@targetPath @TO@ SimpleName@@MethodName:rebuildNode:[ZkPath.CONFIG_VERSION.getPath(toVersion)] @AT@ 20273 @LENGTH@ 10


UPD FieldDeclaration@@private, final, Map<String,String>, [containerConfguration=new HashMap<String,String>()] @TO@ private, final, Map<String,String>, [containerConfiguration=new HashMap<String,String>()] @AT@ 978 @LENGTH@ 87
---UPD VariableDeclarationFragment@@containerConfguration=new HashMap<String,String>() @TO@ containerConfiguration=new HashMap<String,String>() @AT@ 1011 @LENGTH@ 53
------UPD SimpleName@@containerConfguration @TO@ containerConfiguration @AT@ 1011 @LENGTH@ 21


INS ExpressionStatement@@MethodInvocation:assertEquals("Get a wrong size of body",1,payload.getBodySources().size()) @TO@ MethodDeclaration@@public, void, MethodName:testToCxfPayload,  @AT@ 3781 @LENGTH@ 77
---INS MethodInvocation@@assertEquals("Get a wrong size of body",1,payload.getBodySources().size()) @TO@ ExpressionStatement@@MethodInvocation:assertEquals("Get a wrong size of body",1,payload.getBodySources().size()) @AT@ 3781 @LENGTH@ 76
------INS SimpleName@@MethodName:assertEquals:["Get a wrong size of body", 1, payload.getBodySources().size()] @TO@ MethodInvocation@@assertEquals("Get a wrong size of body",1,payload.getBodySources().size()) @AT@ 3781 @LENGTH@ 76
---------INS StringLiteral@@"Get a wrong size of body" @TO@ SimpleName@@MethodName:assertEquals:["Get a wrong size of body", 1, payload.getBodySources().size()] @AT@ 3794 @LENGTH@ 26
---------INS NumberLiteral@@1 @TO@ SimpleName@@MethodName:assertEquals:["Get a wrong size of body", 1, payload.getBodySources().size()] @AT@ 3822 @LENGTH@ 1
---------INS MethodInvocation@@payload.getBodySources().size() @TO@ SimpleName@@MethodName:assertEquals:["Get a wrong size of body", 1, payload.getBodySources().size()] @AT@ 3825 @LENGTH@ 31
------------INS MethodInvocation@@MethodName:getBodySources:[] @TO@ MethodInvocation@@payload.getBodySources().size() @AT@ 3825 @LENGTH@ 24
------------INS SimpleName@@Name:payload @TO@ MethodInvocation@@payload.getBodySources().size() @AT@ 3825 @LENGTH@ 7
------------INS SimpleName@@MethodName:size:[] @TO@ MethodInvocation@@payload.getBodySources().size() @AT@ 3850 @LENGTH@ 6


UPD IfStatement@@if (protocol.equalsIgnoreCase(supportedProtocol)) {  found=true;  break;} @TO@ if (protocol != null && protocol.equalsIgnoreCase(supportedProtocol)) {  found=true;  break;} @AT@ 6193 @LENGTH@ 118
---INS InfixExpression@@protocol != null && protocol.equalsIgnoreCase(supportedProtocol) @TO@ IfStatement@@if (protocol.equalsIgnoreCase(supportedProtocol)) {  found=true;  break;} @AT@ 6197 @LENGTH@ 64
------MOV MethodInvocation@@protocol.equalsIgnoreCase(supportedProtocol) @TO@ InfixExpression@@protocol != null && protocol.equalsIgnoreCase(supportedProtocol) @AT@ 6197 @LENGTH@ 44
------INS InfixExpression@@protocol != null @TO@ InfixExpression@@protocol != null && protocol.equalsIgnoreCase(supportedProtocol) @AT@ 6197 @LENGTH@ 16
---------INS SimpleName@@protocol @TO@ InfixExpression@@protocol != null @AT@ 6197 @LENGTH@ 8
---------INS Operator@@!= @TO@ InfixExpression@@protocol != null @AT@ 6205 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@protocol != null @AT@ 6209 @LENGTH@ 4
------INS Operator@@&& @TO@ InfixExpression@@protocol != null && protocol.equalsIgnoreCase(supportedProtocol) @AT@ 6213 @LENGTH@ 2


INS IfStatement@@if (seen.contains(Element.GROUP_ADDRESS) && !seen.contains(Element.GROUP_PORT)) {  throw missingRequired(reader,EnumSet.of(Element.GROUP_PORT));} @TO@ MethodDeclaration@@protected, void, MethodName:checkDiscoveryGroupConstraints, XMLExtendedStreamReader reader, Set<Element> seen, XMLStreamException,  @AT@ 4502 @LENGTH@ 166
---INS InfixExpression@@seen.contains(Element.GROUP_ADDRESS) && !seen.contains(Element.GROUP_PORT) @TO@ IfStatement@@if (seen.contains(Element.GROUP_ADDRESS) && !seen.contains(Element.GROUP_PORT)) {  throw missingRequired(reader,EnumSet.of(Element.GROUP_PORT));} @AT@ 4506 @LENGTH@ 74
------INS MethodInvocation@@seen.contains(Element.GROUP_ADDRESS) @TO@ InfixExpression@@seen.contains(Element.GROUP_ADDRESS) && !seen.contains(Element.GROUP_PORT) @AT@ 4506 @LENGTH@ 36
---------INS SimpleName@@Name:seen @TO@ MethodInvocation@@seen.contains(Element.GROUP_ADDRESS) @AT@ 4506 @LENGTH@ 4
---------INS SimpleName@@MethodName:contains:[Element.GROUP_ADDRESS] @TO@ MethodInvocation@@seen.contains(Element.GROUP_ADDRESS) @AT@ 4511 @LENGTH@ 31
------------INS QualifiedName@@Element.GROUP_ADDRESS @TO@ SimpleName@@MethodName:contains:[Element.GROUP_ADDRESS] @AT@ 4520 @LENGTH@ 21
---------------INS SimpleName@@Element @TO@ QualifiedName@@Element.GROUP_ADDRESS @AT@ 4520 @LENGTH@ 7
---------------INS SimpleName@@GROUP_ADDRESS @TO@ QualifiedName@@Element.GROUP_ADDRESS @AT@ 4528 @LENGTH@ 13
------INS Operator@@&& @TO@ InfixExpression@@seen.contains(Element.GROUP_ADDRESS) && !seen.contains(Element.GROUP_PORT) @AT@ 4542 @LENGTH@ 2
------INS PrefixExpression@@!seen.contains(Element.GROUP_PORT) @TO@ InfixExpression@@seen.contains(Element.GROUP_ADDRESS) && !seen.contains(Element.GROUP_PORT) @AT@ 4546 @LENGTH@ 34
---------INS Operator@@! @TO@ PrefixExpression@@!seen.contains(Element.GROUP_PORT) @AT@ 4546 @LENGTH@ 1
---------INS MethodInvocation@@seen.contains(Element.GROUP_PORT) @TO@ PrefixExpression@@!seen.contains(Element.GROUP_PORT) @AT@ 4547 @LENGTH@ 33
------------INS SimpleName@@Name:seen @TO@ MethodInvocation@@seen.contains(Element.GROUP_PORT) @AT@ 4547 @LENGTH@ 4
------------INS SimpleName@@MethodName:contains:[Element.GROUP_PORT] @TO@ MethodInvocation@@seen.contains(Element.GROUP_PORT) @AT@ 4552 @LENGTH@ 28
---------------INS QualifiedName@@Element.GROUP_PORT @TO@ SimpleName@@MethodName:contains:[Element.GROUP_PORT] @AT@ 4561 @LENGTH@ 18
------------------INS SimpleName@@Element @TO@ QualifiedName@@Element.GROUP_PORT @AT@ 4561 @LENGTH@ 7
------------------INS SimpleName@@GROUP_PORT @TO@ QualifiedName@@Element.GROUP_PORT @AT@ 4569 @LENGTH@ 10
---INS Block@@ThenBody:{  throw missingRequired(reader,EnumSet.of(Element.GROUP_PORT));} @TO@ IfStatement@@if (seen.contains(Element.GROUP_ADDRESS) && !seen.contains(Element.GROUP_PORT)) {  throw missingRequired(reader,EnumSet.of(Element.GROUP_PORT));} @AT@ 4582 @LENGTH@ 86
------INS ThrowStatement@@MethodInvocation:missingRequired(reader,EnumSet.of(Element.GROUP_PORT)) @TO@ Block@@ThenBody:{  throw missingRequired(reader,EnumSet.of(Element.GROUP_PORT));} @AT@ 4596 @LENGTH@ 62
---------INS MethodInvocation@@missingRequired(reader,EnumSet.of(Element.GROUP_PORT)) @TO@ ThrowStatement@@MethodInvocation:missingRequired(reader,EnumSet.of(Element.GROUP_PORT)) @AT@ 4602 @LENGTH@ 55
------------INS SimpleName@@MethodName:missingRequired:[reader, EnumSet.of(Element.GROUP_PORT)] @TO@ MethodInvocation@@missingRequired(reader,EnumSet.of(Element.GROUP_PORT)) @AT@ 4602 @LENGTH@ 55
---------------INS SimpleName@@reader @TO@ SimpleName@@MethodName:missingRequired:[reader, EnumSet.of(Element.GROUP_PORT)] @AT@ 4618 @LENGTH@ 6
---------------INS MethodInvocation@@EnumSet.of(Element.GROUP_PORT) @TO@ SimpleName@@MethodName:missingRequired:[reader, EnumSet.of(Element.GROUP_PORT)] @AT@ 4626 @LENGTH@ 30
------------------INS SimpleName@@Name:EnumSet @TO@ MethodInvocation@@EnumSet.of(Element.GROUP_PORT) @AT@ 4626 @LENGTH@ 7
------------------INS SimpleName@@MethodName:of:[Element.GROUP_PORT] @TO@ MethodInvocation@@EnumSet.of(Element.GROUP_PORT) @AT@ 4634 @LENGTH@ 22
---------------------INS QualifiedName@@Element.GROUP_PORT @TO@ SimpleName@@MethodName:of:[Element.GROUP_PORT] @AT@ 4637 @LENGTH@ 18
------------------------INS SimpleName@@Element @TO@ QualifiedName@@Element.GROUP_PORT @AT@ 4637 @LENGTH@ 7
------------------------INS SimpleName@@GROUP_PORT @TO@ QualifiedName@@Element.GROUP_PORT @AT@ 4645 @LENGTH@ 10


INS ReturnStatement@@NullLiteral:null @TO@ MethodDeclaration@@public, Connection<A>, A, MethodName:findPrimaryConnection, Class<A> apiType,  @AT@ 4392 @LENGTH@ 12
---INS NullLiteral@@null @TO@ ReturnStatement@@NullLiteral:null @AT@ 4399 @LENGTH@ 4


UPD IfStatement@@if (headerFilterStrategy.applyFilterToCamelHeaders(entry.getKey(),entry.getValue(),camelExchange)) {  LOG.trace("Drop CXF message protocol header: {}={}",entry.getKey(),entry.getValue());} else {  camelMessage.setHeader(entry.getKey(),entry.getValue().get(0));} @TO@ if (headerFilterStrategy.applyFilterToCamelHeaders(entry.getKey(),entry.getValue(),camelExchange) || entry.getValue().get(0) == null) {  LOG.trace("Drop CXF message protocol header: {}={}",entry.getKey(),entry.getValue());} else {  camelMessage.setHeader(entry.getKey(),entry.getValue().get(0));} @AT@ 11721 @LENGTH@ 407
---INS InfixExpression@@headerFilterStrategy.applyFilterToCamelHeaders(entry.getKey(),entry.getValue(),camelExchange) || entry.getValue().get(0) == null @TO@ IfStatement@@if (headerFilterStrategy.applyFilterToCamelHeaders(entry.getKey(),entry.getValue(),camelExchange)) {  LOG.trace("Drop CXF message protocol header: {}={}",entry.getKey(),entry.getValue());} else {  camelMessage.setHeader(entry.getKey(),entry.getValue().get(0));} @AT@ 12042 @LENGTH@ 147
------MOV MethodInvocation@@headerFilterStrategy.applyFilterToCamelHeaders(entry.getKey(),entry.getValue(),camelExchange) @TO@ InfixExpression@@headerFilterStrategy.applyFilterToCamelHeaders(entry.getKey(),entry.getValue(),camelExchange) || entry.getValue().get(0) == null @AT@ 11725 @LENGTH@ 95
------INS Operator@@|| @TO@ InfixExpression@@headerFilterStrategy.applyFilterToCamelHeaders(entry.getKey(),entry.getValue(),camelExchange) || entry.getValue().get(0) == null @AT@ 12137 @LENGTH@ 2
------INS InfixExpression@@entry.getValue().get(0) == null @TO@ InfixExpression@@headerFilterStrategy.applyFilterToCamelHeaders(entry.getKey(),entry.getValue(),camelExchange) || entry.getValue().get(0) == null @AT@ 12158 @LENGTH@ 31
---------INS MethodInvocation@@entry.getValue().get(0) @TO@ InfixExpression@@entry.getValue().get(0) == null @AT@ 12158 @LENGTH@ 23
------------INS MethodInvocation@@MethodName:getValue:[] @TO@ MethodInvocation@@entry.getValue().get(0) @AT@ 12158 @LENGTH@ 16
------------INS SimpleName@@Name:entry @TO@ MethodInvocation@@entry.getValue().get(0) @AT@ 12158 @LENGTH@ 5
------------INS SimpleName@@MethodName:get:[0] @TO@ MethodInvocation@@entry.getValue().get(0) @AT@ 12175 @LENGTH@ 6
---------------INS NumberLiteral@@0 @TO@ SimpleName@@MethodName:get:[0] @AT@ 12179 @LENGTH@ 1
---------INS Operator@@== @TO@ InfixExpression@@entry.getValue().get(0) == null @AT@ 12181 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@entry.getValue().get(0) == null @AT@ 12185 @LENGTH@ 4


UPD ExpressionStatement@@MethodInvocation:config.addFailedAttribute(subsystemAddress.append(CacheContainerResource.CONTAINER_PATH).append(cachePaths[i]),new FailedOperationTransformationConfig.RejectExpressionsConfig(InfinispanRejectedExpressions_1_3.ACCEPT14_REJECT13_CACHE_ATTRIBUTES)) @TO@ MethodInvocation:config.addFailedAttribute(subsystemAddress.append(CacheContainerResource.CONTAINER_PATH).append(cachePaths[i]),new FailedOperationTransformationConfig.RejectExpressionsConfig(InfinispanRejectedExpressions_1_3.ACCEPT14_REJECT13_CACHE_ATTRIBUTES).setNotExpectedWriteFailure(ModelKeys.INDEXING_PROPERTIES,ModelKeys.SEGMENTS)) @AT@ 7119 @LENGTH@ 296
---UPD MethodInvocation@@config.addFailedAttribute(subsystemAddress.append(CacheContainerResource.CONTAINER_PATH).append(cachePaths[i]),new FailedOperationTransformationConfig.RejectExpressionsConfig(InfinispanRejectedExpressions_1_3.ACCEPT14_REJECT13_CACHE_ATTRIBUTES)) @TO@ config.addFailedAttribute(subsystemAddress.append(CacheContainerResource.CONTAINER_PATH).append(cachePaths[i]),new FailedOperationTransformationConfig.RejectExpressionsConfig(InfinispanRejectedExpressions_1_3.ACCEPT14_REJECT13_CACHE_ATTRIBUTES).setNotExpectedWriteFailure(ModelKeys.INDEXING_PROPERTIES,ModelKeys.SEGMENTS)) @AT@ 7119 @LENGTH@ 295
------UPD SimpleName@@MethodName:addFailedAttribute:[subsystemAddress.append(CacheContainerResource.CONTAINER_PATH).append(cachePaths[i]), new FailedOperationTransformationConfig.RejectExpressionsConfig(InfinispanRejectedExpressions_1_3.ACCEPT14_REJECT13_CACHE_ATTRIBUTES)] @TO@ MethodName:addFailedAttribute:[subsystemAddress.append(CacheContainerResource.CONTAINER_PATH).append(cachePaths[i]), new FailedOperationTransformationConfig.RejectExpressionsConfig(InfinispanRejectedExpressions_1_3.ACCEPT14_REJECT13_CACHE_ATTRIBUTES).setNotExpectedWriteFailure(ModelKeys.INDEXING_PROPERTIES,ModelKeys.SEGMENTS)] @AT@ 7126 @LENGTH@ 288
---------INS MethodInvocation@@new FailedOperationTransformationConfig.RejectExpressionsConfig(InfinispanRejectedExpressions_1_3.ACCEPT14_REJECT13_CACHE_ATTRIBUTES).setNotExpectedWriteFailure(ModelKeys.INDEXING_PROPERTIES,ModelKeys.SEGMENTS) @TO@ SimpleName@@MethodName:addFailedAttribute:[subsystemAddress.append(CacheContainerResource.CONTAINER_PATH).append(cachePaths[i]), new FailedOperationTransformationConfig.RejectExpressionsConfig(InfinispanRejectedExpressions_1_3.ACCEPT14_REJECT13_CACHE_ATTRIBUTES)] @AT@ 6690 @LENGTH@ 240
------------INS SimpleName@@MethodName:setNotExpectedWriteFailure:[ModelKeys.INDEXING_PROPERTIES, ModelKeys.SEGMENTS] @TO@ MethodInvocation@@new FailedOperationTransformationConfig.RejectExpressionsConfig(InfinispanRejectedExpressions_1_3.ACCEPT14_REJECT13_CACHE_ATTRIBUTES).setNotExpectedWriteFailure(ModelKeys.INDEXING_PROPERTIES,ModelKeys.SEGMENTS) @AT@ 6853 @LENGTH@ 77
---------------INS QualifiedName@@ModelKeys.INDEXING_PROPERTIES @TO@ SimpleName@@MethodName:setNotExpectedWriteFailure:[ModelKeys.INDEXING_PROPERTIES, ModelKeys.SEGMENTS] @AT@ 6880 @LENGTH@ 29
------------------INS SimpleName@@ModelKeys @TO@ QualifiedName@@ModelKeys.INDEXING_PROPERTIES @AT@ 6880 @LENGTH@ 9
------------------INS SimpleName@@INDEXING_PROPERTIES @TO@ QualifiedName@@ModelKeys.INDEXING_PROPERTIES @AT@ 6890 @LENGTH@ 19
---------------INS QualifiedName@@ModelKeys.SEGMENTS @TO@ SimpleName@@MethodName:setNotExpectedWriteFailure:[ModelKeys.INDEXING_PROPERTIES, ModelKeys.SEGMENTS] @AT@ 6911 @LENGTH@ 18
------------------INS SimpleName@@ModelKeys @TO@ QualifiedName@@ModelKeys.SEGMENTS @AT@ 6911 @LENGTH@ 9
------------------INS SimpleName@@SEGMENTS @TO@ QualifiedName@@ModelKeys.SEGMENTS @AT@ 6921 @LENGTH@ 8
------------MOV ClassInstanceCreation@@FailedOperationTransformationConfig.RejectExpressionsConfig[InfinispanRejectedExpressions_1_3.ACCEPT14_REJECT13_CACHE_ATTRIBUTES] @TO@ MethodInvocation@@new FailedOperationTransformationConfig.RejectExpressionsConfig(InfinispanRejectedExpressions_1_3.ACCEPT14_REJECT13_CACHE_ATTRIBUTES).setNotExpectedWriteFailure(ModelKeys.INDEXING_PROPERTIES,ModelKeys.SEGMENTS) @AT@ 7251 @LENGTH@ 162


UPD ExpressionStatement@@MethodInvocation:bar.expectedMinimumMessageCount(5) @TO@ MethodInvocation:bar.expectedMinimumMessageCount(3) @AT@ 1336 @LENGTH@ 35
---UPD MethodInvocation@@bar.expectedMinimumMessageCount(5) @TO@ bar.expectedMinimumMessageCount(3) @AT@ 1336 @LENGTH@ 34
------UPD SimpleName@@MethodName:expectedMinimumMessageCount:[5] @TO@ MethodName:expectedMinimumMessageCount:[3] @AT@ 1340 @LENGTH@ 30
---------UPD NumberLiteral@@5 @TO@ 3 @AT@ 1368 @LENGTH@ 1


UPD IfStatement@@if (null == repoMapping) {  this.repoLink=null;  this.repository=null;  this.repoMethodInvoker=null;  this.persistentEntity=null;  this.entityMapping=null;} else {  this.repoLink=new Link(buildUri(baseUri,repoMapping.getPath()).toString(),repoMapping.getRel());  this.repository=repositories.getRepositoryFor(repoInfo.getDomainType());  this.persistentEntity=repositories.getPersistentEntity(repoInfo.getDomainType());  this.repoMethodInvoker=new RepositoryMethodInvoker(repository,repoInfo,persistentEntity);  this.entityMapping=getResourceMapping(config,persistentEntity);} @TO@ if (null == repoMapping || !repoMapping.isExported()) {  this.repoLink=null;  this.repository=null;  this.repoMethodInvoker=null;  this.persistentEntity=null;  this.entityMapping=null;} else {  this.repoLink=new Link(buildUri(baseUri,repoMapping.getPath()).toString(),repoMapping.getRel());  this.repository=repositories.getRepositoryFor(repoInfo.getDomainType());  this.persistentEntity=repositories.getPersistentEntity(repoInfo.getDomainType());  this.repoMethodInvoker=new RepositoryMethodInvoker(repository,repoInfo,persistentEntity);  this.entityMapping=getResourceMapping(config,persistentEntity);} @AT@ 2184 @LENGTH@ 625
---INS InfixExpression@@null == repoMapping || !repoMapping.isExported() @TO@ IfStatement@@if (null == repoMapping) {  this.repoLink=null;  this.repository=null;  this.repoMethodInvoker=null;  this.persistentEntity=null;  this.entityMapping=null;} else {  this.repoLink=new Link(buildUri(baseUri,repoMapping.getPath()).toString(),repoMapping.getRel());  this.repository=repositories.getRepositoryFor(repoInfo.getDomainType());  this.persistentEntity=repositories.getPersistentEntity(repoInfo.getDomainType());  this.repoMethodInvoker=new RepositoryMethodInvoker(repository,repoInfo,persistentEntity);  this.entityMapping=getResourceMapping(config,persistentEntity);} @AT@ 2187 @LENGTH@ 48
------INS InfixExpression@@null == repoMapping @TO@ InfixExpression@@null == repoMapping || !repoMapping.isExported() @AT@ 2187 @LENGTH@ 19
---------MOV NullLiteral@@null @TO@ InfixExpression@@null == repoMapping @AT@ 2187 @LENGTH@ 4
---------MOV Operator@@== @TO@ InfixExpression@@null == repoMapping @AT@ 2191 @LENGTH@ 2
---------MOV SimpleName@@repoMapping @TO@ InfixExpression@@null == repoMapping @AT@ 2195 @LENGTH@ 11
------INS Operator@@|| @TO@ InfixExpression@@null == repoMapping || !repoMapping.isExported() @AT@ 2206 @LENGTH@ 2
------INS PrefixExpression@@!repoMapping.isExported() @TO@ InfixExpression@@null == repoMapping || !repoMapping.isExported() @AT@ 2210 @LENGTH@ 25
---------INS Operator@@! @TO@ PrefixExpression@@!repoMapping.isExported() @AT@ 2210 @LENGTH@ 1
---------INS MethodInvocation@@repoMapping.isExported() @TO@ PrefixExpression@@!repoMapping.isExported() @AT@ 2211 @LENGTH@ 24
------------INS SimpleName@@Name:repoMapping @TO@ MethodInvocation@@repoMapping.isExported() @AT@ 2211 @LENGTH@ 11
------------INS SimpleName@@MethodName:isExported:[] @TO@ MethodInvocation@@repoMapping.isExported() @AT@ 2223 @LENGTH@ 12
---DEL InfixExpression@@null == repoMapping @AT@ 2187 @LENGTH@ 19


INS MethodDeclaration@@static, void, MethodName:setJAASConfiguration, Configuration auth,  @TO@ TypeDeclaration@@[public]HdfsComponent, DefaultComponent @AT@ 2486 @LENGTH@ 472
---INS Modifier@@static @TO@ MethodDeclaration@@static, void, MethodName:setJAASConfiguration, Configuration auth,  @AT@ 2486 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@static, void, MethodName:setJAASConfiguration, Configuration auth,  @AT@ 2493 @LENGTH@ 4
---INS SimpleName@@MethodName:setJAASConfiguration @TO@ MethodDeclaration@@static, void, MethodName:setJAASConfiguration, Configuration auth,  @AT@ 2498 @LENGTH@ 20
---INS SingleVariableDeclaration@@Configuration auth @TO@ MethodDeclaration@@static, void, MethodName:setJAASConfiguration, Configuration auth,  @AT@ 2519 @LENGTH@ 18
------INS SimpleType@@Configuration @TO@ SingleVariableDeclaration@@Configuration auth @AT@ 2519 @LENGTH@ 13
------INS SimpleName@@auth @TO@ SingleVariableDeclaration@@Configuration auth @AT@ 2533 @LENGTH@ 4
---INS IfStatement@@if (auth != null) {  LOG.trace("Restoring existing JAAS Configuration {}",auth);  try {    Configuration.setConfiguration(auth);  } catch (  SecurityException e) {    LOG.trace("Cannot restore JAAS Configuration. This exception is ignored.",e);  }} else {  LOG.trace("No JAAS Configuration to restore");} @TO@ MethodDeclaration@@static, void, MethodName:setJAASConfiguration, Configuration auth,  @AT@ 2549 @LENGTH@ 403
------INS InfixExpression@@auth != null @TO@ IfStatement@@if (auth != null) {  LOG.trace("Restoring existing JAAS Configuration {}",auth);  try {    Configuration.setConfiguration(auth);  } catch (  SecurityException e) {    LOG.trace("Cannot restore JAAS Configuration. This exception is ignored.",e);  }} else {  LOG.trace("No JAAS Configuration to restore");} @AT@ 2553 @LENGTH@ 12
---------INS SimpleName@@auth @TO@ InfixExpression@@auth != null @AT@ 2553 @LENGTH@ 4
---------INS Operator@@!= @TO@ InfixExpression@@auth != null @AT@ 2557 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@auth != null @AT@ 2561 @LENGTH@ 4
------INS Block@@ThenBody:{  LOG.trace("Restoring existing JAAS Configuration {}",auth);  try {    Configuration.setConfiguration(auth);  } catch (  SecurityException e) {    LOG.trace("Cannot restore JAAS Configuration. This exception is ignored.",e);  }} @TO@ IfStatement@@if (auth != null) {  LOG.trace("Restoring existing JAAS Configuration {}",auth);  try {    Configuration.setConfiguration(auth);  } catch (  SecurityException e) {    LOG.trace("Cannot restore JAAS Configuration. This exception is ignored.",e);  }} else {  LOG.trace("No JAAS Configuration to restore");} @AT@ 2567 @LENGTH@ 309
---------INS ExpressionStatement@@MethodInvocation:LOG.trace("Restoring existing JAAS Configuration {}",auth) @TO@ Block@@ThenBody:{  LOG.trace("Restoring existing JAAS Configuration {}",auth);  try {    Configuration.setConfiguration(auth);  } catch (  SecurityException e) {    LOG.trace("Cannot restore JAAS Configuration. This exception is ignored.",e);  }} @AT@ 2581 @LENGTH@ 60
------------INS MethodInvocation@@LOG.trace("Restoring existing JAAS Configuration {}",auth) @TO@ ExpressionStatement@@MethodInvocation:LOG.trace("Restoring existing JAAS Configuration {}",auth) @AT@ 2581 @LENGTH@ 59
---------------INS SimpleName@@Name:LOG @TO@ MethodInvocation@@LOG.trace("Restoring existing JAAS Configuration {}",auth) @AT@ 2581 @LENGTH@ 3
---------------INS SimpleName@@MethodName:trace:["Restoring existing JAAS Configuration {}", auth] @TO@ MethodInvocation@@LOG.trace("Restoring existing JAAS Configuration {}",auth) @AT@ 2585 @LENGTH@ 55
------------------INS StringLiteral@@"Restoring existing JAAS Configuration {}" @TO@ SimpleName@@MethodName:trace:["Restoring existing JAAS Configuration {}", auth] @AT@ 2591 @LENGTH@ 42
------------------INS SimpleName@@auth @TO@ SimpleName@@MethodName:trace:["Restoring existing JAAS Configuration {}", auth] @AT@ 2635 @LENGTH@ 4
---------INS TryStatement@@try {  Configuration.setConfiguration(auth);} catch (SecurityException e) {  LOG.trace("Cannot restore JAAS Configuration. This exception is ignored.",e);} @TO@ Block@@ThenBody:{  LOG.trace("Restoring existing JAAS Configuration {}",auth);  try {    Configuration.setConfiguration(auth);  } catch (  SecurityException e) {    LOG.trace("Cannot restore JAAS Configuration. This exception is ignored.",e);  }} @AT@ 2654 @LENGTH@ 212
------------INS ExpressionStatement@@MethodInvocation:Configuration.setConfiguration(auth) @TO@ TryStatement@@try {  Configuration.setConfiguration(auth);} catch (SecurityException e) {  LOG.trace("Cannot restore JAAS Configuration. This exception is ignored.",e);} @AT@ 2676 @LENGTH@ 37
---------------INS MethodInvocation@@Configuration.setConfiguration(auth) @TO@ ExpressionStatement@@MethodInvocation:Configuration.setConfiguration(auth) @AT@ 2676 @LENGTH@ 36
------------------INS SimpleName@@Name:Configuration @TO@ MethodInvocation@@Configuration.setConfiguration(auth) @AT@ 2676 @LENGTH@ 13
------------------INS SimpleName@@MethodName:setConfiguration:[auth] @TO@ MethodInvocation@@Configuration.setConfiguration(auth) @AT@ 2690 @LENGTH@ 22
---------------------INS SimpleName@@auth @TO@ SimpleName@@MethodName:setConfiguration:[auth] @AT@ 2707 @LENGTH@ 4
------------INS CatchClause@@catch (SecurityException e) {  LOG.trace("Cannot restore JAAS Configuration. This exception is ignored.",e);} @TO@ TryStatement@@try {  Configuration.setConfiguration(auth);} catch (SecurityException e) {  LOG.trace("Cannot restore JAAS Configuration. This exception is ignored.",e);} @AT@ 2728 @LENGTH@ 138
---------------INS SingleVariableDeclaration@@SecurityException e @TO@ CatchClause@@catch (SecurityException e) {  LOG.trace("Cannot restore JAAS Configuration. This exception is ignored.",e);} @AT@ 2735 @LENGTH@ 19
------------------INS SimpleType@@SecurityException @TO@ SingleVariableDeclaration@@SecurityException e @AT@ 2735 @LENGTH@ 17
------------------INS SimpleName@@e @TO@ SingleVariableDeclaration@@SecurityException e @AT@ 2753 @LENGTH@ 1
---------------INS ExpressionStatement@@MethodInvocation:LOG.trace("Cannot restore JAAS Configuration. This exception is ignored.",e) @TO@ CatchClause@@catch (SecurityException e) {  LOG.trace("Cannot restore JAAS Configuration. This exception is ignored.",e);} @AT@ 2774 @LENGTH@ 78
------------------INS MethodInvocation@@LOG.trace("Cannot restore JAAS Configuration. This exception is ignored.",e) @TO@ ExpressionStatement@@MethodInvocation:LOG.trace("Cannot restore JAAS Configuration. This exception is ignored.",e) @AT@ 2774 @LENGTH@ 77
---------------------INS SimpleName@@Name:LOG @TO@ MethodInvocation@@LOG.trace("Cannot restore JAAS Configuration. This exception is ignored.",e) @AT@ 2774 @LENGTH@ 3
---------------------INS SimpleName@@MethodName:trace:["Cannot restore JAAS Configuration. This exception is ignored.", e] @TO@ MethodInvocation@@LOG.trace("Cannot restore JAAS Configuration. This exception is ignored.",e) @AT@ 2778 @LENGTH@ 73
------------------------INS StringLiteral@@"Cannot restore JAAS Configuration. This exception is ignored." @TO@ SimpleName@@MethodName:trace:["Cannot restore JAAS Configuration. This exception is ignored.", e] @AT@ 2784 @LENGTH@ 63
------------------------INS SimpleName@@e @TO@ SimpleName@@MethodName:trace:["Cannot restore JAAS Configuration. This exception is ignored.", e] @AT@ 2849 @LENGTH@ 1
------INS Block@@ElseBody:{  LOG.trace("No JAAS Configuration to restore");} @TO@ IfStatement@@if (auth != null) {  LOG.trace("Restoring existing JAAS Configuration {}",auth);  try {    Configuration.setConfiguration(auth);  } catch (  SecurityException e) {    LOG.trace("Cannot restore JAAS Configuration. This exception is ignored.",e);  }} else {  LOG.trace("No JAAS Configuration to restore");} @AT@ 2882 @LENGTH@ 70
---------INS ExpressionStatement@@MethodInvocation:LOG.trace("No JAAS Configuration to restore") @TO@ Block@@ElseBody:{  LOG.trace("No JAAS Configuration to restore");} @AT@ 2896 @LENGTH@ 46
------------INS MethodInvocation@@LOG.trace("No JAAS Configuration to restore") @TO@ ExpressionStatement@@MethodInvocation:LOG.trace("No JAAS Configuration to restore") @AT@ 2896 @LENGTH@ 45
---------------INS SimpleName@@Name:LOG @TO@ MethodInvocation@@LOG.trace("No JAAS Configuration to restore") @AT@ 2896 @LENGTH@ 3
---------------INS SimpleName@@MethodName:trace:["No JAAS Configuration to restore"] @TO@ MethodInvocation@@LOG.trace("No JAAS Configuration to restore") @AT@ 2900 @LENGTH@ 41
------------------INS StringLiteral@@"No JAAS Configuration to restore" @TO@ SimpleName@@MethodName:trace:["No JAAS Configuration to restore"] @AT@ 2906 @LENGTH@ 34


UPD VariableDeclarationStatement@@final Integer eltb=Integer.valueOf(17); @TO@ final Integer eltb=new Integer(17); @AT@ 54596 @LENGTH@ 41
---UPD VariableDeclarationFragment@@eltb=Integer.valueOf(17) @TO@ eltb=new Integer(17) @AT@ 54610 @LENGTH@ 26
------DEL MethodInvocation@@Integer.valueOf(17) @AT@ 54617 @LENGTH@ 19
---------DEL SimpleName@@Name:Integer @AT@ 54617 @LENGTH@ 7
---------DEL SimpleName@@MethodName:valueOf:[17] @AT@ 54625 @LENGTH@ 11
------------DEL NumberLiteral@@17 @AT@ 54633 @LENGTH@ 2
------INS ClassInstanceCreation@@Integer[17] @TO@ VariableDeclarationFragment@@eltb=Integer.valueOf(17) @AT@ 54640 @LENGTH@ 15
---------INS New@@new @TO@ ClassInstanceCreation@@Integer[17] @AT@ 54640 @LENGTH@ 3
---------INS SimpleType@@Integer @TO@ ClassInstanceCreation@@Integer[17] @AT@ 54644 @LENGTH@ 7
---------INS NumberLiteral@@17 @TO@ ClassInstanceCreation@@Integer[17] @AT@ 54652 @LENGTH@ 2


UPD ExpressionStatement@@MethodInvocation:BindingAddHandler.installBindingService(context,model,name) @TO@ MethodInvocation:BindingAddHandler.installBindingService(context,model,name,null) @AT@ 3581 @LENGTH@ 62
---UPD MethodInvocation@@BindingAddHandler.installBindingService(context,model,name) @TO@ BindingAddHandler.installBindingService(context,model,name,null) @AT@ 3581 @LENGTH@ 61
------UPD SimpleName@@MethodName:installBindingService:[context, model, name] @TO@ MethodName:installBindingService:[context, model, name, null] @AT@ 3599 @LENGTH@ 43
---------INS NullLiteral@@null @TO@ SimpleName@@MethodName:installBindingService:[context, model, name] @AT@ 3643 @LENGTH@ 4


UPD EnhancedForStatement@@for (Map.Entry<String,Object> entry : camelHeaders.entrySet()) {  if (headerFilterStrategy.applyFilterToCamelHeaders(entry.getKey(),entry.getValue(),camelExchange) && camelToCxfHeaderMap.get(entry.getKey()) == null) {    LOG.trace("Drop Camel header: {}={}",entry.getKey(),entry.getValue());    continue;  }  String mappedHeaderName=camelToCxfHeaderMap.get(entry.getKey());  if (mappedHeaderName == null) {    mappedHeaderName=entry.getKey();  }  LOG.trace("Propagate Camel header: {}={} as {}",new Object[]{entry.getKey(),entry.getValue(),mappedHeaderName});  answer.putSingle(mappedHeaderName,entry.getValue().toString());} @TO@ for (Map.Entry<String,Object> entry : camelHeaders.entrySet()) {  if (headerFilterStrategy.applyFilterToCamelHeaders(entry.getKey(),entry.getValue(),camelExchange) && camelToCxfHeaderMap.get(entry.getKey()) == null) {    LOG.trace("Drop Camel header: {}={}",entry.getKey(),entry.getValue());    continue;  }  if (entry.getValue() == null) {    LOG.trace("Drop Camel header: {}={}",entry.getKey(),entry.getValue());    continue;  }  String mappedHeaderName=camelToCxfHeaderMap.get(entry.getKey());  if (mappedHeaderName == null) {    mappedHeaderName=entry.getKey();  }  LOG.trace("Propagate Camel header: {}={} as {}",new Object[]{entry.getKey(),entry.getValue(),mappedHeaderName});  answer.putSingle(mappedHeaderName,entry.getValue().toString());} @AT@ 6771 @LENGTH@ 911
---INS IfStatement@@if (entry.getValue() == null) {  LOG.trace("Drop Camel header: {}={}",entry.getKey(),entry.getValue());  continue;} @TO@ EnhancedForStatement@@for (Map.Entry<String,Object> entry : camelHeaders.entrySet()) {  if (headerFilterStrategy.applyFilterToCamelHeaders(entry.getKey(),entry.getValue(),camelExchange) && camelToCxfHeaderMap.get(entry.getKey()) == null) {    LOG.trace("Drop Camel header: {}={}",entry.getKey(),entry.getValue());    continue;  }  String mappedHeaderName=camelToCxfHeaderMap.get(entry.getKey());  if (mappedHeaderName == null) {    mappedHeaderName=entry.getKey();  }  LOG.trace("Propagate Camel header: {}={} as {}",new Object[]{entry.getKey(),entry.getValue(),mappedHeaderName});  answer.putSingle(mappedHeaderName,entry.getValue().toString());} @AT@ 7314 @LENGTH@ 160
------INS InfixExpression@@entry.getValue() == null @TO@ IfStatement@@if (entry.getValue() == null) {  LOG.trace("Drop Camel header: {}={}",entry.getKey(),entry.getValue());  continue;} @AT@ 7318 @LENGTH@ 24
---------INS MethodInvocation@@entry.getValue() @TO@ InfixExpression@@entry.getValue() == null @AT@ 7318 @LENGTH@ 16
------------INS SimpleName@@Name:entry @TO@ MethodInvocation@@entry.getValue() @AT@ 7318 @LENGTH@ 5
------------INS SimpleName@@MethodName:getValue:[] @TO@ MethodInvocation@@entry.getValue() @AT@ 7324 @LENGTH@ 10
---------INS Operator@@== @TO@ InfixExpression@@entry.getValue() == null @AT@ 7334 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@entry.getValue() == null @AT@ 7338 @LENGTH@ 4
------INS Block@@ThenBody:{  LOG.trace("Drop Camel header: {}={}",entry.getKey(),entry.getValue());  continue;} @TO@ IfStatement@@if (entry.getValue() == null) {  LOG.trace("Drop Camel header: {}={}",entry.getKey(),entry.getValue());  continue;} @AT@ 7344 @LENGTH@ 130
---------INS ExpressionStatement@@MethodInvocation:LOG.trace("Drop Camel header: {}={}",entry.getKey(),entry.getValue()) @TO@ Block@@ThenBody:{  LOG.trace("Drop Camel header: {}={}",entry.getKey(),entry.getValue());  continue;} @AT@ 7362 @LENGTH@ 72
------------INS MethodInvocation@@LOG.trace("Drop Camel header: {}={}",entry.getKey(),entry.getValue()) @TO@ ExpressionStatement@@MethodInvocation:LOG.trace("Drop Camel header: {}={}",entry.getKey(),entry.getValue()) @AT@ 7362 @LENGTH@ 71
---------------INS SimpleName@@Name:LOG @TO@ MethodInvocation@@LOG.trace("Drop Camel header: {}={}",entry.getKey(),entry.getValue()) @AT@ 7362 @LENGTH@ 3
---------------INS SimpleName@@MethodName:trace:["Drop Camel header: {}={}", entry.getKey(), entry.getValue()] @TO@ MethodInvocation@@LOG.trace("Drop Camel header: {}={}",entry.getKey(),entry.getValue()) @AT@ 7366 @LENGTH@ 67
------------------INS StringLiteral@@"Drop Camel header: {}={}" @TO@ SimpleName@@MethodName:trace:["Drop Camel header: {}={}", entry.getKey(), entry.getValue()] @AT@ 7372 @LENGTH@ 26
------------------INS MethodInvocation@@entry.getKey() @TO@ SimpleName@@MethodName:trace:["Drop Camel header: {}={}", entry.getKey(), entry.getValue()] @AT@ 7400 @LENGTH@ 14
---------------------INS SimpleName@@Name:entry @TO@ MethodInvocation@@entry.getKey() @AT@ 7400 @LENGTH@ 5
---------------------INS SimpleName@@MethodName:getKey:[] @TO@ MethodInvocation@@entry.getKey() @AT@ 7406 @LENGTH@ 8
------------------INS MethodInvocation@@entry.getValue() @TO@ SimpleName@@MethodName:trace:["Drop Camel header: {}={}", entry.getKey(), entry.getValue()] @AT@ 7416 @LENGTH@ 16
---------------------INS SimpleName@@Name:entry @TO@ MethodInvocation@@entry.getValue() @AT@ 7416 @LENGTH@ 5
---------------------INS SimpleName@@MethodName:getValue:[] @TO@ MethodInvocation@@entry.getValue() @AT@ 7422 @LENGTH@ 10
---------INS ContinueStatement@@ @TO@ Block@@ThenBody:{  LOG.trace("Drop Camel header: {}={}",entry.getKey(),entry.getValue());  continue;} @AT@ 7451 @LENGTH@ 9


UPD MethodDeclaration@@voidMethodName:CSVFormatBuilder, final char delimiter, final Character quoteChar, final Quote quotePolicy, final Character commentStart, final Character escape, final boolean ignoreSurroundingSpaces, final boolean ignoreEmptyLines, final String lineSeparator, String nullToString, final String[] header,  @TO@ voidMethodName:CSVFormatBuilder, final char delimiter, final Character quoteChar, final Quote quotePolicy, final Character commentStart, final Character escape, final boolean ignoreSurroundingSpaces, final boolean ignoreEmptyLines, final String recordSeparator, String nullToString, final String[] header,  @AT@ 4254 @LENGTH@ 967
---UPD SingleVariableDeclaration@@final String lineSeparator @TO@ final String recordSeparator @AT@ 4518 @LENGTH@ 26
------UPD SimpleName@@lineSeparator @TO@ recordSeparator @AT@ 4531 @LENGTH@ 13
---UPD ExpressionStatement@@Assignment:this.recordSeparator=lineSeparator @TO@ Assignment:this.recordSeparator=recordSeparator @AT@ 5094 @LENGTH@ 37
------UPD Assignment@@this.recordSeparator=lineSeparator @TO@ this.recordSeparator=recordSeparator @AT@ 5094 @LENGTH@ 36
---------UPD SimpleName@@lineSeparator @TO@ recordSeparator @AT@ 5117 @LENGTH@ 13


UPD IfStatement@@if (config.expectFailedWriteAttributeOperation(operation)) {  Assert.assertNotNull("Expected transformation to get rejected " + operation,transformedOperation.getFailureDescription());  if (config.canCorrectMore(operation)) {    checkFailedTransformedWriteAttributeOperation(mainServices,modelVersion,config.correctWriteAttributeOperation(operation),config);  }} else {  ModelNode result=mainServices.executeOperation(modelVersion,transformedOperation);  Assert.assertEquals("Failed: " + operation + "\n: "+ result,SUCCESS,result.get(OUTCOME).asString());} @TO@ if (config.expectFailedWriteAttributeOperation(operation)) {  Assert.assertNotNull("Expected transformation to get rejected " + operation,transformedOperation.getFailureDescription());  checkFailedTransformedWriteAttributeOperation(mainServices,modelVersion,config.correctWriteAttributeOperation(operation),config);} else {  ModelNode result=mainServices.executeOperation(modelVersion,transformedOperation);  Assert.assertEquals("Failed: " + operation + "\n: "+ result,SUCCESS,result.get(OUTCOME).asString());} @AT@ 25735 @LENGTH@ 652
---DEL Block@@ThenBody:{  Assert.assertNotNull("Expected transformation to get rejected " + operation,transformedOperation.getFailureDescription());  if (config.canCorrectMore(operation)) {    checkFailedTransformedWriteAttributeOperation(mainServices,modelVersion,config.correctWriteAttributeOperation(operation),config);  }} @AT@ 25794 @LENGTH@ 362
------DEL IfStatement@@if (config.canCorrectMore(operation)) {  checkFailedTransformedWriteAttributeOperation(mainServices,modelVersion,config.correctWriteAttributeOperation(operation),config);} @AT@ 25944 @LENGTH@ 202
---------DEL MethodInvocation@@config.canCorrectMore(operation) @AT@ 25948 @LENGTH@ 32
------------DEL SimpleName@@Name:config @AT@ 25948 @LENGTH@ 6
------------DEL SimpleName@@MethodName:canCorrectMore:[operation] @AT@ 25955 @LENGTH@ 25
---------------DEL SimpleName@@operation @AT@ 25970 @LENGTH@ 9
---MOV Block@@ThenBody:{  checkFailedTransformedWriteAttributeOperation(mainServices,modelVersion,config.correctWriteAttributeOperation(operation),config);} @TO@ IfStatement@@if (config.expectFailedWriteAttributeOperation(operation)) {  Assert.assertNotNull("Expected transformation to get rejected " + operation,transformedOperation.getFailureDescription());  if (config.canCorrectMore(operation)) {    checkFailedTransformedWriteAttributeOperation(mainServices,modelVersion,config.correctWriteAttributeOperation(operation),config);  }} else {  ModelNode result=mainServices.executeOperation(modelVersion,transformedOperation);  Assert.assertEquals("Failed: " + operation + "\n: "+ result,SUCCESS,result.get(OUTCOME).asString());} @AT@ 25982 @LENGTH@ 164
------MOV ExpressionStatement@@MethodInvocation:Assert.assertNotNull("Expected transformation to get rejected " + operation,transformedOperation.getFailureDescription()) @TO@ Block@@ThenBody:{  checkFailedTransformedWriteAttributeOperation(mainServices,modelVersion,config.correctWriteAttributeOperation(operation),config);} @AT@ 25808 @LENGTH@ 123


INS MethodDeclaration@@public, void, MethodName:testInfo, Exception,  @TO@ TypeDeclaration@@[@RunWith(SpringJUnit4ClassRunner.class), @ContextConfiguration, public]JRedisConnectionIntegrationTests, AbstractConnectionIntegrationTests @AT@ 2972 @LENGTH@ 44
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testInfo, Exception,  @AT@ 2972 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testInfo, Exception,  @AT@ 2979 @LENGTH@ 4
---INS SimpleName@@MethodName:testInfo @TO@ MethodDeclaration@@public, void, MethodName:testInfo, Exception,  @AT@ 2984 @LENGTH@ 8
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:testInfo, Exception,  @AT@ 3002 @LENGTH@ 9


UPD FieldDeclaration@@private, volatile, AcceptingChannel<StreamConnection>, [sslServer] @TO@ private, volatile, AcceptingChannel<SslConnection>, [sslServer] @AT@ 2057 @LENGTH@ 62
---UPD ParameterizedType@@AcceptingChannel<StreamConnection> @TO@ AcceptingChannel<SslConnection> @AT@ 2074 @LENGTH@ 34
------UPD SimpleType@@StreamConnection @TO@ SslConnection @AT@ 2091 @LENGTH@ 16


INS MethodDeclaration@@protected, boolean, MethodName:isEligibleAttribute, String attributeName,  @TO@ TypeDeclaration@@CascadingFlowParser, AbstractPropertiesConfiguredBeanDefinitionParser @AT@ 1231 @LENGTH@ 155
---INS Modifier@@protected @TO@ MethodDeclaration@@protected, boolean, MethodName:isEligibleAttribute, String attributeName,  @AT@ 1231 @LENGTH@ 9
---INS PrimitiveType@@boolean @TO@ MethodDeclaration@@protected, boolean, MethodName:isEligibleAttribute, String attributeName,  @AT@ 1241 @LENGTH@ 7
---INS SimpleName@@MethodName:isEligibleAttribute @TO@ MethodDeclaration@@protected, boolean, MethodName:isEligibleAttribute, String attributeName,  @AT@ 1249 @LENGTH@ 19
---INS SingleVariableDeclaration@@String attributeName @TO@ MethodDeclaration@@protected, boolean, MethodName:isEligibleAttribute, String attributeName,  @AT@ 1269 @LENGTH@ 20
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String attributeName @AT@ 1269 @LENGTH@ 6
------INS SimpleName@@attributeName @TO@ SingleVariableDeclaration@@String attributeName @AT@ 1276 @LENGTH@ 13
---INS ReturnStatement@@InfixExpression:!("write-dot".equals(attributeName)) && super.isEligibleAttribute(attributeName) @TO@ MethodDeclaration@@protected, boolean, MethodName:isEligibleAttribute, String attributeName,  @AT@ 1295 @LENGTH@ 88
------INS InfixExpression@@!("write-dot".equals(attributeName)) && super.isEligibleAttribute(attributeName) @TO@ ReturnStatement@@InfixExpression:!("write-dot".equals(attributeName)) && super.isEligibleAttribute(attributeName) @AT@ 1302 @LENGTH@ 80
---------INS PrefixExpression@@!("write-dot".equals(attributeName)) @TO@ InfixExpression@@!("write-dot".equals(attributeName)) && super.isEligibleAttribute(attributeName) @AT@ 1302 @LENGTH@ 36
------------INS Operator@@! @TO@ PrefixExpression@@!("write-dot".equals(attributeName)) @AT@ 1302 @LENGTH@ 1
------------INS ParenthesizedExpression@@("write-dot".equals(attributeName)) @TO@ PrefixExpression@@!("write-dot".equals(attributeName)) @AT@ 1303 @LENGTH@ 35
---------------INS MethodInvocation@@"write-dot".equals(attributeName) @TO@ ParenthesizedExpression@@("write-dot".equals(attributeName)) @AT@ 1304 @LENGTH@ 33
------------------INS StringLiteral@@"write-dot" @TO@ MethodInvocation@@"write-dot".equals(attributeName) @AT@ 1304 @LENGTH@ 11
------------------INS SimpleName@@MethodName:equals:[attributeName] @TO@ MethodInvocation@@"write-dot".equals(attributeName) @AT@ 1316 @LENGTH@ 21
---------------------INS SimpleName@@attributeName @TO@ SimpleName@@MethodName:equals:[attributeName] @AT@ 1323 @LENGTH@ 13
---------INS Operator@@&& @TO@ InfixExpression@@!("write-dot".equals(attributeName)) && super.isEligibleAttribute(attributeName) @AT@ 1338 @LENGTH@ 2
---------INS SuperMethodInvocation@@super.isEligibleAttribute(attributeName) @TO@ InfixExpression@@!("write-dot".equals(attributeName)) && super.isEligibleAttribute(attributeName) @AT@ 1342 @LENGTH@ 40
------------INS SimpleName@@MethodName:isEligibleAttribute:[attributeName] @TO@ SuperMethodInvocation@@super.isEligibleAttribute(attributeName) @AT@ 1348 @LENGTH@ 19
------------INS SimpleName@@attributeName @TO@ SuperMethodInvocation@@super.isEligibleAttribute(attributeName) @AT@ 1368 @LENGTH@ 13


DEL MethodDeclaration@@public, voidMethodName:RemoteViewInjectionSource, final ServiceName serviceName, final String appName, final String moduleName, final String distinctName, final String beanName, final String viewClass, final boolean stateful,  @AT@ 1839 @LENGTH@ 315
---DEL Modifier@@public @AT@ 1839 @LENGTH@ 6
---DEL SimpleName@@MethodName:RemoteViewInjectionSource @AT@ 1846 @LENGTH@ 25
---DEL SingleVariableDeclaration@@final ServiceName serviceName @AT@ 1872 @LENGTH@ 29
------DEL Modifier@@final @AT@ 1872 @LENGTH@ 5
------DEL SimpleType@@ServiceName @AT@ 1878 @LENGTH@ 11
------DEL SimpleName@@serviceName @AT@ 1890 @LENGTH@ 11
---DEL SingleVariableDeclaration@@final String appName @AT@ 1903 @LENGTH@ 20
------DEL Modifier@@final @AT@ 1903 @LENGTH@ 5
------DEL SimpleType@@String @AT@ 1909 @LENGTH@ 6
------DEL SimpleName@@appName @AT@ 1916 @LENGTH@ 7
---DEL SingleVariableDeclaration@@final String moduleName @AT@ 1925 @LENGTH@ 23
------DEL Modifier@@final @AT@ 1925 @LENGTH@ 5
------DEL SimpleType@@String @AT@ 1931 @LENGTH@ 6
------DEL SimpleName@@moduleName @AT@ 1938 @LENGTH@ 10
---DEL SingleVariableDeclaration@@final String distinctName @AT@ 1950 @LENGTH@ 25
------DEL Modifier@@final @AT@ 1950 @LENGTH@ 5
------DEL SimpleType@@String @AT@ 1956 @LENGTH@ 6
------DEL SimpleName@@distinctName @AT@ 1963 @LENGTH@ 12
---DEL SingleVariableDeclaration@@final String beanName @AT@ 1977 @LENGTH@ 21
------DEL Modifier@@final @AT@ 1977 @LENGTH@ 5
------DEL SimpleType@@String @AT@ 1983 @LENGTH@ 6
------DEL SimpleName@@beanName @AT@ 1990 @LENGTH@ 8
---DEL SingleVariableDeclaration@@final String viewClass @AT@ 2000 @LENGTH@ 22
------DEL Modifier@@final @AT@ 2000 @LENGTH@ 5
------DEL SimpleType@@String @AT@ 2006 @LENGTH@ 6
------DEL SimpleName@@viewClass @AT@ 2013 @LENGTH@ 9
---DEL SingleVariableDeclaration@@final boolean stateful @AT@ 2024 @LENGTH@ 22
------DEL Modifier@@final @AT@ 2024 @LENGTH@ 5
------DEL PrimitiveType@@boolean @AT@ 2030 @LENGTH@ 7
------DEL SimpleName@@stateful @AT@ 2038 @LENGTH@ 8
---DEL ConstructorInvocation@@this(serviceName,appName,moduleName,distinctName,beanName,viewClass,stateful,null); @AT@ 2058 @LENGTH@ 90
------DEL SimpleName@@serviceName @AT@ 2063 @LENGTH@ 11
------DEL SimpleName@@appName @AT@ 2076 @LENGTH@ 7
------DEL SimpleName@@moduleName @AT@ 2085 @LENGTH@ 10
------DEL SimpleName@@distinctName @AT@ 2097 @LENGTH@ 12
------DEL SimpleName@@beanName @AT@ 2111 @LENGTH@ 8
------DEL SimpleName@@viewClass @AT@ 2121 @LENGTH@ 9
------DEL SimpleName@@stateful @AT@ 2132 @LENGTH@ 8
------DEL NullLiteral@@null @AT@ 2142 @LENGTH@ 4


UPD TryStatement@@try {  final Map bodyMap=exchange.getContext().getTypeConverter().tryConvertTo(Map.class,value);  final Map headerMap=exchange.getIn().hasHeaders() ? exchange.getIn().getHeaders() : null;  return new Iterator(){    private NamedQueryParser parser=new NamedQueryParser(query);    private Object next;    private boolean done;    @Override public boolean hasNext(){      if (done) {        return false;      }      if (next == null) {        next=next();      }      return next != null;    }    @Override public Object next(){      if (next == null) {        String key=parser.next();        if (key == null) {          done=true;          return null;        }        boolean contains=bodyMap != null ? bodyMap.containsKey(key) : false;        contains|=headerMap != null ? headerMap.containsKey(key) : false;        if (!contains) {          throw new RuntimeExchangeException("Cannot find key [" + key + "] in message body or headers to use when setting named parameter in query ["+ query+ "]",exchange);        }        next=bodyMap != null ? bodyMap.get(key) : null;        if (next == null) {          next=headerMap != null ? headerMap.get(key) : null;        }      }      Object answer=next;      next=null;      return answer;    }    @Override public void remove(){    }  };} catch (Exception e) {  throw new SQLException("The message body must be a java.util.Map type when using named parameters in the query: " + query,e);} @TO@ try {  final Map<?,?> bodyMap=exchange.getContext().getTypeConverter().tryConvertTo(Map.class,value);  final Map<?,?> headerMap=exchange.getIn().hasHeaders() ? exchange.getIn().getHeaders() : null;  return new Iterator<Object>(){    private NamedQueryParser parser=new NamedQueryParser(query);    private Object next;    private boolean done;    @Override public boolean hasNext(){      if (done) {        return false;      }      if (next == null) {        next=next();      }      return next != null;    }    @Override public Object next(){      if (next == null) {        String key=parser.next();        if (key == null) {          done=true;          return null;        }        boolean contains=bodyMap != null ? bodyMap.containsKey(key) : false;        contains|=headerMap != null ? headerMap.containsKey(key) : false;        if (!contains) {          throw new RuntimeExchangeException("Cannot find key [" + key + "] in message body or headers to use when setting named parameter in query ["+ query+ "]",exchange);        }        next=bodyMap != null ? bodyMap.get(key) : null;        if (next == null) {          next=headerMap != null ? headerMap.get(key) : null;        }      }      Object answer=next;      next=null;      return answer;    }    @Override public void remove(){    }  };} catch (Exception e) {  throw new SQLException("The message body must be a java.util.Map type when using named parameters in the query: " + query,e);} @AT@ 2291 @LENGTH@ 2576
---UPD VariableDeclarationStatement@@final Map bodyMap=exchange.getContext().getTypeConverter().tryConvertTo(Map.class,value); @TO@ final Map<?,?> bodyMap=exchange.getContext().getTypeConverter().tryConvertTo(Map.class,value); @AT@ 2377 @LENGTH@ 92
------INS ParameterizedType@@Map<?,?> @TO@ VariableDeclarationStatement@@final Map bodyMap=exchange.getContext().getTypeConverter().tryConvertTo(Map.class,value); @AT@ 2383 @LENGTH@ 9
---------INS SimpleType@@Map @TO@ ParameterizedType@@Map<?,?> @AT@ 2383 @LENGTH@ 3
---------INS WildcardType@@? @TO@ ParameterizedType@@Map<?,?> @AT@ 2387 @LENGTH@ 1
---------INS WildcardType@@? @TO@ ParameterizedType@@Map<?,?> @AT@ 2390 @LENGTH@ 1
------DEL SimpleType@@Map @AT@ 2383 @LENGTH@ 3
---UPD VariableDeclarationStatement@@final Map headerMap=exchange.getIn().hasHeaders() ? exchange.getIn().getHeaders() : null; @TO@ final Map<?,?> headerMap=exchange.getIn().hasHeaders() ? exchange.getIn().getHeaders() : null; @AT@ 2486 @LENGTH@ 91
------DEL SimpleType@@Map @AT@ 2492 @LENGTH@ 3
------INS ParameterizedType@@Map<?,?> @TO@ VariableDeclarationStatement@@final Map headerMap=exchange.getIn().hasHeaders() ? exchange.getIn().getHeaders() : null; @AT@ 2498 @LENGTH@ 9
---------INS SimpleType@@Map @TO@ ParameterizedType@@Map<?,?> @AT@ 2498 @LENGTH@ 3
---------INS WildcardType@@? @TO@ ParameterizedType@@Map<?,?> @AT@ 2502 @LENGTH@ 1
---------INS WildcardType@@? @TO@ ParameterizedType@@Map<?,?> @AT@ 2505 @LENGTH@ 1
---UPD ReturnStatement@@ClassInstanceCreation:new Iterator(){
  private NamedQueryParser parser=new NamedQueryParser(query);
  private Object next;
  private boolean done;
  @Override public boolean hasNext(){
    if (done) {
      return false;
    }
    if (next == null) {
      next=next();
    }
    return next != null;
  }
  @Override public Object next(){
    if (next == null) {
      String key=parser.next();
      if (key == null) {
        done=true;
        return null;
      }
      boolean contains=bodyMap != null ? bodyMap.containsKey(key) : false;
      contains|=headerMap != null ? headerMap.containsKey(key) : false;
      if (!contains) {
        throw new RuntimeExchangeException("Cannot find key [" + key + "] in message body or headers to use when setting named parameter in query ["+ query+ "]",exchange);
      }
      next=bodyMap != null ? bodyMap.get(key) : null;
      if (next == null) {
        next=headerMap != null ? headerMap.get(key) : null;
      }
    }
    Object answer=next;
    next=null;
    return answer;
  }
  @Override public void remove(){
  }
}
 @TO@ ClassInstanceCreation:new Iterator<Object>(){
  private NamedQueryParser parser=new NamedQueryParser(query);
  private Object next;
  private boolean done;
  @Override public boolean hasNext(){
    if (done) {
      return false;
    }
    if (next == null) {
      next=next();
    }
    return next != null;
  }
  @Override public Object next(){
    if (next == null) {
      String key=parser.next();
      if (key == null) {
        done=true;
        return null;
      }
      boolean contains=bodyMap != null ? bodyMap.containsKey(key) : false;
      contains|=headerMap != null ? headerMap.containsKey(key) : false;
      if (!contains) {
        throw new RuntimeExchangeException("Cannot find key [" + key + "] in message body or headers to use when setting named parameter in query ["+ query+ "]",exchange);
      }
      next=bodyMap != null ? bodyMap.get(key) : null;
      if (next == null) {
        next=headerMap != null ? headerMap.get(key) : null;
      }
    }
    Object answer=next;
    next=null;
    return answer;
  }
  @Override public void remove(){
  }
}
 @AT@ 2595 @LENGTH@ 2079
------UPD ClassInstanceCreation@@Iterator[] @TO@ Iterator<Object>[] @AT@ 2602 @LENGTH@ 2071
---------DEL SimpleType@@Iterator @AT@ 2606 @LENGTH@ 8
---------INS ParameterizedType@@Iterator<Object> @TO@ ClassInstanceCreation@@Iterator[] @AT@ 2618 @LENGTH@ 16
------------INS SimpleType@@Iterator @TO@ ParameterizedType@@Iterator<Object> @AT@ 2618 @LENGTH@ 8
------------INS SimpleType@@Object @TO@ ParameterizedType@@Iterator<Object> @AT@ 2627 @LENGTH@ 6


INS FieldDeclaration@@RejectAttributeChecker, [DEFINED=new DefaultRejectAttributeChecker(){
  @Override public String getRejectionLogMessage(  Map<String,ModelNode> attributes){
    return ControllerMessages.MESSAGES.attributesAreNotUnderstoodAndWillBeIgnored();
  }
  @Override protected boolean rejectAttribute(  PathAddress address,  String attributeName,  ModelNode attributeValue,  TransformationContext context){
    return attributeValue.isDefined();
  }
}
] @TO@ TypeDeclaration@@[public]RejectAttributeChecker,  @AT@ 12539 @LENGTH@ 500
---INS SimpleType@@RejectAttributeChecker @TO@ FieldDeclaration@@RejectAttributeChecker, [DEFINED=new DefaultRejectAttributeChecker(){
  @Override public String getRejectionLogMessage(  Map<String,ModelNode> attributes){
    return ControllerMessages.MESSAGES.attributesAreNotUnderstoodAndWillBeIgnored();
  }
  @Override protected boolean rejectAttribute(  PathAddress address,  String attributeName,  ModelNode attributeValue,  TransformationContext context){
    return attributeValue.isDefined();
  }
}
] @AT@ 12539 @LENGTH@ 22
---INS VariableDeclarationFragment@@DEFINED=new DefaultRejectAttributeChecker(){
  @Override public String getRejectionLogMessage(  Map<String,ModelNode> attributes){
    return ControllerMessages.MESSAGES.attributesAreNotUnderstoodAndWillBeIgnored();
  }
  @Override protected boolean rejectAttribute(  PathAddress address,  String attributeName,  ModelNode attributeValue,  TransformationContext context){
    return attributeValue.isDefined();
  }
}
 @TO@ FieldDeclaration@@RejectAttributeChecker, [DEFINED=new DefaultRejectAttributeChecker(){
  @Override public String getRejectionLogMessage(  Map<String,ModelNode> attributes){
    return ControllerMessages.MESSAGES.attributesAreNotUnderstoodAndWillBeIgnored();
  }
  @Override protected boolean rejectAttribute(  PathAddress address,  String attributeName,  ModelNode attributeValue,  TransformationContext context){
    return attributeValue.isDefined();
  }
}
] @AT@ 12562 @LENGTH@ 476
------INS SimpleName@@DEFINED @TO@ VariableDeclarationFragment@@DEFINED=new DefaultRejectAttributeChecker(){
  @Override public String getRejectionLogMessage(  Map<String,ModelNode> attributes){
    return ControllerMessages.MESSAGES.attributesAreNotUnderstoodAndWillBeIgnored();
  }
  @Override protected boolean rejectAttribute(  PathAddress address,  String attributeName,  ModelNode attributeValue,  TransformationContext context){
    return attributeValue.isDefined();
  }
}
 @AT@ 12562 @LENGTH@ 7
------INS ClassInstanceCreation@@DefaultRejectAttributeChecker[] @TO@ VariableDeclarationFragment@@DEFINED=new DefaultRejectAttributeChecker(){
  @Override public String getRejectionLogMessage(  Map<String,ModelNode> attributes){
    return ControllerMessages.MESSAGES.attributesAreNotUnderstoodAndWillBeIgnored();
  }
  @Override protected boolean rejectAttribute(  PathAddress address,  String attributeName,  ModelNode attributeValue,  TransformationContext context){
    return attributeValue.isDefined();
  }
}
 @AT@ 12572 @LENGTH@ 466
---------INS New@@new @TO@ ClassInstanceCreation@@DefaultRejectAttributeChecker[] @AT@ 12572 @LENGTH@ 3
---------INS SimpleType@@DefaultRejectAttributeChecker @TO@ ClassInstanceCreation@@DefaultRejectAttributeChecker[] @AT@ 12576 @LENGTH@ 29
---------INS AnonymousClassDeclaration@@AnonymousClass @TO@ ClassInstanceCreation@@DefaultRejectAttributeChecker[] @AT@ 12608 @LENGTH@ 430
------------INS MethodDeclaration@@public, String, MethodName:getRejectionLogMessage, Map<String,ModelNode> attributes,  @TO@ AnonymousClassDeclaration@@AnonymousClass @AT@ 12636 @LENGTH@ 176
---------------INS Modifier@@public @TO@ MethodDeclaration@@public, String, MethodName:getRejectionLogMessage, Map<String,ModelNode> attributes,  @AT@ 12636 @LENGTH@ 6
---------------INS SimpleType@@String @TO@ MethodDeclaration@@public, String, MethodName:getRejectionLogMessage, Map<String,ModelNode> attributes,  @AT@ 12643 @LENGTH@ 6
---------------INS SimpleName@@MethodName:getRejectionLogMessage @TO@ MethodDeclaration@@public, String, MethodName:getRejectionLogMessage, Map<String,ModelNode> attributes,  @AT@ 12650 @LENGTH@ 22
---------------INS SingleVariableDeclaration@@Map<String,ModelNode> attributes @TO@ MethodDeclaration@@public, String, MethodName:getRejectionLogMessage, Map<String,ModelNode> attributes,  @AT@ 12673 @LENGTH@ 33
------------------INS ParameterizedType@@Map<String,ModelNode> @TO@ SingleVariableDeclaration@@Map<String,ModelNode> attributes @AT@ 12673 @LENGTH@ 22
---------------------INS SimpleType@@Map @TO@ ParameterizedType@@Map<String,ModelNode> @AT@ 12673 @LENGTH@ 3
---------------------INS SimpleType@@String @TO@ ParameterizedType@@Map<String,ModelNode> @AT@ 12677 @LENGTH@ 6
---------------------INS SimpleType@@ModelNode @TO@ ParameterizedType@@Map<String,ModelNode> @AT@ 12685 @LENGTH@ 9
------------------INS SimpleName@@attributes @TO@ SingleVariableDeclaration@@Map<String,ModelNode> attributes @AT@ 12696 @LENGTH@ 10
---------------INS ReturnStatement@@MethodInvocation:ControllerMessages.MESSAGES.attributesAreNotUnderstoodAndWillBeIgnored() @TO@ MethodDeclaration@@public, String, MethodName:getRejectionLogMessage, Map<String,ModelNode> attributes,  @AT@ 12722 @LENGTH@ 80
------------------INS MethodInvocation@@ControllerMessages.MESSAGES.attributesAreNotUnderstoodAndWillBeIgnored() @TO@ ReturnStatement@@MethodInvocation:ControllerMessages.MESSAGES.attributesAreNotUnderstoodAndWillBeIgnored() @AT@ 12729 @LENGTH@ 72
---------------------INS QualifiedName@@Name:ControllerMessages.MESSAGES @TO@ MethodInvocation@@ControllerMessages.MESSAGES.attributesAreNotUnderstoodAndWillBeIgnored() @AT@ 12729 @LENGTH@ 27
---------------------INS SimpleName@@MethodName:attributesAreNotUnderstoodAndWillBeIgnored:[] @TO@ MethodInvocation@@ControllerMessages.MESSAGES.attributesAreNotUnderstoodAndWillBeIgnored() @AT@ 12757 @LENGTH@ 44
------------INS MethodDeclaration@@protected, boolean, MethodName:rejectAttribute, PathAddress address, String attributeName, ModelNode attributeValue, TransformationContext context,  @TO@ AnonymousClassDeclaration@@AnonymousClass @AT@ 12840 @LENGTH@ 192
---------------INS Modifier@@protected @TO@ MethodDeclaration@@protected, boolean, MethodName:rejectAttribute, PathAddress address, String attributeName, ModelNode attributeValue, TransformationContext context,  @AT@ 12840 @LENGTH@ 9
---------------INS PrimitiveType@@boolean @TO@ MethodDeclaration@@protected, boolean, MethodName:rejectAttribute, PathAddress address, String attributeName, ModelNode attributeValue, TransformationContext context,  @AT@ 12850 @LENGTH@ 7
---------------INS SimpleName@@MethodName:rejectAttribute @TO@ MethodDeclaration@@protected, boolean, MethodName:rejectAttribute, PathAddress address, String attributeName, ModelNode attributeValue, TransformationContext context,  @AT@ 12858 @LENGTH@ 15
---------------INS SingleVariableDeclaration@@PathAddress address @TO@ MethodDeclaration@@protected, boolean, MethodName:rejectAttribute, PathAddress address, String attributeName, ModelNode attributeValue, TransformationContext context,  @AT@ 12874 @LENGTH@ 19
------------------INS SimpleType@@PathAddress @TO@ SingleVariableDeclaration@@PathAddress address @AT@ 12874 @LENGTH@ 11
------------------INS SimpleName@@address @TO@ SingleVariableDeclaration@@PathAddress address @AT@ 12886 @LENGTH@ 7
---------------INS SingleVariableDeclaration@@String attributeName @TO@ MethodDeclaration@@protected, boolean, MethodName:rejectAttribute, PathAddress address, String attributeName, ModelNode attributeValue, TransformationContext context,  @AT@ 12895 @LENGTH@ 20
------------------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String attributeName @AT@ 12895 @LENGTH@ 6
------------------INS SimpleName@@attributeName @TO@ SingleVariableDeclaration@@String attributeName @AT@ 12902 @LENGTH@ 13
---------------INS SingleVariableDeclaration@@ModelNode attributeValue @TO@ MethodDeclaration@@protected, boolean, MethodName:rejectAttribute, PathAddress address, String attributeName, ModelNode attributeValue, TransformationContext context,  @AT@ 12917 @LENGTH@ 24
------------------INS SimpleType@@ModelNode @TO@ SingleVariableDeclaration@@ModelNode attributeValue @AT@ 12917 @LENGTH@ 9
------------------INS SimpleName@@attributeValue @TO@ SingleVariableDeclaration@@ModelNode attributeValue @AT@ 12927 @LENGTH@ 14
---------------INS SingleVariableDeclaration@@TransformationContext context @TO@ MethodDeclaration@@protected, boolean, MethodName:rejectAttribute, PathAddress address, String attributeName, ModelNode attributeValue, TransformationContext context,  @AT@ 12943 @LENGTH@ 29
------------------INS SimpleType@@TransformationContext @TO@ SingleVariableDeclaration@@TransformationContext context @AT@ 12943 @LENGTH@ 21
------------------INS SimpleName@@context @TO@ SingleVariableDeclaration@@TransformationContext context @AT@ 12965 @LENGTH@ 7
---------------INS ReturnStatement@@MethodInvocation:attributeValue.isDefined() @TO@ MethodDeclaration@@protected, boolean, MethodName:rejectAttribute, PathAddress address, String attributeName, ModelNode attributeValue, TransformationContext context,  @AT@ 12988 @LENGTH@ 34
------------------INS MethodInvocation@@attributeValue.isDefined() @TO@ ReturnStatement@@MethodInvocation:attributeValue.isDefined() @AT@ 12995 @LENGTH@ 26
---------------------INS SimpleName@@Name:attributeValue @TO@ MethodInvocation@@attributeValue.isDefined() @AT@ 12995 @LENGTH@ 14
---------------------INS SimpleName@@MethodName:isDefined:[] @TO@ MethodInvocation@@attributeValue.isDefined() @AT@ 13010 @LENGTH@ 11


INS MethodDeclaration@@public, void, MethodName:testResourceTransformers_1_1_0, Exception,  @TO@ TypeDeclaration@@[public]SecurityDomainModelv12UnitTestCase, AbstractSubsystemBaseTest @AT@ 5375 @LENGTH@ 1003
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testResourceTransformers_1_1_0, Exception,  @AT@ 5375 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testResourceTransformers_1_1_0, Exception,  @AT@ 5382 @LENGTH@ 4
---INS SimpleName@@MethodName:testResourceTransformers_1_1_0 @TO@ MethodDeclaration@@public, void, MethodName:testResourceTransformers_1_1_0, Exception,  @AT@ 5387 @LENGTH@ 30
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:testResourceTransformers_1_1_0, Exception,  @AT@ 5427 @LENGTH@ 9
---INS VariableDeclarationStatement@@ModelVersion modelVersion=ModelVersion.create(1,1,0); @TO@ MethodDeclaration@@public, void, MethodName:testResourceTransformers_1_1_0, Exception,  @AT@ 5447 @LENGTH@ 57
------INS SimpleType@@ModelVersion @TO@ VariableDeclarationStatement@@ModelVersion modelVersion=ModelVersion.create(1,1,0); @AT@ 5447 @LENGTH@ 12
------INS VariableDeclarationFragment@@modelVersion=ModelVersion.create(1,1,0) @TO@ VariableDeclarationStatement@@ModelVersion modelVersion=ModelVersion.create(1,1,0); @AT@ 5460 @LENGTH@ 43
---------INS SimpleName@@modelVersion @TO@ VariableDeclarationFragment@@modelVersion=ModelVersion.create(1,1,0) @AT@ 5460 @LENGTH@ 12
---------INS MethodInvocation@@ModelVersion.create(1,1,0) @TO@ VariableDeclarationFragment@@modelVersion=ModelVersion.create(1,1,0) @AT@ 5475 @LENGTH@ 28
------------INS SimpleName@@Name:ModelVersion @TO@ MethodInvocation@@ModelVersion.create(1,1,0) @AT@ 5475 @LENGTH@ 12
------------INS SimpleName@@MethodName:create:[1, 1, 0] @TO@ MethodInvocation@@ModelVersion.create(1,1,0) @AT@ 5488 @LENGTH@ 15
---------------INS NumberLiteral@@1 @TO@ SimpleName@@MethodName:create:[1, 1, 0] @AT@ 5495 @LENGTH@ 1
---------------INS NumberLiteral@@1 @TO@ SimpleName@@MethodName:create:[1, 1, 0] @AT@ 5498 @LENGTH@ 1
---------------INS NumberLiteral@@0 @TO@ SimpleName@@MethodName:create:[1, 1, 0] @AT@ 5501 @LENGTH@ 1
---INS VariableDeclarationStatement@@KernelServicesBuilder builder=createKernelServicesBuilder(AdditionalInitialization.MANAGEMENT).setSubsystemXmlResource("transformers.xml"); @TO@ MethodDeclaration@@public, void, MethodName:testResourceTransformers_1_1_0, Exception,  @AT@ 5513 @LENGTH@ 158
------INS SimpleType@@KernelServicesBuilder @TO@ VariableDeclarationStatement@@KernelServicesBuilder builder=createKernelServicesBuilder(AdditionalInitialization.MANAGEMENT).setSubsystemXmlResource("transformers.xml"); @AT@ 5513 @LENGTH@ 21
------INS VariableDeclarationFragment@@builder=createKernelServicesBuilder(AdditionalInitialization.MANAGEMENT).setSubsystemXmlResource("transformers.xml") @TO@ VariableDeclarationStatement@@KernelServicesBuilder builder=createKernelServicesBuilder(AdditionalInitialization.MANAGEMENT).setSubsystemXmlResource("transformers.xml"); @AT@ 5535 @LENGTH@ 135
---------INS SimpleName@@builder @TO@ VariableDeclarationFragment@@builder=createKernelServicesBuilder(AdditionalInitialization.MANAGEMENT).setSubsystemXmlResource("transformers.xml") @AT@ 5535 @LENGTH@ 7
---------INS MethodInvocation@@createKernelServicesBuilder(AdditionalInitialization.MANAGEMENT).setSubsystemXmlResource("transformers.xml") @TO@ VariableDeclarationFragment@@builder=createKernelServicesBuilder(AdditionalInitialization.MANAGEMENT).setSubsystemXmlResource("transformers.xml") @AT@ 5545 @LENGTH@ 125
------------INS MethodInvocation@@MethodName:createKernelServicesBuilder:[AdditionalInitialization.MANAGEMENT] @TO@ MethodInvocation@@createKernelServicesBuilder(AdditionalInitialization.MANAGEMENT).setSubsystemXmlResource("transformers.xml") @AT@ 5545 @LENGTH@ 64
---------------INS QualifiedName@@AdditionalInitialization.MANAGEMENT @TO@ MethodInvocation@@MethodName:createKernelServicesBuilder:[AdditionalInitialization.MANAGEMENT] @AT@ 5573 @LENGTH@ 35
------------------INS SimpleName@@AdditionalInitialization @TO@ QualifiedName@@AdditionalInitialization.MANAGEMENT @AT@ 5573 @LENGTH@ 24
------------------INS SimpleName@@MANAGEMENT @TO@ QualifiedName@@AdditionalInitialization.MANAGEMENT @AT@ 5598 @LENGTH@ 10
------------INS SimpleName@@MethodName:setSubsystemXmlResource:["transformers.xml"] @TO@ MethodInvocation@@createKernelServicesBuilder(AdditionalInitialization.MANAGEMENT).setSubsystemXmlResource("transformers.xml") @AT@ 5627 @LENGTH@ 43
---------------INS StringLiteral@@"transformers.xml" @TO@ SimpleName@@MethodName:setSubsystemXmlResource:["transformers.xml"] @AT@ 5651 @LENGTH@ 18
---INS ExpressionStatement@@MethodInvocation:builder.createLegacyKernelServicesBuilder(null,modelVersion).addMavenResourceURL("org.jboss.as:jboss-as-security:7.1.2.Final").addMavenResourceURL("org.jboss.as:jboss-as-controller:7.1.2.Final").addParentFirstClassPattern("org.jboss.as.controller.*").dontPersistXml() @TO@ MethodDeclaration@@public, void, MethodName:testResourceTransformers_1_1_0, Exception,  @AT@ 5757 @LENGTH@ 337
------INS MethodInvocation@@builder.createLegacyKernelServicesBuilder(null,modelVersion).addMavenResourceURL("org.jboss.as:jboss-as-security:7.1.2.Final").addMavenResourceURL("org.jboss.as:jboss-as-controller:7.1.2.Final").addParentFirstClassPattern("org.jboss.as.controller.*").dontPersistXml() @TO@ ExpressionStatement@@MethodInvocation:builder.createLegacyKernelServicesBuilder(null,modelVersion).addMavenResourceURL("org.jboss.as:jboss-as-security:7.1.2.Final").addMavenResourceURL("org.jboss.as:jboss-as-controller:7.1.2.Final").addParentFirstClassPattern("org.jboss.as.controller.*").dontPersistXml() @AT@ 5757 @LENGTH@ 336
---------INS MethodInvocation@@MethodName:addParentFirstClassPattern:["org.jboss.as.controller.*"] @TO@ MethodInvocation@@builder.createLegacyKernelServicesBuilder(null,modelVersion).addMavenResourceURL("org.jboss.as:jboss-as-security:7.1.2.Final").addMavenResourceURL("org.jboss.as:jboss-as-controller:7.1.2.Final").addParentFirstClassPattern("org.jboss.as.controller.*").dontPersistXml() @AT@ 5757 @LENGTH@ 302
------------INS StringLiteral@@"org.jboss.as.controller.*" @TO@ MethodInvocation@@MethodName:addParentFirstClassPattern:["org.jboss.as.controller.*"] @AT@ 6031 @LENGTH@ 27
---------INS MethodInvocation@@MethodName:addMavenResourceURL:["org.jboss.as:jboss-as-controller:7.1.2.Final"] @TO@ MethodInvocation@@builder.createLegacyKernelServicesBuilder(null,modelVersion).addMavenResourceURL("org.jboss.as:jboss-as-security:7.1.2.Final").addMavenResourceURL("org.jboss.as:jboss-as-controller:7.1.2.Final").addParentFirstClassPattern("org.jboss.as.controller.*").dontPersistXml() @AT@ 5757 @LENGTH@ 229
------------INS StringLiteral@@"org.jboss.as:jboss-as-controller:7.1.2.Final" @TO@ MethodInvocation@@MethodName:addMavenResourceURL:["org.jboss.as:jboss-as-controller:7.1.2.Final"] @AT@ 5939 @LENGTH@ 46
---------INS MethodInvocation@@MethodName:addMavenResourceURL:["org.jboss.as:jboss-as-security:7.1.2.Final"] @TO@ MethodInvocation@@builder.createLegacyKernelServicesBuilder(null,modelVersion).addMavenResourceURL("org.jboss.as:jboss-as-security:7.1.2.Final").addMavenResourceURL("org.jboss.as:jboss-as-controller:7.1.2.Final").addParentFirstClassPattern("org.jboss.as.controller.*").dontPersistXml() @AT@ 5757 @LENGTH@ 144
------------INS StringLiteral@@"org.jboss.as:jboss-as-security:7.1.2.Final" @TO@ MethodInvocation@@MethodName:addMavenResourceURL:["org.jboss.as:jboss-as-security:7.1.2.Final"] @AT@ 5856 @LENGTH@ 44
---------INS MethodInvocation@@MethodName:createLegacyKernelServicesBuilder:[null, modelVersion] @TO@ MethodInvocation@@builder.createLegacyKernelServicesBuilder(null,modelVersion).addMavenResourceURL("org.jboss.as:jboss-as-security:7.1.2.Final").addMavenResourceURL("org.jboss.as:jboss-as-controller:7.1.2.Final").addParentFirstClassPattern("org.jboss.as.controller.*").dontPersistXml() @AT@ 5757 @LENGTH@ 61
------------INS NullLiteral@@null @TO@ MethodInvocation@@MethodName:createLegacyKernelServicesBuilder:[null, modelVersion] @AT@ 5799 @LENGTH@ 4
------------INS SimpleName@@modelVersion @TO@ MethodInvocation@@MethodName:createLegacyKernelServicesBuilder:[null, modelVersion] @AT@ 5805 @LENGTH@ 12
---------INS SimpleName@@Name:builder @TO@ MethodInvocation@@builder.createLegacyKernelServicesBuilder(null,modelVersion).addMavenResourceURL("org.jboss.as:jboss-as-security:7.1.2.Final").addMavenResourceURL("org.jboss.as:jboss-as-controller:7.1.2.Final").addParentFirstClassPattern("org.jboss.as.controller.*").dontPersistXml() @AT@ 5757 @LENGTH@ 7
---------INS SimpleName@@MethodName:dontPersistXml:[] @TO@ MethodInvocation@@builder.createLegacyKernelServicesBuilder(null,modelVersion).addMavenResourceURL("org.jboss.as:jboss-as-security:7.1.2.Final").addMavenResourceURL("org.jboss.as:jboss-as-controller:7.1.2.Final").addParentFirstClassPattern("org.jboss.as.controller.*").dontPersistXml() @AT@ 6077 @LENGTH@ 16
---INS VariableDeclarationStatement@@KernelServices mainServices=builder.build(); @TO@ MethodDeclaration@@public, void, MethodName:testResourceTransformers_1_1_0, Exception,  @AT@ 6104 @LENGTH@ 46
------INS SimpleType@@KernelServices @TO@ VariableDeclarationStatement@@KernelServices mainServices=builder.build(); @AT@ 6104 @LENGTH@ 14
------INS VariableDeclarationFragment@@mainServices=builder.build() @TO@ VariableDeclarationStatement@@KernelServices mainServices=builder.build(); @AT@ 6119 @LENGTH@ 30
---------INS SimpleName@@mainServices @TO@ VariableDeclarationFragment@@mainServices=builder.build() @AT@ 6119 @LENGTH@ 12
---------INS MethodInvocation@@builder.build() @TO@ VariableDeclarationFragment@@mainServices=builder.build() @AT@ 6134 @LENGTH@ 15
------------INS SimpleName@@Name:builder @TO@ MethodInvocation@@builder.build() @AT@ 6134 @LENGTH@ 7
------------INS SimpleName@@MethodName:build:[] @TO@ MethodInvocation@@builder.build() @AT@ 6142 @LENGTH@ 7
---INS ExpressionStatement@@MethodInvocation:Assert.assertTrue(mainServices.isSuccessfulBoot()) @TO@ MethodDeclaration@@public, void, MethodName:testResourceTransformers_1_1_0, Exception,  @AT@ 6159 @LENGTH@ 51
------INS MethodInvocation@@Assert.assertTrue(mainServices.isSuccessfulBoot()) @TO@ ExpressionStatement@@MethodInvocation:Assert.assertTrue(mainServices.isSuccessfulBoot()) @AT@ 6159 @LENGTH@ 50
---------INS SimpleName@@Name:Assert @TO@ MethodInvocation@@Assert.assertTrue(mainServices.isSuccessfulBoot()) @AT@ 6159 @LENGTH@ 6
---------INS SimpleName@@MethodName:assertTrue:[mainServices.isSuccessfulBoot()] @TO@ MethodInvocation@@Assert.assertTrue(mainServices.isSuccessfulBoot()) @AT@ 6166 @LENGTH@ 43
------------INS MethodInvocation@@mainServices.isSuccessfulBoot() @TO@ SimpleName@@MethodName:assertTrue:[mainServices.isSuccessfulBoot()] @AT@ 6177 @LENGTH@ 31
---------------INS SimpleName@@Name:mainServices @TO@ MethodInvocation@@mainServices.isSuccessfulBoot() @AT@ 6177 @LENGTH@ 12
---------------INS SimpleName@@MethodName:isSuccessfulBoot:[] @TO@ MethodInvocation@@mainServices.isSuccessfulBoot() @AT@ 6190 @LENGTH@ 18
---INS ExpressionStatement@@MethodInvocation:Assert.assertTrue(mainServices.getLegacyServices(modelVersion).isSuccessfulBoot()) @TO@ MethodDeclaration@@public, void, MethodName:testResourceTransformers_1_1_0, Exception,  @AT@ 6219 @LENGTH@ 83
------INS MethodInvocation@@Assert.assertTrue(mainServices.getLegacyServices(modelVersion).isSuccessfulBoot()) @TO@ ExpressionStatement@@MethodInvocation:Assert.assertTrue(mainServices.getLegacyServices(modelVersion).isSuccessfulBoot()) @AT@ 6219 @LENGTH@ 82
---------INS SimpleName@@Name:Assert @TO@ MethodInvocation@@Assert.assertTrue(mainServices.getLegacyServices(modelVersion).isSuccessfulBoot()) @AT@ 6219 @LENGTH@ 6
---------INS SimpleName@@MethodName:assertTrue:[mainServices.getLegacyServices(modelVersion).isSuccessfulBoot()] @TO@ MethodInvocation@@Assert.assertTrue(mainServices.getLegacyServices(modelVersion).isSuccessfulBoot()) @AT@ 6226 @LENGTH@ 75
------------INS MethodInvocation@@mainServices.getLegacyServices(modelVersion).isSuccessfulBoot() @TO@ SimpleName@@MethodName:assertTrue:[mainServices.getLegacyServices(modelVersion).isSuccessfulBoot()] @AT@ 6237 @LENGTH@ 63
---------------INS MethodInvocation@@MethodName:getLegacyServices:[modelVersion] @TO@ MethodInvocation@@mainServices.getLegacyServices(modelVersion).isSuccessfulBoot() @AT@ 6237 @LENGTH@ 44
------------------INS SimpleName@@modelVersion @TO@ MethodInvocation@@MethodName:getLegacyServices:[modelVersion] @AT@ 6268 @LENGTH@ 12
---------------INS SimpleName@@Name:mainServices @TO@ MethodInvocation@@mainServices.getLegacyServices(modelVersion).isSuccessfulBoot() @AT@ 6237 @LENGTH@ 12
---------------INS SimpleName@@MethodName:isSuccessfulBoot:[] @TO@ MethodInvocation@@mainServices.getLegacyServices(modelVersion).isSuccessfulBoot() @AT@ 6282 @LENGTH@ 18
---INS ExpressionStatement@@MethodInvocation:checkSubsystemModelTransformation(mainServices,modelVersion) @TO@ MethodDeclaration@@public, void, MethodName:testResourceTransformers_1_1_0, Exception,  @AT@ 6311 @LENGTH@ 61
------INS MethodInvocation@@checkSubsystemModelTransformation(mainServices,modelVersion) @TO@ ExpressionStatement@@MethodInvocation:checkSubsystemModelTransformation(mainServices,modelVersion) @AT@ 6311 @LENGTH@ 60
---------INS SimpleName@@MethodName:checkSubsystemModelTransformation:[mainServices, modelVersion] @TO@ MethodInvocation@@checkSubsystemModelTransformation(mainServices,modelVersion) @AT@ 6311 @LENGTH@ 60
------------INS SimpleName@@mainServices @TO@ SimpleName@@MethodName:checkSubsystemModelTransformation:[mainServices, modelVersion] @AT@ 6345 @LENGTH@ 12
------------INS SimpleName@@modelVersion @TO@ SimpleName@@MethodName:checkSubsystemModelTransformation:[mainServices, modelVersion] @AT@ 6358 @LENGTH@ 12


UPD ReturnStatement@@PrefixExpression:!MongoSimpleTypes.HOLDER.isSimpleType(type.getType()) @TO@ InfixExpression:!MongoSimpleTypes.HOLDER.isSimpleType(type.getType()) && !type.getType().equals(HashMap.class) @AT@ 2012 @LENGTH@ 61
---INS InfixExpression@@!MongoSimpleTypes.HOLDER.isSimpleType(type.getType()) && !type.getType().equals(HashMap.class) @TO@ ReturnStatement@@PrefixExpression:!MongoSimpleTypes.HOLDER.isSimpleType(type.getType()) @AT@ 2045 @LENGTH@ 94
------MOV PrefixExpression@@!MongoSimpleTypes.HOLDER.isSimpleType(type.getType()) @TO@ InfixExpression@@!MongoSimpleTypes.HOLDER.isSimpleType(type.getType()) && !type.getType().equals(HashMap.class) @AT@ 2019 @LENGTH@ 53
------INS Operator@@&& @TO@ InfixExpression@@!MongoSimpleTypes.HOLDER.isSimpleType(type.getType()) && !type.getType().equals(HashMap.class) @AT@ 2098 @LENGTH@ 2
------INS PrefixExpression@@!type.getType().equals(HashMap.class) @TO@ InfixExpression@@!MongoSimpleTypes.HOLDER.isSimpleType(type.getType()) && !type.getType().equals(HashMap.class) @AT@ 2102 @LENGTH@ 37
---------INS Operator@@! @TO@ PrefixExpression@@!type.getType().equals(HashMap.class) @AT@ 2102 @LENGTH@ 1
---------INS MethodInvocation@@type.getType().equals(HashMap.class) @TO@ PrefixExpression@@!type.getType().equals(HashMap.class) @AT@ 2103 @LENGTH@ 36
------------INS MethodInvocation@@MethodName:getType:[] @TO@ MethodInvocation@@type.getType().equals(HashMap.class) @AT@ 2103 @LENGTH@ 14
------------INS SimpleName@@Name:type @TO@ MethodInvocation@@type.getType().equals(HashMap.class) @AT@ 2103 @LENGTH@ 4
------------INS SimpleName@@MethodName:equals:[HashMap.class] @TO@ MethodInvocation@@type.getType().equals(HashMap.class) @AT@ 2118 @LENGTH@ 21
---------------INS TypeLiteral@@HashMap.class @TO@ SimpleName@@MethodName:equals:[HashMap.class] @AT@ 2125 @LENGTH@ 13


UPD CatchClause@@catch (Exception e) {  StringWriter sw=new StringWriter();  PrintWriter pw=new PrintWriter(sw);  e.printStackTrace(pw);  String s=sw.toString();  Scanner scanner=new Scanner(s);  scanner.useDelimiter("\n");  int count=0;  while (scanner.hasNext()) {    scanner.next();    count++;  }  log.info("There is " + count + " lines in the stacktrace");  log.error("Dump stacktrace to log",e);} @TO@ catch (Exception e) {  e.fillInStackTrace();  log.info("There are " + e.getStackTrace().length + " lines in the stacktrace");  log.error("Dump stacktrace to log",e);} @AT@ 2330 @LENGTH@ 889
---DEL VariableDeclarationStatement@@StringWriter sw=new StringWriter(); @AT@ 2388 @LENGTH@ 37
------DEL SimpleType@@StringWriter @AT@ 2388 @LENGTH@ 12
------DEL VariableDeclarationFragment@@sw=new StringWriter() @AT@ 2401 @LENGTH@ 23
---------DEL SimpleName@@sw @AT@ 2401 @LENGTH@ 2
---------DEL ClassInstanceCreation@@StringWriter[] @AT@ 2406 @LENGTH@ 18
------------DEL New@@new @AT@ 2406 @LENGTH@ 3
------------DEL SimpleType@@StringWriter @AT@ 2410 @LENGTH@ 12
---DEL VariableDeclarationStatement@@PrintWriter pw=new PrintWriter(sw); @AT@ 2462 @LENGTH@ 37
------DEL SimpleType@@PrintWriter @AT@ 2462 @LENGTH@ 11
------DEL VariableDeclarationFragment@@pw=new PrintWriter(sw) @AT@ 2474 @LENGTH@ 24
---------DEL SimpleName@@pw @AT@ 2474 @LENGTH@ 2
---------DEL ClassInstanceCreation@@PrintWriter[sw] @AT@ 2479 @LENGTH@ 19
------------DEL New@@new @AT@ 2479 @LENGTH@ 3
------------DEL SimpleType@@PrintWriter @AT@ 2483 @LENGTH@ 11
------------DEL SimpleName@@sw @AT@ 2495 @LENGTH@ 2
---UPD ExpressionStatement@@MethodInvocation:e.printStackTrace(pw) @TO@ MethodInvocation:e.fillInStackTrace() @AT@ 2536 @LENGTH@ 22
------UPD MethodInvocation@@e.printStackTrace(pw) @TO@ e.fillInStackTrace() @AT@ 2536 @LENGTH@ 21
---------UPD SimpleName@@MethodName:printStackTrace:[pw] @TO@ MethodName:fillInStackTrace:[] @AT@ 2538 @LENGTH@ 19
------------DEL SimpleName@@pw @AT@ 2554 @LENGTH@ 2
---DEL VariableDeclarationStatement@@String s=sw.toString(); @AT@ 2596 @LENGTH@ 25
------DEL SimpleType@@String @AT@ 2596 @LENGTH@ 6
------DEL VariableDeclarationFragment@@s=sw.toString() @AT@ 2603 @LENGTH@ 17
---------DEL SimpleName@@s @AT@ 2603 @LENGTH@ 1
---------DEL MethodInvocation@@sw.toString() @AT@ 2607 @LENGTH@ 13
------------DEL SimpleName@@Name:sw @AT@ 2607 @LENGTH@ 2
------------DEL SimpleName@@MethodName:toString:[] @AT@ 2610 @LENGTH@ 10
---DEL VariableDeclarationStatement@@Scanner scanner=new Scanner(s); @AT@ 2658 @LENGTH@ 33
------DEL SimpleType@@Scanner @AT@ 2658 @LENGTH@ 7
------DEL VariableDeclarationFragment@@scanner=new Scanner(s) @AT@ 2666 @LENGTH@ 24
---------DEL SimpleName@@scanner @AT@ 2666 @LENGTH@ 7
---------DEL ClassInstanceCreation@@Scanner[s] @AT@ 2676 @LENGTH@ 14
------------DEL New@@new @AT@ 2676 @LENGTH@ 3
------------DEL SimpleType@@Scanner @AT@ 2680 @LENGTH@ 7
------------DEL SimpleName@@s @AT@ 2688 @LENGTH@ 1
---DEL ExpressionStatement@@MethodInvocation:scanner.useDelimiter("\n") @AT@ 2728 @LENGTH@ 27
------DEL MethodInvocation@@scanner.useDelimiter("\n") @AT@ 2728 @LENGTH@ 26
---------DEL SimpleName@@Name:scanner @AT@ 2728 @LENGTH@ 7
---------DEL SimpleName@@MethodName:useDelimiter:["\n"] @AT@ 2736 @LENGTH@ 18
------------DEL StringLiteral@@"\n" @AT@ 2749 @LENGTH@ 4
---DEL VariableDeclarationStatement@@int count=0; @AT@ 2792 @LENGTH@ 14
------DEL PrimitiveType@@int @AT@ 2792 @LENGTH@ 3
------DEL VariableDeclarationFragment@@count=0 @AT@ 2796 @LENGTH@ 9
---------DEL SimpleName@@count @AT@ 2796 @LENGTH@ 5
---------DEL NumberLiteral@@0 @AT@ 2804 @LENGTH@ 1
---DEL WhileStatement@@while (scanner.hasNext()) {  scanner.next();  count++;} @AT@ 2843 @LENGTH@ 170
------DEL MethodInvocation@@scanner.hasNext() @AT@ 2850 @LENGTH@ 17
---------DEL SimpleName@@Name:scanner @AT@ 2850 @LENGTH@ 7
---------DEL SimpleName@@MethodName:hasNext:[] @AT@ 2858 @LENGTH@ 9
------DEL Block@@WhileBody:{  scanner.next();  count++;} @AT@ 2869 @LENGTH@ 144
---------DEL ExpressionStatement@@MethodInvocation:scanner.next() @AT@ 2911 @LENGTH@ 15
------------DEL MethodInvocation@@scanner.next() @AT@ 2911 @LENGTH@ 14
---------------DEL SimpleName@@Name:scanner @AT@ 2911 @LENGTH@ 7
---------------DEL SimpleName@@MethodName:next:[] @AT@ 2919 @LENGTH@ 6
---------DEL ExpressionStatement@@PostfixExpression:count++ @AT@ 2967 @LENGTH@ 8
------------DEL PostfixExpression@@count++ @AT@ 2967 @LENGTH@ 7
---------------DEL SimpleName@@count @AT@ 2967 @LENGTH@ 5
---------------DEL Operator@@++ @AT@ 2973 @LENGTH@ 2
---UPD ExpressionStatement@@MethodInvocation:log.info("There is " + count + " lines in the stacktrace") @TO@ MethodInvocation:log.info("There are " + e.getStackTrace().length + " lines in the stacktrace") @AT@ 3050 @LENGTH@ 59
------UPD MethodInvocation@@log.info("There is " + count + " lines in the stacktrace") @TO@ log.info("There are " + e.getStackTrace().length + " lines in the stacktrace") @AT@ 3050 @LENGTH@ 58
---------UPD SimpleName@@MethodName:info:["There is " + count + " lines in the stacktrace"] @TO@ MethodName:info:["There are " + e.getStackTrace().length + " lines in the stacktrace"] @AT@ 3054 @LENGTH@ 54
------------UPD InfixExpression@@"There is " + count + " lines in the stacktrace" @TO@ "There are " + e.getStackTrace().length + " lines in the stacktrace" @AT@ 3059 @LENGTH@ 48
---------------INS FieldAccess@@e.getStackTrace().length @TO@ InfixExpression@@"There is " + count + " lines in the stacktrace" @AT@ 2386 @LENGTH@ 24
------------------INS MethodInvocation@@e.getStackTrace() @TO@ FieldAccess@@e.getStackTrace().length @AT@ 2386 @LENGTH@ 17
---------------------INS SimpleName@@Name:e @TO@ MethodInvocation@@e.getStackTrace() @AT@ 2386 @LENGTH@ 1
---------------------INS SimpleName@@MethodName:getStackTrace:[] @TO@ MethodInvocation@@e.getStackTrace() @AT@ 2388 @LENGTH@ 15
------------------INS SimpleName@@length @TO@ FieldAccess@@e.getStackTrace().length @AT@ 2404 @LENGTH@ 6
---------------UPD StringLiteral@@"There is " @TO@ "There are " @AT@ 3059 @LENGTH@ 11
---------------DEL SimpleName@@count @AT@ 3073 @LENGTH@ 5


INS SynchronizedStatement@@synchronized (done) {  done.notify();} @TO@ MethodDeclaration@@public, void, MethodName:afterAction, Object state,  @AT@ 2484 @LENGTH@ 47
---INS SimpleName@@done @TO@ SynchronizedStatement@@synchronized (done) {  done.notify();} @AT@ 2498 @LENGTH@ 4
---INS Block@@SyncBody:{  done.notify();} @TO@ SynchronizedStatement@@synchronized (done) {  done.notify();} @AT@ 2504 @LENGTH@ 27
------MOV ExpressionStatement@@MethodInvocation:done.notify() @TO@ Block@@SyncBody:{  done.notify();} @AT@ 2484 @LENGTH@ 14


UPD Block@@ThenBody:{  final EJBComponentDescription componentDescription=(EJBComponentDescription)description.getComponentDescription();  final EEModuleDescription moduleDescription=componentDescription.getModuleDescription();  final String earApplicationName=moduleDescription.getEarApplicationName();  remoteFactory=new RemoteViewManagedReferenceFactory(earApplicationName,moduleDescription.getModuleName(),moduleDescription.getDistinctName(),componentDescription.getComponentName(),description.getViewClassName(),componentDescription.isStateful());} @TO@ ThenBody:{  final EJBComponentDescription componentDescription=(EJBComponentDescription)description.getComponentDescription();  final EEModuleDescription moduleDescription=componentDescription.getModuleDescription();  final String earApplicationName=moduleDescription.getEarApplicationName();  final Value<ClassLoader> viewClassLoader=new Value<ClassLoader>(){    @Override public ClassLoader getValue() throws IllegalStateException, IllegalArgumentException {      final Module module=deploymentUnit.getAttachment(Attachments.MODULE);      return module != null ? module.getClassLoader() : null;    }  };  remoteFactory=new RemoteViewManagedReferenceFactory(earApplicationName,moduleDescription.getModuleName(),moduleDescription.getDistinctName(),componentDescription.getComponentName(),description.getViewClassName(),componentDescription.isStateful(),viewClassLoader);} @AT@ 6855 @LENGTH@ 680
---UPD ExpressionStatement@@Assignment:remoteFactory=new RemoteViewManagedReferenceFactory(earApplicationName,moduleDescription.getModuleName(),moduleDescription.getDistinctName(),componentDescription.getComponentName(),description.getViewClassName(),componentDescription.isStateful()) @TO@ Assignment:remoteFactory=new RemoteViewManagedReferenceFactory(earApplicationName,moduleDescription.getModuleName(),moduleDescription.getDistinctName(),componentDescription.getComponentName(),description.getViewClassName(),componentDescription.isStateful(),viewClassLoader) @AT@ 7255 @LENGTH@ 254
------UPD Assignment@@remoteFactory=new RemoteViewManagedReferenceFactory(earApplicationName,moduleDescription.getModuleName(),moduleDescription.getDistinctName(),componentDescription.getComponentName(),description.getViewClassName(),componentDescription.isStateful()) @TO@ remoteFactory=new RemoteViewManagedReferenceFactory(earApplicationName,moduleDescription.getModuleName(),moduleDescription.getDistinctName(),componentDescription.getComponentName(),description.getViewClassName(),componentDescription.isStateful(),viewClassLoader) @AT@ 7255 @LENGTH@ 253
---------UPD ClassInstanceCreation@@RemoteViewManagedReferenceFactory[earApplicationName, moduleDescription.getModuleName(), moduleDescription.getDistinctName(), componentDescription.getComponentName(), description.getViewClassName(), componentDescription.isStateful()] @TO@ RemoteViewManagedReferenceFactory[earApplicationName, moduleDescription.getModuleName(), moduleDescription.getDistinctName(), componentDescription.getComponentName(), description.getViewClassName(), componentDescription.isStateful(), viewClassLoader] @AT@ 7271 @LENGTH@ 237
------------INS SimpleName@@viewClassLoader @TO@ ClassInstanceCreation@@RemoteViewManagedReferenceFactory[earApplicationName, moduleDescription.getModuleName(), moduleDescription.getDistinctName(), componentDescription.getComponentName(), description.getViewClassName(), componentDescription.isStateful()] @AT@ 8458 @LENGTH@ 15
---INS VariableDeclarationStatement@@final Value<ClassLoader> viewClassLoader=new Value<ClassLoader>(){
  @Override public ClassLoader getValue() throws IllegalStateException, IllegalArgumentException {
    final Module module=deploymentUnit.getAttachment(Attachments.MODULE);
    return module != null ? module.getClassLoader() : null;
  }
}
; @TO@ Block@@ThenBody:{  final EJBComponentDescription componentDescription=(EJBComponentDescription)description.getComponentDescription();  final EEModuleDescription moduleDescription=componentDescription.getModuleDescription();  final String earApplicationName=moduleDescription.getEarApplicationName();  remoteFactory=new RemoteViewManagedReferenceFactory(earApplicationName,moduleDescription.getModuleName(),moduleDescription.getDistinctName(),componentDescription.getComponentName(),description.getViewClassName(),componentDescription.isStateful());} @AT@ 7681 @LENGTH@ 495
------INS Modifier@@final @TO@ VariableDeclarationStatement@@final Value<ClassLoader> viewClassLoader=new Value<ClassLoader>(){
  @Override public ClassLoader getValue() throws IllegalStateException, IllegalArgumentException {
    final Module module=deploymentUnit.getAttachment(Attachments.MODULE);
    return module != null ? module.getClassLoader() : null;
  }
}
; @AT@ 7681 @LENGTH@ 5
------INS ParameterizedType@@Value<ClassLoader> @TO@ VariableDeclarationStatement@@final Value<ClassLoader> viewClassLoader=new Value<ClassLoader>(){
  @Override public ClassLoader getValue() throws IllegalStateException, IllegalArgumentException {
    final Module module=deploymentUnit.getAttachment(Attachments.MODULE);
    return module != null ? module.getClassLoader() : null;
  }
}
; @AT@ 7687 @LENGTH@ 18
---------INS SimpleType@@Value @TO@ ParameterizedType@@Value<ClassLoader> @AT@ 7687 @LENGTH@ 5
---------INS SimpleType@@ClassLoader @TO@ ParameterizedType@@Value<ClassLoader> @AT@ 7693 @LENGTH@ 11
------INS VariableDeclarationFragment@@viewClassLoader=new Value<ClassLoader>(){
  @Override public ClassLoader getValue() throws IllegalStateException, IllegalArgumentException {
    final Module module=deploymentUnit.getAttachment(Attachments.MODULE);
    return module != null ? module.getClassLoader() : null;
  }
}
 @TO@ VariableDeclarationStatement@@final Value<ClassLoader> viewClassLoader=new Value<ClassLoader>(){
  @Override public ClassLoader getValue() throws IllegalStateException, IllegalArgumentException {
    final Module module=deploymentUnit.getAttachment(Attachments.MODULE);
    return module != null ? module.getClassLoader() : null;
  }
}
; @AT@ 7706 @LENGTH@ 469
---------INS SimpleName@@viewClassLoader @TO@ VariableDeclarationFragment@@viewClassLoader=new Value<ClassLoader>(){
  @Override public ClassLoader getValue() throws IllegalStateException, IllegalArgumentException {
    final Module module=deploymentUnit.getAttachment(Attachments.MODULE);
    return module != null ? module.getClassLoader() : null;
  }
}
 @AT@ 7706 @LENGTH@ 15
---------INS ClassInstanceCreation@@Value<ClassLoader>[] @TO@ VariableDeclarationFragment@@viewClassLoader=new Value<ClassLoader>(){
  @Override public ClassLoader getValue() throws IllegalStateException, IllegalArgumentException {
    final Module module=deploymentUnit.getAttachment(Attachments.MODULE);
    return module != null ? module.getClassLoader() : null;
  }
}
 @AT@ 7724 @LENGTH@ 451
------------INS New@@new @TO@ ClassInstanceCreation@@Value<ClassLoader>[] @AT@ 7724 @LENGTH@ 3
------------INS ParameterizedType@@Value<ClassLoader> @TO@ ClassInstanceCreation@@Value<ClassLoader>[] @AT@ 7728 @LENGTH@ 18
---------------INS SimpleType@@Value @TO@ ParameterizedType@@Value<ClassLoader> @AT@ 7728 @LENGTH@ 5
---------------INS SimpleType@@ClassLoader @TO@ ParameterizedType@@Value<ClassLoader> @AT@ 7734 @LENGTH@ 11
------------INS AnonymousClassDeclaration@@AnonymousClass @TO@ ClassInstanceCreation@@Value<ClassLoader>[] @AT@ 7749 @LENGTH@ 426
---------------INS MethodDeclaration@@public, ClassLoader, MethodName:getValue, IllegalStateException, IllegalArgumentException,  @TO@ AnonymousClassDeclaration@@AnonymousClass @AT@ 7825 @LENGTH@ 320
------------------INS Modifier@@public @TO@ MethodDeclaration@@public, ClassLoader, MethodName:getValue, IllegalStateException, IllegalArgumentException,  @AT@ 7825 @LENGTH@ 6
------------------INS SimpleType@@ClassLoader @TO@ MethodDeclaration@@public, ClassLoader, MethodName:getValue, IllegalStateException, IllegalArgumentException,  @AT@ 7832 @LENGTH@ 11
------------------INS SimpleName@@MethodName:getValue @TO@ MethodDeclaration@@public, ClassLoader, MethodName:getValue, IllegalStateException, IllegalArgumentException,  @AT@ 7844 @LENGTH@ 8
------------------INS SimpleType@@IllegalStateException @TO@ MethodDeclaration@@public, ClassLoader, MethodName:getValue, IllegalStateException, IllegalArgumentException,  @AT@ 7862 @LENGTH@ 21
------------------INS SimpleType@@IllegalArgumentException @TO@ MethodDeclaration@@public, ClassLoader, MethodName:getValue, IllegalStateException, IllegalArgumentException,  @AT@ 7885 @LENGTH@ 24
------------------INS VariableDeclarationStatement@@final Module module=deploymentUnit.getAttachment(Attachments.MODULE); @TO@ MethodDeclaration@@public, ClassLoader, MethodName:getValue, IllegalStateException, IllegalArgumentException,  @AT@ 7948 @LENGTH@ 71
---------------------INS Modifier@@final @TO@ VariableDeclarationStatement@@final Module module=deploymentUnit.getAttachment(Attachments.MODULE); @AT@ 7948 @LENGTH@ 5
---------------------INS SimpleType@@Module @TO@ VariableDeclarationStatement@@final Module module=deploymentUnit.getAttachment(Attachments.MODULE); @AT@ 7954 @LENGTH@ 6
---------------------INS VariableDeclarationFragment@@module=deploymentUnit.getAttachment(Attachments.MODULE) @TO@ VariableDeclarationStatement@@final Module module=deploymentUnit.getAttachment(Attachments.MODULE); @AT@ 7961 @LENGTH@ 57
------------------------INS SimpleName@@module @TO@ VariableDeclarationFragment@@module=deploymentUnit.getAttachment(Attachments.MODULE) @AT@ 7961 @LENGTH@ 6
------------------------INS MethodInvocation@@deploymentUnit.getAttachment(Attachments.MODULE) @TO@ VariableDeclarationFragment@@module=deploymentUnit.getAttachment(Attachments.MODULE) @AT@ 7970 @LENGTH@ 48
---------------------------INS SimpleName@@Name:deploymentUnit @TO@ MethodInvocation@@deploymentUnit.getAttachment(Attachments.MODULE) @AT@ 7970 @LENGTH@ 14
---------------------------INS SimpleName@@MethodName:getAttachment:[Attachments.MODULE] @TO@ MethodInvocation@@deploymentUnit.getAttachment(Attachments.MODULE) @AT@ 7985 @LENGTH@ 33
------------------------------INS QualifiedName@@Attachments.MODULE @TO@ SimpleName@@MethodName:getAttachment:[Attachments.MODULE] @AT@ 7999 @LENGTH@ 18
---------------------------------INS SimpleName@@Attachments @TO@ QualifiedName@@Attachments.MODULE @AT@ 7999 @LENGTH@ 11
---------------------------------INS SimpleName@@MODULE @TO@ QualifiedName@@Attachments.MODULE @AT@ 8011 @LENGTH@ 6
------------------INS ReturnStatement@@ConditionalExpression:module != null ? module.getClassLoader() : null @TO@ MethodDeclaration@@public, ClassLoader, MethodName:getValue, IllegalStateException, IllegalArgumentException,  @AT@ 8056 @LENGTH@ 55
---------------------INS ConditionalExpression@@module != null ? module.getClassLoader() : null @TO@ ReturnStatement@@ConditionalExpression:module != null ? module.getClassLoader() : null @AT@ 8063 @LENGTH@ 47
------------------------INS InfixExpression@@module != null @TO@ ConditionalExpression@@module != null ? module.getClassLoader() : null @AT@ 8063 @LENGTH@ 14
---------------------------INS SimpleName@@module @TO@ InfixExpression@@module != null @AT@ 8063 @LENGTH@ 6
---------------------------INS Operator@@!= @TO@ InfixExpression@@module != null @AT@ 8069 @LENGTH@ 2
---------------------------INS NullLiteral@@null @TO@ InfixExpression@@module != null @AT@ 8073 @LENGTH@ 4
------------------------INS MethodInvocation@@module.getClassLoader() @TO@ ConditionalExpression@@module != null ? module.getClassLoader() : null @AT@ 8080 @LENGTH@ 23
---------------------------INS SimpleName@@Name:module @TO@ MethodInvocation@@module.getClassLoader() @AT@ 8080 @LENGTH@ 6
---------------------------INS SimpleName@@MethodName:getClassLoader:[] @TO@ MethodInvocation@@module.getClassLoader() @AT@ 8087 @LENGTH@ 16
------------------------INS NullLiteral@@null @TO@ ConditionalExpression@@module != null ? module.getClassLoader() : null @AT@ 8106 @LENGTH@ 4


UPD EnhancedForStatement@@for (RouteStartupOrder order : routeStartupOrder) {  String otherId=order.getRoute().getId();  if (answer.getRoute().getId().equals(otherId)) {  } else   if (answer.getStartupOrder() == order.getStartupOrder()) {    throw new FailedToStartRouteException(answer.getRoute().getId(),"startupOrder clash. Route " + otherId + " already has startupOrder "+ answer.getStartupOrder()+ " configured which this route have as well. Please correct startupOrder to be unique among all your routes.");  }} @TO@ for (RouteStartupOrder order : routeStartupOrder) {  String otherId=order.getRoute().getId();  if (answer.getStartupOrder() == order.getStartupOrder()) {    throw new FailedToStartRouteException(answer.getRoute().getId(),"startupOrder clash. Route " + otherId + " already has startupOrder "+ answer.getStartupOrder()+ " configured which this route have as well. Please correct startupOrder to be unique among all your routes.");  }} @AT@ 82458 @LENGTH@ 702
---DEL IfStatement@@if (answer.getRoute().getId().equals(otherId)) {} else if (answer.getStartupOrder() == order.getStartupOrder()) {  throw new FailedToStartRouteException(answer.getRoute().getId(),"startupOrder clash. Route " + otherId + " already has startupOrder "+ answer.getStartupOrder()+ " configured which this route have as well. Please correct startupOrder to be unique among all your routes.");} @AT@ 82577 @LENGTH@ 573
------DEL MethodInvocation@@answer.getRoute().getId().equals(otherId) @AT@ 82581 @LENGTH@ 41
---------DEL MethodInvocation@@MethodName:getId:[] @AT@ 82581 @LENGTH@ 25
---------DEL MethodInvocation@@MethodName:getRoute:[] @AT@ 82581 @LENGTH@ 17
---------DEL SimpleName@@Name:answer @AT@ 82581 @LENGTH@ 6
---------DEL SimpleName@@MethodName:equals:[otherId] @AT@ 82607 @LENGTH@ 15
------------DEL SimpleName@@otherId @AT@ 82614 @LENGTH@ 7
------DEL Block@@ThenBody:{} @AT@ 82624 @LENGTH@ 137
------DEL Block@@ElseBody:if (answer.getStartupOrder() == order.getStartupOrder()) {  throw new FailedToStartRouteException(answer.getRoute().getId(),"startupOrder clash. Route " + otherId + " already has startupOrder "+ answer.getStartupOrder()+ " configured which this route have as well. Please correct startupOrder to be unique among all your routes.");} @AT@ 82767 @LENGTH@ 383
---MOV IfStatement@@if (answer.getStartupOrder() == order.getStartupOrder()) {  throw new FailedToStartRouteException(answer.getRoute().getId(),"startupOrder clash. Route " + otherId + " already has startupOrder "+ answer.getStartupOrder()+ " configured which this route have as well. Please correct startupOrder to be unique among all your routes.");} @TO@ EnhancedForStatement@@for (RouteStartupOrder order : routeStartupOrder) {  String otherId=order.getRoute().getId();  if (answer.getRoute().getId().equals(otherId)) {  } else   if (answer.getStartupOrder() == order.getStartupOrder()) {    throw new FailedToStartRouteException(answer.getRoute().getId(),"startupOrder clash. Route " + otherId + " already has startupOrder "+ answer.getStartupOrder()+ " configured which this route have as well. Please correct startupOrder to be unique among all your routes.");  }} @AT@ 82767 @LENGTH@ 383


UPD TryStatement@@try {  final HostControllerUpdateTask.ExecutedHostRequest request=finalResults.get(hostName);  final ModelNode finalResult=prepared.getFinalResult().get();  final ModelNode transformedResult=request.transformResult(finalResult);  System.out.println(" final result " + transformedResult);  domainOperationContext.addHostControllerResult(hostName,transformedResult);  if (HOST_CONTROLLER_LOGGER.isTraceEnabled()) {    HOST_CONTROLLER_LOGGER.tracef("Final result for remote host %s is %s",hostName,finalResult);  }} catch (InterruptedException e) {  interruptThread=true;  CONTROLLER_LOGGER.interruptedAwaitingFinalResponse(hostName);}catch (ExecutionException e) {  CONTROLLER_LOGGER.caughtExceptionAwaitingFinalResponse(e.getCause(),hostName);} @TO@ try {  final HostControllerUpdateTask.ExecutedHostRequest request=finalResults.get(hostName);  final ModelNode finalResult=prepared.getFinalResult().get();  final ModelNode transformedResult=request.transformResult(finalResult);  domainOperationContext.addHostControllerResult(hostName,transformedResult);  if (HOST_CONTROLLER_LOGGER.isTraceEnabled()) {    HOST_CONTROLLER_LOGGER.tracef("Final result for remote host %s is %s",hostName,finalResult);  }} catch (InterruptedException e) {  interruptThread=true;  CONTROLLER_LOGGER.interruptedAwaitingFinalResponse(hostName);}catch (ExecutionException e) {  CONTROLLER_LOGGER.caughtExceptionAwaitingFinalResponse(e.getCause(),hostName);} @AT@ 10555 @LENGTH@ 1019
---DEL ExpressionStatement@@MethodInvocation:System.out.println(" final result " + transformedResult) @AT@ 10867 @LENGTH@ 57
------DEL MethodInvocation@@System.out.println(" final result " + transformedResult) @AT@ 10867 @LENGTH@ 56
---------DEL QualifiedName@@Name:System.out @AT@ 10867 @LENGTH@ 10
---------DEL SimpleName@@MethodName:println:[" final result " + transformedResult] @AT@ 10878 @LENGTH@ 45
------------DEL InfixExpression@@" final result " + transformedResult @AT@ 10886 @LENGTH@ 36
---------------DEL StringLiteral@@" final result " @AT@ 10886 @LENGTH@ 16
---------------DEL Operator@@+ @AT@ 10902 @LENGTH@ 1
---------------DEL SimpleName@@transformedResult @AT@ 10905 @LENGTH@ 17


UPD MethodDeclaration@@public, void, MethodName:assertProvisionedFeature, String containerName, String featureName, String profileName, String expectedSymbolicName, Exception,  @TO@ public, void, MethodName:assertProvisionedFeature, String containerName, String featureNames, String profileName, String expectedSymbolicNames, Exception,  @AT@ 1826 @LENGTH@ 1539
---UPD SingleVariableDeclaration@@String featureName @TO@ String featureNames @AT@ 1885 @LENGTH@ 18
------UPD SimpleName@@featureName @TO@ featureNames @AT@ 1892 @LENGTH@ 11
---UPD SingleVariableDeclaration@@String expectedSymbolicName @TO@ String expectedSymbolicNames @AT@ 1925 @LENGTH@ 27
------UPD SimpleName@@expectedSymbolicName @TO@ expectedSymbolicNames @AT@ 1932 @LENGTH@ 20
---UPD ExpressionStatement@@MethodInvocation:System.out.println("Testing profile:" + profileName + " on container:"+ containerName+ " by adding feature:"+ featureName) @TO@ MethodInvocation:System.out.println("Testing profile:" + profileName + " on container:"+ containerName+ " by adding feature:"+ featureNames) @AT@ 1981 @LENGTH@ 116
------UPD MethodInvocation@@System.out.println("Testing profile:" + profileName + " on container:"+ containerName+ " by adding feature:"+ featureName) @TO@ System.out.println("Testing profile:" + profileName + " on container:"+ containerName+ " by adding feature:"+ featureNames) @AT@ 1981 @LENGTH@ 115
---------UPD SimpleName@@MethodName:println:["Testing profile:" + profileName + " on container:"+ containerName+ " by adding feature:"+ featureName] @TO@ MethodName:println:["Testing profile:" + profileName + " on container:"+ containerName+ " by adding feature:"+ featureNames] @AT@ 1992 @LENGTH@ 104
------------UPD InfixExpression@@"Testing profile:" + profileName + " on container:"+ containerName+ " by adding feature:"+ featureName @TO@ "Testing profile:" + profileName + " on container:"+ containerName+ " by adding feature:"+ featureNames @AT@ 2000 @LENGTH@ 95
---------------UPD SimpleName@@featureName @TO@ featureNames @AT@ 2084 @LENGTH@ 11
---DEL ExpressionStatement@@MethodInvocation:testFeatures.add(featureName) @AT@ 2716 @LENGTH@ 30
---INS EnhancedForStatement@@for (String featureName : featureNames.split(" ")) {  testFeatures.add(featureNames);} @TO@ MethodDeclaration@@public, void, MethodName:assertProvisionedFeature, String containerName, String featureName, String profileName, String expectedSymbolicName, Exception,  @AT@ 2721 @LENGTH@ 106
------INS SingleVariableDeclaration@@String featureName @TO@ EnhancedForStatement@@for (String featureName : featureNames.split(" ")) {  testFeatures.add(featureNames);} @AT@ 2726 @LENGTH@ 18
---------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String featureName @AT@ 2726 @LENGTH@ 6
---------INS SimpleName@@featureName @TO@ SingleVariableDeclaration@@String featureName @AT@ 2733 @LENGTH@ 11
------INS MethodInvocation@@featureNames.split(" ") @TO@ EnhancedForStatement@@for (String featureName : featureNames.split(" ")) {  testFeatures.add(featureNames);} @AT@ 2747 @LENGTH@ 23
---------INS SimpleName@@Name:featureNames @TO@ MethodInvocation@@featureNames.split(" ") @AT@ 2747 @LENGTH@ 12
---------INS SimpleName@@MethodName:split:[" "] @TO@ MethodInvocation@@featureNames.split(" ") @AT@ 2760 @LENGTH@ 10
------------INS StringLiteral@@" " @TO@ SimpleName@@MethodName:split:[" "] @AT@ 2766 @LENGTH@ 3
------INS ExpressionStatement@@MethodInvocation:testFeatures.add(featureNames) @TO@ EnhancedForStatement@@for (String featureName : featureNames.split(" ")) {  testFeatures.add(featureNames);} @AT@ 2786 @LENGTH@ 31
---------MOV MethodInvocation@@testFeatures.add(featureName) @TO@ ExpressionStatement@@MethodInvocation:testFeatures.add(featureNames) @AT@ 2716 @LENGTH@ 29
------------UPD SimpleName@@MethodName:add:[featureName] @TO@ MethodName:add:[featureNames] @AT@ 2729 @LENGTH@ 16
---------------UPD SimpleName@@featureName @TO@ featureNames @AT@ 2733 @LENGTH@ 11
---DEL VariableDeclarationStatement@@String bundles=executeCommand("container-connect -u admin -p admin " + containerName + " osgi:list -s -t 0 | grep "+ expectedSymbolicName); @AT@ 2899 @LENGTH@ 142
---INS EnhancedForStatement@@for (String symbolicName : expectedSymbolicNames.split(" ")) {  String bundles=executeCommand("container-connect -u admin -p admin " + containerName + " osgi:list -s -t 0 | grep "+ symbolicName);  Assert.assertNotNull(bundles);  Assert.assertTrue(bundles.contains(symbolicName));  System.out.println(bundles);} @TO@ MethodDeclaration@@public, void, MethodName:assertProvisionedFeature, String containerName, String featureName, String profileName, String expectedSymbolicName, Exception,  @AT@ 2980 @LENGTH@ 366
------INS SingleVariableDeclaration@@String symbolicName @TO@ EnhancedForStatement@@for (String symbolicName : expectedSymbolicNames.split(" ")) {  String bundles=executeCommand("container-connect -u admin -p admin " + containerName + " osgi:list -s -t 0 | grep "+ symbolicName);  Assert.assertNotNull(bundles);  Assert.assertTrue(bundles.contains(symbolicName));  System.out.println(bundles);} @AT@ 2985 @LENGTH@ 19
---------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String symbolicName @AT@ 2985 @LENGTH@ 6
---------INS SimpleName@@symbolicName @TO@ SingleVariableDeclaration@@String symbolicName @AT@ 2992 @LENGTH@ 12
------INS MethodInvocation@@expectedSymbolicNames.split(" ") @TO@ EnhancedForStatement@@for (String symbolicName : expectedSymbolicNames.split(" ")) {  String bundles=executeCommand("container-connect -u admin -p admin " + containerName + " osgi:list -s -t 0 | grep "+ symbolicName);  Assert.assertNotNull(bundles);  Assert.assertTrue(bundles.contains(symbolicName));  System.out.println(bundles);} @AT@ 3007 @LENGTH@ 32
---------INS SimpleName@@Name:expectedSymbolicNames @TO@ MethodInvocation@@expectedSymbolicNames.split(" ") @AT@ 3007 @LENGTH@ 21
---------INS SimpleName@@MethodName:split:[" "] @TO@ MethodInvocation@@expectedSymbolicNames.split(" ") @AT@ 3029 @LENGTH@ 10
------------INS StringLiteral@@" " @TO@ SimpleName@@MethodName:split:[" "] @AT@ 3035 @LENGTH@ 3
------MOV ExpressionStatement@@MethodInvocation:Assert.assertNotNull(bundles) @TO@ EnhancedForStatement@@for (String symbolicName : expectedSymbolicNames.split(" ")) {  String bundles=executeCommand("container-connect -u admin -p admin " + containerName + " osgi:list -s -t 0 | grep "+ symbolicName);  Assert.assertNotNull(bundles);  Assert.assertTrue(bundles.contains(symbolicName));  System.out.println(bundles);} @AT@ 3050 @LENGTH@ 30
------INS VariableDeclarationStatement@@String bundles=executeCommand("container-connect -u admin -p admin " + containerName + " osgi:list -s -t 0 | grep "+ symbolicName); @TO@ EnhancedForStatement@@for (String symbolicName : expectedSymbolicNames.split(" ")) {  String bundles=executeCommand("container-connect -u admin -p admin " + containerName + " osgi:list -s -t 0 | grep "+ symbolicName);  Assert.assertNotNull(bundles);  Assert.assertTrue(bundles.contains(symbolicName));  System.out.println(bundles);} @AT@ 3055 @LENGTH@ 134
---------MOV SimpleType@@String @TO@ VariableDeclarationStatement@@String bundles=executeCommand("container-connect -u admin -p admin " + containerName + " osgi:list -s -t 0 | grep "+ symbolicName); @AT@ 2899 @LENGTH@ 6
---------MOV VariableDeclarationFragment@@bundles=executeCommand("container-connect -u admin -p admin " + containerName + " osgi:list -s -t 0 | grep "+ expectedSymbolicName) @TO@ VariableDeclarationStatement@@String bundles=executeCommand("container-connect -u admin -p admin " + containerName + " osgi:list -s -t 0 | grep "+ symbolicName); @AT@ 2906 @LENGTH@ 134
------------UPD MethodInvocation@@executeCommand("container-connect -u admin -p admin " + containerName + " osgi:list -s -t 0 | grep "+ expectedSymbolicName) @TO@ executeCommand("container-connect -u admin -p admin " + containerName + " osgi:list -s -t 0 | grep "+ symbolicName) @AT@ 2916 @LENGTH@ 124
---------------UPD SimpleName@@MethodName:executeCommand:["container-connect -u admin -p admin " + containerName + " osgi:list -s -t 0 | grep "+ expectedSymbolicName] @TO@ MethodName:executeCommand:["container-connect -u admin -p admin " + containerName + " osgi:list -s -t 0 | grep "+ symbolicName] @AT@ 2916 @LENGTH@ 124
------------------UPD InfixExpression@@"container-connect -u admin -p admin " + containerName + " osgi:list -s -t 0 | grep "+ expectedSymbolicName @TO@ "container-connect -u admin -p admin " + containerName + " osgi:list -s -t 0 | grep "+ symbolicName @AT@ 2931 @LENGTH@ 108
---------------------UPD SimpleName@@expectedSymbolicName @TO@ symbolicName @AT@ 3019 @LENGTH@ 20
------MOV ExpressionStatement@@MethodInvocation:System.out.println(bundles) @TO@ EnhancedForStatement@@for (String symbolicName : expectedSymbolicNames.split(" ")) {  String bundles=executeCommand("container-connect -u admin -p admin " + containerName + " osgi:list -s -t 0 | grep "+ symbolicName);  Assert.assertNotNull(bundles);  Assert.assertTrue(bundles.contains(symbolicName));  System.out.println(bundles);} @AT@ 3156 @LENGTH@ 28
------INS ExpressionStatement@@MethodInvocation:Assert.assertTrue(bundles.contains(symbolicName)) @TO@ EnhancedForStatement@@for (String symbolicName : expectedSymbolicNames.split(" ")) {  String bundles=executeCommand("container-connect -u admin -p admin " + containerName + " osgi:list -s -t 0 | grep "+ symbolicName);  Assert.assertNotNull(bundles);  Assert.assertTrue(bundles.contains(symbolicName));  System.out.println(bundles);} @AT@ 3245 @LENGTH@ 50
---------MOV MethodInvocation@@Assert.assertTrue(bundles.contains(expectedSymbolicName)) @TO@ ExpressionStatement@@MethodInvocation:Assert.assertTrue(bundles.contains(symbolicName)) @AT@ 3089 @LENGTH@ 57
------------UPD SimpleName@@MethodName:assertTrue:[bundles.contains(expectedSymbolicName)] @TO@ MethodName:assertTrue:[bundles.contains(symbolicName)] @AT@ 3096 @LENGTH@ 50
---------------UPD MethodInvocation@@bundles.contains(expectedSymbolicName) @TO@ bundles.contains(symbolicName) @AT@ 3107 @LENGTH@ 38
------------------UPD SimpleName@@MethodName:contains:[expectedSymbolicName] @TO@ MethodName:contains:[symbolicName] @AT@ 3115 @LENGTH@ 30
---------------------UPD SimpleName@@expectedSymbolicName @TO@ symbolicName @AT@ 3124 @LENGTH@ 20
---DEL ExpressionStatement@@MethodInvocation:Assert.assertTrue(bundles.contains(expectedSymbolicName)) @AT@ 3089 @LENGTH@ 58


INS MethodDeclaration@@public, void, MethodName:logWarning, final String message,  @TO@ TypeDeclaration@@[public]TransformersLogger,  @AT@ 10820 @LENGTH@ 215
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:logWarning, final String message,  @AT@ 10820 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:logWarning, final String message,  @AT@ 10827 @LENGTH@ 4
---INS SimpleName@@MethodName:logWarning @TO@ MethodDeclaration@@public, void, MethodName:logWarning, final String message,  @AT@ 10832 @LENGTH@ 10
---INS SingleVariableDeclaration@@final String message @TO@ MethodDeclaration@@public, void, MethodName:logWarning, final String message,  @AT@ 10843 @LENGTH@ 20
------INS Modifier@@final @TO@ SingleVariableDeclaration@@final String message @AT@ 10843 @LENGTH@ 5
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@final String message @AT@ 10849 @LENGTH@ 6
------INS SimpleName@@message @TO@ SingleVariableDeclaration@@final String message @AT@ 10856 @LENGTH@ 7
---INS ExpressionStatement@@MethodInvocation:messageQueue.add(new LogEntry(){
  @Override public String getMessage(){
    return message;
  }
}
) @TO@ MethodDeclaration@@public, void, MethodName:logWarning, final String message,  @AT@ 10875 @LENGTH@ 154
------INS MethodInvocation@@messageQueue.add(new LogEntry(){
  @Override public String getMessage(){
    return message;
  }
}
) @TO@ ExpressionStatement@@MethodInvocation:messageQueue.add(new LogEntry(){
  @Override public String getMessage(){
    return message;
  }
}
) @AT@ 10875 @LENGTH@ 153
---------INS SimpleName@@Name:messageQueue @TO@ MethodInvocation@@messageQueue.add(new LogEntry(){
  @Override public String getMessage(){
    return message;
  }
}
) @AT@ 10875 @LENGTH@ 12
---------INS SimpleName@@MethodName:add:[new LogEntry(){
  @Override public String getMessage(){
    return message;
  }
}
] @TO@ MethodInvocation@@messageQueue.add(new LogEntry(){
  @Override public String getMessage(){
    return message;
  }
}
) @AT@ 10888 @LENGTH@ 140
------------INS ClassInstanceCreation@@LogEntry[] @TO@ SimpleName@@MethodName:add:[new LogEntry(){
  @Override public String getMessage(){
    return message;
  }
}
] @AT@ 10892 @LENGTH@ 135
---------------INS New@@new @TO@ ClassInstanceCreation@@LogEntry[] @AT@ 10892 @LENGTH@ 3
---------------INS SimpleType@@LogEntry @TO@ ClassInstanceCreation@@LogEntry[] @AT@ 10896 @LENGTH@ 8
---------------INS AnonymousClassDeclaration@@AnonymousClass @TO@ ClassInstanceCreation@@LogEntry[] @AT@ 10907 @LENGTH@ 120
------------------INS MethodDeclaration@@public, String, MethodName:getMessage,  @TO@ AnonymousClassDeclaration@@AnonymousClass @AT@ 10943 @LENGTH@ 74
---------------------INS Modifier@@public @TO@ MethodDeclaration@@public, String, MethodName:getMessage,  @AT@ 10943 @LENGTH@ 6
---------------------INS SimpleType@@String @TO@ MethodDeclaration@@public, String, MethodName:getMessage,  @AT@ 10950 @LENGTH@ 6
---------------------INS SimpleName@@MethodName:getMessage @TO@ MethodDeclaration@@public, String, MethodName:getMessage,  @AT@ 10957 @LENGTH@ 10
---------------------INS ReturnStatement@@SimpleName:message @TO@ MethodDeclaration@@public, String, MethodName:getMessage,  @AT@ 10988 @LENGTH@ 15
------------------------INS SimpleName@@message @TO@ ReturnStatement@@SimpleName:message @AT@ 10995 @LENGTH@ 7


UPD ExpressionStatement@@MethodInvocation:BindingAddHandler.installBindingService(context,bindingModel,bindingName) @TO@ MethodInvocation:BindingAddHandler.installBindingService(context,bindingModel,bindingName,null) @AT@ 5897 @LENGTH@ 76
---UPD MethodInvocation@@BindingAddHandler.installBindingService(context,bindingModel,bindingName) @TO@ BindingAddHandler.installBindingService(context,bindingModel,bindingName,null) @AT@ 5897 @LENGTH@ 75
------UPD SimpleName@@MethodName:installBindingService:[context, bindingModel, bindingName] @TO@ MethodName:installBindingService:[context, bindingModel, bindingName, null] @AT@ 5915 @LENGTH@ 57
---------INS NullLiteral@@null @TO@ SimpleName@@MethodName:installBindingService:[context, bindingModel, bindingName] @AT@ 5973 @LENGTH@ 4


UPD MethodDeclaration@@public, static, ServiceController<SocketBinding>, MethodName:installBindingService, OperationContext context, ModelNode config, String name, UnknownHostException, OperationFailedException,  @TO@ public, static, ServiceController<SocketBinding>, MethodName:installBindingService, OperationContext context, ModelNode config, String name, final ServiceVerificationHandler verificationHandler, UnknownHostException, OperationFailedException,  @AT@ 4414 @LENGTH@ 2053
---INS SingleVariableDeclaration@@final ServiceVerificationHandler verificationHandler @TO@ MethodDeclaration@@public, static, ServiceController<SocketBinding>, MethodName:installBindingService, OperationContext context, ModelNode config, String name, UnknownHostException, OperationFailedException,  @AT@ 4482 @LENGTH@ 52
------INS Modifier@@final @TO@ SingleVariableDeclaration@@final ServiceVerificationHandler verificationHandler @AT@ 4482 @LENGTH@ 5
------INS SimpleType@@ServiceVerificationHandler @TO@ SingleVariableDeclaration@@final ServiceVerificationHandler verificationHandler @AT@ 4488 @LENGTH@ 26
------INS SimpleName@@verificationHandler @TO@ SingleVariableDeclaration@@final ServiceVerificationHandler verificationHandler @AT@ 4515 @LENGTH@ 19
---INS IfStatement@@if (verificationHandler != null) {  builder.addListener(verificationHandler);} @TO@ MethodDeclaration@@public, static, ServiceController<SocketBinding>, MethodName:installBindingService, OperationContext context, ModelNode config, String name, UnknownHostException, OperationFailedException,  @AT@ 6251 @LENGTH@ 97
------INS InfixExpression@@verificationHandler != null @TO@ IfStatement@@if (verificationHandler != null) {  builder.addListener(verificationHandler);} @AT@ 6254 @LENGTH@ 27
---------INS SimpleName@@verificationHandler @TO@ InfixExpression@@verificationHandler != null @AT@ 6254 @LENGTH@ 19
---------INS Operator@@!= @TO@ InfixExpression@@verificationHandler != null @AT@ 6273 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@verificationHandler != null @AT@ 6277 @LENGTH@ 4
------INS Block@@ThenBody:{  builder.addListener(verificationHandler);} @TO@ IfStatement@@if (verificationHandler != null) {  builder.addListener(verificationHandler);} @AT@ 6283 @LENGTH@ 65
---------INS ExpressionStatement@@MethodInvocation:builder.addListener(verificationHandler) @TO@ Block@@ThenBody:{  builder.addListener(verificationHandler);} @AT@ 6297 @LENGTH@ 41
------------INS MethodInvocation@@builder.addListener(verificationHandler) @TO@ ExpressionStatement@@MethodInvocation:builder.addListener(verificationHandler) @AT@ 6297 @LENGTH@ 40
---------------INS SimpleName@@Name:builder @TO@ MethodInvocation@@builder.addListener(verificationHandler) @AT@ 6297 @LENGTH@ 7
---------------INS SimpleName@@MethodName:addListener:[verificationHandler] @TO@ MethodInvocation@@builder.addListener(verificationHandler) @AT@ 6305 @LENGTH@ 32
------------------INS SimpleName@@verificationHandler @TO@ SimpleName@@MethodName:addListener:[verificationHandler] @AT@ 6317 @LENGTH@ 19


UPD VariableDeclarationStatement@@DefaultServiceLocator locator=new DefaultServiceLocator(); @TO@ MavenServiceLocator locator=new MavenServiceLocator(); @AT@ 9590 @LENGTH@ 60
---UPD SimpleType@@DefaultServiceLocator @TO@ MavenServiceLocator @AT@ 9590 @LENGTH@ 21
---UPD VariableDeclarationFragment@@locator=new DefaultServiceLocator() @TO@ locator=new MavenServiceLocator() @AT@ 9612 @LENGTH@ 37
------UPD ClassInstanceCreation@@DefaultServiceLocator[] @TO@ MavenServiceLocator[] @AT@ 9622 @LENGTH@ 27
---------UPD SimpleType@@DefaultServiceLocator @TO@ MavenServiceLocator @AT@ 9626 @LENGTH@ 21


UPD FieldDeclaration@@private, static, final, ModuleIdentifier[], [JAVA_EE_API_MODULES={ModuleIdentifier.create("javax.activation.api"),ModuleIdentifier.create("javax.annotation.api"),ModuleIdentifier.create("javax.ejb.api"),ModuleIdentifier.create("javax.el.api"),ModuleIdentifier.create("javax.enterprise.api"),ModuleIdentifier.create("javax.enterprise.concurrent.api"),ModuleIdentifier.create("javax.inject.api"),ModuleIdentifier.create("javax.interceptor.api"),ModuleIdentifier.create("javax.json.api"),ModuleIdentifier.create("javax.jms.api"),ModuleIdentifier.create("javax.jws.api"),ModuleIdentifier.create("javax.mail.api"),ModuleIdentifier.create("javax.management.j2ee.api"),ModuleIdentifier.create("javax.persistence.api"),ModuleIdentifier.create("javax.resource.api"),ModuleIdentifier.create("javax.rmi.api"),ModuleIdentifier.create("javax.security.auth.message.api"),ModuleIdentifier.create("javax.security.jacc.api"),ModuleIdentifier.create("javax.servlet.api"),ModuleIdentifier.create("javax.servlet.jsp.api"),ModuleIdentifier.create("javax.transaction.api"),ModuleIdentifier.create("javax.validation.api"),ModuleIdentifier.create("javax.ws.rs.api"),ModuleIdentifier.create("javax.websocket.api"),ModuleIdentifier.create("javax.xml.bind.api"),ModuleIdentifier.create("javax.xml.soap.api"),ModuleIdentifier.create("javax.xml.ws.api"),ModuleIdentifier.create("javax.api")}] @TO@ private, static, final, ModuleIdentifier[], [JAVA_EE_API_MODULES={ModuleIdentifier.create("javax.activation.api"),ModuleIdentifier.create("javax.annotation.api"),ModuleIdentifier.create("javax.ejb.api"),ModuleIdentifier.create("javax.enterprise.api"),ModuleIdentifier.create("javax.enterprise.concurrent.api"),ModuleIdentifier.create("javax.inject.api"),ModuleIdentifier.create("javax.interceptor.api"),ModuleIdentifier.create("javax.json.api"),ModuleIdentifier.create("javax.jms.api"),ModuleIdentifier.create("javax.jws.api"),ModuleIdentifier.create("javax.mail.api"),ModuleIdentifier.create("javax.management.j2ee.api"),ModuleIdentifier.create("javax.persistence.api"),ModuleIdentifier.create("javax.resource.api"),ModuleIdentifier.create("javax.rmi.api"),ModuleIdentifier.create("javax.security.auth.message.api"),ModuleIdentifier.create("javax.security.jacc.api"),ModuleIdentifier.create("javax.servlet.api"),ModuleIdentifier.create("javax.servlet.jsp.api"),ModuleIdentifier.create("javax.transaction.api"),ModuleIdentifier.create("javax.validation.api"),ModuleIdentifier.create("javax.ws.rs.api"),ModuleIdentifier.create("javax.websocket.api"),ModuleIdentifier.create("javax.xml.bind.api"),ModuleIdentifier.create("javax.xml.soap.api"),ModuleIdentifier.create("javax.xml.ws.api"),ModuleIdentifier.create("javax.api"),ModuleIdentifier.create("org.glassfish.javax.el")}] @AT@ 2231 @LENGTH@ 1729
---UPD VariableDeclarationFragment@@JAVA_EE_API_MODULES={ModuleIdentifier.create("javax.activation.api"),ModuleIdentifier.create("javax.annotation.api"),ModuleIdentifier.create("javax.ejb.api"),ModuleIdentifier.create("javax.el.api"),ModuleIdentifier.create("javax.enterprise.api"),ModuleIdentifier.create("javax.enterprise.concurrent.api"),ModuleIdentifier.create("javax.inject.api"),ModuleIdentifier.create("javax.interceptor.api"),ModuleIdentifier.create("javax.json.api"),ModuleIdentifier.create("javax.jms.api"),ModuleIdentifier.create("javax.jws.api"),ModuleIdentifier.create("javax.mail.api"),ModuleIdentifier.create("javax.management.j2ee.api"),ModuleIdentifier.create("javax.persistence.api"),ModuleIdentifier.create("javax.resource.api"),ModuleIdentifier.create("javax.rmi.api"),ModuleIdentifier.create("javax.security.auth.message.api"),ModuleIdentifier.create("javax.security.jacc.api"),ModuleIdentifier.create("javax.servlet.api"),ModuleIdentifier.create("javax.servlet.jsp.api"),ModuleIdentifier.create("javax.transaction.api"),ModuleIdentifier.create("javax.validation.api"),ModuleIdentifier.create("javax.ws.rs.api"),ModuleIdentifier.create("javax.websocket.api"),ModuleIdentifier.create("javax.xml.bind.api"),ModuleIdentifier.create("javax.xml.soap.api"),ModuleIdentifier.create("javax.xml.ws.api"),ModuleIdentifier.create("javax.api")} @TO@ JAVA_EE_API_MODULES={ModuleIdentifier.create("javax.activation.api"),ModuleIdentifier.create("javax.annotation.api"),ModuleIdentifier.create("javax.ejb.api"),ModuleIdentifier.create("javax.enterprise.api"),ModuleIdentifier.create("javax.enterprise.concurrent.api"),ModuleIdentifier.create("javax.inject.api"),ModuleIdentifier.create("javax.interceptor.api"),ModuleIdentifier.create("javax.json.api"),ModuleIdentifier.create("javax.jms.api"),ModuleIdentifier.create("javax.jws.api"),ModuleIdentifier.create("javax.mail.api"),ModuleIdentifier.create("javax.management.j2ee.api"),ModuleIdentifier.create("javax.persistence.api"),ModuleIdentifier.create("javax.resource.api"),ModuleIdentifier.create("javax.rmi.api"),ModuleIdentifier.create("javax.security.auth.message.api"),ModuleIdentifier.create("javax.security.jacc.api"),ModuleIdentifier.create("javax.servlet.api"),ModuleIdentifier.create("javax.servlet.jsp.api"),ModuleIdentifier.create("javax.transaction.api"),ModuleIdentifier.create("javax.validation.api"),ModuleIdentifier.create("javax.ws.rs.api"),ModuleIdentifier.create("javax.websocket.api"),ModuleIdentifier.create("javax.xml.bind.api"),ModuleIdentifier.create("javax.xml.soap.api"),ModuleIdentifier.create("javax.xml.ws.api"),ModuleIdentifier.create("javax.api"),ModuleIdentifier.create("org.glassfish.javax.el")} @AT@ 2271 @LENGTH@ 1688
------UPD ArrayInitializer@@{ModuleIdentifier.create("javax.activation.api"),ModuleIdentifier.create("javax.annotation.api"),ModuleIdentifier.create("javax.ejb.api"),ModuleIdentifier.create("javax.el.api"),ModuleIdentifier.create("javax.enterprise.api"),ModuleIdentifier.create("javax.enterprise.concurrent.api"),ModuleIdentifier.create("javax.inject.api"),ModuleIdentifier.create("javax.interceptor.api"),ModuleIdentifier.create("javax.json.api"),ModuleIdentifier.create("javax.jms.api"),ModuleIdentifier.create("javax.jws.api"),ModuleIdentifier.create("javax.mail.api"),ModuleIdentifier.create("javax.management.j2ee.api"),ModuleIdentifier.create("javax.persistence.api"),ModuleIdentifier.create("javax.resource.api"),ModuleIdentifier.create("javax.rmi.api"),ModuleIdentifier.create("javax.security.auth.message.api"),ModuleIdentifier.create("javax.security.jacc.api"),ModuleIdentifier.create("javax.servlet.api"),ModuleIdentifier.create("javax.servlet.jsp.api"),ModuleIdentifier.create("javax.transaction.api"),ModuleIdentifier.create("javax.validation.api"),ModuleIdentifier.create("javax.ws.rs.api"),ModuleIdentifier.create("javax.websocket.api"),ModuleIdentifier.create("javax.xml.bind.api"),ModuleIdentifier.create("javax.xml.soap.api"),ModuleIdentifier.create("javax.xml.ws.api"),ModuleIdentifier.create("javax.api")} @TO@ {ModuleIdentifier.create("javax.activation.api"),ModuleIdentifier.create("javax.annotation.api"),ModuleIdentifier.create("javax.ejb.api"),ModuleIdentifier.create("javax.enterprise.api"),ModuleIdentifier.create("javax.enterprise.concurrent.api"),ModuleIdentifier.create("javax.inject.api"),ModuleIdentifier.create("javax.interceptor.api"),ModuleIdentifier.create("javax.json.api"),ModuleIdentifier.create("javax.jms.api"),ModuleIdentifier.create("javax.jws.api"),ModuleIdentifier.create("javax.mail.api"),ModuleIdentifier.create("javax.management.j2ee.api"),ModuleIdentifier.create("javax.persistence.api"),ModuleIdentifier.create("javax.resource.api"),ModuleIdentifier.create("javax.rmi.api"),ModuleIdentifier.create("javax.security.auth.message.api"),ModuleIdentifier.create("javax.security.jacc.api"),ModuleIdentifier.create("javax.servlet.api"),ModuleIdentifier.create("javax.servlet.jsp.api"),ModuleIdentifier.create("javax.transaction.api"),ModuleIdentifier.create("javax.validation.api"),ModuleIdentifier.create("javax.ws.rs.api"),ModuleIdentifier.create("javax.websocket.api"),ModuleIdentifier.create("javax.xml.bind.api"),ModuleIdentifier.create("javax.xml.soap.api"),ModuleIdentifier.create("javax.xml.ws.api"),ModuleIdentifier.create("javax.api"),ModuleIdentifier.create("org.glassfish.javax.el")} @AT@ 2293 @LENGTH@ 1666
---------UPD MethodInvocation@@ModuleIdentifier.create("javax.el.api") @TO@ ModuleIdentifier.create("org.glassfish.javax.el") @AT@ 2483 @LENGTH@ 39
------------UPD SimpleName@@MethodName:create:["javax.el.api"] @TO@ MethodName:create:["org.glassfish.javax.el"] @AT@ 2500 @LENGTH@ 22
---------------UPD StringLiteral@@"javax.el.api" @TO@ "org.glassfish.javax.el" @AT@ 2507 @LENGTH@ 14
---------MOV MethodInvocation@@ModuleIdentifier.create("javax.el.api") @TO@ ArrayInitializer@@{ModuleIdentifier.create("javax.activation.api"),ModuleIdentifier.create("javax.annotation.api"),ModuleIdentifier.create("javax.ejb.api"),ModuleIdentifier.create("javax.el.api"),ModuleIdentifier.create("javax.enterprise.api"),ModuleIdentifier.create("javax.enterprise.concurrent.api"),ModuleIdentifier.create("javax.inject.api"),ModuleIdentifier.create("javax.interceptor.api"),ModuleIdentifier.create("javax.json.api"),ModuleIdentifier.create("javax.jms.api"),ModuleIdentifier.create("javax.jws.api"),ModuleIdentifier.create("javax.mail.api"),ModuleIdentifier.create("javax.management.j2ee.api"),ModuleIdentifier.create("javax.persistence.api"),ModuleIdentifier.create("javax.resource.api"),ModuleIdentifier.create("javax.rmi.api"),ModuleIdentifier.create("javax.security.auth.message.api"),ModuleIdentifier.create("javax.security.jacc.api"),ModuleIdentifier.create("javax.servlet.api"),ModuleIdentifier.create("javax.servlet.jsp.api"),ModuleIdentifier.create("javax.transaction.api"),ModuleIdentifier.create("javax.validation.api"),ModuleIdentifier.create("javax.ws.rs.api"),ModuleIdentifier.create("javax.websocket.api"),ModuleIdentifier.create("javax.xml.bind.api"),ModuleIdentifier.create("javax.xml.soap.api"),ModuleIdentifier.create("javax.xml.ws.api"),ModuleIdentifier.create("javax.api")} @AT@ 2483 @LENGTH@ 39


UPD TypeDeclaration@@[@RunWith(Arquillian.class), @RunAsClient, @Ignore("AS7-6379"), public]RemoteEJBClientStatefulBeanFailoverTestCase, ClusterAbstractTestCase @TO@ [@RunWith(Arquillian.class), @RunAsClient, @Ignore("AS7-6604"), public]RemoteEJBClientStatefulBeanFailoverTestCase, ClusterAbstractTestCase @AT@ 2635 @LENGTH@ 9423
---UPD SingleMemberAnnotation@@@Ignore("AS7-6379") @TO@ @Ignore("AS7-6604") @AT@ 2675 @LENGTH@ 19


UPD MethodDeclaration@@protected, RouteBuilder, MethodName:createRouteBuilder, Exception,  @TO@ public, boolean, MethodName:isUseRouteBuilder,  @AT@ 3934 @LENGTH@ 206
---INS ReturnStatement@@BooleanLiteral:false @TO@ MethodDeclaration@@protected, RouteBuilder, MethodName:createRouteBuilder, Exception,  @AT@ 1304 @LENGTH@ 13
------INS BooleanLiteral@@false @TO@ ReturnStatement@@BooleanLiteral:false @AT@ 1311 @LENGTH@ 5
---DEL Modifier@@protected @AT@ 3934 @LENGTH@ 9
---DEL SimpleType@@RouteBuilder @AT@ 3944 @LENGTH@ 12
---DEL SimpleName@@MethodName:createRouteBuilder @AT@ 3957 @LENGTH@ 18
---DEL SimpleType@@Exception @AT@ 3985 @LENGTH@ 9
---DEL ReturnStatement@@ClassInstanceCreation:new RouteBuilder(){
  @Override public void configure() throws Exception {
  }
}
 @AT@ 4005 @LENGTH@ 129
------DEL ClassInstanceCreation@@RouteBuilder[] @AT@ 4012 @LENGTH@ 121
---------DEL New@@new @AT@ 4012 @LENGTH@ 3
---------DEL SimpleType@@RouteBuilder @AT@ 4016 @LENGTH@ 12
---------DEL AnonymousClassDeclaration@@AnonymousClass @AT@ 4031 @LENGTH@ 102
------------DEL MethodDeclaration@@public, void, MethodName:configure, Exception,  @AT@ 4067 @LENGTH@ 56
---------------DEL SimpleType@@Exception @AT@ 4098 @LENGTH@ 9
---MOV Modifier@@public @TO@ MethodDeclaration@@protected, RouteBuilder, MethodName:createRouteBuilder, Exception,  @AT@ 4067 @LENGTH@ 6
---MOV PrimitiveType@@void @TO@ MethodDeclaration@@protected, RouteBuilder, MethodName:createRouteBuilder, Exception,  @AT@ 4074 @LENGTH@ 4
---MOV SimpleName@@MethodName:configure @TO@ MethodDeclaration@@protected, RouteBuilder, MethodName:createRouteBuilder, Exception,  @AT@ 4079 @LENGTH@ 9


UPD IfStatement@@if (!config.expectFailedWriteAttributeOperation(writeOp)) {  Assert.assertEquals("Failed: " + writeOp + "\n"+ result,SUCCESS,result.get(OUTCOME).asString());} else {  Assert.assertEquals("Expected failure: " + writeOp,FAILED,result.get(OUTCOME).asString());  transformedOperation=mainServices.transformOperation(modelVersion,config.correctWriteAttributeOperation(writeOp));  result=mainServices.executeOperation(modelVersion,transformedOperation);  Assert.assertEquals(result.get(FAILURE_DESCRIPTION).asString() + " for\n:" + transformedOperation.getTransformedOperation(),SUCCESS,result.get(OUTCOME).asString());} @TO@ if (!config.expectFailedWriteAttributeOperation(writeOp)) {  ModelNode result=mainServices.executeOperation(modelVersion,transformedOperation);  Assert.assertEquals("Failed: " + writeOp + "\n"+ result,SUCCESS,result.get(OUTCOME).asString());} else {  Assert.assertNotNull("Expected transformation to get rejected " + writeOp,transformedOperation.getFailureDescription());  transformedOperation=mainServices.transformOperation(modelVersion,config.correctWriteAttributeOperation(writeOp));  ModelNode result=mainServices.executeOperation(modelVersion,transformedOperation);  Assert.assertEquals(result.get(FAILURE_DESCRIPTION).asString() + " for\n:" + transformedOperation.getTransformedOperation(),SUCCESS,result.get(OUTCOME).asString());} @AT@ 24304 @LENGTH@ 757
---UPD Block@@ThenBody:{  Assert.assertEquals("Failed: " + writeOp + "\n"+ result,SUCCESS,result.get(OUTCOME).asString());} @TO@ ThenBody:{  ModelNode result=mainServices.executeOperation(modelVersion,transformedOperation);  Assert.assertEquals("Failed: " + writeOp + "\n"+ result,SUCCESS,result.get(OUTCOME).asString());} @AT@ 24362 @LENGTH@ 139
------INS VariableDeclarationStatement@@ModelNode result=mainServices.executeOperation(modelVersion,transformedOperation); @TO@ Block@@ThenBody:{  Assert.assertEquals("Failed: " + writeOp + "\n"+ result,SUCCESS,result.get(OUTCOME).asString());} @AT@ 24282 @LENGTH@ 85
---------INS SimpleType@@ModelNode @TO@ VariableDeclarationStatement@@ModelNode result=mainServices.executeOperation(modelVersion,transformedOperation); @AT@ 24282 @LENGTH@ 9
---------INS VariableDeclarationFragment@@result=mainServices.executeOperation(modelVersion,transformedOperation) @TO@ VariableDeclarationStatement@@ModelNode result=mainServices.executeOperation(modelVersion,transformedOperation); @AT@ 24292 @LENGTH@ 74
------------INS SimpleName@@result @TO@ VariableDeclarationFragment@@result=mainServices.executeOperation(modelVersion,transformedOperation) @AT@ 24292 @LENGTH@ 6
------------INS MethodInvocation@@mainServices.executeOperation(modelVersion,transformedOperation) @TO@ VariableDeclarationFragment@@result=mainServices.executeOperation(modelVersion,transformedOperation) @AT@ 24301 @LENGTH@ 65
---------------INS SimpleName@@Name:mainServices @TO@ MethodInvocation@@mainServices.executeOperation(modelVersion,transformedOperation) @AT@ 24301 @LENGTH@ 12
---------------INS SimpleName@@MethodName:executeOperation:[modelVersion, transformedOperation] @TO@ MethodInvocation@@mainServices.executeOperation(modelVersion,transformedOperation) @AT@ 24314 @LENGTH@ 52
------------------INS SimpleName@@modelVersion @TO@ SimpleName@@MethodName:executeOperation:[modelVersion, transformedOperation] @AT@ 24331 @LENGTH@ 12
------------------INS SimpleName@@transformedOperation @TO@ SimpleName@@MethodName:executeOperation:[modelVersion, transformedOperation] @AT@ 24345 @LENGTH@ 20
---UPD Block@@ElseBody:{  Assert.assertEquals("Expected failure: " + writeOp,FAILED,result.get(OUTCOME).asString());  transformedOperation=mainServices.transformOperation(modelVersion,config.correctWriteAttributeOperation(writeOp));  result=mainServices.executeOperation(modelVersion,transformedOperation);  Assert.assertEquals(result.get(FAILURE_DESCRIPTION).asString() + " for\n:" + transformedOperation.getTransformedOperation(),SUCCESS,result.get(OUTCOME).asString());} @TO@ ElseBody:{  Assert.assertNotNull("Expected transformation to get rejected " + writeOp,transformedOperation.getFailureDescription());  transformedOperation=mainServices.transformOperation(modelVersion,config.correctWriteAttributeOperation(writeOp));  ModelNode result=mainServices.executeOperation(modelVersion,transformedOperation);  Assert.assertEquals(result.get(FAILURE_DESCRIPTION).asString() + " for\n:" + transformedOperation.getTransformedOperation(),SUCCESS,result.get(OUTCOME).asString());} @AT@ 24507 @LENGTH@ 554
------MOV VariableDeclarationStatement@@ModelNode result=mainServices.executeOperation(modelVersion,transformedOperation); @TO@ Block@@ElseBody:{  Assert.assertEquals("Expected failure: " + writeOp,FAILED,result.get(OUTCOME).asString());  transformedOperation=mainServices.transformOperation(modelVersion,config.correctWriteAttributeOperation(writeOp));  result=mainServices.executeOperation(modelVersion,transformedOperation);  Assert.assertEquals(result.get(FAILURE_DESCRIPTION).asString() + " for\n:" + transformedOperation.getTransformedOperation(),SUCCESS,result.get(OUTCOME).asString());} @AT@ 24202 @LENGTH@ 85
------UPD ExpressionStatement@@MethodInvocation:Assert.assertEquals("Expected failure: " + writeOp,FAILED,result.get(OUTCOME).asString()) @TO@ MethodInvocation:Assert.assertNotNull("Expected transformation to get rejected " + writeOp,transformedOperation.getFailureDescription()) @AT@ 24529 @LENGTH@ 93
---------UPD MethodInvocation@@Assert.assertEquals("Expected failure: " + writeOp,FAILED,result.get(OUTCOME).asString()) @TO@ Assert.assertNotNull("Expected transformation to get rejected " + writeOp,transformedOperation.getFailureDescription()) @AT@ 24529 @LENGTH@ 92
------------UPD SimpleName@@MethodName:assertEquals:["Expected failure: " + writeOp, FAILED, result.get(OUTCOME).asString()] @TO@ MethodName:assertNotNull:["Expected transformation to get rejected " + writeOp, transformedOperation.getFailureDescription()] @AT@ 24536 @LENGTH@ 85
---------------UPD InfixExpression@@"Expected failure: " + writeOp @TO@ "Expected transformation to get rejected " + writeOp @AT@ 24549 @LENGTH@ 30
------------------UPD StringLiteral@@"Expected failure: " @TO@ "Expected transformation to get rejected " @AT@ 24549 @LENGTH@ 20
---------------DEL SimpleName@@FAILED @AT@ 24582 @LENGTH@ 6
---------------UPD MethodInvocation@@result.get(OUTCOME).asString() @TO@ transformedOperation.getFailureDescription() @AT@ 24590 @LENGTH@ 30
------------------DEL MethodInvocation@@MethodName:get:[OUTCOME] @AT@ 24590 @LENGTH@ 19
---------------------DEL SimpleName@@OUTCOME @AT@ 24601 @LENGTH@ 7
------------------UPD SimpleName@@Name:result @TO@ Name:transformedOperation @AT@ 24590 @LENGTH@ 6
------------------UPD SimpleName@@MethodName:asString:[] @TO@ MethodName:getFailureDescription:[] @AT@ 24610 @LENGTH@ 10
------DEL ExpressionStatement@@Assignment:result=mainServices.executeOperation(modelVersion,transformedOperation) @AT@ 24781 @LENGTH@ 75
---------DEL Assignment@@result=mainServices.executeOperation(modelVersion,transformedOperation) @AT@ 24781 @LENGTH@ 74
------------DEL SimpleName@@result @AT@ 24781 @LENGTH@ 6
------------DEL Operator@@= @AT@ 24787 @LENGTH@ 1
------------DEL MethodInvocation@@mainServices.executeOperation(modelVersion,transformedOperation) @AT@ 24790 @LENGTH@ 65
---------------DEL SimpleName@@Name:mainServices @AT@ 24790 @LENGTH@ 12
---------------DEL SimpleName@@MethodName:executeOperation:[modelVersion, transformedOperation] @AT@ 24803 @LENGTH@ 52
------------------DEL SimpleName@@modelVersion @AT@ 24820 @LENGTH@ 12
------------------DEL SimpleName@@transformedOperation @AT@ 24834 @LENGTH@ 20


UPD IfStatement@@if (diff.equals("n")) {  System.out.println("Reporting on differences in the model when the management versions are different");  compareDifferentVersions=false;} else if (diff.equals("y")) {  System.out.println("Not reporting on differences in the model when the management versions are different");  compareDifferentVersions=true;} else {  throw new IllegalArgumentException("Please enter 'y' or 'n'");} @TO@ if (diff.equals("n")) {  System.out.println("Not reporting on differences in the model when the management versions are different");  compareDifferentVersions=false;} else if (diff.equals("y")) {  System.out.println("Reporting on differences in the model when the management versions are different");  compareDifferentVersions=true;} else {  throw new IllegalArgumentException("Please enter 'y' or 'n'");} @AT@ 7249 @LENGTH@ 491
---UPD Block@@ThenBody:{  System.out.println("Reporting on differences in the model when the management versions are different");  compareDifferentVersions=false;} @TO@ ThenBody:{  System.out.println("Reporting on differences in the model when the management versions are different");  compareDifferentVersions=true;} @AT@ 7271 @LENGTH@ 173
---UPD Block@@ElseBody:if (diff.equals("y")) {  System.out.println("Not reporting on differences in the model when the management versions are different");  compareDifferentVersions=true;} else {  throw new IllegalArgumentException("Please enter 'y' or 'n'");} @TO@ ElseBody:if (diff.equals("y")) {  System.out.println("Reporting on differences in the model when the management versions are different");  compareDifferentVersions=true;} else {  throw new IllegalArgumentException("Please enter 'y' or 'n'");} @AT@ 7450 @LENGTH@ 290
------UPD IfStatement@@if (diff.equals("y")) {  System.out.println("Not reporting on differences in the model when the management versions are different");  compareDifferentVersions=true;} else {  throw new IllegalArgumentException("Please enter 'y' or 'n'");} @TO@ if (diff.equals("y")) {  System.out.println("Reporting on differences in the model when the management versions are different");  compareDifferentVersions=true;} else {  throw new IllegalArgumentException("Please enter 'y' or 'n'");} @AT@ 7450 @LENGTH@ 290
---------MOV Block@@ThenBody:{  System.out.println("Reporting on differences in the model when the management versions are different");  compareDifferentVersions=false;} @TO@ IfStatement@@if (diff.equals("y")) {  System.out.println("Not reporting on differences in the model when the management versions are different");  compareDifferentVersions=true;} else {  throw new IllegalArgumentException("Please enter 'y' or 'n'");} @AT@ 7271 @LENGTH@ 173
------------MOV ExpressionStatement@@Assignment:compareDifferentVersions=true @TO@ Block@@ThenBody:{  System.out.println("Reporting on differences in the model when the management versions are different");  compareDifferentVersions=false;} @AT@ 7606 @LENGTH@ 32
---------UPD Block@@ThenBody:{  System.out.println("Not reporting on differences in the model when the management versions are different");  compareDifferentVersions=true;} @TO@ ThenBody:{  System.out.println("Not reporting on differences in the model when the management versions are different");  compareDifferentVersions=false;} @AT@ 7472 @LENGTH@ 176
---MOV Block@@ThenBody:{  System.out.println("Not reporting on differences in the model when the management versions are different");  compareDifferentVersions=true;} @TO@ IfStatement@@if (diff.equals("n")) {  System.out.println("Reporting on differences in the model when the management versions are different");  compareDifferentVersions=false;} else if (diff.equals("y")) {  System.out.println("Not reporting on differences in the model when the management versions are different");  compareDifferentVersions=true;} else {  throw new IllegalArgumentException("Please enter 'y' or 'n'");} @AT@ 7472 @LENGTH@ 176
------MOV ExpressionStatement@@Assignment:compareDifferentVersions=false @TO@ Block@@ThenBody:{  System.out.println("Not reporting on differences in the model when the management versions are different");  compareDifferentVersions=true;} @AT@ 7401 @LENGTH@ 33


INS ExpressionStatement@@MethodInvocation:context.attachIfAbsent(CompositeOperationHandler.DOMAIN_EXECUTION_KEY,Boolean.TRUE) @TO@ MethodDeclaration@@public, void, MethodName:execute, final OperationContext context, final ModelNode operation, OperationFailedException,  @AT@ 5884 @LENGTH@ 85
---INS MethodInvocation@@context.attachIfAbsent(CompositeOperationHandler.DOMAIN_EXECUTION_KEY,Boolean.TRUE) @TO@ ExpressionStatement@@MethodInvocation:context.attachIfAbsent(CompositeOperationHandler.DOMAIN_EXECUTION_KEY,Boolean.TRUE) @AT@ 5884 @LENGTH@ 84
------INS SimpleName@@Name:context @TO@ MethodInvocation@@context.attachIfAbsent(CompositeOperationHandler.DOMAIN_EXECUTION_KEY,Boolean.TRUE) @AT@ 5884 @LENGTH@ 7
------INS SimpleName@@MethodName:attachIfAbsent:[CompositeOperationHandler.DOMAIN_EXECUTION_KEY, Boolean.TRUE] @TO@ MethodInvocation@@context.attachIfAbsent(CompositeOperationHandler.DOMAIN_EXECUTION_KEY,Boolean.TRUE) @AT@ 5892 @LENGTH@ 76
---------INS QualifiedName@@CompositeOperationHandler.DOMAIN_EXECUTION_KEY @TO@ SimpleName@@MethodName:attachIfAbsent:[CompositeOperationHandler.DOMAIN_EXECUTION_KEY, Boolean.TRUE] @AT@ 5907 @LENGTH@ 46
------------INS SimpleName@@CompositeOperationHandler @TO@ QualifiedName@@CompositeOperationHandler.DOMAIN_EXECUTION_KEY @AT@ 5907 @LENGTH@ 25
------------INS SimpleName@@DOMAIN_EXECUTION_KEY @TO@ QualifiedName@@CompositeOperationHandler.DOMAIN_EXECUTION_KEY @AT@ 5933 @LENGTH@ 20
---------INS QualifiedName@@Boolean.TRUE @TO@ SimpleName@@MethodName:attachIfAbsent:[CompositeOperationHandler.DOMAIN_EXECUTION_KEY, Boolean.TRUE] @AT@ 5955 @LENGTH@ 12
------------INS SimpleName@@Boolean @TO@ QualifiedName@@Boolean.TRUE @AT@ 5955 @LENGTH@ 7
------------INS SimpleName@@TRUE @TO@ QualifiedName@@Boolean.TRUE @AT@ 5963 @LENGTH@ 4


UPD ExpressionStatement@@MethodInvocation:node.get("abc").set(BigInteger.valueOf(10)) @TO@ MethodInvocation:node.get("abc").set(new BigInteger(String.valueOf(Long.MAX_VALUE) + "0")) @AT@ 7735 @LENGTH@ 44
---UPD MethodInvocation@@node.get("abc").set(BigInteger.valueOf(10)) @TO@ node.get("abc").set(new BigInteger(String.valueOf(Long.MAX_VALUE) + "0")) @AT@ 7735 @LENGTH@ 43
------UPD SimpleName@@MethodName:set:[BigInteger.valueOf(10)] @TO@ MethodName:set:[new BigInteger(String.valueOf(Long.MAX_VALUE) + "0")] @AT@ 7751 @LENGTH@ 27
---------DEL MethodInvocation@@BigInteger.valueOf(10) @AT@ 7755 @LENGTH@ 22
---------INS ClassInstanceCreation@@BigInteger[String.valueOf(Long.MAX_VALUE) + "0"] @TO@ SimpleName@@MethodName:set:[BigInteger.valueOf(10)] @AT@ 8063 @LENGTH@ 52
------------INS New@@new @TO@ ClassInstanceCreation@@BigInteger[String.valueOf(Long.MAX_VALUE) + "0"] @AT@ 8063 @LENGTH@ 3
------------INS SimpleType@@BigInteger @TO@ ClassInstanceCreation@@BigInteger[String.valueOf(Long.MAX_VALUE) + "0"] @AT@ 8067 @LENGTH@ 10
------------INS InfixExpression@@String.valueOf(Long.MAX_VALUE) + "0" @TO@ ClassInstanceCreation@@BigInteger[String.valueOf(Long.MAX_VALUE) + "0"] @AT@ 8078 @LENGTH@ 36
---------------INS MethodInvocation@@String.valueOf(Long.MAX_VALUE) @TO@ InfixExpression@@String.valueOf(Long.MAX_VALUE) + "0" @AT@ 8078 @LENGTH@ 30
------------------MOV SimpleName@@Name:BigInteger @TO@ MethodInvocation@@String.valueOf(Long.MAX_VALUE) @AT@ 7755 @LENGTH@ 10
------------------MOV SimpleName@@MethodName:valueOf:[10] @TO@ MethodInvocation@@String.valueOf(Long.MAX_VALUE) @AT@ 7766 @LENGTH@ 11
---------------------DEL NumberLiteral@@10 @AT@ 7774 @LENGTH@ 2
---------------------INS QualifiedName@@Long.MAX_VALUE @TO@ SimpleName@@MethodName:valueOf:[10] @AT@ 8093 @LENGTH@ 14
------------------------INS SimpleName@@Long @TO@ QualifiedName@@Long.MAX_VALUE @AT@ 8093 @LENGTH@ 4
------------------------INS SimpleName@@MAX_VALUE @TO@ QualifiedName@@Long.MAX_VALUE @AT@ 8098 @LENGTH@ 9
---------------INS Operator@@+ @TO@ InfixExpression@@String.valueOf(Long.MAX_VALUE) + "0" @AT@ 8108 @LENGTH@ 1
---------------INS StringLiteral@@"0" @TO@ InfixExpression@@String.valueOf(Long.MAX_VALUE) + "0" @AT@ 8111 @LENGTH@ 3


UPD MethodDeclaration@@public, void, MethodName:testTransformers, Exception,  @TO@ public, void, MethodName:testOperationTransformers_1_1_0, Exception,  @AT@ 4216 @LENGTH@ 1128
---UPD SimpleName@@MethodName:testTransformers @TO@ MethodName:testOperationTransformers_1_1_0 @AT@ 4228 @LENGTH@ 16


UPD MethodDeclaration@@public, Cache<K,V>, K, V, MethodName:getCache, String cacheName, boolean start,  @TO@ public, Cache<K,V>, K, V, MethodName:getCache, String cacheName, boolean createIfAbsent,  @AT@ 4386 @LENGTH@ 373
---UPD SingleVariableDeclaration@@boolean start @TO@ boolean createIfAbsent @AT@ 4439 @LENGTH@ 13
------UPD SimpleName@@start @TO@ createIfAbsent @AT@ 4447 @LENGTH@ 5
---UPD IfStatement@@if (start) {  return this.getCache(cacheName);} @TO@ if (createIfAbsent) {  return this.getCache(cacheName);} @AT@ 4522 @LENGTH@ 67
------UPD SimpleName@@start @TO@ createIfAbsent @AT@ 4526 @LENGTH@ 5


UPD IfStatement@@if (projectHelper != null) {  projectHelper.attachArtifact(this.project,"properties","camelComponent",outFile);} @TO@ if (projectHelper != null) {  List<String> includes=new ArrayList<String>();  includes.add("**/component.properties");  projectHelper.addResource(this.project,outDir.getPath(),includes,new ArrayList<String>());  projectHelper.attachArtifact(this.project,"properties","camelComponent",outFile);} @AT@ 3849 @LENGTH@ 160
---UPD Block@@ThenBody:{  projectHelper.attachArtifact(this.project,"properties","camelComponent",outFile);} @TO@ ThenBody:{  List<String> includes=new ArrayList<String>();  includes.add("**/component.properties");  projectHelper.addResource(this.project,outDir.getPath(),includes,new ArrayList<String>());  projectHelper.attachArtifact(this.project,"properties","camelComponent",outFile);} @AT@ 3876 @LENGTH@ 133
------INS VariableDeclarationStatement@@List<String> includes=new ArrayList<String>(); @TO@ Block@@ThenBody:{  projectHelper.attachArtifact(this.project,"properties","camelComponent",outFile);} @AT@ 3953 @LENGTH@ 48
---------INS ParameterizedType@@List<String> @TO@ VariableDeclarationStatement@@List<String> includes=new ArrayList<String>(); @AT@ 3953 @LENGTH@ 12
------------INS SimpleType@@List @TO@ ParameterizedType@@List<String> @AT@ 3953 @LENGTH@ 4
------------INS SimpleType@@String @TO@ ParameterizedType@@List<String> @AT@ 3958 @LENGTH@ 6
---------INS VariableDeclarationFragment@@includes=new ArrayList<String>() @TO@ VariableDeclarationStatement@@List<String> includes=new ArrayList<String>(); @AT@ 3966 @LENGTH@ 34
------------INS SimpleName@@includes @TO@ VariableDeclarationFragment@@includes=new ArrayList<String>() @AT@ 3966 @LENGTH@ 8
------------INS ClassInstanceCreation@@ArrayList<String>[] @TO@ VariableDeclarationFragment@@includes=new ArrayList<String>() @AT@ 3977 @LENGTH@ 23
---------------INS New@@new @TO@ ClassInstanceCreation@@ArrayList<String>[] @AT@ 3977 @LENGTH@ 3
---------------INS ParameterizedType@@ArrayList<String> @TO@ ClassInstanceCreation@@ArrayList<String>[] @AT@ 3981 @LENGTH@ 17
------------------INS SimpleType@@ArrayList @TO@ ParameterizedType@@ArrayList<String> @AT@ 3981 @LENGTH@ 9
------------------INS SimpleType@@String @TO@ ParameterizedType@@ArrayList<String> @AT@ 3991 @LENGTH@ 6
------INS ExpressionStatement@@MethodInvocation:includes.add("**/component.properties") @TO@ Block@@ThenBody:{  projectHelper.attachArtifact(this.project,"properties","camelComponent",outFile);} @AT@ 4026 @LENGTH@ 40
---------INS MethodInvocation@@includes.add("**/component.properties") @TO@ ExpressionStatement@@MethodInvocation:includes.add("**/component.properties") @AT@ 4026 @LENGTH@ 39
------------INS SimpleName@@Name:includes @TO@ MethodInvocation@@includes.add("**/component.properties") @AT@ 4026 @LENGTH@ 8
------------INS SimpleName@@MethodName:add:["**/component.properties"] @TO@ MethodInvocation@@includes.add("**/component.properties") @AT@ 4035 @LENGTH@ 30
---------------INS StringLiteral@@"**/component.properties" @TO@ SimpleName@@MethodName:add:["**/component.properties"] @AT@ 4039 @LENGTH@ 25
------INS ExpressionStatement@@MethodInvocation:projectHelper.addResource(this.project,outDir.getPath(),includes,new ArrayList<String>()) @TO@ Block@@ThenBody:{  projectHelper.attachArtifact(this.project,"properties","camelComponent",outFile);} @AT@ 4091 @LENGTH@ 93
---------INS MethodInvocation@@projectHelper.addResource(this.project,outDir.getPath(),includes,new ArrayList<String>()) @TO@ ExpressionStatement@@MethodInvocation:projectHelper.addResource(this.project,outDir.getPath(),includes,new ArrayList<String>()) @AT@ 4091 @LENGTH@ 92
------------INS SimpleName@@Name:projectHelper @TO@ MethodInvocation@@projectHelper.addResource(this.project,outDir.getPath(),includes,new ArrayList<String>()) @AT@ 4091 @LENGTH@ 13
------------INS SimpleName@@MethodName:addResource:[this.project, outDir.getPath(), includes, new ArrayList<String>()] @TO@ MethodInvocation@@projectHelper.addResource(this.project,outDir.getPath(),includes,new ArrayList<String>()) @AT@ 4105 @LENGTH@ 78
---------------INS FieldAccess@@this.project @TO@ SimpleName@@MethodName:addResource:[this.project, outDir.getPath(), includes, new ArrayList<String>()] @AT@ 4117 @LENGTH@ 12
------------------INS ThisExpression@@this @TO@ FieldAccess@@this.project @AT@ 4117 @LENGTH@ 4
------------------INS SimpleName@@project @TO@ FieldAccess@@this.project @AT@ 4122 @LENGTH@ 7
---------------INS MethodInvocation@@outDir.getPath() @TO@ SimpleName@@MethodName:addResource:[this.project, outDir.getPath(), includes, new ArrayList<String>()] @AT@ 4131 @LENGTH@ 16
------------------INS SimpleName@@Name:outDir @TO@ MethodInvocation@@outDir.getPath() @AT@ 4131 @LENGTH@ 6
------------------INS SimpleName@@MethodName:getPath:[] @TO@ MethodInvocation@@outDir.getPath() @AT@ 4138 @LENGTH@ 9
---------------INS SimpleName@@includes @TO@ SimpleName@@MethodName:addResource:[this.project, outDir.getPath(), includes, new ArrayList<String>()] @AT@ 4149 @LENGTH@ 8
---------------INS ClassInstanceCreation@@ArrayList<String>[] @TO@ SimpleName@@MethodName:addResource:[this.project, outDir.getPath(), includes, new ArrayList<String>()] @AT@ 4159 @LENGTH@ 23
------------------INS New@@new @TO@ ClassInstanceCreation@@ArrayList<String>[] @AT@ 4159 @LENGTH@ 3
------------------INS ParameterizedType@@ArrayList<String> @TO@ ClassInstanceCreation@@ArrayList<String>[] @AT@ 4163 @LENGTH@ 17
---------------------INS SimpleType@@ArrayList @TO@ ParameterizedType@@ArrayList<String> @AT@ 4163 @LENGTH@ 9
---------------------INS SimpleType@@String @TO@ ParameterizedType@@ArrayList<String> @AT@ 4173 @LENGTH@ 6


UPD MethodDeclaration@@public, XMLContext, MethodName:getXmlContext, ClassResolver resolver, ClassLoader contetClassLoader, Exception,  @TO@ public, XMLContext, MethodName:getXmlContext, ClassResolver resolver, ClassLoader contextClassLoader, Exception,  @AT@ 2710 @LENGTH@ 1014
---UPD SingleVariableDeclaration@@ClassLoader contetClassLoader @TO@ ClassLoader contextClassLoader @AT@ 2766 @LENGTH@ 29
------UPD SimpleName@@contetClassLoader @TO@ contextClassLoader @AT@ 2778 @LENGTH@ 17
---UPD IfStatement@@if (xmlContext == null) {  xmlContext=new XMLContext();  if (ObjectHelper.isNotEmpty(getMappingFile())) {    Mapping xmlMap;    if (contetClassLoader != null) {      xmlMap=new Mapping(contetClassLoader);    } else {      xmlMap=new Mapping();    }    xmlMap.loadMapping(resolver.loadResourceAsURL(getMappingFile()));    xmlContext.addMapping(xmlMap);  }  if (getPackages() != null) {    xmlContext.addPackages(getPackages());  }  if (getClassNames() != null) {    for (    String name : getClassNames()) {      Class<?> clazz=resolver.resolveClass(name);      xmlContext.addClass(clazz);    }  }} @TO@ if (xmlContext == null) {  xmlContext=new XMLContext();  if (ObjectHelper.isNotEmpty(getMappingFile())) {    Mapping xmlMap;    if (contextClassLoader != null) {      xmlMap=new Mapping(contextClassLoader);    } else {      xmlMap=new Mapping();    }    xmlMap.loadMapping(resolver.loadResourceAsURL(getMappingFile()));    xmlContext.addMapping(xmlMap);  }  if (getPackages() != null) {    xmlContext.addPackages(getPackages());  }  if (getClassNames() != null) {    for (    String name : getClassNames()) {      Class<?> clazz=resolver.resolveClass(name);      xmlContext.addClass(clazz);    }  }} @AT@ 2824 @LENGTH@ 866
------UPD Block@@ThenBody:{  xmlContext=new XMLContext();  if (ObjectHelper.isNotEmpty(getMappingFile())) {    Mapping xmlMap;    if (contetClassLoader != null) {      xmlMap=new Mapping(contetClassLoader);    } else {      xmlMap=new Mapping();    }    xmlMap.loadMapping(resolver.loadResourceAsURL(getMappingFile()));    xmlContext.addMapping(xmlMap);  }  if (getPackages() != null) {    xmlContext.addPackages(getPackages());  }  if (getClassNames() != null) {    for (    String name : getClassNames()) {      Class<?> clazz=resolver.resolveClass(name);      xmlContext.addClass(clazz);    }  }} @TO@ ThenBody:{  xmlContext=new XMLContext();  if (ObjectHelper.isNotEmpty(getMappingFile())) {    Mapping xmlMap;    if (contextClassLoader != null) {      xmlMap=new Mapping(contextClassLoader);    } else {      xmlMap=new Mapping();    }    xmlMap.loadMapping(resolver.loadResourceAsURL(getMappingFile()));    xmlContext.addMapping(xmlMap);  }  if (getPackages() != null) {    xmlContext.addPackages(getPackages());  }  if (getClassNames() != null) {    for (    String name : getClassNames()) {      Class<?> clazz=resolver.resolveClass(name);      xmlContext.addClass(clazz);    }  }} @AT@ 2848 @LENGTH@ 842
---------UPD IfStatement@@if (ObjectHelper.isNotEmpty(getMappingFile())) {  Mapping xmlMap;  if (contetClassLoader != null) {    xmlMap=new Mapping(contetClassLoader);  } else {    xmlMap=new Mapping();  }  xmlMap.loadMapping(resolver.loadResourceAsURL(getMappingFile()));  xmlContext.addMapping(xmlMap);} @TO@ if (ObjectHelper.isNotEmpty(getMappingFile())) {  Mapping xmlMap;  if (contextClassLoader != null) {    xmlMap=new Mapping(contextClassLoader);  } else {    xmlMap=new Mapping();  }  xmlMap.loadMapping(resolver.loadResourceAsURL(getMappingFile()));  xmlContext.addMapping(xmlMap);} @AT@ 2906 @LENGTH@ 420
------------UPD Block@@ThenBody:{  Mapping xmlMap;  if (contetClassLoader != null) {    xmlMap=new Mapping(contetClassLoader);  } else {    xmlMap=new Mapping();  }  xmlMap.loadMapping(resolver.loadResourceAsURL(getMappingFile()));  xmlContext.addMapping(xmlMap);} @TO@ ThenBody:{  Mapping xmlMap;  if (contextClassLoader != null) {    xmlMap=new Mapping(contextClassLoader);  } else {    xmlMap=new Mapping();  }  xmlMap.loadMapping(resolver.loadResourceAsURL(getMappingFile()));  xmlContext.addMapping(xmlMap);} @AT@ 2953 @LENGTH@ 373
---------------UPD IfStatement@@if (contetClassLoader != null) {  xmlMap=new Mapping(contetClassLoader);} else {  xmlMap=new Mapping();} @TO@ if (contextClassLoader != null) {  xmlMap=new Mapping(contextClassLoader);} else {  xmlMap=new Mapping();} @AT@ 3003 @LENGTH@ 180
------------------UPD InfixExpression@@contetClassLoader != null @TO@ contextClassLoader != null @AT@ 3007 @LENGTH@ 25
---------------------UPD SimpleName@@contetClassLoader @TO@ contextClassLoader @AT@ 3007 @LENGTH@ 17
------------------UPD Block@@ThenBody:{  xmlMap=new Mapping(contetClassLoader);} @TO@ ThenBody:{  xmlMap=new Mapping(contextClassLoader);} @AT@ 3034 @LENGTH@ 80
---------------------UPD ExpressionStatement@@Assignment:xmlMap=new Mapping(contetClassLoader) @TO@ Assignment:xmlMap=new Mapping(contextClassLoader) @AT@ 3056 @LENGTH@ 40
------------------------UPD Assignment@@xmlMap=new Mapping(contetClassLoader) @TO@ xmlMap=new Mapping(contextClassLoader) @AT@ 3056 @LENGTH@ 39
---------------------------UPD ClassInstanceCreation@@Mapping[contetClassLoader] @TO@ Mapping[contextClassLoader] @AT@ 3065 @LENGTH@ 30
------------------------------UPD SimpleName@@contetClassLoader @TO@ contextClassLoader @AT@ 3077 @LENGTH@ 17


UPD MethodDeclaration@@public, void, MethodName:testReloadDefinitioinFileDefaultBuilder, ConfigurationException, IOException, InterruptedException,  @TO@ public, void, MethodName:testReloadDefinitionFileDefaultBuilder, ConfigurationException, IOException, InterruptedException,  @AT@ 12692 @LENGTH@ 389
---UPD SimpleName@@MethodName:testReloadDefinitioinFileDefaultBuilder @TO@ MethodName:testReloadDefinitionFileDefaultBuilder @AT@ 12704 @LENGTH@ 39


INS MethodDeclaration@@public, void, MethodName:doesNotMapIdIfNoEntityMetadataAvailable,  @TO@ TypeDeclaration@@[@RunWith(MockitoJUnitRunner.class), public]QueryMapperUnitTests,  @AT@ 11046 @LENGTH@ 374
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:doesNotMapIdIfNoEntityMetadataAvailable,  @AT@ 11046 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:doesNotMapIdIfNoEntityMetadataAvailable,  @AT@ 11053 @LENGTH@ 4
---INS SimpleName@@MethodName:doesNotMapIdIfNoEntityMetadataAvailable @TO@ MethodDeclaration@@public, void, MethodName:doesNotMapIdIfNoEntityMetadataAvailable,  @AT@ 11058 @LENGTH@ 39
---INS VariableDeclarationStatement@@String id=new ObjectId().toString(); @TO@ MethodDeclaration@@public, void, MethodName:doesNotMapIdIfNoEntityMetadataAvailable,  @AT@ 11105 @LENGTH@ 38
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String id=new ObjectId().toString(); @AT@ 11105 @LENGTH@ 6
------INS VariableDeclarationFragment@@id=new ObjectId().toString() @TO@ VariableDeclarationStatement@@String id=new ObjectId().toString(); @AT@ 11112 @LENGTH@ 30
---------INS SimpleName@@id @TO@ VariableDeclarationFragment@@id=new ObjectId().toString() @AT@ 11112 @LENGTH@ 2
---------INS MethodInvocation@@new ObjectId().toString() @TO@ VariableDeclarationFragment@@id=new ObjectId().toString() @AT@ 11117 @LENGTH@ 25
------------INS ClassInstanceCreation@@ObjectId[] @TO@ MethodInvocation@@new ObjectId().toString() @AT@ 11117 @LENGTH@ 14
---------------INS New@@new @TO@ ClassInstanceCreation@@ObjectId[] @AT@ 11117 @LENGTH@ 3
---------------INS SimpleType@@ObjectId @TO@ ClassInstanceCreation@@ObjectId[] @AT@ 11121 @LENGTH@ 8
------------INS SimpleName@@MethodName:toString:[] @TO@ MethodInvocation@@new ObjectId().toString() @AT@ 11132 @LENGTH@ 10
---INS VariableDeclarationStatement@@Query query=query(where("id").is(id)); @TO@ MethodDeclaration@@public, void, MethodName:doesNotMapIdIfNoEntityMetadataAvailable,  @AT@ 11146 @LENGTH@ 40
------INS SimpleType@@Query @TO@ VariableDeclarationStatement@@Query query=query(where("id").is(id)); @AT@ 11146 @LENGTH@ 5
------INS VariableDeclarationFragment@@query=query(where("id").is(id)) @TO@ VariableDeclarationStatement@@Query query=query(where("id").is(id)); @AT@ 11152 @LENGTH@ 33
---------INS SimpleName@@query @TO@ VariableDeclarationFragment@@query=query(where("id").is(id)) @AT@ 11152 @LENGTH@ 5
---------INS MethodInvocation@@query(where("id").is(id)) @TO@ VariableDeclarationFragment@@query=query(where("id").is(id)) @AT@ 11160 @LENGTH@ 25
------------INS SimpleName@@MethodName:query:[where("id").is(id)] @TO@ MethodInvocation@@query(where("id").is(id)) @AT@ 11160 @LENGTH@ 25
---------------INS MethodInvocation@@where("id").is(id) @TO@ SimpleName@@MethodName:query:[where("id").is(id)] @AT@ 11166 @LENGTH@ 18
------------------INS MethodInvocation@@MethodName:where:["id"] @TO@ MethodInvocation@@where("id").is(id) @AT@ 11166 @LENGTH@ 11
---------------------INS StringLiteral@@"id" @TO@ MethodInvocation@@MethodName:where:["id"] @AT@ 11172 @LENGTH@ 4
------------------INS SimpleName@@MethodName:is:[id] @TO@ MethodInvocation@@where("id").is(id) @AT@ 11178 @LENGTH@ 6
---------------------INS SimpleName@@id @TO@ SimpleName@@MethodName:is:[id] @AT@ 11181 @LENGTH@ 2
---INS VariableDeclarationStatement@@DBObject object=mapper.getMappedObject(query.getQueryObject(),null); @TO@ MethodDeclaration@@public, void, MethodName:doesNotMapIdIfNoEntityMetadataAvailable,  @AT@ 11190 @LENGTH@ 71
------INS SimpleType@@DBObject @TO@ VariableDeclarationStatement@@DBObject object=mapper.getMappedObject(query.getQueryObject(),null); @AT@ 11190 @LENGTH@ 8
------INS VariableDeclarationFragment@@object=mapper.getMappedObject(query.getQueryObject(),null) @TO@ VariableDeclarationStatement@@DBObject object=mapper.getMappedObject(query.getQueryObject(),null); @AT@ 11199 @LENGTH@ 61
---------INS SimpleName@@object @TO@ VariableDeclarationFragment@@object=mapper.getMappedObject(query.getQueryObject(),null) @AT@ 11199 @LENGTH@ 6
---------INS MethodInvocation@@mapper.getMappedObject(query.getQueryObject(),null) @TO@ VariableDeclarationFragment@@object=mapper.getMappedObject(query.getQueryObject(),null) @AT@ 11208 @LENGTH@ 52
------------INS SimpleName@@Name:mapper @TO@ MethodInvocation@@mapper.getMappedObject(query.getQueryObject(),null) @AT@ 11208 @LENGTH@ 6
------------INS SimpleName@@MethodName:getMappedObject:[query.getQueryObject(), null] @TO@ MethodInvocation@@mapper.getMappedObject(query.getQueryObject(),null) @AT@ 11215 @LENGTH@ 45
---------------INS MethodInvocation@@query.getQueryObject() @TO@ SimpleName@@MethodName:getMappedObject:[query.getQueryObject(), null] @AT@ 11231 @LENGTH@ 22
------------------INS SimpleName@@Name:query @TO@ MethodInvocation@@query.getQueryObject() @AT@ 11231 @LENGTH@ 5
------------------INS SimpleName@@MethodName:getQueryObject:[] @TO@ MethodInvocation@@query.getQueryObject() @AT@ 11237 @LENGTH@ 16
---------------INS NullLiteral@@null @TO@ SimpleName@@MethodName:getMappedObject:[query.getQueryObject(), null] @AT@ 11255 @LENGTH@ 4
---INS ExpressionStatement@@MethodInvocation:assertThat(object.containsField("id"),is(true)) @TO@ MethodDeclaration@@public, void, MethodName:doesNotMapIdIfNoEntityMetadataAvailable,  @AT@ 11265 @LENGTH@ 49
------INS MethodInvocation@@assertThat(object.containsField("id"),is(true)) @TO@ ExpressionStatement@@MethodInvocation:assertThat(object.containsField("id"),is(true)) @AT@ 11265 @LENGTH@ 48
---------INS SimpleName@@MethodName:assertThat:[object.containsField("id"), is(true)] @TO@ MethodInvocation@@assertThat(object.containsField("id"),is(true)) @AT@ 11265 @LENGTH@ 48
------------INS MethodInvocation@@object.containsField("id") @TO@ SimpleName@@MethodName:assertThat:[object.containsField("id"), is(true)] @AT@ 11276 @LENGTH@ 26
---------------INS SimpleName@@Name:object @TO@ MethodInvocation@@object.containsField("id") @AT@ 11276 @LENGTH@ 6
---------------INS SimpleName@@MethodName:containsField:["id"] @TO@ MethodInvocation@@object.containsField("id") @AT@ 11283 @LENGTH@ 19
------------------INS StringLiteral@@"id" @TO@ SimpleName@@MethodName:containsField:["id"] @AT@ 11297 @LENGTH@ 4
------------INS MethodInvocation@@is(true) @TO@ SimpleName@@MethodName:assertThat:[object.containsField("id"), is(true)] @AT@ 11304 @LENGTH@ 8
---------------INS SimpleName@@MethodName:is:[true] @TO@ MethodInvocation@@is(true) @AT@ 11304 @LENGTH@ 8
------------------INS BooleanLiteral@@true @TO@ SimpleName@@MethodName:is:[true] @AT@ 11307 @LENGTH@ 4
---------------INS SimpleName@@MethodName:is:[true] @TO@ MethodInvocation@@is(true) @AT@ 11304 @LENGTH@ 8
------------------INS BooleanLiteral@@true @TO@ SimpleName@@MethodName:is:[true] @AT@ 11307 @LENGTH@ 4
---INS ExpressionStatement@@MethodInvocation:assertThat(object.get("id"),is((Object)id)) @TO@ MethodDeclaration@@public, void, MethodName:doesNotMapIdIfNoEntityMetadataAvailable,  @AT@ 11317 @LENGTH@ 46
------INS MethodInvocation@@assertThat(object.get("id"),is((Object)id)) @TO@ ExpressionStatement@@MethodInvocation:assertThat(object.get("id"),is((Object)id)) @AT@ 11317 @LENGTH@ 45
---------INS SimpleName@@MethodName:assertThat:[object.get("id"), is((Object)id)] @TO@ MethodInvocation@@assertThat(object.get("id"),is((Object)id)) @AT@ 11317 @LENGTH@ 45
------------INS MethodInvocation@@object.get("id") @TO@ SimpleName@@MethodName:assertThat:[object.get("id"), is((Object)id)] @AT@ 11328 @LENGTH@ 16
---------------INS SimpleName@@Name:object @TO@ MethodInvocation@@object.get("id") @AT@ 11328 @LENGTH@ 6
---------------INS SimpleName@@MethodName:get:["id"] @TO@ MethodInvocation@@object.get("id") @AT@ 11335 @LENGTH@ 9
------------------INS StringLiteral@@"id" @TO@ SimpleName@@MethodName:get:["id"] @AT@ 11339 @LENGTH@ 4
------------INS MethodInvocation@@is((Object)id) @TO@ SimpleName@@MethodName:assertThat:[object.get("id"), is((Object)id)] @AT@ 11346 @LENGTH@ 15
---------------INS SimpleName@@MethodName:is:[(Object)id] @TO@ MethodInvocation@@is((Object)id) @AT@ 11346 @LENGTH@ 15
------------------INS CastExpression@@(Object)id @TO@ SimpleName@@MethodName:is:[(Object)id] @AT@ 11349 @LENGTH@ 11
---------------------INS SimpleType@@Object @TO@ CastExpression@@(Object)id @AT@ 11350 @LENGTH@ 6
---------------------INS SimpleName@@id @TO@ CastExpression@@(Object)id @AT@ 11358 @LENGTH@ 2
---------------INS SimpleName@@MethodName:is:[(Object)id] @TO@ MethodInvocation@@is((Object)id) @AT@ 11346 @LENGTH@ 15
------------------INS CastExpression@@(Object)id @TO@ SimpleName@@MethodName:is:[(Object)id] @AT@ 11349 @LENGTH@ 11
---------------------INS SimpleType@@Object @TO@ CastExpression@@(Object)id @AT@ 11350 @LENGTH@ 6
---------------------INS SimpleName@@id @TO@ CastExpression@@(Object)id @AT@ 11358 @LENGTH@ 2
---INS ExpressionStatement@@MethodInvocation:assertThat(object.containsField("_id"),is(false)) @TO@ MethodDeclaration@@public, void, MethodName:doesNotMapIdIfNoEntityMetadataAvailable,  @AT@ 11366 @LENGTH@ 51
------INS MethodInvocation@@assertThat(object.containsField("_id"),is(false)) @TO@ ExpressionStatement@@MethodInvocation:assertThat(object.containsField("_id"),is(false)) @AT@ 11366 @LENGTH@ 50
---------INS SimpleName@@MethodName:assertThat:[object.containsField("_id"), is(false)] @TO@ MethodInvocation@@assertThat(object.containsField("_id"),is(false)) @AT@ 11366 @LENGTH@ 50
------------INS MethodInvocation@@object.containsField("_id") @TO@ SimpleName@@MethodName:assertThat:[object.containsField("_id"), is(false)] @AT@ 11377 @LENGTH@ 27
---------------INS SimpleName@@Name:object @TO@ MethodInvocation@@object.containsField("_id") @AT@ 11377 @LENGTH@ 6
---------------INS SimpleName@@MethodName:containsField:["_id"] @TO@ MethodInvocation@@object.containsField("_id") @AT@ 11384 @LENGTH@ 20
------------------INS StringLiteral@@"_id" @TO@ SimpleName@@MethodName:containsField:["_id"] @AT@ 11398 @LENGTH@ 5
------------INS MethodInvocation@@is(false) @TO@ SimpleName@@MethodName:assertThat:[object.containsField("_id"), is(false)] @AT@ 11406 @LENGTH@ 9
---------------INS SimpleName@@MethodName:is:[false] @TO@ MethodInvocation@@is(false) @AT@ 11406 @LENGTH@ 9
------------------INS BooleanLiteral@@false @TO@ SimpleName@@MethodName:is:[false] @AT@ 11409 @LENGTH@ 5


UPD ExpressionStatement@@MethodInvocation:LOGGER.warn("Failed to load users from etc/users.proprties. No users will be imported.",e) @TO@ MethodInvocation:LOGGER.warn("Failed to load users from etc/users.properties. No users will be imported.",e) @AT@ 4369 @LENGTH@ 92
---UPD MethodInvocation@@LOGGER.warn("Failed to load users from etc/users.proprties. No users will be imported.",e) @TO@ LOGGER.warn("Failed to load users from etc/users.properties. No users will be imported.",e) @AT@ 4369 @LENGTH@ 91
------UPD SimpleName@@MethodName:warn:["Failed to load users from etc/users.proprties. No users will be imported.", e] @TO@ MethodName:warn:["Failed to load users from etc/users.properties. No users will be imported.", e] @AT@ 4376 @LENGTH@ 84
---------UPD StringLiteral@@"Failed to load users from etc/users.proprties. No users will be imported." @TO@ "Failed to load users from etc/users.properties. No users will be imported." @AT@ 4381 @LENGTH@ 75


INS MethodDeclaration@@public, TransformersSubRegistration, MethodName:registerSubResource, PathElement element, CombinedTransformer transformer,  @TO@ TypeDeclaration@@[public, static]TransformersSubRegistrationImpl, [TransformersSubRegistration] @AT@ 12801 @LENGTH@ 240
---INS Modifier@@public @TO@ MethodDeclaration@@public, TransformersSubRegistration, MethodName:registerSubResource, PathElement element, CombinedTransformer transformer,  @AT@ 12801 @LENGTH@ 6
---INS SimpleType@@TransformersSubRegistration @TO@ MethodDeclaration@@public, TransformersSubRegistration, MethodName:registerSubResource, PathElement element, CombinedTransformer transformer,  @AT@ 12808 @LENGTH@ 27
---INS SimpleName@@MethodName:registerSubResource @TO@ MethodDeclaration@@public, TransformersSubRegistration, MethodName:registerSubResource, PathElement element, CombinedTransformer transformer,  @AT@ 12836 @LENGTH@ 19
---INS SingleVariableDeclaration@@PathElement element @TO@ MethodDeclaration@@public, TransformersSubRegistration, MethodName:registerSubResource, PathElement element, CombinedTransformer transformer,  @AT@ 12856 @LENGTH@ 19
------INS SimpleType@@PathElement @TO@ SingleVariableDeclaration@@PathElement element @AT@ 12856 @LENGTH@ 11
------INS SimpleName@@element @TO@ SingleVariableDeclaration@@PathElement element @AT@ 12868 @LENGTH@ 7
---INS SingleVariableDeclaration@@CombinedTransformer transformer @TO@ MethodDeclaration@@public, TransformersSubRegistration, MethodName:registerSubResource, PathElement element, CombinedTransformer transformer,  @AT@ 12877 @LENGTH@ 31
------INS SimpleType@@CombinedTransformer @TO@ SingleVariableDeclaration@@CombinedTransformer transformer @AT@ 12877 @LENGTH@ 19
------INS SimpleName@@transformer @TO@ SingleVariableDeclaration@@CombinedTransformer transformer @AT@ 12897 @LENGTH@ 11
---INS ReturnStatement@@MethodInvocation:registerSubResource(element,(ResourceTransformer)transformer,(OperationTransformer)transformer) @TO@ MethodDeclaration@@public, TransformersSubRegistration, MethodName:registerSubResource, PathElement element, CombinedTransformer transformer,  @AT@ 12924 @LENGTH@ 107
------INS MethodInvocation@@registerSubResource(element,(ResourceTransformer)transformer,(OperationTransformer)transformer) @TO@ ReturnStatement@@MethodInvocation:registerSubResource(element,(ResourceTransformer)transformer,(OperationTransformer)transformer) @AT@ 12931 @LENGTH@ 99
---------INS SimpleName@@MethodName:registerSubResource:[element, (ResourceTransformer)transformer, (OperationTransformer)transformer] @TO@ MethodInvocation@@registerSubResource(element,(ResourceTransformer)transformer,(OperationTransformer)transformer) @AT@ 12931 @LENGTH@ 99
------------INS SimpleName@@element @TO@ SimpleName@@MethodName:registerSubResource:[element, (ResourceTransformer)transformer, (OperationTransformer)transformer] @AT@ 12951 @LENGTH@ 7
------------INS CastExpression@@(ResourceTransformer)transformer @TO@ SimpleName@@MethodName:registerSubResource:[element, (ResourceTransformer)transformer, (OperationTransformer)transformer] @AT@ 12960 @LENGTH@ 33
---------------INS SimpleType@@ResourceTransformer @TO@ CastExpression@@(ResourceTransformer)transformer @AT@ 12961 @LENGTH@ 19
---------------INS SimpleName@@transformer @TO@ CastExpression@@(ResourceTransformer)transformer @AT@ 12982 @LENGTH@ 11
------------INS CastExpression@@(OperationTransformer)transformer @TO@ SimpleName@@MethodName:registerSubResource:[element, (ResourceTransformer)transformer, (OperationTransformer)transformer] @AT@ 12995 @LENGTH@ 34
---------------INS SimpleType@@OperationTransformer @TO@ CastExpression@@(OperationTransformer)transformer @AT@ 12996 @LENGTH@ 20
---------------INS SimpleName@@transformer @TO@ CastExpression@@(OperationTransformer)transformer @AT@ 13018 @LENGTH@ 11


UPD MethodDeclaration@@private, boolean, MethodName:exists, String key, long timeout,  @TO@ protected, boolean, MethodName:exists, String key, long timeout,  @AT@ 37828 @LENGTH@ 357
---UPD Modifier@@private @TO@ protected @AT@ 37828 @LENGTH@ 7


UPD ExpressionStatement@@MethodInvocation:ModelTestUtils.checkFailedTransformedBootOperations(mainServices,modelVersion,ops,new FailedOperationTransformationConfig().addFailedAttribute(createRootLoggerAddress(),new RejectExpressionsConfig(RootLoggerResourceDefinition.EXPRESSION_ATTRIBUTES)).addFailedAttribute(SUBSYSTEM_ADDRESS.append(LoggerResourceDefinition.LOGGER_PATH),new RejectExpressionsConfig(LoggerResourceDefinition.EXPRESSION_ATTRIBUTES)).addFailedAttribute(SUBSYSTEM_ADDRESS.append(AsyncHandlerResourceDefinition.ASYNC_HANDLER_PATH),new RejectExpressionsConfig(AsyncHandlerResourceDefinition.ATTRIBUTES)).addFailedAttribute(SUBSYSTEM_ADDRESS.append(ConsoleHandlerResourceDefinition.CONSOLE_HANDLER_PATH),new RejectExpressionsConfig(ConsoleHandlerResourceDefinition.ATTRIBUTES)).addFailedAttribute(SUBSYSTEM_ADDRESS.append(FileHandlerResourceDefinition.FILE_HANDLER_PATH),new RejectExpressionsConfig(FileHandlerResourceDefinition.ATTRIBUTES)).addFailedAttribute(SUBSYSTEM_ADDRESS.append(PeriodicHandlerResourceDefinition.PERIODIC_HANDLER_PATH),new RejectExpressionsConfig(PeriodicHandlerResourceDefinition.ATTRIBUTES)).addFailedAttribute(SUBSYSTEM_ADDRESS.append(SizeRotatingHandlerResourceDefinition.SIZE_ROTATING_HANDLER_PATH),new RejectExpressionsConfig(SizeRotatingHandlerResourceDefinition.ATTRIBUTES)).addFailedAttribute(SUBSYSTEM_ADDRESS.append(CustomHandlerResourceDefinition.CUSTOM_HANDLE_PATH),new RejectExpressionsConfig(CustomHandlerResourceDefinition.WRITABLE_ATTRIBUTES)).addFailedAttribute(SUBSYSTEM_ADDRESS.append(SyslogHandlerResourceDefinition.SYSLOG_HANDLER_PATH),FailedOperationTransformationConfig.DISCARDED_RESOURCE).addFailedAttribute(SUBSYSTEM_ADDRESS.append(CommonAttributes.LOGGING_PROFILE),FailedOperationTransformationConfig.REJECTED_RESOURCE).addFailedAttribute(SUBSYSTEM_ADDRESS.append(CommonAttributes.LOGGING_PROFILE).append(ConsoleHandlerResourceDefinition.CONSOLE_HANDLER_PATH),FailedOperationTransformationConfig.REJECTED_RESOURCE).addFailedAttribute(SUBSYSTEM_ADDRESS.append(CommonAttributes.LOGGING_PROFILE).append(RootLoggerResourceDefinition.ROOT_LOGGER_PATH),FailedOperationTransformationConfig.REJECTED_RESOURCE).addFailedAttribute(SUBSYSTEM_ADDRESS.append(CommonAttributes.LOGGING_PROFILE).append(LoggerResourceDefinition.LOGGER_PATH),FailedOperationTransformationConfig.REJECTED_RESOURCE).addFailedAttribute(SUBSYSTEM_ADDRESS.append(CommonAttributes.LOGGING_PROFILE).append(SyslogHandlerResourceDefinition.SYSLOG_HANDLER_PATH),FailedOperationTransformationConfig.REJECTED_RESOURCE)) @TO@ MethodInvocation:ModelTestUtils.checkFailedTransformedBootOperations(mainServices,modelVersion,ops,new FailedOperationTransformationConfig().addFailedAttribute(createRootLoggerAddress(),new RejectExpressionsConfig(RootLoggerResourceDefinition.EXPRESSION_ATTRIBUTES)).addFailedAttribute(SUBSYSTEM_ADDRESS.append(LoggerResourceDefinition.LOGGER_PATH),new RejectExpressionsConfig(LoggerResourceDefinition.EXPRESSION_ATTRIBUTES)).addFailedAttribute(SUBSYSTEM_ADDRESS.append(AsyncHandlerResourceDefinition.ASYNC_HANDLER_PATH),new RejectExpressionsConfig(AsyncHandlerResourceDefinition.ATTRIBUTES)).addFailedAttribute(SUBSYSTEM_ADDRESS.append(ConsoleHandlerResourceDefinition.CONSOLE_HANDLER_PATH),new RejectExpressionsConfig(ConsoleHandlerResourceDefinition.ATTRIBUTES)).addFailedAttribute(SUBSYSTEM_ADDRESS.append(FileHandlerResourceDefinition.FILE_HANDLER_PATH),new RejectExpressionsConfig(FileHandlerResourceDefinition.ATTRIBUTES)).addFailedAttribute(SUBSYSTEM_ADDRESS.append(PeriodicHandlerResourceDefinition.PERIODIC_HANDLER_PATH),new RejectExpressionsConfig(PeriodicHandlerResourceDefinition.ATTRIBUTES)).addFailedAttribute(SUBSYSTEM_ADDRESS.append(SizeRotatingHandlerResourceDefinition.SIZE_ROTATING_HANDLER_PATH),new RejectExpressionsConfig(SizeRotatingHandlerResourceDefinition.ATTRIBUTES)).addFailedAttribute(SUBSYSTEM_ADDRESS.append(CustomHandlerResourceDefinition.CUSTOM_HANDLE_PATH),new RejectExpressionsConfig(CustomHandlerResourceDefinition.WRITABLE_ATTRIBUTES)).addFailedAttribute(SUBSYSTEM_ADDRESS.append(SyslogHandlerResourceDefinition.SYSLOG_HANDLER_PATH),FailedOperationTransformationConfig.REJECTED_RESOURCE).addFailedAttribute(SUBSYSTEM_ADDRESS.append(CommonAttributes.LOGGING_PROFILE),FailedOperationTransformationConfig.REJECTED_RESOURCE).addFailedAttribute(SUBSYSTEM_ADDRESS.append(CommonAttributes.LOGGING_PROFILE).append(ConsoleHandlerResourceDefinition.CONSOLE_HANDLER_PATH),FailedOperationTransformationConfig.REJECTED_RESOURCE).addFailedAttribute(SUBSYSTEM_ADDRESS.append(CommonAttributes.LOGGING_PROFILE).append(RootLoggerResourceDefinition.ROOT_LOGGER_PATH),FailedOperationTransformationConfig.REJECTED_RESOURCE).addFailedAttribute(SUBSYSTEM_ADDRESS.append(CommonAttributes.LOGGING_PROFILE).append(LoggerResourceDefinition.LOGGER_PATH),FailedOperationTransformationConfig.REJECTED_RESOURCE).addFailedAttribute(SUBSYSTEM_ADDRESS.append(CommonAttributes.LOGGING_PROFILE).append(SyslogHandlerResourceDefinition.SYSLOG_HANDLER_PATH),FailedOperationTransformationConfig.REJECTED_RESOURCE)) @AT@ 6434 @LENGTH@ 3336
---UPD MethodInvocation@@ModelTestUtils.checkFailedTransformedBootOperations(mainServices,modelVersion,ops,new FailedOperationTransformationConfig().addFailedAttribute(createRootLoggerAddress(),new RejectExpressionsConfig(RootLoggerResourceDefinition.EXPRESSION_ATTRIBUTES)).addFailedAttribute(SUBSYSTEM_ADDRESS.append(LoggerResourceDefinition.LOGGER_PATH),new RejectExpressionsConfig(LoggerResourceDefinition.EXPRESSION_ATTRIBUTES)).addFailedAttribute(SUBSYSTEM_ADDRESS.append(AsyncHandlerResourceDefinition.ASYNC_HANDLER_PATH),new RejectExpressionsConfig(AsyncHandlerResourceDefinition.ATTRIBUTES)).addFailedAttribute(SUBSYSTEM_ADDRESS.append(ConsoleHandlerResourceDefinition.CONSOLE_HANDLER_PATH),new RejectExpressionsConfig(ConsoleHandlerResourceDefinition.ATTRIBUTES)).addFailedAttribute(SUBSYSTEM_ADDRESS.append(FileHandlerResourceDefinition.FILE_HANDLER_PATH),new RejectExpressionsConfig(FileHandlerResourceDefinition.ATTRIBUTES)).addFailedAttribute(SUBSYSTEM_ADDRESS.append(PeriodicHandlerResourceDefinition.PERIODIC_HANDLER_PATH),new RejectExpressionsConfig(PeriodicHandlerResourceDefinition.ATTRIBUTES)).addFailedAttribute(SUBSYSTEM_ADDRESS.append(SizeRotatingHandlerResourceDefinition.SIZE_ROTATING_HANDLER_PATH),new RejectExpressionsConfig(SizeRotatingHandlerResourceDefinition.ATTRIBUTES)).addFailedAttribute(SUBSYSTEM_ADDRESS.append(CustomHandlerResourceDefinition.CUSTOM_HANDLE_PATH),new RejectExpressionsConfig(CustomHandlerResourceDefinition.WRITABLE_ATTRIBUTES)).addFailedAttribute(SUBSYSTEM_ADDRESS.append(SyslogHandlerResourceDefinition.SYSLOG_HANDLER_PATH),FailedOperationTransformationConfig.DISCARDED_RESOURCE).addFailedAttribute(SUBSYSTEM_ADDRESS.append(CommonAttributes.LOGGING_PROFILE),FailedOperationTransformationConfig.REJECTED_RESOURCE).addFailedAttribute(SUBSYSTEM_ADDRESS.append(CommonAttributes.LOGGING_PROFILE).append(ConsoleHandlerResourceDefinition.CONSOLE_HANDLER_PATH),FailedOperationTransformationConfig.REJECTED_RESOURCE).addFailedAttribute(SUBSYSTEM_ADDRESS.append(CommonAttributes.LOGGING_PROFILE).append(RootLoggerResourceDefinition.ROOT_LOGGER_PATH),FailedOperationTransformationConfig.REJECTED_RESOURCE).addFailedAttribute(SUBSYSTEM_ADDRESS.append(CommonAttributes.LOGGING_PROFILE).append(LoggerResourceDefinition.LOGGER_PATH),FailedOperationTransformationConfig.REJECTED_RESOURCE).addFailedAttribute(SUBSYSTEM_ADDRESS.append(CommonAttributes.LOGGING_PROFILE).append(SyslogHandlerResourceDefinition.SYSLOG_HANDLER_PATH),FailedOperationTransformationConfig.REJECTED_RESOURCE)) @TO@ ModelTestUtils.checkFailedTransformedBootOperations(mainServices,modelVersion,ops,new FailedOperationTransformationConfig().addFailedAttribute(createRootLoggerAddress(),new RejectExpressionsConfig(RootLoggerResourceDefinition.EXPRESSION_ATTRIBUTES)).addFailedAttribute(SUBSYSTEM_ADDRESS.append(LoggerResourceDefinition.LOGGER_PATH),new RejectExpressionsConfig(LoggerResourceDefinition.EXPRESSION_ATTRIBUTES)).addFailedAttribute(SUBSYSTEM_ADDRESS.append(AsyncHandlerResourceDefinition.ASYNC_HANDLER_PATH),new RejectExpressionsConfig(AsyncHandlerResourceDefinition.ATTRIBUTES)).addFailedAttribute(SUBSYSTEM_ADDRESS.append(ConsoleHandlerResourceDefinition.CONSOLE_HANDLER_PATH),new RejectExpressionsConfig(ConsoleHandlerResourceDefinition.ATTRIBUTES)).addFailedAttribute(SUBSYSTEM_ADDRESS.append(FileHandlerResourceDefinition.FILE_HANDLER_PATH),new RejectExpressionsConfig(FileHandlerResourceDefinition.ATTRIBUTES)).addFailedAttribute(SUBSYSTEM_ADDRESS.append(PeriodicHandlerResourceDefinition.PERIODIC_HANDLER_PATH),new RejectExpressionsConfig(PeriodicHandlerResourceDefinition.ATTRIBUTES)).addFailedAttribute(SUBSYSTEM_ADDRESS.append(SizeRotatingHandlerResourceDefinition.SIZE_ROTATING_HANDLER_PATH),new RejectExpressionsConfig(SizeRotatingHandlerResourceDefinition.ATTRIBUTES)).addFailedAttribute(SUBSYSTEM_ADDRESS.append(CustomHandlerResourceDefinition.CUSTOM_HANDLE_PATH),new RejectExpressionsConfig(CustomHandlerResourceDefinition.WRITABLE_ATTRIBUTES)).addFailedAttribute(SUBSYSTEM_ADDRESS.append(SyslogHandlerResourceDefinition.SYSLOG_HANDLER_PATH),FailedOperationTransformationConfig.REJECTED_RESOURCE).addFailedAttribute(SUBSYSTEM_ADDRESS.append(CommonAttributes.LOGGING_PROFILE),FailedOperationTransformationConfig.REJECTED_RESOURCE).addFailedAttribute(SUBSYSTEM_ADDRESS.append(CommonAttributes.LOGGING_PROFILE).append(ConsoleHandlerResourceDefinition.CONSOLE_HANDLER_PATH),FailedOperationTransformationConfig.REJECTED_RESOURCE).addFailedAttribute(SUBSYSTEM_ADDRESS.append(CommonAttributes.LOGGING_PROFILE).append(RootLoggerResourceDefinition.ROOT_LOGGER_PATH),FailedOperationTransformationConfig.REJECTED_RESOURCE).addFailedAttribute(SUBSYSTEM_ADDRESS.append(CommonAttributes.LOGGING_PROFILE).append(LoggerResourceDefinition.LOGGER_PATH),FailedOperationTransformationConfig.REJECTED_RESOURCE).addFailedAttribute(SUBSYSTEM_ADDRESS.append(CommonAttributes.LOGGING_PROFILE).append(SyslogHandlerResourceDefinition.SYSLOG_HANDLER_PATH),FailedOperationTransformationConfig.REJECTED_RESOURCE)) @AT@ 6434 @LENGTH@ 3335
------UPD SimpleName@@MethodName:checkFailedTransformedBootOperations:[mainServices, modelVersion, ops, new FailedOperationTransformationConfig().addFailedAttribute(createRootLoggerAddress(),new RejectExpressionsConfig(RootLoggerResourceDefinition.EXPRESSION_ATTRIBUTES)).addFailedAttribute(SUBSYSTEM_ADDRESS.append(LoggerResourceDefinition.LOGGER_PATH),new RejectExpressionsConfig(LoggerResourceDefinition.EXPRESSION_ATTRIBUTES)).addFailedAttribute(SUBSYSTEM_ADDRESS.append(AsyncHandlerResourceDefinition.ASYNC_HANDLER_PATH),new RejectExpressionsConfig(AsyncHandlerResourceDefinition.ATTRIBUTES)).addFailedAttribute(SUBSYSTEM_ADDRESS.append(ConsoleHandlerResourceDefinition.CONSOLE_HANDLER_PATH),new RejectExpressionsConfig(ConsoleHandlerResourceDefinition.ATTRIBUTES)).addFailedAttribute(SUBSYSTEM_ADDRESS.append(FileHandlerResourceDefinition.FILE_HANDLER_PATH),new RejectExpressionsConfig(FileHandlerResourceDefinition.ATTRIBUTES)).addFailedAttribute(SUBSYSTEM_ADDRESS.append(PeriodicHandlerResourceDefinition.PERIODIC_HANDLER_PATH),new RejectExpressionsConfig(PeriodicHandlerResourceDefinition.ATTRIBUTES)).addFailedAttribute(SUBSYSTEM_ADDRESS.append(SizeRotatingHandlerResourceDefinition.SIZE_ROTATING_HANDLER_PATH),new RejectExpressionsConfig(SizeRotatingHandlerResourceDefinition.ATTRIBUTES)).addFailedAttribute(SUBSYSTEM_ADDRESS.append(CustomHandlerResourceDefinition.CUSTOM_HANDLE_PATH),new RejectExpressionsConfig(CustomHandlerResourceDefinition.WRITABLE_ATTRIBUTES)).addFailedAttribute(SUBSYSTEM_ADDRESS.append(SyslogHandlerResourceDefinition.SYSLOG_HANDLER_PATH),FailedOperationTransformationConfig.DISCARDED_RESOURCE).addFailedAttribute(SUBSYSTEM_ADDRESS.append(CommonAttributes.LOGGING_PROFILE),FailedOperationTransformationConfig.REJECTED_RESOURCE).addFailedAttribute(SUBSYSTEM_ADDRESS.append(CommonAttributes.LOGGING_PROFILE).append(ConsoleHandlerResourceDefinition.CONSOLE_HANDLER_PATH),FailedOperationTransformationConfig.REJECTED_RESOURCE).addFailedAttribute(SUBSYSTEM_ADDRESS.append(CommonAttributes.LOGGING_PROFILE).append(RootLoggerResourceDefinition.ROOT_LOGGER_PATH),FailedOperationTransformationConfig.REJECTED_RESOURCE).addFailedAttribute(SUBSYSTEM_ADDRESS.append(CommonAttributes.LOGGING_PROFILE).append(LoggerResourceDefinition.LOGGER_PATH),FailedOperationTransformationConfig.REJECTED_RESOURCE).addFailedAttribute(SUBSYSTEM_ADDRESS.append(CommonAttributes.LOGGING_PROFILE).append(SyslogHandlerResourceDefinition.SYSLOG_HANDLER_PATH),FailedOperationTransformationConfig.REJECTED_RESOURCE)] @TO@ MethodName:checkFailedTransformedBootOperations:[mainServices, modelVersion, ops, new FailedOperationTransformationConfig().addFailedAttribute(createRootLoggerAddress(),new RejectExpressionsConfig(RootLoggerResourceDefinition.EXPRESSION_ATTRIBUTES)).addFailedAttribute(SUBSYSTEM_ADDRESS.append(LoggerResourceDefinition.LOGGER_PATH),new RejectExpressionsConfig(LoggerResourceDefinition.EXPRESSION_ATTRIBUTES)).addFailedAttribute(SUBSYSTEM_ADDRESS.append(AsyncHandlerResourceDefinition.ASYNC_HANDLER_PATH),new RejectExpressionsConfig(AsyncHandlerResourceDefinition.ATTRIBUTES)).addFailedAttribute(SUBSYSTEM_ADDRESS.append(ConsoleHandlerResourceDefinition.CONSOLE_HANDLER_PATH),new RejectExpressionsConfig(ConsoleHandlerResourceDefinition.ATTRIBUTES)).addFailedAttribute(SUBSYSTEM_ADDRESS.append(FileHandlerResourceDefinition.FILE_HANDLER_PATH),new RejectExpressionsConfig(FileHandlerResourceDefinition.ATTRIBUTES)).addFailedAttribute(SUBSYSTEM_ADDRESS.append(PeriodicHandlerResourceDefinition.PERIODIC_HANDLER_PATH),new RejectExpressionsConfig(PeriodicHandlerResourceDefinition.ATTRIBUTES)).addFailedAttribute(SUBSYSTEM_ADDRESS.append(SizeRotatingHandlerResourceDefinition.SIZE_ROTATING_HANDLER_PATH),new RejectExpressionsConfig(SizeRotatingHandlerResourceDefinition.ATTRIBUTES)).addFailedAttribute(SUBSYSTEM_ADDRESS.append(CustomHandlerResourceDefinition.CUSTOM_HANDLE_PATH),new RejectExpressionsConfig(CustomHandlerResourceDefinition.WRITABLE_ATTRIBUTES)).addFailedAttribute(SUBSYSTEM_ADDRESS.append(SyslogHandlerResourceDefinition.SYSLOG_HANDLER_PATH),FailedOperationTransformationConfig.REJECTED_RESOURCE).addFailedAttribute(SUBSYSTEM_ADDRESS.append(CommonAttributes.LOGGING_PROFILE),FailedOperationTransformationConfig.REJECTED_RESOURCE).addFailedAttribute(SUBSYSTEM_ADDRESS.append(CommonAttributes.LOGGING_PROFILE).append(ConsoleHandlerResourceDefinition.CONSOLE_HANDLER_PATH),FailedOperationTransformationConfig.REJECTED_RESOURCE).addFailedAttribute(SUBSYSTEM_ADDRESS.append(CommonAttributes.LOGGING_PROFILE).append(RootLoggerResourceDefinition.ROOT_LOGGER_PATH),FailedOperationTransformationConfig.REJECTED_RESOURCE).addFailedAttribute(SUBSYSTEM_ADDRESS.append(CommonAttributes.LOGGING_PROFILE).append(LoggerResourceDefinition.LOGGER_PATH),FailedOperationTransformationConfig.REJECTED_RESOURCE).addFailedAttribute(SUBSYSTEM_ADDRESS.append(CommonAttributes.LOGGING_PROFILE).append(SyslogHandlerResourceDefinition.SYSLOG_HANDLER_PATH),FailedOperationTransformationConfig.REJECTED_RESOURCE)] @AT@ 6449 @LENGTH@ 3320
---------UPD MethodInvocation@@new FailedOperationTransformationConfig().addFailedAttribute(createRootLoggerAddress(),new RejectExpressionsConfig(RootLoggerResourceDefinition.EXPRESSION_ATTRIBUTES)).addFailedAttribute(SUBSYSTEM_ADDRESS.append(LoggerResourceDefinition.LOGGER_PATH),new RejectExpressionsConfig(LoggerResourceDefinition.EXPRESSION_ATTRIBUTES)).addFailedAttribute(SUBSYSTEM_ADDRESS.append(AsyncHandlerResourceDefinition.ASYNC_HANDLER_PATH),new RejectExpressionsConfig(AsyncHandlerResourceDefinition.ATTRIBUTES)).addFailedAttribute(SUBSYSTEM_ADDRESS.append(ConsoleHandlerResourceDefinition.CONSOLE_HANDLER_PATH),new RejectExpressionsConfig(ConsoleHandlerResourceDefinition.ATTRIBUTES)).addFailedAttribute(SUBSYSTEM_ADDRESS.append(FileHandlerResourceDefinition.FILE_HANDLER_PATH),new RejectExpressionsConfig(FileHandlerResourceDefinition.ATTRIBUTES)).addFailedAttribute(SUBSYSTEM_ADDRESS.append(PeriodicHandlerResourceDefinition.PERIODIC_HANDLER_PATH),new RejectExpressionsConfig(PeriodicHandlerResourceDefinition.ATTRIBUTES)).addFailedAttribute(SUBSYSTEM_ADDRESS.append(SizeRotatingHandlerResourceDefinition.SIZE_ROTATING_HANDLER_PATH),new RejectExpressionsConfig(SizeRotatingHandlerResourceDefinition.ATTRIBUTES)).addFailedAttribute(SUBSYSTEM_ADDRESS.append(CustomHandlerResourceDefinition.CUSTOM_HANDLE_PATH),new RejectExpressionsConfig(CustomHandlerResourceDefinition.WRITABLE_ATTRIBUTES)).addFailedAttribute(SUBSYSTEM_ADDRESS.append(SyslogHandlerResourceDefinition.SYSLOG_HANDLER_PATH),FailedOperationTransformationConfig.DISCARDED_RESOURCE).addFailedAttribute(SUBSYSTEM_ADDRESS.append(CommonAttributes.LOGGING_PROFILE),FailedOperationTransformationConfig.REJECTED_RESOURCE).addFailedAttribute(SUBSYSTEM_ADDRESS.append(CommonAttributes.LOGGING_PROFILE).append(ConsoleHandlerResourceDefinition.CONSOLE_HANDLER_PATH),FailedOperationTransformationConfig.REJECTED_RESOURCE).addFailedAttribute(SUBSYSTEM_ADDRESS.append(CommonAttributes.LOGGING_PROFILE).append(RootLoggerResourceDefinition.ROOT_LOGGER_PATH),FailedOperationTransformationConfig.REJECTED_RESOURCE).addFailedAttribute(SUBSYSTEM_ADDRESS.append(CommonAttributes.LOGGING_PROFILE).append(LoggerResourceDefinition.LOGGER_PATH),FailedOperationTransformationConfig.REJECTED_RESOURCE).addFailedAttribute(SUBSYSTEM_ADDRESS.append(CommonAttributes.LOGGING_PROFILE).append(SyslogHandlerResourceDefinition.SYSLOG_HANDLER_PATH),FailedOperationTransformationConfig.REJECTED_RESOURCE) @TO@ new FailedOperationTransformationConfig().addFailedAttribute(createRootLoggerAddress(),new RejectExpressionsConfig(RootLoggerResourceDefinition.EXPRESSION_ATTRIBUTES)).addFailedAttribute(SUBSYSTEM_ADDRESS.append(LoggerResourceDefinition.LOGGER_PATH),new RejectExpressionsConfig(LoggerResourceDefinition.EXPRESSION_ATTRIBUTES)).addFailedAttribute(SUBSYSTEM_ADDRESS.append(AsyncHandlerResourceDefinition.ASYNC_HANDLER_PATH),new RejectExpressionsConfig(AsyncHandlerResourceDefinition.ATTRIBUTES)).addFailedAttribute(SUBSYSTEM_ADDRESS.append(ConsoleHandlerResourceDefinition.CONSOLE_HANDLER_PATH),new RejectExpressionsConfig(ConsoleHandlerResourceDefinition.ATTRIBUTES)).addFailedAttribute(SUBSYSTEM_ADDRESS.append(FileHandlerResourceDefinition.FILE_HANDLER_PATH),new RejectExpressionsConfig(FileHandlerResourceDefinition.ATTRIBUTES)).addFailedAttribute(SUBSYSTEM_ADDRESS.append(PeriodicHandlerResourceDefinition.PERIODIC_HANDLER_PATH),new RejectExpressionsConfig(PeriodicHandlerResourceDefinition.ATTRIBUTES)).addFailedAttribute(SUBSYSTEM_ADDRESS.append(SizeRotatingHandlerResourceDefinition.SIZE_ROTATING_HANDLER_PATH),new RejectExpressionsConfig(SizeRotatingHandlerResourceDefinition.ATTRIBUTES)).addFailedAttribute(SUBSYSTEM_ADDRESS.append(CustomHandlerResourceDefinition.CUSTOM_HANDLE_PATH),new RejectExpressionsConfig(CustomHandlerResourceDefinition.WRITABLE_ATTRIBUTES)).addFailedAttribute(SUBSYSTEM_ADDRESS.append(SyslogHandlerResourceDefinition.SYSLOG_HANDLER_PATH),FailedOperationTransformationConfig.REJECTED_RESOURCE).addFailedAttribute(SUBSYSTEM_ADDRESS.append(CommonAttributes.LOGGING_PROFILE),FailedOperationTransformationConfig.REJECTED_RESOURCE).addFailedAttribute(SUBSYSTEM_ADDRESS.append(CommonAttributes.LOGGING_PROFILE).append(ConsoleHandlerResourceDefinition.CONSOLE_HANDLER_PATH),FailedOperationTransformationConfig.REJECTED_RESOURCE).addFailedAttribute(SUBSYSTEM_ADDRESS.append(CommonAttributes.LOGGING_PROFILE).append(RootLoggerResourceDefinition.ROOT_LOGGER_PATH),FailedOperationTransformationConfig.REJECTED_RESOURCE).addFailedAttribute(SUBSYSTEM_ADDRESS.append(CommonAttributes.LOGGING_PROFILE).append(LoggerResourceDefinition.LOGGER_PATH),FailedOperationTransformationConfig.REJECTED_RESOURCE).addFailedAttribute(SUBSYSTEM_ADDRESS.append(CommonAttributes.LOGGING_PROFILE).append(SyslogHandlerResourceDefinition.SYSLOG_HANDLER_PATH),FailedOperationTransformationConfig.REJECTED_RESOURCE) @AT@ 6535 @LENGTH@ 3224
------------UPD MethodInvocation@@MethodName:addFailedAttribute:[SUBSYSTEM_ADDRESS.append(SyslogHandlerResourceDefinition.SYSLOG_HANDLER_PATH), FailedOperationTransformationConfig.DISCARDED_RESOURCE] @TO@ MethodName:addFailedAttribute:[SUBSYSTEM_ADDRESS.append(SyslogHandlerResourceDefinition.SYSLOG_HANDLER_PATH), FailedOperationTransformationConfig.REJECTED_RESOURCE] @AT@ 6535 @LENGTH@ 2048
---------------UPD QualifiedName@@FailedOperationTransformationConfig.DISCARDED_RESOURCE @TO@ FailedOperationTransformationConfig.REJECTED_RESOURCE @AT@ 8528 @LENGTH@ 54
------------------UPD SimpleName@@DISCARDED_RESOURCE @TO@ REJECTED_RESOURCE @AT@ 8564 @LENGTH@ 18


UPD TryStatement@@try {  this.establishView(client,baseURL1,NODE_1,NODE_2);  HttpResponse response=client.execute(new HttpGet(url1));  try {    System.out.println("Requested " + url1 + ", got "+ response.getFirstHeader("value").getValue()+ ".");    Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());    Assert.assertEquals(1,Integer.parseInt(response.getFirstHeader("value").getValue()));  }  finally {    HttpClientUtils.closeQuietly(response);  }  response=client.execute(new HttpGet(url1));  try {    System.out.println("Requested " + url1 + ", got "+ response.getFirstHeader("value").getValue()+ ".");    Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());    Assert.assertEquals(2,Integer.parseInt(response.getFirstHeader("value").getValue()));  }  finally {    HttpClientUtils.closeQuietly(response);  }  undeploy(DEPLOYMENT_1);  this.establishView(client,baseURL2,NODE_2);  response=client.execute(new HttpGet(url2));  try {    System.out.println("Requested " + url2 + ", got "+ response.getFirstHeader("value").getValue()+ ".");    Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());    Assert.assertEquals("Session failed to replicate after container 1 was shutdown.",3,Integer.parseInt(response.getFirstHeader("value").getValue()));  }  finally {    HttpClientUtils.closeQuietly(response);  }  response=client.execute(new HttpGet(url2));  try {    System.out.println("Requested " + url2 + ", got "+ response.getFirstHeader("value").getValue()+ ".");    Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());    Assert.assertEquals(4,Integer.parseInt(response.getFirstHeader("value").getValue()));  }  finally {    HttpClientUtils.closeQuietly(response);  }  deploy(DEPLOYMENT_1);  this.establishView(client,baseURL2,NODE_1,NODE_2);  response=client.execute(new HttpGet(url1));  try {    System.out.println("Requested " + url1 + ", got "+ response.getFirstHeader("value").getValue()+ ".");    Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());    Assert.assertEquals("Session failed to replicate after container 1 was brough up.",5,Integer.parseInt(response.getFirstHeader("value").getValue()));  }  finally {    HttpClientUtils.closeQuietly(response);  }  response=client.execute(new HttpGet(url1));  try {    System.out.println("Requested " + url1 + ", got "+ response.getFirstHeader("value").getValue()+ ".");    Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());    Assert.assertEquals(6,Integer.parseInt(response.getFirstHeader("value").getValue()));  }  finally {    HttpClientUtils.closeQuietly(response);  }}  finally {  HttpClientUtils.closeQuietly(client);} @TO@ try {  this.establishView(client,baseURL1,NODE_1,NODE_2);  HttpResponse response=client.execute(new HttpGet(url1));  try {    log.info("Requested " + url1 + ", got "+ response.getFirstHeader("value").getValue()+ ".");    Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());    Assert.assertEquals(1,Integer.parseInt(response.getFirstHeader("value").getValue()));  }  finally {    HttpClientUtils.closeQuietly(response);  }  response=client.execute(new HttpGet(url1));  try {    log.info("Requested " + url1 + ", got "+ response.getFirstHeader("value").getValue()+ ".");    Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());    Assert.assertEquals(2,Integer.parseInt(response.getFirstHeader("value").getValue()));  }  finally {    HttpClientUtils.closeQuietly(response);  }  undeploy(DEPLOYMENT_1);  this.establishView(client,baseURL2,NODE_2);  response=client.execute(new HttpGet(url2));  try {    log.info("Requested " + url2 + ", got "+ response.getFirstHeader("value").getValue()+ ".");    Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());    Assert.assertEquals("Session failed to replicate after container 1 was shutdown.",3,Integer.parseInt(response.getFirstHeader("value").getValue()));  }  finally {    HttpClientUtils.closeQuietly(response);  }  response=client.execute(new HttpGet(url2));  try {    log.info("Requested " + url2 + ", got "+ response.getFirstHeader("value").getValue()+ ".");    Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());    Assert.assertEquals(4,Integer.parseInt(response.getFirstHeader("value").getValue()));  }  finally {    HttpClientUtils.closeQuietly(response);  }  deploy(DEPLOYMENT_1);  this.establishView(client,baseURL2,NODE_1,NODE_2);  response=client.execute(new HttpGet(url1));  try {    log.info("Requested " + url1 + ", got "+ response.getFirstHeader("value").getValue()+ ".");    Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());    Assert.assertEquals("Session failed to replicate after container 1 was brough up.",5,Integer.parseInt(response.getFirstHeader("value").getValue()));  }  finally {    HttpClientUtils.closeQuietly(response);  }  response=client.execute(new HttpGet(url1));  try {    log.info("Requested " + url1 + ", got "+ response.getFirstHeader("value").getValue()+ ".");    Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());    Assert.assertEquals(6,Integer.parseInt(response.getFirstHeader("value").getValue()));  }  finally {    HttpClientUtils.closeQuietly(response);  }}  finally {  HttpClientUtils.closeQuietly(client);} @AT@ 8788 @LENGTH@ 4038
---UPD TryStatement@@try {  System.out.println("Requested " + url1 + ", got "+ response.getFirstHeader("value").getValue()+ ".");  Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());  Assert.assertEquals(1,Integer.parseInt(response.getFirstHeader("value").getValue()));}  finally {  HttpClientUtils.closeQuietly(response);} @TO@ try {  log.info("Requested " + url1 + ", got "+ response.getFirstHeader("value").getValue()+ ".");  Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());  Assert.assertEquals(1,Integer.parseInt(response.getFirstHeader("value").getValue()));}  finally {  HttpClientUtils.closeQuietly(response);} @AT@ 8956 @LENGTH@ 428
------UPD ExpressionStatement@@MethodInvocation:System.out.println("Requested " + url1 + ", got "+ response.getFirstHeader("value").getValue()+ ".") @TO@ MethodInvocation:log.info("Requested " + url1 + ", got "+ response.getFirstHeader("value").getValue()+ ".") @AT@ 8978 @LENGTH@ 103
---------UPD MethodInvocation@@System.out.println("Requested " + url1 + ", got "+ response.getFirstHeader("value").getValue()+ ".") @TO@ log.info("Requested " + url1 + ", got "+ response.getFirstHeader("value").getValue()+ ".") @AT@ 8978 @LENGTH@ 102
------------INS SimpleName@@Name:log @TO@ MethodInvocation@@System.out.println("Requested " + url1 + ", got "+ response.getFirstHeader("value").getValue()+ ".") @AT@ 8918 @LENGTH@ 3
------------DEL QualifiedName@@Name:System.out @AT@ 8978 @LENGTH@ 10
------------UPD SimpleName@@MethodName:println:["Requested " + url1 + ", got "+ response.getFirstHeader("value").getValue()+ "."] @TO@ MethodName:info:["Requested " + url1 + ", got "+ response.getFirstHeader("value").getValue()+ "."] @AT@ 8989 @LENGTH@ 91
---UPD TryStatement@@try {  System.out.println("Requested " + url1 + ", got "+ response.getFirstHeader("value").getValue()+ ".");  Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());  Assert.assertEquals(2,Integer.parseInt(response.getFirstHeader("value").getValue()));}  finally {  HttpClientUtils.closeQuietly(response);} @TO@ try {  log.info("Requested " + url1 + ", got "+ response.getFirstHeader("value").getValue()+ ".");  Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());  Assert.assertEquals(2,Integer.parseInt(response.getFirstHeader("value").getValue()));}  finally {  HttpClientUtils.closeQuietly(response);} @AT@ 9535 @LENGTH@ 428
------UPD ExpressionStatement@@MethodInvocation:System.out.println("Requested " + url1 + ", got "+ response.getFirstHeader("value").getValue()+ ".") @TO@ MethodInvocation:log.info("Requested " + url1 + ", got "+ response.getFirstHeader("value").getValue()+ ".") @AT@ 9557 @LENGTH@ 103
---------UPD MethodInvocation@@System.out.println("Requested " + url1 + ", got "+ response.getFirstHeader("value").getValue()+ ".") @TO@ log.info("Requested " + url1 + ", got "+ response.getFirstHeader("value").getValue()+ ".") @AT@ 9557 @LENGTH@ 102
------------INS SimpleName@@Name:log @TO@ MethodInvocation@@System.out.println("Requested " + url1 + ", got "+ response.getFirstHeader("value").getValue()+ ".") @AT@ 9487 @LENGTH@ 3
------------DEL QualifiedName@@Name:System.out @AT@ 9557 @LENGTH@ 10
------------UPD SimpleName@@MethodName:println:["Requested " + url1 + ", got "+ response.getFirstHeader("value").getValue()+ "."] @TO@ MethodName:info:["Requested " + url1 + ", got "+ response.getFirstHeader("value").getValue()+ "."] @AT@ 9568 @LENGTH@ 91
---UPD TryStatement@@try {  System.out.println("Requested " + url2 + ", got "+ response.getFirstHeader("value").getValue()+ ".");  Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());  Assert.assertEquals("Session failed to replicate after container 1 was shutdown.",3,Integer.parseInt(response.getFirstHeader("value").getValue()));}  finally {  HttpClientUtils.closeQuietly(response);} @TO@ try {  log.info("Requested " + url2 + ", got "+ response.getFirstHeader("value").getValue()+ ".");  Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());  Assert.assertEquals("Session failed to replicate after container 1 was shutdown.",3,Integer.parseInt(response.getFirstHeader("value").getValue()));}  finally {  HttpClientUtils.closeQuietly(response);} @AT@ 10435 @LENGTH@ 491
------UPD ExpressionStatement@@MethodInvocation:System.out.println("Requested " + url2 + ", got "+ response.getFirstHeader("value").getValue()+ ".") @TO@ MethodInvocation:log.info("Requested " + url2 + ", got "+ response.getFirstHeader("value").getValue()+ ".") @AT@ 10457 @LENGTH@ 103
---------UPD MethodInvocation@@System.out.println("Requested " + url2 + ", got "+ response.getFirstHeader("value").getValue()+ ".") @TO@ log.info("Requested " + url2 + ", got "+ response.getFirstHeader("value").getValue()+ ".") @AT@ 10457 @LENGTH@ 102
------------INS SimpleName@@Name:log @TO@ MethodInvocation@@System.out.println("Requested " + url2 + ", got "+ response.getFirstHeader("value").getValue()+ ".") @AT@ 10377 @LENGTH@ 3
------------DEL QualifiedName@@Name:System.out @AT@ 10457 @LENGTH@ 10
------------UPD SimpleName@@MethodName:println:["Requested " + url2 + ", got "+ response.getFirstHeader("value").getValue()+ "."] @TO@ MethodName:info:["Requested " + url2 + ", got "+ response.getFirstHeader("value").getValue()+ "."] @AT@ 10468 @LENGTH@ 91
---UPD TryStatement@@try {  System.out.println("Requested " + url2 + ", got "+ response.getFirstHeader("value").getValue()+ ".");  Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());  Assert.assertEquals(4,Integer.parseInt(response.getFirstHeader("value").getValue()));}  finally {  HttpClientUtils.closeQuietly(response);} @TO@ try {  log.info("Requested " + url2 + ", got "+ response.getFirstHeader("value").getValue()+ ".");  Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());  Assert.assertEquals(4,Integer.parseInt(response.getFirstHeader("value").getValue()));}  finally {  HttpClientUtils.closeQuietly(response);} @AT@ 11037 @LENGTH@ 428
------UPD ExpressionStatement@@MethodInvocation:System.out.println("Requested " + url2 + ", got "+ response.getFirstHeader("value").getValue()+ ".") @TO@ MethodInvocation:log.info("Requested " + url2 + ", got "+ response.getFirstHeader("value").getValue()+ ".") @AT@ 11059 @LENGTH@ 103
---------UPD MethodInvocation@@System.out.println("Requested " + url2 + ", got "+ response.getFirstHeader("value").getValue()+ ".") @TO@ log.info("Requested " + url2 + ", got "+ response.getFirstHeader("value").getValue()+ ".") @AT@ 11059 @LENGTH@ 102
------------INS SimpleName@@Name:log @TO@ MethodInvocation@@System.out.println("Requested " + url2 + ", got "+ response.getFirstHeader("value").getValue()+ ".") @AT@ 10969 @LENGTH@ 3
------------DEL QualifiedName@@Name:System.out @AT@ 11059 @LENGTH@ 10
------------UPD SimpleName@@MethodName:println:["Requested " + url2 + ", got "+ response.getFirstHeader("value").getValue()+ "."] @TO@ MethodName:info:["Requested " + url2 + ", got "+ response.getFirstHeader("value").getValue()+ "."] @AT@ 11070 @LENGTH@ 91
---UPD TryStatement@@try {  System.out.println("Requested " + url1 + ", got "+ response.getFirstHeader("value").getValue()+ ".");  Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());  Assert.assertEquals("Session failed to replicate after container 1 was brough up.",5,Integer.parseInt(response.getFirstHeader("value").getValue()));}  finally {  HttpClientUtils.closeQuietly(response);} @TO@ try {  log.info("Requested " + url1 + ", got "+ response.getFirstHeader("value").getValue()+ ".");  Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());  Assert.assertEquals("Session failed to replicate after container 1 was brough up.",5,Integer.parseInt(response.getFirstHeader("value").getValue()));}  finally {  HttpClientUtils.closeQuietly(response);} @AT@ 11675 @LENGTH@ 492
------UPD ExpressionStatement@@MethodInvocation:System.out.println("Requested " + url1 + ", got "+ response.getFirstHeader("value").getValue()+ ".") @TO@ MethodInvocation:log.info("Requested " + url1 + ", got "+ response.getFirstHeader("value").getValue()+ ".") @AT@ 11697 @LENGTH@ 103
---------UPD MethodInvocation@@System.out.println("Requested " + url1 + ", got "+ response.getFirstHeader("value").getValue()+ ".") @TO@ log.info("Requested " + url1 + ", got "+ response.getFirstHeader("value").getValue()+ ".") @AT@ 11697 @LENGTH@ 102
------------INS SimpleName@@Name:log @TO@ MethodInvocation@@System.out.println("Requested " + url1 + ", got "+ response.getFirstHeader("value").getValue()+ ".") @AT@ 11597 @LENGTH@ 3
------------DEL QualifiedName@@Name:System.out @AT@ 11697 @LENGTH@ 10
------------UPD SimpleName@@MethodName:println:["Requested " + url1 + ", got "+ response.getFirstHeader("value").getValue()+ "."] @TO@ MethodName:info:["Requested " + url1 + ", got "+ response.getFirstHeader("value").getValue()+ "."] @AT@ 11708 @LENGTH@ 91
---UPD TryStatement@@try {  System.out.println("Requested " + url1 + ", got "+ response.getFirstHeader("value").getValue()+ ".");  Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());  Assert.assertEquals(6,Integer.parseInt(response.getFirstHeader("value").getValue()));}  finally {  HttpClientUtils.closeQuietly(response);} @TO@ try {  log.info("Requested " + url1 + ", got "+ response.getFirstHeader("value").getValue()+ ".");  Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());  Assert.assertEquals(6,Integer.parseInt(response.getFirstHeader("value").getValue()));}  finally {  HttpClientUtils.closeQuietly(response);} @AT@ 12318 @LENGTH@ 428
------UPD ExpressionStatement@@MethodInvocation:System.out.println("Requested " + url1 + ", got "+ response.getFirstHeader("value").getValue()+ ".") @TO@ MethodInvocation:log.info("Requested " + url1 + ", got "+ response.getFirstHeader("value").getValue()+ ".") @AT@ 12340 @LENGTH@ 103
---------UPD MethodInvocation@@System.out.println("Requested " + url1 + ", got "+ response.getFirstHeader("value").getValue()+ ".") @TO@ log.info("Requested " + url1 + ", got "+ response.getFirstHeader("value").getValue()+ ".") @AT@ 12340 @LENGTH@ 102
------------INS SimpleName@@Name:log @TO@ MethodInvocation@@System.out.println("Requested " + url1 + ", got "+ response.getFirstHeader("value").getValue()+ ".") @AT@ 12230 @LENGTH@ 3
------------DEL QualifiedName@@Name:System.out @AT@ 12340 @LENGTH@ 10
------------UPD SimpleName@@MethodName:println:["Requested " + url1 + ", got "+ response.getFirstHeader("value").getValue()+ "."] @TO@ MethodName:info:["Requested " + url1 + ", got "+ response.getFirstHeader("value").getValue()+ "."] @AT@ 12351 @LENGTH@ 91


UPD ExpressionStatement@@MethodInvocation:System.out.println(war.toString(true)) @TO@ MethodInvocation:log.info(war.toString(true)) @AT@ 2330 @LENGTH@ 39
---UPD MethodInvocation@@System.out.println(war.toString(true)) @TO@ log.info(war.toString(true)) @AT@ 2330 @LENGTH@ 38
------DEL QualifiedName@@Name:System.out @AT@ 2330 @LENGTH@ 10
------UPD SimpleName@@MethodName:println:[war.toString(true)] @TO@ MethodName:info:[war.toString(true)] @AT@ 2341 @LENGTH@ 27
------INS SimpleName@@Name:log @TO@ MethodInvocation@@System.out.println(war.toString(true)) @AT@ 2445 @LENGTH@ 3


UPD ExpressionStatement@@MethodInvocation:RaServicesFactory.createDeploymentService(registration,connectorXmlDescriptor,module,serviceTarget,deploymentUnitName,deploymentUnit.getServiceName(),deployment,raxml,deploymentResource) @TO@ MethodInvocation:RaServicesFactory.createDeploymentService(registration,connectorXmlDescriptor,module,serviceTarget,deploymentUnitName,deploymentUnit.getServiceName(),deployment,raxml,deploymentResource,null) @AT@ 6133 @LENGTH@ 195
---UPD MethodInvocation@@RaServicesFactory.createDeploymentService(registration,connectorXmlDescriptor,module,serviceTarget,deploymentUnitName,deploymentUnit.getServiceName(),deployment,raxml,deploymentResource) @TO@ RaServicesFactory.createDeploymentService(registration,connectorXmlDescriptor,module,serviceTarget,deploymentUnitName,deploymentUnit.getServiceName(),deployment,raxml,deploymentResource,null) @AT@ 6133 @LENGTH@ 194
------UPD SimpleName@@MethodName:createDeploymentService:[registration, connectorXmlDescriptor, module, serviceTarget, deploymentUnitName, deploymentUnit.getServiceName(), deployment, raxml, deploymentResource] @TO@ MethodName:createDeploymentService:[registration, connectorXmlDescriptor, module, serviceTarget, deploymentUnitName, deploymentUnit.getServiceName(), deployment, raxml, deploymentResource, null] @AT@ 6151 @LENGTH@ 176
---------INS NullLiteral@@null @TO@ SimpleName@@MethodName:createDeploymentService:[registration, connectorXmlDescriptor, module, serviceTarget, deploymentUnitName, deploymentUnit.getServiceName(), deployment, raxml, deploymentResource] @AT@ 6328 @LENGTH@ 4


INS MethodDeclaration@@public, boolean, MethodName:isDeadLetterChannel,  @TO@ TypeDeclaration@@[public]DeadLetterChannel, RedeliveryErrorHandler @AT@ 4126 @LENGTH@ 65
---INS Modifier@@public @TO@ MethodDeclaration@@public, boolean, MethodName:isDeadLetterChannel,  @AT@ 4126 @LENGTH@ 6
---INS PrimitiveType@@boolean @TO@ MethodDeclaration@@public, boolean, MethodName:isDeadLetterChannel,  @AT@ 4133 @LENGTH@ 7
---INS SimpleName@@MethodName:isDeadLetterChannel @TO@ MethodDeclaration@@public, boolean, MethodName:isDeadLetterChannel,  @AT@ 4141 @LENGTH@ 19
---INS ReturnStatement@@BooleanLiteral:true @TO@ MethodDeclaration@@public, boolean, MethodName:isDeadLetterChannel,  @AT@ 4173 @LENGTH@ 12
------INS BooleanLiteral@@true @TO@ ReturnStatement@@BooleanLiteral:true @AT@ 4180 @LENGTH@ 4


UPD Block@@ThenBody:{  if (model.hasDefined(PROPERTIES.getName())) {    for (    Property property : PROPERTIES.resolveModelAttribute(context,model).asPropertyList()) {      configuration.removeProperty(property.getName());    }  }  for (  AttributeDefinition attribute : attributes) {    handleProperty(attribute,context,originalModel,logContextConfiguration,configuration);    if (Logging.requiresRestart(attribute.getFlags())) {      context.restartRequired();    }  }} @TO@ ThenBody:{  if (model.hasDefined(PROPERTIES.getName())) {    for (    Property property : PROPERTIES.resolveModelAttribute(context,model).asPropertyList()) {      configuration.removeProperty(property.getName());    }  }  boolean restartRequired=false;  boolean reloadRequired=false;  for (  AttributeDefinition attribute : attributes) {    handleProperty(attribute,context,originalModel,logContextConfiguration,configuration);    restartRequired=restartRequired || Logging.requiresRestart(attribute.getFlags());    reloadRequired=reloadRequired || Logging.requiresReload(attribute.getFlags());  }  if (restartRequired) {    context.restartRequired();  } else   if (reloadRequired) {    context.reloadRequired();  }} @AT@ 6090 @LENGTH@ 807
---UPD EnhancedForStatement@@for (AttributeDefinition attribute : attributes) {  handleProperty(attribute,context,originalModel,logContextConfiguration,configuration);  if (Logging.requiresRestart(attribute.getFlags())) {    context.restartRequired();  }} @TO@ for (AttributeDefinition attribute : attributes) {  handleProperty(attribute,context,originalModel,logContextConfiguration,configuration);  restartRequired=restartRequired || Logging.requiresRestart(attribute.getFlags());  reloadRequired=reloadRequired || Logging.requiresReload(attribute.getFlags());} @AT@ 6534 @LENGTH@ 345
------DEL IfStatement@@if (Logging.requiresRestart(attribute.getFlags())) {  context.restartRequired();} @AT@ 6724 @LENGTH@ 133
------INS ExpressionStatement@@Assignment:restartRequired=restartRequired || Logging.requiresRestart(attribute.getFlags()) @TO@ EnhancedForStatement@@for (AttributeDefinition attribute : attributes) {  handleProperty(attribute,context,originalModel,logContextConfiguration,configuration);  if (Logging.requiresRestart(attribute.getFlags())) {    context.restartRequired();  }} @AT@ 7180 @LENGTH@ 83
---------INS Assignment@@restartRequired=restartRequired || Logging.requiresRestart(attribute.getFlags()) @TO@ ExpressionStatement@@Assignment:restartRequired=restartRequired || Logging.requiresRestart(attribute.getFlags()) @AT@ 7180 @LENGTH@ 82
------------INS SimpleName@@restartRequired @TO@ Assignment@@restartRequired=restartRequired || Logging.requiresRestart(attribute.getFlags()) @AT@ 7180 @LENGTH@ 15
------------INS Operator@@= @TO@ Assignment@@restartRequired=restartRequired || Logging.requiresRestart(attribute.getFlags()) @AT@ 7195 @LENGTH@ 1
------------INS InfixExpression@@restartRequired || Logging.requiresRestart(attribute.getFlags()) @TO@ Assignment@@restartRequired=restartRequired || Logging.requiresRestart(attribute.getFlags()) @AT@ 7198 @LENGTH@ 64
---------------MOV MethodInvocation@@Logging.requiresRestart(attribute.getFlags()) @TO@ InfixExpression@@restartRequired || Logging.requiresRestart(attribute.getFlags()) @AT@ 6728 @LENGTH@ 45
---------------INS SimpleName@@restartRequired @TO@ InfixExpression@@restartRequired || Logging.requiresRestart(attribute.getFlags()) @AT@ 7198 @LENGTH@ 15
---------------INS Operator@@|| @TO@ InfixExpression@@restartRequired || Logging.requiresRestart(attribute.getFlags()) @AT@ 7213 @LENGTH@ 2
------INS ExpressionStatement@@Assignment:reloadRequired=reloadRequired || Logging.requiresReload(attribute.getFlags()) @TO@ EnhancedForStatement@@for (AttributeDefinition attribute : attributes) {  handleProperty(attribute,context,originalModel,logContextConfiguration,configuration);  if (Logging.requiresRestart(attribute.getFlags())) {    context.restartRequired();  }} @AT@ 7288 @LENGTH@ 80
---------INS Assignment@@reloadRequired=reloadRequired || Logging.requiresReload(attribute.getFlags()) @TO@ ExpressionStatement@@Assignment:reloadRequired=reloadRequired || Logging.requiresReload(attribute.getFlags()) @AT@ 7288 @LENGTH@ 79
------------INS SimpleName@@reloadRequired @TO@ Assignment@@reloadRequired=reloadRequired || Logging.requiresReload(attribute.getFlags()) @AT@ 7288 @LENGTH@ 14
------------INS Operator@@= @TO@ Assignment@@reloadRequired=reloadRequired || Logging.requiresReload(attribute.getFlags()) @AT@ 7302 @LENGTH@ 1
------------INS InfixExpression@@reloadRequired || Logging.requiresReload(attribute.getFlags()) @TO@ Assignment@@reloadRequired=reloadRequired || Logging.requiresReload(attribute.getFlags()) @AT@ 7305 @LENGTH@ 62
---------------INS SimpleName@@reloadRequired @TO@ InfixExpression@@reloadRequired || Logging.requiresReload(attribute.getFlags()) @AT@ 7305 @LENGTH@ 14
---------------INS Operator@@|| @TO@ InfixExpression@@reloadRequired || Logging.requiresReload(attribute.getFlags()) @AT@ 7319 @LENGTH@ 2
---------------INS MethodInvocation@@Logging.requiresReload(attribute.getFlags()) @TO@ InfixExpression@@reloadRequired || Logging.requiresReload(attribute.getFlags()) @AT@ 7323 @LENGTH@ 44
------------------INS SimpleName@@Name:Logging @TO@ MethodInvocation@@Logging.requiresReload(attribute.getFlags()) @AT@ 7323 @LENGTH@ 7
------------------INS SimpleName@@MethodName:requiresReload:[attribute.getFlags()] @TO@ MethodInvocation@@Logging.requiresReload(attribute.getFlags()) @AT@ 7331 @LENGTH@ 36
---------------------INS MethodInvocation@@attribute.getFlags() @TO@ SimpleName@@MethodName:requiresReload:[attribute.getFlags()] @AT@ 7346 @LENGTH@ 20
------------------------INS SimpleName@@Name:attribute @TO@ MethodInvocation@@attribute.getFlags() @AT@ 7346 @LENGTH@ 9
------------------------INS SimpleName@@MethodName:getFlags:[] @TO@ MethodInvocation@@attribute.getFlags() @AT@ 7356 @LENGTH@ 10
---INS VariableDeclarationStatement@@boolean restartRequired=false; @TO@ Block@@ThenBody:{  if (model.hasDefined(PROPERTIES.getName())) {    for (    Property property : PROPERTIES.resolveModelAttribute(context,model).asPropertyList()) {      configuration.removeProperty(property.getName());    }  }  for (  AttributeDefinition attribute : attributes) {    handleProperty(attribute,context,originalModel,logContextConfiguration,configuration);    if (Logging.requiresRestart(attribute.getFlags())) {      context.restartRequired();    }  }} @AT@ 6885 @LENGTH@ 32
------INS PrimitiveType@@boolean @TO@ VariableDeclarationStatement@@boolean restartRequired=false; @AT@ 6885 @LENGTH@ 7
------INS VariableDeclarationFragment@@restartRequired=false @TO@ VariableDeclarationStatement@@boolean restartRequired=false; @AT@ 6893 @LENGTH@ 23
---------INS SimpleName@@restartRequired @TO@ VariableDeclarationFragment@@restartRequired=false @AT@ 6893 @LENGTH@ 15
---------INS BooleanLiteral@@false @TO@ VariableDeclarationFragment@@restartRequired=false @AT@ 6911 @LENGTH@ 5
---INS VariableDeclarationStatement@@boolean reloadRequired=false; @TO@ Block@@ThenBody:{  if (model.hasDefined(PROPERTIES.getName())) {    for (    Property property : PROPERTIES.resolveModelAttribute(context,model).asPropertyList()) {      configuration.removeProperty(property.getName());    }  }  for (  AttributeDefinition attribute : attributes) {    handleProperty(attribute,context,originalModel,logContextConfiguration,configuration);    if (Logging.requiresRestart(attribute.getFlags())) {      context.restartRequired();    }  }} @AT@ 6938 @LENGTH@ 31
------INS PrimitiveType@@boolean @TO@ VariableDeclarationStatement@@boolean reloadRequired=false; @AT@ 6938 @LENGTH@ 7
------INS VariableDeclarationFragment@@reloadRequired=false @TO@ VariableDeclarationStatement@@boolean reloadRequired=false; @AT@ 6946 @LENGTH@ 22
---------INS SimpleName@@reloadRequired @TO@ VariableDeclarationFragment@@reloadRequired=false @AT@ 6946 @LENGTH@ 14
---------INS BooleanLiteral@@false @TO@ VariableDeclarationFragment@@reloadRequired=false @AT@ 6963 @LENGTH@ 5
---INS IfStatement@@if (restartRequired) {  context.restartRequired();} else if (reloadRequired) {  context.reloadRequired();} @TO@ Block@@ThenBody:{  if (model.hasDefined(PROPERTIES.getName())) {    for (    Property property : PROPERTIES.resolveModelAttribute(context,model).asPropertyList()) {      configuration.removeProperty(property.getName());    }  }  for (  AttributeDefinition attribute : attributes) {    handleProperty(attribute,context,originalModel,logContextConfiguration,configuration);    if (Logging.requiresRestart(attribute.getFlags())) {      context.restartRequired();    }  }} @AT@ 7411 @LENGTH@ 194
------MOV Block@@ThenBody:{  context.restartRequired();} @TO@ IfStatement@@if (restartRequired) {  context.restartRequired();} else if (reloadRequired) {  context.reloadRequired();} @AT@ 6775 @LENGTH@ 82
------INS SimpleName@@restartRequired @TO@ IfStatement@@if (restartRequired) {  context.restartRequired();} else if (reloadRequired) {  context.reloadRequired();} @AT@ 7415 @LENGTH@ 15
------INS Block@@ElseBody:if (reloadRequired) {  context.reloadRequired();} @TO@ IfStatement@@if (restartRequired) {  context.restartRequired();} else if (reloadRequired) {  context.reloadRequired();} @AT@ 7512 @LENGTH@ 93
---------INS IfStatement@@if (reloadRequired) {  context.reloadRequired();} @TO@ Block@@ElseBody:if (reloadRequired) {  context.reloadRequired();} @AT@ 7512 @LENGTH@ 93
------------INS SimpleName@@reloadRequired @TO@ IfStatement@@if (reloadRequired) {  context.reloadRequired();} @AT@ 7516 @LENGTH@ 14
------------INS Block@@ThenBody:{  context.reloadRequired();} @TO@ IfStatement@@if (reloadRequired) {  context.reloadRequired();} @AT@ 7532 @LENGTH@ 73
---------------INS ExpressionStatement@@MethodInvocation:context.reloadRequired() @TO@ Block@@ThenBody:{  context.reloadRequired();} @AT@ 7558 @LENGTH@ 25
------------------INS MethodInvocation@@context.reloadRequired() @TO@ ExpressionStatement@@MethodInvocation:context.reloadRequired() @AT@ 7558 @LENGTH@ 24
---------------------INS SimpleName@@Name:context @TO@ MethodInvocation@@context.reloadRequired() @AT@ 7558 @LENGTH@ 7
---------------------INS SimpleName@@MethodName:reloadRequired:[] @TO@ MethodInvocation@@context.reloadRequired() @AT@ 7566 @LENGTH@ 16


UPD MethodDeclaration@@protected, void, MethodName:configureAdditionalDependencies, OperationContext context, ServiceBuilder<HttpListenerService> serviceBuilder, ModelNode model, HttpListenerService service, OperationFailedException,  @TO@ void, MethodName:configureAdditionalDependencies, OperationContext context, ServiceBuilder<? extends AbstractListenerService> serviceBuilder, ModelNode model, AbstractListenerService service, OperationFailedException,  @AT@ 1669 @LENGTH@ 210
---DEL Modifier@@protected @AT@ 1669 @LENGTH@ 9
---UPD SingleVariableDeclaration@@ServiceBuilder<HttpListenerService> serviceBuilder @TO@ ServiceBuilder<? extends AbstractListenerService> serviceBuilder @AT@ 1742 @LENGTH@ 50
------UPD ParameterizedType@@ServiceBuilder<HttpListenerService> @TO@ ServiceBuilder<? extends AbstractListenerService> @AT@ 1742 @LENGTH@ 35
---------INS WildcardType@@? @TO@ ParameterizedType@@ServiceBuilder<HttpListenerService> @AT@ 982 @LENGTH@ 33
---------DEL SimpleType@@HttpListenerService @AT@ 1757 @LENGTH@ 19
---UPD SingleVariableDeclaration@@HttpListenerService service @TO@ AbstractListenerService service @AT@ 1811 @LENGTH@ 27
------UPD SimpleType@@HttpListenerService @TO@ AbstractListenerService @AT@ 1811 @LENGTH@ 19


INS MethodDeclaration@@public, Object, MethodName:convertToMongoType, Object obj,  @TO@ TypeDeclaration@@[public, abstract]AbstractMongoConverter, [MongoConverter, InitializingBean] @AT@ 3967 @LENGTH@ 89
---INS Modifier@@public @TO@ MethodDeclaration@@public, Object, MethodName:convertToMongoType, Object obj,  @AT@ 3967 @LENGTH@ 6
---INS SimpleType@@Object @TO@ MethodDeclaration@@public, Object, MethodName:convertToMongoType, Object obj,  @AT@ 3974 @LENGTH@ 6
---INS SimpleName@@MethodName:convertToMongoType @TO@ MethodDeclaration@@public, Object, MethodName:convertToMongoType, Object obj,  @AT@ 3981 @LENGTH@ 18
---INS SingleVariableDeclaration@@Object obj @TO@ MethodDeclaration@@public, Object, MethodName:convertToMongoType, Object obj,  @AT@ 4000 @LENGTH@ 10
------INS SimpleType@@Object @TO@ SingleVariableDeclaration@@Object obj @AT@ 4000 @LENGTH@ 6
------INS SimpleName@@obj @TO@ SingleVariableDeclaration@@Object obj @AT@ 4007 @LENGTH@ 3
---INS ReturnStatement@@MethodInvocation:convertToMongoType(obj,null) @TO@ MethodDeclaration@@public, Object, MethodName:convertToMongoType, Object obj,  @AT@ 4016 @LENGTH@ 37
------INS MethodInvocation@@convertToMongoType(obj,null) @TO@ ReturnStatement@@MethodInvocation:convertToMongoType(obj,null) @AT@ 4023 @LENGTH@ 29
---------INS SimpleName@@MethodName:convertToMongoType:[obj, null] @TO@ MethodInvocation@@convertToMongoType(obj,null) @AT@ 4023 @LENGTH@ 29
------------INS SimpleName@@obj @TO@ SimpleName@@MethodName:convertToMongoType:[obj, null] @AT@ 4042 @LENGTH@ 3
------------INS NullLiteral@@null @TO@ SimpleName@@MethodName:convertToMongoType:[obj, null] @AT@ 4047 @LENGTH@ 4


INS ExpressionStatement@@MethodInvocation:bindy.setLocale("en") @TO@ MethodDeclaration@@public, void, MethodName:configure, Exception,  @AT@ 1940 @LENGTH@ 22
---INS MethodInvocation@@bindy.setLocale("en") @TO@ ExpressionStatement@@MethodInvocation:bindy.setLocale("en") @AT@ 1940 @LENGTH@ 21
------INS SimpleName@@Name:bindy @TO@ MethodInvocation@@bindy.setLocale("en") @AT@ 1940 @LENGTH@ 5
------INS SimpleName@@MethodName:setLocale:["en"] @TO@ MethodInvocation@@bindy.setLocale("en") @AT@ 1946 @LENGTH@ 15
---------INS StringLiteral@@"en" @TO@ SimpleName@@MethodName:setLocale:["en"] @AT@ 1956 @LENGTH@ 4


UPD IfStatement@@if (subscription != null) {  subscription.doClose();  subscription=null;} @TO@ if (subscription != null) {  if (subscription.isAlive()) {    subscription.doClose();  }  subscription=null;} @AT@ 4547 @LENGTH@ 82
---UPD Block@@ThenBody:{  subscription.doClose();  subscription=null;} @TO@ ThenBody:{  if (subscription.isAlive()) {    subscription.doClose();  }  subscription=null;} @AT@ 4573 @LENGTH@ 56
------INS IfStatement@@if (subscription.isAlive()) {  subscription.doClose();} @TO@ Block@@ThenBody:{  subscription.doClose();  subscription=null;} @AT@ 4578 @LENGTH@ 61
---------INS MethodInvocation@@subscription.isAlive() @TO@ IfStatement@@if (subscription.isAlive()) {  subscription.doClose();} @AT@ 4581 @LENGTH@ 22
------------INS SimpleName@@Name:subscription @TO@ MethodInvocation@@subscription.isAlive() @AT@ 4581 @LENGTH@ 12
------------INS SimpleName@@MethodName:isAlive:[] @TO@ MethodInvocation@@subscription.isAlive() @AT@ 4594 @LENGTH@ 9
---------INS Block@@ThenBody:{  subscription.doClose();} @TO@ IfStatement@@if (subscription.isAlive()) {  subscription.doClose();} @AT@ 4605 @LENGTH@ 34
------------MOV ExpressionStatement@@MethodInvocation:subscription.doClose() @TO@ Block@@ThenBody:{  subscription.doClose();} @AT@ 4578 @LENGTH@ 23


INS TryStatement@@try {  component.getAsynchronousExecutor().execute(task);}  finally {  WildFlySecurityManager.setCurrentContextClassLoaderPrivileged(oldClassLoader);} @TO@ MethodDeclaration@@public, Object, MethodName:processInvocation, final InterceptorContext context, Exception,  @AT@ 4771 @LENGTH@ 271
---MOV ExpressionStatement@@MethodInvocation:component.getAsynchronousExecutor().execute(task) @TO@ TryStatement@@try {  component.getAsynchronousExecutor().execute(task);}  finally {  WildFlySecurityManager.setCurrentContextClassLoaderPrivileged(oldClassLoader);} @AT@ 3991 @LENGTH@ 50
---INS Block@@FinallyBody:{  WildFlySecurityManager.setCurrentContextClassLoaderPrivileged(oldClassLoader);} @TO@ TryStatement@@try {  component.getAsynchronousExecutor().execute(task);}  finally {  WildFlySecurityManager.setCurrentContextClassLoaderPrivileged(oldClassLoader);} @AT@ 4874 @LENGTH@ 168
------INS ExpressionStatement@@MethodInvocation:WildFlySecurityManager.setCurrentContextClassLoaderPrivileged(oldClassLoader) @TO@ Block@@FinallyBody:{  WildFlySecurityManager.setCurrentContextClassLoaderPrivileged(oldClassLoader);} @AT@ 4946 @LENGTH@ 78
---------INS MethodInvocation@@WildFlySecurityManager.setCurrentContextClassLoaderPrivileged(oldClassLoader) @TO@ ExpressionStatement@@MethodInvocation:WildFlySecurityManager.setCurrentContextClassLoaderPrivileged(oldClassLoader) @AT@ 4946 @LENGTH@ 77
------------INS SimpleName@@Name:WildFlySecurityManager @TO@ MethodInvocation@@WildFlySecurityManager.setCurrentContextClassLoaderPrivileged(oldClassLoader) @AT@ 4946 @LENGTH@ 22
------------INS SimpleName@@MethodName:setCurrentContextClassLoaderPrivileged:[oldClassLoader] @TO@ MethodInvocation@@WildFlySecurityManager.setCurrentContextClassLoaderPrivileged(oldClassLoader) @AT@ 4969 @LENGTH@ 54
---------------INS SimpleName@@oldClassLoader @TO@ SimpleName@@MethodName:setCurrentContextClassLoaderPrivileged:[oldClassLoader] @AT@ 5008 @LENGTH@ 14


UPD MethodDeclaration@@public, static, ServiceController<SocketBinding>, MethodName:installBindingService, OperationContext context, ModelNode config, String name, UnknownHostException, OperationFailedException,  @TO@ public, static, ServiceController<SocketBinding>, MethodName:installBindingService, OperationContext context, ModelNode config, String name, final ServiceVerificationHandler verificationHandler, UnknownHostException, OperationFailedException,  @AT@ 4414 @LENGTH@ 2053
---INS SingleVariableDeclaration@@final ServiceVerificationHandler verificationHandler @TO@ MethodDeclaration@@public, static, ServiceController<SocketBinding>, MethodName:installBindingService, OperationContext context, ModelNode config, String name, UnknownHostException, OperationFailedException,  @AT@ 4482 @LENGTH@ 52
------INS Modifier@@final @TO@ SingleVariableDeclaration@@final ServiceVerificationHandler verificationHandler @AT@ 4482 @LENGTH@ 5
------INS SimpleType@@ServiceVerificationHandler @TO@ SingleVariableDeclaration@@final ServiceVerificationHandler verificationHandler @AT@ 4488 @LENGTH@ 26
------INS SimpleName@@verificationHandler @TO@ SingleVariableDeclaration@@final ServiceVerificationHandler verificationHandler @AT@ 4515 @LENGTH@ 19
---INS IfStatement@@if (verificationHandler != null) {  builder.addListener(verificationHandler);} @TO@ MethodDeclaration@@public, static, ServiceController<SocketBinding>, MethodName:installBindingService, OperationContext context, ModelNode config, String name, UnknownHostException, OperationFailedException,  @AT@ 6251 @LENGTH@ 97
------INS InfixExpression@@verificationHandler != null @TO@ IfStatement@@if (verificationHandler != null) {  builder.addListener(verificationHandler);} @AT@ 6254 @LENGTH@ 27
---------INS SimpleName@@verificationHandler @TO@ InfixExpression@@verificationHandler != null @AT@ 6254 @LENGTH@ 19
---------INS Operator@@!= @TO@ InfixExpression@@verificationHandler != null @AT@ 6273 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@verificationHandler != null @AT@ 6277 @LENGTH@ 4
------INS Block@@ThenBody:{  builder.addListener(verificationHandler);} @TO@ IfStatement@@if (verificationHandler != null) {  builder.addListener(verificationHandler);} @AT@ 6283 @LENGTH@ 65
---------INS ExpressionStatement@@MethodInvocation:builder.addListener(verificationHandler) @TO@ Block@@ThenBody:{  builder.addListener(verificationHandler);} @AT@ 6297 @LENGTH@ 41
------------INS MethodInvocation@@builder.addListener(verificationHandler) @TO@ ExpressionStatement@@MethodInvocation:builder.addListener(verificationHandler) @AT@ 6297 @LENGTH@ 40
---------------INS SimpleName@@Name:builder @TO@ MethodInvocation@@builder.addListener(verificationHandler) @AT@ 6297 @LENGTH@ 7
---------------INS SimpleName@@MethodName:addListener:[verificationHandler] @TO@ MethodInvocation@@builder.addListener(verificationHandler) @AT@ 6305 @LENGTH@ 32
------------------INS SimpleName@@verificationHandler @TO@ SimpleName@@MethodName:addListener:[verificationHandler] @AT@ 6317 @LENGTH@ 19


UPD ReturnStatement@@MethodInvocation:new SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ssZZZ").parse(date).getTime() @TO@ MethodInvocation:new SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ssXXX").parse(date).getTime() @AT@ 33625 @LENGTH@ 78
---UPD MethodInvocation@@new SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ssZZZ").parse(date).getTime() @TO@ new SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ssXXX").parse(date).getTime() @AT@ 33632 @LENGTH@ 70
------UPD ClassInstanceCreation@@SimpleDateFormat["yyyy-MM-dd'T'HH:mm:ssZZZ"] @TO@ SimpleDateFormat["yyyy-MM-dd'T'HH:mm:ssXXX"] @AT@ 33632 @LENGTH@ 48
---------UPD StringLiteral@@"yyyy-MM-dd'T'HH:mm:ssZZZ" @TO@ "yyyy-MM-dd'T'HH:mm:ssXXX" @AT@ 33653 @LENGTH@ 26


UPD ExpressionStatement@@Assignment:this.logger=new TransformersLogger(originalModel.target) @TO@ Assignment:this.logger=TransformersLogger.getLogger(originalModel.target) @AT@ 4158 @LENGTH@ 59
---UPD Assignment@@this.logger=new TransformersLogger(originalModel.target) @TO@ this.logger=TransformersLogger.getLogger(originalModel.target) @AT@ 4158 @LENGTH@ 58
------INS MethodInvocation@@TransformersLogger.getLogger(originalModel.target) @TO@ Assignment@@this.logger=new TransformersLogger(originalModel.target) @AT@ 4172 @LENGTH@ 50
---------INS SimpleName@@Name:TransformersLogger @TO@ MethodInvocation@@TransformersLogger.getLogger(originalModel.target) @AT@ 4172 @LENGTH@ 18
---------INS SimpleName@@MethodName:getLogger:[originalModel.target] @TO@ MethodInvocation@@TransformersLogger.getLogger(originalModel.target) @AT@ 4191 @LENGTH@ 31
------------INS QualifiedName@@originalModel.target @TO@ SimpleName@@MethodName:getLogger:[originalModel.target] @AT@ 4201 @LENGTH@ 20
---------------MOV SimpleName@@originalModel @TO@ QualifiedName@@originalModel.target @AT@ 4195 @LENGTH@ 13
---------------MOV SimpleName@@target @TO@ QualifiedName@@originalModel.target @AT@ 4209 @LENGTH@ 6
------DEL ClassInstanceCreation@@TransformersLogger[originalModel.target] @AT@ 4172 @LENGTH@ 44
---------DEL New@@new @AT@ 4172 @LENGTH@ 3
---------DEL SimpleType@@TransformersLogger @AT@ 4176 @LENGTH@ 18
---------DEL QualifiedName@@originalModel.target @AT@ 4195 @LENGTH@ 20


INS IfStatement@@if (resourceModel.hasDefined(attribute.getName())) {  writer.writeStartElement(attribute.getXmlName());  String module=resourceModel.get(attribute.getName()).asString();  int separatorIndex=module.indexOf(":");  if (separatorIndex != -1) {    writer.writeAttribute("id",module.substring(0,separatorIndex));    writer.writeAttribute("slot",module.substring(separatorIndex + 1));  } else {    writer.writeAttribute("id",module);    if (marshallDefault) {      writer.writeAttribute("slot","main");    }  }  writer.writeEndElement();} @TO@ MethodDeclaration@@public, void, MethodName:marshallAsElement, AttributeDefinition attribute, ModelNode resourceModel, boolean marshallDefault, XMLStreamWriter writer, XMLStreamException,  @AT@ 8570 @LENGTH@ 874
---INS MethodInvocation@@resourceModel.hasDefined(attribute.getName()) @TO@ IfStatement@@if (resourceModel.hasDefined(attribute.getName())) {  writer.writeStartElement(attribute.getXmlName());  String module=resourceModel.get(attribute.getName()).asString();  int separatorIndex=module.indexOf(":");  if (separatorIndex != -1) {    writer.writeAttribute("id",module.substring(0,separatorIndex));    writer.writeAttribute("slot",module.substring(separatorIndex + 1));  } else {    writer.writeAttribute("id",module);    if (marshallDefault) {      writer.writeAttribute("slot","main");    }  }  writer.writeEndElement();} @AT@ 8574 @LENGTH@ 45
------INS SimpleName@@Name:resourceModel @TO@ MethodInvocation@@resourceModel.hasDefined(attribute.getName()) @AT@ 8574 @LENGTH@ 13
------INS SimpleName@@MethodName:hasDefined:[attribute.getName()] @TO@ MethodInvocation@@resourceModel.hasDefined(attribute.getName()) @AT@ 8588 @LENGTH@ 31
---------INS MethodInvocation@@attribute.getName() @TO@ SimpleName@@MethodName:hasDefined:[attribute.getName()] @AT@ 8599 @LENGTH@ 19
------------INS SimpleName@@Name:attribute @TO@ MethodInvocation@@attribute.getName() @AT@ 8599 @LENGTH@ 9
------------INS SimpleName@@MethodName:getName:[] @TO@ MethodInvocation@@attribute.getName() @AT@ 8609 @LENGTH@ 9
---INS Block@@ThenBody:{  writer.writeStartElement(attribute.getXmlName());  String module=resourceModel.get(attribute.getName()).asString();  int separatorIndex=module.indexOf(":");  if (separatorIndex != -1) {    writer.writeAttribute("id",module.substring(0,separatorIndex));    writer.writeAttribute("slot",module.substring(separatorIndex + 1));  } else {    writer.writeAttribute("id",module);    if (marshallDefault) {      writer.writeAttribute("slot","main");    }  }  writer.writeEndElement();} @TO@ IfStatement@@if (resourceModel.hasDefined(attribute.getName())) {  writer.writeStartElement(attribute.getXmlName());  String module=resourceModel.get(attribute.getName()).asString();  int separatorIndex=module.indexOf(":");  if (separatorIndex != -1) {    writer.writeAttribute("id",module.substring(0,separatorIndex));    writer.writeAttribute("slot",module.substring(separatorIndex + 1));  } else {    writer.writeAttribute("id",module);    if (marshallDefault) {      writer.writeAttribute("slot","main");    }  }  writer.writeEndElement();} @AT@ 8621 @LENGTH@ 823
------INS ExpressionStatement@@MethodInvocation:writer.writeStartElement(attribute.getXmlName()) @TO@ Block@@ThenBody:{  writer.writeStartElement(attribute.getXmlName());  String module=resourceModel.get(attribute.getName()).asString();  int separatorIndex=module.indexOf(":");  if (separatorIndex != -1) {    writer.writeAttribute("id",module.substring(0,separatorIndex));    writer.writeAttribute("slot",module.substring(separatorIndex + 1));  } else {    writer.writeAttribute("id",module);    if (marshallDefault) {      writer.writeAttribute("slot","main");    }  }  writer.writeEndElement();} @AT@ 8647 @LENGTH@ 49
---------INS MethodInvocation@@writer.writeStartElement(attribute.getXmlName()) @TO@ ExpressionStatement@@MethodInvocation:writer.writeStartElement(attribute.getXmlName()) @AT@ 8647 @LENGTH@ 48
------------INS SimpleName@@Name:writer @TO@ MethodInvocation@@writer.writeStartElement(attribute.getXmlName()) @AT@ 8647 @LENGTH@ 6
------------INS SimpleName@@MethodName:writeStartElement:[attribute.getXmlName()] @TO@ MethodInvocation@@writer.writeStartElement(attribute.getXmlName()) @AT@ 8654 @LENGTH@ 41
---------------INS MethodInvocation@@attribute.getXmlName() @TO@ SimpleName@@MethodName:writeStartElement:[attribute.getXmlName()] @AT@ 8672 @LENGTH@ 22
------------------INS SimpleName@@Name:attribute @TO@ MethodInvocation@@attribute.getXmlName() @AT@ 8672 @LENGTH@ 9
------------------INS SimpleName@@MethodName:getXmlName:[] @TO@ MethodInvocation@@attribute.getXmlName() @AT@ 8682 @LENGTH@ 12
------INS VariableDeclarationStatement@@String module=resourceModel.get(attribute.getName()).asString(); @TO@ Block@@ThenBody:{  writer.writeStartElement(attribute.getXmlName());  String module=resourceModel.get(attribute.getName()).asString();  int separatorIndex=module.indexOf(":");  if (separatorIndex != -1) {    writer.writeAttribute("id",module.substring(0,separatorIndex));    writer.writeAttribute("slot",module.substring(separatorIndex + 1));  } else {    writer.writeAttribute("id",module);    if (marshallDefault) {      writer.writeAttribute("slot","main");    }  }  writer.writeEndElement();} @AT@ 8721 @LENGTH@ 66
---------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String module=resourceModel.get(attribute.getName()).asString(); @AT@ 8721 @LENGTH@ 6
---------INS VariableDeclarationFragment@@module=resourceModel.get(attribute.getName()).asString() @TO@ VariableDeclarationStatement@@String module=resourceModel.get(attribute.getName()).asString(); @AT@ 8728 @LENGTH@ 58
------------INS SimpleName@@module @TO@ VariableDeclarationFragment@@module=resourceModel.get(attribute.getName()).asString() @AT@ 8728 @LENGTH@ 6
------------INS MethodInvocation@@resourceModel.get(attribute.getName()).asString() @TO@ VariableDeclarationFragment@@module=resourceModel.get(attribute.getName()).asString() @AT@ 8737 @LENGTH@ 49
---------------INS MethodInvocation@@MethodName:get:[attribute.getName()] @TO@ MethodInvocation@@resourceModel.get(attribute.getName()).asString() @AT@ 8737 @LENGTH@ 38
------------------INS MethodInvocation@@attribute.getName() @TO@ MethodInvocation@@MethodName:get:[attribute.getName()] @AT@ 8755 @LENGTH@ 19
---------------------INS SimpleName@@Name:attribute @TO@ MethodInvocation@@attribute.getName() @AT@ 8755 @LENGTH@ 9
---------------------INS SimpleName@@MethodName:getName:[] @TO@ MethodInvocation@@attribute.getName() @AT@ 8765 @LENGTH@ 9
---------------INS SimpleName@@Name:resourceModel @TO@ MethodInvocation@@resourceModel.get(attribute.getName()).asString() @AT@ 8737 @LENGTH@ 13
---------------INS SimpleName@@MethodName:asString:[] @TO@ MethodInvocation@@resourceModel.get(attribute.getName()).asString() @AT@ 8776 @LENGTH@ 10
------INS VariableDeclarationStatement@@int separatorIndex=module.indexOf(":"); @TO@ Block@@ThenBody:{  writer.writeStartElement(attribute.getXmlName());  String module=resourceModel.get(attribute.getName()).asString();  int separatorIndex=module.indexOf(":");  if (separatorIndex != -1) {    writer.writeAttribute("id",module.substring(0,separatorIndex));    writer.writeAttribute("slot",module.substring(separatorIndex + 1));  } else {    writer.writeAttribute("id",module);    if (marshallDefault) {      writer.writeAttribute("slot","main");    }  }  writer.writeEndElement();} @AT@ 8812 @LENGTH@ 41
---------INS PrimitiveType@@int @TO@ VariableDeclarationStatement@@int separatorIndex=module.indexOf(":"); @AT@ 8812 @LENGTH@ 3
---------INS VariableDeclarationFragment@@separatorIndex=module.indexOf(":") @TO@ VariableDeclarationStatement@@int separatorIndex=module.indexOf(":"); @AT@ 8816 @LENGTH@ 36
------------INS SimpleName@@separatorIndex @TO@ VariableDeclarationFragment@@separatorIndex=module.indexOf(":") @AT@ 8816 @LENGTH@ 14
------------INS MethodInvocation@@module.indexOf(":") @TO@ VariableDeclarationFragment@@separatorIndex=module.indexOf(":") @AT@ 8833 @LENGTH@ 19
---------------INS SimpleName@@Name:module @TO@ MethodInvocation@@module.indexOf(":") @AT@ 8833 @LENGTH@ 6
---------------INS SimpleName@@MethodName:indexOf:[":"] @TO@ MethodInvocation@@module.indexOf(":") @AT@ 8840 @LENGTH@ 12
------------------INS StringLiteral@@":" @TO@ SimpleName@@MethodName:indexOf:[":"] @AT@ 8848 @LENGTH@ 3
------INS IfStatement@@if (separatorIndex != -1) {  writer.writeAttribute("id",module.substring(0,separatorIndex));  writer.writeAttribute("slot",module.substring(separatorIndex + 1));} else {  writer.writeAttribute("id",module);  if (marshallDefault) {    writer.writeAttribute("slot","main");  }} @TO@ Block@@ThenBody:{  writer.writeStartElement(attribute.getXmlName());  String module=resourceModel.get(attribute.getName()).asString();  int separatorIndex=module.indexOf(":");  if (separatorIndex != -1) {    writer.writeAttribute("id",module.substring(0,separatorIndex));    writer.writeAttribute("slot",module.substring(separatorIndex + 1));  } else {    writer.writeAttribute("id",module);    if (marshallDefault) {      writer.writeAttribute("slot","main");    }  }  writer.writeEndElement();} @AT@ 8878 @LENGTH@ 493
---------INS InfixExpression@@separatorIndex != -1 @TO@ IfStatement@@if (separatorIndex != -1) {  writer.writeAttribute("id",module.substring(0,separatorIndex));  writer.writeAttribute("slot",module.substring(separatorIndex + 1));} else {  writer.writeAttribute("id",module);  if (marshallDefault) {    writer.writeAttribute("slot","main");  }} @AT@ 8882 @LENGTH@ 20
------------INS SimpleName@@separatorIndex @TO@ InfixExpression@@separatorIndex != -1 @AT@ 8882 @LENGTH@ 14
------------INS Operator@@!= @TO@ InfixExpression@@separatorIndex != -1 @AT@ 8896 @LENGTH@ 2
------------INS PrefixExpression@@-1 @TO@ InfixExpression@@separatorIndex != -1 @AT@ 8900 @LENGTH@ 2
---------------INS Operator@@- @TO@ PrefixExpression@@-1 @AT@ 8900 @LENGTH@ 1
---------------INS NumberLiteral@@1 @TO@ PrefixExpression@@-1 @AT@ 8901 @LENGTH@ 1
---------INS Block@@ThenBody:{  writer.writeAttribute("id",module.substring(0,separatorIndex));  writer.writeAttribute("slot",module.substring(separatorIndex + 1));} @TO@ IfStatement@@if (separatorIndex != -1) {  writer.writeAttribute("id",module.substring(0,separatorIndex));  writer.writeAttribute("slot",module.substring(separatorIndex + 1));} else {  writer.writeAttribute("id",module);  if (marshallDefault) {    writer.writeAttribute("slot","main");  }} @AT@ 8904 @LENGTH@ 218
------------INS ExpressionStatement@@MethodInvocation:writer.writeAttribute("id",module.substring(0,separatorIndex)) @TO@ Block@@ThenBody:{  writer.writeAttribute("id",module.substring(0,separatorIndex));  writer.writeAttribute("slot",module.substring(separatorIndex + 1));} @AT@ 8934 @LENGTH@ 65
---------------INS MethodInvocation@@writer.writeAttribute("id",module.substring(0,separatorIndex)) @TO@ ExpressionStatement@@MethodInvocation:writer.writeAttribute("id",module.substring(0,separatorIndex)) @AT@ 8934 @LENGTH@ 64
------------------INS SimpleName@@Name:writer @TO@ MethodInvocation@@writer.writeAttribute("id",module.substring(0,separatorIndex)) @AT@ 8934 @LENGTH@ 6
------------------INS SimpleName@@MethodName:writeAttribute:["id", module.substring(0,separatorIndex)] @TO@ MethodInvocation@@writer.writeAttribute("id",module.substring(0,separatorIndex)) @AT@ 8941 @LENGTH@ 57
---------------------INS StringLiteral@@"id" @TO@ SimpleName@@MethodName:writeAttribute:["id", module.substring(0,separatorIndex)] @AT@ 8956 @LENGTH@ 4
---------------------INS MethodInvocation@@module.substring(0,separatorIndex) @TO@ SimpleName@@MethodName:writeAttribute:["id", module.substring(0,separatorIndex)] @AT@ 8962 @LENGTH@ 35
------------------------INS SimpleName@@Name:module @TO@ MethodInvocation@@module.substring(0,separatorIndex) @AT@ 8962 @LENGTH@ 6
------------------------INS SimpleName@@MethodName:substring:[0, separatorIndex] @TO@ MethodInvocation@@module.substring(0,separatorIndex) @AT@ 8969 @LENGTH@ 28
---------------------------INS NumberLiteral@@0 @TO@ SimpleName@@MethodName:substring:[0, separatorIndex] @AT@ 8979 @LENGTH@ 1
---------------------------INS SimpleName@@separatorIndex @TO@ SimpleName@@MethodName:substring:[0, separatorIndex] @AT@ 8982 @LENGTH@ 14
------------INS ExpressionStatement@@MethodInvocation:writer.writeAttribute("slot",module.substring(separatorIndex + 1)) @TO@ Block@@ThenBody:{  writer.writeAttribute("id",module.substring(0,separatorIndex));  writer.writeAttribute("slot",module.substring(separatorIndex + 1));} @AT@ 9028 @LENGTH@ 68
---------------INS MethodInvocation@@writer.writeAttribute("slot",module.substring(separatorIndex + 1)) @TO@ ExpressionStatement@@MethodInvocation:writer.writeAttribute("slot",module.substring(separatorIndex + 1)) @AT@ 9028 @LENGTH@ 67
------------------INS SimpleName@@Name:writer @TO@ MethodInvocation@@writer.writeAttribute("slot",module.substring(separatorIndex + 1)) @AT@ 9028 @LENGTH@ 6
------------------INS SimpleName@@MethodName:writeAttribute:["slot", module.substring(separatorIndex + 1)] @TO@ MethodInvocation@@writer.writeAttribute("slot",module.substring(separatorIndex + 1)) @AT@ 9035 @LENGTH@ 60
---------------------INS StringLiteral@@"slot" @TO@ SimpleName@@MethodName:writeAttribute:["slot", module.substring(separatorIndex + 1)] @AT@ 9050 @LENGTH@ 6
---------------------INS MethodInvocation@@module.substring(separatorIndex + 1) @TO@ SimpleName@@MethodName:writeAttribute:["slot", module.substring(separatorIndex + 1)] @AT@ 9058 @LENGTH@ 36
------------------------INS SimpleName@@Name:module @TO@ MethodInvocation@@module.substring(separatorIndex + 1) @AT@ 9058 @LENGTH@ 6
------------------------INS SimpleName@@MethodName:substring:[separatorIndex + 1] @TO@ MethodInvocation@@module.substring(separatorIndex + 1) @AT@ 9065 @LENGTH@ 29
---------------------------INS InfixExpression@@separatorIndex + 1 @TO@ SimpleName@@MethodName:substring:[separatorIndex + 1] @AT@ 9075 @LENGTH@ 18
------------------------------INS SimpleName@@separatorIndex @TO@ InfixExpression@@separatorIndex + 1 @AT@ 9075 @LENGTH@ 14
------------------------------INS Operator@@+ @TO@ InfixExpression@@separatorIndex + 1 @AT@ 9089 @LENGTH@ 1
------------------------------INS NumberLiteral@@1 @TO@ InfixExpression@@separatorIndex + 1 @AT@ 9092 @LENGTH@ 1
---------INS Block@@ElseBody:{  writer.writeAttribute("id",module);  if (marshallDefault) {    writer.writeAttribute("slot","main");  }} @TO@ IfStatement@@if (separatorIndex != -1) {  writer.writeAttribute("id",module.substring(0,separatorIndex));  writer.writeAttribute("slot",module.substring(separatorIndex + 1));} else {  writer.writeAttribute("id",module);  if (marshallDefault) {    writer.writeAttribute("slot","main");  }} @AT@ 9128 @LENGTH@ 243
------------INS ExpressionStatement@@MethodInvocation:writer.writeAttribute("id",module) @TO@ Block@@ElseBody:{  writer.writeAttribute("id",module);  if (marshallDefault) {    writer.writeAttribute("slot","main");  }} @AT@ 9158 @LENGTH@ 36
---------------INS MethodInvocation@@writer.writeAttribute("id",module) @TO@ ExpressionStatement@@MethodInvocation:writer.writeAttribute("id",module) @AT@ 9158 @LENGTH@ 35
------------------INS SimpleName@@Name:writer @TO@ MethodInvocation@@writer.writeAttribute("id",module) @AT@ 9158 @LENGTH@ 6
------------------INS SimpleName@@MethodName:writeAttribute:["id", module] @TO@ MethodInvocation@@writer.writeAttribute("id",module) @AT@ 9165 @LENGTH@ 28
---------------------INS StringLiteral@@"id" @TO@ SimpleName@@MethodName:writeAttribute:["id", module] @AT@ 9180 @LENGTH@ 4
---------------------INS SimpleName@@module @TO@ SimpleName@@MethodName:writeAttribute:["id", module] @AT@ 9186 @LENGTH@ 6
------------INS IfStatement@@if (marshallDefault) {  writer.writeAttribute("slot","main");} @TO@ Block@@ElseBody:{  writer.writeAttribute("id",module);  if (marshallDefault) {    writer.writeAttribute("slot","main");  }} @AT@ 9223 @LENGTH@ 122
---------------INS SimpleName@@marshallDefault @TO@ IfStatement@@if (marshallDefault) {  writer.writeAttribute("slot","main");} @AT@ 9226 @LENGTH@ 15
---------------INS Block@@ThenBody:{  writer.writeAttribute("slot","main");} @TO@ IfStatement@@if (marshallDefault) {  writer.writeAttribute("slot","main");} @AT@ 9243 @LENGTH@ 102
------------------INS ExpressionStatement@@MethodInvocation:writer.writeAttribute("slot","main") @TO@ Block@@ThenBody:{  writer.writeAttribute("slot","main");} @AT@ 9277 @LENGTH@ 38
---------------------INS MethodInvocation@@writer.writeAttribute("slot","main") @TO@ ExpressionStatement@@MethodInvocation:writer.writeAttribute("slot","main") @AT@ 9277 @LENGTH@ 37
------------------------INS SimpleName@@Name:writer @TO@ MethodInvocation@@writer.writeAttribute("slot","main") @AT@ 9277 @LENGTH@ 6
------------------------INS SimpleName@@MethodName:writeAttribute:["slot", "main"] @TO@ MethodInvocation@@writer.writeAttribute("slot","main") @AT@ 9284 @LENGTH@ 30
---------------------------INS StringLiteral@@"slot" @TO@ SimpleName@@MethodName:writeAttribute:["slot", "main"] @AT@ 9299 @LENGTH@ 6
---------------------------INS StringLiteral@@"main" @TO@ SimpleName@@MethodName:writeAttribute:["slot", "main"] @AT@ 9307 @LENGTH@ 6
------INS ExpressionStatement@@MethodInvocation:writer.writeEndElement() @TO@ Block@@ThenBody:{  writer.writeStartElement(attribute.getXmlName());  String module=resourceModel.get(attribute.getName()).asString();  int separatorIndex=module.indexOf(":");  if (separatorIndex != -1) {    writer.writeAttribute("id",module.substring(0,separatorIndex));    writer.writeAttribute("slot",module.substring(separatorIndex + 1));  } else {    writer.writeAttribute("id",module);    if (marshallDefault) {      writer.writeAttribute("slot","main");    }  }  writer.writeEndElement();} @AT@ 9397 @LENGTH@ 25
---------INS MethodInvocation@@writer.writeEndElement() @TO@ ExpressionStatement@@MethodInvocation:writer.writeEndElement() @AT@ 9397 @LENGTH@ 24
------------INS SimpleName@@Name:writer @TO@ MethodInvocation@@writer.writeEndElement() @AT@ 9397 @LENGTH@ 6
------------INS SimpleName@@MethodName:writeEndElement:[] @TO@ MethodInvocation@@writer.writeEndElement() @AT@ 9404 @LENGTH@ 17


UPD IfStatement@@if (model.get(ARCHIVE.getName()).isDefined()) {  model.get(ARCHIVE.getName()).set(archiveOrModuleName);  RaOperationUtil.installRaServices(context,verificationHandler,name,resourceAdapter);} else {  model.get(MODULE.getName()).set(archiveOrModuleName);  RaOperationUtil.installRaServicesAndDeployFromModule(context,verificationHandler,name,resourceAdapter,archiveOrModuleName);} @TO@ if (model.get(ARCHIVE.getName()).isDefined()) {  RaOperationUtil.installRaServices(context,verificationHandler,name,resourceAdapter);} else {  RaOperationUtil.installRaServicesAndDeployFromModule(context,verificationHandler,name,resourceAdapter,archiveOrModuleName);} @AT@ 3741 @LENGTH@ 447
---UPD Block@@ThenBody:{  model.get(ARCHIVE.getName()).set(archiveOrModuleName);  RaOperationUtil.installRaServices(context,verificationHandler,name,resourceAdapter);} @TO@ ThenBody:{  RaOperationUtil.installRaServices(context,verificationHandler,name,resourceAdapter);} @AT@ 3787 @LENGTH@ 178
------DEL ExpressionStatement@@MethodInvocation:model.get(ARCHIVE.getName()).set(archiveOrModuleName) @AT@ 3801 @LENGTH@ 54
---------DEL MethodInvocation@@model.get(ARCHIVE.getName()).set(archiveOrModuleName) @AT@ 3801 @LENGTH@ 53
------------DEL MethodInvocation@@MethodName:get:[ARCHIVE.getName()] @AT@ 3801 @LENGTH@ 28
---------------DEL MethodInvocation@@ARCHIVE.getName() @AT@ 3811 @LENGTH@ 17
------------------DEL SimpleName@@Name:ARCHIVE @AT@ 3811 @LENGTH@ 7
------------------DEL SimpleName@@MethodName:getName:[] @AT@ 3819 @LENGTH@ 9
------------DEL SimpleName@@Name:model @AT@ 3801 @LENGTH@ 5
------------DEL SimpleName@@MethodName:set:[archiveOrModuleName] @AT@ 3830 @LENGTH@ 24
---------------DEL SimpleName@@archiveOrModuleName @AT@ 3834 @LENGTH@ 19
---UPD Block@@ElseBody:{  model.get(MODULE.getName()).set(archiveOrModuleName);  RaOperationUtil.installRaServicesAndDeployFromModule(context,verificationHandler,name,resourceAdapter,archiveOrModuleName);} @TO@ ElseBody:{  RaOperationUtil.installRaServicesAndDeployFromModule(context,verificationHandler,name,resourceAdapter,archiveOrModuleName);} @AT@ 3971 @LENGTH@ 217
------DEL ExpressionStatement@@MethodInvocation:model.get(MODULE.getName()).set(archiveOrModuleName) @AT@ 3985 @LENGTH@ 53
---------DEL MethodInvocation@@model.get(MODULE.getName()).set(archiveOrModuleName) @AT@ 3985 @LENGTH@ 52
------------DEL MethodInvocation@@MethodName:get:[MODULE.getName()] @AT@ 3985 @LENGTH@ 27
---------------DEL MethodInvocation@@MODULE.getName() @AT@ 3995 @LENGTH@ 16
------------------DEL SimpleName@@Name:MODULE @AT@ 3995 @LENGTH@ 6
------------------DEL SimpleName@@MethodName:getName:[] @AT@ 4002 @LENGTH@ 9
------------DEL SimpleName@@Name:model @AT@ 3985 @LENGTH@ 5
------------DEL SimpleName@@MethodName:set:[archiveOrModuleName] @AT@ 4013 @LENGTH@ 24
---------------DEL SimpleName@@archiveOrModuleName @AT@ 4017 @LENGTH@ 19


INS IfStatement@@if (config.isReturnBodyOnUpdate()) {  PersistentEntityResource per=PersistentEntityResource.wrap(repoRequest.getPersistentEntity(),obj,repoRequest.getBaseUri());  per.add(repoRequest.buildEntitySelfLink(obj,conversionService));  return resourceResponse(null,per,HttpStatus.OK);} else {  return resourceResponse(null,null,HttpStatus.NO_CONTENT);} @TO@ MethodDeclaration@@public, ResponseEntity<Resource<?>>, MethodName:updateEntity, RepositoryRestRequest repoRequest, PersistentEntityResource<?> incoming, @PathVariable String id, ResourceNotFoundException,  @AT@ 12364 @LENGTH@ 637
---INS MethodInvocation@@config.isReturnBodyOnUpdate() @TO@ IfStatement@@if (config.isReturnBodyOnUpdate()) {  PersistentEntityResource per=PersistentEntityResource.wrap(repoRequest.getPersistentEntity(),obj,repoRequest.getBaseUri());  per.add(repoRequest.buildEntitySelfLink(obj,conversionService));  return resourceResponse(null,per,HttpStatus.OK);} else {  return resourceResponse(null,null,HttpStatus.NO_CONTENT);} @AT@ 12367 @LENGTH@ 29
------INS SimpleName@@Name:config @TO@ MethodInvocation@@config.isReturnBodyOnUpdate() @AT@ 12367 @LENGTH@ 6
------INS SimpleName@@MethodName:isReturnBodyOnUpdate:[] @TO@ MethodInvocation@@config.isReturnBodyOnUpdate() @AT@ 12374 @LENGTH@ 22
---INS Block@@ThenBody:{  PersistentEntityResource per=PersistentEntityResource.wrap(repoRequest.getPersistentEntity(),obj,repoRequest.getBaseUri());  per.add(repoRequest.buildEntitySelfLink(obj,conversionService));  return resourceResponse(null,per,HttpStatus.OK);} @TO@ IfStatement@@if (config.isReturnBodyOnUpdate()) {  PersistentEntityResource per=PersistentEntityResource.wrap(repoRequest.getPersistentEntity(),obj,repoRequest.getBaseUri());  per.add(repoRequest.buildEntitySelfLink(obj,conversionService));  return resourceResponse(null,per,HttpStatus.OK);} else {  return resourceResponse(null,null,HttpStatus.NO_CONTENT);} @AT@ 12398 @LENGTH@ 464
------MOV VariableDeclarationStatement@@PersistentEntityResource per=PersistentEntityResource.wrap(repoRequest.getPersistentEntity(),obj,repoRequest.getBaseUri()); @TO@ Block@@ThenBody:{  PersistentEntityResource per=PersistentEntityResource.wrap(repoRequest.getPersistentEntity(),obj,repoRequest.getBaseUri());  per.add(repoRequest.buildEntitySelfLink(obj,conversionService));  return resourceResponse(null,per,HttpStatus.OK);} @AT@ 12088 @LENGTH@ 257
------MOV ExpressionStatement@@MethodInvocation:per.add(repoRequest.buildEntitySelfLink(obj,conversionService)) @TO@ Block@@ThenBody:{  PersistentEntityResource per=PersistentEntityResource.wrap(repoRequest.getPersistentEntity(),obj,repoRequest.getBaseUri());  per.add(repoRequest.buildEntitySelfLink(obj,conversionService));  return resourceResponse(null,per,HttpStatus.OK);} @AT@ 12350 @LENGTH@ 65
------MOV ReturnStatement@@MethodInvocation:resourceResponse(null,per,HttpStatus.OK) @TO@ Block@@ThenBody:{  PersistentEntityResource per=PersistentEntityResource.wrap(repoRequest.getPersistentEntity(),obj,repoRequest.getBaseUri());  per.add(repoRequest.buildEntitySelfLink(obj,conversionService));  return resourceResponse(null,per,HttpStatus.OK);} @AT@ 12420 @LENGTH@ 106
---INS Block@@ElseBody:{  return resourceResponse(null,null,HttpStatus.NO_CONTENT);} @TO@ IfStatement@@if (config.isReturnBodyOnUpdate()) {  PersistentEntityResource per=PersistentEntityResource.wrap(repoRequest.getPersistentEntity(),obj,repoRequest.getBaseUri());  per.add(repoRequest.buildEntitySelfLink(obj,conversionService));  return resourceResponse(null,per,HttpStatus.OK);} else {  return resourceResponse(null,null,HttpStatus.NO_CONTENT);} @AT@ 12868 @LENGTH@ 133
------INS ReturnStatement@@MethodInvocation:resourceResponse(null,null,HttpStatus.NO_CONTENT) @TO@ Block@@ElseBody:{  return resourceResponse(null,null,HttpStatus.NO_CONTENT);} @AT@ 12876 @LENGTH@ 119
---------INS MethodInvocation@@resourceResponse(null,null,HttpStatus.NO_CONTENT) @TO@ ReturnStatement@@MethodInvocation:resourceResponse(null,null,HttpStatus.NO_CONTENT) @AT@ 12883 @LENGTH@ 111
------------INS SimpleName@@MethodName:resourceResponse:[null, null, HttpStatus.NO_CONTENT] @TO@ MethodInvocation@@resourceResponse(null,null,HttpStatus.NO_CONTENT) @AT@ 12883 @LENGTH@ 111
---------------INS NullLiteral@@null @TO@ SimpleName@@MethodName:resourceResponse:[null, null, HttpStatus.NO_CONTENT] @AT@ 12900 @LENGTH@ 4
---------------INS NullLiteral@@null @TO@ SimpleName@@MethodName:resourceResponse:[null, null, HttpStatus.NO_CONTENT] @AT@ 12936 @LENGTH@ 4
---------------INS QualifiedName@@HttpStatus.NO_CONTENT @TO@ SimpleName@@MethodName:resourceResponse:[null, null, HttpStatus.NO_CONTENT] @AT@ 12972 @LENGTH@ 21
------------------INS SimpleName@@HttpStatus @TO@ QualifiedName@@HttpStatus.NO_CONTENT @AT@ 12972 @LENGTH@ 10
------------------INS SimpleName@@NO_CONTENT @TO@ QualifiedName@@HttpStatus.NO_CONTENT @AT@ 12983 @LENGTH@ 10


UPD ReturnStatement@@MethodInvocation:FunctorUtils.copy(iClosures) @TO@ MethodInvocation:FunctorUtils.<E>copy(iClosures) @AT@ 4017 @LENGTH@ 36
---UPD MethodInvocation@@FunctorUtils.copy(iClosures) @TO@ FunctorUtils.<E>copy(iClosures) @AT@ 4024 @LENGTH@ 28


UPD IfStatement@@if (!successorOfLastDelivered(element) && sequence.predecessor(element) != null) {  element.schedule(defineTimeout());} @TO@ if (successorOfLastDelivered(element)) {} else if (sequence.predecessor(element) != null) {} else {  element.schedule(defineTimeout());} @AT@ 8035 @LENGTH@ 139
---DEL InfixExpression@@!successorOfLastDelivered(element) && sequence.predecessor(element) != null @AT@ 8039 @LENGTH@ 75
------DEL PrefixExpression@@!successorOfLastDelivered(element) @AT@ 8039 @LENGTH@ 34
---------DEL Operator@@! @AT@ 8039 @LENGTH@ 1
------DEL Operator@@&& @AT@ 8073 @LENGTH@ 2
---MOV MethodInvocation@@successorOfLastDelivered(element) @TO@ IfStatement@@if (!successorOfLastDelivered(element) && sequence.predecessor(element) != null) {  element.schedule(defineTimeout());} @AT@ 8040 @LENGTH@ 33
---INS Block@@ThenBody:{} @TO@ IfStatement@@if (!successorOfLastDelivered(element) && sequence.predecessor(element) != null) {  element.schedule(defineTimeout());} @AT@ 8074 @LENGTH@ 46
---UPD Block@@ThenBody:{  element.schedule(defineTimeout());} @TO@ ElseBody:{  element.schedule(defineTimeout());} @AT@ 8116 @LENGTH@ 58
---INS Block@@ElseBody:if (sequence.predecessor(element) != null) {} else {  element.schedule(defineTimeout());} @TO@ IfStatement@@if (!successorOfLastDelivered(element) && sequence.predecessor(element) != null) {  element.schedule(defineTimeout());} @AT@ 8126 @LENGTH@ 153
------INS IfStatement@@if (sequence.predecessor(element) != null) {} else {  element.schedule(defineTimeout());} @TO@ Block@@ElseBody:if (sequence.predecessor(element) != null) {} else {  element.schedule(defineTimeout());} @AT@ 8126 @LENGTH@ 153
---------MOV InfixExpression@@sequence.predecessor(element) != null @TO@ IfStatement@@if (sequence.predecessor(element) != null) {} else {  element.schedule(defineTimeout());} @AT@ 8077 @LENGTH@ 37
---------MOV Block@@ThenBody:{  element.schedule(defineTimeout());} @TO@ IfStatement@@if (sequence.predecessor(element) != null) {} else {  element.schedule(defineTimeout());} @AT@ 8116 @LENGTH@ 58
---------INS Block@@ThenBody:{} @TO@ IfStatement@@if (sequence.predecessor(element) != null) {} else {  element.schedule(defineTimeout());} @AT@ 8169 @LENGTH@ 46


UPD TypeDeclaration@@[public]StringEncoderComparator, [Comparator] @TO@ [@SuppressWarnings("rawtypes"), public]StringEncoderComparator, [Comparator] @AT@ 1206 @LENGTH@ 1756
---INS SingleMemberAnnotation@@@SuppressWarnings("rawtypes") @TO@ TypeDeclaration@@[public]StringEncoderComparator, [Comparator] @AT@ 1206 @LENGTH@ 29


MOV MethodDeclaration@@public, void, MethodName:testMultiExec, Exception,  @TO@ TypeDeclaration@@[@RunWith(SpringJUnit4ClassRunner.class), @ContextConfiguration, public]RjcConnectionIntegrationTests, AbstractConnectionIntegrationTests @AT@ 1359 @LENGTH@ 422


INS FieldDeclaration@@RejectAttributeChecker, [DEFINED=new DefaultRejectAttributeChecker(){
  @Override public String getRejectionLogMessage(  Map<String,ModelNode> attributes){
    return ControllerMessages.MESSAGES.attributesAreNotUnderstoodAndWillBeIgnored();
  }
  @Override protected boolean rejectAttribute(  PathAddress address,  String attributeName,  ModelNode attributeValue,  TransformationContext context){
    return attributeValue.isDefined();
  }
}
] @TO@ TypeDeclaration@@[public]RejectAttributeChecker,  @AT@ 12539 @LENGTH@ 500
---INS SimpleType@@RejectAttributeChecker @TO@ FieldDeclaration@@RejectAttributeChecker, [DEFINED=new DefaultRejectAttributeChecker(){
  @Override public String getRejectionLogMessage(  Map<String,ModelNode> attributes){
    return ControllerMessages.MESSAGES.attributesAreNotUnderstoodAndWillBeIgnored();
  }
  @Override protected boolean rejectAttribute(  PathAddress address,  String attributeName,  ModelNode attributeValue,  TransformationContext context){
    return attributeValue.isDefined();
  }
}
] @AT@ 12539 @LENGTH@ 22
---INS VariableDeclarationFragment@@DEFINED=new DefaultRejectAttributeChecker(){
  @Override public String getRejectionLogMessage(  Map<String,ModelNode> attributes){
    return ControllerMessages.MESSAGES.attributesAreNotUnderstoodAndWillBeIgnored();
  }
  @Override protected boolean rejectAttribute(  PathAddress address,  String attributeName,  ModelNode attributeValue,  TransformationContext context){
    return attributeValue.isDefined();
  }
}
 @TO@ FieldDeclaration@@RejectAttributeChecker, [DEFINED=new DefaultRejectAttributeChecker(){
  @Override public String getRejectionLogMessage(  Map<String,ModelNode> attributes){
    return ControllerMessages.MESSAGES.attributesAreNotUnderstoodAndWillBeIgnored();
  }
  @Override protected boolean rejectAttribute(  PathAddress address,  String attributeName,  ModelNode attributeValue,  TransformationContext context){
    return attributeValue.isDefined();
  }
}
] @AT@ 12562 @LENGTH@ 476
------INS SimpleName@@DEFINED @TO@ VariableDeclarationFragment@@DEFINED=new DefaultRejectAttributeChecker(){
  @Override public String getRejectionLogMessage(  Map<String,ModelNode> attributes){
    return ControllerMessages.MESSAGES.attributesAreNotUnderstoodAndWillBeIgnored();
  }
  @Override protected boolean rejectAttribute(  PathAddress address,  String attributeName,  ModelNode attributeValue,  TransformationContext context){
    return attributeValue.isDefined();
  }
}
 @AT@ 12562 @LENGTH@ 7
------INS ClassInstanceCreation@@DefaultRejectAttributeChecker[] @TO@ VariableDeclarationFragment@@DEFINED=new DefaultRejectAttributeChecker(){
  @Override public String getRejectionLogMessage(  Map<String,ModelNode> attributes){
    return ControllerMessages.MESSAGES.attributesAreNotUnderstoodAndWillBeIgnored();
  }
  @Override protected boolean rejectAttribute(  PathAddress address,  String attributeName,  ModelNode attributeValue,  TransformationContext context){
    return attributeValue.isDefined();
  }
}
 @AT@ 12572 @LENGTH@ 466
---------INS New@@new @TO@ ClassInstanceCreation@@DefaultRejectAttributeChecker[] @AT@ 12572 @LENGTH@ 3
---------INS SimpleType@@DefaultRejectAttributeChecker @TO@ ClassInstanceCreation@@DefaultRejectAttributeChecker[] @AT@ 12576 @LENGTH@ 29
---------INS AnonymousClassDeclaration@@AnonymousClass @TO@ ClassInstanceCreation@@DefaultRejectAttributeChecker[] @AT@ 12608 @LENGTH@ 430
------------INS MethodDeclaration@@public, String, MethodName:getRejectionLogMessage, Map<String,ModelNode> attributes,  @TO@ AnonymousClassDeclaration@@AnonymousClass @AT@ 12636 @LENGTH@ 176
---------------INS Modifier@@public @TO@ MethodDeclaration@@public, String, MethodName:getRejectionLogMessage, Map<String,ModelNode> attributes,  @AT@ 12636 @LENGTH@ 6
---------------INS SimpleType@@String @TO@ MethodDeclaration@@public, String, MethodName:getRejectionLogMessage, Map<String,ModelNode> attributes,  @AT@ 12643 @LENGTH@ 6
---------------INS SimpleName@@MethodName:getRejectionLogMessage @TO@ MethodDeclaration@@public, String, MethodName:getRejectionLogMessage, Map<String,ModelNode> attributes,  @AT@ 12650 @LENGTH@ 22
---------------INS SingleVariableDeclaration@@Map<String,ModelNode> attributes @TO@ MethodDeclaration@@public, String, MethodName:getRejectionLogMessage, Map<String,ModelNode> attributes,  @AT@ 12673 @LENGTH@ 33
------------------INS ParameterizedType@@Map<String,ModelNode> @TO@ SingleVariableDeclaration@@Map<String,ModelNode> attributes @AT@ 12673 @LENGTH@ 22
---------------------INS SimpleType@@Map @TO@ ParameterizedType@@Map<String,ModelNode> @AT@ 12673 @LENGTH@ 3
---------------------INS SimpleType@@String @TO@ ParameterizedType@@Map<String,ModelNode> @AT@ 12677 @LENGTH@ 6
---------------------INS SimpleType@@ModelNode @TO@ ParameterizedType@@Map<String,ModelNode> @AT@ 12685 @LENGTH@ 9
------------------INS SimpleName@@attributes @TO@ SingleVariableDeclaration@@Map<String,ModelNode> attributes @AT@ 12696 @LENGTH@ 10
---------------INS ReturnStatement@@MethodInvocation:ControllerMessages.MESSAGES.attributesAreNotUnderstoodAndWillBeIgnored() @TO@ MethodDeclaration@@public, String, MethodName:getRejectionLogMessage, Map<String,ModelNode> attributes,  @AT@ 12722 @LENGTH@ 80
------------------INS MethodInvocation@@ControllerMessages.MESSAGES.attributesAreNotUnderstoodAndWillBeIgnored() @TO@ ReturnStatement@@MethodInvocation:ControllerMessages.MESSAGES.attributesAreNotUnderstoodAndWillBeIgnored() @AT@ 12729 @LENGTH@ 72
---------------------INS QualifiedName@@Name:ControllerMessages.MESSAGES @TO@ MethodInvocation@@ControllerMessages.MESSAGES.attributesAreNotUnderstoodAndWillBeIgnored() @AT@ 12729 @LENGTH@ 27
---------------------INS SimpleName@@MethodName:attributesAreNotUnderstoodAndWillBeIgnored:[] @TO@ MethodInvocation@@ControllerMessages.MESSAGES.attributesAreNotUnderstoodAndWillBeIgnored() @AT@ 12757 @LENGTH@ 44
------------INS MethodDeclaration@@protected, boolean, MethodName:rejectAttribute, PathAddress address, String attributeName, ModelNode attributeValue, TransformationContext context,  @TO@ AnonymousClassDeclaration@@AnonymousClass @AT@ 12840 @LENGTH@ 192
---------------INS Modifier@@protected @TO@ MethodDeclaration@@protected, boolean, MethodName:rejectAttribute, PathAddress address, String attributeName, ModelNode attributeValue, TransformationContext context,  @AT@ 12840 @LENGTH@ 9
---------------INS PrimitiveType@@boolean @TO@ MethodDeclaration@@protected, boolean, MethodName:rejectAttribute, PathAddress address, String attributeName, ModelNode attributeValue, TransformationContext context,  @AT@ 12850 @LENGTH@ 7
---------------INS SimpleName@@MethodName:rejectAttribute @TO@ MethodDeclaration@@protected, boolean, MethodName:rejectAttribute, PathAddress address, String attributeName, ModelNode attributeValue, TransformationContext context,  @AT@ 12858 @LENGTH@ 15
---------------INS SingleVariableDeclaration@@PathAddress address @TO@ MethodDeclaration@@protected, boolean, MethodName:rejectAttribute, PathAddress address, String attributeName, ModelNode attributeValue, TransformationContext context,  @AT@ 12874 @LENGTH@ 19
------------------INS SimpleType@@PathAddress @TO@ SingleVariableDeclaration@@PathAddress address @AT@ 12874 @LENGTH@ 11
------------------INS SimpleName@@address @TO@ SingleVariableDeclaration@@PathAddress address @AT@ 12886 @LENGTH@ 7
---------------INS SingleVariableDeclaration@@String attributeName @TO@ MethodDeclaration@@protected, boolean, MethodName:rejectAttribute, PathAddress address, String attributeName, ModelNode attributeValue, TransformationContext context,  @AT@ 12895 @LENGTH@ 20
------------------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String attributeName @AT@ 12895 @LENGTH@ 6
------------------INS SimpleName@@attributeName @TO@ SingleVariableDeclaration@@String attributeName @AT@ 12902 @LENGTH@ 13
---------------INS SingleVariableDeclaration@@ModelNode attributeValue @TO@ MethodDeclaration@@protected, boolean, MethodName:rejectAttribute, PathAddress address, String attributeName, ModelNode attributeValue, TransformationContext context,  @AT@ 12917 @LENGTH@ 24
------------------INS SimpleType@@ModelNode @TO@ SingleVariableDeclaration@@ModelNode attributeValue @AT@ 12917 @LENGTH@ 9
------------------INS SimpleName@@attributeValue @TO@ SingleVariableDeclaration@@ModelNode attributeValue @AT@ 12927 @LENGTH@ 14
---------------INS SingleVariableDeclaration@@TransformationContext context @TO@ MethodDeclaration@@protected, boolean, MethodName:rejectAttribute, PathAddress address, String attributeName, ModelNode attributeValue, TransformationContext context,  @AT@ 12943 @LENGTH@ 29
------------------INS SimpleType@@TransformationContext @TO@ SingleVariableDeclaration@@TransformationContext context @AT@ 12943 @LENGTH@ 21
------------------INS SimpleName@@context @TO@ SingleVariableDeclaration@@TransformationContext context @AT@ 12965 @LENGTH@ 7
---------------INS ReturnStatement@@MethodInvocation:attributeValue.isDefined() @TO@ MethodDeclaration@@protected, boolean, MethodName:rejectAttribute, PathAddress address, String attributeName, ModelNode attributeValue, TransformationContext context,  @AT@ 12988 @LENGTH@ 34
------------------INS MethodInvocation@@attributeValue.isDefined() @TO@ ReturnStatement@@MethodInvocation:attributeValue.isDefined() @AT@ 12995 @LENGTH@ 26
---------------------INS SimpleName@@Name:attributeValue @TO@ MethodInvocation@@attributeValue.isDefined() @AT@ 12995 @LENGTH@ 14
---------------------INS SimpleName@@MethodName:isDefined:[] @TO@ MethodInvocation@@attributeValue.isDefined() @AT@ 13010 @LENGTH@ 11


UPD ExpressionStatement@@Assignment:this.logger=new TransformersLogger(originalModel.target) @TO@ Assignment:this.logger=TransformersLogger.getLogger(originalModel.target) @AT@ 4158 @LENGTH@ 59
---UPD Assignment@@this.logger=new TransformersLogger(originalModel.target) @TO@ this.logger=TransformersLogger.getLogger(originalModel.target) @AT@ 4158 @LENGTH@ 58
------INS MethodInvocation@@TransformersLogger.getLogger(originalModel.target) @TO@ Assignment@@this.logger=new TransformersLogger(originalModel.target) @AT@ 4172 @LENGTH@ 50
---------INS SimpleName@@Name:TransformersLogger @TO@ MethodInvocation@@TransformersLogger.getLogger(originalModel.target) @AT@ 4172 @LENGTH@ 18
---------INS SimpleName@@MethodName:getLogger:[originalModel.target] @TO@ MethodInvocation@@TransformersLogger.getLogger(originalModel.target) @AT@ 4191 @LENGTH@ 31
------------INS QualifiedName@@originalModel.target @TO@ SimpleName@@MethodName:getLogger:[originalModel.target] @AT@ 4201 @LENGTH@ 20
---------------MOV SimpleName@@originalModel @TO@ QualifiedName@@originalModel.target @AT@ 4195 @LENGTH@ 13
---------------MOV SimpleName@@target @TO@ QualifiedName@@originalModel.target @AT@ 4209 @LENGTH@ 6
------DEL ClassInstanceCreation@@TransformersLogger[originalModel.target] @AT@ 4172 @LENGTH@ 44
---------DEL New@@new @AT@ 4172 @LENGTH@ 3
---------DEL SimpleType@@TransformersLogger @AT@ 4176 @LENGTH@ 18
---------DEL QualifiedName@@originalModel.target @AT@ 4195 @LENGTH@ 20


UPD ExpressionStatement@@MethodInvocation:Common.sendError(exchange,false,"No file found") @TO@ MethodInvocation:Common.sendError(exchange,false,false,"No file found") @AT@ 4176 @LENGTH@ 51
---UPD MethodInvocation@@Common.sendError(exchange,false,"No file found") @TO@ Common.sendError(exchange,false,false,"No file found") @AT@ 4176 @LENGTH@ 50
------UPD SimpleName@@MethodName:sendError:[exchange, false, "No file found"] @TO@ MethodName:sendError:[exchange, false, false, "No file found"] @AT@ 4183 @LENGTH@ 43
---------INS BooleanLiteral@@false @TO@ SimpleName@@MethodName:sendError:[exchange, false, "No file found"] @AT@ 4224 @LENGTH@ 5


UPD ExpressionStatement@@Assignment:path=value @TO@ Assignment:path=ParseUtils.parsePossibleExpression(value) @AT@ 16674 @LENGTH@ 13
---UPD Assignment@@path=value @TO@ path=ParseUtils.parsePossibleExpression(value) @AT@ 16674 @LENGTH@ 12
------INS MethodInvocation@@ParseUtils.parsePossibleExpression(value) @TO@ Assignment@@path=value @AT@ 16507 @LENGTH@ 41
---------INS SimpleName@@Name:ParseUtils @TO@ MethodInvocation@@ParseUtils.parsePossibleExpression(value) @AT@ 16507 @LENGTH@ 10
---------INS SimpleName@@MethodName:parsePossibleExpression:[value] @TO@ MethodInvocation@@ParseUtils.parsePossibleExpression(value) @AT@ 16518 @LENGTH@ 30
------------INS SimpleName@@value @TO@ SimpleName@@MethodName:parsePossibleExpression:[value] @AT@ 16542 @LENGTH@ 5
------DEL SimpleName@@value @AT@ 16681 @LENGTH@ 5


UPD ExpressionStatement@@MethodInvocation:System.out.println("URL = " + url) @TO@ MethodInvocation:log.info("URL = " + url) @AT@ 4681 @LENGTH@ 35
---UPD MethodInvocation@@System.out.println("URL = " + url) @TO@ log.info("URL = " + url) @AT@ 4681 @LENGTH@ 34
------INS SimpleName@@Name:log @TO@ MethodInvocation@@System.out.println("URL = " + url) @AT@ 4671 @LENGTH@ 3
------DEL QualifiedName@@Name:System.out @AT@ 4681 @LENGTH@ 10
------UPD SimpleName@@MethodName:println:["URL = " + url] @TO@ MethodName:info:["URL = " + url] @AT@ 4692 @LENGTH@ 23


INS IfStatement@@if (bufferSize < maxBytesPerChar) {  throw new IllegalArgumentException("Buffer size " + bufferSize + " is less than maxBytesPerChar "+ maxBytesPerChar);} @TO@ MethodDeclaration@@public, voidMethodName:CharSequenceInputStream, final CharSequence cs, final Charset charset, final int bufferSize,  @AT@ 2444 @LENGTH@ 175
---INS InfixExpression@@bufferSize < maxBytesPerChar @TO@ IfStatement@@if (bufferSize < maxBytesPerChar) {  throw new IllegalArgumentException("Buffer size " + bufferSize + " is less than maxBytesPerChar "+ maxBytesPerChar);} @AT@ 2448 @LENGTH@ 28
------INS SimpleName@@bufferSize @TO@ InfixExpression@@bufferSize < maxBytesPerChar @AT@ 2448 @LENGTH@ 10
------INS Operator@@< @TO@ InfixExpression@@bufferSize < maxBytesPerChar @AT@ 2458 @LENGTH@ 1
------INS SimpleName@@maxBytesPerChar @TO@ InfixExpression@@bufferSize < maxBytesPerChar @AT@ 2461 @LENGTH@ 15
---INS Block@@ThenBody:{  throw new IllegalArgumentException("Buffer size " + bufferSize + " is less than maxBytesPerChar "+ maxBytesPerChar);} @TO@ IfStatement@@if (bufferSize < maxBytesPerChar) {  throw new IllegalArgumentException("Buffer size " + bufferSize + " is less than maxBytesPerChar "+ maxBytesPerChar);} @AT@ 2478 @LENGTH@ 141
------INS ThrowStatement@@ClassInstanceCreation:new IllegalArgumentException("Buffer size " + bufferSize + " is less than maxBytesPerChar "+ maxBytesPerChar) @TO@ Block@@ThenBody:{  throw new IllegalArgumentException("Buffer size " + bufferSize + " is less than maxBytesPerChar "+ maxBytesPerChar);} @AT@ 2492 @LENGTH@ 117
---------INS ClassInstanceCreation@@IllegalArgumentException["Buffer size " + bufferSize + " is less than maxBytesPerChar "+ maxBytesPerChar] @TO@ ThrowStatement@@ClassInstanceCreation:new IllegalArgumentException("Buffer size " + bufferSize + " is less than maxBytesPerChar "+ maxBytesPerChar) @AT@ 2498 @LENGTH@ 110
------------INS New@@new @TO@ ClassInstanceCreation@@IllegalArgumentException["Buffer size " + bufferSize + " is less than maxBytesPerChar "+ maxBytesPerChar] @AT@ 2498 @LENGTH@ 3
------------INS SimpleType@@IllegalArgumentException @TO@ ClassInstanceCreation@@IllegalArgumentException["Buffer size " + bufferSize + " is less than maxBytesPerChar "+ maxBytesPerChar] @AT@ 2502 @LENGTH@ 24
------------INS InfixExpression@@"Buffer size " + bufferSize + " is less than maxBytesPerChar "+ maxBytesPerChar @TO@ ClassInstanceCreation@@IllegalArgumentException["Buffer size " + bufferSize + " is less than maxBytesPerChar "+ maxBytesPerChar] @AT@ 2527 @LENGTH@ 80
---------------INS StringLiteral@@"Buffer size " @TO@ InfixExpression@@"Buffer size " + bufferSize + " is less than maxBytesPerChar "+ maxBytesPerChar @AT@ 2527 @LENGTH@ 14
---------------INS Operator@@+ @TO@ InfixExpression@@"Buffer size " + bufferSize + " is less than maxBytesPerChar "+ maxBytesPerChar @AT@ 2541 @LENGTH@ 1
---------------INS SimpleName@@bufferSize @TO@ InfixExpression@@"Buffer size " + bufferSize + " is less than maxBytesPerChar "+ maxBytesPerChar @AT@ 2544 @LENGTH@ 10
---------------INS StringLiteral@@" is less than maxBytesPerChar " @TO@ InfixExpression@@"Buffer size " + bufferSize + " is less than maxBytesPerChar "+ maxBytesPerChar @AT@ 2557 @LENGTH@ 32
---------------INS SimpleName@@maxBytesPerChar @TO@ InfixExpression@@"Buffer size " + bufferSize + " is less than maxBytesPerChar "+ maxBytesPerChar @AT@ 2592 @LENGTH@ 15


INS FieldDeclaration@@protected, static, final, Logger, [log=Logger.getLogger(ClusterAbstractTestCase.class)] @TO@ TypeDeclaration@@[public, abstract]ClusterAbstractTestCase, [ClusteringTestConstants] @AT@ 1805 @LENGTH@ 84
---INS Modifier@@protected @TO@ FieldDeclaration@@protected, static, final, Logger, [log=Logger.getLogger(ClusterAbstractTestCase.class)] @AT@ 1805 @LENGTH@ 9
---INS Modifier@@static @TO@ FieldDeclaration@@protected, static, final, Logger, [log=Logger.getLogger(ClusterAbstractTestCase.class)] @AT@ 1815 @LENGTH@ 6
---INS Modifier@@final @TO@ FieldDeclaration@@protected, static, final, Logger, [log=Logger.getLogger(ClusterAbstractTestCase.class)] @AT@ 1822 @LENGTH@ 5
---INS SimpleType@@Logger @TO@ FieldDeclaration@@protected, static, final, Logger, [log=Logger.getLogger(ClusterAbstractTestCase.class)] @AT@ 1828 @LENGTH@ 6
---INS VariableDeclarationFragment@@log=Logger.getLogger(ClusterAbstractTestCase.class) @TO@ FieldDeclaration@@protected, static, final, Logger, [log=Logger.getLogger(ClusterAbstractTestCase.class)] @AT@ 1835 @LENGTH@ 53
------INS SimpleName@@log @TO@ VariableDeclarationFragment@@log=Logger.getLogger(ClusterAbstractTestCase.class) @AT@ 1835 @LENGTH@ 3
------INS MethodInvocation@@Logger.getLogger(ClusterAbstractTestCase.class) @TO@ VariableDeclarationFragment@@log=Logger.getLogger(ClusterAbstractTestCase.class) @AT@ 1841 @LENGTH@ 47
---------INS SimpleName@@Name:Logger @TO@ MethodInvocation@@Logger.getLogger(ClusterAbstractTestCase.class) @AT@ 1841 @LENGTH@ 6
---------INS SimpleName@@MethodName:getLogger:[ClusterAbstractTestCase.class] @TO@ MethodInvocation@@Logger.getLogger(ClusterAbstractTestCase.class) @AT@ 1848 @LENGTH@ 40
------------INS TypeLiteral@@ClusterAbstractTestCase.class @TO@ SimpleName@@MethodName:getLogger:[ClusterAbstractTestCase.class] @AT@ 1858 @LENGTH@ 29


UPD ForStatement@@for (int n=0; n < allActions.length; n++) {  int action=1 << n;  if ((mask & action) == action) {    if (insertComma)     sb.append(',');    sb.append(allActions[n].actionName);    insertComma=true;  }} @TO@ for (int n=1; n < allActions.length; n++) {  int action=1 << (n - 1);  if ((mask & action) == action) {    if (insertComma)     sb.append(',');    sb.append(allActions[n].actionName);    insertComma=true;  }} @AT@ 15103 @LENGTH@ 305
---UPD VariableDeclarationExpression@@int n=0 @TO@ int n=1 @AT@ 15108 @LENGTH@ 9
------UPD VariableDeclarationFragment@@n=0 @TO@ n=1 @AT@ 15112 @LENGTH@ 5
---------UPD NumberLiteral@@0 @TO@ 1 @AT@ 15116 @LENGTH@ 1
---UPD VariableDeclarationStatement@@int action=1 << n; @TO@ int action=1 << (n - 1); @AT@ 15161 @LENGTH@ 20
------UPD VariableDeclarationFragment@@action=1 << n @TO@ action=1 << (n - 1) @AT@ 15165 @LENGTH@ 15
---------UPD InfixExpression@@1 << n @TO@ 1 << (n - 1) @AT@ 15174 @LENGTH@ 6
------------INS ParenthesizedExpression@@(n - 1) @TO@ InfixExpression@@1 << n @AT@ 15236 @LENGTH@ 7
---------------INS InfixExpression@@n - 1 @TO@ ParenthesizedExpression@@(n - 1) @AT@ 15237 @LENGTH@ 5
------------------MOV SimpleName@@n @TO@ InfixExpression@@n - 1 @AT@ 15179 @LENGTH@ 1
------------------INS Operator@@- @TO@ InfixExpression@@n - 1 @AT@ 15238 @LENGTH@ 1
------------------INS NumberLiteral@@1 @TO@ InfixExpression@@n - 1 @AT@ 15241 @LENGTH@ 1


DEL ExpressionStatement@@MethodInvocation:testComponent(COMPONENT) @AT@ 1272 @LENGTH@ 25
---DEL MethodInvocation@@testComponent(COMPONENT) @AT@ 1272 @LENGTH@ 24
------DEL SimpleName@@MethodName:testComponent:[COMPONENT] @AT@ 1272 @LENGTH@ 24
---------DEL SimpleName@@COMPONENT @AT@ 1286 @LENGTH@ 9


INS MethodDeclaration@@String, MethodName:createParameterJsonSchema,  @TO@ TypeDeclaration@@[public]ComponentConfiguration,  @AT@ 6065 @LENGTH@ 28
---INS SimpleType@@String @TO@ MethodDeclaration@@String, MethodName:createParameterJsonSchema,  @AT@ 6058 @LENGTH@ 6
---INS SimpleName@@MethodName:createParameterJsonSchema @TO@ MethodDeclaration@@String, MethodName:createParameterJsonSchema,  @AT@ 6065 @LENGTH@ 25


UPD FieldDeclaration@@public, static, final, SimpleAttributeDefinition, [PATH=new SimpleAttributeDefinitionBuilder(EJB3SubsystemModel.PATH,ModelType.STRING,true).setAllowExpression(true).setValidator(new ModelTypeValidator(ModelType.STRING,true,true)).setFlags(AttributeAccess.Flag.RESTART_ALL_SERVICES).build()] @TO@ public, static, final, SimpleAttributeDefinition, [PATH=new SimpleAttributeDefinitionBuilder(EJB3SubsystemModel.PATH,ModelType.STRING,false).setAllowExpression(true).setValidator(new ModelTypeValidator(ModelType.STRING,true,true)).setFlags(AttributeAccess.Flag.RESTART_ALL_SERVICES).build()] @AT@ 2233 @LENGTH@ 387
---UPD VariableDeclarationFragment@@PATH=new SimpleAttributeDefinitionBuilder(EJB3SubsystemModel.PATH,ModelType.STRING,true).setAllowExpression(true).setValidator(new ModelTypeValidator(ModelType.STRING,true,true)).setFlags(AttributeAccess.Flag.RESTART_ALL_SERVICES).build() @TO@ PATH=new SimpleAttributeDefinitionBuilder(EJB3SubsystemModel.PATH,ModelType.STRING,false).setAllowExpression(true).setValidator(new ModelTypeValidator(ModelType.STRING,true,true)).setFlags(AttributeAccess.Flag.RESTART_ALL_SERVICES).build() @AT@ 2279 @LENGTH@ 340
------UPD MethodInvocation@@new SimpleAttributeDefinitionBuilder(EJB3SubsystemModel.PATH,ModelType.STRING,true).setAllowExpression(true).setValidator(new ModelTypeValidator(ModelType.STRING,true,true)).setFlags(AttributeAccess.Flag.RESTART_ALL_SERVICES).build() @TO@ new SimpleAttributeDefinitionBuilder(EJB3SubsystemModel.PATH,ModelType.STRING,false).setAllowExpression(true).setValidator(new ModelTypeValidator(ModelType.STRING,true,true)).setFlags(AttributeAccess.Flag.RESTART_ALL_SERVICES).build() @AT@ 2298 @LENGTH@ 321
---------UPD ClassInstanceCreation@@SimpleAttributeDefinitionBuilder[EJB3SubsystemModel.PATH, ModelType.STRING, true] @TO@ SimpleAttributeDefinitionBuilder[EJB3SubsystemModel.PATH, ModelType.STRING, false] @AT@ 2298 @LENGTH@ 85
------------UPD BooleanLiteral@@true @TO@ false @AT@ 2378 @LENGTH@ 4


DEL ExpressionStatement@@MethodInvocation:openPipeline() @AT@ 12517 @LENGTH@ 15
---DEL MethodInvocation@@MethodName:openPipeline:[] @AT@ 12517 @LENGTH@ 14


UPD VariableDeclarationStatement@@Set<Container> containers=ContainerBuilder.child(1).withName("cnt").withProfiles("default").assertProvisioningResult().build(); @TO@ Set<Container> containers=ContainerBuilder.create(1,1).withName("cnt").withProfiles("default").assertProvisioningResult().build(); @AT@ 1256 @LENGTH@ 129
---UPD VariableDeclarationFragment@@containers=ContainerBuilder.child(1).withName("cnt").withProfiles("default").assertProvisioningResult().build() @TO@ containers=ContainerBuilder.create(1,1).withName("cnt").withProfiles("default").assertProvisioningResult().build() @AT@ 1271 @LENGTH@ 113
------UPD MethodInvocation@@ContainerBuilder.child(1).withName("cnt").withProfiles("default").assertProvisioningResult().build() @TO@ ContainerBuilder.create(1,1).withName("cnt").withProfiles("default").assertProvisioningResult().build() @AT@ 1284 @LENGTH@ 100
---------UPD MethodInvocation@@MethodName:child:[1] @TO@ MethodName:create:[1, 1] @AT@ 1284 @LENGTH@ 25
------------INS NumberLiteral@@1 @TO@ MethodInvocation@@MethodName:child:[1] @AT@ 1310 @LENGTH@ 1


INS MethodDeclaration@@public, void, MethodName:setUp, Exception,  @TO@ TypeDeclaration@@[public]FileRouteJmsKeepLastModifiedTest, CamelTestSupport @AT@ 1340 @LENGTH@ 150
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:setUp, Exception,  @AT@ 1340 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:setUp, Exception,  @AT@ 1347 @LENGTH@ 4
---INS SimpleName@@MethodName:setUp @TO@ MethodDeclaration@@public, void, MethodName:setUp, Exception,  @AT@ 1352 @LENGTH@ 5
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:setUp, Exception,  @AT@ 1367 @LENGTH@ 9
---INS ExpressionStatement@@MethodInvocation:deleteDirectory("target/inbox") @TO@ MethodDeclaration@@public, void, MethodName:setUp, Exception,  @AT@ 1387 @LENGTH@ 32
------INS MethodInvocation@@deleteDirectory("target/inbox") @TO@ ExpressionStatement@@MethodInvocation:deleteDirectory("target/inbox") @AT@ 1387 @LENGTH@ 31
---------INS SimpleName@@MethodName:deleteDirectory:["target/inbox"] @TO@ MethodInvocation@@deleteDirectory("target/inbox") @AT@ 1387 @LENGTH@ 31
------------INS StringLiteral@@"target/inbox" @TO@ SimpleName@@MethodName:deleteDirectory:["target/inbox"] @AT@ 1403 @LENGTH@ 14
---INS ExpressionStatement@@MethodInvocation:deleteDirectory("target/outbox") @TO@ MethodDeclaration@@public, void, MethodName:setUp, Exception,  @AT@ 1428 @LENGTH@ 33
------INS MethodInvocation@@deleteDirectory("target/outbox") @TO@ ExpressionStatement@@MethodInvocation:deleteDirectory("target/outbox") @AT@ 1428 @LENGTH@ 32
---------INS SimpleName@@MethodName:deleteDirectory:["target/outbox"] @TO@ MethodInvocation@@deleteDirectory("target/outbox") @AT@ 1428 @LENGTH@ 32
------------INS StringLiteral@@"target/outbox" @TO@ SimpleName@@MethodName:deleteDirectory:["target/outbox"] @AT@ 1444 @LENGTH@ 15
---INS ExpressionStatement@@SuperMethodInvocation:super.setUp() @TO@ MethodDeclaration@@public, void, MethodName:setUp, Exception,  @AT@ 1470 @LENGTH@ 14
------INS SuperMethodInvocation@@super.setUp() @TO@ ExpressionStatement@@SuperMethodInvocation:super.setUp() @AT@ 1470 @LENGTH@ 13
---------INS SimpleName@@MethodName:setUp:[] @TO@ SuperMethodInvocation@@super.setUp() @AT@ 1476 @LENGTH@ 5


UPD IfStatement@@if (zooKeeper.exists(ZkPath.CONFIG_DEFAULT_VERSION.getPath()) != null) {  version=zooKeeper.getStringData(ZkPath.CONFIG_DEFAULT_VERSION.getPath());} @TO@ if (ZooKeeperUtils.exists(zooKeeper,ZkPath.CONFIG_DEFAULT_VERSION.getPath()) != null) {  version=ZooKeeperUtils.get(zooKeeper,ZkPath.CONFIG_DEFAULT_VERSION.getPath());} @AT@ 20580 @LENGTH@ 178
---UPD InfixExpression@@zooKeeper.exists(ZkPath.CONFIG_DEFAULT_VERSION.getPath()) != null @TO@ ZooKeeperUtils.exists(zooKeeper,ZkPath.CONFIG_DEFAULT_VERSION.getPath()) != null @AT@ 20584 @LENGTH@ 65
------UPD MethodInvocation@@zooKeeper.exists(ZkPath.CONFIG_DEFAULT_VERSION.getPath()) @TO@ ZooKeeperUtils.exists(zooKeeper,ZkPath.CONFIG_DEFAULT_VERSION.getPath()) @AT@ 20584 @LENGTH@ 57
---------UPD SimpleName@@Name:zooKeeper @TO@ Name:ZooKeeperUtils @AT@ 20584 @LENGTH@ 9
---------UPD SimpleName@@MethodName:exists:[ZkPath.CONFIG_DEFAULT_VERSION.getPath()] @TO@ MethodName:exists:[zooKeeper, ZkPath.CONFIG_DEFAULT_VERSION.getPath()] @AT@ 20594 @LENGTH@ 47
------------INS SimpleName@@zooKeeper @TO@ SimpleName@@MethodName:exists:[ZkPath.CONFIG_DEFAULT_VERSION.getPath()] @AT@ 20606 @LENGTH@ 9
---UPD Block@@ThenBody:{  version=zooKeeper.getStringData(ZkPath.CONFIG_DEFAULT_VERSION.getPath());} @TO@ ThenBody:{  version=ZooKeeperUtils.get(zooKeeper,ZkPath.CONFIG_DEFAULT_VERSION.getPath());} @AT@ 20651 @LENGTH@ 107
------UPD ExpressionStatement@@Assignment:version=zooKeeper.getStringData(ZkPath.CONFIG_DEFAULT_VERSION.getPath()) @TO@ Assignment:version=ZooKeeperUtils.get(zooKeeper,ZkPath.CONFIG_DEFAULT_VERSION.getPath()) @AT@ 20669 @LENGTH@ 75
---------UPD Assignment@@version=zooKeeper.getStringData(ZkPath.CONFIG_DEFAULT_VERSION.getPath()) @TO@ version=ZooKeeperUtils.get(zooKeeper,ZkPath.CONFIG_DEFAULT_VERSION.getPath()) @AT@ 20669 @LENGTH@ 74
------------UPD MethodInvocation@@zooKeeper.getStringData(ZkPath.CONFIG_DEFAULT_VERSION.getPath()) @TO@ ZooKeeperUtils.get(zooKeeper,ZkPath.CONFIG_DEFAULT_VERSION.getPath()) @AT@ 20679 @LENGTH@ 64
---------------UPD SimpleName@@Name:zooKeeper @TO@ Name:ZooKeeperUtils @AT@ 20679 @LENGTH@ 9
---------------UPD SimpleName@@MethodName:getStringData:[ZkPath.CONFIG_DEFAULT_VERSION.getPath()] @TO@ MethodName:get:[zooKeeper, ZkPath.CONFIG_DEFAULT_VERSION.getPath()] @AT@ 20689 @LENGTH@ 54
------------------INS SimpleName@@zooKeeper @TO@ SimpleName@@MethodName:getStringData:[ZkPath.CONFIG_DEFAULT_VERSION.getPath()] @AT@ 20714 @LENGTH@ 9


UPD ExpressionStatement@@Assignment:fs=new File(System.getProperty("karaf.data")) @TO@ Assignment:fs=new File(System.getProperty("karaf.data","karaf-data")) @AT@ 1181 @LENGTH@ 48
---UPD Assignment@@fs=new File(System.getProperty("karaf.data")) @TO@ fs=new File(System.getProperty("karaf.data","karaf-data")) @AT@ 1181 @LENGTH@ 47
------UPD ClassInstanceCreation@@File[System.getProperty("karaf.data")] @TO@ File[System.getProperty("karaf.data","karaf-data")] @AT@ 1186 @LENGTH@ 42
---------UPD MethodInvocation@@System.getProperty("karaf.data") @TO@ System.getProperty("karaf.data","karaf-data") @AT@ 1195 @LENGTH@ 32
------------UPD SimpleName@@MethodName:getProperty:["karaf.data"] @TO@ MethodName:getProperty:["karaf.data", "karaf-data"] @AT@ 1202 @LENGTH@ 25
---------------INS StringLiteral@@"karaf-data" @TO@ SimpleName@@MethodName:getProperty:["karaf.data"] @AT@ 1228 @LENGTH@ 12


UPD ExpressionStatement@@MethodInvocation:Assert.assertFalse(child2.asString(),child2.isDefined()) @TO@ MethodInvocation:Assert.assertFalse("key=" + key + "\n with child1 undefined has child2 \n"+ child2.asString(),child2.isDefined()) @AT@ 15863 @LENGTH@ 58
---UPD MethodInvocation@@Assert.assertFalse(child2.asString(),child2.isDefined()) @TO@ Assert.assertFalse("key=" + key + "\n with child1 undefined has child2 \n"+ child2.asString(),child2.isDefined()) @AT@ 15863 @LENGTH@ 57
------UPD SimpleName@@MethodName:assertFalse:[child2.asString(), child2.isDefined()] @TO@ MethodName:assertFalse:["key=" + key + "\n with child1 undefined has child2 \n"+ child2.asString(), child2.isDefined()] @AT@ 15870 @LENGTH@ 50
---------INS InfixExpression@@"key=" + key + "\n with child1 undefined has child2 \n"+ child2.asString() @TO@ SimpleName@@MethodName:assertFalse:[child2.asString(), child2.isDefined()] @AT@ 15882 @LENGTH@ 75
------------INS StringLiteral@@"key=" @TO@ InfixExpression@@"key=" + key + "\n with child1 undefined has child2 \n"+ child2.asString() @AT@ 15882 @LENGTH@ 6
------------INS Operator@@+ @TO@ InfixExpression@@"key=" + key + "\n with child1 undefined has child2 \n"+ child2.asString() @AT@ 15888 @LENGTH@ 1
------------INS SimpleName@@key @TO@ InfixExpression@@"key=" + key + "\n with child1 undefined has child2 \n"+ child2.asString() @AT@ 15891 @LENGTH@ 3
------------INS StringLiteral@@"\n with child1 undefined has child2 \n" @TO@ InfixExpression@@"key=" + key + "\n with child1 undefined has child2 \n"+ child2.asString() @AT@ 15897 @LENGTH@ 40
------------INS MethodInvocation@@child2.asString() @TO@ InfixExpression@@"key=" + key + "\n with child1 undefined has child2 \n"+ child2.asString() @AT@ 15940 @LENGTH@ 17
---------------MOV SimpleName@@Name:child2 @TO@ MethodInvocation@@child2.asString() @AT@ 15882 @LENGTH@ 6
---------------MOV SimpleName@@Name:child2 @TO@ MethodInvocation@@child2.asString() @AT@ 15882 @LENGTH@ 6
---------------MOV SimpleName@@MethodName:asString:[] @TO@ MethodInvocation@@child2.asString() @AT@ 15889 @LENGTH@ 10
---------------MOV SimpleName@@MethodName:asString:[] @TO@ MethodInvocation@@child2.asString() @AT@ 15889 @LENGTH@ 10
---------DEL MethodInvocation@@child2.asString() @AT@ 15882 @LENGTH@ 17


UPD TryStatement@@try {  this.establishView(client,baseURL1,NODE_1,NODE_2);  HttpResponse response=client.execute(new HttpGet(url1));  try {    System.out.println("Requested " + url1 + ", got "+ response.getFirstHeader("value").getValue()+ ".");    Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());    Assert.assertEquals(1,Integer.parseInt(response.getFirstHeader("value").getValue()));  }  finally {    HttpClientUtils.closeQuietly(response);  }  response=client.execute(new HttpGet(url1));  try {    System.out.println("Requested " + url1 + ", got "+ response.getFirstHeader("value").getValue()+ ".");    Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());    Assert.assertEquals(2,Integer.parseInt(response.getFirstHeader("value").getValue()));  }  finally {    HttpClientUtils.closeQuietly(response);  }  stop(CONTAINER_1);  this.establishView(client,baseURL2,NODE_2);  response=client.execute(new HttpGet(url2));  try {    System.out.println("Requested " + url2 + ", got "+ response.getFirstHeader("value").getValue()+ ".");    Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());    Assert.assertEquals("Session failed to replicate after container 1 was shutdown.",3,Integer.parseInt(response.getFirstHeader("value").getValue()));  }  finally {    HttpClientUtils.closeQuietly(response);  }  response=client.execute(new HttpGet(url2));  try {    System.out.println("Requested " + url2 + ", got "+ response.getFirstHeader("value").getValue()+ ".");    Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());    Assert.assertEquals(4,Integer.parseInt(response.getFirstHeader("value").getValue()));  }  finally {    HttpClientUtils.closeQuietly(response);  }  start(CONTAINER_1);  this.establishView(client,baseURL2,NODE_1,NODE_2);  response=client.execute(new HttpGet(url1));  try {    System.out.println("Requested " + url1 + ", got "+ response.getFirstHeader("value").getValue()+ ".");    Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());    Assert.assertEquals("Session failed to replicate after container 1 was brough up.",5,Integer.parseInt(response.getFirstHeader("value").getValue()));  }  finally {    HttpClientUtils.closeQuietly(response);  }  response=client.execute(new HttpGet(url1));  try {    System.out.println("Requested " + url1 + ", got "+ response.getFirstHeader("value").getValue()+ ".");    Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());    Assert.assertEquals(6,Integer.parseInt(response.getFirstHeader("value").getValue()));  }  finally {    HttpClientUtils.closeQuietly(response);  }}  finally {  HttpClientUtils.closeQuietly(client);} @TO@ try {  this.establishView(client,baseURL1,NODE_1,NODE_2);  HttpResponse response=client.execute(new HttpGet(url1));  try {    log.info("Requested " + url1 + ", got "+ response.getFirstHeader("value").getValue()+ ".");    Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());    Assert.assertEquals(1,Integer.parseInt(response.getFirstHeader("value").getValue()));  }  finally {    HttpClientUtils.closeQuietly(response);  }  response=client.execute(new HttpGet(url1));  try {    log.info("Requested " + url1 + ", got "+ response.getFirstHeader("value").getValue()+ ".");    Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());    Assert.assertEquals(2,Integer.parseInt(response.getFirstHeader("value").getValue()));  }  finally {    HttpClientUtils.closeQuietly(response);  }  stop(CONTAINER_1);  this.establishView(client,baseURL2,NODE_2);  response=client.execute(new HttpGet(url2));  try {    log.info("Requested " + url2 + ", got "+ response.getFirstHeader("value").getValue()+ ".");    Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());    Assert.assertEquals("Session failed to replicate after container 1 was shutdown.",3,Integer.parseInt(response.getFirstHeader("value").getValue()));  }  finally {    HttpClientUtils.closeQuietly(response);  }  response=client.execute(new HttpGet(url2));  try {    log.info("Requested " + url2 + ", got "+ response.getFirstHeader("value").getValue()+ ".");    Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());    Assert.assertEquals(4,Integer.parseInt(response.getFirstHeader("value").getValue()));  }  finally {    HttpClientUtils.closeQuietly(response);  }  start(CONTAINER_1);  this.establishView(client,baseURL2,NODE_1,NODE_2);  response=client.execute(new HttpGet(url1));  try {    log.info("Requested " + url1 + ", got "+ response.getFirstHeader("value").getValue()+ ".");    Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());    Assert.assertEquals("Session failed to replicate after container 1 was brough up.",5,Integer.parseInt(response.getFirstHeader("value").getValue()));  }  finally {    HttpClientUtils.closeQuietly(response);  }  response=client.execute(new HttpGet(url1));  try {    log.info("Requested " + url1 + ", got "+ response.getFirstHeader("value").getValue()+ ".");    Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());    Assert.assertEquals(6,Integer.parseInt(response.getFirstHeader("value").getValue()));  }  finally {    HttpClientUtils.closeQuietly(response);  }}  finally {  HttpClientUtils.closeQuietly(client);} @AT@ 3512 @LENGTH@ 4088
---UPD TryStatement@@try {  System.out.println("Requested " + url1 + ", got "+ response.getFirstHeader("value").getValue()+ ".");  Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());  Assert.assertEquals(1,Integer.parseInt(response.getFirstHeader("value").getValue()));}  finally {  HttpClientUtils.closeQuietly(response);} @TO@ try {  log.info("Requested " + url1 + ", got "+ response.getFirstHeader("value").getValue()+ ".");  Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());  Assert.assertEquals(1,Integer.parseInt(response.getFirstHeader("value").getValue()));}  finally {  HttpClientUtils.closeQuietly(response);} @AT@ 3680 @LENGTH@ 428
------UPD ExpressionStatement@@MethodInvocation:System.out.println("Requested " + url1 + ", got "+ response.getFirstHeader("value").getValue()+ ".") @TO@ MethodInvocation:log.info("Requested " + url1 + ", got "+ response.getFirstHeader("value").getValue()+ ".") @AT@ 3702 @LENGTH@ 103
---------UPD MethodInvocation@@System.out.println("Requested " + url1 + ", got "+ response.getFirstHeader("value").getValue()+ ".") @TO@ log.info("Requested " + url1 + ", got "+ response.getFirstHeader("value").getValue()+ ".") @AT@ 3702 @LENGTH@ 102
------------DEL QualifiedName@@Name:System.out @AT@ 3702 @LENGTH@ 10
------------INS SimpleName@@Name:log @TO@ MethodInvocation@@System.out.println("Requested " + url1 + ", got "+ response.getFirstHeader("value").getValue()+ ".") @AT@ 3702 @LENGTH@ 3
------------UPD SimpleName@@MethodName:println:["Requested " + url1 + ", got "+ response.getFirstHeader("value").getValue()+ "."] @TO@ MethodName:info:["Requested " + url1 + ", got "+ response.getFirstHeader("value").getValue()+ "."] @AT@ 3713 @LENGTH@ 91
---UPD TryStatement@@try {  System.out.println("Requested " + url1 + ", got "+ response.getFirstHeader("value").getValue()+ ".");  Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());  Assert.assertEquals(2,Integer.parseInt(response.getFirstHeader("value").getValue()));}  finally {  HttpClientUtils.closeQuietly(response);} @TO@ try {  log.info("Requested " + url1 + ", got "+ response.getFirstHeader("value").getValue()+ ".");  Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());  Assert.assertEquals(2,Integer.parseInt(response.getFirstHeader("value").getValue()));}  finally {  HttpClientUtils.closeQuietly(response);} @AT@ 4260 @LENGTH@ 428
------UPD ExpressionStatement@@MethodInvocation:System.out.println("Requested " + url1 + ", got "+ response.getFirstHeader("value").getValue()+ ".") @TO@ MethodInvocation:log.info("Requested " + url1 + ", got "+ response.getFirstHeader("value").getValue()+ ".") @AT@ 4282 @LENGTH@ 103
---------UPD MethodInvocation@@System.out.println("Requested " + url1 + ", got "+ response.getFirstHeader("value").getValue()+ ".") @TO@ log.info("Requested " + url1 + ", got "+ response.getFirstHeader("value").getValue()+ ".") @AT@ 4282 @LENGTH@ 102
------------INS SimpleName@@Name:log @TO@ MethodInvocation@@System.out.println("Requested " + url1 + ", got "+ response.getFirstHeader("value").getValue()+ ".") @AT@ 4272 @LENGTH@ 3
------------DEL QualifiedName@@Name:System.out @AT@ 4282 @LENGTH@ 10
------------UPD SimpleName@@MethodName:println:["Requested " + url1 + ", got "+ response.getFirstHeader("value").getValue()+ "."] @TO@ MethodName:info:["Requested " + url1 + ", got "+ response.getFirstHeader("value").getValue()+ "."] @AT@ 4293 @LENGTH@ 91
---UPD TryStatement@@try {  System.out.println("Requested " + url2 + ", got "+ response.getFirstHeader("value").getValue()+ ".");  Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());  Assert.assertEquals("Session failed to replicate after container 1 was shutdown.",3,Integer.parseInt(response.getFirstHeader("value").getValue()));}  finally {  HttpClientUtils.closeQuietly(response);} @TO@ try {  log.info("Requested " + url2 + ", got "+ response.getFirstHeader("value").getValue()+ ".");  Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());  Assert.assertEquals("Session failed to replicate after container 1 was shutdown.",3,Integer.parseInt(response.getFirstHeader("value").getValue()));}  finally {  HttpClientUtils.closeQuietly(response);} @AT@ 5151 @LENGTH@ 491
------UPD ExpressionStatement@@MethodInvocation:System.out.println("Requested " + url2 + ", got "+ response.getFirstHeader("value").getValue()+ ".") @TO@ MethodInvocation:log.info("Requested " + url2 + ", got "+ response.getFirstHeader("value").getValue()+ ".") @AT@ 5173 @LENGTH@ 103
---------UPD MethodInvocation@@System.out.println("Requested " + url2 + ", got "+ response.getFirstHeader("value").getValue()+ ".") @TO@ log.info("Requested " + url2 + ", got "+ response.getFirstHeader("value").getValue()+ ".") @AT@ 5173 @LENGTH@ 102
------------INS SimpleName@@Name:log @TO@ MethodInvocation@@System.out.println("Requested " + url2 + ", got "+ response.getFirstHeader("value").getValue()+ ".") @AT@ 5153 @LENGTH@ 3
------------DEL QualifiedName@@Name:System.out @AT@ 5173 @LENGTH@ 10
------------UPD SimpleName@@MethodName:println:["Requested " + url2 + ", got "+ response.getFirstHeader("value").getValue()+ "."] @TO@ MethodName:info:["Requested " + url2 + ", got "+ response.getFirstHeader("value").getValue()+ "."] @AT@ 5184 @LENGTH@ 91
---UPD TryStatement@@try {  System.out.println("Requested " + url2 + ", got "+ response.getFirstHeader("value").getValue()+ ".");  Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());  Assert.assertEquals(4,Integer.parseInt(response.getFirstHeader("value").getValue()));}  finally {  HttpClientUtils.closeQuietly(response);} @TO@ try {  log.info("Requested " + url2 + ", got "+ response.getFirstHeader("value").getValue()+ ".");  Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());  Assert.assertEquals(4,Integer.parseInt(response.getFirstHeader("value").getValue()));}  finally {  HttpClientUtils.closeQuietly(response);} @AT@ 5754 @LENGTH@ 428
------UPD ExpressionStatement@@MethodInvocation:System.out.println("Requested " + url2 + ", got "+ response.getFirstHeader("value").getValue()+ ".") @TO@ MethodInvocation:log.info("Requested " + url2 + ", got "+ response.getFirstHeader("value").getValue()+ ".") @AT@ 5776 @LENGTH@ 103
---------UPD MethodInvocation@@System.out.println("Requested " + url2 + ", got "+ response.getFirstHeader("value").getValue()+ ".") @TO@ log.info("Requested " + url2 + ", got "+ response.getFirstHeader("value").getValue()+ ".") @AT@ 5776 @LENGTH@ 102
------------INS SimpleName@@Name:log @TO@ MethodInvocation@@System.out.println("Requested " + url2 + ", got "+ response.getFirstHeader("value").getValue()+ ".") @AT@ 5746 @LENGTH@ 3
------------DEL QualifiedName@@Name:System.out @AT@ 5776 @LENGTH@ 10
------------UPD SimpleName@@MethodName:println:["Requested " + url2 + ", got "+ response.getFirstHeader("value").getValue()+ "."] @TO@ MethodName:info:["Requested " + url2 + ", got "+ response.getFirstHeader("value").getValue()+ "."] @AT@ 5787 @LENGTH@ 91
---UPD TryStatement@@try {  System.out.println("Requested " + url1 + ", got "+ response.getFirstHeader("value").getValue()+ ".");  Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());  Assert.assertEquals("Session failed to replicate after container 1 was brough up.",5,Integer.parseInt(response.getFirstHeader("value").getValue()));}  finally {  HttpClientUtils.closeQuietly(response);} @TO@ try {  log.info("Requested " + url1 + ", got "+ response.getFirstHeader("value").getValue()+ ".");  Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());  Assert.assertEquals("Session failed to replicate after container 1 was brough up.",5,Integer.parseInt(response.getFirstHeader("value").getValue()));}  finally {  HttpClientUtils.closeQuietly(response);} @AT@ 6448 @LENGTH@ 492
------UPD ExpressionStatement@@MethodInvocation:System.out.println("Requested " + url1 + ", got "+ response.getFirstHeader("value").getValue()+ ".") @TO@ MethodInvocation:log.info("Requested " + url1 + ", got "+ response.getFirstHeader("value").getValue()+ ".") @AT@ 6470 @LENGTH@ 103
---------UPD MethodInvocation@@System.out.println("Requested " + url1 + ", got "+ response.getFirstHeader("value").getValue()+ ".") @TO@ log.info("Requested " + url1 + ", got "+ response.getFirstHeader("value").getValue()+ ".") @AT@ 6470 @LENGTH@ 102
------------INS SimpleName@@Name:log @TO@ MethodInvocation@@System.out.println("Requested " + url1 + ", got "+ response.getFirstHeader("value").getValue()+ ".") @AT@ 6430 @LENGTH@ 3
------------DEL QualifiedName@@Name:System.out @AT@ 6470 @LENGTH@ 10
------------UPD SimpleName@@MethodName:println:["Requested " + url1 + ", got "+ response.getFirstHeader("value").getValue()+ "."] @TO@ MethodName:info:["Requested " + url1 + ", got "+ response.getFirstHeader("value").getValue()+ "."] @AT@ 6481 @LENGTH@ 91
---UPD TryStatement@@try {  System.out.println("Requested " + url1 + ", got "+ response.getFirstHeader("value").getValue()+ ".");  Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());  Assert.assertEquals(6,Integer.parseInt(response.getFirstHeader("value").getValue()));}  finally {  HttpClientUtils.closeQuietly(response);} @TO@ try {  log.info("Requested " + url1 + ", got "+ response.getFirstHeader("value").getValue()+ ".");  Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());  Assert.assertEquals(6,Integer.parseInt(response.getFirstHeader("value").getValue()));}  finally {  HttpClientUtils.closeQuietly(response);} @AT@ 7092 @LENGTH@ 428
------UPD ExpressionStatement@@MethodInvocation:System.out.println("Requested " + url1 + ", got "+ response.getFirstHeader("value").getValue()+ ".") @TO@ MethodInvocation:log.info("Requested " + url1 + ", got "+ response.getFirstHeader("value").getValue()+ ".") @AT@ 7114 @LENGTH@ 103
---------UPD MethodInvocation@@System.out.println("Requested " + url1 + ", got "+ response.getFirstHeader("value").getValue()+ ".") @TO@ log.info("Requested " + url1 + ", got "+ response.getFirstHeader("value").getValue()+ ".") @AT@ 7114 @LENGTH@ 102
------------INS SimpleName@@Name:log @TO@ MethodInvocation@@System.out.println("Requested " + url1 + ", got "+ response.getFirstHeader("value").getValue()+ ".") @AT@ 7064 @LENGTH@ 3
------------DEL QualifiedName@@Name:System.out @AT@ 7114 @LENGTH@ 10
------------UPD SimpleName@@MethodName:println:["Requested " + url1 + ", got "+ response.getFirstHeader("value").getValue()+ "."] @TO@ MethodName:info:["Requested " + url1 + ", got "+ response.getFirstHeader("value").getValue()+ "."] @AT@ 7125 @LENGTH@ 91


UPD ExpressionStatement@@Assignment:val=value @TO@ Assignment:val=JacORBSubsystemDefinitions.PROPERTIES.parse(value,reader.getLocation()) @AT@ 29123 @LENGTH@ 12
---UPD Assignment@@val=value @TO@ val=JacORBSubsystemDefinitions.PROPERTIES.parse(value,reader.getLocation()) @AT@ 29123 @LENGTH@ 11
------DEL SimpleName@@value @AT@ 29129 @LENGTH@ 5
------INS MethodInvocation@@JacORBSubsystemDefinitions.PROPERTIES.parse(value,reader.getLocation()) @TO@ Assignment@@val=value @AT@ 29132 @LENGTH@ 72
---------INS QualifiedName@@Name:JacORBSubsystemDefinitions.PROPERTIES @TO@ MethodInvocation@@JacORBSubsystemDefinitions.PROPERTIES.parse(value,reader.getLocation()) @AT@ 29132 @LENGTH@ 37
---------INS SimpleName@@MethodName:parse:[value, reader.getLocation()] @TO@ MethodInvocation@@JacORBSubsystemDefinitions.PROPERTIES.parse(value,reader.getLocation()) @AT@ 29170 @LENGTH@ 34
------------INS SimpleName@@value @TO@ SimpleName@@MethodName:parse:[value, reader.getLocation()] @AT@ 29176 @LENGTH@ 5
------------INS MethodInvocation@@reader.getLocation() @TO@ SimpleName@@MethodName:parse:[value, reader.getLocation()] @AT@ 29183 @LENGTH@ 20
---------------INS SimpleName@@Name:reader @TO@ MethodInvocation@@reader.getLocation() @AT@ 29183 @LENGTH@ 6
---------------INS SimpleName@@MethodName:getLocation:[] @TO@ MethodInvocation@@reader.getLocation() @AT@ 29190 @LENGTH@ 13


UPD MethodDeclaration@@public, boolean, MethodName:isCached, final Object key,  @TO@ public, synchronized, boolean, MethodName:isCached, final Object key,  @AT@ 2348 @LENGTH@ 88
---INS Modifier@@synchronized @TO@ MethodDeclaration@@public, boolean, MethodName:isCached, final Object key,  @AT@ 2412 @LENGTH@ 12
---INS IfStatement@@if (!isTransactionActive() || !cache.containsKey(key)) {  return false;} @TO@ MethodDeclaration@@public, boolean, MethodName:isCached, final Object key,  @AT@ 2470 @LENGTH@ 92
------INS InfixExpression@@!isTransactionActive() || !cache.containsKey(key) @TO@ IfStatement@@if (!isTransactionActive() || !cache.containsKey(key)) {  return false;} @AT@ 2474 @LENGTH@ 49
---------INS PrefixExpression@@!isTransactionActive() @TO@ InfixExpression@@!isTransactionActive() || !cache.containsKey(key) @AT@ 2474 @LENGTH@ 22
------------INS Operator@@! @TO@ PrefixExpression@@!isTransactionActive() @AT@ 2474 @LENGTH@ 1
------------INS MethodInvocation@@MethodName:isTransactionActive:[] @TO@ PrefixExpression@@!isTransactionActive() @AT@ 2475 @LENGTH@ 21
---------INS Operator@@|| @TO@ InfixExpression@@!isTransactionActive() || !cache.containsKey(key) @AT@ 2496 @LENGTH@ 2
---------INS PrefixExpression@@!cache.containsKey(key) @TO@ InfixExpression@@!isTransactionActive() || !cache.containsKey(key) @AT@ 2500 @LENGTH@ 23
------------INS Operator@@! @TO@ PrefixExpression@@!cache.containsKey(key) @AT@ 2500 @LENGTH@ 1
------------INS MethodInvocation@@cache.containsKey(key) @TO@ PrefixExpression@@!cache.containsKey(key) @AT@ 2501 @LENGTH@ 22
---------------INS SimpleName@@Name:cache @TO@ MethodInvocation@@cache.containsKey(key) @AT@ 2501 @LENGTH@ 5
---------------INS SimpleName@@MethodName:containsKey:[key] @TO@ MethodInvocation@@cache.containsKey(key) @AT@ 2507 @LENGTH@ 16
------------------INS SimpleName@@key @TO@ SimpleName@@MethodName:containsKey:[key] @AT@ 2519 @LENGTH@ 3
------INS Block@@ThenBody:{  return false;} @TO@ IfStatement@@if (!isTransactionActive() || !cache.containsKey(key)) {  return false;} @AT@ 2525 @LENGTH@ 37
---------INS ReturnStatement@@BooleanLiteral:false @TO@ Block@@ThenBody:{  return false;} @AT@ 2539 @LENGTH@ 13
------------INS BooleanLiteral@@false @TO@ ReturnStatement@@BooleanLiteral:false @AT@ 2546 @LENGTH@ 5
---INS VariableDeclarationStatement@@final Map<Object,CacheEntry> cache=prepareCache(); @TO@ MethodDeclaration@@public, boolean, MethodName:isCached, final Object key,  @AT@ 2571 @LENGTH@ 53
------INS Modifier@@final @TO@ VariableDeclarationStatement@@final Map<Object,CacheEntry> cache=prepareCache(); @AT@ 2571 @LENGTH@ 5
------INS ParameterizedType@@Map<Object,CacheEntry> @TO@ VariableDeclarationStatement@@final Map<Object,CacheEntry> cache=prepareCache(); @AT@ 2577 @LENGTH@ 23
---------INS SimpleType@@Map @TO@ ParameterizedType@@Map<Object,CacheEntry> @AT@ 2577 @LENGTH@ 3
---------INS SimpleType@@Object @TO@ ParameterizedType@@Map<Object,CacheEntry> @AT@ 2581 @LENGTH@ 6
---------INS SimpleType@@CacheEntry @TO@ ParameterizedType@@Map<Object,CacheEntry> @AT@ 2589 @LENGTH@ 10
------INS VariableDeclarationFragment@@cache=prepareCache() @TO@ VariableDeclarationStatement@@final Map<Object,CacheEntry> cache=prepareCache(); @AT@ 2601 @LENGTH@ 22
---------INS SimpleName@@cache @TO@ VariableDeclarationFragment@@cache=prepareCache() @AT@ 2601 @LENGTH@ 5
---------INS MethodInvocation@@MethodName:prepareCache:[] @TO@ VariableDeclarationFragment@@cache=prepareCache() @AT@ 2609 @LENGTH@ 14


INS MethodDeclaration@@public, void, MethodName:testExecute,  @TO@ TypeDeclaration@@[abstract, public]AbstractConnectionPipelineIntegrationTests, AbstractConnectionIntegrationTests @AT@ 3255 @LENGTH@ 174
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testExecute,  @AT@ 3255 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testExecute,  @AT@ 3262 @LENGTH@ 4
---INS SimpleName@@MethodName:testExecute @TO@ MethodDeclaration@@public, void, MethodName:testExecute,  @AT@ 3267 @LENGTH@ 11
---INS ExpressionStatement@@MethodInvocation:connection.set("foo","bar") @TO@ MethodDeclaration@@public, void, MethodName:testExecute,  @AT@ 3285 @LENGTH@ 29
------INS MethodInvocation@@connection.set("foo","bar") @TO@ ExpressionStatement@@MethodInvocation:connection.set("foo","bar") @AT@ 3285 @LENGTH@ 28
---------INS SimpleName@@Name:connection @TO@ MethodInvocation@@connection.set("foo","bar") @AT@ 3285 @LENGTH@ 10
---------INS SimpleName@@MethodName:set:["foo", "bar"] @TO@ MethodInvocation@@connection.set("foo","bar") @AT@ 3296 @LENGTH@ 17
------------INS StringLiteral@@"foo" @TO@ SimpleName@@MethodName:set:["foo", "bar"] @AT@ 3300 @LENGTH@ 5
------------INS StringLiteral@@"bar" @TO@ SimpleName@@MethodName:set:["foo", "bar"] @AT@ 3307 @LENGTH@ 5
---INS ExpressionStatement@@MethodInvocation:actual.add(connection.execute("GET","foo")) @TO@ MethodDeclaration@@public, void, MethodName:testExecute,  @AT@ 3317 @LENGTH@ 45
------INS MethodInvocation@@actual.add(connection.execute("GET","foo")) @TO@ ExpressionStatement@@MethodInvocation:actual.add(connection.execute("GET","foo")) @AT@ 3317 @LENGTH@ 44
---------INS SimpleName@@Name:actual @TO@ MethodInvocation@@actual.add(connection.execute("GET","foo")) @AT@ 3317 @LENGTH@ 6
---------INS SimpleName@@MethodName:add:[connection.execute("GET","foo")] @TO@ MethodInvocation@@actual.add(connection.execute("GET","foo")) @AT@ 3324 @LENGTH@ 37
------------INS MethodInvocation@@connection.execute("GET","foo") @TO@ SimpleName@@MethodName:add:[connection.execute("GET","foo")] @AT@ 3328 @LENGTH@ 32
---------------INS SimpleName@@Name:connection @TO@ MethodInvocation@@connection.execute("GET","foo") @AT@ 3328 @LENGTH@ 10
---------------INS SimpleName@@MethodName:execute:["GET", "foo"] @TO@ MethodInvocation@@connection.execute("GET","foo") @AT@ 3339 @LENGTH@ 21
------------------INS StringLiteral@@"GET" @TO@ SimpleName@@MethodName:execute:["GET", "foo"] @AT@ 3347 @LENGTH@ 5
------------------INS StringLiteral@@"foo" @TO@ SimpleName@@MethodName:execute:["GET", "foo"] @AT@ 3354 @LENGTH@ 5
---INS ExpressionStatement@@MethodInvocation:verifyResults(Arrays.asList(new Object[]{"bar"}),actual) @TO@ MethodDeclaration@@public, void, MethodName:testExecute,  @AT@ 3365 @LENGTH@ 61
------INS MethodInvocation@@verifyResults(Arrays.asList(new Object[]{"bar"}),actual) @TO@ ExpressionStatement@@MethodInvocation:verifyResults(Arrays.asList(new Object[]{"bar"}),actual) @AT@ 3365 @LENGTH@ 60
---------INS SimpleName@@MethodName:verifyResults:[Arrays.asList(new Object[]{"bar"}), actual] @TO@ MethodInvocation@@verifyResults(Arrays.asList(new Object[]{"bar"}),actual) @AT@ 3365 @LENGTH@ 60
------------INS MethodInvocation@@Arrays.asList(new Object[]{"bar"}) @TO@ SimpleName@@MethodName:verifyResults:[Arrays.asList(new Object[]{"bar"}), actual] @AT@ 3379 @LENGTH@ 37
---------------INS SimpleName@@Name:Arrays @TO@ MethodInvocation@@Arrays.asList(new Object[]{"bar"}) @AT@ 3379 @LENGTH@ 6
---------------INS SimpleName@@MethodName:asList:[new Object[]{"bar"}] @TO@ MethodInvocation@@Arrays.asList(new Object[]{"bar"}) @AT@ 3386 @LENGTH@ 30
------------------INS ArrayCreation@@new Object[]{"bar"} @TO@ SimpleName@@MethodName:asList:[new Object[]{"bar"}] @AT@ 3393 @LENGTH@ 22
---------------------INS ArrayType@@Object[] @TO@ ArrayCreation@@new Object[]{"bar"} @AT@ 3397 @LENGTH@ 8
------------------------INS SimpleType@@Object @TO@ ArrayType@@Object[] @AT@ 3397 @LENGTH@ 6
---------------------INS ArrayInitializer@@{"bar"} @TO@ ArrayCreation@@new Object[]{"bar"} @AT@ 3406 @LENGTH@ 9
------------------------INS StringLiteral@@"bar" @TO@ ArrayInitializer@@{"bar"} @AT@ 3408 @LENGTH@ 5
------------INS SimpleName@@actual @TO@ SimpleName@@MethodName:verifyResults:[Arrays.asList(new Object[]{"bar"}), actual] @AT@ 3418 @LENGTH@ 6


INS MethodDeclaration@@protected, void, MethodName:setUp, Exception,  @TO@ TypeDeclaration@@[public]FileConsumeDoneFileIssueTest, ContextTestSupport @AT@ 1152 @LENGTH@ 111
---INS Modifier@@protected @TO@ MethodDeclaration@@protected, void, MethodName:setUp, Exception,  @AT@ 1152 @LENGTH@ 9
---INS PrimitiveType@@void @TO@ MethodDeclaration@@protected, void, MethodName:setUp, Exception,  @AT@ 1162 @LENGTH@ 4
---INS SimpleName@@MethodName:setUp @TO@ MethodDeclaration@@protected, void, MethodName:setUp, Exception,  @AT@ 1167 @LENGTH@ 5
---INS SimpleType@@Exception @TO@ MethodDeclaration@@protected, void, MethodName:setUp, Exception,  @AT@ 1182 @LENGTH@ 9
---INS ExpressionStatement@@MethodInvocation:deleteDirectory("target/done") @TO@ MethodDeclaration@@protected, void, MethodName:setUp, Exception,  @AT@ 1202 @LENGTH@ 31
------INS MethodInvocation@@deleteDirectory("target/done") @TO@ ExpressionStatement@@MethodInvocation:deleteDirectory("target/done") @AT@ 1202 @LENGTH@ 30
---------INS SimpleName@@MethodName:deleteDirectory:["target/done"] @TO@ MethodInvocation@@deleteDirectory("target/done") @AT@ 1202 @LENGTH@ 30
------------INS StringLiteral@@"target/done" @TO@ SimpleName@@MethodName:deleteDirectory:["target/done"] @AT@ 1218 @LENGTH@ 13
---INS ExpressionStatement@@SuperMethodInvocation:super.setUp() @TO@ MethodDeclaration@@protected, void, MethodName:setUp, Exception,  @AT@ 1243 @LENGTH@ 14
------INS SuperMethodInvocation@@super.setUp() @TO@ ExpressionStatement@@SuperMethodInvocation:super.setUp() @AT@ 1243 @LENGTH@ 13
---------INS SimpleName@@MethodName:setUp:[] @TO@ SuperMethodInvocation@@super.setUp() @AT@ 1249 @LENGTH@ 5


DEL MethodDeclaration@@public, void, MethodName:testZRevRangeWithScores,  @AT@ 3198 @LENGTH@ 42
---DEL Modifier@@public @AT@ 3198 @LENGTH@ 6
---DEL PrimitiveType@@void @AT@ 3205 @LENGTH@ 4
---DEL SimpleName@@MethodName:testZRevRangeWithScores @AT@ 3210 @LENGTH@ 23


INS MethodDeclaration@@public, void, MethodName:testSortStore,  @TO@ TypeDeclaration@@[public]RjcConnectionIntegrationTests, AbstractConnectionIntegrationTests @AT@ 2695 @LENGTH@ 32
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testSortStore,  @AT@ 2695 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testSortStore,  @AT@ 2702 @LENGTH@ 4
---INS SimpleName@@MethodName:testSortStore @TO@ MethodDeclaration@@public, void, MethodName:testSortStore,  @AT@ 2707 @LENGTH@ 13


UPD Block@@ThenBody:{  Iterator<?> it=ObjectHelper.createIterator(types);  for (int i=0; i < method.getParameterTypes().length; i++) {    if (it.hasNext()) {      Class<?> parameterType=method.getParameterTypes()[i];      String qualifyType=(String)it.next();      if (ObjectHelper.isEmpty(qualifyType)) {        continue;      }      qualifyType=qualifyType.trim();      if ("*".equals(qualifyType)) {        continue;      }      if (BeanHelper.isValidParameterValue(qualifyType)) {        continue;      }      Boolean assignable=BeanHelper.isAssignableToExpectedType(getCamelContext().getClassResolver(),qualifyType,parameterType);      if (assignable != null && !assignable) {        return false;      }    } else {      return false;    }  }  if (it.hasNext()) {    return false;  }} @TO@ ThenBody:{  String[] parameters=StringQuoteHelper.splitSafeQuote(types,',');  Iterator<?> it=ObjectHelper.createIterator(parameters);  for (int i=0; i < method.getParameterTypes().length; i++) {    if (it.hasNext()) {      Class<?> parameterType=method.getParameterTypes()[i];      String qualifyType=(String)it.next();      if (ObjectHelper.isEmpty(qualifyType)) {        continue;      }      qualifyType=qualifyType.trim();      if ("*".equals(qualifyType)) {        continue;      }      if (BeanHelper.isValidParameterValue(qualifyType)) {        continue;      }      Boolean assignable=BeanHelper.isAssignableToExpectedType(getCamelContext().getClassResolver(),qualifyType,parameterType);      if (assignable != null && !assignable) {        return false;      }    } else {      return false;    }  }  if (it.hasNext()) {    return false;  }} @AT@ 39392 @LENGTH@ 1941
---UPD VariableDeclarationStatement@@Iterator<?> it=ObjectHelper.createIterator(types); @TO@ Iterator<?> it=ObjectHelper.createIterator(parameters); @AT@ 39468 @LENGTH@ 52
------UPD VariableDeclarationFragment@@it=ObjectHelper.createIterator(types) @TO@ it=ObjectHelper.createIterator(parameters) @AT@ 39480 @LENGTH@ 39
---------UPD MethodInvocation@@ObjectHelper.createIterator(types) @TO@ ObjectHelper.createIterator(parameters) @AT@ 39485 @LENGTH@ 34
------------UPD SimpleName@@MethodName:createIterator:[types] @TO@ MethodName:createIterator:[parameters] @AT@ 39498 @LENGTH@ 21
---------------UPD SimpleName@@types @TO@ parameters @AT@ 39513 @LENGTH@ 5
---INS VariableDeclarationStatement@@String[] parameters=StringQuoteHelper.splitSafeQuote(types,','); @TO@ Block@@ThenBody:{  Iterator<?> it=ObjectHelper.createIterator(types);  for (int i=0; i < method.getParameterTypes().length; i++) {    if (it.hasNext()) {      Class<?> parameterType=method.getParameterTypes()[i];      String qualifyType=(String)it.next();      if (ObjectHelper.isEmpty(qualifyType)) {        continue;      }      qualifyType=qualifyType.trim();      if ("*".equals(qualifyType)) {        continue;      }      if (BeanHelper.isValidParameterValue(qualifyType)) {        continue;      }      Boolean assignable=BeanHelper.isAssignableToExpectedType(getCamelContext().getClassResolver(),qualifyType,parameterType);      if (assignable != null && !assignable) {        return false;      }    } else {      return false;    }  }  if (it.hasNext()) {    return false;  }} @AT@ 39516 @LENGTH@ 67
------INS ArrayType@@String[] @TO@ VariableDeclarationStatement@@String[] parameters=StringQuoteHelper.splitSafeQuote(types,','); @AT@ 39516 @LENGTH@ 8
---------INS SimpleType@@String @TO@ ArrayType@@String[] @AT@ 39516 @LENGTH@ 6
------INS VariableDeclarationFragment@@parameters=StringQuoteHelper.splitSafeQuote(types,',') @TO@ VariableDeclarationStatement@@String[] parameters=StringQuoteHelper.splitSafeQuote(types,','); @AT@ 39525 @LENGTH@ 57
---------INS SimpleName@@parameters @TO@ VariableDeclarationFragment@@parameters=StringQuoteHelper.splitSafeQuote(types,',') @AT@ 39525 @LENGTH@ 10
---------INS MethodInvocation@@StringQuoteHelper.splitSafeQuote(types,',') @TO@ VariableDeclarationFragment@@parameters=StringQuoteHelper.splitSafeQuote(types,',') @AT@ 39538 @LENGTH@ 44
------------INS SimpleName@@Name:StringQuoteHelper @TO@ MethodInvocation@@StringQuoteHelper.splitSafeQuote(types,',') @AT@ 39538 @LENGTH@ 17
------------INS SimpleName@@MethodName:splitSafeQuote:[types, ','] @TO@ MethodInvocation@@StringQuoteHelper.splitSafeQuote(types,',') @AT@ 39556 @LENGTH@ 26
---------------INS SimpleName@@types @TO@ SimpleName@@MethodName:splitSafeQuote:[types, ','] @AT@ 39571 @LENGTH@ 5
---------------INS CharacterLiteral@@',' @TO@ SimpleName@@MethodName:splitSafeQuote:[types, ','] @AT@ 39578 @LENGTH@ 3


INS TryStatement@@try {  applyUpdate(managementClient,operation);} catch (Exception e) {  log.error("Exception applying reload operation. This is probably fine, as the server probably shut down before the response was sent",e);} @TO@ MethodDeclaration@@public, static, void, MethodName:reload, final ManagementClient managementClient, Exception,  @AT@ 7938 @LENGTH@ 252
---MOV ExpressionStatement@@MethodInvocation:applyUpdate(managementClient,operation) @TO@ TryStatement@@try {  applyUpdate(managementClient,operation);} catch (Exception e) {  log.error("Exception applying reload operation. This is probably fine, as the server probably shut down before the response was sent",e);} @AT@ 7942 @LENGTH@ 41
---INS CatchClause@@catch (Exception e) {  log.error("Exception applying reload operation. This is probably fine, as the server probably shut down before the response was sent",e);} @TO@ TryStatement@@try {  applyUpdate(managementClient,operation);} catch (Exception e) {  log.error("Exception applying reload operation. This is probably fine, as the server probably shut down before the response was sent",e);} @AT@ 8008 @LENGTH@ 182
------INS SingleVariableDeclaration@@Exception e @TO@ CatchClause@@catch (Exception e) {  log.error("Exception applying reload operation. This is probably fine, as the server probably shut down before the response was sent",e);} @AT@ 8015 @LENGTH@ 11
---------INS SimpleType@@Exception @TO@ SingleVariableDeclaration@@Exception e @AT@ 8015 @LENGTH@ 9
---------INS SimpleName@@e @TO@ SingleVariableDeclaration@@Exception e @AT@ 8025 @LENGTH@ 1
------INS ExpressionStatement@@MethodInvocation:log.error("Exception applying reload operation. This is probably fine, as the server probably shut down before the response was sent",e) @TO@ CatchClause@@catch (Exception e) {  log.error("Exception applying reload operation. This is probably fine, as the server probably shut down before the response was sent",e);} @AT@ 8042 @LENGTH@ 138
---------INS MethodInvocation@@log.error("Exception applying reload operation. This is probably fine, as the server probably shut down before the response was sent",e) @TO@ ExpressionStatement@@MethodInvocation:log.error("Exception applying reload operation. This is probably fine, as the server probably shut down before the response was sent",e) @AT@ 8042 @LENGTH@ 137
------------INS SimpleName@@Name:log @TO@ MethodInvocation@@log.error("Exception applying reload operation. This is probably fine, as the server probably shut down before the response was sent",e) @AT@ 8042 @LENGTH@ 3
------------INS SimpleName@@MethodName:error:["Exception applying reload operation. This is probably fine, as the server probably shut down before the response was sent", e] @TO@ MethodInvocation@@log.error("Exception applying reload operation. This is probably fine, as the server probably shut down before the response was sent",e) @AT@ 8046 @LENGTH@ 133
---------------INS StringLiteral@@"Exception applying reload operation. This is probably fine, as the server probably shut down before the response was sent" @TO@ SimpleName@@MethodName:error:["Exception applying reload operation. This is probably fine, as the server probably shut down before the response was sent", e] @AT@ 8052 @LENGTH@ 123
---------------INS SimpleName@@e @TO@ SimpleName@@MethodName:error:["Exception applying reload operation. This is probably fine, as the server probably shut down before the response was sent", e] @AT@ 8177 @LENGTH@ 1


UPD ExpressionStatement@@MethodInvocation:parseDeploymentOverlays(reader,expectedNs,new ModelNode(),list) @TO@ MethodInvocation:parseDeploymentOverlays(reader,expectedNs,new ModelNode(),list,true,false) @AT@ 20478 @LENGTH@ 67
---UPD MethodInvocation@@parseDeploymentOverlays(reader,expectedNs,new ModelNode(),list) @TO@ parseDeploymentOverlays(reader,expectedNs,new ModelNode(),list,true,false) @AT@ 20478 @LENGTH@ 66
------UPD SimpleName@@MethodName:parseDeploymentOverlays:[reader, expectedNs, new ModelNode(), list] @TO@ MethodName:parseDeploymentOverlays:[reader, expectedNs, new ModelNode(), list, true, false] @AT@ 20478 @LENGTH@ 66
---------INS BooleanLiteral@@true @TO@ SimpleName@@MethodName:parseDeploymentOverlays:[reader, expectedNs, new ModelNode(), list] @AT@ 20545 @LENGTH@ 4
---------INS BooleanLiteral@@false @TO@ SimpleName@@MethodName:parseDeploymentOverlays:[reader, expectedNs, new ModelNode(), list] @AT@ 20551 @LENGTH@ 5


UPD ExpressionStatement@@MethodInvocation:assertEquals((Long)123l,transferMessage.getHeader("long",Long.class)) @TO@ MethodInvocation:assertEquals((Long)123L,transferMessage.getHeader("long",Long.class)) @AT@ 3381 @LENGTH@ 73
---UPD MethodInvocation@@assertEquals((Long)123l,transferMessage.getHeader("long",Long.class)) @TO@ assertEquals((Long)123L,transferMessage.getHeader("long",Long.class)) @AT@ 3381 @LENGTH@ 72
------UPD SimpleName@@MethodName:assertEquals:[(Long)123l, transferMessage.getHeader("long",Long.class)] @TO@ MethodName:assertEquals:[(Long)123L, transferMessage.getHeader("long",Long.class)] @AT@ 3381 @LENGTH@ 72
---------UPD CastExpression@@(Long)123l @TO@ (Long)123L @AT@ 3394 @LENGTH@ 11
------------UPD NumberLiteral@@123l @TO@ 123L @AT@ 3401 @LENGTH@ 4


UPD VariableDeclarationStatement@@final ControlledProcessState processState=new ControlledProcessState(false); @TO@ final ControlledProcessState processState=new ControlledProcessState(true); @AT@ 2151 @LENGTH@ 78
---UPD VariableDeclarationFragment@@processState=new ControlledProcessState(false) @TO@ processState=new ControlledProcessState(true) @AT@ 2180 @LENGTH@ 48
------UPD ClassInstanceCreation@@ControlledProcessState[false] @TO@ ControlledProcessState[true] @AT@ 2195 @LENGTH@ 33
---------UPD BooleanLiteral@@false @TO@ true @AT@ 2222 @LENGTH@ 5


UPD IfStatement@@if (!config.expectFailedWriteAttributeOperation(writeOp)) {  Assert.assertEquals("Failed: " + writeOp + "\n"+ result,SUCCESS,result.get(OUTCOME).asString());} else {  Assert.assertEquals("Expected failure: " + writeOp,FAILED,result.get(OUTCOME).asString());  transformedOperation=mainServices.transformOperation(modelVersion,config.correctWriteAttributeOperation(writeOp));  result=mainServices.executeOperation(modelVersion,transformedOperation);  Assert.assertEquals(result.get(FAILURE_DESCRIPTION).asString() + " for\n:" + transformedOperation.getTransformedOperation(),SUCCESS,result.get(OUTCOME).asString());} @TO@ if (!config.expectFailedWriteAttributeOperation(writeOp)) {  Assert.assertEquals("Failed: " + writeOp + "\n"+ result,SUCCESS,result.get(OUTCOME).asString());} else {  Assert.assertEquals("Expected failure: " + writeOp,FAILED,result.get(OUTCOME).asString());  transformedOperation=mainServices.transformOperation(modelVersion,config.correctWriteAttributeOperation(writeOp));  result=mainServices.executeOperation(modelVersion,transformedOperation);} @AT@ 22269 @LENGTH@ 757
---UPD Block@@ElseBody:{  Assert.assertEquals("Expected failure: " + writeOp,FAILED,result.get(OUTCOME).asString());  transformedOperation=mainServices.transformOperation(modelVersion,config.correctWriteAttributeOperation(writeOp));  result=mainServices.executeOperation(modelVersion,transformedOperation);  Assert.assertEquals(result.get(FAILURE_DESCRIPTION).asString() + " for\n:" + transformedOperation.getTransformedOperation(),SUCCESS,result.get(OUTCOME).asString());} @TO@ ElseBody:{  Assert.assertEquals("Expected failure: " + writeOp,FAILED,result.get(OUTCOME).asString());  transformedOperation=mainServices.transformOperation(modelVersion,config.correctWriteAttributeOperation(writeOp));  result=mainServices.executeOperation(modelVersion,transformedOperation);} @AT@ 22472 @LENGTH@ 554
------DEL ExpressionStatement@@MethodInvocation:Assert.assertEquals(result.get(FAILURE_DESCRIPTION).asString() + " for\n:" + transformedOperation.getTransformedOperation(),SUCCESS,result.get(OUTCOME).asString()) @AT@ 22842 @LENGTH@ 166
---------DEL MethodInvocation@@Assert.assertEquals(result.get(FAILURE_DESCRIPTION).asString() + " for\n:" + transformedOperation.getTransformedOperation(),SUCCESS,result.get(OUTCOME).asString()) @AT@ 22842 @LENGTH@ 165
------------DEL SimpleName@@Name:Assert @AT@ 22842 @LENGTH@ 6
------------DEL SimpleName@@MethodName:assertEquals:[result.get(FAILURE_DESCRIPTION).asString() + " for\n:" + transformedOperation.getTransformedOperation(), SUCCESS, result.get(OUTCOME).asString()] @AT@ 22849 @LENGTH@ 158
---------------DEL InfixExpression@@result.get(FAILURE_DESCRIPTION).asString() + " for\n:" + transformedOperation.getTransformedOperation() @AT@ 22862 @LENGTH@ 103
------------------DEL MethodInvocation@@result.get(FAILURE_DESCRIPTION).asString() @AT@ 22862 @LENGTH@ 42
---------------------DEL MethodInvocation@@MethodName:get:[FAILURE_DESCRIPTION] @AT@ 22862 @LENGTH@ 31
------------------------DEL SimpleName@@FAILURE_DESCRIPTION @AT@ 22873 @LENGTH@ 19
---------------------DEL SimpleName@@Name:result @AT@ 22862 @LENGTH@ 6
---------------------DEL SimpleName@@MethodName:asString:[] @AT@ 22894 @LENGTH@ 10
------------------DEL Operator@@+ @AT@ 22904 @LENGTH@ 1
------------------DEL StringLiteral@@" for\n:" @AT@ 22907 @LENGTH@ 9
------------------DEL MethodInvocation@@transformedOperation.getTransformedOperation() @AT@ 22919 @LENGTH@ 46
---------------------DEL SimpleName@@Name:transformedOperation @AT@ 22919 @LENGTH@ 20
---------------------DEL SimpleName@@MethodName:getTransformedOperation:[] @AT@ 22940 @LENGTH@ 25
---------------DEL SimpleName@@SUCCESS @AT@ 22967 @LENGTH@ 7
---------------DEL MethodInvocation@@result.get(OUTCOME).asString() @AT@ 22976 @LENGTH@ 30
------------------DEL MethodInvocation@@MethodName:get:[OUTCOME] @AT@ 22976 @LENGTH@ 19
---------------------DEL SimpleName@@OUTCOME @AT@ 22987 @LENGTH@ 7
------------------DEL SimpleName@@Name:result @AT@ 22976 @LENGTH@ 6
------------------DEL SimpleName@@MethodName:asString:[] @AT@ 22996 @LENGTH@ 10


INS ExpressionStatement@@MethodInvocation:Thread.sleep(1000) @TO@ MethodDeclaration@@public, void, MethodName:testInitializeContainerWithMultipleTopicsIncludingPattern, Exception,  @AT@ 7155 @LENGTH@ 19
---INS MethodInvocation@@Thread.sleep(1000) @TO@ ExpressionStatement@@MethodInvocation:Thread.sleep(1000) @AT@ 7155 @LENGTH@ 18
------INS SimpleName@@Name:Thread @TO@ MethodInvocation@@Thread.sleep(1000) @AT@ 7155 @LENGTH@ 6
------INS SimpleName@@MethodName:sleep:[1000] @TO@ MethodInvocation@@Thread.sleep(1000) @AT@ 7162 @LENGTH@ 11
---------INS NumberLiteral@@1000 @TO@ SimpleName@@MethodName:sleep:[1000] @AT@ 7168 @LENGTH@ 4


UPD MethodDeclaration@@public, static, void, MethodName:activate, OperationContext context, String raName, String rarName, OperationFailedException,  @TO@ public, static, void, MethodName:activate, OperationContext context, String raName, String rarName, final ServiceVerificationHandler serviceVerificationHandler, OperationFailedException,  @AT@ 18815 @LENGTH@ 1345
---INS SingleVariableDeclaration@@final ServiceVerificationHandler serviceVerificationHandler @TO@ MethodDeclaration@@public, static, void, MethodName:activate, OperationContext context, String raName, String rarName, OperationFailedException,  @AT@ 18900 @LENGTH@ 59
------INS Modifier@@final @TO@ SingleVariableDeclaration@@final ServiceVerificationHandler serviceVerificationHandler @AT@ 18900 @LENGTH@ 5
------INS SimpleType@@ServiceVerificationHandler @TO@ SingleVariableDeclaration@@final ServiceVerificationHandler serviceVerificationHandler @AT@ 18906 @LENGTH@ 26
------INS SimpleName@@serviceVerificationHandler @TO@ SingleVariableDeclaration@@final ServiceVerificationHandler serviceVerificationHandler @AT@ 18933 @LENGTH@ 26
---UPD ExpressionStatement@@MethodInvocation:RaServicesFactory.createDeploymentService(inactive.getRegistration(),inactive.getConnectorXmlDescriptor(),inactive.getModule(),inactive.getServiceTarget(),raName,inactive.getDeploymentUnitServiceName(),inactive.getDeployment(),raxml,inactive.getResource()) @TO@ MethodInvocation:RaServicesFactory.createDeploymentService(inactive.getRegistration(),inactive.getConnectorXmlDescriptor(),inactive.getModule(),inactive.getServiceTarget(),raName,inactive.getDeploymentUnitServiceName(),inactive.getDeployment(),raxml,inactive.getResource(),serviceVerificationHandler) @AT@ 19889 @LENGTH@ 265
------UPD MethodInvocation@@RaServicesFactory.createDeploymentService(inactive.getRegistration(),inactive.getConnectorXmlDescriptor(),inactive.getModule(),inactive.getServiceTarget(),raName,inactive.getDeploymentUnitServiceName(),inactive.getDeployment(),raxml,inactive.getResource()) @TO@ RaServicesFactory.createDeploymentService(inactive.getRegistration(),inactive.getConnectorXmlDescriptor(),inactive.getModule(),inactive.getServiceTarget(),raName,inactive.getDeploymentUnitServiceName(),inactive.getDeployment(),raxml,inactive.getResource(),serviceVerificationHandler) @AT@ 19889 @LENGTH@ 264
---------UPD SimpleName@@MethodName:createDeploymentService:[inactive.getRegistration(), inactive.getConnectorXmlDescriptor(), inactive.getModule(), inactive.getServiceTarget(), raName, inactive.getDeploymentUnitServiceName(), inactive.getDeployment(), raxml, inactive.getResource()] @TO@ MethodName:createDeploymentService:[inactive.getRegistration(), inactive.getConnectorXmlDescriptor(), inactive.getModule(), inactive.getServiceTarget(), raName, inactive.getDeploymentUnitServiceName(), inactive.getDeployment(), raxml, inactive.getResource(), serviceVerificationHandler] @AT@ 19907 @LENGTH@ 246
------------INS SimpleName@@serviceVerificationHandler @TO@ SimpleName@@MethodName:createDeploymentService:[inactive.getRegistration(), inactive.getConnectorXmlDescriptor(), inactive.getModule(), inactive.getServiceTarget(), raName, inactive.getDeploymentUnitServiceName(), inactive.getDeployment(), raxml, inactive.getResource()] @AT@ 20215 @LENGTH@ 26


UPD ReturnStatement@@SimpleName:iPredicates @TO@ MethodInvocation:FunctorUtils.copy(iPredicates) @AT@ 6302 @LENGTH@ 19
---INS MethodInvocation@@FunctorUtils.copy(iPredicates) @TO@ ReturnStatement@@SimpleName:iPredicates @AT@ 6294 @LENGTH@ 30
------INS SimpleName@@Name:FunctorUtils @TO@ MethodInvocation@@FunctorUtils.copy(iPredicates) @AT@ 6294 @LENGTH@ 12
------INS SimpleName@@MethodName:copy:[iPredicates] @TO@ MethodInvocation@@FunctorUtils.copy(iPredicates) @AT@ 6307 @LENGTH@ 17
---------INS SimpleName@@iPredicates @TO@ SimpleName@@MethodName:copy:[iPredicates] @AT@ 6312 @LENGTH@ 11
---DEL SimpleName@@iPredicates @AT@ 6309 @LENGTH@ 11


UPD ExpressionStatement@@MethodInvocation:BindingAddHandler.installBindingService(context,unresolvedConfig,bindingName) @TO@ MethodInvocation:BindingAddHandler.installBindingService(context,unresolvedConfig,bindingName,null) @AT@ 6532 @LENGTH@ 80
---UPD MethodInvocation@@BindingAddHandler.installBindingService(context,unresolvedConfig,bindingName) @TO@ BindingAddHandler.installBindingService(context,unresolvedConfig,bindingName,null) @AT@ 6532 @LENGTH@ 79
------UPD SimpleName@@MethodName:installBindingService:[context, unresolvedConfig, bindingName] @TO@ MethodName:installBindingService:[context, unresolvedConfig, bindingName, null] @AT@ 6550 @LENGTH@ 61
---------INS NullLiteral@@null @TO@ SimpleName@@MethodName:installBindingService:[context, unresolvedConfig, bindingName] @AT@ 6618 @LENGTH@ 4


INS MethodDeclaration@@boolean, MethodName:agentConfigurationEquals, Profile other,  @TO@ TypeDeclaration@@[public]Profile, [Comparable<Profile>, HasId] @AT@ 3714 @LENGTH@ 40
---INS PrimitiveType@@boolean @TO@ MethodDeclaration@@boolean, MethodName:agentConfigurationEquals, Profile other,  @AT@ 3706 @LENGTH@ 7
---INS SimpleName@@MethodName:agentConfigurationEquals @TO@ MethodDeclaration@@boolean, MethodName:agentConfigurationEquals, Profile other,  @AT@ 3714 @LENGTH@ 24
---INS SingleVariableDeclaration@@Profile other @TO@ MethodDeclaration@@boolean, MethodName:agentConfigurationEquals, Profile other,  @AT@ 3739 @LENGTH@ 13
------INS SimpleType@@Profile @TO@ SingleVariableDeclaration@@Profile other @AT@ 3739 @LENGTH@ 7
------INS SimpleName@@other @TO@ SingleVariableDeclaration@@Profile other @AT@ 3747 @LENGTH@ 5


UPD Block@@ThenBody:{  String placeholder=provider.getCountQueryPlaceholder();  String entityName=entityInformation.getEntityName();  String idAttributeName=entityInformation.getIdAttribute().getName();  String existsQuery=String.format(EXISTS_QUERY_STRING,placeholder,entityName,idAttributeName);  TypedQuery<Long> query=em.createQuery(existsQuery,Long.class);  query.setParameter("id",id);  return query.getSingleResult() == 1;} @TO@ ThenBody:{  String placeholder=provider.getCountQueryPlaceholder();  String entityName=entityInformation.getEntityName();  Iterable<String> idAttributeNames=entityInformation.getIdAttributeNames();  String existsQuery=QueryUtils.getExistsQueryString(entityName,placeholder,idAttributeNames);  TypedQuery<Long> query=em.createQuery(existsQuery,Long.class);  if (entityInformation.hasCompositeId()) {    for (    String idAttributeName : idAttributeNames) {      query.setParameter(idAttributeName,entityInformation.getCompositeIdAttributeValue(id,idAttributeName));    }  } else {    query.setParameter(idAttributeNames.iterator().next(),id);  }  return query.getSingleResult() == 1L;} @AT@ 6672 @LENGTH@ 445
---UPD VariableDeclarationStatement@@String idAttributeName=entityInformation.getIdAttribute().getName(); @TO@ Iterable<String> idAttributeNames=entityInformation.getIdAttributeNames(); @AT@ 6797 @LENGTH@ 70
------DEL SimpleType@@String @AT@ 6797 @LENGTH@ 6
------UPD VariableDeclarationFragment@@idAttributeName=entityInformation.getIdAttribute().getName() @TO@ idAttributeNames=entityInformation.getIdAttributeNames() @AT@ 6804 @LENGTH@ 62
---------UPD SimpleName@@idAttributeName @TO@ idAttributeNames @AT@ 6804 @LENGTH@ 15
---------UPD MethodInvocation@@entityInformation.getIdAttribute().getName() @TO@ entityInformation.getIdAttributeNames() @AT@ 6822 @LENGTH@ 44
------------DEL MethodInvocation@@MethodName:getIdAttribute:[] @AT@ 6822 @LENGTH@ 34
------------UPD SimpleName@@MethodName:getName:[] @TO@ MethodName:getIdAttributeNames:[] @AT@ 6857 @LENGTH@ 9
------INS ParameterizedType@@Iterable<String> @TO@ VariableDeclarationStatement@@String idAttributeName=entityInformation.getIdAttribute().getName(); @AT@ 6824 @LENGTH@ 16
---------INS SimpleType@@Iterable @TO@ ParameterizedType@@Iterable<String> @AT@ 6824 @LENGTH@ 8
---------INS SimpleType@@String @TO@ ParameterizedType@@Iterable<String> @AT@ 6833 @LENGTH@ 6
---UPD VariableDeclarationStatement@@String existsQuery=String.format(EXISTS_QUERY_STRING,placeholder,entityName,idAttributeName); @TO@ String existsQuery=QueryUtils.getExistsQueryString(entityName,placeholder,idAttributeNames); @AT@ 6871 @LENGTH@ 98
------UPD VariableDeclarationFragment@@existsQuery=String.format(EXISTS_QUERY_STRING,placeholder,entityName,idAttributeName) @TO@ existsQuery=QueryUtils.getExistsQueryString(entityName,placeholder,idAttributeNames) @AT@ 6878 @LENGTH@ 90
---------UPD MethodInvocation@@String.format(EXISTS_QUERY_STRING,placeholder,entityName,idAttributeName) @TO@ QueryUtils.getExistsQueryString(entityName,placeholder,idAttributeNames) @AT@ 6892 @LENGTH@ 76
------------UPD SimpleName@@Name:String @TO@ Name:QueryUtils @AT@ 6892 @LENGTH@ 6
------------UPD SimpleName@@MethodName:format:[EXISTS_QUERY_STRING, placeholder, entityName, idAttributeName] @TO@ MethodName:getExistsQueryString:[entityName, placeholder, idAttributeNames] @AT@ 6899 @LENGTH@ 69
---------------UPD SimpleName@@EXISTS_QUERY_STRING @TO@ entityName @AT@ 6906 @LENGTH@ 19
---------------DEL SimpleName@@entityName @AT@ 6940 @LENGTH@ 10
---------------UPD SimpleName@@idAttributeName @TO@ idAttributeNames @AT@ 6952 @LENGTH@ 15
---UPD ExpressionStatement@@MethodInvocation:query.setParameter("id",id) @TO@ MethodInvocation:query.setParameter(idAttributeNames.iterator().next(),id) @AT@ 7043 @LENGTH@ 29
---INS IfStatement@@if (entityInformation.hasCompositeId()) {  for (  String idAttributeName : idAttributeNames) {    query.setParameter(idAttributeName,entityInformation.getCompositeIdAttributeValue(id,idAttributeName));  }} else {  query.setParameter(idAttributeNames.iterator().next(),id);} @TO@ Block@@ThenBody:{  String placeholder=provider.getCountQueryPlaceholder();  String entityName=entityInformation.getEntityName();  String idAttributeName=entityInformation.getIdAttribute().getName();  String existsQuery=String.format(EXISTS_QUERY_STRING,placeholder,entityName,idAttributeName);  TypedQuery<Long> query=em.createQuery(existsQuery,Long.class);  query.setParameter("id",id);  return query.getSingleResult() == 1;} @AT@ 7075 @LENGTH@ 293
------INS MethodInvocation@@entityInformation.hasCompositeId() @TO@ IfStatement@@if (entityInformation.hasCompositeId()) {  for (  String idAttributeName : idAttributeNames) {    query.setParameter(idAttributeName,entityInformation.getCompositeIdAttributeValue(id,idAttributeName));  }} else {  query.setParameter(idAttributeNames.iterator().next(),id);} @AT@ 7079 @LENGTH@ 34
---------INS SimpleName@@Name:entityInformation @TO@ MethodInvocation@@entityInformation.hasCompositeId() @AT@ 7079 @LENGTH@ 17
---------INS SimpleName@@MethodName:hasCompositeId:[] @TO@ MethodInvocation@@entityInformation.hasCompositeId() @AT@ 7097 @LENGTH@ 16
------INS Block@@ThenBody:{  for (  String idAttributeName : idAttributeNames) {    query.setParameter(idAttributeName,entityInformation.getCompositeIdAttributeValue(id,idAttributeName));  }} @TO@ IfStatement@@if (entityInformation.hasCompositeId()) {  for (  String idAttributeName : idAttributeNames) {    query.setParameter(idAttributeName,entityInformation.getCompositeIdAttributeValue(id,idAttributeName));  }} else {  query.setParameter(idAttributeNames.iterator().next(),id);} @AT@ 7115 @LENGTH@ 177
---------INS EnhancedForStatement@@for (String idAttributeName : idAttributeNames) {  query.setParameter(idAttributeName,entityInformation.getCompositeIdAttributeValue(id,idAttributeName));} @TO@ Block@@ThenBody:{  for (  String idAttributeName : idAttributeNames) {    query.setParameter(idAttributeName,entityInformation.getCompositeIdAttributeValue(id,idAttributeName));  }} @AT@ 7121 @LENGTH@ 166
------------INS SingleVariableDeclaration@@String idAttributeName @TO@ EnhancedForStatement@@for (String idAttributeName : idAttributeNames) {  query.setParameter(idAttributeName,entityInformation.getCompositeIdAttributeValue(id,idAttributeName));} @AT@ 7126 @LENGTH@ 22
---------------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String idAttributeName @AT@ 7126 @LENGTH@ 6
---------------INS SimpleName@@idAttributeName @TO@ SingleVariableDeclaration@@String idAttributeName @AT@ 7133 @LENGTH@ 15
------------INS SimpleName@@idAttributeNames @TO@ EnhancedForStatement@@for (String idAttributeName : idAttributeNames) {  query.setParameter(idAttributeName,entityInformation.getCompositeIdAttributeValue(id,idAttributeName));} @AT@ 7151 @LENGTH@ 16
------------INS ExpressionStatement@@MethodInvocation:query.setParameter(idAttributeName,entityInformation.getCompositeIdAttributeValue(id,idAttributeName)) @TO@ EnhancedForStatement@@for (String idAttributeName : idAttributeNames) {  query.setParameter(idAttributeName,entityInformation.getCompositeIdAttributeValue(id,idAttributeName));} @AT@ 7176 @LENGTH@ 105
---------------INS MethodInvocation@@query.setParameter(idAttributeName,entityInformation.getCompositeIdAttributeValue(id,idAttributeName)) @TO@ ExpressionStatement@@MethodInvocation:query.setParameter(idAttributeName,entityInformation.getCompositeIdAttributeValue(id,idAttributeName)) @AT@ 7176 @LENGTH@ 104
------------------INS SimpleName@@Name:query @TO@ MethodInvocation@@query.setParameter(idAttributeName,entityInformation.getCompositeIdAttributeValue(id,idAttributeName)) @AT@ 7176 @LENGTH@ 5
------------------INS SimpleName@@MethodName:setParameter:[idAttributeName, entityInformation.getCompositeIdAttributeValue(id,idAttributeName)] @TO@ MethodInvocation@@query.setParameter(idAttributeName,entityInformation.getCompositeIdAttributeValue(id,idAttributeName)) @AT@ 7182 @LENGTH@ 98
---------------------INS SimpleName@@idAttributeName @TO@ SimpleName@@MethodName:setParameter:[idAttributeName, entityInformation.getCompositeIdAttributeValue(id,idAttributeName)] @AT@ 7195 @LENGTH@ 15
---------------------INS MethodInvocation@@entityInformation.getCompositeIdAttributeValue(id,idAttributeName) @TO@ SimpleName@@MethodName:setParameter:[idAttributeName, entityInformation.getCompositeIdAttributeValue(id,idAttributeName)] @AT@ 7212 @LENGTH@ 67
------------------------INS SimpleName@@Name:entityInformation @TO@ MethodInvocation@@entityInformation.getCompositeIdAttributeValue(id,idAttributeName) @AT@ 7212 @LENGTH@ 17
------------------------INS SimpleName@@MethodName:getCompositeIdAttributeValue:[id, idAttributeName] @TO@ MethodInvocation@@entityInformation.getCompositeIdAttributeValue(id,idAttributeName) @AT@ 7230 @LENGTH@ 49
---------------------------INS SimpleName@@id @TO@ SimpleName@@MethodName:getCompositeIdAttributeValue:[id, idAttributeName] @AT@ 7259 @LENGTH@ 2
---------------------------INS SimpleName@@idAttributeName @TO@ SimpleName@@MethodName:getCompositeIdAttributeValue:[id, idAttributeName] @AT@ 7263 @LENGTH@ 15
------INS Block@@ElseBody:{  query.setParameter(idAttributeNames.iterator().next(),id);} @TO@ IfStatement@@if (entityInformation.hasCompositeId()) {  for (  String idAttributeName : idAttributeNames) {    query.setParameter(idAttributeName,entityInformation.getCompositeIdAttributeValue(id,idAttributeName));  }} else {  query.setParameter(idAttributeNames.iterator().next(),id);} @AT@ 7298 @LENGTH@ 70
---------MOV ExpressionStatement@@MethodInvocation:query.setParameter("id",id) @TO@ Block@@ElseBody:{  query.setParameter(idAttributeNames.iterator().next(),id);} @AT@ 7043 @LENGTH@ 29
------------UPD MethodInvocation@@query.setParameter("id",id) @TO@ query.setParameter(idAttributeNames.iterator().next(),id) @AT@ 7043 @LENGTH@ 28
---------------UPD SimpleName@@MethodName:setParameter:["id", id] @TO@ MethodName:setParameter:[idAttributeNames.iterator().next(), id] @AT@ 7049 @LENGTH@ 22
------------------DEL StringLiteral@@"id" @AT@ 7062 @LENGTH@ 4
------------------INS MethodInvocation@@idAttributeNames.iterator().next() @TO@ SimpleName@@MethodName:setParameter:["id", id] @AT@ 7323 @LENGTH@ 34
---------------------INS MethodInvocation@@MethodName:iterator:[] @TO@ MethodInvocation@@idAttributeNames.iterator().next() @AT@ 7323 @LENGTH@ 27
---------------------INS SimpleName@@Name:idAttributeNames @TO@ MethodInvocation@@idAttributeNames.iterator().next() @AT@ 7323 @LENGTH@ 16
---------------------INS SimpleName@@MethodName:next:[] @TO@ MethodInvocation@@idAttributeNames.iterator().next() @AT@ 7351 @LENGTH@ 6
---UPD ReturnStatement@@InfixExpression:query.getSingleResult() == 1 @TO@ InfixExpression:query.getSingleResult() == 1L @AT@ 7077 @LENGTH@ 36
------UPD InfixExpression@@query.getSingleResult() == 1 @TO@ query.getSingleResult() == 1L @AT@ 7084 @LENGTH@ 28
---------UPD NumberLiteral@@1 @TO@ 1L @AT@ 7111 @LENGTH@ 1


UPD Block@@ThenBody:{  writer.println("<table class='table'>");  writer.println("  <tr>");  writer.println("    <th>Name</th>");  writer.println("    <th>Type</th>");  writer.println("    <th>Description</th>");  writer.println("  </tr>");  Set<Map.Entry<String,List<String>>> entries=sortedMap.entrySet();  for (  Map.Entry<String,List<String>> entry : entries) {    String name=entry.getKey();    List<String> values=entry.getValue();    writer.println("  <tr>");    writer.println("    <td>" + name + "</td>");    for (    String value : values) {      writer.println(value);    }    writer.println("  </tr>");    writer.println("</table>");  }} @TO@ ThenBody:{  writer.println("<table class='table'>");  writer.println("  <tr>");  writer.println("    <th>Name</th>");  writer.println("    <th>Type</th>");  writer.println("    <th>Description</th>");  writer.println("  </tr>");  Set<Map.Entry<String,List<String>>> entries=sortedMap.entrySet();  for (  Map.Entry<String,List<String>> entry : entries) {    String name=entry.getKey();    List<String> values=entry.getValue();    writer.println("  <tr>");    writer.println("    <td>" + name + "</td>");    for (    String value : values) {      writer.println(value);    }    writer.println("  </tr>");  }  writer.println("</table>");} @AT@ 6026 @LENGTH@ 956
---UPD EnhancedForStatement@@for (Map.Entry<String,List<String>> entry : entries) {  String name=entry.getKey();  List<String> values=entry.getValue();  writer.println("  <tr>");  writer.println("    <td>" + name + "</td>");  for (  String value : values) {    writer.println(value);  }  writer.println("  </tr>");  writer.println("</table>");} @TO@ for (Map.Entry<String,List<String>> entry : entries) {  String name=entry.getKey();  List<String> values=entry.getValue();  writer.println("  <tr>");  writer.println("    <td>" + name + "</td>");  for (  String value : values) {    writer.println(value);  }  writer.println("  </tr>");} @AT@ 6504 @LENGTH@ 468
---MOV ExpressionStatement@@MethodInvocation:writer.println("</table>") @TO@ Block@@ThenBody:{  writer.println("<table class='table'>");  writer.println("  <tr>");  writer.println("    <th>Name</th>");  writer.println("    <th>Type</th>");  writer.println("    <th>Description</th>");  writer.println("  </tr>");  Set<Map.Entry<String,List<String>>> entries=sortedMap.entrySet();  for (  Map.Entry<String,List<String>> entry : entries) {    String name=entry.getKey();    List<String> values=entry.getValue();    writer.println("  <tr>");    writer.println("    <td>" + name + "</td>");    for (    String value : values) {      writer.println(value);    }    writer.println("  </tr>");    writer.println("</table>");  }} @AT@ 6931 @LENGTH@ 27


UPD ExpressionStatement@@Assignment:modulePath=modulePath.split(File.pathSeparator)[1] @TO@ Assignment:modulePath=modulePath.split(File.pathSeparator)[0] @AT@ 10050 @LENGTH@ 53
---UPD Assignment@@modulePath=modulePath.split(File.pathSeparator)[1] @TO@ modulePath=modulePath.split(File.pathSeparator)[0] @AT@ 10050 @LENGTH@ 52
------UPD ArrayAccess@@modulePath.split(File.pathSeparator)[1] @TO@ modulePath.split(File.pathSeparator)[0] @AT@ 10063 @LENGTH@ 39
---------UPD NumberLiteral@@1 @TO@ 0 @AT@ 10100 @LENGTH@ 1


UPD IfStatement@@if (globalRunAsPrincipal != null) componentConfiguration.setRunAsPrincipal(globalRunAsPrincipal); else componentConfiguration.setRunAsPrincipal(DEFAULT_RUN_AS_PRINCIPAL); @TO@ if (globalRunAsPrincipal != null) componentConfiguration.setRunAsPrincipal(globalRunAsPrincipal); else {  if (componentConfiguration.getRunAsPrincipal() == null) {    componentConfiguration.setRunAsPrincipal(DEFAULT_RUN_AS_PRINCIPAL);  }} @AT@ 6034 @LENGTH@ 226
---INS Block@@ElseBody:{  if (componentConfiguration.getRunAsPrincipal() == null) {    componentConfiguration.setRunAsPrincipal(DEFAULT_RUN_AS_PRINCIPAL);  }} @TO@ IfStatement@@if (globalRunAsPrincipal != null) componentConfiguration.setRunAsPrincipal(globalRunAsPrincipal); else componentConfiguration.setRunAsPrincipal(DEFAULT_RUN_AS_PRINCIPAL); @AT@ 6173 @LENGTH@ 337
------INS IfStatement@@if (componentConfiguration.getRunAsPrincipal() == null) {  componentConfiguration.setRunAsPrincipal(DEFAULT_RUN_AS_PRINCIPAL);} @TO@ Block@@ElseBody:{  if (componentConfiguration.getRunAsPrincipal() == null) {    componentConfiguration.setRunAsPrincipal(DEFAULT_RUN_AS_PRINCIPAL);  }} @AT@ 6321 @LENGTH@ 171
---------MOV Block@@ElseBody:componentConfiguration.setRunAsPrincipal(DEFAULT_RUN_AS_PRINCIPAL); @TO@ IfStatement@@if (componentConfiguration.getRunAsPrincipal() == null) {  componentConfiguration.setRunAsPrincipal(DEFAULT_RUN_AS_PRINCIPAL);} @AT@ 6193 @LENGTH@ 67
---------MOV Block@@ElseBody:componentConfiguration.setRunAsPrincipal(DEFAULT_RUN_AS_PRINCIPAL); @TO@ IfStatement@@if (componentConfiguration.getRunAsPrincipal() == null) {  componentConfiguration.setRunAsPrincipal(DEFAULT_RUN_AS_PRINCIPAL);} @AT@ 6193 @LENGTH@ 67
---------INS InfixExpression@@componentConfiguration.getRunAsPrincipal() == null @TO@ IfStatement@@if (componentConfiguration.getRunAsPrincipal() == null) {  componentConfiguration.setRunAsPrincipal(DEFAULT_RUN_AS_PRINCIPAL);} @AT@ 6325 @LENGTH@ 50
------------INS MethodInvocation@@componentConfiguration.getRunAsPrincipal() @TO@ InfixExpression@@componentConfiguration.getRunAsPrincipal() == null @AT@ 6325 @LENGTH@ 42
---------------INS SimpleName@@Name:componentConfiguration @TO@ MethodInvocation@@componentConfiguration.getRunAsPrincipal() @AT@ 6325 @LENGTH@ 22
---------------INS SimpleName@@MethodName:getRunAsPrincipal:[] @TO@ MethodInvocation@@componentConfiguration.getRunAsPrincipal() @AT@ 6348 @LENGTH@ 19
------------INS Operator@@== @TO@ InfixExpression@@componentConfiguration.getRunAsPrincipal() == null @AT@ 6367 @LENGTH@ 2
------------INS NullLiteral@@null @TO@ InfixExpression@@componentConfiguration.getRunAsPrincipal() == null @AT@ 6371 @LENGTH@ 4
---UPD Block@@ElseBody:componentConfiguration.setRunAsPrincipal(DEFAULT_RUN_AS_PRINCIPAL); @TO@ ThenBody:{  componentConfiguration.setRunAsPrincipal(DEFAULT_RUN_AS_PRINCIPAL);} @AT@ 6193 @LENGTH@ 67


INS IfStatement@@if (seen.contains(Element.GROUP_ADDRESS) && !seen.contains(Element.GROUP_PORT)) {  throw missingRequired(reader,EnumSet.of(Element.GROUP_PORT));} @TO@ MethodDeclaration@@protected, void, MethodName:checkBroadcastGroupConstraints, XMLExtendedStreamReader reader, Set<Element> seen, XMLStreamException,  @AT@ 3905 @LENGTH@ 166
---INS InfixExpression@@seen.contains(Element.GROUP_ADDRESS) && !seen.contains(Element.GROUP_PORT) @TO@ IfStatement@@if (seen.contains(Element.GROUP_ADDRESS) && !seen.contains(Element.GROUP_PORT)) {  throw missingRequired(reader,EnumSet.of(Element.GROUP_PORT));} @AT@ 3909 @LENGTH@ 74
------INS MethodInvocation@@seen.contains(Element.GROUP_ADDRESS) @TO@ InfixExpression@@seen.contains(Element.GROUP_ADDRESS) && !seen.contains(Element.GROUP_PORT) @AT@ 3909 @LENGTH@ 36
---------INS SimpleName@@Name:seen @TO@ MethodInvocation@@seen.contains(Element.GROUP_ADDRESS) @AT@ 3909 @LENGTH@ 4
---------INS SimpleName@@MethodName:contains:[Element.GROUP_ADDRESS] @TO@ MethodInvocation@@seen.contains(Element.GROUP_ADDRESS) @AT@ 3914 @LENGTH@ 31
------------INS QualifiedName@@Element.GROUP_ADDRESS @TO@ SimpleName@@MethodName:contains:[Element.GROUP_ADDRESS] @AT@ 3923 @LENGTH@ 21
---------------INS SimpleName@@Element @TO@ QualifiedName@@Element.GROUP_ADDRESS @AT@ 3923 @LENGTH@ 7
---------------INS SimpleName@@GROUP_ADDRESS @TO@ QualifiedName@@Element.GROUP_ADDRESS @AT@ 3931 @LENGTH@ 13
------INS Operator@@&& @TO@ InfixExpression@@seen.contains(Element.GROUP_ADDRESS) && !seen.contains(Element.GROUP_PORT) @AT@ 3945 @LENGTH@ 2
------INS PrefixExpression@@!seen.contains(Element.GROUP_PORT) @TO@ InfixExpression@@seen.contains(Element.GROUP_ADDRESS) && !seen.contains(Element.GROUP_PORT) @AT@ 3949 @LENGTH@ 34
---------INS Operator@@! @TO@ PrefixExpression@@!seen.contains(Element.GROUP_PORT) @AT@ 3949 @LENGTH@ 1
---------INS MethodInvocation@@seen.contains(Element.GROUP_PORT) @TO@ PrefixExpression@@!seen.contains(Element.GROUP_PORT) @AT@ 3950 @LENGTH@ 33
------------INS SimpleName@@Name:seen @TO@ MethodInvocation@@seen.contains(Element.GROUP_PORT) @AT@ 3950 @LENGTH@ 4
------------INS SimpleName@@MethodName:contains:[Element.GROUP_PORT] @TO@ MethodInvocation@@seen.contains(Element.GROUP_PORT) @AT@ 3955 @LENGTH@ 28
---------------INS QualifiedName@@Element.GROUP_PORT @TO@ SimpleName@@MethodName:contains:[Element.GROUP_PORT] @AT@ 3964 @LENGTH@ 18
------------------INS SimpleName@@Element @TO@ QualifiedName@@Element.GROUP_PORT @AT@ 3964 @LENGTH@ 7
------------------INS SimpleName@@GROUP_PORT @TO@ QualifiedName@@Element.GROUP_PORT @AT@ 3972 @LENGTH@ 10
---INS Block@@ThenBody:{  throw missingRequired(reader,EnumSet.of(Element.GROUP_PORT));} @TO@ IfStatement@@if (seen.contains(Element.GROUP_ADDRESS) && !seen.contains(Element.GROUP_PORT)) {  throw missingRequired(reader,EnumSet.of(Element.GROUP_PORT));} @AT@ 3985 @LENGTH@ 86
------INS ThrowStatement@@MethodInvocation:missingRequired(reader,EnumSet.of(Element.GROUP_PORT)) @TO@ Block@@ThenBody:{  throw missingRequired(reader,EnumSet.of(Element.GROUP_PORT));} @AT@ 3999 @LENGTH@ 62
---------INS MethodInvocation@@missingRequired(reader,EnumSet.of(Element.GROUP_PORT)) @TO@ ThrowStatement@@MethodInvocation:missingRequired(reader,EnumSet.of(Element.GROUP_PORT)) @AT@ 4005 @LENGTH@ 55
------------INS SimpleName@@MethodName:missingRequired:[reader, EnumSet.of(Element.GROUP_PORT)] @TO@ MethodInvocation@@missingRequired(reader,EnumSet.of(Element.GROUP_PORT)) @AT@ 4005 @LENGTH@ 55
---------------INS SimpleName@@reader @TO@ SimpleName@@MethodName:missingRequired:[reader, EnumSet.of(Element.GROUP_PORT)] @AT@ 4021 @LENGTH@ 6
---------------INS MethodInvocation@@EnumSet.of(Element.GROUP_PORT) @TO@ SimpleName@@MethodName:missingRequired:[reader, EnumSet.of(Element.GROUP_PORT)] @AT@ 4029 @LENGTH@ 30
------------------INS SimpleName@@Name:EnumSet @TO@ MethodInvocation@@EnumSet.of(Element.GROUP_PORT) @AT@ 4029 @LENGTH@ 7
------------------INS SimpleName@@MethodName:of:[Element.GROUP_PORT] @TO@ MethodInvocation@@EnumSet.of(Element.GROUP_PORT) @AT@ 4037 @LENGTH@ 22
---------------------INS QualifiedName@@Element.GROUP_PORT @TO@ SimpleName@@MethodName:of:[Element.GROUP_PORT] @AT@ 4040 @LENGTH@ 18
------------------------INS SimpleName@@Element @TO@ QualifiedName@@Element.GROUP_PORT @AT@ 4040 @LENGTH@ 7
------------------------INS SimpleName@@GROUP_PORT @TO@ QualifiedName@@Element.GROUP_PORT @AT@ 4048 @LENGTH@ 10


UPD ExpressionStatement@@MethodInvocation:DomainTestSuite.stopSupport() @TO@ MethodInvocation:testSupport.stop() @AT@ 4151 @LENGTH@ 30
---UPD MethodInvocation@@DomainTestSuite.stopSupport() @TO@ testSupport.stop() @AT@ 4151 @LENGTH@ 29
------UPD SimpleName@@Name:DomainTestSuite @TO@ Name:testSupport @AT@ 4151 @LENGTH@ 15
------UPD SimpleName@@MethodName:stopSupport:[] @TO@ MethodName:stop:[] @AT@ 4167 @LENGTH@ 13


INS MethodDeclaration@@private, voidMethodName:DefaultSingletonBeanAccessTimeoutWriteHandler,  @TO@ TypeDeclaration@@DefaultSingletonBeanAccessTimeoutWriteHandler, AbstractWriteAttributeHandler<Void> @AT@ 1784 @LENGTH@ 153
---INS Modifier@@private @TO@ MethodDeclaration@@private, voidMethodName:DefaultSingletonBeanAccessTimeoutWriteHandler,  @AT@ 1784 @LENGTH@ 7
---INS SimpleName@@MethodName:DefaultSingletonBeanAccessTimeoutWriteHandler @TO@ MethodDeclaration@@private, voidMethodName:DefaultSingletonBeanAccessTimeoutWriteHandler,  @AT@ 1792 @LENGTH@ 45
---INS SuperConstructorInvocation@@super(EJB3SubsystemRootResourceDefinition.DEFAULT_SINGLETON_BEAN_ACCESS_TIMEOUT);
 @TO@ MethodDeclaration@@private, voidMethodName:DefaultSingletonBeanAccessTimeoutWriteHandler,  @AT@ 1850 @LENGTH@ 81
------INS QualifiedName@@EJB3SubsystemRootResourceDefinition.DEFAULT_SINGLETON_BEAN_ACCESS_TIMEOUT @TO@ SuperConstructorInvocation@@super(EJB3SubsystemRootResourceDefinition.DEFAULT_SINGLETON_BEAN_ACCESS_TIMEOUT);
 @AT@ 1856 @LENGTH@ 73
---------INS SimpleName@@EJB3SubsystemRootResourceDefinition @TO@ QualifiedName@@EJB3SubsystemRootResourceDefinition.DEFAULT_SINGLETON_BEAN_ACCESS_TIMEOUT @AT@ 1856 @LENGTH@ 35
---------INS SimpleName@@DEFAULT_SINGLETON_BEAN_ACCESS_TIMEOUT @TO@ QualifiedName@@EJB3SubsystemRootResourceDefinition.DEFAULT_SINGLETON_BEAN_ACCESS_TIMEOUT @AT@ 1892 @LENGTH@ 37


UPD ExpressionStatement@@MethodInvocation:transformer.transformOperation(ctx,address,transformedOperation.getTransformedOperation()) @TO@ MethodInvocation:recordTransformedOperation(transformer.transformOperation(ctx,address,transformedOperation.getTransformedOperation())) @AT@ 4733 @LENGTH@ 93
---INS MethodInvocation@@recordTransformedOperation(transformer.transformOperation(ctx,address,transformedOperation.getTransformedOperation())) @TO@ ExpressionStatement@@MethodInvocation:transformer.transformOperation(ctx,address,transformedOperation.getTransformedOperation()) @AT@ 4733 @LENGTH@ 120
------INS SimpleName@@MethodName:recordTransformedOperation:[transformer.transformOperation(ctx,address,transformedOperation.getTransformedOperation())] @TO@ MethodInvocation@@recordTransformedOperation(transformer.transformOperation(ctx,address,transformedOperation.getTransformedOperation())) @AT@ 4733 @LENGTH@ 120
---------MOV MethodInvocation@@transformer.transformOperation(ctx,address,transformedOperation.getTransformedOperation()) @TO@ SimpleName@@MethodName:recordTransformedOperation:[transformer.transformOperation(ctx,address,transformedOperation.getTransformedOperation())] @AT@ 4733 @LENGTH@ 92


UPD TryStatement@@try {  socket=new DatagramSocket();  address=InetAddress.getByName(localHost);} catch (UnknownHostException ex) {  java.util.logging.Logger.getLogger(Mina2UdpNoCamelTest.class.getName()).log(Level.SEVERE,null,ex);}catch (SocketException ex) {  java.util.logging.Logger.getLogger(Mina2UdpNoCamelTest.class.getName()).log(Level.SEVERE,null,ex);} @TO@ try {  socket=new DatagramSocket();  address=InetAddress.getByName(localHost);} catch (UnknownHostException ex) {  logger.warn(null,ex);}catch (SocketException ex) {  logger.warn(null,ex);} @AT@ 5058 @LENGTH@ 494
---UPD CatchClause@@catch (UnknownHostException ex) {  java.util.logging.Logger.getLogger(Mina2UdpNoCamelTest.class.getName()).log(Level.SEVERE,null,ex);} @TO@ catch (UnknownHostException ex) {  logger.warn(null,ex);} @AT@ 5186 @LENGTH@ 185
------UPD ExpressionStatement@@MethodInvocation:java.util.logging.Logger.getLogger(Mina2UdpNoCamelTest.class.getName()).log(Level.SEVERE,null,ex) @TO@ MethodInvocation:logger.warn(null,ex) @AT@ 5236 @LENGTH@ 121
---------UPD MethodInvocation@@java.util.logging.Logger.getLogger(Mina2UdpNoCamelTest.class.getName()).log(Level.SEVERE,null,ex) @TO@ logger.warn(null,ex) @AT@ 5236 @LENGTH@ 120
------------DEL MethodInvocation@@MethodName:getLogger:[Mina2UdpNoCamelTest.class.getName()] @AT@ 5236 @LENGTH@ 71
---------------DEL MethodInvocation@@Mina2UdpNoCamelTest.class.getName() @AT@ 5271 @LENGTH@ 35
------------------DEL TypeLiteral@@Mina2UdpNoCamelTest.class @AT@ 5271 @LENGTH@ 25
------------DEL QualifiedName@@Name:java.util.logging.Logger @AT@ 5236 @LENGTH@ 24
------------MOV SimpleName@@MethodName:getName:[] @TO@ MethodInvocation@@java.util.logging.Logger.getLogger(Mina2UdpNoCamelTest.class.getName()).log(Level.SEVERE,null,ex) @AT@ 5297 @LENGTH@ 9
------------UPD SimpleName@@MethodName:log:[Level.SEVERE, null, ex] @TO@ MethodName:warn:[null, ex] @AT@ 5308 @LENGTH@ 48
---------------DEL QualifiedName@@Level.SEVERE @AT@ 5333 @LENGTH@ 12
------------------DEL SimpleName@@Level @AT@ 5333 @LENGTH@ 5
------------------DEL SimpleName@@SEVERE @AT@ 5339 @LENGTH@ 6
---UPD CatchClause@@catch (SocketException ex) {  java.util.logging.Logger.getLogger(Mina2UdpNoCamelTest.class.getName()).log(Level.SEVERE,null,ex);} @TO@ catch (SocketException ex) {  logger.warn(null,ex);} @AT@ 5372 @LENGTH@ 180
------UPD ExpressionStatement@@MethodInvocation:java.util.logging.Logger.getLogger(Mina2UdpNoCamelTest.class.getName()).log(Level.SEVERE,null,ex) @TO@ MethodInvocation:logger.warn(null,ex) @AT@ 5417 @LENGTH@ 121
---------UPD MethodInvocation@@java.util.logging.Logger.getLogger(Mina2UdpNoCamelTest.class.getName()).log(Level.SEVERE,null,ex) @TO@ logger.warn(null,ex) @AT@ 5417 @LENGTH@ 120
------------DEL MethodInvocation@@MethodName:getLogger:[Mina2UdpNoCamelTest.class.getName()] @AT@ 5417 @LENGTH@ 71
---------------DEL MethodInvocation@@Mina2UdpNoCamelTest.class.getName() @AT@ 5452 @LENGTH@ 35
------------------DEL TypeLiteral@@Mina2UdpNoCamelTest.class @AT@ 5452 @LENGTH@ 25
------------DEL QualifiedName@@Name:java.util.logging.Logger @AT@ 5417 @LENGTH@ 24
------------MOV SimpleName@@MethodName:getName:[] @TO@ MethodInvocation@@java.util.logging.Logger.getLogger(Mina2UdpNoCamelTest.class.getName()).log(Level.SEVERE,null,ex) @AT@ 5478 @LENGTH@ 9
------------UPD SimpleName@@MethodName:log:[Level.SEVERE, null, ex] @TO@ MethodName:warn:[null, ex] @AT@ 5489 @LENGTH@ 48
---------------DEL QualifiedName@@Level.SEVERE @AT@ 5514 @LENGTH@ 12
------------------DEL SimpleName@@Level @AT@ 5514 @LENGTH@ 5
------------------DEL SimpleName@@SEVERE @AT@ 5520 @LENGTH@ 6


UPD ExpressionStatement@@MethodInvocation:instance.activate(primaryKey) @TO@ MethodInvocation:instance.associate(primaryKey) @AT@ 4162 @LENGTH@ 30
---UPD MethodInvocation@@instance.activate(primaryKey) @TO@ instance.associate(primaryKey) @AT@ 4162 @LENGTH@ 29
------UPD SimpleName@@MethodName:activate:[primaryKey] @TO@ MethodName:associate:[primaryKey] @AT@ 4171 @LENGTH@ 20


UPD SuperConstructorInvocation@@super(EnableFake.class,FakeConnectionFactory.class,FakeSocialAuthenticationService.class.getName(),FakeApiHelper.class);
 @TO@ super(EnableFake.class,FakeConnectionFactory.class,FakeSocialAuthenticationService.class,FakeApiHelper.class);
 @AT@ 1349 @LENGTH@ 123
---DEL MethodInvocation@@FakeSocialAuthenticationService.class.getName() @AT@ 1402 @LENGTH@ 47
------DEL TypeLiteral@@FakeSocialAuthenticationService.class @AT@ 1402 @LENGTH@ 37
------DEL SimpleName@@MethodName:getName:[] @AT@ 1440 @LENGTH@ 9
---INS TypeLiteral@@FakeSocialAuthenticationService.class @TO@ SuperConstructorInvocation@@super(EnableFake.class,FakeConnectionFactory.class,FakeSocialAuthenticationService.class.getName(),FakeApiHelper.class);
 @AT@ 1402 @LENGTH@ 37


UPD IfStatement@@if (isQueueing()) {  transaction.brpop(JedisUtils.bXPopArgs(timeout,keys));} @TO@ if (isQueueing()) {  transaction.brpop(JedisUtils.bXPopArgs(timeout,keys));  return null;} @AT@ 25680 @LENGTH@ 84
---UPD Block@@ThenBody:{  transaction.brpop(JedisUtils.bXPopArgs(timeout,keys));} @TO@ ThenBody:{  transaction.brpop(JedisUtils.bXPopArgs(timeout,keys));  return null;} @AT@ 25698 @LENGTH@ 66
------INS ReturnStatement@@NullLiteral:null @TO@ Block@@ThenBody:{  transaction.brpop(JedisUtils.bXPopArgs(timeout,keys));} @AT@ 25764 @LENGTH@ 12
---------INS NullLiteral@@null @TO@ ReturnStatement@@NullLiteral:null @AT@ 25771 @LENGTH@ 4


UPD TypeDeclaration@@[public]FileUtilsTestCase, FileBasedTestCase @TO@ [@SuppressWarnings("deprecation"), public]FileUtilsTestCase, FileBasedTestCase @AT@ 1735 @LENGTH@ 104393
---INS SingleMemberAnnotation@@@SuppressWarnings("deprecation") @TO@ TypeDeclaration@@[public]FileUtilsTestCase, FileBasedTestCase @AT@ 1735 @LENGTH@ 32


UPD ExpressionStatement@@MethodInvocation:System.out.println(war.toString(true)) @TO@ MethodInvocation:log.info(war.toString(true)) @AT@ 2502 @LENGTH@ 39
---UPD MethodInvocation@@System.out.println(war.toString(true)) @TO@ log.info(war.toString(true)) @AT@ 2502 @LENGTH@ 38
------DEL QualifiedName@@Name:System.out @AT@ 2502 @LENGTH@ 10
------INS SimpleName@@Name:log @TO@ MethodInvocation@@System.out.println(war.toString(true)) @AT@ 2502 @LENGTH@ 3
------UPD SimpleName@@MethodName:println:[war.toString(true)] @TO@ MethodName:info:[war.toString(true)] @AT@ 2513 @LENGTH@ 27


UPD ReturnStatement@@SimpleName:iClosures @TO@ MethodInvocation:FunctorUtils.copy(iClosures) @AT@ 6505 @LENGTH@ 17
---INS MethodInvocation@@FunctorUtils.copy(iClosures) @TO@ ReturnStatement@@SimpleName:iClosures @AT@ 6501 @LENGTH@ 28
------INS SimpleName@@Name:FunctorUtils @TO@ MethodInvocation@@FunctorUtils.copy(iClosures) @AT@ 6501 @LENGTH@ 12
------INS SimpleName@@MethodName:copy:[iClosures] @TO@ MethodInvocation@@FunctorUtils.copy(iClosures) @AT@ 6514 @LENGTH@ 15
---------INS SimpleName@@iClosures @TO@ SimpleName@@MethodName:copy:[iClosures] @AT@ 6519 @LENGTH@ 9
---DEL SimpleName@@iClosures @AT@ 6512 @LENGTH@ 9


UPD IfStatement@@if (isPipelined()) {  pipeline.ping();} @TO@ if (isPipelined()) {  pipeline.ping();  return null;} @AT@ 8544 @LENGTH@ 46
---UPD Block@@ThenBody:{  pipeline.ping();} @TO@ ThenBody:{  pipeline.ping();  return null;} @AT@ 8563 @LENGTH@ 27
------INS ReturnStatement@@NullLiteral:null @TO@ Block@@ThenBody:{  pipeline.ping();} @AT@ 8590 @LENGTH@ 12
---------INS NullLiteral@@null @TO@ ReturnStatement@@NullLiteral:null @AT@ 8597 @LENGTH@ 4


UPD ThrowStatement@@ClassInstanceCreation:new FabricException("Failed to create container:" + container.getId(),metadata.getFailure()) @TO@ ClassInstanceCreation:new FabricException("Failed to create container.",metadata.getFailure()) @AT@ 1786 @LENGTH@ 100
---UPD ClassInstanceCreation@@FabricException["Failed to create container:" + container.getId(), metadata.getFailure()] @TO@ FabricException["Failed to create container.", metadata.getFailure()] @AT@ 1792 @LENGTH@ 93
------DEL InfixExpression@@"Failed to create container:" + container.getId() @AT@ 1812 @LENGTH@ 49
---------DEL StringLiteral@@"Failed to create container:" @AT@ 1812 @LENGTH@ 29
---------DEL Operator@@+ @AT@ 1841 @LENGTH@ 1
---------DEL MethodInvocation@@container.getId() @AT@ 1844 @LENGTH@ 17
------------DEL SimpleName@@Name:container @AT@ 1844 @LENGTH@ 9
------------DEL SimpleName@@MethodName:getId:[] @AT@ 1854 @LENGTH@ 7
------INS StringLiteral@@"Failed to create container." @TO@ ClassInstanceCreation@@FabricException["Failed to create container:" + container.getId(), metadata.getFailure()] @AT@ 1812 @LENGTH@ 29


UPD TryStatement@@try {  for (  CmpEntityBeanContext instance : instances) {    if (TxUtils.isRollback(tx)) {      return;    }    context=instance;    context.getTxAssociation().invokeEjbStore(currentThread,context);  }  for (  CmpEntityBeanContext instance : instances) {    if (TxUtils.isRollback(tx)) {      return;    }    context=instance;    context.getTxAssociation().synchronize(currentThread,tx,context);  }} catch (Exception causeByException) {  try {    tx.setRollbackOnly();  } catch (  Exception e) {    CmpLogger.ROOT_LOGGER.exceptionRollingBackTx(tx,e);  }  if (causeByException instanceof EJBException) {    throw (EJBException)causeByException;  }  throw CmpMessages.MESSAGES.failedToStoreEntity(((context == null || context.getPrimaryKeyUnchecked() == null) ? "<null>" : context.getPrimaryKeyUnchecked().toString()),causeByException);} finally {  synchronizing=false;} @TO@ try {  int i=0;  while (i < instances.size()) {    final CmpEntityBeanContext instance=instances.get(i++);    if (TxUtils.isRollback(tx)) {      return;    }    context=instance;    context.getTxAssociation().invokeEjbStore(currentThread,context);  }  for (  CmpEntityBeanContext instance : instances) {    if (TxUtils.isRollback(tx)) {      return;    }    context=instance;    context.getTxAssociation().synchronize(currentThread,tx,context);  }} catch (Exception causeByException) {  try {    tx.setRollbackOnly();  } catch (  Exception e) {    CmpLogger.ROOT_LOGGER.exceptionRollingBackTx(tx,e);  }  if (causeByException instanceof EJBException) {    throw (EJBException)causeByException;  }  throw CmpMessages.MESSAGES.failedToStoreEntity(((context == null || context.getPrimaryKeyUnchecked() == null) ? "<null>" : context.getPrimaryKeyUnchecked().toString()),causeByException);} finally {  synchronizing=false;} @AT@ 10893 @LENGTH@ 2243
---DEL EnhancedForStatement@@for (CmpEntityBeanContext instance : instances) {  if (TxUtils.isRollback(tx)) {    return;  }  context=instance;  context.getTxAssociation().invokeEjbStore(currentThread,context);} @AT@ 10915 @LENGTH@ 434
------DEL SingleVariableDeclaration@@CmpEntityBeanContext instance @AT@ 10920 @LENGTH@ 29
---------DEL SimpleType@@CmpEntityBeanContext @AT@ 10920 @LENGTH@ 20
---------DEL SimpleName@@instance @AT@ 10941 @LENGTH@ 8
------DEL SimpleName@@instances @AT@ 10952 @LENGTH@ 9
---INS VariableDeclarationStatement@@int i=0; @TO@ TryStatement@@try {  for (  CmpEntityBeanContext instance : instances) {    if (TxUtils.isRollback(tx)) {      return;    }    context=instance;    context.getTxAssociation().invokeEjbStore(currentThread,context);  }  for (  CmpEntityBeanContext instance : instances) {    if (TxUtils.isRollback(tx)) {      return;    }    context=instance;    context.getTxAssociation().synchronize(currentThread,tx,context);  }} catch (Exception causeByException) {  try {    tx.setRollbackOnly();  } catch (  Exception e) {    CmpLogger.ROOT_LOGGER.exceptionRollingBackTx(tx,e);  }  if (causeByException instanceof EJBException) {    throw (EJBException)causeByException;  }  throw CmpMessages.MESSAGES.failedToStoreEntity(((context == null || context.getPrimaryKeyUnchecked() == null) ? "<null>" : context.getPrimaryKeyUnchecked().toString()),causeByException);} finally {  synchronizing=false;} @AT@ 10917 @LENGTH@ 10
------INS PrimitiveType@@int @TO@ VariableDeclarationStatement@@int i=0; @AT@ 10917 @LENGTH@ 3
------INS VariableDeclarationFragment@@i=0 @TO@ VariableDeclarationStatement@@int i=0; @AT@ 10921 @LENGTH@ 5
---------INS SimpleName@@i @TO@ VariableDeclarationFragment@@i=0 @AT@ 10921 @LENGTH@ 1
---------INS NumberLiteral@@0 @TO@ VariableDeclarationFragment@@i=0 @AT@ 10925 @LENGTH@ 1
---INS WhileStatement@@while (i < instances.size()) {  final CmpEntityBeanContext instance=instances.get(i++);  if (TxUtils.isRollback(tx)) {    return;  }  context=instance;  context.getTxAssociation().invokeEjbStore(currentThread,context);} @TO@ TryStatement@@try {  for (  CmpEntityBeanContext instance : instances) {    if (TxUtils.isRollback(tx)) {      return;    }    context=instance;    context.getTxAssociation().invokeEjbStore(currentThread,context);  }  for (  CmpEntityBeanContext instance : instances) {    if (TxUtils.isRollback(tx)) {      return;    }    context=instance;    context.getTxAssociation().synchronize(currentThread,tx,context);  }} catch (Exception causeByException) {  try {    tx.setRollbackOnly();  } catch (  Exception e) {    CmpLogger.ROOT_LOGGER.exceptionRollingBackTx(tx,e);  }  if (causeByException instanceof EJBException) {    throw (EJBException)causeByException;  }  throw CmpMessages.MESSAGES.failedToStoreEntity(((context == null || context.getPrimaryKeyUnchecked() == null) ? "<null>" : context.getPrimaryKeyUnchecked().toString()),causeByException);} finally {  synchronizing=false;} @AT@ 10946 @LENGTH@ 492
------INS InfixExpression@@i < instances.size() @TO@ WhileStatement@@while (i < instances.size()) {  final CmpEntityBeanContext instance=instances.get(i++);  if (TxUtils.isRollback(tx)) {    return;  }  context=instance;  context.getTxAssociation().invokeEjbStore(currentThread,context);} @AT@ 10952 @LENGTH@ 20
---------INS SimpleName@@i @TO@ InfixExpression@@i < instances.size() @AT@ 10952 @LENGTH@ 1
---------INS Operator@@< @TO@ InfixExpression@@i < instances.size() @AT@ 10953 @LENGTH@ 1
---------INS MethodInvocation@@instances.size() @TO@ InfixExpression@@i < instances.size() @AT@ 10956 @LENGTH@ 16
------------INS SimpleName@@Name:instances @TO@ MethodInvocation@@instances.size() @AT@ 10956 @LENGTH@ 9
------------INS SimpleName@@MethodName:size:[] @TO@ MethodInvocation@@instances.size() @AT@ 10966 @LENGTH@ 6
------INS Block@@WhileBody:{  final CmpEntityBeanContext instance=instances.get(i++);  if (TxUtils.isRollback(tx)) {    return;  }  context=instance;  context.getTxAssociation().invokeEjbStore(currentThread,context);} @TO@ WhileStatement@@while (i < instances.size()) {  final CmpEntityBeanContext instance=instances.get(i++);  if (TxUtils.isRollback(tx)) {    return;  }  context=instance;  context.getTxAssociation().invokeEjbStore(currentThread,context);} @AT@ 10974 @LENGTH@ 464
---------INS VariableDeclarationStatement@@final CmpEntityBeanContext instance=instances.get(i++); @TO@ Block@@WhileBody:{  final CmpEntityBeanContext instance=instances.get(i++);  if (TxUtils.isRollback(tx)) {    return;  }  context=instance;  context.getTxAssociation().invokeEjbStore(currentThread,context);} @AT@ 10996 @LENGTH@ 57
------------INS Modifier@@final @TO@ VariableDeclarationStatement@@final CmpEntityBeanContext instance=instances.get(i++); @AT@ 10996 @LENGTH@ 5
------------INS SimpleType@@CmpEntityBeanContext @TO@ VariableDeclarationStatement@@final CmpEntityBeanContext instance=instances.get(i++); @AT@ 11002 @LENGTH@ 20
------------INS VariableDeclarationFragment@@instance=instances.get(i++) @TO@ VariableDeclarationStatement@@final CmpEntityBeanContext instance=instances.get(i++); @AT@ 11023 @LENGTH@ 29
---------------INS SimpleName@@instance @TO@ VariableDeclarationFragment@@instance=instances.get(i++) @AT@ 11023 @LENGTH@ 8
---------------INS MethodInvocation@@instances.get(i++) @TO@ VariableDeclarationFragment@@instance=instances.get(i++) @AT@ 11034 @LENGTH@ 18
------------------INS SimpleName@@Name:instances @TO@ MethodInvocation@@instances.get(i++) @AT@ 11034 @LENGTH@ 9
------------------INS SimpleName@@MethodName:get:[i++] @TO@ MethodInvocation@@instances.get(i++) @AT@ 11044 @LENGTH@ 8
---------------------INS PostfixExpression@@i++ @TO@ SimpleName@@MethodName:get:[i++] @AT@ 11048 @LENGTH@ 3
------------------------INS SimpleName@@i @TO@ PostfixExpression@@i++ @AT@ 11048 @LENGTH@ 1
------------------------INS Operator@@++ @TO@ PostfixExpression@@i++ @AT@ 11050 @LENGTH@ 2
---------MOV IfStatement@@if (TxUtils.isRollback(tx)) {  return;} @TO@ Block@@WhileBody:{  final CmpEntityBeanContext instance=instances.get(i++);  if (TxUtils.isRollback(tx)) {    return;  }  context=instance;  context.getTxAssociation().invokeEjbStore(currentThread,context);} @AT@ 11121 @LENGTH@ 83
---------MOV ExpressionStatement@@Assignment:context=instance @TO@ Block@@WhileBody:{  final CmpEntityBeanContext instance=instances.get(i++);  if (TxUtils.isRollback(tx)) {    return;  }  context=instance;  context.getTxAssociation().invokeEjbStore(currentThread,context);} @AT@ 11225 @LENGTH@ 19
---------MOV ExpressionStatement@@MethodInvocation:context.getTxAssociation().invokeEjbStore(currentThread,context) @TO@ Block@@WhileBody:{  final CmpEntityBeanContext instance=instances.get(i++);  if (TxUtils.isRollback(tx)) {    return;  }  context=instance;  context.getTxAssociation().invokeEjbStore(currentThread,context);} @AT@ 11265 @LENGTH@ 66


UPD ExpressionStatement@@MethodInvocation:ROOT_LOGGER.existingServerWithState(serverName,existing.getState()) @TO@ MethodInvocation:ROOT_LOGGER.existingServerWithState(serverName,server.getState()) @AT@ 10266 @LENGTH@ 69
---UPD MethodInvocation@@ROOT_LOGGER.existingServerWithState(serverName,existing.getState()) @TO@ ROOT_LOGGER.existingServerWithState(serverName,server.getState()) @AT@ 10266 @LENGTH@ 68
------UPD SimpleName@@MethodName:existingServerWithState:[serverName, existing.getState()] @TO@ MethodName:existingServerWithState:[serverName, server.getState()] @AT@ 10278 @LENGTH@ 56
---------UPD MethodInvocation@@existing.getState() @TO@ server.getState() @AT@ 10314 @LENGTH@ 19
------------UPD SimpleName@@Name:existing @TO@ Name:server @AT@ 10314 @LENGTH@ 8


UPD IfStatement@@if (isEscape(c)) {  tkn.content.append((char)readEscape());} else if (isQuoteChar(c)) {  if (isQuoteChar(in.lookAhead())) {    c=in.read();    tkn.content.append((char)c);  } else {    while (true) {      c=in.read();      if (isDelimiter(c)) {        tkn.type=TOKEN;        return tkn;      } else       if (isEndOfFile(c)) {        tkn.type=EOF;        tkn.isReady=true;        return tkn;      } else       if (readEndOfLine(c)) {        tkn.type=EORECORD;        return tkn;      } else       if (!isWhitespace(c)) {        throw new IOException("(line " + getLineNumber() + ") invalid char between encapsulated token and delimiter");      }    }  }} else if (isEndOfFile(c)) {  throw new IOException("(startline " + startLineNumber + ") EOF reached before encapsulated token finished");} else {  tkn.content.append((char)c);} @TO@ if (isEscape(c)) {  final int unescaped=readEscape();  if (unescaped == Constants.END_OF_STREAM) {    tkn.content.append((char)c).append((char)in.getLastChar());  } else {    tkn.content.append((char)unescaped);  }} else if (isQuoteChar(c)) {  if (isQuoteChar(in.lookAhead())) {    c=in.read();    tkn.content.append((char)c);  } else {    while (true) {      c=in.read();      if (isDelimiter(c)) {        tkn.type=TOKEN;        return tkn;      } else       if (isEndOfFile(c)) {        tkn.type=EOF;        tkn.isReady=true;        return tkn;      } else       if (readEndOfLine(c)) {        tkn.type=EORECORD;        return tkn;      } else       if (!isWhitespace(c)) {        throw new IOException("(line " + getLineNumber() + ") invalid char between encapsulated token and delimiter");      }    }  }} else if (isEndOfFile(c)) {  throw new IOException("(startline " + startLineNumber + ") EOF reached before encapsulated token finished");} else {  tkn.content.append((char)c);} @AT@ 7559 @LENGTH@ 1780
---UPD Block@@ThenBody:{  tkn.content.append((char)readEscape());} @TO@ ThenBody:{  tkn.content.append((char)c).append((char)in.getLastChar());} @AT@ 7576 @LENGTH@ 72
---INS Block@@ThenBody:{  final int unescaped=readEscape();  if (unescaped == Constants.END_OF_STREAM) {    tkn.content.append((char)c).append((char)in.getLastChar());  } else {    tkn.content.append((char)unescaped);  }} @TO@ IfStatement@@if (isEscape(c)) {  tkn.content.append((char)readEscape());} else if (isQuoteChar(c)) {  if (isQuoteChar(in.lookAhead())) {    c=in.read();    tkn.content.append((char)c);  } else {    while (true) {      c=in.read();      if (isDelimiter(c)) {        tkn.type=TOKEN;        return tkn;      } else       if (isEndOfFile(c)) {        tkn.type=EOF;        tkn.isReady=true;        return tkn;      } else       if (readEndOfLine(c)) {        tkn.type=EORECORD;        return tkn;      } else       if (!isWhitespace(c)) {        throw new IOException("(line " + getLineNumber() + ") invalid char between encapsulated token and delimiter");      }    }  }} else if (isEndOfFile(c)) {  throw new IOException("(startline " + startLineNumber + ") EOF reached before encapsulated token finished");} else {  tkn.content.append((char)c);} @AT@ 7846 @LENGTH@ 342
------INS VariableDeclarationStatement@@final int unescaped=readEscape(); @TO@ Block@@ThenBody:{  final int unescaped=readEscape();  if (unescaped == Constants.END_OF_STREAM) {    tkn.content.append((char)c).append((char)in.getLastChar());  } else {    tkn.content.append((char)unescaped);  }} @AT@ 7864 @LENGTH@ 35
---------INS Modifier@@final @TO@ VariableDeclarationStatement@@final int unescaped=readEscape(); @AT@ 7864 @LENGTH@ 5
---------INS PrimitiveType@@int @TO@ VariableDeclarationStatement@@final int unescaped=readEscape(); @AT@ 7870 @LENGTH@ 3
---------INS VariableDeclarationFragment@@unescaped=readEscape() @TO@ VariableDeclarationStatement@@final int unescaped=readEscape(); @AT@ 7874 @LENGTH@ 24
------------INS SimpleName@@unescaped @TO@ VariableDeclarationFragment@@unescaped=readEscape() @AT@ 7874 @LENGTH@ 9
------------INS MethodInvocation@@MethodName:readEscape:[] @TO@ VariableDeclarationFragment@@unescaped=readEscape() @AT@ 7886 @LENGTH@ 12
------INS IfStatement@@if (unescaped == Constants.END_OF_STREAM) {  tkn.content.append((char)c).append((char)in.getLastChar());} else {  tkn.content.append((char)unescaped);} @TO@ Block@@ThenBody:{  final int unescaped=readEscape();  if (unescaped == Constants.END_OF_STREAM) {    tkn.content.append((char)c).append((char)in.getLastChar());  } else {    tkn.content.append((char)unescaped);  }} @AT@ 7916 @LENGTH@ 258
---------MOV Block@@ThenBody:{  tkn.content.append((char)readEscape());} @TO@ IfStatement@@if (unescaped == Constants.END_OF_STREAM) {  tkn.content.append((char)c).append((char)in.getLastChar());} else {  tkn.content.append((char)unescaped);} @AT@ 7576 @LENGTH@ 72
------------UPD ExpressionStatement@@MethodInvocation:tkn.content.append((char)readEscape()) @TO@ MethodInvocation:tkn.content.append((char)c).append((char)in.getLastChar()) @AT@ 7594 @LENGTH@ 40
---------------UPD MethodInvocation@@tkn.content.append((char)readEscape()) @TO@ tkn.content.append((char)c).append((char)in.getLastChar()) @AT@ 7594 @LENGTH@ 39
------------------UPD SimpleName@@MethodName:append:[(char)readEscape()] @TO@ MethodName:append:[(char)in.getLastChar()] @AT@ 7606 @LENGTH@ 27
---------------------UPD CastExpression@@(char)readEscape() @TO@ (char)in.getLastChar() @AT@ 7613 @LENGTH@ 19
------------------------UPD MethodInvocation@@MethodName:readEscape:[] @TO@ in.getLastChar() @AT@ 7620 @LENGTH@ 12
---------------------------INS SimpleName@@Name:in @TO@ MethodInvocation@@MethodName:readEscape:[] @AT@ 8055 @LENGTH@ 2
---------------------------INS SimpleName@@MethodName:getLastChar:[] @TO@ MethodInvocation@@MethodName:readEscape:[] @AT@ 8058 @LENGTH@ 13
------------------INS MethodInvocation@@MethodName:append:[(char)c] @TO@ MethodInvocation@@tkn.content.append((char)readEscape()) @AT@ 8012 @LENGTH@ 28
---------------------INS CastExpression@@(char)c @TO@ MethodInvocation@@MethodName:append:[(char)c] @AT@ 8031 @LENGTH@ 8
------------------------INS PrimitiveType@@char @TO@ CastExpression@@(char)c @AT@ 8032 @LENGTH@ 4
------------------------INS SimpleName@@c @TO@ CastExpression@@(char)c @AT@ 8038 @LENGTH@ 1
---------INS InfixExpression@@unescaped == Constants.END_OF_STREAM @TO@ IfStatement@@if (unescaped == Constants.END_OF_STREAM) {  tkn.content.append((char)c).append((char)in.getLastChar());} else {  tkn.content.append((char)unescaped);} @AT@ 7920 @LENGTH@ 36
------------INS SimpleName@@unescaped @TO@ InfixExpression@@unescaped == Constants.END_OF_STREAM @AT@ 7920 @LENGTH@ 9
------------INS Operator@@== @TO@ InfixExpression@@unescaped == Constants.END_OF_STREAM @AT@ 7929 @LENGTH@ 2
------------INS QualifiedName@@Constants.END_OF_STREAM @TO@ InfixExpression@@unescaped == Constants.END_OF_STREAM @AT@ 7933 @LENGTH@ 23
---------------INS SimpleName@@Constants @TO@ QualifiedName@@Constants.END_OF_STREAM @AT@ 7933 @LENGTH@ 9
---------------INS SimpleName@@END_OF_STREAM @TO@ QualifiedName@@Constants.END_OF_STREAM @AT@ 7943 @LENGTH@ 13
---------INS Block@@ElseBody:{  tkn.content.append((char)unescaped);} @TO@ IfStatement@@if (unescaped == Constants.END_OF_STREAM) {  tkn.content.append((char)c).append((char)in.getLastChar());} else {  tkn.content.append((char)unescaped);} @AT@ 8097 @LENGTH@ 77
------------INS ExpressionStatement@@MethodInvocation:tkn.content.append((char)unescaped) @TO@ Block@@ElseBody:{  tkn.content.append((char)unescaped);} @AT@ 8119 @LENGTH@ 37
---------------INS MethodInvocation@@tkn.content.append((char)unescaped) @TO@ ExpressionStatement@@MethodInvocation:tkn.content.append((char)unescaped) @AT@ 8119 @LENGTH@ 36
------------------INS QualifiedName@@Name:tkn.content @TO@ MethodInvocation@@tkn.content.append((char)unescaped) @AT@ 8119 @LENGTH@ 11
------------------INS SimpleName@@MethodName:append:[(char)unescaped] @TO@ MethodInvocation@@tkn.content.append((char)unescaped) @AT@ 8131 @LENGTH@ 24
---------------------INS CastExpression@@(char)unescaped @TO@ SimpleName@@MethodName:append:[(char)unescaped] @AT@ 8138 @LENGTH@ 16
------------------------INS PrimitiveType@@char @TO@ CastExpression@@(char)unescaped @AT@ 8139 @LENGTH@ 4
------------------------INS SimpleName@@unescaped @TO@ CastExpression@@(char)unescaped @AT@ 8145 @LENGTH@ 9


INS MethodDeclaration@@public, SimpleAttributeDefinitionBuilder, MethodName:addFlag, final AttributeAccess.Flag flag,  @TO@ TypeDeclaration@@[public]SimpleAttributeDefinitionBuilder, AbstractAttributeDefinitionBuilder<SimpleAttributeDefinitionBuilder,SimpleAttributeDefinition> @AT@ 6417 @LENGTH@ 124
---INS Modifier@@public @TO@ MethodDeclaration@@public, SimpleAttributeDefinitionBuilder, MethodName:addFlag, final AttributeAccess.Flag flag,  @AT@ 6417 @LENGTH@ 6
---INS SimpleType@@SimpleAttributeDefinitionBuilder @TO@ MethodDeclaration@@public, SimpleAttributeDefinitionBuilder, MethodName:addFlag, final AttributeAccess.Flag flag,  @AT@ 6424 @LENGTH@ 32
---INS SimpleName@@MethodName:addFlag @TO@ MethodDeclaration@@public, SimpleAttributeDefinitionBuilder, MethodName:addFlag, final AttributeAccess.Flag flag,  @AT@ 6457 @LENGTH@ 7
---INS SingleVariableDeclaration@@final AttributeAccess.Flag flag @TO@ MethodDeclaration@@public, SimpleAttributeDefinitionBuilder, MethodName:addFlag, final AttributeAccess.Flag flag,  @AT@ 6465 @LENGTH@ 31
------INS Modifier@@final @TO@ SingleVariableDeclaration@@final AttributeAccess.Flag flag @AT@ 6465 @LENGTH@ 5
------INS SimpleType@@AttributeAccess.Flag @TO@ SingleVariableDeclaration@@final AttributeAccess.Flag flag @AT@ 6471 @LENGTH@ 20
------INS SimpleName@@flag @TO@ SingleVariableDeclaration@@final AttributeAccess.Flag flag @AT@ 6492 @LENGTH@ 4
---INS ReturnStatement@@SuperMethodInvocation:super.addFlag(flag) @TO@ MethodDeclaration@@public, SimpleAttributeDefinitionBuilder, MethodName:addFlag, final AttributeAccess.Flag flag,  @AT@ 6508 @LENGTH@ 27
------INS SuperMethodInvocation@@super.addFlag(flag) @TO@ ReturnStatement@@SuperMethodInvocation:super.addFlag(flag) @AT@ 6515 @LENGTH@ 19
---------INS SimpleName@@MethodName:addFlag:[flag] @TO@ SuperMethodInvocation@@super.addFlag(flag) @AT@ 6521 @LENGTH@ 7
---------INS SimpleName@@flag @TO@ SuperMethodInvocation@@super.addFlag(flag) @AT@ 6529 @LENGTH@ 4


UPD ExpressionStatement@@MethodInvocation:System.out.println(war.toString(true)) @TO@ MethodInvocation:log.info(war.toString(true)) @AT@ 4420 @LENGTH@ 39
---UPD MethodInvocation@@System.out.println(war.toString(true)) @TO@ log.info(war.toString(true)) @AT@ 4420 @LENGTH@ 38
------DEL QualifiedName@@Name:System.out @AT@ 4420 @LENGTH@ 10
------INS SimpleName@@Name:log @TO@ MethodInvocation@@System.out.println(war.toString(true)) @AT@ 4420 @LENGTH@ 3
------UPD SimpleName@@MethodName:println:[war.toString(true)] @TO@ MethodName:info:[war.toString(true)] @AT@ 4431 @LENGTH@ 27


UPD IfStatement@@if (restartRequired) {  context.restartRequired();} else if (reloadRequired) {  context.reloadRequired();} @TO@ if (restartRequired) {  context.revertRestartRequired();} else if (reloadRequired) {  context.revertReloadRequired();} @AT@ 7411 @LENGTH@ 194
---UPD Block@@ThenBody:{  context.restartRequired();} @TO@ ThenBody:{  context.revertRestartRequired();} @AT@ 7432 @LENGTH@ 74
------UPD ExpressionStatement@@MethodInvocation:context.restartRequired() @TO@ MethodInvocation:context.revertRestartRequired() @AT@ 7458 @LENGTH@ 26
---------UPD MethodInvocation@@context.restartRequired() @TO@ context.revertRestartRequired() @AT@ 7458 @LENGTH@ 25
------------UPD SimpleName@@MethodName:restartRequired:[] @TO@ MethodName:revertRestartRequired:[] @AT@ 7466 @LENGTH@ 17
---UPD Block@@ElseBody:if (reloadRequired) {  context.reloadRequired();} @TO@ ElseBody:if (reloadRequired) {  context.revertReloadRequired();} @AT@ 7512 @LENGTH@ 93
------UPD IfStatement@@if (reloadRequired) {  context.reloadRequired();} @TO@ if (reloadRequired) {  context.revertReloadRequired();} @AT@ 7512 @LENGTH@ 93
---------UPD Block@@ThenBody:{  context.reloadRequired();} @TO@ ThenBody:{  context.revertReloadRequired();} @AT@ 7532 @LENGTH@ 73
------------UPD ExpressionStatement@@MethodInvocation:context.reloadRequired() @TO@ MethodInvocation:context.revertReloadRequired() @AT@ 7558 @LENGTH@ 25
---------------UPD MethodInvocation@@context.reloadRequired() @TO@ context.revertReloadRequired() @AT@ 7558 @LENGTH@ 24
------------------UPD SimpleName@@MethodName:reloadRequired:[] @TO@ MethodName:revertReloadRequired:[] @AT@ 7566 @LENGTH@ 16


INS IfStatement@@if (entity == null) {  return key;} @TO@ MethodDeclaration@@private, String, MethodName:determineKey, String key, MongoPersistentEntity<?> entity,  @AT@ 6844 @LENGTH@ 40
---INS InfixExpression@@entity == null @TO@ IfStatement@@if (entity == null) {  return key;} @AT@ 6848 @LENGTH@ 14
------INS SimpleName@@entity @TO@ InfixExpression@@entity == null @AT@ 6848 @LENGTH@ 6
------INS Operator@@== @TO@ InfixExpression@@entity == null @AT@ 6854 @LENGTH@ 2
------INS NullLiteral@@null @TO@ InfixExpression@@entity == null @AT@ 6858 @LENGTH@ 4
---INS Block@@ThenBody:{  return key;} @TO@ IfStatement@@if (entity == null) {  return key;} @AT@ 6864 @LENGTH@ 20
------INS ReturnStatement@@SimpleName:key @TO@ Block@@ThenBody:{  return key;} @AT@ 6869 @LENGTH@ 11
---------INS SimpleName@@key @TO@ ReturnStatement@@SimpleName:key @AT@ 6876 @LENGTH@ 3


INS MethodDeclaration@@public, void, MethodName:doesNotFailOnVersionInitForUnversionedEntity,  @TO@ TypeDeclaration@@[@RunWith(SpringJUnit4ClassRunner.class), @ContextConfiguration("classpath:infrastructure.xml"), public]MongoTemplateTests,  @AT@ 44754 @LENGTH@ 256
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:doesNotFailOnVersionInitForUnversionedEntity,  @AT@ 44754 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:doesNotFailOnVersionInitForUnversionedEntity,  @AT@ 44761 @LENGTH@ 4
---INS SimpleName@@MethodName:doesNotFailOnVersionInitForUnversionedEntity @TO@ MethodDeclaration@@public, void, MethodName:doesNotFailOnVersionInitForUnversionedEntity,  @AT@ 44766 @LENGTH@ 44
---INS VariableDeclarationStatement@@DBObject dbObject=new BasicDBObject(); @TO@ MethodDeclaration@@public, void, MethodName:doesNotFailOnVersionInitForUnversionedEntity,  @AT@ 44818 @LENGTH@ 40
------INS SimpleType@@DBObject @TO@ VariableDeclarationStatement@@DBObject dbObject=new BasicDBObject(); @AT@ 44818 @LENGTH@ 8
------INS VariableDeclarationFragment@@dbObject=new BasicDBObject() @TO@ VariableDeclarationStatement@@DBObject dbObject=new BasicDBObject(); @AT@ 44827 @LENGTH@ 30
---------INS SimpleName@@dbObject @TO@ VariableDeclarationFragment@@dbObject=new BasicDBObject() @AT@ 44827 @LENGTH@ 8
---------INS ClassInstanceCreation@@BasicDBObject[] @TO@ VariableDeclarationFragment@@dbObject=new BasicDBObject() @AT@ 44838 @LENGTH@ 19
------------INS New@@new @TO@ ClassInstanceCreation@@BasicDBObject[] @AT@ 44838 @LENGTH@ 3
------------INS SimpleType@@BasicDBObject @TO@ ClassInstanceCreation@@BasicDBObject[] @AT@ 44842 @LENGTH@ 13
---INS ExpressionStatement@@MethodInvocation:dbObject.put("firstName","Oliver") @TO@ MethodDeclaration@@public, void, MethodName:doesNotFailOnVersionInitForUnversionedEntity,  @AT@ 44861 @LENGTH@ 36
------INS MethodInvocation@@dbObject.put("firstName","Oliver") @TO@ ExpressionStatement@@MethodInvocation:dbObject.put("firstName","Oliver") @AT@ 44861 @LENGTH@ 35
---------INS SimpleName@@Name:dbObject @TO@ MethodInvocation@@dbObject.put("firstName","Oliver") @AT@ 44861 @LENGTH@ 8
---------INS SimpleName@@MethodName:put:["firstName", "Oliver"] @TO@ MethodInvocation@@dbObject.put("firstName","Oliver") @AT@ 44870 @LENGTH@ 26
------------INS StringLiteral@@"firstName" @TO@ SimpleName@@MethodName:put:["firstName", "Oliver"] @AT@ 44874 @LENGTH@ 11
------------INS StringLiteral@@"Oliver" @TO@ SimpleName@@MethodName:put:["firstName", "Oliver"] @AT@ 44887 @LENGTH@ 8
---INS ExpressionStatement@@MethodInvocation:template.insert(dbObject,template.determineCollectionName(PersonWithVersionPropertyOfTypeInteger.class)) @TO@ MethodDeclaration@@public, void, MethodName:doesNotFailOnVersionInitForUnversionedEntity,  @AT@ 44901 @LENGTH@ 106
------INS MethodInvocation@@template.insert(dbObject,template.determineCollectionName(PersonWithVersionPropertyOfTypeInteger.class)) @TO@ ExpressionStatement@@MethodInvocation:template.insert(dbObject,template.determineCollectionName(PersonWithVersionPropertyOfTypeInteger.class)) @AT@ 44901 @LENGTH@ 105
---------INS SimpleName@@Name:template @TO@ MethodInvocation@@template.insert(dbObject,template.determineCollectionName(PersonWithVersionPropertyOfTypeInteger.class)) @AT@ 44901 @LENGTH@ 8
---------INS SimpleName@@MethodName:insert:[dbObject, template.determineCollectionName(PersonWithVersionPropertyOfTypeInteger.class)] @TO@ MethodInvocation@@template.insert(dbObject,template.determineCollectionName(PersonWithVersionPropertyOfTypeInteger.class)) @AT@ 44910 @LENGTH@ 96
------------INS SimpleName@@dbObject @TO@ SimpleName@@MethodName:insert:[dbObject, template.determineCollectionName(PersonWithVersionPropertyOfTypeInteger.class)] @AT@ 44917 @LENGTH@ 8
------------INS MethodInvocation@@template.determineCollectionName(PersonWithVersionPropertyOfTypeInteger.class) @TO@ SimpleName@@MethodName:insert:[dbObject, template.determineCollectionName(PersonWithVersionPropertyOfTypeInteger.class)] @AT@ 44927 @LENGTH@ 78
---------------INS SimpleName@@Name:template @TO@ MethodInvocation@@template.determineCollectionName(PersonWithVersionPropertyOfTypeInteger.class) @AT@ 44927 @LENGTH@ 8
---------------INS SimpleName@@MethodName:determineCollectionName:[PersonWithVersionPropertyOfTypeInteger.class] @TO@ MethodInvocation@@template.determineCollectionName(PersonWithVersionPropertyOfTypeInteger.class) @AT@ 44936 @LENGTH@ 69
------------------INS TypeLiteral@@PersonWithVersionPropertyOfTypeInteger.class @TO@ SimpleName@@MethodName:determineCollectionName:[PersonWithVersionPropertyOfTypeInteger.class] @AT@ 44960 @LENGTH@ 44


UPD ReturnStatement@@ClassInstanceCreation:new LightweightHttpWagon() @TO@ MethodInvocation:new DefaultPlexusContainer().lookup(Wagon.class,roleHint) @AT@ 10192 @LENGTH@ 34
---DEL ClassInstanceCreation@@LightweightHttpWagon[] @AT@ 10199 @LENGTH@ 26
---INS MethodInvocation@@new DefaultPlexusContainer().lookup(Wagon.class,roleHint) @TO@ ReturnStatement@@ClassInstanceCreation:new LightweightHttpWagon() @AT@ 10311 @LENGTH@ 58
------INS ClassInstanceCreation@@DefaultPlexusContainer[] @TO@ MethodInvocation@@new DefaultPlexusContainer().lookup(Wagon.class,roleHint) @AT@ 10311 @LENGTH@ 28
---------MOV New@@new @TO@ ClassInstanceCreation@@DefaultPlexusContainer[] @AT@ 10199 @LENGTH@ 3
---------MOV SimpleType@@LightweightHttpWagon @TO@ ClassInstanceCreation@@DefaultPlexusContainer[] @AT@ 10203 @LENGTH@ 20
------INS SimpleName@@MethodName:lookup:[Wagon.class, roleHint] @TO@ MethodInvocation@@new DefaultPlexusContainer().lookup(Wagon.class,roleHint) @AT@ 10340 @LENGTH@ 29
---------INS TypeLiteral@@Wagon.class @TO@ SimpleName@@MethodName:lookup:[Wagon.class, roleHint] @AT@ 10347 @LENGTH@ 11
---------INS SimpleName@@roleHint @TO@ SimpleName@@MethodName:lookup:[Wagon.class, roleHint] @AT@ 10360 @LENGTH@ 8


UPD IfStatement@@if (options.getJvmOpts() == null && !options.getJvmOpts().isEmpty()) {  jvmOptsBuilder.append(" ").append(options.getJvmOpts());} @TO@ if (options.getJvmOpts() != null && !options.getJvmOpts().isEmpty()) {  jvmOptsBuilder.append(" ").append(options.getJvmOpts());} @AT@ 3953 @LENGTH@ 165
---UPD InfixExpression@@options.getJvmOpts() == null && !options.getJvmOpts().isEmpty() @TO@ options.getJvmOpts() != null && !options.getJvmOpts().isEmpty() @AT@ 3957 @LENGTH@ 63
------UPD InfixExpression@@options.getJvmOpts() == null @TO@ options.getJvmOpts() != null @AT@ 3957 @LENGTH@ 28
---------UPD Operator@@== @TO@ != @AT@ 3977 @LENGTH@ 2


DEL ExpressionStatement@@Assignment:synchronizations=exchange.handoverCompletions() @AT@ 1279 @LENGTH@ 50
---DEL Assignment@@synchronizations=exchange.handoverCompletions() @AT@ 1279 @LENGTH@ 49
------DEL SimpleName@@synchronizations @AT@ 1279 @LENGTH@ 16
------DEL Operator@@= @AT@ 1295 @LENGTH@ 1
------DEL MethodInvocation@@exchange.handoverCompletions() @AT@ 1298 @LENGTH@ 30
---------DEL SimpleName@@Name:exchange @AT@ 1298 @LENGTH@ 8
---------DEL SimpleName@@MethodName:handoverCompletions:[] @AT@ 1307 @LENGTH@ 21


UPD TryStatement@@try {  lfw1=new LockableFileWriter(file,true,altLockDir.getAbsolutePath());  assertTrue(file.exists());  assertTrue(altLockFile.exists());  try {    lfw2=new LockableFileWriter(file,true,altLockDir.getAbsolutePath());    fail("Somehow able to open a locked file. ");  } catch (  final IOException ioe) {    final String msg=ioe.getMessage();    assertTrue("Exception message does not start correctly. ",msg.startsWith("Can't write file, lock "));    assertTrue(file.exists());    assertTrue(altLockFile.exists());  }}  finally {  IOUtils.closeQuietly(lfw1);  IOUtils.closeQuietly(lfw2);} @TO@ try {  lfw1=new LockableFileWriter(file,"UTF-8",true,altLockDir.getAbsolutePath());  assertTrue(file.exists());  assertTrue(altLockFile.exists());  try {    lfw2=new LockableFileWriter(file,Charsets.UTF_8,true,altLockDir.getAbsolutePath());    fail("Somehow able to open a locked file. ");  } catch (  final IOException ioe) {    final String msg=ioe.getMessage();    assertTrue("Exception message does not start correctly. ",msg.startsWith("Can't write file, lock "));    assertTrue(file.exists());    assertTrue(altLockFile.exists());  }}  finally {  IOUtils.closeQuietly(lfw1);  IOUtils.closeQuietly(lfw2);} @AT@ 3963 @LENGTH@ 923
---UPD ExpressionStatement@@Assignment:lfw1=new LockableFileWriter(file,true,altLockDir.getAbsolutePath()) @TO@ Assignment:lfw1=new LockableFileWriter(file,"UTF-8",true,altLockDir.getAbsolutePath()) @AT@ 4026 @LENGTH@ 72
------UPD Assignment@@lfw1=new LockableFileWriter(file,true,altLockDir.getAbsolutePath()) @TO@ lfw1=new LockableFileWriter(file,"UTF-8",true,altLockDir.getAbsolutePath()) @AT@ 4026 @LENGTH@ 71
---------UPD ClassInstanceCreation@@LockableFileWriter[file, true, altLockDir.getAbsolutePath()] @TO@ LockableFileWriter[file, "UTF-8", true, altLockDir.getAbsolutePath()] @AT@ 4033 @LENGTH@ 64
------------INS StringLiteral@@"UTF-8" @TO@ ClassInstanceCreation@@LockableFileWriter[file, true, altLockDir.getAbsolutePath()] @AT@ 4101 @LENGTH@ 7
---UPD TryStatement@@try {  lfw2=new LockableFileWriter(file,true,altLockDir.getAbsolutePath());  fail("Somehow able to open a locked file. ");} catch (final IOException ioe) {  final String msg=ioe.getMessage();  assertTrue("Exception message does not start correctly. ",msg.startsWith("Can't write file, lock "));  assertTrue(file.exists());  assertTrue(altLockFile.exists());} @TO@ try {  lfw2=new LockableFileWriter(file,Charsets.UTF_8,true,altLockDir.getAbsolutePath());  fail("Somehow able to open a locked file. ");} catch (final IOException ioe) {  final String msg=ioe.getMessage();  assertTrue("Exception message does not start correctly. ",msg.startsWith("Can't write file, lock "));  assertTrue(file.exists());  assertTrue(altLockFile.exists());} @AT@ 4252 @LENGTH@ 511
------UPD ExpressionStatement@@Assignment:lfw2=new LockableFileWriter(file,true,altLockDir.getAbsolutePath()) @TO@ Assignment:lfw2=new LockableFileWriter(file,Charsets.UTF_8,true,altLockDir.getAbsolutePath()) @AT@ 4274 @LENGTH@ 72
---------UPD Assignment@@lfw2=new LockableFileWriter(file,true,altLockDir.getAbsolutePath()) @TO@ lfw2=new LockableFileWriter(file,Charsets.UTF_8,true,altLockDir.getAbsolutePath()) @AT@ 4274 @LENGTH@ 71
------------UPD ClassInstanceCreation@@LockableFileWriter[file, true, altLockDir.getAbsolutePath()] @TO@ LockableFileWriter[file, Charsets.UTF_8, true, altLockDir.getAbsolutePath()] @AT@ 4281 @LENGTH@ 64
---------------INS QualifiedName@@Charsets.UTF_8 @TO@ ClassInstanceCreation@@LockableFileWriter[file, true, altLockDir.getAbsolutePath()] @AT@ 4358 @LENGTH@ 14
------------------INS SimpleName@@Charsets @TO@ QualifiedName@@Charsets.UTF_8 @AT@ 4358 @LENGTH@ 8
------------------INS SimpleName@@UTF_8 @TO@ QualifiedName@@Charsets.UTF_8 @AT@ 4367 @LENGTH@ 5


INS MethodDeclaration@@public, void, MethodName:testEndpointConfigurationJson, Exception,  @TO@ TypeDeclaration@@[public]EndpointCompletionTest, ManagementTestSupport @AT@ 2299 @LENGTH@ 448
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testEndpointConfigurationJson, Exception,  @AT@ 2299 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testEndpointConfigurationJson, Exception,  @AT@ 2306 @LENGTH@ 4
---INS SimpleName@@MethodName:testEndpointConfigurationJson @TO@ MethodDeclaration@@public, void, MethodName:testEndpointConfigurationJson, Exception,  @AT@ 2311 @LENGTH@ 29
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:testEndpointConfigurationJson, Exception,  @AT@ 2350 @LENGTH@ 9
---INS VariableDeclarationStatement@@MBeanServer mbeanServer=getMBeanServer(); @TO@ MethodDeclaration@@public, void, MethodName:testEndpointConfigurationJson, Exception,  @AT@ 2370 @LENGTH@ 43
------INS SimpleType@@MBeanServer @TO@ VariableDeclarationStatement@@MBeanServer mbeanServer=getMBeanServer(); @AT@ 2370 @LENGTH@ 11
------INS VariableDeclarationFragment@@mbeanServer=getMBeanServer() @TO@ VariableDeclarationStatement@@MBeanServer mbeanServer=getMBeanServer(); @AT@ 2382 @LENGTH@ 30
---------INS SimpleName@@mbeanServer @TO@ VariableDeclarationFragment@@mbeanServer=getMBeanServer() @AT@ 2382 @LENGTH@ 11
---------INS MethodInvocation@@MethodName:getMBeanServer:[] @TO@ VariableDeclarationFragment@@mbeanServer=getMBeanServer() @AT@ 2396 @LENGTH@ 16
---INS VariableDeclarationStatement@@ObjectName on=ObjectName.getInstance("org.apache.camel:context=localhost/camel-1,type=context,name=\"camel-1\""); @TO@ MethodDeclaration@@public, void, MethodName:testEndpointConfigurationJson, Exception,  @AT@ 2422 @LENGTH@ 132
------INS SimpleType@@ObjectName @TO@ VariableDeclarationStatement@@ObjectName on=ObjectName.getInstance("org.apache.camel:context=localhost/camel-1,type=context,name=\"camel-1\""); @AT@ 2422 @LENGTH@ 10
------INS VariableDeclarationFragment@@on=ObjectName.getInstance("org.apache.camel:context=localhost/camel-1,type=context,name=\"camel-1\"") @TO@ VariableDeclarationStatement@@ObjectName on=ObjectName.getInstance("org.apache.camel:context=localhost/camel-1,type=context,name=\"camel-1\""); @AT@ 2433 @LENGTH@ 120
---------INS SimpleName@@on @TO@ VariableDeclarationFragment@@on=ObjectName.getInstance("org.apache.camel:context=localhost/camel-1,type=context,name=\"camel-1\"") @AT@ 2433 @LENGTH@ 2
---------INS MethodInvocation@@ObjectName.getInstance("org.apache.camel:context=localhost/camel-1,type=context,name=\"camel-1\"") @TO@ VariableDeclarationFragment@@on=ObjectName.getInstance("org.apache.camel:context=localhost/camel-1,type=context,name=\"camel-1\"") @AT@ 2438 @LENGTH@ 115
------------INS SimpleName@@Name:ObjectName @TO@ MethodInvocation@@ObjectName.getInstance("org.apache.camel:context=localhost/camel-1,type=context,name=\"camel-1\"") @AT@ 2438 @LENGTH@ 10
------------INS SimpleName@@MethodName:getInstance:["org.apache.camel:context=localhost/camel-1,type=context,name=\"camel-1\""] @TO@ MethodInvocation@@ObjectName.getInstance("org.apache.camel:context=localhost/camel-1,type=context,name=\"camel-1\"") @AT@ 2449 @LENGTH@ 104
---------------INS StringLiteral@@"org.apache.camel:context=localhost/camel-1,type=context,name=\"camel-1\"" @TO@ SimpleName@@MethodName:getInstance:["org.apache.camel:context=localhost/camel-1,type=context,name=\"camel-1\""] @AT@ 2478 @LENGTH@ 74
---INS ExpressionStatement@@MethodInvocation:assertNotNull(on) @TO@ MethodDeclaration@@public, void, MethodName:testEndpointConfigurationJson, Exception,  @AT@ 2563 @LENGTH@ 18
------INS MethodInvocation@@assertNotNull(on) @TO@ ExpressionStatement@@MethodInvocation:assertNotNull(on) @AT@ 2563 @LENGTH@ 17
---------INS SimpleName@@MethodName:assertNotNull:[on] @TO@ MethodInvocation@@assertNotNull(on) @AT@ 2563 @LENGTH@ 17
------------INS SimpleName@@on @TO@ SimpleName@@MethodName:assertNotNull:[on] @AT@ 2577 @LENGTH@ 2
---INS ExpressionStatement@@MethodInvocation:mbeanServer.isRegistered(on) @TO@ MethodDeclaration@@public, void, MethodName:testEndpointConfigurationJson, Exception,  @AT@ 2590 @LENGTH@ 29
------INS MethodInvocation@@mbeanServer.isRegistered(on) @TO@ ExpressionStatement@@MethodInvocation:mbeanServer.isRegistered(on) @AT@ 2590 @LENGTH@ 28
---------INS SimpleName@@Name:mbeanServer @TO@ MethodInvocation@@mbeanServer.isRegistered(on) @AT@ 2590 @LENGTH@ 11
---------INS SimpleName@@MethodName:isRegistered:[on] @TO@ MethodInvocation@@mbeanServer.isRegistered(on) @AT@ 2602 @LENGTH@ 16
------------INS SimpleName@@on @TO@ SimpleName@@MethodName:isRegistered:[on] @AT@ 2615 @LENGTH@ 2
---INS ExpressionStatement@@MethodInvocation:assertParameterJsonSchema(mbeanServer,on,"bean") @TO@ MethodDeclaration@@public, void, MethodName:testEndpointConfigurationJson, Exception,  @AT@ 2629 @LENGTH@ 51
------INS MethodInvocation@@assertParameterJsonSchema(mbeanServer,on,"bean") @TO@ ExpressionStatement@@MethodInvocation:assertParameterJsonSchema(mbeanServer,on,"bean") @AT@ 2629 @LENGTH@ 50
---------INS SimpleName@@MethodName:assertParameterJsonSchema:[mbeanServer, on, "bean"] @TO@ MethodInvocation@@assertParameterJsonSchema(mbeanServer,on,"bean") @AT@ 2629 @LENGTH@ 50
------------INS SimpleName@@mbeanServer @TO@ SimpleName@@MethodName:assertParameterJsonSchema:[mbeanServer, on, "bean"] @AT@ 2655 @LENGTH@ 11
------------INS SimpleName@@on @TO@ SimpleName@@MethodName:assertParameterJsonSchema:[mbeanServer, on, "bean"] @AT@ 2668 @LENGTH@ 2
------------INS StringLiteral@@"bean" @TO@ SimpleName@@MethodName:assertParameterJsonSchema:[mbeanServer, on, "bean"] @AT@ 2672 @LENGTH@ 6
---INS ExpressionStatement@@MethodInvocation:assertParameterJsonSchema(mbeanServer,on,"timer") @TO@ MethodDeclaration@@public, void, MethodName:testEndpointConfigurationJson, Exception,  @AT@ 2689 @LENGTH@ 52
------INS MethodInvocation@@assertParameterJsonSchema(mbeanServer,on,"timer") @TO@ ExpressionStatement@@MethodInvocation:assertParameterJsonSchema(mbeanServer,on,"timer") @AT@ 2689 @LENGTH@ 51
---------INS SimpleName@@MethodName:assertParameterJsonSchema:[mbeanServer, on, "timer"] @TO@ MethodInvocation@@assertParameterJsonSchema(mbeanServer,on,"timer") @AT@ 2689 @LENGTH@ 51
------------INS SimpleName@@mbeanServer @TO@ SimpleName@@MethodName:assertParameterJsonSchema:[mbeanServer, on, "timer"] @AT@ 2715 @LENGTH@ 11
------------INS SimpleName@@on @TO@ SimpleName@@MethodName:assertParameterJsonSchema:[mbeanServer, on, "timer"] @AT@ 2728 @LENGTH@ 2
------------INS StringLiteral@@"timer" @TO@ SimpleName@@MethodName:assertParameterJsonSchema:[mbeanServer, on, "timer"] @AT@ 2732 @LENGTH@ 7


INS MethodDeclaration@@boolean, MethodName:quoteEmbeddedNodes,  @TO@ TypeDeclaration@@[public]LiteralNode, [SimpleNode] @AT@ 1565 @LENGTH@ 21
---INS PrimitiveType@@boolean @TO@ MethodDeclaration@@boolean, MethodName:quoteEmbeddedNodes,  @AT@ 1557 @LENGTH@ 7
---INS SimpleName@@MethodName:quoteEmbeddedNodes @TO@ MethodDeclaration@@boolean, MethodName:quoteEmbeddedNodes,  @AT@ 1565 @LENGTH@ 18


DEL MethodDeclaration@@private, void, MethodName:checkSubscription,  @AT@ 52067 @LENGTH@ 167
---DEL Modifier@@private @AT@ 52067 @LENGTH@ 7
---DEL PrimitiveType@@void @AT@ 52075 @LENGTH@ 4
---DEL SimpleName@@MethodName:checkSubscription @AT@ 52080 @LENGTH@ 17
---DEL IfStatement@@if (isSubscribed()) {  throw new RedisSubscribedConnectionException("Cannot execute command - connection is subscribed");} @AT@ 52104 @LENGTH@ 127
------DEL MethodInvocation@@MethodName:isSubscribed:[] @AT@ 52108 @LENGTH@ 14
------DEL Block@@ThenBody:{  throw new RedisSubscribedConnectionException("Cannot execute command - connection is subscribed");} @AT@ 52124 @LENGTH@ 107
---------DEL ThrowStatement@@ClassInstanceCreation:new RedisSubscribedConnectionException("Cannot execute command - connection is subscribed") @AT@ 52129 @LENGTH@ 98
------------DEL ClassInstanceCreation@@RedisSubscribedConnectionException["Cannot execute command - connection is subscribed"] @AT@ 52135 @LENGTH@ 91
---------------DEL New@@new @AT@ 52135 @LENGTH@ 3
---------------DEL SimpleType@@RedisSubscribedConnectionException @AT@ 52139 @LENGTH@ 34
---------------DEL StringLiteral@@"Cannot execute command - connection is subscribed" @AT@ 52174 @LENGTH@ 51


UPD IfStatement@@if (endpoint.getConfiguration().getWaitTimeMs() <= 0) {  try {    Thread.sleep(100);  } catch (  InterruptedException ignored) {  }} @TO@ if (endpoint.getConfiguration().getWaitTimeMs() > 0) {} else {  try {    Thread.sleep(100);  } catch (  InterruptedException ignored) {  }} @AT@ 8135 @LENGTH@ 494
---UPD InfixExpression@@endpoint.getConfiguration().getWaitTimeMs() <= 0 @TO@ endpoint.getConfiguration().getWaitTimeMs() > 0 @AT@ 8139 @LENGTH@ 48
------UPD Operator@@<= @TO@ > @AT@ 8182 @LENGTH@ 2
---INS Block@@ThenBody:{} @TO@ IfStatement@@if (endpoint.getConfiguration().getWaitTimeMs() <= 0) {  try {    Thread.sleep(100);  } catch (  InterruptedException ignored) {  }} @AT@ 8188 @LENGTH@ 90
---UPD Block@@ThenBody:{  try {    Thread.sleep(100);  } catch (  InterruptedException ignored) {  }} @TO@ ElseBody:{  try {    Thread.sleep(100);  } catch (  InterruptedException ignored) {  }} @AT@ 8189 @LENGTH@ 440


UPD SwitchStatement@@switch (entry.type) {case CP:  Path p=new Path(URI.create(path));if (shouldFixCpEntry) {  System.setProperty("path.separator",":");  if (isArchive) {    DistributedCache.addArchiveToClassPath(p,conf,fs);  } else {    DistributedCache.addFileToClassPath(p,conf,fs);  }  System.setProperty("path.separator",";");}break;case LOCAL:if (isArchive) {DistributedCache.addLocalArchives(conf,path);} else {DistributedCache.addLocalFiles(conf,path);}break;case CACHE:if (!path.contains("#")) {uri=URI.create(path + "#" + defaultLink);}if (isArchive) {DistributedCache.addCacheArchive(uri,conf);} else {DistributedCache.addCacheFile(uri,conf);}break;} @TO@ switch (entry.type) {case CP:  Path p=new Path(URI.create(path));try {  if (shouldFixCpEntry) {    System.setProperty("path.separator",":");  }  if (isArchive) {    DistributedCache.addArchiveToClassPath(p,conf,fs);  } else {    DistributedCache.addFileToClassPath(p,conf,fs);  }}  finally {  if (shouldFixCpEntry) {    System.setProperty("path.separator",";");  }}break;case LOCAL:if (isArchive) {DistributedCache.addLocalArchives(conf,path);} else {DistributedCache.addLocalFiles(conf,path);}break;case CACHE:if (!path.contains("#")) {uri=URI.create(path + "#" + defaultLink);}if (isArchive) {DistributedCache.addCacheArchive(uri,conf);} else {DistributedCache.addCacheFile(uri,conf);}break;} @AT@ 3697 @LENGTH@ 1053
---INS TryStatement@@try {  if (shouldFixCpEntry) {    System.setProperty("path.separator",":");  }  if (isArchive) {    DistributedCache.addArchiveToClassPath(p,conf,fs);  } else {    DistributedCache.addFileToClassPath(p,conf,fs);  }}  finally {  if (shouldFixCpEntry) {    System.setProperty("path.separator",";");  }} @TO@ SwitchStatement@@switch (entry.type) {case CP:  Path p=new Path(URI.create(path));if (shouldFixCpEntry) {  System.setProperty("path.separator",":");  if (isArchive) {    DistributedCache.addArchiveToClassPath(p,conf,fs);  } else {    DistributedCache.addFileToClassPath(p,conf,fs);  }  System.setProperty("path.separator",";");}break;case LOCAL:if (isArchive) {DistributedCache.addLocalArchives(conf,path);} else {DistributedCache.addLocalFiles(conf,path);}break;case CACHE:if (!path.contains("#")) {uri=URI.create(path + "#" + defaultLink);}if (isArchive) {DistributedCache.addCacheArchive(uri,conf);} else {DistributedCache.addCacheFile(uri,conf);}break;} @AT@ 3848 @LENGTH@ 404
------INS IfStatement@@if (shouldFixCpEntry) {  System.setProperty("path.separator",":");} @TO@ TryStatement@@try {  if (shouldFixCpEntry) {    System.setProperty("path.separator",":");  }  if (isArchive) {    DistributedCache.addArchiveToClassPath(p,conf,fs);  } else {    DistributedCache.addFileToClassPath(p,conf,fs);  }}  finally {  if (shouldFixCpEntry) {    System.setProperty("path.separator",";");  }} @AT@ 3862 @LENGTH@ 85
---------MOV SimpleName@@shouldFixCpEntry @TO@ IfStatement@@if (shouldFixCpEntry) {  System.setProperty("path.separator",":");} @AT@ 3854 @LENGTH@ 16
---------MOV Block@@ThenBody:{  System.setProperty("path.separator",":");  if (isArchive) {    DistributedCache.addArchiveToClassPath(p,conf,fs);  } else {    DistributedCache.addFileToClassPath(p,conf,fs);  }  System.setProperty("path.separator",";");} @TO@ IfStatement@@if (shouldFixCpEntry) {  System.setProperty("path.separator",":");} @AT@ 3872 @LENGTH@ 293
------MOV IfStatement@@if (isArchive) {  DistributedCache.addArchiveToClassPath(p,conf,fs);} else {  DistributedCache.addFileToClassPath(p,conf,fs);} @TO@ TryStatement@@try {  if (shouldFixCpEntry) {    System.setProperty("path.separator",":");  }  if (isArchive) {    DistributedCache.addArchiveToClassPath(p,conf,fs);  } else {    DistributedCache.addFileToClassPath(p,conf,fs);  }}  finally {  if (shouldFixCpEntry) {    System.setProperty("path.separator",";");  }} @AT@ 3933 @LENGTH@ 172
------INS Block@@FinallyBody:{  if (shouldFixCpEntry) {    System.setProperty("path.separator",";");  }} @TO@ TryStatement@@try {  if (shouldFixCpEntry) {    System.setProperty("path.separator",":");  }  if (isArchive) {    DistributedCache.addArchiveToClassPath(p,conf,fs);  } else {    DistributedCache.addFileToClassPath(p,conf,fs);  }}  finally {  if (shouldFixCpEntry) {    System.setProperty("path.separator",";");  }} @AT@ 4148 @LENGTH@ 104
---------INS IfStatement@@if (shouldFixCpEntry) {  System.setProperty("path.separator",";");} @TO@ Block@@FinallyBody:{  if (shouldFixCpEntry) {    System.setProperty("path.separator",";");  }} @AT@ 4158 @LENGTH@ 85
------------INS SimpleName@@shouldFixCpEntry @TO@ IfStatement@@if (shouldFixCpEntry) {  System.setProperty("path.separator",";");} @AT@ 4162 @LENGTH@ 16
------------INS Block@@ThenBody:{  System.setProperty("path.separator",";");} @TO@ IfStatement@@if (shouldFixCpEntry) {  System.setProperty("path.separator",";");} @AT@ 4180 @LENGTH@ 63
---------------MOV ExpressionStatement@@MethodInvocation:System.setProperty("path.separator",";") @TO@ Block@@ThenBody:{  System.setProperty("path.separator",";");} @AT@ 4114 @LENGTH@ 42
---DEL IfStatement@@if (shouldFixCpEntry) {  System.setProperty("path.separator",":");  if (isArchive) {    DistributedCache.addArchiveToClassPath(p,conf,fs);  } else {    DistributedCache.addFileToClassPath(p,conf,fs);  }  System.setProperty("path.separator",";");} @AT@ 3850 @LENGTH@ 315


DEL MethodDeclaration@@public, void, MethodName:testUnwatch,  @AT@ 2058 @LENGTH@ 30
---DEL Modifier@@public @AT@ 2058 @LENGTH@ 6
---DEL PrimitiveType@@void @AT@ 2065 @LENGTH@ 4
---DEL SimpleName@@MethodName:testUnwatch @AT@ 2070 @LENGTH@ 11


UPD FieldDeclaration@@private, int, [port=Ports.DEFAULT_SSH_PORT] @TO@ private, int, [port=Ports.DEFAULT_HOST_SSH_PORT] @AT@ 2257 @LENGTH@ 42
---UPD VariableDeclarationFragment@@port=Ports.DEFAULT_SSH_PORT @TO@ port=Ports.DEFAULT_HOST_SSH_PORT @AT@ 2269 @LENGTH@ 29
------UPD QualifiedName@@Ports.DEFAULT_SSH_PORT @TO@ Ports.DEFAULT_HOST_SSH_PORT @AT@ 2276 @LENGTH@ 22
---------UPD SimpleName@@DEFAULT_SSH_PORT @TO@ DEFAULT_HOST_SSH_PORT @AT@ 2282 @LENGTH@ 16


DEL MethodDeclaration@@private, static, void, MethodName:configureAttributes, Map<String,FailedOperationTransformationConfig.AttributesPathAddressConfig<?>> map, AttributeDefinition[] rejectedExpression, AttributeDefinition[] newAttributes,  @AT@ 16770 @LENGTH@ 667
---DEL Modifier@@private @AT@ 16770 @LENGTH@ 7
---DEL Modifier@@static @AT@ 16778 @LENGTH@ 6
---DEL PrimitiveType@@void @AT@ 16785 @LENGTH@ 4
---DEL SimpleName@@MethodName:configureAttributes @AT@ 16790 @LENGTH@ 19
---DEL SingleVariableDeclaration@@Map<String,FailedOperationTransformationConfig.AttributesPathAddressConfig<?>> map @AT@ 16810 @LENGTH@ 83
------DEL ParameterizedType@@Map<String,FailedOperationTransformationConfig.AttributesPathAddressConfig<?>> @AT@ 16810 @LENGTH@ 79
---------DEL SimpleType@@Map @AT@ 16810 @LENGTH@ 3
---------DEL SimpleType@@String @AT@ 16814 @LENGTH@ 6
---------DEL ParameterizedType@@FailedOperationTransformationConfig.AttributesPathAddressConfig<?> @AT@ 16822 @LENGTH@ 66
------------DEL SimpleType@@FailedOperationTransformationConfig.AttributesPathAddressConfig @AT@ 16822 @LENGTH@ 63
------------DEL WildcardType@@? @AT@ 16886 @LENGTH@ 1
------DEL SimpleName@@map @AT@ 16890 @LENGTH@ 3
---DEL SingleVariableDeclaration@@AttributeDefinition[] rejectedExpression @AT@ 16895 @LENGTH@ 40
------DEL ArrayType@@AttributeDefinition[] @AT@ 16895 @LENGTH@ 21
---------DEL SimpleType@@AttributeDefinition @AT@ 16895 @LENGTH@ 19
------DEL SimpleName@@rejectedExpression @AT@ 16917 @LENGTH@ 18
---DEL SingleVariableDeclaration@@AttributeDefinition[] newAttributes @AT@ 16937 @LENGTH@ 35
------DEL ArrayType@@AttributeDefinition[] @AT@ 16937 @LENGTH@ 21
---------DEL SimpleType@@AttributeDefinition @AT@ 16937 @LENGTH@ 19
------DEL SimpleName@@newAttributes @AT@ 16959 @LENGTH@ 13
---DEL VariableDeclarationStatement@@RejectExpressionsConfig rejectExpressionsConfig=new RejectExpressionsConfig(rejectedExpression); @AT@ 16984 @LENGTH@ 98
------DEL SimpleType@@RejectExpressionsConfig @AT@ 16984 @LENGTH@ 23
------DEL VariableDeclarationFragment@@rejectExpressionsConfig=new RejectExpressionsConfig(rejectedExpression) @AT@ 17008 @LENGTH@ 73
---------DEL SimpleName@@rejectExpressionsConfig @AT@ 17008 @LENGTH@ 23
---------DEL ClassInstanceCreation@@RejectExpressionsConfig[rejectedExpression] @AT@ 17034 @LENGTH@ 47
------------DEL New@@new @AT@ 17034 @LENGTH@ 3
------------DEL SimpleType@@RejectExpressionsConfig @AT@ 17038 @LENGTH@ 23
------------DEL SimpleName@@rejectedExpression @AT@ 17062 @LENGTH@ 18
---DEL EnhancedForStatement@@for (AttributeDefinition attr : rejectedExpression) {  map.put(attr.getName(),rejectExpressionsConfig);} @AT@ 17091 @LENGTH@ 125
------DEL SingleVariableDeclaration@@AttributeDefinition attr @AT@ 17096 @LENGTH@ 24
---------DEL SimpleType@@AttributeDefinition @AT@ 17096 @LENGTH@ 19
---------DEL SimpleName@@attr @AT@ 17116 @LENGTH@ 4
------DEL SimpleName@@rejectedExpression @AT@ 17123 @LENGTH@ 18
------DEL ExpressionStatement@@MethodInvocation:map.put(attr.getName(),rejectExpressionsConfig) @AT@ 17157 @LENGTH@ 49
---------DEL MethodInvocation@@map.put(attr.getName(),rejectExpressionsConfig) @AT@ 17157 @LENGTH@ 48
------------DEL SimpleName@@Name:map @AT@ 17157 @LENGTH@ 3
------------DEL SimpleName@@MethodName:put:[attr.getName(), rejectExpressionsConfig] @AT@ 17161 @LENGTH@ 44
---------------DEL MethodInvocation@@attr.getName() @AT@ 17165 @LENGTH@ 14
------------------DEL SimpleName@@Name:attr @AT@ 17165 @LENGTH@ 4
------------------DEL SimpleName@@MethodName:getName:[] @AT@ 17170 @LENGTH@ 9
---------------DEL SimpleName@@rejectExpressionsConfig @AT@ 17181 @LENGTH@ 23
---DEL VariableDeclarationStatement@@NewAttributesConfig newAttributesConfig=new NewAttributesConfig(newAttributes); @AT@ 17225 @LENGTH@ 81
------DEL SimpleType@@NewAttributesConfig @AT@ 17225 @LENGTH@ 19
------DEL VariableDeclarationFragment@@newAttributesConfig=new NewAttributesConfig(newAttributes) @AT@ 17245 @LENGTH@ 60
---------DEL SimpleName@@newAttributesConfig @AT@ 17245 @LENGTH@ 19
---------DEL ClassInstanceCreation@@NewAttributesConfig[newAttributes] @AT@ 17267 @LENGTH@ 38
------------DEL New@@new @AT@ 17267 @LENGTH@ 3
------------DEL SimpleType@@NewAttributesConfig @AT@ 17271 @LENGTH@ 19
------------DEL SimpleName@@newAttributes @AT@ 17291 @LENGTH@ 13
---DEL EnhancedForStatement@@for (AttributeDefinition attr : newAttributes) {  map.put(attr.getName(),newAttributesConfig);} @AT@ 17315 @LENGTH@ 115
------DEL SingleVariableDeclaration@@AttributeDefinition attr @AT@ 17320 @LENGTH@ 24
---------DEL SimpleType@@AttributeDefinition @AT@ 17320 @LENGTH@ 19
---------DEL SimpleName@@attr @AT@ 17340 @LENGTH@ 4
------DEL SimpleName@@newAttributes @AT@ 17346 @LENGTH@ 13
------DEL ExpressionStatement@@MethodInvocation:map.put(attr.getName(),newAttributesConfig) @AT@ 17375 @LENGTH@ 45
---------DEL MethodInvocation@@map.put(attr.getName(),newAttributesConfig) @AT@ 17375 @LENGTH@ 44
------------DEL SimpleName@@Name:map @AT@ 17375 @LENGTH@ 3
------------DEL SimpleName@@MethodName:put:[attr.getName(), newAttributesConfig] @AT@ 17379 @LENGTH@ 40
---------------DEL MethodInvocation@@attr.getName() @AT@ 17383 @LENGTH@ 14
------------------DEL SimpleName@@Name:attr @AT@ 17383 @LENGTH@ 4
------------------DEL SimpleName@@MethodName:getName:[] @AT@ 17388 @LENGTH@ 9
---------------DEL SimpleName@@newAttributesConfig @AT@ 17399 @LENGTH@ 19


DEL FieldDeclaration@@protected, ProducerTemplate, [producerTemplate] @AT@ 1513 @LENGTH@ 44
---DEL Modifier@@protected @AT@ 1513 @LENGTH@ 9
---DEL SimpleType@@ProducerTemplate @AT@ 1523 @LENGTH@ 16
---DEL VariableDeclarationFragment@@producerTemplate @AT@ 1540 @LENGTH@ 16
------DEL SimpleName@@producerTemplate @AT@ 1540 @LENGTH@ 16


INS MethodDeclaration@@public, void, MethodName:addStep, ModelNode operation, OperationStepHandler step, Stage stage, final boolean addFirst, IllegalArgumentException,  @TO@ TypeDeclaration@@[@SuppressWarnings("deprecation")]ParallelBootOperationContext, AbstractOperationContext @AT@ 3444 @LENGTH@ 303
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:addStep, ModelNode operation, OperationStepHandler step, Stage stage, final boolean addFirst, IllegalArgumentException,  @AT@ 3444 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:addStep, ModelNode operation, OperationStepHandler step, Stage stage, final boolean addFirst, IllegalArgumentException,  @AT@ 3451 @LENGTH@ 4
---INS SimpleName@@MethodName:addStep @TO@ MethodDeclaration@@public, void, MethodName:addStep, ModelNode operation, OperationStepHandler step, Stage stage, final boolean addFirst, IllegalArgumentException,  @AT@ 3456 @LENGTH@ 7
---INS SingleVariableDeclaration@@ModelNode operation @TO@ MethodDeclaration@@public, void, MethodName:addStep, ModelNode operation, OperationStepHandler step, Stage stage, final boolean addFirst, IllegalArgumentException,  @AT@ 3464 @LENGTH@ 19
------INS SimpleType@@ModelNode @TO@ SingleVariableDeclaration@@ModelNode operation @AT@ 3464 @LENGTH@ 9
------INS SimpleName@@operation @TO@ SingleVariableDeclaration@@ModelNode operation @AT@ 3474 @LENGTH@ 9
---INS SingleVariableDeclaration@@OperationStepHandler step @TO@ MethodDeclaration@@public, void, MethodName:addStep, ModelNode operation, OperationStepHandler step, Stage stage, final boolean addFirst, IllegalArgumentException,  @AT@ 3485 @LENGTH@ 25
------INS SimpleType@@OperationStepHandler @TO@ SingleVariableDeclaration@@OperationStepHandler step @AT@ 3485 @LENGTH@ 20
------INS SimpleName@@step @TO@ SingleVariableDeclaration@@OperationStepHandler step @AT@ 3506 @LENGTH@ 4
---INS SingleVariableDeclaration@@Stage stage @TO@ MethodDeclaration@@public, void, MethodName:addStep, ModelNode operation, OperationStepHandler step, Stage stage, final boolean addFirst, IllegalArgumentException,  @AT@ 3512 @LENGTH@ 11
------INS SimpleType@@Stage @TO@ SingleVariableDeclaration@@Stage stage @AT@ 3512 @LENGTH@ 5
------INS SimpleName@@stage @TO@ SingleVariableDeclaration@@Stage stage @AT@ 3518 @LENGTH@ 5
---INS SingleVariableDeclaration@@final boolean addFirst @TO@ MethodDeclaration@@public, void, MethodName:addStep, ModelNode operation, OperationStepHandler step, Stage stage, final boolean addFirst, IllegalArgumentException,  @AT@ 3525 @LENGTH@ 22
------INS Modifier@@final @TO@ SingleVariableDeclaration@@final boolean addFirst @AT@ 3525 @LENGTH@ 5
------INS PrimitiveType@@boolean @TO@ SingleVariableDeclaration@@final boolean addFirst @AT@ 3531 @LENGTH@ 7
------INS SimpleName@@addFirst @TO@ SingleVariableDeclaration@@final boolean addFirst @AT@ 3539 @LENGTH@ 8
---INS SimpleType@@IllegalArgumentException @TO@ MethodDeclaration@@public, void, MethodName:addStep, ModelNode operation, OperationStepHandler step, Stage stage, final boolean addFirst, IllegalArgumentException,  @AT@ 3556 @LENGTH@ 24
---INS IfStatement@@if (activeStep == null) {  throw MESSAGES.noActiveStep();} @TO@ MethodDeclaration@@public, void, MethodName:addStep, ModelNode operation, OperationStepHandler step, Stage stage, final boolean addFirst, IllegalArgumentException,  @AT@ 3591 @LENGTH@ 78
------INS InfixExpression@@activeStep == null @TO@ IfStatement@@if (activeStep == null) {  throw MESSAGES.noActiveStep();} @AT@ 3595 @LENGTH@ 18
---------INS SimpleName@@activeStep @TO@ InfixExpression@@activeStep == null @AT@ 3595 @LENGTH@ 10
---------INS Operator@@== @TO@ InfixExpression@@activeStep == null @AT@ 3605 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@activeStep == null @AT@ 3609 @LENGTH@ 4
------INS Block@@ThenBody:{  throw MESSAGES.noActiveStep();} @TO@ IfStatement@@if (activeStep == null) {  throw MESSAGES.noActiveStep();} @AT@ 3615 @LENGTH@ 54
---------INS ThrowStatement@@MethodInvocation:MESSAGES.noActiveStep() @TO@ Block@@ThenBody:{  throw MESSAGES.noActiveStep();} @AT@ 3629 @LENGTH@ 30
------------INS MethodInvocation@@MESSAGES.noActiveStep() @TO@ ThrowStatement@@MethodInvocation:MESSAGES.noActiveStep() @AT@ 3635 @LENGTH@ 23
---------------INS SimpleName@@Name:MESSAGES @TO@ MethodInvocation@@MESSAGES.noActiveStep() @AT@ 3635 @LENGTH@ 8
---------------INS SimpleName@@MethodName:noActiveStep:[] @TO@ MethodInvocation@@MESSAGES.noActiveStep() @AT@ 3644 @LENGTH@ 14
---INS ExpressionStatement@@MethodInvocation:addStep(activeStep.response,operation,step,stage,addFirst) @TO@ MethodDeclaration@@public, void, MethodName:addStep, ModelNode operation, OperationStepHandler step, Stage stage, final boolean addFirst, IllegalArgumentException,  @AT@ 3678 @LENGTH@ 63
------INS MethodInvocation@@addStep(activeStep.response,operation,step,stage,addFirst) @TO@ ExpressionStatement@@MethodInvocation:addStep(activeStep.response,operation,step,stage,addFirst) @AT@ 3678 @LENGTH@ 62
---------INS SimpleName@@MethodName:addStep:[activeStep.response, operation, step, stage, addFirst] @TO@ MethodInvocation@@addStep(activeStep.response,operation,step,stage,addFirst) @AT@ 3678 @LENGTH@ 62
------------INS QualifiedName@@activeStep.response @TO@ SimpleName@@MethodName:addStep:[activeStep.response, operation, step, stage, addFirst] @AT@ 3686 @LENGTH@ 19
---------------INS SimpleName@@activeStep @TO@ QualifiedName@@activeStep.response @AT@ 3686 @LENGTH@ 10
---------------INS SimpleName@@response @TO@ QualifiedName@@activeStep.response @AT@ 3697 @LENGTH@ 8
------------INS SimpleName@@operation @TO@ SimpleName@@MethodName:addStep:[activeStep.response, operation, step, stage, addFirst] @AT@ 3707 @LENGTH@ 9
------------INS SimpleName@@step @TO@ SimpleName@@MethodName:addStep:[activeStep.response, operation, step, stage, addFirst] @AT@ 3718 @LENGTH@ 4
------------INS SimpleName@@stage @TO@ SimpleName@@MethodName:addStep:[activeStep.response, operation, step, stage, addFirst] @AT@ 3724 @LENGTH@ 5
------------INS SimpleName@@addFirst @TO@ SimpleName@@MethodName:addStep:[activeStep.response, operation, step, stage, addFirst] @AT@ 3731 @LENGTH@ 8


INS MethodDeclaration@@public, ExpressionNode, MethodName:id, String id,  @TO@ TypeDeclaration@@[@XmlAccessorType(XmlAccessType.FIELD), public]NoOutputExpressionNode, ExpressionNode @AT@ 2274 @LENGTH@ 168
---INS Modifier@@public @TO@ MethodDeclaration@@public, ExpressionNode, MethodName:id, String id,  @AT@ 2274 @LENGTH@ 6
---INS SimpleType@@ExpressionNode @TO@ MethodDeclaration@@public, ExpressionNode, MethodName:id, String id,  @AT@ 2281 @LENGTH@ 14
---INS SimpleName@@MethodName:id @TO@ MethodDeclaration@@public, ExpressionNode, MethodName:id, String id,  @AT@ 2296 @LENGTH@ 2
---INS SingleVariableDeclaration@@String id @TO@ MethodDeclaration@@public, ExpressionNode, MethodName:id, String id,  @AT@ 2299 @LENGTH@ 9
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String id @AT@ 2299 @LENGTH@ 6
------INS SimpleName@@id @TO@ SingleVariableDeclaration@@String id @AT@ 2306 @LENGTH@ 2
---INS ExpressionStatement@@MethodInvocation:getParent().id(id) @TO@ MethodDeclaration@@public, ExpressionNode, MethodName:id, String id,  @AT@ 2396 @LENGTH@ 19
------INS MethodInvocation@@getParent().id(id) @TO@ ExpressionStatement@@MethodInvocation:getParent().id(id) @AT@ 2396 @LENGTH@ 18
---------INS MethodInvocation@@MethodName:getParent:[] @TO@ MethodInvocation@@getParent().id(id) @AT@ 2396 @LENGTH@ 11
---------INS SimpleName@@MethodName:id:[id] @TO@ MethodInvocation@@getParent().id(id) @AT@ 2408 @LENGTH@ 6
------------INS SimpleName@@id @TO@ SimpleName@@MethodName:id:[id] @AT@ 2411 @LENGTH@ 2
---INS ReturnStatement@@ThisExpression:this @TO@ MethodDeclaration@@public, ExpressionNode, MethodName:id, String id,  @AT@ 2424 @LENGTH@ 12
------INS ThisExpression@@this @TO@ ReturnStatement@@ThisExpression:this @AT@ 2431 @LENGTH@ 4


UPD EnhancedForStatement@@for (final String csName : Charset.availableCharsets().keySet()) {  testBufferedRead(TEST_STRING,csName);} @TO@ for (final String csName : Charset.availableCharsets().keySet()) {  if (Charset.forName(csName).canEncode()) {    testBufferedRead(TEST_STRING,csName);  }} @AT@ 3579 @LENGTH@ 127
---INS IfStatement@@if (Charset.forName(csName).canEncode()) {  testBufferedRead(TEST_STRING,csName);} @TO@ EnhancedForStatement@@for (final String csName : Charset.availableCharsets().keySet()) {  testBufferedRead(TEST_STRING,csName);} @AT@ 3492 @LENGTH@ 111
------INS MethodInvocation@@Charset.forName(csName).canEncode() @TO@ IfStatement@@if (Charset.forName(csName).canEncode()) {  testBufferedRead(TEST_STRING,csName);} @AT@ 3496 @LENGTH@ 35
---------INS MethodInvocation@@MethodName:forName:[csName] @TO@ MethodInvocation@@Charset.forName(csName).canEncode() @AT@ 3496 @LENGTH@ 23
------------INS SimpleName@@csName @TO@ MethodInvocation@@MethodName:forName:[csName] @AT@ 3512 @LENGTH@ 6
---------INS SimpleName@@Name:Charset @TO@ MethodInvocation@@Charset.forName(csName).canEncode() @AT@ 3496 @LENGTH@ 7
---------INS SimpleName@@MethodName:canEncode:[] @TO@ MethodInvocation@@Charset.forName(csName).canEncode() @AT@ 3520 @LENGTH@ 11
------INS Block@@ThenBody:{  testBufferedRead(TEST_STRING,csName);} @TO@ IfStatement@@if (Charset.forName(csName).canEncode()) {  testBufferedRead(TEST_STRING,csName);} @AT@ 3533 @LENGTH@ 70
---------MOV ExpressionStatement@@MethodInvocation:testBufferedRead(TEST_STRING,csName) @TO@ Block@@ThenBody:{  testBufferedRead(TEST_STRING,csName);} @AT@ 3658 @LENGTH@ 38


UPD ExpressionStatement@@MethodInvocation:errorHandler(deadLetterChannel("mock:error").maximumRedeliveries(2).redeliveryDelay(0)) @TO@ MethodInvocation:onException(IllegalArgumentException.class).maximumRedeliveries(2).redeliveryDelay(0).to("mock:error") @AT@ 3101 @LENGTH@ 88
---DEL MethodInvocation@@errorHandler(deadLetterChannel("mock:error").maximumRedeliveries(2).redeliveryDelay(0)) @AT@ 3101 @LENGTH@ 87
------DEL SimpleName@@MethodName:errorHandler:[deadLetterChannel("mock:error").maximumRedeliveries(2).redeliveryDelay(0)] @AT@ 3101 @LENGTH@ 87
---------DEL MethodInvocation@@deadLetterChannel("mock:error").maximumRedeliveries(2).redeliveryDelay(0) @AT@ 3114 @LENGTH@ 73
------------DEL SimpleName@@MethodName:redeliveryDelay:[0] @AT@ 3169 @LENGTH@ 18
---------------DEL NumberLiteral@@0 @AT@ 3185 @LENGTH@ 1
---INS MethodInvocation@@onException(IllegalArgumentException.class).maximumRedeliveries(2).redeliveryDelay(0).to("mock:error") @TO@ ExpressionStatement@@MethodInvocation:errorHandler(deadLetterChannel("mock:error").maximumRedeliveries(2).redeliveryDelay(0)) @AT@ 3101 @LENGTH@ 144
------INS MethodInvocation@@MethodName:redeliveryDelay:[0] @TO@ MethodInvocation@@onException(IllegalArgumentException.class).maximumRedeliveries(2).redeliveryDelay(0).to("mock:error") @AT@ 3101 @LENGTH@ 106
---------INS NumberLiteral@@0 @TO@ MethodInvocation@@MethodName:redeliveryDelay:[0] @AT@ 3205 @LENGTH@ 1
------MOV MethodInvocation@@MethodName:maximumRedeliveries:[2] @TO@ MethodInvocation@@onException(IllegalArgumentException.class).maximumRedeliveries(2).redeliveryDelay(0).to("mock:error") @AT@ 3114 @LENGTH@ 54
------MOV MethodInvocation@@MethodName:deadLetterChannel:["mock:error"] @TO@ MethodInvocation@@onException(IllegalArgumentException.class).maximumRedeliveries(2).redeliveryDelay(0).to("mock:error") @AT@ 3114 @LENGTH@ 31
---------INS TypeLiteral@@IllegalArgumentException.class @TO@ MethodInvocation@@MethodName:deadLetterChannel:["mock:error"] @AT@ 3113 @LENGTH@ 30
---------INS TypeLiteral@@IllegalArgumentException.class @TO@ MethodInvocation@@MethodName:deadLetterChannel:["mock:error"] @AT@ 3113 @LENGTH@ 30
------INS SimpleName@@MethodName:to:["mock:error"] @TO@ MethodInvocation@@onException(IllegalArgumentException.class).maximumRedeliveries(2).redeliveryDelay(0).to("mock:error") @AT@ 3229 @LENGTH@ 16
---------INS StringLiteral@@"mock:error" @TO@ SimpleName@@MethodName:to:["mock:error"] @AT@ 3232 @LENGTH@ 12


UPD SuperConstructorInvocation@@super(PathElement.pathElement(Constants.VAULT,Constants.CLASSIC),SecurityExtension.getResourceDescriptionResolver(Constants.VAULT),VaultResourceDefinitionAdd.INSTANCE,ReloadRequiredRemoveStepHandler.INSTANCE);
 @TO@ super(SecurityExtension.VAULT_PATH,SecurityExtension.getResourceDescriptionResolver(Constants.VAULT),VaultResourceDefinitionAdd.INSTANCE,ReloadRequiredRemoveStepHandler.INSTANCE);
 @AT@ 2676 @LENGTH@ 245
---INS QualifiedName@@SecurityExtension.VAULT_PATH @TO@ SuperConstructorInvocation@@super(PathElement.pathElement(Constants.VAULT,Constants.CLASSIC),SecurityExtension.getResourceDescriptionResolver(Constants.VAULT),VaultResourceDefinitionAdd.INSTANCE,ReloadRequiredRemoveStepHandler.INSTANCE);
 @AT@ 2638 @LENGTH@ 28
------MOV SimpleName@@Constants @TO@ QualifiedName@@SecurityExtension.VAULT_PATH @AT@ 2706 @LENGTH@ 9
------MOV SimpleName@@VAULT @TO@ QualifiedName@@SecurityExtension.VAULT_PATH @AT@ 2716 @LENGTH@ 5
---DEL MethodInvocation@@PathElement.pathElement(Constants.VAULT,Constants.CLASSIC) @AT@ 2682 @LENGTH@ 59
------DEL SimpleName@@Name:PathElement @AT@ 2682 @LENGTH@ 11
------DEL SimpleName@@MethodName:pathElement:[Constants.VAULT, Constants.CLASSIC] @AT@ 2694 @LENGTH@ 47
---------DEL QualifiedName@@Constants.VAULT @AT@ 2706 @LENGTH@ 15
---------DEL QualifiedName@@Constants.CLASSIC @AT@ 2723 @LENGTH@ 17
------------DEL SimpleName@@Constants @AT@ 2723 @LENGTH@ 9
------------DEL SimpleName@@CLASSIC @AT@ 2733 @LENGTH@ 7


UPD FieldDeclaration@@private, static, final, Set<Class>, [PRIMITIVE_CLASSES=new HashSet<Class>()] @TO@ private, static, final, Set<Class<?>>, [PRIMITIVE_CLASSES=new HashSet<Class<?>>()] @AT@ 3358 @LENGTH@ 73
---UPD ParameterizedType@@Set<Class> @TO@ Set<Class<?>> @AT@ 3379 @LENGTH@ 10
------INS ParameterizedType@@Class<?> @TO@ ParameterizedType@@Set<Class> @AT@ 3383 @LENGTH@ 8
---------MOV SimpleType@@Class @TO@ ParameterizedType@@Class<?> @AT@ 3383 @LENGTH@ 5
---------INS WildcardType@@? @TO@ ParameterizedType@@Class<?> @AT@ 3389 @LENGTH@ 1
---UPD VariableDeclarationFragment@@PRIMITIVE_CLASSES=new HashSet<Class>() @TO@ PRIMITIVE_CLASSES=new HashSet<Class<?>>() @AT@ 3390 @LENGTH@ 40
------UPD ClassInstanceCreation@@HashSet<Class>[] @TO@ HashSet<Class<?>>[] @AT@ 3410 @LENGTH@ 20
---------UPD ParameterizedType@@HashSet<Class> @TO@ HashSet<Class<?>> @AT@ 3414 @LENGTH@ 14
------------INS ParameterizedType@@Class<?> @TO@ ParameterizedType@@HashSet<Class> @AT@ 3425 @LENGTH@ 8
---------------MOV SimpleType@@Class @TO@ ParameterizedType@@Class<?> @AT@ 3422 @LENGTH@ 5
---------------INS WildcardType@@? @TO@ ParameterizedType@@Class<?> @AT@ 3431 @LENGTH@ 1


UPD ExpressionStatement@@MethodInvocation:context.addStep(runningServerAdd,new OperationStepHandler(){
  @Override public void execute(  final OperationContext context,  final ModelNode operation) throws OperationFailedException {
    context.createResource(PathAddress.EMPTY_ADDRESS);
    context.stepCompleted();
  }
}
,OperationContext.Stage.IMMEDIATE) @TO@ MethodInvocation:context.addStep(runningServerAdd,new OperationStepHandler(){
  @Override public void execute(  final OperationContext context,  final ModelNode operation) throws OperationFailedException {
    context.createResource(PathAddress.EMPTY_ADDRESS);
    context.stepCompleted();
  }
}
,OperationContext.Stage.MODEL,true) @AT@ 3081 @LENGTH@ 377
---UPD MethodInvocation@@context.addStep(runningServerAdd,new OperationStepHandler(){
  @Override public void execute(  final OperationContext context,  final ModelNode operation) throws OperationFailedException {
    context.createResource(PathAddress.EMPTY_ADDRESS);
    context.stepCompleted();
  }
}
,OperationContext.Stage.IMMEDIATE) @TO@ context.addStep(runningServerAdd,new OperationStepHandler(){
  @Override public void execute(  final OperationContext context,  final ModelNode operation) throws OperationFailedException {
    context.createResource(PathAddress.EMPTY_ADDRESS);
    context.stepCompleted();
  }
}
,OperationContext.Stage.MODEL,true) @AT@ 3081 @LENGTH@ 376
------UPD SimpleName@@MethodName:addStep:[runningServerAdd, new OperationStepHandler(){
  @Override public void execute(  final OperationContext context,  final ModelNode operation) throws OperationFailedException {
    context.createResource(PathAddress.EMPTY_ADDRESS);
    context.stepCompleted();
  }
}
, OperationContext.Stage.IMMEDIATE] @TO@ MethodName:addStep:[runningServerAdd, new OperationStepHandler(){
  @Override public void execute(  final OperationContext context,  final ModelNode operation) throws OperationFailedException {
    context.createResource(PathAddress.EMPTY_ADDRESS);
    context.stepCompleted();
  }
}
, OperationContext.Stage.MODEL, true] @AT@ 3089 @LENGTH@ 368
---------UPD QualifiedName@@OperationContext.Stage.IMMEDIATE @TO@ OperationContext.Stage.MODEL @AT@ 3424 @LENGTH@ 32
------------UPD SimpleName@@IMMEDIATE @TO@ MODEL @AT@ 3447 @LENGTH@ 9
---------INS BooleanLiteral@@true @TO@ SimpleName@@MethodName:addStep:[runningServerAdd, new OperationStepHandler(){
  @Override public void execute(  final OperationContext context,  final ModelNode operation) throws OperationFailedException {
    context.createResource(PathAddress.EMPTY_ADDRESS);
    context.stepCompleted();
  }
}
, OperationContext.Stage.IMMEDIATE] @AT@ 3454 @LENGTH@ 4


MOV ExpressionStatement@@MethodInvocation:assertResultsFound(repository.findByFirstnameAnnotated("Dave"),dave) @TO@ MethodDeclaration@@public, void, MethodName:executesAnnotatedInQueryMethodCorrectly,  @AT@ 2795 @LENGTH@ 70


INS TryStatement@@try {  producer.process(exchange);}  finally {  producer.stop();} @TO@ MethodDeclaration@@private, Exchange, MethodName:sendExchange, boolean setException, Exception,  @AT@ 2265 @LENGTH@ 104
---MOV ExpressionStatement@@MethodInvocation:producer.process(exchange) @TO@ TryStatement@@try {  producer.process(exchange);}  finally {  producer.stop();} @AT@ 2217 @LENGTH@ 27
---INS Block@@FinallyBody:{  producer.stop();} @TO@ TryStatement@@try {  producer.process(exchange);}  finally {  producer.stop();} @AT@ 2329 @LENGTH@ 40
------INS ExpressionStatement@@MethodInvocation:producer.stop() @TO@ Block@@FinallyBody:{  producer.stop();} @AT@ 2343 @LENGTH@ 16
---------INS MethodInvocation@@producer.stop() @TO@ ExpressionStatement@@MethodInvocation:producer.stop() @AT@ 2343 @LENGTH@ 15
------------INS SimpleName@@Name:producer @TO@ MethodInvocation@@producer.stop() @AT@ 2343 @LENGTH@ 8
------------INS SimpleName@@MethodName:stop:[] @TO@ MethodInvocation@@producer.stop() @AT@ 2352 @LENGTH@ 6


UPD IfStatement@@if (!config.expectFailed(operation)) {  Assert.assertEquals("Failed: " + operation + "\n: "+ result,SUCCESS,result.get(OUTCOME).asString());} else {  Assert.assertEquals("Should not have worked: " + operation,FAILED,result.get(OUTCOME).asString());  if (config.canCorrectMore(operation)) {    checkFailedTransformedAddOperation(mainServices,modelVersion,config.correctOperation(operation),config);  }} @TO@ if (config.expectFailed(operation)) {  Assert.assertNotNull("Expected transformation to get rejected " + operation,transformedOperation.getFailureDescription());  if (config.canCorrectMore(operation)) {    checkFailedTransformedAddOperation(mainServices,modelVersion,config.correctOperation(operation),config);  }} else if (config.expectDiscarded(operation)) {  Assert.assertNull("Expected null transformed operation for discarded " + operation,transformedOperation.getTransformedOperation());} else {  ModelNode result=mainServices.executeOperation(modelVersion,transformedOperation);  Assert.assertEquals("Failed: " + operation + "\n: "+ result,SUCCESS,result.get(OUTCOME).asString());} @AT@ 25539 @LENGTH@ 484
---DEL PrefixExpression@@!config.expectFailed(operation) @AT@ 25543 @LENGTH@ 31
------DEL Operator@@! @AT@ 25543 @LENGTH@ 1
---MOV MethodInvocation@@config.expectFailed(operation) @TO@ IfStatement@@if (!config.expectFailed(operation)) {  Assert.assertEquals("Failed: " + operation + "\n: "+ result,SUCCESS,result.get(OUTCOME).asString());} else {  Assert.assertEquals("Should not have worked: " + operation,FAILED,result.get(OUTCOME).asString());  if (config.canCorrectMore(operation)) {    checkFailedTransformedAddOperation(mainServices,modelVersion,config.correctOperation(operation),config);  }} @AT@ 25544 @LENGTH@ 30
---UPD Block@@ThenBody:{  Assert.assertEquals("Failed: " + operation + "\n: "+ result,SUCCESS,result.get(OUTCOME).asString());} @TO@ ElseBody:{  ModelNode result=mainServices.executeOperation(modelVersion,transformedOperation);  Assert.assertEquals("Failed: " + operation + "\n: "+ result,SUCCESS,result.get(OUTCOME).asString());} @AT@ 25576 @LENGTH@ 127
---UPD Block@@ElseBody:{  Assert.assertEquals("Should not have worked: " + operation,FAILED,result.get(OUTCOME).asString());  if (config.canCorrectMore(operation)) {    checkFailedTransformedAddOperation(mainServices,modelVersion,config.correctOperation(operation),config);  }} @TO@ ThenBody:{  Assert.assertNotNull("Expected transformation to get rejected " + operation,transformedOperation.getFailureDescription());  if (config.canCorrectMore(operation)) {    checkFailedTransformedAddOperation(mainServices,modelVersion,config.correctOperation(operation),config);  }} @AT@ 25709 @LENGTH@ 314
------UPD ExpressionStatement@@MethodInvocation:Assert.assertEquals("Should not have worked: " + operation,FAILED,result.get(OUTCOME).asString()) @TO@ MethodInvocation:Assert.assertNotNull("Expected transformation to get rejected " + operation,transformedOperation.getFailureDescription()) @AT@ 25723 @LENGTH@ 100
---------UPD MethodInvocation@@Assert.assertEquals("Should not have worked: " + operation,FAILED,result.get(OUTCOME).asString()) @TO@ Assert.assertNotNull("Expected transformation to get rejected " + operation,transformedOperation.getFailureDescription()) @AT@ 25723 @LENGTH@ 99
------------UPD SimpleName@@MethodName:assertEquals:["Should not have worked: " + operation, FAILED, result.get(OUTCOME).asString()] @TO@ MethodName:assertNotNull:["Expected transformation to get rejected " + operation, transformedOperation.getFailureDescription()] @AT@ 25730 @LENGTH@ 92
---------------UPD InfixExpression@@"Should not have worked: " + operation @TO@ "Expected transformation to get rejected " + operation @AT@ 25743 @LENGTH@ 38
------------------UPD StringLiteral@@"Should not have worked: " @TO@ "Expected transformation to get rejected " @AT@ 25743 @LENGTH@ 26
---------------DEL SimpleName@@FAILED @AT@ 25783 @LENGTH@ 6
---------------UPD MethodInvocation@@result.get(OUTCOME).asString() @TO@ transformedOperation.getFailureDescription() @AT@ 25791 @LENGTH@ 30
------------------DEL MethodInvocation@@MethodName:get:[OUTCOME] @AT@ 25791 @LENGTH@ 19
---------------------DEL SimpleName@@OUTCOME @AT@ 25802 @LENGTH@ 7
------------------UPD SimpleName@@Name:result @TO@ Name:transformedOperation @AT@ 25791 @LENGTH@ 6
------------------UPD SimpleName@@MethodName:asString:[] @TO@ MethodName:getFailureDescription:[] @AT@ 25811 @LENGTH@ 10
---INS Block@@ElseBody:if (config.expectDiscarded(operation)) {  Assert.assertNull("Expected null transformed operation for discarded " + operation,transformedOperation.getTransformedOperation());} else {  ModelNode result=mainServices.executeOperation(modelVersion,transformedOperation);  Assert.assertEquals("Failed: " + operation + "\n: "+ result,SUCCESS,result.get(OUTCOME).asString());} @TO@ IfStatement@@if (!config.expectFailed(operation)) {  Assert.assertEquals("Failed: " + operation + "\n: "+ result,SUCCESS,result.get(OUTCOME).asString());} else {  Assert.assertEquals("Should not have worked: " + operation,FAILED,result.get(OUTCOME).asString());  if (config.canCorrectMore(operation)) {    checkFailedTransformedAddOperation(mainServices,modelVersion,config.correctOperation(operation),config);  }} @AT@ 25866 @LENGTH@ 426
------INS IfStatement@@if (config.expectDiscarded(operation)) {  Assert.assertNull("Expected null transformed operation for discarded " + operation,transformedOperation.getTransformedOperation());} else {  ModelNode result=mainServices.executeOperation(modelVersion,transformedOperation);  Assert.assertEquals("Failed: " + operation + "\n: "+ result,SUCCESS,result.get(OUTCOME).asString());} @TO@ Block@@ElseBody:if (config.expectDiscarded(operation)) {  Assert.assertNull("Expected null transformed operation for discarded " + operation,transformedOperation.getTransformedOperation());} else {  ModelNode result=mainServices.executeOperation(modelVersion,transformedOperation);  Assert.assertEquals("Failed: " + operation + "\n: "+ result,SUCCESS,result.get(OUTCOME).asString());} @AT@ 25866 @LENGTH@ 426
---------MOV Block@@ThenBody:{  Assert.assertEquals("Failed: " + operation + "\n: "+ result,SUCCESS,result.get(OUTCOME).asString());} @TO@ IfStatement@@if (config.expectDiscarded(operation)) {  Assert.assertNull("Expected null transformed operation for discarded " + operation,transformedOperation.getTransformedOperation());} else {  ModelNode result=mainServices.executeOperation(modelVersion,transformedOperation);  Assert.assertEquals("Failed: " + operation + "\n: "+ result,SUCCESS,result.get(OUTCOME).asString());} @AT@ 25576 @LENGTH@ 127
------------MOV VariableDeclarationStatement@@ModelNode result=mainServices.executeOperation(modelVersion,transformedOperation); @TO@ Block@@ThenBody:{  Assert.assertEquals("Failed: " + operation + "\n: "+ result,SUCCESS,result.get(OUTCOME).asString());} @AT@ 25445 @LENGTH@ 85
---------INS MethodInvocation@@config.expectDiscarded(operation) @TO@ IfStatement@@if (config.expectDiscarded(operation)) {  Assert.assertNull("Expected null transformed operation for discarded " + operation,transformedOperation.getTransformedOperation());} else {  ModelNode result=mainServices.executeOperation(modelVersion,transformedOperation);  Assert.assertEquals("Failed: " + operation + "\n: "+ result,SUCCESS,result.get(OUTCOME).asString());} @AT@ 25870 @LENGTH@ 33
------------INS SimpleName@@Name:config @TO@ MethodInvocation@@config.expectDiscarded(operation) @AT@ 25870 @LENGTH@ 6
------------INS SimpleName@@MethodName:expectDiscarded:[operation] @TO@ MethodInvocation@@config.expectDiscarded(operation) @AT@ 25877 @LENGTH@ 26
---------------INS SimpleName@@operation @TO@ SimpleName@@MethodName:expectDiscarded:[operation] @AT@ 25893 @LENGTH@ 9
---------INS Block@@ThenBody:{  Assert.assertNull("Expected null transformed operation for discarded " + operation,transformedOperation.getTransformedOperation());} @TO@ IfStatement@@if (config.expectDiscarded(operation)) {  Assert.assertNull("Expected null transformed operation for discarded " + operation,transformedOperation.getTransformedOperation());} else {  ModelNode result=mainServices.executeOperation(modelVersion,transformedOperation);  Assert.assertEquals("Failed: " + operation + "\n: "+ result,SUCCESS,result.get(OUTCOME).asString());} @AT@ 25905 @LENGTH@ 156
------------INS ExpressionStatement@@MethodInvocation:Assert.assertNull("Expected null transformed operation for discarded " + operation,transformedOperation.getTransformedOperation()) @TO@ Block@@ThenBody:{  Assert.assertNull("Expected null transformed operation for discarded " + operation,transformedOperation.getTransformedOperation());} @AT@ 25919 @LENGTH@ 132
---------------INS MethodInvocation@@Assert.assertNull("Expected null transformed operation for discarded " + operation,transformedOperation.getTransformedOperation()) @TO@ ExpressionStatement@@MethodInvocation:Assert.assertNull("Expected null transformed operation for discarded " + operation,transformedOperation.getTransformedOperation()) @AT@ 25919 @LENGTH@ 131
------------------INS SimpleName@@Name:Assert @TO@ MethodInvocation@@Assert.assertNull("Expected null transformed operation for discarded " + operation,transformedOperation.getTransformedOperation()) @AT@ 25919 @LENGTH@ 6
------------------INS SimpleName@@MethodName:assertNull:["Expected null transformed operation for discarded " + operation, transformedOperation.getTransformedOperation()] @TO@ MethodInvocation@@Assert.assertNull("Expected null transformed operation for discarded " + operation,transformedOperation.getTransformedOperation()) @AT@ 25926 @LENGTH@ 124
---------------------INS InfixExpression@@"Expected null transformed operation for discarded " + operation @TO@ SimpleName@@MethodName:assertNull:["Expected null transformed operation for discarded " + operation, transformedOperation.getTransformedOperation()] @AT@ 25937 @LENGTH@ 64
------------------------INS StringLiteral@@"Expected null transformed operation for discarded " @TO@ InfixExpression@@"Expected null transformed operation for discarded " + operation @AT@ 25937 @LENGTH@ 52
------------------------INS Operator@@+ @TO@ InfixExpression@@"Expected null transformed operation for discarded " + operation @AT@ 25989 @LENGTH@ 1
------------------------INS SimpleName@@operation @TO@ InfixExpression@@"Expected null transformed operation for discarded " + operation @AT@ 25992 @LENGTH@ 9
---------------------INS MethodInvocation@@transformedOperation.getTransformedOperation() @TO@ SimpleName@@MethodName:assertNull:["Expected null transformed operation for discarded " + operation, transformedOperation.getTransformedOperation()] @AT@ 26003 @LENGTH@ 46
------------------------INS SimpleName@@Name:transformedOperation @TO@ MethodInvocation@@transformedOperation.getTransformedOperation() @AT@ 26003 @LENGTH@ 20
------------------------INS SimpleName@@MethodName:getTransformedOperation:[] @TO@ MethodInvocation@@transformedOperation.getTransformedOperation() @AT@ 26024 @LENGTH@ 25


INS MethodDeclaration@@public, static, PathAddress, MethodName:pathAddress, String key, String value,  @TO@ TypeDeclaration@@[public]PathAddress, [Iterable<PathElement>] @AT@ 5125 @LENGTH@ 136
---INS Modifier@@public @TO@ MethodDeclaration@@public, static, PathAddress, MethodName:pathAddress, String key, String value,  @AT@ 5125 @LENGTH@ 6
---INS Modifier@@static @TO@ MethodDeclaration@@public, static, PathAddress, MethodName:pathAddress, String key, String value,  @AT@ 5132 @LENGTH@ 6
---INS SimpleType@@PathAddress @TO@ MethodDeclaration@@public, static, PathAddress, MethodName:pathAddress, String key, String value,  @AT@ 5139 @LENGTH@ 11
---INS SimpleName@@MethodName:pathAddress @TO@ MethodDeclaration@@public, static, PathAddress, MethodName:pathAddress, String key, String value,  @AT@ 5151 @LENGTH@ 11
---INS SingleVariableDeclaration@@String key @TO@ MethodDeclaration@@public, static, PathAddress, MethodName:pathAddress, String key, String value,  @AT@ 5163 @LENGTH@ 10
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String key @AT@ 5163 @LENGTH@ 6
------INS SimpleName@@key @TO@ SingleVariableDeclaration@@String key @AT@ 5170 @LENGTH@ 3
---INS SingleVariableDeclaration@@String value @TO@ MethodDeclaration@@public, static, PathAddress, MethodName:pathAddress, String key, String value,  @AT@ 5175 @LENGTH@ 12
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String value @AT@ 5175 @LENGTH@ 6
------INS SimpleName@@value @TO@ SingleVariableDeclaration@@String value @AT@ 5182 @LENGTH@ 5
---INS ReturnStatement@@MethodInvocation:pathAddress(PathElement.pathElement(key,value)) @TO@ MethodDeclaration@@public, static, PathAddress, MethodName:pathAddress, String key, String value,  @AT@ 5199 @LENGTH@ 56
------INS MethodInvocation@@pathAddress(PathElement.pathElement(key,value)) @TO@ ReturnStatement@@MethodInvocation:pathAddress(PathElement.pathElement(key,value)) @AT@ 5206 @LENGTH@ 48
---------INS SimpleName@@MethodName:pathAddress:[PathElement.pathElement(key,value)] @TO@ MethodInvocation@@pathAddress(PathElement.pathElement(key,value)) @AT@ 5206 @LENGTH@ 48
------------INS MethodInvocation@@PathElement.pathElement(key,value) @TO@ SimpleName@@MethodName:pathAddress:[PathElement.pathElement(key,value)] @AT@ 5218 @LENGTH@ 35
---------------INS SimpleName@@Name:PathElement @TO@ MethodInvocation@@PathElement.pathElement(key,value) @AT@ 5218 @LENGTH@ 11
---------------INS SimpleName@@MethodName:pathElement:[key, value] @TO@ MethodInvocation@@PathElement.pathElement(key,value) @AT@ 5230 @LENGTH@ 23
------------------INS SimpleName@@key @TO@ SimpleName@@MethodName:pathElement:[key, value] @AT@ 5242 @LENGTH@ 3
------------------INS SimpleName@@value @TO@ SimpleName@@MethodName:pathElement:[key, value] @AT@ 5247 @LENGTH@ 5


INS MethodDeclaration@@public, void, MethodName:testExecute,  @TO@ TypeDeclaration@@[@RunWith(SpringJUnit4ClassRunner.class), @ContextConfiguration, public]JRedisConnectionIntegrationTests, AbstractConnectionIntegrationTests @AT@ 9397 @LENGTH@ 245
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testExecute,  @AT@ 9397 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testExecute,  @AT@ 9404 @LENGTH@ 4
---INS SimpleName@@MethodName:testExecute @TO@ MethodDeclaration@@public, void, MethodName:testExecute,  @AT@ 9409 @LENGTH@ 11
---INS ExpressionStatement@@MethodInvocation:connection.set("foo","bar") @TO@ MethodDeclaration@@public, void, MethodName:testExecute,  @AT@ 9427 @LENGTH@ 29
------INS MethodInvocation@@connection.set("foo","bar") @TO@ ExpressionStatement@@MethodInvocation:connection.set("foo","bar") @AT@ 9427 @LENGTH@ 28
---------INS SimpleName@@Name:connection @TO@ MethodInvocation@@connection.set("foo","bar") @AT@ 9427 @LENGTH@ 10
---------INS SimpleName@@MethodName:set:["foo", "bar"] @TO@ MethodInvocation@@connection.set("foo","bar") @AT@ 9438 @LENGTH@ 17
------------INS StringLiteral@@"foo" @TO@ SimpleName@@MethodName:set:["foo", "bar"] @AT@ 9442 @LENGTH@ 5
------------INS StringLiteral@@"bar" @TO@ SimpleName@@MethodName:set:["foo", "bar"] @AT@ 9449 @LENGTH@ 5
---INS VariableDeclarationStatement@@BulkResponse response=(BulkResponse)connection.execute("GET",JredisUtils.decode("foo".getBytes())); @TO@ MethodDeclaration@@public, void, MethodName:testExecute,  @AT@ 9459 @LENGTH@ 103
------INS SimpleType@@BulkResponse @TO@ VariableDeclarationStatement@@BulkResponse response=(BulkResponse)connection.execute("GET",JredisUtils.decode("foo".getBytes())); @AT@ 9459 @LENGTH@ 12
------INS VariableDeclarationFragment@@response=(BulkResponse)connection.execute("GET",JredisUtils.decode("foo".getBytes())) @TO@ VariableDeclarationStatement@@BulkResponse response=(BulkResponse)connection.execute("GET",JredisUtils.decode("foo".getBytes())); @AT@ 9472 @LENGTH@ 89
---------INS SimpleName@@response @TO@ VariableDeclarationFragment@@response=(BulkResponse)connection.execute("GET",JredisUtils.decode("foo".getBytes())) @AT@ 9472 @LENGTH@ 8
---------INS CastExpression@@(BulkResponse)connection.execute("GET",JredisUtils.decode("foo".getBytes())) @TO@ VariableDeclarationFragment@@response=(BulkResponse)connection.execute("GET",JredisUtils.decode("foo".getBytes())) @AT@ 9483 @LENGTH@ 78
------------INS SimpleType@@BulkResponse @TO@ CastExpression@@(BulkResponse)connection.execute("GET",JredisUtils.decode("foo".getBytes())) @AT@ 9484 @LENGTH@ 12
------------INS MethodInvocation@@connection.execute("GET",JredisUtils.decode("foo".getBytes())) @TO@ CastExpression@@(BulkResponse)connection.execute("GET",JredisUtils.decode("foo".getBytes())) @AT@ 9498 @LENGTH@ 63
---------------INS SimpleName@@Name:connection @TO@ MethodInvocation@@connection.execute("GET",JredisUtils.decode("foo".getBytes())) @AT@ 9498 @LENGTH@ 10
---------------INS SimpleName@@MethodName:execute:["GET", JredisUtils.decode("foo".getBytes())] @TO@ MethodInvocation@@connection.execute("GET",JredisUtils.decode("foo".getBytes())) @AT@ 9509 @LENGTH@ 52
------------------INS StringLiteral@@"GET" @TO@ SimpleName@@MethodName:execute:["GET", JredisUtils.decode("foo".getBytes())] @AT@ 9517 @LENGTH@ 5
------------------INS MethodInvocation@@JredisUtils.decode("foo".getBytes()) @TO@ SimpleName@@MethodName:execute:["GET", JredisUtils.decode("foo".getBytes())] @AT@ 9524 @LENGTH@ 36
---------------------INS SimpleName@@Name:JredisUtils @TO@ MethodInvocation@@JredisUtils.decode("foo".getBytes()) @AT@ 9524 @LENGTH@ 11
---------------------INS SimpleName@@MethodName:decode:["foo".getBytes()] @TO@ MethodInvocation@@JredisUtils.decode("foo".getBytes()) @AT@ 9536 @LENGTH@ 24
------------------------INS MethodInvocation@@"foo".getBytes() @TO@ SimpleName@@MethodName:decode:["foo".getBytes()] @AT@ 9543 @LENGTH@ 16
---------------------------INS StringLiteral@@"foo" @TO@ MethodInvocation@@"foo".getBytes() @AT@ 9543 @LENGTH@ 5
---------------------------INS SimpleName@@MethodName:getBytes:[] @TO@ MethodInvocation@@"foo".getBytes() @AT@ 9549 @LENGTH@ 10
---INS ExpressionStatement@@MethodInvocation:assertEquals("bar",stringSerializer.deserialize(response.getBulkData())) @TO@ MethodDeclaration@@public, void, MethodName:testExecute,  @AT@ 9565 @LENGTH@ 74
------INS MethodInvocation@@assertEquals("bar",stringSerializer.deserialize(response.getBulkData())) @TO@ ExpressionStatement@@MethodInvocation:assertEquals("bar",stringSerializer.deserialize(response.getBulkData())) @AT@ 9565 @LENGTH@ 73
---------INS SimpleName@@MethodName:assertEquals:["bar", stringSerializer.deserialize(response.getBulkData())] @TO@ MethodInvocation@@assertEquals("bar",stringSerializer.deserialize(response.getBulkData())) @AT@ 9565 @LENGTH@ 73
------------INS StringLiteral@@"bar" @TO@ SimpleName@@MethodName:assertEquals:["bar", stringSerializer.deserialize(response.getBulkData())] @AT@ 9578 @LENGTH@ 5
------------INS MethodInvocation@@stringSerializer.deserialize(response.getBulkData()) @TO@ SimpleName@@MethodName:assertEquals:["bar", stringSerializer.deserialize(response.getBulkData())] @AT@ 9585 @LENGTH@ 52
---------------INS SimpleName@@Name:stringSerializer @TO@ MethodInvocation@@stringSerializer.deserialize(response.getBulkData()) @AT@ 9585 @LENGTH@ 16
---------------INS SimpleName@@MethodName:deserialize:[response.getBulkData()] @TO@ MethodInvocation@@stringSerializer.deserialize(response.getBulkData()) @AT@ 9602 @LENGTH@ 35
------------------INS MethodInvocation@@response.getBulkData() @TO@ SimpleName@@MethodName:deserialize:[response.getBulkData()] @AT@ 9614 @LENGTH@ 22
---------------------INS SimpleName@@Name:response @TO@ MethodInvocation@@response.getBulkData() @AT@ 9614 @LENGTH@ 8
---------------------INS SimpleName@@MethodName:getBulkData:[] @TO@ MethodInvocation@@response.getBulkData() @AT@ 9623 @LENGTH@ 13


UPD VariableDeclarationStatement@@boolean inProgress=inProgressCompleteExchanges.contains(exchangeId); @TO@ boolean inProgress=copyOfInProgress.contains(exchangeId) || inProgressCompleteExchanges.contains(exchangeId); @AT@ 36081 @LENGTH@ 70
---UPD VariableDeclarationFragment@@inProgress=inProgressCompleteExchanges.contains(exchangeId) @TO@ inProgress=copyOfInProgress.contains(exchangeId) || inProgressCompleteExchanges.contains(exchangeId) @AT@ 36089 @LENGTH@ 61
------INS InfixExpression@@copyOfInProgress.contains(exchangeId) || inProgressCompleteExchanges.contains(exchangeId) @TO@ VariableDeclarationFragment@@inProgress=inProgressCompleteExchanges.contains(exchangeId) @AT@ 36533 @LENGTH@ 89
---------MOV MethodInvocation@@inProgressCompleteExchanges.contains(exchangeId) @TO@ InfixExpression@@copyOfInProgress.contains(exchangeId) || inProgressCompleteExchanges.contains(exchangeId) @AT@ 36102 @LENGTH@ 48
---------INS MethodInvocation@@copyOfInProgress.contains(exchangeId) @TO@ InfixExpression@@copyOfInProgress.contains(exchangeId) || inProgressCompleteExchanges.contains(exchangeId) @AT@ 36533 @LENGTH@ 37
------------INS SimpleName@@Name:copyOfInProgress @TO@ MethodInvocation@@copyOfInProgress.contains(exchangeId) @AT@ 36533 @LENGTH@ 16
------------INS SimpleName@@MethodName:contains:[exchangeId] @TO@ MethodInvocation@@copyOfInProgress.contains(exchangeId) @AT@ 36550 @LENGTH@ 20
---------------INS SimpleName@@exchangeId @TO@ SimpleName@@MethodName:contains:[exchangeId] @AT@ 36559 @LENGTH@ 10
---------INS Operator@@|| @TO@ InfixExpression@@copyOfInProgress.contains(exchangeId) || inProgressCompleteExchanges.contains(exchangeId) @AT@ 36570 @LENGTH@ 2


UPD VariableDeclarationStatement@@int sshPort=mapPortToRange(Ports.DEFAULT_SSH_PORT + i,minimumPort,maximumPort); @TO@ int sshPort=mapPortToRange(Ports.DEFAULT_KARAF_SSH_PORT + i,minimumPort,maximumPort); @AT@ 5487 @LENGTH@ 83
---UPD VariableDeclarationFragment@@sshPort=mapPortToRange(Ports.DEFAULT_SSH_PORT + i,minimumPort,maximumPort) @TO@ sshPort=mapPortToRange(Ports.DEFAULT_KARAF_SSH_PORT + i,minimumPort,maximumPort) @AT@ 5491 @LENGTH@ 78
------UPD MethodInvocation@@mapPortToRange(Ports.DEFAULT_SSH_PORT + i,minimumPort,maximumPort) @TO@ mapPortToRange(Ports.DEFAULT_KARAF_SSH_PORT + i,minimumPort,maximumPort) @AT@ 5501 @LENGTH@ 68
---------UPD SimpleName@@MethodName:mapPortToRange:[Ports.DEFAULT_SSH_PORT + i, minimumPort, maximumPort] @TO@ MethodName:mapPortToRange:[Ports.DEFAULT_KARAF_SSH_PORT + i, minimumPort, maximumPort] @AT@ 5501 @LENGTH@ 68
------------UPD InfixExpression@@Ports.DEFAULT_SSH_PORT + i @TO@ Ports.DEFAULT_KARAF_SSH_PORT + i @AT@ 5516 @LENGTH@ 26
---------------UPD QualifiedName@@Ports.DEFAULT_SSH_PORT @TO@ Ports.DEFAULT_KARAF_SSH_PORT @AT@ 5516 @LENGTH@ 22
------------------UPD SimpleName@@DEFAULT_SSH_PORT @TO@ DEFAULT_KARAF_SSH_PORT @AT@ 5522 @LENGTH@ 16


UPD VariableDeclarationStatement@@Set<Container> containers=ContainerBuilder.child(1).withName("cnt").withProfiles("default").assertProvisioningResult().build(); @TO@ Set<Container> containers=ContainerBuilder.create(1,1).withName("cnt").withProfiles("default").assertProvisioningResult().build(); @AT@ 2168 @LENGTH@ 129
---UPD VariableDeclarationFragment@@containers=ContainerBuilder.child(1).withName("cnt").withProfiles("default").assertProvisioningResult().build() @TO@ containers=ContainerBuilder.create(1,1).withName("cnt").withProfiles("default").assertProvisioningResult().build() @AT@ 2183 @LENGTH@ 113
------UPD MethodInvocation@@ContainerBuilder.child(1).withName("cnt").withProfiles("default").assertProvisioningResult().build() @TO@ ContainerBuilder.create(1,1).withName("cnt").withProfiles("default").assertProvisioningResult().build() @AT@ 2196 @LENGTH@ 100
---------UPD MethodInvocation@@MethodName:child:[1] @TO@ MethodName:create:[1, 1] @AT@ 2196 @LENGTH@ 25
------------INS NumberLiteral@@1 @TO@ MethodInvocation@@MethodName:child:[1] @AT@ 2225 @LENGTH@ 1


DEL IfStatement@@if (model.hasDefined(ModelDescriptionConstants.DIRECTORY_GROUPING)) {  return DirectoryGrouping.forName(model.get(ModelDescriptionConstants.DIRECTORY_GROUPING).asString());} @AT@ 3236 @LENGTH@ 193


DEL MethodDeclaration@@public, void, MethodName:testBRPopTimeout,  @AT@ 761 @LENGTH@ 35
---DEL Modifier@@public @AT@ 761 @LENGTH@ 6
---DEL PrimitiveType@@void @AT@ 768 @LENGTH@ 4
---DEL SimpleName@@MethodName:testBRPopTimeout @AT@ 773 @LENGTH@ 16


UPD IfStatement@@if (f.exists()) {  File[] files=f.listFiles();  for (  File file : files) {    String name=file.getName();    if (name.charAt(0) != '.') {      count++;      if (buffer.length() > 0) {        buffer.append(" ");      }      buffer.append(name);    }  }} @TO@ if (f.exists() && f.isDirectory()) {  File[] files=f.listFiles();  if (files != null) {    for (    File file : files) {      String name=file.getName();      if (name.charAt(0) != '.') {        count++;        if (buffer.length() > 0) {          buffer.append(" ");        }        buffer.append(name);      }    }  }} @AT@ 2846 @LENGTH@ 461
---INS InfixExpression@@f.exists() && f.isDirectory() @TO@ IfStatement@@if (f.exists()) {  File[] files=f.listFiles();  for (  File file : files) {    String name=file.getName();    if (name.charAt(0) != '.') {      count++;      if (buffer.length() > 0) {        buffer.append(" ");      }      buffer.append(name);    }  }} @AT@ 2850 @LENGTH@ 29
------INS MethodInvocation@@f.exists() @TO@ InfixExpression@@f.exists() && f.isDirectory() @AT@ 2850 @LENGTH@ 10
---------MOV SimpleName@@Name:f @TO@ MethodInvocation@@f.exists() @AT@ 2850 @LENGTH@ 1
---------MOV SimpleName@@MethodName:exists:[] @TO@ MethodInvocation@@f.exists() @AT@ 2852 @LENGTH@ 8
------INS Operator@@&& @TO@ InfixExpression@@f.exists() && f.isDirectory() @AT@ 2860 @LENGTH@ 2
------INS MethodInvocation@@f.isDirectory() @TO@ InfixExpression@@f.exists() && f.isDirectory() @AT@ 2864 @LENGTH@ 15
---------INS SimpleName@@Name:f @TO@ MethodInvocation@@f.isDirectory() @AT@ 2864 @LENGTH@ 1
---------INS SimpleName@@MethodName:isDirectory:[] @TO@ MethodInvocation@@f.isDirectory() @AT@ 2866 @LENGTH@ 13
---DEL MethodInvocation@@f.exists() @AT@ 2850 @LENGTH@ 10
---UPD Block@@ThenBody:{  File[] files=f.listFiles();  for (  File file : files) {    String name=file.getName();    if (name.charAt(0) != '.') {      count++;      if (buffer.length() > 0) {        buffer.append(" ");      }      buffer.append(name);    }  }} @TO@ ThenBody:{  File[] files=f.listFiles();  if (files != null) {    for (    File file : files) {      String name=file.getName();      if (name.charAt(0) != '.') {        count++;        if (buffer.length() > 0) {          buffer.append(" ");        }        buffer.append(name);      }    }  }} @AT@ 2862 @LENGTH@ 445
------INS IfStatement@@if (files != null) {  for (  File file : files) {    String name=file.getName();    if (name.charAt(0) != '.') {      count++;      if (buffer.length() > 0) {        buffer.append(" ");      }      buffer.append(name);    }  }} @TO@ Block@@ThenBody:{  File[] files=f.listFiles();  for (  File file : files) {    String name=file.getName();    if (name.charAt(0) != '.') {      count++;      if (buffer.length() > 0) {        buffer.append(" ");      }      buffer.append(name);    }  }} @AT@ 2945 @LENGTH@ 462
---------INS InfixExpression@@files != null @TO@ IfStatement@@if (files != null) {  for (  File file : files) {    String name=file.getName();    if (name.charAt(0) != '.') {      count++;      if (buffer.length() > 0) {        buffer.append(" ");      }      buffer.append(name);    }  }} @AT@ 2949 @LENGTH@ 13
------------INS SimpleName@@files @TO@ InfixExpression@@files != null @AT@ 2949 @LENGTH@ 5
------------INS Operator@@!= @TO@ InfixExpression@@files != null @AT@ 2954 @LENGTH@ 2
------------INS NullLiteral@@null @TO@ InfixExpression@@files != null @AT@ 2958 @LENGTH@ 4
---------INS Block@@ThenBody:{  for (  File file : files) {    String name=file.getName();    if (name.charAt(0) != '.') {      count++;      if (buffer.length() > 0) {        buffer.append(" ");      }      buffer.append(name);    }  }} @TO@ IfStatement@@if (files != null) {  for (  File file : files) {    String name=file.getName();    if (name.charAt(0) != '.') {      count++;      if (buffer.length() > 0) {        buffer.append(" ");      }      buffer.append(name);    }  }} @AT@ 2964 @LENGTH@ 443
------------MOV EnhancedForStatement@@for (File file : files) {  String name=file.getName();  if (name.charAt(0) != '.') {    count++;    if (buffer.length() > 0) {      buffer.append(" ");    }    buffer.append(name);  }} @TO@ Block@@ThenBody:{  for (  File file : files) {    String name=file.getName();    if (name.charAt(0) != '.') {      count++;      if (buffer.length() > 0) {        buffer.append(" ");      }      buffer.append(name);    }  }} @AT@ 2926 @LENGTH@ 367


UPD ExpressionStatement@@MethodInvocation:Thread.sleep(DEFAULT_WAIT) @TO@ MethodInvocation:zookeeer.waitForConnected(new Timespan(60,Timespan.TimeUnit.SECOND)) @AT@ 1949 @LENGTH@ 27
---UPD MethodInvocation@@Thread.sleep(DEFAULT_WAIT) @TO@ zookeeer.waitForConnected(new Timespan(60,Timespan.TimeUnit.SECOND)) @AT@ 1949 @LENGTH@ 26
------UPD SimpleName@@Name:Thread @TO@ Name:zookeeer @AT@ 1949 @LENGTH@ 6
------UPD SimpleName@@MethodName:sleep:[DEFAULT_WAIT] @TO@ MethodName:waitForConnected:[new Timespan(60,Timespan.TimeUnit.SECOND)] @AT@ 1956 @LENGTH@ 19
---------DEL SimpleName@@DEFAULT_WAIT @AT@ 1962 @LENGTH@ 12
---------INS ClassInstanceCreation@@Timespan[60, Timespan.TimeUnit.SECOND] @TO@ SimpleName@@MethodName:sleep:[DEFAULT_WAIT] @AT@ 2061 @LENGTH@ 42
------------INS New@@new @TO@ ClassInstanceCreation@@Timespan[60, Timespan.TimeUnit.SECOND] @AT@ 2061 @LENGTH@ 3
------------INS SimpleType@@Timespan @TO@ ClassInstanceCreation@@Timespan[60, Timespan.TimeUnit.SECOND] @AT@ 2065 @LENGTH@ 8
------------INS NumberLiteral@@60 @TO@ ClassInstanceCreation@@Timespan[60, Timespan.TimeUnit.SECOND] @AT@ 2074 @LENGTH@ 2
------------INS QualifiedName@@Timespan.TimeUnit.SECOND @TO@ ClassInstanceCreation@@Timespan[60, Timespan.TimeUnit.SECOND] @AT@ 2078 @LENGTH@ 24
---------------INS QualifiedName@@Timespan.TimeUnit @TO@ QualifiedName@@Timespan.TimeUnit.SECOND @AT@ 2078 @LENGTH@ 17
------------------INS SimpleName@@Timespan @TO@ QualifiedName@@Timespan.TimeUnit @AT@ 2078 @LENGTH@ 8
------------------INS SimpleName@@TimeUnit @TO@ QualifiedName@@Timespan.TimeUnit @AT@ 2087 @LENGTH@ 8
---------------INS SimpleName@@SECOND @TO@ QualifiedName@@Timespan.TimeUnit.SECOND @AT@ 2096 @LENGTH@ 6


UPD TryStatement@@try {  String version=getVersion().getName();  String clusterId=service.getZooKeeper().getStringData("/fabric/configs/versions/" + version + "/general/fabric-ensemble");  String containers=service.getZooKeeper().getStringData("/fabric/configs/versions/" + version + "/general/fabric-ensemble/"+ clusterId);  for (  String name : containers.split(",")) {    if (id.equals(name)) {      return true;    }  }  return false;} catch (Exception e) {  throw new FabricException(e);} @TO@ try {  String clusterId=service.getZooKeeper().getStringData(ZkPath.CONFIG_ENSEMBLES.getPath());  String containers=service.getZooKeeper().getStringData(ZkPath.CONFIG_ENSEMBLE.getPath(clusterId));  for (  String name : containers.split(",")) {    if (id.equals(name)) {      return true;    }  }  return false;} catch (Exception e) {  throw new FabricException(e);} @AT@ 2987 @LENGTH@ 616
---DEL VariableDeclarationStatement@@String version=getVersion().getName(); @AT@ 3005 @LENGTH@ 40
------DEL SimpleType@@String @AT@ 3005 @LENGTH@ 6
------DEL VariableDeclarationFragment@@version=getVersion().getName() @AT@ 3012 @LENGTH@ 32
---------DEL SimpleName@@version @AT@ 3012 @LENGTH@ 7
---------DEL MethodInvocation@@getVersion().getName() @AT@ 3022 @LENGTH@ 22
------------DEL MethodInvocation@@MethodName:getVersion:[] @AT@ 3022 @LENGTH@ 12
------------DEL SimpleName@@MethodName:getName:[] @AT@ 3035 @LENGTH@ 9
---UPD VariableDeclarationStatement@@String clusterId=service.getZooKeeper().getStringData("/fabric/configs/versions/" + version + "/general/fabric-ensemble"); @TO@ String clusterId=service.getZooKeeper().getStringData(ZkPath.CONFIG_ENSEMBLES.getPath()); @AT@ 3058 @LENGTH@ 124
------UPD VariableDeclarationFragment@@clusterId=service.getZooKeeper().getStringData("/fabric/configs/versions/" + version + "/general/fabric-ensemble") @TO@ clusterId=service.getZooKeeper().getStringData(ZkPath.CONFIG_ENSEMBLES.getPath()) @AT@ 3065 @LENGTH@ 116
---------UPD MethodInvocation@@service.getZooKeeper().getStringData("/fabric/configs/versions/" + version + "/general/fabric-ensemble") @TO@ service.getZooKeeper().getStringData(ZkPath.CONFIG_ENSEMBLES.getPath()) @AT@ 3077 @LENGTH@ 104
------------UPD SimpleName@@MethodName:getStringData:["/fabric/configs/versions/" + version + "/general/fabric-ensemble"] @TO@ MethodName:getStringData:[ZkPath.CONFIG_ENSEMBLES.getPath()] @AT@ 3100 @LENGTH@ 81
---------------INS MethodInvocation@@ZkPath.CONFIG_ENSEMBLES.getPath() @TO@ SimpleName@@MethodName:getStringData:["/fabric/configs/versions/" + version + "/general/fabric-ensemble"] @AT@ 3061 @LENGTH@ 33
------------------INS QualifiedName@@Name:ZkPath.CONFIG_ENSEMBLES @TO@ MethodInvocation@@ZkPath.CONFIG_ENSEMBLES.getPath() @AT@ 3061 @LENGTH@ 23
------------------INS SimpleName@@MethodName:getPath:[] @TO@ MethodInvocation@@ZkPath.CONFIG_ENSEMBLES.getPath() @AT@ 3085 @LENGTH@ 9
---------------DEL InfixExpression@@"/fabric/configs/versions/" + version + "/general/fabric-ensemble" @AT@ 3114 @LENGTH@ 66
------------------DEL StringLiteral@@"/fabric/configs/versions/" @AT@ 3114 @LENGTH@ 27
------------------DEL Operator@@+ @AT@ 3141 @LENGTH@ 1
------------------DEL SimpleName@@version @AT@ 3144 @LENGTH@ 7
------------------DEL StringLiteral@@"/general/fabric-ensemble" @AT@ 3154 @LENGTH@ 26
---UPD VariableDeclarationStatement@@String containers=service.getZooKeeper().getStringData("/fabric/configs/versions/" + version + "/general/fabric-ensemble/"+ clusterId); @TO@ String containers=service.getZooKeeper().getStringData(ZkPath.CONFIG_ENSEMBLE.getPath(clusterId)); @AT@ 3195 @LENGTH@ 138
------UPD VariableDeclarationFragment@@containers=service.getZooKeeper().getStringData("/fabric/configs/versions/" + version + "/general/fabric-ensemble/"+ clusterId) @TO@ containers=service.getZooKeeper().getStringData(ZkPath.CONFIG_ENSEMBLE.getPath(clusterId)) @AT@ 3202 @LENGTH@ 130
---------UPD MethodInvocation@@service.getZooKeeper().getStringData("/fabric/configs/versions/" + version + "/general/fabric-ensemble/"+ clusterId) @TO@ service.getZooKeeper().getStringData(ZkPath.CONFIG_ENSEMBLE.getPath(clusterId)) @AT@ 3215 @LENGTH@ 117
------------UPD SimpleName@@MethodName:getStringData:["/fabric/configs/versions/" + version + "/general/fabric-ensemble/"+ clusterId] @TO@ MethodName:getStringData:[ZkPath.CONFIG_ENSEMBLE.getPath(clusterId)] @AT@ 3238 @LENGTH@ 94
---------------INS MethodInvocation@@ZkPath.CONFIG_ENSEMBLE.getPath(clusterId) @TO@ SimpleName@@MethodName:getStringData:["/fabric/configs/versions/" + version + "/general/fabric-ensemble/"+ clusterId] @AT@ 3166 @LENGTH@ 41
------------------INS QualifiedName@@Name:ZkPath.CONFIG_ENSEMBLE @TO@ MethodInvocation@@ZkPath.CONFIG_ENSEMBLE.getPath(clusterId) @AT@ 3166 @LENGTH@ 22
------------------INS SimpleName@@MethodName:getPath:[clusterId] @TO@ MethodInvocation@@ZkPath.CONFIG_ENSEMBLE.getPath(clusterId) @AT@ 3189 @LENGTH@ 18
---------------------INS SimpleName@@clusterId @TO@ SimpleName@@MethodName:getPath:[clusterId] @AT@ 3197 @LENGTH@ 9
---------------DEL InfixExpression@@"/fabric/configs/versions/" + version + "/general/fabric-ensemble/"+ clusterId @AT@ 3252 @LENGTH@ 79
------------------DEL StringLiteral@@"/fabric/configs/versions/" @AT@ 3252 @LENGTH@ 27
------------------DEL Operator@@+ @AT@ 3279 @LENGTH@ 1
------------------DEL SimpleName@@version @AT@ 3282 @LENGTH@ 7
------------------DEL StringLiteral@@"/general/fabric-ensemble/" @AT@ 3292 @LENGTH@ 27
------------------DEL SimpleName@@clusterId @AT@ 3322 @LENGTH@ 9


UPD ExpressionStatement@@MethodInvocation:sharedFilterPatterns.addAll(getListManifestProperty(ServiceConstants.INSTR_FAB_PROVIDED_DEPENDENCY,ServiceConstants.DEFAULT_FAB_PROIVDED_DEPENDENCY)) @TO@ MethodInvocation:sharedFilterPatterns.addAll(getListManifestProperty(ServiceConstants.INSTR_FAB_PROVIDED_DEPENDENCY,ServiceConstants.DEFAULT_FAB_PROVIDED_DEPENDENCY)) @AT@ 12081 @LENGTH@ 168
---UPD MethodInvocation@@sharedFilterPatterns.addAll(getListManifestProperty(ServiceConstants.INSTR_FAB_PROVIDED_DEPENDENCY,ServiceConstants.DEFAULT_FAB_PROIVDED_DEPENDENCY)) @TO@ sharedFilterPatterns.addAll(getListManifestProperty(ServiceConstants.INSTR_FAB_PROVIDED_DEPENDENCY,ServiceConstants.DEFAULT_FAB_PROVIDED_DEPENDENCY)) @AT@ 12081 @LENGTH@ 167
------UPD SimpleName@@MethodName:addAll:[getListManifestProperty(ServiceConstants.INSTR_FAB_PROVIDED_DEPENDENCY,ServiceConstants.DEFAULT_FAB_PROIVDED_DEPENDENCY)] @TO@ MethodName:addAll:[getListManifestProperty(ServiceConstants.INSTR_FAB_PROVIDED_DEPENDENCY,ServiceConstants.DEFAULT_FAB_PROVIDED_DEPENDENCY)] @AT@ 12102 @LENGTH@ 146
---------UPD MethodInvocation@@getListManifestProperty(ServiceConstants.INSTR_FAB_PROVIDED_DEPENDENCY,ServiceConstants.DEFAULT_FAB_PROIVDED_DEPENDENCY) @TO@ getListManifestProperty(ServiceConstants.INSTR_FAB_PROVIDED_DEPENDENCY,ServiceConstants.DEFAULT_FAB_PROVIDED_DEPENDENCY) @AT@ 12126 @LENGTH@ 121
------------UPD SimpleName@@MethodName:getListManifestProperty:[ServiceConstants.INSTR_FAB_PROVIDED_DEPENDENCY, ServiceConstants.DEFAULT_FAB_PROIVDED_DEPENDENCY] @TO@ MethodName:getListManifestProperty:[ServiceConstants.INSTR_FAB_PROVIDED_DEPENDENCY, ServiceConstants.DEFAULT_FAB_PROVIDED_DEPENDENCY] @AT@ 12126 @LENGTH@ 121
---------------UPD QualifiedName@@ServiceConstants.DEFAULT_FAB_PROIVDED_DEPENDENCY @TO@ ServiceConstants.DEFAULT_FAB_PROVIDED_DEPENDENCY @AT@ 12198 @LENGTH@ 48
------------------UPD SimpleName@@DEFAULT_FAB_PROIVDED_DEPENDENCY @TO@ DEFAULT_FAB_PROVIDED_DEPENDENCY @AT@ 12215 @LENGTH@ 31


INS IfStatement@@if (!getChannels().isEmpty()) {  pubsub.unsubscribe(new byte[0]);} @TO@ MethodDeclaration@@protected, void, MethodName:doClose,  @AT@ 1403 @LENGTH@ 70
---INS PrefixExpression@@!getChannels().isEmpty() @TO@ IfStatement@@if (!getChannels().isEmpty()) {  pubsub.unsubscribe(new byte[0]);} @AT@ 1406 @LENGTH@ 24
------INS Operator@@! @TO@ PrefixExpression@@!getChannels().isEmpty() @AT@ 1406 @LENGTH@ 1
------INS MethodInvocation@@getChannels().isEmpty() @TO@ PrefixExpression@@!getChannels().isEmpty() @AT@ 1407 @LENGTH@ 23
---------INS MethodInvocation@@MethodName:getChannels:[] @TO@ MethodInvocation@@getChannels().isEmpty() @AT@ 1407 @LENGTH@ 13
---------INS SimpleName@@MethodName:isEmpty:[] @TO@ MethodInvocation@@getChannels().isEmpty() @AT@ 1421 @LENGTH@ 9
---INS Block@@ThenBody:{  pubsub.unsubscribe(new byte[0]);} @TO@ IfStatement@@if (!getChannels().isEmpty()) {  pubsub.unsubscribe(new byte[0]);} @AT@ 1432 @LENGTH@ 41
------MOV ExpressionStatement@@MethodInvocation:pubsub.unsubscribe(new byte[0]) @TO@ Block@@ThenBody:{  pubsub.unsubscribe(new byte[0]);} @AT@ 1403 @LENGTH@ 32


INS MethodDeclaration@@public, void, MethodName:testZRevRangeByScoreWithScoresOffsetCount,  @TO@ TypeDeclaration@@[@RunWith(SpringJUnit4ClassRunner.class), @ContextConfiguration, public]SrpConnectionIntegrationTests, AbstractConnectionIntegrationTests @AT@ 2859 @LENGTH@ 60
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testZRevRangeByScoreWithScoresOffsetCount,  @AT@ 2859 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testZRevRangeByScoreWithScoresOffsetCount,  @AT@ 2866 @LENGTH@ 4
---INS SimpleName@@MethodName:testZRevRangeByScoreWithScoresOffsetCount @TO@ MethodDeclaration@@public, void, MethodName:testZRevRangeByScoreWithScoresOffsetCount,  @AT@ 2871 @LENGTH@ 41


UPD FieldDeclaration@@static, SimpleAttributeDefinition, [ALLOW_MULTIPLE_USERS=new SimpleAttributeDefinition(ALLOW_MULTIPLE_USERS_NAME,DsPool.Tag.ALLOW_MULTIPLE_USERS.getLocalName(),new ModelNode(false),ModelType.BOOLEAN,true,false,MeasurementUnit.NONE)] @TO@ static, SimpleAttributeDefinition, [ALLOW_MULTIPLE_USERS=new SimpleAttributeDefinition(ALLOW_MULTIPLE_USERS_NAME,DsPool.Tag.ALLOW_MULTIPLE_USERS.getLocalName(),new ModelNode(Defaults.ALLOW_MULTIPLE_USERS),ModelType.BOOLEAN,true,false,MeasurementUnit.NONE)] @AT@ 15357 @LENGTH@ 237
---UPD VariableDeclarationFragment@@ALLOW_MULTIPLE_USERS=new SimpleAttributeDefinition(ALLOW_MULTIPLE_USERS_NAME,DsPool.Tag.ALLOW_MULTIPLE_USERS.getLocalName(),new ModelNode(false),ModelType.BOOLEAN,true,false,MeasurementUnit.NONE) @TO@ ALLOW_MULTIPLE_USERS=new SimpleAttributeDefinition(ALLOW_MULTIPLE_USERS_NAME,DsPool.Tag.ALLOW_MULTIPLE_USERS.getLocalName(),new ModelNode(Defaults.ALLOW_MULTIPLE_USERS),ModelType.BOOLEAN,true,false,MeasurementUnit.NONE) @AT@ 15390 @LENGTH@ 203
------UPD ClassInstanceCreation@@SimpleAttributeDefinition[ALLOW_MULTIPLE_USERS_NAME, DsPool.Tag.ALLOW_MULTIPLE_USERS.getLocalName(), new ModelNode(false), ModelType.BOOLEAN, true, false, MeasurementUnit.NONE] @TO@ SimpleAttributeDefinition[ALLOW_MULTIPLE_USERS_NAME, DsPool.Tag.ALLOW_MULTIPLE_USERS.getLocalName(), new ModelNode(Defaults.ALLOW_MULTIPLE_USERS), ModelType.BOOLEAN, true, false, MeasurementUnit.NONE] @AT@ 15413 @LENGTH@ 180
---------UPD ClassInstanceCreation@@ModelNode[false] @TO@ ModelNode[Defaults.ALLOW_MULTIPLE_USERS] @AT@ 15518 @LENGTH@ 20
------------INS QualifiedName@@Defaults.ALLOW_MULTIPLE_USERS @TO@ ClassInstanceCreation@@ModelNode[false] @AT@ 15532 @LENGTH@ 29
---------------INS SimpleName@@Defaults @TO@ QualifiedName@@Defaults.ALLOW_MULTIPLE_USERS @AT@ 15532 @LENGTH@ 8
---------------INS SimpleName@@ALLOW_MULTIPLE_USERS @TO@ QualifiedName@@Defaults.ALLOW_MULTIPLE_USERS @AT@ 15541 @LENGTH@ 20
------------DEL BooleanLiteral@@false @AT@ 15532 @LENGTH@ 5


INS FieldDeclaration@@protected, static, final, SimpleAttributeDefinition[], [ATTRIBUTES={PATTERN,SUBSTITUTION,FLAGS}] @TO@ TypeDeclaration@@[public]WebReWriteDefinition, SimpleResourceDefinition @AT@ 2971 @LENGTH@ 95
---INS Modifier@@protected @TO@ FieldDeclaration@@protected, static, final, SimpleAttributeDefinition[], [ATTRIBUTES={PATTERN,SUBSTITUTION,FLAGS}] @AT@ 2971 @LENGTH@ 9
---INS Modifier@@static @TO@ FieldDeclaration@@protected, static, final, SimpleAttributeDefinition[], [ATTRIBUTES={PATTERN,SUBSTITUTION,FLAGS}] @AT@ 2981 @LENGTH@ 6
---INS Modifier@@final @TO@ FieldDeclaration@@protected, static, final, SimpleAttributeDefinition[], [ATTRIBUTES={PATTERN,SUBSTITUTION,FLAGS}] @AT@ 2988 @LENGTH@ 5
---INS ArrayType@@SimpleAttributeDefinition[] @TO@ FieldDeclaration@@protected, static, final, SimpleAttributeDefinition[], [ATTRIBUTES={PATTERN,SUBSTITUTION,FLAGS}] @AT@ 2994 @LENGTH@ 27
------INS SimpleType@@SimpleAttributeDefinition @TO@ ArrayType@@SimpleAttributeDefinition[] @AT@ 2994 @LENGTH@ 25
---INS VariableDeclarationFragment@@ATTRIBUTES={PATTERN,SUBSTITUTION,FLAGS} @TO@ FieldDeclaration@@protected, static, final, SimpleAttributeDefinition[], [ATTRIBUTES={PATTERN,SUBSTITUTION,FLAGS}] @AT@ 3022 @LENGTH@ 43
------INS SimpleName@@ATTRIBUTES @TO@ VariableDeclarationFragment@@ATTRIBUTES={PATTERN,SUBSTITUTION,FLAGS} @AT@ 3022 @LENGTH@ 10
------INS ArrayInitializer@@{PATTERN,SUBSTITUTION,FLAGS} @TO@ VariableDeclarationFragment@@ATTRIBUTES={PATTERN,SUBSTITUTION,FLAGS} @AT@ 3035 @LENGTH@ 30
---------INS SimpleName@@PATTERN @TO@ ArrayInitializer@@{PATTERN,SUBSTITUTION,FLAGS} @AT@ 3036 @LENGTH@ 7
---------INS SimpleName@@SUBSTITUTION @TO@ ArrayInitializer@@{PATTERN,SUBSTITUTION,FLAGS} @AT@ 3045 @LENGTH@ 12
---------INS SimpleName@@FLAGS @TO@ ArrayInitializer@@{PATTERN,SUBSTITUTION,FLAGS} @AT@ 3059 @LENGTH@ 5


UPD FieldDeclaration@@private, static, final, long, [serialVersionUID=1L] @TO@ private, static, final, long, [serialVersionUID=6777393766937023392L] @AT@ 976 @LENGTH@ 48
---UPD VariableDeclarationFragment@@serialVersionUID=1L @TO@ serialVersionUID=6777393766937023392L @AT@ 1002 @LENGTH@ 21
------UPD NumberLiteral@@1L @TO@ 6777393766937023392L @AT@ 1021 @LENGTH@ 2


INS IfStatement@@if (body instanceof WrappedFile || body instanceof File) {  throw new RuntimeExchangeException("Message body of type " + body.getClass().getCanonicalName() + " is not supported by this marshaller.",exchange);} @TO@ MethodDeclaration@@public, static, DefaultExchangeHolder, MethodName:marshal, Exchange exchange, boolean includeProperties,  @AT@ 3376 @LENGTH@ 230
---INS InfixExpression@@body instanceof WrappedFile || body instanceof File @TO@ IfStatement@@if (body instanceof WrappedFile || body instanceof File) {  throw new RuntimeExchangeException("Message body of type " + body.getClass().getCanonicalName() + " is not supported by this marshaller.",exchange);} @AT@ 3380 @LENGTH@ 51
------INS InstanceofExpression@@body instanceof WrappedFile @TO@ InfixExpression@@body instanceof WrappedFile || body instanceof File @AT@ 3380 @LENGTH@ 27
---------INS SimpleName@@body @TO@ InstanceofExpression@@body instanceof WrappedFile @AT@ 3380 @LENGTH@ 4
---------INS Instanceof@@instanceof @TO@ InstanceofExpression@@body instanceof WrappedFile @AT@ 3385 @LENGTH@ 10
---------INS SimpleType@@WrappedFile @TO@ InstanceofExpression@@body instanceof WrappedFile @AT@ 3396 @LENGTH@ 11
------INS Operator@@|| @TO@ InfixExpression@@body instanceof WrappedFile || body instanceof File @AT@ 3407 @LENGTH@ 2
------INS InstanceofExpression@@body instanceof File @TO@ InfixExpression@@body instanceof WrappedFile || body instanceof File @AT@ 3411 @LENGTH@ 20
---------INS SimpleName@@body @TO@ InstanceofExpression@@body instanceof File @AT@ 3411 @LENGTH@ 4
---------INS Instanceof@@instanceof @TO@ InstanceofExpression@@body instanceof File @AT@ 3416 @LENGTH@ 10
---------INS SimpleType@@File @TO@ InstanceofExpression@@body instanceof File @AT@ 3427 @LENGTH@ 4
---INS Block@@ThenBody:{  throw new RuntimeExchangeException("Message body of type " + body.getClass().getCanonicalName() + " is not supported by this marshaller.",exchange);} @TO@ IfStatement@@if (body instanceof WrappedFile || body instanceof File) {  throw new RuntimeExchangeException("Message body of type " + body.getClass().getCanonicalName() + " is not supported by this marshaller.",exchange);} @AT@ 3433 @LENGTH@ 173
------INS ThrowStatement@@ClassInstanceCreation:new RuntimeExchangeException("Message body of type " + body.getClass().getCanonicalName() + " is not supported by this marshaller.",exchange) @TO@ Block@@ThenBody:{  throw new RuntimeExchangeException("Message body of type " + body.getClass().getCanonicalName() + " is not supported by this marshaller.",exchange);} @AT@ 3447 @LENGTH@ 149
---------INS ClassInstanceCreation@@RuntimeExchangeException["Message body of type " + body.getClass().getCanonicalName() + " is not supported by this marshaller.", exchange] @TO@ ThrowStatement@@ClassInstanceCreation:new RuntimeExchangeException("Message body of type " + body.getClass().getCanonicalName() + " is not supported by this marshaller.",exchange) @AT@ 3453 @LENGTH@ 142
------------INS New@@new @TO@ ClassInstanceCreation@@RuntimeExchangeException["Message body of type " + body.getClass().getCanonicalName() + " is not supported by this marshaller.", exchange] @AT@ 3453 @LENGTH@ 3
------------INS SimpleType@@RuntimeExchangeException @TO@ ClassInstanceCreation@@RuntimeExchangeException["Message body of type " + body.getClass().getCanonicalName() + " is not supported by this marshaller.", exchange] @AT@ 3457 @LENGTH@ 24
------------INS InfixExpression@@"Message body of type " + body.getClass().getCanonicalName() + " is not supported by this marshaller." @TO@ ClassInstanceCreation@@RuntimeExchangeException["Message body of type " + body.getClass().getCanonicalName() + " is not supported by this marshaller.", exchange] @AT@ 3482 @LENGTH@ 102
---------------INS StringLiteral@@"Message body of type " @TO@ InfixExpression@@"Message body of type " + body.getClass().getCanonicalName() + " is not supported by this marshaller." @AT@ 3482 @LENGTH@ 23
---------------INS Operator@@+ @TO@ InfixExpression@@"Message body of type " + body.getClass().getCanonicalName() + " is not supported by this marshaller." @AT@ 3505 @LENGTH@ 1
---------------INS MethodInvocation@@body.getClass().getCanonicalName() @TO@ InfixExpression@@"Message body of type " + body.getClass().getCanonicalName() + " is not supported by this marshaller." @AT@ 3508 @LENGTH@ 34
------------------INS MethodInvocation@@MethodName:getClass:[] @TO@ MethodInvocation@@body.getClass().getCanonicalName() @AT@ 3508 @LENGTH@ 15
------------------INS SimpleName@@Name:body @TO@ MethodInvocation@@body.getClass().getCanonicalName() @AT@ 3508 @LENGTH@ 4
------------------INS SimpleName@@MethodName:getCanonicalName:[] @TO@ MethodInvocation@@body.getClass().getCanonicalName() @AT@ 3524 @LENGTH@ 18
---------------INS StringLiteral@@" is not supported by this marshaller." @TO@ InfixExpression@@"Message body of type " + body.getClass().getCanonicalName() + " is not supported by this marshaller." @AT@ 3545 @LENGTH@ 39
------------INS SimpleName@@exchange @TO@ ClassInstanceCreation@@RuntimeExchangeException["Message body of type " + body.getClass().getCanonicalName() + " is not supported by this marshaller.", exchange] @AT@ 3586 @LENGTH@ 8


UPD ExpressionStatement@@MethodInvocation:assertThat(lexer.nextToken(new Token()),hasContent("character!rEscaped")) @TO@ MethodInvocation:assertThat(lexer.nextToken(new Token()),hasContent("character" + CR + "Escaped")) @AT@ 17589 @LENGTH@ 75
---UPD MethodInvocation@@assertThat(lexer.nextToken(new Token()),hasContent("character!rEscaped")) @TO@ assertThat(lexer.nextToken(new Token()),hasContent("character" + CR + "Escaped")) @AT@ 17589 @LENGTH@ 74
------UPD SimpleName@@MethodName:assertThat:[lexer.nextToken(new Token()), hasContent("character!rEscaped")] @TO@ MethodName:assertThat:[lexer.nextToken(new Token()), hasContent("character" + CR + "Escaped")] @AT@ 17589 @LENGTH@ 74
---------UPD MethodInvocation@@hasContent("character!rEscaped") @TO@ hasContent("character" + CR + "Escaped") @AT@ 17630 @LENGTH@ 32
------------UPD SimpleName@@MethodName:hasContent:["character!rEscaped"] @TO@ MethodName:hasContent:["character" + CR + "Escaped"] @AT@ 17630 @LENGTH@ 32
---------------INS InfixExpression@@"character" + CR + "Escaped" @TO@ SimpleName@@MethodName:hasContent:["character!rEscaped"] @AT@ 17402 @LENGTH@ 28
------------------INS StringLiteral@@"character" @TO@ InfixExpression@@"character" + CR + "Escaped" @AT@ 17402 @LENGTH@ 11
------------------INS Operator@@+ @TO@ InfixExpression@@"character" + CR + "Escaped" @AT@ 17413 @LENGTH@ 1
------------------INS SimpleName@@CR @TO@ InfixExpression@@"character" + CR + "Escaped" @AT@ 17416 @LENGTH@ 2
------------------INS StringLiteral@@"Escaped" @TO@ InfixExpression@@"character" + CR + "Escaped" @AT@ 17421 @LENGTH@ 9
---------------DEL StringLiteral@@"character!rEscaped" @AT@ 17641 @LENGTH@ 20
------------UPD SimpleName@@MethodName:hasContent:["character!rEscaped"] @TO@ MethodName:hasContent:["character" + CR + "Escaped"] @AT@ 17630 @LENGTH@ 32
---------------INS InfixExpression@@"character" + CR + "Escaped" @TO@ SimpleName@@MethodName:hasContent:["character!rEscaped"] @AT@ 17402 @LENGTH@ 28
------------------INS StringLiteral@@"character" @TO@ InfixExpression@@"character" + CR + "Escaped" @AT@ 17402 @LENGTH@ 11
------------------INS Operator@@+ @TO@ InfixExpression@@"character" + CR + "Escaped" @AT@ 17413 @LENGTH@ 1
------------------INS SimpleName@@CR @TO@ InfixExpression@@"character" + CR + "Escaped" @AT@ 17416 @LENGTH@ 2
------------------INS StringLiteral@@"Escaped" @TO@ InfixExpression@@"character" + CR + "Escaped" @AT@ 17421 @LENGTH@ 9
---------------DEL StringLiteral@@"character!rEscaped" @AT@ 17641 @LENGTH@ 20


UPD MethodDeclaration@@public, Object, MethodName:convertToMongoType, Object obj,  @TO@ public, Object, MethodName:convertToMongoType, Object obj, TypeInformation<?> typeInformation,  @AT@ 2583 @LENGTH@ 68
---INS SingleVariableDeclaration@@TypeInformation<?> typeInformation @TO@ MethodDeclaration@@public, Object, MethodName:convertToMongoType, Object obj,  @AT@ 2687 @LENGTH@ 34
------INS ParameterizedType@@TypeInformation<?> @TO@ SingleVariableDeclaration@@TypeInformation<?> typeInformation @AT@ 2687 @LENGTH@ 18
---------INS SimpleType@@TypeInformation @TO@ ParameterizedType@@TypeInformation<?> @AT@ 2687 @LENGTH@ 15
---------INS WildcardType@@? @TO@ ParameterizedType@@TypeInformation<?> @AT@ 2703 @LENGTH@ 1
------INS SimpleName@@typeInformation @TO@ SingleVariableDeclaration@@TypeInformation<?> typeInformation @AT@ 2706 @LENGTH@ 15


UPD ExpressionStatement@@MethodInvocation:assumeTrue(!ConnectionUtils.isJredis(factory) && !ConnectionUtils.isLettuce(factory) && !ConnectionUtils.isSrp(factory)) @TO@ MethodInvocation:assumeTrue(!ConnectionUtils.isJredis(factory) && !ConnectionUtils.isSrp(factory)) @AT@ 4767 @LENGTH@ 121
---UPD MethodInvocation@@assumeTrue(!ConnectionUtils.isJredis(factory) && !ConnectionUtils.isLettuce(factory) && !ConnectionUtils.isSrp(factory)) @TO@ assumeTrue(!ConnectionUtils.isJredis(factory) && !ConnectionUtils.isSrp(factory)) @AT@ 4767 @LENGTH@ 120
------UPD SimpleName@@MethodName:assumeTrue:[!ConnectionUtils.isJredis(factory) && !ConnectionUtils.isLettuce(factory) && !ConnectionUtils.isSrp(factory)] @TO@ MethodName:assumeTrue:[!ConnectionUtils.isJredis(factory) && !ConnectionUtils.isSrp(factory)] @AT@ 4767 @LENGTH@ 120
---------UPD InfixExpression@@!ConnectionUtils.isJredis(factory) && !ConnectionUtils.isLettuce(factory) && !ConnectionUtils.isSrp(factory) @TO@ !ConnectionUtils.isJredis(factory) && !ConnectionUtils.isSrp(factory) @AT@ 4778 @LENGTH@ 108
------------DEL PrefixExpression@@!ConnectionUtils.isLettuce(factory) @AT@ 4816 @LENGTH@ 35
---------------DEL Operator@@! @AT@ 4816 @LENGTH@ 1
---------------DEL MethodInvocation@@ConnectionUtils.isLettuce(factory) @AT@ 4817 @LENGTH@ 34
------------------DEL SimpleName@@Name:ConnectionUtils @AT@ 4817 @LENGTH@ 15
------------------DEL SimpleName@@MethodName:isLettuce:[factory] @AT@ 4833 @LENGTH@ 18
---------------------DEL SimpleName@@factory @AT@ 4843 @LENGTH@ 7


UPD ExpressionStatement@@MethodInvocation:onPrepare.process(exchange) @TO@ MethodInvocation:onPrepare.process(answer) @AT@ 5557 @LENGTH@ 28
---UPD MethodInvocation@@onPrepare.process(exchange) @TO@ onPrepare.process(answer) @AT@ 5557 @LENGTH@ 27
------UPD SimpleName@@MethodName:process:[exchange] @TO@ MethodName:process:[answer] @AT@ 5567 @LENGTH@ 17
---------UPD SimpleName@@exchange @TO@ answer @AT@ 5575 @LENGTH@ 8


UPD MethodDeclaration@@public, Object, MethodName:unmarshal, Exchange exchange, InputStream stream, IOException,  @TO@ public, Object, MethodName:unmarshal, Exchange exchange, InputStream stream, IOException, SAXException,  @AT@ 9929 @LENGTH@ 1147
---INS SimpleType@@SAXException @TO@ MethodDeclaration@@public, Object, MethodName:unmarshal, Exchange exchange, InputStream stream, IOException,  @AT@ 10140 @LENGTH@ 12


UPD ExpressionStatement@@MethodInvocation:parseDeploymentOverlays(reader,namespace,new ModelNode(),list) @TO@ MethodInvocation:parseDeploymentOverlays(reader,namespace,new ModelNode(),list,true,true) @AT@ 20968 @LENGTH@ 66
---UPD MethodInvocation@@parseDeploymentOverlays(reader,namespace,new ModelNode(),list) @TO@ parseDeploymentOverlays(reader,namespace,new ModelNode(),list,true,true) @AT@ 20968 @LENGTH@ 65
------UPD SimpleName@@MethodName:parseDeploymentOverlays:[reader, namespace, new ModelNode(), list] @TO@ MethodName:parseDeploymentOverlays:[reader, namespace, new ModelNode(), list, true, true] @AT@ 20968 @LENGTH@ 65
---------INS BooleanLiteral@@true @TO@ SimpleName@@MethodName:parseDeploymentOverlays:[reader, namespace, new ModelNode(), list] @AT@ 21034 @LENGTH@ 4
---------INS BooleanLiteral@@true @TO@ SimpleName@@MethodName:parseDeploymentOverlays:[reader, namespace, new ModelNode(), list] @AT@ 21040 @LENGTH@ 4


UPD ExpressionStatement@@MethodInvocation:System.out.println(war.toString(true)) @TO@ MethodInvocation:log.info(war.toString(true)) @AT@ 2735 @LENGTH@ 39
---UPD MethodInvocation@@System.out.println(war.toString(true)) @TO@ log.info(war.toString(true)) @AT@ 2735 @LENGTH@ 38
------DEL QualifiedName@@Name:System.out @AT@ 2735 @LENGTH@ 10
------INS SimpleName@@Name:log @TO@ MethodInvocation@@System.out.println(war.toString(true)) @AT@ 2735 @LENGTH@ 3
------UPD SimpleName@@MethodName:println:[war.toString(true)] @TO@ MethodName:info:[war.toString(true)] @AT@ 2746 @LENGTH@ 27


UPD SuperConstructorInvocation@@super(PathElement.pathElement(Constants.JSSE,Constants.CLASSIC),SecurityExtension.getResourceDescriptionResolver(Constants.JSSE),JSSEResourceDefinitionAdd.INSTANCE,new SecurityDomainReloadRemoveHandler());
 @TO@ super(SecurityExtension.JSSE_PATH,SecurityExtension.getResourceDescriptionResolver(Constants.JSSE),JSSEResourceDefinitionAdd.INSTANCE,new SecurityDomainReloadRemoveHandler());
 @AT@ 4728 @LENGTH@ 255
---INS QualifiedName@@SecurityExtension.JSSE_PATH @TO@ SuperConstructorInvocation@@super(PathElement.pathElement(Constants.JSSE,Constants.CLASSIC),SecurityExtension.getResourceDescriptionResolver(Constants.JSSE),JSSEResourceDefinitionAdd.INSTANCE,new SecurityDomainReloadRemoveHandler());
 @AT@ 4690 @LENGTH@ 27
------MOV SimpleName@@Constants @TO@ QualifiedName@@SecurityExtension.JSSE_PATH @AT@ 4758 @LENGTH@ 9
------MOV SimpleName@@JSSE @TO@ QualifiedName@@SecurityExtension.JSSE_PATH @AT@ 4768 @LENGTH@ 4
---DEL MethodInvocation@@PathElement.pathElement(Constants.JSSE,Constants.CLASSIC) @AT@ 4734 @LENGTH@ 58
------DEL SimpleName@@Name:PathElement @AT@ 4734 @LENGTH@ 11
------DEL SimpleName@@MethodName:pathElement:[Constants.JSSE, Constants.CLASSIC] @AT@ 4746 @LENGTH@ 46
---------DEL QualifiedName@@Constants.JSSE @AT@ 4758 @LENGTH@ 14
---------DEL QualifiedName@@Constants.CLASSIC @AT@ 4774 @LENGTH@ 17
------------DEL SimpleName@@Constants @AT@ 4774 @LENGTH@ 9
------------DEL SimpleName@@CLASSIC @AT@ 4784 @LENGTH@ 7


UPD ExpressionStatement@@MethodInvocation:checkFailedTransformedBootOperations(mainServices,VERSION_1_1_0,modelNodes,new FailedOperationTransformationConfig().addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH),new RejectExpressionsConfig(HornetQServerResourceDefinition.REJECTED_EXPRESSION_ATTRIBUTES)).addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH).append(pathElement(ModelDescriptionConstants.PATH)),new RejectExpressionsConfig(ModelDescriptionConstants.PATH)).addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH).append(pathElement(CommonAttributes.IN_VM_CONNECTOR)),new RejectExpressionsConfig(InVMTransportDefinition.SERVER_ID)).addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH).append(pathElement(CommonAttributes.CONNECTOR)),new RejectExpressionsConfig(CommonAttributes.FACTORY_CLASS)).addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH).append(pathElement(CommonAttributes.IN_VM_ACCEPTOR)),new RejectExpressionsConfig(InVMTransportDefinition.SERVER_ID)).addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH).append(pathElement(CommonAttributes.ACCEPTOR)),new RejectExpressionsConfig(CommonAttributes.FACTORY_CLASS)).addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH).append(BroadcastGroupDefinition.PATH),new RejectExpressionsConfig(BroadcastGroupDefinition.BROADCAST_PERIOD){
  @Override public boolean expectFailed(  ModelNode operation){
    if ("groupT".equals(operation.get(OP_ADDR).get(2).get(CommonAttributes.BROADCAST_GROUP).asString())) {
      return true;
    }
    return super.expectFailed(operation);
  }
}
).addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH).append(DiscoveryGroupDefinition.PATH),new RejectExpressionsConfig(DiscoveryGroupDefinition.REFRESH_TIMEOUT,DiscoveryGroupDefinition.INITIAL_WAIT_TIMEOUT){
  @Override public boolean expectFailed(  ModelNode operation){
    if ("groupU".equals(operation.get(OP_ADDR).get(2).get(CommonAttributes.DISCOVERY_GROUP).asString())) {
      return true;
    }
    return super.expectFailed(operation);
  }
}
).addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH).append(DivertDefinition.PATH),new RejectExpressionsConfig(DivertDefinition.REJECTED_EXPRESSION_ATTRIBUTES)).addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH).append(QueueDefinition.PATH),new RejectExpressionsConfig(QueueDefinition.REJECTED_EXPRESSION_ATTRIBUTES)).addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH).append(ClusterConnectionDefinition.PATH),new RejectExpressionsConfig(ClusterConnectionDefinition.REJECTED_EXPRESSION_ATTRIBUTES)).addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH).append(BridgeDefinition.PATH),new RejectExpressionsConfig(BridgeDefinition.REJECTED_EXPRESSION_ATTRIBUTES)).addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH).append(GroupingHandlerDefinition.PATH),new RejectExpressionsConfig(GroupingHandlerDefinition.REJECTED_EXPRESSION_ATTRIBUTES)).addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH).append(AddressSettingDefinition.PATH),new RejectExpressionsConfig(AddressSettingDefinition.REJECTED_EXPRESSION_ATTRIBUTES)).addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH).append(ConnectorServiceDefinition.PATH),new RejectExpressionsConfig(CommonAttributes.FACTORY_CLASS)).addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH).append(ConnectorServiceDefinition.PATH).append(ConnectorServiceParamDefinition.PATH),new RejectExpressionsConfig(ConnectorServiceParamDefinition.VALUE)).addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH).append(ConnectionFactoryDefinition.PATH),new RejectExpressionsConfig(ConnectionFactoryDefinition.REJECTED_EXPRESSION_ATTRIBUTES)).addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH).append(PooledConnectionFactoryDefinition.PATH),new RejectExpressionsConfig(PooledConnectionFactoryDefinition.REJECTED_EXPRESSION_ATTRIBUTES)).addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH).append(JMSQueueDefinition.PATH),new RejectExpressionsConfig(JMSQueueDefinition.REJECTED_EXPRESSION_ATTRIBUTES)).addFailedAttribute(subsystemAddress.append(JMSBridgeDefinition.PATH),new RejectExpressionsConfig(new String[0]){
  @Override public boolean expectFailed(  ModelNode operation){
    return true;
  }
}
)) @TO@ MethodInvocation:checkFailedTransformedBootOperations(mainServices,VERSION_1_1_0,modelNodes,new FailedOperationTransformationConfig().addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH),new RejectExpressionsConfig(HornetQServerResourceDefinition.REJECTED_EXPRESSION_ATTRIBUTES)).addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH).append(pathElement(ModelDescriptionConstants.PATH)),new RejectExpressionsConfig(ModelDescriptionConstants.PATH)).addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH).append(pathElement(CommonAttributes.IN_VM_CONNECTOR)),new RejectExpressionsConfig(InVMTransportDefinition.SERVER_ID)).addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH).append(pathElement(CommonAttributes.CONNECTOR)),new RejectExpressionsConfig(CommonAttributes.FACTORY_CLASS)).addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH).append(pathElement(CommonAttributes.IN_VM_ACCEPTOR)),new RejectExpressionsConfig(InVMTransportDefinition.SERVER_ID)).addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH).append(pathElement(CommonAttributes.ACCEPTOR)),new RejectExpressionsConfig(CommonAttributes.FACTORY_CLASS)).addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH).append(BroadcastGroupDefinition.PATH),new RejectExpressionsConfig(BroadcastGroupDefinition.BROADCAST_PERIOD){
  @Override public boolean expectFailed(  ModelNode operation){
    if ("groupT".equals(operation.get(OP_ADDR).get(2).get(CommonAttributes.BROADCAST_GROUP).asString())) {
      return true;
    }
    return super.expectFailed(operation);
  }
}
).addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH).append(DiscoveryGroupDefinition.PATH),new RejectExpressionsConfig(DiscoveryGroupDefinition.REFRESH_TIMEOUT,DiscoveryGroupDefinition.INITIAL_WAIT_TIMEOUT){
  @Override public boolean expectFailed(  ModelNode operation){
    if ("groupU".equals(operation.get(OP_ADDR).get(2).get(CommonAttributes.DISCOVERY_GROUP).asString())) {
      return true;
    }
    return super.expectFailed(operation);
  }
}
).addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH).append(DivertDefinition.PATH),new RejectExpressionsConfig(DivertDefinition.REJECTED_EXPRESSION_ATTRIBUTES)).addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH).append(QueueDefinition.PATH),new RejectExpressionsConfig(QueueDefinition.REJECTED_EXPRESSION_ATTRIBUTES)).addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH).append(ClusterConnectionDefinition.PATH),new RejectExpressionsConfig(ClusterConnectionDefinition.REJECTED_EXPRESSION_ATTRIBUTES)).addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH).append(BridgeDefinition.PATH),new RejectExpressionsConfig(BridgeDefinition.REJECTED_EXPRESSION_ATTRIBUTES)).addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH).append(GroupingHandlerDefinition.PATH),new RejectExpressionsConfig(GroupingHandlerDefinition.REJECTED_EXPRESSION_ATTRIBUTES)).addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH).append(AddressSettingDefinition.PATH),new RejectExpressionsConfig(AddressSettingDefinition.REJECTED_EXPRESSION_ATTRIBUTES)).addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH).append(ConnectorServiceDefinition.PATH),new RejectExpressionsConfig(CommonAttributes.FACTORY_CLASS)).addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH).append(ConnectorServiceDefinition.PATH).append(ConnectorServiceParamDefinition.PATH),new RejectExpressionsConfig(ConnectorServiceParamDefinition.VALUE)).addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH).append(ConnectionFactoryDefinition.PATH),new RejectExpressionsConfig(ConnectionFactoryDefinition.REJECTED_EXPRESSION_ATTRIBUTES).setReadOnly(FACTORY_TYPE)).addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH).append(PooledConnectionFactoryDefinition.PATH),new RejectExpressionsConfig(PooledConnectionFactoryDefinition.REJECTED_EXPRESSION_ATTRIBUTES)).addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH).append(JMSQueueDefinition.PATH),new RejectExpressionsConfig(JMSQueueDefinition.REJECTED_EXPRESSION_ATTRIBUTES)).addFailedAttribute(subsystemAddress.append(JMSBridgeDefinition.PATH),new RejectExpressionsConfig(new String[0]){
  @Override public boolean expectFailed(  ModelNode operation){
    return true;
  }
}
)) @AT@ 6739 @LENGTH@ 7249
---UPD MethodInvocation@@checkFailedTransformedBootOperations(mainServices,VERSION_1_1_0,modelNodes,new FailedOperationTransformationConfig().addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH),new RejectExpressionsConfig(HornetQServerResourceDefinition.REJECTED_EXPRESSION_ATTRIBUTES)).addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH).append(pathElement(ModelDescriptionConstants.PATH)),new RejectExpressionsConfig(ModelDescriptionConstants.PATH)).addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH).append(pathElement(CommonAttributes.IN_VM_CONNECTOR)),new RejectExpressionsConfig(InVMTransportDefinition.SERVER_ID)).addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH).append(pathElement(CommonAttributes.CONNECTOR)),new RejectExpressionsConfig(CommonAttributes.FACTORY_CLASS)).addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH).append(pathElement(CommonAttributes.IN_VM_ACCEPTOR)),new RejectExpressionsConfig(InVMTransportDefinition.SERVER_ID)).addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH).append(pathElement(CommonAttributes.ACCEPTOR)),new RejectExpressionsConfig(CommonAttributes.FACTORY_CLASS)).addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH).append(BroadcastGroupDefinition.PATH),new RejectExpressionsConfig(BroadcastGroupDefinition.BROADCAST_PERIOD){
  @Override public boolean expectFailed(  ModelNode operation){
    if ("groupT".equals(operation.get(OP_ADDR).get(2).get(CommonAttributes.BROADCAST_GROUP).asString())) {
      return true;
    }
    return super.expectFailed(operation);
  }
}
).addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH).append(DiscoveryGroupDefinition.PATH),new RejectExpressionsConfig(DiscoveryGroupDefinition.REFRESH_TIMEOUT,DiscoveryGroupDefinition.INITIAL_WAIT_TIMEOUT){
  @Override public boolean expectFailed(  ModelNode operation){
    if ("groupU".equals(operation.get(OP_ADDR).get(2).get(CommonAttributes.DISCOVERY_GROUP).asString())) {
      return true;
    }
    return super.expectFailed(operation);
  }
}
).addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH).append(DivertDefinition.PATH),new RejectExpressionsConfig(DivertDefinition.REJECTED_EXPRESSION_ATTRIBUTES)).addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH).append(QueueDefinition.PATH),new RejectExpressionsConfig(QueueDefinition.REJECTED_EXPRESSION_ATTRIBUTES)).addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH).append(ClusterConnectionDefinition.PATH),new RejectExpressionsConfig(ClusterConnectionDefinition.REJECTED_EXPRESSION_ATTRIBUTES)).addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH).append(BridgeDefinition.PATH),new RejectExpressionsConfig(BridgeDefinition.REJECTED_EXPRESSION_ATTRIBUTES)).addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH).append(GroupingHandlerDefinition.PATH),new RejectExpressionsConfig(GroupingHandlerDefinition.REJECTED_EXPRESSION_ATTRIBUTES)).addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH).append(AddressSettingDefinition.PATH),new RejectExpressionsConfig(AddressSettingDefinition.REJECTED_EXPRESSION_ATTRIBUTES)).addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH).append(ConnectorServiceDefinition.PATH),new RejectExpressionsConfig(CommonAttributes.FACTORY_CLASS)).addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH).append(ConnectorServiceDefinition.PATH).append(ConnectorServiceParamDefinition.PATH),new RejectExpressionsConfig(ConnectorServiceParamDefinition.VALUE)).addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH).append(ConnectionFactoryDefinition.PATH),new RejectExpressionsConfig(ConnectionFactoryDefinition.REJECTED_EXPRESSION_ATTRIBUTES)).addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH).append(PooledConnectionFactoryDefinition.PATH),new RejectExpressionsConfig(PooledConnectionFactoryDefinition.REJECTED_EXPRESSION_ATTRIBUTES)).addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH).append(JMSQueueDefinition.PATH),new RejectExpressionsConfig(JMSQueueDefinition.REJECTED_EXPRESSION_ATTRIBUTES)).addFailedAttribute(subsystemAddress.append(JMSBridgeDefinition.PATH),new RejectExpressionsConfig(new String[0]){
  @Override public boolean expectFailed(  ModelNode operation){
    return true;
  }
}
)) @TO@ checkFailedTransformedBootOperations(mainServices,VERSION_1_1_0,modelNodes,new FailedOperationTransformationConfig().addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH),new RejectExpressionsConfig(HornetQServerResourceDefinition.REJECTED_EXPRESSION_ATTRIBUTES)).addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH).append(pathElement(ModelDescriptionConstants.PATH)),new RejectExpressionsConfig(ModelDescriptionConstants.PATH)).addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH).append(pathElement(CommonAttributes.IN_VM_CONNECTOR)),new RejectExpressionsConfig(InVMTransportDefinition.SERVER_ID)).addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH).append(pathElement(CommonAttributes.CONNECTOR)),new RejectExpressionsConfig(CommonAttributes.FACTORY_CLASS)).addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH).append(pathElement(CommonAttributes.IN_VM_ACCEPTOR)),new RejectExpressionsConfig(InVMTransportDefinition.SERVER_ID)).addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH).append(pathElement(CommonAttributes.ACCEPTOR)),new RejectExpressionsConfig(CommonAttributes.FACTORY_CLASS)).addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH).append(BroadcastGroupDefinition.PATH),new RejectExpressionsConfig(BroadcastGroupDefinition.BROADCAST_PERIOD){
  @Override public boolean expectFailed(  ModelNode operation){
    if ("groupT".equals(operation.get(OP_ADDR).get(2).get(CommonAttributes.BROADCAST_GROUP).asString())) {
      return true;
    }
    return super.expectFailed(operation);
  }
}
).addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH).append(DiscoveryGroupDefinition.PATH),new RejectExpressionsConfig(DiscoveryGroupDefinition.REFRESH_TIMEOUT,DiscoveryGroupDefinition.INITIAL_WAIT_TIMEOUT){
  @Override public boolean expectFailed(  ModelNode operation){
    if ("groupU".equals(operation.get(OP_ADDR).get(2).get(CommonAttributes.DISCOVERY_GROUP).asString())) {
      return true;
    }
    return super.expectFailed(operation);
  }
}
).addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH).append(DivertDefinition.PATH),new RejectExpressionsConfig(DivertDefinition.REJECTED_EXPRESSION_ATTRIBUTES)).addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH).append(QueueDefinition.PATH),new RejectExpressionsConfig(QueueDefinition.REJECTED_EXPRESSION_ATTRIBUTES)).addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH).append(ClusterConnectionDefinition.PATH),new RejectExpressionsConfig(ClusterConnectionDefinition.REJECTED_EXPRESSION_ATTRIBUTES)).addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH).append(BridgeDefinition.PATH),new RejectExpressionsConfig(BridgeDefinition.REJECTED_EXPRESSION_ATTRIBUTES)).addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH).append(GroupingHandlerDefinition.PATH),new RejectExpressionsConfig(GroupingHandlerDefinition.REJECTED_EXPRESSION_ATTRIBUTES)).addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH).append(AddressSettingDefinition.PATH),new RejectExpressionsConfig(AddressSettingDefinition.REJECTED_EXPRESSION_ATTRIBUTES)).addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH).append(ConnectorServiceDefinition.PATH),new RejectExpressionsConfig(CommonAttributes.FACTORY_CLASS)).addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH).append(ConnectorServiceDefinition.PATH).append(ConnectorServiceParamDefinition.PATH),new RejectExpressionsConfig(ConnectorServiceParamDefinition.VALUE)).addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH).append(ConnectionFactoryDefinition.PATH),new RejectExpressionsConfig(ConnectionFactoryDefinition.REJECTED_EXPRESSION_ATTRIBUTES).setReadOnly(FACTORY_TYPE)).addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH).append(PooledConnectionFactoryDefinition.PATH),new RejectExpressionsConfig(PooledConnectionFactoryDefinition.REJECTED_EXPRESSION_ATTRIBUTES)).addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH).append(JMSQueueDefinition.PATH),new RejectExpressionsConfig(JMSQueueDefinition.REJECTED_EXPRESSION_ATTRIBUTES)).addFailedAttribute(subsystemAddress.append(JMSBridgeDefinition.PATH),new RejectExpressionsConfig(new String[0]){
  @Override public boolean expectFailed(  ModelNode operation){
    return true;
  }
}
)) @AT@ 6739 @LENGTH@ 7248
------UPD SimpleName@@MethodName:checkFailedTransformedBootOperations:[mainServices, VERSION_1_1_0, modelNodes, new FailedOperationTransformationConfig().addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH),new RejectExpressionsConfig(HornetQServerResourceDefinition.REJECTED_EXPRESSION_ATTRIBUTES)).addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH).append(pathElement(ModelDescriptionConstants.PATH)),new RejectExpressionsConfig(ModelDescriptionConstants.PATH)).addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH).append(pathElement(CommonAttributes.IN_VM_CONNECTOR)),new RejectExpressionsConfig(InVMTransportDefinition.SERVER_ID)).addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH).append(pathElement(CommonAttributes.CONNECTOR)),new RejectExpressionsConfig(CommonAttributes.FACTORY_CLASS)).addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH).append(pathElement(CommonAttributes.IN_VM_ACCEPTOR)),new RejectExpressionsConfig(InVMTransportDefinition.SERVER_ID)).addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH).append(pathElement(CommonAttributes.ACCEPTOR)),new RejectExpressionsConfig(CommonAttributes.FACTORY_CLASS)).addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH).append(BroadcastGroupDefinition.PATH),new RejectExpressionsConfig(BroadcastGroupDefinition.BROADCAST_PERIOD){
  @Override public boolean expectFailed(  ModelNode operation){
    if ("groupT".equals(operation.get(OP_ADDR).get(2).get(CommonAttributes.BROADCAST_GROUP).asString())) {
      return true;
    }
    return super.expectFailed(operation);
  }
}
).addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH).append(DiscoveryGroupDefinition.PATH),new RejectExpressionsConfig(DiscoveryGroupDefinition.REFRESH_TIMEOUT,DiscoveryGroupDefinition.INITIAL_WAIT_TIMEOUT){
  @Override public boolean expectFailed(  ModelNode operation){
    if ("groupU".equals(operation.get(OP_ADDR).get(2).get(CommonAttributes.DISCOVERY_GROUP).asString())) {
      return true;
    }
    return super.expectFailed(operation);
  }
}
).addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH).append(DivertDefinition.PATH),new RejectExpressionsConfig(DivertDefinition.REJECTED_EXPRESSION_ATTRIBUTES)).addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH).append(QueueDefinition.PATH),new RejectExpressionsConfig(QueueDefinition.REJECTED_EXPRESSION_ATTRIBUTES)).addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH).append(ClusterConnectionDefinition.PATH),new RejectExpressionsConfig(ClusterConnectionDefinition.REJECTED_EXPRESSION_ATTRIBUTES)).addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH).append(BridgeDefinition.PATH),new RejectExpressionsConfig(BridgeDefinition.REJECTED_EXPRESSION_ATTRIBUTES)).addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH).append(GroupingHandlerDefinition.PATH),new RejectExpressionsConfig(GroupingHandlerDefinition.REJECTED_EXPRESSION_ATTRIBUTES)).addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH).append(AddressSettingDefinition.PATH),new RejectExpressionsConfig(AddressSettingDefinition.REJECTED_EXPRESSION_ATTRIBUTES)).addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH).append(ConnectorServiceDefinition.PATH),new RejectExpressionsConfig(CommonAttributes.FACTORY_CLASS)).addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH).append(ConnectorServiceDefinition.PATH).append(ConnectorServiceParamDefinition.PATH),new RejectExpressionsConfig(ConnectorServiceParamDefinition.VALUE)).addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH).append(ConnectionFactoryDefinition.PATH),new RejectExpressionsConfig(ConnectionFactoryDefinition.REJECTED_EXPRESSION_ATTRIBUTES)).addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH).append(PooledConnectionFactoryDefinition.PATH),new RejectExpressionsConfig(PooledConnectionFactoryDefinition.REJECTED_EXPRESSION_ATTRIBUTES)).addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH).append(JMSQueueDefinition.PATH),new RejectExpressionsConfig(JMSQueueDefinition.REJECTED_EXPRESSION_ATTRIBUTES)).addFailedAttribute(subsystemAddress.append(JMSBridgeDefinition.PATH),new RejectExpressionsConfig(new String[0]){
  @Override public boolean expectFailed(  ModelNode operation){
    return true;
  }
}
)] @TO@ MethodName:checkFailedTransformedBootOperations:[mainServices, VERSION_1_1_0, modelNodes, new FailedOperationTransformationConfig().addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH),new RejectExpressionsConfig(HornetQServerResourceDefinition.REJECTED_EXPRESSION_ATTRIBUTES)).addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH).append(pathElement(ModelDescriptionConstants.PATH)),new RejectExpressionsConfig(ModelDescriptionConstants.PATH)).addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH).append(pathElement(CommonAttributes.IN_VM_CONNECTOR)),new RejectExpressionsConfig(InVMTransportDefinition.SERVER_ID)).addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH).append(pathElement(CommonAttributes.CONNECTOR)),new RejectExpressionsConfig(CommonAttributes.FACTORY_CLASS)).addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH).append(pathElement(CommonAttributes.IN_VM_ACCEPTOR)),new RejectExpressionsConfig(InVMTransportDefinition.SERVER_ID)).addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH).append(pathElement(CommonAttributes.ACCEPTOR)),new RejectExpressionsConfig(CommonAttributes.FACTORY_CLASS)).addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH).append(BroadcastGroupDefinition.PATH),new RejectExpressionsConfig(BroadcastGroupDefinition.BROADCAST_PERIOD){
  @Override public boolean expectFailed(  ModelNode operation){
    if ("groupT".equals(operation.get(OP_ADDR).get(2).get(CommonAttributes.BROADCAST_GROUP).asString())) {
      return true;
    }
    return super.expectFailed(operation);
  }
}
).addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH).append(DiscoveryGroupDefinition.PATH),new RejectExpressionsConfig(DiscoveryGroupDefinition.REFRESH_TIMEOUT,DiscoveryGroupDefinition.INITIAL_WAIT_TIMEOUT){
  @Override public boolean expectFailed(  ModelNode operation){
    if ("groupU".equals(operation.get(OP_ADDR).get(2).get(CommonAttributes.DISCOVERY_GROUP).asString())) {
      return true;
    }
    return super.expectFailed(operation);
  }
}
).addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH).append(DivertDefinition.PATH),new RejectExpressionsConfig(DivertDefinition.REJECTED_EXPRESSION_ATTRIBUTES)).addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH).append(QueueDefinition.PATH),new RejectExpressionsConfig(QueueDefinition.REJECTED_EXPRESSION_ATTRIBUTES)).addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH).append(ClusterConnectionDefinition.PATH),new RejectExpressionsConfig(ClusterConnectionDefinition.REJECTED_EXPRESSION_ATTRIBUTES)).addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH).append(BridgeDefinition.PATH),new RejectExpressionsConfig(BridgeDefinition.REJECTED_EXPRESSION_ATTRIBUTES)).addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH).append(GroupingHandlerDefinition.PATH),new RejectExpressionsConfig(GroupingHandlerDefinition.REJECTED_EXPRESSION_ATTRIBUTES)).addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH).append(AddressSettingDefinition.PATH),new RejectExpressionsConfig(AddressSettingDefinition.REJECTED_EXPRESSION_ATTRIBUTES)).addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH).append(ConnectorServiceDefinition.PATH),new RejectExpressionsConfig(CommonAttributes.FACTORY_CLASS)).addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH).append(ConnectorServiceDefinition.PATH).append(ConnectorServiceParamDefinition.PATH),new RejectExpressionsConfig(ConnectorServiceParamDefinition.VALUE)).addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH).append(ConnectionFactoryDefinition.PATH),new RejectExpressionsConfig(ConnectionFactoryDefinition.REJECTED_EXPRESSION_ATTRIBUTES).setReadOnly(FACTORY_TYPE)).addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH).append(PooledConnectionFactoryDefinition.PATH),new RejectExpressionsConfig(PooledConnectionFactoryDefinition.REJECTED_EXPRESSION_ATTRIBUTES)).addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH).append(JMSQueueDefinition.PATH),new RejectExpressionsConfig(JMSQueueDefinition.REJECTED_EXPRESSION_ATTRIBUTES)).addFailedAttribute(subsystemAddress.append(JMSBridgeDefinition.PATH),new RejectExpressionsConfig(new String[0]){
  @Override public boolean expectFailed(  ModelNode operation){
    return true;
  }
}
)] @AT@ 6739 @LENGTH@ 7248
---------UPD MethodInvocation@@new FailedOperationTransformationConfig().addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH),new RejectExpressionsConfig(HornetQServerResourceDefinition.REJECTED_EXPRESSION_ATTRIBUTES)).addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH).append(pathElement(ModelDescriptionConstants.PATH)),new RejectExpressionsConfig(ModelDescriptionConstants.PATH)).addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH).append(pathElement(CommonAttributes.IN_VM_CONNECTOR)),new RejectExpressionsConfig(InVMTransportDefinition.SERVER_ID)).addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH).append(pathElement(CommonAttributes.CONNECTOR)),new RejectExpressionsConfig(CommonAttributes.FACTORY_CLASS)).addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH).append(pathElement(CommonAttributes.IN_VM_ACCEPTOR)),new RejectExpressionsConfig(InVMTransportDefinition.SERVER_ID)).addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH).append(pathElement(CommonAttributes.ACCEPTOR)),new RejectExpressionsConfig(CommonAttributes.FACTORY_CLASS)).addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH).append(BroadcastGroupDefinition.PATH),new RejectExpressionsConfig(BroadcastGroupDefinition.BROADCAST_PERIOD){
  @Override public boolean expectFailed(  ModelNode operation){
    if ("groupT".equals(operation.get(OP_ADDR).get(2).get(CommonAttributes.BROADCAST_GROUP).asString())) {
      return true;
    }
    return super.expectFailed(operation);
  }
}
).addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH).append(DiscoveryGroupDefinition.PATH),new RejectExpressionsConfig(DiscoveryGroupDefinition.REFRESH_TIMEOUT,DiscoveryGroupDefinition.INITIAL_WAIT_TIMEOUT){
  @Override public boolean expectFailed(  ModelNode operation){
    if ("groupU".equals(operation.get(OP_ADDR).get(2).get(CommonAttributes.DISCOVERY_GROUP).asString())) {
      return true;
    }
    return super.expectFailed(operation);
  }
}
).addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH).append(DivertDefinition.PATH),new RejectExpressionsConfig(DivertDefinition.REJECTED_EXPRESSION_ATTRIBUTES)).addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH).append(QueueDefinition.PATH),new RejectExpressionsConfig(QueueDefinition.REJECTED_EXPRESSION_ATTRIBUTES)).addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH).append(ClusterConnectionDefinition.PATH),new RejectExpressionsConfig(ClusterConnectionDefinition.REJECTED_EXPRESSION_ATTRIBUTES)).addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH).append(BridgeDefinition.PATH),new RejectExpressionsConfig(BridgeDefinition.REJECTED_EXPRESSION_ATTRIBUTES)).addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH).append(GroupingHandlerDefinition.PATH),new RejectExpressionsConfig(GroupingHandlerDefinition.REJECTED_EXPRESSION_ATTRIBUTES)).addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH).append(AddressSettingDefinition.PATH),new RejectExpressionsConfig(AddressSettingDefinition.REJECTED_EXPRESSION_ATTRIBUTES)).addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH).append(ConnectorServiceDefinition.PATH),new RejectExpressionsConfig(CommonAttributes.FACTORY_CLASS)).addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH).append(ConnectorServiceDefinition.PATH).append(ConnectorServiceParamDefinition.PATH),new RejectExpressionsConfig(ConnectorServiceParamDefinition.VALUE)).addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH).append(ConnectionFactoryDefinition.PATH),new RejectExpressionsConfig(ConnectionFactoryDefinition.REJECTED_EXPRESSION_ATTRIBUTES)).addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH).append(PooledConnectionFactoryDefinition.PATH),new RejectExpressionsConfig(PooledConnectionFactoryDefinition.REJECTED_EXPRESSION_ATTRIBUTES)).addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH).append(JMSQueueDefinition.PATH),new RejectExpressionsConfig(JMSQueueDefinition.REJECTED_EXPRESSION_ATTRIBUTES)).addFailedAttribute(subsystemAddress.append(JMSBridgeDefinition.PATH),new RejectExpressionsConfig(new String[0]){
  @Override public boolean expectFailed(  ModelNode operation){
    return true;
  }
}
) @TO@ new FailedOperationTransformationConfig().addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH),new RejectExpressionsConfig(HornetQServerResourceDefinition.REJECTED_EXPRESSION_ATTRIBUTES)).addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH).append(pathElement(ModelDescriptionConstants.PATH)),new RejectExpressionsConfig(ModelDescriptionConstants.PATH)).addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH).append(pathElement(CommonAttributes.IN_VM_CONNECTOR)),new RejectExpressionsConfig(InVMTransportDefinition.SERVER_ID)).addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH).append(pathElement(CommonAttributes.CONNECTOR)),new RejectExpressionsConfig(CommonAttributes.FACTORY_CLASS)).addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH).append(pathElement(CommonAttributes.IN_VM_ACCEPTOR)),new RejectExpressionsConfig(InVMTransportDefinition.SERVER_ID)).addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH).append(pathElement(CommonAttributes.ACCEPTOR)),new RejectExpressionsConfig(CommonAttributes.FACTORY_CLASS)).addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH).append(BroadcastGroupDefinition.PATH),new RejectExpressionsConfig(BroadcastGroupDefinition.BROADCAST_PERIOD){
  @Override public boolean expectFailed(  ModelNode operation){
    if ("groupT".equals(operation.get(OP_ADDR).get(2).get(CommonAttributes.BROADCAST_GROUP).asString())) {
      return true;
    }
    return super.expectFailed(operation);
  }
}
).addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH).append(DiscoveryGroupDefinition.PATH),new RejectExpressionsConfig(DiscoveryGroupDefinition.REFRESH_TIMEOUT,DiscoveryGroupDefinition.INITIAL_WAIT_TIMEOUT){
  @Override public boolean expectFailed(  ModelNode operation){
    if ("groupU".equals(operation.get(OP_ADDR).get(2).get(CommonAttributes.DISCOVERY_GROUP).asString())) {
      return true;
    }
    return super.expectFailed(operation);
  }
}
).addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH).append(DivertDefinition.PATH),new RejectExpressionsConfig(DivertDefinition.REJECTED_EXPRESSION_ATTRIBUTES)).addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH).append(QueueDefinition.PATH),new RejectExpressionsConfig(QueueDefinition.REJECTED_EXPRESSION_ATTRIBUTES)).addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH).append(ClusterConnectionDefinition.PATH),new RejectExpressionsConfig(ClusterConnectionDefinition.REJECTED_EXPRESSION_ATTRIBUTES)).addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH).append(BridgeDefinition.PATH),new RejectExpressionsConfig(BridgeDefinition.REJECTED_EXPRESSION_ATTRIBUTES)).addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH).append(GroupingHandlerDefinition.PATH),new RejectExpressionsConfig(GroupingHandlerDefinition.REJECTED_EXPRESSION_ATTRIBUTES)).addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH).append(AddressSettingDefinition.PATH),new RejectExpressionsConfig(AddressSettingDefinition.REJECTED_EXPRESSION_ATTRIBUTES)).addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH).append(ConnectorServiceDefinition.PATH),new RejectExpressionsConfig(CommonAttributes.FACTORY_CLASS)).addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH).append(ConnectorServiceDefinition.PATH).append(ConnectorServiceParamDefinition.PATH),new RejectExpressionsConfig(ConnectorServiceParamDefinition.VALUE)).addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH).append(ConnectionFactoryDefinition.PATH),new RejectExpressionsConfig(ConnectionFactoryDefinition.REJECTED_EXPRESSION_ATTRIBUTES).setReadOnly(FACTORY_TYPE)).addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH).append(PooledConnectionFactoryDefinition.PATH),new RejectExpressionsConfig(PooledConnectionFactoryDefinition.REJECTED_EXPRESSION_ATTRIBUTES)).addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH).append(JMSQueueDefinition.PATH),new RejectExpressionsConfig(JMSQueueDefinition.REJECTED_EXPRESSION_ATTRIBUTES)).addFailedAttribute(subsystemAddress.append(JMSBridgeDefinition.PATH),new RejectExpressionsConfig(new String[0]){
  @Override public boolean expectFailed(  ModelNode operation){
    return true;
  }
}
) @AT@ 6882 @LENGTH@ 7095
------------UPD MethodInvocation@@MethodName:addFailedAttribute:[subsystemAddress.append(HORNETQ_SERVER_PATH).append(ConnectionFactoryDefinition.PATH), new RejectExpressionsConfig(ConnectionFactoryDefinition.REJECTED_EXPRESSION_ATTRIBUTES)] @TO@ MethodName:addFailedAttribute:[subsystemAddress.append(HORNETQ_SERVER_PATH).append(ConnectionFactoryDefinition.PATH), new RejectExpressionsConfig(ConnectionFactoryDefinition.REJECTED_EXPRESSION_ATTRIBUTES).setReadOnly(FACTORY_TYPE)] @AT@ 6882 @LENGTH@ 5972
---------------INS MethodInvocation@@new RejectExpressionsConfig(ConnectionFactoryDefinition.REJECTED_EXPRESSION_ATTRIBUTES).setReadOnly(FACTORY_TYPE) @TO@ MethodInvocation@@MethodName:addFailedAttribute:[subsystemAddress.append(HORNETQ_SERVER_PATH).append(ConnectionFactoryDefinition.PATH), new RejectExpressionsConfig(ConnectionFactoryDefinition.REJECTED_EXPRESSION_ATTRIBUTES)] @AT@ 12850 @LENGTH@ 150
------------------MOV ClassInstanceCreation@@RejectExpressionsConfig[ConnectionFactoryDefinition.REJECTED_EXPRESSION_ATTRIBUTES] @TO@ MethodInvocation@@new RejectExpressionsConfig(ConnectionFactoryDefinition.REJECTED_EXPRESSION_ATTRIBUTES).setReadOnly(FACTORY_TYPE) @AT@ 12766 @LENGTH@ 87
------------------MOV ClassInstanceCreation@@RejectExpressionsConfig[ConnectionFactoryDefinition.REJECTED_EXPRESSION_ATTRIBUTES] @TO@ MethodInvocation@@new RejectExpressionsConfig(ConnectionFactoryDefinition.REJECTED_EXPRESSION_ATTRIBUTES).setReadOnly(FACTORY_TYPE) @AT@ 12766 @LENGTH@ 87
------------------INS SimpleName@@MethodName:setReadOnly:[FACTORY_TYPE] @TO@ MethodInvocation@@new RejectExpressionsConfig(ConnectionFactoryDefinition.REJECTED_EXPRESSION_ATTRIBUTES).setReadOnly(FACTORY_TYPE) @AT@ 12975 @LENGTH@ 25
---------------------INS SimpleName@@FACTORY_TYPE @TO@ SimpleName@@MethodName:setReadOnly:[FACTORY_TYPE] @AT@ 12987 @LENGTH@ 12


UPD IfStatement@@if (!isStarted()) {  throw new IllegalStateException("SendProcessor has not been started: " + this);} @TO@ if (!isStarted()) {  exchange.setException(new IllegalStateException("SendProcessor has not been started: " + this));  callback.done(true);  return true;} @AT@ 4131 @LENGTH@ 121
---UPD Block@@ThenBody:{  throw new IllegalStateException("SendProcessor has not been started: " + this);} @TO@ ThenBody:{  exchange.setException(new IllegalStateException("SendProcessor has not been started: " + this));  callback.done(true);  return true;} @AT@ 4149 @LENGTH@ 103
------INS ExpressionStatement@@MethodInvocation:exchange.setException(new IllegalStateException("SendProcessor has not been started: " + this)) @TO@ Block@@ThenBody:{  throw new IllegalStateException("SendProcessor has not been started: " + this);} @AT@ 4163 @LENGTH@ 96
---------INS MethodInvocation@@exchange.setException(new IllegalStateException("SendProcessor has not been started: " + this)) @TO@ ExpressionStatement@@MethodInvocation:exchange.setException(new IllegalStateException("SendProcessor has not been started: " + this)) @AT@ 4163 @LENGTH@ 95
------------INS SimpleName@@Name:exchange @TO@ MethodInvocation@@exchange.setException(new IllegalStateException("SendProcessor has not been started: " + this)) @AT@ 4163 @LENGTH@ 8
------------INS SimpleName@@MethodName:setException:[new IllegalStateException("SendProcessor has not been started: " + this)] @TO@ MethodInvocation@@exchange.setException(new IllegalStateException("SendProcessor has not been started: " + this)) @AT@ 4172 @LENGTH@ 86
---------------MOV ClassInstanceCreation@@IllegalStateException["SendProcessor has not been started: " + this] @TO@ SimpleName@@MethodName:setException:[new IllegalStateException("SendProcessor has not been started: " + this)] @AT@ 4169 @LENGTH@ 72
------DEL ThrowStatement@@ClassInstanceCreation:new IllegalStateException("SendProcessor has not been started: " + this) @AT@ 4163 @LENGTH@ 79
------INS ExpressionStatement@@MethodInvocation:callback.done(true) @TO@ Block@@ThenBody:{  throw new IllegalStateException("SendProcessor has not been started: " + this);} @AT@ 4272 @LENGTH@ 20
---------INS MethodInvocation@@callback.done(true) @TO@ ExpressionStatement@@MethodInvocation:callback.done(true) @AT@ 4272 @LENGTH@ 19
------------INS SimpleName@@Name:callback @TO@ MethodInvocation@@callback.done(true) @AT@ 4272 @LENGTH@ 8
------------INS SimpleName@@MethodName:done:[true] @TO@ MethodInvocation@@callback.done(true) @AT@ 4281 @LENGTH@ 10
---------------INS BooleanLiteral@@true @TO@ SimpleName@@MethodName:done:[true] @AT@ 4286 @LENGTH@ 4
------INS ReturnStatement@@BooleanLiteral:true @TO@ Block@@ThenBody:{  throw new IllegalStateException("SendProcessor has not been started: " + this);} @AT@ 4305 @LENGTH@ 12
---------INS BooleanLiteral@@true @TO@ ReturnStatement@@BooleanLiteral:true @AT@ 4312 @LENGTH@ 4


UPD IfStatement@@if (consoleHandler != null && "/".equals(exchange.getCanonicalPath())) {  StringBuilder redirect=new StringBuilder(requestUrl);  redirect.append(consoleHandler.getContext()).append(consoleHandler.getDefaultPath());  exchange.getResponseHeaders().add(Headers.LOCATION,redirect.toString());  MOVED_PERMANENTLY.handleRequest(exchange);  return;} @TO@ if (consoleHandler != null && "/".equals(exchange.getRequestPath())) {  StringBuilder redirect=new StringBuilder(requestUrl);  redirect.append(consoleHandler.getContext()).append(consoleHandler.getDefaultPath());  exchange.getResponseHeaders().add(Headers.LOCATION,redirect.toString());  MOVED_PERMANENTLY.handleRequest(exchange);  return;} @AT@ 2153 @LENGTH@ 409
---UPD InfixExpression@@consoleHandler != null && "/".equals(exchange.getCanonicalPath()) @TO@ consoleHandler != null && "/".equals(exchange.getRequestPath()) @AT@ 2157 @LENGTH@ 65
------UPD MethodInvocation@@"/".equals(exchange.getCanonicalPath()) @TO@ "/".equals(exchange.getRequestPath()) @AT@ 2183 @LENGTH@ 39
---------UPD SimpleName@@MethodName:equals:[exchange.getCanonicalPath()] @TO@ MethodName:equals:[exchange.getRequestPath()] @AT@ 2187 @LENGTH@ 35
------------UPD MethodInvocation@@exchange.getCanonicalPath() @TO@ exchange.getRequestPath() @AT@ 2194 @LENGTH@ 27
---------------UPD SimpleName@@MethodName:getCanonicalPath:[] @TO@ MethodName:getRequestPath:[] @AT@ 2203 @LENGTH@ 18


UPD IfStatement@@if (bodyParameters.isEmpty()) {  if (Exchange.class.isAssignableFrom(parameterType)) {    expression=ExpressionBuilder.exchangeExpression();  } else {    expression=ExpressionBuilder.mandatoryBodyExpression(parameterType,true);  }  LOG.trace("Parameter #{} is the body parameter using expression {}",i,expression);  parameterInfo.setExpression(expression);  bodyParameters.add(parameterInfo);} else {} @TO@ if (bodyParameters.isEmpty()) {  if (Exchange.class.isAssignableFrom(parameterType)) {    expression=ExpressionBuilder.exchangeExpression();  } else {    expression=ExpressionBuilder.mandatoryBodyExpression(parameterType,true);  }  LOG.trace("Parameter #{} is the body parameter using expression {}",i,expression);  parameterInfo.setExpression(expression);  bodyParameters.add(parameterInfo);} @AT@ 17417 @LENGTH@ 1071
---DEL Block@@ElseBody:{} @AT@ 18394 @LENGTH@ 94


UPD TryStatement@@try {  copy(curator,ZkPath.CONFIG_VERSION.getPath(parentVersionId),ZkPath.CONFIG_VERSION.getPath(toVersion));} catch (Exception e) {  throw new FabricException(e);} @TO@ try {  copy(curator,ZkPath.CONFIG_VERSION.getPath(parentVersionId),ZkPath.CONFIG_VERSION.getPath(toVersion));  treeCache.rebuildNode(ZkPath.CONFIG_VERSION.getPath(toVersion));} catch (Exception e) {  throw new FabricException(e);} @AT@ 19789 @LENGTH@ 206
---INS ExpressionStatement@@MethodInvocation:treeCache.rebuildNode(ZkPath.CONFIG_VERSION.getPath(toVersion)) @TO@ TryStatement@@try {  copy(curator,ZkPath.CONFIG_VERSION.getPath(parentVersionId),ZkPath.CONFIG_VERSION.getPath(toVersion));} catch (Exception e) {  throw new FabricException(e);} @AT@ 19930 @LENGTH@ 64
------INS MethodInvocation@@treeCache.rebuildNode(ZkPath.CONFIG_VERSION.getPath(toVersion)) @TO@ ExpressionStatement@@MethodInvocation:treeCache.rebuildNode(ZkPath.CONFIG_VERSION.getPath(toVersion)) @AT@ 19930 @LENGTH@ 63
---------INS SimpleName@@Name:treeCache @TO@ MethodInvocation@@treeCache.rebuildNode(ZkPath.CONFIG_VERSION.getPath(toVersion)) @AT@ 19930 @LENGTH@ 9
---------INS SimpleName@@MethodName:rebuildNode:[ZkPath.CONFIG_VERSION.getPath(toVersion)] @TO@ MethodInvocation@@treeCache.rebuildNode(ZkPath.CONFIG_VERSION.getPath(toVersion)) @AT@ 19940 @LENGTH@ 53
------------INS MethodInvocation@@ZkPath.CONFIG_VERSION.getPath(toVersion) @TO@ SimpleName@@MethodName:rebuildNode:[ZkPath.CONFIG_VERSION.getPath(toVersion)] @AT@ 19952 @LENGTH@ 40
---------------INS QualifiedName@@Name:ZkPath.CONFIG_VERSION @TO@ MethodInvocation@@ZkPath.CONFIG_VERSION.getPath(toVersion) @AT@ 19952 @LENGTH@ 21
---------------INS SimpleName@@MethodName:getPath:[toVersion] @TO@ MethodInvocation@@ZkPath.CONFIG_VERSION.getPath(toVersion) @AT@ 19974 @LENGTH@ 18
------------------INS SimpleName@@toVersion @TO@ SimpleName@@MethodName:getPath:[toVersion] @AT@ 19982 @LENGTH@ 9


UPD Block@@ElseBody:if (postfix.equals("id")) {} else {  LOGGER.warn("Unknown postfix: @" + postfix + " on repository URL: "+ text);  break;} @TO@ ElseBody:if (postfix.startsWith("id")) {} else {  LOGGER.warn("Unknown postfix: @" + postfix + " on repository URL: "+ text);  break;} @AT@ 25946 @LENGTH@ 227
---UPD IfStatement@@if (postfix.equals("id")) {} else {  LOGGER.warn("Unknown postfix: @" + postfix + " on repository URL: "+ text);  break;} @TO@ if (postfix.startsWith("id")) {} else {  LOGGER.warn("Unknown postfix: @" + postfix + " on repository URL: "+ text);  break;} @AT@ 25946 @LENGTH@ 227
------UPD MethodInvocation@@postfix.equals("id") @TO@ postfix.startsWith("id") @AT@ 25950 @LENGTH@ 20
---------UPD SimpleName@@MethodName:equals:["id"] @TO@ MethodName:startsWith:["id"] @AT@ 25958 @LENGTH@ 12
---UPD IfStatement@@if (postfix.equals("id")) {} else {  LOGGER.warn("Unknown postfix: @" + postfix + " on repository URL: "+ text);  break;} @TO@ if (postfix.startsWith("id")) {} else {  LOGGER.warn("Unknown postfix: @" + postfix + " on repository URL: "+ text);  break;} @AT@ 25946 @LENGTH@ 227
------UPD MethodInvocation@@postfix.equals("id") @TO@ postfix.startsWith("id") @AT@ 25950 @LENGTH@ 20
---------UPD SimpleName@@MethodName:equals:["id"] @TO@ MethodName:startsWith:["id"] @AT@ 25958 @LENGTH@ 12


UPD MethodDeclaration@@public, static, Property, MethodName:readProperty, final XMLExtendedStreamReader reader, XMLStreamException,  @TO@ public, static, Property, MethodName:readProperty, final XMLExtendedStreamReader reader, boolean supportsExpressions, XMLStreamException,  @AT@ 11730 @LENGTH@ 1116
---UPD VariableDeclarationStatement@@String value=null; @TO@ ModelNode value=null; @AT@ 11920 @LENGTH@ 20
------UPD SimpleType@@String @TO@ ModelNode @AT@ 11920 @LENGTH@ 6
---UPD ForStatement@@for (int i=0; i < cnt; i++) {  String uri=reader.getAttributeNamespace(i);  if (uri != null && !"".equals(XMLConstants.NULL_NS_URI)) {    throw unexpectedAttribute(reader,i);  }  final String localName=reader.getAttributeLocalName(i);  if (localName.equals("name")) {    name=reader.getAttributeValue(i);  } else   if (localName.equals("value")) {    value=reader.getAttributeValue(i);  } else {    throw unexpectedAttribute(reader,i);  }} @TO@ for (int i=0; i < cnt; i++) {  String uri=reader.getAttributeNamespace(i);  if (uri != null && !"".equals(XMLConstants.NULL_NS_URI)) {    throw unexpectedAttribute(reader,i);  }  final String localName=reader.getAttributeLocalName(i);  if (localName.equals("name")) {    name=reader.getAttributeValue(i);  } else   if (localName.equals("value")) {    if (supportsExpressions) {      value=parsePossibleExpression(reader.getAttributeValue(i));    } else {      value=new ModelNode(reader.getAttributeValue(i));    }  } else {    throw unexpectedAttribute(reader,i);  }} @AT@ 11949 @LENGTH@ 596
------UPD IfStatement@@if (localName.equals("name")) {  name=reader.getAttributeValue(i);} else if (localName.equals("value")) {  value=reader.getAttributeValue(i);} else {  throw unexpectedAttribute(reader,i);} @TO@ if (localName.equals("name")) {  name=reader.getAttributeValue(i);} else if (localName.equals("value")) {  if (supportsExpressions) {    value=parsePossibleExpression(reader.getAttributeValue(i));  } else {    value=new ModelNode(reader.getAttributeValue(i));  }} else {  throw unexpectedAttribute(reader,i);} @AT@ 12258 @LENGTH@ 277
---------UPD Block@@ElseBody:if (localName.equals("value")) {  value=reader.getAttributeValue(i);} else {  throw unexpectedAttribute(reader,i);} @TO@ ElseBody:if (localName.equals("value")) {  if (supportsExpressions) {    value=parsePossibleExpression(reader.getAttributeValue(i));  } else {    value=new ModelNode(reader.getAttributeValue(i));  }} else {  throw unexpectedAttribute(reader,i);} @AT@ 12361 @LENGTH@ 174
------------UPD IfStatement@@if (localName.equals("value")) {  value=reader.getAttributeValue(i);} else {  throw unexpectedAttribute(reader,i);} @TO@ if (localName.equals("value")) {  if (supportsExpressions) {    value=parsePossibleExpression(reader.getAttributeValue(i));  } else {    value=new ModelNode(reader.getAttributeValue(i));  }} else {  throw unexpectedAttribute(reader,i);} @AT@ 12361 @LENGTH@ 174
---------------UPD Block@@ThenBody:{  value=reader.getAttributeValue(i);} @TO@ ElseBody:{  value=new ModelNode(reader.getAttributeValue(i));} @AT@ 12392 @LENGTH@ 68
---------------INS Block@@ThenBody:{  if (supportsExpressions) {    value=parsePossibleExpression(reader.getAttributeValue(i));  } else {    value=new ModelNode(reader.getAttributeValue(i));  }} @TO@ IfStatement@@if (localName.equals("value")) {  value=reader.getAttributeValue(i);} else {  throw unexpectedAttribute(reader,i);} @AT@ 12581 @LENGTH@ 255
------------------INS IfStatement@@if (supportsExpressions) {  value=parsePossibleExpression(reader.getAttributeValue(i));} else {  value=new ModelNode(reader.getAttributeValue(i));} @TO@ Block@@ThenBody:{  if (supportsExpressions) {    value=parsePossibleExpression(reader.getAttributeValue(i));  } else {    value=new ModelNode(reader.getAttributeValue(i));  }} @AT@ 12599 @LENGTH@ 223
---------------------MOV Block@@ThenBody:{  value=reader.getAttributeValue(i);} @TO@ IfStatement@@if (supportsExpressions) {  value=parsePossibleExpression(reader.getAttributeValue(i));} else {  value=new ModelNode(reader.getAttributeValue(i));} @AT@ 12392 @LENGTH@ 68
------------------------UPD ExpressionStatement@@Assignment:value=reader.getAttributeValue(i) @TO@ Assignment:value=new ModelNode(reader.getAttributeValue(i)) @AT@ 12410 @LENGTH@ 36
---------------------------UPD Assignment@@value=reader.getAttributeValue(i) @TO@ value=new ModelNode(reader.getAttributeValue(i)) @AT@ 12410 @LENGTH@ 35
------------------------------INS ClassInstanceCreation@@ModelNode[reader.getAttributeValue(i)] @TO@ Assignment@@value=reader.getAttributeValue(i) @AT@ 12761 @LENGTH@ 42
---------------------------------MOV MethodInvocation@@reader.getAttributeValue(i) @TO@ ClassInstanceCreation@@ModelNode[reader.getAttributeValue(i)] @AT@ 12418 @LENGTH@ 27
---------------------------------MOV MethodInvocation@@reader.getAttributeValue(i) @TO@ ClassInstanceCreation@@ModelNode[reader.getAttributeValue(i)] @AT@ 12418 @LENGTH@ 27
---------------------------------MOV MethodInvocation@@reader.getAttributeValue(i) @TO@ ClassInstanceCreation@@ModelNode[reader.getAttributeValue(i)] @AT@ 12418 @LENGTH@ 27
---------------------------------MOV MethodInvocation@@reader.getAttributeValue(i) @TO@ ClassInstanceCreation@@ModelNode[reader.getAttributeValue(i)] @AT@ 12418 @LENGTH@ 27
---------------------------------MOV MethodInvocation@@reader.getAttributeValue(i) @TO@ ClassInstanceCreation@@ModelNode[reader.getAttributeValue(i)] @AT@ 12418 @LENGTH@ 27
---------------------------------INS New@@new @TO@ ClassInstanceCreation@@ModelNode[reader.getAttributeValue(i)] @AT@ 12761 @LENGTH@ 3
---------------------------------INS SimpleType@@ModelNode @TO@ ClassInstanceCreation@@ModelNode[reader.getAttributeValue(i)] @AT@ 12765 @LENGTH@ 9
---------------------MOV Block@@ThenBody:{  value=reader.getAttributeValue(i);} @TO@ IfStatement@@if (supportsExpressions) {  value=parsePossibleExpression(reader.getAttributeValue(i));} else {  value=new ModelNode(reader.getAttributeValue(i));} @AT@ 12392 @LENGTH@ 68
------------------------UPD ExpressionStatement@@Assignment:value=reader.getAttributeValue(i) @TO@ Assignment:value=new ModelNode(reader.getAttributeValue(i)) @AT@ 12410 @LENGTH@ 36
---------------------------UPD Assignment@@value=reader.getAttributeValue(i) @TO@ value=new ModelNode(reader.getAttributeValue(i)) @AT@ 12410 @LENGTH@ 35
------------------------------INS ClassInstanceCreation@@ModelNode[reader.getAttributeValue(i)] @TO@ Assignment@@value=reader.getAttributeValue(i) @AT@ 12761 @LENGTH@ 42
---------------------------------MOV MethodInvocation@@reader.getAttributeValue(i) @TO@ ClassInstanceCreation@@ModelNode[reader.getAttributeValue(i)] @AT@ 12418 @LENGTH@ 27
---------------------------------MOV MethodInvocation@@reader.getAttributeValue(i) @TO@ ClassInstanceCreation@@ModelNode[reader.getAttributeValue(i)] @AT@ 12418 @LENGTH@ 27
---------------------------------MOV MethodInvocation@@reader.getAttributeValue(i) @TO@ ClassInstanceCreation@@ModelNode[reader.getAttributeValue(i)] @AT@ 12418 @LENGTH@ 27
---------------------------------MOV MethodInvocation@@reader.getAttributeValue(i) @TO@ ClassInstanceCreation@@ModelNode[reader.getAttributeValue(i)] @AT@ 12418 @LENGTH@ 27
---------------------------------MOV MethodInvocation@@reader.getAttributeValue(i) @TO@ ClassInstanceCreation@@ModelNode[reader.getAttributeValue(i)] @AT@ 12418 @LENGTH@ 27
---------------------------------INS New@@new @TO@ ClassInstanceCreation@@ModelNode[reader.getAttributeValue(i)] @AT@ 12761 @LENGTH@ 3
---------------------------------INS SimpleType@@ModelNode @TO@ ClassInstanceCreation@@ModelNode[reader.getAttributeValue(i)] @AT@ 12765 @LENGTH@ 9
---------------------INS SimpleName@@supportsExpressions @TO@ IfStatement@@if (supportsExpressions) {  value=parsePossibleExpression(reader.getAttributeValue(i));} else {  value=new ModelNode(reader.getAttributeValue(i));} @AT@ 12603 @LENGTH@ 19
---------------------INS Block@@ThenBody:{  value=parsePossibleExpression(reader.getAttributeValue(i));} @TO@ IfStatement@@if (supportsExpressions) {  value=parsePossibleExpression(reader.getAttributeValue(i));} else {  value=new ModelNode(reader.getAttributeValue(i));} @AT@ 12624 @LENGTH@ 101
------------------------INS ExpressionStatement@@Assignment:value=parsePossibleExpression(reader.getAttributeValue(i)) @TO@ Block@@ThenBody:{  value=parsePossibleExpression(reader.getAttributeValue(i));} @AT@ 12646 @LENGTH@ 61
---------------------------INS Assignment@@value=parsePossibleExpression(reader.getAttributeValue(i)) @TO@ ExpressionStatement@@Assignment:value=parsePossibleExpression(reader.getAttributeValue(i)) @AT@ 12646 @LENGTH@ 60
------------------------------INS SimpleName@@value @TO@ Assignment@@value=parsePossibleExpression(reader.getAttributeValue(i)) @AT@ 12646 @LENGTH@ 5
------------------------------INS Operator@@= @TO@ Assignment@@value=parsePossibleExpression(reader.getAttributeValue(i)) @AT@ 12651 @LENGTH@ 1
------------------------------INS MethodInvocation@@parsePossibleExpression(reader.getAttributeValue(i)) @TO@ Assignment@@value=parsePossibleExpression(reader.getAttributeValue(i)) @AT@ 12654 @LENGTH@ 52
---------------------------------INS SimpleName@@MethodName:parsePossibleExpression:[reader.getAttributeValue(i)] @TO@ MethodInvocation@@parsePossibleExpression(reader.getAttributeValue(i)) @AT@ 12654 @LENGTH@ 52
------------------------------------INS MethodInvocation@@reader.getAttributeValue(i) @TO@ SimpleName@@MethodName:parsePossibleExpression:[reader.getAttributeValue(i)] @AT@ 12678 @LENGTH@ 27
---------------------------------------INS SimpleName@@Name:reader @TO@ MethodInvocation@@reader.getAttributeValue(i) @AT@ 12678 @LENGTH@ 6
---------------------------------------INS SimpleName@@MethodName:getAttributeValue:[i] @TO@ MethodInvocation@@reader.getAttributeValue(i) @AT@ 12685 @LENGTH@ 20
------------------------------------------INS SimpleName@@i @TO@ SimpleName@@MethodName:getAttributeValue:[i] @AT@ 12703 @LENGTH@ 1
---------------------------------INS SimpleName@@MethodName:parsePossibleExpression:[reader.getAttributeValue(i)] @TO@ MethodInvocation@@parsePossibleExpression(reader.getAttributeValue(i)) @AT@ 12654 @LENGTH@ 52
------------------------------------INS MethodInvocation@@reader.getAttributeValue(i) @TO@ SimpleName@@MethodName:parsePossibleExpression:[reader.getAttributeValue(i)] @AT@ 12678 @LENGTH@ 27
---------------------------------------INS SimpleName@@Name:reader @TO@ MethodInvocation@@reader.getAttributeValue(i) @AT@ 12678 @LENGTH@ 6
---------------------------------------INS SimpleName@@MethodName:getAttributeValue:[i] @TO@ MethodInvocation@@reader.getAttributeValue(i) @AT@ 12685 @LENGTH@ 20
------------------------------------------INS SimpleName@@i @TO@ SimpleName@@MethodName:getAttributeValue:[i] @AT@ 12703 @LENGTH@ 1
---INS SingleVariableDeclaration@@boolean supportsExpressions @TO@ MethodDeclaration@@public, static, Property, MethodName:readProperty, final XMLExtendedStreamReader reader, XMLStreamException,  @AT@ 11961 @LENGTH@ 27
------INS PrimitiveType@@boolean @TO@ SingleVariableDeclaration@@boolean supportsExpressions @AT@ 11961 @LENGTH@ 7
------INS SimpleName@@supportsExpressions @TO@ SingleVariableDeclaration@@boolean supportsExpressions @AT@ 11969 @LENGTH@ 19
---UPD ReturnStatement@@ClassInstanceCreation:new Property(name,new ModelNode().set(value == null ? "" : value)) @TO@ ClassInstanceCreation:new Property(name,new ModelNode().set(value == null ? new ModelNode() : value)) @AT@ 12765 @LENGTH@ 75
------UPD ClassInstanceCreation@@Property[name, new ModelNode().set(value == null ? "" : value)] @TO@ Property[name, new ModelNode().set(value == null ? new ModelNode() : value)] @AT@ 12772 @LENGTH@ 67
---------UPD MethodInvocation@@new ModelNode().set(value == null ? "" : value) @TO@ new ModelNode().set(value == null ? new ModelNode() : value) @AT@ 12791 @LENGTH@ 47
------------UPD SimpleName@@MethodName:set:[value == null ? "" : value] @TO@ MethodName:set:[value == null ? new ModelNode() : value] @AT@ 12807 @LENGTH@ 31
---------------UPD ConditionalExpression@@value == null ? "" : value @TO@ value == null ? new ModelNode() : value @AT@ 12811 @LENGTH@ 26
------------------DEL StringLiteral@@"" @AT@ 12827 @LENGTH@ 2
------------------INS ClassInstanceCreation@@ModelNode[] @TO@ ConditionalExpression@@value == null ? "" : value @AT@ 13203 @LENGTH@ 15
---------------------INS New@@new @TO@ ClassInstanceCreation@@ModelNode[] @AT@ 13203 @LENGTH@ 3
---------------------INS SimpleType@@ModelNode @TO@ ClassInstanceCreation@@ModelNode[] @AT@ 13207 @LENGTH@ 9


DEL MethodDeclaration@@public, void, MethodName:testMultiExec, Exception,  @AT@ 2399 @LENGTH@ 49
---DEL Modifier@@public @AT@ 2399 @LENGTH@ 6
---DEL PrimitiveType@@void @AT@ 2406 @LENGTH@ 4
---DEL SimpleName@@MethodName:testMultiExec @AT@ 2411 @LENGTH@ 13
---DEL SimpleType@@Exception @AT@ 2434 @LENGTH@ 9


UPD IfStatement@@if (delegateContext == null) {  throw MESSAGES.noContextToDelegateTo(operationId);  ;} @TO@ if (delegateContext == null) {  throw MESSAGES.noContextToDelegateTo(operationId);} @AT@ 7607 @LENGTH@ 203
---UPD Block@@ThenBody:{  throw MESSAGES.noContextToDelegateTo(operationId);  ;} @TO@ ThenBody:{  throw MESSAGES.noContextToDelegateTo(operationId);} @AT@ 7635 @LENGTH@ 175


INS MethodDeclaration@@public, SimpleAttributeDefinitionBuilder, MethodName:addAlternatives, String... alternatives,  @TO@ TypeDeclaration@@[public]SimpleAttributeDefinitionBuilder, AbstractAttributeDefinitionBuilder<SimpleAttributeDefinitionBuilder,SimpleAttributeDefinition> @AT@ 6561 @LENGTH@ 138
---INS Modifier@@public @TO@ MethodDeclaration@@public, SimpleAttributeDefinitionBuilder, MethodName:addAlternatives, String... alternatives,  @AT@ 6561 @LENGTH@ 6
---INS SimpleType@@SimpleAttributeDefinitionBuilder @TO@ MethodDeclaration@@public, SimpleAttributeDefinitionBuilder, MethodName:addAlternatives, String... alternatives,  @AT@ 6568 @LENGTH@ 32
---INS SimpleName@@MethodName:addAlternatives @TO@ MethodDeclaration@@public, SimpleAttributeDefinitionBuilder, MethodName:addAlternatives, String... alternatives,  @AT@ 6601 @LENGTH@ 15
---INS SingleVariableDeclaration@@String... alternatives @TO@ MethodDeclaration@@public, SimpleAttributeDefinitionBuilder, MethodName:addAlternatives, String... alternatives,  @AT@ 6617 @LENGTH@ 21
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String... alternatives @AT@ 6617 @LENGTH@ 6
------INS SimpleName@@alternatives @TO@ SingleVariableDeclaration@@String... alternatives @AT@ 6626 @LENGTH@ 12
---INS ReturnStatement@@SuperMethodInvocation:super.addAlternatives(alternatives) @TO@ MethodDeclaration@@public, SimpleAttributeDefinitionBuilder, MethodName:addAlternatives, String... alternatives,  @AT@ 6650 @LENGTH@ 43
------INS SuperMethodInvocation@@super.addAlternatives(alternatives) @TO@ ReturnStatement@@SuperMethodInvocation:super.addAlternatives(alternatives) @AT@ 6657 @LENGTH@ 35
---------INS SimpleName@@MethodName:addAlternatives:[alternatives] @TO@ SuperMethodInvocation@@super.addAlternatives(alternatives) @AT@ 6663 @LENGTH@ 15
---------INS SimpleName@@alternatives @TO@ SuperMethodInvocation@@super.addAlternatives(alternatives) @AT@ 6679 @LENGTH@ 12


UPD VariableDeclarationStatement@@String symbolicName=Matcher.quoteReplacement(bundleContext.getBundle().getSymbolicName()); @TO@ String symbolicName=bundleContext.getBundle().getSymbolicName(); @AT@ 2243 @LENGTH@ 92
---UPD VariableDeclarationFragment@@symbolicName=Matcher.quoteReplacement(bundleContext.getBundle().getSymbolicName()) @TO@ symbolicName=bundleContext.getBundle().getSymbolicName() @AT@ 2250 @LENGTH@ 84
------DEL MethodInvocation@@Matcher.quoteReplacement(bundleContext.getBundle().getSymbolicName()) @AT@ 2265 @LENGTH@ 69
---------DEL SimpleName@@Name:Matcher @AT@ 2265 @LENGTH@ 7
---------DEL SimpleName@@MethodName:quoteReplacement:[bundleContext.getBundle().getSymbolicName()] @AT@ 2273 @LENGTH@ 61
------------DEL MethodInvocation@@bundleContext.getBundle().getSymbolicName() @AT@ 2290 @LENGTH@ 43
------INS MethodInvocation@@bundleContext.getBundle().getSymbolicName() @TO@ VariableDeclarationFragment@@symbolicName=Matcher.quoteReplacement(bundleContext.getBundle().getSymbolicName()) @AT@ 2265 @LENGTH@ 43
---------MOV MethodInvocation@@MethodName:getBundle:[] @TO@ MethodInvocation@@bundleContext.getBundle().getSymbolicName() @AT@ 2290 @LENGTH@ 25
---------MOV SimpleName@@Name:bundleContext @TO@ MethodInvocation@@bundleContext.getBundle().getSymbolicName() @AT@ 2290 @LENGTH@ 13
---------MOV SimpleName@@MethodName:getSymbolicName:[] @TO@ MethodInvocation@@bundleContext.getBundle().getSymbolicName() @AT@ 2316 @LENGTH@ 17


UPD ExpressionStatement@@MethodInvocation:instance.tearDown(managementClient.get(),container.getName()) @TO@ MethodInvocation:current.get(i).tearDown(managementClient.get(),container.getName()) @AT@ 6064 @LENGTH@ 63


UPD IfStatement@@if (getConfiguration().isDeleteAfterWrite() && filePayload != null) {  FileUtil.deleteFile(filePayload);} @TO@ if (getConfiguration().isDeleteAfterWrite() && filePayload != null) {  IOHelper.close(putObjectRequest.getInputStream());  FileUtil.deleteFile(filePayload);} @AT@ 5482 @LENGTH@ 125
---UPD Block@@ThenBody:{  FileUtil.deleteFile(filePayload);} @TO@ ThenBody:{  IOHelper.close(putObjectRequest.getInputStream());  FileUtil.deleteFile(filePayload);} @AT@ 5550 @LENGTH@ 57
------INS ExpressionStatement@@MethodInvocation:IOHelper.close(putObjectRequest.getInputStream()) @TO@ Block@@ThenBody:{  FileUtil.deleteFile(filePayload);} @AT@ 5603 @LENGTH@ 50
---------INS MethodInvocation@@IOHelper.close(putObjectRequest.getInputStream()) @TO@ ExpressionStatement@@MethodInvocation:IOHelper.close(putObjectRequest.getInputStream()) @AT@ 5603 @LENGTH@ 49
------------INS SimpleName@@Name:IOHelper @TO@ MethodInvocation@@IOHelper.close(putObjectRequest.getInputStream()) @AT@ 5603 @LENGTH@ 8
------------INS SimpleName@@MethodName:close:[putObjectRequest.getInputStream()] @TO@ MethodInvocation@@IOHelper.close(putObjectRequest.getInputStream()) @AT@ 5612 @LENGTH@ 40
---------------INS MethodInvocation@@putObjectRequest.getInputStream() @TO@ SimpleName@@MethodName:close:[putObjectRequest.getInputStream()] @AT@ 5618 @LENGTH@ 33
------------------INS SimpleName@@Name:putObjectRequest @TO@ MethodInvocation@@putObjectRequest.getInputStream() @AT@ 5618 @LENGTH@ 16
------------------INS SimpleName@@MethodName:getInputStream:[] @TO@ MethodInvocation@@putObjectRequest.getInputStream() @AT@ 5635 @LENGTH@ 16


UPD FieldDeclaration@@public, static, final, int, [DEFAULT_SSH_PORT=8101] @TO@ public, static, final, int, [DEFAULT_KARAF_SSH_PORT=8101] @AT@ 916 @LENGTH@ 48
---UPD VariableDeclarationFragment@@DEFAULT_SSH_PORT=8101 @TO@ DEFAULT_KARAF_SSH_PORT=8101 @AT@ 940 @LENGTH@ 23
------UPD SimpleName@@DEFAULT_SSH_PORT @TO@ DEFAULT_KARAF_SSH_PORT @AT@ 940 @LENGTH@ 16


MOV MethodDeclaration@@public, RepositoryInformationHandlerMethodArgumentResolver, MethodName:repoInfoMethodArgumentResolver,  @TO@ TypeDeclaration@@[@Configuration, @ImportResource("classpath*:META-INF/spring-data-rest/**/*.xml"), public]RepositoryRestMvcConfiguration,  @AT@ 9499 @LENGTH@ 162


INS VariableDeclarationStatement@@Long refreshDelay=params.getReloadingRefreshDelay(); @TO@ MethodDeclaration@@public, ReloadingDetector, MethodName:createReloadingDetector, FileHandler handler, FileBasedBuilderParametersImpl params, ConfigurationException,  @AT@ 1698 @LENGTH@ 54
---INS SimpleType@@Long @TO@ VariableDeclarationStatement@@Long refreshDelay=params.getReloadingRefreshDelay(); @AT@ 1698 @LENGTH@ 4
---INS VariableDeclarationFragment@@refreshDelay=params.getReloadingRefreshDelay() @TO@ VariableDeclarationStatement@@Long refreshDelay=params.getReloadingRefreshDelay(); @AT@ 1703 @LENGTH@ 48
------INS SimpleName@@refreshDelay @TO@ VariableDeclarationFragment@@refreshDelay=params.getReloadingRefreshDelay() @AT@ 1703 @LENGTH@ 12
------INS MethodInvocation@@params.getReloadingRefreshDelay() @TO@ VariableDeclarationFragment@@refreshDelay=params.getReloadingRefreshDelay() @AT@ 1718 @LENGTH@ 33
---------INS SimpleName@@Name:params @TO@ MethodInvocation@@params.getReloadingRefreshDelay() @AT@ 1718 @LENGTH@ 6
---------INS SimpleName@@MethodName:getReloadingRefreshDelay:[] @TO@ MethodInvocation@@params.getReloadingRefreshDelay() @AT@ 1725 @LENGTH@ 26


UPD VariableDeclarationStatement@@Map<String,String> props=new HashMap<String,String>(); @TO@ Map<String,String> props=new LinkedHashMap<String,String>(); @AT@ 14197 @LENGTH@ 58
---UPD VariableDeclarationFragment@@props=new HashMap<String,String>() @TO@ props=new LinkedHashMap<String,String>() @AT@ 14217 @LENGTH@ 37
------UPD ClassInstanceCreation@@HashMap<String,String>[] @TO@ LinkedHashMap<String,String>[] @AT@ 14225 @LENGTH@ 29
---------UPD ParameterizedType@@HashMap<String,String> @TO@ LinkedHashMap<String,String> @AT@ 14229 @LENGTH@ 23
------------UPD SimpleType@@HashMap @TO@ LinkedHashMap @AT@ 14229 @LENGTH@ 7


DEL VariableDeclarationStatement@@final Boolean regularExpression=DeploymentOverlayDeploymentDefinition.REGULAR_EXPRESSION.resolveModelAttribute(context,model).asBoolean(); @AT@ 2390 @LENGTH@ 141
---DEL Modifier@@final @AT@ 2390 @LENGTH@ 5
---DEL SimpleType@@Boolean @AT@ 2396 @LENGTH@ 7
---DEL VariableDeclarationFragment@@regularExpression=DeploymentOverlayDeploymentDefinition.REGULAR_EXPRESSION.resolveModelAttribute(context,model).asBoolean() @AT@ 2404 @LENGTH@ 126
------DEL SimpleName@@regularExpression @AT@ 2404 @LENGTH@ 17
------DEL MethodInvocation@@DeploymentOverlayDeploymentDefinition.REGULAR_EXPRESSION.resolveModelAttribute(context,model).asBoolean() @AT@ 2424 @LENGTH@ 106
---------DEL MethodInvocation@@MethodName:resolveModelAttribute:[context, model] @AT@ 2424 @LENGTH@ 94
------------DEL SimpleName@@context @AT@ 2503 @LENGTH@ 7
------------DEL SimpleName@@model @AT@ 2512 @LENGTH@ 5
---------DEL QualifiedName@@Name:DeploymentOverlayDeploymentDefinition.REGULAR_EXPRESSION @AT@ 2424 @LENGTH@ 56
---------DEL SimpleName@@MethodName:asBoolean:[] @AT@ 2519 @LENGTH@ 11


UPD FieldDeclaration@@static, final, SimpleAttributeDefinition, [ARCHIVE=SimpleAttributeDefinitionBuilder.create(ARCHIVE_NAME,ModelType.STRING).setXmlName(ResourceAdapter.Tag.ARCHIVE.getLocalName()).setAllowNull(true).setAllowExpression(true).setMeasurementUnit(MeasurementUnit.NONE).setAlternatives(MODULE_NAME).build()] @TO@ static, final, SimpleAttributeDefinition, [ARCHIVE=SimpleAttributeDefinitionBuilder.create(ARCHIVE_NAME,ModelType.STRING).setXmlName(ResourceAdapter.Tag.ARCHIVE.getLocalName()).setAllowNull(true).setAllowExpression(true).setMeasurementUnit(MeasurementUnit.NONE).setAttributeMarshaller(new AttributeMarshaller(){
  @Override public void marshallAsElement(  AttributeDefinition attribute,  ModelNode resourceModel,  boolean marshallDefault,  XMLStreamWriter writer) throws XMLStreamException {
    if (resourceModel.hasDefined(attribute.getName())) {
      writer.writeStartElement(attribute.getXmlName());
      String archive=resourceModel.get(attribute.getName()).asString();
      if (archive.contains(ConnectorServices.RA_SERVICE_NAME_SEPARATOR)) {
        writer.writeCharacters(archive.substring(0,archive.indexOf(ConnectorServices.RA_SERVICE_NAME_SEPARATOR)));
      }
 else {
        writer.writeCharacters(archive);
      }
      writer.writeEndElement();
    }
  }
}
).setAlternatives(MODULE_NAME).build()] @AT@ 6582 @LENGTH@ 363
---UPD VariableDeclarationFragment@@ARCHIVE=SimpleAttributeDefinitionBuilder.create(ARCHIVE_NAME,ModelType.STRING).setXmlName(ResourceAdapter.Tag.ARCHIVE.getLocalName()).setAllowNull(true).setAllowExpression(true).setMeasurementUnit(MeasurementUnit.NONE).setAlternatives(MODULE_NAME).build() @TO@ ARCHIVE=SimpleAttributeDefinitionBuilder.create(ARCHIVE_NAME,ModelType.STRING).setXmlName(ResourceAdapter.Tag.ARCHIVE.getLocalName()).setAllowNull(true).setAllowExpression(true).setMeasurementUnit(MeasurementUnit.NONE).setAttributeMarshaller(new AttributeMarshaller(){
  @Override public void marshallAsElement(  AttributeDefinition attribute,  ModelNode resourceModel,  boolean marshallDefault,  XMLStreamWriter writer) throws XMLStreamException {
    if (resourceModel.hasDefined(attribute.getName())) {
      writer.writeStartElement(attribute.getXmlName());
      String archive=resourceModel.get(attribute.getName()).asString();
      if (archive.contains(ConnectorServices.RA_SERVICE_NAME_SEPARATOR)) {
        writer.writeCharacters(archive.substring(0,archive.indexOf(ConnectorServices.RA_SERVICE_NAME_SEPARATOR)));
      }
 else {
        writer.writeCharacters(archive);
      }
      writer.writeEndElement();
    }
  }
}
).setAlternatives(MODULE_NAME).build() @AT@ 6621 @LENGTH@ 323
------UPD MethodInvocation@@SimpleAttributeDefinitionBuilder.create(ARCHIVE_NAME,ModelType.STRING).setXmlName(ResourceAdapter.Tag.ARCHIVE.getLocalName()).setAllowNull(true).setAllowExpression(true).setMeasurementUnit(MeasurementUnit.NONE).setAlternatives(MODULE_NAME).build() @TO@ SimpleAttributeDefinitionBuilder.create(ARCHIVE_NAME,ModelType.STRING).setXmlName(ResourceAdapter.Tag.ARCHIVE.getLocalName()).setAllowNull(true).setAllowExpression(true).setMeasurementUnit(MeasurementUnit.NONE).setAttributeMarshaller(new AttributeMarshaller(){
  @Override public void marshallAsElement(  AttributeDefinition attribute,  ModelNode resourceModel,  boolean marshallDefault,  XMLStreamWriter writer) throws XMLStreamException {
    if (resourceModel.hasDefined(attribute.getName())) {
      writer.writeStartElement(attribute.getXmlName());
      String archive=resourceModel.get(attribute.getName()).asString();
      if (archive.contains(ConnectorServices.RA_SERVICE_NAME_SEPARATOR)) {
        writer.writeCharacters(archive.substring(0,archive.indexOf(ConnectorServices.RA_SERVICE_NAME_SEPARATOR)));
      }
 else {
        writer.writeCharacters(archive);
      }
      writer.writeEndElement();
    }
  }
}
).setAlternatives(MODULE_NAME).build() @AT@ 6631 @LENGTH@ 313
---------INS MethodInvocation@@MethodName:setAttributeMarshaller:[new AttributeMarshaller(){
  @Override public void marshallAsElement(  AttributeDefinition attribute,  ModelNode resourceModel,  boolean marshallDefault,  XMLStreamWriter writer) throws XMLStreamException {
    if (resourceModel.hasDefined(attribute.getName())) {
      writer.writeStartElement(attribute.getXmlName());
      String archive=resourceModel.get(attribute.getName()).asString();
      if (archive.contains(ConnectorServices.RA_SERVICE_NAME_SEPARATOR)) {
        writer.writeCharacters(archive.substring(0,archive.indexOf(ConnectorServices.RA_SERVICE_NAME_SEPARATOR)));
      }
 else {
        writer.writeCharacters(archive);
      }
      writer.writeEndElement();
    }
  }
}
] @TO@ MethodInvocation@@SimpleAttributeDefinitionBuilder.create(ARCHIVE_NAME,ModelType.STRING).setXmlName(ResourceAdapter.Tag.ARCHIVE.getLocalName()).setAllowNull(true).setAllowExpression(true).setMeasurementUnit(MeasurementUnit.NONE).setAlternatives(MODULE_NAME).build() @AT@ 6685 @LENGTH@ 1226
------------INS ClassInstanceCreation@@AttributeMarshaller[] @TO@ MethodInvocation@@MethodName:setAttributeMarshaller:[new AttributeMarshaller(){
  @Override public void marshallAsElement(  AttributeDefinition attribute,  ModelNode resourceModel,  boolean marshallDefault,  XMLStreamWriter writer) throws XMLStreamException {
    if (resourceModel.hasDefined(attribute.getName())) {
      writer.writeStartElement(attribute.getXmlName());
      String archive=resourceModel.get(attribute.getName()).asString();
      if (archive.contains(ConnectorServices.RA_SERVICE_NAME_SEPARATOR)) {
        writer.writeCharacters(archive.substring(0,archive.indexOf(ConnectorServices.RA_SERVICE_NAME_SEPARATOR)));
      }
 else {
        writer.writeCharacters(archive);
      }
      writer.writeEndElement();
    }
  }
}
] @AT@ 6985 @LENGTH@ 925
---------------INS New@@new @TO@ ClassInstanceCreation@@AttributeMarshaller[] @AT@ 6985 @LENGTH@ 3
---------------INS SimpleType@@AttributeMarshaller @TO@ ClassInstanceCreation@@AttributeMarshaller[] @AT@ 6989 @LENGTH@ 19
---------------INS AnonymousClassDeclaration@@AnonymousClass @TO@ ClassInstanceCreation@@AttributeMarshaller[] @AT@ 7011 @LENGTH@ 899
------------------INS MethodDeclaration@@public, void, MethodName:marshallAsElement, AttributeDefinition attribute, ModelNode resourceModel, boolean marshallDefault, XMLStreamWriter writer, XMLStreamException,  @TO@ AnonymousClassDeclaration@@AnonymousClass @AT@ 7055 @LENGTH@ 841
---------------------INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:marshallAsElement, AttributeDefinition attribute, ModelNode resourceModel, boolean marshallDefault, XMLStreamWriter writer, XMLStreamException,  @AT@ 7055 @LENGTH@ 6
---------------------INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:marshallAsElement, AttributeDefinition attribute, ModelNode resourceModel, boolean marshallDefault, XMLStreamWriter writer, XMLStreamException,  @AT@ 7062 @LENGTH@ 4
---------------------INS SimpleName@@MethodName:marshallAsElement @TO@ MethodDeclaration@@public, void, MethodName:marshallAsElement, AttributeDefinition attribute, ModelNode resourceModel, boolean marshallDefault, XMLStreamWriter writer, XMLStreamException,  @AT@ 7067 @LENGTH@ 17
---------------------INS SingleVariableDeclaration@@AttributeDefinition attribute @TO@ MethodDeclaration@@public, void, MethodName:marshallAsElement, AttributeDefinition attribute, ModelNode resourceModel, boolean marshallDefault, XMLStreamWriter writer, XMLStreamException,  @AT@ 7085 @LENGTH@ 29
------------------------INS SimpleType@@AttributeDefinition @TO@ SingleVariableDeclaration@@AttributeDefinition attribute @AT@ 7085 @LENGTH@ 19
------------------------INS SimpleName@@attribute @TO@ SingleVariableDeclaration@@AttributeDefinition attribute @AT@ 7105 @LENGTH@ 9
---------------------INS SingleVariableDeclaration@@ModelNode resourceModel @TO@ MethodDeclaration@@public, void, MethodName:marshallAsElement, AttributeDefinition attribute, ModelNode resourceModel, boolean marshallDefault, XMLStreamWriter writer, XMLStreamException,  @AT@ 7116 @LENGTH@ 23
------------------------INS SimpleType@@ModelNode @TO@ SingleVariableDeclaration@@ModelNode resourceModel @AT@ 7116 @LENGTH@ 9
------------------------INS SimpleName@@resourceModel @TO@ SingleVariableDeclaration@@ModelNode resourceModel @AT@ 7126 @LENGTH@ 13
---------------------INS SingleVariableDeclaration@@boolean marshallDefault @TO@ MethodDeclaration@@public, void, MethodName:marshallAsElement, AttributeDefinition attribute, ModelNode resourceModel, boolean marshallDefault, XMLStreamWriter writer, XMLStreamException,  @AT@ 7141 @LENGTH@ 23
------------------------INS PrimitiveType@@boolean @TO@ SingleVariableDeclaration@@boolean marshallDefault @AT@ 7141 @LENGTH@ 7
------------------------INS SimpleName@@marshallDefault @TO@ SingleVariableDeclaration@@boolean marshallDefault @AT@ 7149 @LENGTH@ 15
---------------------INS SingleVariableDeclaration@@XMLStreamWriter writer @TO@ MethodDeclaration@@public, void, MethodName:marshallAsElement, AttributeDefinition attribute, ModelNode resourceModel, boolean marshallDefault, XMLStreamWriter writer, XMLStreamException,  @AT@ 7166 @LENGTH@ 22
------------------------INS SimpleType@@XMLStreamWriter @TO@ SingleVariableDeclaration@@XMLStreamWriter writer @AT@ 7166 @LENGTH@ 15
------------------------INS SimpleName@@writer @TO@ SingleVariableDeclaration@@XMLStreamWriter writer @AT@ 7182 @LENGTH@ 6
---------------------INS SimpleType@@XMLStreamException @TO@ MethodDeclaration@@public, void, MethodName:marshallAsElement, AttributeDefinition attribute, ModelNode resourceModel, boolean marshallDefault, XMLStreamWriter writer, XMLStreamException,  @AT@ 7197 @LENGTH@ 18
---------------------INS IfStatement@@if (resourceModel.hasDefined(attribute.getName())) {  writer.writeStartElement(attribute.getXmlName());  String archive=resourceModel.get(attribute.getName()).asString();  if (archive.contains(ConnectorServices.RA_SERVICE_NAME_SEPARATOR)) {    writer.writeCharacters(archive.substring(0,archive.indexOf(ConnectorServices.RA_SERVICE_NAME_SEPARATOR)));  } else {    writer.writeCharacters(archive);  }  writer.writeEndElement();} @TO@ MethodDeclaration@@public, void, MethodName:marshallAsElement, AttributeDefinition attribute, ModelNode resourceModel, boolean marshallDefault, XMLStreamWriter writer, XMLStreamException,  @AT@ 7238 @LENGTH@ 640
------------------------INS MethodInvocation@@resourceModel.hasDefined(attribute.getName()) @TO@ IfStatement@@if (resourceModel.hasDefined(attribute.getName())) {  writer.writeStartElement(attribute.getXmlName());  String archive=resourceModel.get(attribute.getName()).asString();  if (archive.contains(ConnectorServices.RA_SERVICE_NAME_SEPARATOR)) {    writer.writeCharacters(archive.substring(0,archive.indexOf(ConnectorServices.RA_SERVICE_NAME_SEPARATOR)));  } else {    writer.writeCharacters(archive);  }  writer.writeEndElement();} @AT@ 7242 @LENGTH@ 45
---------------------------INS SimpleName@@Name:resourceModel @TO@ MethodInvocation@@resourceModel.hasDefined(attribute.getName()) @AT@ 7242 @LENGTH@ 13
---------------------------INS SimpleName@@MethodName:hasDefined:[attribute.getName()] @TO@ MethodInvocation@@resourceModel.hasDefined(attribute.getName()) @AT@ 7256 @LENGTH@ 31
------------------------------INS MethodInvocation@@attribute.getName() @TO@ SimpleName@@MethodName:hasDefined:[attribute.getName()] @AT@ 7267 @LENGTH@ 19
---------------------------------INS SimpleName@@Name:attribute @TO@ MethodInvocation@@attribute.getName() @AT@ 7267 @LENGTH@ 9
---------------------------------INS SimpleName@@MethodName:getName:[] @TO@ MethodInvocation@@attribute.getName() @AT@ 7277 @LENGTH@ 9
------------------------INS Block@@ThenBody:{  writer.writeStartElement(attribute.getXmlName());  String archive=resourceModel.get(attribute.getName()).asString();  if (archive.contains(ConnectorServices.RA_SERVICE_NAME_SEPARATOR)) {    writer.writeCharacters(archive.substring(0,archive.indexOf(ConnectorServices.RA_SERVICE_NAME_SEPARATOR)));  } else {    writer.writeCharacters(archive);  }  writer.writeEndElement();} @TO@ IfStatement@@if (resourceModel.hasDefined(attribute.getName())) {  writer.writeStartElement(attribute.getXmlName());  String archive=resourceModel.get(attribute.getName()).asString();  if (archive.contains(ConnectorServices.RA_SERVICE_NAME_SEPARATOR)) {    writer.writeCharacters(archive.substring(0,archive.indexOf(ConnectorServices.RA_SERVICE_NAME_SEPARATOR)));  } else {    writer.writeCharacters(archive);  }  writer.writeEndElement();} @AT@ 7289 @LENGTH@ 589
---------------------------INS ExpressionStatement@@MethodInvocation:writer.writeStartElement(attribute.getXmlName()) @TO@ Block@@ThenBody:{  writer.writeStartElement(attribute.getXmlName());  String archive=resourceModel.get(attribute.getName()).asString();  if (archive.contains(ConnectorServices.RA_SERVICE_NAME_SEPARATOR)) {    writer.writeCharacters(archive.substring(0,archive.indexOf(ConnectorServices.RA_SERVICE_NAME_SEPARATOR)));  } else {    writer.writeCharacters(archive);  }  writer.writeEndElement();} @AT@ 7315 @LENGTH@ 49
------------------------------INS MethodInvocation@@writer.writeStartElement(attribute.getXmlName()) @TO@ ExpressionStatement@@MethodInvocation:writer.writeStartElement(attribute.getXmlName()) @AT@ 7315 @LENGTH@ 48
---------------------------------INS SimpleName@@Name:writer @TO@ MethodInvocation@@writer.writeStartElement(attribute.getXmlName()) @AT@ 7315 @LENGTH@ 6
---------------------------------INS SimpleName@@MethodName:writeStartElement:[attribute.getXmlName()] @TO@ MethodInvocation@@writer.writeStartElement(attribute.getXmlName()) @AT@ 7322 @LENGTH@ 41
------------------------------------INS MethodInvocation@@attribute.getXmlName() @TO@ SimpleName@@MethodName:writeStartElement:[attribute.getXmlName()] @AT@ 7340 @LENGTH@ 22
---------------------------------------INS SimpleName@@Name:attribute @TO@ MethodInvocation@@attribute.getXmlName() @AT@ 7340 @LENGTH@ 9
---------------------------------------INS SimpleName@@MethodName:getXmlName:[] @TO@ MethodInvocation@@attribute.getXmlName() @AT@ 7350 @LENGTH@ 12
---------------------------INS VariableDeclarationStatement@@String archive=resourceModel.get(attribute.getName()).asString(); @TO@ Block@@ThenBody:{  writer.writeStartElement(attribute.getXmlName());  String archive=resourceModel.get(attribute.getName()).asString();  if (archive.contains(ConnectorServices.RA_SERVICE_NAME_SEPARATOR)) {    writer.writeCharacters(archive.substring(0,archive.indexOf(ConnectorServices.RA_SERVICE_NAME_SEPARATOR)));  } else {    writer.writeCharacters(archive);  }  writer.writeEndElement();} @AT@ 7389 @LENGTH@ 67
------------------------------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String archive=resourceModel.get(attribute.getName()).asString(); @AT@ 7389 @LENGTH@ 6
------------------------------INS VariableDeclarationFragment@@archive=resourceModel.get(attribute.getName()).asString() @TO@ VariableDeclarationStatement@@String archive=resourceModel.get(attribute.getName()).asString(); @AT@ 7396 @LENGTH@ 59
---------------------------------INS SimpleName@@archive @TO@ VariableDeclarationFragment@@archive=resourceModel.get(attribute.getName()).asString() @AT@ 7396 @LENGTH@ 7
---------------------------------INS MethodInvocation@@resourceModel.get(attribute.getName()).asString() @TO@ VariableDeclarationFragment@@archive=resourceModel.get(attribute.getName()).asString() @AT@ 7406 @LENGTH@ 49
------------------------------------INS MethodInvocation@@MethodName:get:[attribute.getName()] @TO@ MethodInvocation@@resourceModel.get(attribute.getName()).asString() @AT@ 7406 @LENGTH@ 38
---------------------------------------INS MethodInvocation@@attribute.getName() @TO@ MethodInvocation@@MethodName:get:[attribute.getName()] @AT@ 7424 @LENGTH@ 19
------------------------------------------INS SimpleName@@Name:attribute @TO@ MethodInvocation@@attribute.getName() @AT@ 7424 @LENGTH@ 9
------------------------------------------INS SimpleName@@MethodName:getName:[] @TO@ MethodInvocation@@attribute.getName() @AT@ 7434 @LENGTH@ 9
------------------------------------INS SimpleName@@Name:resourceModel @TO@ MethodInvocation@@resourceModel.get(attribute.getName()).asString() @AT@ 7406 @LENGTH@ 13
------------------------------------INS SimpleName@@MethodName:asString:[] @TO@ MethodInvocation@@resourceModel.get(attribute.getName()).asString() @AT@ 7445 @LENGTH@ 10
---------------------------INS IfStatement@@if (archive.contains(ConnectorServices.RA_SERVICE_NAME_SEPARATOR)) {  writer.writeCharacters(archive.substring(0,archive.indexOf(ConnectorServices.RA_SERVICE_NAME_SEPARATOR)));} else {  writer.writeCharacters(archive);} @TO@ Block@@ThenBody:{  writer.writeStartElement(attribute.getXmlName());  String archive=resourceModel.get(attribute.getName()).asString();  if (archive.contains(ConnectorServices.RA_SERVICE_NAME_SEPARATOR)) {    writer.writeCharacters(archive.substring(0,archive.indexOf(ConnectorServices.RA_SERVICE_NAME_SEPARATOR)));  } else {    writer.writeCharacters(archive);  }  writer.writeEndElement();} @AT@ 7481 @LENGTH@ 324
------------------------------INS MethodInvocation@@archive.contains(ConnectorServices.RA_SERVICE_NAME_SEPARATOR) @TO@ IfStatement@@if (archive.contains(ConnectorServices.RA_SERVICE_NAME_SEPARATOR)) {  writer.writeCharacters(archive.substring(0,archive.indexOf(ConnectorServices.RA_SERVICE_NAME_SEPARATOR)));} else {  writer.writeCharacters(archive);} @AT@ 7485 @LENGTH@ 61
---------------------------------INS SimpleName@@Name:archive @TO@ MethodInvocation@@archive.contains(ConnectorServices.RA_SERVICE_NAME_SEPARATOR) @AT@ 7485 @LENGTH@ 7
---------------------------------INS SimpleName@@MethodName:contains:[ConnectorServices.RA_SERVICE_NAME_SEPARATOR] @TO@ MethodInvocation@@archive.contains(ConnectorServices.RA_SERVICE_NAME_SEPARATOR) @AT@ 7493 @LENGTH@ 53
------------------------------------INS QualifiedName@@ConnectorServices.RA_SERVICE_NAME_SEPARATOR @TO@ SimpleName@@MethodName:contains:[ConnectorServices.RA_SERVICE_NAME_SEPARATOR] @AT@ 7502 @LENGTH@ 43
---------------------------------------INS SimpleName@@ConnectorServices @TO@ QualifiedName@@ConnectorServices.RA_SERVICE_NAME_SEPARATOR @AT@ 7502 @LENGTH@ 17
---------------------------------------INS SimpleName@@RA_SERVICE_NAME_SEPARATOR @TO@ QualifiedName@@ConnectorServices.RA_SERVICE_NAME_SEPARATOR @AT@ 7520 @LENGTH@ 25
------------------------------INS Block@@ThenBody:{  writer.writeCharacters(archive.substring(0,archive.indexOf(ConnectorServices.RA_SERVICE_NAME_SEPARATOR)));} @TO@ IfStatement@@if (archive.contains(ConnectorServices.RA_SERVICE_NAME_SEPARATOR)) {  writer.writeCharacters(archive.substring(0,archive.indexOf(ConnectorServices.RA_SERVICE_NAME_SEPARATOR)));} else {  writer.writeCharacters(archive);} @AT@ 7548 @LENGTH@ 163
---------------------------------INS ExpressionStatement@@MethodInvocation:writer.writeCharacters(archive.substring(0,archive.indexOf(ConnectorServices.RA_SERVICE_NAME_SEPARATOR))) @TO@ Block@@ThenBody:{  writer.writeCharacters(archive.substring(0,archive.indexOf(ConnectorServices.RA_SERVICE_NAME_SEPARATOR)));} @AT@ 7578 @LENGTH@ 107
------------------------------------INS MethodInvocation@@writer.writeCharacters(archive.substring(0,archive.indexOf(ConnectorServices.RA_SERVICE_NAME_SEPARATOR))) @TO@ ExpressionStatement@@MethodInvocation:writer.writeCharacters(archive.substring(0,archive.indexOf(ConnectorServices.RA_SERVICE_NAME_SEPARATOR))) @AT@ 7578 @LENGTH@ 106
---------------------------------------INS SimpleName@@Name:writer @TO@ MethodInvocation@@writer.writeCharacters(archive.substring(0,archive.indexOf(ConnectorServices.RA_SERVICE_NAME_SEPARATOR))) @AT@ 7578 @LENGTH@ 6
---------------------------------------INS SimpleName@@MethodName:writeCharacters:[archive.substring(0,archive.indexOf(ConnectorServices.RA_SERVICE_NAME_SEPARATOR))] @TO@ MethodInvocation@@writer.writeCharacters(archive.substring(0,archive.indexOf(ConnectorServices.RA_SERVICE_NAME_SEPARATOR))) @AT@ 7585 @LENGTH@ 99
------------------------------------------INS MethodInvocation@@archive.substring(0,archive.indexOf(ConnectorServices.RA_SERVICE_NAME_SEPARATOR)) @TO@ SimpleName@@MethodName:writeCharacters:[archive.substring(0,archive.indexOf(ConnectorServices.RA_SERVICE_NAME_SEPARATOR))] @AT@ 7601 @LENGTH@ 82
---------------------------------------------INS SimpleName@@Name:archive @TO@ MethodInvocation@@archive.substring(0,archive.indexOf(ConnectorServices.RA_SERVICE_NAME_SEPARATOR)) @AT@ 7601 @LENGTH@ 7
---------------------------------------------INS SimpleName@@MethodName:substring:[0, archive.indexOf(ConnectorServices.RA_SERVICE_NAME_SEPARATOR)] @TO@ MethodInvocation@@archive.substring(0,archive.indexOf(ConnectorServices.RA_SERVICE_NAME_SEPARATOR)) @AT@ 7609 @LENGTH@ 74
------------------------------------------------INS NumberLiteral@@0 @TO@ SimpleName@@MethodName:substring:[0, archive.indexOf(ConnectorServices.RA_SERVICE_NAME_SEPARATOR)] @AT@ 7619 @LENGTH@ 1
------------------------------------------------INS MethodInvocation@@archive.indexOf(ConnectorServices.RA_SERVICE_NAME_SEPARATOR) @TO@ SimpleName@@MethodName:substring:[0, archive.indexOf(ConnectorServices.RA_SERVICE_NAME_SEPARATOR)] @AT@ 7622 @LENGTH@ 60
---------------------------------------------------INS SimpleName@@Name:archive @TO@ MethodInvocation@@archive.indexOf(ConnectorServices.RA_SERVICE_NAME_SEPARATOR) @AT@ 7622 @LENGTH@ 7
---------------------------------------------------INS SimpleName@@MethodName:indexOf:[ConnectorServices.RA_SERVICE_NAME_SEPARATOR] @TO@ MethodInvocation@@archive.indexOf(ConnectorServices.RA_SERVICE_NAME_SEPARATOR) @AT@ 7630 @LENGTH@ 52
------------------------------------------------------INS QualifiedName@@ConnectorServices.RA_SERVICE_NAME_SEPARATOR @TO@ SimpleName@@MethodName:indexOf:[ConnectorServices.RA_SERVICE_NAME_SEPARATOR] @AT@ 7638 @LENGTH@ 43
---------------------------------------------------------INS SimpleName@@ConnectorServices @TO@ QualifiedName@@ConnectorServices.RA_SERVICE_NAME_SEPARATOR @AT@ 7638 @LENGTH@ 17
---------------------------------------------------------INS SimpleName@@RA_SERVICE_NAME_SEPARATOR @TO@ QualifiedName@@ConnectorServices.RA_SERVICE_NAME_SEPARATOR @AT@ 7656 @LENGTH@ 25
------------------------------INS Block@@ElseBody:{  writer.writeCharacters(archive);} @TO@ IfStatement@@if (archive.contains(ConnectorServices.RA_SERVICE_NAME_SEPARATOR)) {  writer.writeCharacters(archive.substring(0,archive.indexOf(ConnectorServices.RA_SERVICE_NAME_SEPARATOR)));} else {  writer.writeCharacters(archive);} @AT@ 7717 @LENGTH@ 88
---------------------------------INS ExpressionStatement@@MethodInvocation:writer.writeCharacters(archive) @TO@ Block@@ElseBody:{  writer.writeCharacters(archive);} @AT@ 7747 @LENGTH@ 32
------------------------------------INS MethodInvocation@@writer.writeCharacters(archive) @TO@ ExpressionStatement@@MethodInvocation:writer.writeCharacters(archive) @AT@ 7747 @LENGTH@ 31
---------------------------------------INS SimpleName@@Name:writer @TO@ MethodInvocation@@writer.writeCharacters(archive) @AT@ 7747 @LENGTH@ 6
---------------------------------------INS SimpleName@@MethodName:writeCharacters:[archive] @TO@ MethodInvocation@@writer.writeCharacters(archive) @AT@ 7754 @LENGTH@ 24
------------------------------------------INS SimpleName@@archive @TO@ SimpleName@@MethodName:writeCharacters:[archive] @AT@ 7770 @LENGTH@ 7
---------------------------INS ExpressionStatement@@MethodInvocation:writer.writeEndElement() @TO@ Block@@ThenBody:{  writer.writeStartElement(attribute.getXmlName());  String archive=resourceModel.get(attribute.getName()).asString();  if (archive.contains(ConnectorServices.RA_SERVICE_NAME_SEPARATOR)) {    writer.writeCharacters(archive.substring(0,archive.indexOf(ConnectorServices.RA_SERVICE_NAME_SEPARATOR)));  } else {    writer.writeCharacters(archive);  }  writer.writeEndElement();} @AT@ 7831 @LENGTH@ 25
------------------------------INS MethodInvocation@@writer.writeEndElement() @TO@ ExpressionStatement@@MethodInvocation:writer.writeEndElement() @AT@ 7831 @LENGTH@ 24
---------------------------------INS SimpleName@@Name:writer @TO@ MethodInvocation@@writer.writeEndElement() @AT@ 7831 @LENGTH@ 6
---------------------------------INS SimpleName@@MethodName:writeEndElement:[] @TO@ MethodInvocation@@writer.writeEndElement() @AT@ 7838 @LENGTH@ 17


UPD TypeDeclaration@@[public]StringEncoderComparator, [Comparator] @TO@ [@SuppressWarnings("rawtypes"), public]StringEncoderComparator, [Comparator] @AT@ 1206 @LENGTH@ 1756
---INS SingleMemberAnnotation@@@SuppressWarnings("rawtypes") @TO@ TypeDeclaration@@[public]StringEncoderComparator, [Comparator] @AT@ 1206 @LENGTH@ 29


UPD MethodDeclaration@@Long, MethodName:convertAndSend, String destination, Object message,  @TO@ void, MethodName:convertAndSend, String destination, Object message,  @AT@ 3663 @LENGTH@ 51
---DEL SimpleType@@Long @AT@ 3658 @LENGTH@ 4
---INS PrimitiveType@@void @TO@ MethodDeclaration@@Long, MethodName:convertAndSend, String destination, Object message,  @AT@ 3658 @LENGTH@ 4


UPD ExpressionStatement@@MethodInvocation:node.get("abc").set(BigInteger.valueOf(10)) @TO@ MethodInvocation:node.get("abc").set(new BigInteger(String.valueOf(Long.MAX_VALUE) + "0")) @AT@ 7735 @LENGTH@ 44
---UPD MethodInvocation@@node.get("abc").set(BigInteger.valueOf(10)) @TO@ node.get("abc").set(new BigInteger(String.valueOf(Long.MAX_VALUE) + "0")) @AT@ 7735 @LENGTH@ 43
------UPD SimpleName@@MethodName:set:[BigInteger.valueOf(10)] @TO@ MethodName:set:[new BigInteger(String.valueOf(Long.MAX_VALUE) + "0")] @AT@ 7751 @LENGTH@ 27
---------DEL MethodInvocation@@BigInteger.valueOf(10) @AT@ 7755 @LENGTH@ 22
---------INS ClassInstanceCreation@@BigInteger[String.valueOf(Long.MAX_VALUE) + "0"] @TO@ SimpleName@@MethodName:set:[BigInteger.valueOf(10)] @AT@ 8063 @LENGTH@ 52
------------INS New@@new @TO@ ClassInstanceCreation@@BigInteger[String.valueOf(Long.MAX_VALUE) + "0"] @AT@ 8063 @LENGTH@ 3
------------INS SimpleType@@BigInteger @TO@ ClassInstanceCreation@@BigInteger[String.valueOf(Long.MAX_VALUE) + "0"] @AT@ 8067 @LENGTH@ 10
------------INS InfixExpression@@String.valueOf(Long.MAX_VALUE) + "0" @TO@ ClassInstanceCreation@@BigInteger[String.valueOf(Long.MAX_VALUE) + "0"] @AT@ 8078 @LENGTH@ 36
---------------INS MethodInvocation@@String.valueOf(Long.MAX_VALUE) @TO@ InfixExpression@@String.valueOf(Long.MAX_VALUE) + "0" @AT@ 8078 @LENGTH@ 30
------------------MOV SimpleName@@Name:BigInteger @TO@ MethodInvocation@@String.valueOf(Long.MAX_VALUE) @AT@ 7755 @LENGTH@ 10
------------------MOV SimpleName@@MethodName:valueOf:[10] @TO@ MethodInvocation@@String.valueOf(Long.MAX_VALUE) @AT@ 7766 @LENGTH@ 11
---------------------DEL NumberLiteral@@10 @AT@ 7774 @LENGTH@ 2
---------------------INS QualifiedName@@Long.MAX_VALUE @TO@ SimpleName@@MethodName:valueOf:[10] @AT@ 8093 @LENGTH@ 14
------------------------INS SimpleName@@Long @TO@ QualifiedName@@Long.MAX_VALUE @AT@ 8093 @LENGTH@ 4
------------------------INS SimpleName@@MAX_VALUE @TO@ QualifiedName@@Long.MAX_VALUE @AT@ 8098 @LENGTH@ 9
---------------INS Operator@@+ @TO@ InfixExpression@@String.valueOf(Long.MAX_VALUE) + "0" @AT@ 8108 @LENGTH@ 1
---------------INS StringLiteral@@"0" @TO@ InfixExpression@@String.valueOf(Long.MAX_VALUE) + "0" @AT@ 8111 @LENGTH@ 3


DEL MethodDeclaration@@public, void, MethodName:testPersist, Exception,  @AT@ 823 @LENGTH@ 47
---DEL Modifier@@public @AT@ 823 @LENGTH@ 6
---DEL PrimitiveType@@void @AT@ 830 @LENGTH@ 4
---DEL SimpleName@@MethodName:testPersist @AT@ 835 @LENGTH@ 11
---DEL SimpleType@@Exception @AT@ 856 @LENGTH@ 9


UPD ExpressionStatement@@MethodInvocation:context.restartRequired() @TO@ MethodInvocation:context.reloadRequired() @AT@ 2671 @LENGTH@ 26
---UPD MethodInvocation@@context.restartRequired() @TO@ context.reloadRequired() @AT@ 2671 @LENGTH@ 25
------UPD SimpleName@@MethodName:restartRequired:[] @TO@ MethodName:reloadRequired:[] @AT@ 2679 @LENGTH@ 17


UPD EnhancedForStatement@@for (String s : sa) {  String key=s.trim().toLowerCase(Locale.ENGLISH);  action=Action.forName(key);  if (action == null) {    throw MESSAGES.invalidPermissionAction(s);  }  int i=action.mask;  mask|=i;} @TO@ for (String s : sa) {  action=Action.forName(s.trim());  if (action == null) {    throw MESSAGES.invalidPermissionAction(s);  }  int i=action.mask;  mask|=i;} @AT@ 15388 @LENGTH@ 299
---DEL VariableDeclarationStatement@@String key=s.trim().toLowerCase(Locale.ENGLISH); @AT@ 15422 @LENGTH@ 50
------DEL SimpleType@@String @AT@ 15422 @LENGTH@ 6
------DEL VariableDeclarationFragment@@key=s.trim().toLowerCase(Locale.ENGLISH) @AT@ 15429 @LENGTH@ 42
---------DEL SimpleName@@key @AT@ 15429 @LENGTH@ 3
---------DEL MethodInvocation@@s.trim().toLowerCase(Locale.ENGLISH) @AT@ 15435 @LENGTH@ 36
------------DEL MethodInvocation@@MethodName:trim:[] @AT@ 15435 @LENGTH@ 8
------------DEL SimpleName@@Name:s @AT@ 15435 @LENGTH@ 1
------------DEL SimpleName@@MethodName:toLowerCase:[Locale.ENGLISH] @AT@ 15444 @LENGTH@ 27
---------------DEL QualifiedName@@Locale.ENGLISH @AT@ 15456 @LENGTH@ 14
------------------DEL SimpleName@@Locale @AT@ 15456 @LENGTH@ 6
------------------DEL SimpleName@@ENGLISH @AT@ 15463 @LENGTH@ 7
---UPD ExpressionStatement@@Assignment:action=Action.forName(key) @TO@ Assignment:action=Action.forName(s.trim()) @AT@ 15485 @LENGTH@ 29
------UPD Assignment@@action=Action.forName(key) @TO@ action=Action.forName(s.trim()) @AT@ 15485 @LENGTH@ 28
---------UPD MethodInvocation@@Action.forName(key) @TO@ Action.forName(s.trim()) @AT@ 15494 @LENGTH@ 19
------------UPD SimpleName@@MethodName:forName:[key] @TO@ MethodName:forName:[s.trim()] @AT@ 15501 @LENGTH@ 12
---------------INS MethodInvocation@@s.trim() @TO@ SimpleName@@MethodName:forName:[key] @AT@ 15431 @LENGTH@ 8
------------------INS SimpleName@@Name:s @TO@ MethodInvocation@@s.trim() @AT@ 15431 @LENGTH@ 1
------------------INS SimpleName@@MethodName:trim:[] @TO@ MethodInvocation@@s.trim() @AT@ 15433 @LENGTH@ 6
---------------DEL SimpleName@@key @AT@ 15509 @LENGTH@ 3


UPD TryStatement@@try {  properties.store(new FileWriter(outFile),"Generated by camel-package-maven-plugin");  getLog().info("Generated " + outFile + " containing the Camel "+ (files.length > 1 ? "components " : "component ")+ names);} catch (IOException e) {  throw new MojoExecutionException("Failed to write properties to " + outFile + ". Reason: "+ e,e);} @TO@ try {  properties.store(new FileWriter(outFile),"Generated by camel-package-maven-plugin");  getLog().info("Generated " + outFile + " containing the Camel "+ (files.length > 1 ? "components " : "component ")+ names);  if (projectHelper != null) {    projectHelper.attachArtifact(this.project,"properties","camelComponent",outFile);  }} catch (IOException e) {  throw new MojoExecutionException("Failed to write properties to " + outFile + ". Reason: "+ e,e);} @AT@ 3386 @LENGTH@ 437
---INS IfStatement@@if (projectHelper != null) {  projectHelper.attachArtifact(this.project,"properties","camelComponent",outFile);} @TO@ TryStatement@@try {  properties.store(new FileWriter(outFile),"Generated by camel-package-maven-plugin");  getLog().info("Generated " + outFile + " containing the Camel "+ (files.length > 1 ? "components " : "component ")+ names);} catch (IOException e) {  throw new MojoExecutionException("Failed to write properties to " + outFile + ". Reason: "+ e,e);} @AT@ 3849 @LENGTH@ 160
------INS InfixExpression@@projectHelper != null @TO@ IfStatement@@if (projectHelper != null) {  projectHelper.attachArtifact(this.project,"properties","camelComponent",outFile);} @AT@ 3853 @LENGTH@ 21
---------INS SimpleName@@projectHelper @TO@ InfixExpression@@projectHelper != null @AT@ 3853 @LENGTH@ 13
---------INS Operator@@!= @TO@ InfixExpression@@projectHelper != null @AT@ 3866 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@projectHelper != null @AT@ 3870 @LENGTH@ 4
------INS Block@@ThenBody:{  projectHelper.attachArtifact(this.project,"properties","camelComponent",outFile);} @TO@ IfStatement@@if (projectHelper != null) {  projectHelper.attachArtifact(this.project,"properties","camelComponent",outFile);} @AT@ 3876 @LENGTH@ 133
---------INS ExpressionStatement@@MethodInvocation:projectHelper.attachArtifact(this.project,"properties","camelComponent",outFile) @TO@ Block@@ThenBody:{  projectHelper.attachArtifact(this.project,"properties","camelComponent",outFile);} @AT@ 3902 @LENGTH@ 85
------------INS MethodInvocation@@projectHelper.attachArtifact(this.project,"properties","camelComponent",outFile) @TO@ ExpressionStatement@@MethodInvocation:projectHelper.attachArtifact(this.project,"properties","camelComponent",outFile) @AT@ 3902 @LENGTH@ 84
---------------INS SimpleName@@Name:projectHelper @TO@ MethodInvocation@@projectHelper.attachArtifact(this.project,"properties","camelComponent",outFile) @AT@ 3902 @LENGTH@ 13
---------------INS SimpleName@@MethodName:attachArtifact:[this.project, "properties", "camelComponent", outFile] @TO@ MethodInvocation@@projectHelper.attachArtifact(this.project,"properties","camelComponent",outFile) @AT@ 3916 @LENGTH@ 70
------------------INS FieldAccess@@this.project @TO@ SimpleName@@MethodName:attachArtifact:[this.project, "properties", "camelComponent", outFile] @AT@ 3932 @LENGTH@ 12
---------------------INS ThisExpression@@this @TO@ FieldAccess@@this.project @AT@ 3932 @LENGTH@ 4
---------------------INS SimpleName@@project @TO@ FieldAccess@@this.project @AT@ 3937 @LENGTH@ 7
------------------INS StringLiteral@@"properties" @TO@ SimpleName@@MethodName:attachArtifact:[this.project, "properties", "camelComponent", outFile] @AT@ 3946 @LENGTH@ 12
------------------INS StringLiteral@@"camelComponent" @TO@ SimpleName@@MethodName:attachArtifact:[this.project, "properties", "camelComponent", outFile] @AT@ 3960 @LENGTH@ 16
------------------INS SimpleName@@outFile @TO@ SimpleName@@MethodName:attachArtifact:[this.project, "properties", "camelComponent", outFile] @AT@ 3978 @LENGTH@ 7


UPD EnhancedForStatement@@for (final ModelNode step : operation.require(STEPS).asList()) {  i++;  final String operationName=step.require(OP).asString();  final PathAddress stepAddress=step.hasDefined(OP_ADDR) ? PathAddress.pathAddress(step.require(OP_ADDR)) : PathAddress.EMPTY_ADDRESS;  final TransformedOperation result;  if (stepAddress.size() == 0 && COMPOSITE.equals(operationName)) {    result=transformOperation(context,PathAddress.EMPTY_ADDRESS,step,false);  } else {    final OperationTransformer transformer=target.resolveTransformer(stepAddress,operationName);    result=transformer.transformOperation(context,stepAddress,step);  }  composite.get(STEPS).add(result.getTransformedOperation());  steps.add(new Step(i,result));} @TO@ for (final ModelNode step : operation.require(STEPS).asList()) {  i++;  final String operationName=step.require(OP).asString();  final PathAddress stepAddress=step.hasDefined(OP_ADDR) ? PathAddress.pathAddress(step.require(OP_ADDR)) : PathAddress.EMPTY_ADDRESS;  final TransformedOperation result;  if (stepAddress.size() == 0 && COMPOSITE.equals(operationName)) {    result=transformOperation(context,PathAddress.EMPTY_ADDRESS,step,false);  } else {    final OperationTransformer transformer=target.resolveTransformer(stepAddress,operationName);    result=transformer.transformOperation(context,stepAddress,step);  }  final ModelNode transformedOperation=result.getTransformedOperation();  if (transformedOperation != null) {    composite.get(STEPS).add(transformedOperation);    steps.add(new Step(i,result));  }} @AT@ 2263 @LENGTH@ 922
---INS VariableDeclarationStatement@@final ModelNode transformedOperation=result.getTransformedOperation(); @TO@ EnhancedForStatement@@for (final ModelNode step : operation.require(STEPS).asList()) {  i++;  final String operationName=step.require(OP).asString();  final PathAddress stepAddress=step.hasDefined(OP_ADDR) ? PathAddress.pathAddress(step.require(OP_ADDR)) : PathAddress.EMPTY_ADDRESS;  final TransformedOperation result;  if (stepAddress.size() == 0 && COMPOSITE.equals(operationName)) {    result=transformOperation(context,PathAddress.EMPTY_ADDRESS,step,false);  } else {    final OperationTransformer transformer=target.resolveTransformer(stepAddress,operationName);    result=transformer.transformOperation(context,stepAddress,step);  }  composite.get(STEPS).add(result.getTransformedOperation());  steps.add(new Step(i,result));} @AT@ 3072 @LENGTH@ 72
------INS Modifier@@final @TO@ VariableDeclarationStatement@@final ModelNode transformedOperation=result.getTransformedOperation(); @AT@ 3072 @LENGTH@ 5
------INS SimpleType@@ModelNode @TO@ VariableDeclarationStatement@@final ModelNode transformedOperation=result.getTransformedOperation(); @AT@ 3078 @LENGTH@ 9
------INS VariableDeclarationFragment@@transformedOperation=result.getTransformedOperation() @TO@ VariableDeclarationStatement@@final ModelNode transformedOperation=result.getTransformedOperation(); @AT@ 3088 @LENGTH@ 55
---------INS SimpleName@@transformedOperation @TO@ VariableDeclarationFragment@@transformedOperation=result.getTransformedOperation() @AT@ 3088 @LENGTH@ 20
---------INS MethodInvocation@@result.getTransformedOperation() @TO@ VariableDeclarationFragment@@transformedOperation=result.getTransformedOperation() @AT@ 3111 @LENGTH@ 32
------------INS SimpleName@@Name:result @TO@ MethodInvocation@@result.getTransformedOperation() @AT@ 3111 @LENGTH@ 6
------------INS SimpleName@@MethodName:getTransformedOperation:[] @TO@ MethodInvocation@@result.getTransformedOperation() @AT@ 3118 @LENGTH@ 25
---DEL ExpressionStatement@@MethodInvocation:composite.get(STEPS).add(result.getTransformedOperation()) @AT@ 3072 @LENGTH@ 59
---INS IfStatement@@if (transformedOperation != null) {  composite.get(STEPS).add(transformedOperation);  steps.add(new Step(i,result));} @TO@ EnhancedForStatement@@for (final ModelNode step : operation.require(STEPS).asList()) {  i++;  final String operationName=step.require(OP).asString();  final PathAddress stepAddress=step.hasDefined(OP_ADDR) ? PathAddress.pathAddress(step.require(OP_ADDR)) : PathAddress.EMPTY_ADDRESS;  final TransformedOperation result;  if (stepAddress.size() == 0 && COMPOSITE.equals(operationName)) {    result=transformOperation(context,PathAddress.EMPTY_ADDRESS,step,false);  } else {    final OperationTransformer transformer=target.resolveTransformer(stepAddress,operationName);    result=transformer.transformOperation(context,stepAddress,step);  }  composite.get(STEPS).add(result.getTransformedOperation());  steps.add(new Step(i,result));} @AT@ 3157 @LENGTH@ 161
------INS InfixExpression@@transformedOperation != null @TO@ IfStatement@@if (transformedOperation != null) {  composite.get(STEPS).add(transformedOperation);  steps.add(new Step(i,result));} @AT@ 3161 @LENGTH@ 28
---------INS SimpleName@@transformedOperation @TO@ InfixExpression@@transformedOperation != null @AT@ 3161 @LENGTH@ 20
---------INS Operator@@!= @TO@ InfixExpression@@transformedOperation != null @AT@ 3181 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@transformedOperation != null @AT@ 3185 @LENGTH@ 4
------INS Block@@ThenBody:{  composite.get(STEPS).add(transformedOperation);  steps.add(new Step(i,result));} @TO@ IfStatement@@if (transformedOperation != null) {  composite.get(STEPS).add(transformedOperation);  steps.add(new Step(i,result));} @AT@ 3191 @LENGTH@ 127
---------MOV ExpressionStatement@@MethodInvocation:steps.add(new Step(i,result)) @TO@ Block@@ThenBody:{  composite.get(STEPS).add(transformedOperation);  steps.add(new Step(i,result));} @AT@ 3144 @LENGTH@ 31
---------INS ExpressionStatement@@MethodInvocation:composite.get(STEPS).add(transformedOperation) @TO@ Block@@ThenBody:{  composite.get(STEPS).add(transformedOperation);  steps.add(new Step(i,result));} @AT@ 3209 @LENGTH@ 47
------------MOV MethodInvocation@@composite.get(STEPS).add(result.getTransformedOperation()) @TO@ ExpressionStatement@@MethodInvocation:composite.get(STEPS).add(transformedOperation) @AT@ 3072 @LENGTH@ 58
---------------UPD SimpleName@@MethodName:add:[result.getTransformedOperation()] @TO@ MethodName:add:[transformedOperation] @AT@ 3093 @LENGTH@ 37
------------------DEL MethodInvocation@@result.getTransformedOperation() @AT@ 3097 @LENGTH@ 32
---------------------DEL SimpleName@@Name:result @AT@ 3097 @LENGTH@ 6
---------------------DEL SimpleName@@MethodName:getTransformedOperation:[] @AT@ 3104 @LENGTH@ 25
------------------INS SimpleName@@transformedOperation @TO@ SimpleName@@MethodName:add:[result.getTransformedOperation()] @AT@ 3234 @LENGTH@ 20


INS IfStatement@@if (closed) {  return;} @TO@ MethodDeclaration@@public, void, MethodName:close, IOException,  @AT@ 6741 @LENGTH@ 42
---INS SimpleName@@closed @TO@ IfStatement@@if (closed) {  return;} @AT@ 6744 @LENGTH@ 6
---INS Block@@ThenBody:{  return;} @TO@ IfStatement@@if (closed) {  return;} @AT@ 6752 @LENGTH@ 31
------INS ReturnStatement@@ @TO@ Block@@ThenBody:{  return;} @AT@ 6766 @LENGTH@ 7


UPD SwitchStatement@@switch (year) {case 2107:  assertEquals(zipTime,year + "-01-01/00:00:02 +0000");assertEquals(modTime,"1970-11-24/17:31:45 +0000");assertEquals(accTime,"1970-11-24/17:31:47 +0000");break;case 2108:assertEquals(zipTime,year + "-01-01/00:00:02 +0000");assertEquals(modTime,"1971-11-24/17:31:45 +0000");assertEquals(accTime,"1971-11-24/17:31:47 +0000");break;case 2109:assertEquals(zipTime,"1981-01-01/00:00:02 +0000");assertEquals(modTime,"1972-11-24/17:31:45 +0000");assertEquals(accTime,"1972-11-24/17:31:47 +0000");break;default :if (year < 1980) {assertEquals(zipTime,"1980-01-01/08:00:00 +0000");} else {assertEquals(zipTime,year + "-01-01/00:00:02 +0000");}assertEquals(modTime,year + "-01-01/00:00:01 +0000");assertEquals(accTime,year + "-01-01/00:00:03 +0000");break;} @TO@ switch (year) {case 2107:  assertEquals(year + "-01-01/00:00:02 +0000",zipTime);assertEquals("1970-11-24/17:31:45 +0000",modTime);assertEquals("1970-11-24/17:31:47 +0000",accTime);break;case 2108:assertEquals(year + "-01-01/00:00:02 +0000",zipTime);assertEquals("1971-11-24/17:31:45 +0000",modTime);assertEquals("1971-11-24/17:31:47 +0000",accTime);break;case 2109:assertEquals("1981-01-01/00:00:02 +0000",zipTime);assertEquals("1972-11-24/17:31:45 +0000",modTime);assertEquals("1972-11-24/17:31:47 +0000",accTime);break;default :if (year < 1980) {assertEquals("1980-01-01/08:00:00 +0000",zipTime);} else {assertEquals(year + "-01-01/00:00:02 +0000",zipTime);}assertEquals(year + "-01-01/00:00:01 +0000",modTime);assertEquals(year + "-01-01/00:00:03 +0000",accTime);break;} @AT@ 4514 @LENGTH@ 2571
---UPD ExpressionStatement@@MethodInvocation:assertEquals(zipTime,year + "-01-01/00:00:02 +0000") @TO@ MethodInvocation:assertEquals(year + "-01-01/00:00:02 +0000",zipTime) @AT@ 4665 @LENGTH@ 54
------UPD MethodInvocation@@assertEquals(zipTime,year + "-01-01/00:00:02 +0000") @TO@ assertEquals(year + "-01-01/00:00:02 +0000",zipTime) @AT@ 4665 @LENGTH@ 53
---------UPD SimpleName@@MethodName:assertEquals:[zipTime, year + "-01-01/00:00:02 +0000"] @TO@ MethodName:assertEquals:[year + "-01-01/00:00:02 +0000", zipTime] @AT@ 4665 @LENGTH@ 53
------------DEL SimpleName@@zipTime @AT@ 4678 @LENGTH@ 7
------------INS SimpleName@@zipTime @TO@ SimpleName@@MethodName:assertEquals:[zipTime, year + "-01-01/00:00:02 +0000"] @AT@ 4710 @LENGTH@ 7
---UPD ExpressionStatement@@MethodInvocation:assertEquals(modTime,"1970-11-24/17:31:45 +0000") @TO@ MethodInvocation:assertEquals("1970-11-24/17:31:45 +0000",modTime) @AT@ 4822 @LENGTH@ 51
------UPD MethodInvocation@@assertEquals(modTime,"1970-11-24/17:31:45 +0000") @TO@ assertEquals("1970-11-24/17:31:45 +0000",modTime) @AT@ 4822 @LENGTH@ 50
---------UPD SimpleName@@MethodName:assertEquals:[modTime, "1970-11-24/17:31:45 +0000"] @TO@ MethodName:assertEquals:["1970-11-24/17:31:45 +0000", modTime] @AT@ 4822 @LENGTH@ 50
------------INS StringLiteral@@"1970-11-24/17:31:45 +0000" @TO@ SimpleName@@MethodName:assertEquals:[modTime, "1970-11-24/17:31:45 +0000"] @AT@ 4835 @LENGTH@ 27
------------DEL StringLiteral@@"1970-11-24/17:31:45 +0000" @AT@ 4844 @LENGTH@ 27
---UPD ExpressionStatement@@MethodInvocation:assertEquals(accTime,"1970-11-24/17:31:47 +0000") @TO@ MethodInvocation:assertEquals("1970-11-24/17:31:47 +0000",accTime) @AT@ 4906 @LENGTH@ 51
------UPD MethodInvocation@@assertEquals(accTime,"1970-11-24/17:31:47 +0000") @TO@ assertEquals("1970-11-24/17:31:47 +0000",accTime) @AT@ 4906 @LENGTH@ 50
---------UPD SimpleName@@MethodName:assertEquals:[accTime, "1970-11-24/17:31:47 +0000"] @TO@ MethodName:assertEquals:["1970-11-24/17:31:47 +0000", accTime] @AT@ 4906 @LENGTH@ 50
------------INS StringLiteral@@"1970-11-24/17:31:47 +0000" @TO@ SimpleName@@MethodName:assertEquals:[accTime, "1970-11-24/17:31:47 +0000"] @AT@ 4919 @LENGTH@ 27
------------DEL StringLiteral@@"1970-11-24/17:31:47 +0000" @AT@ 4928 @LENGTH@ 27
---UPD ExpressionStatement@@MethodInvocation:assertEquals(zipTime,year + "-01-01/00:00:02 +0000") @TO@ MethodInvocation:assertEquals(year + "-01-01/00:00:02 +0000",zipTime) @AT@ 5329 @LENGTH@ 54
------UPD MethodInvocation@@assertEquals(zipTime,year + "-01-01/00:00:02 +0000") @TO@ assertEquals(year + "-01-01/00:00:02 +0000",zipTime) @AT@ 5329 @LENGTH@ 53
---------UPD SimpleName@@MethodName:assertEquals:[zipTime, year + "-01-01/00:00:02 +0000"] @TO@ MethodName:assertEquals:[year + "-01-01/00:00:02 +0000", zipTime] @AT@ 5329 @LENGTH@ 53
------------DEL SimpleName@@zipTime @AT@ 5342 @LENGTH@ 7
------------INS SimpleName@@zipTime @TO@ SimpleName@@MethodName:assertEquals:[zipTime, year + "-01-01/00:00:02 +0000"] @AT@ 5374 @LENGTH@ 7
---UPD ExpressionStatement@@MethodInvocation:assertEquals(modTime,"1971-11-24/17:31:45 +0000") @TO@ MethodInvocation:assertEquals("1971-11-24/17:31:45 +0000",modTime) @AT@ 5498 @LENGTH@ 51
------UPD MethodInvocation@@assertEquals(modTime,"1971-11-24/17:31:45 +0000") @TO@ assertEquals("1971-11-24/17:31:45 +0000",modTime) @AT@ 5498 @LENGTH@ 50
---------UPD SimpleName@@MethodName:assertEquals:[modTime, "1971-11-24/17:31:45 +0000"] @TO@ MethodName:assertEquals:["1971-11-24/17:31:45 +0000", modTime] @AT@ 5498 @LENGTH@ 50
------------INS StringLiteral@@"1971-11-24/17:31:45 +0000" @TO@ SimpleName@@MethodName:assertEquals:[modTime, "1971-11-24/17:31:45 +0000"] @AT@ 5511 @LENGTH@ 27
------------DEL StringLiteral@@"1971-11-24/17:31:45 +0000" @AT@ 5520 @LENGTH@ 27
---UPD ExpressionStatement@@MethodInvocation:assertEquals(accTime,"1971-11-24/17:31:47 +0000") @TO@ MethodInvocation:assertEquals("1971-11-24/17:31:47 +0000",accTime) @AT@ 5582 @LENGTH@ 51
------UPD MethodInvocation@@assertEquals(accTime,"1971-11-24/17:31:47 +0000") @TO@ assertEquals("1971-11-24/17:31:47 +0000",accTime) @AT@ 5582 @LENGTH@ 50
---------UPD SimpleName@@MethodName:assertEquals:[accTime, "1971-11-24/17:31:47 +0000"] @TO@ MethodName:assertEquals:["1971-11-24/17:31:47 +0000", accTime] @AT@ 5582 @LENGTH@ 50
------------INS StringLiteral@@"1971-11-24/17:31:47 +0000" @TO@ SimpleName@@MethodName:assertEquals:[accTime, "1971-11-24/17:31:47 +0000"] @AT@ 5595 @LENGTH@ 27
------------DEL StringLiteral@@"1971-11-24/17:31:47 +0000" @AT@ 5604 @LENGTH@ 27
---UPD ExpressionStatement@@MethodInvocation:assertEquals(zipTime,"1981-01-01/00:00:02 +0000") @TO@ MethodInvocation:assertEquals("1981-01-01/00:00:02 +0000",zipTime) @AT@ 5825 @LENGTH@ 51
------UPD MethodInvocation@@assertEquals(zipTime,"1981-01-01/00:00:02 +0000") @TO@ assertEquals("1981-01-01/00:00:02 +0000",zipTime) @AT@ 5825 @LENGTH@ 50
---------UPD SimpleName@@MethodName:assertEquals:[zipTime, "1981-01-01/00:00:02 +0000"] @TO@ MethodName:assertEquals:["1981-01-01/00:00:02 +0000", zipTime] @AT@ 5825 @LENGTH@ 50
------------INS StringLiteral@@"1981-01-01/00:00:02 +0000" @TO@ SimpleName@@MethodName:assertEquals:[zipTime, "1981-01-01/00:00:02 +0000"] @AT@ 5838 @LENGTH@ 27
------------DEL StringLiteral@@"1981-01-01/00:00:02 +0000" @AT@ 5847 @LENGTH@ 27
---UPD ExpressionStatement@@MethodInvocation:assertEquals(modTime,"1972-11-24/17:31:45 +0000") @TO@ MethodInvocation:assertEquals("1972-11-24/17:31:45 +0000",modTime) @AT@ 5909 @LENGTH@ 51
------UPD MethodInvocation@@assertEquals(modTime,"1972-11-24/17:31:45 +0000") @TO@ assertEquals("1972-11-24/17:31:45 +0000",modTime) @AT@ 5909 @LENGTH@ 50
---------UPD SimpleName@@MethodName:assertEquals:[modTime, "1972-11-24/17:31:45 +0000"] @TO@ MethodName:assertEquals:["1972-11-24/17:31:45 +0000", modTime] @AT@ 5909 @LENGTH@ 50
------------INS StringLiteral@@"1972-11-24/17:31:45 +0000" @TO@ SimpleName@@MethodName:assertEquals:[modTime, "1972-11-24/17:31:45 +0000"] @AT@ 5922 @LENGTH@ 27
------------DEL StringLiteral@@"1972-11-24/17:31:45 +0000" @AT@ 5931 @LENGTH@ 27
---UPD ExpressionStatement@@MethodInvocation:assertEquals(accTime,"1972-11-24/17:31:47 +0000") @TO@ MethodInvocation:assertEquals("1972-11-24/17:31:47 +0000",accTime) @AT@ 5993 @LENGTH@ 51
------UPD MethodInvocation@@assertEquals(accTime,"1972-11-24/17:31:47 +0000") @TO@ assertEquals("1972-11-24/17:31:47 +0000",accTime) @AT@ 5993 @LENGTH@ 50
---------UPD SimpleName@@MethodName:assertEquals:[accTime, "1972-11-24/17:31:47 +0000"] @TO@ MethodName:assertEquals:["1972-11-24/17:31:47 +0000", accTime] @AT@ 5993 @LENGTH@ 50
------------INS StringLiteral@@"1972-11-24/17:31:47 +0000" @TO@ SimpleName@@MethodName:assertEquals:[accTime, "1972-11-24/17:31:47 +0000"] @AT@ 6006 @LENGTH@ 27
------------DEL StringLiteral@@"1972-11-24/17:31:47 +0000" @AT@ 6015 @LENGTH@ 27
---UPD IfStatement@@if (year < 1980) {  assertEquals(zipTime,"1980-01-01/08:00:00 +0000");} else {  assertEquals(zipTime,year + "-01-01/00:00:02 +0000");} @TO@ if (year < 1980) {  assertEquals("1980-01-01/08:00:00 +0000",zipTime);} else {  assertEquals(year + "-01-01/00:00:02 +0000",zipTime);} @AT@ 6574 @LENGTH@ 272
------UPD Block@@ThenBody:{  assertEquals(zipTime,"1980-01-01/08:00:00 +0000");} @TO@ ThenBody:{  assertEquals("1980-01-01/08:00:00 +0000",zipTime);} @AT@ 6591 @LENGTH@ 123
---------UPD ExpressionStatement@@MethodInvocation:assertEquals(zipTime,"1980-01-01/08:00:00 +0000") @TO@ MethodInvocation:assertEquals("1980-01-01/08:00:00 +0000",zipTime) @AT@ 6629 @LENGTH@ 51
------------UPD MethodInvocation@@assertEquals(zipTime,"1980-01-01/08:00:00 +0000") @TO@ assertEquals("1980-01-01/08:00:00 +0000",zipTime) @AT@ 6629 @LENGTH@ 50
---------------UPD SimpleName@@MethodName:assertEquals:[zipTime, "1980-01-01/08:00:00 +0000"] @TO@ MethodName:assertEquals:["1980-01-01/08:00:00 +0000", zipTime] @AT@ 6629 @LENGTH@ 50
------------------INS StringLiteral@@"1980-01-01/08:00:00 +0000" @TO@ SimpleName@@MethodName:assertEquals:[zipTime, "1980-01-01/08:00:00 +0000"] @AT@ 6642 @LENGTH@ 27
------------------DEL StringLiteral@@"1980-01-01/08:00:00 +0000" @AT@ 6651 @LENGTH@ 27
------UPD Block@@ElseBody:{  assertEquals(zipTime,year + "-01-01/00:00:02 +0000");} @TO@ ElseBody:{  assertEquals(year + "-01-01/00:00:02 +0000",zipTime);} @AT@ 6720 @LENGTH@ 126
---------UPD ExpressionStatement@@MethodInvocation:assertEquals(zipTime,year + "-01-01/00:00:02 +0000") @TO@ MethodInvocation:assertEquals(year + "-01-01/00:00:02 +0000",zipTime) @AT@ 6758 @LENGTH@ 54
------------UPD MethodInvocation@@assertEquals(zipTime,year + "-01-01/00:00:02 +0000") @TO@ assertEquals(year + "-01-01/00:00:02 +0000",zipTime) @AT@ 6758 @LENGTH@ 53
---------------UPD SimpleName@@MethodName:assertEquals:[zipTime, year + "-01-01/00:00:02 +0000"] @TO@ MethodName:assertEquals:[year + "-01-01/00:00:02 +0000", zipTime] @AT@ 6758 @LENGTH@ 53
------------------DEL SimpleName@@zipTime @AT@ 6771 @LENGTH@ 7
------------------INS SimpleName@@zipTime @TO@ SimpleName@@MethodName:assertEquals:[zipTime, year + "-01-01/00:00:02 +0000"] @AT@ 6803 @LENGTH@ 7
---UPD ExpressionStatement@@MethodInvocation:assertEquals(modTime,year + "-01-01/00:00:01 +0000") @TO@ MethodInvocation:assertEquals(year + "-01-01/00:00:01 +0000",modTime) @AT@ 6879 @LENGTH@ 54
------UPD MethodInvocation@@assertEquals(modTime,year + "-01-01/00:00:01 +0000") @TO@ assertEquals(year + "-01-01/00:00:01 +0000",modTime) @AT@ 6879 @LENGTH@ 53
---------UPD SimpleName@@MethodName:assertEquals:[modTime, year + "-01-01/00:00:01 +0000"] @TO@ MethodName:assertEquals:[year + "-01-01/00:00:01 +0000", modTime] @AT@ 6879 @LENGTH@ 53
------------DEL SimpleName@@modTime @AT@ 6892 @LENGTH@ 7
------------INS SimpleName@@modTime @TO@ SimpleName@@MethodName:assertEquals:[modTime, year + "-01-01/00:00:01 +0000"] @AT@ 6924 @LENGTH@ 7
---UPD ExpressionStatement@@MethodInvocation:assertEquals(accTime,year + "-01-01/00:00:03 +0000") @TO@ MethodInvocation:assertEquals(year + "-01-01/00:00:03 +0000",accTime) @AT@ 6966 @LENGTH@ 54
------UPD MethodInvocation@@assertEquals(accTime,year + "-01-01/00:00:03 +0000") @TO@ assertEquals(year + "-01-01/00:00:03 +0000",accTime) @AT@ 6966 @LENGTH@ 53
---------UPD SimpleName@@MethodName:assertEquals:[accTime, year + "-01-01/00:00:03 +0000"] @TO@ MethodName:assertEquals:[year + "-01-01/00:00:03 +0000", accTime] @AT@ 6966 @LENGTH@ 53
------------DEL SimpleName@@accTime @AT@ 6979 @LENGTH@ 7
------------INS SimpleName@@accTime @TO@ SimpleName@@MethodName:assertEquals:[accTime, year + "-01-01/00:00:03 +0000"] @AT@ 7011 @LENGTH@ 7


INS MethodDeclaration@@public, static, boolean, MethodName:requiresReload, final Set<Flag> flags,  @TO@ TypeDeclaration@@[public, final]Logging,  @AT@ 2283 @LENGTH@ 319
---INS Modifier@@public @TO@ MethodDeclaration@@public, static, boolean, MethodName:requiresReload, final Set<Flag> flags,  @AT@ 2283 @LENGTH@ 6
---INS Modifier@@static @TO@ MethodDeclaration@@public, static, boolean, MethodName:requiresReload, final Set<Flag> flags,  @AT@ 2290 @LENGTH@ 6
---INS PrimitiveType@@boolean @TO@ MethodDeclaration@@public, static, boolean, MethodName:requiresReload, final Set<Flag> flags,  @AT@ 2297 @LENGTH@ 7
---INS SimpleName@@MethodName:requiresReload @TO@ MethodDeclaration@@public, static, boolean, MethodName:requiresReload, final Set<Flag> flags,  @AT@ 2305 @LENGTH@ 14
---INS SingleVariableDeclaration@@final Set<Flag> flags @TO@ MethodDeclaration@@public, static, boolean, MethodName:requiresReload, final Set<Flag> flags,  @AT@ 2320 @LENGTH@ 21
------INS Modifier@@final @TO@ SingleVariableDeclaration@@final Set<Flag> flags @AT@ 2320 @LENGTH@ 5
------INS ParameterizedType@@Set<Flag> @TO@ SingleVariableDeclaration@@final Set<Flag> flags @AT@ 2326 @LENGTH@ 9
---------INS SimpleType@@Set @TO@ ParameterizedType@@Set<Flag> @AT@ 2326 @LENGTH@ 3
---------INS SimpleType@@Flag @TO@ ParameterizedType@@Set<Flag> @AT@ 2330 @LENGTH@ 4
------INS SimpleName@@flags @TO@ SingleVariableDeclaration@@final Set<Flag> flags @AT@ 2336 @LENGTH@ 5
---INS EnhancedForStatement@@for (Flag flag : flags) {switch (flag) {case RESTART_ALL_SERVICES:case RESTART_RESOURCE_SERVICES:{      return true;    }}} @TO@ MethodDeclaration@@public, static, boolean, MethodName:requiresReload, final Set<Flag> flags,  @AT@ 2353 @LENGTH@ 221
------INS SingleVariableDeclaration@@Flag flag @TO@ EnhancedForStatement@@for (Flag flag : flags) {switch (flag) {case RESTART_ALL_SERVICES:case RESTART_RESOURCE_SERVICES:{      return true;    }}} @AT@ 2358 @LENGTH@ 9
---------INS SimpleType@@Flag @TO@ SingleVariableDeclaration@@Flag flag @AT@ 2358 @LENGTH@ 4
---------INS SimpleName@@flag @TO@ SingleVariableDeclaration@@Flag flag @AT@ 2363 @LENGTH@ 4
------INS SimpleName@@flags @TO@ EnhancedForStatement@@for (Flag flag : flags) {switch (flag) {case RESTART_ALL_SERVICES:case RESTART_RESOURCE_SERVICES:{      return true;    }}} @AT@ 2370 @LENGTH@ 5
------INS SwitchStatement@@switch (flag) {case RESTART_ALL_SERVICES:case RESTART_RESOURCE_SERVICES:{    return true;  }} @TO@ EnhancedForStatement@@for (Flag flag : flags) {switch (flag) {case RESTART_ALL_SERVICES:case RESTART_RESOURCE_SERVICES:{      return true;    }}} @AT@ 2391 @LENGTH@ 173
---------INS SimpleName@@flag @TO@ SwitchStatement@@switch (flag) {case RESTART_ALL_SERVICES:case RESTART_RESOURCE_SERVICES:{    return true;  }} @AT@ 2399 @LENGTH@ 4
---------INS SwitchCase@@case RESTART_ALL_SERVICES: @TO@ SwitchStatement@@switch (flag) {case RESTART_ALL_SERVICES:case RESTART_RESOURCE_SERVICES:{    return true;  }} @AT@ 2423 @LENGTH@ 26
------------INS SimpleName@@RESTART_ALL_SERVICES @TO@ SwitchCase@@case RESTART_ALL_SERVICES: @AT@ 2428 @LENGTH@ 20
---------INS SwitchCase@@case RESTART_RESOURCE_SERVICES: @TO@ SwitchStatement@@switch (flag) {case RESTART_ALL_SERVICES:case RESTART_RESOURCE_SERVICES:{    return true;  }} @AT@ 2466 @LENGTH@ 31
------------INS SimpleName@@RESTART_RESOURCE_SERVICES @TO@ SwitchCase@@case RESTART_RESOURCE_SERVICES: @AT@ 2471 @LENGTH@ 25
---------INS ReturnStatement@@BooleanLiteral:true @TO@ SwitchStatement@@switch (flag) {case RESTART_ALL_SERVICES:case RESTART_RESOURCE_SERVICES:{    return true;  }} @AT@ 2520 @LENGTH@ 12
------------INS BooleanLiteral@@true @TO@ ReturnStatement@@BooleanLiteral:true @AT@ 2527 @LENGTH@ 4
---INS ReturnStatement@@BooleanLiteral:false @TO@ MethodDeclaration@@public, static, boolean, MethodName:requiresReload, final Set<Flag> flags,  @AT@ 2583 @LENGTH@ 13
------INS BooleanLiteral@@false @TO@ ReturnStatement@@BooleanLiteral:false @AT@ 2590 @LENGTH@ 5


UPD IfStatement@@if (component instanceof JInternalFrame) {  JInternalFrame frame=(JInternalFrame)component;  frame.setFrameIcon(icon);  frame.setTitle(getJBossServerName());  return;} @TO@ if (component instanceof JInternalFrame) {  JInternalFrame frame=(JInternalFrame)component;  frame.setFrameIcon(icon);  return;} @AT@ 6561 @LENGTH@ 242
---UPD Block@@ThenBody:{  JInternalFrame frame=(JInternalFrame)component;  frame.setFrameIcon(icon);  frame.setTitle(getJBossServerName());  return;} @TO@ ThenBody:{  JInternalFrame frame=(JInternalFrame)component;  frame.setFrameIcon(icon);  return;} @AT@ 6602 @LENGTH@ 201
------DEL ExpressionStatement@@MethodInvocation:frame.setTitle(getJBossServerName()) @AT@ 6728 @LENGTH@ 37
---------DEL MethodInvocation@@frame.setTitle(getJBossServerName()) @AT@ 6728 @LENGTH@ 36
------------DEL SimpleName@@Name:frame @AT@ 6728 @LENGTH@ 5
------------DEL SimpleName@@MethodName:setTitle:[getJBossServerName()] @AT@ 6734 @LENGTH@ 30
---------------DEL MethodInvocation@@MethodName:getJBossServerName:[] @AT@ 6743 @LENGTH@ 20


UPD IfStatement@@if (ch == '\'') {  if (singleQuoted && prev == ch && sb.length() == 0) {    answer.add("");  }  singleQuoted=!singleQuoted;  continue;} else if (ch == '"') {  if (doubleQuoted && prev == ch && sb.length() == 0) {    answer.add("");  }  doubleQuoted=!doubleQuoted;  continue;} else if (ch == ' ') {  if (!singleQuoted && !doubleQuoted && skipLeadingWhitespace) {    continue;  }} else if (ch == separator) {  if (!singleQuoted && !doubleQuoted && sb.length() > 0) {    String text=sb.toString();    if (trim) {      text=text.trim();    }    answer.add(text);    sb.setLength(0);    continue;  }} @TO@ if (ch == '\'') {  if (singleQuoted && prev == ch && sb.length() == 0) {    answer.add("");  }  if (i == input.length() - 1) {    if (singleQuoted && sb.length() > 0) {      String text=sb.toString();      answer.add(text);      sb.setLength(0);    }  }  singleQuoted=!singleQuoted;  continue;} else if (ch == '"') {  if (doubleQuoted && prev == ch && sb.length() == 0) {    answer.add("");  }  if (i == input.length() - 1) {    if (doubleQuoted && sb.length() > 0) {      String text=sb.toString();      answer.add(text);      sb.setLength(0);    }  }  doubleQuoted=!doubleQuoted;  continue;} else if (ch == ' ') {  if (!singleQuoted && !doubleQuoted && skipLeadingWhitespace) {    continue;  }} else if (ch == separator) {  if (!singleQuoted && !doubleQuoted && sb.length() > 0) {    String text=sb.toString();    if (trim) {      text=text.trim();    }    answer.add(text);    sb.setLength(0);    continue;  }} @AT@ 3071 @LENGTH@ 1185
---UPD Block@@ThenBody:{  if (singleQuoted && prev == ch && sb.length() == 0) {    answer.add("");  }  singleQuoted=!singleQuoted;  continue;} @TO@ ThenBody:{  if (singleQuoted && prev == ch && sb.length() == 0) {    answer.add("");  }  if (i == input.length() - 1) {    if (singleQuoted && sb.length() > 0) {      String text=sb.toString();      answer.add(text);      sb.setLength(0);    }  }  singleQuoted=!singleQuoted;  continue;} @AT@ 3087 @LENGTH@ 271
------INS IfStatement@@if (i == input.length() - 1) {  if (singleQuoted && sb.length() > 0) {    String text=sb.toString();    answer.add(text);    sb.setLength(0);  }} @TO@ Block@@ThenBody:{  if (singleQuoted && prev == ch && sb.length() == 0) {    answer.add("");  }  singleQuoted=!singleQuoted;  continue;} @AT@ 3354 @LENGTH@ 320
---------INS InfixExpression@@i == input.length() - 1 @TO@ IfStatement@@if (i == input.length() - 1) {  if (singleQuoted && sb.length() > 0) {    String text=sb.toString();    answer.add(text);    sb.setLength(0);  }} @AT@ 3358 @LENGTH@ 23
------------INS SimpleName@@i @TO@ InfixExpression@@i == input.length() - 1 @AT@ 3358 @LENGTH@ 1
------------INS Operator@@== @TO@ InfixExpression@@i == input.length() - 1 @AT@ 3359 @LENGTH@ 2
------------INS InfixExpression@@input.length() - 1 @TO@ InfixExpression@@i == input.length() - 1 @AT@ 3363 @LENGTH@ 18
---------------INS MethodInvocation@@input.length() @TO@ InfixExpression@@input.length() - 1 @AT@ 3363 @LENGTH@ 14
------------------INS SimpleName@@Name:input @TO@ MethodInvocation@@input.length() @AT@ 3363 @LENGTH@ 5
------------------INS SimpleName@@MethodName:length:[] @TO@ MethodInvocation@@input.length() @AT@ 3369 @LENGTH@ 8
---------------INS Operator@@- @TO@ InfixExpression@@input.length() - 1 @AT@ 3377 @LENGTH@ 1
---------------INS NumberLiteral@@1 @TO@ InfixExpression@@input.length() - 1 @AT@ 3380 @LENGTH@ 1
---------INS Block@@ThenBody:{  if (singleQuoted && sb.length() > 0) {    String text=sb.toString();    answer.add(text);    sb.setLength(0);  }} @TO@ IfStatement@@if (i == input.length() - 1) {  if (singleQuoted && sb.length() > 0) {    String text=sb.toString();    answer.add(text);    sb.setLength(0);  }} @AT@ 3383 @LENGTH@ 291
------------INS IfStatement@@if (singleQuoted && sb.length() > 0) {  String text=sb.toString();  answer.add(text);  sb.setLength(0);} @TO@ Block@@ThenBody:{  if (singleQuoted && sb.length() > 0) {    String text=sb.toString();    answer.add(text);    sb.setLength(0);  }} @AT@ 3405 @LENGTH@ 251
---------------INS InfixExpression@@singleQuoted && sb.length() > 0 @TO@ IfStatement@@if (singleQuoted && sb.length() > 0) {  String text=sb.toString();  answer.add(text);  sb.setLength(0);} @AT@ 3409 @LENGTH@ 31
------------------INS SimpleName@@singleQuoted @TO@ InfixExpression@@singleQuoted && sb.length() > 0 @AT@ 3409 @LENGTH@ 12
------------------INS Operator@@&& @TO@ InfixExpression@@singleQuoted && sb.length() > 0 @AT@ 3421 @LENGTH@ 2
------------------INS InfixExpression@@sb.length() > 0 @TO@ InfixExpression@@singleQuoted && sb.length() > 0 @AT@ 3425 @LENGTH@ 15
---------------------INS MethodInvocation@@sb.length() @TO@ InfixExpression@@sb.length() > 0 @AT@ 3425 @LENGTH@ 11
------------------------INS SimpleName@@Name:sb @TO@ MethodInvocation@@sb.length() @AT@ 3425 @LENGTH@ 2
------------------------INS SimpleName@@MethodName:length:[] @TO@ MethodInvocation@@sb.length() @AT@ 3428 @LENGTH@ 8
---------------------INS Operator@@> @TO@ InfixExpression@@sb.length() > 0 @AT@ 3436 @LENGTH@ 1
---------------------INS NumberLiteral@@0 @TO@ InfixExpression@@sb.length() > 0 @AT@ 3439 @LENGTH@ 1
---------------INS Block@@ThenBody:{  String text=sb.toString();  answer.add(text);  sb.setLength(0);} @TO@ IfStatement@@if (singleQuoted && sb.length() > 0) {  String text=sb.toString();  answer.add(text);  sb.setLength(0);} @AT@ 3442 @LENGTH@ 214
------------------INS VariableDeclarationStatement@@String text=sb.toString(); @TO@ Block@@ThenBody:{  String text=sb.toString();  answer.add(text);  sb.setLength(0);} @AT@ 3468 @LENGTH@ 28
---------------------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String text=sb.toString(); @AT@ 3468 @LENGTH@ 6
---------------------INS VariableDeclarationFragment@@text=sb.toString() @TO@ VariableDeclarationStatement@@String text=sb.toString(); @AT@ 3475 @LENGTH@ 20
------------------------INS SimpleName@@text @TO@ VariableDeclarationFragment@@text=sb.toString() @AT@ 3475 @LENGTH@ 4
------------------------INS MethodInvocation@@sb.toString() @TO@ VariableDeclarationFragment@@text=sb.toString() @AT@ 3482 @LENGTH@ 13
---------------------------INS SimpleName@@Name:sb @TO@ MethodInvocation@@sb.toString() @AT@ 3482 @LENGTH@ 2
---------------------------INS SimpleName@@MethodName:toString:[] @TO@ MethodInvocation@@sb.toString() @AT@ 3485 @LENGTH@ 10
------------------INS ExpressionStatement@@MethodInvocation:answer.add(text) @TO@ Block@@ThenBody:{  String text=sb.toString();  answer.add(text);  sb.setLength(0);} @AT@ 3576 @LENGTH@ 17
---------------------INS MethodInvocation@@answer.add(text) @TO@ ExpressionStatement@@MethodInvocation:answer.add(text) @AT@ 3576 @LENGTH@ 16
------------------------INS SimpleName@@Name:answer @TO@ MethodInvocation@@answer.add(text) @AT@ 3576 @LENGTH@ 6
------------------------INS SimpleName@@MethodName:add:[text] @TO@ MethodInvocation@@answer.add(text) @AT@ 3583 @LENGTH@ 9
---------------------------INS SimpleName@@text @TO@ SimpleName@@MethodName:add:[text] @AT@ 3587 @LENGTH@ 4
------------------INS ExpressionStatement@@MethodInvocation:sb.setLength(0) @TO@ Block@@ThenBody:{  String text=sb.toString();  answer.add(text);  sb.setLength(0);} @AT@ 3618 @LENGTH@ 16
---------------------INS MethodInvocation@@sb.setLength(0) @TO@ ExpressionStatement@@MethodInvocation:sb.setLength(0) @AT@ 3618 @LENGTH@ 15
------------------------INS SimpleName@@Name:sb @TO@ MethodInvocation@@sb.setLength(0) @AT@ 3618 @LENGTH@ 2
------------------------INS SimpleName@@MethodName:setLength:[0] @TO@ MethodInvocation@@sb.setLength(0) @AT@ 3621 @LENGTH@ 12
---------------------------INS NumberLiteral@@0 @TO@ SimpleName@@MethodName:setLength:[0] @AT@ 3631 @LENGTH@ 1
---UPD Block@@ElseBody:if (ch == '"') {  if (doubleQuoted && prev == ch && sb.length() == 0) {    answer.add("");  }  doubleQuoted=!doubleQuoted;  continue;} else if (ch == ' ') {  if (!singleQuoted && !doubleQuoted && skipLeadingWhitespace) {    continue;  }} else if (ch == separator) {  if (!singleQuoted && !doubleQuoted && sb.length() > 0) {    String text=sb.toString();    if (trim) {      text=text.trim();    }    answer.add(text);    sb.setLength(0);    continue;  }} @TO@ ElseBody:if (ch == '"') {  if (doubleQuoted && prev == ch && sb.length() == 0) {    answer.add("");  }  if (i == input.length() - 1) {    if (doubleQuoted && sb.length() > 0) {      String text=sb.toString();      answer.add(text);      sb.setLength(0);    }  }  doubleQuoted=!doubleQuoted;  continue;} else if (ch == ' ') {  if (!singleQuoted && !doubleQuoted && skipLeadingWhitespace) {    continue;  }} else if (ch == separator) {  if (!singleQuoted && !doubleQuoted && sb.length() > 0) {    String text=sb.toString();    if (trim) {      text=text.trim();    }    answer.add(text);    sb.setLength(0);    continue;  }} @AT@ 3364 @LENGTH@ 892
------UPD IfStatement@@if (ch == '"') {  if (doubleQuoted && prev == ch && sb.length() == 0) {    answer.add("");  }  doubleQuoted=!doubleQuoted;  continue;} else if (ch == ' ') {  if (!singleQuoted && !doubleQuoted && skipLeadingWhitespace) {    continue;  }} else if (ch == separator) {  if (!singleQuoted && !doubleQuoted && sb.length() > 0) {    String text=sb.toString();    if (trim) {      text=text.trim();    }    answer.add(text);    sb.setLength(0);    continue;  }} @TO@ if (ch == '"') {  if (doubleQuoted && prev == ch && sb.length() == 0) {    answer.add("");  }  if (i == input.length() - 1) {    if (doubleQuoted && sb.length() > 0) {      String text=sb.toString();      answer.add(text);      sb.setLength(0);    }  }  doubleQuoted=!doubleQuoted;  continue;} else if (ch == ' ') {  if (!singleQuoted && !doubleQuoted && skipLeadingWhitespace) {    continue;  }} else if (ch == separator) {  if (!singleQuoted && !doubleQuoted && sb.length() > 0) {    String text=sb.toString();    if (trim) {      text=text.trim();    }    answer.add(text);    sb.setLength(0);    continue;  }} @AT@ 3364 @LENGTH@ 892
---------UPD Block@@ThenBody:{  if (doubleQuoted && prev == ch && sb.length() == 0) {    answer.add("");  }  doubleQuoted=!doubleQuoted;  continue;} @TO@ ThenBody:{  if (doubleQuoted && prev == ch && sb.length() == 0) {    answer.add("");  }  if (i == input.length() - 1) {    if (doubleQuoted && sb.length() > 0) {      String text=sb.toString();      answer.add(text);      sb.setLength(0);    }  }  doubleQuoted=!doubleQuoted;  continue;} @AT@ 3379 @LENGTH@ 271
------------INS IfStatement@@if (i == input.length() - 1) {  if (doubleQuoted && sb.length() > 0) {    String text=sb.toString();    answer.add(text);    sb.setLength(0);  }} @TO@ Block@@ThenBody:{  if (doubleQuoted && prev == ch && sb.length() == 0) {    answer.add("");  }  doubleQuoted=!doubleQuoted;  continue;} @AT@ 4048 @LENGTH@ 320
---------------INS InfixExpression@@i == input.length() - 1 @TO@ IfStatement@@if (i == input.length() - 1) {  if (doubleQuoted && sb.length() > 0) {    String text=sb.toString();    answer.add(text);    sb.setLength(0);  }} @AT@ 4052 @LENGTH@ 23
------------------INS SimpleName@@i @TO@ InfixExpression@@i == input.length() - 1 @AT@ 4052 @LENGTH@ 1
------------------INS Operator@@== @TO@ InfixExpression@@i == input.length() - 1 @AT@ 4053 @LENGTH@ 2
------------------INS InfixExpression@@input.length() - 1 @TO@ InfixExpression@@i == input.length() - 1 @AT@ 4057 @LENGTH@ 18
---------------------INS MethodInvocation@@input.length() @TO@ InfixExpression@@input.length() - 1 @AT@ 4057 @LENGTH@ 14
------------------------INS SimpleName@@Name:input @TO@ MethodInvocation@@input.length() @AT@ 4057 @LENGTH@ 5
------------------------INS SimpleName@@MethodName:length:[] @TO@ MethodInvocation@@input.length() @AT@ 4063 @LENGTH@ 8
---------------------INS Operator@@- @TO@ InfixExpression@@input.length() - 1 @AT@ 4071 @LENGTH@ 1
---------------------INS NumberLiteral@@1 @TO@ InfixExpression@@input.length() - 1 @AT@ 4074 @LENGTH@ 1
---------------INS Block@@ThenBody:{  if (doubleQuoted && sb.length() > 0) {    String text=sb.toString();    answer.add(text);    sb.setLength(0);  }} @TO@ IfStatement@@if (i == input.length() - 1) {  if (doubleQuoted && sb.length() > 0) {    String text=sb.toString();    answer.add(text);    sb.setLength(0);  }} @AT@ 4077 @LENGTH@ 291
------------------INS IfStatement@@if (doubleQuoted && sb.length() > 0) {  String text=sb.toString();  answer.add(text);  sb.setLength(0);} @TO@ Block@@ThenBody:{  if (doubleQuoted && sb.length() > 0) {    String text=sb.toString();    answer.add(text);    sb.setLength(0);  }} @AT@ 4099 @LENGTH@ 251
---------------------INS InfixExpression@@doubleQuoted && sb.length() > 0 @TO@ IfStatement@@if (doubleQuoted && sb.length() > 0) {  String text=sb.toString();  answer.add(text);  sb.setLength(0);} @AT@ 4103 @LENGTH@ 31
------------------------INS SimpleName@@doubleQuoted @TO@ InfixExpression@@doubleQuoted && sb.length() > 0 @AT@ 4103 @LENGTH@ 12
------------------------INS Operator@@&& @TO@ InfixExpression@@doubleQuoted && sb.length() > 0 @AT@ 4115 @LENGTH@ 2
------------------------INS InfixExpression@@sb.length() > 0 @TO@ InfixExpression@@doubleQuoted && sb.length() > 0 @AT@ 4119 @LENGTH@ 15
---------------------------INS MethodInvocation@@sb.length() @TO@ InfixExpression@@sb.length() > 0 @AT@ 4119 @LENGTH@ 11
------------------------------INS SimpleName@@Name:sb @TO@ MethodInvocation@@sb.length() @AT@ 4119 @LENGTH@ 2
------------------------------INS SimpleName@@MethodName:length:[] @TO@ MethodInvocation@@sb.length() @AT@ 4122 @LENGTH@ 8
---------------------------INS Operator@@> @TO@ InfixExpression@@sb.length() > 0 @AT@ 4130 @LENGTH@ 1
---------------------------INS NumberLiteral@@0 @TO@ InfixExpression@@sb.length() > 0 @AT@ 4133 @LENGTH@ 1
---------------------INS Block@@ThenBody:{  String text=sb.toString();  answer.add(text);  sb.setLength(0);} @TO@ IfStatement@@if (doubleQuoted && sb.length() > 0) {  String text=sb.toString();  answer.add(text);  sb.setLength(0);} @AT@ 4136 @LENGTH@ 214
------------------------INS VariableDeclarationStatement@@String text=sb.toString(); @TO@ Block@@ThenBody:{  String text=sb.toString();  answer.add(text);  sb.setLength(0);} @AT@ 4162 @LENGTH@ 28
---------------------------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String text=sb.toString(); @AT@ 4162 @LENGTH@ 6
---------------------------INS VariableDeclarationFragment@@text=sb.toString() @TO@ VariableDeclarationStatement@@String text=sb.toString(); @AT@ 4169 @LENGTH@ 20
------------------------------INS SimpleName@@text @TO@ VariableDeclarationFragment@@text=sb.toString() @AT@ 4169 @LENGTH@ 4
------------------------------INS MethodInvocation@@sb.toString() @TO@ VariableDeclarationFragment@@text=sb.toString() @AT@ 4176 @LENGTH@ 13
---------------------------------INS SimpleName@@Name:sb @TO@ MethodInvocation@@sb.toString() @AT@ 4176 @LENGTH@ 2
---------------------------------INS SimpleName@@MethodName:toString:[] @TO@ MethodInvocation@@sb.toString() @AT@ 4179 @LENGTH@ 10
------------------------INS ExpressionStatement@@MethodInvocation:answer.add(text) @TO@ Block@@ThenBody:{  String text=sb.toString();  answer.add(text);  sb.setLength(0);} @AT@ 4270 @LENGTH@ 17
---------------------------INS MethodInvocation@@answer.add(text) @TO@ ExpressionStatement@@MethodInvocation:answer.add(text) @AT@ 4270 @LENGTH@ 16
------------------------------INS SimpleName@@Name:answer @TO@ MethodInvocation@@answer.add(text) @AT@ 4270 @LENGTH@ 6
------------------------------INS SimpleName@@MethodName:add:[text] @TO@ MethodInvocation@@answer.add(text) @AT@ 4277 @LENGTH@ 9
---------------------------------INS SimpleName@@text @TO@ SimpleName@@MethodName:add:[text] @AT@ 4281 @LENGTH@ 4
------------------------INS ExpressionStatement@@MethodInvocation:sb.setLength(0) @TO@ Block@@ThenBody:{  String text=sb.toString();  answer.add(text);  sb.setLength(0);} @AT@ 4312 @LENGTH@ 16
---------------------------INS MethodInvocation@@sb.setLength(0) @TO@ ExpressionStatement@@MethodInvocation:sb.setLength(0) @AT@ 4312 @LENGTH@ 15
------------------------------INS SimpleName@@Name:sb @TO@ MethodInvocation@@sb.setLength(0) @AT@ 4312 @LENGTH@ 2
------------------------------INS SimpleName@@MethodName:setLength:[0] @TO@ MethodInvocation@@sb.setLength(0) @AT@ 4315 @LENGTH@ 12
---------------------------------INS NumberLiteral@@0 @TO@ SimpleName@@MethodName:setLength:[0] @AT@ 4325 @LENGTH@ 1


UPD ExpressionStatement@@MethodInvocation:context.getFailureDescription().set(String.format("Can't load protocol class %s",protocolName)) @TO@ MethodInvocation:context.getFailureDescription().set(JGroupsMessages.MESSAGES.unableToLoadProtocol(className)) @AT@ 4031 @LENGTH@ 97
---UPD MethodInvocation@@context.getFailureDescription().set(String.format("Can't load protocol class %s",protocolName)) @TO@ context.getFailureDescription().set(JGroupsMessages.MESSAGES.unableToLoadProtocol(className)) @AT@ 4031 @LENGTH@ 96
------UPD SimpleName@@MethodName:set:[String.format("Can't load protocol class %s",protocolName)] @TO@ MethodName:set:[JGroupsMessages.MESSAGES.unableToLoadProtocol(className)] @AT@ 4063 @LENGTH@ 64
---------UPD MethodInvocation@@String.format("Can't load protocol class %s",protocolName) @TO@ JGroupsMessages.MESSAGES.unableToLoadProtocol(className) @AT@ 4067 @LENGTH@ 59
------------DEL SimpleName@@Name:String @AT@ 4067 @LENGTH@ 6
------------UPD SimpleName@@MethodName:format:["Can't load protocol class %s", protocolName] @TO@ MethodName:unableToLoadProtocol:[className] @AT@ 4074 @LENGTH@ 52
---------------DEL StringLiteral@@"Can't load protocol class %s" @AT@ 4081 @LENGTH@ 30
---------------UPD SimpleName@@protocolName @TO@ className @AT@ 4113 @LENGTH@ 12
------------INS QualifiedName@@Name:JGroupsMessages.MESSAGES @TO@ MethodInvocation@@String.format("Can't load protocol class %s",protocolName) @AT@ 5146 @LENGTH@ 24


UPD IfStatement@@if (force) {  Profile p=this.getProfile(targetId);  if (p != null) {    p.delete();  }} @TO@ if (force && hasProfile(targetId)) {  Profile p=this.getProfile(targetId);  if (p != null) {    p.delete();  }} @AT@ 4070 @LENGTH@ 145
---INS InfixExpression@@force && hasProfile(targetId) @TO@ IfStatement@@if (force) {  Profile p=this.getProfile(targetId);  if (p != null) {    p.delete();  }} @AT@ 4074 @LENGTH@ 29
------INS SimpleName@@force @TO@ InfixExpression@@force && hasProfile(targetId) @AT@ 4074 @LENGTH@ 5
------INS Operator@@&& @TO@ InfixExpression@@force && hasProfile(targetId) @AT@ 4079 @LENGTH@ 2
------INS MethodInvocation@@hasProfile(targetId) @TO@ InfixExpression@@force && hasProfile(targetId) @AT@ 4083 @LENGTH@ 20
---------INS SimpleName@@MethodName:hasProfile:[targetId] @TO@ MethodInvocation@@hasProfile(targetId) @AT@ 4083 @LENGTH@ 20
------------INS SimpleName@@targetId @TO@ SimpleName@@MethodName:hasProfile:[targetId] @AT@ 4094 @LENGTH@ 8
---DEL SimpleName@@force @AT@ 4074 @LENGTH@ 5


UPD ExpressionStatement@@MethodInvocation:JredisUtils.applySortingParams(sort,params,null) @TO@ MethodInvocation:JredisUtils.applySortingParams(sort,params,storeKey) @AT@ 4686 @LENGTH@ 51
---UPD MethodInvocation@@JredisUtils.applySortingParams(sort,params,null) @TO@ JredisUtils.applySortingParams(sort,params,storeKey) @AT@ 4686 @LENGTH@ 50
------UPD SimpleName@@MethodName:applySortingParams:[sort, params, null] @TO@ MethodName:applySortingParams:[sort, params, storeKey] @AT@ 4698 @LENGTH@ 38
---------INS SimpleName@@storeKey @TO@ SimpleName@@MethodName:applySortingParams:[sort, params, null] @AT@ 4731 @LENGTH@ 8
---------DEL NullLiteral@@null @AT@ 4731 @LENGTH@ 4


UPD EnhancedForStatement@@for (Property sysprop : sysPropRoot.get(SYSTEM_PROPERTY).asPropertyList()) {  ModelNode bootTime;  if (sysprop.getValue().hasDefined(BOOT_TIME) && (bootTime=sysprop.getValue().get(BOOT_TIME)).getType() == ModelType.STRING) {    sysPropRoot.get(SYSTEM_PROPERTY,sysprop.getName(),BOOT_TIME).set(bootTime.asBoolean());  }} @TO@ for (Property sysprop : sysPropRoot.get(SYSTEM_PROPERTY).asPropertyList()) {  ModelNode bootTime;} @AT@ 9469 @LENGTH@ 488
---DEL IfStatement@@if (sysprop.getValue().hasDefined(BOOT_TIME) && (bootTime=sysprop.getValue().get(BOOT_TIME)).getType() == ModelType.STRING) {  sysPropRoot.get(SYSTEM_PROPERTY,sysprop.getName(),BOOT_TIME).set(bootTime.asBoolean());} @AT@ 9614 @LENGTH@ 321
------DEL InfixExpression@@sysprop.getValue().hasDefined(BOOT_TIME) && (bootTime=sysprop.getValue().get(BOOT_TIME)).getType() == ModelType.STRING @AT@ 9618 @LENGTH@ 120
---------DEL MethodInvocation@@sysprop.getValue().hasDefined(BOOT_TIME) @AT@ 9618 @LENGTH@ 40
------------DEL MethodInvocation@@MethodName:getValue:[] @AT@ 9618 @LENGTH@ 18
------------DEL SimpleName@@Name:sysprop @AT@ 9618 @LENGTH@ 7
------------DEL SimpleName@@MethodName:hasDefined:[BOOT_TIME] @AT@ 9637 @LENGTH@ 21
---------------DEL SimpleName@@BOOT_TIME @AT@ 9648 @LENGTH@ 9
---------DEL Operator@@&& @AT@ 9658 @LENGTH@ 2
---------DEL InfixExpression@@(bootTime=sysprop.getValue().get(BOOT_TIME)).getType() == ModelType.STRING @AT@ 9662 @LENGTH@ 76
------------DEL MethodInvocation@@(bootTime=sysprop.getValue().get(BOOT_TIME)).getType() @AT@ 9662 @LENGTH@ 56
---------------DEL ParenthesizedExpression@@(bootTime=sysprop.getValue().get(BOOT_TIME)) @AT@ 9662 @LENGTH@ 46
------------------DEL Assignment@@bootTime=sysprop.getValue().get(BOOT_TIME) @AT@ 9663 @LENGTH@ 44
---------------------DEL SimpleName@@bootTime @AT@ 9663 @LENGTH@ 8
---------------------DEL Operator@@= @AT@ 9671 @LENGTH@ 1
---------------------DEL MethodInvocation@@sysprop.getValue().get(BOOT_TIME) @AT@ 9674 @LENGTH@ 33
------------------------DEL MethodInvocation@@MethodName:getValue:[] @AT@ 9674 @LENGTH@ 18
------------------------DEL SimpleName@@Name:sysprop @AT@ 9674 @LENGTH@ 7
------------------------DEL SimpleName@@MethodName:get:[BOOT_TIME] @AT@ 9693 @LENGTH@ 14
---------------------------DEL SimpleName@@BOOT_TIME @AT@ 9697 @LENGTH@ 9
---------------DEL SimpleName@@MethodName:getType:[] @AT@ 9709 @LENGTH@ 9
------------DEL Operator@@== @AT@ 9718 @LENGTH@ 2
------------DEL QualifiedName@@ModelType.STRING @AT@ 9722 @LENGTH@ 16
---------------DEL SimpleName@@ModelType @AT@ 9722 @LENGTH@ 9
---------------DEL SimpleName@@STRING @AT@ 9732 @LENGTH@ 6
------DEL Block@@ThenBody:{  sysPropRoot.get(SYSTEM_PROPERTY,sysprop.getName(),BOOT_TIME).set(bootTime.asBoolean());} @AT@ 9740 @LENGTH@ 195
---------DEL ExpressionStatement@@MethodInvocation:sysPropRoot.get(SYSTEM_PROPERTY,sysprop.getName(),BOOT_TIME).set(bootTime.asBoolean()) @AT@ 9820 @LENGTH@ 89
------------DEL MethodInvocation@@sysPropRoot.get(SYSTEM_PROPERTY,sysprop.getName(),BOOT_TIME).set(bootTime.asBoolean()) @AT@ 9820 @LENGTH@ 88
---------------DEL MethodInvocation@@MethodName:get:[SYSTEM_PROPERTY, sysprop.getName(), BOOT_TIME] @AT@ 9820 @LENGTH@ 62
------------------DEL SimpleName@@SYSTEM_PROPERTY @AT@ 9836 @LENGTH@ 15
------------------DEL MethodInvocation@@sysprop.getName() @AT@ 9853 @LENGTH@ 17
---------------------DEL SimpleName@@Name:sysprop @AT@ 9853 @LENGTH@ 7
---------------------DEL SimpleName@@MethodName:getName:[] @AT@ 9861 @LENGTH@ 9
------------------DEL SimpleName@@BOOT_TIME @AT@ 9872 @LENGTH@ 9
---------------DEL SimpleName@@Name:sysPropRoot @AT@ 9820 @LENGTH@ 11
---------------DEL SimpleName@@MethodName:set:[bootTime.asBoolean()] @AT@ 9883 @LENGTH@ 25
------------------DEL MethodInvocation@@bootTime.asBoolean() @AT@ 9887 @LENGTH@ 20
---------------------DEL SimpleName@@Name:bootTime @AT@ 9887 @LENGTH@ 8
---------------------DEL SimpleName@@MethodName:asBoolean:[] @AT@ 9896 @LENGTH@ 11


UPD ExpressionStatement@@MethodInvocation:context.restartRequired() @TO@ MethodInvocation:context.reloadRequired() @AT@ 4580 @LENGTH@ 26
---UPD MethodInvocation@@context.restartRequired() @TO@ context.reloadRequired() @AT@ 4580 @LENGTH@ 25
------UPD SimpleName@@MethodName:restartRequired:[] @TO@ MethodName:reloadRequired:[] @AT@ 4588 @LENGTH@ 17


UPD IfStatement@@if (!subject.getPrivateCredentials(String.class).isEmpty() && subject.getPrincipals(UserPrincipal.class) != null && !subject.getPrincipals(UserPrincipal.class).isEmpty()) {  Set<UserPrincipal> userPrincipals=subject.getPrincipals(UserPrincipal.class);  UserPrincipal userPrincipal=userPrincipals.iterator().next();  return userPrincipal.getName();} @TO@ if (subject != null && subject.getPrivateCredentials(String.class) != null && !subject.getPrivateCredentials(String.class).isEmpty() && subject.getPrincipals(UserPrincipal.class) != null && !subject.getPrincipals(UserPrincipal.class).isEmpty()) {  Set<UserPrincipal> userPrincipals=subject.getPrincipals(UserPrincipal.class);  UserPrincipal userPrincipal=userPrincipals.iterator().next();  return userPrincipal.getName();} @AT@ 1756 @LENGTH@ 394
---UPD InfixExpression@@!subject.getPrivateCredentials(String.class).isEmpty() && subject.getPrincipals(UserPrincipal.class) != null && !subject.getPrincipals(UserPrincipal.class).isEmpty() @TO@ subject != null && subject.getPrivateCredentials(String.class) != null && !subject.getPrivateCredentials(String.class).isEmpty() && subject.getPrincipals(UserPrincipal.class) != null && !subject.getPrincipals(UserPrincipal.class).isEmpty() @AT@ 1760 @LENGTH@ 165
------UPD InfixExpression@@!subject.getPrivateCredentials(String.class).isEmpty() && subject.getPrincipals(UserPrincipal.class) != null @TO@ subject != null && subject.getPrivateCredentials(String.class) != null && !subject.getPrivateCredentials(String.class).isEmpty() && subject.getPrincipals(UserPrincipal.class) != null @AT@ 1760 @LENGTH@ 108
---------INS InfixExpression@@subject != null && subject.getPrivateCredentials(String.class) != null && !subject.getPrivateCredentials(String.class).isEmpty() @TO@ InfixExpression@@!subject.getPrivateCredentials(String.class).isEmpty() && subject.getPrincipals(UserPrincipal.class) != null @AT@ 1760 @LENGTH@ 144
------------INS InfixExpression@@subject != null && subject.getPrivateCredentials(String.class) != null @TO@ InfixExpression@@subject != null && subject.getPrivateCredentials(String.class) != null && !subject.getPrivateCredentials(String.class).isEmpty() @AT@ 1760 @LENGTH@ 86
---------------INS InfixExpression@@subject != null @TO@ InfixExpression@@subject != null && subject.getPrivateCredentials(String.class) != null @AT@ 1760 @LENGTH@ 15
------------------INS SimpleName@@subject @TO@ InfixExpression@@subject != null @AT@ 1760 @LENGTH@ 7
------------------INS Operator@@!= @TO@ InfixExpression@@subject != null @AT@ 1767 @LENGTH@ 2
------------------INS NullLiteral@@null @TO@ InfixExpression@@subject != null @AT@ 1771 @LENGTH@ 4
---------------INS InfixExpression@@subject.getPrivateCredentials(String.class) != null @TO@ InfixExpression@@subject != null && subject.getPrivateCredentials(String.class) != null @AT@ 1795 @LENGTH@ 51
------------------INS MethodInvocation@@subject.getPrivateCredentials(String.class) @TO@ InfixExpression@@subject.getPrivateCredentials(String.class) != null @AT@ 1795 @LENGTH@ 43
---------------------INS SimpleName@@Name:subject @TO@ MethodInvocation@@subject.getPrivateCredentials(String.class) @AT@ 1795 @LENGTH@ 7
---------------------INS SimpleName@@MethodName:getPrivateCredentials:[String.class] @TO@ MethodInvocation@@subject.getPrivateCredentials(String.class) @AT@ 1803 @LENGTH@ 35
------------------------INS TypeLiteral@@String.class @TO@ SimpleName@@MethodName:getPrivateCredentials:[String.class] @AT@ 1825 @LENGTH@ 12
------------------INS Operator@@!= @TO@ InfixExpression@@subject.getPrivateCredentials(String.class) != null @AT@ 1838 @LENGTH@ 2
------------------INS NullLiteral@@null @TO@ InfixExpression@@subject.getPrivateCredentials(String.class) != null @AT@ 1842 @LENGTH@ 4
---------------MOV Operator@@&& @TO@ InfixExpression@@subject != null && subject.getPrivateCredentials(String.class) != null @AT@ 1814 @LENGTH@ 2
------------MOV PrefixExpression@@!subject.getPrivateCredentials(String.class).isEmpty() @TO@ InfixExpression@@subject != null && subject.getPrivateCredentials(String.class) != null && !subject.getPrivateCredentials(String.class).isEmpty() @AT@ 1760 @LENGTH@ 54
------------INS Operator@@&& @TO@ InfixExpression@@subject != null && subject.getPrivateCredentials(String.class) != null && !subject.getPrivateCredentials(String.class).isEmpty() @AT@ 1846 @LENGTH@ 2
---------INS Operator@@&& @TO@ InfixExpression@@!subject.getPrivateCredentials(String.class).isEmpty() && subject.getPrincipals(UserPrincipal.class) != null @AT@ 1904 @LENGTH@ 2


DEL FieldDeclaration@@static, final, SimpleAttributeDefinition, [REGULAR_EXPRESSION=new SimpleAttributeDefinitionBuilder(ModelDescriptionConstants.REGULAR_EXPRESSION,ModelType.BOOLEAN,false).setAllowExpression(true).setDefaultValue(new ModelNode().set(false)).setFlags(AttributeAccess.Flag.RESTART_NONE).build()] @AT@ 1891 @LENGTH@ 386
---DEL Modifier@@static @AT@ 1891 @LENGTH@ 6
---DEL Modifier@@final @AT@ 1898 @LENGTH@ 5
---DEL SimpleType@@SimpleAttributeDefinition @AT@ 1904 @LENGTH@ 25
---DEL VariableDeclarationFragment@@REGULAR_EXPRESSION=new SimpleAttributeDefinitionBuilder(ModelDescriptionConstants.REGULAR_EXPRESSION,ModelType.BOOLEAN,false).setAllowExpression(true).setDefaultValue(new ModelNode().set(false)).setFlags(AttributeAccess.Flag.RESTART_NONE).build() @AT@ 1930 @LENGTH@ 346
------DEL SimpleName@@REGULAR_EXPRESSION @AT@ 1930 @LENGTH@ 18
------DEL MethodInvocation@@new SimpleAttributeDefinitionBuilder(ModelDescriptionConstants.REGULAR_EXPRESSION,ModelType.BOOLEAN,false).setAllowExpression(true).setDefaultValue(new ModelNode().set(false)).setFlags(AttributeAccess.Flag.RESTART_NONE).build() @AT@ 1963 @LENGTH@ 313
---------DEL MethodInvocation@@MethodName:setFlags:[AttributeAccess.Flag.RESTART_NONE] @AT@ 1963 @LENGTH@ 284
------------DEL QualifiedName@@AttributeAccess.Flag.RESTART_NONE @AT@ 2213 @LENGTH@ 33
---------------DEL QualifiedName@@AttributeAccess.Flag @AT@ 2213 @LENGTH@ 20
------------------DEL SimpleName@@AttributeAccess @AT@ 2213 @LENGTH@ 15
------------------DEL SimpleName@@Flag @AT@ 2229 @LENGTH@ 4
---------------DEL SimpleName@@RESTART_NONE @AT@ 2234 @LENGTH@ 12
---------DEL MethodInvocation@@MethodName:setDefaultValue:[new ModelNode().set(false)] @AT@ 1963 @LENGTH@ 219
------------DEL MethodInvocation@@new ModelNode().set(false) @AT@ 2155 @LENGTH@ 26
---------------DEL ClassInstanceCreation@@ModelNode[] @AT@ 2155 @LENGTH@ 15
------------------DEL New@@new @AT@ 2155 @LENGTH@ 3
------------------DEL SimpleType@@ModelNode @AT@ 2159 @LENGTH@ 9
---------------DEL SimpleName@@MethodName:set:[false] @AT@ 2171 @LENGTH@ 10
------------------DEL BooleanLiteral@@false @AT@ 2175 @LENGTH@ 5
---------DEL MethodInvocation@@MethodName:setAllowExpression:[true] @AT@ 1963 @LENGTH@ 154
------------DEL BooleanLiteral@@true @AT@ 2112 @LENGTH@ 4
---------DEL ClassInstanceCreation@@SimpleAttributeDefinitionBuilder[ModelDescriptionConstants.REGULAR_EXPRESSION, ModelType.BOOLEAN, false] @AT@ 1963 @LENGTH@ 108
------------DEL New@@new @AT@ 1963 @LENGTH@ 3
------------DEL SimpleType@@SimpleAttributeDefinitionBuilder @AT@ 1967 @LENGTH@ 32
------------DEL QualifiedName@@ModelDescriptionConstants.REGULAR_EXPRESSION @AT@ 2000 @LENGTH@ 44
---------------DEL SimpleName@@ModelDescriptionConstants @AT@ 2000 @LENGTH@ 25
---------------DEL SimpleName@@REGULAR_EXPRESSION @AT@ 2026 @LENGTH@ 18
------------DEL QualifiedName@@ModelType.BOOLEAN @AT@ 2046 @LENGTH@ 17
---------------DEL SimpleName@@ModelType @AT@ 2046 @LENGTH@ 9
---------------DEL SimpleName@@BOOLEAN @AT@ 2056 @LENGTH@ 7
------------DEL BooleanLiteral@@false @AT@ 2065 @LENGTH@ 5
---------DEL SimpleName@@MethodName:build:[] @AT@ 2269 @LENGTH@ 7


UPD FieldDeclaration@@SimpleAttributeDefinition, [MESSAGE_EXPIRY_THREAD_PRIORITY=create("message-expiry-thread-priority",INT).setDefaultValue(new ModelNode(HornetQDefaultConfiguration.DEFAULT_MESSAGE_EXPIRY_THREAD_PRIORITY)).setAllowNull(true).setAllowExpression(true).setRestartAllServices().build()] @TO@ SimpleAttributeDefinition, [MESSAGE_EXPIRY_THREAD_PRIORITY=create("message-expiry-thread-priority",INT).setDefaultValue(new ModelNode(HornetQDefaultConfiguration.DEFAULT_MESSAGE_EXPIRY_THREAD_PRIORITY)).setAllowNull(true).setAllowExpression(true).setValidator(new IntRangeValidator(Thread.MIN_PRIORITY,Thread.MAX_PRIORITY,true,true)).setRestartAllServices().build()] @AT@ 21795 @LENGTH@ 345
---UPD VariableDeclarationFragment@@MESSAGE_EXPIRY_THREAD_PRIORITY=create("message-expiry-thread-priority",INT).setDefaultValue(new ModelNode(HornetQDefaultConfiguration.DEFAULT_MESSAGE_EXPIRY_THREAD_PRIORITY)).setAllowNull(true).setAllowExpression(true).setRestartAllServices().build() @TO@ MESSAGE_EXPIRY_THREAD_PRIORITY=create("message-expiry-thread-priority",INT).setDefaultValue(new ModelNode(HornetQDefaultConfiguration.DEFAULT_MESSAGE_EXPIRY_THREAD_PRIORITY)).setAllowNull(true).setAllowExpression(true).setValidator(new IntRangeValidator(Thread.MIN_PRIORITY,Thread.MAX_PRIORITY,true,true)).setRestartAllServices().build() @AT@ 21821 @LENGTH@ 318
------UPD MethodInvocation@@create("message-expiry-thread-priority",INT).setDefaultValue(new ModelNode(HornetQDefaultConfiguration.DEFAULT_MESSAGE_EXPIRY_THREAD_PRIORITY)).setAllowNull(true).setAllowExpression(true).setRestartAllServices().build() @TO@ create("message-expiry-thread-priority",INT).setDefaultValue(new ModelNode(HornetQDefaultConfiguration.DEFAULT_MESSAGE_EXPIRY_THREAD_PRIORITY)).setAllowNull(true).setAllowExpression(true).setValidator(new IntRangeValidator(Thread.MIN_PRIORITY,Thread.MAX_PRIORITY,true,true)).setRestartAllServices().build() @AT@ 21854 @LENGTH@ 285
---------INS MethodInvocation@@MethodName:setValidator:[new IntRangeValidator(Thread.MIN_PRIORITY,Thread.MAX_PRIORITY,true,true)] @TO@ MethodInvocation@@create("message-expiry-thread-priority",INT).setDefaultValue(new ModelNode(HornetQDefaultConfiguration.DEFAULT_MESSAGE_EXPIRY_THREAD_PRIORITY)).setAllowNull(true).setAllowExpression(true).setRestartAllServices().build() @AT@ 21870 @LENGTH@ 330
------------INS ClassInstanceCreation@@IntRangeValidator[Thread.MIN_PRIORITY, Thread.MAX_PRIORITY, true, true] @TO@ MethodInvocation@@MethodName:setValidator:[new IntRangeValidator(Thread.MIN_PRIORITY,Thread.MAX_PRIORITY,true,true)] @AT@ 22124 @LENGTH@ 75
---------------INS New@@new @TO@ ClassInstanceCreation@@IntRangeValidator[Thread.MIN_PRIORITY, Thread.MAX_PRIORITY, true, true] @AT@ 22124 @LENGTH@ 3
---------------INS SimpleType@@IntRangeValidator @TO@ ClassInstanceCreation@@IntRangeValidator[Thread.MIN_PRIORITY, Thread.MAX_PRIORITY, true, true] @AT@ 22128 @LENGTH@ 17
---------------INS QualifiedName@@Thread.MIN_PRIORITY @TO@ ClassInstanceCreation@@IntRangeValidator[Thread.MIN_PRIORITY, Thread.MAX_PRIORITY, true, true] @AT@ 22146 @LENGTH@ 19
------------------INS SimpleName@@Thread @TO@ QualifiedName@@Thread.MIN_PRIORITY @AT@ 22146 @LENGTH@ 6
------------------INS SimpleName@@MIN_PRIORITY @TO@ QualifiedName@@Thread.MIN_PRIORITY @AT@ 22153 @LENGTH@ 12
---------------INS QualifiedName@@Thread.MAX_PRIORITY @TO@ ClassInstanceCreation@@IntRangeValidator[Thread.MIN_PRIORITY, Thread.MAX_PRIORITY, true, true] @AT@ 22167 @LENGTH@ 19
------------------INS SimpleName@@Thread @TO@ QualifiedName@@Thread.MAX_PRIORITY @AT@ 22167 @LENGTH@ 6
------------------INS SimpleName@@MAX_PRIORITY @TO@ QualifiedName@@Thread.MAX_PRIORITY @AT@ 22174 @LENGTH@ 12
---------------INS BooleanLiteral@@true @TO@ ClassInstanceCreation@@IntRangeValidator[Thread.MIN_PRIORITY, Thread.MAX_PRIORITY, true, true] @AT@ 22188 @LENGTH@ 4
---------------INS BooleanLiteral@@true @TO@ ClassInstanceCreation@@IntRangeValidator[Thread.MIN_PRIORITY, Thread.MAX_PRIORITY, true, true] @AT@ 22194 @LENGTH@ 4


UPD ExpressionStatement@@MethodInvocation:config.addFailedAttribute(subsystemAddress.append(CacheContainerResource.CONTAINER_PATH).append(cachePaths[i]),FailedOperationTransformationConfig.ChainedConfig.createBuilder(InfinispanRejectedExpressions_1_3.ACCEPT14_REJECT13_CACHE_ATTRIBUTES).addConfig(new FailedOperationTransformationConfig.RejectExpressionsConfig(InfinispanRejectedExpressions_1_3.ACCEPT14_REJECT13_CACHE_ATTRIBUTES)).addConfig(new RemoveResolvedIndexingPropertiesConfig(CacheResource.INDEXING_PROPERTIES)).build().setNotExpectedWriteFailure(ModelKeys.SEGMENTS)) @TO@ MethodInvocation:config.addFailedAttribute(subsystemAddress.append(CacheContainerResource.CONTAINER_PATH).append(cachePaths[i]),FailedOperationTransformationConfig.ChainedConfig.createBuilder(InfinispanRejectedExpressions_1_3.ACCEPT14_REJECT13_CACHE_ATTRIBUTES).addConfig(new FailedOperationTransformationConfig.RejectExpressionsConfig(InfinispanRejectedExpressions_1_3.ACCEPT14_REJECT13_CACHE_ATTRIBUTES)).addConfig(new RemoveResolvedIndexingPropertiesConfig(CacheResource.INDEXING_PROPERTIES)).build()) @AT@ 7518 @LENGTH@ 1028
---UPD MethodInvocation@@config.addFailedAttribute(subsystemAddress.append(CacheContainerResource.CONTAINER_PATH).append(cachePaths[i]),FailedOperationTransformationConfig.ChainedConfig.createBuilder(InfinispanRejectedExpressions_1_3.ACCEPT14_REJECT13_CACHE_ATTRIBUTES).addConfig(new FailedOperationTransformationConfig.RejectExpressionsConfig(InfinispanRejectedExpressions_1_3.ACCEPT14_REJECT13_CACHE_ATTRIBUTES)).addConfig(new RemoveResolvedIndexingPropertiesConfig(CacheResource.INDEXING_PROPERTIES)).build().setNotExpectedWriteFailure(ModelKeys.SEGMENTS)) @TO@ config.addFailedAttribute(subsystemAddress.append(CacheContainerResource.CONTAINER_PATH).append(cachePaths[i]),FailedOperationTransformationConfig.ChainedConfig.createBuilder(InfinispanRejectedExpressions_1_3.ACCEPT14_REJECT13_CACHE_ATTRIBUTES).addConfig(new FailedOperationTransformationConfig.RejectExpressionsConfig(InfinispanRejectedExpressions_1_3.ACCEPT14_REJECT13_CACHE_ATTRIBUTES)).addConfig(new RemoveResolvedIndexingPropertiesConfig(CacheResource.INDEXING_PROPERTIES)).build()) @AT@ 7518 @LENGTH@ 1027
------UPD SimpleName@@MethodName:addFailedAttribute:[subsystemAddress.append(CacheContainerResource.CONTAINER_PATH).append(cachePaths[i]), FailedOperationTransformationConfig.ChainedConfig.createBuilder(InfinispanRejectedExpressions_1_3.ACCEPT14_REJECT13_CACHE_ATTRIBUTES).addConfig(new FailedOperationTransformationConfig.RejectExpressionsConfig(InfinispanRejectedExpressions_1_3.ACCEPT14_REJECT13_CACHE_ATTRIBUTES)).addConfig(new RemoveResolvedIndexingPropertiesConfig(CacheResource.INDEXING_PROPERTIES)).build().setNotExpectedWriteFailure(ModelKeys.SEGMENTS)] @TO@ MethodName:addFailedAttribute:[subsystemAddress.append(CacheContainerResource.CONTAINER_PATH).append(cachePaths[i]), FailedOperationTransformationConfig.ChainedConfig.createBuilder(InfinispanRejectedExpressions_1_3.ACCEPT14_REJECT13_CACHE_ATTRIBUTES).addConfig(new FailedOperationTransformationConfig.RejectExpressionsConfig(InfinispanRejectedExpressions_1_3.ACCEPT14_REJECT13_CACHE_ATTRIBUTES)).addConfig(new RemoveResolvedIndexingPropertiesConfig(CacheResource.INDEXING_PROPERTIES)).build()] @AT@ 7525 @LENGTH@ 1020
---------UPD MethodInvocation@@FailedOperationTransformationConfig.ChainedConfig.createBuilder(InfinispanRejectedExpressions_1_3.ACCEPT14_REJECT13_CACHE_ATTRIBUTES).addConfig(new FailedOperationTransformationConfig.RejectExpressionsConfig(InfinispanRejectedExpressions_1_3.ACCEPT14_REJECT13_CACHE_ATTRIBUTES)).addConfig(new RemoveResolvedIndexingPropertiesConfig(CacheResource.INDEXING_PROPERTIES)).build().setNotExpectedWriteFailure(ModelKeys.SEGMENTS) @TO@ FailedOperationTransformationConfig.ChainedConfig.createBuilder(InfinispanRejectedExpressions_1_3.ACCEPT14_REJECT13_CACHE_ATTRIBUTES).addConfig(new FailedOperationTransformationConfig.RejectExpressionsConfig(InfinispanRejectedExpressions_1_3.ACCEPT14_REJECT13_CACHE_ATTRIBUTES)).addConfig(new RemoveResolvedIndexingPropertiesConfig(CacheResource.INDEXING_PROPERTIES)).build() @AT@ 8080 @LENGTH@ 464
------------DEL MethodInvocation@@MethodName:build:[] @AT@ 8080 @LENGTH@ 417
------------UPD SimpleName@@MethodName:setNotExpectedWriteFailure:[ModelKeys.SEGMENTS] @TO@ MethodName:build:[] @AT@ 8498 @LENGTH@ 46
---------------DEL QualifiedName@@ModelKeys.SEGMENTS @AT@ 8525 @LENGTH@ 18
------------------DEL SimpleName@@ModelKeys @AT@ 8525 @LENGTH@ 9
------------------DEL SimpleName@@SEGMENTS @AT@ 8535 @LENGTH@ 8


INS ExpressionStatement@@MethodInvocation:assertEquals("expects stream source","streamsource",payload.getBodySources().get(0).getClass().getSimpleName().toLowerCase()) @TO@ MethodDeclaration@@public, void, MethodName:testToCxfPayload,  @AT@ 3946 @LENGTH@ 128
---INS MethodInvocation@@assertEquals("expects stream source","streamsource",payload.getBodySources().get(0).getClass().getSimpleName().toLowerCase()) @TO@ ExpressionStatement@@MethodInvocation:assertEquals("expects stream source","streamsource",payload.getBodySources().get(0).getClass().getSimpleName().toLowerCase()) @AT@ 3946 @LENGTH@ 127
------INS SimpleName@@MethodName:assertEquals:["expects stream source", "streamsource", payload.getBodySources().get(0).getClass().getSimpleName().toLowerCase()] @TO@ MethodInvocation@@assertEquals("expects stream source","streamsource",payload.getBodySources().get(0).getClass().getSimpleName().toLowerCase()) @AT@ 3946 @LENGTH@ 127
---------INS StringLiteral@@"expects stream source" @TO@ SimpleName@@MethodName:assertEquals:["expects stream source", "streamsource", payload.getBodySources().get(0).getClass().getSimpleName().toLowerCase()] @AT@ 3959 @LENGTH@ 23
---------INS StringLiteral@@"streamsource" @TO@ SimpleName@@MethodName:assertEquals:["expects stream source", "streamsource", payload.getBodySources().get(0).getClass().getSimpleName().toLowerCase()] @AT@ 3984 @LENGTH@ 14
---------INS MethodInvocation@@payload.getBodySources().get(0).getClass().getSimpleName().toLowerCase() @TO@ SimpleName@@MethodName:assertEquals:["expects stream source", "streamsource", payload.getBodySources().get(0).getClass().getSimpleName().toLowerCase()] @AT@ 4000 @LENGTH@ 72
------------INS MethodInvocation@@MethodName:getSimpleName:[] @TO@ MethodInvocation@@payload.getBodySources().get(0).getClass().getSimpleName().toLowerCase() @AT@ 4000 @LENGTH@ 58
------------INS MethodInvocation@@MethodName:getClass:[] @TO@ MethodInvocation@@payload.getBodySources().get(0).getClass().getSimpleName().toLowerCase() @AT@ 4000 @LENGTH@ 42
------------INS MethodInvocation@@MethodName:get:[0] @TO@ MethodInvocation@@payload.getBodySources().get(0).getClass().getSimpleName().toLowerCase() @AT@ 4000 @LENGTH@ 31
---------------INS NumberLiteral@@0 @TO@ MethodInvocation@@MethodName:get:[0] @AT@ 4029 @LENGTH@ 1
------------INS MethodInvocation@@MethodName:getBodySources:[] @TO@ MethodInvocation@@payload.getBodySources().get(0).getClass().getSimpleName().toLowerCase() @AT@ 4000 @LENGTH@ 24
------------INS SimpleName@@Name:payload @TO@ MethodInvocation@@payload.getBodySources().get(0).getClass().getSimpleName().toLowerCase() @AT@ 4000 @LENGTH@ 7
------------INS SimpleName@@MethodName:toLowerCase:[] @TO@ MethodInvocation@@payload.getBodySources().get(0).getClass().getSimpleName().toLowerCase() @AT@ 4059 @LENGTH@ 13


UPD Block@@ThenBody:{  it=ObjectHelper.createIterator(methodParameters);} @TO@ ThenBody:{  String[] parameters=StringQuoteHelper.splitSafeQuote(methodParameters,',');  it=ObjectHelper.createIterator(parameters);} @AT@ 18331 @LENGTH@ 91
---UPD ExpressionStatement@@Assignment:it=ObjectHelper.createIterator(methodParameters) @TO@ Assignment:it=ObjectHelper.createIterator(parameters) @AT@ 18353 @LENGTH@ 51
------UPD Assignment@@it=ObjectHelper.createIterator(methodParameters) @TO@ it=ObjectHelper.createIterator(parameters) @AT@ 18353 @LENGTH@ 50
---------UPD MethodInvocation@@ObjectHelper.createIterator(methodParameters) @TO@ ObjectHelper.createIterator(parameters) @AT@ 18358 @LENGTH@ 45
------------UPD SimpleName@@MethodName:createIterator:[methodParameters] @TO@ MethodName:createIterator:[parameters] @AT@ 18371 @LENGTH@ 32
---------------UPD SimpleName@@methodParameters @TO@ parameters @AT@ 18386 @LENGTH@ 16
---INS VariableDeclarationStatement@@String[] parameters=StringQuoteHelper.splitSafeQuote(methodParameters,','); @TO@ Block@@ThenBody:{  it=ObjectHelper.createIterator(methodParameters);} @AT@ 18596 @LENGTH@ 78
------INS ArrayType@@String[] @TO@ VariableDeclarationStatement@@String[] parameters=StringQuoteHelper.splitSafeQuote(methodParameters,','); @AT@ 18596 @LENGTH@ 8
---------INS SimpleType@@String @TO@ ArrayType@@String[] @AT@ 18596 @LENGTH@ 6
------INS VariableDeclarationFragment@@parameters=StringQuoteHelper.splitSafeQuote(methodParameters,',') @TO@ VariableDeclarationStatement@@String[] parameters=StringQuoteHelper.splitSafeQuote(methodParameters,','); @AT@ 18605 @LENGTH@ 68
---------INS SimpleName@@parameters @TO@ VariableDeclarationFragment@@parameters=StringQuoteHelper.splitSafeQuote(methodParameters,',') @AT@ 18605 @LENGTH@ 10
---------INS MethodInvocation@@StringQuoteHelper.splitSafeQuote(methodParameters,',') @TO@ VariableDeclarationFragment@@parameters=StringQuoteHelper.splitSafeQuote(methodParameters,',') @AT@ 18618 @LENGTH@ 55
------------INS SimpleName@@Name:StringQuoteHelper @TO@ MethodInvocation@@StringQuoteHelper.splitSafeQuote(methodParameters,',') @AT@ 18618 @LENGTH@ 17
------------INS SimpleName@@MethodName:splitSafeQuote:[methodParameters, ','] @TO@ MethodInvocation@@StringQuoteHelper.splitSafeQuote(methodParameters,',') @AT@ 18636 @LENGTH@ 37
---------------INS SimpleName@@methodParameters @TO@ SimpleName@@MethodName:splitSafeQuote:[methodParameters, ','] @AT@ 18651 @LENGTH@ 16
---------------INS CharacterLiteral@@',' @TO@ SimpleName@@MethodName:splitSafeQuote:[methodParameters, ','] @AT@ 18669 @LENGTH@ 3


INS MethodDeclaration@@public, void, MethodName:testExecute,  @TO@ TypeDeclaration@@[@RunWith(SpringJUnit4ClassRunner.class), @ContextConfiguration, public]RjcConnectionPipelineIntegrationTests, AbstractConnectionPipelineIntegrationTests @AT@ 6538 @LENGTH@ 202
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testExecute,  @AT@ 6538 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testExecute,  @AT@ 6545 @LENGTH@ 4
---INS SimpleName@@MethodName:testExecute @TO@ MethodDeclaration@@public, void, MethodName:testExecute,  @AT@ 6550 @LENGTH@ 11
---INS ExpressionStatement@@MethodInvocation:connection.set("foo","bar") @TO@ MethodDeclaration@@public, void, MethodName:testExecute,  @AT@ 6568 @LENGTH@ 29
------INS MethodInvocation@@connection.set("foo","bar") @TO@ ExpressionStatement@@MethodInvocation:connection.set("foo","bar") @AT@ 6568 @LENGTH@ 28
---------INS SimpleName@@Name:connection @TO@ MethodInvocation@@connection.set("foo","bar") @AT@ 6568 @LENGTH@ 10
---------INS SimpleName@@MethodName:set:["foo", "bar"] @TO@ MethodInvocation@@connection.set("foo","bar") @AT@ 6579 @LENGTH@ 17
------------INS StringLiteral@@"foo" @TO@ SimpleName@@MethodName:set:["foo", "bar"] @AT@ 6583 @LENGTH@ 5
------------INS StringLiteral@@"bar" @TO@ SimpleName@@MethodName:set:["foo", "bar"] @AT@ 6590 @LENGTH@ 5
---INS ExpressionStatement@@MethodInvocation:actual.add(connection.execute("GET",RjcUtils.decode("foo".getBytes()))) @TO@ MethodDeclaration@@public, void, MethodName:testExecute,  @AT@ 6600 @LENGTH@ 73
------INS MethodInvocation@@actual.add(connection.execute("GET",RjcUtils.decode("foo".getBytes()))) @TO@ ExpressionStatement@@MethodInvocation:actual.add(connection.execute("GET",RjcUtils.decode("foo".getBytes()))) @AT@ 6600 @LENGTH@ 72
---------INS SimpleName@@Name:actual @TO@ MethodInvocation@@actual.add(connection.execute("GET",RjcUtils.decode("foo".getBytes()))) @AT@ 6600 @LENGTH@ 6
---------INS SimpleName@@MethodName:add:[connection.execute("GET",RjcUtils.decode("foo".getBytes()))] @TO@ MethodInvocation@@actual.add(connection.execute("GET",RjcUtils.decode("foo".getBytes()))) @AT@ 6607 @LENGTH@ 65
------------INS MethodInvocation@@connection.execute("GET",RjcUtils.decode("foo".getBytes())) @TO@ SimpleName@@MethodName:add:[connection.execute("GET",RjcUtils.decode("foo".getBytes()))] @AT@ 6611 @LENGTH@ 60
---------------INS SimpleName@@Name:connection @TO@ MethodInvocation@@connection.execute("GET",RjcUtils.decode("foo".getBytes())) @AT@ 6611 @LENGTH@ 10
---------------INS SimpleName@@MethodName:execute:["GET", RjcUtils.decode("foo".getBytes())] @TO@ MethodInvocation@@connection.execute("GET",RjcUtils.decode("foo".getBytes())) @AT@ 6622 @LENGTH@ 49
------------------INS StringLiteral@@"GET" @TO@ SimpleName@@MethodName:execute:["GET", RjcUtils.decode("foo".getBytes())] @AT@ 6630 @LENGTH@ 5
------------------INS MethodInvocation@@RjcUtils.decode("foo".getBytes()) @TO@ SimpleName@@MethodName:execute:["GET", RjcUtils.decode("foo".getBytes())] @AT@ 6637 @LENGTH@ 33
---------------------INS SimpleName@@Name:RjcUtils @TO@ MethodInvocation@@RjcUtils.decode("foo".getBytes()) @AT@ 6637 @LENGTH@ 8
---------------------INS SimpleName@@MethodName:decode:["foo".getBytes()] @TO@ MethodInvocation@@RjcUtils.decode("foo".getBytes()) @AT@ 6646 @LENGTH@ 24
------------------------INS MethodInvocation@@"foo".getBytes() @TO@ SimpleName@@MethodName:decode:["foo".getBytes()] @AT@ 6653 @LENGTH@ 16
---------------------------INS StringLiteral@@"foo" @TO@ MethodInvocation@@"foo".getBytes() @AT@ 6653 @LENGTH@ 5
---------------------------INS SimpleName@@MethodName:getBytes:[] @TO@ MethodInvocation@@"foo".getBytes() @AT@ 6659 @LENGTH@ 10
---INS ExpressionStatement@@MethodInvocation:verifyResults(Arrays.asList(new Object[]{"bar"}),actual) @TO@ MethodDeclaration@@public, void, MethodName:testExecute,  @AT@ 6676 @LENGTH@ 61
------INS MethodInvocation@@verifyResults(Arrays.asList(new Object[]{"bar"}),actual) @TO@ ExpressionStatement@@MethodInvocation:verifyResults(Arrays.asList(new Object[]{"bar"}),actual) @AT@ 6676 @LENGTH@ 60
---------INS SimpleName@@MethodName:verifyResults:[Arrays.asList(new Object[]{"bar"}), actual] @TO@ MethodInvocation@@verifyResults(Arrays.asList(new Object[]{"bar"}),actual) @AT@ 6676 @LENGTH@ 60
------------INS MethodInvocation@@Arrays.asList(new Object[]{"bar"}) @TO@ SimpleName@@MethodName:verifyResults:[Arrays.asList(new Object[]{"bar"}), actual] @AT@ 6690 @LENGTH@ 37
---------------INS SimpleName@@Name:Arrays @TO@ MethodInvocation@@Arrays.asList(new Object[]{"bar"}) @AT@ 6690 @LENGTH@ 6
---------------INS SimpleName@@MethodName:asList:[new Object[]{"bar"}] @TO@ MethodInvocation@@Arrays.asList(new Object[]{"bar"}) @AT@ 6697 @LENGTH@ 30
------------------INS ArrayCreation@@new Object[]{"bar"} @TO@ SimpleName@@MethodName:asList:[new Object[]{"bar"}] @AT@ 6704 @LENGTH@ 22
---------------------INS ArrayType@@Object[] @TO@ ArrayCreation@@new Object[]{"bar"} @AT@ 6708 @LENGTH@ 8
------------------------INS SimpleType@@Object @TO@ ArrayType@@Object[] @AT@ 6708 @LENGTH@ 6
---------------------INS ArrayInitializer@@{"bar"} @TO@ ArrayCreation@@new Object[]{"bar"} @AT@ 6717 @LENGTH@ 9
------------------------INS StringLiteral@@"bar" @TO@ ArrayInitializer@@{"bar"} @AT@ 6719 @LENGTH@ 5
------------INS SimpleName@@actual @TO@ SimpleName@@MethodName:verifyResults:[Arrays.asList(new Object[]{"bar"}), actual] @AT@ 6729 @LENGTH@ 6


UPD IfStatement@@if (!config.expectFailedWriteAttributeOperation(writeOp)) {  Assert.assertEquals(SUCCESS,result.get(OUTCOME).asString());} else {  Assert.assertEquals(FAILED,result.get(OUTCOME).asString());  transformedOperation=mainServices.transformOperation(modelVersion,config.correctWriteAttributeOperation(writeOp));  checkOutcome(mainServices.executeOperation(modelVersion,transformedOperation));} @TO@ if (!config.expectFailedWriteAttributeOperation(writeOp)) {  Assert.assertEquals("Failed: " + writeOp + "\n"+ result,SUCCESS,result.get(OUTCOME).asString());} else {  Assert.assertEquals("Expected failure: " + writeOp,FAILED,result.get(OUTCOME).asString());  transformedOperation=mainServices.transformOperation(modelVersion,config.correctWriteAttributeOperation(writeOp));  result=mainServices.executeOperation(modelVersion,transformedOperation);  Assert.assertEquals(result.get(FAILURE_DESCRIPTION).asString() + " for\n:" + transformedOperation.getTransformedOperation(),SUCCESS,result.get(OUTCOME).asString());} @AT@ 22269 @LENGTH@ 504
---UPD Block@@ThenBody:{  Assert.assertEquals(SUCCESS,result.get(OUTCOME).asString());} @TO@ ThenBody:{  Assert.assertEquals("Failed: " + writeOp + "\n"+ result,SUCCESS,result.get(OUTCOME).asString());} @AT@ 22327 @LENGTH@ 101
------UPD ExpressionStatement@@MethodInvocation:Assert.assertEquals(SUCCESS,result.get(OUTCOME).asString()) @TO@ MethodInvocation:Assert.assertEquals("Expected failure: " + writeOp,FAILED,result.get(OUTCOME).asString()) @AT@ 22349 @LENGTH@ 61
------MOV ExpressionStatement@@MethodInvocation:Assert.assertEquals(FAILED,result.get(OUTCOME).asString()) @TO@ Block@@ThenBody:{  Assert.assertEquals(SUCCESS,result.get(OUTCOME).asString());} @AT@ 22456 @LENGTH@ 60
---------UPD MethodInvocation@@Assert.assertEquals(FAILED,result.get(OUTCOME).asString()) @TO@ Assert.assertEquals("Failed: " + writeOp + "\n"+ result,SUCCESS,result.get(OUTCOME).asString()) @AT@ 22456 @LENGTH@ 59
------------UPD SimpleName@@MethodName:assertEquals:[FAILED, result.get(OUTCOME).asString()] @TO@ MethodName:assertEquals:["Failed: " + writeOp + "\n"+ result, SUCCESS, result.get(OUTCOME).asString()] @AT@ 22463 @LENGTH@ 52
---------------INS InfixExpression@@"Failed: " + writeOp + "\n"+ result @TO@ SimpleName@@MethodName:assertEquals:[FAILED, result.get(OUTCOME).asString()] @AT@ 22369 @LENGTH@ 36
------------------INS StringLiteral@@"Failed: " @TO@ InfixExpression@@"Failed: " + writeOp + "\n"+ result @AT@ 22369 @LENGTH@ 10
------------------INS Operator@@+ @TO@ InfixExpression@@"Failed: " + writeOp + "\n"+ result @AT@ 22379 @LENGTH@ 1
------------------INS SimpleName@@writeOp @TO@ InfixExpression@@"Failed: " + writeOp + "\n"+ result @AT@ 22382 @LENGTH@ 7
------------------INS StringLiteral@@"\n" @TO@ InfixExpression@@"Failed: " + writeOp + "\n"+ result @AT@ 22392 @LENGTH@ 4
------------------INS SimpleName@@result @TO@ InfixExpression@@"Failed: " + writeOp + "\n"+ result @AT@ 22399 @LENGTH@ 6
---------------INS SimpleName@@SUCCESS @TO@ SimpleName@@MethodName:assertEquals:[FAILED, result.get(OUTCOME).asString()] @AT@ 22407 @LENGTH@ 7
---------------DEL SimpleName@@FAILED @AT@ 22476 @LENGTH@ 6
---UPD Block@@ElseBody:{  Assert.assertEquals(FAILED,result.get(OUTCOME).asString());  transformedOperation=mainServices.transformOperation(modelVersion,config.correctWriteAttributeOperation(writeOp));  checkOutcome(mainServices.executeOperation(modelVersion,transformedOperation));} @TO@ ElseBody:{  Assert.assertEquals("Expected failure: " + writeOp,FAILED,result.get(OUTCOME).asString());  transformedOperation=mainServices.transformOperation(modelVersion,config.correctWriteAttributeOperation(writeOp));  result=mainServices.executeOperation(modelVersion,transformedOperation);  Assert.assertEquals(result.get(FAILURE_DESCRIPTION).asString() + " for\n:" + transformedOperation.getTransformedOperation(),SUCCESS,result.get(OUTCOME).asString());} @AT@ 22434 @LENGTH@ 339
------MOV ExpressionStatement@@MethodInvocation:Assert.assertEquals(SUCCESS,result.get(OUTCOME).asString()) @TO@ Block@@ElseBody:{  Assert.assertEquals(FAILED,result.get(OUTCOME).asString());  transformedOperation=mainServices.transformOperation(modelVersion,config.correctWriteAttributeOperation(writeOp));  checkOutcome(mainServices.executeOperation(modelVersion,transformedOperation));} @AT@ 22349 @LENGTH@ 61
---------UPD MethodInvocation@@Assert.assertEquals(SUCCESS,result.get(OUTCOME).asString()) @TO@ Assert.assertEquals("Expected failure: " + writeOp,FAILED,result.get(OUTCOME).asString()) @AT@ 22349 @LENGTH@ 60
------------UPD SimpleName@@MethodName:assertEquals:[SUCCESS, result.get(OUTCOME).asString()] @TO@ MethodName:assertEquals:["Expected failure: " + writeOp, FAILED, result.get(OUTCOME).asString()] @AT@ 22356 @LENGTH@ 53
---------------DEL SimpleName@@SUCCESS @AT@ 22369 @LENGTH@ 7
---------------INS InfixExpression@@"Expected failure: " + writeOp @TO@ SimpleName@@MethodName:assertEquals:[SUCCESS, result.get(OUTCOME).asString()] @AT@ 22514 @LENGTH@ 30
------------------INS StringLiteral@@"Expected failure: " @TO@ InfixExpression@@"Expected failure: " + writeOp @AT@ 22514 @LENGTH@ 20
------------------INS Operator@@+ @TO@ InfixExpression@@"Expected failure: " + writeOp @AT@ 22534 @LENGTH@ 1
------------------INS SimpleName@@writeOp @TO@ InfixExpression@@"Expected failure: " + writeOp @AT@ 22537 @LENGTH@ 7
---------------INS SimpleName@@FAILED @TO@ SimpleName@@MethodName:assertEquals:[SUCCESS, result.get(OUTCOME).asString()] @AT@ 22547 @LENGTH@ 6
------UPD ExpressionStatement@@MethodInvocation:Assert.assertEquals(FAILED,result.get(OUTCOME).asString()) @TO@ MethodInvocation:Assert.assertEquals("Failed: " + writeOp + "\n"+ result,SUCCESS,result.get(OUTCOME).asString()) @AT@ 22456 @LENGTH@ 60
------UPD ExpressionStatement@@MethodInvocation:checkOutcome(mainServices.executeOperation(modelVersion,transformedOperation)) @TO@ Assignment:result=mainServices.executeOperation(modelVersion,transformedOperation) @AT@ 22675 @LENGTH@ 80
---------DEL MethodInvocation@@checkOutcome(mainServices.executeOperation(modelVersion,transformedOperation)) @AT@ 22675 @LENGTH@ 79
------------DEL SimpleName@@MethodName:checkOutcome:[mainServices.executeOperation(modelVersion,transformedOperation)] @AT@ 22675 @LENGTH@ 79
---------INS Assignment@@result=mainServices.executeOperation(modelVersion,transformedOperation) @TO@ ExpressionStatement@@MethodInvocation:checkOutcome(mainServices.executeOperation(modelVersion,transformedOperation)) @AT@ 22746 @LENGTH@ 74
------------MOV MethodInvocation@@mainServices.executeOperation(modelVersion,transformedOperation) @TO@ Assignment@@result=mainServices.executeOperation(modelVersion,transformedOperation) @AT@ 22688 @LENGTH@ 65
------------INS SimpleName@@result @TO@ Assignment@@result=mainServices.executeOperation(modelVersion,transformedOperation) @AT@ 22746 @LENGTH@ 6
------------INS Operator@@= @TO@ Assignment@@result=mainServices.executeOperation(modelVersion,transformedOperation) @AT@ 22752 @LENGTH@ 1
------INS ExpressionStatement@@MethodInvocation:Assert.assertEquals(result.get(FAILURE_DESCRIPTION).asString() + " for\n:" + transformedOperation.getTransformedOperation(),SUCCESS,result.get(OUTCOME).asString()) @TO@ Block@@ElseBody:{  Assert.assertEquals(FAILED,result.get(OUTCOME).asString());  transformedOperation=mainServices.transformOperation(modelVersion,config.correctWriteAttributeOperation(writeOp));  checkOutcome(mainServices.executeOperation(modelVersion,transformedOperation));} @AT@ 22842 @LENGTH@ 166
---------INS MethodInvocation@@Assert.assertEquals(result.get(FAILURE_DESCRIPTION).asString() + " for\n:" + transformedOperation.getTransformedOperation(),SUCCESS,result.get(OUTCOME).asString()) @TO@ ExpressionStatement@@MethodInvocation:Assert.assertEquals(result.get(FAILURE_DESCRIPTION).asString() + " for\n:" + transformedOperation.getTransformedOperation(),SUCCESS,result.get(OUTCOME).asString()) @AT@ 22842 @LENGTH@ 165
------------INS SimpleName@@Name:Assert @TO@ MethodInvocation@@Assert.assertEquals(result.get(FAILURE_DESCRIPTION).asString() + " for\n:" + transformedOperation.getTransformedOperation(),SUCCESS,result.get(OUTCOME).asString()) @AT@ 22842 @LENGTH@ 6
------------INS SimpleName@@MethodName:assertEquals:[result.get(FAILURE_DESCRIPTION).asString() + " for\n:" + transformedOperation.getTransformedOperation(), SUCCESS, result.get(OUTCOME).asString()] @TO@ MethodInvocation@@Assert.assertEquals(result.get(FAILURE_DESCRIPTION).asString() + " for\n:" + transformedOperation.getTransformedOperation(),SUCCESS,result.get(OUTCOME).asString()) @AT@ 22849 @LENGTH@ 158
---------------INS InfixExpression@@result.get(FAILURE_DESCRIPTION).asString() + " for\n:" + transformedOperation.getTransformedOperation() @TO@ SimpleName@@MethodName:assertEquals:[result.get(FAILURE_DESCRIPTION).asString() + " for\n:" + transformedOperation.getTransformedOperation(), SUCCESS, result.get(OUTCOME).asString()] @AT@ 22862 @LENGTH@ 103
------------------INS MethodInvocation@@result.get(FAILURE_DESCRIPTION).asString() @TO@ InfixExpression@@result.get(FAILURE_DESCRIPTION).asString() + " for\n:" + transformedOperation.getTransformedOperation() @AT@ 22862 @LENGTH@ 42
---------------------INS MethodInvocation@@MethodName:get:[FAILURE_DESCRIPTION] @TO@ MethodInvocation@@result.get(FAILURE_DESCRIPTION).asString() @AT@ 22862 @LENGTH@ 31
------------------------INS SimpleName@@FAILURE_DESCRIPTION @TO@ MethodInvocation@@MethodName:get:[FAILURE_DESCRIPTION] @AT@ 22873 @LENGTH@ 19
---------------------INS SimpleName@@Name:result @TO@ MethodInvocation@@result.get(FAILURE_DESCRIPTION).asString() @AT@ 22862 @LENGTH@ 6
---------------------INS SimpleName@@MethodName:asString:[] @TO@ MethodInvocation@@result.get(FAILURE_DESCRIPTION).asString() @AT@ 22894 @LENGTH@ 10
------------------INS Operator@@+ @TO@ InfixExpression@@result.get(FAILURE_DESCRIPTION).asString() + " for\n:" + transformedOperation.getTransformedOperation() @AT@ 22904 @LENGTH@ 1
------------------INS StringLiteral@@" for\n:" @TO@ InfixExpression@@result.get(FAILURE_DESCRIPTION).asString() + " for\n:" + transformedOperation.getTransformedOperation() @AT@ 22907 @LENGTH@ 9
------------------INS MethodInvocation@@transformedOperation.getTransformedOperation() @TO@ InfixExpression@@result.get(FAILURE_DESCRIPTION).asString() + " for\n:" + transformedOperation.getTransformedOperation() @AT@ 22919 @LENGTH@ 46
---------------------INS SimpleName@@Name:transformedOperation @TO@ MethodInvocation@@transformedOperation.getTransformedOperation() @AT@ 22919 @LENGTH@ 20
---------------------INS SimpleName@@MethodName:getTransformedOperation:[] @TO@ MethodInvocation@@transformedOperation.getTransformedOperation() @AT@ 22940 @LENGTH@ 25
---------------INS SimpleName@@SUCCESS @TO@ SimpleName@@MethodName:assertEquals:[result.get(FAILURE_DESCRIPTION).asString() + " for\n:" + transformedOperation.getTransformedOperation(), SUCCESS, result.get(OUTCOME).asString()] @AT@ 22967 @LENGTH@ 7
---------------INS MethodInvocation@@result.get(OUTCOME).asString() @TO@ SimpleName@@MethodName:assertEquals:[result.get(FAILURE_DESCRIPTION).asString() + " for\n:" + transformedOperation.getTransformedOperation(), SUCCESS, result.get(OUTCOME).asString()] @AT@ 22976 @LENGTH@ 30
------------------INS MethodInvocation@@MethodName:get:[OUTCOME] @TO@ MethodInvocation@@result.get(OUTCOME).asString() @AT@ 22976 @LENGTH@ 19
---------------------INS SimpleName@@OUTCOME @TO@ MethodInvocation@@MethodName:get:[OUTCOME] @AT@ 22987 @LENGTH@ 7
------------------INS SimpleName@@Name:result @TO@ MethodInvocation@@result.get(OUTCOME).asString() @AT@ 22976 @LENGTH@ 6
------------------INS SimpleName@@MethodName:asString:[] @TO@ MethodInvocation@@result.get(OUTCOME).asString() @AT@ 22996 @LENGTH@ 10


INS MethodDeclaration@@public, void, MethodName:testHashMethod, Exception,  @TO@ TypeDeclaration@@[public, abstract]AbstractConnectionIntegrationTests,  @AT@ 11025 @LENGTH@ 482
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testHashMethod, Exception,  @AT@ 11025 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testHashMethod, Exception,  @AT@ 11032 @LENGTH@ 4
---INS SimpleName@@MethodName:testHashMethod @TO@ MethodDeclaration@@public, void, MethodName:testHashMethod, Exception,  @AT@ 11037 @LENGTH@ 14
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:testHashMethod, Exception,  @AT@ 11061 @LENGTH@ 9
---INS VariableDeclarationStatement@@String hash=getClass() + ":hashtest"; @TO@ MethodDeclaration@@public, void, MethodName:testHashMethod, Exception,  @AT@ 11075 @LENGTH@ 39
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String hash=getClass() + ":hashtest"; @AT@ 11075 @LENGTH@ 6
------INS VariableDeclarationFragment@@hash=getClass() + ":hashtest" @TO@ VariableDeclarationStatement@@String hash=getClass() + ":hashtest"; @AT@ 11082 @LENGTH@ 31
---------INS SimpleName@@hash @TO@ VariableDeclarationFragment@@hash=getClass() + ":hashtest" @AT@ 11082 @LENGTH@ 4
---------INS InfixExpression@@getClass() + ":hashtest" @TO@ VariableDeclarationFragment@@hash=getClass() + ":hashtest" @AT@ 11089 @LENGTH@ 24
------------INS MethodInvocation@@MethodName:getClass:[] @TO@ InfixExpression@@getClass() + ":hashtest" @AT@ 11089 @LENGTH@ 10
------------INS Operator@@+ @TO@ InfixExpression@@getClass() + ":hashtest" @AT@ 11099 @LENGTH@ 1
------------INS StringLiteral@@":hashtest" @TO@ InfixExpression@@getClass() + ":hashtest" @AT@ 11102 @LENGTH@ 11
---INS VariableDeclarationStatement@@String key1=UUID.randomUUID().toString(); @TO@ MethodDeclaration@@public, void, MethodName:testHashMethod, Exception,  @AT@ 11117 @LENGTH@ 43
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String key1=UUID.randomUUID().toString(); @AT@ 11117 @LENGTH@ 6
------INS VariableDeclarationFragment@@key1=UUID.randomUUID().toString() @TO@ VariableDeclarationStatement@@String key1=UUID.randomUUID().toString(); @AT@ 11124 @LENGTH@ 35
---------INS SimpleName@@key1 @TO@ VariableDeclarationFragment@@key1=UUID.randomUUID().toString() @AT@ 11124 @LENGTH@ 4
---------INS MethodInvocation@@UUID.randomUUID().toString() @TO@ VariableDeclarationFragment@@key1=UUID.randomUUID().toString() @AT@ 11131 @LENGTH@ 28
------------INS MethodInvocation@@MethodName:randomUUID:[] @TO@ MethodInvocation@@UUID.randomUUID().toString() @AT@ 11131 @LENGTH@ 17
------------INS SimpleName@@Name:UUID @TO@ MethodInvocation@@UUID.randomUUID().toString() @AT@ 11131 @LENGTH@ 4
------------INS SimpleName@@MethodName:toString:[] @TO@ MethodInvocation@@UUID.randomUUID().toString() @AT@ 11149 @LENGTH@ 10
---INS VariableDeclarationStatement@@String key2=UUID.randomUUID().toString(); @TO@ MethodDeclaration@@public, void, MethodName:testHashMethod, Exception,  @AT@ 11163 @LENGTH@ 43
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String key2=UUID.randomUUID().toString(); @AT@ 11163 @LENGTH@ 6
------INS VariableDeclarationFragment@@key2=UUID.randomUUID().toString() @TO@ VariableDeclarationStatement@@String key2=UUID.randomUUID().toString(); @AT@ 11170 @LENGTH@ 35
---------INS SimpleName@@key2 @TO@ VariableDeclarationFragment@@key2=UUID.randomUUID().toString() @AT@ 11170 @LENGTH@ 4
---------INS MethodInvocation@@UUID.randomUUID().toString() @TO@ VariableDeclarationFragment@@key2=UUID.randomUUID().toString() @AT@ 11177 @LENGTH@ 28
------------INS MethodInvocation@@MethodName:randomUUID:[] @TO@ MethodInvocation@@UUID.randomUUID().toString() @AT@ 11177 @LENGTH@ 17
------------INS SimpleName@@Name:UUID @TO@ MethodInvocation@@UUID.randomUUID().toString() @AT@ 11177 @LENGTH@ 4
------------INS SimpleName@@MethodName:toString:[] @TO@ MethodInvocation@@UUID.randomUUID().toString() @AT@ 11195 @LENGTH@ 10
---INS ExpressionStatement@@MethodInvocation:connection.hSet(hash,key1,UUID.randomUUID().toString()) @TO@ MethodDeclaration@@public, void, MethodName:testHashMethod, Exception,  @AT@ 11209 @LENGTH@ 58
------INS MethodInvocation@@connection.hSet(hash,key1,UUID.randomUUID().toString()) @TO@ ExpressionStatement@@MethodInvocation:connection.hSet(hash,key1,UUID.randomUUID().toString()) @AT@ 11209 @LENGTH@ 57
---------INS SimpleName@@Name:connection @TO@ MethodInvocation@@connection.hSet(hash,key1,UUID.randomUUID().toString()) @AT@ 11209 @LENGTH@ 10
---------INS SimpleName@@MethodName:hSet:[hash, key1, UUID.randomUUID().toString()] @TO@ MethodInvocation@@connection.hSet(hash,key1,UUID.randomUUID().toString()) @AT@ 11220 @LENGTH@ 46
------------INS SimpleName@@hash @TO@ SimpleName@@MethodName:hSet:[hash, key1, UUID.randomUUID().toString()] @AT@ 11225 @LENGTH@ 4
------------INS SimpleName@@key1 @TO@ SimpleName@@MethodName:hSet:[hash, key1, UUID.randomUUID().toString()] @AT@ 11231 @LENGTH@ 4
------------INS MethodInvocation@@UUID.randomUUID().toString() @TO@ SimpleName@@MethodName:hSet:[hash, key1, UUID.randomUUID().toString()] @AT@ 11237 @LENGTH@ 28
---------------INS MethodInvocation@@MethodName:randomUUID:[] @TO@ MethodInvocation@@UUID.randomUUID().toString() @AT@ 11237 @LENGTH@ 17
---------------INS SimpleName@@Name:UUID @TO@ MethodInvocation@@UUID.randomUUID().toString() @AT@ 11237 @LENGTH@ 4
---------------INS SimpleName@@MethodName:toString:[] @TO@ MethodInvocation@@UUID.randomUUID().toString() @AT@ 11255 @LENGTH@ 10
---INS ExpressionStatement@@MethodInvocation:connection.hSet(hash,key2,UUID.randomUUID().toString()) @TO@ MethodDeclaration@@public, void, MethodName:testHashMethod, Exception,  @AT@ 11270 @LENGTH@ 58
------INS MethodInvocation@@connection.hSet(hash,key2,UUID.randomUUID().toString()) @TO@ ExpressionStatement@@MethodInvocation:connection.hSet(hash,key2,UUID.randomUUID().toString()) @AT@ 11270 @LENGTH@ 57
---------INS SimpleName@@Name:connection @TO@ MethodInvocation@@connection.hSet(hash,key2,UUID.randomUUID().toString()) @AT@ 11270 @LENGTH@ 10
---------INS SimpleName@@MethodName:hSet:[hash, key2, UUID.randomUUID().toString()] @TO@ MethodInvocation@@connection.hSet(hash,key2,UUID.randomUUID().toString()) @AT@ 11281 @LENGTH@ 46
------------INS SimpleName@@hash @TO@ SimpleName@@MethodName:hSet:[hash, key2, UUID.randomUUID().toString()] @AT@ 11286 @LENGTH@ 4
------------INS SimpleName@@key2 @TO@ SimpleName@@MethodName:hSet:[hash, key2, UUID.randomUUID().toString()] @AT@ 11292 @LENGTH@ 4
------------INS MethodInvocation@@UUID.randomUUID().toString() @TO@ SimpleName@@MethodName:hSet:[hash, key2, UUID.randomUUID().toString()] @AT@ 11298 @LENGTH@ 28
---------------INS MethodInvocation@@MethodName:randomUUID:[] @TO@ MethodInvocation@@UUID.randomUUID().toString() @AT@ 11298 @LENGTH@ 17
---------------INS SimpleName@@Name:UUID @TO@ MethodInvocation@@UUID.randomUUID().toString() @AT@ 11298 @LENGTH@ 4
---------------INS SimpleName@@MethodName:toString:[] @TO@ MethodInvocation@@UUID.randomUUID().toString() @AT@ 11316 @LENGTH@ 10
---INS VariableDeclarationStatement@@Map<String,String> hashMap=connection.hGetAll(hash); @TO@ MethodDeclaration@@public, void, MethodName:testHashMethod, Exception,  @AT@ 11332 @LENGTH@ 55
------INS ParameterizedType@@Map<String,String> @TO@ VariableDeclarationStatement@@Map<String,String> hashMap=connection.hGetAll(hash); @AT@ 11332 @LENGTH@ 19
---------INS SimpleType@@Map @TO@ ParameterizedType@@Map<String,String> @AT@ 11332 @LENGTH@ 3
---------INS SimpleType@@String @TO@ ParameterizedType@@Map<String,String> @AT@ 11336 @LENGTH@ 6
---------INS SimpleType@@String @TO@ ParameterizedType@@Map<String,String> @AT@ 11344 @LENGTH@ 6
------INS VariableDeclarationFragment@@hashMap=connection.hGetAll(hash) @TO@ VariableDeclarationStatement@@Map<String,String> hashMap=connection.hGetAll(hash); @AT@ 11352 @LENGTH@ 34
---------INS SimpleName@@hashMap @TO@ VariableDeclarationFragment@@hashMap=connection.hGetAll(hash) @AT@ 11352 @LENGTH@ 7
---------INS MethodInvocation@@connection.hGetAll(hash) @TO@ VariableDeclarationFragment@@hashMap=connection.hGetAll(hash) @AT@ 11362 @LENGTH@ 24
------------INS SimpleName@@Name:connection @TO@ MethodInvocation@@connection.hGetAll(hash) @AT@ 11362 @LENGTH@ 10
------------INS SimpleName@@MethodName:hGetAll:[hash] @TO@ MethodInvocation@@connection.hGetAll(hash) @AT@ 11373 @LENGTH@ 13
---------------INS SimpleName@@hash @TO@ SimpleName@@MethodName:hGetAll:[hash] @AT@ 11381 @LENGTH@ 4
---INS ExpressionStatement@@MethodInvocation:assertTrue(hashMap.size() >= 2) @TO@ MethodDeclaration@@public, void, MethodName:testHashMethod, Exception,  @AT@ 11390 @LENGTH@ 32
------INS MethodInvocation@@assertTrue(hashMap.size() >= 2) @TO@ ExpressionStatement@@MethodInvocation:assertTrue(hashMap.size() >= 2) @AT@ 11390 @LENGTH@ 31
---------INS SimpleName@@MethodName:assertTrue:[hashMap.size() >= 2] @TO@ MethodInvocation@@assertTrue(hashMap.size() >= 2) @AT@ 11390 @LENGTH@ 31
------------INS InfixExpression@@hashMap.size() >= 2 @TO@ SimpleName@@MethodName:assertTrue:[hashMap.size() >= 2] @AT@ 11401 @LENGTH@ 19
---------------INS MethodInvocation@@hashMap.size() @TO@ InfixExpression@@hashMap.size() >= 2 @AT@ 11401 @LENGTH@ 14
------------------INS SimpleName@@Name:hashMap @TO@ MethodInvocation@@hashMap.size() @AT@ 11401 @LENGTH@ 7
------------------INS SimpleName@@MethodName:size:[] @TO@ MethodInvocation@@hashMap.size() @AT@ 11409 @LENGTH@ 6
---------------INS Operator@@>= @TO@ InfixExpression@@hashMap.size() >= 2 @AT@ 11415 @LENGTH@ 2
---------------INS NumberLiteral@@2 @TO@ InfixExpression@@hashMap.size() >= 2 @AT@ 11419 @LENGTH@ 1
---INS ExpressionStatement@@MethodInvocation:assertTrue(hashMap.containsKey(key1)) @TO@ MethodDeclaration@@public, void, MethodName:testHashMethod, Exception,  @AT@ 11425 @LENGTH@ 38
------INS MethodInvocation@@assertTrue(hashMap.containsKey(key1)) @TO@ ExpressionStatement@@MethodInvocation:assertTrue(hashMap.containsKey(key1)) @AT@ 11425 @LENGTH@ 37
---------INS SimpleName@@MethodName:assertTrue:[hashMap.containsKey(key1)] @TO@ MethodInvocation@@assertTrue(hashMap.containsKey(key1)) @AT@ 11425 @LENGTH@ 37
------------INS MethodInvocation@@hashMap.containsKey(key1) @TO@ SimpleName@@MethodName:assertTrue:[hashMap.containsKey(key1)] @AT@ 11436 @LENGTH@ 25
---------------INS SimpleName@@Name:hashMap @TO@ MethodInvocation@@hashMap.containsKey(key1) @AT@ 11436 @LENGTH@ 7
---------------INS SimpleName@@MethodName:containsKey:[key1] @TO@ MethodInvocation@@hashMap.containsKey(key1) @AT@ 11444 @LENGTH@ 17
------------------INS SimpleName@@key1 @TO@ SimpleName@@MethodName:containsKey:[key1] @AT@ 11456 @LENGTH@ 4
---INS ExpressionStatement@@MethodInvocation:assertTrue(hashMap.containsKey(key2)) @TO@ MethodDeclaration@@public, void, MethodName:testHashMethod, Exception,  @AT@ 11466 @LENGTH@ 38
------INS MethodInvocation@@assertTrue(hashMap.containsKey(key2)) @TO@ ExpressionStatement@@MethodInvocation:assertTrue(hashMap.containsKey(key2)) @AT@ 11466 @LENGTH@ 37
---------INS SimpleName@@MethodName:assertTrue:[hashMap.containsKey(key2)] @TO@ MethodInvocation@@assertTrue(hashMap.containsKey(key2)) @AT@ 11466 @LENGTH@ 37
------------INS MethodInvocation@@hashMap.containsKey(key2) @TO@ SimpleName@@MethodName:assertTrue:[hashMap.containsKey(key2)] @AT@ 11477 @LENGTH@ 25
---------------INS SimpleName@@Name:hashMap @TO@ MethodInvocation@@hashMap.containsKey(key2) @AT@ 11477 @LENGTH@ 7
---------------INS SimpleName@@MethodName:containsKey:[key2] @TO@ MethodInvocation@@hashMap.containsKey(key2) @AT@ 11485 @LENGTH@ 17
------------------INS SimpleName@@key2 @TO@ SimpleName@@MethodName:containsKey:[key2] @AT@ 11497 @LENGTH@ 4


UPD ReturnStatement@@SimpleName:iTransformers @TO@ MethodInvocation:FunctorUtils.copy(iTransformers) @AT@ 4457 @LENGTH@ 21
---INS MethodInvocation@@FunctorUtils.copy(iTransformers) @TO@ ReturnStatement@@SimpleName:iTransformers @AT@ 4456 @LENGTH@ 32
------INS SimpleName@@Name:FunctorUtils @TO@ MethodInvocation@@FunctorUtils.copy(iTransformers) @AT@ 4456 @LENGTH@ 12
------INS SimpleName@@MethodName:copy:[iTransformers] @TO@ MethodInvocation@@FunctorUtils.copy(iTransformers) @AT@ 4469 @LENGTH@ 19
---------INS SimpleName@@iTransformers @TO@ SimpleName@@MethodName:copy:[iTransformers] @AT@ 4474 @LENGTH@ 13
---DEL SimpleName@@iTransformers @AT@ 4464 @LENGTH@ 13


UPD ExpressionStatement@@MethodInvocation:newControllers.add(installBindingService(context,model,name)) @TO@ MethodInvocation:newControllers.add(installBindingService(context,model,name,verificationHandler)) @AT@ 3985 @LENGTH@ 64
---UPD MethodInvocation@@newControllers.add(installBindingService(context,model,name)) @TO@ newControllers.add(installBindingService(context,model,name,verificationHandler)) @AT@ 3985 @LENGTH@ 63
------UPD SimpleName@@MethodName:add:[installBindingService(context,model,name)] @TO@ MethodName:add:[installBindingService(context,model,name,verificationHandler)] @AT@ 4000 @LENGTH@ 48
---------UPD MethodInvocation@@installBindingService(context,model,name) @TO@ installBindingService(context,model,name,verificationHandler) @AT@ 4004 @LENGTH@ 43
------------UPD SimpleName@@MethodName:installBindingService:[context, model, name] @TO@ MethodName:installBindingService:[context, model, name, verificationHandler] @AT@ 4004 @LENGTH@ 43
---------------INS SimpleName@@verificationHandler @TO@ SimpleName@@MethodName:installBindingService:[context, model, name] @AT@ 3969 @LENGTH@ 19


UPD FieldDeclaration@@protected, static, final, SimpleAttributeDefinition, [FLAGS=new SimpleAttributeDefinitionBuilder(Constants.FLAGS,ModelType.STRING,false).setAllowExpression(true).setFlags(AttributeAccess.Flag.RESTART_ALL_SERVICES).setValidator(new StringLengthValidator(1,false,true)).build()] @TO@ protected, static, final, SimpleAttributeDefinition, [FLAGS=new SimpleAttributeDefinitionBuilder(Constants.FLAGS,ModelType.STRING,false).setAllowExpression(true).setAllowNull(true).setFlags(AttributeAccess.Flag.RESTART_ALL_SERVICES).setValidator(new StringLengthValidator(1,false,true)).build()] @AT@ 2598 @LENGTH@ 373
---UPD VariableDeclarationFragment@@FLAGS=new SimpleAttributeDefinitionBuilder(Constants.FLAGS,ModelType.STRING,false).setAllowExpression(true).setFlags(AttributeAccess.Flag.RESTART_ALL_SERVICES).setValidator(new StringLengthValidator(1,false,true)).build() @TO@ FLAGS=new SimpleAttributeDefinitionBuilder(Constants.FLAGS,ModelType.STRING,false).setAllowExpression(true).setAllowNull(true).setFlags(AttributeAccess.Flag.RESTART_ALL_SERVICES).setValidator(new StringLengthValidator(1,false,true)).build() @AT@ 2647 @LENGTH@ 323
------UPD MethodInvocation@@new SimpleAttributeDefinitionBuilder(Constants.FLAGS,ModelType.STRING,false).setAllowExpression(true).setFlags(AttributeAccess.Flag.RESTART_ALL_SERVICES).setValidator(new StringLengthValidator(1,false,true)).build() @TO@ new SimpleAttributeDefinitionBuilder(Constants.FLAGS,ModelType.STRING,false).setAllowExpression(true).setAllowNull(true).setFlags(AttributeAccess.Flag.RESTART_ALL_SERVICES).setValidator(new StringLengthValidator(1,false,true)).build() @AT@ 2667 @LENGTH@ 303
---------INS MethodInvocation@@MethodName:setAllowNull:[true] @TO@ MethodInvocation@@new SimpleAttributeDefinitionBuilder(Constants.FLAGS,ModelType.STRING,false).setAllowExpression(true).setFlags(AttributeAccess.Flag.RESTART_ALL_SERVICES).setValidator(new StringLengthValidator(1,false,true)).build() @AT@ 2667 @LENGTH@ 164
------------INS BooleanLiteral@@true @TO@ MethodInvocation@@MethodName:setAllowNull:[true] @AT@ 2826 @LENGTH@ 4


DEL FieldDeclaration@@protected, final, List<String>, [discardedOperations=new LinkedList<String>()] @AT@ 1949 @LENGTH@ 76
---DEL Modifier@@protected @AT@ 1949 @LENGTH@ 9
---DEL Modifier@@final @AT@ 1959 @LENGTH@ 5
---DEL ParameterizedType@@List<String> @AT@ 1965 @LENGTH@ 12
------DEL SimpleType@@List @AT@ 1965 @LENGTH@ 4
------DEL SimpleType@@String @AT@ 1970 @LENGTH@ 6
---DEL VariableDeclarationFragment@@discardedOperations=new LinkedList<String>() @AT@ 1978 @LENGTH@ 46
------DEL SimpleName@@discardedOperations @AT@ 1978 @LENGTH@ 19
------DEL ClassInstanceCreation@@LinkedList<String>[] @AT@ 2000 @LENGTH@ 24
---------DEL New@@new @AT@ 2000 @LENGTH@ 3
---------DEL ParameterizedType@@LinkedList<String> @AT@ 2004 @LENGTH@ 18
------------DEL SimpleType@@LinkedList @AT@ 2004 @LENGTH@ 10
------------DEL SimpleType@@String @AT@ 2015 @LENGTH@ 6


UPD FieldDeclaration@@public, static, final, AttributeDefinition[], [REJECTED_EXPRESSION_ATTRIBUTES={CALL_TIMEOUT,AUTO_GROUP,BLOCK_ON_ACKNOWLEDGE,BLOCK_ON_DURABLE_SEND,BLOCK_ON_NON_DURABLE_SEND,CACHE_LARGE_MESSAGE_CLIENT,CLIENT_FAILURE_CHECK_PERIOD,CLIENT_ID,COMPRESS_LARGE_MESSAGES,CONFIRMATION_WINDOW_SIZE,CONNECTION_LOAD_BALANCING_CLASS_NAME,CONNECTION_TTL,CONSUMER_MAX_RATE,CONSUMER_WINDOW_SIZE,DUPS_OK_BATCH_SIZE,FAILOVER_ON_INITIAL_CONNECTION,GROUP_ID,HA,MAX_RETRY_INTERVAL,MIN_LARGE_MESSAGE_SIZE,PRE_ACKNOWLEDGE,PRODUCER_MAX_RATE,PRODUCER_WINDOW_SIZE,RETRY_INTERVAL,RETRY_INTERVAL_MULTIPLIER,TRANSACTION_BATCH_SIZE,USE_GLOBAL_POOLS,INITIAL_CONNECT_ATTEMPTS,INITIAL_MESSAGE_PACKET_SIZE,JNDI_PARAMS,RECONNECT_ATTEMPTS,SETUP_ATTEMPTS,SETUP_INTERVAL,TRANSACTION,USE_AUTO_RECOVERY,USE_JNDI,USE_LOCAL_TX}] @TO@ public, static, final, AttributeDefinition[], [REJECTED_EXPRESSION_ATTRIBUTES={CALL_TIMEOUT,AUTO_GROUP,BLOCK_ON_ACKNOWLEDGE,BLOCK_ON_DURABLE_SEND,BLOCK_ON_NON_DURABLE_SEND,CACHE_LARGE_MESSAGE_CLIENT,CLIENT_FAILURE_CHECK_PERIOD,CLIENT_ID,CONFIRMATION_WINDOW_SIZE,CONNECTION_LOAD_BALANCING_CLASS_NAME,CONNECTION_TTL,CONSUMER_MAX_RATE,CONSUMER_WINDOW_SIZE,DUPS_OK_BATCH_SIZE,FAILOVER_ON_INITIAL_CONNECTION,GROUP_ID,HA,MAX_RETRY_INTERVAL,MIN_LARGE_MESSAGE_SIZE,PRE_ACKNOWLEDGE,PRODUCER_MAX_RATE,PRODUCER_WINDOW_SIZE,RETRY_INTERVAL,RETRY_INTERVAL_MULTIPLIER,TRANSACTION_BATCH_SIZE,USE_GLOBAL_POOLS,JNDI_PARAMS,RECONNECT_ATTEMPTS,SETUP_ATTEMPTS,SETUP_INTERVAL,TRANSACTION,USE_JNDI,USE_LOCAL_TX}] @AT@ 7467 @LENGTH@ 930
---UPD VariableDeclarationFragment@@REJECTED_EXPRESSION_ATTRIBUTES={CALL_TIMEOUT,AUTO_GROUP,BLOCK_ON_ACKNOWLEDGE,BLOCK_ON_DURABLE_SEND,BLOCK_ON_NON_DURABLE_SEND,CACHE_LARGE_MESSAGE_CLIENT,CLIENT_FAILURE_CHECK_PERIOD,CLIENT_ID,COMPRESS_LARGE_MESSAGES,CONFIRMATION_WINDOW_SIZE,CONNECTION_LOAD_BALANCING_CLASS_NAME,CONNECTION_TTL,CONSUMER_MAX_RATE,CONSUMER_WINDOW_SIZE,DUPS_OK_BATCH_SIZE,FAILOVER_ON_INITIAL_CONNECTION,GROUP_ID,HA,MAX_RETRY_INTERVAL,MIN_LARGE_MESSAGE_SIZE,PRE_ACKNOWLEDGE,PRODUCER_MAX_RATE,PRODUCER_WINDOW_SIZE,RETRY_INTERVAL,RETRY_INTERVAL_MULTIPLIER,TRANSACTION_BATCH_SIZE,USE_GLOBAL_POOLS,INITIAL_CONNECT_ATTEMPTS,INITIAL_MESSAGE_PACKET_SIZE,JNDI_PARAMS,RECONNECT_ATTEMPTS,SETUP_ATTEMPTS,SETUP_INTERVAL,TRANSACTION,USE_AUTO_RECOVERY,USE_JNDI,USE_LOCAL_TX} @TO@ REJECTED_EXPRESSION_ATTRIBUTES={CALL_TIMEOUT,AUTO_GROUP,BLOCK_ON_ACKNOWLEDGE,BLOCK_ON_DURABLE_SEND,BLOCK_ON_NON_DURABLE_SEND,CACHE_LARGE_MESSAGE_CLIENT,CLIENT_FAILURE_CHECK_PERIOD,CLIENT_ID,CONFIRMATION_WINDOW_SIZE,CONNECTION_LOAD_BALANCING_CLASS_NAME,CONNECTION_TTL,CONSUMER_MAX_RATE,CONSUMER_WINDOW_SIZE,DUPS_OK_BATCH_SIZE,FAILOVER_ON_INITIAL_CONNECTION,GROUP_ID,HA,MAX_RETRY_INTERVAL,MIN_LARGE_MESSAGE_SIZE,PRE_ACKNOWLEDGE,PRODUCER_MAX_RATE,PRODUCER_WINDOW_SIZE,RETRY_INTERVAL,RETRY_INTERVAL_MULTIPLIER,TRANSACTION_BATCH_SIZE,USE_GLOBAL_POOLS,JNDI_PARAMS,RECONNECT_ATTEMPTS,SETUP_ATTEMPTS,SETUP_INTERVAL,TRANSACTION,USE_JNDI,USE_LOCAL_TX} @AT@ 7509 @LENGTH@ 887
------UPD ArrayInitializer@@{CALL_TIMEOUT,AUTO_GROUP,BLOCK_ON_ACKNOWLEDGE,BLOCK_ON_DURABLE_SEND,BLOCK_ON_NON_DURABLE_SEND,CACHE_LARGE_MESSAGE_CLIENT,CLIENT_FAILURE_CHECK_PERIOD,CLIENT_ID,COMPRESS_LARGE_MESSAGES,CONFIRMATION_WINDOW_SIZE,CONNECTION_LOAD_BALANCING_CLASS_NAME,CONNECTION_TTL,CONSUMER_MAX_RATE,CONSUMER_WINDOW_SIZE,DUPS_OK_BATCH_SIZE,FAILOVER_ON_INITIAL_CONNECTION,GROUP_ID,HA,MAX_RETRY_INTERVAL,MIN_LARGE_MESSAGE_SIZE,PRE_ACKNOWLEDGE,PRODUCER_MAX_RATE,PRODUCER_WINDOW_SIZE,RETRY_INTERVAL,RETRY_INTERVAL_MULTIPLIER,TRANSACTION_BATCH_SIZE,USE_GLOBAL_POOLS,INITIAL_CONNECT_ATTEMPTS,INITIAL_MESSAGE_PACKET_SIZE,JNDI_PARAMS,RECONNECT_ATTEMPTS,SETUP_ATTEMPTS,SETUP_INTERVAL,TRANSACTION,USE_AUTO_RECOVERY,USE_JNDI,USE_LOCAL_TX} @TO@ {CALL_TIMEOUT,AUTO_GROUP,BLOCK_ON_ACKNOWLEDGE,BLOCK_ON_DURABLE_SEND,BLOCK_ON_NON_DURABLE_SEND,CACHE_LARGE_MESSAGE_CLIENT,CLIENT_FAILURE_CHECK_PERIOD,CLIENT_ID,CONFIRMATION_WINDOW_SIZE,CONNECTION_LOAD_BALANCING_CLASS_NAME,CONNECTION_TTL,CONSUMER_MAX_RATE,CONSUMER_WINDOW_SIZE,DUPS_OK_BATCH_SIZE,FAILOVER_ON_INITIAL_CONNECTION,GROUP_ID,HA,MAX_RETRY_INTERVAL,MIN_LARGE_MESSAGE_SIZE,PRE_ACKNOWLEDGE,PRODUCER_MAX_RATE,PRODUCER_WINDOW_SIZE,RETRY_INTERVAL,RETRY_INTERVAL_MULTIPLIER,TRANSACTION_BATCH_SIZE,USE_GLOBAL_POOLS,JNDI_PARAMS,RECONNECT_ATTEMPTS,SETUP_ATTEMPTS,SETUP_INTERVAL,TRANSACTION,USE_JNDI,USE_LOCAL_TX} @AT@ 7542 @LENGTH@ 854
---------DEL SimpleName@@COMPRESS_LARGE_MESSAGES @AT@ 7734 @LENGTH@ 23
---------DEL SimpleName@@INITIAL_CONNECT_ATTEMPTS @AT@ 8209 @LENGTH@ 24
---------DEL SimpleName@@INITIAL_MESSAGE_PACKET_SIZE @AT@ 8235 @LENGTH@ 27
---------DEL SimpleName@@USE_AUTO_RECOVERY @AT@ 8354 @LENGTH@ 17


DEL IfStatement@@if (exchange.getIn().getBody() != null) {  if (batch) {    Iterator<?> iterator=exchange.getIn().getBody(Iterator.class);    while (iterator != null && iterator.hasNext()) {      Object value=iterator.next();      Iterator<?> i=getEndpoint().getPrepareStatementStrategy().createPopulateIterator(sql,preparedQuery,expected,exchange,value);      getEndpoint().getPrepareStatementStrategy().populateStatement(ps,i,expected);      ps.addBatch();    }  } else {    Iterator<?> i=getEndpoint().getPrepareStatementStrategy().createPopulateIterator(sql,preparedQuery,expected,exchange,exchange.getIn().getBody());    getEndpoint().getPrepareStatementStrategy().populateStatement(ps,i,expected);  }} @AT@ 2545 @LENGTH@ 981
---DEL InfixExpression@@exchange.getIn().getBody() != null @AT@ 2549 @LENGTH@ 34
------DEL MethodInvocation@@exchange.getIn().getBody() @AT@ 2549 @LENGTH@ 26
---------DEL MethodInvocation@@MethodName:getIn:[] @AT@ 2549 @LENGTH@ 16
---------DEL SimpleName@@Name:exchange @AT@ 2549 @LENGTH@ 8
---------DEL SimpleName@@MethodName:getBody:[] @AT@ 2566 @LENGTH@ 9
------DEL Operator@@!= @AT@ 2575 @LENGTH@ 2
------DEL NullLiteral@@null @AT@ 2579 @LENGTH@ 4
---DEL Block@@ThenBody:{  if (batch) {    Iterator<?> iterator=exchange.getIn().getBody(Iterator.class);    while (iterator != null && iterator.hasNext()) {      Object value=iterator.next();      Iterator<?> i=getEndpoint().getPrepareStatementStrategy().createPopulateIterator(sql,preparedQuery,expected,exchange,value);      getEndpoint().getPrepareStatementStrategy().populateStatement(ps,i,expected);      ps.addBatch();    }  } else {    Iterator<?> i=getEndpoint().getPrepareStatementStrategy().createPopulateIterator(sql,preparedQuery,expected,exchange,exchange.getIn().getBody());    getEndpoint().getPrepareStatementStrategy().populateStatement(ps,i,expected);  }} @AT@ 2585 @LENGTH@ 941


INS MethodDeclaration@@public, void, MethodName:testCurrentUriWithIllegalSpaces, Exception,  @TO@ TypeDeclaration@@[public]TestOAuth2ClientContextFilter,  @AT@ 935 @LENGTH@ 330
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testCurrentUriWithIllegalSpaces, Exception,  @AT@ 935 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testCurrentUriWithIllegalSpaces, Exception,  @AT@ 942 @LENGTH@ 4
---INS SimpleName@@MethodName:testCurrentUriWithIllegalSpaces @TO@ MethodDeclaration@@public, void, MethodName:testCurrentUriWithIllegalSpaces, Exception,  @AT@ 947 @LENGTH@ 31
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:testCurrentUriWithIllegalSpaces, Exception,  @AT@ 988 @LENGTH@ 9
---INS VariableDeclarationStatement@@OAuth2ClientContextFilter filter=new OAuth2ClientContextFilter(); @TO@ MethodDeclaration@@public, void, MethodName:testCurrentUriWithIllegalSpaces, Exception,  @AT@ 1002 @LENGTH@ 67
------INS SimpleType@@OAuth2ClientContextFilter @TO@ VariableDeclarationStatement@@OAuth2ClientContextFilter filter=new OAuth2ClientContextFilter(); @AT@ 1002 @LENGTH@ 25
------INS VariableDeclarationFragment@@filter=new OAuth2ClientContextFilter() @TO@ VariableDeclarationStatement@@OAuth2ClientContextFilter filter=new OAuth2ClientContextFilter(); @AT@ 1028 @LENGTH@ 40
---------INS SimpleName@@filter @TO@ VariableDeclarationFragment@@filter=new OAuth2ClientContextFilter() @AT@ 1028 @LENGTH@ 6
---------INS ClassInstanceCreation@@OAuth2ClientContextFilter[] @TO@ VariableDeclarationFragment@@filter=new OAuth2ClientContextFilter() @AT@ 1037 @LENGTH@ 31
------------INS New@@new @TO@ ClassInstanceCreation@@OAuth2ClientContextFilter[] @AT@ 1037 @LENGTH@ 3
------------INS SimpleType@@OAuth2ClientContextFilter @TO@ ClassInstanceCreation@@OAuth2ClientContextFilter[] @AT@ 1041 @LENGTH@ 25
---INS VariableDeclarationStatement@@MockHttpServletRequest request=new MockHttpServletRequest(); @TO@ MethodDeclaration@@public, void, MethodName:testCurrentUriWithIllegalSpaces, Exception,  @AT@ 1072 @LENGTH@ 62
------INS SimpleType@@MockHttpServletRequest @TO@ VariableDeclarationStatement@@MockHttpServletRequest request=new MockHttpServletRequest(); @AT@ 1072 @LENGTH@ 22
------INS VariableDeclarationFragment@@request=new MockHttpServletRequest() @TO@ VariableDeclarationStatement@@MockHttpServletRequest request=new MockHttpServletRequest(); @AT@ 1095 @LENGTH@ 38
---------INS SimpleName@@request @TO@ VariableDeclarationFragment@@request=new MockHttpServletRequest() @AT@ 1095 @LENGTH@ 7
---------INS ClassInstanceCreation@@MockHttpServletRequest[] @TO@ VariableDeclarationFragment@@request=new MockHttpServletRequest() @AT@ 1105 @LENGTH@ 28
------------INS New@@new @TO@ ClassInstanceCreation@@MockHttpServletRequest[] @AT@ 1105 @LENGTH@ 3
------------INS SimpleType@@MockHttpServletRequest @TO@ ClassInstanceCreation@@MockHttpServletRequest[] @AT@ 1109 @LENGTH@ 22
---INS ExpressionStatement@@MethodInvocation:request.setQueryString("foo=bar+spam") @TO@ MethodDeclaration@@public, void, MethodName:testCurrentUriWithIllegalSpaces, Exception,  @AT@ 1137 @LENGTH@ 39
------INS MethodInvocation@@request.setQueryString("foo=bar+spam") @TO@ ExpressionStatement@@MethodInvocation:request.setQueryString("foo=bar+spam") @AT@ 1137 @LENGTH@ 38
---------INS SimpleName@@Name:request @TO@ MethodInvocation@@request.setQueryString("foo=bar+spam") @AT@ 1137 @LENGTH@ 7
---------INS SimpleName@@MethodName:setQueryString:["foo=bar+spam"] @TO@ MethodInvocation@@request.setQueryString("foo=bar+spam") @AT@ 1145 @LENGTH@ 30
------------INS StringLiteral@@"foo=bar+spam" @TO@ SimpleName@@MethodName:setQueryString:["foo=bar+spam"] @AT@ 1160 @LENGTH@ 14
---INS ExpressionStatement@@MethodInvocation:assertEquals("http://localhost?foo=bar+spam",filter.calculateCurrentUri(request)) @TO@ MethodDeclaration@@public, void, MethodName:testCurrentUriWithIllegalSpaces, Exception,  @AT@ 1179 @LENGTH@ 83
------INS MethodInvocation@@assertEquals("http://localhost?foo=bar+spam",filter.calculateCurrentUri(request)) @TO@ ExpressionStatement@@MethodInvocation:assertEquals("http://localhost?foo=bar+spam",filter.calculateCurrentUri(request)) @AT@ 1179 @LENGTH@ 82
---------INS SimpleName@@MethodName:assertEquals:["http://localhost?foo=bar+spam", filter.calculateCurrentUri(request)] @TO@ MethodInvocation@@assertEquals("http://localhost?foo=bar+spam",filter.calculateCurrentUri(request)) @AT@ 1179 @LENGTH@ 82
------------INS StringLiteral@@"http://localhost?foo=bar+spam" @TO@ SimpleName@@MethodName:assertEquals:["http://localhost?foo=bar+spam", filter.calculateCurrentUri(request)] @AT@ 1192 @LENGTH@ 31
------------INS MethodInvocation@@filter.calculateCurrentUri(request) @TO@ SimpleName@@MethodName:assertEquals:["http://localhost?foo=bar+spam", filter.calculateCurrentUri(request)] @AT@ 1225 @LENGTH@ 35
---------------INS SimpleName@@Name:filter @TO@ MethodInvocation@@filter.calculateCurrentUri(request) @AT@ 1225 @LENGTH@ 6
---------------INS SimpleName@@MethodName:calculateCurrentUri:[request] @TO@ MethodInvocation@@filter.calculateCurrentUri(request) @AT@ 1232 @LENGTH@ 28
------------------INS SimpleName@@request @TO@ SimpleName@@MethodName:calculateCurrentUri:[request] @AT@ 1252 @LENGTH@ 7


UPD Block@@ThenBody:{  InjectedValue<String> clusterName=new InjectedValue<String>();  ServiceController<?> clusterNameController=target.addService(ClusteredBackingCacheEntryStoreSourceService.getCacheFactoryClusterNameServiceName(name),new ValueService<String>(clusterName)).addDependency(ClusteredBackingCacheEntryStoreSourceService.getPassivationStoreClusterNameServiceName(passivationStore),String.class,clusterName).setInitialMode(ServiceController.Mode.ON_DEMAND).install();  return Arrays.asList(controller,clusterNameController);} @TO@ ThenBody:{  InjectedValue<String> clusterName=new InjectedValue<String>();  final ServiceBuilder<String> passivationBuilder=target.addService(ClusteredBackingCacheEntryStoreSourceService.getCacheFactoryClusterNameServiceName(name),new ValueService<String>(clusterName)).addDependency(ClusteredBackingCacheEntryStoreSourceService.getPassivationStoreClusterNameServiceName(passivationStore),String.class,clusterName).setInitialMode(ServiceController.Mode.ON_DEMAND);  if (verificationHandler != null) {    passivationBuilder.addListener(verificationHandler);  }  ServiceController<?> clusterNameController=passivationBuilder.install();  return Arrays.asList(controller,clusterNameController);} @AT@ 4456 @LENGTH@ 631
---UPD VariableDeclarationStatement@@ServiceController<?> clusterNameController=target.addService(ClusteredBackingCacheEntryStoreSourceService.getCacheFactoryClusterNameServiceName(name),new ValueService<String>(clusterName)).addDependency(ClusteredBackingCacheEntryStoreSourceService.getPassivationStoreClusterNameServiceName(passivationStore),String.class,clusterName).setInitialMode(ServiceController.Mode.ON_DEMAND).install(); @TO@ final ServiceBuilder<String> passivationBuilder=target.addService(ClusteredBackingCacheEntryStoreSourceService.getCacheFactoryClusterNameServiceName(name),new ValueService<String>(clusterName)).addDependency(ClusteredBackingCacheEntryStoreSourceService.getPassivationStoreClusterNameServiceName(passivationStore),String.class,clusterName).setInitialMode(ServiceController.Mode.ON_DEMAND); @AT@ 4547 @LENGTH@ 461
------UPD ParameterizedType@@ServiceController<?> @TO@ ServiceBuilder<String> @AT@ 4547 @LENGTH@ 20
---------UPD SimpleType@@ServiceController @TO@ ServiceBuilder @AT@ 4547 @LENGTH@ 17
---------DEL WildcardType@@? @AT@ 4565 @LENGTH@ 1
---------INS SimpleType@@String @TO@ ParameterizedType@@ServiceController<?> @AT@ 4568 @LENGTH@ 6
------INS Modifier@@final @TO@ VariableDeclarationStatement@@ServiceController<?> clusterNameController=target.addService(ClusteredBackingCacheEntryStoreSourceService.getCacheFactoryClusterNameServiceName(name),new ValueService<String>(clusterName)).addDependency(ClusteredBackingCacheEntryStoreSourceService.getPassivationStoreClusterNameServiceName(passivationStore),String.class,clusterName).setInitialMode(ServiceController.Mode.ON_DEMAND).install(); @AT@ 4547 @LENGTH@ 5
------UPD VariableDeclarationFragment@@clusterNameController=target.addService(ClusteredBackingCacheEntryStoreSourceService.getCacheFactoryClusterNameServiceName(name),new ValueService<String>(clusterName)).addDependency(ClusteredBackingCacheEntryStoreSourceService.getPassivationStoreClusterNameServiceName(passivationStore),String.class,clusterName).setInitialMode(ServiceController.Mode.ON_DEMAND).install() @TO@ passivationBuilder=target.addService(ClusteredBackingCacheEntryStoreSourceService.getCacheFactoryClusterNameServiceName(name),new ValueService<String>(clusterName)).addDependency(ClusteredBackingCacheEntryStoreSourceService.getPassivationStoreClusterNameServiceName(passivationStore),String.class,clusterName).setInitialMode(ServiceController.Mode.ON_DEMAND) @AT@ 4568 @LENGTH@ 439
---------UPD SimpleName@@clusterNameController @TO@ passivationBuilder @AT@ 4568 @LENGTH@ 21
---------UPD MethodInvocation@@target.addService(ClusteredBackingCacheEntryStoreSourceService.getCacheFactoryClusterNameServiceName(name),new ValueService<String>(clusterName)).addDependency(ClusteredBackingCacheEntryStoreSourceService.getPassivationStoreClusterNameServiceName(passivationStore),String.class,clusterName).setInitialMode(ServiceController.Mode.ON_DEMAND).install() @TO@ target.addService(ClusteredBackingCacheEntryStoreSourceService.getCacheFactoryClusterNameServiceName(name),new ValueService<String>(clusterName)).addDependency(ClusteredBackingCacheEntryStoreSourceService.getPassivationStoreClusterNameServiceName(passivationStore),String.class,clusterName).setInitialMode(ServiceController.Mode.ON_DEMAND) @AT@ 4592 @LENGTH@ 415
------------DEL MethodInvocation@@MethodName:setInitialMode:[ServiceController.Mode.ON_DEMAND] @AT@ 4592 @LENGTH@ 384
------------UPD SimpleName@@MethodName:install:[] @TO@ MethodName:setInitialMode:[ServiceController.Mode.ON_DEMAND] @AT@ 4998 @LENGTH@ 9
---------------MOV QualifiedName@@ServiceController.Mode.ON_DEMAND @TO@ SimpleName@@MethodName:install:[] @AT@ 4943 @LENGTH@ 32
---INS IfStatement@@if (verificationHandler != null) {  passivationBuilder.addListener(verificationHandler);} @TO@ Block@@ThenBody:{  InjectedValue<String> clusterName=new InjectedValue<String>();  ServiceController<?> clusterNameController=target.addService(ClusteredBackingCacheEntryStoreSourceService.getCacheFactoryClusterNameServiceName(name),new ValueService<String>(clusterName)).addDependency(ClusteredBackingCacheEntryStoreSourceService.getPassivationStoreClusterNameServiceName(passivationStore),String.class,clusterName).setInitialMode(ServiceController.Mode.ON_DEMAND).install();  return Arrays.asList(controller,clusterNameController);} @AT@ 4995 @LENGTH@ 116
------INS InfixExpression@@verificationHandler != null @TO@ IfStatement@@if (verificationHandler != null) {  passivationBuilder.addListener(verificationHandler);} @AT@ 4998 @LENGTH@ 27
---------INS SimpleName@@verificationHandler @TO@ InfixExpression@@verificationHandler != null @AT@ 4998 @LENGTH@ 19
---------INS Operator@@!= @TO@ InfixExpression@@verificationHandler != null @AT@ 5017 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@verificationHandler != null @AT@ 5021 @LENGTH@ 4
------INS Block@@ThenBody:{  passivationBuilder.addListener(verificationHandler);} @TO@ IfStatement@@if (verificationHandler != null) {  passivationBuilder.addListener(verificationHandler);} @AT@ 5027 @LENGTH@ 84
---------INS ExpressionStatement@@MethodInvocation:passivationBuilder.addListener(verificationHandler) @TO@ Block@@ThenBody:{  passivationBuilder.addListener(verificationHandler);} @AT@ 5045 @LENGTH@ 52
------------INS MethodInvocation@@passivationBuilder.addListener(verificationHandler) @TO@ ExpressionStatement@@MethodInvocation:passivationBuilder.addListener(verificationHandler) @AT@ 5045 @LENGTH@ 51
---------------INS SimpleName@@Name:passivationBuilder @TO@ MethodInvocation@@passivationBuilder.addListener(verificationHandler) @AT@ 5045 @LENGTH@ 18
---------------INS SimpleName@@MethodName:addListener:[verificationHandler] @TO@ MethodInvocation@@passivationBuilder.addListener(verificationHandler) @AT@ 5064 @LENGTH@ 32
------------------INS SimpleName@@verificationHandler @TO@ SimpleName@@MethodName:addListener:[verificationHandler] @AT@ 5076 @LENGTH@ 19
---INS VariableDeclarationStatement@@ServiceController<?> clusterNameController=passivationBuilder.install(); @TO@ Block@@ThenBody:{  InjectedValue<String> clusterName=new InjectedValue<String>();  ServiceController<?> clusterNameController=target.addService(ClusteredBackingCacheEntryStoreSourceService.getCacheFactoryClusterNameServiceName(name),new ValueService<String>(clusterName)).addDependency(ClusteredBackingCacheEntryStoreSourceService.getPassivationStoreClusterNameServiceName(passivationStore),String.class,clusterName).setInitialMode(ServiceController.Mode.ON_DEMAND).install();  return Arrays.asList(controller,clusterNameController);} @AT@ 5124 @LENGTH@ 95
------INS ParameterizedType@@ServiceController<?> @TO@ VariableDeclarationStatement@@ServiceController<?> clusterNameController=passivationBuilder.install(); @AT@ 5124 @LENGTH@ 20
---------INS SimpleType@@ServiceController @TO@ ParameterizedType@@ServiceController<?> @AT@ 5124 @LENGTH@ 17
---------INS WildcardType@@? @TO@ ParameterizedType@@ServiceController<?> @AT@ 5142 @LENGTH@ 1
------INS VariableDeclarationFragment@@clusterNameController=passivationBuilder.install() @TO@ VariableDeclarationStatement@@ServiceController<?> clusterNameController=passivationBuilder.install(); @AT@ 5145 @LENGTH@ 73
---------INS SimpleName@@clusterNameController @TO@ VariableDeclarationFragment@@clusterNameController=passivationBuilder.install() @AT@ 5145 @LENGTH@ 21
---------INS MethodInvocation@@passivationBuilder.install() @TO@ VariableDeclarationFragment@@clusterNameController=passivationBuilder.install() @AT@ 5169 @LENGTH@ 49
------------INS SimpleName@@Name:passivationBuilder @TO@ MethodInvocation@@passivationBuilder.install() @AT@ 5169 @LENGTH@ 18
------------INS SimpleName@@MethodName:install:[] @TO@ MethodInvocation@@passivationBuilder.install() @AT@ 5209 @LENGTH@ 9


DEL MethodDeclaration@@public, void, MethodName:testZInterStore,  @AT@ 2954 @LENGTH@ 34
---DEL Modifier@@public @AT@ 2954 @LENGTH@ 6
---DEL PrimitiveType@@void @AT@ 2961 @LENGTH@ 4
---DEL SimpleName@@MethodName:testZInterStore @AT@ 2966 @LENGTH@ 15


UPD EnhancedForStatement@@for (final WmParameters parameter : WmParameters.values()) {  resourceRegistration.registerReadWriteAttribute(parameter.getAttribute(),null,new ReloadRequiredWriteAttributeHandler());} @TO@ for (final WmParameters parameter : WmParameters.values()) {  AttributeDefinition ad=parameter.getAttribute();  resourceRegistration.registerReadWriteAttribute(ad,null,new ReloadRequiredWriteAttributeHandler(ad));} @AT@ 2975 @LENGTH@ 206
---UPD ExpressionStatement@@MethodInvocation:resourceRegistration.registerReadWriteAttribute(parameter.getAttribute(),null,new ReloadRequiredWriteAttributeHandler()) @TO@ MethodInvocation:resourceRegistration.registerReadWriteAttribute(ad,null,new ReloadRequiredWriteAttributeHandler(ad)) @AT@ 3048 @LENGTH@ 123
------UPD MethodInvocation@@resourceRegistration.registerReadWriteAttribute(parameter.getAttribute(),null,new ReloadRequiredWriteAttributeHandler()) @TO@ resourceRegistration.registerReadWriteAttribute(ad,null,new ReloadRequiredWriteAttributeHandler(ad)) @AT@ 3048 @LENGTH@ 122
---------UPD SimpleName@@MethodName:registerReadWriteAttribute:[parameter.getAttribute(), null, new ReloadRequiredWriteAttributeHandler()] @TO@ MethodName:registerReadWriteAttribute:[ad, null, new ReloadRequiredWriteAttributeHandler(ad)] @AT@ 3069 @LENGTH@ 101
------------DEL MethodInvocation@@parameter.getAttribute() @AT@ 3096 @LENGTH@ 24
---------------DEL SimpleName@@Name:parameter @AT@ 3096 @LENGTH@ 9
---------------DEL SimpleName@@MethodName:getAttribute:[] @AT@ 3106 @LENGTH@ 14
------------UPD ClassInstanceCreation@@ReloadRequiredWriteAttributeHandler[] @TO@ ReloadRequiredWriteAttributeHandler[ad] @AT@ 3128 @LENGTH@ 41
---------------INS SimpleName@@ad @TO@ ClassInstanceCreation@@ReloadRequiredWriteAttributeHandler[] @AT@ 3261 @LENGTH@ 2
------------INS SimpleName@@ad @TO@ SimpleName@@MethodName:registerReadWriteAttribute:[parameter.getAttribute(), null, new ReloadRequiredWriteAttributeHandler()] @AT@ 3211 @LENGTH@ 2
---INS VariableDeclarationStatement@@AttributeDefinition ad=parameter.getAttribute(); @TO@ EnhancedForStatement@@for (final WmParameters parameter : WmParameters.values()) {  resourceRegistration.registerReadWriteAttribute(parameter.getAttribute(),null,new ReloadRequiredWriteAttributeHandler());} @AT@ 3100 @LENGTH@ 50
------INS SimpleType@@AttributeDefinition @TO@ VariableDeclarationStatement@@AttributeDefinition ad=parameter.getAttribute(); @AT@ 3100 @LENGTH@ 19
------INS VariableDeclarationFragment@@ad=parameter.getAttribute() @TO@ VariableDeclarationStatement@@AttributeDefinition ad=parameter.getAttribute(); @AT@ 3120 @LENGTH@ 29
---------INS SimpleName@@ad @TO@ VariableDeclarationFragment@@ad=parameter.getAttribute() @AT@ 3120 @LENGTH@ 2
---------INS MethodInvocation@@parameter.getAttribute() @TO@ VariableDeclarationFragment@@ad=parameter.getAttribute() @AT@ 3125 @LENGTH@ 24
------------INS SimpleName@@Name:parameter @TO@ MethodInvocation@@parameter.getAttribute() @AT@ 3125 @LENGTH@ 9
------------INS SimpleName@@MethodName:getAttribute:[] @TO@ MethodInvocation@@parameter.getAttribute() @AT@ 3135 @LENGTH@ 14


INS ExpressionStatement@@MethodInvocation:context.attachIfAbsent(CompositeOperationHandler.DOMAIN_EXECUTION_KEY,Boolean.TRUE) @TO@ MethodDeclaration@@public, void, MethodName:execute, final OperationContext context, final ModelNode operation, OperationFailedException,  @AT@ 5884 @LENGTH@ 85
---INS MethodInvocation@@context.attachIfAbsent(CompositeOperationHandler.DOMAIN_EXECUTION_KEY,Boolean.TRUE) @TO@ ExpressionStatement@@MethodInvocation:context.attachIfAbsent(CompositeOperationHandler.DOMAIN_EXECUTION_KEY,Boolean.TRUE) @AT@ 5884 @LENGTH@ 84
------INS SimpleName@@Name:context @TO@ MethodInvocation@@context.attachIfAbsent(CompositeOperationHandler.DOMAIN_EXECUTION_KEY,Boolean.TRUE) @AT@ 5884 @LENGTH@ 7
------INS SimpleName@@MethodName:attachIfAbsent:[CompositeOperationHandler.DOMAIN_EXECUTION_KEY, Boolean.TRUE] @TO@ MethodInvocation@@context.attachIfAbsent(CompositeOperationHandler.DOMAIN_EXECUTION_KEY,Boolean.TRUE) @AT@ 5892 @LENGTH@ 76
---------INS QualifiedName@@CompositeOperationHandler.DOMAIN_EXECUTION_KEY @TO@ SimpleName@@MethodName:attachIfAbsent:[CompositeOperationHandler.DOMAIN_EXECUTION_KEY, Boolean.TRUE] @AT@ 5907 @LENGTH@ 46
------------INS SimpleName@@CompositeOperationHandler @TO@ QualifiedName@@CompositeOperationHandler.DOMAIN_EXECUTION_KEY @AT@ 5907 @LENGTH@ 25
------------INS SimpleName@@DOMAIN_EXECUTION_KEY @TO@ QualifiedName@@CompositeOperationHandler.DOMAIN_EXECUTION_KEY @AT@ 5933 @LENGTH@ 20
---------INS QualifiedName@@Boolean.TRUE @TO@ SimpleName@@MethodName:attachIfAbsent:[CompositeOperationHandler.DOMAIN_EXECUTION_KEY, Boolean.TRUE] @AT@ 5955 @LENGTH@ 12
------------INS SimpleName@@Boolean @TO@ QualifiedName@@Boolean.TRUE @AT@ 5955 @LENGTH@ 7
------------INS SimpleName@@TRUE @TO@ QualifiedName@@Boolean.TRUE @AT@ 5963 @LENGTH@ 4


UPD IfStatement@@if (o2.isRegex() && !o1.isRegex()) {  return -1;} else if (o1.isRegex() && !o2.isRegex()) {  return 1;} @TO@ if (o2.isWildcard() && !o1.isWildcard()) {  return -1;} else if (o1.isWildcard() && !o2.isWildcard()) {  return 1;} @AT@ 3485 @LENGTH@ 175
---UPD InfixExpression@@o2.isRegex() && !o1.isRegex() @TO@ o2.isWildcard() && !o1.isWildcard() @AT@ 3489 @LENGTH@ 29
------UPD MethodInvocation@@o2.isRegex() @TO@ o2.isWildcard() @AT@ 3489 @LENGTH@ 12
---------UPD SimpleName@@MethodName:isRegex:[] @TO@ MethodName:isWildcard:[] @AT@ 3492 @LENGTH@ 9
------UPD PrefixExpression@@!o1.isRegex() @TO@ !o1.isWildcard() @AT@ 3505 @LENGTH@ 13
---------UPD MethodInvocation@@o1.isRegex() @TO@ o1.isWildcard() @AT@ 3506 @LENGTH@ 12
------------UPD SimpleName@@MethodName:isRegex:[] @TO@ MethodName:isWildcard:[] @AT@ 3509 @LENGTH@ 9
---UPD Block@@ElseBody:if (o1.isRegex() && !o2.isRegex()) {  return 1;} @TO@ ElseBody:if (o1.isWildcard() && !o2.isWildcard()) {  return 1;} @AT@ 3576 @LENGTH@ 84
------UPD IfStatement@@if (o1.isRegex() && !o2.isRegex()) {  return 1;} @TO@ if (o1.isWildcard() && !o2.isWildcard()) {  return 1;} @AT@ 3576 @LENGTH@ 84
---------UPD InfixExpression@@o1.isRegex() && !o2.isRegex() @TO@ o1.isWildcard() && !o2.isWildcard() @AT@ 3580 @LENGTH@ 29
------------UPD MethodInvocation@@o1.isRegex() @TO@ o1.isWildcard() @AT@ 3580 @LENGTH@ 12
---------------UPD SimpleName@@MethodName:isRegex:[] @TO@ MethodName:isWildcard:[] @AT@ 3583 @LENGTH@ 9
------------UPD PrefixExpression@@!o2.isRegex() @TO@ !o2.isWildcard() @AT@ 3596 @LENGTH@ 13
---------------UPD MethodInvocation@@o2.isRegex() @TO@ o2.isWildcard() @AT@ 3597 @LENGTH@ 12
------------------UPD SimpleName@@MethodName:isRegex:[] @TO@ MethodName:isWildcard:[] @AT@ 3600 @LENGTH@ 9


UPD VariableDeclarationStatement@@UndertowDeploymentInfoService undertowDeploymentInfoService=UndertowDeploymentInfoService.builder().setAttributes(deploymentUnit.getAttachment(ServletContextAttribute.ATTACHMENT_KEY)).setClassReflectionIndex(deploymentClassIndex).setComponentRegistry(componentRegistry).setContextPath(pathName).setDeploymentName(deploymentUnit.getName()).setDeploymentRoot(deploymentRoot).setInjectionContainer(injectionContainer).setMergedMetaData(warMetaData.getMergedJBossWebMetaData()).setModule(module).setScisMetaData(scisMetaData).setSecurityContextId(securityContextId).setSharedTlds(deploymentUnit.getAttachment(SharedTldsMetaDataBuilder.ATTACHMENT_KEY)).setTldsMetaData(deploymentUnit.getAttachment(TldsMetaData.ATTACHMENT_KEY)).setSetupActions(setupActions).createUndertowDeploymentInfoService(); @TO@ UndertowDeploymentInfoService undertowDeploymentInfoService=UndertowDeploymentInfoService.builder().setAttributes(deploymentUnit.getAttachment(ServletContextAttribute.ATTACHMENT_KEY)).setClassReflectionIndex(deploymentClassIndex).setComponentRegistry(componentRegistry).setContextPath(pathName).setDeploymentName(deploymentUnit.getName()).setDeploymentRoot(deploymentRoot).setInjectionContainer(injectionContainer).setMergedMetaData(warMetaData.getMergedJBossWebMetaData()).setModule(module).setScisMetaData(scisMetaData).setSecurityContextId(securityContextId).setSecurityDomain(securityDomain).setSharedTlds(deploymentUnit.getAttachment(SharedTldsMetaDataBuilder.ATTACHMENT_KEY)).setTldsMetaData(deploymentUnit.getAttachment(TldsMetaData.ATTACHMENT_KEY)).setSetupActions(setupActions).createUndertowDeploymentInfoService(); @AT@ 8519 @LENGTH@ 1056
---UPD VariableDeclarationFragment@@undertowDeploymentInfoService=UndertowDeploymentInfoService.builder().setAttributes(deploymentUnit.getAttachment(ServletContextAttribute.ATTACHMENT_KEY)).setClassReflectionIndex(deploymentClassIndex).setComponentRegistry(componentRegistry).setContextPath(pathName).setDeploymentName(deploymentUnit.getName()).setDeploymentRoot(deploymentRoot).setInjectionContainer(injectionContainer).setMergedMetaData(warMetaData.getMergedJBossWebMetaData()).setModule(module).setScisMetaData(scisMetaData).setSecurityContextId(securityContextId).setSharedTlds(deploymentUnit.getAttachment(SharedTldsMetaDataBuilder.ATTACHMENT_KEY)).setTldsMetaData(deploymentUnit.getAttachment(TldsMetaData.ATTACHMENT_KEY)).setSetupActions(setupActions).createUndertowDeploymentInfoService() @TO@ undertowDeploymentInfoService=UndertowDeploymentInfoService.builder().setAttributes(deploymentUnit.getAttachment(ServletContextAttribute.ATTACHMENT_KEY)).setClassReflectionIndex(deploymentClassIndex).setComponentRegistry(componentRegistry).setContextPath(pathName).setDeploymentName(deploymentUnit.getName()).setDeploymentRoot(deploymentRoot).setInjectionContainer(injectionContainer).setMergedMetaData(warMetaData.getMergedJBossWebMetaData()).setModule(module).setScisMetaData(scisMetaData).setSecurityContextId(securityContextId).setSecurityDomain(securityDomain).setSharedTlds(deploymentUnit.getAttachment(SharedTldsMetaDataBuilder.ATTACHMENT_KEY)).setTldsMetaData(deploymentUnit.getAttachment(TldsMetaData.ATTACHMENT_KEY)).setSetupActions(setupActions).createUndertowDeploymentInfoService() @AT@ 8549 @LENGTH@ 1025
------UPD MethodInvocation@@UndertowDeploymentInfoService.builder().setAttributes(deploymentUnit.getAttachment(ServletContextAttribute.ATTACHMENT_KEY)).setClassReflectionIndex(deploymentClassIndex).setComponentRegistry(componentRegistry).setContextPath(pathName).setDeploymentName(deploymentUnit.getName()).setDeploymentRoot(deploymentRoot).setInjectionContainer(injectionContainer).setMergedMetaData(warMetaData.getMergedJBossWebMetaData()).setModule(module).setScisMetaData(scisMetaData).setSecurityContextId(securityContextId).setSharedTlds(deploymentUnit.getAttachment(SharedTldsMetaDataBuilder.ATTACHMENT_KEY)).setTldsMetaData(deploymentUnit.getAttachment(TldsMetaData.ATTACHMENT_KEY)).setSetupActions(setupActions).createUndertowDeploymentInfoService() @TO@ UndertowDeploymentInfoService.builder().setAttributes(deploymentUnit.getAttachment(ServletContextAttribute.ATTACHMENT_KEY)).setClassReflectionIndex(deploymentClassIndex).setComponentRegistry(componentRegistry).setContextPath(pathName).setDeploymentName(deploymentUnit.getName()).setDeploymentRoot(deploymentRoot).setInjectionContainer(injectionContainer).setMergedMetaData(warMetaData.getMergedJBossWebMetaData()).setModule(module).setScisMetaData(scisMetaData).setSecurityContextId(securityContextId).setSecurityDomain(securityDomain).setSharedTlds(deploymentUnit.getAttachment(SharedTldsMetaDataBuilder.ATTACHMENT_KEY)).setTldsMetaData(deploymentUnit.getAttachment(TldsMetaData.ATTACHMENT_KEY)).setSetupActions(setupActions).createUndertowDeploymentInfoService() @AT@ 8581 @LENGTH@ 993
---------INS MethodInvocation@@MethodName:setSecurityDomain:[securityDomain] @TO@ MethodInvocation@@UndertowDeploymentInfoService.builder().setAttributes(deploymentUnit.getAttachment(ServletContextAttribute.ATTACHMENT_KEY)).setClassReflectionIndex(deploymentClassIndex).setComponentRegistry(componentRegistry).setContextPath(pathName).setDeploymentName(deploymentUnit.getName()).setDeploymentRoot(deploymentRoot).setInjectionContainer(injectionContainer).setMergedMetaData(warMetaData.getMergedJBossWebMetaData()).setModule(module).setScisMetaData(scisMetaData).setSecurityContextId(securityContextId).setSharedTlds(deploymentUnit.getAttachment(SharedTldsMetaDataBuilder.ATTACHMENT_KEY)).setTldsMetaData(deploymentUnit.getAttachment(TldsMetaData.ATTACHMENT_KEY)).setSetupActions(setupActions).createUndertowDeploymentInfoService() @AT@ 8581 @LENGTH@ 747
------------INS SimpleName@@securityDomain @TO@ MethodInvocation@@MethodName:setSecurityDomain:[securityDomain] @AT@ 9313 @LENGTH@ 14


INS MethodDeclaration@@static, Configuration, MethodName:getJAASConfiguration,  @TO@ TypeDeclaration@@[public]HdfsComponent, DefaultComponent @AT@ 2124 @LENGTH@ 356
---INS Modifier@@static @TO@ MethodDeclaration@@static, Configuration, MethodName:getJAASConfiguration,  @AT@ 2124 @LENGTH@ 6
---INS SimpleType@@Configuration @TO@ MethodDeclaration@@static, Configuration, MethodName:getJAASConfiguration,  @AT@ 2131 @LENGTH@ 13
---INS SimpleName@@MethodName:getJAASConfiguration @TO@ MethodDeclaration@@static, Configuration, MethodName:getJAASConfiguration,  @AT@ 2145 @LENGTH@ 20
---INS VariableDeclarationStatement@@Configuration auth=null; @TO@ MethodDeclaration@@static, Configuration, MethodName:getJAASConfiguration,  @AT@ 2178 @LENGTH@ 26
------INS SimpleType@@Configuration @TO@ VariableDeclarationStatement@@Configuration auth=null; @AT@ 2178 @LENGTH@ 13
------INS VariableDeclarationFragment@@auth=null @TO@ VariableDeclarationStatement@@Configuration auth=null; @AT@ 2192 @LENGTH@ 11
---------INS SimpleName@@auth @TO@ VariableDeclarationFragment@@auth=null @AT@ 2192 @LENGTH@ 4
---------INS NullLiteral@@null @TO@ VariableDeclarationFragment@@auth=null @AT@ 2199 @LENGTH@ 4
---INS TryStatement@@try {  auth=Configuration.getConfiguration();  LOG.trace("Existing JAAS Configuration {}",auth);} catch (SecurityException e) {  LOG.trace("Cannot load existing JAAS configuration",e);} @TO@ MethodDeclaration@@static, Configuration, MethodName:getJAASConfiguration,  @AT@ 2213 @LENGTH@ 240
------INS ExpressionStatement@@Assignment:auth=Configuration.getConfiguration() @TO@ TryStatement@@try {  auth=Configuration.getConfiguration();  LOG.trace("Existing JAAS Configuration {}",auth);} catch (SecurityException e) {  LOG.trace("Cannot load existing JAAS configuration",e);} @AT@ 2231 @LENGTH@ 40
---------INS Assignment@@auth=Configuration.getConfiguration() @TO@ ExpressionStatement@@Assignment:auth=Configuration.getConfiguration() @AT@ 2231 @LENGTH@ 39
------------INS SimpleName@@auth @TO@ Assignment@@auth=Configuration.getConfiguration() @AT@ 2231 @LENGTH@ 4
------------INS Operator@@= @TO@ Assignment@@auth=Configuration.getConfiguration() @AT@ 2235 @LENGTH@ 1
------------INS MethodInvocation@@Configuration.getConfiguration() @TO@ Assignment@@auth=Configuration.getConfiguration() @AT@ 2238 @LENGTH@ 32
---------------INS SimpleName@@Name:Configuration @TO@ MethodInvocation@@Configuration.getConfiguration() @AT@ 2238 @LENGTH@ 13
---------------INS SimpleName@@MethodName:getConfiguration:[] @TO@ MethodInvocation@@Configuration.getConfiguration() @AT@ 2252 @LENGTH@ 18
------INS ExpressionStatement@@MethodInvocation:LOG.trace("Existing JAAS Configuration {}",auth) @TO@ TryStatement@@try {  auth=Configuration.getConfiguration();  LOG.trace("Existing JAAS Configuration {}",auth);} catch (SecurityException e) {  LOG.trace("Cannot load existing JAAS configuration",e);} @AT@ 2284 @LENGTH@ 50
---------INS MethodInvocation@@LOG.trace("Existing JAAS Configuration {}",auth) @TO@ ExpressionStatement@@MethodInvocation:LOG.trace("Existing JAAS Configuration {}",auth) @AT@ 2284 @LENGTH@ 49
------------INS SimpleName@@Name:LOG @TO@ MethodInvocation@@LOG.trace("Existing JAAS Configuration {}",auth) @AT@ 2284 @LENGTH@ 3
------------INS SimpleName@@MethodName:trace:["Existing JAAS Configuration {}", auth] @TO@ MethodInvocation@@LOG.trace("Existing JAAS Configuration {}",auth) @AT@ 2288 @LENGTH@ 45
---------------INS StringLiteral@@"Existing JAAS Configuration {}" @TO@ SimpleName@@MethodName:trace:["Existing JAAS Configuration {}", auth] @AT@ 2294 @LENGTH@ 32
---------------INS SimpleName@@auth @TO@ SimpleName@@MethodName:trace:["Existing JAAS Configuration {}", auth] @AT@ 2328 @LENGTH@ 4
------INS CatchClause@@catch (SecurityException e) {  LOG.trace("Cannot load existing JAAS configuration",e);} @TO@ TryStatement@@try {  auth=Configuration.getConfiguration();  LOG.trace("Existing JAAS Configuration {}",auth);} catch (SecurityException e) {  LOG.trace("Cannot load existing JAAS configuration",e);} @AT@ 2345 @LENGTH@ 108
---------INS SingleVariableDeclaration@@SecurityException e @TO@ CatchClause@@catch (SecurityException e) {  LOG.trace("Cannot load existing JAAS configuration",e);} @AT@ 2352 @LENGTH@ 19
------------INS SimpleType@@SecurityException @TO@ SingleVariableDeclaration@@SecurityException e @AT@ 2352 @LENGTH@ 17
------------INS SimpleName@@e @TO@ SingleVariableDeclaration@@SecurityException e @AT@ 2370 @LENGTH@ 1
---------INS ExpressionStatement@@MethodInvocation:LOG.trace("Cannot load existing JAAS configuration",e) @TO@ CatchClause@@catch (SecurityException e) {  LOG.trace("Cannot load existing JAAS configuration",e);} @AT@ 2387 @LENGTH@ 56
------------INS MethodInvocation@@LOG.trace("Cannot load existing JAAS configuration",e) @TO@ ExpressionStatement@@MethodInvocation:LOG.trace("Cannot load existing JAAS configuration",e) @AT@ 2387 @LENGTH@ 55
---------------INS SimpleName@@Name:LOG @TO@ MethodInvocation@@LOG.trace("Cannot load existing JAAS configuration",e) @AT@ 2387 @LENGTH@ 3
---------------INS SimpleName@@MethodName:trace:["Cannot load existing JAAS configuration", e] @TO@ MethodInvocation@@LOG.trace("Cannot load existing JAAS configuration",e) @AT@ 2391 @LENGTH@ 51
------------------INS StringLiteral@@"Cannot load existing JAAS configuration" @TO@ SimpleName@@MethodName:trace:["Cannot load existing JAAS configuration", e] @AT@ 2397 @LENGTH@ 41
------------------INS SimpleName@@e @TO@ SimpleName@@MethodName:trace:["Cannot load existing JAAS configuration", e] @AT@ 2440 @LENGTH@ 1
---INS ReturnStatement@@SimpleName:auth @TO@ MethodDeclaration@@static, Configuration, MethodName:getJAASConfiguration,  @AT@ 2462 @LENGTH@ 12
------INS SimpleName@@auth @TO@ ReturnStatement@@SimpleName:auth @AT@ 2469 @LENGTH@ 4


UPD IfStatement@@if (charFound != ' ') {  day*=10;  day+=Character.digit(charFound,10);} @TO@ if (charFound == ' ') {} else {  day*=10;  day+=Character.digit(charFound,10);} @AT@ 7420 @LENGTH@ 107
---UPD InfixExpression@@charFound != ' ' @TO@ charFound == ' ' @AT@ 7424 @LENGTH@ 16
------UPD Operator@@!= @TO@ == @AT@ 7433 @LENGTH@ 2
---INS Block@@ThenBody:{} @TO@ IfStatement@@if (charFound != ' ') {  day*=10;  day+=Character.digit(charFound,10);} @AT@ 7442 @LENGTH@ 106
---UPD Block@@ThenBody:{  day*=10;  day+=Character.digit(charFound,10);} @TO@ ElseBody:{  day*=10;  day+=Character.digit(charFound,10);} @AT@ 7442 @LENGTH@ 85


UPD ExpressionStatement@@MethodInvocation:verifyResults(Arrays.asList(new Object[]{}),actual) @TO@ MethodInvocation:assertNull(getResults()) @AT@ 2361 @LENGTH@ 54
---UPD MethodInvocation@@verifyResults(Arrays.asList(new Object[]{}),actual) @TO@ assertNull(getResults()) @AT@ 2361 @LENGTH@ 53
------UPD SimpleName@@MethodName:verifyResults:[Arrays.asList(new Object[]{}), actual] @TO@ MethodName:assertNull:[getResults()] @AT@ 2361 @LENGTH@ 53
---------UPD MethodInvocation@@Arrays.asList(new Object[]{}) @TO@ MethodName:getResults:[] @AT@ 2375 @LENGTH@ 30
------------DEL SimpleName@@Name:Arrays @AT@ 2375 @LENGTH@ 6
------------DEL SimpleName@@MethodName:asList:[new Object[]{}] @AT@ 2382 @LENGTH@ 23
---------------DEL ArrayCreation@@new Object[]{} @AT@ 2389 @LENGTH@ 15
------------------DEL ArrayType@@Object[] @AT@ 2393 @LENGTH@ 8
---------------------DEL SimpleType@@Object @AT@ 2393 @LENGTH@ 6
------------------DEL ArrayInitializer@@{} @AT@ 2402 @LENGTH@ 2
---------DEL SimpleName@@actual @AT@ 2407 @LENGTH@ 6


UPD IfStatement@@if (previousTransformerFactoryClassName == null) {  System.getProperties().remove(XSLT_SYSTEM_PROPERTY_KEY);  getLog().info("Removed the set XSL transformer factory class name '" + transformerFactoryClassName + "' from the system properties");} else {  System.setProperty(XSLT_SYSTEM_PROPERTY_KEY,previousTransformerFactoryClassName);  getLog().info("Resetted the XSL transformer factory class name to be '" + previousTransformerFactoryClassName + "'");} @TO@ if (previousTransformerFactoryClassName == null) {  System.getProperties().remove(XSLT_SYSTEM_PROPERTY_KEY);  getLog().info("Removed the set XSLT factory class name '" + transformerFactoryClassName + "' from the system properties");} else {  System.setProperty(XSLT_SYSTEM_PROPERTY_KEY,previousTransformerFactoryClassName);  getLog().info("Resetted the XSLT factory class name to be '" + previousTransformerFactoryClassName + "'");} @AT@ 10944 @LENGTH@ 709
---UPD Block@@ThenBody:{  System.getProperties().remove(XSLT_SYSTEM_PROPERTY_KEY);  getLog().info("Removed the set XSL transformer factory class name '" + transformerFactoryClassName + "' from the system properties");} @TO@ ThenBody:{  System.getProperties().remove(XSLT_SYSTEM_PROPERTY_KEY);  getLog().info("Removed the set XSLT factory class name '" + transformerFactoryClassName + "' from the system properties");} @AT@ 10993 @LENGTH@ 304
------UPD ExpressionStatement@@MethodInvocation:getLog().info("Removed the set XSL transformer factory class name '" + transformerFactoryClassName + "' from the system properties") @TO@ MethodInvocation:getLog().info("Removed the set XSLT factory class name '" + transformerFactoryClassName + "' from the system properties") @AT@ 11146 @LENGTH@ 133
---------UPD MethodInvocation@@getLog().info("Removed the set XSL transformer factory class name '" + transformerFactoryClassName + "' from the system properties") @TO@ getLog().info("Removed the set XSLT factory class name '" + transformerFactoryClassName + "' from the system properties") @AT@ 11146 @LENGTH@ 132
------------UPD SimpleName@@MethodName:info:["Removed the set XSL transformer factory class name '" + transformerFactoryClassName + "' from the system properties"] @TO@ MethodName:info:["Removed the set XSLT factory class name '" + transformerFactoryClassName + "' from the system properties"] @AT@ 11155 @LENGTH@ 123
---------------UPD InfixExpression@@"Removed the set XSL transformer factory class name '" + transformerFactoryClassName + "' from the system properties" @TO@ "Removed the set XSLT factory class name '" + transformerFactoryClassName + "' from the system properties" @AT@ 11160 @LENGTH@ 117
------------------UPD StringLiteral@@"Removed the set XSL transformer factory class name '" @TO@ "Removed the set XSLT factory class name '" @AT@ 11160 @LENGTH@ 54
---UPD Block@@ElseBody:{  System.setProperty(XSLT_SYSTEM_PROPERTY_KEY,previousTransformerFactoryClassName);  getLog().info("Resetted the XSL transformer factory class name to be '" + previousTransformerFactoryClassName + "'");} @TO@ ElseBody:{  System.setProperty(XSLT_SYSTEM_PROPERTY_KEY,previousTransformerFactoryClassName);  getLog().info("Resetted the XSLT factory class name to be '" + previousTransformerFactoryClassName + "'");} @AT@ 11303 @LENGTH@ 350
------UPD ExpressionStatement@@MethodInvocation:getLog().info("Resetted the XSL transformer factory class name to be '" + previousTransformerFactoryClassName + "'") @TO@ MethodInvocation:getLog().info("Resetted the XSLT factory class name to be '" + previousTransformerFactoryClassName + "'") @AT@ 11518 @LENGTH@ 117
---------UPD MethodInvocation@@getLog().info("Resetted the XSL transformer factory class name to be '" + previousTransformerFactoryClassName + "'") @TO@ getLog().info("Resetted the XSLT factory class name to be '" + previousTransformerFactoryClassName + "'") @AT@ 11518 @LENGTH@ 116
------------UPD SimpleName@@MethodName:info:["Resetted the XSL transformer factory class name to be '" + previousTransformerFactoryClassName + "'"] @TO@ MethodName:info:["Resetted the XSLT factory class name to be '" + previousTransformerFactoryClassName + "'"] @AT@ 11527 @LENGTH@ 107
---------------UPD InfixExpression@@"Resetted the XSL transformer factory class name to be '" + previousTransformerFactoryClassName + "'" @TO@ "Resetted the XSLT factory class name to be '" + previousTransformerFactoryClassName + "'" @AT@ 11532 @LENGTH@ 101
------------------UPD StringLiteral@@"Resetted the XSL transformer factory class name to be '" @TO@ "Resetted the XSLT factory class name to be '" @AT@ 11532 @LENGTH@ 57


DEL MethodDeclaration@@public, void, MethodName:foo,  @AT@ 2773 @LENGTH@ 95
---DEL Modifier@@public @AT@ 2773 @LENGTH@ 6
---DEL PrimitiveType@@void @AT@ 2780 @LENGTH@ 4
---DEL SimpleName@@MethodName:foo @AT@ 2785 @LENGTH@ 3


UPD VariableDeclarationStatement@@Expression<Object> property=builder.get(order.getProperty()); @TO@ Expression<?> property=builder.get(order.getProperty()); @AT@ 3679 @LENGTH@ 63
---UPD ParameterizedType@@Expression<Object> @TO@ Expression<?> @AT@ 3679 @LENGTH@ 18
------DEL SimpleType@@Object @AT@ 3690 @LENGTH@ 6
------INS WildcardType@@? @TO@ ParameterizedType@@Expression<Object> @AT@ 3699 @LENGTH@ 1


UPD IfStatement@@if (reg != null) {  reg.resolvePathTransformers(iterator,list);  return;} @TO@ if (reg != null) {  list.add(reg.getPathAddressTransformer());  reg.resolvePathTransformers(iterator,list);  return;} @AT@ 8064 @LENGTH@ 128
---UPD Block@@ThenBody:{  reg.resolvePathTransformers(iterator,list);  return;} @TO@ ThenBody:{  list.add(reg.getPathAddressTransformer());  reg.resolvePathTransformers(iterator,list);  return;} @AT@ 8080 @LENGTH@ 112
------INS ExpressionStatement@@MethodInvocation:list.add(reg.getPathAddressTransformer()) @TO@ Block@@ThenBody:{  reg.resolvePathTransformers(iterator,list);  return;} @AT@ 8060 @LENGTH@ 42
---------INS MethodInvocation@@list.add(reg.getPathAddressTransformer()) @TO@ ExpressionStatement@@MethodInvocation:list.add(reg.getPathAddressTransformer()) @AT@ 8060 @LENGTH@ 41
------------INS SimpleName@@Name:list @TO@ MethodInvocation@@list.add(reg.getPathAddressTransformer()) @AT@ 8060 @LENGTH@ 4
------------INS SimpleName@@MethodName:add:[reg.getPathAddressTransformer()] @TO@ MethodInvocation@@list.add(reg.getPathAddressTransformer()) @AT@ 8065 @LENGTH@ 36
---------------INS MethodInvocation@@reg.getPathAddressTransformer() @TO@ SimpleName@@MethodName:add:[reg.getPathAddressTransformer()] @AT@ 8069 @LENGTH@ 31
------------------INS SimpleName@@Name:reg @TO@ MethodInvocation@@reg.getPathAddressTransformer() @AT@ 8069 @LENGTH@ 3
------------------INS SimpleName@@MethodName:getPathAddressTransformer:[] @TO@ MethodInvocation@@reg.getPathAddressTransformer() @AT@ 8073 @LENGTH@ 27


DEL IfStatement@@if (model.hasDefined(ModelDescriptionConstants.DIRECTORY_GROUPING)) {  return DirectoryGrouping.forName(model.get(ModelDescriptionConstants.DIRECTORY_GROUPING).asString());} @AT@ 3236 @LENGTH@ 193


INS ExpressionStatement@@MethodInvocation:System.exit(0) @TO@ MethodDeclaration@@public, static, void, MethodName:main, String[] args,  @AT@ 3587 @LENGTH@ 15
---INS MethodInvocation@@System.exit(0) @TO@ ExpressionStatement@@MethodInvocation:System.exit(0) @AT@ 3587 @LENGTH@ 14
------INS SimpleName@@Name:System @TO@ MethodInvocation@@System.exit(0) @AT@ 3587 @LENGTH@ 6
------INS SimpleName@@MethodName:exit:[0] @TO@ MethodInvocation@@System.exit(0) @AT@ 3594 @LENGTH@ 7
---------INS NumberLiteral@@0 @TO@ SimpleName@@MethodName:exit:[0] @AT@ 3599 @LENGTH@ 1


UPD ExpressionStatement@@MethodInvocation:BindingAddHandler.installBindingService(context,bindingModel,bindingName) @TO@ MethodInvocation:BindingAddHandler.installBindingService(context,bindingModel,bindingName,null) @AT@ 5897 @LENGTH@ 76
---UPD MethodInvocation@@BindingAddHandler.installBindingService(context,bindingModel,bindingName) @TO@ BindingAddHandler.installBindingService(context,bindingModel,bindingName,null) @AT@ 5897 @LENGTH@ 75
------UPD SimpleName@@MethodName:installBindingService:[context, bindingModel, bindingName] @TO@ MethodName:installBindingService:[context, bindingModel, bindingName, null] @AT@ 5915 @LENGTH@ 57
---------INS NullLiteral@@null @TO@ SimpleName@@MethodName:installBindingService:[context, bindingModel, bindingName] @AT@ 5973 @LENGTH@ 4


UPD ExpressionStatement@@MethodInvocation:context.addStep(runningServerAdd,new OperationStepHandler(){
  @Override public void execute(  final OperationContext context,  final ModelNode operation) throws OperationFailedException {
    context.createResource(PathAddress.EMPTY_ADDRESS);
    context.stepCompleted();
  }
}
,OperationContext.Stage.IMMEDIATE) @TO@ MethodInvocation:context.addStep(runningServerAdd,new OperationStepHandler(){
  @Override public void execute(  final OperationContext context,  final ModelNode operation) throws OperationFailedException {
    context.createResource(PathAddress.EMPTY_ADDRESS);
    context.stepCompleted();
  }
}
,OperationContext.Stage.MODEL,true) @AT@ 3081 @LENGTH@ 377
---UPD MethodInvocation@@context.addStep(runningServerAdd,new OperationStepHandler(){
  @Override public void execute(  final OperationContext context,  final ModelNode operation) throws OperationFailedException {
    context.createResource(PathAddress.EMPTY_ADDRESS);
    context.stepCompleted();
  }
}
,OperationContext.Stage.IMMEDIATE) @TO@ context.addStep(runningServerAdd,new OperationStepHandler(){
  @Override public void execute(  final OperationContext context,  final ModelNode operation) throws OperationFailedException {
    context.createResource(PathAddress.EMPTY_ADDRESS);
    context.stepCompleted();
  }
}
,OperationContext.Stage.MODEL,true) @AT@ 3081 @LENGTH@ 376
------UPD SimpleName@@MethodName:addStep:[runningServerAdd, new OperationStepHandler(){
  @Override public void execute(  final OperationContext context,  final ModelNode operation) throws OperationFailedException {
    context.createResource(PathAddress.EMPTY_ADDRESS);
    context.stepCompleted();
  }
}
, OperationContext.Stage.IMMEDIATE] @TO@ MethodName:addStep:[runningServerAdd, new OperationStepHandler(){
  @Override public void execute(  final OperationContext context,  final ModelNode operation) throws OperationFailedException {
    context.createResource(PathAddress.EMPTY_ADDRESS);
    context.stepCompleted();
  }
}
, OperationContext.Stage.MODEL, true] @AT@ 3089 @LENGTH@ 368
---------UPD QualifiedName@@OperationContext.Stage.IMMEDIATE @TO@ OperationContext.Stage.MODEL @AT@ 3424 @LENGTH@ 32
------------UPD SimpleName@@IMMEDIATE @TO@ MODEL @AT@ 3447 @LENGTH@ 9
---------INS BooleanLiteral@@true @TO@ SimpleName@@MethodName:addStep:[runningServerAdd, new OperationStepHandler(){
  @Override public void execute(  final OperationContext context,  final ModelNode operation) throws OperationFailedException {
    context.createResource(PathAddress.EMPTY_ADDRESS);
    context.stepCompleted();
  }
}
, OperationContext.Stage.IMMEDIATE] @AT@ 3454 @LENGTH@ 4


UPD IfStatement@@if (!transformedOp.rejectOperation(SUCCESS)) {  transformedBootOperations.add(transformedOp.getTransformedOperation());} @TO@ if (!transformedOp.rejectOperation(SUCCESS)) {  transformedBootOperations.add(transformedOp.getTransformedOperation());} else {  System.out.println(transformedOp.getFailureDescription());} @AT@ 28426 @LENGTH@ 172
---INS Block@@ElseBody:{  System.out.println(transformedOp.getFailureDescription());} @TO@ IfStatement@@if (!transformedOp.rejectOperation(SUCCESS)) {  transformedBootOperations.add(transformedOp.getTransformedOperation());} @AT@ 28604 @LENGTH@ 114
------INS ExpressionStatement@@MethodInvocation:System.out.println(transformedOp.getFailureDescription()) @TO@ Block@@ElseBody:{  System.out.println(transformedOp.getFailureDescription());} @AT@ 28634 @LENGTH@ 58
---------INS MethodInvocation@@System.out.println(transformedOp.getFailureDescription()) @TO@ ExpressionStatement@@MethodInvocation:System.out.println(transformedOp.getFailureDescription()) @AT@ 28634 @LENGTH@ 57
------------INS QualifiedName@@Name:System.out @TO@ MethodInvocation@@System.out.println(transformedOp.getFailureDescription()) @AT@ 28634 @LENGTH@ 10
------------INS SimpleName@@MethodName:println:[transformedOp.getFailureDescription()] @TO@ MethodInvocation@@System.out.println(transformedOp.getFailureDescription()) @AT@ 28645 @LENGTH@ 46
---------------INS MethodInvocation@@transformedOp.getFailureDescription() @TO@ SimpleName@@MethodName:println:[transformedOp.getFailureDescription()] @AT@ 28653 @LENGTH@ 37
------------------INS SimpleName@@Name:transformedOp @TO@ MethodInvocation@@transformedOp.getFailureDescription() @AT@ 28653 @LENGTH@ 13
------------------INS SimpleName@@MethodName:getFailureDescription:[] @TO@ MethodInvocation@@transformedOp.getFailureDescription() @AT@ 28667 @LENGTH@ 23


UPD IfStatement@@if (skipRequestHeaders != null && skipRequestHeaders.containsKey(key)) {  Object skipValue=skipRequestHeaders.get(key);  if (ObjectHelper.equal(skipValue,value)) {    continue;  }} @TO@ if (skipRequestHeaders != null && skipRequestHeaders.containsKey(key)) {  continue;} @AT@ 5712 @LENGTH@ 298
---DEL Block@@ThenBody:{  Object skipValue=skipRequestHeaders.get(key);  if (ObjectHelper.equal(skipValue,value)) {    continue;  }} @AT@ 5783 @LENGTH@ 227
------DEL VariableDeclarationStatement@@Object skipValue=skipRequestHeaders.get(key); @AT@ 5809 @LENGTH@ 47
---------DEL SimpleType@@Object @AT@ 5809 @LENGTH@ 6
---------DEL VariableDeclarationFragment@@skipValue=skipRequestHeaders.get(key) @AT@ 5816 @LENGTH@ 39
------------DEL SimpleName@@skipValue @AT@ 5816 @LENGTH@ 9
------------DEL MethodInvocation@@skipRequestHeaders.get(key) @AT@ 5828 @LENGTH@ 27
---------------DEL SimpleName@@Name:skipRequestHeaders @AT@ 5828 @LENGTH@ 18
---------------DEL SimpleName@@MethodName:get:[key] @AT@ 5847 @LENGTH@ 8
------------------DEL SimpleName@@key @AT@ 5851 @LENGTH@ 3
------DEL IfStatement@@if (ObjectHelper.equal(skipValue,value)) {  continue;} @AT@ 5881 @LENGTH@ 107
---------DEL MethodInvocation@@ObjectHelper.equal(skipValue,value) @AT@ 5885 @LENGTH@ 36
------------DEL SimpleName@@Name:ObjectHelper @AT@ 5885 @LENGTH@ 12
------------DEL SimpleName@@MethodName:equal:[skipValue, value] @AT@ 5898 @LENGTH@ 23
---------------DEL SimpleName@@skipValue @AT@ 5904 @LENGTH@ 9
---------------DEL SimpleName@@value @AT@ 5915 @LENGTH@ 5
---MOV Block@@ThenBody:{  continue;} @TO@ IfStatement@@if (skipRequestHeaders != null && skipRequestHeaders.containsKey(key)) {  Object skipValue=skipRequestHeaders.get(key);  if (ObjectHelper.equal(skipValue,value)) {    continue;  }} @AT@ 5923 @LENGTH@ 65


UPD EnhancedForStatement@@for (Property content : deploymentsNode.get(DEPLOYMENT).asPropertyList()) {  final String deploymentName=content.getName();  final ModelNode deploymentDetails=content.getValue();  boolean regEx=deploymentDetails.hasDefined(REGULAR_EXPRESSION) ? deploymentDetails.require(REGULAR_EXPRESSION).asBoolean() : false;  addr=PathAddress.pathAddress(PathElement.pathElement(DEPLOYMENT_OVERLAY,name),PathElement.pathElement(DEPLOYMENT,deploymentName));  addOp=Util.getEmptyOperation(ADD,addr.toModelNode());  addOp.get(REGULAR_EXPRESSION).set(regEx);  updates.add(addOp);} @TO@ for (Property content : deploymentsNode.get(DEPLOYMENT).asPropertyList()) {  final String deploymentName=content.getName();  final ModelNode deploymentDetails=content.getValue();  addr=PathAddress.pathAddress(PathElement.pathElement(DEPLOYMENT_OVERLAY,name),PathElement.pathElement(DEPLOYMENT,deploymentName));  addOp=Util.getEmptyOperation(ADD,addr.toModelNode());  updates.add(addOp);} @AT@ 28944 @LENGTH@ 792
---DEL VariableDeclarationStatement@@boolean regEx=deploymentDetails.hasDefined(REGULAR_EXPRESSION) ? deploymentDetails.require(REGULAR_EXPRESSION).asBoolean() : false; @AT@ 29209 @LENGTH@ 133
------DEL PrimitiveType@@boolean @AT@ 29209 @LENGTH@ 7
------DEL VariableDeclarationFragment@@regEx=deploymentDetails.hasDefined(REGULAR_EXPRESSION) ? deploymentDetails.require(REGULAR_EXPRESSION).asBoolean() : false @AT@ 29217 @LENGTH@ 124
---------DEL SimpleName@@regEx @AT@ 29217 @LENGTH@ 5
---------DEL ConditionalExpression@@deploymentDetails.hasDefined(REGULAR_EXPRESSION) ? deploymentDetails.require(REGULAR_EXPRESSION).asBoolean() : false @AT@ 29225 @LENGTH@ 116
------------DEL MethodInvocation@@deploymentDetails.hasDefined(REGULAR_EXPRESSION) @AT@ 29225 @LENGTH@ 48
---------------DEL SimpleName@@Name:deploymentDetails @AT@ 29225 @LENGTH@ 17
---------------DEL SimpleName@@MethodName:hasDefined:[REGULAR_EXPRESSION] @AT@ 29243 @LENGTH@ 30
------------------DEL SimpleName@@REGULAR_EXPRESSION @AT@ 29254 @LENGTH@ 18
------------DEL MethodInvocation@@deploymentDetails.require(REGULAR_EXPRESSION).asBoolean() @AT@ 29276 @LENGTH@ 57
---------------DEL MethodInvocation@@MethodName:require:[REGULAR_EXPRESSION] @AT@ 29276 @LENGTH@ 45
------------------DEL SimpleName@@REGULAR_EXPRESSION @AT@ 29302 @LENGTH@ 18
---------------DEL SimpleName@@Name:deploymentDetails @AT@ 29276 @LENGTH@ 17
---------------DEL SimpleName@@MethodName:asBoolean:[] @AT@ 29322 @LENGTH@ 11
------------DEL BooleanLiteral@@false @AT@ 29336 @LENGTH@ 5
---DEL ExpressionStatement@@MethodInvocation:addOp.get(REGULAR_EXPRESSION).set(regEx) @AT@ 29621 @LENGTH@ 41
------DEL MethodInvocation@@addOp.get(REGULAR_EXPRESSION).set(regEx) @AT@ 29621 @LENGTH@ 40
---------DEL MethodInvocation@@MethodName:get:[REGULAR_EXPRESSION] @AT@ 29621 @LENGTH@ 29
------------DEL SimpleName@@REGULAR_EXPRESSION @AT@ 29631 @LENGTH@ 18
---------DEL SimpleName@@Name:addOp @AT@ 29621 @LENGTH@ 5
---------DEL SimpleName@@MethodName:set:[regEx] @AT@ 29651 @LENGTH@ 10
------------DEL SimpleName@@regEx @AT@ 29655 @LENGTH@ 5


UPD VariableDeclarationStatement@@Map<String,String> configuration=metadata.getContainerConfguration(); @TO@ Map<String,String> configuration=metadata.getContainerConfiguration(); @AT@ 12754 @LENGTH@ 71
---UPD VariableDeclarationFragment@@configuration=metadata.getContainerConfguration() @TO@ configuration=metadata.getContainerConfiguration() @AT@ 12773 @LENGTH@ 51
------UPD MethodInvocation@@metadata.getContainerConfguration() @TO@ metadata.getContainerConfiguration() @AT@ 12789 @LENGTH@ 35
---------UPD SimpleName@@MethodName:getContainerConfguration:[] @TO@ MethodName:getContainerConfiguration:[] @AT@ 12798 @LENGTH@ 26


INS MethodDeclaration@@String, MethodName:componentParameterJsonSchema, String componentName, Exception,  @TO@ TypeDeclaration@@[public]ManagedCamelContextMBean, [ManagedPerformanceCounterMBean] @AT@ 7513 @LENGTH@ 68
---INS SimpleType@@String @TO@ MethodDeclaration@@String, MethodName:componentParameterJsonSchema, String componentName, Exception,  @AT@ 7506 @LENGTH@ 6
---INS SimpleName@@MethodName:componentParameterJsonSchema @TO@ MethodDeclaration@@String, MethodName:componentParameterJsonSchema, String componentName, Exception,  @AT@ 7513 @LENGTH@ 28
---INS SingleVariableDeclaration@@String componentName @TO@ MethodDeclaration@@String, MethodName:componentParameterJsonSchema, String componentName, Exception,  @AT@ 7542 @LENGTH@ 20
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String componentName @AT@ 7542 @LENGTH@ 6
------INS SimpleName@@componentName @TO@ SingleVariableDeclaration@@String componentName @AT@ 7549 @LENGTH@ 13
---INS SimpleType@@Exception @TO@ MethodDeclaration@@String, MethodName:componentParameterJsonSchema, String componentName, Exception,  @AT@ 7571 @LENGTH@ 9


UPD ReturnStatement@@NumberLiteral:0 @TO@ PrefixExpression:-1 @AT@ 2815 @LENGTH@ 9
---INS PrefixExpression@@-1 @TO@ ReturnStatement@@NumberLiteral:0 @AT@ 2822 @LENGTH@ 2
------INS Operator@@- @TO@ PrefixExpression@@-1 @AT@ 2822 @LENGTH@ 1
------INS NumberLiteral@@1 @TO@ PrefixExpression@@-1 @AT@ 2823 @LENGTH@ 1
---DEL NumberLiteral@@0 @AT@ 2822 @LENGTH@ 1


UPD Block@@ThenBody:{  if (finderMethod.getParameterTypes().length != 1) {    throw new IllegalArgumentException("findByPrimaryKey called with an illegal number of arguments [" + finderMethod.getParameterTypes().length + "]");  }  final ReadyEntityCache cache=cmpComponent.getCache();  if (cache.isCached(context.getParameters()[0])) {    return this.localHome ? cmpComponent.getEJBLocalObject(context.getParameters()[0]) : cmpComponent.getEJBObject(context.getParameters()[0]);  }} @TO@ ThenBody:{  if (finderMethod.getParameterTypes() == null) {    throw MESSAGES.nullArgumentForFindByPrimaryKey();  }  if (finderMethod.getParameterTypes().length != 1) {    throw MESSAGES.illegalNumberOfArgumentsForFindByPrimaryKey(finderMethod.getParameterTypes().length);  }  final ReadyEntityCache cache=cmpComponent.getCache();  if (cache.isCached(context.getParameters()[0])) {    return this.localHome ? cmpComponent.getEJBLocalObject(context.getParameters()[0]) : cmpComponent.getEJBObject(context.getParameters()[0]);  }} @AT@ 3221 @LENGTH@ 551
---UPD IfStatement@@if (finderMethod.getParameterTypes().length != 1) {  throw new IllegalArgumentException("findByPrimaryKey called with an illegal number of arguments [" + finderMethod.getParameterTypes().length + "]");} @TO@ if (finderMethod.getParameterTypes().length != 1) {  throw MESSAGES.illegalNumberOfArgumentsForFindByPrimaryKey(finderMethod.getParameterTypes().length);} @AT@ 3235 @LENGTH@ 228
------UPD Block@@ThenBody:{  throw new IllegalArgumentException("findByPrimaryKey called with an illegal number of arguments [" + finderMethod.getParameterTypes().length + "]");} @TO@ ThenBody:{  throw MESSAGES.illegalNumberOfArgumentsForFindByPrimaryKey(finderMethod.getParameterTypes().length);} @AT@ 3284 @LENGTH@ 179
---------UPD ThrowStatement@@ClassInstanceCreation:new IllegalArgumentException("findByPrimaryKey called with an illegal number of arguments [" + finderMethod.getParameterTypes().length + "]") @TO@ MethodInvocation:MESSAGES.illegalNumberOfArgumentsForFindByPrimaryKey(finderMethod.getParameterTypes().length) @AT@ 3302 @LENGTH@ 147
------------DEL ClassInstanceCreation@@IllegalArgumentException["findByPrimaryKey called with an illegal number of arguments [" + finderMethod.getParameterTypes().length + "]"] @AT@ 3308 @LENGTH@ 140
---------------DEL New@@new @AT@ 3308 @LENGTH@ 3
---------------DEL SimpleType@@IllegalArgumentException @AT@ 3312 @LENGTH@ 24
---------------DEL InfixExpression@@"findByPrimaryKey called with an illegal number of arguments [" + finderMethod.getParameterTypes().length + "]" @AT@ 3337 @LENGTH@ 110
------------------DEL StringLiteral@@"findByPrimaryKey called with an illegal number of arguments [" @AT@ 3337 @LENGTH@ 63
------------------DEL Operator@@+ @AT@ 3400 @LENGTH@ 1
------------------DEL StringLiteral@@"]" @AT@ 3444 @LENGTH@ 3
------------INS MethodInvocation@@MESSAGES.illegalNumberOfArgumentsForFindByPrimaryKey(finderMethod.getParameterTypes().length) @TO@ ThrowStatement@@ClassInstanceCreation:new IllegalArgumentException("findByPrimaryKey called with an illegal number of arguments [" + finderMethod.getParameterTypes().length + "]") @AT@ 3501 @LENGTH@ 93
---------------INS SimpleName@@Name:MESSAGES @TO@ MethodInvocation@@MESSAGES.illegalNumberOfArgumentsForFindByPrimaryKey(finderMethod.getParameterTypes().length) @AT@ 3501 @LENGTH@ 8
---------------INS SimpleName@@MethodName:illegalNumberOfArgumentsForFindByPrimaryKey:[finderMethod.getParameterTypes().length] @TO@ MethodInvocation@@MESSAGES.illegalNumberOfArgumentsForFindByPrimaryKey(finderMethod.getParameterTypes().length) @AT@ 3510 @LENGTH@ 84
------------------MOV FieldAccess@@finderMethod.getParameterTypes().length @TO@ SimpleName@@MethodName:illegalNumberOfArgumentsForFindByPrimaryKey:[finderMethod.getParameterTypes().length] @AT@ 3403 @LENGTH@ 39
---INS IfStatement@@if (finderMethod.getParameterTypes() == null) {  throw MESSAGES.nullArgumentForFindByPrimaryKey();} @TO@ Block@@ThenBody:{  if (finderMethod.getParameterTypes().length != 1) {    throw new IllegalArgumentException("findByPrimaryKey called with an illegal number of arguments [" + finderMethod.getParameterTypes().length + "]");  }  final ReadyEntityCache cache=cmpComponent.getCache();  if (cache.isCached(context.getParameters()[0])) {    return this.localHome ? cmpComponent.getEJBLocalObject(context.getParameters()[0]) : cmpComponent.getEJBObject(context.getParameters()[0]);  }} @AT@ 3289 @LENGTH@ 126
------INS InfixExpression@@finderMethod.getParameterTypes() == null @TO@ IfStatement@@if (finderMethod.getParameterTypes() == null) {  throw MESSAGES.nullArgumentForFindByPrimaryKey();} @AT@ 3292 @LENGTH@ 40
---------INS MethodInvocation@@finderMethod.getParameterTypes() @TO@ InfixExpression@@finderMethod.getParameterTypes() == null @AT@ 3292 @LENGTH@ 32
------------INS SimpleName@@Name:finderMethod @TO@ MethodInvocation@@finderMethod.getParameterTypes() @AT@ 3292 @LENGTH@ 12
------------INS SimpleName@@MethodName:getParameterTypes:[] @TO@ MethodInvocation@@finderMethod.getParameterTypes() @AT@ 3305 @LENGTH@ 19
---------INS Operator@@== @TO@ InfixExpression@@finderMethod.getParameterTypes() == null @AT@ 3324 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@finderMethod.getParameterTypes() == null @AT@ 3328 @LENGTH@ 4
------INS Block@@ThenBody:{  throw MESSAGES.nullArgumentForFindByPrimaryKey();} @TO@ IfStatement@@if (finderMethod.getParameterTypes() == null) {  throw MESSAGES.nullArgumentForFindByPrimaryKey();} @AT@ 3334 @LENGTH@ 81
---------INS ThrowStatement@@MethodInvocation:MESSAGES.nullArgumentForFindByPrimaryKey() @TO@ Block@@ThenBody:{  throw MESSAGES.nullArgumentForFindByPrimaryKey();} @AT@ 3352 @LENGTH@ 49
------------INS MethodInvocation@@MESSAGES.nullArgumentForFindByPrimaryKey() @TO@ ThrowStatement@@MethodInvocation:MESSAGES.nullArgumentForFindByPrimaryKey() @AT@ 3358 @LENGTH@ 42
---------------INS SimpleName@@Name:MESSAGES @TO@ MethodInvocation@@MESSAGES.nullArgumentForFindByPrimaryKey() @AT@ 3358 @LENGTH@ 8
---------------INS SimpleName@@MethodName:nullArgumentForFindByPrimaryKey:[] @TO@ MethodInvocation@@MESSAGES.nullArgumentForFindByPrimaryKey() @AT@ 3367 @LENGTH@ 33


UPD IfStatement@@if (hornetqActivationController != null && !hornetqActivationController.getServiceContainer().isShutdown()) {  hornetqActivationController.setMode(PASSIVE);} @TO@ if (hornetqActivationController != null) {  if (!hornetqActivationController.getState().in(STOPPING,REMOVED)) {    hornetqActivationController.compareAndSetMode(ACTIVE,PASSIVE);  }} @AT@ 5332 @LENGTH@ 229
---DEL InfixExpression@@hornetqActivationController != null && !hornetqActivationController.getServiceContainer().isShutdown() @AT@ 5336 @LENGTH@ 130
------DEL InfixExpression@@hornetqActivationController != null @AT@ 5336 @LENGTH@ 35
------DEL Operator@@&& @AT@ 5371 @LENGTH@ 2
------DEL PrefixExpression@@!hornetqActivationController.getServiceContainer().isShutdown() @AT@ 5403 @LENGTH@ 63
---UPD Block@@ThenBody:{  hornetqActivationController.setMode(PASSIVE);} @TO@ ThenBody:{  hornetqActivationController.compareAndSetMode(ACTIVE,PASSIVE);} @AT@ 5468 @LENGTH@ 93
---INS InfixExpression@@hornetqActivationController != null @TO@ IfStatement@@if (hornetqActivationController != null && !hornetqActivationController.getServiceContainer().isShutdown()) {  hornetqActivationController.setMode(PASSIVE);} @AT@ 5496 @LENGTH@ 35
------MOV SimpleName@@hornetqActivationController @TO@ InfixExpression@@hornetqActivationController != null @AT@ 5336 @LENGTH@ 27
------MOV Operator@@!= @TO@ InfixExpression@@hornetqActivationController != null @AT@ 5363 @LENGTH@ 2
------MOV NullLiteral@@null @TO@ InfixExpression@@hornetqActivationController != null @AT@ 5367 @LENGTH@ 4
---INS Block@@ThenBody:{  if (!hornetqActivationController.getState().in(STOPPING,REMOVED)) {    hornetqActivationController.compareAndSetMode(ACTIVE,PASSIVE);  }} @TO@ IfStatement@@if (hornetqActivationController != null && !hornetqActivationController.getServiceContainer().isShutdown()) {  hornetqActivationController.setMode(PASSIVE);} @AT@ 5533 @LENGTH@ 234
------INS IfStatement@@if (!hornetqActivationController.getState().in(STOPPING,REMOVED)) {  hornetqActivationController.compareAndSetMode(ACTIVE,PASSIVE);} @TO@ Block@@ThenBody:{  if (!hornetqActivationController.getState().in(STOPPING,REMOVED)) {    hornetqActivationController.compareAndSetMode(ACTIVE,PASSIVE);  }} @AT@ 5559 @LENGTH@ 186
---------MOV Block@@ThenBody:{  hornetqActivationController.setMode(PASSIVE);} @TO@ IfStatement@@if (!hornetqActivationController.getState().in(STOPPING,REMOVED)) {  hornetqActivationController.compareAndSetMode(ACTIVE,PASSIVE);} @AT@ 5468 @LENGTH@ 93
------------UPD ExpressionStatement@@MethodInvocation:hornetqActivationController.setMode(PASSIVE) @TO@ MethodInvocation:hornetqActivationController.compareAndSetMode(ACTIVE,PASSIVE) @AT@ 5494 @LENGTH@ 45
---------------UPD MethodInvocation@@hornetqActivationController.setMode(PASSIVE) @TO@ hornetqActivationController.compareAndSetMode(ACTIVE,PASSIVE) @AT@ 5494 @LENGTH@ 44
------------------UPD SimpleName@@MethodName:setMode:[PASSIVE] @TO@ MethodName:compareAndSetMode:[ACTIVE, PASSIVE] @AT@ 5522 @LENGTH@ 16
---------------------INS SimpleName@@ACTIVE @TO@ SimpleName@@MethodName:setMode:[PASSIVE] @AT@ 5702 @LENGTH@ 6
---------INS PrefixExpression@@!hornetqActivationController.getState().in(STOPPING,REMOVED) @TO@ IfStatement@@if (!hornetqActivationController.getState().in(STOPPING,REMOVED)) {  hornetqActivationController.compareAndSetMode(ACTIVE,PASSIVE);} @AT@ 5563 @LENGTH@ 61
------------MOV Operator@@! @TO@ PrefixExpression@@!hornetqActivationController.getState().in(STOPPING,REMOVED) @AT@ 5403 @LENGTH@ 1
------------MOV MethodInvocation@@hornetqActivationController.getServiceContainer().isShutdown() @TO@ PrefixExpression@@!hornetqActivationController.getState().in(STOPPING,REMOVED) @AT@ 5404 @LENGTH@ 62
---------------UPD MethodInvocation@@MethodName:getServiceContainer:[] @TO@ MethodName:getState:[] @AT@ 5404 @LENGTH@ 49
---------------UPD SimpleName@@MethodName:isShutdown:[] @TO@ MethodName:in:[STOPPING, REMOVED] @AT@ 5454 @LENGTH@ 12
------------------INS SimpleName@@STOPPING @TO@ SimpleName@@MethodName:isShutdown:[] @AT@ 5606 @LENGTH@ 8
------------------INS SimpleName@@REMOVED @TO@ SimpleName@@MethodName:isShutdown:[] @AT@ 5616 @LENGTH@ 7


INS MethodDeclaration@@public, void, MethodName:addStep, final ModelNode operation, final OperationStepHandler step, final Stage stage, final boolean addFirst, IllegalArgumentException,  @TO@ TypeDeclaration@@[@SuppressWarnings("deprecation"), abstract]AbstractOperationContext, [OperationContext] @AT@ 5904 @LENGTH@ 353
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:addStep, final ModelNode operation, final OperationStepHandler step, final Stage stage, final boolean addFirst, IllegalArgumentException,  @AT@ 5904 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:addStep, final ModelNode operation, final OperationStepHandler step, final Stage stage, final boolean addFirst, IllegalArgumentException,  @AT@ 5911 @LENGTH@ 4
---INS SimpleName@@MethodName:addStep @TO@ MethodDeclaration@@public, void, MethodName:addStep, final ModelNode operation, final OperationStepHandler step, final Stage stage, final boolean addFirst, IllegalArgumentException,  @AT@ 5916 @LENGTH@ 7
---INS SingleVariableDeclaration@@final ModelNode operation @TO@ MethodDeclaration@@public, void, MethodName:addStep, final ModelNode operation, final OperationStepHandler step, final Stage stage, final boolean addFirst, IllegalArgumentException,  @AT@ 5924 @LENGTH@ 25
------INS Modifier@@final @TO@ SingleVariableDeclaration@@final ModelNode operation @AT@ 5924 @LENGTH@ 5
------INS SimpleType@@ModelNode @TO@ SingleVariableDeclaration@@final ModelNode operation @AT@ 5930 @LENGTH@ 9
------INS SimpleName@@operation @TO@ SingleVariableDeclaration@@final ModelNode operation @AT@ 5940 @LENGTH@ 9
---INS SingleVariableDeclaration@@final OperationStepHandler step @TO@ MethodDeclaration@@public, void, MethodName:addStep, final ModelNode operation, final OperationStepHandler step, final Stage stage, final boolean addFirst, IllegalArgumentException,  @AT@ 5951 @LENGTH@ 31
------INS Modifier@@final @TO@ SingleVariableDeclaration@@final OperationStepHandler step @AT@ 5951 @LENGTH@ 5
------INS SimpleType@@OperationStepHandler @TO@ SingleVariableDeclaration@@final OperationStepHandler step @AT@ 5957 @LENGTH@ 20
------INS SimpleName@@step @TO@ SingleVariableDeclaration@@final OperationStepHandler step @AT@ 5978 @LENGTH@ 4
---INS SingleVariableDeclaration@@final Stage stage @TO@ MethodDeclaration@@public, void, MethodName:addStep, final ModelNode operation, final OperationStepHandler step, final Stage stage, final boolean addFirst, IllegalArgumentException,  @AT@ 5984 @LENGTH@ 17
------INS Modifier@@final @TO@ SingleVariableDeclaration@@final Stage stage @AT@ 5984 @LENGTH@ 5
------INS SimpleType@@Stage @TO@ SingleVariableDeclaration@@final Stage stage @AT@ 5990 @LENGTH@ 5
------INS SimpleName@@stage @TO@ SingleVariableDeclaration@@final Stage stage @AT@ 5996 @LENGTH@ 5
---INS SingleVariableDeclaration@@final boolean addFirst @TO@ MethodDeclaration@@public, void, MethodName:addStep, final ModelNode operation, final OperationStepHandler step, final Stage stage, final boolean addFirst, IllegalArgumentException,  @AT@ 6003 @LENGTH@ 22
------INS Modifier@@final @TO@ SingleVariableDeclaration@@final boolean addFirst @AT@ 6003 @LENGTH@ 5
------INS PrimitiveType@@boolean @TO@ SingleVariableDeclaration@@final boolean addFirst @AT@ 6009 @LENGTH@ 7
------INS SimpleName@@addFirst @TO@ SingleVariableDeclaration@@final boolean addFirst @AT@ 6017 @LENGTH@ 8
---INS SimpleType@@IllegalArgumentException @TO@ MethodDeclaration@@public, void, MethodName:addStep, final ModelNode operation, final OperationStepHandler step, final Stage stage, final boolean addFirst, IllegalArgumentException,  @AT@ 6046 @LENGTH@ 24
---INS VariableDeclarationStatement@@final ModelNode response=activeStep == null ? new ModelNode().setEmptyObject() : activeStep.response; @TO@ MethodDeclaration@@public, void, MethodName:addStep, final ModelNode operation, final OperationStepHandler step, final Stage stage, final boolean addFirst, IllegalArgumentException,  @AT@ 6081 @LENGTH@ 103
------INS Modifier@@final @TO@ VariableDeclarationStatement@@final ModelNode response=activeStep == null ? new ModelNode().setEmptyObject() : activeStep.response; @AT@ 6081 @LENGTH@ 5
------INS SimpleType@@ModelNode @TO@ VariableDeclarationStatement@@final ModelNode response=activeStep == null ? new ModelNode().setEmptyObject() : activeStep.response; @AT@ 6087 @LENGTH@ 9
------INS VariableDeclarationFragment@@response=activeStep == null ? new ModelNode().setEmptyObject() : activeStep.response @TO@ VariableDeclarationStatement@@final ModelNode response=activeStep == null ? new ModelNode().setEmptyObject() : activeStep.response; @AT@ 6097 @LENGTH@ 86
---------INS SimpleName@@response @TO@ VariableDeclarationFragment@@response=activeStep == null ? new ModelNode().setEmptyObject() : activeStep.response @AT@ 6097 @LENGTH@ 8
---------INS ConditionalExpression@@activeStep == null ? new ModelNode().setEmptyObject() : activeStep.response @TO@ VariableDeclarationFragment@@response=activeStep == null ? new ModelNode().setEmptyObject() : activeStep.response @AT@ 6108 @LENGTH@ 75
------------INS InfixExpression@@activeStep == null @TO@ ConditionalExpression@@activeStep == null ? new ModelNode().setEmptyObject() : activeStep.response @AT@ 6108 @LENGTH@ 18
---------------INS SimpleName@@activeStep @TO@ InfixExpression@@activeStep == null @AT@ 6108 @LENGTH@ 10
---------------INS Operator@@== @TO@ InfixExpression@@activeStep == null @AT@ 6118 @LENGTH@ 2
---------------INS NullLiteral@@null @TO@ InfixExpression@@activeStep == null @AT@ 6122 @LENGTH@ 4
------------INS MethodInvocation@@new ModelNode().setEmptyObject() @TO@ ConditionalExpression@@activeStep == null ? new ModelNode().setEmptyObject() : activeStep.response @AT@ 6129 @LENGTH@ 32
---------------INS ClassInstanceCreation@@ModelNode[] @TO@ MethodInvocation@@new ModelNode().setEmptyObject() @AT@ 6129 @LENGTH@ 15
------------------INS New@@new @TO@ ClassInstanceCreation@@ModelNode[] @AT@ 6129 @LENGTH@ 3
------------------INS SimpleType@@ModelNode @TO@ ClassInstanceCreation@@ModelNode[] @AT@ 6133 @LENGTH@ 9
---------------INS SimpleName@@MethodName:setEmptyObject:[] @TO@ MethodInvocation@@new ModelNode().setEmptyObject() @AT@ 6145 @LENGTH@ 16
------------INS QualifiedName@@activeStep.response @TO@ ConditionalExpression@@activeStep == null ? new ModelNode().setEmptyObject() : activeStep.response @AT@ 6164 @LENGTH@ 19
---------------INS SimpleName@@activeStep @TO@ QualifiedName@@activeStep.response @AT@ 6164 @LENGTH@ 10
---------------INS SimpleName@@response @TO@ QualifiedName@@activeStep.response @AT@ 6175 @LENGTH@ 8
---INS ExpressionStatement@@MethodInvocation:addStep(response,operation,null,step,stage,addFirst) @TO@ MethodDeclaration@@public, void, MethodName:addStep, final ModelNode operation, final OperationStepHandler step, final Stage stage, final boolean addFirst, IllegalArgumentException,  @AT@ 6193 @LENGTH@ 58
------INS MethodInvocation@@addStep(response,operation,null,step,stage,addFirst) @TO@ ExpressionStatement@@MethodInvocation:addStep(response,operation,null,step,stage,addFirst) @AT@ 6193 @LENGTH@ 57
---------INS SimpleName@@MethodName:addStep:[response, operation, null, step, stage, addFirst] @TO@ MethodInvocation@@addStep(response,operation,null,step,stage,addFirst) @AT@ 6193 @LENGTH@ 57
------------INS SimpleName@@response @TO@ SimpleName@@MethodName:addStep:[response, operation, null, step, stage, addFirst] @AT@ 6201 @LENGTH@ 8
------------INS SimpleName@@operation @TO@ SimpleName@@MethodName:addStep:[response, operation, null, step, stage, addFirst] @AT@ 6211 @LENGTH@ 9
------------INS NullLiteral@@null @TO@ SimpleName@@MethodName:addStep:[response, operation, null, step, stage, addFirst] @AT@ 6222 @LENGTH@ 4
------------INS SimpleName@@step @TO@ SimpleName@@MethodName:addStep:[response, operation, null, step, stage, addFirst] @AT@ 6228 @LENGTH@ 4
------------INS SimpleName@@stage @TO@ SimpleName@@MethodName:addStep:[response, operation, null, step, stage, addFirst] @AT@ 6234 @LENGTH@ 5
------------INS SimpleName@@addFirst @TO@ SimpleName@@MethodName:addStep:[response, operation, null, step, stage, addFirst] @AT@ 6241 @LENGTH@ 8


INS MethodDeclaration@@public, boolean, MethodName:isDeadLetterChannel,  @TO@ TypeDeclaration@@[public, abstract]ErrorHandlerSupport, ChildServiceSupport[ErrorHandler] @AT@ 4621 @LENGTH@ 66
---INS Modifier@@public @TO@ MethodDeclaration@@public, boolean, MethodName:isDeadLetterChannel,  @AT@ 4621 @LENGTH@ 6
---INS PrimitiveType@@boolean @TO@ MethodDeclaration@@public, boolean, MethodName:isDeadLetterChannel,  @AT@ 4628 @LENGTH@ 7
---INS SimpleName@@MethodName:isDeadLetterChannel @TO@ MethodDeclaration@@public, boolean, MethodName:isDeadLetterChannel,  @AT@ 4636 @LENGTH@ 19
---INS ReturnStatement@@BooleanLiteral:false @TO@ MethodDeclaration@@public, boolean, MethodName:isDeadLetterChannel,  @AT@ 4668 @LENGTH@ 13
------INS BooleanLiteral@@false @TO@ ReturnStatement@@BooleanLiteral:false @AT@ 4675 @LENGTH@ 5


UPD ExpressionStatement@@MethodInvocation:log.info("Going to {} JMX for the test {}",(enable ? "enable" : "disable"),getName()) @TO@ MethodInvocation:log.info("Going to {} JMX for the test {}",enable ? "enable" : "disable",getName()) @AT@ 3406 @LENGTH@ 88
---UPD MethodInvocation@@log.info("Going to {} JMX for the test {}",(enable ? "enable" : "disable"),getName()) @TO@ log.info("Going to {} JMX for the test {}",enable ? "enable" : "disable",getName()) @AT@ 3406 @LENGTH@ 87
------UPD SimpleName@@MethodName:info:["Going to {} JMX for the test {}", (enable ? "enable" : "disable"), getName()] @TO@ MethodName:info:["Going to {} JMX for the test {}", enable ? "enable" : "disable", getName()] @AT@ 3410 @LENGTH@ 83
---------DEL ParenthesizedExpression@@(enable ? "enable" : "disable") @AT@ 3450 @LENGTH@ 31
------------DEL ConditionalExpression@@enable ? "enable" : "disable" @AT@ 3451 @LENGTH@ 29
---------INS ConditionalExpression@@enable ? "enable" : "disable" @TO@ SimpleName@@MethodName:info:["Going to {} JMX for the test {}", (enable ? "enable" : "disable"), getName()] @AT@ 3450 @LENGTH@ 29
------------MOV SimpleName@@enable @TO@ ConditionalExpression@@enable ? "enable" : "disable" @AT@ 3451 @LENGTH@ 6
------------MOV StringLiteral@@"enable" @TO@ ConditionalExpression@@enable ? "enable" : "disable" @AT@ 3460 @LENGTH@ 8
------------MOV StringLiteral@@"disable" @TO@ ConditionalExpression@@enable ? "enable" : "disable" @AT@ 3471 @LENGTH@ 9


UPD ExpressionStatement@@MethodInvocation:node.get("abc").set(BigInteger.valueOf(10)) @TO@ MethodInvocation:node.get("abc").set(new BigInteger(String.valueOf(Long.MAX_VALUE) + "0")) @AT@ 8522 @LENGTH@ 44
---UPD MethodInvocation@@node.get("abc").set(BigInteger.valueOf(10)) @TO@ node.get("abc").set(new BigInteger(String.valueOf(Long.MAX_VALUE) + "0")) @AT@ 8522 @LENGTH@ 43
------UPD SimpleName@@MethodName:set:[BigInteger.valueOf(10)] @TO@ MethodName:set:[new BigInteger(String.valueOf(Long.MAX_VALUE) + "0")] @AT@ 8538 @LENGTH@ 27
---------DEL MethodInvocation@@BigInteger.valueOf(10) @AT@ 8542 @LENGTH@ 22
---------INS ClassInstanceCreation@@BigInteger[String.valueOf(Long.MAX_VALUE) + "0"] @TO@ SimpleName@@MethodName:set:[BigInteger.valueOf(10)] @AT@ 8850 @LENGTH@ 52
------------INS New@@new @TO@ ClassInstanceCreation@@BigInteger[String.valueOf(Long.MAX_VALUE) + "0"] @AT@ 8850 @LENGTH@ 3
------------INS SimpleType@@BigInteger @TO@ ClassInstanceCreation@@BigInteger[String.valueOf(Long.MAX_VALUE) + "0"] @AT@ 8854 @LENGTH@ 10
------------INS InfixExpression@@String.valueOf(Long.MAX_VALUE) + "0" @TO@ ClassInstanceCreation@@BigInteger[String.valueOf(Long.MAX_VALUE) + "0"] @AT@ 8865 @LENGTH@ 36
---------------INS MethodInvocation@@String.valueOf(Long.MAX_VALUE) @TO@ InfixExpression@@String.valueOf(Long.MAX_VALUE) + "0" @AT@ 8865 @LENGTH@ 30
------------------MOV SimpleName@@Name:BigInteger @TO@ MethodInvocation@@String.valueOf(Long.MAX_VALUE) @AT@ 8542 @LENGTH@ 10
------------------MOV SimpleName@@MethodName:valueOf:[10] @TO@ MethodInvocation@@String.valueOf(Long.MAX_VALUE) @AT@ 8553 @LENGTH@ 11
---------------------DEL NumberLiteral@@10 @AT@ 8561 @LENGTH@ 2
---------------------INS QualifiedName@@Long.MAX_VALUE @TO@ SimpleName@@MethodName:valueOf:[10] @AT@ 8880 @LENGTH@ 14
------------------------INS SimpleName@@Long @TO@ QualifiedName@@Long.MAX_VALUE @AT@ 8880 @LENGTH@ 4
------------------------INS SimpleName@@MAX_VALUE @TO@ QualifiedName@@Long.MAX_VALUE @AT@ 8885 @LENGTH@ 9
---------------INS Operator@@+ @TO@ InfixExpression@@String.valueOf(Long.MAX_VALUE) + "0" @AT@ 8895 @LENGTH@ 1
---------------INS StringLiteral@@"0" @TO@ InfixExpression@@String.valueOf(Long.MAX_VALUE) + "0" @AT@ 8898 @LENGTH@ 3


UPD ReturnStatement@@MethodInvocation:loader.getClass().getName().startsWith("com.ibm") @TO@ ConditionalExpression:loader != null ? loader.getClass().getName().startsWith("com.ibm") : false @AT@ 1678 @LENGTH@ 57
---INS ConditionalExpression@@loader != null ? loader.getClass().getName().startsWith("com.ibm") : false @TO@ ReturnStatement@@MethodInvocation:loader.getClass().getName().startsWith("com.ibm") @AT@ 1685 @LENGTH@ 74
------MOV MethodInvocation@@loader.getClass().getName().startsWith("com.ibm") @TO@ ConditionalExpression@@loader != null ? loader.getClass().getName().startsWith("com.ibm") : false @AT@ 1685 @LENGTH@ 49
------INS InfixExpression@@loader != null @TO@ ConditionalExpression@@loader != null ? loader.getClass().getName().startsWith("com.ibm") : false @AT@ 1685 @LENGTH@ 14
---------INS SimpleName@@loader @TO@ InfixExpression@@loader != null @AT@ 1685 @LENGTH@ 6
---------INS Operator@@!= @TO@ InfixExpression@@loader != null @AT@ 1691 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@loader != null @AT@ 1695 @LENGTH@ 4
------INS BooleanLiteral@@false @TO@ ConditionalExpression@@loader != null ? loader.getClass().getName().startsWith("com.ibm") : false @AT@ 1754 @LENGTH@ 5

DEL FieldDeclaration@@private, static, final, Logger, [LOG=LoggerFactory.getLogger(ArchiveUtils.class.getName())] @AT@ 1799 @LENGTH@ 88
---DEL Modifier@@private @AT@ 1799 @LENGTH@ 7
---DEL Modifier@@static @AT@ 1807 @LENGTH@ 6
---DEL Modifier@@final @AT@ 1814 @LENGTH@ 5
---DEL SimpleType@@Logger @AT@ 1820 @LENGTH@ 6
---DEL VariableDeclarationFragment@@LOG=LoggerFactory.getLogger(ArchiveUtils.class.getName()) @AT@ 1827 @LENGTH@ 59
------DEL SimpleName@@LOG @AT@ 1827 @LENGTH@ 3
------DEL MethodInvocation@@LoggerFactory.getLogger(ArchiveUtils.class.getName()) @AT@ 1833 @LENGTH@ 53
---------DEL SimpleName@@Name:LoggerFactory @AT@ 1833 @LENGTH@ 13
---------DEL SimpleName@@MethodName:getLogger:[ArchiveUtils.class.getName()] @AT@ 1847 @LENGTH@ 39
------------DEL MethodInvocation@@ArchiveUtils.class.getName() @AT@ 1857 @LENGTH@ 28
---------------DEL TypeLiteral@@ArchiveUtils.class @AT@ 1857 @LENGTH@ 18
---------------DEL SimpleName@@MethodName:getName:[] @AT@ 1876 @LENGTH@ 9


UPD ExpressionStatement@@MethodInvocation:auditingHandlerFactory.getObject().markAudited(entity) @TO@ MethodInvocation:auditingHandlerFactory.getObject().markAudited(Optional.ofNullable(entity)) @AT@ 2151 @LENGTH@ 55
---UPD MethodInvocation@@auditingHandlerFactory.getObject().markAudited(entity) @TO@ auditingHandlerFactory.getObject().markAudited(Optional.ofNullable(entity)) @AT@ 2151 @LENGTH@ 54
------UPD SimpleName@@MethodName:markAudited:[entity] @TO@ MethodName:markAudited:[Optional.ofNullable(entity)] @AT@ 2186 @LENGTH@ 19
---------INS MethodInvocation@@Optional.ofNullable(entity) @TO@ SimpleName@@MethodName:markAudited:[entity] @AT@ 2226 @LENGTH@ 27
------------INS SimpleName@@Name:Optional @TO@ MethodInvocation@@Optional.ofNullable(entity) @AT@ 2226 @LENGTH@ 8
------------INS SimpleName@@MethodName:ofNullable:[entity] @TO@ MethodInvocation@@Optional.ofNullable(entity) @AT@ 2235 @LENGTH@ 18
---------------MOV SimpleName@@entity @TO@ SimpleName@@MethodName:ofNullable:[entity] @AT@ 2198 @LENGTH@ 6


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<MiloClientComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<MiloClientComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5501 @LENGTH@ 343
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 5505 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5505 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  ComponentCustomizer<MiloClientComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ ThenBody:{  for (  ComponentCustomizer<MiloClientComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5561 @LENGTH@ 283
------UPD EnhancedForStatement@@for (ComponentCustomizer<MiloClientComponent> configurer : customizers) {  LOGGER.debug("Configure component {}, with configurer {}",component,configurer);  configurer.customize(component);} @TO@ for (ComponentCustomizer<MiloClientComponent> customizer : customizers) {  LOGGER.debug("Configure component {}, with customizer {}",component,customizer);  customizer.customize(component);} @AT@ 5575 @LENGTH@ 259
---------UPD SingleVariableDeclaration@@ComponentCustomizer<MiloClientComponent> configurer @TO@ ComponentCustomizer<MiloClientComponent> customizer @AT@ 5580 @LENGTH@ 51
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5621 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5665 @LENGTH@ 106
------------UPD MethodInvocation@@LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5665 @LENGTH@ 105
---------------UPD SimpleName@@MethodName:debug:["Configure component {}, with configurer {}", component, configurer] @TO@ MethodName:debug:["Configure component {}, with customizer {}", component, customizer] @AT@ 5672 @LENGTH@ 98
------------------UPD StringLiteral@@"Configure component {}, with configurer {}" @TO@ "Configure component {}, with customizer {}" @AT@ 5678 @LENGTH@ 44
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5759 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(component) @TO@ MethodInvocation:customizer.customize(component) @AT@ 5788 @LENGTH@ 32
------------UPD MethodInvocation@@configurer.customize(component) @TO@ customizer.customize(component) @AT@ 5788 @LENGTH@ 31
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5788 @LENGTH@ 10


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && languageConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && languageConfiguration.getCustomizer().isEnabled(); @AT@ 4557 @LENGTH@ 159
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && languageConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && languageConfiguration.getCustomizer().isEnabled() @AT@ 4565 @LENGTH@ 150
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 4565 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && languageConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && languageConfiguration.getCustomizer().isEnabled() @AT@ 4582 @LENGTH@ 133
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 4582 @LENGTH@ 64
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 4582 @LENGTH@ 35
---------UPD MethodInvocation@@languageConfiguration.getConfigurer().isEnabled() @TO@ languageConfiguration.getCustomizer().isEnabled() @AT@ 4666 @LENGTH@ 49
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 4666 @LENGTH@ 37


INS MethodDeclaration@@public, void, MethodName:testValidateEndpointConsumerOnly, Exception,  @TO@ TypeDeclaration@@[public]CamelCatalogTest,  @AT@ 33709 @LENGTH@ 587
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testValidateEndpointConsumerOnly, Exception,  @AT@ 33709 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testValidateEndpointConsumerOnly, Exception,  @AT@ 33716 @LENGTH@ 4
---INS SimpleName@@MethodName:testValidateEndpointConsumerOnly @TO@ MethodDeclaration@@public, void, MethodName:testValidateEndpointConsumerOnly, Exception,  @AT@ 33721 @LENGTH@ 32
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:testValidateEndpointConsumerOnly, Exception,  @AT@ 33763 @LENGTH@ 9
---INS VariableDeclarationStatement@@String uri="file:inbox?bufferSize=4096&readLock=changed&delete=true"; @TO@ MethodDeclaration@@public, void, MethodName:testValidateEndpointConsumerOnly, Exception,  @AT@ 33783 @LENGTH@ 71
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String uri="file:inbox?bufferSize=4096&readLock=changed&delete=true"; @AT@ 33783 @LENGTH@ 6
------INS VariableDeclarationFragment@@uri="file:inbox?bufferSize=4096&readLock=changed&delete=true" @TO@ VariableDeclarationStatement@@String uri="file:inbox?bufferSize=4096&readLock=changed&delete=true"; @AT@ 33790 @LENGTH@ 63
---------INS SimpleName@@uri @TO@ VariableDeclarationFragment@@uri="file:inbox?bufferSize=4096&readLock=changed&delete=true" @AT@ 33790 @LENGTH@ 3
---------INS StringLiteral@@"file:inbox?bufferSize=4096&readLock=changed&delete=true" @TO@ VariableDeclarationFragment@@uri="file:inbox?bufferSize=4096&readLock=changed&delete=true" @AT@ 33796 @LENGTH@ 57
---INS VariableDeclarationStatement@@EndpointValidationResult result=catalog.validateEndpointProperties(uri,false,true,false); @TO@ MethodDeclaration@@public, void, MethodName:testValidateEndpointConsumerOnly, Exception,  @AT@ 33863 @LENGTH@ 94
------INS SimpleType@@EndpointValidationResult @TO@ VariableDeclarationStatement@@EndpointValidationResult result=catalog.validateEndpointProperties(uri,false,true,false); @AT@ 33863 @LENGTH@ 24
------INS VariableDeclarationFragment@@result=catalog.validateEndpointProperties(uri,false,true,false) @TO@ VariableDeclarationStatement@@EndpointValidationResult result=catalog.validateEndpointProperties(uri,false,true,false); @AT@ 33888 @LENGTH@ 68
---------INS SimpleName@@result @TO@ VariableDeclarationFragment@@result=catalog.validateEndpointProperties(uri,false,true,false) @AT@ 33888 @LENGTH@ 6
---------INS MethodInvocation@@catalog.validateEndpointProperties(uri,false,true,false) @TO@ VariableDeclarationFragment@@result=catalog.validateEndpointProperties(uri,false,true,false) @AT@ 33897 @LENGTH@ 59
------------INS SimpleName@@Name:catalog @TO@ MethodInvocation@@catalog.validateEndpointProperties(uri,false,true,false) @AT@ 33897 @LENGTH@ 7
------------INS SimpleName@@MethodName:validateEndpointProperties:[uri, false, true, false] @TO@ MethodInvocation@@catalog.validateEndpointProperties(uri,false,true,false) @AT@ 33905 @LENGTH@ 51
---------------INS SimpleName@@uri @TO@ SimpleName@@MethodName:validateEndpointProperties:[uri, false, true, false] @AT@ 33932 @LENGTH@ 3
---------------INS BooleanLiteral@@false @TO@ SimpleName@@MethodName:validateEndpointProperties:[uri, false, true, false] @AT@ 33937 @LENGTH@ 5
---------------INS BooleanLiteral@@true @TO@ SimpleName@@MethodName:validateEndpointProperties:[uri, false, true, false] @AT@ 33944 @LENGTH@ 4
---------------INS BooleanLiteral@@false @TO@ SimpleName@@MethodName:validateEndpointProperties:[uri, false, true, false] @AT@ 33950 @LENGTH@ 5
---INS ExpressionStatement@@MethodInvocation:assertTrue(result.isSuccess()) @TO@ MethodDeclaration@@public, void, MethodName:testValidateEndpointConsumerOnly, Exception,  @AT@ 33966 @LENGTH@ 31
------INS MethodInvocation@@assertTrue(result.isSuccess()) @TO@ ExpressionStatement@@MethodInvocation:assertTrue(result.isSuccess()) @AT@ 33966 @LENGTH@ 30
---------INS SimpleName@@MethodName:assertTrue:[result.isSuccess()] @TO@ MethodInvocation@@assertTrue(result.isSuccess()) @AT@ 33966 @LENGTH@ 30
------------INS MethodInvocation@@result.isSuccess() @TO@ SimpleName@@MethodName:assertTrue:[result.isSuccess()] @AT@ 33977 @LENGTH@ 18
---------------INS SimpleName@@Name:result @TO@ MethodInvocation@@result.isSuccess() @AT@ 33977 @LENGTH@ 6
---------------INS SimpleName@@MethodName:isSuccess:[] @TO@ MethodInvocation@@result.isSuccess() @AT@ 33984 @LENGTH@ 11
---INS ExpressionStatement@@Assignment:uri="file:inbox?bufferSize=4096&readLock=changed&delete=true&fileExist=Append" @TO@ MethodDeclaration@@public, void, MethodName:testValidateEndpointConsumerOnly, Exception,  @AT@ 34007 @LENGTH@ 81
------INS Assignment@@uri="file:inbox?bufferSize=4096&readLock=changed&delete=true&fileExist=Append" @TO@ ExpressionStatement@@Assignment:uri="file:inbox?bufferSize=4096&readLock=changed&delete=true&fileExist=Append" @AT@ 34007 @LENGTH@ 80
---------INS SimpleName@@uri @TO@ Assignment@@uri="file:inbox?bufferSize=4096&readLock=changed&delete=true&fileExist=Append" @AT@ 34007 @LENGTH@ 3
---------INS Operator@@= @TO@ Assignment@@uri="file:inbox?bufferSize=4096&readLock=changed&delete=true&fileExist=Append" @AT@ 34010 @LENGTH@ 1
---------INS StringLiteral@@"file:inbox?bufferSize=4096&readLock=changed&delete=true&fileExist=Append" @TO@ Assignment@@uri="file:inbox?bufferSize=4096&readLock=changed&delete=true&fileExist=Append" @AT@ 34013 @LENGTH@ 74
---INS ExpressionStatement@@Assignment:result=catalog.validateEndpointProperties(uri,false,true,false) @TO@ MethodDeclaration@@public, void, MethodName:testValidateEndpointConsumerOnly, Exception,  @AT@ 34097 @LENGTH@ 69
------INS Assignment@@result=catalog.validateEndpointProperties(uri,false,true,false) @TO@ ExpressionStatement@@Assignment:result=catalog.validateEndpointProperties(uri,false,true,false) @AT@ 34097 @LENGTH@ 68
---------INS SimpleName@@result @TO@ Assignment@@result=catalog.validateEndpointProperties(uri,false,true,false) @AT@ 34097 @LENGTH@ 6
---------INS Operator@@= @TO@ Assignment@@result=catalog.validateEndpointProperties(uri,false,true,false) @AT@ 34103 @LENGTH@ 1
---------INS MethodInvocation@@catalog.validateEndpointProperties(uri,false,true,false) @TO@ Assignment@@result=catalog.validateEndpointProperties(uri,false,true,false) @AT@ 34106 @LENGTH@ 59
------------INS SimpleName@@Name:catalog @TO@ MethodInvocation@@catalog.validateEndpointProperties(uri,false,true,false) @AT@ 34106 @LENGTH@ 7
------------INS SimpleName@@MethodName:validateEndpointProperties:[uri, false, true, false] @TO@ MethodInvocation@@catalog.validateEndpointProperties(uri,false,true,false) @AT@ 34114 @LENGTH@ 51
---------------INS SimpleName@@uri @TO@ SimpleName@@MethodName:validateEndpointProperties:[uri, false, true, false] @AT@ 34141 @LENGTH@ 3
---------------INS BooleanLiteral@@false @TO@ SimpleName@@MethodName:validateEndpointProperties:[uri, false, true, false] @AT@ 34146 @LENGTH@ 5
---------------INS BooleanLiteral@@true @TO@ SimpleName@@MethodName:validateEndpointProperties:[uri, false, true, false] @AT@ 34153 @LENGTH@ 4
---------------INS BooleanLiteral@@false @TO@ SimpleName@@MethodName:validateEndpointProperties:[uri, false, true, false] @AT@ 34159 @LENGTH@ 5
---INS ExpressionStatement@@MethodInvocation:assertFalse(result.isSuccess()) @TO@ MethodDeclaration@@public, void, MethodName:testValidateEndpointConsumerOnly, Exception,  @AT@ 34175 @LENGTH@ 32
------INS MethodInvocation@@assertFalse(result.isSuccess()) @TO@ ExpressionStatement@@MethodInvocation:assertFalse(result.isSuccess()) @AT@ 34175 @LENGTH@ 31
---------INS SimpleName@@MethodName:assertFalse:[result.isSuccess()] @TO@ MethodInvocation@@assertFalse(result.isSuccess()) @AT@ 34175 @LENGTH@ 31
------------INS MethodInvocation@@result.isSuccess() @TO@ SimpleName@@MethodName:assertFalse:[result.isSuccess()] @AT@ 34187 @LENGTH@ 18
---------------INS SimpleName@@Name:result @TO@ MethodInvocation@@result.isSuccess() @AT@ 34187 @LENGTH@ 6
---------------INS SimpleName@@MethodName:isSuccess:[] @TO@ MethodInvocation@@result.isSuccess() @AT@ 34194 @LENGTH@ 11
---INS ExpressionStatement@@MethodInvocation:assertEquals("fileExist",result.getNotConsumerOnly().iterator().next()) @TO@ MethodDeclaration@@public, void, MethodName:testValidateEndpointConsumerOnly, Exception,  @AT@ 34217 @LENGTH@ 73
------INS MethodInvocation@@assertEquals("fileExist",result.getNotConsumerOnly().iterator().next()) @TO@ ExpressionStatement@@MethodInvocation:assertEquals("fileExist",result.getNotConsumerOnly().iterator().next()) @AT@ 34217 @LENGTH@ 72
---------INS SimpleName@@MethodName:assertEquals:["fileExist", result.getNotConsumerOnly().iterator().next()] @TO@ MethodInvocation@@assertEquals("fileExist",result.getNotConsumerOnly().iterator().next()) @AT@ 34217 @LENGTH@ 72
------------INS StringLiteral@@"fileExist" @TO@ SimpleName@@MethodName:assertEquals:["fileExist", result.getNotConsumerOnly().iterator().next()] @AT@ 34230 @LENGTH@ 11
------------INS MethodInvocation@@result.getNotConsumerOnly().iterator().next() @TO@ SimpleName@@MethodName:assertEquals:["fileExist", result.getNotConsumerOnly().iterator().next()] @AT@ 34243 @LENGTH@ 45
---------------INS MethodInvocation@@MethodName:iterator:[] @TO@ MethodInvocation@@result.getNotConsumerOnly().iterator().next() @AT@ 34243 @LENGTH@ 38
---------------INS MethodInvocation@@MethodName:getNotConsumerOnly:[] @TO@ MethodInvocation@@result.getNotConsumerOnly().iterator().next() @AT@ 34243 @LENGTH@ 27
---------------INS SimpleName@@Name:result @TO@ MethodInvocation@@result.getNotConsumerOnly().iterator().next() @AT@ 34243 @LENGTH@ 6
---------------INS SimpleName@@MethodName:next:[] @TO@ MethodInvocation@@result.getNotConsumerOnly().iterator().next() @AT@ 34282 @LENGTH@ 6


UPD ExpressionStatement@@MethodInvocation:global.blacklistFilet().servers("{{scall.filter}}") @TO@ MethodInvocation:global.blacklistFilter().servers("{{scall.filter}}") @AT@ 11688 @LENGTH@ 52
---UPD MethodInvocation@@global.blacklistFilet().servers("{{scall.filter}}") @TO@ global.blacklistFilter().servers("{{scall.filter}}") @AT@ 11688 @LENGTH@ 51
------UPD MethodInvocation@@MethodName:blacklistFilet:[] @TO@ MethodName:blacklistFilter:[] @AT@ 11688 @LENGTH@ 23


INS IfStatement@@if (in == null) {  in=Thread.currentThread().getContextClassLoader().getResourceAsStream("WEB-INF/classes/" + SwaggerArchive.SWAGGER_CONFIGURATION_PATH);} @TO@ MethodDeclaration@@public, void, MethodName:activate, ServiceActivatorContext serviceActivatorContext, ServiceRegistryException,  @AT@ 1445 @LENGTH@ 221
---INS InfixExpression@@in == null @TO@ IfStatement@@if (in == null) {  in=Thread.currentThread().getContextClassLoader().getResourceAsStream("WEB-INF/classes/" + SwaggerArchive.SWAGGER_CONFIGURATION_PATH);} @AT@ 1449 @LENGTH@ 10
------INS SimpleName@@in @TO@ InfixExpression@@in == null @AT@ 1449 @LENGTH@ 2
------INS Operator@@== @TO@ InfixExpression@@in == null @AT@ 1451 @LENGTH@ 2
------INS NullLiteral@@null @TO@ InfixExpression@@in == null @AT@ 1455 @LENGTH@ 4
---INS Block@@ThenBody:{  in=Thread.currentThread().getContextClassLoader().getResourceAsStream("WEB-INF/classes/" + SwaggerArchive.SWAGGER_CONFIGURATION_PATH);} @TO@ IfStatement@@if (in == null) {  in=Thread.currentThread().getContextClassLoader().getResourceAsStream("WEB-INF/classes/" + SwaggerArchive.SWAGGER_CONFIGURATION_PATH);} @AT@ 1461 @LENGTH@ 205
------INS ExpressionStatement@@Assignment:in=Thread.currentThread().getContextClassLoader().getResourceAsStream("WEB-INF/classes/" + SwaggerArchive.SWAGGER_CONFIGURATION_PATH) @TO@ Block@@ThenBody:{  in=Thread.currentThread().getContextClassLoader().getResourceAsStream("WEB-INF/classes/" + SwaggerArchive.SWAGGER_CONFIGURATION_PATH);} @AT@ 1520 @LENGTH@ 136
---------INS Assignment@@in=Thread.currentThread().getContextClassLoader().getResourceAsStream("WEB-INF/classes/" + SwaggerArchive.SWAGGER_CONFIGURATION_PATH) @TO@ ExpressionStatement@@Assignment:in=Thread.currentThread().getContextClassLoader().getResourceAsStream("WEB-INF/classes/" + SwaggerArchive.SWAGGER_CONFIGURATION_PATH) @AT@ 1520 @LENGTH@ 135
------------INS SimpleName@@in @TO@ Assignment@@in=Thread.currentThread().getContextClassLoader().getResourceAsStream("WEB-INF/classes/" + SwaggerArchive.SWAGGER_CONFIGURATION_PATH) @AT@ 1520 @LENGTH@ 2
------------INS Operator@@= @TO@ Assignment@@in=Thread.currentThread().getContextClassLoader().getResourceAsStream("WEB-INF/classes/" + SwaggerArchive.SWAGGER_CONFIGURATION_PATH) @AT@ 1522 @LENGTH@ 1
------------INS MethodInvocation@@Thread.currentThread().getContextClassLoader().getResourceAsStream("WEB-INF/classes/" + SwaggerArchive.SWAGGER_CONFIGURATION_PATH) @TO@ Assignment@@in=Thread.currentThread().getContextClassLoader().getResourceAsStream("WEB-INF/classes/" + SwaggerArchive.SWAGGER_CONFIGURATION_PATH) @AT@ 1525 @LENGTH@ 130
---------------INS MethodInvocation@@MethodName:getContextClassLoader:[] @TO@ MethodInvocation@@Thread.currentThread().getContextClassLoader().getResourceAsStream("WEB-INF/classes/" + SwaggerArchive.SWAGGER_CONFIGURATION_PATH) @AT@ 1525 @LENGTH@ 46
---------------INS MethodInvocation@@MethodName:currentThread:[] @TO@ MethodInvocation@@Thread.currentThread().getContextClassLoader().getResourceAsStream("WEB-INF/classes/" + SwaggerArchive.SWAGGER_CONFIGURATION_PATH) @AT@ 1525 @LENGTH@ 22
---------------INS SimpleName@@Name:Thread @TO@ MethodInvocation@@Thread.currentThread().getContextClassLoader().getResourceAsStream("WEB-INF/classes/" + SwaggerArchive.SWAGGER_CONFIGURATION_PATH) @AT@ 1525 @LENGTH@ 6
---------------INS SimpleName@@MethodName:getResourceAsStream:["WEB-INF/classes/" + SwaggerArchive.SWAGGER_CONFIGURATION_PATH] @TO@ MethodInvocation@@Thread.currentThread().getContextClassLoader().getResourceAsStream("WEB-INF/classes/" + SwaggerArchive.SWAGGER_CONFIGURATION_PATH) @AT@ 1572 @LENGTH@ 83
------------------INS InfixExpression@@"WEB-INF/classes/" + SwaggerArchive.SWAGGER_CONFIGURATION_PATH @TO@ SimpleName@@MethodName:getResourceAsStream:["WEB-INF/classes/" + SwaggerArchive.SWAGGER_CONFIGURATION_PATH] @AT@ 1592 @LENGTH@ 62
---------------------INS StringLiteral@@"WEB-INF/classes/" @TO@ InfixExpression@@"WEB-INF/classes/" + SwaggerArchive.SWAGGER_CONFIGURATION_PATH @AT@ 1592 @LENGTH@ 18
---------------------INS Operator@@+ @TO@ InfixExpression@@"WEB-INF/classes/" + SwaggerArchive.SWAGGER_CONFIGURATION_PATH @AT@ 1610 @LENGTH@ 1
---------------------INS QualifiedName@@SwaggerArchive.SWAGGER_CONFIGURATION_PATH @TO@ InfixExpression@@"WEB-INF/classes/" + SwaggerArchive.SWAGGER_CONFIGURATION_PATH @AT@ 1613 @LENGTH@ 41
------------------------INS SimpleName@@SwaggerArchive @TO@ QualifiedName@@SwaggerArchive.SWAGGER_CONFIGURATION_PATH @AT@ 1613 @LENGTH@ 14
------------------------INS SimpleName@@SWAGGER_CONFIGURATION_PATH @TO@ QualifiedName@@SwaggerArchive.SWAGGER_CONFIGURATION_PATH @AT@ 1628 @LENGTH@ 26


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<SedaComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<SedaComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5395 @LENGTH@ 337
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 5399 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5399 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  ComponentCustomizer<SedaComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ ThenBody:{  for (  ComponentCustomizer<SedaComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5455 @LENGTH@ 277
------UPD EnhancedForStatement@@for (ComponentCustomizer<SedaComponent> configurer : customizers) {  LOGGER.debug("Configure component {}, with configurer {}",component,configurer);  configurer.customize(component);} @TO@ for (ComponentCustomizer<SedaComponent> customizer : customizers) {  LOGGER.debug("Configure component {}, with customizer {}",component,customizer);  customizer.customize(component);} @AT@ 5469 @LENGTH@ 253
---------UPD SingleVariableDeclaration@@ComponentCustomizer<SedaComponent> configurer @TO@ ComponentCustomizer<SedaComponent> customizer @AT@ 5474 @LENGTH@ 45
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5509 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5553 @LENGTH@ 106
------------UPD MethodInvocation@@LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5553 @LENGTH@ 105
---------------UPD SimpleName@@MethodName:debug:["Configure component {}, with configurer {}", component, configurer] @TO@ MethodName:debug:["Configure component {}, with customizer {}", component, customizer] @AT@ 5560 @LENGTH@ 98
------------------UPD StringLiteral@@"Configure component {}, with configurer {}" @TO@ "Configure component {}, with customizer {}" @AT@ 5566 @LENGTH@ 44
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5647 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(component) @TO@ MethodInvocation:customizer.customize(component) @AT@ 5676 @LENGTH@ 32
------------UPD MethodInvocation@@configurer.customize(component) @TO@ customizer.customize(component) @AT@ 5676 @LENGTH@ 31
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5676 @LENGTH@ 10


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<CMISComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<CMISComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5395 @LENGTH@ 337
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 5399 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5399 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  ComponentCustomizer<CMISComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ ThenBody:{  for (  ComponentCustomizer<CMISComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5455 @LENGTH@ 277
------UPD EnhancedForStatement@@for (ComponentCustomizer<CMISComponent> configurer : customizers) {  LOGGER.debug("Configure component {}, with configurer {}",component,configurer);  configurer.customize(component);} @TO@ for (ComponentCustomizer<CMISComponent> customizer : customizers) {  LOGGER.debug("Configure component {}, with customizer {}",component,customizer);  customizer.customize(component);} @AT@ 5469 @LENGTH@ 253
---------UPD SingleVariableDeclaration@@ComponentCustomizer<CMISComponent> configurer @TO@ ComponentCustomizer<CMISComponent> customizer @AT@ 5474 @LENGTH@ 45
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5509 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5553 @LENGTH@ 106
------------UPD MethodInvocation@@LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5553 @LENGTH@ 105
---------------UPD SimpleName@@MethodName:debug:["Configure component {}, with configurer {}", component, configurer] @TO@ MethodName:debug:["Configure component {}, with customizer {}", component, customizer] @AT@ 5560 @LENGTH@ 98
------------------UPD StringLiteral@@"Configure component {}, with configurer {}" @TO@ "Configure component {}, with customizer {}" @AT@ 5566 @LENGTH@ 44
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5647 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(component) @TO@ MethodInvocation:customizer.customize(component) @AT@ 5676 @LENGTH@ 32
------------UPD MethodInvocation@@configurer.customize(component) @TO@ customizer.customize(component) @AT@ 5676 @LENGTH@ 31
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5676 @LENGTH@ 10


UPD Block@@ThenBody:{  Map<String,Object> realmParams=IntrospectionSupport.extractProperties(parameters,CLIENT_REALM_CONFIG_PREFIX);  realmBuilder=new Realm.Builder(realmParams.get("realm.principal").toString(),realmParams.get("realm.password").toString());  setProperties(realmBuilder,realmParams);  validateParameters(uri,realmParams,null);} @TO@ ThenBody:{  Map<String,Object> realmParams=IntrospectionSupport.extractProperties(parameters,CLIENT_REALM_CONFIG_PREFIX);  Object principal=realmParams.remove("principal");  Object password=realmParams.remove("password");  if (ObjectHelper.isEmpty(principal)) {    throw new IllegalArgumentException(CLIENT_REALM_CONFIG_PREFIX + ".principal must be configured");  }  if (password == null) {    password="";  }  realmBuilder=new Realm.Builder(principal.toString(),password.toString());  setProperties(realmBuilder,realmParams);  validateParameters(uri,realmParams,null);} @AT@ 4571 @LENGTH@ 482
---UPD ExpressionStatement@@Assignment:realmBuilder=new Realm.Builder(realmParams.get("realm.principal").toString(),realmParams.get("realm.password").toString()) @TO@ Assignment:realmBuilder=new Realm.Builder(principal.toString(),password.toString()) @AT@ 4795 @LENGTH@ 126
------UPD Assignment@@realmBuilder=new Realm.Builder(realmParams.get("realm.principal").toString(),realmParams.get("realm.password").toString()) @TO@ realmBuilder=new Realm.Builder(principal.toString(),password.toString()) @AT@ 4795 @LENGTH@ 125
---------UPD ClassInstanceCreation@@Realm.Builder[realmParams.get("realm.principal").toString(), realmParams.get("realm.password").toString()] @TO@ Realm.Builder[principal.toString(), password.toString()] @AT@ 4810 @LENGTH@ 110
------------UPD MethodInvocation@@realmParams.get("realm.principal").toString() @TO@ principal.toString() @AT@ 4828 @LENGTH@ 45
---------------DEL MethodInvocation@@MethodName:get:["realm.principal"] @AT@ 4828 @LENGTH@ 34
------------------DEL StringLiteral@@"realm.principal" @AT@ 4844 @LENGTH@ 17
---------------UPD SimpleName@@Name:realmParams @TO@ Name:principal @AT@ 4828 @LENGTH@ 11
------------UPD MethodInvocation@@realmParams.get("realm.password").toString() @TO@ password.toString() @AT@ 4875 @LENGTH@ 44
---------------DEL MethodInvocation@@MethodName:get:["realm.password"] @AT@ 4875 @LENGTH@ 33
------------------DEL StringLiteral@@"realm.password" @AT@ 4891 @LENGTH@ 16
---------------UPD SimpleName@@Name:realmParams @TO@ Name:password @AT@ 4875 @LENGTH@ 11
---INS VariableDeclarationStatement@@Object principal=realmParams.remove("principal"); @TO@ Block@@ThenBody:{  Map<String,Object> realmParams=IntrospectionSupport.extractProperties(parameters,CLIENT_REALM_CONFIG_PREFIX);  realmBuilder=new Realm.Builder(realmParams.get("realm.principal").toString(),realmParams.get("realm.password").toString());  setProperties(realmBuilder,realmParams);  validateParameters(uri,realmParams,null);} @AT@ 4852 @LENGTH@ 51
------INS SimpleType@@Object @TO@ VariableDeclarationStatement@@Object principal=realmParams.remove("principal"); @AT@ 4852 @LENGTH@ 6
------INS VariableDeclarationFragment@@principal=realmParams.remove("principal") @TO@ VariableDeclarationStatement@@Object principal=realmParams.remove("principal"); @AT@ 4859 @LENGTH@ 43
---------INS SimpleName@@principal @TO@ VariableDeclarationFragment@@principal=realmParams.remove("principal") @AT@ 4859 @LENGTH@ 9
---------INS MethodInvocation@@realmParams.remove("principal") @TO@ VariableDeclarationFragment@@principal=realmParams.remove("principal") @AT@ 4871 @LENGTH@ 31
------------INS SimpleName@@Name:realmParams @TO@ MethodInvocation@@realmParams.remove("principal") @AT@ 4871 @LENGTH@ 11
------------INS SimpleName@@MethodName:remove:["principal"] @TO@ MethodInvocation@@realmParams.remove("principal") @AT@ 4883 @LENGTH@ 19
---------------INS StringLiteral@@"principal" @TO@ SimpleName@@MethodName:remove:["principal"] @AT@ 4890 @LENGTH@ 11
---INS VariableDeclarationStatement@@Object password=realmParams.remove("password"); @TO@ Block@@ThenBody:{  Map<String,Object> realmParams=IntrospectionSupport.extractProperties(parameters,CLIENT_REALM_CONFIG_PREFIX);  realmBuilder=new Realm.Builder(realmParams.get("realm.principal").toString(),realmParams.get("realm.password").toString());  setProperties(realmBuilder,realmParams);  validateParameters(uri,realmParams,null);} @AT@ 4920 @LENGTH@ 49
------INS SimpleType@@Object @TO@ VariableDeclarationStatement@@Object password=realmParams.remove("password"); @AT@ 4920 @LENGTH@ 6
------INS VariableDeclarationFragment@@password=realmParams.remove("password") @TO@ VariableDeclarationStatement@@Object password=realmParams.remove("password"); @AT@ 4927 @LENGTH@ 41
---------INS SimpleName@@password @TO@ VariableDeclarationFragment@@password=realmParams.remove("password") @AT@ 4927 @LENGTH@ 8
---------INS MethodInvocation@@realmParams.remove("password") @TO@ VariableDeclarationFragment@@password=realmParams.remove("password") @AT@ 4938 @LENGTH@ 30
------------INS SimpleName@@Name:realmParams @TO@ MethodInvocation@@realmParams.remove("password") @AT@ 4938 @LENGTH@ 11
------------INS SimpleName@@MethodName:remove:["password"] @TO@ MethodInvocation@@realmParams.remove("password") @AT@ 4950 @LENGTH@ 18
---------------INS StringLiteral@@"password" @TO@ SimpleName@@MethodName:remove:["password"] @AT@ 4957 @LENGTH@ 10
---INS IfStatement@@if (ObjectHelper.isEmpty(principal)) {  throw new IllegalArgumentException(CLIENT_REALM_CONFIG_PREFIX + ".principal must be configured");} @TO@ Block@@ThenBody:{  Map<String,Object> realmParams=IntrospectionSupport.extractProperties(parameters,CLIENT_REALM_CONFIG_PREFIX);  realmBuilder=new Realm.Builder(realmParams.get("realm.principal").toString(),realmParams.get("realm.password").toString());  setProperties(realmBuilder,realmParams);  validateParameters(uri,realmParams,null);} @AT@ 4987 @LENGTH@ 174
------INS MethodInvocation@@ObjectHelper.isEmpty(principal) @TO@ IfStatement@@if (ObjectHelper.isEmpty(principal)) {  throw new IllegalArgumentException(CLIENT_REALM_CONFIG_PREFIX + ".principal must be configured");} @AT@ 4991 @LENGTH@ 31
---------INS SimpleName@@Name:ObjectHelper @TO@ MethodInvocation@@ObjectHelper.isEmpty(principal) @AT@ 4991 @LENGTH@ 12
---------INS SimpleName@@MethodName:isEmpty:[principal] @TO@ MethodInvocation@@ObjectHelper.isEmpty(principal) @AT@ 5004 @LENGTH@ 18
------------INS SimpleName@@principal @TO@ SimpleName@@MethodName:isEmpty:[principal] @AT@ 5012 @LENGTH@ 9
------INS Block@@ThenBody:{  throw new IllegalArgumentException(CLIENT_REALM_CONFIG_PREFIX + ".principal must be configured");} @TO@ IfStatement@@if (ObjectHelper.isEmpty(principal)) {  throw new IllegalArgumentException(CLIENT_REALM_CONFIG_PREFIX + ".principal must be configured");} @AT@ 5024 @LENGTH@ 137
---------INS ThrowStatement@@ClassInstanceCreation:new IllegalArgumentException(CLIENT_REALM_CONFIG_PREFIX + ".principal must be configured") @TO@ Block@@ThenBody:{  throw new IllegalArgumentException(CLIENT_REALM_CONFIG_PREFIX + ".principal must be configured");} @AT@ 5046 @LENGTH@ 97
------------INS ClassInstanceCreation@@IllegalArgumentException[CLIENT_REALM_CONFIG_PREFIX + ".principal must be configured"] @TO@ ThrowStatement@@ClassInstanceCreation:new IllegalArgumentException(CLIENT_REALM_CONFIG_PREFIX + ".principal must be configured") @AT@ 5052 @LENGTH@ 90
---------------INS New@@new @TO@ ClassInstanceCreation@@IllegalArgumentException[CLIENT_REALM_CONFIG_PREFIX + ".principal must be configured"] @AT@ 5052 @LENGTH@ 3
---------------INS SimpleType@@IllegalArgumentException @TO@ ClassInstanceCreation@@IllegalArgumentException[CLIENT_REALM_CONFIG_PREFIX + ".principal must be configured"] @AT@ 5056 @LENGTH@ 24
---------------INS InfixExpression@@CLIENT_REALM_CONFIG_PREFIX + ".principal must be configured" @TO@ ClassInstanceCreation@@IllegalArgumentException[CLIENT_REALM_CONFIG_PREFIX + ".principal must be configured"] @AT@ 5081 @LENGTH@ 60
------------------INS SimpleName@@CLIENT_REALM_CONFIG_PREFIX @TO@ InfixExpression@@CLIENT_REALM_CONFIG_PREFIX + ".principal must be configured" @AT@ 5081 @LENGTH@ 26
------------------INS Operator@@+ @TO@ InfixExpression@@CLIENT_REALM_CONFIG_PREFIX + ".principal must be configured" @AT@ 5107 @LENGTH@ 1
------------------INS StringLiteral@@".principal must be configured" @TO@ InfixExpression@@CLIENT_REALM_CONFIG_PREFIX + ".principal must be configured" @AT@ 5110 @LENGTH@ 31
---INS IfStatement@@if (password == null) {  password="";} @TO@ Block@@ThenBody:{  Map<String,Object> realmParams=IntrospectionSupport.extractProperties(parameters,CLIENT_REALM_CONFIG_PREFIX);  realmBuilder=new Realm.Builder(realmParams.get("realm.principal").toString(),realmParams.get("realm.password").toString());  setProperties(realmBuilder,realmParams);  validateParameters(uri,realmParams,null);} @AT@ 5178 @LENGTH@ 76
------INS InfixExpression@@password == null @TO@ IfStatement@@if (password == null) {  password="";} @AT@ 5182 @LENGTH@ 16
---------INS SimpleName@@password @TO@ InfixExpression@@password == null @AT@ 5182 @LENGTH@ 8
---------INS Operator@@== @TO@ InfixExpression@@password == null @AT@ 5190 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@password == null @AT@ 5194 @LENGTH@ 4
------INS Block@@ThenBody:{  password="";} @TO@ IfStatement@@if (password == null) {  password="";} @AT@ 5200 @LENGTH@ 54
---------INS ExpressionStatement@@Assignment:password="" @TO@ Block@@ThenBody:{  password="";} @AT@ 5222 @LENGTH@ 14
------------INS Assignment@@password="" @TO@ ExpressionStatement@@Assignment:password="" @AT@ 5222 @LENGTH@ 13
---------------INS SimpleName@@password @TO@ Assignment@@password="" @AT@ 5222 @LENGTH@ 8
---------------INS Operator@@= @TO@ Assignment@@password="" @AT@ 5230 @LENGTH@ 1
---------------INS StringLiteral@@"" @TO@ Assignment@@password="" @AT@ 5233 @LENGTH@ 2


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled(); @AT@ 5243 @LENGTH@ 160
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5251 @LENGTH@ 151
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5251 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5268 @LENGTH@ 134
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 5268 @LENGTH@ 64
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5268 @LENGTH@ 35
---------UPD MethodInvocation@@componentConfiguration.getConfigurer().isEnabled() @TO@ componentConfiguration.getCustomizer().isEnabled() @AT@ 5352 @LENGTH@ 50
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5352 @LENGTH@ 38


UPD MethodDeclaration@@public, voidMethodName:MyCodec, boolean failing,  @TO@ voidMethodName:MyCodec, boolean failing,  @AT@ 4794 @LENGTH@ 80
---DEL Modifier@@public @AT@ 4794 @LENGTH@ 6


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<PrinterComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<PrinterComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5438 @LENGTH@ 340
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 5442 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5442 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  ComponentCustomizer<PrinterComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ ThenBody:{  for (  ComponentCustomizer<PrinterComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5498 @LENGTH@ 280
------UPD EnhancedForStatement@@for (ComponentCustomizer<PrinterComponent> configurer : customizers) {  LOGGER.debug("Configure component {}, with configurer {}",component,configurer);  configurer.customize(component);} @TO@ for (ComponentCustomizer<PrinterComponent> customizer : customizers) {  LOGGER.debug("Configure component {}, with customizer {}",component,customizer);  customizer.customize(component);} @AT@ 5512 @LENGTH@ 256
---------UPD SingleVariableDeclaration@@ComponentCustomizer<PrinterComponent> configurer @TO@ ComponentCustomizer<PrinterComponent> customizer @AT@ 5517 @LENGTH@ 48
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5555 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5599 @LENGTH@ 106
------------UPD MethodInvocation@@LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5599 @LENGTH@ 105
---------------UPD SimpleName@@MethodName:debug:["Configure component {}, with configurer {}", component, configurer] @TO@ MethodName:debug:["Configure component {}, with customizer {}", component, customizer] @AT@ 5606 @LENGTH@ 98
------------------UPD StringLiteral@@"Configure component {}, with configurer {}" @TO@ "Configure component {}, with customizer {}" @AT@ 5612 @LENGTH@ 44
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5693 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(component) @TO@ MethodInvocation:customizer.customize(component) @AT@ 5722 @LENGTH@ 32
------------UPD MethodInvocation@@configurer.customize(component) @TO@ customizer.customize(component) @AT@ 5722 @LENGTH@ 31
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5722 @LENGTH@ 10


UPD ExpressionStatement@@MethodInvocation:assertThat(context.getPersistentEntity(DBRef.class),is(nullValue())) @TO@ MethodInvocation:assertThat(context.getPersistentEntity(DBRef.class),is(Optional.empty())) @AT@ 2090 @LENGTH@ 70
---UPD MethodInvocation@@assertThat(context.getPersistentEntity(DBRef.class),is(nullValue())) @TO@ assertThat(context.getPersistentEntity(DBRef.class),is(Optional.empty())) @AT@ 2090 @LENGTH@ 69
------UPD SimpleName@@MethodName:assertThat:[context.getPersistentEntity(DBRef.class), is(nullValue())] @TO@ MethodName:assertThat:[context.getPersistentEntity(DBRef.class), is(Optional.empty())] @AT@ 2090 @LENGTH@ 69
---------UPD MethodInvocation@@is(nullValue()) @TO@ is(Optional.empty()) @AT@ 2143 @LENGTH@ 15
------------UPD SimpleName@@MethodName:is:[nullValue()] @TO@ MethodName:is:[Optional.empty()] @AT@ 2143 @LENGTH@ 15
---------------UPD MethodInvocation@@MethodName:nullValue:[] @TO@ Optional.empty() @AT@ 2146 @LENGTH@ 11
------------------INS SimpleName@@Name:Optional @TO@ MethodInvocation@@MethodName:nullValue:[] @AT@ 2173 @LENGTH@ 8
------------------INS SimpleName@@MethodName:empty:[] @TO@ MethodInvocation@@MethodName:nullValue:[] @AT@ 2182 @LENGTH@ 7
------------UPD SimpleName@@MethodName:is:[nullValue()] @TO@ MethodName:is:[Optional.empty()] @AT@ 2143 @LENGTH@ 15
---------------UPD MethodInvocation@@MethodName:nullValue:[] @TO@ Optional.empty() @AT@ 2146 @LENGTH@ 11
------------------INS SimpleName@@Name:Optional @TO@ MethodInvocation@@MethodName:nullValue:[] @AT@ 2173 @LENGTH@ 8
------------------INS SimpleName@@MethodName:empty:[] @TO@ MethodInvocation@@MethodName:nullValue:[] @AT@ 2182 @LENGTH@ 7


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<SplunkComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<SplunkComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5429 @LENGTH@ 339
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 5433 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5433 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  ComponentCustomizer<SplunkComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ ThenBody:{  for (  ComponentCustomizer<SplunkComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5489 @LENGTH@ 279
------UPD EnhancedForStatement@@for (ComponentCustomizer<SplunkComponent> configurer : customizers) {  LOGGER.debug("Configure component {}, with configurer {}",component,configurer);  configurer.customize(component);} @TO@ for (ComponentCustomizer<SplunkComponent> customizer : customizers) {  LOGGER.debug("Configure component {}, with customizer {}",component,customizer);  customizer.customize(component);} @AT@ 5503 @LENGTH@ 255
---------UPD SingleVariableDeclaration@@ComponentCustomizer<SplunkComponent> configurer @TO@ ComponentCustomizer<SplunkComponent> customizer @AT@ 5508 @LENGTH@ 47
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5545 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5589 @LENGTH@ 106
------------UPD MethodInvocation@@LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5589 @LENGTH@ 105
---------------UPD SimpleName@@MethodName:debug:["Configure component {}, with configurer {}", component, configurer] @TO@ MethodName:debug:["Configure component {}, with customizer {}", component, customizer] @AT@ 5596 @LENGTH@ 98
------------------UPD StringLiteral@@"Configure component {}, with configurer {}" @TO@ "Configure component {}, with customizer {}" @AT@ 5602 @LENGTH@ 44
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5683 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(component) @TO@ MethodInvocation:customizer.customize(component) @AT@ 5712 @LENGTH@ 32
------------UPD MethodInvocation@@configurer.customize(component) @TO@ customizer.customize(component) @AT@ 5712 @LENGTH@ 31
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5712 @LENGTH@ 10


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && dataformatConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && dataformatConfiguration.getCustomizer().isEnabled(); @AT@ 5090 @LENGTH@ 177
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && dataformatConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && dataformatConfiguration.getCustomizer().isEnabled() @AT@ 5098 @LENGTH@ 168
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5098 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && dataformatConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && dataformatConfiguration.getCustomizer().isEnabled() @AT@ 5115 @LENGTH@ 151
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 5115 @LENGTH@ 72
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5115 @LENGTH@ 35
---------UPD MethodInvocation@@dataformatConfiguration.getConfigurer().isEnabled() @TO@ dataformatConfiguration.getCustomizer().isEnabled() @AT@ 5215 @LENGTH@ 51
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5215 @LENGTH@ 39


UPD MethodDeclaration@@public, void, MethodName:stop,  @TO@ public, void, MethodName:doStop,  @AT@ 3211 @LENGTH@ 34
---UPD SimpleName@@MethodName:stop @TO@ MethodName:doStop @AT@ 3223 @LENGTH@ 4


INS MethodDeclaration@@protected, boolean, MethodName:isHandlerInChain, Handler current, Handler handler,  @TO@ TypeDeclaration@@[public, abstract]JettyHttpComponent, HttpCommonComponent[RestConsumerFactory, RestApiConsumerFactory, RestProducerFactory] @AT@ 54605 @LENGTH@ 420
---INS Modifier@@protected @TO@ MethodDeclaration@@protected, boolean, MethodName:isHandlerInChain, Handler current, Handler handler,  @AT@ 54605 @LENGTH@ 9
---INS PrimitiveType@@boolean @TO@ MethodDeclaration@@protected, boolean, MethodName:isHandlerInChain, Handler current, Handler handler,  @AT@ 54615 @LENGTH@ 7
---INS SimpleName@@MethodName:isHandlerInChain @TO@ MethodDeclaration@@protected, boolean, MethodName:isHandlerInChain, Handler current, Handler handler,  @AT@ 54623 @LENGTH@ 16
---INS SingleVariableDeclaration@@Handler current @TO@ MethodDeclaration@@protected, boolean, MethodName:isHandlerInChain, Handler current, Handler handler,  @AT@ 54640 @LENGTH@ 15
------INS SimpleType@@Handler @TO@ SingleVariableDeclaration@@Handler current @AT@ 54640 @LENGTH@ 7
------INS SimpleName@@current @TO@ SingleVariableDeclaration@@Handler current @AT@ 54648 @LENGTH@ 7
---INS SingleVariableDeclaration@@Handler handler @TO@ MethodDeclaration@@protected, boolean, MethodName:isHandlerInChain, Handler current, Handler handler,  @AT@ 54657 @LENGTH@ 15
------INS SimpleType@@Handler @TO@ SingleVariableDeclaration@@Handler handler @AT@ 54657 @LENGTH@ 7
------INS SimpleName@@handler @TO@ SingleVariableDeclaration@@Handler handler @AT@ 54665 @LENGTH@ 7
---INS IfStatement@@if (handler.equals(current)) {  return true;} else if (current instanceof HandlerWrapper) {  return isHandlerInChain(((HandlerWrapper)current).getHandler(),handler);} else {  return false;} @TO@ MethodDeclaration@@protected, boolean, MethodName:isHandlerInChain, Handler current, Handler handler,  @AT@ 54687 @LENGTH@ 326
------INS MethodInvocation@@handler.equals(current) @TO@ IfStatement@@if (handler.equals(current)) {  return true;} else if (current instanceof HandlerWrapper) {  return isHandlerInChain(((HandlerWrapper)current).getHandler(),handler);} else {  return false;} @AT@ 54691 @LENGTH@ 23
---------INS SimpleName@@Name:handler @TO@ MethodInvocation@@handler.equals(current) @AT@ 54691 @LENGTH@ 7
---------INS SimpleName@@MethodName:equals:[current] @TO@ MethodInvocation@@handler.equals(current) @AT@ 54699 @LENGTH@ 15
------------INS SimpleName@@current @TO@ SimpleName@@MethodName:equals:[current] @AT@ 54706 @LENGTH@ 7
------INS Block@@ThenBody:{  return true;} @TO@ IfStatement@@if (handler.equals(current)) {  return true;} else if (current instanceof HandlerWrapper) {  return isHandlerInChain(((HandlerWrapper)current).getHandler(),handler);} else {  return false;} @AT@ 54716 @LENGTH@ 62
---------INS ReturnStatement@@BooleanLiteral:true @TO@ Block@@ThenBody:{  return true;} @AT@ 54759 @LENGTH@ 12
------------INS BooleanLiteral@@true @TO@ ReturnStatement@@BooleanLiteral:true @AT@ 54766 @LENGTH@ 4
------INS Block@@ElseBody:if (current instanceof HandlerWrapper) {  return isHandlerInChain(((HandlerWrapper)current).getHandler(),handler);} else {  return false;} @TO@ IfStatement@@if (handler.equals(current)) {  return true;} else if (current instanceof HandlerWrapper) {  return isHandlerInChain(((HandlerWrapper)current).getHandler(),handler);} else {  return false;} @AT@ 54784 @LENGTH@ 229
---------INS IfStatement@@if (current instanceof HandlerWrapper) {  return isHandlerInChain(((HandlerWrapper)current).getHandler(),handler);} else {  return false;} @TO@ Block@@ElseBody:if (current instanceof HandlerWrapper) {  return isHandlerInChain(((HandlerWrapper)current).getHandler(),handler);} else {  return false;} @AT@ 54784 @LENGTH@ 229
------------INS InstanceofExpression@@current instanceof HandlerWrapper @TO@ IfStatement@@if (current instanceof HandlerWrapper) {  return isHandlerInChain(((HandlerWrapper)current).getHandler(),handler);} else {  return false;} @AT@ 54788 @LENGTH@ 33
---------------INS SimpleName@@current @TO@ InstanceofExpression@@current instanceof HandlerWrapper @AT@ 54788 @LENGTH@ 7
---------------INS Instanceof@@instanceof @TO@ InstanceofExpression@@current instanceof HandlerWrapper @AT@ 54796 @LENGTH@ 10
---------------INS SimpleType@@HandlerWrapper @TO@ InstanceofExpression@@current instanceof HandlerWrapper @AT@ 54807 @LENGTH@ 14
------------INS Block@@ThenBody:{  return isHandlerInChain(((HandlerWrapper)current).getHandler(),handler);} @TO@ IfStatement@@if (current instanceof HandlerWrapper) {  return isHandlerInChain(((HandlerWrapper)current).getHandler(),handler);} else {  return false;} @AT@ 54823 @LENGTH@ 135
---------------INS ReturnStatement@@MethodInvocation:isHandlerInChain(((HandlerWrapper)current).getHandler(),handler) @TO@ Block@@ThenBody:{  return isHandlerInChain(((HandlerWrapper)current).getHandler(),handler);} @AT@ 54877 @LENGTH@ 74
------------------INS MethodInvocation@@isHandlerInChain(((HandlerWrapper)current).getHandler(),handler) @TO@ ReturnStatement@@MethodInvocation:isHandlerInChain(((HandlerWrapper)current).getHandler(),handler) @AT@ 54884 @LENGTH@ 66
---------------------INS SimpleName@@MethodName:isHandlerInChain:[((HandlerWrapper)current).getHandler(), handler] @TO@ MethodInvocation@@isHandlerInChain(((HandlerWrapper)current).getHandler(),handler) @AT@ 54884 @LENGTH@ 66
------------------------INS MethodInvocation@@((HandlerWrapper)current).getHandler() @TO@ SimpleName@@MethodName:isHandlerInChain:[((HandlerWrapper)current).getHandler(), handler] @AT@ 54901 @LENGTH@ 39
---------------------------INS ParenthesizedExpression@@((HandlerWrapper)current) @TO@ MethodInvocation@@((HandlerWrapper)current).getHandler() @AT@ 54901 @LENGTH@ 26
------------------------------INS CastExpression@@(HandlerWrapper)current @TO@ ParenthesizedExpression@@((HandlerWrapper)current) @AT@ 54902 @LENGTH@ 24
---------------------------------INS SimpleType@@HandlerWrapper @TO@ CastExpression@@(HandlerWrapper)current @AT@ 54903 @LENGTH@ 14
---------------------------------INS SimpleName@@current @TO@ CastExpression@@(HandlerWrapper)current @AT@ 54919 @LENGTH@ 7
---------------------------INS SimpleName@@MethodName:getHandler:[] @TO@ MethodInvocation@@((HandlerWrapper)current).getHandler() @AT@ 54928 @LENGTH@ 12
------------------------INS SimpleName@@handler @TO@ SimpleName@@MethodName:isHandlerInChain:[((HandlerWrapper)current).getHandler(), handler] @AT@ 54942 @LENGTH@ 7
---------------------INS SimpleName@@MethodName:isHandlerInChain:[((HandlerWrapper)current).getHandler(), handler] @TO@ MethodInvocation@@isHandlerInChain(((HandlerWrapper)current).getHandler(),handler) @AT@ 54884 @LENGTH@ 66
------------------------INS MethodInvocation@@((HandlerWrapper)current).getHandler() @TO@ SimpleName@@MethodName:isHandlerInChain:[((HandlerWrapper)current).getHandler(), handler] @AT@ 54901 @LENGTH@ 39
---------------------------INS ParenthesizedExpression@@((HandlerWrapper)current) @TO@ MethodInvocation@@((HandlerWrapper)current).getHandler() @AT@ 54901 @LENGTH@ 26
------------------------------INS CastExpression@@(HandlerWrapper)current @TO@ ParenthesizedExpression@@((HandlerWrapper)current) @AT@ 54902 @LENGTH@ 24
---------------------------------INS SimpleType@@HandlerWrapper @TO@ CastExpression@@(HandlerWrapper)current @AT@ 54903 @LENGTH@ 14
---------------------------------INS SimpleName@@current @TO@ CastExpression@@(HandlerWrapper)current @AT@ 54919 @LENGTH@ 7
---------------------------INS SimpleName@@MethodName:getHandler:[] @TO@ MethodInvocation@@((HandlerWrapper)current).getHandler() @AT@ 54928 @LENGTH@ 12
------------------------INS SimpleName@@handler @TO@ SimpleName@@MethodName:isHandlerInChain:[((HandlerWrapper)current).getHandler(), handler] @AT@ 54942 @LENGTH@ 7
------------INS Block@@ElseBody:{  return false;} @TO@ IfStatement@@if (current instanceof HandlerWrapper) {  return isHandlerInChain(((HandlerWrapper)current).getHandler(),handler);} else {  return false;} @AT@ 54964 @LENGTH@ 49
---------------INS ReturnStatement@@BooleanLiteral:false @TO@ Block@@ElseBody:{  return false;} @AT@ 54993 @LENGTH@ 13
------------------INS BooleanLiteral@@false @TO@ ReturnStatement@@BooleanLiteral:false @AT@ 55000 @LENGTH@ 5


INS MethodDeclaration@@CallbackHandler, MethodName:getCallbackHandler,  @TO@ TypeDeclaration@@SetCallbackHandlerAuthenticationConfiguration, AuthenticationConfiguration[HandlesCallbacks] @AT@ 2024 @LENGTH@ 60
---INS SimpleType@@CallbackHandler @TO@ MethodDeclaration@@CallbackHandler, MethodName:getCallbackHandler,  @AT@ 2008 @LENGTH@ 15
---INS SimpleName@@MethodName:getCallbackHandler @TO@ MethodDeclaration@@CallbackHandler, MethodName:getCallbackHandler,  @AT@ 2024 @LENGTH@ 18
---INS ReturnStatement@@SimpleName:callbackHandler @TO@ MethodDeclaration@@CallbackHandler, MethodName:getCallbackHandler,  @AT@ 2055 @LENGTH@ 23
------INS SimpleName@@callbackHandler @TO@ ReturnStatement@@SimpleName:callbackHandler @AT@ 2062 @LENGTH@ 15


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<JCacheComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<JCacheComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5429 @LENGTH@ 339
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 5433 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5433 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  ComponentCustomizer<JCacheComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ ThenBody:{  for (  ComponentCustomizer<JCacheComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5489 @LENGTH@ 279
------UPD EnhancedForStatement@@for (ComponentCustomizer<JCacheComponent> configurer : customizers) {  LOGGER.debug("Configure component {}, with configurer {}",component,configurer);  configurer.customize(component);} @TO@ for (ComponentCustomizer<JCacheComponent> customizer : customizers) {  LOGGER.debug("Configure component {}, with customizer {}",component,customizer);  customizer.customize(component);} @AT@ 5503 @LENGTH@ 255
---------UPD SingleVariableDeclaration@@ComponentCustomizer<JCacheComponent> configurer @TO@ ComponentCustomizer<JCacheComponent> customizer @AT@ 5508 @LENGTH@ 47
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5545 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5589 @LENGTH@ 106
------------UPD MethodInvocation@@LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5589 @LENGTH@ 105
---------------UPD SimpleName@@MethodName:debug:["Configure component {}, with configurer {}", component, configurer] @TO@ MethodName:debug:["Configure component {}, with customizer {}", component, customizer] @AT@ 5596 @LENGTH@ 98
------------------UPD StringLiteral@@"Configure component {}, with configurer {}" @TO@ "Configure component {}, with customizer {}" @AT@ 5602 @LENGTH@ 44
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5683 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(component) @TO@ MethodInvocation:customizer.customize(component) @AT@ 5712 @LENGTH@ 32
------------UPD MethodInvocation@@configurer.customize(component) @TO@ customizer.customize(component) @AT@ 5712 @LENGTH@ 31
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5712 @LENGTH@ 10


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<GitHubComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<GitHubComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5429 @LENGTH@ 339
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 5433 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5433 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  ComponentCustomizer<GitHubComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ ThenBody:{  for (  ComponentCustomizer<GitHubComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5489 @LENGTH@ 279
------UPD EnhancedForStatement@@for (ComponentCustomizer<GitHubComponent> configurer : customizers) {  LOGGER.debug("Configure component {}, with configurer {}",component,configurer);  configurer.customize(component);} @TO@ for (ComponentCustomizer<GitHubComponent> customizer : customizers) {  LOGGER.debug("Configure component {}, with customizer {}",component,customizer);  customizer.customize(component);} @AT@ 5503 @LENGTH@ 255
---------UPD SingleVariableDeclaration@@ComponentCustomizer<GitHubComponent> configurer @TO@ ComponentCustomizer<GitHubComponent> customizer @AT@ 5508 @LENGTH@ 47
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5545 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5589 @LENGTH@ 106
------------UPD MethodInvocation@@LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5589 @LENGTH@ 105
---------------UPD SimpleName@@MethodName:debug:["Configure component {}, with configurer {}", component, configurer] @TO@ MethodName:debug:["Configure component {}, with customizer {}", component, customizer] @AT@ 5596 @LENGTH@ 98
------------------UPD StringLiteral@@"Configure component {}, with configurer {}" @TO@ "Configure component {}, with customizer {}" @AT@ 5602 @LENGTH@ 44
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5683 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(component) @TO@ MethodInvocation:customizer.customize(component) @AT@ 5712 @LENGTH@ 32
------------UPD MethodInvocation@@configurer.customize(component) @TO@ customizer.customize(component) @AT@ 5712 @LENGTH@ 31
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5712 @LENGTH@ 10


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<QuartzComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<QuartzComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5433 @LENGTH@ 339
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 5437 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5437 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  ComponentCustomizer<QuartzComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ ThenBody:{  for (  ComponentCustomizer<QuartzComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5493 @LENGTH@ 279
------UPD EnhancedForStatement@@for (ComponentCustomizer<QuartzComponent> configurer : customizers) {  LOGGER.debug("Configure component {}, with configurer {}",component,configurer);  configurer.customize(component);} @TO@ for (ComponentCustomizer<QuartzComponent> customizer : customizers) {  LOGGER.debug("Configure component {}, with customizer {}",component,customizer);  customizer.customize(component);} @AT@ 5507 @LENGTH@ 255
---------UPD SingleVariableDeclaration@@ComponentCustomizer<QuartzComponent> configurer @TO@ ComponentCustomizer<QuartzComponent> customizer @AT@ 5512 @LENGTH@ 47
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5549 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5593 @LENGTH@ 106
------------UPD MethodInvocation@@LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5593 @LENGTH@ 105
---------------UPD SimpleName@@MethodName:debug:["Configure component {}, with configurer {}", component, configurer] @TO@ MethodName:debug:["Configure component {}, with customizer {}", component, customizer] @AT@ 5600 @LENGTH@ 98
------------------UPD StringLiteral@@"Configure component {}, with configurer {}" @TO@ "Configure component {}, with customizer {}" @AT@ 5606 @LENGTH@ 44
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5687 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(component) @TO@ MethodInvocation:customizer.customize(component) @AT@ 5716 @LENGTH@ 32
------------UPD MethodInvocation@@configurer.customize(component) @TO@ customizer.customize(component) @AT@ 5716 @LENGTH@ 31
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5716 @LENGTH@ 10


UPD ForStatement@@for (int i=0; i < iterations; i++) {  service.execute(() -> {    World world=worldRepository.findByName("world 1");    if (!"world 1".equals(world.getName())) {      System.out.println("=================================");      System.out.println("World 1 did not equal");      System.out.println("world is: " + world);      System.out.println("=================================");      failed=true;    }    countDownLatch.countDown();  });  service.execute(() -> {    World world=worldRepository.findByName("world 2");    if (!"world 2".equals(world.getName())) {      System.out.println("=================================");      System.out.println("World 2 did not equal");      System.out.println("world is: " + world);      System.out.println("=================================");      failed=true;    }    countDownLatch.countDown();  });} @TO@ for (int i=0; i < iterations; i++) {  service.execute(() -> {    World world=worldRepository.findByName("world 1");    if (!"world 1".equals(world.getName())) {      failed=true;    }    countDownLatch.countDown();  });  service.execute(() -> {    World world=worldRepository.findByName("world 2");    if (!"world 2".equals(world.getName())) {      failed=true;    }    countDownLatch.countDown();  });} @AT@ 2676 @LENGTH@ 1167
---UPD ExpressionStatement@@MethodInvocation:service.execute(() -> {
  World world=worldRepository.findByName("world 1");
  if (!"world 1".equals(world.getName())) {
    System.out.println("=================================");
    System.out.println("World 1 did not equal");
    System.out.println("world is: " + world);
    System.out.println("=================================");
    failed=true;
  }
  countDownLatch.countDown();
}
) @TO@ MethodInvocation:service.execute(() -> {
  World world=worldRepository.findByName("world 1");
  if (!"world 1".equals(world.getName())) {
    failed=true;
  }
  countDownLatch.countDown();
}
) @AT@ 2728 @LENGTH@ 545
------UPD MethodInvocation@@service.execute(() -> {
  World world=worldRepository.findByName("world 1");
  if (!"world 1".equals(world.getName())) {
    System.out.println("=================================");
    System.out.println("World 1 did not equal");
    System.out.println("world is: " + world);
    System.out.println("=================================");
    failed=true;
  }
  countDownLatch.countDown();
}
) @TO@ service.execute(() -> {
  World world=worldRepository.findByName("world 1");
  if (!"world 1".equals(world.getName())) {
    failed=true;
  }
  countDownLatch.countDown();
}
) @AT@ 2728 @LENGTH@ 544
---------UPD SimpleName@@MethodName:execute:[() -> {
  World world=worldRepository.findByName("world 1");
  if (!"world 1".equals(world.getName())) {
    System.out.println("=================================");
    System.out.println("World 1 did not equal");
    System.out.println("world is: " + world);
    System.out.println("=================================");
    failed=true;
  }
  countDownLatch.countDown();
}
] @TO@ MethodName:execute:[() -> {
  World world=worldRepository.findByName("world 1");
  if (!"world 1".equals(world.getName())) {
    failed=true;
  }
  countDownLatch.countDown();
}
] @AT@ 2736 @LENGTH@ 536
------------UPD LambdaExpression@@() -> {
  World world=worldRepository.findByName("world 1");
  if (!"world 1".equals(world.getName())) {
    System.out.println("=================================");
    System.out.println("World 1 did not equal");
    System.out.println("world is: " + world);
    System.out.println("=================================");
    failed=true;
  }
  countDownLatch.countDown();
}
 @TO@ () -> {
  World world=worldRepository.findByName("world 1");
  if (!"world 1".equals(world.getName())) {
    failed=true;
  }
  countDownLatch.countDown();
}
 @AT@ 2744 @LENGTH@ 527
---------------UPD IfStatement@@if (!"world 1".equals(world.getName())) {  System.out.println("=================================");  System.out.println("World 1 did not equal");  System.out.println("world is: " + world);  System.out.println("=================================");  failed=true;} @TO@ if (!"world 1".equals(world.getName())) {  failed=true;} @AT@ 2838 @LENGTH@ 375
------------------UPD Block@@ThenBody:{  System.out.println("=================================");  System.out.println("World 1 did not equal");  System.out.println("world is: " + world);  System.out.println("=================================");  failed=true;} @TO@ ThenBody:{  failed=true;} @AT@ 2878 @LENGTH@ 335
---------------------DEL ExpressionStatement@@MethodInvocation:System.out.println("=================================") @AT@ 2900 @LENGTH@ 56
------------------------DEL MethodInvocation@@System.out.println("=================================") @AT@ 2900 @LENGTH@ 55
---------------------------DEL QualifiedName@@Name:System.out @AT@ 2900 @LENGTH@ 10
---------------------------DEL SimpleName@@MethodName:println:["================================="] @AT@ 2911 @LENGTH@ 44
------------------------------DEL StringLiteral@@"=================================" @AT@ 2919 @LENGTH@ 35
---------------------DEL ExpressionStatement@@MethodInvocation:System.out.println("World 1 did not equal") @AT@ 2977 @LENGTH@ 44
------------------------DEL MethodInvocation@@System.out.println("World 1 did not equal") @AT@ 2977 @LENGTH@ 43
---------------------------DEL QualifiedName@@Name:System.out @AT@ 2977 @LENGTH@ 10
---------------------------DEL SimpleName@@MethodName:println:["World 1 did not equal"] @AT@ 2988 @LENGTH@ 32
------------------------------DEL StringLiteral@@"World 1 did not equal" @AT@ 2996 @LENGTH@ 23
---------------------UPD ExpressionStatement@@MethodInvocation:System.out.println("world is: " + world) @TO@ Assignment:failed=true @AT@ 3042 @LENGTH@ 41
------------------------DEL MethodInvocation@@System.out.println("world is: " + world) @AT@ 3042 @LENGTH@ 40
---------------------------DEL QualifiedName@@Name:System.out @AT@ 3042 @LENGTH@ 10
---------------------------DEL SimpleName@@MethodName:println:["world is: " + world] @AT@ 3053 @LENGTH@ 29
------------------------------DEL InfixExpression@@"world is: " + world @AT@ 3061 @LENGTH@ 20
---------------------------------DEL StringLiteral@@"world is: " @AT@ 3061 @LENGTH@ 12
---------------------------------DEL Operator@@+ @AT@ 3073 @LENGTH@ 1
---------------------------------DEL SimpleName@@world @AT@ 3076 @LENGTH@ 5
------------------------MOV Assignment@@failed=true @TO@ ExpressionStatement@@MethodInvocation:System.out.println("world is: " + world) @AT@ 3741 @LENGTH@ 13
---------------------DEL ExpressionStatement@@MethodInvocation:System.out.println("=================================") @AT@ 3104 @LENGTH@ 56
------------------------DEL MethodInvocation@@System.out.println("=================================") @AT@ 3104 @LENGTH@ 55
---------------------------DEL QualifiedName@@Name:System.out @AT@ 3104 @LENGTH@ 10
---------------------------DEL SimpleName@@MethodName:println:["================================="] @AT@ 3115 @LENGTH@ 44
------------------------------DEL StringLiteral@@"=================================" @AT@ 3123 @LENGTH@ 35
---UPD ExpressionStatement@@MethodInvocation:service.execute(() -> {
  World world=worldRepository.findByName("world 2");
  if (!"world 2".equals(world.getName())) {
    System.out.println("=================================");
    System.out.println("World 2 did not equal");
    System.out.println("world is: " + world);
    System.out.println("=================================");
    failed=true;
  }
  countDownLatch.countDown();
}
) @TO@ MethodInvocation:service.execute(() -> {
  World world=worldRepository.findByName("world 2");
  if (!"world 2".equals(world.getName())) {
    failed=true;
  }
  countDownLatch.countDown();
}
) @AT@ 3287 @LENGTH@ 546
------UPD MethodInvocation@@service.execute(() -> {
  World world=worldRepository.findByName("world 2");
  if (!"world 2".equals(world.getName())) {
    System.out.println("=================================");
    System.out.println("World 2 did not equal");
    System.out.println("world is: " + world);
    System.out.println("=================================");
    failed=true;
  }
  countDownLatch.countDown();
}
) @TO@ service.execute(() -> {
  World world=worldRepository.findByName("world 2");
  if (!"world 2".equals(world.getName())) {
    failed=true;
  }
  countDownLatch.countDown();
}
) @AT@ 3287 @LENGTH@ 545
---------UPD SimpleName@@MethodName:execute:[() -> {
  World world=worldRepository.findByName("world 2");
  if (!"world 2".equals(world.getName())) {
    System.out.println("=================================");
    System.out.println("World 2 did not equal");
    System.out.println("world is: " + world);
    System.out.println("=================================");
    failed=true;
  }
  countDownLatch.countDown();
}
] @TO@ MethodName:execute:[() -> {
  World world=worldRepository.findByName("world 2");
  if (!"world 2".equals(world.getName())) {
    failed=true;
  }
  countDownLatch.countDown();
}
] @AT@ 3295 @LENGTH@ 537
------------UPD LambdaExpression@@() -> {
  World world=worldRepository.findByName("world 2");
  if (!"world 2".equals(world.getName())) {
    System.out.println("=================================");
    System.out.println("World 2 did not equal");
    System.out.println("world is: " + world);
    System.out.println("=================================");
    failed=true;
  }
  countDownLatch.countDown();
}
 @TO@ () -> {
  World world=worldRepository.findByName("world 2");
  if (!"world 2".equals(world.getName())) {
    failed=true;
  }
  countDownLatch.countDown();
}
 @AT@ 3303 @LENGTH@ 528
---------------UPD IfStatement@@if (!"world 2".equals(world.getName())) {  System.out.println("=================================");  System.out.println("World 2 did not equal");  System.out.println("world is: " + world);  System.out.println("=================================");  failed=true;} @TO@ if (!"world 2".equals(world.getName())) {  failed=true;} @AT@ 3398 @LENGTH@ 375
------------------UPD Block@@ThenBody:{  System.out.println("=================================");  System.out.println("World 2 did not equal");  System.out.println("world is: " + world);  System.out.println("=================================");  failed=true;} @TO@ ThenBody:{  failed=true;} @AT@ 3438 @LENGTH@ 335
---------------------MOV ExpressionStatement@@Assignment:failed=true @TO@ Block@@ThenBody:{  System.out.println("=================================");  System.out.println("World 2 did not equal");  System.out.println("world is: " + world);  System.out.println("=================================");  failed=true;} @AT@ 3181 @LENGTH@ 14
---------------------DEL ExpressionStatement@@MethodInvocation:System.out.println("=================================") @AT@ 3460 @LENGTH@ 56
------------------------DEL MethodInvocation@@System.out.println("=================================") @AT@ 3460 @LENGTH@ 55
---------------------------DEL QualifiedName@@Name:System.out @AT@ 3460 @LENGTH@ 10
---------------------------DEL SimpleName@@MethodName:println:["================================="] @AT@ 3471 @LENGTH@ 44
------------------------------DEL StringLiteral@@"=================================" @AT@ 3479 @LENGTH@ 35
---------------------DEL ExpressionStatement@@MethodInvocation:System.out.println("World 2 did not equal") @AT@ 3537 @LENGTH@ 44
------------------------DEL MethodInvocation@@System.out.println("World 2 did not equal") @AT@ 3537 @LENGTH@ 43
---------------------------DEL QualifiedName@@Name:System.out @AT@ 3537 @LENGTH@ 10
---------------------------DEL SimpleName@@MethodName:println:["World 2 did not equal"] @AT@ 3548 @LENGTH@ 32
------------------------------DEL StringLiteral@@"World 2 did not equal" @AT@ 3556 @LENGTH@ 23
---------------------DEL ExpressionStatement@@MethodInvocation:System.out.println("world is: " + world) @AT@ 3602 @LENGTH@ 41
------------------------DEL MethodInvocation@@System.out.println("world is: " + world) @AT@ 3602 @LENGTH@ 40
---------------------------DEL QualifiedName@@Name:System.out @AT@ 3602 @LENGTH@ 10
---------------------------DEL SimpleName@@MethodName:println:["world is: " + world] @AT@ 3613 @LENGTH@ 29
------------------------------DEL InfixExpression@@"world is: " + world @AT@ 3621 @LENGTH@ 20
---------------------------------DEL StringLiteral@@"world is: " @AT@ 3621 @LENGTH@ 12
---------------------------------DEL Operator@@+ @AT@ 3633 @LENGTH@ 1
---------------------------------DEL SimpleName@@world @AT@ 3636 @LENGTH@ 5
---------------------DEL ExpressionStatement@@MethodInvocation:System.out.println("=================================") @AT@ 3664 @LENGTH@ 56
------------------------DEL MethodInvocation@@System.out.println("=================================") @AT@ 3664 @LENGTH@ 55
---------------------------DEL QualifiedName@@Name:System.out @AT@ 3664 @LENGTH@ 10
---------------------------DEL SimpleName@@MethodName:println:["================================="] @AT@ 3675 @LENGTH@ 44
------------------------------DEL StringLiteral@@"=================================" @AT@ 3683 @LENGTH@ 35


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled(); @AT@ 5264 @LENGTH@ 160
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5272 @LENGTH@ 151
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5272 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5289 @LENGTH@ 134
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 5289 @LENGTH@ 64
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5289 @LENGTH@ 35
---------UPD MethodInvocation@@componentConfiguration.getConfigurer().isEnabled() @TO@ componentConfiguration.getCustomizer().isEnabled() @AT@ 5373 @LENGTH@ 50
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5373 @LENGTH@ 38


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  LanguageCustomizer<GroovyLanguage> configurer : customizers) {    LOGGER.debug("Configure language {}, with configurer {}",language,configurer);    configurer.customize(language);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  LanguageCustomizer<GroovyLanguage> customizer : customizers) {    LOGGER.debug("Configure language {}, with customizer {}",language,customizer);    customizer.customize(language);  }} @AT@ 4725 @LENGTH@ 334
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 4729 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 4729 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  LanguageCustomizer<GroovyLanguage> configurer : customizers) {    LOGGER.debug("Configure language {}, with configurer {}",language,configurer);    configurer.customize(language);  }} @TO@ ThenBody:{  for (  LanguageCustomizer<GroovyLanguage> customizer : customizers) {    LOGGER.debug("Configure language {}, with customizer {}",language,customizer);    customizer.customize(language);  }} @AT@ 4785 @LENGTH@ 274
------UPD EnhancedForStatement@@for (LanguageCustomizer<GroovyLanguage> configurer : customizers) {  LOGGER.debug("Configure language {}, with configurer {}",language,configurer);  configurer.customize(language);} @TO@ for (LanguageCustomizer<GroovyLanguage> customizer : customizers) {  LOGGER.debug("Configure language {}, with customizer {}",language,customizer);  customizer.customize(language);} @AT@ 4799 @LENGTH@ 250
---------UPD SingleVariableDeclaration@@LanguageCustomizer<GroovyLanguage> configurer @TO@ LanguageCustomizer<GroovyLanguage> customizer @AT@ 4804 @LENGTH@ 45
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 4839 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure language {}, with configurer {}",language,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure language {}, with customizer {}",language,customizer) @AT@ 4883 @LENGTH@ 104
------------UPD MethodInvocation@@LOGGER.debug("Configure language {}, with configurer {}",language,configurer) @TO@ LOGGER.debug("Configure language {}, with customizer {}",language,customizer) @AT@ 4883 @LENGTH@ 103
---------------UPD SimpleName@@MethodName:debug:["Configure language {}, with configurer {}", language, configurer] @TO@ MethodName:debug:["Configure language {}, with customizer {}", language, customizer] @AT@ 4890 @LENGTH@ 96
------------------UPD StringLiteral@@"Configure language {}, with configurer {}" @TO@ "Configure language {}, with customizer {}" @AT@ 4896 @LENGTH@ 43
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 4975 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(language) @TO@ MethodInvocation:customizer.customize(language) @AT@ 5004 @LENGTH@ 31
------------UPD MethodInvocation@@configurer.customize(language) @TO@ customizer.customize(language) @AT@ 5004 @LENGTH@ 30
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5004 @LENGTH@ 10


UPD ExpressionStatement@@MethodInvocation:es.awaitTermination(1000 * 60,TimeUnit.SECONDS) @TO@ MethodInvocation:es.awaitTermination(1000 * 60l,TimeUnit.SECONDS) @AT@ 10769 @LENGTH@ 49
---UPD MethodInvocation@@es.awaitTermination(1000 * 60,TimeUnit.SECONDS) @TO@ es.awaitTermination(1000 * 60l,TimeUnit.SECONDS) @AT@ 10769 @LENGTH@ 48
------UPD SimpleName@@MethodName:awaitTermination:[1000 * 60, TimeUnit.SECONDS] @TO@ MethodName:awaitTermination:[1000 * 60l, TimeUnit.SECONDS] @AT@ 10772 @LENGTH@ 45
---------UPD InfixExpression@@1000 * 60 @TO@ 1000 * 60l @AT@ 10789 @LENGTH@ 9
------------UPD NumberLiteral@@60 @TO@ 60l @AT@ 10796 @LENGTH@ 2


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled(); @AT@ 5517 @LENGTH@ 160
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5525 @LENGTH@ 151
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5525 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5542 @LENGTH@ 134
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 5542 @LENGTH@ 64
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5542 @LENGTH@ 35
---------UPD MethodInvocation@@componentConfiguration.getConfigurer().isEnabled() @TO@ componentConfiguration.getCustomizer().isEnabled() @AT@ 5626 @LENGTH@ 50
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5626 @LENGTH@ 38


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled(); @AT@ 5319 @LENGTH@ 160
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5327 @LENGTH@ 151
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5327 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5344 @LENGTH@ 134
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 5344 @LENGTH@ 64
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5344 @LENGTH@ 35
---------UPD MethodInvocation@@componentConfiguration.getConfigurer().isEnabled() @TO@ componentConfiguration.getCustomizer().isEnabled() @AT@ 5428 @LENGTH@ 50
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5428 @LENGTH@ 38


UPD FieldDeclaration@@private, static, final, String, [PROP_IO_FACTORY="iOFactory"] @TO@ private, static, final, String, [PROP_IO_FACTORY="IOFactory"] @AT@ 2110 @LENGTH@ 58
---UPD VariableDeclarationFragment@@PROP_IO_FACTORY="iOFactory" @TO@ PROP_IO_FACTORY="IOFactory" @AT@ 2138 @LENGTH@ 29
------UPD StringLiteral@@"iOFactory" @TO@ "IOFactory" @AT@ 2156 @LENGTH@ 11


DEL ExpressionStatement@@MethodInvocation:System.out.println(page) @AT@ 6705 @LENGTH@ 25
---DEL MethodInvocation@@System.out.println(page) @AT@ 6705 @LENGTH@ 24
------DEL QualifiedName@@Name:System.out @AT@ 6705 @LENGTH@ 10
------DEL SimpleName@@MethodName:println:[page] @AT@ 6716 @LENGTH@ 13
---------DEL SimpleName@@page @AT@ 6724 @LENGTH@ 4


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled(); @AT@ 5315 @LENGTH@ 160
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5323 @LENGTH@ 151
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5323 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5340 @LENGTH@ 134
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 5340 @LENGTH@ 64
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5340 @LENGTH@ 35
---------UPD MethodInvocation@@componentConfiguration.getConfigurer().isEnabled() @TO@ componentConfiguration.getCustomizer().isEnabled() @AT@ 5424 @LENGTH@ 50
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5424 @LENGTH@ 38


UPD MethodDeclaration@@Person, MethodName:findOne, String id,  @TO@ Optional<Person>, MethodName:findOne, String id,  @AT@ 922 @LENGTH@ 19
---DEL SimpleType@@Person @AT@ 915 @LENGTH@ 6
---INS ParameterizedType@@Optional<Person> @TO@ MethodDeclaration@@Person, MethodName:findOne, String id,  @AT@ 943 @LENGTH@ 16
------INS SimpleType@@Optional @TO@ ParameterizedType@@Optional<Person> @AT@ 943 @LENGTH@ 8
------INS SimpleType@@Person @TO@ ParameterizedType@@Optional<Person> @AT@ 952 @LENGTH@ 6


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  LanguageCustomizer<TerserLanguage> configurer : customizers) {    LOGGER.debug("Configure language {}, with configurer {}",language,configurer);    configurer.customize(language);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  LanguageCustomizer<TerserLanguage> customizer : customizers) {    LOGGER.debug("Configure language {}, with customizer {}",language,customizer);    customizer.customize(language);  }} @AT@ 4721 @LENGTH@ 334
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 4725 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 4725 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  LanguageCustomizer<TerserLanguage> configurer : customizers) {    LOGGER.debug("Configure language {}, with configurer {}",language,configurer);    configurer.customize(language);  }} @TO@ ThenBody:{  for (  LanguageCustomizer<TerserLanguage> customizer : customizers) {    LOGGER.debug("Configure language {}, with customizer {}",language,customizer);    customizer.customize(language);  }} @AT@ 4781 @LENGTH@ 274
------UPD EnhancedForStatement@@for (LanguageCustomizer<TerserLanguage> configurer : customizers) {  LOGGER.debug("Configure language {}, with configurer {}",language,configurer);  configurer.customize(language);} @TO@ for (LanguageCustomizer<TerserLanguage> customizer : customizers) {  LOGGER.debug("Configure language {}, with customizer {}",language,customizer);  customizer.customize(language);} @AT@ 4795 @LENGTH@ 250
---------UPD SingleVariableDeclaration@@LanguageCustomizer<TerserLanguage> configurer @TO@ LanguageCustomizer<TerserLanguage> customizer @AT@ 4800 @LENGTH@ 45
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 4835 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure language {}, with configurer {}",language,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure language {}, with customizer {}",language,customizer) @AT@ 4879 @LENGTH@ 104
------------UPD MethodInvocation@@LOGGER.debug("Configure language {}, with configurer {}",language,configurer) @TO@ LOGGER.debug("Configure language {}, with customizer {}",language,customizer) @AT@ 4879 @LENGTH@ 103
---------------UPD SimpleName@@MethodName:debug:["Configure language {}, with configurer {}", language, configurer] @TO@ MethodName:debug:["Configure language {}, with customizer {}", language, customizer] @AT@ 4886 @LENGTH@ 96
------------------UPD StringLiteral@@"Configure language {}, with configurer {}" @TO@ "Configure language {}, with customizer {}" @AT@ 4892 @LENGTH@ 43
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 4971 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(language) @TO@ MethodInvocation:customizer.customize(language) @AT@ 5000 @LENGTH@ 31
------------UPD MethodInvocation@@configurer.customize(language) @TO@ customizer.customize(language) @AT@ 5000 @LENGTH@ 30
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5000 @LENGTH@ 10


INS ExpressionStatement@@MethodInvocation:http.httpBasic() @TO@ MethodDeclaration@@public, HttpSecurity, MethodName:httpSecurity,  @AT@ 2640 @LENGTH@ 17
---INS MethodInvocation@@http.httpBasic() @TO@ ExpressionStatement@@MethodInvocation:http.httpBasic() @AT@ 2640 @LENGTH@ 16
------INS SimpleName@@Name:http @TO@ MethodInvocation@@http.httpBasic() @AT@ 2640 @LENGTH@ 4
------INS SimpleName@@MethodName:httpBasic:[] @TO@ MethodInvocation@@http.httpBasic() @AT@ 2645 @LENGTH@ 11


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  DataFormatCustomizer<SerializationDataFormat> configurer : customizers) {    LOGGER.debug("Configure dataformat {}, with configurer {}",dataformat,configurer);    configurer.customize(dataformat);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  DataFormatCustomizer<SerializationDataFormat> customizer : customizers) {    LOGGER.debug("Configure dataformat {}, with customizer {}",dataformat,customizer);    customizer.customize(dataformat);  }} @AT@ 5431 @LENGTH@ 432
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 5435 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5435 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  DataFormatCustomizer<SerializationDataFormat> configurer : customizers) {    LOGGER.debug("Configure dataformat {}, with configurer {}",dataformat,configurer);    configurer.customize(dataformat);  }} @TO@ ThenBody:{  for (  DataFormatCustomizer<SerializationDataFormat> customizer : customizers) {    LOGGER.debug("Configure dataformat {}, with customizer {}",dataformat,customizer);    customizer.customize(dataformat);  }} @AT@ 5491 @LENGTH@ 372
------UPD EnhancedForStatement@@for (DataFormatCustomizer<SerializationDataFormat> configurer : customizers) {  LOGGER.debug("Configure dataformat {}, with configurer {}",dataformat,configurer);  configurer.customize(dataformat);} @TO@ for (DataFormatCustomizer<SerializationDataFormat> customizer : customizers) {  LOGGER.debug("Configure dataformat {}, with customizer {}",dataformat,customizer);  customizer.customize(dataformat);} @AT@ 5513 @LENGTH@ 332
---------UPD SingleVariableDeclaration@@DataFormatCustomizer<SerializationDataFormat> configurer @TO@ DataFormatCustomizer<SerializationDataFormat> customizer @AT@ 5518 @LENGTH@ 56
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5564 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure dataformat {}, with configurer {}",dataformat,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure dataformat {}, with customizer {}",dataformat,customizer) @AT@ 5616 @LENGTH@ 149
------------UPD MethodInvocation@@LOGGER.debug("Configure dataformat {}, with configurer {}",dataformat,configurer) @TO@ LOGGER.debug("Configure dataformat {}, with customizer {}",dataformat,customizer) @AT@ 5616 @LENGTH@ 148
---------------UPD SimpleName@@MethodName:debug:["Configure dataformat {}, with configurer {}", dataformat, configurer] @TO@ MethodName:debug:["Configure dataformat {}, with customizer {}", dataformat, customizer] @AT@ 5623 @LENGTH@ 141
------------------UPD StringLiteral@@"Configure dataformat {}, with configurer {}" @TO@ "Configure dataformat {}, with customizer {}" @AT@ 5662 @LENGTH@ 45
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5753 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(dataformat) @TO@ MethodInvocation:customizer.customize(dataformat) @AT@ 5790 @LENGTH@ 33
------------UPD MethodInvocation@@configurer.customize(dataformat) @TO@ customizer.customize(dataformat) @AT@ 5790 @LENGTH@ 32
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5790 @LENGTH@ 10


UPD IfStatement@@if (pageable == null) {  return this;} @TO@ if (pageable == null || ObjectUtils.nullSafeEquals(Pageable.NONE,pageable)) {  return this;} @AT@ 4254 @LENGTH@ 43
---DEL InfixExpression@@pageable == null @AT@ 4258 @LENGTH@ 16
---INS InfixExpression@@pageable == null || ObjectUtils.nullSafeEquals(Pageable.NONE,pageable) @TO@ IfStatement@@if (pageable == null) {  return this;} @AT@ 4303 @LENGTH@ 71
------INS InfixExpression@@pageable == null @TO@ InfixExpression@@pageable == null || ObjectUtils.nullSafeEquals(Pageable.NONE,pageable) @AT@ 4303 @LENGTH@ 16
---------MOV SimpleName@@pageable @TO@ InfixExpression@@pageable == null @AT@ 4258 @LENGTH@ 8
---------MOV Operator@@== @TO@ InfixExpression@@pageable == null @AT@ 4266 @LENGTH@ 2
---------MOV NullLiteral@@null @TO@ InfixExpression@@pageable == null @AT@ 4270 @LENGTH@ 4
------INS Operator@@|| @TO@ InfixExpression@@pageable == null || ObjectUtils.nullSafeEquals(Pageable.NONE,pageable) @AT@ 4319 @LENGTH@ 2
------INS MethodInvocation@@ObjectUtils.nullSafeEquals(Pageable.NONE,pageable) @TO@ InfixExpression@@pageable == null || ObjectUtils.nullSafeEquals(Pageable.NONE,pageable) @AT@ 4323 @LENGTH@ 51
---------INS SimpleName@@Name:ObjectUtils @TO@ MethodInvocation@@ObjectUtils.nullSafeEquals(Pageable.NONE,pageable) @AT@ 4323 @LENGTH@ 11
---------INS SimpleName@@MethodName:nullSafeEquals:[Pageable.NONE, pageable] @TO@ MethodInvocation@@ObjectUtils.nullSafeEquals(Pageable.NONE,pageable) @AT@ 4335 @LENGTH@ 39
------------INS QualifiedName@@Pageable.NONE @TO@ SimpleName@@MethodName:nullSafeEquals:[Pageable.NONE, pageable] @AT@ 4350 @LENGTH@ 13
---------------INS SimpleName@@Pageable @TO@ QualifiedName@@Pageable.NONE @AT@ 4350 @LENGTH@ 8
---------------INS SimpleName@@NONE @TO@ QualifiedName@@Pageable.NONE @AT@ 4359 @LENGTH@ 4
------------INS SimpleName@@pageable @TO@ SimpleName@@MethodName:nullSafeEquals:[Pageable.NONE, pageable] @AT@ 4365 @LENGTH@ 8


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled(); @AT@ 5260 @LENGTH@ 160
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5268 @LENGTH@ 151
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5268 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5285 @LENGTH@ 134
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 5285 @LENGTH@ 64
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5285 @LENGTH@ 35
---------UPD MethodInvocation@@componentConfiguration.getConfigurer().isEnabled() @TO@ componentConfiguration.getCustomizer().isEnabled() @AT@ 5369 @LENGTH@ 50
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5369 @LENGTH@ 38


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled(); @AT@ 5294 @LENGTH@ 160
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5302 @LENGTH@ 151
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5302 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5319 @LENGTH@ 134
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 5319 @LENGTH@ 64
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5319 @LENGTH@ 35
---------UPD MethodInvocation@@componentConfiguration.getConfigurer().isEnabled() @TO@ componentConfiguration.getCustomizer().isEnabled() @AT@ 5403 @LENGTH@ 50
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5403 @LENGTH@ 38


UPD TypeDeclaration@@[@Entity, @NamedEntityGraphs({@NamedEntityGraph(name="User.overview",attributeNodes={@NamedAttributeNode("roles")}),@NamedEntityGraph(name="User.detail",attributeNodes={@NamedAttributeNode("roles"),@NamedAttributeNode("manager"),@NamedAttributeNode("colleagues")}),@NamedEntityGraph(name="User.getOneWithDefinedEntityGraphById",attributeNodes={@NamedAttributeNode("roles"),@NamedAttributeNode("manager"),@NamedAttributeNode("colleagues")})}), @NamedQuery(name="User.findByEmailAddress",query="SELECT u FROM User u WHERE u.emailAddress = ?1"), @NamedStoredProcedureQueries({@NamedStoredProcedureQuery(name="User.plus1",procedureName="plus1inout",parameters={@StoredProcedureParameter(mode=ParameterMode.IN,name="arg",type=Integer.class),@StoredProcedureParameter(mode=ParameterMode.OUT,name="res",type=Integer.class)})}), @NamedStoredProcedureQuery(name="User.plus1IO",procedureName="plus1inout",parameters={@StoredProcedureParameter(mode=ParameterMode.IN,name="arg",type=Integer.class),@StoredProcedureParameter(mode=ParameterMode.OUT,name="res",type=Integer.class)}), @Table(name="SD_User"), public]User,  @TO@ [@Entity, @NamedEntityGraphs({@NamedEntityGraph(name="User.overview",attributeNodes={@NamedAttributeNode("roles")}),@NamedEntityGraph(name="User.detail",attributeNodes={@NamedAttributeNode("roles"),@NamedAttributeNode("manager"),@NamedAttributeNode("colleagues")}),@NamedEntityGraph(name="User.getOneWithDefinedEntityGraphById",attributeNodes={@NamedAttributeNode("roles"),@NamedAttributeNode("manager"),@NamedAttributeNode("colleagues")}),@NamedEntityGraph(name="User.withSubGraph",attributeNodes={@NamedAttributeNode("roles"),@NamedAttributeNode(value="colleagues",subgraph="User.colleagues")},subgraphs={@NamedSubgraph(name="User.colleagues",attributeNodes={@NamedAttributeNode("colleagues"),@NamedAttributeNode("roles")})})}), @NamedQuery(name="User.findByEmailAddress",query="SELECT u FROM User u WHERE u.emailAddress = ?1"), @NamedStoredProcedureQueries({@NamedStoredProcedureQuery(name="User.plus1",procedureName="plus1inout",parameters={@StoredProcedureParameter(mode=ParameterMode.IN,name="arg",type=Integer.class),@StoredProcedureParameter(mode=ParameterMode.OUT,name="res",type=Integer.class)})}), @NamedStoredProcedureQuery(name="User.plus1IO",procedureName="plus1inout",parameters={@StoredProcedureParameter(mode=ParameterMode.IN,name="arg",type=Integer.class),@StoredProcedureParameter(mode=ParameterMode.OUT,name="res",type=Integer.class)}), @Table(name="SD_User"), public]User,  @AT@ 1881 @LENGTH@ 6841
---UPD SingleMemberAnnotation@@@NamedEntityGraphs({@NamedEntityGraph(name="User.overview",attributeNodes={@NamedAttributeNode("roles")}),@NamedEntityGraph(name="User.detail",attributeNodes={@NamedAttributeNode("roles"),@NamedAttributeNode("manager"),@NamedAttributeNode("colleagues")}),@NamedEntityGraph(name="User.getOneWithDefinedEntityGraphById",attributeNodes={@NamedAttributeNode("roles"),@NamedAttributeNode("manager"),@NamedAttributeNode("colleagues")})}) @TO@ @NamedEntityGraphs({@NamedEntityGraph(name="User.overview",attributeNodes={@NamedAttributeNode("roles")}),@NamedEntityGraph(name="User.detail",attributeNodes={@NamedAttributeNode("roles"),@NamedAttributeNode("manager"),@NamedAttributeNode("colleagues")}),@NamedEntityGraph(name="User.getOneWithDefinedEntityGraphById",attributeNodes={@NamedAttributeNode("roles"),@NamedAttributeNode("manager"),@NamedAttributeNode("colleagues")}),@NamedEntityGraph(name="User.withSubGraph",attributeNodes={@NamedAttributeNode("roles"),@NamedAttributeNode(value="colleagues",subgraph="User.colleagues")},subgraphs={@NamedSubgraph(name="User.colleagues",attributeNodes={@NamedAttributeNode("colleagues"),@NamedAttributeNode("roles")})})}) @AT@ 1889 @LENGTH@ 474


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<CxfComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<CxfComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5378 @LENGTH@ 336
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 5382 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5382 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  ComponentCustomizer<CxfComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ ThenBody:{  for (  ComponentCustomizer<CxfComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5438 @LENGTH@ 276
------UPD EnhancedForStatement@@for (ComponentCustomizer<CxfComponent> configurer : customizers) {  LOGGER.debug("Configure component {}, with configurer {}",component,configurer);  configurer.customize(component);} @TO@ for (ComponentCustomizer<CxfComponent> customizer : customizers) {  LOGGER.debug("Configure component {}, with customizer {}",component,customizer);  customizer.customize(component);} @AT@ 5452 @LENGTH@ 252
---------UPD SingleVariableDeclaration@@ComponentCustomizer<CxfComponent> configurer @TO@ ComponentCustomizer<CxfComponent> customizer @AT@ 5457 @LENGTH@ 44
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5491 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5535 @LENGTH@ 106
------------UPD MethodInvocation@@LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5535 @LENGTH@ 105
---------------UPD SimpleName@@MethodName:debug:["Configure component {}, with configurer {}", component, configurer] @TO@ MethodName:debug:["Configure component {}, with customizer {}", component, customizer] @AT@ 5542 @LENGTH@ 98
------------------UPD StringLiteral@@"Configure component {}, with configurer {}" @TO@ "Configure component {}, with customizer {}" @AT@ 5548 @LENGTH@ 44
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5629 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(component) @TO@ MethodInvocation:customizer.customize(component) @AT@ 5658 @LENGTH@ 32
------------UPD MethodInvocation@@configurer.customize(component) @TO@ customizer.customize(component) @AT@ 5658 @LENGTH@ 31
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5658 @LENGTH@ 10


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && dataformatConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && dataformatConfiguration.getCustomizer().isEnabled(); @AT@ 5351 @LENGTH@ 177
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && dataformatConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && dataformatConfiguration.getCustomizer().isEnabled() @AT@ 5359 @LENGTH@ 168
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5359 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && dataformatConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && dataformatConfiguration.getCustomizer().isEnabled() @AT@ 5376 @LENGTH@ 151
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 5376 @LENGTH@ 72
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5376 @LENGTH@ 35
---------UPD MethodInvocation@@dataformatConfiguration.getConfigurer().isEnabled() @TO@ dataformatConfiguration.getCustomizer().isEnabled() @AT@ 5476 @LENGTH@ 51
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5476 @LENGTH@ 39


UPD VariableDeclarationStatement@@Set<String> installedClassNames=installedClasses.stream().map(e -> e.getTypeName()).collect(Collectors.toSet()); @TO@ Set<String> installedClassNames=installedClasses.stream().map(Type::getTypeName).collect(Collectors.toSet()); @AT@ 4578 @LENGTH@ 114
---UPD VariableDeclarationFragment@@installedClassNames=installedClasses.stream().map(e -> e.getTypeName()).collect(Collectors.toSet()) @TO@ installedClassNames=installedClasses.stream().map(Type::getTypeName).collect(Collectors.toSet()) @AT@ 4590 @LENGTH@ 101
------UPD MethodInvocation@@installedClasses.stream().map(e -> e.getTypeName()).collect(Collectors.toSet()) @TO@ installedClasses.stream().map(Type::getTypeName).collect(Collectors.toSet()) @AT@ 4612 @LENGTH@ 79
---------UPD MethodInvocation@@MethodName:map:[e -> e.getTypeName()] @TO@ MethodName:map:[Type::getTypeName] @AT@ 4612 @LENGTH@ 51
------------DEL LambdaExpression@@e -> e.getTypeName() @AT@ 4642 @LENGTH@ 20
---------------DEL VariableDeclarationFragment@@e @AT@ 4642 @LENGTH@ 1
------------------DEL SimpleName@@e @AT@ 4642 @LENGTH@ 1
---------------DEL MethodInvocation@@e.getTypeName() @AT@ 4647 @LENGTH@ 15
------------------DEL SimpleName@@Name:e @AT@ 4647 @LENGTH@ 1
------------------DEL SimpleName@@MethodName:getTypeName:[] @AT@ 4649 @LENGTH@ 13


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<MyBatisComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<MyBatisComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5446 @LENGTH@ 340
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 5450 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5450 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  ComponentCustomizer<MyBatisComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ ThenBody:{  for (  ComponentCustomizer<MyBatisComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5506 @LENGTH@ 280
------UPD EnhancedForStatement@@for (ComponentCustomizer<MyBatisComponent> configurer : customizers) {  LOGGER.debug("Configure component {}, with configurer {}",component,configurer);  configurer.customize(component);} @TO@ for (ComponentCustomizer<MyBatisComponent> customizer : customizers) {  LOGGER.debug("Configure component {}, with customizer {}",component,customizer);  customizer.customize(component);} @AT@ 5520 @LENGTH@ 256
---------UPD SingleVariableDeclaration@@ComponentCustomizer<MyBatisComponent> configurer @TO@ ComponentCustomizer<MyBatisComponent> customizer @AT@ 5525 @LENGTH@ 48
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5563 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5607 @LENGTH@ 106
------------UPD MethodInvocation@@LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5607 @LENGTH@ 105
---------------UPD SimpleName@@MethodName:debug:["Configure component {}, with configurer {}", component, configurer] @TO@ MethodName:debug:["Configure component {}, with customizer {}", component, customizer] @AT@ 5614 @LENGTH@ 98
------------------UPD StringLiteral@@"Configure component {}, with configurer {}" @TO@ "Configure component {}, with customizer {}" @AT@ 5620 @LENGTH@ 44
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5701 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(component) @TO@ MethodInvocation:customizer.customize(component) @AT@ 5730 @LENGTH@ 32
------------UPD MethodInvocation@@configurer.customize(component) @TO@ customizer.customize(component) @AT@ 5730 @LENGTH@ 31
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5730 @LENGTH@ 10


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<PgEventComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<PgEventComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5446 @LENGTH@ 340
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 5450 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5450 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  ComponentCustomizer<PgEventComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ ThenBody:{  for (  ComponentCustomizer<PgEventComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5506 @LENGTH@ 280
------UPD EnhancedForStatement@@for (ComponentCustomizer<PgEventComponent> configurer : customizers) {  LOGGER.debug("Configure component {}, with configurer {}",component,configurer);  configurer.customize(component);} @TO@ for (ComponentCustomizer<PgEventComponent> customizer : customizers) {  LOGGER.debug("Configure component {}, with customizer {}",component,customizer);  customizer.customize(component);} @AT@ 5520 @LENGTH@ 256
---------UPD SingleVariableDeclaration@@ComponentCustomizer<PgEventComponent> configurer @TO@ ComponentCustomizer<PgEventComponent> customizer @AT@ 5525 @LENGTH@ 48
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5563 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5607 @LENGTH@ 106
------------UPD MethodInvocation@@LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5607 @LENGTH@ 105
---------------UPD SimpleName@@MethodName:debug:["Configure component {}, with configurer {}", component, configurer] @TO@ MethodName:debug:["Configure component {}, with customizer {}", component, customizer] @AT@ 5614 @LENGTH@ 98
------------------UPD StringLiteral@@"Configure component {}, with configurer {}" @TO@ "Configure component {}, with customizer {}" @AT@ 5620 @LENGTH@ 44
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5701 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(component) @TO@ MethodInvocation:customizer.customize(component) @AT@ 5730 @LENGTH@ 32
------------UPD MethodInvocation@@configurer.customize(component) @TO@ customizer.customize(component) @AT@ 5730 @LENGTH@ 31
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5730 @LENGTH@ 10


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<JpaComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<JpaComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5378 @LENGTH@ 336
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 5382 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5382 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  ComponentCustomizer<JpaComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ ThenBody:{  for (  ComponentCustomizer<JpaComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5438 @LENGTH@ 276
------UPD EnhancedForStatement@@for (ComponentCustomizer<JpaComponent> configurer : customizers) {  LOGGER.debug("Configure component {}, with configurer {}",component,configurer);  configurer.customize(component);} @TO@ for (ComponentCustomizer<JpaComponent> customizer : customizers) {  LOGGER.debug("Configure component {}, with customizer {}",component,customizer);  customizer.customize(component);} @AT@ 5452 @LENGTH@ 252
---------UPD SingleVariableDeclaration@@ComponentCustomizer<JpaComponent> configurer @TO@ ComponentCustomizer<JpaComponent> customizer @AT@ 5457 @LENGTH@ 44
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5491 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5535 @LENGTH@ 106
------------UPD MethodInvocation@@LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5535 @LENGTH@ 105
---------------UPD SimpleName@@MethodName:debug:["Configure component {}, with configurer {}", component, configurer] @TO@ MethodName:debug:["Configure component {}, with customizer {}", component, customizer] @AT@ 5542 @LENGTH@ 98
------------------UPD StringLiteral@@"Configure component {}, with configurer {}" @TO@ "Configure component {}, with customizer {}" @AT@ 5548 @LENGTH@ 44
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5629 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(component) @TO@ MethodInvocation:customizer.customize(component) @AT@ 5658 @LENGTH@ 32
------------UPD MethodInvocation@@configurer.customize(component) @TO@ customizer.customize(component) @AT@ 5658 @LENGTH@ 31
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5658 @LENGTH@ 10


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<CMComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<CMComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5369 @LENGTH@ 335
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 5373 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5373 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  ComponentCustomizer<CMComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ ThenBody:{  for (  ComponentCustomizer<CMComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5429 @LENGTH@ 275
------UPD EnhancedForStatement@@for (ComponentCustomizer<CMComponent> configurer : customizers) {  LOGGER.debug("Configure component {}, with configurer {}",component,configurer);  configurer.customize(component);} @TO@ for (ComponentCustomizer<CMComponent> customizer : customizers) {  LOGGER.debug("Configure component {}, with customizer {}",component,customizer);  customizer.customize(component);} @AT@ 5443 @LENGTH@ 251
---------UPD SingleVariableDeclaration@@ComponentCustomizer<CMComponent> configurer @TO@ ComponentCustomizer<CMComponent> customizer @AT@ 5448 @LENGTH@ 43
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5481 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5525 @LENGTH@ 106
------------UPD MethodInvocation@@LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5525 @LENGTH@ 105
---------------UPD SimpleName@@MethodName:debug:["Configure component {}, with configurer {}", component, configurer] @TO@ MethodName:debug:["Configure component {}, with customizer {}", component, customizer] @AT@ 5532 @LENGTH@ 98
------------------UPD StringLiteral@@"Configure component {}, with configurer {}" @TO@ "Configure component {}, with customizer {}" @AT@ 5538 @LENGTH@ 44
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5619 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(component) @TO@ MethodInvocation:customizer.customize(component) @AT@ 5648 @LENGTH@ 32
------------UPD MethodInvocation@@configurer.customize(component) @TO@ customizer.customize(component) @AT@ 5648 @LENGTH@ 31
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5648 @LENGTH@ 10


UPD ExpressionStatement@@MethodInvocation:markQueryMetric(MetricsFactory.getInstance(),MetricsConstant.HS2_SUCEEDED_QUERIES) @TO@ MethodInvocation:markQueryMetric(MetricsFactory.getInstance(),MetricsConstant.HS2_SUCCEEDED_QUERIES) @AT@ 24992 @LENGTH@ 84
---UPD MethodInvocation@@markQueryMetric(MetricsFactory.getInstance(),MetricsConstant.HS2_SUCEEDED_QUERIES) @TO@ markQueryMetric(MetricsFactory.getInstance(),MetricsConstant.HS2_SUCCEEDED_QUERIES) @AT@ 24992 @LENGTH@ 83
------UPD SimpleName@@MethodName:markQueryMetric:[MetricsFactory.getInstance(), MetricsConstant.HS2_SUCEEDED_QUERIES] @TO@ MethodName:markQueryMetric:[MetricsFactory.getInstance(), MetricsConstant.HS2_SUCCEEDED_QUERIES] @AT@ 24992 @LENGTH@ 83
---------UPD QualifiedName@@MetricsConstant.HS2_SUCEEDED_QUERIES @TO@ MetricsConstant.HS2_SUCCEEDED_QUERIES @AT@ 25038 @LENGTH@ 36
------------UPD SimpleName@@HS2_SUCEEDED_QUERIES @TO@ HS2_SUCCEEDED_QUERIES @AT@ 25054 @LENGTH@ 20


UPD WhileStatement@@while (offset < size && (readed=input.read(data,offset,size - offset)) != EOF) {  offset+=readed;} @TO@ while (offset < size && (read=input.read(data,offset,size - offset)) != EOF) {  offset+=read;} @AT@ 30744 @LENGTH@ 124
---UPD InfixExpression@@offset < size && (readed=input.read(data,offset,size - offset)) != EOF @TO@ offset < size && (read=input.read(data,offset,size - offset)) != EOF @AT@ 30751 @LENGTH@ 74
------UPD InfixExpression@@(readed=input.read(data,offset,size - offset)) != EOF @TO@ (read=input.read(data,offset,size - offset)) != EOF @AT@ 30768 @LENGTH@ 57
---------UPD ParenthesizedExpression@@(readed=input.read(data,offset,size - offset)) @TO@ (read=input.read(data,offset,size - offset)) @AT@ 30768 @LENGTH@ 50
------------UPD Assignment@@readed=input.read(data,offset,size - offset) @TO@ read=input.read(data,offset,size - offset) @AT@ 30769 @LENGTH@ 48
---------------UPD SimpleName@@readed @TO@ read @AT@ 30769 @LENGTH@ 6
---UPD Block@@WhileBody:{  offset+=readed;} @TO@ WhileBody:{  offset+=read;} @AT@ 30827 @LENGTH@ 41
------UPD ExpressionStatement@@Assignment:offset+=readed @TO@ Assignment:offset+=read @AT@ 30841 @LENGTH@ 17
---------UPD Assignment@@offset+=readed @TO@ offset+=read @AT@ 30841 @LENGTH@ 16
------------UPD SimpleName@@readed @TO@ read @AT@ 30851 @LENGTH@ 6


UPD TryStatement@@try (AutoCloseable handle=Performance.time("FractionProducingExtension.afterBeanDiscovery")){  Set<Type> preExistingFractionClasses=new HashSet<>();  try (AutoCloseable pre=Performance.time("FractionProducingExtension.afterBeanDiscovery - pre-existing")){    for (    Fraction fraction : explicitlyInstalledFractions) {      try {        abd.addBean(new ConfigurableFractionBean<>(fraction,this.configurableManager));      } catch (      Exception e) {        throw new RuntimeException(e);      }      preExistingFractionClasses.add(fraction.getClass());    }    Set<Bean<?>> availableFractionBeans=beanManager.getBeans(Fraction.class,AnyLiteral.INSTANCE);    preExistingFractionClasses.addAll(availableFractionBeans.stream().flatMap(e -> e.getTypes().stream()).collect(Collectors.toSet()));  }   Set<Class<? extends Fraction>> fractionClasses=uninstalledFractionClasses(preExistingFractionClasses);  try (AutoCloseable defaultHandle=Performance.time("FractionProducingExtension.afterBeanDiscovery - default")){    fractionClasses.stream().forEach((cls) -> {      try {        abd.addBean(new ConfigurableFractionBean<>(cls,this.configurableManager));      } catch (      Exception e) {        throw new RuntimeException(e);      }    });  } }  @TO@ try (AutoCloseable handle=Performance.time("FractionProducingExtension.afterBeanDiscovery")){  Set<Type> preExistingFractionClasses=new HashSet<>();  try (AutoCloseable pre=Performance.time("FractionProducingExtension.afterBeanDiscovery - pre-existing")){    for (    Fraction<?> fraction : explicitlyInstalledFractions) {      try {        abd.addBean(new ConfigurableFractionBean<>(fraction,this.configurableManager));      } catch (      Exception e) {        throw new RuntimeException(e);      }      preExistingFractionClasses.add(fraction.getClass());    }    Set<Bean<?>> availableFractionBeans=beanManager.getBeans(Fraction.class,AnyLiteral.INSTANCE);    preExistingFractionClasses.addAll(availableFractionBeans.stream().flatMap(e -> e.getTypes().stream()).collect(Collectors.toSet()));  }   Set<Class<? extends Fraction>> fractionClasses=uninstalledFractionClasses(preExistingFractionClasses);  try (AutoCloseable defaultHandle=Performance.time("FractionProducingExtension.afterBeanDiscovery - default")){    fractionClasses.forEach((cls) -> {      try {        abd.addBean(new ConfigurableFractionBean<>(cls,this.configurableManager));      } catch (      Exception e) {        throw new RuntimeException(e);      }    });  } }  @AT@ 2639 @LENGTH@ 1758
---UPD TryStatement@@try (AutoCloseable pre=Performance.time("FractionProducingExtension.afterBeanDiscovery - pre-existing")){  for (  Fraction fraction : explicitlyInstalledFractions) {    try {      abd.addBean(new ConfigurableFractionBean<>(fraction,this.configurableManager));    } catch (    Exception e) {      throw new RuntimeException(e);    }    preExistingFractionClasses.add(fraction.getClass());  }  Set<Bean<?>> availableFractionBeans=beanManager.getBeans(Fraction.class,AnyLiteral.INSTANCE);  preExistingFractionClasses.addAll(availableFractionBeans.stream().flatMap(e -> e.getTypes().stream()).collect(Collectors.toSet()));}  @TO@ try (AutoCloseable pre=Performance.time("FractionProducingExtension.afterBeanDiscovery - pre-existing")){  for (  Fraction<?> fraction : explicitlyInstalledFractions) {    try {      abd.addBean(new ConfigurableFractionBean<>(fraction,this.configurableManager));    } catch (    Exception e) {      throw new RuntimeException(e);    }    preExistingFractionClasses.add(fraction.getClass());  }  Set<Bean<?>> availableFractionBeans=beanManager.getBeans(Fraction.class,AnyLiteral.INSTANCE);  preExistingFractionClasses.addAll(availableFractionBeans.stream().flatMap(e -> e.getTypes().stream()).collect(Collectors.toSet()));}  @AT@ 2817 @LENGTH@ 911
------UPD EnhancedForStatement@@for (Fraction fraction : explicitlyInstalledFractions) {  try {    abd.addBean(new ConfigurableFractionBean<>(fraction,this.configurableManager));  } catch (  Exception e) {    throw new RuntimeException(e);  }  preExistingFractionClasses.add(fraction.getClass());} @TO@ for (Fraction<?> fraction : explicitlyInstalledFractions) {  try {    abd.addBean(new ConfigurableFractionBean<>(fraction,this.configurableManager));  } catch (  Exception e) {    throw new RuntimeException(e);  }  preExistingFractionClasses.add(fraction.getClass());} @AT@ 2942 @LENGTH@ 400
---------UPD SingleVariableDeclaration@@Fraction fraction @TO@ Fraction<?> fraction @AT@ 2947 @LENGTH@ 17
------------DEL SimpleType@@Fraction @AT@ 2947 @LENGTH@ 8
------------INS ParameterizedType@@Fraction<?> @TO@ SingleVariableDeclaration@@Fraction fraction @AT@ 2979 @LENGTH@ 11
---------------INS SimpleType@@Fraction @TO@ ParameterizedType@@Fraction<?> @AT@ 2979 @LENGTH@ 8
---------------INS WildcardType@@? @TO@ ParameterizedType@@Fraction<?> @AT@ 2988 @LENGTH@ 1
---UPD TryStatement@@try (AutoCloseable defaultHandle=Performance.time("FractionProducingExtension.afterBeanDiscovery - default")){  fractionClasses.stream().forEach((cls) -> {    try {      abd.addBean(new ConfigurableFractionBean<>(cls,this.configurableManager));    } catch (    Exception e) {      throw new RuntimeException(e);    }  });}  @TO@ try (AutoCloseable defaultHandle=Performance.time("FractionProducingExtension.afterBeanDiscovery - default")){  fractionClasses.forEach((cls) -> {    try {      abd.addBean(new ConfigurableFractionBean<>(cls,this.configurableManager));    } catch (    Exception e) {      throw new RuntimeException(e);    }  });}  @AT@ 3860 @LENGTH@ 527
------UPD ExpressionStatement@@MethodInvocation:fractionClasses.stream().forEach((cls) -> {
  try {
    abd.addBean(new ConfigurableFractionBean<>(cls,this.configurableManager));
  }
 catch (  Exception e) {
    throw new RuntimeException(e);
  }
}
) @TO@ MethodInvocation:fractionClasses.forEach((cls) -> {
  try {
    abd.addBean(new ConfigurableFractionBean<>(cls,this.configurableManager));
  }
 catch (  Exception e) {
    throw new RuntimeException(e);
  }
}
) @AT@ 3990 @LENGTH@ 383
---------UPD MethodInvocation@@fractionClasses.stream().forEach((cls) -> {
  try {
    abd.addBean(new ConfigurableFractionBean<>(cls,this.configurableManager));
  }
 catch (  Exception e) {
    throw new RuntimeException(e);
  }
}
) @TO@ fractionClasses.forEach((cls) -> {
  try {
    abd.addBean(new ConfigurableFractionBean<>(cls,this.configurableManager));
  }
 catch (  Exception e) {
    throw new RuntimeException(e);
  }
}
) @AT@ 3990 @LENGTH@ 382
------------DEL MethodInvocation@@MethodName:stream:[] @AT@ 3990 @LENGTH@ 24


UPD FieldDeclaration@@private, static, long, [serialVersionUID=1L] @TO@ private, static, final, long, [serialVersionUID=1L] @AT@ 1167 @LENGTH@ 42
---INS Modifier@@final @TO@ FieldDeclaration@@private, static, long, [serialVersionUID=1L] @AT@ 1182 @LENGTH@ 5


UPD ExpressionStatement@@MethodInvocation:WhiteboxImpl.setInternalState(filter,Logger.class,logger) @TO@ MethodInvocation:ReflectionTestUtils.setField(filter,"logger",logger) @AT@ 2364 @LENGTH@ 60
---UPD MethodInvocation@@WhiteboxImpl.setInternalState(filter,Logger.class,logger) @TO@ ReflectionTestUtils.setField(filter,"logger",logger) @AT@ 2364 @LENGTH@ 59
------UPD SimpleName@@Name:WhiteboxImpl @TO@ Name:ReflectionTestUtils @AT@ 2364 @LENGTH@ 12
------UPD SimpleName@@MethodName:setInternalState:[filter, Logger.class, logger] @TO@ MethodName:setField:[filter, "logger", logger] @AT@ 2377 @LENGTH@ 46
---------DEL TypeLiteral@@Logger.class @AT@ 2402 @LENGTH@ 12
---------INS StringLiteral@@"logger" @TO@ SimpleName@@MethodName:setInternalState:[filter, Logger.class, logger] @AT@ 2407 @LENGTH@ 8


UPD IfStatement@@if ("activemq".equals(scheme) || "jms".equals("scheme")) {  if (uriPath.startsWith("temp:")) {    prevPath=5;  }} @TO@ if ("activemq".equals(scheme) || "jms".equals(scheme)) {  if (uriPath.startsWith("temp:")) {    prevPath=5;  }} @AT@ 54733 @LENGTH@ 159
---UPD InfixExpression@@"activemq".equals(scheme) || "jms".equals("scheme") @TO@ "activemq".equals(scheme) || "jms".equals(scheme) @AT@ 54737 @LENGTH@ 51
------UPD MethodInvocation@@"jms".equals("scheme") @TO@ "jms".equals(scheme) @AT@ 54766 @LENGTH@ 22
---------UPD SimpleName@@MethodName:equals:["scheme"] @TO@ MethodName:equals:[scheme] @AT@ 54772 @LENGTH@ 16
------------DEL StringLiteral@@"scheme" @AT@ 54779 @LENGTH@ 8
------------INS SimpleName@@scheme @TO@ SimpleName@@MethodName:equals:["scheme"] @AT@ 54779 @LENGTH@ 6


INS ReturnStatement@@BooleanLiteral:true @TO@ MethodDeclaration@@public, static, boolean, MethodName:isOverridingMethod, Method source, Method target, boolean exact,  @AT@ 54010 @LENGTH@ 12
---INS BooleanLiteral@@true @TO@ ReturnStatement@@BooleanLiteral:true @AT@ 54017 @LENGTH@ 4


UPD LambdaExpression@@done -> {
  exchange.setException(submitted.getException());
  exchange.getOut().copyFrom(submitted.hasOut() ? submitted.getOut() : submitted.getIn());
  if (headerFilterStrategy != null) {
    exchange.getOut().getHeaders().entrySet().removeIf(e -> headerFilterStrategy.applyFilterToExternalHeaders(e.getKey(),e.getValue(),submitted));
  }
  if (endpoint.isPropagateProperties()) {
    exchange.getProperties().putAll(submitted.getProperties());
  }
  callback.done(done);
}
 @TO@ done -> {
  Message msg=submitted.hasOut() ? submitted.getOut() : submitted.getIn();
  if (headerFilterStrategy != null) {
    msg.getHeaders().entrySet().removeIf(e -> headerFilterStrategy.applyFilterToExternalHeaders(e.getKey(),e.getValue(),submitted));
  }
  if (exchange != submitted) {
    exchange.setException(submitted.getException());
    exchange.getOut().copyFrom(msg);
  }
  if (endpoint.isPropagateProperties()) {
    exchange.getProperties().putAll(submitted.getProperties());
  }
  callback.done(done);
}
 @AT@ 2796 @LENGTH@ 582
---DEL ExpressionStatement@@MethodInvocation:exchange.getOut().copyFrom(submitted.hasOut() ? submitted.getOut() : submitted.getIn()) @AT@ 2879 @LENGTH@ 88
---INS VariableDeclarationStatement@@Message msg=submitted.hasOut() ? submitted.getOut() : submitted.getIn(); @TO@ LambdaExpression@@done -> {
  exchange.setException(submitted.getException());
  exchange.getOut().copyFrom(submitted.hasOut() ? submitted.getOut() : submitted.getIn());
  if (headerFilterStrategy != null) {
    exchange.getOut().getHeaders().entrySet().removeIf(e -> headerFilterStrategy.applyFilterToExternalHeaders(e.getKey(),e.getValue(),submitted));
  }
  if (endpoint.isPropagateProperties()) {
    exchange.getProperties().putAll(submitted.getProperties());
  }
  callback.done(done);
}
 @AT@ 2888 @LENGTH@ 74
------INS SimpleType@@Message @TO@ VariableDeclarationStatement@@Message msg=submitted.hasOut() ? submitted.getOut() : submitted.getIn(); @AT@ 2888 @LENGTH@ 7
------INS VariableDeclarationFragment@@msg=submitted.hasOut() ? submitted.getOut() : submitted.getIn() @TO@ VariableDeclarationStatement@@Message msg=submitted.hasOut() ? submitted.getOut() : submitted.getIn(); @AT@ 2896 @LENGTH@ 65
---------INS SimpleName@@msg @TO@ VariableDeclarationFragment@@msg=submitted.hasOut() ? submitted.getOut() : submitted.getIn() @AT@ 2896 @LENGTH@ 3
---------MOV ConditionalExpression@@submitted.hasOut() ? submitted.getOut() : submitted.getIn() @TO@ VariableDeclarationFragment@@msg=submitted.hasOut() ? submitted.getOut() : submitted.getIn() @AT@ 2906 @LENGTH@ 59
---UPD IfStatement@@if (headerFilterStrategy != null) {  exchange.getOut().getHeaders().entrySet().removeIf(e -> headerFilterStrategy.applyFilterToExternalHeaders(e.getKey(),e.getValue(),submitted));} @TO@ if (headerFilterStrategy != null) {  msg.getHeaders().entrySet().removeIf(e -> headerFilterStrategy.applyFilterToExternalHeaders(e.getKey(),e.getValue(),submitted));} @AT@ 2981 @LENGTH@ 210
------UPD Block@@ThenBody:{  exchange.getOut().getHeaders().entrySet().removeIf(e -> headerFilterStrategy.applyFilterToExternalHeaders(e.getKey(),e.getValue(),submitted));} @TO@ ThenBody:{  msg.getHeaders().entrySet().removeIf(e -> headerFilterStrategy.applyFilterToExternalHeaders(e.getKey(),e.getValue(),submitted));} @AT@ 3015 @LENGTH@ 176
---------UPD ExpressionStatement@@MethodInvocation:exchange.getOut().getHeaders().entrySet().removeIf(e -> headerFilterStrategy.applyFilterToExternalHeaders(e.getKey(),e.getValue(),submitted)) @TO@ MethodInvocation:msg.getHeaders().entrySet().removeIf(e -> headerFilterStrategy.applyFilterToExternalHeaders(e.getKey(),e.getValue(),submitted)) @AT@ 3033 @LENGTH@ 144
------------UPD MethodInvocation@@exchange.getOut().getHeaders().entrySet().removeIf(e -> headerFilterStrategy.applyFilterToExternalHeaders(e.getKey(),e.getValue(),submitted)) @TO@ msg.getHeaders().entrySet().removeIf(e -> headerFilterStrategy.applyFilterToExternalHeaders(e.getKey(),e.getValue(),submitted)) @AT@ 3033 @LENGTH@ 143
---------------DEL MethodInvocation@@MethodName:getOut:[] @AT@ 3033 @LENGTH@ 17
---------------UPD SimpleName@@Name:exchange @TO@ Name:msg @AT@ 3033 @LENGTH@ 8
---INS IfStatement@@if (exchange != submitted) {  exchange.setException(submitted.getException());  exchange.getOut().copyFrom(msg);} @TO@ LambdaExpression@@done -> {
  exchange.setException(submitted.getException());
  exchange.getOut().copyFrom(submitted.hasOut() ? submitted.getOut() : submitted.getIn());
  if (headerFilterStrategy != null) {
    exchange.getOut().getHeaders().entrySet().removeIf(e -> headerFilterStrategy.applyFilterToExternalHeaders(e.getKey(),e.getValue(),submitted));
  }
  if (endpoint.isPropagateProperties()) {
    exchange.getProperties().putAll(submitted.getProperties());
  }
  callback.done(done);
}
 @AT@ 3186 @LENGTH@ 220
------INS InfixExpression@@exchange != submitted @TO@ IfStatement@@if (exchange != submitted) {  exchange.setException(submitted.getException());  exchange.getOut().copyFrom(msg);} @AT@ 3190 @LENGTH@ 21
---------INS SimpleName@@exchange @TO@ InfixExpression@@exchange != submitted @AT@ 3190 @LENGTH@ 8
---------INS Operator@@!= @TO@ InfixExpression@@exchange != submitted @AT@ 3198 @LENGTH@ 2
---------INS SimpleName@@submitted @TO@ InfixExpression@@exchange != submitted @AT@ 3202 @LENGTH@ 9
------INS Block@@ThenBody:{  exchange.setException(submitted.getException());  exchange.getOut().copyFrom(msg);} @TO@ IfStatement@@if (exchange != submitted) {  exchange.setException(submitted.getException());  exchange.getOut().copyFrom(msg);} @AT@ 3213 @LENGTH@ 193
---------MOV ExpressionStatement@@MethodInvocation:exchange.setException(submitted.getException()) @TO@ Block@@ThenBody:{  exchange.setException(submitted.getException());  exchange.getOut().copyFrom(msg);} @AT@ 2818 @LENGTH@ 48
---------INS ExpressionStatement@@MethodInvocation:exchange.getOut().copyFrom(msg) @TO@ Block@@ThenBody:{  exchange.setException(submitted.getException());  exchange.getOut().copyFrom(msg);} @AT@ 3360 @LENGTH@ 32
------------MOV MethodInvocation@@exchange.getOut().copyFrom(submitted.hasOut() ? submitted.getOut() : submitted.getIn()) @TO@ ExpressionStatement@@MethodInvocation:exchange.getOut().copyFrom(msg) @AT@ 2879 @LENGTH@ 87
---------------UPD SimpleName@@MethodName:copyFrom:[submitted.hasOut() ? submitted.getOut() : submitted.getIn()] @TO@ MethodName:copyFrom:[msg] @AT@ 2897 @LENGTH@ 69
------------------INS SimpleName@@msg @TO@ SimpleName@@MethodName:copyFrom:[submitted.hasOut() ? submitted.getOut() : submitted.getIn()] @AT@ 3387 @LENGTH@ 3


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<DirectComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<DirectComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5429 @LENGTH@ 339
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 5433 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5433 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  ComponentCustomizer<DirectComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ ThenBody:{  for (  ComponentCustomizer<DirectComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5489 @LENGTH@ 279
------UPD EnhancedForStatement@@for (ComponentCustomizer<DirectComponent> configurer : customizers) {  LOGGER.debug("Configure component {}, with configurer {}",component,configurer);  configurer.customize(component);} @TO@ for (ComponentCustomizer<DirectComponent> customizer : customizers) {  LOGGER.debug("Configure component {}, with customizer {}",component,customizer);  customizer.customize(component);} @AT@ 5503 @LENGTH@ 255
---------UPD SingleVariableDeclaration@@ComponentCustomizer<DirectComponent> configurer @TO@ ComponentCustomizer<DirectComponent> customizer @AT@ 5508 @LENGTH@ 47
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5545 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5589 @LENGTH@ 106
------------UPD MethodInvocation@@LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5589 @LENGTH@ 105
---------------UPD SimpleName@@MethodName:debug:["Configure component {}, with configurer {}", component, configurer] @TO@ MethodName:debug:["Configure component {}, with customizer {}", component, customizer] @AT@ 5596 @LENGTH@ 98
------------------UPD StringLiteral@@"Configure component {}, with configurer {}" @TO@ "Configure component {}, with customizer {}" @AT@ 5602 @LENGTH@ 44
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5683 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(component) @TO@ MethodInvocation:customizer.customize(component) @AT@ 5712 @LENGTH@ 32
------------UPD MethodInvocation@@configurer.customize(component) @TO@ customizer.customize(component) @AT@ 5712 @LENGTH@ 31
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5712 @LENGTH@ 10


UPD FieldDeclaration@@private, static, String, [TEST_REPORT_NAME="Test_Report"] @TO@ private, static, final, String, [TEST_REPORT_NAME="Test_Report"] @AT@ 3074 @LENGTH@ 55
---INS Modifier@@final @TO@ FieldDeclaration@@private, static, String, [TEST_REPORT_NAME="Test_Report"] @AT@ 3089 @LENGTH@ 5


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  LanguageCustomizer<MvelLanguage> configurer : customizers) {    LOGGER.debug("Configure language {}, with configurer {}",language,configurer);    configurer.customize(language);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  LanguageCustomizer<MvelLanguage> customizer : customizers) {    LOGGER.debug("Configure language {}, with customizer {}",language,customizer);    customizer.customize(language);  }} @AT@ 4689 @LENGTH@ 332
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 4693 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 4693 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  LanguageCustomizer<MvelLanguage> configurer : customizers) {    LOGGER.debug("Configure language {}, with configurer {}",language,configurer);    configurer.customize(language);  }} @TO@ ThenBody:{  for (  LanguageCustomizer<MvelLanguage> customizer : customizers) {    LOGGER.debug("Configure language {}, with customizer {}",language,customizer);    customizer.customize(language);  }} @AT@ 4749 @LENGTH@ 272
------UPD EnhancedForStatement@@for (LanguageCustomizer<MvelLanguage> configurer : customizers) {  LOGGER.debug("Configure language {}, with configurer {}",language,configurer);  configurer.customize(language);} @TO@ for (LanguageCustomizer<MvelLanguage> customizer : customizers) {  LOGGER.debug("Configure language {}, with customizer {}",language,customizer);  customizer.customize(language);} @AT@ 4763 @LENGTH@ 248
---------UPD SingleVariableDeclaration@@LanguageCustomizer<MvelLanguage> configurer @TO@ LanguageCustomizer<MvelLanguage> customizer @AT@ 4768 @LENGTH@ 43
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 4801 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure language {}, with configurer {}",language,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure language {}, with customizer {}",language,customizer) @AT@ 4845 @LENGTH@ 104
------------UPD MethodInvocation@@LOGGER.debug("Configure language {}, with configurer {}",language,configurer) @TO@ LOGGER.debug("Configure language {}, with customizer {}",language,customizer) @AT@ 4845 @LENGTH@ 103
---------------UPD SimpleName@@MethodName:debug:["Configure language {}, with configurer {}", language, configurer] @TO@ MethodName:debug:["Configure language {}, with customizer {}", language, customizer] @AT@ 4852 @LENGTH@ 96
------------------UPD StringLiteral@@"Configure language {}, with configurer {}" @TO@ "Configure language {}, with customizer {}" @AT@ 4858 @LENGTH@ 43
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 4937 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(language) @TO@ MethodInvocation:customizer.customize(language) @AT@ 4966 @LENGTH@ 31
------------UPD MethodInvocation@@configurer.customize(language) @TO@ customizer.customize(language) @AT@ 4966 @LENGTH@ 30
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 4966 @LENGTH@ 10


UPD FieldDeclaration@@private, static, long, [serialVersionUID=1L] @TO@ private, static, final, long, [serialVersionUID=1L] @AT@ 1358 @LENGTH@ 42
---INS Modifier@@final @TO@ FieldDeclaration@@private, static, long, [serialVersionUID=1L] @AT@ 1373 @LENGTH@ 5


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled(); @AT@ 5260 @LENGTH@ 160
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5268 @LENGTH@ 151
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5268 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5285 @LENGTH@ 134
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 5285 @LENGTH@ 64
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5285 @LENGTH@ 35
---------UPD MethodInvocation@@componentConfiguration.getConfigurer().isEnabled() @TO@ componentConfiguration.getCustomizer().isEnabled() @AT@ 5369 @LENGTH@ 50
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5369 @LENGTH@ 38


UPD ExpressionStatement@@Assignment:accessor=new RepositoryCorsConfigurationAccessor(mappings,repositories,NoOpStringValueResolver.INSTANCE) @TO@ Assignment:accessor=new RepositoryCorsConfigurationAccessor(mappings,NoOpStringValueResolver.INSTANCE,repositories) @AT@ 1876 @LENGTH@ 109
---UPD Assignment@@accessor=new RepositoryCorsConfigurationAccessor(mappings,repositories,NoOpStringValueResolver.INSTANCE) @TO@ accessor=new RepositoryCorsConfigurationAccessor(mappings,NoOpStringValueResolver.INSTANCE,repositories) @AT@ 1876 @LENGTH@ 108
------UPD ClassInstanceCreation@@RepositoryCorsConfigurationAccessor[mappings, repositories, NoOpStringValueResolver.INSTANCE] @TO@ RepositoryCorsConfigurationAccessor[mappings, NoOpStringValueResolver.INSTANCE, repositories] @AT@ 1887 @LENGTH@ 97
---------DEL SimpleName@@repositories @AT@ 1937 @LENGTH@ 12
---------INS SimpleName@@repositories @TO@ ClassInstanceCreation@@RepositoryCorsConfigurationAccessor[mappings, repositories, NoOpStringValueResolver.INSTANCE] @AT@ 2163 @LENGTH@ 12


UPD ReturnStatement@@ClassInstanceCreation:new JSONDropPartitionMessage(MS_SERVER_URL,MS_SERVICE_PRINCIPAL,table.getDbName(),table.getTableName(),getPartitionKeyValues(table,partitionsIterator),now()) @TO@ ClassInstanceCreation:new JSONDropPartitionMessage(MS_SERVER_URL,MS_SERVICE_PRINCIPAL,table,getPartitionKeyValues(table,partitionsIterator),now()) @AT@ 5448 @LENGTH@ 179
---UPD ClassInstanceCreation@@JSONDropPartitionMessage[MS_SERVER_URL, MS_SERVICE_PRINCIPAL, table.getDbName(), table.getTableName(), getPartitionKeyValues(table,partitionsIterator), now()] @TO@ JSONDropPartitionMessage[MS_SERVER_URL, MS_SERVICE_PRINCIPAL, table, getPartitionKeyValues(table,partitionsIterator), now()] @AT@ 5455 @LENGTH@ 171
------DEL MethodInvocation@@table.getDbName() @AT@ 5521 @LENGTH@ 17
---------DEL SimpleName@@Name:table @AT@ 5521 @LENGTH@ 5
---------DEL SimpleName@@MethodName:getDbName:[] @AT@ 5527 @LENGTH@ 11
------INS SimpleName@@table @TO@ ClassInstanceCreation@@JSONDropPartitionMessage[MS_SERVER_URL, MS_SERVICE_PRINCIPAL, table.getDbName(), table.getTableName(), getPartitionKeyValues(table,partitionsIterator), now()] @AT@ 5521 @LENGTH@ 5
------DEL MethodInvocation@@table.getTableName() @AT@ 5548 @LENGTH@ 20
---------DEL SimpleName@@Name:table @AT@ 5548 @LENGTH@ 5
---------DEL SimpleName@@MethodName:getTableName:[] @AT@ 5554 @LENGTH@ 14


INS MethodDeclaration@@public, String, MethodName:getDagIdentifierString,  @TO@ TypeDeclaration@@[public]SyncDagClient, DAGClient @AT@ 22622 @LENGTH@ 126
---INS Modifier@@public @TO@ MethodDeclaration@@public, String, MethodName:getDagIdentifierString,  @AT@ 22622 @LENGTH@ 6
---INS SimpleType@@String @TO@ MethodDeclaration@@public, String, MethodName:getDagIdentifierString,  @AT@ 22629 @LENGTH@ 6
---INS SimpleName@@MethodName:getDagIdentifierString @TO@ MethodDeclaration@@public, String, MethodName:getDagIdentifierString,  @AT@ 22636 @LENGTH@ 22
---INS ReturnStatement@@NullLiteral:null @TO@ MethodDeclaration@@public, String, MethodName:getDagIdentifierString,  @AT@ 22730 @LENGTH@ 12
------INS NullLiteral@@null @TO@ ReturnStatement@@NullLiteral:null @AT@ 22737 @LENGTH@ 4


UPD MethodDeclaration@@public, void, MethodName:createEmbeddableClass, @CliOption(key="class",optionContext=UPDATE_PROJECT,mandatory=true,help="The name of the embeddable class to create. If you consider it " + "necessary, you can also specify the package (base package can be " + "specified with `~`). Ex.: `--class ~.domain.MyEmbeddableClass`. "+ "You can specify module as well, if necessary. "+ "Ex.: `--class model:~.domain.MyEmbeddableClass`. When working "+ "with a multi-module project, if module is not specified the class "+ "will be created in the module which has the focus.") final JavaType name, @CliOption(key="serializable",mandatory=false,unspecifiedDefaultValue="false",specifiedDefaultValue="true",help="Whether the generated class should implement `java.io.Serializable`. " + "Default if option present: `true`; default if option not present: `false`.") final boolean serializable, @CliOption(key="permitReservedWords",mandatory=false,unspecifiedDefaultValue="false",specifiedDefaultValue="true",help="Indicates whether reserved words are ignored by Roo." + "Default if option present: `true`; default if option not present: `false`.") final boolean permitReservedWords,  @TO@ public, void, MethodName:createEmbeddableClass, @CliOption(key="class",optionContext=UPDATE_PROJECT,mandatory=true,help="The name of the embeddable class to create. If you consider it " + "necessary, you can also specify the package (base package can be " + "specified with `~`). Ex.: `--class ~.domain.MyEmbeddableClass`. "+ "You can specify module as well, if necessary. "+ "Ex.: `--class model:~.domain.MyEmbeddableClass`. When working "+ "with a multi-module project, if module is not specified the class "+ "will be created in the module which has the focus.") final JavaType name, @CliOption(key="serializable",mandatory=false,unspecifiedDefaultValue="false",specifiedDefaultValue="true",help="Whether the generated class should implement `java.io.Serializable`. " + "Default if option present: `true`; default if option not present: `false`.") final boolean serializable, @CliOption(key="permitReservedWords",mandatory=false,unspecifiedDefaultValue="false",specifiedDefaultValue="true",help="Indicates whether reserved words are ignored by Roo. " + "Default if option present: `true`; default if option not present: `false`.") final boolean permitReservedWords,  @AT@ 5581 @LENGTH@ 1538
---UPD SingleVariableDeclaration@@@CliOption(key="permitReservedWords",mandatory=false,unspecifiedDefaultValue="false",specifiedDefaultValue="true",help="Indicates whether reserved words are ignored by Roo." + "Default if option present: `true`; default if option not present: `false`.") final boolean permitReservedWords @TO@ @CliOption(key="permitReservedWords",mandatory=false,unspecifiedDefaultValue="false",specifiedDefaultValue="true",help="Indicates whether reserved words are ignored by Roo. " + "Default if option present: `true`; default if option not present: `false`.") final boolean permitReservedWords @AT@ 6622 @LENGTH@ 335


UPD VariableDeclarationStatement@@MongoPersistentProperty property=entity.getPersistentProperty("property"); @TO@ MongoPersistentProperty property=entity.getRequiredPersistentProperty("property"); @AT@ 4334 @LENGTH@ 76
---UPD VariableDeclarationFragment@@property=entity.getPersistentProperty("property") @TO@ property=entity.getRequiredPersistentProperty("property") @AT@ 4358 @LENGTH@ 51
------UPD MethodInvocation@@entity.getPersistentProperty("property") @TO@ entity.getRequiredPersistentProperty("property") @AT@ 4369 @LENGTH@ 40
---------UPD SimpleName@@MethodName:getPersistentProperty:["property"] @TO@ MethodName:getRequiredPersistentProperty:["property"] @AT@ 4376 @LENGTH@ 33


UPD ExpressionStatement@@MethodInvocation:Assert.notNull(p.cn) @TO@ MethodInvocation:Assert.notNull(p.cn,"person.sn cannot be null") @AT@ 3890 @LENGTH@ 21
---UPD MethodInvocation@@Assert.notNull(p.cn) @TO@ Assert.notNull(p.cn,"person.sn cannot be null") @AT@ 3890 @LENGTH@ 20
------UPD SimpleName@@MethodName:notNull:[p.cn] @TO@ MethodName:notNull:[p.cn, "person.sn cannot be null"] @AT@ 3897 @LENGTH@ 13
---------INS StringLiteral@@"person.sn cannot be null" @TO@ SimpleName@@MethodName:notNull:[p.cn] @AT@ 3911 @LENGTH@ 26


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled(); @AT@ 5240 @LENGTH@ 160
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5248 @LENGTH@ 151
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5248 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5265 @LENGTH@ 134
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 5265 @LENGTH@ 64
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5265 @LENGTH@ 35
---------UPD MethodInvocation@@componentConfiguration.getConfigurer().isEnabled() @TO@ componentConfiguration.getCustomizer().isEnabled() @AT@ 5349 @LENGTH@ 50
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5349 @LENGTH@ 38


INS MethodDeclaration@@Map<String,String>, MethodName:getMechanismProperties,  @TO@ TypeDeclaration@@SetMechanismPropertiesConfiguration, AuthenticationConfiguration @AT@ 1962 @LENGTH@ 68
---INS ParameterizedType@@Map<String,String> @TO@ MethodDeclaration@@Map<String,String>, MethodName:getMechanismProperties,  @AT@ 1942 @LENGTH@ 19
------INS SimpleType@@Map @TO@ ParameterizedType@@Map<String,String> @AT@ 1942 @LENGTH@ 3
------INS SimpleType@@String @TO@ ParameterizedType@@Map<String,String> @AT@ 1946 @LENGTH@ 6
------INS SimpleType@@String @TO@ ParameterizedType@@Map<String,String> @AT@ 1954 @LENGTH@ 6
---INS SimpleName@@MethodName:getMechanismProperties @TO@ MethodDeclaration@@Map<String,String>, MethodName:getMechanismProperties,  @AT@ 1962 @LENGTH@ 22
---INS ReturnStatement@@SimpleName:mechanismProperties @TO@ MethodDeclaration@@Map<String,String>, MethodName:getMechanismProperties,  @AT@ 1997 @LENGTH@ 27
------INS SimpleName@@mechanismProperties @TO@ ReturnStatement@@SimpleName:mechanismProperties @AT@ 2004 @LENGTH@ 19


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<XQueryComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<XQueryComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5429 @LENGTH@ 339
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 5433 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5433 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  ComponentCustomizer<XQueryComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ ThenBody:{  for (  ComponentCustomizer<XQueryComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5489 @LENGTH@ 279
------UPD EnhancedForStatement@@for (ComponentCustomizer<XQueryComponent> configurer : customizers) {  LOGGER.debug("Configure component {}, with configurer {}",component,configurer);  configurer.customize(component);} @TO@ for (ComponentCustomizer<XQueryComponent> customizer : customizers) {  LOGGER.debug("Configure component {}, with customizer {}",component,customizer);  customizer.customize(component);} @AT@ 5503 @LENGTH@ 255
---------UPD SingleVariableDeclaration@@ComponentCustomizer<XQueryComponent> configurer @TO@ ComponentCustomizer<XQueryComponent> customizer @AT@ 5508 @LENGTH@ 47
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5545 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5589 @LENGTH@ 106
------------UPD MethodInvocation@@LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5589 @LENGTH@ 105
---------------UPD SimpleName@@MethodName:debug:["Configure component {}, with configurer {}", component, configurer] @TO@ MethodName:debug:["Configure component {}, with customizer {}", component, customizer] @AT@ 5596 @LENGTH@ 98
------------------UPD StringLiteral@@"Configure component {}, with configurer {}" @TO@ "Configure component {}, with customizer {}" @AT@ 5602 @LENGTH@ 44
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5683 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(component) @TO@ MethodInvocation:customizer.customize(component) @AT@ 5712 @LENGTH@ 32
------------UPD MethodInvocation@@configurer.customize(component) @TO@ customizer.customize(component) @AT@ 5712 @LENGTH@ 31
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5712 @LENGTH@ 10


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && languageConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && languageConfiguration.getCustomizer().isEnabled(); @AT@ 4575 @LENGTH@ 159
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && languageConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && languageConfiguration.getCustomizer().isEnabled() @AT@ 4583 @LENGTH@ 150
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 4583 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && languageConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && languageConfiguration.getCustomizer().isEnabled() @AT@ 4600 @LENGTH@ 133
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 4600 @LENGTH@ 64
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 4600 @LENGTH@ 35
---------UPD MethodInvocation@@languageConfiguration.getConfigurer().isEnabled() @TO@ languageConfiguration.getCustomizer().isEnabled() @AT@ 4684 @LENGTH@ 49
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 4684 @LENGTH@ 37


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled(); @AT@ 5277 @LENGTH@ 160
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5285 @LENGTH@ 151
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5285 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5302 @LENGTH@ 134
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 5302 @LENGTH@ 64
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5302 @LENGTH@ 35
---------UPD MethodInvocation@@componentConfiguration.getConfigurer().isEnabled() @TO@ componentConfiguration.getCustomizer().isEnabled() @AT@ 5386 @LENGTH@ 50
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5386 @LENGTH@ 38


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<LdapComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<LdapComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5395 @LENGTH@ 337
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 5399 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5399 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  ComponentCustomizer<LdapComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ ThenBody:{  for (  ComponentCustomizer<LdapComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5455 @LENGTH@ 277
------UPD EnhancedForStatement@@for (ComponentCustomizer<LdapComponent> configurer : customizers) {  LOGGER.debug("Configure component {}, with configurer {}",component,configurer);  configurer.customize(component);} @TO@ for (ComponentCustomizer<LdapComponent> customizer : customizers) {  LOGGER.debug("Configure component {}, with customizer {}",component,customizer);  customizer.customize(component);} @AT@ 5469 @LENGTH@ 253
---------UPD SingleVariableDeclaration@@ComponentCustomizer<LdapComponent> configurer @TO@ ComponentCustomizer<LdapComponent> customizer @AT@ 5474 @LENGTH@ 45
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5509 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5553 @LENGTH@ 106
------------UPD MethodInvocation@@LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5553 @LENGTH@ 105
---------------UPD SimpleName@@MethodName:debug:["Configure component {}, with configurer {}", component, configurer] @TO@ MethodName:debug:["Configure component {}, with customizer {}", component, customizer] @AT@ 5560 @LENGTH@ 98
------------------UPD StringLiteral@@"Configure component {}, with configurer {}" @TO@ "Configure component {}, with customizer {}" @AT@ 5566 @LENGTH@ 44
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5647 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(component) @TO@ MethodInvocation:customizer.customize(component) @AT@ 5676 @LENGTH@ 32
------------UPD MethodInvocation@@configurer.customize(component) @TO@ customizer.customize(component) @AT@ 5676 @LENGTH@ 31
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5676 @LENGTH@ 10


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled(); @AT@ 5370 @LENGTH@ 160
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5378 @LENGTH@ 151
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5378 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5395 @LENGTH@ 134
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 5395 @LENGTH@ 64
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5395 @LENGTH@ 35
---------UPD MethodInvocation@@componentConfiguration.getConfigurer().isEnabled() @TO@ componentConfiguration.getCustomizer().isEnabled() @AT@ 5479 @LENGTH@ 50
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5479 @LENGTH@ 38


UPD VariableDeclarationStatement@@int elementsToSkip=near.getSkip() != null ? near.getSkip() : 0; @TO@ long elementsToSkip=near.getSkip() != null ? near.getSkip() : 0; @AT@ 27252 @LENGTH@ 65
---UPD PrimitiveType@@int @TO@ long @AT@ 27252 @LENGTH@ 3


INS MethodDeclaration@@private, voidMethodName:GitHelper,  @TO@ TypeDeclaration@@[public]GitHelper,  @AT@ 1073 @LENGTH@ 27
---INS Modifier@@private @TO@ MethodDeclaration@@private, voidMethodName:GitHelper,  @AT@ 1073 @LENGTH@ 7
---INS SimpleName@@MethodName:GitHelper @TO@ MethodDeclaration@@private, voidMethodName:GitHelper,  @AT@ 1081 @LENGTH@ 9


UPD ExpressionStatement@@MethodInvocation:Assert.notNull(annotationMetadataExtractor) @TO@ MethodInvocation:Assert.notNull(annotationMetadataExtractor,"annotationMetadataExtractor cannot be null") @AT@ 1983 @LENGTH@ 44
---UPD MethodInvocation@@Assert.notNull(annotationMetadataExtractor) @TO@ Assert.notNull(annotationMetadataExtractor,"annotationMetadataExtractor cannot be null") @AT@ 1983 @LENGTH@ 43
------UPD SimpleName@@MethodName:notNull:[annotationMetadataExtractor] @TO@ MethodName:notNull:[annotationMetadataExtractor, "annotationMetadataExtractor cannot be null"] @AT@ 1990 @LENGTH@ 36
---------INS StringLiteral@@"annotationMetadataExtractor cannot be null" @TO@ SimpleName@@MethodName:notNull:[annotationMetadataExtractor] @AT@ 2027 @LENGTH@ 44


INS MethodDeclaration@@public, void, MethodName:testLongArgWithoutEqual, Exception,  @TO@ TypeDeclaration@@[public]CommandLineTest,  @AT@ 3497 @LENGTH@ 359
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testLongArgWithoutEqual, Exception,  @AT@ 3497 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testLongArgWithoutEqual, Exception,  @AT@ 3504 @LENGTH@ 4
---INS SimpleName@@MethodName:testLongArgWithoutEqual @TO@ MethodDeclaration@@public, void, MethodName:testLongArgWithoutEqual, Exception,  @AT@ 3509 @LENGTH@ 23
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:testLongArgWithoutEqual, Exception,  @AT@ 3542 @LENGTH@ 9
---INS VariableDeclarationStatement@@String fileName="my.properties"; @TO@ MethodDeclaration@@public, void, MethodName:testLongArgWithoutEqual, Exception,  @AT@ 3562 @LENGTH@ 34
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String fileName="my.properties"; @AT@ 3562 @LENGTH@ 6
------INS VariableDeclarationFragment@@fileName="my.properties" @TO@ VariableDeclarationStatement@@String fileName="my.properties"; @AT@ 3569 @LENGTH@ 26
---------INS SimpleName@@fileName @TO@ VariableDeclarationFragment@@fileName="my.properties" @AT@ 3569 @LENGTH@ 8
---------INS StringLiteral@@"my.properties" @TO@ VariableDeclarationFragment@@fileName="my.properties" @AT@ 3580 @LENGTH@ 15
---INS VariableDeclarationStatement@@String expectedPath=new File(System.getProperty("user.dir"),fileName).toURL().toString(); @TO@ MethodDeclaration@@public, void, MethodName:testLongArgWithoutEqual, Exception,  @AT@ 3605 @LENGTH@ 92
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String expectedPath=new File(System.getProperty("user.dir"),fileName).toURL().toString(); @AT@ 3605 @LENGTH@ 6
------INS VariableDeclarationFragment@@expectedPath=new File(System.getProperty("user.dir"),fileName).toURL().toString() @TO@ VariableDeclarationStatement@@String expectedPath=new File(System.getProperty("user.dir"),fileName).toURL().toString(); @AT@ 3612 @LENGTH@ 84
---------INS SimpleName@@expectedPath @TO@ VariableDeclarationFragment@@expectedPath=new File(System.getProperty("user.dir"),fileName).toURL().toString() @AT@ 3612 @LENGTH@ 12
---------INS MethodInvocation@@new File(System.getProperty("user.dir"),fileName).toURL().toString() @TO@ VariableDeclarationFragment@@expectedPath=new File(System.getProperty("user.dir"),fileName).toURL().toString() @AT@ 3627 @LENGTH@ 69
------------INS MethodInvocation@@MethodName:toURL:[] @TO@ MethodInvocation@@new File(System.getProperty("user.dir"),fileName).toURL().toString() @AT@ 3627 @LENGTH@ 58
------------INS ClassInstanceCreation@@File[System.getProperty("user.dir"), fileName] @TO@ MethodInvocation@@new File(System.getProperty("user.dir"),fileName).toURL().toString() @AT@ 3627 @LENGTH@ 50
---------------INS New@@new @TO@ ClassInstanceCreation@@File[System.getProperty("user.dir"), fileName] @AT@ 3627 @LENGTH@ 3
---------------INS SimpleType@@File @TO@ ClassInstanceCreation@@File[System.getProperty("user.dir"), fileName] @AT@ 3631 @LENGTH@ 4
---------------INS MethodInvocation@@System.getProperty("user.dir") @TO@ ClassInstanceCreation@@File[System.getProperty("user.dir"), fileName] @AT@ 3636 @LENGTH@ 30
------------------INS SimpleName@@Name:System @TO@ MethodInvocation@@System.getProperty("user.dir") @AT@ 3636 @LENGTH@ 6
------------------INS SimpleName@@MethodName:getProperty:["user.dir"] @TO@ MethodInvocation@@System.getProperty("user.dir") @AT@ 3643 @LENGTH@ 23
---------------------INS StringLiteral@@"user.dir" @TO@ SimpleName@@MethodName:getProperty:["user.dir"] @AT@ 3655 @LENGTH@ 10
---------------INS SimpleName@@fileName @TO@ ClassInstanceCreation@@File[System.getProperty("user.dir"), fileName] @AT@ 3668 @LENGTH@ 8
------------INS SimpleName@@MethodName:toString:[] @TO@ MethodInvocation@@new File(System.getProperty("user.dir"),fileName).toURL().toString() @AT@ 3686 @LENGTH@ 10
---INS VariableDeclarationStatement@@CommandLine cmd=CommandLine.parse("--properties",fileName); @TO@ MethodDeclaration@@public, void, MethodName:testLongArgWithoutEqual, Exception,  @AT@ 3707 @LENGTH@ 62
------INS SimpleType@@CommandLine @TO@ VariableDeclarationStatement@@CommandLine cmd=CommandLine.parse("--properties",fileName); @AT@ 3707 @LENGTH@ 11
------INS VariableDeclarationFragment@@cmd=CommandLine.parse("--properties",fileName) @TO@ VariableDeclarationStatement@@CommandLine cmd=CommandLine.parse("--properties",fileName); @AT@ 3719 @LENGTH@ 49
---------INS SimpleName@@cmd @TO@ VariableDeclarationFragment@@cmd=CommandLine.parse("--properties",fileName) @AT@ 3719 @LENGTH@ 3
---------INS MethodInvocation@@CommandLine.parse("--properties",fileName) @TO@ VariableDeclarationFragment@@cmd=CommandLine.parse("--properties",fileName) @AT@ 3725 @LENGTH@ 43
------------INS SimpleName@@Name:CommandLine @TO@ MethodInvocation@@CommandLine.parse("--properties",fileName) @AT@ 3725 @LENGTH@ 11
------------INS SimpleName@@MethodName:parse:["--properties", fileName] @TO@ MethodInvocation@@CommandLine.parse("--properties",fileName) @AT@ 3737 @LENGTH@ 31
---------------INS StringLiteral@@"--properties" @TO@ SimpleName@@MethodName:parse:["--properties", fileName] @AT@ 3743 @LENGTH@ 14
---------------INS SimpleName@@fileName @TO@ SimpleName@@MethodName:parse:["--properties", fileName] @AT@ 3759 @LENGTH@ 8
---INS ExpressionStatement@@MethodInvocation:assertThat(cmd.get(PROPERTIES_URL).toString()).isEqualTo(expectedPath) @TO@ MethodDeclaration@@public, void, MethodName:testLongArgWithoutEqual, Exception,  @AT@ 3779 @LENGTH@ 71
------INS MethodInvocation@@assertThat(cmd.get(PROPERTIES_URL).toString()).isEqualTo(expectedPath) @TO@ ExpressionStatement@@MethodInvocation:assertThat(cmd.get(PROPERTIES_URL).toString()).isEqualTo(expectedPath) @AT@ 3779 @LENGTH@ 70
---------INS MethodInvocation@@MethodName:assertThat:[cmd.get(PROPERTIES_URL).toString()] @TO@ MethodInvocation@@assertThat(cmd.get(PROPERTIES_URL).toString()).isEqualTo(expectedPath) @AT@ 3779 @LENGTH@ 46
------------INS MethodInvocation@@cmd.get(PROPERTIES_URL).toString() @TO@ MethodInvocation@@MethodName:assertThat:[cmd.get(PROPERTIES_URL).toString()] @AT@ 3790 @LENGTH@ 34
---------------INS MethodInvocation@@MethodName:get:[PROPERTIES_URL] @TO@ MethodInvocation@@cmd.get(PROPERTIES_URL).toString() @AT@ 3790 @LENGTH@ 23
------------------INS SimpleName@@PROPERTIES_URL @TO@ MethodInvocation@@MethodName:get:[PROPERTIES_URL] @AT@ 3798 @LENGTH@ 14
---------------INS SimpleName@@Name:cmd @TO@ MethodInvocation@@cmd.get(PROPERTIES_URL).toString() @AT@ 3790 @LENGTH@ 3
---------------INS SimpleName@@MethodName:toString:[] @TO@ MethodInvocation@@cmd.get(PROPERTIES_URL).toString() @AT@ 3814 @LENGTH@ 10
---------INS SimpleName@@MethodName:isEqualTo:[expectedPath] @TO@ MethodInvocation@@assertThat(cmd.get(PROPERTIES_URL).toString()).isEqualTo(expectedPath) @AT@ 3826 @LENGTH@ 23
------------INS SimpleName@@expectedPath @TO@ SimpleName@@MethodName:isEqualTo:[expectedPath] @AT@ 3836 @LENGTH@ 12


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<AvroComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<AvroComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5395 @LENGTH@ 337
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 5399 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5399 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  ComponentCustomizer<AvroComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ ThenBody:{  for (  ComponentCustomizer<AvroComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5455 @LENGTH@ 277
------UPD EnhancedForStatement@@for (ComponentCustomizer<AvroComponent> configurer : customizers) {  LOGGER.debug("Configure component {}, with configurer {}",component,configurer);  configurer.customize(component);} @TO@ for (ComponentCustomizer<AvroComponent> customizer : customizers) {  LOGGER.debug("Configure component {}, with customizer {}",component,customizer);  customizer.customize(component);} @AT@ 5469 @LENGTH@ 253
---------UPD SingleVariableDeclaration@@ComponentCustomizer<AvroComponent> configurer @TO@ ComponentCustomizer<AvroComponent> customizer @AT@ 5474 @LENGTH@ 45
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5509 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5553 @LENGTH@ 106
------------UPD MethodInvocation@@LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5553 @LENGTH@ 105
---------------UPD SimpleName@@MethodName:debug:["Configure component {}, with configurer {}", component, configurer] @TO@ MethodName:debug:["Configure component {}, with customizer {}", component, customizer] @AT@ 5560 @LENGTH@ 98
------------------UPD StringLiteral@@"Configure component {}, with configurer {}" @TO@ "Configure component {}, with customizer {}" @AT@ 5566 @LENGTH@ 44
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5647 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(component) @TO@ MethodInvocation:customizer.customize(component) @AT@ 5676 @LENGTH@ 32
------------UPD MethodInvocation@@configurer.customize(component) @TO@ customizer.customize(component) @AT@ 5676 @LENGTH@ 31
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5676 @LENGTH@ 10


UPD FieldDeclaration@@private, static, long, [serialVersionUID=1L] @TO@ private, static, final, long, [serialVersionUID=1L] @AT@ 1226 @LENGTH@ 42
---INS Modifier@@final @TO@ FieldDeclaration@@private, static, long, [serialVersionUID=1L] @AT@ 1241 @LENGTH@ 5


INS MethodDeclaration@@private, static, void, MethodName:assertReturnTypeAssignable, Method method, Class<?>... types,  @TO@ TypeDeclaration@@[public]QueryMethod,  @AT@ 8104 @LENGTH@ 633
---INS Modifier@@private @TO@ MethodDeclaration@@private, static, void, MethodName:assertReturnTypeAssignable, Method method, Class<?>... types,  @AT@ 8104 @LENGTH@ 7
---INS Modifier@@static @TO@ MethodDeclaration@@private, static, void, MethodName:assertReturnTypeAssignable, Method method, Class<?>... types,  @AT@ 8112 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@private, static, void, MethodName:assertReturnTypeAssignable, Method method, Class<?>... types,  @AT@ 8119 @LENGTH@ 4
---INS SimpleName@@MethodName:assertReturnTypeAssignable @TO@ MethodDeclaration@@private, static, void, MethodName:assertReturnTypeAssignable, Method method, Class<?>... types,  @AT@ 8124 @LENGTH@ 26
---INS SingleVariableDeclaration@@Method method @TO@ MethodDeclaration@@private, static, void, MethodName:assertReturnTypeAssignable, Method method, Class<?>... types,  @AT@ 8151 @LENGTH@ 13
------INS SimpleType@@Method @TO@ SingleVariableDeclaration@@Method method @AT@ 8151 @LENGTH@ 6
------INS SimpleName@@method @TO@ SingleVariableDeclaration@@Method method @AT@ 8158 @LENGTH@ 6
---INS SingleVariableDeclaration@@Class<?>... types @TO@ MethodDeclaration@@private, static, void, MethodName:assertReturnTypeAssignable, Method method, Class<?>... types,  @AT@ 8166 @LENGTH@ 17
------INS ParameterizedType@@Class<?> @TO@ SingleVariableDeclaration@@Class<?>... types @AT@ 8166 @LENGTH@ 8
---------INS SimpleType@@Class @TO@ ParameterizedType@@Class<?> @AT@ 8166 @LENGTH@ 5
---------INS WildcardType@@? @TO@ ParameterizedType@@Class<?> @AT@ 8172 @LENGTH@ 1
------INS SimpleName@@types @TO@ SingleVariableDeclaration@@Class<?>... types @AT@ 8178 @LENGTH@ 5
---INS ExpressionStatement@@MethodInvocation:Assert.notNull(method,"Method must not be null!") @TO@ MethodDeclaration@@private, static, void, MethodName:assertReturnTypeAssignable, Method method, Class<?>... types,  @AT@ 8190 @LENGTH@ 51
------INS MethodInvocation@@Assert.notNull(method,"Method must not be null!") @TO@ ExpressionStatement@@MethodInvocation:Assert.notNull(method,"Method must not be null!") @AT@ 8190 @LENGTH@ 50
---------INS SimpleName@@Name:Assert @TO@ MethodInvocation@@Assert.notNull(method,"Method must not be null!") @AT@ 8190 @LENGTH@ 6
---------INS SimpleName@@MethodName:notNull:[method, "Method must not be null!"] @TO@ MethodInvocation@@Assert.notNull(method,"Method must not be null!") @AT@ 8197 @LENGTH@ 43
------------INS SimpleName@@method @TO@ SimpleName@@MethodName:notNull:[method, "Method must not be null!"] @AT@ 8205 @LENGTH@ 6
------------INS StringLiteral@@"Method must not be null!" @TO@ SimpleName@@MethodName:notNull:[method, "Method must not be null!"] @AT@ 8213 @LENGTH@ 26
---INS ExpressionStatement@@MethodInvocation:Assert.notEmpty(types,"Types must not be null or empty!") @TO@ MethodDeclaration@@private, static, void, MethodName:assertReturnTypeAssignable, Method method, Class<?>... types,  @AT@ 8244 @LENGTH@ 59
------INS MethodInvocation@@Assert.notEmpty(types,"Types must not be null or empty!") @TO@ ExpressionStatement@@MethodInvocation:Assert.notEmpty(types,"Types must not be null or empty!") @AT@ 8244 @LENGTH@ 58
---------INS SimpleName@@Name:Assert @TO@ MethodInvocation@@Assert.notEmpty(types,"Types must not be null or empty!") @AT@ 8244 @LENGTH@ 6
---------INS SimpleName@@MethodName:notEmpty:[types, "Types must not be null or empty!"] @TO@ MethodInvocation@@Assert.notEmpty(types,"Types must not be null or empty!") @AT@ 8251 @LENGTH@ 51
------------INS SimpleName@@types @TO@ SimpleName@@MethodName:notEmpty:[types, "Types must not be null or empty!"] @AT@ 8260 @LENGTH@ 5
------------INS StringLiteral@@"Types must not be null or empty!" @TO@ SimpleName@@MethodName:notEmpty:[types, "Types must not be null or empty!"] @AT@ 8267 @LENGTH@ 34
---INS VariableDeclarationStatement@@TypeInformation<?> returnType=ClassTypeInformation.fromReturnTypeOf(method); @TO@ MethodDeclaration@@private, static, void, MethodName:assertReturnTypeAssignable, Method method, Class<?>... types,  @AT@ 8307 @LENGTH@ 78
------INS ParameterizedType@@TypeInformation<?> @TO@ VariableDeclarationStatement@@TypeInformation<?> returnType=ClassTypeInformation.fromReturnTypeOf(method); @AT@ 8307 @LENGTH@ 18
---------INS SimpleType@@TypeInformation @TO@ ParameterizedType@@TypeInformation<?> @AT@ 8307 @LENGTH@ 15
---------INS WildcardType@@? @TO@ ParameterizedType@@TypeInformation<?> @AT@ 8323 @LENGTH@ 1
------INS VariableDeclarationFragment@@returnType=ClassTypeInformation.fromReturnTypeOf(method) @TO@ VariableDeclarationStatement@@TypeInformation<?> returnType=ClassTypeInformation.fromReturnTypeOf(method); @AT@ 8326 @LENGTH@ 58
---------INS SimpleName@@returnType @TO@ VariableDeclarationFragment@@returnType=ClassTypeInformation.fromReturnTypeOf(method) @AT@ 8326 @LENGTH@ 10
---------INS MethodInvocation@@ClassTypeInformation.fromReturnTypeOf(method) @TO@ VariableDeclarationFragment@@returnType=ClassTypeInformation.fromReturnTypeOf(method) @AT@ 8339 @LENGTH@ 45
------------INS SimpleName@@Name:ClassTypeInformation @TO@ MethodInvocation@@ClassTypeInformation.fromReturnTypeOf(method) @AT@ 8339 @LENGTH@ 20
------------INS SimpleName@@MethodName:fromReturnTypeOf:[method] @TO@ MethodInvocation@@ClassTypeInformation.fromReturnTypeOf(method) @AT@ 8360 @LENGTH@ 24
---------------INS SimpleName@@method @TO@ SimpleName@@MethodName:fromReturnTypeOf:[method] @AT@ 8377 @LENGTH@ 6
---INS ExpressionStatement@@Assignment:returnType=QueryExecutionConverters.isSingleValue(returnType.getType()) ? returnType.getComponentType() : returnType @TO@ MethodDeclaration@@private, static, void, MethodName:assertReturnTypeAssignable, Method method, Class<?>... types,  @AT@ 8388 @LENGTH@ 119
------INS Assignment@@returnType=QueryExecutionConverters.isSingleValue(returnType.getType()) ? returnType.getComponentType() : returnType @TO@ ExpressionStatement@@Assignment:returnType=QueryExecutionConverters.isSingleValue(returnType.getType()) ? returnType.getComponentType() : returnType @AT@ 8388 @LENGTH@ 118
---------INS SimpleName@@returnType @TO@ Assignment@@returnType=QueryExecutionConverters.isSingleValue(returnType.getType()) ? returnType.getComponentType() : returnType @AT@ 8388 @LENGTH@ 10
---------INS Operator@@= @TO@ Assignment@@returnType=QueryExecutionConverters.isSingleValue(returnType.getType()) ? returnType.getComponentType() : returnType @AT@ 8398 @LENGTH@ 1
---------INS ConditionalExpression@@QueryExecutionConverters.isSingleValue(returnType.getType()) ? returnType.getComponentType() : returnType @TO@ Assignment@@returnType=QueryExecutionConverters.isSingleValue(returnType.getType()) ? returnType.getComponentType() : returnType @AT@ 8401 @LENGTH@ 105
------------INS MethodInvocation@@QueryExecutionConverters.isSingleValue(returnType.getType()) @TO@ ConditionalExpression@@QueryExecutionConverters.isSingleValue(returnType.getType()) ? returnType.getComponentType() : returnType @AT@ 8401 @LENGTH@ 60
---------------INS SimpleName@@Name:QueryExecutionConverters @TO@ MethodInvocation@@QueryExecutionConverters.isSingleValue(returnType.getType()) @AT@ 8401 @LENGTH@ 24
---------------INS SimpleName@@MethodName:isSingleValue:[returnType.getType()] @TO@ MethodInvocation@@QueryExecutionConverters.isSingleValue(returnType.getType()) @AT@ 8426 @LENGTH@ 35
------------------INS MethodInvocation@@returnType.getType() @TO@ SimpleName@@MethodName:isSingleValue:[returnType.getType()] @AT@ 8440 @LENGTH@ 20
---------------------INS SimpleName@@Name:returnType @TO@ MethodInvocation@@returnType.getType() @AT@ 8440 @LENGTH@ 10
---------------------INS SimpleName@@MethodName:getType:[] @TO@ MethodInvocation@@returnType.getType() @AT@ 8451 @LENGTH@ 9
------------INS MethodInvocation@@returnType.getComponentType() @TO@ ConditionalExpression@@QueryExecutionConverters.isSingleValue(returnType.getType()) ? returnType.getComponentType() : returnType @AT@ 8464 @LENGTH@ 29
---------------INS SimpleName@@Name:returnType @TO@ MethodInvocation@@returnType.getComponentType() @AT@ 8464 @LENGTH@ 10
---------------INS SimpleName@@MethodName:getComponentType:[] @TO@ MethodInvocation@@returnType.getComponentType() @AT@ 8475 @LENGTH@ 18
------------INS SimpleName@@returnType @TO@ ConditionalExpression@@QueryExecutionConverters.isSingleValue(returnType.getType()) ? returnType.getComponentType() : returnType @AT@ 8496 @LENGTH@ 10
---INS EnhancedForStatement@@for (Class<?> type : types) {  if (type.isAssignableFrom(returnType.getType())) {    return;  }} @TO@ MethodDeclaration@@private, static, void, MethodName:assertReturnTypeAssignable, Method method, Class<?>... types,  @AT@ 8511 @LENGTH@ 104
------INS SingleVariableDeclaration@@Class<?> type @TO@ EnhancedForStatement@@for (Class<?> type : types) {  if (type.isAssignableFrom(returnType.getType())) {    return;  }} @AT@ 8516 @LENGTH@ 13
---------INS ParameterizedType@@Class<?> @TO@ SingleVariableDeclaration@@Class<?> type @AT@ 8516 @LENGTH@ 8
------------INS SimpleType@@Class @TO@ ParameterizedType@@Class<?> @AT@ 8516 @LENGTH@ 5
------------INS WildcardType@@? @TO@ ParameterizedType@@Class<?> @AT@ 8522 @LENGTH@ 1
---------INS SimpleName@@type @TO@ SingleVariableDeclaration@@Class<?> type @AT@ 8525 @LENGTH@ 4
------INS SimpleName@@types @TO@ EnhancedForStatement@@for (Class<?> type : types) {  if (type.isAssignableFrom(returnType.getType())) {    return;  }} @AT@ 8532 @LENGTH@ 5
------INS IfStatement@@if (type.isAssignableFrom(returnType.getType())) {  return;} @TO@ EnhancedForStatement@@for (Class<?> type : types) {  if (type.isAssignableFrom(returnType.getType())) {    return;  }} @AT@ 8544 @LENGTH@ 67
---------INS MethodInvocation@@type.isAssignableFrom(returnType.getType()) @TO@ IfStatement@@if (type.isAssignableFrom(returnType.getType())) {  return;} @AT@ 8548 @LENGTH@ 43
------------INS SimpleName@@Name:type @TO@ MethodInvocation@@type.isAssignableFrom(returnType.getType()) @AT@ 8548 @LENGTH@ 4
------------INS SimpleName@@MethodName:isAssignableFrom:[returnType.getType()] @TO@ MethodInvocation@@type.isAssignableFrom(returnType.getType()) @AT@ 8553 @LENGTH@ 38
---------------INS MethodInvocation@@returnType.getType() @TO@ SimpleName@@MethodName:isAssignableFrom:[returnType.getType()] @AT@ 8570 @LENGTH@ 20
------------------INS SimpleName@@Name:returnType @TO@ MethodInvocation@@returnType.getType() @AT@ 8570 @LENGTH@ 10
------------------INS SimpleName@@MethodName:getType:[] @TO@ MethodInvocation@@returnType.getType() @AT@ 8581 @LENGTH@ 9
---------INS Block@@ThenBody:{  return;} @TO@ IfStatement@@if (type.isAssignableFrom(returnType.getType())) {  return;} @AT@ 8593 @LENGTH@ 18
------------INS ReturnStatement@@ @TO@ Block@@ThenBody:{  return;} @AT@ 8599 @LENGTH@ 7
---INS ThrowStatement@@ClassInstanceCreation:new IllegalStateException("Method has to have one of the following return types! " + Arrays.toString(types)) @TO@ MethodDeclaration@@private, static, void, MethodName:assertReturnTypeAssignable, Method method, Class<?>... types,  @AT@ 8619 @LENGTH@ 115
------INS ClassInstanceCreation@@IllegalStateException["Method has to have one of the following return types! " + Arrays.toString(types)] @TO@ ThrowStatement@@ClassInstanceCreation:new IllegalStateException("Method has to have one of the following return types! " + Arrays.toString(types)) @AT@ 8625 @LENGTH@ 108
---------INS New@@new @TO@ ClassInstanceCreation@@IllegalStateException["Method has to have one of the following return types! " + Arrays.toString(types)] @AT@ 8625 @LENGTH@ 3
---------INS SimpleType@@IllegalStateException @TO@ ClassInstanceCreation@@IllegalStateException["Method has to have one of the following return types! " + Arrays.toString(types)] @AT@ 8629 @LENGTH@ 21
---------INS InfixExpression@@"Method has to have one of the following return types! " + Arrays.toString(types) @TO@ ClassInstanceCreation@@IllegalStateException["Method has to have one of the following return types! " + Arrays.toString(types)] @AT@ 8651 @LENGTH@ 81
------------INS StringLiteral@@"Method has to have one of the following return types! " @TO@ InfixExpression@@"Method has to have one of the following return types! " + Arrays.toString(types) @AT@ 8651 @LENGTH@ 56
------------INS Operator@@+ @TO@ InfixExpression@@"Method has to have one of the following return types! " + Arrays.toString(types) @AT@ 8707 @LENGTH@ 1
------------INS MethodInvocation@@Arrays.toString(types) @TO@ InfixExpression@@"Method has to have one of the following return types! " + Arrays.toString(types) @AT@ 8710 @LENGTH@ 22
---------------INS SimpleName@@Name:Arrays @TO@ MethodInvocation@@Arrays.toString(types) @AT@ 8710 @LENGTH@ 6
---------------INS SimpleName@@MethodName:toString:[types] @TO@ MethodInvocation@@Arrays.toString(types) @AT@ 8717 @LENGTH@ 15
------------------INS SimpleName@@types @TO@ SimpleName@@MethodName:toString:[types] @AT@ 8726 @LENGTH@ 5


UPD ExpressionStatement@@MethodInvocation:pooledConnectionFactory(new PooledConnectionFactory("activemq-ra").entries(Arrays.asList("java:/JmsXA","java:jboss/DefaultJMSConnectionFactory")).connectors(Collections.singletonList("in-vm")).transaction("xa")) @TO@ MethodInvocation:pooledConnectionFactory(new PooledConnectionFactory("activemq-ra").entry("java:jboss/DefaultJMSConnectionFactory").entry("java:/JmsXA").connector("in-vm").transaction("xa")) @AT@ 2180 @LENGTH@ 264
---UPD MethodInvocation@@pooledConnectionFactory(new PooledConnectionFactory("activemq-ra").entries(Arrays.asList("java:/JmsXA","java:jboss/DefaultJMSConnectionFactory")).connectors(Collections.singletonList("in-vm")).transaction("xa")) @TO@ pooledConnectionFactory(new PooledConnectionFactory("activemq-ra").entry("java:jboss/DefaultJMSConnectionFactory").entry("java:/JmsXA").connector("in-vm").transaction("xa")) @AT@ 2180 @LENGTH@ 263
------UPD SimpleName@@MethodName:pooledConnectionFactory:[new PooledConnectionFactory("activemq-ra").entries(Arrays.asList("java:/JmsXA","java:jboss/DefaultJMSConnectionFactory")).connectors(Collections.singletonList("in-vm")).transaction("xa")] @TO@ MethodName:pooledConnectionFactory:[new PooledConnectionFactory("activemq-ra").entry("java:jboss/DefaultJMSConnectionFactory").entry("java:/JmsXA").connector("in-vm").transaction("xa")] @AT@ 2180 @LENGTH@ 263
---------UPD MethodInvocation@@new PooledConnectionFactory("activemq-ra").entries(Arrays.asList("java:/JmsXA","java:jboss/DefaultJMSConnectionFactory")).connectors(Collections.singletonList("in-vm")).transaction("xa") @TO@ new PooledConnectionFactory("activemq-ra").entry("java:jboss/DefaultJMSConnectionFactory").entry("java:/JmsXA").connector("in-vm").transaction("xa") @AT@ 2204 @LENGTH@ 238
------------INS MethodInvocation@@MethodName:entry:["java:/JmsXA"] @TO@ MethodInvocation@@new PooledConnectionFactory("activemq-ra").entries(Arrays.asList("java:/JmsXA","java:jboss/DefaultJMSConnectionFactory")).connectors(Collections.singletonList("in-vm")).transaction("xa") @AT@ 2147 @LENGTH@ 145
---------------INS StringLiteral@@"java:/JmsXA" @TO@ MethodInvocation@@MethodName:entry:["java:/JmsXA"] @AT@ 2278 @LENGTH@ 13
------------UPD MethodInvocation@@MethodName:connectors:[Collections.singletonList("in-vm")] @TO@ MethodName:connector:["in-vm"] @AT@ 2204 @LENGTH@ 203
---------------INS StringLiteral@@"in-vm" @TO@ MethodInvocation@@MethodName:connectors:[Collections.singletonList("in-vm")] @AT@ 2320 @LENGTH@ 7
---------------DEL MethodInvocation@@Collections.singletonList("in-vm") @AT@ 2372 @LENGTH@ 34
------------------DEL SimpleName@@Name:Collections @AT@ 2372 @LENGTH@ 11
------------------DEL SimpleName@@MethodName:singletonList:["in-vm"] @AT@ 2384 @LENGTH@ 22
---------------------DEL StringLiteral@@"in-vm" @AT@ 2398 @LENGTH@ 7
------------UPD MethodInvocation@@MethodName:entries:[Arrays.asList("java:/JmsXA","java:jboss/DefaultJMSConnectionFactory")] @TO@ MethodName:entry:["java:jboss/DefaultJMSConnectionFactory"] @AT@ 2204 @LENGTH@ 139
---------------INS StringLiteral@@"java:jboss/DefaultJMSConnectionFactory" @TO@ MethodInvocation@@MethodName:entries:[Arrays.asList("java:/JmsXA","java:jboss/DefaultJMSConnectionFactory")] @AT@ 2213 @LENGTH@ 40
---------------DEL MethodInvocation@@Arrays.asList("java:/JmsXA","java:jboss/DefaultJMSConnectionFactory") @AT@ 2272 @LENGTH@ 70
------------------DEL SimpleName@@Name:Arrays @AT@ 2272 @LENGTH@ 6
------------------DEL SimpleName@@MethodName:asList:["java:/JmsXA", "java:jboss/DefaultJMSConnectionFactory"] @AT@ 2279 @LENGTH@ 63
---------------------DEL StringLiteral@@"java:/JmsXA" @AT@ 2286 @LENGTH@ 13
---------------------DEL StringLiteral@@"java:jboss/DefaultJMSConnectionFactory" @AT@ 2301 @LENGTH@ 40


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<JIRAComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<JIRAComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5395 @LENGTH@ 337
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 5399 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5399 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  ComponentCustomizer<JIRAComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ ThenBody:{  for (  ComponentCustomizer<JIRAComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5455 @LENGTH@ 277
------UPD EnhancedForStatement@@for (ComponentCustomizer<JIRAComponent> configurer : customizers) {  LOGGER.debug("Configure component {}, with configurer {}",component,configurer);  configurer.customize(component);} @TO@ for (ComponentCustomizer<JIRAComponent> customizer : customizers) {  LOGGER.debug("Configure component {}, with customizer {}",component,customizer);  customizer.customize(component);} @AT@ 5469 @LENGTH@ 253
---------UPD SingleVariableDeclaration@@ComponentCustomizer<JIRAComponent> configurer @TO@ ComponentCustomizer<JIRAComponent> customizer @AT@ 5474 @LENGTH@ 45
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5509 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5553 @LENGTH@ 106
------------UPD MethodInvocation@@LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5553 @LENGTH@ 105
---------------UPD SimpleName@@MethodName:debug:["Configure component {}, with configurer {}", component, configurer] @TO@ MethodName:debug:["Configure component {}, with customizer {}", component, customizer] @AT@ 5560 @LENGTH@ 98
------------------UPD StringLiteral@@"Configure component {}, with configurer {}" @TO@ "Configure component {}, with customizer {}" @AT@ 5566 @LENGTH@ 44
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5647 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(component) @TO@ MethodInvocation:customizer.customize(component) @AT@ 5676 @LENGTH@ 32
------------UPD MethodInvocation@@configurer.customize(component) @TO@ customizer.customize(component) @AT@ 5676 @LENGTH@ 31
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5676 @LENGTH@ 10


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && dataformatConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && dataformatConfiguration.getCustomizer().isEnabled(); @AT@ 5164 @LENGTH@ 177
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && dataformatConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && dataformatConfiguration.getCustomizer().isEnabled() @AT@ 5172 @LENGTH@ 168
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5172 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && dataformatConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && dataformatConfiguration.getCustomizer().isEnabled() @AT@ 5189 @LENGTH@ 151
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 5189 @LENGTH@ 72
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5189 @LENGTH@ 35
---------UPD MethodInvocation@@dataformatConfiguration.getConfigurer().isEnabled() @TO@ dataformatConfiguration.getCustomizer().isEnabled() @AT@ 5289 @LENGTH@ 51
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5289 @LENGTH@ 39


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<MiloServerComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<MiloServerComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5501 @LENGTH@ 343
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 5505 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5505 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  ComponentCustomizer<MiloServerComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ ThenBody:{  for (  ComponentCustomizer<MiloServerComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5561 @LENGTH@ 283
------UPD EnhancedForStatement@@for (ComponentCustomizer<MiloServerComponent> configurer : customizers) {  LOGGER.debug("Configure component {}, with configurer {}",component,configurer);  configurer.customize(component);} @TO@ for (ComponentCustomizer<MiloServerComponent> customizer : customizers) {  LOGGER.debug("Configure component {}, with customizer {}",component,customizer);  customizer.customize(component);} @AT@ 5575 @LENGTH@ 259
---------UPD SingleVariableDeclaration@@ComponentCustomizer<MiloServerComponent> configurer @TO@ ComponentCustomizer<MiloServerComponent> customizer @AT@ 5580 @LENGTH@ 51
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5621 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5665 @LENGTH@ 106
------------UPD MethodInvocation@@LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5665 @LENGTH@ 105
---------------UPD SimpleName@@MethodName:debug:["Configure component {}, with configurer {}", component, configurer] @TO@ MethodName:debug:["Configure component {}, with customizer {}", component, customizer] @AT@ 5672 @LENGTH@ 98
------------------UPD StringLiteral@@"Configure component {}, with configurer {}" @TO@ "Configure component {}, with customizer {}" @AT@ 5678 @LENGTH@ 44
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5759 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(component) @TO@ MethodInvocation:customizer.customize(component) @AT@ 5788 @LENGTH@ 32
------------UPD MethodInvocation@@configurer.customize(component) @TO@ customizer.customize(component) @AT@ 5788 @LENGTH@ 31
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5788 @LENGTH@ 10


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled(); @AT@ 5226 @LENGTH@ 160
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5234 @LENGTH@ 151
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5234 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5251 @LENGTH@ 134
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 5251 @LENGTH@ 64
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5251 @LENGTH@ 35
---------UPD MethodInvocation@@componentConfiguration.getConfigurer().isEnabled() @TO@ componentConfiguration.getCustomizer().isEnabled() @AT@ 5335 @LENGTH@ 50
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5335 @LENGTH@ 38


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<BindingNameComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<BindingNameComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5510 @LENGTH@ 344
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 5514 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5514 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  ComponentCustomizer<BindingNameComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ ThenBody:{  for (  ComponentCustomizer<BindingNameComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5570 @LENGTH@ 284
------UPD EnhancedForStatement@@for (ComponentCustomizer<BindingNameComponent> configurer : customizers) {  LOGGER.debug("Configure component {}, with configurer {}",component,configurer);  configurer.customize(component);} @TO@ for (ComponentCustomizer<BindingNameComponent> customizer : customizers) {  LOGGER.debug("Configure component {}, with customizer {}",component,customizer);  customizer.customize(component);} @AT@ 5584 @LENGTH@ 260
---------UPD SingleVariableDeclaration@@ComponentCustomizer<BindingNameComponent> configurer @TO@ ComponentCustomizer<BindingNameComponent> customizer @AT@ 5589 @LENGTH@ 52
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5631 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5675 @LENGTH@ 106
------------UPD MethodInvocation@@LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5675 @LENGTH@ 105
---------------UPD SimpleName@@MethodName:debug:["Configure component {}, with configurer {}", component, configurer] @TO@ MethodName:debug:["Configure component {}, with customizer {}", component, customizer] @AT@ 5682 @LENGTH@ 98
------------------UPD StringLiteral@@"Configure component {}, with configurer {}" @TO@ "Configure component {}, with customizer {}" @AT@ 5688 @LENGTH@ 44
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5769 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(component) @TO@ MethodInvocation:customizer.customize(component) @AT@ 5798 @LENGTH@ 32
------------UPD MethodInvocation@@configurer.customize(component) @TO@ customizer.customize(component) @AT@ 5798 @LENGTH@ 31
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5798 @LENGTH@ 10


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled(); @AT@ 5277 @LENGTH@ 160
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5285 @LENGTH@ 151
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5285 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5302 @LENGTH@ 134
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 5302 @LENGTH@ 64
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5302 @LENGTH@ 35
---------UPD MethodInvocation@@componentConfiguration.getConfigurer().isEnabled() @TO@ componentConfiguration.getCustomizer().isEnabled() @AT@ 5386 @LENGTH@ 50
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5386 @LENGTH@ 38


UPD ExpressionStatement@@MethodInvocation:fail("Should have thrown NoSuchProviderException as stmp protocol cannot be used for consuming mails") @TO@ MethodInvocation:fail("Should have thrown NoSuchProviderException as smtp protocol cannot be used for consuming mails") @AT@ 1908 @LENGTH@ 103
---UPD MethodInvocation@@fail("Should have thrown NoSuchProviderException as stmp protocol cannot be used for consuming mails") @TO@ fail("Should have thrown NoSuchProviderException as smtp protocol cannot be used for consuming mails") @AT@ 1908 @LENGTH@ 102
------UPD SimpleName@@MethodName:fail:["Should have thrown NoSuchProviderException as stmp protocol cannot be used for consuming mails"] @TO@ MethodName:fail:["Should have thrown NoSuchProviderException as smtp protocol cannot be used for consuming mails"] @AT@ 1908 @LENGTH@ 102
---------UPD StringLiteral@@"Should have thrown NoSuchProviderException as stmp protocol cannot be used for consuming mails" @TO@ "Should have thrown NoSuchProviderException as smtp protocol cannot be used for consuming mails" @AT@ 1913 @LENGTH@ 96


UPD ReturnStatement@@InfixExpression:url != null && url.startsWith("/") || isAbsoluteUrl(url) @TO@ InfixExpression:url != null && (url.startsWith("/") || isAbsoluteUrl(url)) @AT@ 3971 @LENGTH@ 64
---UPD InfixExpression@@url != null && url.startsWith("/") || isAbsoluteUrl(url) @TO@ url != null && (url.startsWith("/") || isAbsoluteUrl(url)) @AT@ 3978 @LENGTH@ 56
------UPD InfixExpression@@url != null && url.startsWith("/") @TO@ url.startsWith("/") || isAbsoluteUrl(url) @AT@ 3978 @LENGTH@ 34
------INS InfixExpression@@url != null @TO@ InfixExpression@@url != null && url.startsWith("/") || isAbsoluteUrl(url) @AT@ 3978 @LENGTH@ 11
---------INS SimpleName@@url @TO@ InfixExpression@@url != null @AT@ 3978 @LENGTH@ 3
---------INS Operator@@!= @TO@ InfixExpression@@url != null @AT@ 3981 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@url != null @AT@ 3985 @LENGTH@ 4
------INS Operator@@&& @TO@ InfixExpression@@url != null && url.startsWith("/") || isAbsoluteUrl(url) @AT@ 3989 @LENGTH@ 2
------INS ParenthesizedExpression@@(url.startsWith("/") || isAbsoluteUrl(url)) @TO@ InfixExpression@@url != null && url.startsWith("/") || isAbsoluteUrl(url) @AT@ 3993 @LENGTH@ 43
---------MOV InfixExpression@@url != null && url.startsWith("/") @TO@ ParenthesizedExpression@@(url.startsWith("/") || isAbsoluteUrl(url)) @AT@ 3978 @LENGTH@ 34
------------DEL InfixExpression@@url != null @AT@ 3978 @LENGTH@ 11
---------------DEL SimpleName@@url @AT@ 3978 @LENGTH@ 3
---------------DEL Operator@@!= @AT@ 3981 @LENGTH@ 2
---------------DEL NullLiteral@@null @AT@ 3985 @LENGTH@ 4
------------DEL Operator@@&& @AT@ 3989 @LENGTH@ 2
------------INS Operator@@|| @TO@ InfixExpression@@url != null && url.startsWith("/") @AT@ 4013 @LENGTH@ 2
------------MOV MethodInvocation@@isAbsoluteUrl(url) @TO@ InfixExpression@@url != null && url.startsWith("/") @AT@ 4016 @LENGTH@ 18
------DEL Operator@@|| @AT@ 4012 @LENGTH@ 2


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled(); @AT@ 5273 @LENGTH@ 160
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5281 @LENGTH@ 151
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5281 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5298 @LENGTH@ 134
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 5298 @LENGTH@ 64
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5298 @LENGTH@ 35
---------UPD MethodInvocation@@componentConfiguration.getConfigurer().isEnabled() @TO@ componentConfiguration.getCustomizer().isEnabled() @AT@ 5382 @LENGTH@ 50
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5382 @LENGTH@ 38


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<KratiComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<KratiComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5412 @LENGTH@ 338
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 5416 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5416 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  ComponentCustomizer<KratiComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ ThenBody:{  for (  ComponentCustomizer<KratiComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5472 @LENGTH@ 278
------UPD EnhancedForStatement@@for (ComponentCustomizer<KratiComponent> configurer : customizers) {  LOGGER.debug("Configure component {}, with configurer {}",component,configurer);  configurer.customize(component);} @TO@ for (ComponentCustomizer<KratiComponent> customizer : customizers) {  LOGGER.debug("Configure component {}, with customizer {}",component,customizer);  customizer.customize(component);} @AT@ 5486 @LENGTH@ 254
---------UPD SingleVariableDeclaration@@ComponentCustomizer<KratiComponent> configurer @TO@ ComponentCustomizer<KratiComponent> customizer @AT@ 5491 @LENGTH@ 46
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5527 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5571 @LENGTH@ 106
------------UPD MethodInvocation@@LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5571 @LENGTH@ 105
---------------UPD SimpleName@@MethodName:debug:["Configure component {}, with configurer {}", component, configurer] @TO@ MethodName:debug:["Configure component {}, with customizer {}", component, customizer] @AT@ 5578 @LENGTH@ 98
------------------UPD StringLiteral@@"Configure component {}, with configurer {}" @TO@ "Configure component {}, with customizer {}" @AT@ 5584 @LENGTH@ 44
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5665 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(component) @TO@ MethodInvocation:customizer.customize(component) @AT@ 5694 @LENGTH@ 32
------------UPD MethodInvocation@@configurer.customize(component) @TO@ customizer.customize(component) @AT@ 5694 @LENGTH@ 31
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5694 @LENGTH@ 10


UPD ExpressionStatement@@MethodInvocation:assertThat(nearQuery.getSkip(),is(10)) @TO@ MethodInvocation:assertThat(nearQuery.getSkip(),is(10L)) @AT@ 2960 @LENGTH@ 40
---UPD MethodInvocation@@assertThat(nearQuery.getSkip(),is(10)) @TO@ assertThat(nearQuery.getSkip(),is(10L)) @AT@ 2960 @LENGTH@ 39
------UPD SimpleName@@MethodName:assertThat:[nearQuery.getSkip(), is(10)] @TO@ MethodName:assertThat:[nearQuery.getSkip(), is(10L)] @AT@ 2960 @LENGTH@ 39
---------UPD MethodInvocation@@is(10) @TO@ is(10L) @AT@ 2992 @LENGTH@ 6
------------UPD SimpleName@@MethodName:is:[10] @TO@ MethodName:is:[10L] @AT@ 2992 @LENGTH@ 6
---------------UPD NumberLiteral@@10 @TO@ 10L @AT@ 2995 @LENGTH@ 2
------------UPD SimpleName@@MethodName:is:[10] @TO@ MethodName:is:[10L] @AT@ 2992 @LENGTH@ 6
---------------UPD NumberLiteral@@10 @TO@ 10L @AT@ 2995 @LENGTH@ 2


UPD ExpressionStatement@@MethodInvocation:assertTrue(json.contains("\"username\": { \"kind\": \"parameter\", \"displayName\": \"Username\", \"group\": \"security\", \"label\": \"security\", \"type\": \"string\"")) @TO@ MethodInvocation:assertTrue(json.contains("\"username\": { \"kind\": \"parameter\", \"displayName\": \"Username\", \"group\": \"security\"" + ", \"label\": \"security\", \"type\": \"string\"")) @AT@ 2094 @LENGTH@ 172
---UPD MethodInvocation@@assertTrue(json.contains("\"username\": { \"kind\": \"parameter\", \"displayName\": \"Username\", \"group\": \"security\", \"label\": \"security\", \"type\": \"string\"")) @TO@ assertTrue(json.contains("\"username\": { \"kind\": \"parameter\", \"displayName\": \"Username\", \"group\": \"security\"" + ", \"label\": \"security\", \"type\": \"string\"")) @AT@ 2094 @LENGTH@ 171
------UPD SimpleName@@MethodName:assertTrue:[json.contains("\"username\": { \"kind\": \"parameter\", \"displayName\": \"Username\", \"group\": \"security\", \"label\": \"security\", \"type\": \"string\"")] @TO@ MethodName:assertTrue:[json.contains("\"username\": { \"kind\": \"parameter\", \"displayName\": \"Username\", \"group\": \"security\"" + ", \"label\": \"security\", \"type\": \"string\"")] @AT@ 2094 @LENGTH@ 171
---------UPD MethodInvocation@@json.contains("\"username\": { \"kind\": \"parameter\", \"displayName\": \"Username\", \"group\": \"security\", \"label\": \"security\", \"type\": \"string\"") @TO@ json.contains("\"username\": { \"kind\": \"parameter\", \"displayName\": \"Username\", \"group\": \"security\"" + ", \"label\": \"security\", \"type\": \"string\"") @AT@ 2105 @LENGTH@ 159
------------UPD SimpleName@@MethodName:contains:["\"username\": { \"kind\": \"parameter\", \"displayName\": \"Username\", \"group\": \"security\", \"label\": \"security\", \"type\": \"string\""] @TO@ MethodName:contains:["\"username\": { \"kind\": \"parameter\", \"displayName\": \"Username\", \"group\": \"security\"" + ", \"label\": \"security\", \"type\": \"string\""] @AT@ 2110 @LENGTH@ 154
---------------DEL StringLiteral@@"\"username\": { \"kind\": \"parameter\", \"displayName\": \"Username\", \"group\": \"security\", \"label\": \"security\", \"type\": \"string\"" @AT@ 2119 @LENGTH@ 144
---------------INS InfixExpression@@"\"username\": { \"kind\": \"parameter\", \"displayName\": \"Username\", \"group\": \"security\"" + ", \"label\": \"security\", \"type\": \"string\"" @TO@ SimpleName@@MethodName:contains:["\"username\": { \"kind\": \"parameter\", \"displayName\": \"Username\", \"group\": \"security\", \"label\": \"security\", \"type\": \"string\""] @AT@ 2136 @LENGTH@ 161
------------------INS StringLiteral@@"\"username\": { \"kind\": \"parameter\", \"displayName\": \"Username\", \"group\": \"security\"" @TO@ InfixExpression@@"\"username\": { \"kind\": \"parameter\", \"displayName\": \"Username\", \"group\": \"security\"" + ", \"label\": \"security\", \"type\": \"string\"" @AT@ 2136 @LENGTH@ 97
------------------INS Operator@@+ @TO@ InfixExpression@@"\"username\": { \"kind\": \"parameter\", \"displayName\": \"Username\", \"group\": \"security\"" + ", \"label\": \"security\", \"type\": \"string\"" @AT@ 2233 @LENGTH@ 1
------------------INS StringLiteral@@", \"label\": \"security\", \"type\": \"string\"" @TO@ InfixExpression@@"\"username\": { \"kind\": \"parameter\", \"displayName\": \"Username\", \"group\": \"security\"" + ", \"label\": \"security\", \"type\": \"string\"" @AT@ 2248 @LENGTH@ 49


UPD MethodDeclaration@@public, int, MethodName:tryEvictContiguousData, int allocationSize, int count,  @TO@ public, long, MethodName:tryEvictContiguousData, int allocationSize, int count,  @AT@ 3684 @LENGTH@ 92
---UPD PrimitiveType@@int @TO@ long @AT@ 3691 @LENGTH@ 3
---UPD ReturnStatement@@SimpleName:count @TO@ InfixExpression:count * allocationSize @AT@ 3757 @LENGTH@ 13
------DEL SimpleName@@count @AT@ 3764 @LENGTH@ 5
------INS InfixExpression@@count * allocationSize @TO@ ReturnStatement@@SimpleName:count @AT@ 3765 @LENGTH@ 22
---------INS SimpleName@@count @TO@ InfixExpression@@count * allocationSize @AT@ 3765 @LENGTH@ 5
---------INS Operator@@* @TO@ InfixExpression@@count * allocationSize @AT@ 3770 @LENGTH@ 1
---------INS SimpleName@@allocationSize @TO@ InfixExpression@@count * allocationSize @AT@ 3773 @LENGTH@ 14


UPD LambdaExpression@@notification -> {
  HttpScope sessionScope=notification.getScope(Scope.SESSION);
  Map<String,Map.Entry<String,URI>> logoutTargets=Collections.emptyMap();
  try (SingleSignOn target=this.context.getSingleSignOnManagerManager().find(id)){
    if (target != null) {
      Map.Entry<String,URI> localParticipant=target.removeParticipant(applicationId);
      if (localParticipant != null) {
        log.debugf("Removed local session [%s] from SSO [%s]",localParticipant.getKey(),target.getId());
      }
      if (sessionScope.getAttachment(SESSION_INVALIDATING_ATTRIBUTE) == null) {
        Map<String,Map.Entry<String,URI>> participants=target.getParticipants();
        if (participants.isEmpty()) {
          log.debugf("Destroying SSO [%s]. SSO is not associated with participants",target.getId());
          target.invalidate();
        }
 else         if (notification.isOfType(INVALIDATED)) {
          logoutTargets=new HashMap<>(participants);
        }
      }
    }
  }
   if (!logoutTargets.isEmpty()) {
    logoutTargets.forEach((participantId,participant) -> {
      String remoteSessionId=participant.getKey();
      URI remoteURI=participant.getValue();
      try {
        URL participantUrl=remoteURI.toURL();
        HttpURLConnection connection=(HttpURLConnection)participantUrl.openConnection();
        this.context.configureLogoutConnection(connection);
        connection.setRequestMethod("POST");
        connection.setDoOutput(true);
        connection.setAllowUserInteraction(false);
        connection.setConnectTimeout(10000);
        connection.setReadTimeout(10000);
        connection.setRequestProperty("Content-Type","application/x-www-form-urlencoded");
        StringBuilder parameterBuilder=new StringBuilder();
        parameterBuilder.append(LOGOUT_REQUEST_PARAMETER).append("=").append(this.context.createLogoutParameter(remoteSessionId));
        connection.setRequestProperty("Content-Length",Integer.toString(parameterBuilder.length()));
        try (OutputStream outputStream=connection.getOutputStream();DataOutputStream wr=new DataOutputStream(outputStream)){
          wr.writeBytes(parameterBuilder.toString());
        }
         connection.getInputStream().close();
      }
 catch (      Exception cause) {
        log.warnHttpMechSsoFailedLogoutParticipant(remoteURI.toString(),cause);
        try (SingleSignOn target=context.getSingleSignOnManagerManager().find(id)){
          target.removeParticipant(participantId);
        }
       }
    }
);
    try (SingleSignOn target=this.context.getSingleSignOnManagerManager().find(id)){
      if (target != null) {
        if (target.getParticipants().isEmpty()) {
          log.debugf("Destroying SSO [%s]. SSO is no longer associated with any participants",target.getId());
          target.invalidate();
        }
      }
    }
   }
}
 @TO@ notification -> {
  HttpScope sessionScope=notification.getScope(Scope.SESSION);
  Map<String,Map.Entry<String,URI>> logoutTargets=Collections.emptyMap();
  try (SingleSignOn target=this.context.getSingleSignOnManager().find(id)){
    if (target != null) {
      Map.Entry<String,URI> localParticipant=target.removeParticipant(applicationId);
      if (localParticipant != null) {
        log.debugf("Removed local session [%s] from SSO [%s]",localParticipant.getKey(),target.getId());
      }
      if (sessionScope.getAttachment(SESSION_INVALIDATING_ATTRIBUTE) == null) {
        Map<String,Map.Entry<String,URI>> participants=target.getParticipants();
        if (participants.isEmpty()) {
          log.debugf("Destroying SSO [%s]. SSO is not associated with participants",target.getId());
          target.invalidate();
        }
 else         if (notification.isOfType(INVALIDATED)) {
          logoutTargets=new HashMap<>(participants);
        }
      }
    }
  }
   if (!logoutTargets.isEmpty()) {
    logoutTargets.forEach((participantId,participant) -> {
      String remoteSessionId=participant.getKey();
      URI remoteURI=participant.getValue();
      try {
        URL participantUrl=remoteURI.toURL();
        HttpURLConnection connection=(HttpURLConnection)participantUrl.openConnection();
        this.context.configureLogoutConnection(connection);
        connection.setRequestMethod("POST");
        connection.setDoOutput(true);
        connection.setAllowUserInteraction(false);
        connection.setConnectTimeout(10000);
        connection.setReadTimeout(10000);
        connection.setRequestProperty("Content-Type","application/x-www-form-urlencoded");
        StringBuilder parameterBuilder=new StringBuilder();
        parameterBuilder.append(LOGOUT_REQUEST_PARAMETER).append("=").append(this.context.createLogoutParameter(remoteSessionId));
        connection.setRequestProperty("Content-Length",Integer.toString(parameterBuilder.length()));
        try (OutputStream outputStream=connection.getOutputStream();DataOutputStream wr=new DataOutputStream(outputStream)){
          wr.writeBytes(parameterBuilder.toString());
        }
         connection.getInputStream().close();
      }
 catch (      Exception cause) {
        log.warnHttpMechSsoFailedLogoutParticipant(remoteURI.toString(),cause);
        try (SingleSignOn target=context.getSingleSignOnManager().find(id)){
          target.removeParticipant(participantId);
        }
       }
    }
);
    try (SingleSignOn target=this.context.getSingleSignOnManager().find(id)){
      if (target != null) {
        if (target.getParticipants().isEmpty()) {
          log.debugf("Destroying SSO [%s]. SSO is no longer associated with any participants",target.getId());
          target.invalidate();
        }
      }
    }
   }
}
 @AT@ 4776 @LENGTH@ 4268
---UPD TryStatement@@try (SingleSignOn target=this.context.getSingleSignOnManagerManager().find(id)){  if (target != null) {    Map.Entry<String,URI> localParticipant=target.removeParticipant(applicationId);    if (localParticipant != null) {      log.debugf("Removed local session [%s] from SSO [%s]",localParticipant.getKey(),target.getId());    }    if (sessionScope.getAttachment(SESSION_INVALIDATING_ATTRIBUTE) == null) {      Map<String,Map.Entry<String,URI>> participants=target.getParticipants();      if (participants.isEmpty()) {        log.debugf("Destroying SSO [%s]. SSO is not associated with participants",target.getId());        target.invalidate();      } else       if (notification.isOfType(INVALIDATED)) {        logoutTargets=new HashMap<>(participants);      }    }  }}  @TO@ try (SingleSignOn target=this.context.getSingleSignOnManager().find(id)){  if (target != null) {    Map.Entry<String,URI> localParticipant=target.removeParticipant(applicationId);    if (localParticipant != null) {      log.debugf("Removed local session [%s] from SSO [%s]",localParticipant.getKey(),target.getId());    }    if (sessionScope.getAttachment(SESSION_INVALIDATING_ATTRIBUTE) == null) {      Map<String,Map.Entry<String,URI>> participants=target.getParticipants();      if (participants.isEmpty()) {        log.debugf("Destroying SSO [%s]. SSO is not associated with participants",target.getId());        target.invalidate();      } else       if (notification.isOfType(INVALIDATED)) {        logoutTargets=new HashMap<>(participants);      }    }  }}  @AT@ 4982 @LENGTH@ 1129
------UPD VariableDeclarationExpression@@SingleSignOn target=this.context.getSingleSignOnManagerManager().find(id) @TO@ SingleSignOn target=this.context.getSingleSignOnManager().find(id) @AT@ 4987 @LENGTH@ 75
---------UPD VariableDeclarationFragment@@target=this.context.getSingleSignOnManagerManager().find(id) @TO@ target=this.context.getSingleSignOnManager().find(id) @AT@ 5000 @LENGTH@ 62
------------UPD MethodInvocation@@this.context.getSingleSignOnManagerManager().find(id) @TO@ this.context.getSingleSignOnManager().find(id) @AT@ 5009 @LENGTH@ 53
---------------UPD MethodInvocation@@MethodName:getSingleSignOnManagerManager:[] @TO@ MethodName:getSingleSignOnManager:[] @AT@ 5009 @LENGTH@ 44
---UPD IfStatement@@if (!logoutTargets.isEmpty()) {  logoutTargets.forEach((participantId,participant) -> {    String remoteSessionId=participant.getKey();    URI remoteURI=participant.getValue();    try {      URL participantUrl=remoteURI.toURL();      HttpURLConnection connection=(HttpURLConnection)participantUrl.openConnection();      this.context.configureLogoutConnection(connection);      connection.setRequestMethod("POST");      connection.setDoOutput(true);      connection.setAllowUserInteraction(false);      connection.setConnectTimeout(10000);      connection.setReadTimeout(10000);      connection.setRequestProperty("Content-Type","application/x-www-form-urlencoded");      StringBuilder parameterBuilder=new StringBuilder();      parameterBuilder.append(LOGOUT_REQUEST_PARAMETER).append("=").append(this.context.createLogoutParameter(remoteSessionId));      connection.setRequestProperty("Content-Length",Integer.toString(parameterBuilder.length()));      try (OutputStream outputStream=connection.getOutputStream();DataOutputStream wr=new DataOutputStream(outputStream)){        wr.writeBytes(parameterBuilder.toString());      }       connection.getInputStream().close();    } catch (    Exception cause) {      log.warnHttpMechSsoFailedLogoutParticipant(remoteURI.toString(),cause);      try (SingleSignOn target=context.getSingleSignOnManagerManager().find(id)){        target.removeParticipant(participantId);      }     }  });  try (SingleSignOn target=this.context.getSingleSignOnManagerManager().find(id)){    if (target != null) {      if (target.getParticipants().isEmpty()) {        log.debugf("Destroying SSO [%s]. SSO is no longer associated with any participants",target.getId());        target.invalidate();      }    }  } } @TO@ if (!logoutTargets.isEmpty()) {  logoutTargets.forEach((participantId,participant) -> {    String remoteSessionId=participant.getKey();    URI remoteURI=participant.getValue();    try {      URL participantUrl=remoteURI.toURL();      HttpURLConnection connection=(HttpURLConnection)participantUrl.openConnection();      this.context.configureLogoutConnection(connection);      connection.setRequestMethod("POST");      connection.setDoOutput(true);      connection.setAllowUserInteraction(false);      connection.setConnectTimeout(10000);      connection.setReadTimeout(10000);      connection.setRequestProperty("Content-Type","application/x-www-form-urlencoded");      StringBuilder parameterBuilder=new StringBuilder();      parameterBuilder.append(LOGOUT_REQUEST_PARAMETER).append("=").append(this.context.createLogoutParameter(remoteSessionId));      connection.setRequestProperty("Content-Length",Integer.toString(parameterBuilder.length()));      try (OutputStream outputStream=connection.getOutputStream();DataOutputStream wr=new DataOutputStream(outputStream)){        wr.writeBytes(parameterBuilder.toString());      }       connection.getInputStream().close();    } catch (    Exception cause) {      log.warnHttpMechSsoFailedLogoutParticipant(remoteURI.toString(),cause);      try (SingleSignOn target=context.getSingleSignOnManager().find(id)){        target.removeParticipant(participantId);      }     }  });  try (SingleSignOn target=this.context.getSingleSignOnManager().find(id)){    if (target != null) {      if (target.getParticipants().isEmpty()) {        log.debugf("Destroying SSO [%s]. SSO is no longer associated with any participants",target.getId());        target.invalidate();      }    }  } } @AT@ 6129 @LENGTH@ 2901
------UPD Block@@ThenBody:{  logoutTargets.forEach((participantId,participant) -> {    String remoteSessionId=participant.getKey();    URI remoteURI=participant.getValue();    try {      URL participantUrl=remoteURI.toURL();      HttpURLConnection connection=(HttpURLConnection)participantUrl.openConnection();      this.context.configureLogoutConnection(connection);      connection.setRequestMethod("POST");      connection.setDoOutput(true);      connection.setAllowUserInteraction(false);      connection.setConnectTimeout(10000);      connection.setReadTimeout(10000);      connection.setRequestProperty("Content-Type","application/x-www-form-urlencoded");      StringBuilder parameterBuilder=new StringBuilder();      parameterBuilder.append(LOGOUT_REQUEST_PARAMETER).append("=").append(this.context.createLogoutParameter(remoteSessionId));      connection.setRequestProperty("Content-Length",Integer.toString(parameterBuilder.length()));      try (OutputStream outputStream=connection.getOutputStream();DataOutputStream wr=new DataOutputStream(outputStream)){        wr.writeBytes(parameterBuilder.toString());      }       connection.getInputStream().close();    } catch (    Exception cause) {      log.warnHttpMechSsoFailedLogoutParticipant(remoteURI.toString(),cause);      try (SingleSignOn target=context.getSingleSignOnManagerManager().find(id)){        target.removeParticipant(participantId);      }     }  });  try (SingleSignOn target=this.context.getSingleSignOnManagerManager().find(id)){    if (target != null) {      if (target.getParticipants().isEmpty()) {        log.debugf("Destroying SSO [%s]. SSO is no longer associated with any participants",target.getId());        target.invalidate();      }    }  } } @TO@ ThenBody:{  logoutTargets.forEach((participantId,participant) -> {    String remoteSessionId=participant.getKey();    URI remoteURI=participant.getValue();    try {      URL participantUrl=remoteURI.toURL();      HttpURLConnection connection=(HttpURLConnection)participantUrl.openConnection();      this.context.configureLogoutConnection(connection);      connection.setRequestMethod("POST");      connection.setDoOutput(true);      connection.setAllowUserInteraction(false);      connection.setConnectTimeout(10000);      connection.setReadTimeout(10000);      connection.setRequestProperty("Content-Type","application/x-www-form-urlencoded");      StringBuilder parameterBuilder=new StringBuilder();      parameterBuilder.append(LOGOUT_REQUEST_PARAMETER).append("=").append(this.context.createLogoutParameter(remoteSessionId));      connection.setRequestProperty("Content-Length",Integer.toString(parameterBuilder.length()));      try (OutputStream outputStream=connection.getOutputStream();DataOutputStream wr=new DataOutputStream(outputStream)){        wr.writeBytes(parameterBuilder.toString());      }       connection.getInputStream().close();    } catch (    Exception cause) {      log.warnHttpMechSsoFailedLogoutParticipant(remoteURI.toString(),cause);      try (SingleSignOn target=context.getSingleSignOnManager().find(id)){        target.removeParticipant(participantId);      }     }  });  try (SingleSignOn target=this.context.getSingleSignOnManager().find(id)){    if (target != null) {      if (target.getParticipants().isEmpty()) {        log.debugf("Destroying SSO [%s]. SSO is no longer associated with any participants",target.getId());        target.invalidate();      }    }  } } @AT@ 6159 @LENGTH@ 2871
---------UPD ExpressionStatement@@MethodInvocation:logoutTargets.forEach((participantId,participant) -> {
  String remoteSessionId=participant.getKey();
  URI remoteURI=participant.getValue();
  try {
    URL participantUrl=remoteURI.toURL();
    HttpURLConnection connection=(HttpURLConnection)participantUrl.openConnection();
    this.context.configureLogoutConnection(connection);
    connection.setRequestMethod("POST");
    connection.setDoOutput(true);
    connection.setAllowUserInteraction(false);
    connection.setConnectTimeout(10000);
    connection.setReadTimeout(10000);
    connection.setRequestProperty("Content-Type","application/x-www-form-urlencoded");
    StringBuilder parameterBuilder=new StringBuilder();
    parameterBuilder.append(LOGOUT_REQUEST_PARAMETER).append("=").append(this.context.createLogoutParameter(remoteSessionId));
    connection.setRequestProperty("Content-Length",Integer.toString(parameterBuilder.length()));
    try (OutputStream outputStream=connection.getOutputStream();DataOutputStream wr=new DataOutputStream(outputStream)){
      wr.writeBytes(parameterBuilder.toString());
    }
     connection.getInputStream().close();
  }
 catch (  Exception cause) {
    log.warnHttpMechSsoFailedLogoutParticipant(remoteURI.toString(),cause);
    try (SingleSignOn target=context.getSingleSignOnManagerManager().find(id)){
      target.removeParticipant(participantId);
    }
   }
}
) @TO@ MethodInvocation:logoutTargets.forEach((participantId,participant) -> {
  String remoteSessionId=participant.getKey();
  URI remoteURI=participant.getValue();
  try {
    URL participantUrl=remoteURI.toURL();
    HttpURLConnection connection=(HttpURLConnection)participantUrl.openConnection();
    this.context.configureLogoutConnection(connection);
    connection.setRequestMethod("POST");
    connection.setDoOutput(true);
    connection.setAllowUserInteraction(false);
    connection.setConnectTimeout(10000);
    connection.setReadTimeout(10000);
    connection.setRequestProperty("Content-Type","application/x-www-form-urlencoded");
    StringBuilder parameterBuilder=new StringBuilder();
    parameterBuilder.append(LOGOUT_REQUEST_PARAMETER).append("=").append(this.context.createLogoutParameter(remoteSessionId));
    connection.setRequestProperty("Content-Length",Integer.toString(parameterBuilder.length()));
    try (OutputStream outputStream=connection.getOutputStream();DataOutputStream wr=new DataOutputStream(outputStream)){
      wr.writeBytes(parameterBuilder.toString());
    }
     connection.getInputStream().close();
  }
 catch (  Exception cause) {
    log.warnHttpMechSsoFailedLogoutParticipant(remoteURI.toString(),cause);
    try (SingleSignOn target=context.getSingleSignOnManager().find(id)){
      target.removeParticipant(participantId);
    }
   }
}
) @AT@ 6181 @LENGTH@ 2206
------------UPD MethodInvocation@@logoutTargets.forEach((participantId,participant) -> {
  String remoteSessionId=participant.getKey();
  URI remoteURI=participant.getValue();
  try {
    URL participantUrl=remoteURI.toURL();
    HttpURLConnection connection=(HttpURLConnection)participantUrl.openConnection();
    this.context.configureLogoutConnection(connection);
    connection.setRequestMethod("POST");
    connection.setDoOutput(true);
    connection.setAllowUserInteraction(false);
    connection.setConnectTimeout(10000);
    connection.setReadTimeout(10000);
    connection.setRequestProperty("Content-Type","application/x-www-form-urlencoded");
    StringBuilder parameterBuilder=new StringBuilder();
    parameterBuilder.append(LOGOUT_REQUEST_PARAMETER).append("=").append(this.context.createLogoutParameter(remoteSessionId));
    connection.setRequestProperty("Content-Length",Integer.toString(parameterBuilder.length()));
    try (OutputStream outputStream=connection.getOutputStream();DataOutputStream wr=new DataOutputStream(outputStream)){
      wr.writeBytes(parameterBuilder.toString());
    }
     connection.getInputStream().close();
  }
 catch (  Exception cause) {
    log.warnHttpMechSsoFailedLogoutParticipant(remoteURI.toString(),cause);
    try (SingleSignOn target=context.getSingleSignOnManagerManager().find(id)){
      target.removeParticipant(participantId);
    }
   }
}
) @TO@ logoutTargets.forEach((participantId,participant) -> {
  String remoteSessionId=participant.getKey();
  URI remoteURI=participant.getValue();
  try {
    URL participantUrl=remoteURI.toURL();
    HttpURLConnection connection=(HttpURLConnection)participantUrl.openConnection();
    this.context.configureLogoutConnection(connection);
    connection.setRequestMethod("POST");
    connection.setDoOutput(true);
    connection.setAllowUserInteraction(false);
    connection.setConnectTimeout(10000);
    connection.setReadTimeout(10000);
    connection.setRequestProperty("Content-Type","application/x-www-form-urlencoded");
    StringBuilder parameterBuilder=new StringBuilder();
    parameterBuilder.append(LOGOUT_REQUEST_PARAMETER).append("=").append(this.context.createLogoutParameter(remoteSessionId));
    connection.setRequestProperty("Content-Length",Integer.toString(parameterBuilder.length()));
    try (OutputStream outputStream=connection.getOutputStream();DataOutputStream wr=new DataOutputStream(outputStream)){
      wr.writeBytes(parameterBuilder.toString());
    }
     connection.getInputStream().close();
  }
 catch (  Exception cause) {
    log.warnHttpMechSsoFailedLogoutParticipant(remoteURI.toString(),cause);
    try (SingleSignOn target=context.getSingleSignOnManager().find(id)){
      target.removeParticipant(participantId);
    }
   }
}
) @AT@ 6181 @LENGTH@ 2205
---------------UPD SimpleName@@MethodName:forEach:[(participantId,participant) -> {
  String remoteSessionId=participant.getKey();
  URI remoteURI=participant.getValue();
  try {
    URL participantUrl=remoteURI.toURL();
    HttpURLConnection connection=(HttpURLConnection)participantUrl.openConnection();
    this.context.configureLogoutConnection(connection);
    connection.setRequestMethod("POST");
    connection.setDoOutput(true);
    connection.setAllowUserInteraction(false);
    connection.setConnectTimeout(10000);
    connection.setReadTimeout(10000);
    connection.setRequestProperty("Content-Type","application/x-www-form-urlencoded");
    StringBuilder parameterBuilder=new StringBuilder();
    parameterBuilder.append(LOGOUT_REQUEST_PARAMETER).append("=").append(this.context.createLogoutParameter(remoteSessionId));
    connection.setRequestProperty("Content-Length",Integer.toString(parameterBuilder.length()));
    try (OutputStream outputStream=connection.getOutputStream();DataOutputStream wr=new DataOutputStream(outputStream)){
      wr.writeBytes(parameterBuilder.toString());
    }
     connection.getInputStream().close();
  }
 catch (  Exception cause) {
    log.warnHttpMechSsoFailedLogoutParticipant(remoteURI.toString(),cause);
    try (SingleSignOn target=context.getSingleSignOnManagerManager().find(id)){
      target.removeParticipant(participantId);
    }
   }
}
] @TO@ MethodName:forEach:[(participantId,participant) -> {
  String remoteSessionId=participant.getKey();
  URI remoteURI=participant.getValue();
  try {
    URL participantUrl=remoteURI.toURL();
    HttpURLConnection connection=(HttpURLConnection)participantUrl.openConnection();
    this.context.configureLogoutConnection(connection);
    connection.setRequestMethod("POST");
    connection.setDoOutput(true);
    connection.setAllowUserInteraction(false);
    connection.setConnectTimeout(10000);
    connection.setReadTimeout(10000);
    connection.setRequestProperty("Content-Type","application/x-www-form-urlencoded");
    StringBuilder parameterBuilder=new StringBuilder();
    parameterBuilder.append(LOGOUT_REQUEST_PARAMETER).append("=").append(this.context.createLogoutParameter(remoteSessionId));
    connection.setRequestProperty("Content-Length",Integer.toString(parameterBuilder.length()));
    try (OutputStream outputStream=connection.getOutputStream();DataOutputStream wr=new DataOutputStream(outputStream)){
      wr.writeBytes(parameterBuilder.toString());
    }
     connection.getInputStream().close();
  }
 catch (  Exception cause) {
    log.warnHttpMechSsoFailedLogoutParticipant(remoteURI.toString(),cause);
    try (SingleSignOn target=context.getSingleSignOnManager().find(id)){
      target.removeParticipant(participantId);
    }
   }
}
] @AT@ 6195 @LENGTH@ 2191
------------------UPD LambdaExpression@@(participantId,participant) -> {
  String remoteSessionId=participant.getKey();
  URI remoteURI=participant.getValue();
  try {
    URL participantUrl=remoteURI.toURL();
    HttpURLConnection connection=(HttpURLConnection)participantUrl.openConnection();
    this.context.configureLogoutConnection(connection);
    connection.setRequestMethod("POST");
    connection.setDoOutput(true);
    connection.setAllowUserInteraction(false);
    connection.setConnectTimeout(10000);
    connection.setReadTimeout(10000);
    connection.setRequestProperty("Content-Type","application/x-www-form-urlencoded");
    StringBuilder parameterBuilder=new StringBuilder();
    parameterBuilder.append(LOGOUT_REQUEST_PARAMETER).append("=").append(this.context.createLogoutParameter(remoteSessionId));
    connection.setRequestProperty("Content-Length",Integer.toString(parameterBuilder.length()));
    try (OutputStream outputStream=connection.getOutputStream();DataOutputStream wr=new DataOutputStream(outputStream)){
      wr.writeBytes(parameterBuilder.toString());
    }
     connection.getInputStream().close();
  }
 catch (  Exception cause) {
    log.warnHttpMechSsoFailedLogoutParticipant(remoteURI.toString(),cause);
    try (SingleSignOn target=context.getSingleSignOnManagerManager().find(id)){
      target.removeParticipant(participantId);
    }
   }
}
 @TO@ (participantId,participant) -> {
  String remoteSessionId=participant.getKey();
  URI remoteURI=participant.getValue();
  try {
    URL participantUrl=remoteURI.toURL();
    HttpURLConnection connection=(HttpURLConnection)participantUrl.openConnection();
    this.context.configureLogoutConnection(connection);
    connection.setRequestMethod("POST");
    connection.setDoOutput(true);
    connection.setAllowUserInteraction(false);
    connection.setConnectTimeout(10000);
    connection.setReadTimeout(10000);
    connection.setRequestProperty("Content-Type","application/x-www-form-urlencoded");
    StringBuilder parameterBuilder=new StringBuilder();
    parameterBuilder.append(LOGOUT_REQUEST_PARAMETER).append("=").append(this.context.createLogoutParameter(remoteSessionId));
    connection.setRequestProperty("Content-Length",Integer.toString(parameterBuilder.length()));
    try (OutputStream outputStream=connection.getOutputStream();DataOutputStream wr=new DataOutputStream(outputStream)){
      wr.writeBytes(parameterBuilder.toString());
    }
     connection.getInputStream().close();
  }
 catch (  Exception cause) {
    log.warnHttpMechSsoFailedLogoutParticipant(remoteURI.toString(),cause);
    try (SingleSignOn target=context.getSingleSignOnManager().find(id)){
      target.removeParticipant(participantId);
    }
   }
}
 @AT@ 6203 @LENGTH@ 2182
---------------------UPD TryStatement@@try {  URL participantUrl=remoteURI.toURL();  HttpURLConnection connection=(HttpURLConnection)participantUrl.openConnection();  this.context.configureLogoutConnection(connection);  connection.setRequestMethod("POST");  connection.setDoOutput(true);  connection.setAllowUserInteraction(false);  connection.setConnectTimeout(10000);  connection.setReadTimeout(10000);  connection.setRequestProperty("Content-Type","application/x-www-form-urlencoded");  StringBuilder parameterBuilder=new StringBuilder();  parameterBuilder.append(LOGOUT_REQUEST_PARAMETER).append("=").append(this.context.createLogoutParameter(remoteSessionId));  connection.setRequestProperty("Content-Length",Integer.toString(parameterBuilder.length()));  try (OutputStream outputStream=connection.getOutputStream();DataOutputStream wr=new DataOutputStream(outputStream)){    wr.writeBytes(parameterBuilder.toString());  }   connection.getInputStream().close();} catch (Exception cause) {  log.warnHttpMechSsoFailedLogoutParticipant(remoteURI.toString(),cause);  try (SingleSignOn target=context.getSingleSignOnManagerManager().find(id)){    target.removeParticipant(participantId);  } } @TO@ try {  URL participantUrl=remoteURI.toURL();  HttpURLConnection connection=(HttpURLConnection)participantUrl.openConnection();  this.context.configureLogoutConnection(connection);  connection.setRequestMethod("POST");  connection.setDoOutput(true);  connection.setAllowUserInteraction(false);  connection.setConnectTimeout(10000);  connection.setReadTimeout(10000);  connection.setRequestProperty("Content-Type","application/x-www-form-urlencoded");  StringBuilder parameterBuilder=new StringBuilder();  parameterBuilder.append(LOGOUT_REQUEST_PARAMETER).append("=").append(this.context.createLogoutParameter(remoteSessionId));  connection.setRequestProperty("Content-Length",Integer.toString(parameterBuilder.length()));  try (OutputStream outputStream=connection.getOutputStream();DataOutputStream wr=new DataOutputStream(outputStream)){    wr.writeBytes(parameterBuilder.toString());  }   connection.getInputStream().close();} catch (Exception cause) {  log.warnHttpMechSsoFailedLogoutParticipant(remoteURI.toString(),cause);  try (SingleSignOn target=context.getSingleSignOnManager().find(id)){    target.removeParticipant(participantId);  } } @AT@ 6396 @LENGTH@ 1967
------------------------UPD CatchClause@@catch (Exception cause) {  log.warnHttpMechSsoFailedLogoutParticipant(remoteURI.toString(),cause);  try (SingleSignOn target=context.getSingleSignOnManagerManager().find(id)){    target.removeParticipant(participantId);  } } @TO@ catch (Exception cause) {  log.warnHttpMechSsoFailedLogoutParticipant(remoteURI.toString(),cause);  try (SingleSignOn target=context.getSingleSignOnManager().find(id)){    target.removeParticipant(participantId);  } } @AT@ 7900 @LENGTH@ 463
---------------------------UPD TryStatement@@try (SingleSignOn target=context.getSingleSignOnManagerManager().find(id)){  target.removeParticipant(participantId);}  @TO@ try (SingleSignOn target=context.getSingleSignOnManager().find(id)){  target.removeParticipant(participantId);}  @AT@ 8156 @LENGTH@ 181
------------------------------UPD VariableDeclarationExpression@@SingleSignOn target=context.getSingleSignOnManagerManager().find(id) @TO@ SingleSignOn target=context.getSingleSignOnManager().find(id) @AT@ 8161 @LENGTH@ 70
---------------------------------UPD VariableDeclarationFragment@@target=context.getSingleSignOnManagerManager().find(id) @TO@ target=context.getSingleSignOnManager().find(id) @AT@ 8174 @LENGTH@ 57
------------------------------------UPD MethodInvocation@@context.getSingleSignOnManagerManager().find(id) @TO@ context.getSingleSignOnManager().find(id) @AT@ 8183 @LENGTH@ 48
---------------------------------------UPD MethodInvocation@@MethodName:getSingleSignOnManagerManager:[] @TO@ MethodName:getSingleSignOnManager:[] @AT@ 8183 @LENGTH@ 39
---------UPD TryStatement@@try (SingleSignOn target=this.context.getSingleSignOnManagerManager().find(id)){  if (target != null) {    if (target.getParticipants().isEmpty()) {      log.debugf("Destroying SSO [%s]. SSO is no longer associated with any participants",target.getId());      target.invalidate();    }  }}  @TO@ try (SingleSignOn target=this.context.getSingleSignOnManager().find(id)){  if (target != null) {    if (target.getParticipants().isEmpty()) {      log.debugf("Destroying SSO [%s]. SSO is no longer associated with any participants",target.getId());      target.invalidate();    }  }}  @AT@ 8409 @LENGTH@ 603
------------UPD VariableDeclarationExpression@@SingleSignOn target=this.context.getSingleSignOnManagerManager().find(id) @TO@ SingleSignOn target=this.context.getSingleSignOnManager().find(id) @AT@ 8414 @LENGTH@ 75
---------------UPD VariableDeclarationFragment@@target=this.context.getSingleSignOnManagerManager().find(id) @TO@ target=this.context.getSingleSignOnManager().find(id) @AT@ 8427 @LENGTH@ 62
------------------UPD MethodInvocation@@this.context.getSingleSignOnManagerManager().find(id) @TO@ this.context.getSingleSignOnManager().find(id) @AT@ 8436 @LENGTH@ 53
---------------------UPD MethodInvocation@@MethodName:getSingleSignOnManagerManager:[] @TO@ MethodName:getSingleSignOnManager:[] @AT@ 8436 @LENGTH@ 44


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled(); @AT@ 5355 @LENGTH@ 160
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5363 @LENGTH@ 151
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5363 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5380 @LENGTH@ 134
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 5380 @LENGTH@ 64
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5380 @LENGTH@ 35
---------UPD MethodInvocation@@componentConfiguration.getConfigurer().isEnabled() @TO@ componentConfiguration.getCustomizer().isEnabled() @AT@ 5464 @LENGTH@ 50
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5464 @LENGTH@ 38


UPD ExpressionStatement@@Assignment:n=blockSize - readOffset @TO@ Assignment:n=(long)blockSize - readOffset @AT@ 5969 @LENGTH@ 27
---UPD Assignment@@n=blockSize - readOffset @TO@ n=(long)blockSize - readOffset @AT@ 5969 @LENGTH@ 26
------UPD InfixExpression@@blockSize - readOffset @TO@ (long)blockSize - readOffset @AT@ 5973 @LENGTH@ 22
---------INS CastExpression@@(long)blockSize @TO@ InfixExpression@@blockSize - readOffset @AT@ 5973 @LENGTH@ 16
------------INS PrimitiveType@@long @TO@ CastExpression@@(long)blockSize @AT@ 5974 @LENGTH@ 4
------------INS SimpleName@@blockSize @TO@ CastExpression@@(long)blockSize @AT@ 5980 @LENGTH@ 9
---------DEL SimpleName@@blockSize @AT@ 5973 @LENGTH@ 9


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && dataformatConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && dataformatConfiguration.getCustomizer().isEnabled(); @AT@ 5163 @LENGTH@ 177
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && dataformatConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && dataformatConfiguration.getCustomizer().isEnabled() @AT@ 5171 @LENGTH@ 168
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5171 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && dataformatConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && dataformatConfiguration.getCustomizer().isEnabled() @AT@ 5188 @LENGTH@ 151
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 5188 @LENGTH@ 72
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5188 @LENGTH@ 35
---------UPD MethodInvocation@@dataformatConfiguration.getConfigurer().isEnabled() @TO@ dataformatConfiguration.getCustomizer().isEnabled() @AT@ 5288 @LENGTH@ 51
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5288 @LENGTH@ 39


INS IfStatement@@if (ObjectHelper.isNotEmpty(remaining)) {  configuration.updatePathConfig(remaining,this.getAuthorizationToken());} @TO@ MethodDeclaration@@protected, Endpoint, MethodName:createEndpoint, String uri, String remaining, Map<String,Object> parameters, Exception,  @AT@ 1567 @LENGTH@ 136
---INS MethodInvocation@@ObjectHelper.isNotEmpty(remaining) @TO@ IfStatement@@if (ObjectHelper.isNotEmpty(remaining)) {  configuration.updatePathConfig(remaining,this.getAuthorizationToken());} @AT@ 1571 @LENGTH@ 34
------INS SimpleName@@Name:ObjectHelper @TO@ MethodInvocation@@ObjectHelper.isNotEmpty(remaining) @AT@ 1571 @LENGTH@ 12
------INS SimpleName@@MethodName:isNotEmpty:[remaining] @TO@ MethodInvocation@@ObjectHelper.isNotEmpty(remaining) @AT@ 1584 @LENGTH@ 21
---------INS SimpleName@@remaining @TO@ SimpleName@@MethodName:isNotEmpty:[remaining] @AT@ 1595 @LENGTH@ 9
---INS Block@@ThenBody:{  configuration.updatePathConfig(remaining,this.getAuthorizationToken());} @TO@ IfStatement@@if (ObjectHelper.isNotEmpty(remaining)) {  configuration.updatePathConfig(remaining,this.getAuthorizationToken());} @AT@ 1607 @LENGTH@ 96
------MOV ExpressionStatement@@MethodInvocation:configuration.updatePathConfig(remaining,this.getAuthorizationToken()) @TO@ Block@@ThenBody:{  configuration.updatePathConfig(remaining,this.getAuthorizationToken());} @AT@ 1524 @LENGTH@ 72


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<DigitalSignatureComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<DigitalSignatureComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5591 @LENGTH@ 349
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 5595 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5595 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  ComponentCustomizer<DigitalSignatureComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ ThenBody:{  for (  ComponentCustomizer<DigitalSignatureComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5651 @LENGTH@ 289
------UPD EnhancedForStatement@@for (ComponentCustomizer<DigitalSignatureComponent> configurer : customizers) {  LOGGER.debug("Configure component {}, with configurer {}",component,configurer);  configurer.customize(component);} @TO@ for (ComponentCustomizer<DigitalSignatureComponent> customizer : customizers) {  LOGGER.debug("Configure component {}, with customizer {}",component,customizer);  customizer.customize(component);} @AT@ 5665 @LENGTH@ 265
---------UPD SingleVariableDeclaration@@ComponentCustomizer<DigitalSignatureComponent> configurer @TO@ ComponentCustomizer<DigitalSignatureComponent> customizer @AT@ 5670 @LENGTH@ 57
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5717 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5761 @LENGTH@ 106
------------UPD MethodInvocation@@LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5761 @LENGTH@ 105
---------------UPD SimpleName@@MethodName:debug:["Configure component {}, with configurer {}", component, configurer] @TO@ MethodName:debug:["Configure component {}, with customizer {}", component, customizer] @AT@ 5768 @LENGTH@ 98
------------------UPD StringLiteral@@"Configure component {}, with configurer {}" @TO@ "Configure component {}, with customizer {}" @AT@ 5774 @LENGTH@ 44
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5855 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(component) @TO@ MethodInvocation:customizer.customize(component) @AT@ 5884 @LENGTH@ 32
------------UPD MethodInvocation@@configurer.customize(component) @TO@ customizer.customize(component) @AT@ 5884 @LENGTH@ 31
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5884 @LENGTH@ 10


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<SpringWebserviceComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<SpringWebserviceComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5603 @LENGTH@ 349
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 5607 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5607 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  ComponentCustomizer<SpringWebserviceComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ ThenBody:{  for (  ComponentCustomizer<SpringWebserviceComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5663 @LENGTH@ 289
------UPD EnhancedForStatement@@for (ComponentCustomizer<SpringWebserviceComponent> configurer : customizers) {  LOGGER.debug("Configure component {}, with configurer {}",component,configurer);  configurer.customize(component);} @TO@ for (ComponentCustomizer<SpringWebserviceComponent> customizer : customizers) {  LOGGER.debug("Configure component {}, with customizer {}",component,customizer);  customizer.customize(component);} @AT@ 5677 @LENGTH@ 265
---------UPD SingleVariableDeclaration@@ComponentCustomizer<SpringWebserviceComponent> configurer @TO@ ComponentCustomizer<SpringWebserviceComponent> customizer @AT@ 5682 @LENGTH@ 57
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5729 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5773 @LENGTH@ 106
------------UPD MethodInvocation@@LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5773 @LENGTH@ 105
---------------UPD SimpleName@@MethodName:debug:["Configure component {}, with configurer {}", component, configurer] @TO@ MethodName:debug:["Configure component {}, with customizer {}", component, customizer] @AT@ 5780 @LENGTH@ 98
------------------UPD StringLiteral@@"Configure component {}, with configurer {}" @TO@ "Configure component {}, with customizer {}" @AT@ 5786 @LENGTH@ 44
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5867 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(component) @TO@ MethodInvocation:customizer.customize(component) @AT@ 5896 @LENGTH@ 32
------------UPD MethodInvocation@@configurer.customize(component) @TO@ customizer.customize(component) @AT@ 5896 @LENGTH@ 31
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5896 @LENGTH@ 10


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<SdbComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<SdbComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5394 @LENGTH@ 336
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 5398 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5398 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  ComponentCustomizer<SdbComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ ThenBody:{  for (  ComponentCustomizer<SdbComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5454 @LENGTH@ 276
------UPD EnhancedForStatement@@for (ComponentCustomizer<SdbComponent> configurer : customizers) {  LOGGER.debug("Configure component {}, with configurer {}",component,configurer);  configurer.customize(component);} @TO@ for (ComponentCustomizer<SdbComponent> customizer : customizers) {  LOGGER.debug("Configure component {}, with customizer {}",component,customizer);  customizer.customize(component);} @AT@ 5468 @LENGTH@ 252
---------UPD SingleVariableDeclaration@@ComponentCustomizer<SdbComponent> configurer @TO@ ComponentCustomizer<SdbComponent> customizer @AT@ 5473 @LENGTH@ 44
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5507 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5551 @LENGTH@ 106
------------UPD MethodInvocation@@LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5551 @LENGTH@ 105
---------------UPD SimpleName@@MethodName:debug:["Configure component {}, with configurer {}", component, configurer] @TO@ MethodName:debug:["Configure component {}, with customizer {}", component, customizer] @AT@ 5558 @LENGTH@ 98
------------------UPD StringLiteral@@"Configure component {}, with configurer {}" @TO@ "Configure component {}, with customizer {}" @AT@ 5564 @LENGTH@ 44
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5645 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(component) @TO@ MethodInvocation:customizer.customize(component) @AT@ 5674 @LENGTH@ 32
------------UPD MethodInvocation@@configurer.customize(component) @TO@ customizer.customize(component) @AT@ 5674 @LENGTH@ 31
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5674 @LENGTH@ 10


UPD VariableDeclarationStatement@@List<String> expectedEvents=Arrays.asList("onContextStart","onServiceAdd","onServiceAdd","onServiceAdd","onServiceAdd","onServiceAdd","onServiceAdd","onServiceAdd","onServiceAdd","onServiceAdd","onServiceAdd","onServiceAdd","onComponentAdd","onEndpointAdd","onComponentRemove","onContextStop"); @TO@ List<String> expectedEvents=Arrays.asList("onContextStart","onServiceAdd","onServiceAdd","onServiceAdd","onServiceAdd","onServiceAdd","onServiceAdd","onServiceAdd","onServiceAdd","onServiceAdd","onServiceAdd","onServiceAdd","onServiceAdd","onComponentAdd","onEndpointAdd","onComponentRemove","onContextStop"); @AT@ 1977 @LENGTH@ 327
---UPD VariableDeclarationFragment@@expectedEvents=Arrays.asList("onContextStart","onServiceAdd","onServiceAdd","onServiceAdd","onServiceAdd","onServiceAdd","onServiceAdd","onServiceAdd","onServiceAdd","onServiceAdd","onServiceAdd","onServiceAdd","onComponentAdd","onEndpointAdd","onComponentRemove","onContextStop") @TO@ expectedEvents=Arrays.asList("onContextStart","onServiceAdd","onServiceAdd","onServiceAdd","onServiceAdd","onServiceAdd","onServiceAdd","onServiceAdd","onServiceAdd","onServiceAdd","onServiceAdd","onServiceAdd","onServiceAdd","onComponentAdd","onEndpointAdd","onComponentRemove","onContextStop") @AT@ 1990 @LENGTH@ 313
------UPD MethodInvocation@@Arrays.asList("onContextStart","onServiceAdd","onServiceAdd","onServiceAdd","onServiceAdd","onServiceAdd","onServiceAdd","onServiceAdd","onServiceAdd","onServiceAdd","onServiceAdd","onServiceAdd","onComponentAdd","onEndpointAdd","onComponentRemove","onContextStop") @TO@ Arrays.asList("onContextStart","onServiceAdd","onServiceAdd","onServiceAdd","onServiceAdd","onServiceAdd","onServiceAdd","onServiceAdd","onServiceAdd","onServiceAdd","onServiceAdd","onServiceAdd","onServiceAdd","onComponentAdd","onEndpointAdd","onComponentRemove","onContextStop") @AT@ 2007 @LENGTH@ 296
---------UPD SimpleName@@MethodName:asList:["onContextStart", "onServiceAdd", "onServiceAdd", "onServiceAdd", "onServiceAdd", "onServiceAdd", "onServiceAdd", "onServiceAdd", "onServiceAdd", "onServiceAdd", "onServiceAdd", "onServiceAdd", "onComponentAdd", "onEndpointAdd", "onComponentRemove", "onContextStop"] @TO@ MethodName:asList:["onContextStart", "onServiceAdd", "onServiceAdd", "onServiceAdd", "onServiceAdd", "onServiceAdd", "onServiceAdd", "onServiceAdd", "onServiceAdd", "onServiceAdd", "onServiceAdd", "onServiceAdd", "onServiceAdd", "onComponentAdd", "onEndpointAdd", "onComponentRemove", "onContextStop"] @AT@ 2014 @LENGTH@ 289
------------INS StringLiteral@@"onServiceAdd" @TO@ SimpleName@@MethodName:asList:["onContextStart", "onServiceAdd", "onServiceAdd", "onServiceAdd", "onServiceAdd", "onServiceAdd", "onServiceAdd", "onServiceAdd", "onServiceAdd", "onServiceAdd", "onServiceAdd", "onServiceAdd", "onComponentAdd", "onEndpointAdd", "onComponentRemove", "onContextStop"] @AT@ 2231 @LENGTH@ 14


UPD MethodDeclaration@@public, V, MethodName:putAtomic, C instance, K key, V value, Map<K,V> snapshot,  @TO@ public, boolean, MethodName:putAtomic, C instance, K key, V value, Map<K,V> snapshot,  @AT@ 3673 @LENGTH@ 925
---DEL SimpleType@@V @AT@ 3680 @LENGTH@ 1
---INS PrimitiveType@@boolean @TO@ MethodDeclaration@@public, V, MethodName:putAtomic, C instance, K key, V value, Map<K,V> snapshot,  @AT@ 3740 @LENGTH@ 7
---UPD IfStatement@@if (oldSize == 0) {  newMap=Collections.singletonMap(key,value);} else if (oldSize == 1) {  final Map.Entry<K,V> entry=snapshot.entrySet().iterator().next();  final K oldKey=entry.getKey();  if (oldKey.equals(key)) {    return entry.getValue();  } else {    newMap=new FastCopyHashMap<K,V>(snapshot);    newMap.put(key,value);  }} else {  newMap=new FastCopyHashMap<K,V>(snapshot);  newMap.put(key,value);} @TO@ if (oldSize == 0) {  newMap=Collections.singletonMap(key,value);} else if (oldSize == 1) {  final Map.Entry<K,V> entry=snapshot.entrySet().iterator().next();  final K oldKey=entry.getKey();  if (oldKey.equals(key)) {    return false;  } else {    newMap=new FastCopyHashMap<K,V>(snapshot);    newMap.put(key,value);  }} else {  newMap=new FastCopyHashMap<K,V>(snapshot);  newMap.put(key,value);} @AT@ 3873 @LENGTH@ 576
------UPD Block@@ElseBody:if (oldSize == 1) {  final Map.Entry<K,V> entry=snapshot.entrySet().iterator().next();  final K oldKey=entry.getKey();  if (oldKey.equals(key)) {    return entry.getValue();  } else {    newMap=new FastCopyHashMap<K,V>(snapshot);    newMap.put(key,value);  }} else {  newMap=new FastCopyHashMap<K,V>(snapshot);  newMap.put(key,value);} @TO@ ElseBody:if (oldSize == 1) {  final Map.Entry<K,V> entry=snapshot.entrySet().iterator().next();  final K oldKey=entry.getKey();  if (oldKey.equals(key)) {    return false;  } else {    newMap=new FastCopyHashMap<K,V>(snapshot);    newMap.put(key,value);  }} else {  newMap=new FastCopyHashMap<K,V>(snapshot);  newMap.put(key,value);} @AT@ 3967 @LENGTH@ 482
---------UPD IfStatement@@if (oldSize == 1) {  final Map.Entry<K,V> entry=snapshot.entrySet().iterator().next();  final K oldKey=entry.getKey();  if (oldKey.equals(key)) {    return entry.getValue();  } else {    newMap=new FastCopyHashMap<K,V>(snapshot);    newMap.put(key,value);  }} else {  newMap=new FastCopyHashMap<K,V>(snapshot);  newMap.put(key,value);} @TO@ if (oldSize == 1) {  final Map.Entry<K,V> entry=snapshot.entrySet().iterator().next();  final K oldKey=entry.getKey();  if (oldKey.equals(key)) {    return false;  } else {    newMap=new FastCopyHashMap<K,V>(snapshot);    newMap.put(key,value);  }} else {  newMap=new FastCopyHashMap<K,V>(snapshot);  newMap.put(key,value);} @AT@ 3967 @LENGTH@ 482
------------UPD Block@@ThenBody:{  final Map.Entry<K,V> entry=snapshot.entrySet().iterator().next();  final K oldKey=entry.getKey();  if (oldKey.equals(key)) {    return entry.getValue();  } else {    newMap=new FastCopyHashMap<K,V>(snapshot);    newMap.put(key,value);  }} @TO@ ThenBody:{  final Map.Entry<K,V> entry=snapshot.entrySet().iterator().next();  final K oldKey=entry.getKey();  if (oldKey.equals(key)) {    return false;  } else {    newMap=new FastCopyHashMap<K,V>(snapshot);    newMap.put(key,value);  }} @AT@ 3985 @LENGTH@ 353
---------------UPD IfStatement@@if (oldKey.equals(key)) {  return entry.getValue();} else {  newMap=new FastCopyHashMap<K,V>(snapshot);  newMap.put(key,value);} @TO@ if (oldKey.equals(key)) {  return false;} else {  newMap=new FastCopyHashMap<K,V>(snapshot);  newMap.put(key,value);} @AT@ 4125 @LENGTH@ 203
------------------UPD Block@@ThenBody:{  return entry.getValue();} @TO@ ThenBody:{  return false;} @AT@ 4149 @LENGTH@ 56
---------------------UPD ReturnStatement@@MethodInvocation:entry.getValue() @TO@ BooleanLiteral:false @AT@ 4167 @LENGTH@ 24
------------------------DEL MethodInvocation@@entry.getValue() @AT@ 4174 @LENGTH@ 16
---------------------------DEL SimpleName@@Name:entry @AT@ 4174 @LENGTH@ 5
---------------------------DEL SimpleName@@MethodName:getValue:[] @AT@ 4180 @LENGTH@ 10
------------------------INS BooleanLiteral@@false @TO@ ReturnStatement@@MethodInvocation:entry.getValue() @AT@ 4240 @LENGTH@ 5
---DEL IfStatement@@if (updater.compareAndSet(instance,snapshot,newMap)) {  return null;} else {  return value;} @AT@ 4458 @LENGTH@ 134
------DEL Block@@ThenBody:{  return null;} @AT@ 4513 @LENGTH@ 36
---------DEL ReturnStatement@@NullLiteral:null @AT@ 4527 @LENGTH@ 12
------------DEL NullLiteral@@null @AT@ 4534 @LENGTH@ 4
------DEL Block@@ElseBody:{  return value;} @AT@ 4555 @LENGTH@ 37
---------DEL ReturnStatement@@SimpleName:value @AT@ 4569 @LENGTH@ 13
------------DEL SimpleName@@value @AT@ 4576 @LENGTH@ 5
---INS ReturnStatement@@MethodInvocation:updater.compareAndSet(instance,snapshot,newMap) @TO@ MethodDeclaration@@public, V, MethodName:putAtomic, C instance, K key, V value, Map<K,V> snapshot,  @AT@ 4513 @LENGTH@ 57
------MOV MethodInvocation@@updater.compareAndSet(instance,snapshot,newMap) @TO@ ReturnStatement@@MethodInvocation:updater.compareAndSet(instance,snapshot,newMap) @AT@ 4462 @LENGTH@ 49


UPD FieldDeclaration@@private, Defaultable<Integer>, [port=integer(4777)] @TO@ private, Defaultable<Integer>, [port=integer(4447)] @AT@ 2139 @LENGTH@ 50
---UPD VariableDeclarationFragment@@port=integer(4777) @TO@ port=integer(4447) @AT@ 2168 @LENGTH@ 20
------UPD MethodInvocation@@integer(4777) @TO@ integer(4447) @AT@ 2175 @LENGTH@ 13
---------UPD SimpleName@@MethodName:integer:[4777] @TO@ MethodName:integer:[4447] @AT@ 2175 @LENGTH@ 13
------------UPD NumberLiteral@@4777 @TO@ 4447 @AT@ 2183 @LENGTH@ 4


UPD ExpressionStatement@@Assignment:RCFileCat.test=true @TO@ Assignment:fileCat.test=true @AT@ 3052 @LENGTH@ 20
---UPD Assignment@@RCFileCat.test=true @TO@ fileCat.test=true @AT@ 3052 @LENGTH@ 19
------UPD QualifiedName@@RCFileCat.test @TO@ fileCat.test @AT@ 3052 @LENGTH@ 14
---------UPD SimpleName@@RCFileCat @TO@ fileCat @AT@ 3052 @LENGTH@ 9


UPD ReturnStatement@@MethodInvocation:multiHashOrdered(parentHashCode(),2693,Objects.hashCode(credentialSource)) @TO@ MethodInvocation:multiHashUnordered(parentHashCode(),2693,Objects.hashCode(credentialSource)) @AT@ 6363 @LENGTH@ 84
---UPD MethodInvocation@@multiHashOrdered(parentHashCode(),2693,Objects.hashCode(credentialSource)) @TO@ multiHashUnordered(parentHashCode(),2693,Objects.hashCode(credentialSource)) @AT@ 6370 @LENGTH@ 76
------UPD SimpleName@@MethodName:multiHashOrdered:[parentHashCode(), 2693, Objects.hashCode(credentialSource)] @TO@ MethodName:multiHashUnordered:[parentHashCode(), 2693, Objects.hashCode(credentialSource)] @AT@ 6370 @LENGTH@ 76


INS FieldDeclaration@@private, static, final, String, [EOL=System.lineSeparator()] @TO@ TypeDeclaration@@[public]RoleHierarchyUtilsTests,  @AT@ 943 @LENGTH@ 57
---INS Modifier@@private @TO@ FieldDeclaration@@private, static, final, String, [EOL=System.lineSeparator()] @AT@ 943 @LENGTH@ 7
---INS Modifier@@static @TO@ FieldDeclaration@@private, static, final, String, [EOL=System.lineSeparator()] @AT@ 951 @LENGTH@ 6
---INS Modifier@@final @TO@ FieldDeclaration@@private, static, final, String, [EOL=System.lineSeparator()] @AT@ 958 @LENGTH@ 5
---INS SimpleType@@String @TO@ FieldDeclaration@@private, static, final, String, [EOL=System.lineSeparator()] @AT@ 964 @LENGTH@ 6
---INS VariableDeclarationFragment@@EOL=System.lineSeparator() @TO@ FieldDeclaration@@private, static, final, String, [EOL=System.lineSeparator()] @AT@ 971 @LENGTH@ 28
------INS SimpleName@@EOL @TO@ VariableDeclarationFragment@@EOL=System.lineSeparator() @AT@ 971 @LENGTH@ 3
------INS MethodInvocation@@System.lineSeparator() @TO@ VariableDeclarationFragment@@EOL=System.lineSeparator() @AT@ 977 @LENGTH@ 22
---------INS SimpleName@@Name:System @TO@ MethodInvocation@@System.lineSeparator() @AT@ 977 @LENGTH@ 6
---------INS SimpleName@@MethodName:lineSeparator:[] @TO@ MethodInvocation@@System.lineSeparator() @AT@ 984 @LENGTH@ 15


UPD ReturnStatement@@MethodInvocation:multiHashOrdered(parentHashCode(),10267,mechanismProperties.hashCode()) @TO@ MethodInvocation:multiHashUnordered(parentHashCode(),10267,mechanismProperties.hashCode()) @AT@ 1969 @LENGTH@ 81
---UPD MethodInvocation@@multiHashOrdered(parentHashCode(),10267,mechanismProperties.hashCode()) @TO@ multiHashUnordered(parentHashCode(),10267,mechanismProperties.hashCode()) @AT@ 1976 @LENGTH@ 73
------UPD SimpleName@@MethodName:multiHashOrdered:[parentHashCode(), 10267, mechanismProperties.hashCode()] @TO@ MethodName:multiHashUnordered:[parentHashCode(), 10267, mechanismProperties.hashCode()] @AT@ 1976 @LENGTH@ 73


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<DataSetComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<DataSetComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5446 @LENGTH@ 340
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 5450 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5450 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  ComponentCustomizer<DataSetComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ ThenBody:{  for (  ComponentCustomizer<DataSetComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5506 @LENGTH@ 280
------UPD EnhancedForStatement@@for (ComponentCustomizer<DataSetComponent> configurer : customizers) {  LOGGER.debug("Configure component {}, with configurer {}",component,configurer);  configurer.customize(component);} @TO@ for (ComponentCustomizer<DataSetComponent> customizer : customizers) {  LOGGER.debug("Configure component {}, with customizer {}",component,customizer);  customizer.customize(component);} @AT@ 5520 @LENGTH@ 256
---------UPD SingleVariableDeclaration@@ComponentCustomizer<DataSetComponent> configurer @TO@ ComponentCustomizer<DataSetComponent> customizer @AT@ 5525 @LENGTH@ 48
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5563 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5607 @LENGTH@ 106
------------UPD MethodInvocation@@LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5607 @LENGTH@ 105
---------------UPD SimpleName@@MethodName:debug:["Configure component {}, with configurer {}", component, configurer] @TO@ MethodName:debug:["Configure component {}, with customizer {}", component, customizer] @AT@ 5614 @LENGTH@ 98
------------------UPD StringLiteral@@"Configure component {}, with configurer {}" @TO@ "Configure component {}, with customizer {}" @AT@ 5620 @LENGTH@ 44
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5701 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(component) @TO@ MethodInvocation:customizer.customize(component) @AT@ 5730 @LENGTH@ 32
------------UPD MethodInvocation@@configurer.customize(component) @TO@ customizer.customize(component) @AT@ 5730 @LENGTH@ 31
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5730 @LENGTH@ 10


UPD TryStatement@@try {  p.pack(ji=new JarInputStream(streamBridge.getInput()),originalOutput);  success=true;}  finally {  if (!success) {    IOUtils.closeQuietly(ji);  }} @TO@ try {  ji=new JarInputStream(streamBridge.getInput());  p.pack(ji,originalOutput);  success=true;}  finally {  if (!success) {    IOUtils.closeQuietly(ji);  }} @AT@ 4345 @LENGTH@ 284
---UPD ExpressionStatement@@MethodInvocation:p.pack(ji=new JarInputStream(streamBridge.getInput()),originalOutput) @TO@ Assignment:ji=new JarInputStream(streamBridge.getInput()) @AT@ 4367 @LENGTH@ 96
------DEL MethodInvocation@@p.pack(ji=new JarInputStream(streamBridge.getInput()),originalOutput) @AT@ 4367 @LENGTH@ 95
---------DEL SimpleName@@Name:p @AT@ 4367 @LENGTH@ 1
---------DEL SimpleName@@MethodName:pack:[ji=new JarInputStream(streamBridge.getInput()), originalOutput] @AT@ 4369 @LENGTH@ 93
------------DEL SimpleName@@originalOutput @AT@ 4447 @LENGTH@ 14
------MOV Assignment@@ji=new JarInputStream(streamBridge.getInput()) @TO@ ExpressionStatement@@MethodInvocation:p.pack(ji=new JarInputStream(streamBridge.getInput()),originalOutput) @AT@ 4374 @LENGTH@ 48
---INS ExpressionStatement@@MethodInvocation:p.pack(ji,originalOutput) @TO@ TryStatement@@try {  p.pack(ji=new JarInputStream(streamBridge.getInput()),originalOutput);  success=true;}  finally {  if (!success) {    IOUtils.closeQuietly(ji);  }} @AT@ 4433 @LENGTH@ 27
------INS MethodInvocation@@p.pack(ji,originalOutput) @TO@ ExpressionStatement@@MethodInvocation:p.pack(ji,originalOutput) @AT@ 4433 @LENGTH@ 26
---------INS SimpleName@@Name:p @TO@ MethodInvocation@@p.pack(ji,originalOutput) @AT@ 4433 @LENGTH@ 1
---------INS SimpleName@@MethodName:pack:[ji, originalOutput] @TO@ MethodInvocation@@p.pack(ji,originalOutput) @AT@ 4435 @LENGTH@ 24
------------INS SimpleName@@ji @TO@ SimpleName@@MethodName:pack:[ji, originalOutput] @AT@ 4440 @LENGTH@ 2
------------INS SimpleName@@originalOutput @TO@ SimpleName@@MethodName:pack:[ji, originalOutput] @AT@ 4444 @LENGTH@ 14


UPD MethodDeclaration@@public, void, MethodName:createsNonShericalNearForDistanceWithDefaultMetric,  @TO@ public, void, MethodName:createsNonSphericalNearForDistanceWithDefaultMetric,  @AT@ 15661 @LENGTH@ 445
---UPD SimpleName@@MethodName:createsNonShericalNearForDistanceWithDefaultMetric @TO@ MethodName:createsNonSphericalNearForDistanceWithDefaultMetric @AT@ 15673 @LENGTH@ 50


UPD IfStatement@@if (accessToken != null && !key.equals(authenticationKeyGenerator.extractKey(readAuthentication(accessToken.getValue())))) {  storeAccessToken(accessToken,authentication);} @TO@ if (accessToken != null) {  OAuth2Authentication storedAuthentication=readAuthentication(accessToken.getValue());  if ((storedAuthentication == null || !key.equals(authenticationKeyGenerator.extractKey(storedAuthentication)))) {    storeAccessToken(accessToken,authentication);  }} @AT@ 3705 @LENGTH@ 316
---DEL InfixExpression@@accessToken != null && !key.equals(authenticationKeyGenerator.extractKey(readAuthentication(accessToken.getValue()))) @AT@ 3709 @LENGTH@ 121
------DEL InfixExpression@@accessToken != null @AT@ 3709 @LENGTH@ 19
---INS InfixExpression@@accessToken != null @TO@ IfStatement@@if (accessToken != null && !key.equals(authenticationKeyGenerator.extractKey(readAuthentication(accessToken.getValue())))) {  storeAccessToken(accessToken,authentication);} @AT@ 3709 @LENGTH@ 19
------MOV SimpleName@@accessToken @TO@ InfixExpression@@accessToken != null @AT@ 3709 @LENGTH@ 11
------MOV Operator@@!= @TO@ InfixExpression@@accessToken != null @AT@ 3720 @LENGTH@ 2
------MOV NullLiteral@@null @TO@ InfixExpression@@accessToken != null @AT@ 3724 @LENGTH@ 4
---INS Block@@ThenBody:{  OAuth2Authentication storedAuthentication=readAuthentication(accessToken.getValue());  if ((storedAuthentication == null || !key.equals(authenticationKeyGenerator.extractKey(storedAuthentication)))) {    storeAccessToken(accessToken,authentication);  }} @TO@ IfStatement@@if (accessToken != null && !key.equals(authenticationKeyGenerator.extractKey(readAuthentication(accessToken.getValue())))) {  storeAccessToken(accessToken,authentication);} @AT@ 3730 @LENGTH@ 407
------INS VariableDeclarationStatement@@OAuth2Authentication storedAuthentication=readAuthentication(accessToken.getValue()); @TO@ Block@@ThenBody:{  OAuth2Authentication storedAuthentication=readAuthentication(accessToken.getValue());  if ((storedAuthentication == null || !key.equals(authenticationKeyGenerator.extractKey(storedAuthentication)))) {    storeAccessToken(accessToken,authentication);  }} @AT@ 3735 @LENGTH@ 87
---------INS SimpleType@@OAuth2Authentication @TO@ VariableDeclarationStatement@@OAuth2Authentication storedAuthentication=readAuthentication(accessToken.getValue()); @AT@ 3735 @LENGTH@ 20
---------INS VariableDeclarationFragment@@storedAuthentication=readAuthentication(accessToken.getValue()) @TO@ VariableDeclarationStatement@@OAuth2Authentication storedAuthentication=readAuthentication(accessToken.getValue()); @AT@ 3756 @LENGTH@ 65
------------INS SimpleName@@storedAuthentication @TO@ VariableDeclarationFragment@@storedAuthentication=readAuthentication(accessToken.getValue()) @AT@ 3756 @LENGTH@ 20
------------MOV MethodInvocation@@readAuthentication(accessToken.getValue()) @TO@ VariableDeclarationFragment@@storedAuthentication=readAuthentication(accessToken.getValue()) @AT@ 3786 @LENGTH@ 42
------INS IfStatement@@if ((storedAuthentication == null || !key.equals(authenticationKeyGenerator.extractKey(storedAuthentication)))) {  storeAccessToken(accessToken,authentication);} @TO@ Block@@ThenBody:{  OAuth2Authentication storedAuthentication=readAuthentication(accessToken.getValue());  if ((storedAuthentication == null || !key.equals(authenticationKeyGenerator.extractKey(storedAuthentication)))) {    storeAccessToken(accessToken,authentication);  }} @AT@ 3826 @LENGTH@ 306
---------INS ParenthesizedExpression@@(storedAuthentication == null || !key.equals(authenticationKeyGenerator.extractKey(storedAuthentication))) @TO@ IfStatement@@if ((storedAuthentication == null || !key.equals(authenticationKeyGenerator.extractKey(storedAuthentication)))) {  storeAccessToken(accessToken,authentication);} @AT@ 3830 @LENGTH@ 106
------------INS InfixExpression@@storedAuthentication == null || !key.equals(authenticationKeyGenerator.extractKey(storedAuthentication)) @TO@ ParenthesizedExpression@@(storedAuthentication == null || !key.equals(authenticationKeyGenerator.extractKey(storedAuthentication))) @AT@ 3831 @LENGTH@ 104
---------------MOV PrefixExpression@@!key.equals(authenticationKeyGenerator.extractKey(readAuthentication(accessToken.getValue()))) @TO@ InfixExpression@@storedAuthentication == null || !key.equals(authenticationKeyGenerator.extractKey(storedAuthentication)) @AT@ 3736 @LENGTH@ 94
------------------UPD MethodInvocation@@key.equals(authenticationKeyGenerator.extractKey(readAuthentication(accessToken.getValue()))) @TO@ key.equals(authenticationKeyGenerator.extractKey(storedAuthentication)) @AT@ 3737 @LENGTH@ 93
---------------------UPD SimpleName@@MethodName:equals:[authenticationKeyGenerator.extractKey(readAuthentication(accessToken.getValue()))] @TO@ MethodName:equals:[authenticationKeyGenerator.extractKey(storedAuthentication)] @AT@ 3741 @LENGTH@ 89
------------------------UPD MethodInvocation@@authenticationKeyGenerator.extractKey(readAuthentication(accessToken.getValue())) @TO@ authenticationKeyGenerator.extractKey(storedAuthentication) @AT@ 3748 @LENGTH@ 81
---------------------------UPD SimpleName@@MethodName:extractKey:[readAuthentication(accessToken.getValue())] @TO@ MethodName:extractKey:[storedAuthentication] @AT@ 3775 @LENGTH@ 54
------------------------------INS SimpleName@@storedAuthentication @TO@ SimpleName@@MethodName:extractKey:[readAuthentication(accessToken.getValue())] @AT@ 3913 @LENGTH@ 20
---------------INS InfixExpression@@storedAuthentication == null @TO@ InfixExpression@@storedAuthentication == null || !key.equals(authenticationKeyGenerator.extractKey(storedAuthentication)) @AT@ 3831 @LENGTH@ 28
------------------MOV Operator@@&& @TO@ InfixExpression@@storedAuthentication == null @AT@ 3728 @LENGTH@ 2
------------------INS SimpleName@@storedAuthentication @TO@ InfixExpression@@storedAuthentication == null @AT@ 3831 @LENGTH@ 20
------------------INS NullLiteral@@null @TO@ InfixExpression@@storedAuthentication == null @AT@ 3855 @LENGTH@ 4
---------------INS Operator@@|| @TO@ InfixExpression@@storedAuthentication == null || !key.equals(authenticationKeyGenerator.extractKey(storedAuthentication)) @AT@ 3859 @LENGTH@ 2
---------MOV Block@@ThenBody:{  storeAccessToken(accessToken,authentication);} @TO@ IfStatement@@if ((storedAuthentication == null || !key.equals(authenticationKeyGenerator.extractKey(storedAuthentication)))) {  storeAccessToken(accessToken,authentication);} @AT@ 3832 @LENGTH@ 189


UPD VariableDeclarationStatement@@TypeInformation<?> componentType=returnType.getComponentType(); @TO@ Optional<TypeInformation<?>> componentType=returnType.getComponentType(); @AT@ 5398 @LENGTH@ 65
---DEL ParameterizedType@@TypeInformation<?> @AT@ 5398 @LENGTH@ 18
---INS ParameterizedType@@Optional<TypeInformation<?>> @TO@ VariableDeclarationStatement@@TypeInformation<?> componentType=returnType.getComponentType(); @AT@ 5426 @LENGTH@ 28
------INS SimpleType@@Optional @TO@ ParameterizedType@@Optional<TypeInformation<?>> @AT@ 5426 @LENGTH@ 8
------INS ParameterizedType@@TypeInformation<?> @TO@ ParameterizedType@@Optional<TypeInformation<?>> @AT@ 5435 @LENGTH@ 18
---------MOV SimpleType@@TypeInformation @TO@ ParameterizedType@@TypeInformation<?> @AT@ 5398 @LENGTH@ 15
---------MOV WildcardType@@? @TO@ ParameterizedType@@TypeInformation<?> @AT@ 5414 @LENGTH@ 1


UPD FieldDeclaration@@private, static, Logger, [LOG] @TO@ private, static, final, Logger, [LOG=LoggerFactory.getLogger("org.apache.hadoop.hive.ql.optimizer.GenMapRedUtils")] @AT@ 6240 @LENGTH@ 26
---INS Modifier@@final @TO@ FieldDeclaration@@private, static, Logger, [LOG] @AT@ 6255 @LENGTH@ 5
---UPD VariableDeclarationFragment@@LOG @TO@ LOG=LoggerFactory.getLogger("org.apache.hadoop.hive.ql.optimizer.GenMapRedUtils") @AT@ 6262 @LENGTH@ 3
------MOV MethodInvocation@@LoggerFactory.getLogger("org.apache.hadoop.hive.ql.optimizer.GenMapRedUtils") @TO@ VariableDeclarationFragment@@LOG @AT@ 6289 @LENGTH@ 77


UPD ExpressionStatement@@MethodInvocation:longLinkEntry.setSize(len + 1) @TO@ MethodInvocation:longLinkEntry.setSize(len + 1l) @AT@ 25940 @LENGTH@ 31
---UPD MethodInvocation@@longLinkEntry.setSize(len + 1) @TO@ longLinkEntry.setSize(len + 1l) @AT@ 25940 @LENGTH@ 30
------UPD SimpleName@@MethodName:setSize:[len + 1] @TO@ MethodName:setSize:[len + 1l] @AT@ 25954 @LENGTH@ 16
---------UPD InfixExpression@@len + 1 @TO@ len + 1l @AT@ 25962 @LENGTH@ 7
------------UPD NumberLiteral@@1 @TO@ 1l @AT@ 25968 @LENGTH@ 1


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  DataFormatCustomizer<ZipDataFormat> configurer : customizers) {    LOGGER.debug("Configure dataformat {}, with configurer {}",dataformat,configurer);    configurer.customize(dataformat);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  DataFormatCustomizer<ZipDataFormat> customizer : customizers) {    LOGGER.debug("Configure dataformat {}, with customizer {}",dataformat,customizer);    customizer.customize(dataformat);  }} @AT@ 5249 @LENGTH@ 422
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 5253 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5253 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  DataFormatCustomizer<ZipDataFormat> configurer : customizers) {    LOGGER.debug("Configure dataformat {}, with configurer {}",dataformat,configurer);    configurer.customize(dataformat);  }} @TO@ ThenBody:{  for (  DataFormatCustomizer<ZipDataFormat> customizer : customizers) {    LOGGER.debug("Configure dataformat {}, with customizer {}",dataformat,customizer);    customizer.customize(dataformat);  }} @AT@ 5309 @LENGTH@ 362
------UPD EnhancedForStatement@@for (DataFormatCustomizer<ZipDataFormat> configurer : customizers) {  LOGGER.debug("Configure dataformat {}, with configurer {}",dataformat,configurer);  configurer.customize(dataformat);} @TO@ for (DataFormatCustomizer<ZipDataFormat> customizer : customizers) {  LOGGER.debug("Configure dataformat {}, with customizer {}",dataformat,customizer);  customizer.customize(dataformat);} @AT@ 5331 @LENGTH@ 322
---------UPD SingleVariableDeclaration@@DataFormatCustomizer<ZipDataFormat> configurer @TO@ DataFormatCustomizer<ZipDataFormat> customizer @AT@ 5336 @LENGTH@ 46
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5372 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure dataformat {}, with configurer {}",dataformat,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure dataformat {}, with customizer {}",dataformat,customizer) @AT@ 5424 @LENGTH@ 149
------------UPD MethodInvocation@@LOGGER.debug("Configure dataformat {}, with configurer {}",dataformat,configurer) @TO@ LOGGER.debug("Configure dataformat {}, with customizer {}",dataformat,customizer) @AT@ 5424 @LENGTH@ 148
---------------UPD SimpleName@@MethodName:debug:["Configure dataformat {}, with configurer {}", dataformat, configurer] @TO@ MethodName:debug:["Configure dataformat {}, with customizer {}", dataformat, customizer] @AT@ 5431 @LENGTH@ 141
------------------UPD StringLiteral@@"Configure dataformat {}, with configurer {}" @TO@ "Configure dataformat {}, with customizer {}" @AT@ 5470 @LENGTH@ 45
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5561 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(dataformat) @TO@ MethodInvocation:customizer.customize(dataformat) @AT@ 5598 @LENGTH@ 33
------------UPD MethodInvocation@@configurer.customize(dataformat) @TO@ customizer.customize(dataformat) @AT@ 5598 @LENGTH@ 32
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5598 @LENGTH@ 10


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled(); @AT@ 5230 @LENGTH@ 160
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5238 @LENGTH@ 151
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5238 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5255 @LENGTH@ 134
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 5255 @LENGTH@ 64
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5255 @LENGTH@ 35
---------UPD MethodInvocation@@componentConfiguration.getConfigurer().isEnabled() @TO@ componentConfiguration.getCustomizer().isEnabled() @AT@ 5339 @LENGTH@ 50
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5339 @LENGTH@ 38


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled(); @AT@ 5226 @LENGTH@ 160
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5234 @LENGTH@ 151
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5234 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5251 @LENGTH@ 134
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 5251 @LENGTH@ 64
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5251 @LENGTH@ 35
---------UPD MethodInvocation@@componentConfiguration.getConfigurer().isEnabled() @TO@ componentConfiguration.getCustomizer().isEnabled() @AT@ 5335 @LENGTH@ 50
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5335 @LENGTH@ 38


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled(); @AT@ 5226 @LENGTH@ 160
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5234 @LENGTH@ 151
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5234 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5251 @LENGTH@ 134
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 5251 @LENGTH@ 64
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5251 @LENGTH@ 35
---------UPD MethodInvocation@@componentConfiguration.getConfigurer().isEnabled() @TO@ componentConfiguration.getCustomizer().isEnabled() @AT@ 5335 @LENGTH@ 50
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5335 @LENGTH@ 38


UPD ExpressionStatement@@MethodInvocation:assertEquals(9,rows.size()) @TO@ MethodInvocation:assertEquals(10,rows.size()) @AT@ 3537 @LENGTH@ 29
---UPD MethodInvocation@@assertEquals(9,rows.size()) @TO@ assertEquals(10,rows.size()) @AT@ 3537 @LENGTH@ 28
------UPD SimpleName@@MethodName:assertEquals:[9, rows.size()] @TO@ MethodName:assertEquals:[10, rows.size()] @AT@ 3537 @LENGTH@ 28
---------UPD NumberLiteral@@9 @TO@ 10 @AT@ 3550 @LENGTH@ 1


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<PropertiesComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<PropertiesComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5497 @LENGTH@ 343
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 5501 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5501 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  ComponentCustomizer<PropertiesComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ ThenBody:{  for (  ComponentCustomizer<PropertiesComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5557 @LENGTH@ 283
------UPD EnhancedForStatement@@for (ComponentCustomizer<PropertiesComponent> configurer : customizers) {  LOGGER.debug("Configure component {}, with configurer {}",component,configurer);  configurer.customize(component);} @TO@ for (ComponentCustomizer<PropertiesComponent> customizer : customizers) {  LOGGER.debug("Configure component {}, with customizer {}",component,customizer);  customizer.customize(component);} @AT@ 5571 @LENGTH@ 259
---------UPD SingleVariableDeclaration@@ComponentCustomizer<PropertiesComponent> configurer @TO@ ComponentCustomizer<PropertiesComponent> customizer @AT@ 5576 @LENGTH@ 51
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5617 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5661 @LENGTH@ 106
------------UPD MethodInvocation@@LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5661 @LENGTH@ 105
---------------UPD SimpleName@@MethodName:debug:["Configure component {}, with configurer {}", component, configurer] @TO@ MethodName:debug:["Configure component {}, with customizer {}", component, customizer] @AT@ 5668 @LENGTH@ 98
------------------UPD StringLiteral@@"Configure component {}, with configurer {}" @TO@ "Configure component {}, with customizer {}" @AT@ 5674 @LENGTH@ 44
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5755 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(component) @TO@ MethodInvocation:customizer.customize(component) @AT@ 5784 @LENGTH@ 32
------------UPD MethodInvocation@@configurer.customize(component) @TO@ customizer.customize(component) @AT@ 5784 @LENGTH@ 31
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5784 @LENGTH@ 10


UPD IfStatement@@if (chat == null) {  room=endpoint.resolveRoom(connection);  MultiUserChatManager chatManager=MultiUserChatManager.getInstanceFor(connection);  chat=chatManager.getMultiUserChat(JidCreate.entityBareFrom(room));  MucEnterConfiguration mucc=chat.getEnterConfigurationBuilder(Resourcepart.from(endpoint.getNickname())).requestNoHistory().build();  chat.join(mucc);  if (LOG.isInfoEnabled()) {    LOG.info("Joined room: {} as: {}",room,endpoint.getNickname());  }} @TO@ if (chat == null) {  room=endpoint.resolveRoom(connection);  MultiUserChatManager chatManager=MultiUserChatManager.getInstanceFor(connection);  chat=chatManager.getMultiUserChat(JidCreate.entityBareFrom(room));  MucEnterConfiguration mucc=chat.getEnterConfigurationBuilder(Resourcepart.from(endpoint.getNickname())).requestNoHistory().build();  chat.join(mucc);  LOG.info("Joined room: {} as: {}",room,endpoint.getNickname());} @AT@ 4693 @LENGTH@ 569
---UPD Block@@ThenBody:{  room=endpoint.resolveRoom(connection);  MultiUserChatManager chatManager=MultiUserChatManager.getInstanceFor(connection);  chat=chatManager.getMultiUserChat(JidCreate.entityBareFrom(room));  MucEnterConfiguration mucc=chat.getEnterConfigurationBuilder(Resourcepart.from(endpoint.getNickname())).requestNoHistory().build();  chat.join(mucc);  if (LOG.isInfoEnabled()) {    LOG.info("Joined room: {} as: {}",room,endpoint.getNickname());  }} @TO@ ThenBody:{  room=endpoint.resolveRoom(connection);  MultiUserChatManager chatManager=MultiUserChatManager.getInstanceFor(connection);  chat=chatManager.getMultiUserChat(JidCreate.entityBareFrom(room));  MucEnterConfiguration mucc=chat.getEnterConfigurationBuilder(Resourcepart.from(endpoint.getNickname())).requestNoHistory().build();  chat.join(mucc);  LOG.info("Joined room: {} as: {}",room,endpoint.getNickname());} @AT@ 4711 @LENGTH@ 551
------DEL IfStatement@@if (LOG.isInfoEnabled()) {  LOG.info("Joined room: {} as: {}",room,endpoint.getNickname());} @AT@ 5130 @LENGTH@ 122
---------DEL MethodInvocation@@LOG.isInfoEnabled() @AT@ 5134 @LENGTH@ 19
------------DEL SimpleName@@Name:LOG @AT@ 5134 @LENGTH@ 3
------------DEL SimpleName@@MethodName:isInfoEnabled:[] @AT@ 5138 @LENGTH@ 15
---------DEL Block@@ThenBody:{  LOG.info("Joined room: {} as: {}",room,endpoint.getNickname());} @AT@ 5155 @LENGTH@ 97
------MOV ExpressionStatement@@MethodInvocation:LOG.info("Joined room: {} as: {}",room,endpoint.getNickname()) @TO@ Block@@ThenBody:{  room=endpoint.resolveRoom(connection);  MultiUserChatManager chatManager=MultiUserChatManager.getInstanceFor(connection);  chat=chatManager.getMultiUserChat(JidCreate.entityBareFrom(room));  MucEnterConfiguration mucc=chat.getEnterConfigurationBuilder(Resourcepart.from(endpoint.getNickname())).requestNoHistory().build();  chat.join(mucc);  if (LOG.isInfoEnabled()) {    LOG.info("Joined room: {} as: {}",room,endpoint.getNickname());  }} @AT@ 5173 @LENGTH@ 65


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  LanguageCustomizer<PythonLanguage> configurer : customizers) {    LOGGER.debug("Configure language {}, with configurer {}",language,configurer);    configurer.customize(language);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  LanguageCustomizer<PythonLanguage> customizer : customizers) {    LOGGER.debug("Configure language {}, with customizer {}",language,customizer);    customizer.customize(language);  }} @AT@ 4723 @LENGTH@ 334
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 4727 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 4727 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  LanguageCustomizer<PythonLanguage> configurer : customizers) {    LOGGER.debug("Configure language {}, with configurer {}",language,configurer);    configurer.customize(language);  }} @TO@ ThenBody:{  for (  LanguageCustomizer<PythonLanguage> customizer : customizers) {    LOGGER.debug("Configure language {}, with customizer {}",language,customizer);    customizer.customize(language);  }} @AT@ 4783 @LENGTH@ 274
------UPD EnhancedForStatement@@for (LanguageCustomizer<PythonLanguage> configurer : customizers) {  LOGGER.debug("Configure language {}, with configurer {}",language,configurer);  configurer.customize(language);} @TO@ for (LanguageCustomizer<PythonLanguage> customizer : customizers) {  LOGGER.debug("Configure language {}, with customizer {}",language,customizer);  customizer.customize(language);} @AT@ 4797 @LENGTH@ 250
---------UPD SingleVariableDeclaration@@LanguageCustomizer<PythonLanguage> configurer @TO@ LanguageCustomizer<PythonLanguage> customizer @AT@ 4802 @LENGTH@ 45
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 4837 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure language {}, with configurer {}",language,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure language {}, with customizer {}",language,customizer) @AT@ 4881 @LENGTH@ 104
------------UPD MethodInvocation@@LOGGER.debug("Configure language {}, with configurer {}",language,configurer) @TO@ LOGGER.debug("Configure language {}, with customizer {}",language,customizer) @AT@ 4881 @LENGTH@ 103
---------------UPD SimpleName@@MethodName:debug:["Configure language {}, with configurer {}", language, configurer] @TO@ MethodName:debug:["Configure language {}, with customizer {}", language, customizer] @AT@ 4888 @LENGTH@ 96
------------------UPD StringLiteral@@"Configure language {}, with configurer {}" @TO@ "Configure language {}, with customizer {}" @AT@ 4894 @LENGTH@ 43
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 4973 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(language) @TO@ MethodInvocation:customizer.customize(language) @AT@ 5002 @LENGTH@ 31
------------UPD MethodInvocation@@configurer.customize(language) @TO@ customizer.customize(language) @AT@ 5002 @LENGTH@ 30
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5002 @LENGTH@ 10


UPD VariableDeclarationStatement@@String urlString="service:jmx:remote://localhost:4777"; @TO@ String urlString="service:jmx:remote://localhost:4447"; @AT@ 2151 @LENGTH@ 57
---UPD VariableDeclarationFragment@@urlString="service:jmx:remote://localhost:4777" @TO@ urlString="service:jmx:remote://localhost:4447" @AT@ 2158 @LENGTH@ 49
------UPD StringLiteral@@"service:jmx:remote://localhost:4777" @TO@ "service:jmx:remote://localhost:4447" @AT@ 2170 @LENGTH@ 37


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  DataFormatCustomizer<UniVocityFixedWidthDataFormat> configurer : customizers) {    LOGGER.debug("Configure dataformat {}, with configurer {}",dataformat,configurer);    configurer.customize(dataformat);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  DataFormatCustomizer<UniVocityFixedWidthDataFormat> customizer : customizers) {    LOGGER.debug("Configure dataformat {}, with customizer {}",dataformat,customizer);    customizer.customize(dataformat);  }} @AT@ 5545 @LENGTH@ 438
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 5549 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5549 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  DataFormatCustomizer<UniVocityFixedWidthDataFormat> configurer : customizers) {    LOGGER.debug("Configure dataformat {}, with configurer {}",dataformat,configurer);    configurer.customize(dataformat);  }} @TO@ ThenBody:{  for (  DataFormatCustomizer<UniVocityFixedWidthDataFormat> customizer : customizers) {    LOGGER.debug("Configure dataformat {}, with customizer {}",dataformat,customizer);    customizer.customize(dataformat);  }} @AT@ 5605 @LENGTH@ 378
------UPD EnhancedForStatement@@for (DataFormatCustomizer<UniVocityFixedWidthDataFormat> configurer : customizers) {  LOGGER.debug("Configure dataformat {}, with configurer {}",dataformat,configurer);  configurer.customize(dataformat);} @TO@ for (DataFormatCustomizer<UniVocityFixedWidthDataFormat> customizer : customizers) {  LOGGER.debug("Configure dataformat {}, with customizer {}",dataformat,customizer);  customizer.customize(dataformat);} @AT@ 5627 @LENGTH@ 338
---------UPD SingleVariableDeclaration@@DataFormatCustomizer<UniVocityFixedWidthDataFormat> configurer @TO@ DataFormatCustomizer<UniVocityFixedWidthDataFormat> customizer @AT@ 5632 @LENGTH@ 62
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5684 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure dataformat {}, with configurer {}",dataformat,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure dataformat {}, with customizer {}",dataformat,customizer) @AT@ 5736 @LENGTH@ 149
------------UPD MethodInvocation@@LOGGER.debug("Configure dataformat {}, with configurer {}",dataformat,configurer) @TO@ LOGGER.debug("Configure dataformat {}, with customizer {}",dataformat,customizer) @AT@ 5736 @LENGTH@ 148
---------------UPD SimpleName@@MethodName:debug:["Configure dataformat {}, with configurer {}", dataformat, configurer] @TO@ MethodName:debug:["Configure dataformat {}, with customizer {}", dataformat, customizer] @AT@ 5743 @LENGTH@ 141
------------------UPD StringLiteral@@"Configure dataformat {}, with configurer {}" @TO@ "Configure dataformat {}, with customizer {}" @AT@ 5782 @LENGTH@ 45
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5873 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(dataformat) @TO@ MethodInvocation:customizer.customize(dataformat) @AT@ 5910 @LENGTH@ 33
------------UPD MethodInvocation@@configurer.customize(dataformat) @TO@ customizer.customize(dataformat) @AT@ 5910 @LENGTH@ 32
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5910 @LENGTH@ 10


UPD FieldDeclaration@@private, static, ThreadLocal<HiveIOExceptionHandlerChain>, [handlerChainInstance=new ThreadLocal<HiveIOExceptionHandlerChain>()] @TO@ private, static, final, ThreadLocal<HiveIOExceptionHandlerChain>, [handlerChainInstance=new ThreadLocal<HiveIOExceptionHandlerChain>()] @AT@ 1005 @LENGTH@ 130
---INS Modifier@@final @TO@ FieldDeclaration@@private, static, ThreadLocal<HiveIOExceptionHandlerChain>, [handlerChainInstance=new ThreadLocal<HiveIOExceptionHandlerChain>()] @AT@ 1020 @LENGTH@ 5


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  DataFormatCustomizer<XmlBeansDataFormat> configurer : customizers) {    LOGGER.debug("Configure dataformat {}, with configurer {}",dataformat,configurer);    configurer.customize(dataformat);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  DataFormatCustomizer<XmlBeansDataFormat> customizer : customizers) {    LOGGER.debug("Configure dataformat {}, with customizer {}",dataformat,customizer);    customizer.customize(dataformat);  }} @AT@ 5364 @LENGTH@ 427
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 5368 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5368 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  DataFormatCustomizer<XmlBeansDataFormat> configurer : customizers) {    LOGGER.debug("Configure dataformat {}, with configurer {}",dataformat,configurer);    configurer.customize(dataformat);  }} @TO@ ThenBody:{  for (  DataFormatCustomizer<XmlBeansDataFormat> customizer : customizers) {    LOGGER.debug("Configure dataformat {}, with customizer {}",dataformat,customizer);    customizer.customize(dataformat);  }} @AT@ 5424 @LENGTH@ 367
------UPD EnhancedForStatement@@for (DataFormatCustomizer<XmlBeansDataFormat> configurer : customizers) {  LOGGER.debug("Configure dataformat {}, with configurer {}",dataformat,configurer);  configurer.customize(dataformat);} @TO@ for (DataFormatCustomizer<XmlBeansDataFormat> customizer : customizers) {  LOGGER.debug("Configure dataformat {}, with customizer {}",dataformat,customizer);  customizer.customize(dataformat);} @AT@ 5446 @LENGTH@ 327
---------UPD SingleVariableDeclaration@@DataFormatCustomizer<XmlBeansDataFormat> configurer @TO@ DataFormatCustomizer<XmlBeansDataFormat> customizer @AT@ 5451 @LENGTH@ 51
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5492 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure dataformat {}, with configurer {}",dataformat,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure dataformat {}, with customizer {}",dataformat,customizer) @AT@ 5544 @LENGTH@ 149
------------UPD MethodInvocation@@LOGGER.debug("Configure dataformat {}, with configurer {}",dataformat,configurer) @TO@ LOGGER.debug("Configure dataformat {}, with customizer {}",dataformat,customizer) @AT@ 5544 @LENGTH@ 148
---------------UPD SimpleName@@MethodName:debug:["Configure dataformat {}, with configurer {}", dataformat, configurer] @TO@ MethodName:debug:["Configure dataformat {}, with customizer {}", dataformat, customizer] @AT@ 5551 @LENGTH@ 141
------------------UPD StringLiteral@@"Configure dataformat {}, with configurer {}" @TO@ "Configure dataformat {}, with customizer {}" @AT@ 5590 @LENGTH@ 45
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5681 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(dataformat) @TO@ MethodInvocation:customizer.customize(dataformat) @AT@ 5718 @LENGTH@ 33
------------UPD MethodInvocation@@configurer.customize(dataformat) @TO@ customizer.customize(dataformat) @AT@ 5718 @LENGTH@ 32
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5718 @LENGTH@ 10


INS MethodDeclaration@@public, HttpSecurity, MethodName:disable,  @TO@ TypeDeclaration@@[public]HttpBasicSpec, HttpBasicBuilder @AT@ 3410 @LENGTH@ 85
---INS Modifier@@public @TO@ MethodDeclaration@@public, HttpSecurity, MethodName:disable,  @AT@ 3410 @LENGTH@ 6
---INS SimpleType@@HttpSecurity @TO@ MethodDeclaration@@public, HttpSecurity, MethodName:disable,  @AT@ 3417 @LENGTH@ 12
---INS SimpleName@@MethodName:disable @TO@ MethodDeclaration@@public, HttpSecurity, MethodName:disable,  @AT@ 3430 @LENGTH@ 7
---INS ExpressionStatement@@Assignment:httpBasic=null @TO@ MethodDeclaration@@public, HttpSecurity, MethodName:disable,  @AT@ 3445 @LENGTH@ 17
------INS Assignment@@httpBasic=null @TO@ ExpressionStatement@@Assignment:httpBasic=null @AT@ 3445 @LENGTH@ 16
---------INS SimpleName@@httpBasic @TO@ Assignment@@httpBasic=null @AT@ 3445 @LENGTH@ 9
---------INS Operator@@= @TO@ Assignment@@httpBasic=null @AT@ 3454 @LENGTH@ 1
---------INS NullLiteral@@null @TO@ Assignment@@httpBasic=null @AT@ 3457 @LENGTH@ 4
---INS ReturnStatement@@ThisExpression:HttpSecurity.this @TO@ MethodDeclaration@@public, HttpSecurity, MethodName:disable,  @AT@ 3466 @LENGTH@ 25
------INS ThisExpression@@this @TO@ ReturnStatement@@ThisExpression:HttpSecurity.this @AT@ 3473 @LENGTH@ 17


UPD ExpressionStatement@@MethodInvocation:WhiteboxImpl.setInternalState(handler,Log.class,logger) @TO@ MethodInvocation:ReflectionTestUtils.setField(handler,"logger",logger) @AT@ 3236 @LENGTH@ 58
---UPD MethodInvocation@@WhiteboxImpl.setInternalState(handler,Log.class,logger) @TO@ ReflectionTestUtils.setField(handler,"logger",logger) @AT@ 3236 @LENGTH@ 57
------UPD SimpleName@@Name:WhiteboxImpl @TO@ Name:ReflectionTestUtils @AT@ 3236 @LENGTH@ 12
------UPD SimpleName@@MethodName:setInternalState:[handler, Log.class, logger] @TO@ MethodName:setField:[handler, "logger", logger] @AT@ 3249 @LENGTH@ 44
---------DEL TypeLiteral@@Log.class @AT@ 3275 @LENGTH@ 9
---------INS StringLiteral@@"logger" @TO@ SimpleName@@MethodName:setInternalState:[handler, Log.class, logger] @AT@ 3280 @LENGTH@ 8


INS ExpressionStatement@@MethodInvocation:anyPackageOf("javax.jms") @TO@ MethodDeclaration@@public, voidMethodName:MessagingPackageDetector,  @AT@ 881 @LENGTH@ 26
---INS MethodInvocation@@anyPackageOf("javax.jms") @TO@ ExpressionStatement@@MethodInvocation:anyPackageOf("javax.jms") @AT@ 881 @LENGTH@ 25
------INS SimpleName@@MethodName:anyPackageOf:["javax.jms"] @TO@ MethodInvocation@@anyPackageOf("javax.jms") @AT@ 881 @LENGTH@ 25
---------INS StringLiteral@@"javax.jms" @TO@ SimpleName@@MethodName:anyPackageOf:["javax.jms"] @AT@ 894 @LENGTH@ 11


UPD IfStatement@@if (!lastWasMasked) {  out.write(line);  out.write("\n");  lastWasMasked=true;} @TO@ if (!lastWasMasked) {  out.write(line);  out.write("\n");  lastWasMasked=true;  partialMaskWasMatched=false;} @AT@ 57021 @LENGTH@ 117
---UPD Block@@ThenBody:{  out.write(line);  out.write("\n");  lastWasMasked=true;} @TO@ ThenBody:{  out.write(line);  out.write("\n");  lastWasMasked=true;  partialMaskWasMatched=false;} @AT@ 57041 @LENGTH@ 97
------INS ExpressionStatement@@Assignment:partialMaskWasMatched=false @TO@ Block@@ThenBody:{  out.write(line);  out.write("\n");  lastWasMasked=true;} @AT@ 57139 @LENGTH@ 30
---------INS Assignment@@partialMaskWasMatched=false @TO@ ExpressionStatement@@Assignment:partialMaskWasMatched=false @AT@ 57139 @LENGTH@ 29
------------INS SimpleName@@partialMaskWasMatched @TO@ Assignment@@partialMaskWasMatched=false @AT@ 57139 @LENGTH@ 21
------------INS Operator@@= @TO@ Assignment@@partialMaskWasMatched=false @AT@ 57160 @LENGTH@ 1
------------INS BooleanLiteral@@false @TO@ Assignment@@partialMaskWasMatched=false @AT@ 57163 @LENGTH@ 5


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  LanguageCustomizer<JavaScriptLanguage> configurer : customizers) {    LOGGER.debug("Configure language {}, with configurer {}",language,configurer);    configurer.customize(language);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  LanguageCustomizer<JavaScriptLanguage> customizer : customizers) {    LOGGER.debug("Configure language {}, with customizer {}",language,customizer);    customizer.customize(language);  }} @AT@ 4787 @LENGTH@ 338
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 4791 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 4791 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  LanguageCustomizer<JavaScriptLanguage> configurer : customizers) {    LOGGER.debug("Configure language {}, with configurer {}",language,configurer);    configurer.customize(language);  }} @TO@ ThenBody:{  for (  LanguageCustomizer<JavaScriptLanguage> customizer : customizers) {    LOGGER.debug("Configure language {}, with customizer {}",language,customizer);    customizer.customize(language);  }} @AT@ 4847 @LENGTH@ 278
------UPD EnhancedForStatement@@for (LanguageCustomizer<JavaScriptLanguage> configurer : customizers) {  LOGGER.debug("Configure language {}, with configurer {}",language,configurer);  configurer.customize(language);} @TO@ for (LanguageCustomizer<JavaScriptLanguage> customizer : customizers) {  LOGGER.debug("Configure language {}, with customizer {}",language,customizer);  customizer.customize(language);} @AT@ 4861 @LENGTH@ 254
---------UPD SingleVariableDeclaration@@LanguageCustomizer<JavaScriptLanguage> configurer @TO@ LanguageCustomizer<JavaScriptLanguage> customizer @AT@ 4866 @LENGTH@ 49
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 4905 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure language {}, with configurer {}",language,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure language {}, with customizer {}",language,customizer) @AT@ 4949 @LENGTH@ 104
------------UPD MethodInvocation@@LOGGER.debug("Configure language {}, with configurer {}",language,configurer) @TO@ LOGGER.debug("Configure language {}, with customizer {}",language,customizer) @AT@ 4949 @LENGTH@ 103
---------------UPD SimpleName@@MethodName:debug:["Configure language {}, with configurer {}", language, configurer] @TO@ MethodName:debug:["Configure language {}, with customizer {}", language, customizer] @AT@ 4956 @LENGTH@ 96
------------------UPD StringLiteral@@"Configure language {}, with configurer {}" @TO@ "Configure language {}, with customizer {}" @AT@ 4962 @LENGTH@ 43
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5041 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(language) @TO@ MethodInvocation:customizer.customize(language) @AT@ 5070 @LENGTH@ 31
------------UPD MethodInvocation@@configurer.customize(language) @TO@ customizer.customize(language) @AT@ 5070 @LENGTH@ 30
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5070 @LENGTH@ 10


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<IgniteEventsComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<IgniteEventsComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5547 @LENGTH@ 345
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 5551 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5551 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  ComponentCustomizer<IgniteEventsComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ ThenBody:{  for (  ComponentCustomizer<IgniteEventsComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5607 @LENGTH@ 285
------UPD EnhancedForStatement@@for (ComponentCustomizer<IgniteEventsComponent> configurer : customizers) {  LOGGER.debug("Configure component {}, with configurer {}",component,configurer);  configurer.customize(component);} @TO@ for (ComponentCustomizer<IgniteEventsComponent> customizer : customizers) {  LOGGER.debug("Configure component {}, with customizer {}",component,customizer);  customizer.customize(component);} @AT@ 5621 @LENGTH@ 261
---------UPD SingleVariableDeclaration@@ComponentCustomizer<IgniteEventsComponent> configurer @TO@ ComponentCustomizer<IgniteEventsComponent> customizer @AT@ 5626 @LENGTH@ 53
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5669 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5713 @LENGTH@ 106
------------UPD MethodInvocation@@LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5713 @LENGTH@ 105
---------------UPD SimpleName@@MethodName:debug:["Configure component {}, with configurer {}", component, configurer] @TO@ MethodName:debug:["Configure component {}, with customizer {}", component, customizer] @AT@ 5720 @LENGTH@ 98
------------------UPD StringLiteral@@"Configure component {}, with configurer {}" @TO@ "Configure component {}, with customizer {}" @AT@ 5726 @LENGTH@ 44
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5807 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(component) @TO@ MethodInvocation:customizer.customize(component) @AT@ 5836 @LENGTH@ 32
------------UPD MethodInvocation@@configurer.customize(component) @TO@ customizer.customize(component) @AT@ 5836 @LENGTH@ 31
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5836 @LENGTH@ 10


UPD TryStatement@@try {  channel=connection.createChannel(isChannelTransacted());  channel.basicQos(getPrefetchCount());  consumer=new SimpleConsumer(connection,channel,queue);  channel.queueDeclarePassive(queue);  consumer.consumerTag=channel.basicConsume(queue,getAcknowledgeMode().isAutoAck(),(getConsumerTagStrategy() != null ? getConsumerTagStrategy().createConsumerTag(queue) : ""),false,isExclusive(),getConsumerArguments(),consumer);} catch (IOException e) {  RabbitUtils.closeChannel(channel);  RabbitUtils.closeConnection(connection);  if (e.getCause() instanceof ShutdownSignalException && e.getCause().getMessage().contains("in exclusive use")) {    getExclusiveConsumerExceptionLogger().log(logger,"Exclusive consumer failure",e.getCause());    publishConsumerFailedEvent("Consumer raised exception, attempting restart",false,e);  } else   if (this.logger.isDebugEnabled()) {    this.logger.debug("Queue not present or basicConsume failed, scheduling consumer " + consumer + " for restart");  }  this.consumersToRestart.add(consumer);  consumer=null;} @TO@ try {  channel=connection.createChannel(isChannelTransacted());  channel.basicQos(getPrefetchCount());  consumer=new SimpleConsumer(connection,channel,queue);  channel.queueDeclarePassive(queue);  consumer.consumerTag=channel.basicConsume(queue,getAcknowledgeMode().isAutoAck(),(getConsumerTagStrategy() != null ? getConsumerTagStrategy().createConsumerTag(queue) : ""),false,isExclusive(),getConsumerArguments(),consumer);} catch (AmqpApplicationContextClosedException e) {  throw new AmqpConnectException(e);}catch (IOException e) {  RabbitUtils.closeChannel(channel);  RabbitUtils.closeConnection(connection);  if (e.getCause() instanceof ShutdownSignalException && e.getCause().getMessage().contains("in exclusive use")) {    getExclusiveConsumerExceptionLogger().log(logger,"Exclusive consumer failure",e.getCause());    publishConsumerFailedEvent("Consumer raised exception, attempting restart",false,e);  } else   if (this.logger.isDebugEnabled()) {    this.logger.debug("Queue not present or basicConsume failed, scheduling consumer " + consumer + " for restart");  }  this.consumersToRestart.add(consumer);  consumer=null;} @AT@ 16706 @LENGTH@ 1138
---INS CatchClause@@catch (AmqpApplicationContextClosedException e) {  throw new AmqpConnectException(e);} @TO@ TryStatement@@try {  channel=connection.createChannel(isChannelTransacted());  channel.basicQos(getPrefetchCount());  consumer=new SimpleConsumer(connection,channel,queue);  channel.queueDeclarePassive(queue);  consumer.consumerTag=channel.basicConsume(queue,getAcknowledgeMode().isAutoAck(),(getConsumerTagStrategy() != null ? getConsumerTagStrategy().createConsumerTag(queue) : ""),false,isExclusive(),getConsumerArguments(),consumer);} catch (IOException e) {  RabbitUtils.closeChannel(channel);  RabbitUtils.closeConnection(connection);  if (e.getCause() instanceof ShutdownSignalException && e.getCause().getMessage().contains("in exclusive use")) {    getExclusiveConsumerExceptionLogger().log(logger,"Exclusive consumer failure",e.getCause());    publishConsumerFailedEvent("Consumer raised exception, attempting restart",false,e);  } else   if (this.logger.isDebugEnabled()) {    this.logger.debug("Queue not present or basicConsume failed, scheduling consumer " + consumer + " for restart");  }  this.consumersToRestart.add(consumer);  consumer=null;} @AT@ 17177 @LENGTH@ 91
------INS SingleVariableDeclaration@@AmqpApplicationContextClosedException e @TO@ CatchClause@@catch (AmqpApplicationContextClosedException e) {  throw new AmqpConnectException(e);} @AT@ 17184 @LENGTH@ 39
---------INS SimpleType@@AmqpApplicationContextClosedException @TO@ SingleVariableDeclaration@@AmqpApplicationContextClosedException e @AT@ 17184 @LENGTH@ 37
---------INS SimpleName@@e @TO@ SingleVariableDeclaration@@AmqpApplicationContextClosedException e @AT@ 17222 @LENGTH@ 1
------INS ThrowStatement@@ClassInstanceCreation:new AmqpConnectException(e) @TO@ CatchClause@@catch (AmqpApplicationContextClosedException e) {  throw new AmqpConnectException(e);} @AT@ 17230 @LENGTH@ 34
---------INS ClassInstanceCreation@@AmqpConnectException[e] @TO@ ThrowStatement@@ClassInstanceCreation:new AmqpConnectException(e) @AT@ 17236 @LENGTH@ 27
------------INS New@@new @TO@ ClassInstanceCreation@@AmqpConnectException[e] @AT@ 17236 @LENGTH@ 3
------------INS SimpleType@@AmqpConnectException @TO@ ClassInstanceCreation@@AmqpConnectException[e] @AT@ 17240 @LENGTH@ 20
------------INS SimpleName@@e @TO@ ClassInstanceCreation@@AmqpConnectException[e] @AT@ 17261 @LENGTH@ 1


UPD ExpressionStatement@@Assignment:value=new AssociationImpl(deploymentRepositoryInjector.getValue()) @TO@ Assignment:value=new AssociationImpl(deploymentRepositoryInjector.getValue(),registryCollectorInjector.getValue()) @AT@ 3016 @LENGTH@ 69
---UPD Assignment@@value=new AssociationImpl(deploymentRepositoryInjector.getValue()) @TO@ value=new AssociationImpl(deploymentRepositoryInjector.getValue(),registryCollectorInjector.getValue()) @AT@ 3016 @LENGTH@ 68
------UPD ClassInstanceCreation@@AssociationImpl[deploymentRepositoryInjector.getValue()] @TO@ AssociationImpl[deploymentRepositoryInjector.getValue(), registryCollectorInjector.getValue()] @AT@ 3024 @LENGTH@ 60
---------INS MethodInvocation@@registryCollectorInjector.getValue() @TO@ ClassInstanceCreation@@AssociationImpl[deploymentRepositoryInjector.getValue()] @AT@ 3044 @LENGTH@ 36
------------INS SimpleName@@Name:registryCollectorInjector @TO@ MethodInvocation@@registryCollectorInjector.getValue() @AT@ 3044 @LENGTH@ 25
------------INS SimpleName@@MethodName:getValue:[] @TO@ MethodInvocation@@registryCollectorInjector.getValue() @AT@ 3070 @LENGTH@ 10


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled(); @AT@ 5315 @LENGTH@ 160
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5323 @LENGTH@ 151
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5323 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5340 @LENGTH@ 134
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 5340 @LENGTH@ 64
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5340 @LENGTH@ 35
---------UPD MethodInvocation@@componentConfiguration.getConfigurer().isEnabled() @TO@ componentConfiguration.getCustomizer().isEnabled() @AT@ 5424 @LENGTH@ 50
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5424 @LENGTH@ 38


INS MethodDeclaration@@public, static, Defaultable<Float>, MethodName:floating, float defaultValue,  @TO@ TypeDeclaration@@[public]Defaultable, [Supplier<T>] @AT@ 792 @LENGTH@ 114
---INS Modifier@@public @TO@ MethodDeclaration@@public, static, Defaultable<Float>, MethodName:floating, float defaultValue,  @AT@ 792 @LENGTH@ 6
---INS Modifier@@static @TO@ MethodDeclaration@@public, static, Defaultable<Float>, MethodName:floating, float defaultValue,  @AT@ 799 @LENGTH@ 6
---INS ParameterizedType@@Defaultable<Float> @TO@ MethodDeclaration@@public, static, Defaultable<Float>, MethodName:floating, float defaultValue,  @AT@ 806 @LENGTH@ 18
------INS SimpleType@@Defaultable @TO@ ParameterizedType@@Defaultable<Float> @AT@ 806 @LENGTH@ 11
------INS SimpleType@@Float @TO@ ParameterizedType@@Defaultable<Float> @AT@ 818 @LENGTH@ 5
---INS SimpleName@@MethodName:floating @TO@ MethodDeclaration@@public, static, Defaultable<Float>, MethodName:floating, float defaultValue,  @AT@ 825 @LENGTH@ 8
---INS SingleVariableDeclaration@@float defaultValue @TO@ MethodDeclaration@@public, static, Defaultable<Float>, MethodName:floating, float defaultValue,  @AT@ 834 @LENGTH@ 18
------INS PrimitiveType@@float @TO@ SingleVariableDeclaration@@float defaultValue @AT@ 834 @LENGTH@ 5
------INS SimpleName@@defaultValue @TO@ SingleVariableDeclaration@@float defaultValue @AT@ 840 @LENGTH@ 12
---INS ReturnStatement@@MethodInvocation:floating(() -> defaultValue) @TO@ MethodDeclaration@@public, static, Defaultable<Float>, MethodName:floating, float defaultValue,  @AT@ 864 @LENGTH@ 36
------INS MethodInvocation@@floating(() -> defaultValue) @TO@ ReturnStatement@@MethodInvocation:floating(() -> defaultValue) @AT@ 871 @LENGTH@ 28
---------INS SimpleName@@MethodName:floating:[() -> defaultValue] @TO@ MethodInvocation@@floating(() -> defaultValue) @AT@ 871 @LENGTH@ 28
------------INS LambdaExpression@@() -> defaultValue @TO@ SimpleName@@MethodName:floating:[() -> defaultValue] @AT@ 880 @LENGTH@ 18
---------------INS SimpleName@@defaultValue @TO@ LambdaExpression@@() -> defaultValue @AT@ 886 @LENGTH@ 12


UPD IfStatement@@if (ti.bucketCols != null || ti.sortCols != null) {  updatePartitionBucketSortColumns(db,table,partn,ti.bucketCols,ti.numBuckets,ti.sortCols);} @TO@ if (!tbd.isMmTable() && (ti.bucketCols != null || ti.sortCols != null)) {  updatePartitionBucketSortColumns(db,table,partn,ti.bucketCols,ti.numBuckets,ti.sortCols);} @AT@ 20870 @LENGTH@ 175
---INS InfixExpression@@!tbd.isMmTable() && (ti.bucketCols != null || ti.sortCols != null) @TO@ IfStatement@@if (ti.bucketCols != null || ti.sortCols != null) {  updatePartitionBucketSortColumns(db,table,partn,ti.bucketCols,ti.numBuckets,ti.sortCols);} @AT@ 21026 @LENGTH@ 66
------INS PrefixExpression@@!tbd.isMmTable() @TO@ InfixExpression@@!tbd.isMmTable() && (ti.bucketCols != null || ti.sortCols != null) @AT@ 21026 @LENGTH@ 16
---------INS Operator@@! @TO@ PrefixExpression@@!tbd.isMmTable() @AT@ 21026 @LENGTH@ 1
---------INS MethodInvocation@@tbd.isMmTable() @TO@ PrefixExpression@@!tbd.isMmTable() @AT@ 21027 @LENGTH@ 15
------------INS SimpleName@@Name:tbd @TO@ MethodInvocation@@tbd.isMmTable() @AT@ 21027 @LENGTH@ 3
------------INS SimpleName@@MethodName:isMmTable:[] @TO@ MethodInvocation@@tbd.isMmTable() @AT@ 21031 @LENGTH@ 11
------INS Operator@@&& @TO@ InfixExpression@@!tbd.isMmTable() && (ti.bucketCols != null || ti.sortCols != null) @AT@ 21042 @LENGTH@ 2
------INS ParenthesizedExpression@@(ti.bucketCols != null || ti.sortCols != null) @TO@ InfixExpression@@!tbd.isMmTable() && (ti.bucketCols != null || ti.sortCols != null) @AT@ 21046 @LENGTH@ 46
---------MOV InfixExpression@@ti.bucketCols != null || ti.sortCols != null @TO@ ParenthesizedExpression@@(ti.bucketCols != null || ti.sortCols != null) @AT@ 20874 @LENGTH@ 44


UPD ExpressionStatement@@Assignment:copyOffset=writeOffset + offsetRemaining @TO@ Assignment:copyOffset=-offsetRemaining @AT@ 9640 @LENGTH@ 44
---UPD Assignment@@copyOffset=writeOffset + offsetRemaining @TO@ copyOffset=-offsetRemaining @AT@ 9640 @LENGTH@ 43
------DEL InfixExpression@@writeOffset + offsetRemaining @AT@ 9653 @LENGTH@ 30
---------DEL SimpleName@@writeOffset @AT@ 9653 @LENGTH@ 11
---------DEL Operator@@+ @AT@ 9664 @LENGTH@ 1
---------DEL SimpleName@@offsetRemaining @AT@ 9668 @LENGTH@ 15
------INS PrefixExpression@@-offsetRemaining @TO@ Assignment@@copyOffset=writeOffset + offsetRemaining @AT@ 9658 @LENGTH@ 16
---------INS Operator@@- @TO@ PrefixExpression@@-offsetRemaining @AT@ 9658 @LENGTH@ 1
---------INS SimpleName@@offsetRemaining @TO@ PrefixExpression@@-offsetRemaining @AT@ 9659 @LENGTH@ 15


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<XmppComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<XmppComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5395 @LENGTH@ 337
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 5399 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5399 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  ComponentCustomizer<XmppComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ ThenBody:{  for (  ComponentCustomizer<XmppComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5455 @LENGTH@ 277
------UPD EnhancedForStatement@@for (ComponentCustomizer<XmppComponent> configurer : customizers) {  LOGGER.debug("Configure component {}, with configurer {}",component,configurer);  configurer.customize(component);} @TO@ for (ComponentCustomizer<XmppComponent> customizer : customizers) {  LOGGER.debug("Configure component {}, with customizer {}",component,customizer);  customizer.customize(component);} @AT@ 5469 @LENGTH@ 253
---------UPD SingleVariableDeclaration@@ComponentCustomizer<XmppComponent> configurer @TO@ ComponentCustomizer<XmppComponent> customizer @AT@ 5474 @LENGTH@ 45
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5509 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5553 @LENGTH@ 106
------------UPD MethodInvocation@@LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5553 @LENGTH@ 105
---------------UPD SimpleName@@MethodName:debug:["Configure component {}, with configurer {}", component, configurer] @TO@ MethodName:debug:["Configure component {}, with customizer {}", component, customizer] @AT@ 5560 @LENGTH@ 98
------------------UPD StringLiteral@@"Configure component {}, with configurer {}" @TO@ "Configure component {}, with customizer {}" @AT@ 5566 @LENGTH@ 44
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5647 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(component) @TO@ MethodInvocation:customizer.customize(component) @AT@ 5676 @LENGTH@ 32
------------UPD MethodInvocation@@configurer.customize(component) @TO@ customizer.customize(component) @AT@ 5676 @LENGTH@ 31
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5676 @LENGTH@ 10


UPD ReturnStatement@@MethodInvocation:multiHashOrdered(parentHashCode(),4733,saslClientFactorySupplier.hashCode()) @TO@ MethodInvocation:multiHashUnordered(parentHashCode(),4733,saslClientFactorySupplier.hashCode()) @AT@ 2215 @LENGTH@ 86
---UPD MethodInvocation@@multiHashOrdered(parentHashCode(),4733,saslClientFactorySupplier.hashCode()) @TO@ multiHashUnordered(parentHashCode(),4733,saslClientFactorySupplier.hashCode()) @AT@ 2222 @LENGTH@ 78
------UPD SimpleName@@MethodName:multiHashOrdered:[parentHashCode(), 4733, saslClientFactorySupplier.hashCode()] @TO@ MethodName:multiHashUnordered:[parentHashCode(), 4733, saslClientFactorySupplier.hashCode()] @AT@ 2222 @LENGTH@ 78


UPD FieldDeclaration@@private, static, boolean, [warnedOnce=false] @TO@ private, boolean, [warnedOnce=false] @AT@ 3376 @LENGTH@ 42
---DEL Modifier@@static @AT@ 3384 @LENGTH@ 6


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  LanguageCustomizer<ExchangePropertyLanguage> configurer : customizers) {    LOGGER.debug("Configure language {}, with configurer {}",language,configurer);    configurer.customize(language);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  LanguageCustomizer<ExchangePropertyLanguage> customizer : customizers) {    LOGGER.debug("Configure language {}, with customizer {}",language,customizer);    customizer.customize(language);  }} @AT@ 4938 @LENGTH@ 344
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 4942 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 4942 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  LanguageCustomizer<ExchangePropertyLanguage> configurer : customizers) {    LOGGER.debug("Configure language {}, with configurer {}",language,configurer);    configurer.customize(language);  }} @TO@ ThenBody:{  for (  LanguageCustomizer<ExchangePropertyLanguage> customizer : customizers) {    LOGGER.debug("Configure language {}, with customizer {}",language,customizer);    customizer.customize(language);  }} @AT@ 4998 @LENGTH@ 284
------UPD EnhancedForStatement@@for (LanguageCustomizer<ExchangePropertyLanguage> configurer : customizers) {  LOGGER.debug("Configure language {}, with configurer {}",language,configurer);  configurer.customize(language);} @TO@ for (LanguageCustomizer<ExchangePropertyLanguage> customizer : customizers) {  LOGGER.debug("Configure language {}, with customizer {}",language,customizer);  customizer.customize(language);} @AT@ 5012 @LENGTH@ 260
---------UPD SingleVariableDeclaration@@LanguageCustomizer<ExchangePropertyLanguage> configurer @TO@ LanguageCustomizer<ExchangePropertyLanguage> customizer @AT@ 5017 @LENGTH@ 55
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5062 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure language {}, with configurer {}",language,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure language {}, with customizer {}",language,customizer) @AT@ 5106 @LENGTH@ 104
------------UPD MethodInvocation@@LOGGER.debug("Configure language {}, with configurer {}",language,configurer) @TO@ LOGGER.debug("Configure language {}, with customizer {}",language,customizer) @AT@ 5106 @LENGTH@ 103
---------------UPD SimpleName@@MethodName:debug:["Configure language {}, with configurer {}", language, configurer] @TO@ MethodName:debug:["Configure language {}, with customizer {}", language, customizer] @AT@ 5113 @LENGTH@ 96
------------------UPD StringLiteral@@"Configure language {}, with configurer {}" @TO@ "Configure language {}, with customizer {}" @AT@ 5119 @LENGTH@ 43
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5198 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(language) @TO@ MethodInvocation:customizer.customize(language) @AT@ 5227 @LENGTH@ 31
------------UPD MethodInvocation@@configurer.customize(language) @TO@ customizer.customize(language) @AT@ 5227 @LENGTH@ 30
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5227 @LENGTH@ 10


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<DirectVmComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<DirectVmComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5465 @LENGTH@ 341
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 5469 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5469 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  ComponentCustomizer<DirectVmComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ ThenBody:{  for (  ComponentCustomizer<DirectVmComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5525 @LENGTH@ 281
------UPD EnhancedForStatement@@for (ComponentCustomizer<DirectVmComponent> configurer : customizers) {  LOGGER.debug("Configure component {}, with configurer {}",component,configurer);  configurer.customize(component);} @TO@ for (ComponentCustomizer<DirectVmComponent> customizer : customizers) {  LOGGER.debug("Configure component {}, with customizer {}",component,customizer);  customizer.customize(component);} @AT@ 5539 @LENGTH@ 257
---------UPD SingleVariableDeclaration@@ComponentCustomizer<DirectVmComponent> configurer @TO@ ComponentCustomizer<DirectVmComponent> customizer @AT@ 5544 @LENGTH@ 49
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5583 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5627 @LENGTH@ 106
------------UPD MethodInvocation@@LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5627 @LENGTH@ 105
---------------UPD SimpleName@@MethodName:debug:["Configure component {}, with configurer {}", component, configurer] @TO@ MethodName:debug:["Configure component {}, with customizer {}", component, customizer] @AT@ 5634 @LENGTH@ 98
------------------UPD StringLiteral@@"Configure component {}, with configurer {}" @TO@ "Configure component {}, with customizer {}" @AT@ 5640 @LENGTH@ 44
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5721 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(component) @TO@ MethodInvocation:customizer.customize(component) @AT@ 5750 @LENGTH@ 32
------------UPD MethodInvocation@@configurer.customize(component) @TO@ customizer.customize(component) @AT@ 5750 @LENGTH@ 31
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5750 @LENGTH@ 10


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<SipComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<SipComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5398 @LENGTH@ 336
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 5402 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5402 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  ComponentCustomizer<SipComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ ThenBody:{  for (  ComponentCustomizer<SipComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5458 @LENGTH@ 276
------UPD EnhancedForStatement@@for (ComponentCustomizer<SipComponent> configurer : customizers) {  LOGGER.debug("Configure component {}, with configurer {}",component,configurer);  configurer.customize(component);} @TO@ for (ComponentCustomizer<SipComponent> customizer : customizers) {  LOGGER.debug("Configure component {}, with customizer {}",component,customizer);  customizer.customize(component);} @AT@ 5472 @LENGTH@ 252
---------UPD SingleVariableDeclaration@@ComponentCustomizer<SipComponent> configurer @TO@ ComponentCustomizer<SipComponent> customizer @AT@ 5477 @LENGTH@ 44
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5511 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5555 @LENGTH@ 106
------------UPD MethodInvocation@@LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5555 @LENGTH@ 105
---------------UPD SimpleName@@MethodName:debug:["Configure component {}, with configurer {}", component, configurer] @TO@ MethodName:debug:["Configure component {}, with customizer {}", component, customizer] @AT@ 5562 @LENGTH@ 98
------------------UPD StringLiteral@@"Configure component {}, with configurer {}" @TO@ "Configure component {}, with customizer {}" @AT@ 5568 @LENGTH@ 44
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5649 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(component) @TO@ MethodInvocation:customizer.customize(component) @AT@ 5678 @LENGTH@ 32
------------UPD MethodInvocation@@configurer.customize(component) @TO@ customizer.customize(component) @AT@ 5678 @LENGTH@ 31
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5678 @LENGTH@ 10


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && dataformatConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && dataformatConfiguration.getCustomizer().isEnabled(); @AT@ 5114 @LENGTH@ 177
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && dataformatConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && dataformatConfiguration.getCustomizer().isEnabled() @AT@ 5122 @LENGTH@ 168
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5122 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && dataformatConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && dataformatConfiguration.getCustomizer().isEnabled() @AT@ 5139 @LENGTH@ 151
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 5139 @LENGTH@ 72
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5139 @LENGTH@ 35
---------UPD MethodInvocation@@dataformatConfiguration.getConfigurer().isEnabled() @TO@ dataformatConfiguration.getCustomizer().isEnabled() @AT@ 5239 @LENGTH@ 51
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5239 @LENGTH@ 39


UPD TryStatement@@try {  this.template.setReceiveTimeout(1);} catch (ConsumeOkNotReceivedException e) {} @TO@ try {  assertNull(this.template.receive(ROUTE));} catch (ConsumeOkNotReceivedException e) {} @AT@ 11606 @LENGTH@ 211
---MOV ExpressionStatement@@MethodInvocation:assertNull(this.template.receive(ROUTE)) @TO@ TryStatement@@try {  this.template.setReceiveTimeout(1);} catch (ConsumeOkNotReceivedException e) {} @AT@ 11820 @LENGTH@ 41


UPD IfStatement@@if (readOnly) {  resourceRegistration.registerReadOnlyAttribute(attribute,null);} else {  if (attribute.equals(ENLISTMENT_TRACE)) {    resourceRegistration.registerReadWriteAttribute(attribute,null,new EnlistmentTraceAttributeWriteHandler());  } else {    resourceRegistration.registerReadWriteAttribute(attribute,null,new ReloadRequiredWriteAttributeHandler(attribute));  }} @TO@ if (readOnly) {  resourceRegistration.registerReadOnlyAttribute(attribute,null);} else {  if (PoolConfigurationRWHandler.ATTRIBUTES.contains(attribute.getName())) {    resourceRegistration.registerReadWriteAttribute(attribute,null,PoolConfigurationRWHandler.RaPoolConfigurationWriteHandler.INSTANCE);  } else   if (attribute.equals(ENLISTMENT_TRACE)) {    resourceRegistration.registerReadWriteAttribute(attribute,null,new EnlistmentTraceAttributeWriteHandler());  } else {    resourceRegistration.registerReadWriteAttribute(attribute,null,new ReloadRequiredWriteAttributeHandler(attribute));  }} @AT@ 5156 @LENGTH@ 501
---UPD Block@@ElseBody:{  if (attribute.equals(ENLISTMENT_TRACE)) {    resourceRegistration.registerReadWriteAttribute(attribute,null,new EnlistmentTraceAttributeWriteHandler());  } else {    resourceRegistration.registerReadWriteAttribute(attribute,null,new ReloadRequiredWriteAttributeHandler(attribute));  }} @TO@ ElseBody:if (attribute.equals(ENLISTMENT_TRACE)) {  resourceRegistration.registerReadWriteAttribute(attribute,null,new EnlistmentTraceAttributeWriteHandler());} else {  resourceRegistration.registerReadWriteAttribute(attribute,null,new ReloadRequiredWriteAttributeHandler(attribute));} @AT@ 5272 @LENGTH@ 385
---INS Block@@ElseBody:{  if (PoolConfigurationRWHandler.ATTRIBUTES.contains(attribute.getName())) {    resourceRegistration.registerReadWriteAttribute(attribute,null,PoolConfigurationRWHandler.RaPoolConfigurationWriteHandler.INSTANCE);  } else   if (attribute.equals(ENLISTMENT_TRACE)) {    resourceRegistration.registerReadWriteAttribute(attribute,null,new EnlistmentTraceAttributeWriteHandler());  } else {    resourceRegistration.registerReadWriteAttribute(attribute,null,new ReloadRequiredWriteAttributeHandler(attribute));  }} @TO@ IfStatement@@if (readOnly) {  resourceRegistration.registerReadOnlyAttribute(attribute,null);} else {  if (attribute.equals(ENLISTMENT_TRACE)) {    resourceRegistration.registerReadWriteAttribute(attribute,null,new EnlistmentTraceAttributeWriteHandler());  } else {    resourceRegistration.registerReadWriteAttribute(attribute,null,new ReloadRequiredWriteAttributeHandler(attribute));  }} @AT@ 5362 @LENGTH@ 637
------INS IfStatement@@if (PoolConfigurationRWHandler.ATTRIBUTES.contains(attribute.getName())) {  resourceRegistration.registerReadWriteAttribute(attribute,null,PoolConfigurationRWHandler.RaPoolConfigurationWriteHandler.INSTANCE);} else if (attribute.equals(ENLISTMENT_TRACE)) {  resourceRegistration.registerReadWriteAttribute(attribute,null,new EnlistmentTraceAttributeWriteHandler());} else {  resourceRegistration.registerReadWriteAttribute(attribute,null,new ReloadRequiredWriteAttributeHandler(attribute));} @TO@ Block@@ElseBody:{  if (PoolConfigurationRWHandler.ATTRIBUTES.contains(attribute.getName())) {    resourceRegistration.registerReadWriteAttribute(attribute,null,PoolConfigurationRWHandler.RaPoolConfigurationWriteHandler.INSTANCE);  } else   if (attribute.equals(ENLISTMENT_TRACE)) {    resourceRegistration.registerReadWriteAttribute(attribute,null,new EnlistmentTraceAttributeWriteHandler());  } else {    resourceRegistration.registerReadWriteAttribute(attribute,null,new ReloadRequiredWriteAttributeHandler(attribute));  }} @AT@ 5380 @LENGTH@ 605
---------MOV Block@@ElseBody:{  if (attribute.equals(ENLISTMENT_TRACE)) {    resourceRegistration.registerReadWriteAttribute(attribute,null,new EnlistmentTraceAttributeWriteHandler());  } else {    resourceRegistration.registerReadWriteAttribute(attribute,null,new ReloadRequiredWriteAttributeHandler(attribute));  }} @TO@ IfStatement@@if (PoolConfigurationRWHandler.ATTRIBUTES.contains(attribute.getName())) {  resourceRegistration.registerReadWriteAttribute(attribute,null,PoolConfigurationRWHandler.RaPoolConfigurationWriteHandler.INSTANCE);} else if (attribute.equals(ENLISTMENT_TRACE)) {  resourceRegistration.registerReadWriteAttribute(attribute,null,new EnlistmentTraceAttributeWriteHandler());} else {  resourceRegistration.registerReadWriteAttribute(attribute,null,new ReloadRequiredWriteAttributeHandler(attribute));} @AT@ 5272 @LENGTH@ 385
---------INS MethodInvocation@@PoolConfigurationRWHandler.ATTRIBUTES.contains(attribute.getName()) @TO@ IfStatement@@if (PoolConfigurationRWHandler.ATTRIBUTES.contains(attribute.getName())) {  resourceRegistration.registerReadWriteAttribute(attribute,null,PoolConfigurationRWHandler.RaPoolConfigurationWriteHandler.INSTANCE);} else if (attribute.equals(ENLISTMENT_TRACE)) {  resourceRegistration.registerReadWriteAttribute(attribute,null,new EnlistmentTraceAttributeWriteHandler());} else {  resourceRegistration.registerReadWriteAttribute(attribute,null,new ReloadRequiredWriteAttributeHandler(attribute));} @AT@ 5384 @LENGTH@ 67
------------INS QualifiedName@@Name:PoolConfigurationRWHandler.ATTRIBUTES @TO@ MethodInvocation@@PoolConfigurationRWHandler.ATTRIBUTES.contains(attribute.getName()) @AT@ 5384 @LENGTH@ 37
------------INS SimpleName@@MethodName:contains:[attribute.getName()] @TO@ MethodInvocation@@PoolConfigurationRWHandler.ATTRIBUTES.contains(attribute.getName()) @AT@ 5422 @LENGTH@ 29
---------------INS MethodInvocation@@attribute.getName() @TO@ SimpleName@@MethodName:contains:[attribute.getName()] @AT@ 5431 @LENGTH@ 19
------------------INS SimpleName@@Name:attribute @TO@ MethodInvocation@@attribute.getName() @AT@ 5431 @LENGTH@ 9
------------------INS SimpleName@@MethodName:getName:[] @TO@ MethodInvocation@@attribute.getName() @AT@ 5441 @LENGTH@ 9
---------INS Block@@ThenBody:{  resourceRegistration.registerReadWriteAttribute(attribute,null,PoolConfigurationRWHandler.RaPoolConfigurationWriteHandler.INSTANCE);} @TO@ IfStatement@@if (PoolConfigurationRWHandler.ATTRIBUTES.contains(attribute.getName())) {  resourceRegistration.registerReadWriteAttribute(attribute,null,PoolConfigurationRWHandler.RaPoolConfigurationWriteHandler.INSTANCE);} else if (attribute.equals(ENLISTMENT_TRACE)) {  resourceRegistration.registerReadWriteAttribute(attribute,null,new EnlistmentTraceAttributeWriteHandler());} else {  resourceRegistration.registerReadWriteAttribute(attribute,null,new ReloadRequiredWriteAttributeHandler(attribute));} @AT@ 5453 @LENGTH@ 174
------------INS ExpressionStatement@@MethodInvocation:resourceRegistration.registerReadWriteAttribute(attribute,null,PoolConfigurationRWHandler.RaPoolConfigurationWriteHandler.INSTANCE) @TO@ Block@@ThenBody:{  resourceRegistration.registerReadWriteAttribute(attribute,null,PoolConfigurationRWHandler.RaPoolConfigurationWriteHandler.INSTANCE);} @AT@ 5475 @LENGTH@ 134
---------------INS MethodInvocation@@resourceRegistration.registerReadWriteAttribute(attribute,null,PoolConfigurationRWHandler.RaPoolConfigurationWriteHandler.INSTANCE) @TO@ ExpressionStatement@@MethodInvocation:resourceRegistration.registerReadWriteAttribute(attribute,null,PoolConfigurationRWHandler.RaPoolConfigurationWriteHandler.INSTANCE) @AT@ 5475 @LENGTH@ 133
------------------INS SimpleName@@Name:resourceRegistration @TO@ MethodInvocation@@resourceRegistration.registerReadWriteAttribute(attribute,null,PoolConfigurationRWHandler.RaPoolConfigurationWriteHandler.INSTANCE) @AT@ 5475 @LENGTH@ 20
------------------INS SimpleName@@MethodName:registerReadWriteAttribute:[attribute, null, PoolConfigurationRWHandler.RaPoolConfigurationWriteHandler.INSTANCE] @TO@ MethodInvocation@@resourceRegistration.registerReadWriteAttribute(attribute,null,PoolConfigurationRWHandler.RaPoolConfigurationWriteHandler.INSTANCE) @AT@ 5496 @LENGTH@ 112
---------------------INS SimpleName@@attribute @TO@ SimpleName@@MethodName:registerReadWriteAttribute:[attribute, null, PoolConfigurationRWHandler.RaPoolConfigurationWriteHandler.INSTANCE] @AT@ 5523 @LENGTH@ 9
---------------------INS NullLiteral@@null @TO@ SimpleName@@MethodName:registerReadWriteAttribute:[attribute, null, PoolConfigurationRWHandler.RaPoolConfigurationWriteHandler.INSTANCE] @AT@ 5534 @LENGTH@ 4
---------------------INS QualifiedName@@PoolConfigurationRWHandler.RaPoolConfigurationWriteHandler.INSTANCE @TO@ SimpleName@@MethodName:registerReadWriteAttribute:[attribute, null, PoolConfigurationRWHandler.RaPoolConfigurationWriteHandler.INSTANCE] @AT@ 5540 @LENGTH@ 67
------------------------INS QualifiedName@@PoolConfigurationRWHandler.RaPoolConfigurationWriteHandler @TO@ QualifiedName@@PoolConfigurationRWHandler.RaPoolConfigurationWriteHandler.INSTANCE @AT@ 5540 @LENGTH@ 58
---------------------------INS SimpleName@@PoolConfigurationRWHandler @TO@ QualifiedName@@PoolConfigurationRWHandler.RaPoolConfigurationWriteHandler @AT@ 5540 @LENGTH@ 26
---------------------------INS SimpleName@@RaPoolConfigurationWriteHandler @TO@ QualifiedName@@PoolConfigurationRWHandler.RaPoolConfigurationWriteHandler @AT@ 5567 @LENGTH@ 31
------------------------INS SimpleName@@INSTANCE @TO@ QualifiedName@@PoolConfigurationRWHandler.RaPoolConfigurationWriteHandler.INSTANCE @AT@ 5599 @LENGTH@ 8


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<SlackComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<SlackComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5412 @LENGTH@ 338
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 5416 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5416 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  ComponentCustomizer<SlackComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ ThenBody:{  for (  ComponentCustomizer<SlackComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5472 @LENGTH@ 278
------UPD EnhancedForStatement@@for (ComponentCustomizer<SlackComponent> configurer : customizers) {  LOGGER.debug("Configure component {}, with configurer {}",component,configurer);  configurer.customize(component);} @TO@ for (ComponentCustomizer<SlackComponent> customizer : customizers) {  LOGGER.debug("Configure component {}, with customizer {}",component,customizer);  customizer.customize(component);} @AT@ 5486 @LENGTH@ 254
---------UPD SingleVariableDeclaration@@ComponentCustomizer<SlackComponent> configurer @TO@ ComponentCustomizer<SlackComponent> customizer @AT@ 5491 @LENGTH@ 46
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5527 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5571 @LENGTH@ 106
------------UPD MethodInvocation@@LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5571 @LENGTH@ 105
---------------UPD SimpleName@@MethodName:debug:["Configure component {}, with configurer {}", component, configurer] @TO@ MethodName:debug:["Configure component {}, with customizer {}", component, customizer] @AT@ 5578 @LENGTH@ 98
------------------UPD StringLiteral@@"Configure component {}, with configurer {}" @TO@ "Configure component {}, with customizer {}" @AT@ 5584 @LENGTH@ 44
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5665 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(component) @TO@ MethodInvocation:customizer.customize(component) @AT@ 5694 @LENGTH@ 32
------------UPD MethodInvocation@@configurer.customize(component) @TO@ customizer.customize(component) @AT@ 5694 @LENGTH@ 31
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5694 @LENGTH@ 10


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled(); @AT@ 5374 @LENGTH@ 160
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5382 @LENGTH@ 151
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5382 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5399 @LENGTH@ 134
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 5399 @LENGTH@ 64
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5399 @LENGTH@ 35
---------UPD MethodInvocation@@componentConfiguration.getConfigurer().isEnabled() @TO@ componentConfiguration.getCustomizer().isEnabled() @AT@ 5483 @LENGTH@ 50
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5483 @LENGTH@ 38


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled(); @AT@ 5266 @LENGTH@ 160
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5274 @LENGTH@ 151
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5274 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5291 @LENGTH@ 134
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 5291 @LENGTH@ 64
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5291 @LENGTH@ 35
---------UPD MethodInvocation@@componentConfiguration.getConfigurer().isEnabled() @TO@ componentConfiguration.getCustomizer().isEnabled() @AT@ 5375 @LENGTH@ 50
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5375 @LENGTH@ 38


INS MethodDeclaration@@public, Set<T>, T extends Annotation, MethodName:getAnnotations, Class<T> type,  @TO@ TypeDeclaration@@AnnotatedDelegate, [Annotated] @AT@ 1800 @LENGTH@ 214
---INS Modifier@@public @TO@ MethodDeclaration@@public, Set<T>, T extends Annotation, MethodName:getAnnotations, Class<T> type,  @AT@ 1800 @LENGTH@ 6
---INS ParameterizedType@@Set<T> @TO@ MethodDeclaration@@public, Set<T>, T extends Annotation, MethodName:getAnnotations, Class<T> type,  @AT@ 1830 @LENGTH@ 6
------INS SimpleType@@Set @TO@ ParameterizedType@@Set<T> @AT@ 1830 @LENGTH@ 3
------INS SimpleType@@T @TO@ ParameterizedType@@Set<T> @AT@ 1834 @LENGTH@ 1
---INS SimpleName@@MethodName:getAnnotations @TO@ MethodDeclaration@@public, Set<T>, T extends Annotation, MethodName:getAnnotations, Class<T> type,  @AT@ 1837 @LENGTH@ 14
---INS SingleVariableDeclaration@@Class<T> type @TO@ MethodDeclaration@@public, Set<T>, T extends Annotation, MethodName:getAnnotations, Class<T> type,  @AT@ 1852 @LENGTH@ 13
------INS ParameterizedType@@Class<T> @TO@ SingleVariableDeclaration@@Class<T> type @AT@ 1852 @LENGTH@ 8
---------INS SimpleType@@Class @TO@ ParameterizedType@@Class<T> @AT@ 1852 @LENGTH@ 5
---------INS SimpleType@@T @TO@ ParameterizedType@@Class<T> @AT@ 1858 @LENGTH@ 1
------INS SimpleName@@type @TO@ SingleVariableDeclaration@@Class<T> type @AT@ 1861 @LENGTH@ 4
---INS ReturnStatement@@MethodInvocation:annotations.stream().filter(isAnnotationType(type)).map(type::cast).collect(toSet()) @TO@ MethodDeclaration@@public, Set<T>, T extends Annotation, MethodName:getAnnotations, Class<T> type,  @AT@ 1877 @LENGTH@ 131
------INS MethodInvocation@@annotations.stream().filter(isAnnotationType(type)).map(type::cast).collect(toSet()) @TO@ ReturnStatement@@MethodInvocation:annotations.stream().filter(isAnnotationType(type)).map(type::cast).collect(toSet()) @AT@ 1884 @LENGTH@ 123
---------INS MethodInvocation@@MethodName:map:[type::cast] @TO@ MethodInvocation@@annotations.stream().filter(isAnnotationType(type)).map(type::cast).collect(toSet()) @AT@ 1884 @LENGTH@ 93
---------INS MethodInvocation@@MethodName:filter:[isAnnotationType(type)] @TO@ MethodInvocation@@annotations.stream().filter(isAnnotationType(type)).map(type::cast).collect(toSet()) @AT@ 1884 @LENGTH@ 64
------------INS MethodInvocation@@isAnnotationType(type) @TO@ MethodInvocation@@MethodName:filter:[isAnnotationType(type)] @AT@ 1925 @LENGTH@ 22
---------------INS SimpleName@@MethodName:isAnnotationType:[type] @TO@ MethodInvocation@@isAnnotationType(type) @AT@ 1925 @LENGTH@ 22
------------------INS SimpleName@@type @TO@ SimpleName@@MethodName:isAnnotationType:[type] @AT@ 1942 @LENGTH@ 4
---------INS MethodInvocation@@MethodName:stream:[] @TO@ MethodInvocation@@annotations.stream().filter(isAnnotationType(type)).map(type::cast).collect(toSet()) @AT@ 1884 @LENGTH@ 20
---------INS SimpleName@@Name:annotations @TO@ MethodInvocation@@annotations.stream().filter(isAnnotationType(type)).map(type::cast).collect(toSet()) @AT@ 1884 @LENGTH@ 11
---------INS SimpleName@@MethodName:collect:[toSet()] @TO@ MethodInvocation@@annotations.stream().filter(isAnnotationType(type)).map(type::cast).collect(toSet()) @AT@ 1991 @LENGTH@ 16
------------INS MethodInvocation@@MethodName:toSet:[] @TO@ SimpleName@@MethodName:collect:[toSet()] @AT@ 1999 @LENGTH@ 7


UPD ExpressionStatement@@MethodInvocation:connectionFactory(new ConnectionFactory("InVmConnectionFactory").connectors(Collections.singletonList("in-vm")).entries(Collections.singletonList("java:/ConnectionFactory"))) @TO@ MethodInvocation:connectionFactory(new ConnectionFactory("InVmConnectionFactory").connector("in-vm").entry("java:/ConnectionFactory")) @AT@ 1961 @LENGTH@ 209
---UPD MethodInvocation@@connectionFactory(new ConnectionFactory("InVmConnectionFactory").connectors(Collections.singletonList("in-vm")).entries(Collections.singletonList("java:/ConnectionFactory"))) @TO@ connectionFactory(new ConnectionFactory("InVmConnectionFactory").connector("in-vm").entry("java:/ConnectionFactory")) @AT@ 1961 @LENGTH@ 208
------UPD SimpleName@@MethodName:connectionFactory:[new ConnectionFactory("InVmConnectionFactory").connectors(Collections.singletonList("in-vm")).entries(Collections.singletonList("java:/ConnectionFactory"))] @TO@ MethodName:connectionFactory:[new ConnectionFactory("InVmConnectionFactory").connector("in-vm").entry("java:/ConnectionFactory")] @AT@ 1961 @LENGTH@ 208
---------UPD MethodInvocation@@new ConnectionFactory("InVmConnectionFactory").connectors(Collections.singletonList("in-vm")).entries(Collections.singletonList("java:/ConnectionFactory")) @TO@ new ConnectionFactory("InVmConnectionFactory").connector("in-vm").entry("java:/ConnectionFactory") @AT@ 1979 @LENGTH@ 189
------------UPD MethodInvocation@@MethodName:connectors:[Collections.singletonList("in-vm")] @TO@ MethodName:connector:["in-vm"] @AT@ 1979 @LENGTH@ 110
---------------INS StringLiteral@@"in-vm" @TO@ MethodInvocation@@MethodName:connectors:[Collections.singletonList("in-vm")] @AT@ 2053 @LENGTH@ 7
---------------DEL MethodInvocation@@Collections.singletonList("in-vm") @AT@ 2054 @LENGTH@ 34
------------------DEL SimpleName@@Name:Collections @AT@ 2054 @LENGTH@ 11
------------------DEL SimpleName@@MethodName:singletonList:["in-vm"] @AT@ 2066 @LENGTH@ 22
---------------------DEL StringLiteral@@"in-vm" @AT@ 2080 @LENGTH@ 7
------------DEL SimpleName@@MethodName:entries:[Collections.singletonList("java:/ConnectionFactory")] @AT@ 2107 @LENGTH@ 61
---------------DEL MethodInvocation@@Collections.singletonList("java:/ConnectionFactory") @AT@ 2115 @LENGTH@ 52
------------------DEL SimpleName@@Name:Collections @AT@ 2115 @LENGTH@ 11
------------MOV SimpleName@@MethodName:singletonList:["java:/ConnectionFactory"] @TO@ MethodInvocation@@new ConnectionFactory("InVmConnectionFactory").connectors(Collections.singletonList("in-vm")).entries(Collections.singletonList("java:/ConnectionFactory")) @AT@ 2127 @LENGTH@ 40


MOV FieldDeclaration@@static, final, Logger, [LOG=LoggerFactory.getLogger(BaseEmbeddedKafkaTest.class)] @TO@ TypeDeclaration@@[public]BaseEmbeddedKafkaTest, CamelTestSupport @AT@ 1506 @LENGTH@ 79


INS MethodDeclaration@@public, void, MethodName:testNullSplitForParquetReader, Exception,  @TO@ TypeDeclaration@@[public]TestVectorizedColumnReader, VectorizedColumnReaderTestBase @AT@ 2752 @LENGTH@ 586
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testNullSplitForParquetReader, Exception,  @AT@ 2752 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testNullSplitForParquetReader, Exception,  @AT@ 2759 @LENGTH@ 4
---INS SimpleName@@MethodName:testNullSplitForParquetReader @TO@ MethodDeclaration@@public, void, MethodName:testNullSplitForParquetReader, Exception,  @AT@ 2764 @LENGTH@ 29
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:testNullSplitForParquetReader, Exception,  @AT@ 2803 @LENGTH@ 9
---INS VariableDeclarationStatement@@Configuration conf=new Configuration(); @TO@ MethodDeclaration@@public, void, MethodName:testNullSplitForParquetReader, Exception,  @AT@ 2819 @LENGTH@ 41
------INS SimpleType@@Configuration @TO@ VariableDeclarationStatement@@Configuration conf=new Configuration(); @AT@ 2819 @LENGTH@ 13
------INS VariableDeclarationFragment@@conf=new Configuration() @TO@ VariableDeclarationStatement@@Configuration conf=new Configuration(); @AT@ 2833 @LENGTH@ 26
---------INS SimpleName@@conf @TO@ VariableDeclarationFragment@@conf=new Configuration() @AT@ 2833 @LENGTH@ 4
---------INS ClassInstanceCreation@@Configuration[] @TO@ VariableDeclarationFragment@@conf=new Configuration() @AT@ 2840 @LENGTH@ 19
------------INS New@@new @TO@ ClassInstanceCreation@@Configuration[] @AT@ 2840 @LENGTH@ 3
------------INS SimpleType@@Configuration @TO@ ClassInstanceCreation@@Configuration[] @AT@ 2844 @LENGTH@ 13
---INS ExpressionStatement@@MethodInvocation:conf.set(IOConstants.COLUMNS,"int32_field") @TO@ MethodDeclaration@@public, void, MethodName:testNullSplitForParquetReader, Exception,  @AT@ 2865 @LENGTH@ 44
------INS MethodInvocation@@conf.set(IOConstants.COLUMNS,"int32_field") @TO@ ExpressionStatement@@MethodInvocation:conf.set(IOConstants.COLUMNS,"int32_field") @AT@ 2865 @LENGTH@ 43
---------INS SimpleName@@Name:conf @TO@ MethodInvocation@@conf.set(IOConstants.COLUMNS,"int32_field") @AT@ 2865 @LENGTH@ 4
---------INS SimpleName@@MethodName:set:[IOConstants.COLUMNS, "int32_field"] @TO@ MethodInvocation@@conf.set(IOConstants.COLUMNS,"int32_field") @AT@ 2870 @LENGTH@ 38
------------INS QualifiedName@@IOConstants.COLUMNS @TO@ SimpleName@@MethodName:set:[IOConstants.COLUMNS, "int32_field"] @AT@ 2874 @LENGTH@ 19
---------------INS SimpleName@@IOConstants @TO@ QualifiedName@@IOConstants.COLUMNS @AT@ 2874 @LENGTH@ 11
---------------INS SimpleName@@COLUMNS @TO@ QualifiedName@@IOConstants.COLUMNS @AT@ 2886 @LENGTH@ 7
------------INS StringLiteral@@"int32_field" @TO@ SimpleName@@MethodName:set:[IOConstants.COLUMNS, "int32_field"] @AT@ 2894 @LENGTH@ 13
---INS ExpressionStatement@@MethodInvocation:conf.set(IOConstants.COLUMNS_TYPES,"int") @TO@ MethodDeclaration@@public, void, MethodName:testNullSplitForParquetReader, Exception,  @AT@ 2914 @LENGTH@ 42
------INS MethodInvocation@@conf.set(IOConstants.COLUMNS_TYPES,"int") @TO@ ExpressionStatement@@MethodInvocation:conf.set(IOConstants.COLUMNS_TYPES,"int") @AT@ 2914 @LENGTH@ 41
---------INS SimpleName@@Name:conf @TO@ MethodInvocation@@conf.set(IOConstants.COLUMNS_TYPES,"int") @AT@ 2914 @LENGTH@ 4
---------INS SimpleName@@MethodName:set:[IOConstants.COLUMNS_TYPES, "int"] @TO@ MethodInvocation@@conf.set(IOConstants.COLUMNS_TYPES,"int") @AT@ 2919 @LENGTH@ 36
------------INS QualifiedName@@IOConstants.COLUMNS_TYPES @TO@ SimpleName@@MethodName:set:[IOConstants.COLUMNS_TYPES, "int"] @AT@ 2923 @LENGTH@ 25
---------------INS SimpleName@@IOConstants @TO@ QualifiedName@@IOConstants.COLUMNS_TYPES @AT@ 2923 @LENGTH@ 11
---------------INS SimpleName@@COLUMNS_TYPES @TO@ QualifiedName@@IOConstants.COLUMNS_TYPES @AT@ 2935 @LENGTH@ 13
------------INS StringLiteral@@"int" @TO@ SimpleName@@MethodName:set:[IOConstants.COLUMNS_TYPES, "int"] @AT@ 2949 @LENGTH@ 5
---INS ExpressionStatement@@MethodInvocation:HiveConf.setBoolVar(conf,HiveConf.ConfVars.HIVE_VECTORIZATION_ENABLED,true) @TO@ MethodDeclaration@@public, void, MethodName:testNullSplitForParquetReader, Exception,  @AT@ 2961 @LENGTH@ 78
------INS MethodInvocation@@HiveConf.setBoolVar(conf,HiveConf.ConfVars.HIVE_VECTORIZATION_ENABLED,true) @TO@ ExpressionStatement@@MethodInvocation:HiveConf.setBoolVar(conf,HiveConf.ConfVars.HIVE_VECTORIZATION_ENABLED,true) @AT@ 2961 @LENGTH@ 77
---------INS SimpleName@@Name:HiveConf @TO@ MethodInvocation@@HiveConf.setBoolVar(conf,HiveConf.ConfVars.HIVE_VECTORIZATION_ENABLED,true) @AT@ 2961 @LENGTH@ 8
---------INS SimpleName@@MethodName:setBoolVar:[conf, HiveConf.ConfVars.HIVE_VECTORIZATION_ENABLED, true] @TO@ MethodInvocation@@HiveConf.setBoolVar(conf,HiveConf.ConfVars.HIVE_VECTORIZATION_ENABLED,true) @AT@ 2970 @LENGTH@ 68
------------INS SimpleName@@conf @TO@ SimpleName@@MethodName:setBoolVar:[conf, HiveConf.ConfVars.HIVE_VECTORIZATION_ENABLED, true] @AT@ 2981 @LENGTH@ 4
------------INS QualifiedName@@HiveConf.ConfVars.HIVE_VECTORIZATION_ENABLED @TO@ SimpleName@@MethodName:setBoolVar:[conf, HiveConf.ConfVars.HIVE_VECTORIZATION_ENABLED, true] @AT@ 2987 @LENGTH@ 44
---------------INS QualifiedName@@HiveConf.ConfVars @TO@ QualifiedName@@HiveConf.ConfVars.HIVE_VECTORIZATION_ENABLED @AT@ 2987 @LENGTH@ 17
------------------INS SimpleName@@HiveConf @TO@ QualifiedName@@HiveConf.ConfVars @AT@ 2987 @LENGTH@ 8
------------------INS SimpleName@@ConfVars @TO@ QualifiedName@@HiveConf.ConfVars @AT@ 2996 @LENGTH@ 8
---------------INS SimpleName@@HIVE_VECTORIZATION_ENABLED @TO@ QualifiedName@@HiveConf.ConfVars.HIVE_VECTORIZATION_ENABLED @AT@ 3005 @LENGTH@ 26
------------INS BooleanLiteral@@true @TO@ SimpleName@@MethodName:setBoolVar:[conf, HiveConf.ConfVars.HIVE_VECTORIZATION_ENABLED, true] @AT@ 3033 @LENGTH@ 4
---INS ExpressionStatement@@MethodInvocation:HiveConf.setVar(conf,HiveConf.ConfVars.PLAN,"//tmp") @TO@ MethodDeclaration@@public, void, MethodName:testNullSplitForParquetReader, Exception,  @AT@ 3044 @LENGTH@ 55
------INS MethodInvocation@@HiveConf.setVar(conf,HiveConf.ConfVars.PLAN,"//tmp") @TO@ ExpressionStatement@@MethodInvocation:HiveConf.setVar(conf,HiveConf.ConfVars.PLAN,"//tmp") @AT@ 3044 @LENGTH@ 54
---------INS SimpleName@@Name:HiveConf @TO@ MethodInvocation@@HiveConf.setVar(conf,HiveConf.ConfVars.PLAN,"//tmp") @AT@ 3044 @LENGTH@ 8
---------INS SimpleName@@MethodName:setVar:[conf, HiveConf.ConfVars.PLAN, "//tmp"] @TO@ MethodInvocation@@HiveConf.setVar(conf,HiveConf.ConfVars.PLAN,"//tmp") @AT@ 3053 @LENGTH@ 45
------------INS SimpleName@@conf @TO@ SimpleName@@MethodName:setVar:[conf, HiveConf.ConfVars.PLAN, "//tmp"] @AT@ 3060 @LENGTH@ 4
------------INS QualifiedName@@HiveConf.ConfVars.PLAN @TO@ SimpleName@@MethodName:setVar:[conf, HiveConf.ConfVars.PLAN, "//tmp"] @AT@ 3066 @LENGTH@ 22
---------------INS QualifiedName@@HiveConf.ConfVars @TO@ QualifiedName@@HiveConf.ConfVars.PLAN @AT@ 3066 @LENGTH@ 17
------------------INS SimpleName@@HiveConf @TO@ QualifiedName@@HiveConf.ConfVars @AT@ 3066 @LENGTH@ 8
------------------INS SimpleName@@ConfVars @TO@ QualifiedName@@HiveConf.ConfVars @AT@ 3075 @LENGTH@ 8
---------------INS SimpleName@@PLAN @TO@ QualifiedName@@HiveConf.ConfVars.PLAN @AT@ 3084 @LENGTH@ 4
------------INS StringLiteral@@"//tmp" @TO@ SimpleName@@MethodName:setVar:[conf, HiveConf.ConfVars.PLAN, "//tmp"] @AT@ 3090 @LENGTH@ 7
---INS ExpressionStatement@@MethodInvocation:initialVectorizedRowBatchCtx(conf) @TO@ MethodDeclaration@@public, void, MethodName:testNullSplitForParquetReader, Exception,  @AT@ 3104 @LENGTH@ 35
------INS MethodInvocation@@initialVectorizedRowBatchCtx(conf) @TO@ ExpressionStatement@@MethodInvocation:initialVectorizedRowBatchCtx(conf) @AT@ 3104 @LENGTH@ 34
---------INS SimpleName@@MethodName:initialVectorizedRowBatchCtx:[conf] @TO@ MethodInvocation@@initialVectorizedRowBatchCtx(conf) @AT@ 3104 @LENGTH@ 34
------------INS SimpleName@@conf @TO@ SimpleName@@MethodName:initialVectorizedRowBatchCtx:[conf] @AT@ 3133 @LENGTH@ 4
---INS VariableDeclarationStatement@@VectorizedParquetRecordReader reader=new VectorizedParquetRecordReader((InputSplit)null,new JobConf(conf)); @TO@ MethodDeclaration@@public, void, MethodName:testNullSplitForParquetReader, Exception,  @AT@ 3144 @LENGTH@ 118
------INS SimpleType@@VectorizedParquetRecordReader @TO@ VariableDeclarationStatement@@VectorizedParquetRecordReader reader=new VectorizedParquetRecordReader((InputSplit)null,new JobConf(conf)); @AT@ 3144 @LENGTH@ 29
------INS VariableDeclarationFragment@@reader=new VectorizedParquetRecordReader((InputSplit)null,new JobConf(conf)) @TO@ VariableDeclarationStatement@@VectorizedParquetRecordReader reader=new VectorizedParquetRecordReader((InputSplit)null,new JobConf(conf)); @AT@ 3174 @LENGTH@ 87
---------INS SimpleName@@reader @TO@ VariableDeclarationFragment@@reader=new VectorizedParquetRecordReader((InputSplit)null,new JobConf(conf)) @AT@ 3174 @LENGTH@ 6
---------INS ClassInstanceCreation@@VectorizedParquetRecordReader[(InputSplit)null, new JobConf(conf)] @TO@ VariableDeclarationFragment@@reader=new VectorizedParquetRecordReader((InputSplit)null,new JobConf(conf)) @AT@ 3191 @LENGTH@ 70
------------INS New@@new @TO@ ClassInstanceCreation@@VectorizedParquetRecordReader[(InputSplit)null, new JobConf(conf)] @AT@ 3191 @LENGTH@ 3
------------INS SimpleType@@VectorizedParquetRecordReader @TO@ ClassInstanceCreation@@VectorizedParquetRecordReader[(InputSplit)null, new JobConf(conf)] @AT@ 3195 @LENGTH@ 29
------------INS CastExpression@@(InputSplit)null @TO@ ClassInstanceCreation@@VectorizedParquetRecordReader[(InputSplit)null, new JobConf(conf)] @AT@ 3225 @LENGTH@ 16
---------------INS SimpleType@@InputSplit @TO@ CastExpression@@(InputSplit)null @AT@ 3226 @LENGTH@ 10
---------------INS NullLiteral@@null @TO@ CastExpression@@(InputSplit)null @AT@ 3237 @LENGTH@ 4
------------INS ClassInstanceCreation@@JobConf[conf] @TO@ ClassInstanceCreation@@VectorizedParquetRecordReader[(InputSplit)null, new JobConf(conf)] @AT@ 3243 @LENGTH@ 17
---------------INS New@@new @TO@ ClassInstanceCreation@@JobConf[conf] @AT@ 3243 @LENGTH@ 3
---------------INS SimpleType@@JobConf @TO@ ClassInstanceCreation@@JobConf[conf] @AT@ 3247 @LENGTH@ 7
---------------INS SimpleName@@conf @TO@ ClassInstanceCreation@@JobConf[conf] @AT@ 3255 @LENGTH@ 4
---INS ExpressionStatement@@MethodInvocation:assertFalse(reader.next(reader.createKey(),reader.createValue())) @TO@ MethodDeclaration@@public, void, MethodName:testNullSplitForParquetReader, Exception,  @AT@ 3267 @LENGTH@ 67
------INS MethodInvocation@@assertFalse(reader.next(reader.createKey(),reader.createValue())) @TO@ ExpressionStatement@@MethodInvocation:assertFalse(reader.next(reader.createKey(),reader.createValue())) @AT@ 3267 @LENGTH@ 66
---------INS SimpleName@@MethodName:assertFalse:[reader.next(reader.createKey(),reader.createValue())] @TO@ MethodInvocation@@assertFalse(reader.next(reader.createKey(),reader.createValue())) @AT@ 3267 @LENGTH@ 66
------------INS MethodInvocation@@reader.next(reader.createKey(),reader.createValue()) @TO@ SimpleName@@MethodName:assertFalse:[reader.next(reader.createKey(),reader.createValue())] @AT@ 3279 @LENGTH@ 53
---------------INS SimpleName@@Name:reader @TO@ MethodInvocation@@reader.next(reader.createKey(),reader.createValue()) @AT@ 3279 @LENGTH@ 6
---------------INS SimpleName@@MethodName:next:[reader.createKey(), reader.createValue()] @TO@ MethodInvocation@@reader.next(reader.createKey(),reader.createValue()) @AT@ 3286 @LENGTH@ 46
------------------INS MethodInvocation@@reader.createKey() @TO@ SimpleName@@MethodName:next:[reader.createKey(), reader.createValue()] @AT@ 3291 @LENGTH@ 18
---------------------INS SimpleName@@Name:reader @TO@ MethodInvocation@@reader.createKey() @AT@ 3291 @LENGTH@ 6
---------------------INS SimpleName@@MethodName:createKey:[] @TO@ MethodInvocation@@reader.createKey() @AT@ 3298 @LENGTH@ 11
------------------INS MethodInvocation@@reader.createValue() @TO@ SimpleName@@MethodName:next:[reader.createKey(), reader.createValue()] @AT@ 3311 @LENGTH@ 20
---------------------INS SimpleName@@Name:reader @TO@ MethodInvocation@@reader.createValue() @AT@ 3311 @LENGTH@ 6
---------------------INS SimpleName@@MethodName:createValue:[] @TO@ MethodInvocation@@reader.createValue() @AT@ 3318 @LENGTH@ 13


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled(); @AT@ 5432 @LENGTH@ 160
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5440 @LENGTH@ 151
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5440 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5457 @LENGTH@ 134
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 5457 @LENGTH@ 64
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5457 @LENGTH@ 35
---------UPD MethodInvocation@@componentConfiguration.getConfigurer().isEnabled() @TO@ componentConfiguration.getCustomizer().isEnabled() @AT@ 5541 @LENGTH@ 50
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5541 @LENGTH@ 38


UPD MethodDeclaration@@void, MethodName:ensureConnected, long timeoutMillis, CommandLineException,  @TO@ void, MethodName:ensureConnected, long timeoutMillis, CommandLineException, IOException,  @AT@ 1526 @LENGTH@ 64
---INS SimpleType@@IOException @TO@ MethodDeclaration@@void, MethodName:ensureConnected, long timeoutMillis, CommandLineException,  @AT@ 1591 @LENGTH@ 11


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled(); @AT@ 5449 @LENGTH@ 160
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5457 @LENGTH@ 151
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5457 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5474 @LENGTH@ 134
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 5474 @LENGTH@ 64
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5474 @LENGTH@ 35
---------UPD MethodInvocation@@componentConfiguration.getConfigurer().isEnabled() @TO@ componentConfiguration.getCustomizer().isEnabled() @AT@ 5558 @LENGTH@ 50
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5558 @LENGTH@ 38


UPD MethodDeclaration@@public, abstract, void, MethodName:onEvent, final ExchangeEvent event, long sequence, boolean endOfBatch, Exception,  @TO@ public, abstract, void, MethodName:onEvent, ExchangeEvent event, long sequence, boolean endOfBatch, Exception,  @AT@ 1438 @LENGTH@ 116
---UPD SingleVariableDeclaration@@final ExchangeEvent event @TO@ ExchangeEvent event @AT@ 1467 @LENGTH@ 25
------DEL Modifier@@final @AT@ 1467 @LENGTH@ 5


UPD SuperConstructorInvocation@@super("http",component.getCamelContext());
 @TO@ super("http4",component.getCamelContext());
 @AT@ 1757 @LENGTH@ 43
---UPD StringLiteral@@"http" @TO@ "http4" @AT@ 1763 @LENGTH@ 6


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled(); @AT@ 5226 @LENGTH@ 160
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5234 @LENGTH@ 151
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5234 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5251 @LENGTH@ 134
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 5251 @LENGTH@ 64
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5251 @LENGTH@ 35
---------UPD MethodInvocation@@componentConfiguration.getConfigurer().isEnabled() @TO@ componentConfiguration.getCustomizer().isEnabled() @AT@ 5335 @LENGTH@ 50
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5335 @LENGTH@ 38


INS MethodDeclaration@@private, static, List<PropertyDescriptor>, MethodName:collectDescriptors, Class<?> type,  @TO@ TypeDeclaration@@DefaultProjectionInformation, [ProjectionInformation] @AT@ 2968 @LENGTH@ 476
---INS Modifier@@private @TO@ MethodDeclaration@@private, static, List<PropertyDescriptor>, MethodName:collectDescriptors, Class<?> type,  @AT@ 2968 @LENGTH@ 7
---INS Modifier@@static @TO@ MethodDeclaration@@private, static, List<PropertyDescriptor>, MethodName:collectDescriptors, Class<?> type,  @AT@ 2976 @LENGTH@ 6
---INS ParameterizedType@@List<PropertyDescriptor> @TO@ MethodDeclaration@@private, static, List<PropertyDescriptor>, MethodName:collectDescriptors, Class<?> type,  @AT@ 2983 @LENGTH@ 24
------INS SimpleType@@List @TO@ ParameterizedType@@List<PropertyDescriptor> @AT@ 2983 @LENGTH@ 4
------INS SimpleType@@PropertyDescriptor @TO@ ParameterizedType@@List<PropertyDescriptor> @AT@ 2988 @LENGTH@ 18
---INS SimpleName@@MethodName:collectDescriptors @TO@ MethodDeclaration@@private, static, List<PropertyDescriptor>, MethodName:collectDescriptors, Class<?> type,  @AT@ 3008 @LENGTH@ 18
---INS SingleVariableDeclaration@@Class<?> type @TO@ MethodDeclaration@@private, static, List<PropertyDescriptor>, MethodName:collectDescriptors, Class<?> type,  @AT@ 3027 @LENGTH@ 13
------INS ParameterizedType@@Class<?> @TO@ SingleVariableDeclaration@@Class<?> type @AT@ 3027 @LENGTH@ 8
---------INS SimpleType@@Class @TO@ ParameterizedType@@Class<?> @AT@ 3027 @LENGTH@ 5
---------INS WildcardType@@? @TO@ ParameterizedType@@Class<?> @AT@ 3033 @LENGTH@ 1
------INS SimpleName@@type @TO@ SingleVariableDeclaration@@Class<?> type @AT@ 3036 @LENGTH@ 4
---INS VariableDeclarationStatement@@List<PropertyDescriptor> result=new ArrayList<PropertyDescriptor>(); @TO@ MethodDeclaration@@private, static, List<PropertyDescriptor>, MethodName:collectDescriptors, Class<?> type,  @AT@ 3047 @LENGTH@ 70
------INS ParameterizedType@@List<PropertyDescriptor> @TO@ VariableDeclarationStatement@@List<PropertyDescriptor> result=new ArrayList<PropertyDescriptor>(); @AT@ 3047 @LENGTH@ 24
---------INS SimpleType@@List @TO@ ParameterizedType@@List<PropertyDescriptor> @AT@ 3047 @LENGTH@ 4
---------INS SimpleType@@PropertyDescriptor @TO@ ParameterizedType@@List<PropertyDescriptor> @AT@ 3052 @LENGTH@ 18
------INS VariableDeclarationFragment@@result=new ArrayList<PropertyDescriptor>() @TO@ VariableDeclarationStatement@@List<PropertyDescriptor> result=new ArrayList<PropertyDescriptor>(); @AT@ 3072 @LENGTH@ 44
---------INS SimpleName@@result @TO@ VariableDeclarationFragment@@result=new ArrayList<PropertyDescriptor>() @AT@ 3072 @LENGTH@ 6
---------INS ClassInstanceCreation@@ArrayList<PropertyDescriptor>[] @TO@ VariableDeclarationFragment@@result=new ArrayList<PropertyDescriptor>() @AT@ 3081 @LENGTH@ 35
------------INS New@@new @TO@ ClassInstanceCreation@@ArrayList<PropertyDescriptor>[] @AT@ 3081 @LENGTH@ 3
------------INS ParameterizedType@@ArrayList<PropertyDescriptor> @TO@ ClassInstanceCreation@@ArrayList<PropertyDescriptor>[] @AT@ 3085 @LENGTH@ 29
---------------INS SimpleType@@ArrayList @TO@ ParameterizedType@@ArrayList<PropertyDescriptor> @AT@ 3085 @LENGTH@ 9
---------------INS SimpleType@@PropertyDescriptor @TO@ ParameterizedType@@ArrayList<PropertyDescriptor> @AT@ 3095 @LENGTH@ 18
---INS ExpressionStatement@@MethodInvocation:result.addAll(Arrays.stream(BeanUtils.getPropertyDescriptors(type)).filter(it -> !hasDefaultGetter(it)).collect(Collectors.toList())) @TO@ MethodDeclaration@@private, static, List<PropertyDescriptor>, MethodName:collectDescriptors, Class<?> type,  @AT@ 3120 @LENGTH@ 148
------INS MethodInvocation@@result.addAll(Arrays.stream(BeanUtils.getPropertyDescriptors(type)).filter(it -> !hasDefaultGetter(it)).collect(Collectors.toList())) @TO@ ExpressionStatement@@MethodInvocation:result.addAll(Arrays.stream(BeanUtils.getPropertyDescriptors(type)).filter(it -> !hasDefaultGetter(it)).collect(Collectors.toList())) @AT@ 3120 @LENGTH@ 147
---------INS SimpleName@@Name:result @TO@ MethodInvocation@@result.addAll(Arrays.stream(BeanUtils.getPropertyDescriptors(type)).filter(it -> !hasDefaultGetter(it)).collect(Collectors.toList())) @AT@ 3120 @LENGTH@ 6
---------INS SimpleName@@MethodName:addAll:[Arrays.stream(BeanUtils.getPropertyDescriptors(type)).filter(it -> !hasDefaultGetter(it)).collect(Collectors.toList())] @TO@ MethodInvocation@@result.addAll(Arrays.stream(BeanUtils.getPropertyDescriptors(type)).filter(it -> !hasDefaultGetter(it)).collect(Collectors.toList())) @AT@ 3127 @LENGTH@ 140
------------INS MethodInvocation@@Arrays.stream(BeanUtils.getPropertyDescriptors(type)).filter(it -> !hasDefaultGetter(it)).collect(Collectors.toList()) @TO@ SimpleName@@MethodName:addAll:[Arrays.stream(BeanUtils.getPropertyDescriptors(type)).filter(it -> !hasDefaultGetter(it)).collect(Collectors.toList())] @AT@ 3134 @LENGTH@ 132
---------------MOV MethodInvocation@@Arrays.asList(BeanUtils.getPropertyDescriptors(type)) @TO@ MethodInvocation@@Arrays.stream(BeanUtils.getPropertyDescriptors(type)).filter(it -> !hasDefaultGetter(it)).collect(Collectors.toList()) @AT@ 1577 @LENGTH@ 53
------------------DEL SimpleName@@Name:Arrays @AT@ 1577 @LENGTH@ 6
------------------DEL SimpleName@@MethodName:asList:[BeanUtils.getPropertyDescriptors(type)] @AT@ 1584 @LENGTH@ 46
------------------MOV MethodInvocation@@BeanUtils.getPropertyDescriptors(type) @TO@ MethodInvocation@@Arrays.asList(BeanUtils.getPropertyDescriptors(type)) @AT@ 1591 @LENGTH@ 38
---------------INS MethodInvocation@@MethodName:filter:[it -> !hasDefaultGetter(it)] @TO@ MethodInvocation@@Arrays.stream(BeanUtils.getPropertyDescriptors(type)).filter(it -> !hasDefaultGetter(it)).collect(Collectors.toList()) @AT@ 3134 @LENGTH@ 96
------------------INS LambdaExpression@@it -> !hasDefaultGetter(it) @TO@ MethodInvocation@@MethodName:filter:[it -> !hasDefaultGetter(it)] @AT@ 3202 @LENGTH@ 27
---------------------INS VariableDeclarationFragment@@it @TO@ LambdaExpression@@it -> !hasDefaultGetter(it) @AT@ 3202 @LENGTH@ 2
------------------------INS SimpleName@@it @TO@ VariableDeclarationFragment@@it @AT@ 3202 @LENGTH@ 2
---------------------INS PrefixExpression@@!hasDefaultGetter(it) @TO@ LambdaExpression@@it -> !hasDefaultGetter(it) @AT@ 3208 @LENGTH@ 21
------------------------INS Operator@@! @TO@ PrefixExpression@@!hasDefaultGetter(it) @AT@ 3208 @LENGTH@ 1
------------------------INS MethodInvocation@@hasDefaultGetter(it) @TO@ PrefixExpression@@!hasDefaultGetter(it) @AT@ 3209 @LENGTH@ 20
---------------------------INS SimpleName@@MethodName:hasDefaultGetter:[it] @TO@ MethodInvocation@@hasDefaultGetter(it) @AT@ 3209 @LENGTH@ 20
------------------------------INS SimpleName@@it @TO@ SimpleName@@MethodName:hasDefaultGetter:[it] @AT@ 3226 @LENGTH@ 2
---------------INS SimpleName@@Name:Arrays @TO@ MethodInvocation@@Arrays.stream(BeanUtils.getPropertyDescriptors(type)).filter(it -> !hasDefaultGetter(it)).collect(Collectors.toList()) @AT@ 3134 @LENGTH@ 6
---------------INS SimpleName@@MethodName:collect:[Collectors.toList()] @TO@ MethodInvocation@@Arrays.stream(BeanUtils.getPropertyDescriptors(type)).filter(it -> !hasDefaultGetter(it)).collect(Collectors.toList()) @AT@ 3238 @LENGTH@ 28
------------------INS MethodInvocation@@Collectors.toList() @TO@ SimpleName@@MethodName:collect:[Collectors.toList()] @AT@ 3246 @LENGTH@ 19
---------------------INS SimpleName@@Name:Collectors @TO@ MethodInvocation@@Collectors.toList() @AT@ 3246 @LENGTH@ 10
---------------------INS SimpleName@@MethodName:toList:[] @TO@ MethodInvocation@@Collectors.toList() @AT@ 3257 @LENGTH@ 8
---INS EnhancedForStatement@@for (Class<?> interfaze : type.getInterfaces()) {  result.addAll(collectDescriptors(interfaze));} @TO@ MethodDeclaration@@private, static, List<PropertyDescriptor>, MethodName:collectDescriptors, Class<?> type,  @AT@ 3272 @LENGTH@ 102
------INS SingleVariableDeclaration@@Class<?> interfaze @TO@ EnhancedForStatement@@for (Class<?> interfaze : type.getInterfaces()) {  result.addAll(collectDescriptors(interfaze));} @AT@ 3277 @LENGTH@ 18
---------INS ParameterizedType@@Class<?> @TO@ SingleVariableDeclaration@@Class<?> interfaze @AT@ 3277 @LENGTH@ 8
------------INS SimpleType@@Class @TO@ ParameterizedType@@Class<?> @AT@ 3277 @LENGTH@ 5
------------INS WildcardType@@? @TO@ ParameterizedType@@Class<?> @AT@ 3283 @LENGTH@ 1
---------INS SimpleName@@interfaze @TO@ SingleVariableDeclaration@@Class<?> interfaze @AT@ 3286 @LENGTH@ 9
------INS MethodInvocation@@type.getInterfaces() @TO@ EnhancedForStatement@@for (Class<?> interfaze : type.getInterfaces()) {  result.addAll(collectDescriptors(interfaze));} @AT@ 3298 @LENGTH@ 20
---------INS SimpleName@@Name:type @TO@ MethodInvocation@@type.getInterfaces() @AT@ 3298 @LENGTH@ 4
---------INS SimpleName@@MethodName:getInterfaces:[] @TO@ MethodInvocation@@type.getInterfaces() @AT@ 3303 @LENGTH@ 15
------INS ExpressionStatement@@MethodInvocation:result.addAll(collectDescriptors(interfaze)) @TO@ EnhancedForStatement@@for (Class<?> interfaze : type.getInterfaces()) {  result.addAll(collectDescriptors(interfaze));} @AT@ 3325 @LENGTH@ 45
---------INS MethodInvocation@@result.addAll(collectDescriptors(interfaze)) @TO@ ExpressionStatement@@MethodInvocation:result.addAll(collectDescriptors(interfaze)) @AT@ 3325 @LENGTH@ 44
------------INS SimpleName@@Name:result @TO@ MethodInvocation@@result.addAll(collectDescriptors(interfaze)) @AT@ 3325 @LENGTH@ 6
------------INS SimpleName@@MethodName:addAll:[collectDescriptors(interfaze)] @TO@ MethodInvocation@@result.addAll(collectDescriptors(interfaze)) @AT@ 3332 @LENGTH@ 37
---------------INS MethodInvocation@@collectDescriptors(interfaze) @TO@ SimpleName@@MethodName:addAll:[collectDescriptors(interfaze)] @AT@ 3339 @LENGTH@ 29
------------------INS SimpleName@@MethodName:collectDescriptors:[interfaze] @TO@ MethodInvocation@@collectDescriptors(interfaze) @AT@ 3339 @LENGTH@ 29
---------------------INS SimpleName@@interfaze @TO@ SimpleName@@MethodName:collectDescriptors:[interfaze] @AT@ 3358 @LENGTH@ 9
---INS ReturnStatement@@MethodInvocation:result.stream().distinct().collect(Collectors.toList()) @TO@ MethodDeclaration@@private, static, List<PropertyDescriptor>, MethodName:collectDescriptors, Class<?> type,  @AT@ 3378 @LENGTH@ 63
------INS MethodInvocation@@result.stream().distinct().collect(Collectors.toList()) @TO@ ReturnStatement@@MethodInvocation:result.stream().distinct().collect(Collectors.toList()) @AT@ 3385 @LENGTH@ 55
---------INS MethodInvocation@@MethodName:distinct:[] @TO@ MethodInvocation@@result.stream().distinct().collect(Collectors.toList()) @AT@ 3385 @LENGTH@ 26
---------INS MethodInvocation@@MethodName:stream:[] @TO@ MethodInvocation@@result.stream().distinct().collect(Collectors.toList()) @AT@ 3385 @LENGTH@ 15
---------INS SimpleName@@Name:result @TO@ MethodInvocation@@result.stream().distinct().collect(Collectors.toList()) @AT@ 3385 @LENGTH@ 6
---------INS SimpleName@@MethodName:collect:[Collectors.toList()] @TO@ MethodInvocation@@result.stream().distinct().collect(Collectors.toList()) @AT@ 3412 @LENGTH@ 28
------------INS MethodInvocation@@Collectors.toList() @TO@ SimpleName@@MethodName:collect:[Collectors.toList()] @AT@ 3420 @LENGTH@ 19
---------------INS SimpleName@@Name:Collectors @TO@ MethodInvocation@@Collectors.toList() @AT@ 3420 @LENGTH@ 10
---------------INS SimpleName@@MethodName:toList:[] @TO@ MethodInvocation@@Collectors.toList() @AT@ 3431 @LENGTH@ 8


UPD ExpressionStatement@@MethodInvocation:when(mappingContext.getPersistentEntity(Person.class)).thenReturn(Optional.of(entity)) @TO@ MethodInvocation:when(mappingContext.getRequiredPersistentEntity(Person.class)).thenReturn(entity) @AT@ 2152 @LENGTH@ 87
---UPD MethodInvocation@@when(mappingContext.getPersistentEntity(Person.class)).thenReturn(Optional.of(entity)) @TO@ when(mappingContext.getRequiredPersistentEntity(Person.class)).thenReturn(entity) @AT@ 2152 @LENGTH@ 86
------UPD MethodInvocation@@MethodName:when:[mappingContext.getPersistentEntity(Person.class)] @TO@ MethodName:when:[mappingContext.getRequiredPersistentEntity(Person.class)] @AT@ 2152 @LENGTH@ 54
---------UPD MethodInvocation@@mappingContext.getPersistentEntity(Person.class) @TO@ mappingContext.getRequiredPersistentEntity(Person.class) @AT@ 2157 @LENGTH@ 48
------------UPD SimpleName@@MethodName:getPersistentEntity:[Person.class] @TO@ MethodName:getRequiredPersistentEntity:[Person.class] @AT@ 2172 @LENGTH@ 33
------UPD SimpleName@@MethodName:thenReturn:[Optional.of(entity)] @TO@ MethodName:thenReturn:[entity] @AT@ 2207 @LENGTH@ 31
---------DEL MethodInvocation@@Optional.of(entity) @AT@ 2218 @LENGTH@ 19
------------DEL SimpleName@@Name:Optional @AT@ 2218 @LENGTH@ 8
------------DEL SimpleName@@MethodName:of:[entity] @AT@ 2227 @LENGTH@ 10
---------MOV SimpleName@@entity @TO@ SimpleName@@MethodName:thenReturn:[Optional.of(entity)] @AT@ 2230 @LENGTH@ 6


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled(); @AT@ 5434 @LENGTH@ 160
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5442 @LENGTH@ 151
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5442 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5459 @LENGTH@ 134
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 5459 @LENGTH@ 64
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5459 @LENGTH@ 35
---------UPD MethodInvocation@@componentConfiguration.getConfigurer().isEnabled() @TO@ componentConfiguration.getCustomizer().isEnabled() @AT@ 5543 @LENGTH@ 50
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5543 @LENGTH@ 38


UPD ReturnStatement@@ConditionalExpression:query == null ? null : queryMapper.getMappedObject(query,null) @TO@ ConditionalExpression:query == null ? null : queryMapper.getMappedObject(query,Optional.empty()) @AT@ 8347 @LENGTH@ 71
---UPD ConditionalExpression@@query == null ? null : queryMapper.getMappedObject(query,null) @TO@ query == null ? null : queryMapper.getMappedObject(query,Optional.empty()) @AT@ 8354 @LENGTH@ 63
------UPD MethodInvocation@@queryMapper.getMappedObject(query,null) @TO@ queryMapper.getMappedObject(query,Optional.empty()) @AT@ 8377 @LENGTH@ 40
---------UPD SimpleName@@MethodName:getMappedObject:[query, null] @TO@ MethodName:getMappedObject:[query, Optional.empty()] @AT@ 8389 @LENGTH@ 28
------------DEL NullLiteral@@null @AT@ 8412 @LENGTH@ 4
------------INS MethodInvocation@@Optional.empty() @TO@ SimpleName@@MethodName:getMappedObject:[query, null] @AT@ 8439 @LENGTH@ 16
---------------INS SimpleName@@Name:Optional @TO@ MethodInvocation@@Optional.empty() @AT@ 8439 @LENGTH@ 8
---------------INS SimpleName@@MethodName:empty:[] @TO@ MethodInvocation@@Optional.empty() @AT@ 8448 @LENGTH@ 7


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled(); @AT@ 5277 @LENGTH@ 160
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5285 @LENGTH@ 151
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5285 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5302 @LENGTH@ 134
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 5302 @LENGTH@ 64
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5302 @LENGTH@ 35
---------UPD MethodInvocation@@componentConfiguration.getConfigurer().isEnabled() @TO@ componentConfiguration.getCustomizer().isEnabled() @AT@ 5386 @LENGTH@ 50
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5386 @LENGTH@ 38


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled(); @AT@ 5293 @LENGTH@ 160
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5301 @LENGTH@ 151
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5301 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5318 @LENGTH@ 134
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 5318 @LENGTH@ 64
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5318 @LENGTH@ 35
---------UPD MethodInvocation@@componentConfiguration.getConfigurer().isEnabled() @TO@ componentConfiguration.getCustomizer().isEnabled() @AT@ 5402 @LENGTH@ 50
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5402 @LENGTH@ 38


UPD ReturnStatement@@MethodInvocation:multiHashOrdered(parentHashCode(),2143,name.hashCode()) @TO@ MethodInvocation:multiHashUnordered(parentHashCode(),2143,name.hashCode()) @AT@ 2198 @LENGTH@ 65
---UPD MethodInvocation@@multiHashOrdered(parentHashCode(),2143,name.hashCode()) @TO@ multiHashUnordered(parentHashCode(),2143,name.hashCode()) @AT@ 2205 @LENGTH@ 57
------UPD SimpleName@@MethodName:multiHashOrdered:[parentHashCode(), 2143, name.hashCode()] @TO@ MethodName:multiHashUnordered:[parentHashCode(), 2143, name.hashCode()] @AT@ 2205 @LENGTH@ 57


UPD EnhancedForStatement@@for (String key : source.keySet()) {  result.put(key,Arrays.asList(source.get(key)));} @TO@ for (Entry<String,String[]> entry : source.entrySet()) {  result.put(entry.getKey(),Arrays.asList(entry.getValue()));} @AT@ 4458 @LENGTH@ 92
---UPD SingleVariableDeclaration@@String key @TO@ Entry<String,String[]> entry @AT@ 4463 @LENGTH@ 10
------DEL SimpleType@@String @AT@ 4463 @LENGTH@ 6
------UPD SimpleName@@key @TO@ entry @AT@ 4470 @LENGTH@ 3
------INS ParameterizedType@@Entry<String,String[]> @TO@ SingleVariableDeclaration@@String key @AT@ 4491 @LENGTH@ 23
---------INS SimpleType@@Entry @TO@ ParameterizedType@@Entry<String,String[]> @AT@ 4491 @LENGTH@ 5
---------INS SimpleType@@String @TO@ ParameterizedType@@Entry<String,String[]> @AT@ 4497 @LENGTH@ 6
---------INS ArrayType@@String[] @TO@ ParameterizedType@@Entry<String,String[]> @AT@ 4505 @LENGTH@ 8
------------INS SimpleType@@String @TO@ ArrayType@@String[] @AT@ 4505 @LENGTH@ 6
---UPD MethodInvocation@@source.keySet() @TO@ source.entrySet() @AT@ 4476 @LENGTH@ 15
------UPD SimpleName@@MethodName:keySet:[] @TO@ MethodName:entrySet:[] @AT@ 4483 @LENGTH@ 8
---UPD ExpressionStatement@@MethodInvocation:result.put(key,Arrays.asList(source.get(key))) @TO@ MethodInvocation:result.put(entry.getKey(),Arrays.asList(entry.getValue())) @AT@ 4498 @LENGTH@ 48
------UPD MethodInvocation@@result.put(key,Arrays.asList(source.get(key))) @TO@ result.put(entry.getKey(),Arrays.asList(entry.getValue())) @AT@ 4498 @LENGTH@ 47
---------UPD SimpleName@@MethodName:put:[key, Arrays.asList(source.get(key))] @TO@ MethodName:put:[entry.getKey(), Arrays.asList(entry.getValue())] @AT@ 4505 @LENGTH@ 40
------------DEL SimpleName@@key @AT@ 4509 @LENGTH@ 3
------------UPD MethodInvocation@@Arrays.asList(source.get(key)) @TO@ Arrays.asList(entry.getValue()) @AT@ 4514 @LENGTH@ 30
---------------UPD SimpleName@@MethodName:asList:[source.get(key)] @TO@ MethodName:asList:[entry.getValue()] @AT@ 4521 @LENGTH@ 23
------------------UPD MethodInvocation@@source.get(key) @TO@ entry.getValue() @AT@ 4528 @LENGTH@ 15
---------------------UPD SimpleName@@Name:source @TO@ Name:entry @AT@ 4528 @LENGTH@ 6
---------------------UPD SimpleName@@MethodName:get:[key] @TO@ MethodName:getValue:[] @AT@ 4535 @LENGTH@ 8
------------------------DEL SimpleName@@key @AT@ 4539 @LENGTH@ 3
------------INS MethodInvocation@@entry.getKey() @TO@ SimpleName@@MethodName:put:[key, Arrays.asList(source.get(key))] @AT@ 4558 @LENGTH@ 14
---------------INS SimpleName@@Name:entry @TO@ MethodInvocation@@entry.getKey() @AT@ 4558 @LENGTH@ 5
---------------INS SimpleName@@MethodName:getKey:[] @TO@ MethodInvocation@@entry.getKey() @AT@ 4564 @LENGTH@ 8


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled(); @AT@ 5311 @LENGTH@ 160
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5319 @LENGTH@ 151
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5319 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5336 @LENGTH@ 134
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 5336 @LENGTH@ 64
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5336 @LENGTH@ 35
---------UPD MethodInvocation@@componentConfiguration.getConfigurer().isEnabled() @TO@ componentConfiguration.getCustomizer().isEnabled() @AT@ 5420 @LENGTH@ 50
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5420 @LENGTH@ 38


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled(); @AT@ 5294 @LENGTH@ 160
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5302 @LENGTH@ 151
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5302 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5319 @LENGTH@ 134
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 5319 @LENGTH@ 64
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5319 @LENGTH@ 35
---------UPD MethodInvocation@@componentConfiguration.getConfigurer().isEnabled() @TO@ componentConfiguration.getCustomizer().isEnabled() @AT@ 5403 @LENGTH@ 50
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5403 @LENGTH@ 38


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled(); @AT@ 5209 @LENGTH@ 160
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5217 @LENGTH@ 151
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5217 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5234 @LENGTH@ 134
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 5234 @LENGTH@ 64
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5234 @LENGTH@ 35
---------UPD MethodInvocation@@componentConfiguration.getConfigurer().isEnabled() @TO@ componentConfiguration.getCustomizer().isEnabled() @AT@ 5318 @LENGTH@ 50
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5318 @LENGTH@ 38


INS MethodDeclaration@@public, String, MethodName:getSessionIdentifierString,  @TO@ TypeDeclaration@@[public]SyncDagClient, DAGClient @AT@ 22754 @LENGTH@ 130
---INS Modifier@@public @TO@ MethodDeclaration@@public, String, MethodName:getSessionIdentifierString,  @AT@ 22754 @LENGTH@ 6
---INS SimpleType@@String @TO@ MethodDeclaration@@public, String, MethodName:getSessionIdentifierString,  @AT@ 22761 @LENGTH@ 6
---INS SimpleName@@MethodName:getSessionIdentifierString @TO@ MethodDeclaration@@public, String, MethodName:getSessionIdentifierString,  @AT@ 22768 @LENGTH@ 26
---INS ReturnStatement@@NullLiteral:null @TO@ MethodDeclaration@@public, String, MethodName:getSessionIdentifierString,  @AT@ 22866 @LENGTH@ 12
------INS NullLiteral@@null @TO@ ReturnStatement@@NullLiteral:null @AT@ 22873 @LENGTH@ 4


UPD MethodDeclaration@@static, CryptoAlgorithm, MethodName:fromStandardName, String standardName,  @TO@ static, CryptoAlgorithm, MethodName:fromHeaderParamValue, String headerParamValue,  @AT@ 3487 @LENGTH@ 271
---UPD SimpleName@@MethodName:fromStandardName @TO@ MethodName:fromHeaderParamValue @AT@ 3510 @LENGTH@ 16
---UPD SingleVariableDeclaration@@String standardName @TO@ String headerParamValue @AT@ 3527 @LENGTH@ 19
------UPD SimpleName@@standardName @TO@ headerParamValue @AT@ 3534 @LENGTH@ 12
---UPD EnhancedForStatement@@for (CryptoAlgorithm algorithm : values()) {  if (algorithm.standardName().equals(standardName)) {    result=algorithm;    break;  }} @TO@ for (CryptoAlgorithm algorithm : values()) {  if (algorithm.headerParamValue().equals(headerParamValue)) {    result=algorithm;    break;  }} @AT@ 3587 @LENGTH@ 149
------UPD IfStatement@@if (algorithm.standardName().equals(standardName)) {  result=algorithm;  break;} @TO@ if (algorithm.headerParamValue().equals(headerParamValue)) {  result=algorithm;  break;} @AT@ 3636 @LENGTH@ 95
---------UPD MethodInvocation@@algorithm.standardName().equals(standardName) @TO@ algorithm.headerParamValue().equals(headerParamValue) @AT@ 3640 @LENGTH@ 45
------------UPD MethodInvocation@@MethodName:standardName:[] @TO@ MethodName:headerParamValue:[] @AT@ 3640 @LENGTH@ 24
------------UPD SimpleName@@MethodName:equals:[standardName] @TO@ MethodName:equals:[headerParamValue] @AT@ 3665 @LENGTH@ 20
---------------UPD SimpleName@@standardName @TO@ headerParamValue @AT@ 3672 @LENGTH@ 12


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<SshComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<SshComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5378 @LENGTH@ 336
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 5382 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5382 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  ComponentCustomizer<SshComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ ThenBody:{  for (  ComponentCustomizer<SshComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5438 @LENGTH@ 276
------UPD EnhancedForStatement@@for (ComponentCustomizer<SshComponent> configurer : customizers) {  LOGGER.debug("Configure component {}, with configurer {}",component,configurer);  configurer.customize(component);} @TO@ for (ComponentCustomizer<SshComponent> customizer : customizers) {  LOGGER.debug("Configure component {}, with customizer {}",component,customizer);  customizer.customize(component);} @AT@ 5452 @LENGTH@ 252
---------UPD SingleVariableDeclaration@@ComponentCustomizer<SshComponent> configurer @TO@ ComponentCustomizer<SshComponent> customizer @AT@ 5457 @LENGTH@ 44
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5491 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5535 @LENGTH@ 106
------------UPD MethodInvocation@@LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5535 @LENGTH@ 105
---------------UPD SimpleName@@MethodName:debug:["Configure component {}, with configurer {}", component, configurer] @TO@ MethodName:debug:["Configure component {}, with customizer {}", component, customizer] @AT@ 5542 @LENGTH@ 98
------------------UPD StringLiteral@@"Configure component {}, with configurer {}" @TO@ "Configure component {}, with customizer {}" @AT@ 5548 @LENGTH@ 44
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5629 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(component) @TO@ MethodInvocation:customizer.customize(component) @AT@ 5658 @LENGTH@ 32
------------UPD MethodInvocation@@configurer.customize(component) @TO@ customizer.customize(component) @AT@ 5658 @LENGTH@ 31
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5658 @LENGTH@ 10


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled(); @AT@ 5277 @LENGTH@ 160
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5285 @LENGTH@ 151
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5285 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5302 @LENGTH@ 134
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 5302 @LENGTH@ 64
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5302 @LENGTH@ 35
---------UPD MethodInvocation@@componentConfiguration.getConfigurer().isEnabled() @TO@ componentConfiguration.getCustomizer().isEnabled() @AT@ 5386 @LENGTH@ 50
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5386 @LENGTH@ 38


UPD ReturnStatement@@QualifiedName:Collections.EMPTY_SET @TO@ MethodInvocation:Collections.emptySet() @AT@ 2802 @LENGTH@ 29
---INS MethodInvocation@@Collections.emptySet() @TO@ ReturnStatement@@QualifiedName:Collections.EMPTY_SET @AT@ 2809 @LENGTH@ 22
------INS SimpleName@@Name:Collections @TO@ MethodInvocation@@Collections.emptySet() @AT@ 2809 @LENGTH@ 11
------INS SimpleName@@MethodName:emptySet:[] @TO@ MethodInvocation@@Collections.emptySet() @AT@ 2821 @LENGTH@ 10
---DEL QualifiedName@@Collections.EMPTY_SET @AT@ 2809 @LENGTH@ 21
------DEL SimpleName@@Collections @AT@ 2809 @LENGTH@ 11
------DEL SimpleName@@EMPTY_SET @AT@ 2821 @LENGTH@ 9


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<GoraComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<GoraComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5395 @LENGTH@ 337
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 5399 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5399 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  ComponentCustomizer<GoraComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ ThenBody:{  for (  ComponentCustomizer<GoraComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5455 @LENGTH@ 277
------UPD EnhancedForStatement@@for (ComponentCustomizer<GoraComponent> configurer : customizers) {  LOGGER.debug("Configure component {}, with configurer {}",component,configurer);  configurer.customize(component);} @TO@ for (ComponentCustomizer<GoraComponent> customizer : customizers) {  LOGGER.debug("Configure component {}, with customizer {}",component,customizer);  customizer.customize(component);} @AT@ 5469 @LENGTH@ 253
---------UPD SingleVariableDeclaration@@ComponentCustomizer<GoraComponent> configurer @TO@ ComponentCustomizer<GoraComponent> customizer @AT@ 5474 @LENGTH@ 45
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5509 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5553 @LENGTH@ 106
------------UPD MethodInvocation@@LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5553 @LENGTH@ 105
---------------UPD SimpleName@@MethodName:debug:["Configure component {}, with configurer {}", component, configurer] @TO@ MethodName:debug:["Configure component {}, with customizer {}", component, customizer] @AT@ 5560 @LENGTH@ 98
------------------UPD StringLiteral@@"Configure component {}, with configurer {}" @TO@ "Configure component {}, with customizer {}" @AT@ 5566 @LENGTH@ 44
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5647 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(component) @TO@ MethodInvocation:customizer.customize(component) @AT@ 5676 @LENGTH@ 32
------------UPD MethodInvocation@@configurer.customize(component) @TO@ customizer.customize(component) @AT@ 5676 @LENGTH@ 31
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5676 @LENGTH@ 10


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  DataFormatCustomizer<XmlRpcDataFormat> configurer : customizers) {    LOGGER.debug("Configure dataformat {}, with configurer {}",dataformat,configurer);    configurer.customize(dataformat);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  DataFormatCustomizer<XmlRpcDataFormat> customizer : customizers) {    LOGGER.debug("Configure dataformat {}, with customizer {}",dataformat,customizer);    customizer.customize(dataformat);  }} @AT@ 5332 @LENGTH@ 425
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 5336 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5336 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  DataFormatCustomizer<XmlRpcDataFormat> configurer : customizers) {    LOGGER.debug("Configure dataformat {}, with configurer {}",dataformat,configurer);    configurer.customize(dataformat);  }} @TO@ ThenBody:{  for (  DataFormatCustomizer<XmlRpcDataFormat> customizer : customizers) {    LOGGER.debug("Configure dataformat {}, with customizer {}",dataformat,customizer);    customizer.customize(dataformat);  }} @AT@ 5392 @LENGTH@ 365
------UPD EnhancedForStatement@@for (DataFormatCustomizer<XmlRpcDataFormat> configurer : customizers) {  LOGGER.debug("Configure dataformat {}, with configurer {}",dataformat,configurer);  configurer.customize(dataformat);} @TO@ for (DataFormatCustomizer<XmlRpcDataFormat> customizer : customizers) {  LOGGER.debug("Configure dataformat {}, with customizer {}",dataformat,customizer);  customizer.customize(dataformat);} @AT@ 5414 @LENGTH@ 325
---------UPD SingleVariableDeclaration@@DataFormatCustomizer<XmlRpcDataFormat> configurer @TO@ DataFormatCustomizer<XmlRpcDataFormat> customizer @AT@ 5419 @LENGTH@ 49
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5458 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure dataformat {}, with configurer {}",dataformat,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure dataformat {}, with customizer {}",dataformat,customizer) @AT@ 5510 @LENGTH@ 149
------------UPD MethodInvocation@@LOGGER.debug("Configure dataformat {}, with configurer {}",dataformat,configurer) @TO@ LOGGER.debug("Configure dataformat {}, with customizer {}",dataformat,customizer) @AT@ 5510 @LENGTH@ 148
---------------UPD SimpleName@@MethodName:debug:["Configure dataformat {}, with configurer {}", dataformat, configurer] @TO@ MethodName:debug:["Configure dataformat {}, with customizer {}", dataformat, customizer] @AT@ 5517 @LENGTH@ 141
------------------UPD StringLiteral@@"Configure dataformat {}, with configurer {}" @TO@ "Configure dataformat {}, with customizer {}" @AT@ 5556 @LENGTH@ 45
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5647 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(dataformat) @TO@ MethodInvocation:customizer.customize(dataformat) @AT@ 5684 @LENGTH@ 33
------------UPD MethodInvocation@@configurer.customize(dataformat) @TO@ customizer.customize(dataformat) @AT@ 5684 @LENGTH@ 32
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5684 @LENGTH@ 10


UPD IfStatement@@if (parent == null || !(parent instanceof List) || listIndex == null) {  spelExpression.setValue(target,value);} else {  List<Object> list=(List<Object>)parentExpression.getValue(target);  list.add(listIndex >= 0 ? listIndex.intValue() : list.size(),value);} @TO@ if (parent == null || !(parent instanceof List) || listIndex == null) {  TypeDescriptor descriptor=parentExpression.getValueTypeDescriptor(target);  if (descriptor.isCollection() && !Collection.class.isInstance(value)) {    Collection<Object> collection=CollectionFactory.createCollection(descriptor.getType(),1);    collection.add(value);    parentExpression.setValue(target,collection);  } else {    spelExpression.setValue(target,value);  }} else {  List<Object> list=(List<Object>)parentExpression.getValue(target);  list.add(listIndex >= 0 ? listIndex.intValue() : list.size(),value);} @AT@ 3781 @LENGTH@ 276
---UPD Block@@ThenBody:{  spelExpression.setValue(target,value);} @TO@ ElseBody:{  spelExpression.setValue(target,value);} @AT@ 3851 @LENGTH@ 48
---INS Block@@ThenBody:{  TypeDescriptor descriptor=parentExpression.getValueTypeDescriptor(target);  if (descriptor.isCollection() && !Collection.class.isInstance(value)) {    Collection<Object> collection=CollectionFactory.createCollection(descriptor.getType(),1);    collection.add(value);    parentExpression.setValue(target,collection);  } else {    spelExpression.setValue(target,value);  }} @TO@ IfStatement@@if (parent == null || !(parent instanceof List) || listIndex == null) {  spelExpression.setValue(target,value);} else {  List<Object> list=(List<Object>)parentExpression.getValue(target);  list.add(listIndex >= 0 ? listIndex.intValue() : list.size(),value);} @AT@ 3987 @LENGTH@ 443
------INS VariableDeclarationStatement@@TypeDescriptor descriptor=parentExpression.getValueTypeDescriptor(target); @TO@ Block@@ThenBody:{  TypeDescriptor descriptor=parentExpression.getValueTypeDescriptor(target);  if (descriptor.isCollection() && !Collection.class.isInstance(value)) {    Collection<Object> collection=CollectionFactory.createCollection(descriptor.getType(),1);    collection.add(value);    parentExpression.setValue(target,collection);  } else {    spelExpression.setValue(target,value);  }} @AT@ 3993 @LENGTH@ 76
---------INS SimpleType@@TypeDescriptor @TO@ VariableDeclarationStatement@@TypeDescriptor descriptor=parentExpression.getValueTypeDescriptor(target); @AT@ 3993 @LENGTH@ 14
---------INS VariableDeclarationFragment@@descriptor=parentExpression.getValueTypeDescriptor(target) @TO@ VariableDeclarationStatement@@TypeDescriptor descriptor=parentExpression.getValueTypeDescriptor(target); @AT@ 4008 @LENGTH@ 60
------------INS SimpleName@@descriptor @TO@ VariableDeclarationFragment@@descriptor=parentExpression.getValueTypeDescriptor(target) @AT@ 4008 @LENGTH@ 10
------------INS MethodInvocation@@parentExpression.getValueTypeDescriptor(target) @TO@ VariableDeclarationFragment@@descriptor=parentExpression.getValueTypeDescriptor(target) @AT@ 4021 @LENGTH@ 47
---------------INS SimpleName@@Name:parentExpression @TO@ MethodInvocation@@parentExpression.getValueTypeDescriptor(target) @AT@ 4021 @LENGTH@ 16
---------------INS SimpleName@@MethodName:getValueTypeDescriptor:[target] @TO@ MethodInvocation@@parentExpression.getValueTypeDescriptor(target) @AT@ 4038 @LENGTH@ 30
------------------INS SimpleName@@target @TO@ SimpleName@@MethodName:getValueTypeDescriptor:[target] @AT@ 4061 @LENGTH@ 6
------INS IfStatement@@if (descriptor.isCollection() && !Collection.class.isInstance(value)) {  Collection<Object> collection=CollectionFactory.createCollection(descriptor.getType(),1);  collection.add(value);  parentExpression.setValue(target,collection);} else {  spelExpression.setValue(target,value);} @TO@ Block@@ThenBody:{  TypeDescriptor descriptor=parentExpression.getValueTypeDescriptor(target);  if (descriptor.isCollection() && !Collection.class.isInstance(value)) {    Collection<Object> collection=CollectionFactory.createCollection(descriptor.getType(),1);    collection.add(value);    parentExpression.setValue(target,collection);  } else {    spelExpression.setValue(target,value);  }} @AT@ 4115 @LENGTH@ 310
---------MOV Block@@ThenBody:{  spelExpression.setValue(target,value);} @TO@ IfStatement@@if (descriptor.isCollection() && !Collection.class.isInstance(value)) {  Collection<Object> collection=CollectionFactory.createCollection(descriptor.getType(),1);  collection.add(value);  parentExpression.setValue(target,collection);} else {  spelExpression.setValue(target,value);} @AT@ 3851 @LENGTH@ 48
---------INS InfixExpression@@descriptor.isCollection() && !Collection.class.isInstance(value) @TO@ IfStatement@@if (descriptor.isCollection() && !Collection.class.isInstance(value)) {  Collection<Object> collection=CollectionFactory.createCollection(descriptor.getType(),1);  collection.add(value);  parentExpression.setValue(target,collection);} else {  spelExpression.setValue(target,value);} @AT@ 4119 @LENGTH@ 64
------------INS MethodInvocation@@descriptor.isCollection() @TO@ InfixExpression@@descriptor.isCollection() && !Collection.class.isInstance(value) @AT@ 4119 @LENGTH@ 25
---------------INS SimpleName@@Name:descriptor @TO@ MethodInvocation@@descriptor.isCollection() @AT@ 4119 @LENGTH@ 10
---------------INS SimpleName@@MethodName:isCollection:[] @TO@ MethodInvocation@@descriptor.isCollection() @AT@ 4130 @LENGTH@ 14
------------INS Operator@@&& @TO@ InfixExpression@@descriptor.isCollection() && !Collection.class.isInstance(value) @AT@ 4144 @LENGTH@ 2
------------INS PrefixExpression@@!Collection.class.isInstance(value) @TO@ InfixExpression@@descriptor.isCollection() && !Collection.class.isInstance(value) @AT@ 4148 @LENGTH@ 35
---------------INS Operator@@! @TO@ PrefixExpression@@!Collection.class.isInstance(value) @AT@ 4148 @LENGTH@ 1
---------------INS MethodInvocation@@Collection.class.isInstance(value) @TO@ PrefixExpression@@!Collection.class.isInstance(value) @AT@ 4149 @LENGTH@ 34
------------------INS TypeLiteral@@Collection.class @TO@ MethodInvocation@@Collection.class.isInstance(value) @AT@ 4149 @LENGTH@ 16
------------------INS SimpleName@@MethodName:isInstance:[value] @TO@ MethodInvocation@@Collection.class.isInstance(value) @AT@ 4166 @LENGTH@ 17
---------------------INS SimpleName@@value @TO@ SimpleName@@MethodName:isInstance:[value] @AT@ 4177 @LENGTH@ 5
---------INS Block@@ThenBody:{  Collection<Object> collection=CollectionFactory.createCollection(descriptor.getType(),1);  collection.add(value);  parentExpression.setValue(target,collection);} @TO@ IfStatement@@if (descriptor.isCollection() && !Collection.class.isInstance(value)) {  Collection<Object> collection=CollectionFactory.createCollection(descriptor.getType(),1);  collection.add(value);  parentExpression.setValue(target,collection);} else {  spelExpression.setValue(target,value);} @AT@ 4185 @LENGTH@ 184
------------INS VariableDeclarationStatement@@Collection<Object> collection=CollectionFactory.createCollection(descriptor.getType(),1); @TO@ Block@@ThenBody:{  Collection<Object> collection=CollectionFactory.createCollection(descriptor.getType(),1);  collection.add(value);  parentExpression.setValue(target,collection);} @AT@ 4192 @LENGTH@ 92
---------------INS ParameterizedType@@Collection<Object> @TO@ VariableDeclarationStatement@@Collection<Object> collection=CollectionFactory.createCollection(descriptor.getType(),1); @AT@ 4192 @LENGTH@ 18
------------------INS SimpleType@@Collection @TO@ ParameterizedType@@Collection<Object> @AT@ 4192 @LENGTH@ 10
------------------INS SimpleType@@Object @TO@ ParameterizedType@@Collection<Object> @AT@ 4203 @LENGTH@ 6
---------------INS VariableDeclarationFragment@@collection=CollectionFactory.createCollection(descriptor.getType(),1) @TO@ VariableDeclarationStatement@@Collection<Object> collection=CollectionFactory.createCollection(descriptor.getType(),1); @AT@ 4211 @LENGTH@ 72
------------------INS SimpleName@@collection @TO@ VariableDeclarationFragment@@collection=CollectionFactory.createCollection(descriptor.getType(),1) @AT@ 4211 @LENGTH@ 10
------------------INS MethodInvocation@@CollectionFactory.createCollection(descriptor.getType(),1) @TO@ VariableDeclarationFragment@@collection=CollectionFactory.createCollection(descriptor.getType(),1) @AT@ 4224 @LENGTH@ 59
---------------------INS SimpleName@@Name:CollectionFactory @TO@ MethodInvocation@@CollectionFactory.createCollection(descriptor.getType(),1) @AT@ 4224 @LENGTH@ 17
---------------------INS SimpleName@@MethodName:createCollection:[descriptor.getType(), 1] @TO@ MethodInvocation@@CollectionFactory.createCollection(descriptor.getType(),1) @AT@ 4242 @LENGTH@ 41
------------------------INS MethodInvocation@@descriptor.getType() @TO@ SimpleName@@MethodName:createCollection:[descriptor.getType(), 1] @AT@ 4259 @LENGTH@ 20
---------------------------INS SimpleName@@Name:descriptor @TO@ MethodInvocation@@descriptor.getType() @AT@ 4259 @LENGTH@ 10
---------------------------INS SimpleName@@MethodName:getType:[] @TO@ MethodInvocation@@descriptor.getType() @AT@ 4270 @LENGTH@ 9
------------------------INS NumberLiteral@@1 @TO@ SimpleName@@MethodName:createCollection:[descriptor.getType(), 1] @AT@ 4281 @LENGTH@ 1
------------INS ExpressionStatement@@MethodInvocation:collection.add(value) @TO@ Block@@ThenBody:{  Collection<Object> collection=CollectionFactory.createCollection(descriptor.getType(),1);  collection.add(value);  parentExpression.setValue(target,collection);} @AT@ 4289 @LENGTH@ 22
---------------INS MethodInvocation@@collection.add(value) @TO@ ExpressionStatement@@MethodInvocation:collection.add(value) @AT@ 4289 @LENGTH@ 21
------------------INS SimpleName@@Name:collection @TO@ MethodInvocation@@collection.add(value) @AT@ 4289 @LENGTH@ 10
------------------INS SimpleName@@MethodName:add:[value] @TO@ MethodInvocation@@collection.add(value) @AT@ 4300 @LENGTH@ 10
---------------------INS SimpleName@@value @TO@ SimpleName@@MethodName:add:[value] @AT@ 4304 @LENGTH@ 5
------------INS ExpressionStatement@@MethodInvocation:parentExpression.setValue(target,collection) @TO@ Block@@ThenBody:{  Collection<Object> collection=CollectionFactory.createCollection(descriptor.getType(),1);  collection.add(value);  parentExpression.setValue(target,collection);} @AT@ 4317 @LENGTH@ 46
---------------INS MethodInvocation@@parentExpression.setValue(target,collection) @TO@ ExpressionStatement@@MethodInvocation:parentExpression.setValue(target,collection) @AT@ 4317 @LENGTH@ 45
------------------INS SimpleName@@Name:parentExpression @TO@ MethodInvocation@@parentExpression.setValue(target,collection) @AT@ 4317 @LENGTH@ 16
------------------INS SimpleName@@MethodName:setValue:[target, collection] @TO@ MethodInvocation@@parentExpression.setValue(target,collection) @AT@ 4334 @LENGTH@ 28
---------------------INS SimpleName@@target @TO@ SimpleName@@MethodName:setValue:[target, collection] @AT@ 4343 @LENGTH@ 6
---------------------INS SimpleName@@collection @TO@ SimpleName@@MethodName:setValue:[target, collection] @AT@ 4351 @LENGTH@ 10


INS MethodDeclaration@@protected, void, MethodName:doPostSetup, Exception,  @TO@ TypeDeclaration@@[public, abstract]AbstractDirectVmTestSupport, ContextTestSupport @AT@ 1850 @LENGTH@ 69
---INS Modifier@@protected @TO@ MethodDeclaration@@protected, void, MethodName:doPostSetup, Exception,  @AT@ 1850 @LENGTH@ 9
---INS PrimitiveType@@void @TO@ MethodDeclaration@@protected, void, MethodName:doPostSetup, Exception,  @AT@ 1860 @LENGTH@ 4
---INS SimpleName@@MethodName:doPostSetup @TO@ MethodDeclaration@@protected, void, MethodName:doPostSetup, Exception,  @AT@ 1865 @LENGTH@ 11
---INS SimpleType@@Exception @TO@ MethodDeclaration@@protected, void, MethodName:doPostSetup, Exception,  @AT@ 1886 @LENGTH@ 9


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled(); @AT@ 5226 @LENGTH@ 160
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5234 @LENGTH@ 151
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5234 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5251 @LENGTH@ 134
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 5251 @LENGTH@ 64
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5251 @LENGTH@ 35
---------UPD MethodInvocation@@componentConfiguration.getConfigurer().isEnabled() @TO@ componentConfiguration.getCustomizer().isEnabled() @AT@ 5335 @LENGTH@ 50
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5335 @LENGTH@ 38


MOV FieldDeclaration@@private, boolean, [useGlobalSslContextParameters] @TO@ TypeDeclaration@@[@Metadata(label="verifiers",enums="parameters,connectivity"), public]HttpComponent, HttpCommonComponent[RestProducerFactory, VerifiableComponent, SSLContextParametersAware] @AT@ 4429 @LENGTH@ 46


UPD ExpressionStatement@@Assignment:connection=DriverManager.getConnection("jdbc:h2:mem:test;DB_CLOSE_DELAY=-1","sa",DATABASE_PASSWORD) @TO@ Assignment:connection=DriverManager.getConnection("jdbc:h2:mem:test;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE","sa",DATABASE_PASSWORD) @AT@ 13002 @LENGTH@ 104
---UPD Assignment@@connection=DriverManager.getConnection("jdbc:h2:mem:test;DB_CLOSE_DELAY=-1","sa",DATABASE_PASSWORD) @TO@ connection=DriverManager.getConnection("jdbc:h2:mem:test;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE","sa",DATABASE_PASSWORD) @AT@ 13002 @LENGTH@ 103
------UPD MethodInvocation@@DriverManager.getConnection("jdbc:h2:mem:test;DB_CLOSE_DELAY=-1","sa",DATABASE_PASSWORD) @TO@ DriverManager.getConnection("jdbc:h2:mem:test;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE","sa",DATABASE_PASSWORD) @AT@ 13015 @LENGTH@ 90
---------UPD SimpleName@@MethodName:getConnection:["jdbc:h2:mem:test;DB_CLOSE_DELAY=-1", "sa", DATABASE_PASSWORD] @TO@ MethodName:getConnection:["jdbc:h2:mem:test;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE", "sa", DATABASE_PASSWORD] @AT@ 13029 @LENGTH@ 76
------------UPD StringLiteral@@"jdbc:h2:mem:test;DB_CLOSE_DELAY=-1" @TO@ "jdbc:h2:mem:test;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE" @AT@ 13043 @LENGTH@ 36


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled(); @AT@ 5208 @LENGTH@ 160
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5216 @LENGTH@ 151
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5216 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5233 @LENGTH@ 134
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 5233 @LENGTH@ 64
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5233 @LENGTH@ 35
---------UPD MethodInvocation@@componentConfiguration.getConfigurer().isEnabled() @TO@ componentConfiguration.getCustomizer().isEnabled() @AT@ 5317 @LENGTH@ 50
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5317 @LENGTH@ 38


DEL VariableDeclarationStatement@@ModelNode payload=new ModelNode(); @AT@ 3395 @LENGTH@ 36
---DEL SimpleType@@ModelNode @AT@ 3395 @LENGTH@ 9
---DEL VariableDeclarationFragment@@payload=new ModelNode() @AT@ 3405 @LENGTH@ 25
------DEL SimpleName@@payload @AT@ 3405 @LENGTH@ 7
------DEL ClassInstanceCreation@@ModelNode[] @AT@ 3415 @LENGTH@ 15
---------DEL New@@new @AT@ 3415 @LENGTH@ 3
---------DEL SimpleType@@ModelNode @AT@ 3419 @LENGTH@ 9


UPD ThrowStatement@@MethodInvocation:log.locatonAndexternalPathAreIdentical(location.toString(),externalPath.toString()) @TO@ MethodInvocation:log.locationAndExternalPathAreIdentical(location.toString(),externalPath.toString()) @AT@ 9742 @LENGTH@ 91
---UPD MethodInvocation@@log.locatonAndexternalPathAreIdentical(location.toString(),externalPath.toString()) @TO@ log.locationAndExternalPathAreIdentical(location.toString(),externalPath.toString()) @AT@ 9748 @LENGTH@ 84
------UPD SimpleName@@MethodName:locatonAndexternalPathAreIdentical:[location.toString(), externalPath.toString()] @TO@ MethodName:locationAndExternalPathAreIdentical:[location.toString(), externalPath.toString()] @AT@ 9752 @LENGTH@ 80


UPD FieldDeclaration@@public, static, String, [COLUMNS_BUFFER_SIZE_CONF_STR="hive.io.rcfile.record.buffer.size"] @TO@ public, static, final, String, [COLUMNS_BUFFER_SIZE_CONF_STR="hive.io.rcfile.record.buffer.size"] @AT@ 29861 @LENGTH@ 88
---INS Modifier@@final @TO@ FieldDeclaration@@public, static, String, [COLUMNS_BUFFER_SIZE_CONF_STR="hive.io.rcfile.record.buffer.size"] @AT@ 29875 @LENGTH@ 5


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && dataformatConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && dataformatConfiguration.getCustomizer().isEnabled(); @AT@ 5079 @LENGTH@ 177
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && dataformatConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && dataformatConfiguration.getCustomizer().isEnabled() @AT@ 5087 @LENGTH@ 168
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5087 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && dataformatConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && dataformatConfiguration.getCustomizer().isEnabled() @AT@ 5104 @LENGTH@ 151
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 5104 @LENGTH@ 72
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5104 @LENGTH@ 35
---------UPD MethodInvocation@@dataformatConfiguration.getConfigurer().isEnabled() @TO@ dataformatConfiguration.getCustomizer().isEnabled() @AT@ 5204 @LENGTH@ 51
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5204 @LENGTH@ 39


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<ApnsComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<ApnsComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5395 @LENGTH@ 337
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 5399 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5399 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  ComponentCustomizer<ApnsComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ ThenBody:{  for (  ComponentCustomizer<ApnsComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5455 @LENGTH@ 277
------UPD EnhancedForStatement@@for (ComponentCustomizer<ApnsComponent> configurer : customizers) {  LOGGER.debug("Configure component {}, with configurer {}",component,configurer);  configurer.customize(component);} @TO@ for (ComponentCustomizer<ApnsComponent> customizer : customizers) {  LOGGER.debug("Configure component {}, with customizer {}",component,customizer);  customizer.customize(component);} @AT@ 5469 @LENGTH@ 253
---------UPD SingleVariableDeclaration@@ComponentCustomizer<ApnsComponent> configurer @TO@ ComponentCustomizer<ApnsComponent> customizer @AT@ 5474 @LENGTH@ 45
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5509 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5553 @LENGTH@ 106
------------UPD MethodInvocation@@LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5553 @LENGTH@ 105
---------------UPD SimpleName@@MethodName:debug:["Configure component {}, with configurer {}", component, configurer] @TO@ MethodName:debug:["Configure component {}, with customizer {}", component, customizer] @AT@ 5560 @LENGTH@ 98
------------------UPD StringLiteral@@"Configure component {}, with configurer {}" @TO@ "Configure component {}, with customizer {}" @AT@ 5566 @LENGTH@ 44
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5647 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(component) @TO@ MethodInvocation:customizer.customize(component) @AT@ 5676 @LENGTH@ 32
------------UPD MethodInvocation@@configurer.customize(component) @TO@ customizer.customize(component) @AT@ 5676 @LENGTH@ 31
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5676 @LENGTH@ 10


UPD ExpressionStatement@@MethodInvocation:Assert.hasLength(url) @TO@ MethodInvocation:Assert.hasLength(url,"url must have length") @AT@ 4276 @LENGTH@ 22
---UPD MethodInvocation@@Assert.hasLength(url) @TO@ Assert.hasLength(url,"url must have length") @AT@ 4276 @LENGTH@ 21
------UPD SimpleName@@MethodName:hasLength:[url] @TO@ MethodName:hasLength:[url, "url must have length"] @AT@ 4283 @LENGTH@ 14
---------INS StringLiteral@@"url must have length" @TO@ SimpleName@@MethodName:hasLength:[url] @AT@ 4298 @LENGTH@ 22


UPD ExpressionStatement@@MethodInvocation:Assert.notNull(serverName) @TO@ MethodInvocation:Assert.notNull(serverName,"serverName cannot be null") @AT@ 1852 @LENGTH@ 27
---UPD MethodInvocation@@Assert.notNull(serverName) @TO@ Assert.notNull(serverName,"serverName cannot be null") @AT@ 1852 @LENGTH@ 26
------UPD SimpleName@@MethodName:notNull:[serverName] @TO@ MethodName:notNull:[serverName, "serverName cannot be null"] @AT@ 1859 @LENGTH@ 19
---------INS StringLiteral@@"serverName cannot be null" @TO@ SimpleName@@MethodName:notNull:[serverName] @AT@ 1904 @LENGTH@ 27


INS MethodDeclaration@@public, void, MethodName:testSanitizeUriRawUnsafePassword,  @TO@ TypeDeclaration@@[public]URISupportTest, ContextTestSupport @AT@ 10574 @LENGTH@ 299
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testSanitizeUriRawUnsafePassword,  @AT@ 10574 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testSanitizeUriRawUnsafePassword,  @AT@ 10581 @LENGTH@ 4
---INS SimpleName@@MethodName:testSanitizeUriRawUnsafePassword @TO@ MethodDeclaration@@public, void, MethodName:testSanitizeUriRawUnsafePassword,  @AT@ 10586 @LENGTH@ 32
---INS VariableDeclarationStatement@@String uri="sftp://localhost/target?password=RAW(beforeAmp&afterAmp)&username=jrandom"; @TO@ MethodDeclaration@@public, void, MethodName:testSanitizeUriRawUnsafePassword,  @AT@ 10631 @LENGTH@ 89
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String uri="sftp://localhost/target?password=RAW(beforeAmp&afterAmp)&username=jrandom"; @AT@ 10631 @LENGTH@ 6
------INS VariableDeclarationFragment@@uri="sftp://localhost/target?password=RAW(beforeAmp&afterAmp)&username=jrandom" @TO@ VariableDeclarationStatement@@String uri="sftp://localhost/target?password=RAW(beforeAmp&afterAmp)&username=jrandom"; @AT@ 10638 @LENGTH@ 81
---------INS SimpleName@@uri @TO@ VariableDeclarationFragment@@uri="sftp://localhost/target?password=RAW(beforeAmp&afterAmp)&username=jrandom" @AT@ 10638 @LENGTH@ 3
---------INS StringLiteral@@"sftp://localhost/target?password=RAW(beforeAmp&afterAmp)&username=jrandom" @TO@ VariableDeclarationFragment@@uri="sftp://localhost/target?password=RAW(beforeAmp&afterAmp)&username=jrandom" @AT@ 10644 @LENGTH@ 75
---INS VariableDeclarationStatement@@String expected="sftp://localhost/target?password=xxxxxx&username=jrandom"; @TO@ MethodDeclaration@@public, void, MethodName:testSanitizeUriRawUnsafePassword,  @AT@ 10729 @LENGTH@ 77
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String expected="sftp://localhost/target?password=xxxxxx&username=jrandom"; @AT@ 10729 @LENGTH@ 6
------INS VariableDeclarationFragment@@expected="sftp://localhost/target?password=xxxxxx&username=jrandom" @TO@ VariableDeclarationStatement@@String expected="sftp://localhost/target?password=xxxxxx&username=jrandom"; @AT@ 10736 @LENGTH@ 69
---------INS SimpleName@@expected @TO@ VariableDeclarationFragment@@expected="sftp://localhost/target?password=xxxxxx&username=jrandom" @AT@ 10736 @LENGTH@ 8
---------INS StringLiteral@@"sftp://localhost/target?password=xxxxxx&username=jrandom" @TO@ VariableDeclarationFragment@@expected="sftp://localhost/target?password=xxxxxx&username=jrandom" @AT@ 10747 @LENGTH@ 58
---INS ExpressionStatement@@MethodInvocation:assertEquals(expected,URISupport.sanitizeUri(uri)) @TO@ MethodDeclaration@@public, void, MethodName:testSanitizeUriRawUnsafePassword,  @AT@ 10815 @LENGTH@ 52
------INS MethodInvocation@@assertEquals(expected,URISupport.sanitizeUri(uri)) @TO@ ExpressionStatement@@MethodInvocation:assertEquals(expected,URISupport.sanitizeUri(uri)) @AT@ 10815 @LENGTH@ 51
---------INS SimpleName@@MethodName:assertEquals:[expected, URISupport.sanitizeUri(uri)] @TO@ MethodInvocation@@assertEquals(expected,URISupport.sanitizeUri(uri)) @AT@ 10815 @LENGTH@ 51
------------INS SimpleName@@expected @TO@ SimpleName@@MethodName:assertEquals:[expected, URISupport.sanitizeUri(uri)] @AT@ 10828 @LENGTH@ 8
------------INS MethodInvocation@@URISupport.sanitizeUri(uri) @TO@ SimpleName@@MethodName:assertEquals:[expected, URISupport.sanitizeUri(uri)] @AT@ 10838 @LENGTH@ 27
---------------INS SimpleName@@Name:URISupport @TO@ MethodInvocation@@URISupport.sanitizeUri(uri) @AT@ 10838 @LENGTH@ 10
---------------INS SimpleName@@MethodName:sanitizeUri:[uri] @TO@ MethodInvocation@@URISupport.sanitizeUri(uri) @AT@ 10849 @LENGTH@ 16
------------------INS SimpleName@@uri @TO@ SimpleName@@MethodName:sanitizeUri:[uri] @AT@ 10861 @LENGTH@ 3


UPD VariableDeclarationStatement@@File file=new File(TMPDIR + separator + suffix); @TO@ File file=new File(TMPDIR + File.separator + suffix); @AT@ 1348 @LENGTH@ 50
---UPD VariableDeclarationFragment@@file=new File(TMPDIR + separator + suffix) @TO@ file=new File(TMPDIR + File.separator + suffix) @AT@ 1353 @LENGTH@ 44
------UPD ClassInstanceCreation@@File[TMPDIR + separator + suffix] @TO@ File[TMPDIR + File.separator + suffix] @AT@ 1360 @LENGTH@ 37
---------UPD InfixExpression@@TMPDIR + separator + suffix @TO@ TMPDIR + File.separator + suffix @AT@ 1369 @LENGTH@ 27
------------INS QualifiedName@@File.separator @TO@ InfixExpression@@TMPDIR + separator + suffix @AT@ 1259 @LENGTH@ 14
---------------INS SimpleName@@File @TO@ QualifiedName@@File.separator @AT@ 1259 @LENGTH@ 4
---------------INS SimpleName@@separator @TO@ QualifiedName@@File.separator @AT@ 1264 @LENGTH@ 9
------------DEL SimpleName@@separator @AT@ 1378 @LENGTH@ 9


INS MethodDeclaration@@public, void, MethodName:cleanupHandler,  @TO@ TypeDeclaration@@[@ContextConfiguration(classes={TransactionIntegrationTests.MoviesContext.class}), @RunWith(SpringJUnit4ClassRunner.class), public]TransactionIntegrationTests, MultiDriverTestClass @AT@ 2536 @LENGTH@ 105
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:cleanupHandler,  @AT@ 2536 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:cleanupHandler,  @AT@ 2543 @LENGTH@ 4
---INS SimpleName@@MethodName:cleanupHandler @TO@ MethodDeclaration@@public, void, MethodName:cleanupHandler,  @AT@ 2548 @LENGTH@ 14
---INS ExpressionStatement@@MethodInvocation:getGraphDatabaseService().unregisterTransactionEventHandler(handler) @TO@ MethodDeclaration@@public, void, MethodName:cleanupHandler,  @AT@ 2569 @LENGTH@ 69
------INS MethodInvocation@@getGraphDatabaseService().unregisterTransactionEventHandler(handler) @TO@ ExpressionStatement@@MethodInvocation:getGraphDatabaseService().unregisterTransactionEventHandler(handler) @AT@ 2569 @LENGTH@ 68
---------INS MethodInvocation@@MethodName:getGraphDatabaseService:[] @TO@ MethodInvocation@@getGraphDatabaseService().unregisterTransactionEventHandler(handler) @AT@ 2569 @LENGTH@ 25
---------INS SimpleName@@MethodName:unregisterTransactionEventHandler:[handler] @TO@ MethodInvocation@@getGraphDatabaseService().unregisterTransactionEventHandler(handler) @AT@ 2595 @LENGTH@ 42
------------INS SimpleName@@handler @TO@ SimpleName@@MethodName:unregisterTransactionEventHandler:[handler] @AT@ 2629 @LENGTH@ 7


UPD AssertStatement@@PrefixExpression:!credentialReferenceValue.isDefined(), Msg-SimpleName:credentialReferenceValue @TO@ MethodInvocation:credentialReferenceValue.isDefined(), Msg-SimpleName:credentialReferenceValue @AT@ 6393 @LENGTH@ 72
---DEL PrefixExpression@@!credentialReferenceValue.isDefined() @AT@ 6400 @LENGTH@ 37
------DEL Operator@@! @AT@ 6400 @LENGTH@ 1
------DEL MethodInvocation@@credentialReferenceValue.isDefined() @AT@ 6401 @LENGTH@ 36
---INS MethodInvocation@@credentialReferenceValue.isDefined() @TO@ AssertStatement@@PrefixExpression:!credentialReferenceValue.isDefined(), Msg-SimpleName:credentialReferenceValue @AT@ 6400 @LENGTH@ 36
------MOV SimpleName@@Name:credentialReferenceValue @TO@ MethodInvocation@@credentialReferenceValue.isDefined() @AT@ 6401 @LENGTH@ 24
------MOV SimpleName@@MethodName:isDefined:[] @TO@ MethodInvocation@@credentialReferenceValue.isDefined() @AT@ 6426 @LENGTH@ 11


UPD ExpressionStatement@@Assignment:arenaSize=arenaSizeVal @TO@ Assignment:arenaSize=(int)arenaSizeVal @AT@ 7461 @LENGTH@ 25
---UPD Assignment@@arenaSize=arenaSizeVal @TO@ arenaSize=(int)arenaSizeVal @AT@ 7461 @LENGTH@ 24
------DEL SimpleName@@arenaSizeVal @AT@ 7473 @LENGTH@ 12
------INS CastExpression@@(int)arenaSizeVal @TO@ Assignment@@arenaSize=arenaSizeVal @AT@ 7558 @LENGTH@ 17
---------INS PrimitiveType@@int @TO@ CastExpression@@(int)arenaSizeVal @AT@ 7559 @LENGTH@ 3
---------INS SimpleName@@arenaSizeVal @TO@ CastExpression@@(int)arenaSizeVal @AT@ 7563 @LENGTH@ 12


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled(); @AT@ 5294 @LENGTH@ 160
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5302 @LENGTH@ 151
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5302 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5319 @LENGTH@ 134
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 5319 @LENGTH@ 64
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5319 @LENGTH@ 35
---------UPD MethodInvocation@@componentConfiguration.getConfigurer().isEnabled() @TO@ componentConfiguration.getCustomizer().isEnabled() @AT@ 5403 @LENGTH@ 50
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5403 @LENGTH@ 38


UPD VariableDeclarationStatement@@String linkBuilderLine=String.format("%s(linkBuilder.of(%s.class));",getMutatorMethod(methodLinkBuilderFactoryField).getMethodName(),getNameOfJavaType(this.itemController)); @TO@ String linkBuilderLine=String.format("%s(linkBuilder.of(%s.class));",getMutatorMethod(this.methodLinkBuilderFactoryField).getMethodName(),getNameOfJavaType(this.itemController)); @AT@ 19595 @LENGTH@ 221
---UPD VariableDeclarationFragment@@linkBuilderLine=String.format("%s(linkBuilder.of(%s.class));",getMutatorMethod(methodLinkBuilderFactoryField).getMethodName(),getNameOfJavaType(this.itemController)) @TO@ linkBuilderLine=String.format("%s(linkBuilder.of(%s.class));",getMutatorMethod(this.methodLinkBuilderFactoryField).getMethodName(),getNameOfJavaType(this.itemController)) @AT@ 19602 @LENGTH@ 213
------UPD MethodInvocation@@String.format("%s(linkBuilder.of(%s.class));",getMutatorMethod(methodLinkBuilderFactoryField).getMethodName(),getNameOfJavaType(this.itemController)) @TO@ String.format("%s(linkBuilder.of(%s.class));",getMutatorMethod(this.methodLinkBuilderFactoryField).getMethodName(),getNameOfJavaType(this.itemController)) @AT@ 19632 @LENGTH@ 183
---------UPD SimpleName@@MethodName:format:["%s(linkBuilder.of(%s.class));", getMutatorMethod(methodLinkBuilderFactoryField).getMethodName(), getNameOfJavaType(this.itemController)] @TO@ MethodName:format:["%s(linkBuilder.of(%s.class));", getMutatorMethod(this.methodLinkBuilderFactoryField).getMethodName(), getNameOfJavaType(this.itemController)] @AT@ 19639 @LENGTH@ 176
------------UPD MethodInvocation@@getMutatorMethod(methodLinkBuilderFactoryField).getMethodName() @TO@ getMutatorMethod(this.methodLinkBuilderFactoryField).getMethodName() @AT@ 19695 @LENGTH@ 63
---------------UPD MethodInvocation@@MethodName:getMutatorMethod:[methodLinkBuilderFactoryField] @TO@ MethodName:getMutatorMethod:[this.methodLinkBuilderFactoryField] @AT@ 19695 @LENGTH@ 47
------------------DEL SimpleName@@methodLinkBuilderFactoryField @AT@ 19712 @LENGTH@ 29
------------------INS FieldAccess@@this.methodLinkBuilderFactoryField @TO@ MethodInvocation@@MethodName:getMutatorMethod:[methodLinkBuilderFactoryField] @AT@ 19776 @LENGTH@ 34
---------------------INS ThisExpression@@this @TO@ FieldAccess@@this.methodLinkBuilderFactoryField @AT@ 19776 @LENGTH@ 4
---------------------INS SimpleName@@methodLinkBuilderFactoryField @TO@ FieldAccess@@this.methodLinkBuilderFactoryField @AT@ 19781 @LENGTH@ 29


INS MethodDeclaration@@public, Method, MethodName:getMethodFor, Object payload,  @TO@ TypeDeclaration@@[public]DelegatingInvocableHandler,  @AT@ 8452 @LENGTH@ 209
---INS Modifier@@public @TO@ MethodDeclaration@@public, Method, MethodName:getMethodFor, Object payload,  @AT@ 8452 @LENGTH@ 6
---INS SimpleType@@Method @TO@ MethodDeclaration@@public, Method, MethodName:getMethodFor, Object payload,  @AT@ 8459 @LENGTH@ 6
---INS SimpleName@@MethodName:getMethodFor @TO@ MethodDeclaration@@public, Method, MethodName:getMethodFor, Object payload,  @AT@ 8466 @LENGTH@ 12
---INS SingleVariableDeclaration@@Object payload @TO@ MethodDeclaration@@public, Method, MethodName:getMethodFor, Object payload,  @AT@ 8479 @LENGTH@ 14
------INS SimpleType@@Object @TO@ SingleVariableDeclaration@@Object payload @AT@ 8479 @LENGTH@ 6
------INS SimpleName@@payload @TO@ SingleVariableDeclaration@@Object payload @AT@ 8486 @LENGTH@ 7
---INS VariableDeclarationStatement@@InvocableHandlerMethod handlerForPayload=getHandlerForPayload(payload.getClass()); @TO@ MethodDeclaration@@public, Method, MethodName:getMethodFor, Object payload,  @AT@ 8499 @LENGTH@ 84
------INS SimpleType@@InvocableHandlerMethod @TO@ VariableDeclarationStatement@@InvocableHandlerMethod handlerForPayload=getHandlerForPayload(payload.getClass()); @AT@ 8499 @LENGTH@ 22
------INS VariableDeclarationFragment@@handlerForPayload=getHandlerForPayload(payload.getClass()) @TO@ VariableDeclarationStatement@@InvocableHandlerMethod handlerForPayload=getHandlerForPayload(payload.getClass()); @AT@ 8522 @LENGTH@ 60
---------INS SimpleName@@handlerForPayload @TO@ VariableDeclarationFragment@@handlerForPayload=getHandlerForPayload(payload.getClass()) @AT@ 8522 @LENGTH@ 17
---------INS MethodInvocation@@getHandlerForPayload(payload.getClass()) @TO@ VariableDeclarationFragment@@handlerForPayload=getHandlerForPayload(payload.getClass()) @AT@ 8542 @LENGTH@ 40
------------INS SimpleName@@MethodName:getHandlerForPayload:[payload.getClass()] @TO@ MethodInvocation@@getHandlerForPayload(payload.getClass()) @AT@ 8542 @LENGTH@ 40
---------------INS MethodInvocation@@payload.getClass() @TO@ SimpleName@@MethodName:getHandlerForPayload:[payload.getClass()] @AT@ 8563 @LENGTH@ 18
------------------INS SimpleName@@Name:payload @TO@ MethodInvocation@@payload.getClass() @AT@ 8563 @LENGTH@ 7
------------------INS SimpleName@@MethodName:getClass:[] @TO@ MethodInvocation@@payload.getClass() @AT@ 8571 @LENGTH@ 10
---INS ReturnStatement@@ConditionalExpression:handlerForPayload == null ? null : handlerForPayload.getMethod() @TO@ MethodDeclaration@@public, Method, MethodName:getMethodFor, Object payload,  @AT@ 8586 @LENGTH@ 72
------INS ConditionalExpression@@handlerForPayload == null ? null : handlerForPayload.getMethod() @TO@ ReturnStatement@@ConditionalExpression:handlerForPayload == null ? null : handlerForPayload.getMethod() @AT@ 8593 @LENGTH@ 64
---------INS InfixExpression@@handlerForPayload == null @TO@ ConditionalExpression@@handlerForPayload == null ? null : handlerForPayload.getMethod() @AT@ 8593 @LENGTH@ 25
------------INS SimpleName@@handlerForPayload @TO@ InfixExpression@@handlerForPayload == null @AT@ 8593 @LENGTH@ 17
------------INS Operator@@== @TO@ InfixExpression@@handlerForPayload == null @AT@ 8610 @LENGTH@ 2
------------INS NullLiteral@@null @TO@ InfixExpression@@handlerForPayload == null @AT@ 8614 @LENGTH@ 4
---------INS NullLiteral@@null @TO@ ConditionalExpression@@handlerForPayload == null ? null : handlerForPayload.getMethod() @AT@ 8621 @LENGTH@ 4
---------INS MethodInvocation@@handlerForPayload.getMethod() @TO@ ConditionalExpression@@handlerForPayload == null ? null : handlerForPayload.getMethod() @AT@ 8628 @LENGTH@ 29
------------INS SimpleName@@Name:handlerForPayload @TO@ MethodInvocation@@handlerForPayload.getMethod() @AT@ 8628 @LENGTH@ 17
------------INS SimpleName@@MethodName:getMethod:[] @TO@ MethodInvocation@@handlerForPayload.getMethod() @AT@ 8646 @LENGTH@ 11


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<HBaseComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<HBaseComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5412 @LENGTH@ 338
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 5416 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5416 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  ComponentCustomizer<HBaseComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ ThenBody:{  for (  ComponentCustomizer<HBaseComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5472 @LENGTH@ 278
------UPD EnhancedForStatement@@for (ComponentCustomizer<HBaseComponent> configurer : customizers) {  LOGGER.debug("Configure component {}, with configurer {}",component,configurer);  configurer.customize(component);} @TO@ for (ComponentCustomizer<HBaseComponent> customizer : customizers) {  LOGGER.debug("Configure component {}, with customizer {}",component,customizer);  customizer.customize(component);} @AT@ 5486 @LENGTH@ 254
---------UPD SingleVariableDeclaration@@ComponentCustomizer<HBaseComponent> configurer @TO@ ComponentCustomizer<HBaseComponent> customizer @AT@ 5491 @LENGTH@ 46
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5527 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5571 @LENGTH@ 106
------------UPD MethodInvocation@@LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5571 @LENGTH@ 105
---------------UPD SimpleName@@MethodName:debug:["Configure component {}, with configurer {}", component, configurer] @TO@ MethodName:debug:["Configure component {}, with customizer {}", component, customizer] @AT@ 5578 @LENGTH@ 98
------------------UPD StringLiteral@@"Configure component {}, with configurer {}" @TO@ "Configure component {}, with customizer {}" @AT@ 5584 @LENGTH@ 44
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5665 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(component) @TO@ MethodInvocation:customizer.customize(component) @AT@ 5694 @LENGTH@ 32
------------UPD MethodInvocation@@configurer.customize(component) @TO@ customizer.customize(component) @AT@ 5694 @LENGTH@ 31
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5694 @LENGTH@ 10


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<KinesisFirehoseComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<KinesisFirehoseComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5618 @LENGTH@ 348
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 5622 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5622 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  ComponentCustomizer<KinesisFirehoseComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ ThenBody:{  for (  ComponentCustomizer<KinesisFirehoseComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5678 @LENGTH@ 288
------UPD EnhancedForStatement@@for (ComponentCustomizer<KinesisFirehoseComponent> configurer : customizers) {  LOGGER.debug("Configure component {}, with configurer {}",component,configurer);  configurer.customize(component);} @TO@ for (ComponentCustomizer<KinesisFirehoseComponent> customizer : customizers) {  LOGGER.debug("Configure component {}, with customizer {}",component,customizer);  customizer.customize(component);} @AT@ 5692 @LENGTH@ 264
---------UPD SingleVariableDeclaration@@ComponentCustomizer<KinesisFirehoseComponent> configurer @TO@ ComponentCustomizer<KinesisFirehoseComponent> customizer @AT@ 5697 @LENGTH@ 56
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5743 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5787 @LENGTH@ 106
------------UPD MethodInvocation@@LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5787 @LENGTH@ 105
---------------UPD SimpleName@@MethodName:debug:["Configure component {}, with configurer {}", component, configurer] @TO@ MethodName:debug:["Configure component {}, with customizer {}", component, customizer] @AT@ 5794 @LENGTH@ 98
------------------UPD StringLiteral@@"Configure component {}, with configurer {}" @TO@ "Configure component {}, with customizer {}" @AT@ 5800 @LENGTH@ 44
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5881 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(component) @TO@ MethodInvocation:customizer.customize(component) @AT@ 5910 @LENGTH@ 32
------------UPD MethodInvocation@@configurer.customize(component) @TO@ customizer.customize(component) @AT@ 5910 @LENGTH@ 31
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5910 @LENGTH@ 10


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  DataFormatCustomizer<LZFDataFormat> configurer : customizers) {    LOGGER.debug("Configure dataformat {}, with configurer {}",dataformat,configurer);    configurer.customize(dataformat);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  DataFormatCustomizer<LZFDataFormat> customizer : customizers) {    LOGGER.debug("Configure dataformat {}, with customizer {}",dataformat,customizer);    customizer.customize(dataformat);  }} @AT@ 5269 @LENGTH@ 422
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 5273 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5273 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  DataFormatCustomizer<LZFDataFormat> configurer : customizers) {    LOGGER.debug("Configure dataformat {}, with configurer {}",dataformat,configurer);    configurer.customize(dataformat);  }} @TO@ ThenBody:{  for (  DataFormatCustomizer<LZFDataFormat> customizer : customizers) {    LOGGER.debug("Configure dataformat {}, with customizer {}",dataformat,customizer);    customizer.customize(dataformat);  }} @AT@ 5329 @LENGTH@ 362
------UPD EnhancedForStatement@@for (DataFormatCustomizer<LZFDataFormat> configurer : customizers) {  LOGGER.debug("Configure dataformat {}, with configurer {}",dataformat,configurer);  configurer.customize(dataformat);} @TO@ for (DataFormatCustomizer<LZFDataFormat> customizer : customizers) {  LOGGER.debug("Configure dataformat {}, with customizer {}",dataformat,customizer);  customizer.customize(dataformat);} @AT@ 5351 @LENGTH@ 322
---------UPD SingleVariableDeclaration@@DataFormatCustomizer<LZFDataFormat> configurer @TO@ DataFormatCustomizer<LZFDataFormat> customizer @AT@ 5356 @LENGTH@ 46
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5392 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure dataformat {}, with configurer {}",dataformat,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure dataformat {}, with customizer {}",dataformat,customizer) @AT@ 5444 @LENGTH@ 149
------------UPD MethodInvocation@@LOGGER.debug("Configure dataformat {}, with configurer {}",dataformat,configurer) @TO@ LOGGER.debug("Configure dataformat {}, with customizer {}",dataformat,customizer) @AT@ 5444 @LENGTH@ 148
---------------UPD SimpleName@@MethodName:debug:["Configure dataformat {}, with configurer {}", dataformat, configurer] @TO@ MethodName:debug:["Configure dataformat {}, with customizer {}", dataformat, customizer] @AT@ 5451 @LENGTH@ 141
------------------UPD StringLiteral@@"Configure dataformat {}, with configurer {}" @TO@ "Configure dataformat {}, with customizer {}" @AT@ 5490 @LENGTH@ 45
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5581 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(dataformat) @TO@ MethodInvocation:customizer.customize(dataformat) @AT@ 5618 @LENGTH@ 33
------------UPD MethodInvocation@@configurer.customize(dataformat) @TO@ customizer.customize(dataformat) @AT@ 5618 @LENGTH@ 32
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5618 @LENGTH@ 10


UPD FieldDeclaration@@private, static, long, [serialVersionUID=1L] @TO@ private, static, final, long, [serialVersionUID=1L] @AT@ 1226 @LENGTH@ 42
---INS Modifier@@final @TO@ FieldDeclaration@@private, static, long, [serialVersionUID=1L] @AT@ 1241 @LENGTH@ 5


UPD EnhancedForStatement@@for (ServiceCallServer server : servers) {  assertFalse(server.getMetadata().isEmpty());  assertNotNull(server.getMetadata().get("dns.priority"));  assertNotNull(server.getMetadata().get("dns.weight"));} @TO@ for (ServiceCallServer server : servers) {  assertFalse(server.getMetadata().isEmpty());  assertNotNull(server.getMetadata().get("priority"));  assertNotNull(server.getMetadata().get("weight"));} @AT@ 1656 @LENGTH@ 245
---UPD ExpressionStatement@@MethodInvocation:assertNotNull(server.getMetadata().get("dns.priority")) @TO@ MethodInvocation:assertNotNull(server.getMetadata().get("priority")) @AT@ 1768 @LENGTH@ 56
------UPD MethodInvocation@@assertNotNull(server.getMetadata().get("dns.priority")) @TO@ assertNotNull(server.getMetadata().get("priority")) @AT@ 1768 @LENGTH@ 55
---------UPD SimpleName@@MethodName:assertNotNull:[server.getMetadata().get("dns.priority")] @TO@ MethodName:assertNotNull:[server.getMetadata().get("priority")] @AT@ 1768 @LENGTH@ 55
------------UPD MethodInvocation@@server.getMetadata().get("dns.priority") @TO@ server.getMetadata().get("priority") @AT@ 1782 @LENGTH@ 40
---------------UPD SimpleName@@MethodName:get:["dns.priority"] @TO@ MethodName:get:["priority"] @AT@ 1803 @LENGTH@ 19
------------------UPD StringLiteral@@"dns.priority" @TO@ "priority" @AT@ 1807 @LENGTH@ 14
---UPD ExpressionStatement@@MethodInvocation:assertNotNull(server.getMetadata().get("dns.weight")) @TO@ MethodInvocation:assertNotNull(server.getMetadata().get("weight")) @AT@ 1837 @LENGTH@ 54
------UPD MethodInvocation@@assertNotNull(server.getMetadata().get("dns.weight")) @TO@ assertNotNull(server.getMetadata().get("weight")) @AT@ 1837 @LENGTH@ 53
---------UPD SimpleName@@MethodName:assertNotNull:[server.getMetadata().get("dns.weight")] @TO@ MethodName:assertNotNull:[server.getMetadata().get("weight")] @AT@ 1837 @LENGTH@ 53
------------UPD MethodInvocation@@server.getMetadata().get("dns.weight") @TO@ server.getMetadata().get("weight") @AT@ 1851 @LENGTH@ 38
---------------UPD SimpleName@@MethodName:get:["dns.weight"] @TO@ MethodName:get:["weight"] @AT@ 1872 @LENGTH@ 17
------------------UPD StringLiteral@@"dns.weight" @TO@ "weight" @AT@ 1876 @LENGTH@ 12


UPD ExpressionStatement@@MethodInvocation:when(collectionMock.find(any(org.bson.Document.class))).thenReturn(fi) @TO@ MethodInvocation:when(collectionMock.find(any(Bson.class))).thenReturn(fi) @AT@ 1967 @LENGTH@ 71
---UPD MethodInvocation@@when(collectionMock.find(any(org.bson.Document.class))).thenReturn(fi) @TO@ when(collectionMock.find(any(Bson.class))).thenReturn(fi) @AT@ 1967 @LENGTH@ 70
------UPD MethodInvocation@@MethodName:when:[collectionMock.find(any(org.bson.Document.class))] @TO@ MethodName:when:[collectionMock.find(any(Bson.class))] @AT@ 1967 @LENGTH@ 55
---------UPD MethodInvocation@@collectionMock.find(any(org.bson.Document.class)) @TO@ collectionMock.find(any(Bson.class)) @AT@ 1972 @LENGTH@ 49
------------UPD SimpleName@@MethodName:find:[any(org.bson.Document.class)] @TO@ MethodName:find:[any(Bson.class)] @AT@ 1987 @LENGTH@ 34
---------------UPD MethodInvocation@@any(org.bson.Document.class) @TO@ any(Bson.class) @AT@ 1992 @LENGTH@ 28
------------------UPD SimpleName@@MethodName:any:[org.bson.Document.class] @TO@ MethodName:any:[Bson.class] @AT@ 1992 @LENGTH@ 28
---------------------UPD TypeLiteral@@org.bson.Document.class @TO@ Bson.class @AT@ 1996 @LENGTH@ 23


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<FlatpackComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<FlatpackComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5463 @LENGTH@ 341
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 5467 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5467 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  ComponentCustomizer<FlatpackComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ ThenBody:{  for (  ComponentCustomizer<FlatpackComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5523 @LENGTH@ 281
------UPD EnhancedForStatement@@for (ComponentCustomizer<FlatpackComponent> configurer : customizers) {  LOGGER.debug("Configure component {}, with configurer {}",component,configurer);  configurer.customize(component);} @TO@ for (ComponentCustomizer<FlatpackComponent> customizer : customizers) {  LOGGER.debug("Configure component {}, with customizer {}",component,customizer);  customizer.customize(component);} @AT@ 5537 @LENGTH@ 257
---------UPD SingleVariableDeclaration@@ComponentCustomizer<FlatpackComponent> configurer @TO@ ComponentCustomizer<FlatpackComponent> customizer @AT@ 5542 @LENGTH@ 49
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5581 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5625 @LENGTH@ 106
------------UPD MethodInvocation@@LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5625 @LENGTH@ 105
---------------UPD SimpleName@@MethodName:debug:["Configure component {}, with configurer {}", component, configurer] @TO@ MethodName:debug:["Configure component {}, with customizer {}", component, customizer] @AT@ 5632 @LENGTH@ 98
------------------UPD StringLiteral@@"Configure component {}, with configurer {}" @TO@ "Configure component {}, with customizer {}" @AT@ 5638 @LENGTH@ 44
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5719 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(component) @TO@ MethodInvocation:customizer.customize(component) @AT@ 5748 @LENGTH@ 32
------------UPD MethodInvocation@@configurer.customize(component) @TO@ customizer.customize(component) @AT@ 5748 @LENGTH@ 31
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5748 @LENGTH@ 10


INS TryStatement@@try {  this.template.setReceiveTimeout(1);} catch (ConsumeOkNotReceivedException e) {} @TO@ MethodDeclaration@@public, void, MethodName:testReceiveBlockingNoTimeout, Exception,  @AT@ 11606 @LENGTH@ 211
---MOV ExpressionStatement@@MethodInvocation:this.template.setReceiveTimeout(1) @TO@ TryStatement@@try {  this.template.setReceiveTimeout(1);} catch (ConsumeOkNotReceivedException e) {} @AT@ 11606 @LENGTH@ 35
---INS CatchClause@@catch (ConsumeOkNotReceivedException e) {} @TO@ TryStatement@@try {  this.template.setReceiveTimeout(1);} catch (ConsumeOkNotReceivedException e) {} @AT@ 11699 @LENGTH@ 118
------INS SingleVariableDeclaration@@ConsumeOkNotReceivedException e @TO@ CatchClause@@catch (ConsumeOkNotReceivedException e) {} @AT@ 11706 @LENGTH@ 31
---------INS SimpleType@@ConsumeOkNotReceivedException @TO@ SingleVariableDeclaration@@ConsumeOkNotReceivedException e @AT@ 11706 @LENGTH@ 29
---------INS SimpleName@@e @TO@ SingleVariableDeclaration@@ConsumeOkNotReceivedException e @AT@ 11736 @LENGTH@ 1


INS MethodDeclaration@@public, abstract, Table, MethodName:getTableObj, Exception,  @TO@ TypeDeclaration@@[public, abstract]DropPartitionMessage, EventMessage @AT@ 1149 @LENGTH@ 53
---INS Modifier@@public @TO@ MethodDeclaration@@public, abstract, Table, MethodName:getTableObj, Exception,  @AT@ 1149 @LENGTH@ 6
---INS Modifier@@abstract @TO@ MethodDeclaration@@public, abstract, Table, MethodName:getTableObj, Exception,  @AT@ 1156 @LENGTH@ 8
---INS SimpleType@@Table @TO@ MethodDeclaration@@public, abstract, Table, MethodName:getTableObj, Exception,  @AT@ 1165 @LENGTH@ 5
---INS SimpleName@@MethodName:getTableObj @TO@ MethodDeclaration@@public, abstract, Table, MethodName:getTableObj, Exception,  @AT@ 1171 @LENGTH@ 11
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, abstract, Table, MethodName:getTableObj, Exception,  @AT@ 1192 @LENGTH@ 9


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<ScpComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<ScpComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5378 @LENGTH@ 336
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 5382 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5382 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  ComponentCustomizer<ScpComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ ThenBody:{  for (  ComponentCustomizer<ScpComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5438 @LENGTH@ 276
------UPD EnhancedForStatement@@for (ComponentCustomizer<ScpComponent> configurer : customizers) {  LOGGER.debug("Configure component {}, with configurer {}",component,configurer);  configurer.customize(component);} @TO@ for (ComponentCustomizer<ScpComponent> customizer : customizers) {  LOGGER.debug("Configure component {}, with customizer {}",component,customizer);  customizer.customize(component);} @AT@ 5452 @LENGTH@ 252
---------UPD SingleVariableDeclaration@@ComponentCustomizer<ScpComponent> configurer @TO@ ComponentCustomizer<ScpComponent> customizer @AT@ 5457 @LENGTH@ 44
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5491 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5535 @LENGTH@ 106
------------UPD MethodInvocation@@LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5535 @LENGTH@ 105
---------------UPD SimpleName@@MethodName:debug:["Configure component {}, with configurer {}", component, configurer] @TO@ MethodName:debug:["Configure component {}, with customizer {}", component, customizer] @AT@ 5542 @LENGTH@ 98
------------------UPD StringLiteral@@"Configure component {}, with configurer {}" @TO@ "Configure component {}, with customizer {}" @AT@ 5548 @LENGTH@ 44
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5629 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(component) @TO@ MethodInvocation:customizer.customize(component) @AT@ 5658 @LENGTH@ 32
------------UPD MethodInvocation@@configurer.customize(component) @TO@ customizer.customize(component) @AT@ 5658 @LENGTH@ 31
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5658 @LENGTH@ 10


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<StubComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<StubComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5395 @LENGTH@ 337
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 5399 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5399 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  ComponentCustomizer<StubComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ ThenBody:{  for (  ComponentCustomizer<StubComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5455 @LENGTH@ 277
------UPD EnhancedForStatement@@for (ComponentCustomizer<StubComponent> configurer : customizers) {  LOGGER.debug("Configure component {}, with configurer {}",component,configurer);  configurer.customize(component);} @TO@ for (ComponentCustomizer<StubComponent> customizer : customizers) {  LOGGER.debug("Configure component {}, with customizer {}",component,customizer);  customizer.customize(component);} @AT@ 5469 @LENGTH@ 253
---------UPD SingleVariableDeclaration@@ComponentCustomizer<StubComponent> configurer @TO@ ComponentCustomizer<StubComponent> customizer @AT@ 5474 @LENGTH@ 45
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5509 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5553 @LENGTH@ 106
------------UPD MethodInvocation@@LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5553 @LENGTH@ 105
---------------UPD SimpleName@@MethodName:debug:["Configure component {}, with configurer {}", component, configurer] @TO@ MethodName:debug:["Configure component {}, with customizer {}", component, customizer] @AT@ 5560 @LENGTH@ 98
------------------UPD StringLiteral@@"Configure component {}, with configurer {}" @TO@ "Configure component {}, with customizer {}" @AT@ 5566 @LENGTH@ 44
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5647 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(component) @TO@ MethodInvocation:customizer.customize(component) @AT@ 5676 @LENGTH@ 32
------------UPD MethodInvocation@@configurer.customize(component) @TO@ customizer.customize(component) @AT@ 5676 @LENGTH@ 31
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5676 @LENGTH@ 10


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled(); @AT@ 5243 @LENGTH@ 160
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5251 @LENGTH@ 151
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5251 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5268 @LENGTH@ 134
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 5268 @LENGTH@ 64
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5268 @LENGTH@ 35
---------UPD MethodInvocation@@componentConfiguration.getConfigurer().isEnabled() @TO@ componentConfiguration.getCustomizer().isEnabled() @AT@ 5352 @LENGTH@ 50
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5352 @LENGTH@ 38


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  DataFormatCustomizer<JaxbDataFormat> configurer : customizers) {    LOGGER.debug("Configure dataformat {}, with configurer {}",dataformat,configurer);    configurer.customize(dataformat);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  DataFormatCustomizer<JaxbDataFormat> customizer : customizers) {    LOGGER.debug("Configure dataformat {}, with customizer {}",dataformat,customizer);    customizer.customize(dataformat);  }} @AT@ 5284 @LENGTH@ 423
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 5288 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5288 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  DataFormatCustomizer<JaxbDataFormat> configurer : customizers) {    LOGGER.debug("Configure dataformat {}, with configurer {}",dataformat,configurer);    configurer.customize(dataformat);  }} @TO@ ThenBody:{  for (  DataFormatCustomizer<JaxbDataFormat> customizer : customizers) {    LOGGER.debug("Configure dataformat {}, with customizer {}",dataformat,customizer);    customizer.customize(dataformat);  }} @AT@ 5344 @LENGTH@ 363
------UPD EnhancedForStatement@@for (DataFormatCustomizer<JaxbDataFormat> configurer : customizers) {  LOGGER.debug("Configure dataformat {}, with configurer {}",dataformat,configurer);  configurer.customize(dataformat);} @TO@ for (DataFormatCustomizer<JaxbDataFormat> customizer : customizers) {  LOGGER.debug("Configure dataformat {}, with customizer {}",dataformat,customizer);  customizer.customize(dataformat);} @AT@ 5366 @LENGTH@ 323
---------UPD SingleVariableDeclaration@@DataFormatCustomizer<JaxbDataFormat> configurer @TO@ DataFormatCustomizer<JaxbDataFormat> customizer @AT@ 5371 @LENGTH@ 47
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5408 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure dataformat {}, with configurer {}",dataformat,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure dataformat {}, with customizer {}",dataformat,customizer) @AT@ 5460 @LENGTH@ 149
------------UPD MethodInvocation@@LOGGER.debug("Configure dataformat {}, with configurer {}",dataformat,configurer) @TO@ LOGGER.debug("Configure dataformat {}, with customizer {}",dataformat,customizer) @AT@ 5460 @LENGTH@ 148
---------------UPD SimpleName@@MethodName:debug:["Configure dataformat {}, with configurer {}", dataformat, configurer] @TO@ MethodName:debug:["Configure dataformat {}, with customizer {}", dataformat, customizer] @AT@ 5467 @LENGTH@ 141
------------------UPD StringLiteral@@"Configure dataformat {}, with configurer {}" @TO@ "Configure dataformat {}, with customizer {}" @AT@ 5506 @LENGTH@ 45
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5597 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(dataformat) @TO@ MethodInvocation:customizer.customize(dataformat) @AT@ 5634 @LENGTH@ 33
------------UPD MethodInvocation@@configurer.customize(dataformat) @TO@ customizer.customize(dataformat) @AT@ 5634 @LENGTH@ 32
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5634 @LENGTH@ 10


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<ExecComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<ExecComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5395 @LENGTH@ 337
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 5399 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5399 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  ComponentCustomizer<ExecComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ ThenBody:{  for (  ComponentCustomizer<ExecComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5455 @LENGTH@ 277
------UPD EnhancedForStatement@@for (ComponentCustomizer<ExecComponent> configurer : customizers) {  LOGGER.debug("Configure component {}, with configurer {}",component,configurer);  configurer.customize(component);} @TO@ for (ComponentCustomizer<ExecComponent> customizer : customizers) {  LOGGER.debug("Configure component {}, with customizer {}",component,customizer);  customizer.customize(component);} @AT@ 5469 @LENGTH@ 253
---------UPD SingleVariableDeclaration@@ComponentCustomizer<ExecComponent> configurer @TO@ ComponentCustomizer<ExecComponent> customizer @AT@ 5474 @LENGTH@ 45
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5509 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5553 @LENGTH@ 106
------------UPD MethodInvocation@@LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5553 @LENGTH@ 105
---------------UPD SimpleName@@MethodName:debug:["Configure component {}, with configurer {}", component, configurer] @TO@ MethodName:debug:["Configure component {}, with customizer {}", component, customizer] @AT@ 5560 @LENGTH@ 98
------------------UPD StringLiteral@@"Configure component {}, with configurer {}" @TO@ "Configure component {}, with customizer {}" @AT@ 5566 @LENGTH@ 44
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5647 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(component) @TO@ MethodInvocation:customizer.customize(component) @AT@ 5676 @LENGTH@ 32
------------UPD MethodInvocation@@configurer.customize(component) @TO@ customizer.customize(component) @AT@ 5676 @LENGTH@ 31
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5676 @LENGTH@ 10


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && dataformatConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && dataformatConfiguration.getCustomizer().isEnabled(); @AT@ 5155 @LENGTH@ 177
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && dataformatConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && dataformatConfiguration.getCustomizer().isEnabled() @AT@ 5163 @LENGTH@ 168
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5163 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && dataformatConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && dataformatConfiguration.getCustomizer().isEnabled() @AT@ 5180 @LENGTH@ 151
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 5180 @LENGTH@ 72
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5180 @LENGTH@ 35
---------UPD MethodInvocation@@dataformatConfiguration.getConfigurer().isEnabled() @TO@ dataformatConfiguration.getCustomizer().isEnabled() @AT@ 5280 @LENGTH@ 51
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5280 @LENGTH@ 39


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled(); @AT@ 5411 @LENGTH@ 160
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5419 @LENGTH@ 151
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5419 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5436 @LENGTH@ 134
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 5436 @LENGTH@ 64
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5436 @LENGTH@ 35
---------UPD MethodInvocation@@componentConfiguration.getConfigurer().isEnabled() @TO@ componentConfiguration.getCustomizer().isEnabled() @AT@ 5520 @LENGTH@ 50
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5520 @LENGTH@ 38


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled(); @AT@ 5311 @LENGTH@ 160
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5319 @LENGTH@ 151
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5319 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5336 @LENGTH@ 134
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 5336 @LENGTH@ 64
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5336 @LENGTH@ 35
---------UPD MethodInvocation@@componentConfiguration.getConfigurer().isEnabled() @TO@ componentConfiguration.getCustomizer().isEnabled() @AT@ 5420 @LENGTH@ 50
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5420 @LENGTH@ 38


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  DataFormatCustomizer<ICalDataFormat> configurer : customizers) {    LOGGER.debug("Configure dataformat {}, with configurer {}",dataformat,configurer);    configurer.customize(dataformat);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  DataFormatCustomizer<ICalDataFormat> customizer : customizers) {    LOGGER.debug("Configure dataformat {}, with customizer {}",dataformat,customizer);    customizer.customize(dataformat);  }} @AT@ 5284 @LENGTH@ 423
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 5288 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5288 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  DataFormatCustomizer<ICalDataFormat> configurer : customizers) {    LOGGER.debug("Configure dataformat {}, with configurer {}",dataformat,configurer);    configurer.customize(dataformat);  }} @TO@ ThenBody:{  for (  DataFormatCustomizer<ICalDataFormat> customizer : customizers) {    LOGGER.debug("Configure dataformat {}, with customizer {}",dataformat,customizer);    customizer.customize(dataformat);  }} @AT@ 5344 @LENGTH@ 363
------UPD EnhancedForStatement@@for (DataFormatCustomizer<ICalDataFormat> configurer : customizers) {  LOGGER.debug("Configure dataformat {}, with configurer {}",dataformat,configurer);  configurer.customize(dataformat);} @TO@ for (DataFormatCustomizer<ICalDataFormat> customizer : customizers) {  LOGGER.debug("Configure dataformat {}, with customizer {}",dataformat,customizer);  customizer.customize(dataformat);} @AT@ 5366 @LENGTH@ 323
---------UPD SingleVariableDeclaration@@DataFormatCustomizer<ICalDataFormat> configurer @TO@ DataFormatCustomizer<ICalDataFormat> customizer @AT@ 5371 @LENGTH@ 47
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5408 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure dataformat {}, with configurer {}",dataformat,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure dataformat {}, with customizer {}",dataformat,customizer) @AT@ 5460 @LENGTH@ 149
------------UPD MethodInvocation@@LOGGER.debug("Configure dataformat {}, with configurer {}",dataformat,configurer) @TO@ LOGGER.debug("Configure dataformat {}, with customizer {}",dataformat,customizer) @AT@ 5460 @LENGTH@ 148
---------------UPD SimpleName@@MethodName:debug:["Configure dataformat {}, with configurer {}", dataformat, configurer] @TO@ MethodName:debug:["Configure dataformat {}, with customizer {}", dataformat, customizer] @AT@ 5467 @LENGTH@ 141
------------------UPD StringLiteral@@"Configure dataformat {}, with configurer {}" @TO@ "Configure dataformat {}, with customizer {}" @AT@ 5506 @LENGTH@ 45
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5597 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(dataformat) @TO@ MethodInvocation:customizer.customize(dataformat) @AT@ 5634 @LENGTH@ 33
------------UPD MethodInvocation@@configurer.customize(dataformat) @TO@ customizer.customize(dataformat) @AT@ 5634 @LENGTH@ 32
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5634 @LENGTH@ 10


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled(); @AT@ 5209 @LENGTH@ 160
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5217 @LENGTH@ 151
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5217 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5234 @LENGTH@ 134
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 5234 @LENGTH@ 64
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5234 @LENGTH@ 35
---------UPD MethodInvocation@@componentConfiguration.getConfigurer().isEnabled() @TO@ componentConfiguration.getCustomizer().isEnabled() @AT@ 5318 @LENGTH@ 50
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5318 @LENGTH@ 38


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  DataFormatCustomizer<UniVocityTsvDataFormat> configurer : customizers) {    LOGGER.debug("Configure dataformat {}, with configurer {}",dataformat,configurer);    configurer.customize(dataformat);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  DataFormatCustomizer<UniVocityTsvDataFormat> customizer : customizers) {    LOGGER.debug("Configure dataformat {}, with customizer {}",dataformat,customizer);    customizer.customize(dataformat);  }} @AT@ 5450 @LENGTH@ 431
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 5454 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5454 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  DataFormatCustomizer<UniVocityTsvDataFormat> configurer : customizers) {    LOGGER.debug("Configure dataformat {}, with configurer {}",dataformat,configurer);    configurer.customize(dataformat);  }} @TO@ ThenBody:{  for (  DataFormatCustomizer<UniVocityTsvDataFormat> customizer : customizers) {    LOGGER.debug("Configure dataformat {}, with customizer {}",dataformat,customizer);    customizer.customize(dataformat);  }} @AT@ 5510 @LENGTH@ 371
------UPD EnhancedForStatement@@for (DataFormatCustomizer<UniVocityTsvDataFormat> configurer : customizers) {  LOGGER.debug("Configure dataformat {}, with configurer {}",dataformat,configurer);  configurer.customize(dataformat);} @TO@ for (DataFormatCustomizer<UniVocityTsvDataFormat> customizer : customizers) {  LOGGER.debug("Configure dataformat {}, with customizer {}",dataformat,customizer);  customizer.customize(dataformat);} @AT@ 5532 @LENGTH@ 331
---------UPD SingleVariableDeclaration@@DataFormatCustomizer<UniVocityTsvDataFormat> configurer @TO@ DataFormatCustomizer<UniVocityTsvDataFormat> customizer @AT@ 5537 @LENGTH@ 55
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5582 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure dataformat {}, with configurer {}",dataformat,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure dataformat {}, with customizer {}",dataformat,customizer) @AT@ 5634 @LENGTH@ 149
------------UPD MethodInvocation@@LOGGER.debug("Configure dataformat {}, with configurer {}",dataformat,configurer) @TO@ LOGGER.debug("Configure dataformat {}, with customizer {}",dataformat,customizer) @AT@ 5634 @LENGTH@ 148
---------------UPD SimpleName@@MethodName:debug:["Configure dataformat {}, with configurer {}", dataformat, configurer] @TO@ MethodName:debug:["Configure dataformat {}, with customizer {}", dataformat, customizer] @AT@ 5641 @LENGTH@ 141
------------------UPD StringLiteral@@"Configure dataformat {}, with configurer {}" @TO@ "Configure dataformat {}, with customizer {}" @AT@ 5680 @LENGTH@ 45
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5771 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(dataformat) @TO@ MethodInvocation:customizer.customize(dataformat) @AT@ 5808 @LENGTH@ 33
------------UPD MethodInvocation@@configurer.customize(dataformat) @TO@ customizer.customize(dataformat) @AT@ 5808 @LENGTH@ 32
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5808 @LENGTH@ 10


DEL MethodDeclaration@@public, String, MethodName:toString,  @AT@ 1415 @LENGTH@ 248
---DEL Modifier@@public @AT@ 1415 @LENGTH@ 6
---DEL SimpleType@@String @AT@ 1422 @LENGTH@ 6
---DEL SimpleName@@MethodName:toString @AT@ 1429 @LENGTH@ 8
---DEL VariableDeclarationStatement@@final StringBuilder sb=new StringBuilder("StreamPayload{"); @AT@ 1450 @LENGTH@ 61
------DEL Modifier@@final @AT@ 1450 @LENGTH@ 5
------DEL SimpleType@@StringBuilder @AT@ 1456 @LENGTH@ 13
------DEL VariableDeclarationFragment@@sb=new StringBuilder("StreamPayload{") @AT@ 1470 @LENGTH@ 40
---------DEL SimpleName@@sb @AT@ 1470 @LENGTH@ 2
---------DEL ClassInstanceCreation@@StringBuilder["StreamPayload{"] @AT@ 1475 @LENGTH@ 35
------------DEL New@@new @AT@ 1475 @LENGTH@ 3
------------DEL SimpleType@@StringBuilder @AT@ 1479 @LENGTH@ 13
------------DEL StringLiteral@@"StreamPayload{" @AT@ 1493 @LENGTH@ 16
---DEL ExpressionStatement@@MethodInvocation:sb.append("item=").append(item) @AT@ 1520 @LENGTH@ 32
------DEL MethodInvocation@@sb.append("item=").append(item) @AT@ 1520 @LENGTH@ 31
---------DEL MethodInvocation@@MethodName:append:["item="] @AT@ 1520 @LENGTH@ 18
------------DEL StringLiteral@@"item=" @AT@ 1530 @LENGTH@ 7
---------DEL SimpleName@@Name:sb @AT@ 1520 @LENGTH@ 2
---------DEL SimpleName@@MethodName:append:[item] @AT@ 1539 @LENGTH@ 12
------------DEL SimpleName@@item @AT@ 1546 @LENGTH@ 4
---DEL ExpressionStatement@@MethodInvocation:sb.append(", callback=").append(callback) @AT@ 1561 @LENGTH@ 42
------DEL MethodInvocation@@sb.append(", callback=").append(callback) @AT@ 1561 @LENGTH@ 41
---------DEL MethodInvocation@@MethodName:append:[", callback="] @AT@ 1561 @LENGTH@ 24
------------DEL StringLiteral@@", callback=" @AT@ 1571 @LENGTH@ 13
---------DEL SimpleName@@Name:sb @AT@ 1561 @LENGTH@ 2
---------DEL SimpleName@@MethodName:append:[callback] @AT@ 1586 @LENGTH@ 16
------------DEL SimpleName@@callback @AT@ 1593 @LENGTH@ 8
---DEL ExpressionStatement@@MethodInvocation:sb.append('}') @AT@ 1612 @LENGTH@ 15
------DEL MethodInvocation@@sb.append('}') @AT@ 1612 @LENGTH@ 14
---------DEL SimpleName@@Name:sb @AT@ 1612 @LENGTH@ 2
---------DEL SimpleName@@MethodName:append:['}'] @AT@ 1615 @LENGTH@ 11
------------DEL CharacterLiteral@@'}' @AT@ 1622 @LENGTH@ 3
---DEL ReturnStatement@@MethodInvocation:sb.toString() @AT@ 1636 @LENGTH@ 21
------DEL MethodInvocation@@sb.toString() @AT@ 1643 @LENGTH@ 13
---------DEL SimpleName@@Name:sb @AT@ 1643 @LENGTH@ 2
---------DEL SimpleName@@MethodName:toString:[] @AT@ 1646 @LENGTH@ 10


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<DdbStreamComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<DdbStreamComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5496 @LENGTH@ 342
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 5500 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5500 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  ComponentCustomizer<DdbStreamComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ ThenBody:{  for (  ComponentCustomizer<DdbStreamComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5556 @LENGTH@ 282
------UPD EnhancedForStatement@@for (ComponentCustomizer<DdbStreamComponent> configurer : customizers) {  LOGGER.debug("Configure component {}, with configurer {}",component,configurer);  configurer.customize(component);} @TO@ for (ComponentCustomizer<DdbStreamComponent> customizer : customizers) {  LOGGER.debug("Configure component {}, with customizer {}",component,customizer);  customizer.customize(component);} @AT@ 5570 @LENGTH@ 258
---------UPD SingleVariableDeclaration@@ComponentCustomizer<DdbStreamComponent> configurer @TO@ ComponentCustomizer<DdbStreamComponent> customizer @AT@ 5575 @LENGTH@ 50
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5615 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5659 @LENGTH@ 106
------------UPD MethodInvocation@@LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5659 @LENGTH@ 105
---------------UPD SimpleName@@MethodName:debug:["Configure component {}, with configurer {}", component, configurer] @TO@ MethodName:debug:["Configure component {}, with customizer {}", component, customizer] @AT@ 5666 @LENGTH@ 98
------------------UPD StringLiteral@@"Configure component {}, with configurer {}" @TO@ "Configure component {}, with customizer {}" @AT@ 5672 @LENGTH@ 44
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5753 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(component) @TO@ MethodInvocation:customizer.customize(component) @AT@ 5782 @LENGTH@ 32
------------UPD MethodInvocation@@configurer.customize(component) @TO@ customizer.customize(component) @AT@ 5782 @LENGTH@ 31
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5782 @LENGTH@ 10


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  LanguageCustomizer<TokenizeLanguage> configurer : customizers) {    LOGGER.debug("Configure language {}, with configurer {}",language,configurer);    configurer.customize(language);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  LanguageCustomizer<TokenizeLanguage> customizer : customizers) {    LOGGER.debug("Configure language {}, with customizer {}",language,customizer);    customizer.customize(language);  }} @AT@ 4763 @LENGTH@ 336
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 4767 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 4767 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  LanguageCustomizer<TokenizeLanguage> configurer : customizers) {    LOGGER.debug("Configure language {}, with configurer {}",language,configurer);    configurer.customize(language);  }} @TO@ ThenBody:{  for (  LanguageCustomizer<TokenizeLanguage> customizer : customizers) {    LOGGER.debug("Configure language {}, with customizer {}",language,customizer);    customizer.customize(language);  }} @AT@ 4823 @LENGTH@ 276
------UPD EnhancedForStatement@@for (LanguageCustomizer<TokenizeLanguage> configurer : customizers) {  LOGGER.debug("Configure language {}, with configurer {}",language,configurer);  configurer.customize(language);} @TO@ for (LanguageCustomizer<TokenizeLanguage> customizer : customizers) {  LOGGER.debug("Configure language {}, with customizer {}",language,customizer);  customizer.customize(language);} @AT@ 4837 @LENGTH@ 252
---------UPD SingleVariableDeclaration@@LanguageCustomizer<TokenizeLanguage> configurer @TO@ LanguageCustomizer<TokenizeLanguage> customizer @AT@ 4842 @LENGTH@ 47
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 4879 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure language {}, with configurer {}",language,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure language {}, with customizer {}",language,customizer) @AT@ 4923 @LENGTH@ 104
------------UPD MethodInvocation@@LOGGER.debug("Configure language {}, with configurer {}",language,configurer) @TO@ LOGGER.debug("Configure language {}, with customizer {}",language,customizer) @AT@ 4923 @LENGTH@ 103
---------------UPD SimpleName@@MethodName:debug:["Configure language {}, with configurer {}", language, configurer] @TO@ MethodName:debug:["Configure language {}, with customizer {}", language, customizer] @AT@ 4930 @LENGTH@ 96
------------------UPD StringLiteral@@"Configure language {}, with configurer {}" @TO@ "Configure language {}, with customizer {}" @AT@ 4936 @LENGTH@ 43
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5015 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(language) @TO@ MethodInvocation:customizer.customize(language) @AT@ 5044 @LENGTH@ 31
------------UPD MethodInvocation@@configurer.customize(language) @TO@ customizer.customize(language) @AT@ 5044 @LENGTH@ 30
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5044 @LENGTH@ 10


UPD ExpressionStatement@@MethodInvocation:Assert.state("amqp".equals(entry.getName())) @TO@ MethodInvocation:Assert.state("amqp".equals(entryName),"Zip 'entryName' must be equal to 'amqp'") @AT@ 1391 @LENGTH@ 45
---UPD MethodInvocation@@Assert.state("amqp".equals(entry.getName())) @TO@ Assert.state("amqp".equals(entryName),"Zip 'entryName' must be equal to 'amqp'") @AT@ 1391 @LENGTH@ 44
------UPD SimpleName@@MethodName:state:["amqp".equals(entry.getName())] @TO@ MethodName:state:["amqp".equals(entryName), "Zip 'entryName' must be equal to 'amqp'"] @AT@ 1398 @LENGTH@ 37
---------UPD MethodInvocation@@"amqp".equals(entry.getName()) @TO@ "amqp".equals(entryName) @AT@ 1404 @LENGTH@ 30
------------UPD SimpleName@@MethodName:equals:[entry.getName()] @TO@ MethodName:equals:[entryName] @AT@ 1411 @LENGTH@ 23
---------------DEL MethodInvocation@@entry.getName() @AT@ 1418 @LENGTH@ 15
------------------DEL SimpleName@@Name:entry @AT@ 1418 @LENGTH@ 5
------------------DEL SimpleName@@MethodName:getName:[] @AT@ 1424 @LENGTH@ 9
---------------INS SimpleName@@entryName @TO@ SimpleName@@MethodName:equals:[entry.getName()] @AT@ 1456 @LENGTH@ 9
---------INS StringLiteral@@"Zip 'entryName' must be equal to 'amqp'" @TO@ SimpleName@@MethodName:state:["amqp".equals(entry.getName())] @AT@ 1468 @LENGTH@ 41


UPD VariableDeclarationStatement@@Map data=new LinkedHashMap(){
{
    if (asset != null) {
      put(ASSET,asset);
    }
    put(MAIN_CLASS,mainClass);
    put(HOLLOW,hollow);
    put(PROPERTIES,properties);
    put(MODULES,bootstrapModules);
    put(BOOTSTRAP_ARTIFACTS,bootstrapArtifacts);
    put(BUNDLE_DEPENDENCIES,bundleDependencies);
    put(DEPENDENCIES,dependencies);
  }
}
; @TO@ Map<String,Object> data=new LinkedHashMap<String,Object>(){
{
    if (asset != null) {
      put(ASSET,asset);
    }
    put(MAIN_CLASS,mainClass);
    put(HOLLOW,hollow);
    put(PROPERTIES,properties);
    put(MODULES,bootstrapModules);
    put(BOOTSTRAP_ARTIFACTS,bootstrapArtifacts);
    put(BUNDLE_DEPENDENCIES,bundleDependencies);
    put(DEPENDENCIES,dependencies);
  }
}
; @AT@ 2813 @LENGTH@ 446
---DEL SimpleType@@Map @AT@ 2813 @LENGTH@ 3
---UPD VariableDeclarationFragment@@data=new LinkedHashMap(){
{
    if (asset != null) {
      put(ASSET,asset);
    }
    put(MAIN_CLASS,mainClass);
    put(HOLLOW,hollow);
    put(PROPERTIES,properties);
    put(MODULES,bootstrapModules);
    put(BOOTSTRAP_ARTIFACTS,bootstrapArtifacts);
    put(BUNDLE_DEPENDENCIES,bundleDependencies);
    put(DEPENDENCIES,dependencies);
  }
}
 @TO@ data=new LinkedHashMap<String,Object>(){
{
    if (asset != null) {
      put(ASSET,asset);
    }
    put(MAIN_CLASS,mainClass);
    put(HOLLOW,hollow);
    put(PROPERTIES,properties);
    put(MODULES,bootstrapModules);
    put(BOOTSTRAP_ARTIFACTS,bootstrapArtifacts);
    put(BUNDLE_DEPENDENCIES,bundleDependencies);
    put(DEPENDENCIES,dependencies);
  }
}
 @AT@ 2817 @LENGTH@ 441
------UPD ClassInstanceCreation@@LinkedHashMap[] @TO@ LinkedHashMap<String,Object>[] @AT@ 2824 @LENGTH@ 434
---------DEL SimpleType@@LinkedHashMap @AT@ 2828 @LENGTH@ 13
---------INS ParameterizedType@@LinkedHashMap<String,Object> @TO@ ClassInstanceCreation@@LinkedHashMap[] @AT@ 2878 @LENGTH@ 28
------------INS SimpleType@@LinkedHashMap @TO@ ParameterizedType@@LinkedHashMap<String,Object> @AT@ 2878 @LENGTH@ 13
------------INS SimpleType@@String @TO@ ParameterizedType@@LinkedHashMap<String,Object> @AT@ 2892 @LENGTH@ 6
------------INS SimpleType@@Object @TO@ ParameterizedType@@LinkedHashMap<String,Object> @AT@ 2899 @LENGTH@ 6
---INS ParameterizedType@@Map<String,Object> @TO@ VariableDeclarationStatement@@Map data=new LinkedHashMap(){
{
    if (asset != null) {
      put(ASSET,asset);
    }
    put(MAIN_CLASS,mainClass);
    put(HOLLOW,hollow);
    put(PROPERTIES,properties);
    put(MODULES,bootstrapModules);
    put(BOOTSTRAP_ARTIFACTS,bootstrapArtifacts);
    put(BUNDLE_DEPENDENCIES,bundleDependencies);
    put(DEPENDENCIES,dependencies);
  }
}
; @AT@ 2848 @LENGTH@ 18
------INS SimpleType@@Map @TO@ ParameterizedType@@Map<String,Object> @AT@ 2848 @LENGTH@ 3
------INS SimpleType@@String @TO@ ParameterizedType@@Map<String,Object> @AT@ 2852 @LENGTH@ 6
------INS SimpleType@@Object @TO@ ParameterizedType@@Map<String,Object> @AT@ 2859 @LENGTH@ 6


UPD ExpressionStatement@@Assignment:this.properties=Arrays.asList(BeanUtils.getPropertyDescriptors(type)) @TO@ Assignment:this.properties=collectDescriptors(type) @AT@ 1559 @LENGTH@ 72
---UPD Assignment@@this.properties=Arrays.asList(BeanUtils.getPropertyDescriptors(type)) @TO@ this.properties=collectDescriptors(type) @AT@ 1559 @LENGTH@ 71
------UPD MethodInvocation@@Arrays.asList(BeanUtils.getPropertyDescriptors(type)) @TO@ MethodName:stream:[BeanUtils.getPropertyDescriptors(type)] @AT@ 1577 @LENGTH@ 53
------INS MethodInvocation@@collectDescriptors(type) @TO@ Assignment@@this.properties=Arrays.asList(BeanUtils.getPropertyDescriptors(type)) @AT@ 1651 @LENGTH@ 24
---------INS SimpleName@@MethodName:collectDescriptors:[type] @TO@ MethodInvocation@@collectDescriptors(type) @AT@ 1651 @LENGTH@ 24
------------INS SimpleName@@type @TO@ SimpleName@@MethodName:collectDescriptors:[type] @AT@ 1670 @LENGTH@ 4


UPD MethodDeclaration@@public, void, MethodName:newProjectionClass, @CliOption(key="all",mandatory=false,specifiedDefaultValue="true",unspecifiedDefaultValue="false",help="Create one projection class for each entity in the project." + "This option is mandatory if `--class` is not specified. Otherwise, using `--class` will cause the parameter `--all` won't be available.") final boolean all, @CliOption(key="class",mandatory=false,optionContext=UPDATELAST_PROJECT,help="The name of the projection class to create. If you consider it necessary, " + "you can also specify the package (base package can be specified with `~`). " + "Ex.: `--class ~.domain.MyProjection`. You can specify module as well, if necessary. "+ "Ex.: `--class model:~.domain.MyProjection`. When working with a multi-module "+ "project, if module is not specified the projection will be created in the module "+ "which has the focus."+ "This option is mandatory if `--all` is not specified. Otherwise, using `--all` will cause the parameter `--class` won't be") final JavaType name, @CliOption(key="entity",mandatory=true,help="Name of the entity which can be used to create the Projection from. " + "This option is mandatory if `--class` is specified. Otherwise, not specifying `--class` will cause the parameter `--entity` won't be available.") final JavaType entity, @CliOption(key="fields",mandatory=true,help="Comma separated list of entity fields to be included into the Projection. " + "Possible values are: non-static, nor transient, nor entity collection fields from " + "main entity or its related entities (only for one-to-one or many-to-one relations). "+ "This option is mandatory if `--class` is specified. Otherwise, not specifying "+ "`--class` will cause the parameter `--fields` won't be available.") final String fields, @CliOption(key="suffix",mandatory=false,unspecifiedDefaultValue="Projection",help="Suffix added to each Projection class name, built from each associated entity name. " + "This option is only available if `--all` has been already specified." + "Default if option not present: 'Projection'.") final String suffix, @CliOption(key="entityFormatExpression",mandatory=false,help="The SpEL expression used to format the entity when showing it in presentation layer e.g. " + "{#fieldA} {#fieldB}. It adds the `value` attribute to `io.springlets.format.EntityFormat` " + "annotation."+ "This option is available only if `--entityFormatMessage` has not been specified.") String formatExpression, @CliOption(key="entityFormatMessage",mandatory=false,help="The message key used to obtain a localized SpEL expression to format the entity when " + "showing it in presentation layer. It adds the `message` attribute to " + "`io.springlets.format.EntityFormat` annotation and creates a message in all message bundles "+ "with the provided key. Message value should be  modified by developer. This kind of format "+ "has more priority that 'expression' format added with `--entityFormatExpression`"+ "This option is available only if `--entityFormatExpression` has not been specified.") String formatMessage, ShellContext shellContext,  @TO@ public, void, MethodName:newProjectionClass, @CliOption(key="all",mandatory=false,specifiedDefaultValue="true",unspecifiedDefaultValue="false",help="Create one projection class for each entity in the project." + "This option is mandatory if `--class` is not specified. Otherwise, using `--class` will cause the parameter `--all` won't be available.") final boolean all, @CliOption(key="class",mandatory=false,optionContext=UPDATELAST_PROJECT,help="The name of the projection class to create. If you consider it necessary, " + "you can also specify the package (base package can be specified with `~`). " + "Ex.: `--class ~.domain.MyProjection`. You can specify module as well, if necessary. "+ "Ex.: `--class model:~.domain.MyProjection`. When working with a multi-module "+ "project, if module is not specified the projection will be created in the module "+ "which has the focus. "+ "This option is mandatory if `--all` is not specified. Otherwise, using `--all` will "+ "cause the parameter `--class` won't be available.") final JavaType name, @CliOption(key="entity",mandatory=true,help="Name of the entity which can be used to create the Projection from. " + "This option is mandatory if `--class` is specified. Otherwise, not specifying `--class` will cause the parameter `--entity` won't be available.") final JavaType entity, @CliOption(key="fields",mandatory=true,help="Comma separated list of entity fields to be included into the Projection. " + "Possible values are: non-static, nor transient, nor entity collection fields from " + "main entity or its related entities (only for one-to-one or many-to-one relations). "+ "This option is mandatory if `--class` is specified. Otherwise, not specifying "+ "`--class` will cause the parameter `--fields` won't be available.") final String fields, @CliOption(key="suffix",mandatory=false,unspecifiedDefaultValue="Projection",help="Suffix added to each Projection class name, built from each associated entity name. " + "This option is only available if `--all` has been already specified. " + "Default if option not present: 'Projection'.") final String suffix, @CliOption(key="entityFormatExpression",mandatory=false,help="The SpEL expression used to format the entity when showing it in presentation layer e.g. " + "{#fieldA} {#fieldB}. It adds the `value` attribute to `io.springlets.format.EntityFormat` " + "annotation. "+ "This option is available only if `--entity` has been specified.") String formatExpression, @CliOption(key="entityFormatMessage",mandatory=false,help="The message key used to obtain a localized SpEL expression to format the entity when " + "showing it in presentation layer. It adds the `message` attribute to " + "`io.springlets.format.EntityFormat` annotation and creates a message in all message bundles "+ "with the provided key. Message value should be  modified by developer. This kind of format "+ "has more priority that 'expression' format added with `--entityFormatExpression`. "+ "This option is available only if `--entity` has been specified.") String formatMessage, ShellContext shellContext,  @AT@ 21658 @LENGTH@ 5135
---UPD SingleVariableDeclaration@@@CliOption(key="class",mandatory=false,optionContext=UPDATELAST_PROJECT,help="The name of the projection class to create. If you consider it necessary, " + "you can also specify the package (base package can be specified with `~`). " + "Ex.: `--class ~.domain.MyProjection`. You can specify module as well, if necessary. "+ "Ex.: `--class model:~.domain.MyProjection`. When working with a multi-module "+ "project, if module is not specified the projection will be created in the module "+ "which has the focus."+ "This option is mandatory if `--all` is not specified. Otherwise, using `--all` will cause the parameter `--class` won't be") final JavaType name @TO@ @CliOption(key="class",mandatory=false,optionContext=UPDATELAST_PROJECT,help="The name of the projection class to create. If you consider it necessary, " + "you can also specify the package (base package can be specified with `~`). " + "Ex.: `--class ~.domain.MyProjection`. You can specify module as well, if necessary. "+ "Ex.: `--class model:~.domain.MyProjection`. When working with a multi-module "+ "project, if module is not specified the projection will be created in the module "+ "which has the focus. "+ "This option is mandatory if `--all` is not specified. Otherwise, using `--all` will "+ "cause the parameter `--class` won't be available.") final JavaType name @AT@ 22106 @LENGTH@ 799
---UPD SingleVariableDeclaration@@@CliOption(key="suffix",mandatory=false,unspecifiedDefaultValue="Projection",help="Suffix added to each Projection class name, built from each associated entity name. " + "This option is only available if `--all` has been already specified." + "Default if option not present: 'Projection'.") final String suffix @TO@ @CliOption(key="suffix",mandatory=false,unspecifiedDefaultValue="Projection",help="Suffix added to each Projection class name, built from each associated entity name. " + "This option is only available if `--all` has been already specified. " + "Default if option not present: 'Projection'.") final String suffix @AT@ 23832 @LENGTH@ 391
---UPD SingleVariableDeclaration@@@CliOption(key="entityFormatExpression",mandatory=false,help="The SpEL expression used to format the entity when showing it in presentation layer e.g. " + "{#fieldA} {#fieldB}. It adds the `value` attribute to `io.springlets.format.EntityFormat` " + "annotation."+ "This option is available only if `--entityFormatMessage` has not been specified.") String formatExpression @TO@ @CliOption(key="entityFormatExpression",mandatory=false,help="The SpEL expression used to format the entity when showing it in presentation layer e.g. " + "{#fieldA} {#fieldB}. It adds the `value` attribute to `io.springlets.format.EntityFormat` " + "annotation. "+ "This option is available only if `--entity` has been specified.") String formatExpression @AT@ 24231 @LENGTH@ 454
---UPD SingleVariableDeclaration@@@CliOption(key="entityFormatMessage",mandatory=false,help="The message key used to obtain a localized SpEL expression to format the entity when " + "showing it in presentation layer. It adds the `message` attribute to " + "`io.springlets.format.EntityFormat` annotation and creates a message in all message bundles "+ "with the provided key. Message value should be  modified by developer. This kind of format "+ "has more priority that 'expression' format added with `--entityFormatExpression`"+ "This option is available only if `--entityFormatExpression` has not been specified.") String formatMessage @TO@ @CliOption(key="entityFormatMessage",mandatory=false,help="The message key used to obtain a localized SpEL expression to format the entity when " + "showing it in presentation layer. It adds the `message` attribute to " + "`io.springlets.format.EntityFormat` annotation and creates a message in all message bundles "+ "with the provided key. Message value should be  modified by developer. This kind of format "+ "has more priority that 'expression' format added with `--entityFormatExpression`. "+ "This option is available only if `--entity` has been specified.") String formatMessage @AT@ 24693 @LENGTH@ 716


UPD IfStatement@@if (acknowledgeMode.isAutoAck() && channelTransacted.equalsIgnoreCase("true")) {  parserContext.getReaderContext().error("Listener Container - cannot set channel-transacted with acknowledge='NONE'",containerEle);} @TO@ if (AcknowledgeMode.NONE == acknowledgeMode && channelTransacted.equalsIgnoreCase("true")) {  parserContext.getReaderContext().error("Listener Container - cannot set channel-transacted with acknowledge='NONE'",containerEle);} @AT@ 8058 @LENGTH@ 228
---UPD InfixExpression@@acknowledgeMode.isAutoAck() && channelTransacted.equalsIgnoreCase("true") @TO@ AcknowledgeMode.NONE == acknowledgeMode && channelTransacted.equalsIgnoreCase("true") @AT@ 8062 @LENGTH@ 73
------DEL MethodInvocation@@acknowledgeMode.isAutoAck() @AT@ 8062 @LENGTH@ 27
---------DEL SimpleName@@Name:acknowledgeMode @AT@ 8062 @LENGTH@ 15
---------DEL SimpleName@@MethodName:isAutoAck:[] @AT@ 8078 @LENGTH@ 11
------INS InfixExpression@@AcknowledgeMode.NONE == acknowledgeMode @TO@ InfixExpression@@acknowledgeMode.isAutoAck() && channelTransacted.equalsIgnoreCase("true") @AT@ 8071 @LENGTH@ 39
---------INS QualifiedName@@AcknowledgeMode.NONE @TO@ InfixExpression@@AcknowledgeMode.NONE == acknowledgeMode @AT@ 8071 @LENGTH@ 20
------------INS SimpleName@@AcknowledgeMode @TO@ QualifiedName@@AcknowledgeMode.NONE @AT@ 8071 @LENGTH@ 15
------------INS SimpleName@@NONE @TO@ QualifiedName@@AcknowledgeMode.NONE @AT@ 8087 @LENGTH@ 4
---------INS Operator@@== @TO@ InfixExpression@@AcknowledgeMode.NONE == acknowledgeMode @AT@ 8091 @LENGTH@ 2
---------INS SimpleName@@acknowledgeMode @TO@ InfixExpression@@AcknowledgeMode.NONE == acknowledgeMode @AT@ 8095 @LENGTH@ 15


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled(); @AT@ 5449 @LENGTH@ 160
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5457 @LENGTH@ 151
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5457 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5474 @LENGTH@ 134
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 5474 @LENGTH@ 64
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5474 @LENGTH@ 35
---------UPD MethodInvocation@@componentConfiguration.getConfigurer().isEnabled() @TO@ componentConfiguration.getCustomizer().isEnabled() @AT@ 5558 @LENGTH@ 50
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5558 @LENGTH@ 38


MOV ExpressionStatement@@MethodInvocation:this.template.setReceiveTimeout(1) @TO@ MethodDeclaration@@public, void, MethodName:testReceiveBlockingNoTimeout, Exception,  @AT@ 11615 @LENGTH@ 35


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  LanguageCustomizer<FileLanguage> configurer : customizers) {    LOGGER.debug("Configure language {}, with configurer {}",language,configurer);    configurer.customize(language);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  LanguageCustomizer<FileLanguage> customizer : customizers) {    LOGGER.debug("Configure language {}, with customizer {}",language,customizer);    customizer.customize(language);  }} @AT@ 4693 @LENGTH@ 332
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 4697 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 4697 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  LanguageCustomizer<FileLanguage> configurer : customizers) {    LOGGER.debug("Configure language {}, with configurer {}",language,configurer);    configurer.customize(language);  }} @TO@ ThenBody:{  for (  LanguageCustomizer<FileLanguage> customizer : customizers) {    LOGGER.debug("Configure language {}, with customizer {}",language,customizer);    customizer.customize(language);  }} @AT@ 4753 @LENGTH@ 272
------UPD EnhancedForStatement@@for (LanguageCustomizer<FileLanguage> configurer : customizers) {  LOGGER.debug("Configure language {}, with configurer {}",language,configurer);  configurer.customize(language);} @TO@ for (LanguageCustomizer<FileLanguage> customizer : customizers) {  LOGGER.debug("Configure language {}, with customizer {}",language,customizer);  customizer.customize(language);} @AT@ 4767 @LENGTH@ 248
---------UPD SingleVariableDeclaration@@LanguageCustomizer<FileLanguage> configurer @TO@ LanguageCustomizer<FileLanguage> customizer @AT@ 4772 @LENGTH@ 43
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 4805 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure language {}, with configurer {}",language,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure language {}, with customizer {}",language,customizer) @AT@ 4849 @LENGTH@ 104
------------UPD MethodInvocation@@LOGGER.debug("Configure language {}, with configurer {}",language,configurer) @TO@ LOGGER.debug("Configure language {}, with customizer {}",language,customizer) @AT@ 4849 @LENGTH@ 103
---------------UPD SimpleName@@MethodName:debug:["Configure language {}, with configurer {}", language, configurer] @TO@ MethodName:debug:["Configure language {}, with customizer {}", language, customizer] @AT@ 4856 @LENGTH@ 96
------------------UPD StringLiteral@@"Configure language {}, with configurer {}" @TO@ "Configure language {}, with customizer {}" @AT@ 4862 @LENGTH@ 43
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 4941 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(language) @TO@ MethodInvocation:customizer.customize(language) @AT@ 4970 @LENGTH@ 31
------------UPD MethodInvocation@@configurer.customize(language) @TO@ customizer.customize(language) @AT@ 4970 @LENGTH@ 30
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 4970 @LENGTH@ 10


UPD MethodDeclaration@@ExecutorService, MethodName:newThreadPool, Object source, final String name, int corePoolSize, int maxPoolSize, long keepAliveTime, TimeUnit timeUnit, int maxQueueSize, RejectedExecutionHandler rejectedExecutionHandler, boolean daemon,  @TO@ ExecutorService, MethodName:newThreadPool, Object source, String name, int corePoolSize, int maxPoolSize, long keepAliveTime, TimeUnit timeUnit, int maxQueueSize, RejectedExecutionHandler rejectedExecutionHandler, boolean daemon,  @AT@ 11372 @LENGTH@ 275
---UPD SingleVariableDeclaration@@final String name @TO@ String name @AT@ 11401 @LENGTH@ 17
------DEL Modifier@@final @AT@ 11401 @LENGTH@ 5


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled(); @AT@ 5243 @LENGTH@ 160
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5251 @LENGTH@ 151
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5251 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5268 @LENGTH@ 134
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 5268 @LENGTH@ 64
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5268 @LENGTH@ 35
---------UPD MethodInvocation@@componentConfiguration.getConfigurer().isEnabled() @TO@ componentConfiguration.getCustomizer().isEnabled() @AT@ 5352 @LENGTH@ 50
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5352 @LENGTH@ 38


UPD ExpressionStatement@@MethodInvocation:Assert.isTrue(!userExists(user.getUsername())) @TO@ MethodInvocation:Assert.isTrue(!userExists(user.getUsername()),"user should not exist") @AT@ 2937 @LENGTH@ 47
---UPD MethodInvocation@@Assert.isTrue(!userExists(user.getUsername())) @TO@ Assert.isTrue(!userExists(user.getUsername()),"user should not exist") @AT@ 2937 @LENGTH@ 46
------UPD SimpleName@@MethodName:isTrue:[!userExists(user.getUsername())] @TO@ MethodName:isTrue:[!userExists(user.getUsername()), "user should not exist"] @AT@ 2944 @LENGTH@ 39
---------INS StringLiteral@@"user should not exist" @TO@ SimpleName@@MethodName:isTrue:[!userExists(user.getUsername())] @AT@ 2984 @LENGTH@ 23


UPD VariableDeclarationStatement@@PropertyExpression product=PropertyExpression.property("product").definedAs(ArithmeticOperators.valueOf(Variable.VALUE.referingTo("product").getName()).multiplyBy(Variable.THIS.getName())); @TO@ PropertyExpression product=PropertyExpression.property("product").definedAs(ArithmeticOperators.valueOf(Variable.VALUE.referringTo("product").getName()).multiplyBy(Variable.THIS.getName())); @AT@ 63342 @LENGTH@ 196
---UPD VariableDeclarationFragment@@product=PropertyExpression.property("product").definedAs(ArithmeticOperators.valueOf(Variable.VALUE.referingTo("product").getName()).multiplyBy(Variable.THIS.getName())) @TO@ product=PropertyExpression.property("product").definedAs(ArithmeticOperators.valueOf(Variable.VALUE.referringTo("product").getName()).multiplyBy(Variable.THIS.getName())) @AT@ 63361 @LENGTH@ 176
------UPD MethodInvocation@@PropertyExpression.property("product").definedAs(ArithmeticOperators.valueOf(Variable.VALUE.referingTo("product").getName()).multiplyBy(Variable.THIS.getName())) @TO@ PropertyExpression.property("product").definedAs(ArithmeticOperators.valueOf(Variable.VALUE.referringTo("product").getName()).multiplyBy(Variable.THIS.getName())) @AT@ 63371 @LENGTH@ 166
---------UPD SimpleName@@MethodName:definedAs:[ArithmeticOperators.valueOf(Variable.VALUE.referingTo("product").getName()).multiplyBy(Variable.THIS.getName())] @TO@ MethodName:definedAs:[ArithmeticOperators.valueOf(Variable.VALUE.referringTo("product").getName()).multiplyBy(Variable.THIS.getName())] @AT@ 63410 @LENGTH@ 127
------------UPD MethodInvocation@@ArithmeticOperators.valueOf(Variable.VALUE.referingTo("product").getName()).multiplyBy(Variable.THIS.getName()) @TO@ ArithmeticOperators.valueOf(Variable.VALUE.referringTo("product").getName()).multiplyBy(Variable.THIS.getName()) @AT@ 63420 @LENGTH@ 116
---------------UPD MethodInvocation@@MethodName:valueOf:[Variable.VALUE.referingTo("product").getName()] @TO@ MethodName:valueOf:[Variable.VALUE.referringTo("product").getName()] @AT@ 63420 @LENGTH@ 80
------------------UPD MethodInvocation@@Variable.VALUE.referingTo("product").getName() @TO@ Variable.VALUE.referringTo("product").getName() @AT@ 63453 @LENGTH@ 46
---------------------UPD MethodInvocation@@MethodName:referingTo:["product"] @TO@ MethodName:referringTo:["product"] @AT@ 63453 @LENGTH@ 36


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<WsComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<WsComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5400 @LENGTH@ 335
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 5404 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5404 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  ComponentCustomizer<WsComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ ThenBody:{  for (  ComponentCustomizer<WsComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5460 @LENGTH@ 275
------UPD EnhancedForStatement@@for (ComponentCustomizer<WsComponent> configurer : customizers) {  LOGGER.debug("Configure component {}, with configurer {}",component,configurer);  configurer.customize(component);} @TO@ for (ComponentCustomizer<WsComponent> customizer : customizers) {  LOGGER.debug("Configure component {}, with customizer {}",component,customizer);  customizer.customize(component);} @AT@ 5474 @LENGTH@ 251
---------UPD SingleVariableDeclaration@@ComponentCustomizer<WsComponent> configurer @TO@ ComponentCustomizer<WsComponent> customizer @AT@ 5479 @LENGTH@ 43
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5512 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5556 @LENGTH@ 106
------------UPD MethodInvocation@@LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5556 @LENGTH@ 105
---------------UPD SimpleName@@MethodName:debug:["Configure component {}, with configurer {}", component, configurer] @TO@ MethodName:debug:["Configure component {}, with customizer {}", component, customizer] @AT@ 5563 @LENGTH@ 98
------------------UPD StringLiteral@@"Configure component {}, with configurer {}" @TO@ "Configure component {}, with customizer {}" @AT@ 5569 @LENGTH@ 44
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5650 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(component) @TO@ MethodInvocation:customizer.customize(component) @AT@ 5679 @LENGTH@ 32
------------UPD MethodInvocation@@configurer.customize(component) @TO@ customizer.customize(component) @AT@ 5679 @LENGTH@ 31
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5679 @LENGTH@ 10


UPD VariableDeclarationStatement@@String expectedPath=new File(System.getProperty("user.dir"),fileName).toURL().toString(); @TO@ String expectedPath=new File(System.getProperty("user.dir"),fileName).toURI().toURL().toString(); @AT@ 3605 @LENGTH@ 92
---UPD VariableDeclarationFragment@@expectedPath=new File(System.getProperty("user.dir"),fileName).toURL().toString() @TO@ expectedPath=new File(System.getProperty("user.dir"),fileName).toURI().toURL().toString() @AT@ 3612 @LENGTH@ 84
------UPD MethodInvocation@@new File(System.getProperty("user.dir"),fileName).toURL().toString() @TO@ new File(System.getProperty("user.dir"),fileName).toURI().toURL().toString() @AT@ 3627 @LENGTH@ 69
---------INS MethodInvocation@@MethodName:toURI:[] @TO@ MethodInvocation@@new File(System.getProperty("user.dir"),fileName).toURL().toString() @AT@ 3635 @LENGTH@ 58


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled(); @AT@ 5209 @LENGTH@ 160
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5217 @LENGTH@ 151
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5217 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5234 @LENGTH@ 134
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 5234 @LENGTH@ 64
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5234 @LENGTH@ 35
---------UPD MethodInvocation@@componentConfiguration.getConfigurer().isEnabled() @TO@ componentConfiguration.getCustomizer().isEnabled() @AT@ 5318 @LENGTH@ 50
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5318 @LENGTH@ 38


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<HttpComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<HttpComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5399 @LENGTH@ 337
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 5403 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5403 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  ComponentCustomizer<HttpComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ ThenBody:{  for (  ComponentCustomizer<HttpComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5459 @LENGTH@ 277
------UPD EnhancedForStatement@@for (ComponentCustomizer<HttpComponent> configurer : customizers) {  LOGGER.debug("Configure component {}, with configurer {}",component,configurer);  configurer.customize(component);} @TO@ for (ComponentCustomizer<HttpComponent> customizer : customizers) {  LOGGER.debug("Configure component {}, with customizer {}",component,customizer);  customizer.customize(component);} @AT@ 5473 @LENGTH@ 253
---------UPD SingleVariableDeclaration@@ComponentCustomizer<HttpComponent> configurer @TO@ ComponentCustomizer<HttpComponent> customizer @AT@ 5478 @LENGTH@ 45
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5513 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5557 @LENGTH@ 106
------------UPD MethodInvocation@@LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5557 @LENGTH@ 105
---------------UPD SimpleName@@MethodName:debug:["Configure component {}, with configurer {}", component, configurer] @TO@ MethodName:debug:["Configure component {}, with customizer {}", component, customizer] @AT@ 5564 @LENGTH@ 98
------------------UPD StringLiteral@@"Configure component {}, with configurer {}" @TO@ "Configure component {}, with customizer {}" @AT@ 5570 @LENGTH@ 44
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5651 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(component) @TO@ MethodInvocation:customizer.customize(component) @AT@ 5680 @LENGTH@ 32
------------UPD MethodInvocation@@configurer.customize(component) @TO@ customizer.customize(component) @AT@ 5680 @LENGTH@ 31
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5680 @LENGTH@ 10


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled(); @AT@ 5226 @LENGTH@ 160
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5234 @LENGTH@ 151
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5234 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5251 @LENGTH@ 134
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 5251 @LENGTH@ 64
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5251 @LENGTH@ 35
---------UPD MethodInvocation@@componentConfiguration.getConfigurer().isEnabled() @TO@ componentConfiguration.getCustomizer().isEnabled() @AT@ 5335 @LENGTH@ 50
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5335 @LENGTH@ 38


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled(); @AT@ 5361 @LENGTH@ 160
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5369 @LENGTH@ 151
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5369 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5386 @LENGTH@ 134
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 5386 @LENGTH@ 64
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5386 @LENGTH@ 35
---------UPD MethodInvocation@@componentConfiguration.getConfigurer().isEnabled() @TO@ componentConfiguration.getCustomizer().isEnabled() @AT@ 5470 @LENGTH@ 50
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5470 @LENGTH@ 38


UPD Block@@ThenBody:{  DependenciesContainer depContainer=(DependenciesContainer)deployment;  if (depContainer.hasMarker(DependenciesContainer.ALL_DEPENDENCIES_MARKER)) {    if (!depContainer.hasMarker(ALL_DEPENDENCIES_ADDED_MARKER)) {      ApplicationEnvironment appEnv=ApplicationEnvironment.get();      if (ApplicationEnvironment.Mode.UBERJAR == appEnv.getMode()) {        ArtifactLookup artifactLookup=ArtifactLookup.get();        for (        String gav : appEnv.getDependencies()) {          depContainer.addAsLibrary(artifactLookup.artifact(gav));        }      } else {        Set<String> paths=appEnv.resolveDependencies(Collections.EMPTY_LIST);        for (        String path : paths) {          final File pathFile=new File(path);          if (path.endsWith(".jar")) {            depContainer.addAsLibrary(pathFile);          } else           if (pathFile.isDirectory()) {            depContainer.merge(ShrinkWrap.create(GenericArchive.class).as(ExplodedImporter.class).importDirectory(pathFile).as(GenericArchive.class),"/WEB-INF/classes",Filters.includeAll());          }        }      }      depContainer.addMarker(ALL_DEPENDENCIES_ADDED_MARKER);    }  }} @TO@ ThenBody:{  DependenciesContainer<?> depContainer=(DependenciesContainer)deployment;  if (depContainer.hasMarker(DependenciesContainer.ALL_DEPENDENCIES_MARKER)) {    if (!depContainer.hasMarker(ALL_DEPENDENCIES_ADDED_MARKER)) {      ApplicationEnvironment appEnv=ApplicationEnvironment.get();      if (ApplicationEnvironment.Mode.UBERJAR == appEnv.getMode()) {        ArtifactLookup artifactLookup=ArtifactLookup.get();        for (        String gav : appEnv.getDependencies()) {          depContainer.addAsLibrary(artifactLookup.artifact(gav));        }      } else {        Set<String> paths=appEnv.resolveDependencies(Collections.emptyList());        for (        String path : paths) {          final File pathFile=new File(path);          if (path.endsWith(".jar")) {            depContainer.addAsLibrary(pathFile);          } else           if (pathFile.isDirectory()) {            depContainer.merge(ShrinkWrap.create(GenericArchive.class).as(ExplodedImporter.class).importDirectory(pathFile).as(GenericArchive.class),"/WEB-INF/classes",Filters.includeAll());          }        }      }      depContainer.addMarker(ALL_DEPENDENCIES_ADDED_MARKER);    }  }} @AT@ 6896 @LENGTH@ 1949
---UPD VariableDeclarationStatement@@DependenciesContainer depContainer=(DependenciesContainer)deployment; @TO@ DependenciesContainer<?> depContainer=(DependenciesContainer)deployment; @AT@ 6914 @LENGTH@ 72
------INS ParameterizedType@@DependenciesContainer<?> @TO@ VariableDeclarationStatement@@DependenciesContainer depContainer=(DependenciesContainer)deployment; @AT@ 6914 @LENGTH@ 24
---------INS SimpleType@@DependenciesContainer @TO@ ParameterizedType@@DependenciesContainer<?> @AT@ 6914 @LENGTH@ 21
---------INS WildcardType@@? @TO@ ParameterizedType@@DependenciesContainer<?> @AT@ 6936 @LENGTH@ 1
------DEL SimpleType@@DependenciesContainer @AT@ 6914 @LENGTH@ 21
---UPD IfStatement@@if (depContainer.hasMarker(DependenciesContainer.ALL_DEPENDENCIES_MARKER)) {  if (!depContainer.hasMarker(ALL_DEPENDENCIES_ADDED_MARKER)) {    ApplicationEnvironment appEnv=ApplicationEnvironment.get();    if (ApplicationEnvironment.Mode.UBERJAR == appEnv.getMode()) {      ArtifactLookup artifactLookup=ArtifactLookup.get();      for (      String gav : appEnv.getDependencies()) {        depContainer.addAsLibrary(artifactLookup.artifact(gav));      }    } else {      Set<String> paths=appEnv.resolveDependencies(Collections.EMPTY_LIST);      for (      String path : paths) {        final File pathFile=new File(path);        if (path.endsWith(".jar")) {          depContainer.addAsLibrary(pathFile);        } else         if (pathFile.isDirectory()) {          depContainer.merge(ShrinkWrap.create(GenericArchive.class).as(ExplodedImporter.class).importDirectory(pathFile).as(GenericArchive.class),"/WEB-INF/classes",Filters.includeAll());        }      }    }    depContainer.addMarker(ALL_DEPENDENCIES_ADDED_MARKER);  }} @TO@ if (depContainer.hasMarker(DependenciesContainer.ALL_DEPENDENCIES_MARKER)) {  if (!depContainer.hasMarker(ALL_DEPENDENCIES_ADDED_MARKER)) {    ApplicationEnvironment appEnv=ApplicationEnvironment.get();    if (ApplicationEnvironment.Mode.UBERJAR == appEnv.getMode()) {      ArtifactLookup artifactLookup=ArtifactLookup.get();      for (      String gav : appEnv.getDependencies()) {        depContainer.addAsLibrary(artifactLookup.artifact(gav));      }    } else {      Set<String> paths=appEnv.resolveDependencies(Collections.emptyList());      for (      String path : paths) {        final File pathFile=new File(path);        if (path.endsWith(".jar")) {          depContainer.addAsLibrary(pathFile);        } else         if (pathFile.isDirectory()) {          depContainer.merge(ShrinkWrap.create(GenericArchive.class).as(ExplodedImporter.class).importDirectory(pathFile).as(GenericArchive.class),"/WEB-INF/classes",Filters.includeAll());        }      }    }    depContainer.addMarker(ALL_DEPENDENCIES_ADDED_MARKER);  }} @AT@ 7003 @LENGTH@ 1828
------UPD Block@@ThenBody:{  if (!depContainer.hasMarker(ALL_DEPENDENCIES_ADDED_MARKER)) {    ApplicationEnvironment appEnv=ApplicationEnvironment.get();    if (ApplicationEnvironment.Mode.UBERJAR == appEnv.getMode()) {      ArtifactLookup artifactLookup=ArtifactLookup.get();      for (      String gav : appEnv.getDependencies()) {        depContainer.addAsLibrary(artifactLookup.artifact(gav));      }    } else {      Set<String> paths=appEnv.resolveDependencies(Collections.EMPTY_LIST);      for (      String path : paths) {        final File pathFile=new File(path);        if (path.endsWith(".jar")) {          depContainer.addAsLibrary(pathFile);        } else         if (pathFile.isDirectory()) {          depContainer.merge(ShrinkWrap.create(GenericArchive.class).as(ExplodedImporter.class).importDirectory(pathFile).as(GenericArchive.class),"/WEB-INF/classes",Filters.includeAll());        }      }    }    depContainer.addMarker(ALL_DEPENDENCIES_ADDED_MARKER);  }} @TO@ ThenBody:{  if (!depContainer.hasMarker(ALL_DEPENDENCIES_ADDED_MARKER)) {    ApplicationEnvironment appEnv=ApplicationEnvironment.get();    if (ApplicationEnvironment.Mode.UBERJAR == appEnv.getMode()) {      ArtifactLookup artifactLookup=ArtifactLookup.get();      for (      String gav : appEnv.getDependencies()) {        depContainer.addAsLibrary(artifactLookup.artifact(gav));      }    } else {      Set<String> paths=appEnv.resolveDependencies(Collections.emptyList());      for (      String path : paths) {        final File pathFile=new File(path);        if (path.endsWith(".jar")) {          depContainer.addAsLibrary(pathFile);        } else         if (pathFile.isDirectory()) {          depContainer.merge(ShrinkWrap.create(GenericArchive.class).as(ExplodedImporter.class).importDirectory(pathFile).as(GenericArchive.class),"/WEB-INF/classes",Filters.includeAll());        }      }    }    depContainer.addMarker(ALL_DEPENDENCIES_ADDED_MARKER);  }} @AT@ 7078 @LENGTH@ 1753
---------UPD IfStatement@@if (!depContainer.hasMarker(ALL_DEPENDENCIES_ADDED_MARKER)) {  ApplicationEnvironment appEnv=ApplicationEnvironment.get();  if (ApplicationEnvironment.Mode.UBERJAR == appEnv.getMode()) {    ArtifactLookup artifactLookup=ArtifactLookup.get();    for (    String gav : appEnv.getDependencies()) {      depContainer.addAsLibrary(artifactLookup.artifact(gav));    }  } else {    Set<String> paths=appEnv.resolveDependencies(Collections.EMPTY_LIST);    for (    String path : paths) {      final File pathFile=new File(path);      if (path.endsWith(".jar")) {        depContainer.addAsLibrary(pathFile);      } else       if (pathFile.isDirectory()) {        depContainer.merge(ShrinkWrap.create(GenericArchive.class).as(ExplodedImporter.class).importDirectory(pathFile).as(GenericArchive.class),"/WEB-INF/classes",Filters.includeAll());      }    }  }  depContainer.addMarker(ALL_DEPENDENCIES_ADDED_MARKER);} @TO@ if (!depContainer.hasMarker(ALL_DEPENDENCIES_ADDED_MARKER)) {  ApplicationEnvironment appEnv=ApplicationEnvironment.get();  if (ApplicationEnvironment.Mode.UBERJAR == appEnv.getMode()) {    ArtifactLookup artifactLookup=ArtifactLookup.get();    for (    String gav : appEnv.getDependencies()) {      depContainer.addAsLibrary(artifactLookup.artifact(gav));    }  } else {    Set<String> paths=appEnv.resolveDependencies(Collections.emptyList());    for (    String path : paths) {      final File pathFile=new File(path);      if (path.endsWith(".jar")) {        depContainer.addAsLibrary(pathFile);      } else       if (pathFile.isDirectory()) {        depContainer.merge(ShrinkWrap.create(GenericArchive.class).as(ExplodedImporter.class).importDirectory(pathFile).as(GenericArchive.class),"/WEB-INF/classes",Filters.includeAll());      }    }  }  depContainer.addMarker(ALL_DEPENDENCIES_ADDED_MARKER);} @AT@ 7100 @LENGTH@ 1713
------------UPD Block@@ThenBody:{  ApplicationEnvironment appEnv=ApplicationEnvironment.get();  if (ApplicationEnvironment.Mode.UBERJAR == appEnv.getMode()) {    ArtifactLookup artifactLookup=ArtifactLookup.get();    for (    String gav : appEnv.getDependencies()) {      depContainer.addAsLibrary(artifactLookup.artifact(gav));    }  } else {    Set<String> paths=appEnv.resolveDependencies(Collections.EMPTY_LIST);    for (    String path : paths) {      final File pathFile=new File(path);      if (path.endsWith(".jar")) {        depContainer.addAsLibrary(pathFile);      } else       if (pathFile.isDirectory()) {        depContainer.merge(ShrinkWrap.create(GenericArchive.class).as(ExplodedImporter.class).importDirectory(pathFile).as(GenericArchive.class),"/WEB-INF/classes",Filters.includeAll());      }    }  }  depContainer.addMarker(ALL_DEPENDENCIES_ADDED_MARKER);} @TO@ ThenBody:{  ApplicationEnvironment appEnv=ApplicationEnvironment.get();  if (ApplicationEnvironment.Mode.UBERJAR == appEnv.getMode()) {    ArtifactLookup artifactLookup=ArtifactLookup.get();    for (    String gav : appEnv.getDependencies()) {      depContainer.addAsLibrary(artifactLookup.artifact(gav));    }  } else {    Set<String> paths=appEnv.resolveDependencies(Collections.emptyList());    for (    String path : paths) {      final File pathFile=new File(path);      if (path.endsWith(".jar")) {        depContainer.addAsLibrary(pathFile);      } else       if (pathFile.isDirectory()) {        depContainer.merge(ShrinkWrap.create(GenericArchive.class).as(ExplodedImporter.class).importDirectory(pathFile).as(GenericArchive.class),"/WEB-INF/classes",Filters.includeAll());      }    }  }  depContainer.addMarker(ALL_DEPENDENCIES_ADDED_MARKER);} @AT@ 7160 @LENGTH@ 1653
---------------UPD IfStatement@@if (ApplicationEnvironment.Mode.UBERJAR == appEnv.getMode()) {  ArtifactLookup artifactLookup=ArtifactLookup.get();  for (  String gav : appEnv.getDependencies()) {    depContainer.addAsLibrary(artifactLookup.artifact(gav));  }} else {  Set<String> paths=appEnv.resolveDependencies(Collections.EMPTY_LIST);  for (  String path : paths) {    final File pathFile=new File(path);    if (path.endsWith(".jar")) {      depContainer.addAsLibrary(pathFile);    } else     if (pathFile.isDirectory()) {      depContainer.merge(ShrinkWrap.create(GenericArchive.class).as(ExplodedImporter.class).importDirectory(pathFile).as(GenericArchive.class),"/WEB-INF/classes",Filters.includeAll());    }  }} @TO@ if (ApplicationEnvironment.Mode.UBERJAR == appEnv.getMode()) {  ArtifactLookup artifactLookup=ArtifactLookup.get();  for (  String gav : appEnv.getDependencies()) {    depContainer.addAsLibrary(artifactLookup.artifact(gav));  }} else {  Set<String> paths=appEnv.resolveDependencies(Collections.emptyList());  for (  String path : paths) {    final File pathFile=new File(path);    if (path.endsWith(".jar")) {      depContainer.addAsLibrary(pathFile);    } else     if (pathFile.isDirectory()) {      depContainer.merge(ShrinkWrap.create(GenericArchive.class).as(ExplodedImporter.class).importDirectory(pathFile).as(GenericArchive.class),"/WEB-INF/classes",Filters.includeAll());    }  }} @AT@ 7273 @LENGTH@ 1438
------------------UPD Block@@ElseBody:{  Set<String> paths=appEnv.resolveDependencies(Collections.EMPTY_LIST);  for (  String path : paths) {    final File pathFile=new File(path);    if (path.endsWith(".jar")) {      depContainer.addAsLibrary(pathFile);    } else     if (pathFile.isDirectory()) {      depContainer.merge(ShrinkWrap.create(GenericArchive.class).as(ExplodedImporter.class).importDirectory(pathFile).as(GenericArchive.class),"/WEB-INF/classes",Filters.includeAll());    }  }} @TO@ ElseBody:{  Set<String> paths=appEnv.resolveDependencies(Collections.emptyList());  for (  String path : paths) {    final File pathFile=new File(path);    if (path.endsWith(".jar")) {      depContainer.addAsLibrary(pathFile);    } else     if (pathFile.isDirectory()) {      depContainer.merge(ShrinkWrap.create(GenericArchive.class).as(ExplodedImporter.class).importDirectory(pathFile).as(GenericArchive.class),"/WEB-INF/classes",Filters.includeAll());    }  }} @AT@ 7642 @LENGTH@ 1069
---------------------UPD VariableDeclarationStatement@@Set<String> paths=appEnv.resolveDependencies(Collections.EMPTY_LIST); @TO@ Set<String> paths=appEnv.resolveDependencies(Collections.emptyList()); @AT@ 7672 @LENGTH@ 71
------------------------UPD VariableDeclarationFragment@@paths=appEnv.resolveDependencies(Collections.EMPTY_LIST) @TO@ paths=appEnv.resolveDependencies(Collections.emptyList()) @AT@ 7684 @LENGTH@ 58
---------------------------UPD MethodInvocation@@appEnv.resolveDependencies(Collections.EMPTY_LIST) @TO@ appEnv.resolveDependencies(Collections.emptyList()) @AT@ 7692 @LENGTH@ 50
------------------------------UPD SimpleName@@MethodName:resolveDependencies:[Collections.EMPTY_LIST] @TO@ MethodName:resolveDependencies:[Collections.emptyList()] @AT@ 7699 @LENGTH@ 43
---------------------------------DEL QualifiedName@@Collections.EMPTY_LIST @AT@ 7719 @LENGTH@ 22
------------------------------------DEL SimpleName@@Collections @AT@ 7719 @LENGTH@ 11
------------------------------------DEL SimpleName@@EMPTY_LIST @AT@ 7731 @LENGTH@ 10
---------------------------------INS MethodInvocation@@Collections.emptyList() @TO@ SimpleName@@MethodName:resolveDependencies:[Collections.EMPTY_LIST] @AT@ 7722 @LENGTH@ 23
------------------------------------INS SimpleName@@Name:Collections @TO@ MethodInvocation@@Collections.emptyList() @AT@ 7722 @LENGTH@ 11
------------------------------------INS SimpleName@@MethodName:emptyList:[] @TO@ MethodInvocation@@Collections.emptyList() @AT@ 7734 @LENGTH@ 11


UPD Block@@ThenBody:{  LOG.debug("No tranaction policiy configured on TransactionErrorHandlerBuilder. Will try find it in the registry.");  Map<String,TransactedPolicy> mapPolicy=routeContext.lookupByType(TransactedPolicy.class);  if (mapPolicy != null && mapPolicy.size() == 1) {    TransactedPolicy policy=mapPolicy.values().iterator().next();    if (policy != null && policy instanceof JtaTransactionPolicy) {      transactionPolicy=((JtaTransactionPolicy)policy);    }  }  if (transactionPolicy == null) {    TransactedPolicy policy=routeContext.lookup(PROPAGATION_REQUIRED,TransactedPolicy.class);    if (policy != null && policy instanceof JtaTransactionPolicy) {      transactionPolicy=((JtaTransactionPolicy)policy);    }  }  if (transactionPolicy != null) {    LOG.debug("Found TransactionPolicy in registry to use: " + transactionPolicy);  }} @TO@ ThenBody:{  LOG.debug("No tranaction policiy configured on TransactionErrorHandlerBuilder. Will try find it in the registry.");  Map<String,TransactedPolicy> mapPolicy=routeContext.lookupByType(TransactedPolicy.class);  if (mapPolicy != null && mapPolicy.size() == 1) {    TransactedPolicy policy=mapPolicy.values().iterator().next();    if (policy != null && policy instanceof JtaTransactionPolicy) {      transactionPolicy=(JtaTransactionPolicy)policy;    }  }  if (transactionPolicy == null) {    TransactedPolicy policy=routeContext.lookup(PROPAGATION_REQUIRED,TransactedPolicy.class);    if (policy != null && policy instanceof JtaTransactionPolicy) {      transactionPolicy=(JtaTransactionPolicy)policy;    }  }  if (transactionPolicy != null) {    LOG.debug("Found TransactionPolicy in registry to use: " + transactionPolicy);  }} @AT@ 3164 @LENGTH@ 1090
---UPD IfStatement@@if (mapPolicy != null && mapPolicy.size() == 1) {  TransactedPolicy policy=mapPolicy.values().iterator().next();  if (policy != null && policy instanceof JtaTransactionPolicy) {    transactionPolicy=((JtaTransactionPolicy)policy);  }} @TO@ if (mapPolicy != null && mapPolicy.size() == 1) {  TransactedPolicy policy=mapPolicy.values().iterator().next();  if (policy != null && policy instanceof JtaTransactionPolicy) {    transactionPolicy=(JtaTransactionPolicy)policy;  }} @AT@ 3434 @LENGTH@ 314
------UPD Block@@ThenBody:{  TransactedPolicy policy=mapPolicy.values().iterator().next();  if (policy != null && policy instanceof JtaTransactionPolicy) {    transactionPolicy=((JtaTransactionPolicy)policy);  }} @TO@ ThenBody:{  TransactedPolicy policy=mapPolicy.values().iterator().next();  if (policy != null && policy instanceof JtaTransactionPolicy) {    transactionPolicy=(JtaTransactionPolicy)policy;  }} @AT@ 3482 @LENGTH@ 266
---------UPD IfStatement@@if (policy != null && policy instanceof JtaTransactionPolicy) {  transactionPolicy=((JtaTransactionPolicy)policy);} @TO@ if (policy != null && policy instanceof JtaTransactionPolicy) {  transactionPolicy=(JtaTransactionPolicy)policy;} @AT@ 3580 @LENGTH@ 154
------------UPD Block@@ThenBody:{  transactionPolicy=((JtaTransactionPolicy)policy);} @TO@ ThenBody:{  transactionPolicy=(JtaTransactionPolicy)policy;} @AT@ 3642 @LENGTH@ 92
---------------UPD ExpressionStatement@@Assignment:transactionPolicy=((JtaTransactionPolicy)policy) @TO@ Assignment:transactionPolicy=(JtaTransactionPolicy)policy @AT@ 3664 @LENGTH@ 52
------------------UPD Assignment@@transactionPolicy=((JtaTransactionPolicy)policy) @TO@ transactionPolicy=(JtaTransactionPolicy)policy @AT@ 3664 @LENGTH@ 51
---------------------DEL ParenthesizedExpression@@((JtaTransactionPolicy)policy) @AT@ 3684 @LENGTH@ 31
------------------------DEL CastExpression@@(JtaTransactionPolicy)policy @AT@ 3685 @LENGTH@ 29
---------------------INS CastExpression@@(JtaTransactionPolicy)policy @TO@ Assignment@@transactionPolicy=((JtaTransactionPolicy)policy) @AT@ 4484 @LENGTH@ 29
------------------------MOV SimpleType@@JtaTransactionPolicy @TO@ CastExpression@@(JtaTransactionPolicy)policy @AT@ 3686 @LENGTH@ 20
------------------------MOV SimpleName@@policy @TO@ CastExpression@@(JtaTransactionPolicy)policy @AT@ 3708 @LENGTH@ 6
---UPD IfStatement@@if (transactionPolicy == null) {  TransactedPolicy policy=routeContext.lookup(PROPAGATION_REQUIRED,TransactedPolicy.class);  if (policy != null && policy instanceof JtaTransactionPolicy) {    transactionPolicy=((JtaTransactionPolicy)policy);  }} @TO@ if (transactionPolicy == null) {  TransactedPolicy policy=routeContext.lookup(PROPAGATION_REQUIRED,TransactedPolicy.class);  if (policy != null && policy instanceof JtaTransactionPolicy) {    transactionPolicy=(JtaTransactionPolicy)policy;  }} @AT@ 3762 @LENGTH@ 326
------UPD Block@@ThenBody:{  TransactedPolicy policy=routeContext.lookup(PROPAGATION_REQUIRED,TransactedPolicy.class);  if (policy != null && policy instanceof JtaTransactionPolicy) {    transactionPolicy=((JtaTransactionPolicy)policy);  }} @TO@ ThenBody:{  TransactedPolicy policy=routeContext.lookup(PROPAGATION_REQUIRED,TransactedPolicy.class);  if (policy != null && policy instanceof JtaTransactionPolicy) {    transactionPolicy=(JtaTransactionPolicy)policy;  }} @AT@ 3793 @LENGTH@ 295
---------UPD IfStatement@@if (policy != null && policy instanceof JtaTransactionPolicy) {  transactionPolicy=((JtaTransactionPolicy)policy);} @TO@ if (policy != null && policy instanceof JtaTransactionPolicy) {  transactionPolicy=(JtaTransactionPolicy)policy;} @AT@ 3920 @LENGTH@ 154
------------UPD Block@@ThenBody:{  transactionPolicy=((JtaTransactionPolicy)policy);} @TO@ ThenBody:{  transactionPolicy=(JtaTransactionPolicy)policy;} @AT@ 3982 @LENGTH@ 92
---------------UPD ExpressionStatement@@Assignment:transactionPolicy=((JtaTransactionPolicy)policy) @TO@ Assignment:transactionPolicy=(JtaTransactionPolicy)policy @AT@ 4004 @LENGTH@ 52
------------------UPD Assignment@@transactionPolicy=((JtaTransactionPolicy)policy) @TO@ transactionPolicy=(JtaTransactionPolicy)policy @AT@ 4004 @LENGTH@ 51
---------------------DEL ParenthesizedExpression@@((JtaTransactionPolicy)policy) @AT@ 4024 @LENGTH@ 31
------------------------DEL CastExpression@@(JtaTransactionPolicy)policy @AT@ 4025 @LENGTH@ 29
---------------------INS CastExpression@@(JtaTransactionPolicy)policy @TO@ Assignment@@transactionPolicy=((JtaTransactionPolicy)policy) @AT@ 4822 @LENGTH@ 29
------------------------MOV SimpleType@@JtaTransactionPolicy @TO@ CastExpression@@(JtaTransactionPolicy)policy @AT@ 4026 @LENGTH@ 20
------------------------MOV SimpleName@@policy @TO@ CastExpression@@(JtaTransactionPolicy)policy @AT@ 4048 @LENGTH@ 6


UPD ThrowStatement@@ClassInstanceCreation:new JwkException("Invalid JWT. Missing JOSE Header.") @TO@ ClassInstanceCreation:new InvalidTokenException("Invalid JWT. Missing JOSE Header.") @AT@ 1359 @LENGTH@ 60
---UPD ClassInstanceCreation@@JwkException["Invalid JWT. Missing JOSE Header."] @TO@ InvalidTokenException["Invalid JWT. Missing JOSE Header."] @AT@ 1365 @LENGTH@ 53
------UPD SimpleType@@JwkException @TO@ InvalidTokenException @AT@ 1369 @LENGTH@ 12


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && dataformatConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && dataformatConfiguration.getCustomizer().isEnabled(); @AT@ 5075 @LENGTH@ 177
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && dataformatConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && dataformatConfiguration.getCustomizer().isEnabled() @AT@ 5083 @LENGTH@ 168
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5083 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && dataformatConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && dataformatConfiguration.getCustomizer().isEnabled() @AT@ 5100 @LENGTH@ 151
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 5100 @LENGTH@ 72
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5100 @LENGTH@ 35
---------UPD MethodInvocation@@dataformatConfiguration.getConfigurer().isEnabled() @TO@ dataformatConfiguration.getCustomizer().isEnabled() @AT@ 5200 @LENGTH@ 51
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5200 @LENGTH@ 39


UPD ExpressionStatement@@MethodInvocation:exchangeMutator.filterClient(mockRest,withUser()).get().uri("/principal").exchange().expectStatus().isOk() @TO@ MethodInvocation:mockRest.filter(exchangeMutator.perClient(withUser())).get().uri("/principal").exchange().expectStatus().isOk() @AT@ 4555 @LENGTH@ 124
---UPD MethodInvocation@@exchangeMutator.filterClient(mockRest,withUser()).get().uri("/principal").exchange().expectStatus().isOk() @TO@ mockRest.filter(exchangeMutator.perClient(withUser())).get().uri("/principal").exchange().expectStatus().isOk() @AT@ 4555 @LENGTH@ 123
------UPD MethodInvocation@@MethodName:filterClient:[mockRest, withUser()] @TO@ MethodName:filter:[exchangeMutator.perClient(withUser())] @AT@ 4555 @LENGTH@ 50
---------INS MethodInvocation@@exchangeMutator.perClient(withUser()) @TO@ MethodInvocation@@MethodName:filterClient:[mockRest, withUser()] @AT@ 4572 @LENGTH@ 37
------------MOV SimpleName@@mockRest @TO@ MethodInvocation@@exchangeMutator.perClient(withUser()) @AT@ 4584 @LENGTH@ 8
------------INS SimpleName@@MethodName:perClient:[withUser()] @TO@ MethodInvocation@@exchangeMutator.perClient(withUser()) @AT@ 4588 @LENGTH@ 21
---------------INS MethodInvocation@@MethodName:withUser:[] @TO@ SimpleName@@MethodName:perClient:[withUser()] @AT@ 4598 @LENGTH@ 10
---------UPD SimpleName@@mockRest @TO@ Name:exchangeMutator @AT@ 4584 @LENGTH@ 8
---------DEL MethodInvocation@@MethodName:withUser:[] @AT@ 4594 @LENGTH@ 10
------UPD SimpleName@@Name:exchangeMutator @TO@ Name:mockRest @AT@ 4555 @LENGTH@ 15


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled(); @AT@ 5260 @LENGTH@ 160
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5268 @LENGTH@ 151
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5268 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5285 @LENGTH@ 134
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 5285 @LENGTH@ 64
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5285 @LENGTH@ 35
---------UPD MethodInvocation@@componentConfiguration.getConfigurer().isEnabled() @TO@ componentConfiguration.getCustomizer().isEnabled() @AT@ 5369 @LENGTH@ 50
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5369 @LENGTH@ 38


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<JavaSpaceComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<JavaSpaceComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5480 @LENGTH@ 342
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 5484 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5484 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  ComponentCustomizer<JavaSpaceComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ ThenBody:{  for (  ComponentCustomizer<JavaSpaceComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5540 @LENGTH@ 282
------UPD EnhancedForStatement@@for (ComponentCustomizer<JavaSpaceComponent> configurer : customizers) {  LOGGER.debug("Configure component {}, with configurer {}",component,configurer);  configurer.customize(component);} @TO@ for (ComponentCustomizer<JavaSpaceComponent> customizer : customizers) {  LOGGER.debug("Configure component {}, with customizer {}",component,customizer);  customizer.customize(component);} @AT@ 5554 @LENGTH@ 258
---------UPD SingleVariableDeclaration@@ComponentCustomizer<JavaSpaceComponent> configurer @TO@ ComponentCustomizer<JavaSpaceComponent> customizer @AT@ 5559 @LENGTH@ 50
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5599 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5643 @LENGTH@ 106
------------UPD MethodInvocation@@LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5643 @LENGTH@ 105
---------------UPD SimpleName@@MethodName:debug:["Configure component {}, with configurer {}", component, configurer] @TO@ MethodName:debug:["Configure component {}, with customizer {}", component, customizer] @AT@ 5650 @LENGTH@ 98
------------------UPD StringLiteral@@"Configure component {}, with configurer {}" @TO@ "Configure component {}, with customizer {}" @AT@ 5656 @LENGTH@ 44
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5737 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(component) @TO@ MethodInvocation:customizer.customize(component) @AT@ 5766 @LENGTH@ 32
------------UPD MethodInvocation@@configurer.customize(component) @TO@ customizer.customize(component) @AT@ 5766 @LENGTH@ 31
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5766 @LENGTH@ 10


UPD TypeDeclaration@@[public]FileHelper,  @TO@ [public, final]FileHelper,  @AT@ 1002 @LENGTH@ 965
---INS Modifier@@final @TO@ TypeDeclaration@@[public]FileHelper,  @AT@ 1009 @LENGTH@ 5


UPD Block@@ThenBody:{  String text=simple.getSubjectOrBody();  builder=builder.subject(text).body(SearchTermBuilder.Op.or,text);} @TO@ ThenBody:{  String text=simple.getSubjectOrBody();  SearchTermBuilder builderTemp=new SearchTermBuilder();  builderTemp=builderTemp.subject(text).body(SearchTermBuilder.Op.or,text);  builder=builder.and(builderTemp.build());} @AT@ 5414 @LENGTH@ 145
---UPD ExpressionStatement@@Assignment:builder=builder.subject(text).body(SearchTermBuilder.Op.or,text) @TO@ Assignment:builderTemp=builderTemp.subject(text).body(SearchTermBuilder.Op.or,text) @AT@ 5481 @LENGTH@ 68
------UPD Assignment@@builder=builder.subject(text).body(SearchTermBuilder.Op.or,text) @TO@ builderTemp=builderTemp.subject(text).body(SearchTermBuilder.Op.or,text) @AT@ 5481 @LENGTH@ 67
---------UPD SimpleName@@builder @TO@ builderTemp @AT@ 5481 @LENGTH@ 7
---------UPD MethodInvocation@@builder.subject(text).body(SearchTermBuilder.Op.or,text) @TO@ builderTemp.subject(text).body(SearchTermBuilder.Op.or,text) @AT@ 5491 @LENGTH@ 57
------------UPD SimpleName@@Name:builder @TO@ Name:builderTemp @AT@ 5491 @LENGTH@ 7
---INS VariableDeclarationStatement@@SearchTermBuilder builderTemp=new SearchTermBuilder(); @TO@ Block@@ThenBody:{  String text=simple.getSubjectOrBody();  builder=builder.subject(text).body(SearchTermBuilder.Op.or,text);} @AT@ 5481 @LENGTH@ 56
------INS SimpleType@@SearchTermBuilder @TO@ VariableDeclarationStatement@@SearchTermBuilder builderTemp=new SearchTermBuilder(); @AT@ 5481 @LENGTH@ 17
------INS VariableDeclarationFragment@@builderTemp=new SearchTermBuilder() @TO@ VariableDeclarationStatement@@SearchTermBuilder builderTemp=new SearchTermBuilder(); @AT@ 5499 @LENGTH@ 37
---------INS SimpleName@@builderTemp @TO@ VariableDeclarationFragment@@builderTemp=new SearchTermBuilder() @AT@ 5499 @LENGTH@ 11
---------INS ClassInstanceCreation@@SearchTermBuilder[] @TO@ VariableDeclarationFragment@@builderTemp=new SearchTermBuilder() @AT@ 5513 @LENGTH@ 23
------------INS New@@new @TO@ ClassInstanceCreation@@SearchTermBuilder[] @AT@ 5513 @LENGTH@ 3
------------INS SimpleType@@SearchTermBuilder @TO@ ClassInstanceCreation@@SearchTermBuilder[] @AT@ 5517 @LENGTH@ 17
---INS ExpressionStatement@@Assignment:builder=builder.and(builderTemp.build()) @TO@ Block@@ThenBody:{  String text=simple.getSubjectOrBody();  builder=builder.subject(text).body(SearchTermBuilder.Op.or,text);} @AT@ 5639 @LENGTH@ 43
------INS Assignment@@builder=builder.and(builderTemp.build()) @TO@ ExpressionStatement@@Assignment:builder=builder.and(builderTemp.build()) @AT@ 5639 @LENGTH@ 42
---------INS SimpleName@@builder @TO@ Assignment@@builder=builder.and(builderTemp.build()) @AT@ 5639 @LENGTH@ 7
---------INS Operator@@= @TO@ Assignment@@builder=builder.and(builderTemp.build()) @AT@ 5646 @LENGTH@ 1
---------INS MethodInvocation@@builder.and(builderTemp.build()) @TO@ Assignment@@builder=builder.and(builderTemp.build()) @AT@ 5649 @LENGTH@ 32
------------INS SimpleName@@Name:builder @TO@ MethodInvocation@@builder.and(builderTemp.build()) @AT@ 5649 @LENGTH@ 7
------------INS SimpleName@@MethodName:and:[builderTemp.build()] @TO@ MethodInvocation@@builder.and(builderTemp.build()) @AT@ 5657 @LENGTH@ 24
---------------INS MethodInvocation@@builderTemp.build() @TO@ SimpleName@@MethodName:and:[builderTemp.build()] @AT@ 5661 @LENGTH@ 19
------------------INS SimpleName@@Name:builderTemp @TO@ MethodInvocation@@builderTemp.build() @AT@ 5661 @LENGTH@ 11
------------------INS SimpleName@@MethodName:build:[] @TO@ MethodInvocation@@builderTemp.build() @AT@ 5673 @LENGTH@ 7


UPD ExpressionStatement@@MethodInvocation:realSkip(entriesRead * CFH_LEN - LFH_LEN) @TO@ MethodInvocation:realSkip((long)entriesRead * CFH_LEN - LFH_LEN) @AT@ 35117 @LENGTH@ 42
---UPD MethodInvocation@@realSkip(entriesRead * CFH_LEN - LFH_LEN) @TO@ realSkip((long)entriesRead * CFH_LEN - LFH_LEN) @AT@ 35117 @LENGTH@ 41
------UPD SimpleName@@MethodName:realSkip:[entriesRead * CFH_LEN - LFH_LEN] @TO@ MethodName:realSkip:[(long)entriesRead * CFH_LEN - LFH_LEN] @AT@ 35117 @LENGTH@ 41
---------UPD InfixExpression@@entriesRead * CFH_LEN - LFH_LEN @TO@ (long)entriesRead * CFH_LEN - LFH_LEN @AT@ 35126 @LENGTH@ 31
------------UPD InfixExpression@@entriesRead * CFH_LEN @TO@ (long)entriesRead * CFH_LEN @AT@ 35126 @LENGTH@ 21
---------------INS CastExpression@@(long)entriesRead @TO@ InfixExpression@@entriesRead * CFH_LEN @AT@ 35126 @LENGTH@ 18
------------------INS PrimitiveType@@long @TO@ CastExpression@@(long)entriesRead @AT@ 35127 @LENGTH@ 4
------------------INS SimpleName@@entriesRead @TO@ CastExpression@@(long)entriesRead @AT@ 35133 @LENGTH@ 11
---------------DEL SimpleName@@entriesRead @AT@ 35126 @LENGTH@ 11


UPD VariableDeclarationStatement@@EntityExchangeResult<byte[]> result=client.filter(basicAuthentication("rob","rob")).get().uri("/").exchange().expectStatus().isOk().expectHeader().valueMatches(HttpHeaders.CACHE_CONTROL,".+").expectBody().consumeAsStringWith(b -> assertThat(b).isEqualTo("ok")).returnResult(); @TO@ EntityExchangeResult<String> result=client.filter(basicAuthentication("rob","rob")).get().uri("/").exchange().expectStatus().isOk().expectHeader().valueMatches(HttpHeaders.CACHE_CONTROL,".+").expectBody(String.class).consumeWith(b -> assertThat(b.getResponseBody()).isEqualTo("ok")).returnResult(); @AT@ 3219 @LENGTH@ 312
---UPD ParameterizedType@@EntityExchangeResult<byte[]> @TO@ EntityExchangeResult<String> @AT@ 3219 @LENGTH@ 28
------DEL ArrayType@@byte[] @AT@ 3240 @LENGTH@ 6
---------DEL PrimitiveType@@byte @AT@ 3240 @LENGTH@ 4
------INS SimpleType@@String @TO@ ParameterizedType@@EntityExchangeResult<byte[]> @AT@ 3240 @LENGTH@ 6
---UPD VariableDeclarationFragment@@result=client.filter(basicAuthentication("rob","rob")).get().uri("/").exchange().expectStatus().isOk().expectHeader().valueMatches(HttpHeaders.CACHE_CONTROL,".+").expectBody().consumeAsStringWith(b -> assertThat(b).isEqualTo("ok")).returnResult() @TO@ result=client.filter(basicAuthentication("rob","rob")).get().uri("/").exchange().expectStatus().isOk().expectHeader().valueMatches(HttpHeaders.CACHE_CONTROL,".+").expectBody(String.class).consumeWith(b -> assertThat(b.getResponseBody()).isEqualTo("ok")).returnResult() @AT@ 3248 @LENGTH@ 282
------UPD MethodInvocation@@client.filter(basicAuthentication("rob","rob")).get().uri("/").exchange().expectStatus().isOk().expectHeader().valueMatches(HttpHeaders.CACHE_CONTROL,".+").expectBody().consumeAsStringWith(b -> assertThat(b).isEqualTo("ok")).returnResult() @TO@ client.filter(basicAuthentication("rob","rob")).get().uri("/").exchange().expectStatus().isOk().expectHeader().valueMatches(HttpHeaders.CACHE_CONTROL,".+").expectBody(String.class).consumeWith(b -> assertThat(b.getResponseBody()).isEqualTo("ok")).returnResult() @AT@ 3257 @LENGTH@ 273
---------UPD MethodInvocation@@MethodName:consumeAsStringWith:[b -> assertThat(b).isEqualTo("ok")] @TO@ MethodName:consumeWith:[b -> assertThat(b.getResponseBody()).isEqualTo("ok")] @AT@ 3257 @LENGTH@ 254
------------UPD LambdaExpression@@b -> assertThat(b).isEqualTo("ok") @TO@ b -> assertThat(b.getResponseBody()).isEqualTo("ok") @AT@ 3477 @LENGTH@ 33
---------------UPD MethodInvocation@@assertThat(b).isEqualTo("ok") @TO@ assertThat(b.getResponseBody()).isEqualTo("ok") @AT@ 3481 @LENGTH@ 29
------------------UPD MethodInvocation@@MethodName:assertThat:[b] @TO@ MethodName:assertThat:[b.getResponseBody()] @AT@ 3481 @LENGTH@ 13
---------------------UPD SimpleName@@b @TO@ Name:b @AT@ 3492 @LENGTH@ 1
---------------------INS MethodInvocation@@b.getResponseBody() @TO@ MethodInvocation@@MethodName:assertThat:[b] @AT@ 3496 @LENGTH@ 19
------------------------MOV SimpleName@@b @TO@ MethodInvocation@@b.getResponseBody() @AT@ 3492 @LENGTH@ 1
------------------------INS SimpleName@@MethodName:getResponseBody:[] @TO@ MethodInvocation@@b.getResponseBody() @AT@ 3498 @LENGTH@ 17
---------UPD MethodInvocation@@MethodName:expectBody:[] @TO@ MethodName:expectBody:[String.class] @AT@ 3257 @LENGTH@ 198
------------INS TypeLiteral@@String.class @TO@ MethodInvocation@@MethodName:expectBody:[] @AT@ 3454 @LENGTH@ 12


UPD ReturnStatement@@MethodInvocation:multiHashOrdered(parentHashCode(),1487,Objects.hashCode(callbackHandler)) @TO@ MethodInvocation:multiHashUnordered(parentHashCode(),1487,Objects.hashCode(callbackHandler)) @AT@ 2209 @LENGTH@ 83
---UPD MethodInvocation@@multiHashOrdered(parentHashCode(),1487,Objects.hashCode(callbackHandler)) @TO@ multiHashUnordered(parentHashCode(),1487,Objects.hashCode(callbackHandler)) @AT@ 2216 @LENGTH@ 75
------UPD SimpleName@@MethodName:multiHashOrdered:[parentHashCode(), 1487, Objects.hashCode(callbackHandler)] @TO@ MethodName:multiHashUnordered:[parentHashCode(), 1487, Objects.hashCode(callbackHandler)] @AT@ 2216 @LENGTH@ 75


UPD ExpressionStatement@@MethodInvocation:context.addStep(removeOperation,context.getResourceRegistration().getOperationHandler(PathAddress.pathAddress(ProtocolResourceDefinition.WILDCARD_PATH),ModelDescriptionConstants.REMOVE),context.getCurrentStage()) @TO@ MethodInvocation:context.addStep(removeOperation,context.getResourceRegistration().getOperationHandler(PathAddress.pathAddress(protocolPath),ModelDescriptionConstants.REMOVE),context.getCurrentStage()) @AT@ 16754 @LENGTH@ 216
---UPD MethodInvocation@@context.addStep(removeOperation,context.getResourceRegistration().getOperationHandler(PathAddress.pathAddress(ProtocolResourceDefinition.WILDCARD_PATH),ModelDescriptionConstants.REMOVE),context.getCurrentStage()) @TO@ context.addStep(removeOperation,context.getResourceRegistration().getOperationHandler(PathAddress.pathAddress(protocolPath),ModelDescriptionConstants.REMOVE),context.getCurrentStage()) @AT@ 16754 @LENGTH@ 215
------UPD SimpleName@@MethodName:addStep:[removeOperation, context.getResourceRegistration().getOperationHandler(PathAddress.pathAddress(ProtocolResourceDefinition.WILDCARD_PATH),ModelDescriptionConstants.REMOVE), context.getCurrentStage()] @TO@ MethodName:addStep:[removeOperation, context.getResourceRegistration().getOperationHandler(PathAddress.pathAddress(protocolPath),ModelDescriptionConstants.REMOVE), context.getCurrentStage()] @AT@ 16762 @LENGTH@ 207
---------UPD MethodInvocation@@context.getResourceRegistration().getOperationHandler(PathAddress.pathAddress(ProtocolResourceDefinition.WILDCARD_PATH),ModelDescriptionConstants.REMOVE) @TO@ context.getResourceRegistration().getOperationHandler(PathAddress.pathAddress(protocolPath),ModelDescriptionConstants.REMOVE) @AT@ 16787 @LENGTH@ 154
------------UPD SimpleName@@MethodName:getOperationHandler:[PathAddress.pathAddress(ProtocolResourceDefinition.WILDCARD_PATH), ModelDescriptionConstants.REMOVE] @TO@ MethodName:getOperationHandler:[PathAddress.pathAddress(protocolPath), ModelDescriptionConstants.REMOVE] @AT@ 16821 @LENGTH@ 120
---------------UPD MethodInvocation@@PathAddress.pathAddress(ProtocolResourceDefinition.WILDCARD_PATH) @TO@ PathAddress.pathAddress(protocolPath) @AT@ 16841 @LENGTH@ 65
------------------UPD SimpleName@@MethodName:pathAddress:[ProtocolResourceDefinition.WILDCARD_PATH] @TO@ MethodName:pathAddress:[protocolPath] @AT@ 16853 @LENGTH@ 53
---------------------INS SimpleName@@protocolPath @TO@ SimpleName@@MethodName:pathAddress:[ProtocolResourceDefinition.WILDCARD_PATH] @AT@ 16837 @LENGTH@ 12
---------------------DEL QualifiedName@@ProtocolResourceDefinition.WILDCARD_PATH @AT@ 16865 @LENGTH@ 40
------------------------DEL SimpleName@@ProtocolResourceDefinition @AT@ 16865 @LENGTH@ 26
------------------------DEL SimpleName@@WILDCARD_PATH @AT@ 16892 @LENGTH@ 13


UPD ExpressionStatement@@MethodInvocation:Assert.hasText(groupMemberAttributeName) @TO@ MethodInvocation:Assert.hasText(groupMemberAttributeName,"groupMemberAttributeName should have text") @AT@ 14622 @LENGTH@ 41
---UPD MethodInvocation@@Assert.hasText(groupMemberAttributeName) @TO@ Assert.hasText(groupMemberAttributeName,"groupMemberAttributeName should have text") @AT@ 14622 @LENGTH@ 40
------UPD SimpleName@@MethodName:hasText:[groupMemberAttributeName] @TO@ MethodName:hasText:[groupMemberAttributeName, "groupMemberAttributeName should have text"] @AT@ 14629 @LENGTH@ 33
---------INS StringLiteral@@"groupMemberAttributeName should have text" @TO@ SimpleName@@MethodName:hasText:[groupMemberAttributeName] @AT@ 14702 @LENGTH@ 43


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled(); @AT@ 5243 @LENGTH@ 160
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5251 @LENGTH@ 151
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5251 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5268 @LENGTH@ 134
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 5268 @LENGTH@ 64
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5268 @LENGTH@ 35
---------UPD MethodInvocation@@componentConfiguration.getConfigurer().isEnabled() @TO@ componentConfiguration.getCustomizer().isEnabled() @AT@ 5352 @LENGTH@ 50
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5352 @LENGTH@ 38


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<EhcacheComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<EhcacheComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5446 @LENGTH@ 340
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 5450 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5450 @LENGTH@ 14


UPD ReturnStatement@@ClassInstanceCreation:new MongoRepositoryBean<T>(mongoOperations,qualifiers,repositoryType,beanManager,getCustomImplementationDetector()) @TO@ ClassInstanceCreation:new MongoRepositoryBean<T>(mongoOperations,qualifiers,repositoryType,beanManager,Optional.ofNullable(getCustomImplementationDetector())) @AT@ 4171 @LENGTH@ 131
---UPD ClassInstanceCreation@@MongoRepositoryBean<T>[mongoOperations, qualifiers, repositoryType, beanManager, getCustomImplementationDetector()] @TO@ MongoRepositoryBean<T>[mongoOperations, qualifiers, repositoryType, beanManager, Optional.ofNullable(getCustomImplementationDetector())] @AT@ 4178 @LENGTH@ 123
------DEL MethodInvocation@@MethodName:getCustomImplementationDetector:[] @AT@ 4267 @LENGTH@ 33
------INS MethodInvocation@@Optional.ofNullable(getCustomImplementationDetector()) @TO@ ClassInstanceCreation@@MongoRepositoryBean<T>[mongoOperations, qualifiers, repositoryType, beanManager, getCustomImplementationDetector()] @AT@ 4294 @LENGTH@ 54
---------INS SimpleName@@Name:Optional @TO@ MethodInvocation@@Optional.ofNullable(getCustomImplementationDetector()) @AT@ 4294 @LENGTH@ 8
---------INS SimpleName@@MethodName:ofNullable:[getCustomImplementationDetector()] @TO@ MethodInvocation@@Optional.ofNullable(getCustomImplementationDetector()) @AT@ 4303 @LENGTH@ 45
------------INS MethodInvocation@@MethodName:getCustomImplementationDetector:[] @TO@ SimpleName@@MethodName:ofNullable:[getCustomImplementationDetector()] @AT@ 4314 @LENGTH@ 33


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && dataformatConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && dataformatConfiguration.getCustomizer().isEnabled(); @AT@ 5256 @LENGTH@ 177
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && dataformatConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && dataformatConfiguration.getCustomizer().isEnabled() @AT@ 5264 @LENGTH@ 168
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5264 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && dataformatConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && dataformatConfiguration.getCustomizer().isEnabled() @AT@ 5281 @LENGTH@ 151
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 5281 @LENGTH@ 72
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5281 @LENGTH@ 35
---------UPD MethodInvocation@@dataformatConfiguration.getConfigurer().isEnabled() @TO@ dataformatConfiguration.getCustomizer().isEnabled() @AT@ 5381 @LENGTH@ 51
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5381 @LENGTH@ 39


UPD VariableDeclarationStatement@@CommonBean<ConfigView> configViewBean=CommonBeanBuilder.newBuilder().beanClass(ConfigViewProducingExtension.class).scope(Singleton.class).addQualifier(DefaultLiteral.INSTANCE).createSupplier(() -> configView).addType(ConfigView.class).addType(Object.class).build(); @TO@ CommonBean<ConfigView> configViewBean=CommonBeanBuilder.newBuilder(ConfigView.class).beanClass(ConfigViewProducingExtension.class).scope(Singleton.class).addQualifier(DefaultLiteral.INSTANCE).createSupplier(() -> configView).addType(ConfigView.class).addType(Object.class).build(); @AT@ 1691 @LENGTH@ 393
---UPD VariableDeclarationFragment@@configViewBean=CommonBeanBuilder.newBuilder().beanClass(ConfigViewProducingExtension.class).scope(Singleton.class).addQualifier(DefaultLiteral.INSTANCE).createSupplier(() -> configView).addType(ConfigView.class).addType(Object.class).build() @TO@ configViewBean=CommonBeanBuilder.newBuilder(ConfigView.class).beanClass(ConfigViewProducingExtension.class).scope(Singleton.class).addQualifier(DefaultLiteral.INSTANCE).createSupplier(() -> configView).addType(ConfigView.class).addType(Object.class).build() @AT@ 1714 @LENGTH@ 369
------UPD MethodInvocation@@CommonBeanBuilder.newBuilder().beanClass(ConfigViewProducingExtension.class).scope(Singleton.class).addQualifier(DefaultLiteral.INSTANCE).createSupplier(() -> configView).addType(ConfigView.class).addType(Object.class).build() @TO@ CommonBeanBuilder.newBuilder(ConfigView.class).beanClass(ConfigViewProducingExtension.class).scope(Singleton.class).addQualifier(DefaultLiteral.INSTANCE).createSupplier(() -> configView).addType(ConfigView.class).addType(Object.class).build() @AT@ 1731 @LENGTH@ 352
---------UPD MethodInvocation@@MethodName:newBuilder:[] @TO@ MethodName:newBuilder:[ConfigView.class] @AT@ 1731 @LENGTH@ 30
------------INS TypeLiteral@@ConfigView.class @TO@ MethodInvocation@@MethodName:newBuilder:[] @AT@ 1792 @LENGTH@ 16


UPD Block@@ElseBody:if (method != null) {  boolean methodExists=false;  for (  JavaType declaredType : allDeclaredTypes) {    ClassOrInterfaceTypeDetails classDetails=getTypeLocationService().getTypeDetails(declaredType);    MemberDetails classMemberDetails=getMemberDetailsScanner().getMemberDetails(getClass().getName(),classDetails);    for (    MethodMetadata classMethod : classMemberDetails.getMethods()) {      if (methodMatch(classMethod,method)) {        pushedElements.addAll(pushInMethod(declaredType,classMethod,writeOnDisk));        methodExists=true;      }    }  }  Validate.isTrue(methodExists,String.format("ERROR: No methods found on entire project that matches with '%s' expression.",method));} else if (specifiedPackage != null) {  for (  JavaType declaredType : allDeclaredTypes) {    if (declaredType.getPackage().equals(specifiedPackage)) {      pushedElements.addAll(pushInClass(declaredType,writeOnDisk,true));    }  }} else {  LOGGER.log(Level.WARNING,"ERROR: You must specify at least one parameter. ");} @TO@ ElseBody:if (method != null) {  boolean methodExists=false;  for (  JavaType declaredType : allDeclaredTypes) {    ClassOrInterfaceTypeDetails classDetails=getTypeLocationService().getTypeDetails(declaredType);    MemberDetails classMemberDetails=getMemberDetailsScanner().getMemberDetails(getClass().getName(),classDetails);    for (    MethodMetadata classMethod : classMemberDetails.getMethods()) {      if (methodMatch(classMethod,method)) {        pushedElements.addAll(pushInMethod(declaredType,classMethod,writeOnDisk));        methodExists=true;      }    }    getFileManager().scan();  }  Validate.isTrue(methodExists,String.format("ERROR: No methods found on entire project that matches with '%s' expression.",method));} else if (specifiedPackage != null) {  for (  JavaType declaredType : allDeclaredTypes) {    if (declaredType.getPackage().equals(specifiedPackage)) {      pushedElements.addAll(pushInClass(declaredType,writeOnDisk,true));    }  }} else {  LOGGER.log(Level.WARNING,"ERROR: You must specify at least one parameter. ");} @AT@ 7688 @LENGTH@ 1234
---UPD IfStatement@@if (method != null) {  boolean methodExists=false;  for (  JavaType declaredType : allDeclaredTypes) {    ClassOrInterfaceTypeDetails classDetails=getTypeLocationService().getTypeDetails(declaredType);    MemberDetails classMemberDetails=getMemberDetailsScanner().getMemberDetails(getClass().getName(),classDetails);    for (    MethodMetadata classMethod : classMemberDetails.getMethods()) {      if (methodMatch(classMethod,method)) {        pushedElements.addAll(pushInMethod(declaredType,classMethod,writeOnDisk));        methodExists=true;      }    }  }  Validate.isTrue(methodExists,String.format("ERROR: No methods found on entire project that matches with '%s' expression.",method));} else if (specifiedPackage != null) {  for (  JavaType declaredType : allDeclaredTypes) {    if (declaredType.getPackage().equals(specifiedPackage)) {      pushedElements.addAll(pushInClass(declaredType,writeOnDisk,true));    }  }} else {  LOGGER.log(Level.WARNING,"ERROR: You must specify at least one parameter. ");} @TO@ if (method != null) {  boolean methodExists=false;  for (  JavaType declaredType : allDeclaredTypes) {    ClassOrInterfaceTypeDetails classDetails=getTypeLocationService().getTypeDetails(declaredType);    MemberDetails classMemberDetails=getMemberDetailsScanner().getMemberDetails(getClass().getName(),classDetails);    for (    MethodMetadata classMethod : classMemberDetails.getMethods()) {      if (methodMatch(classMethod,method)) {        pushedElements.addAll(pushInMethod(declaredType,classMethod,writeOnDisk));        methodExists=true;      }    }    getFileManager().scan();  }  Validate.isTrue(methodExists,String.format("ERROR: No methods found on entire project that matches with '%s' expression.",method));} else if (specifiedPackage != null) {  for (  JavaType declaredType : allDeclaredTypes) {    if (declaredType.getPackage().equals(specifiedPackage)) {      pushedElements.addAll(pushInClass(declaredType,writeOnDisk,true));    }  }} else {  LOGGER.log(Level.WARNING,"ERROR: You must specify at least one parameter. ");} @AT@ 7688 @LENGTH@ 1234
------UPD Block@@ThenBody:{  boolean methodExists=false;  for (  JavaType declaredType : allDeclaredTypes) {    ClassOrInterfaceTypeDetails classDetails=getTypeLocationService().getTypeDetails(declaredType);    MemberDetails classMemberDetails=getMemberDetailsScanner().getMemberDetails(getClass().getName(),classDetails);    for (    MethodMetadata classMethod : classMemberDetails.getMethods()) {      if (methodMatch(classMethod,method)) {        pushedElements.addAll(pushInMethod(declaredType,classMethod,writeOnDisk));        methodExists=true;      }    }  }  Validate.isTrue(methodExists,String.format("ERROR: No methods found on entire project that matches with '%s' expression.",method));} @TO@ ThenBody:{  boolean methodExists=false;  for (  JavaType declaredType : allDeclaredTypes) {    ClassOrInterfaceTypeDetails classDetails=getTypeLocationService().getTypeDetails(declaredType);    MemberDetails classMemberDetails=getMemberDetailsScanner().getMemberDetails(getClass().getName(),classDetails);    for (    MethodMetadata classMethod : classMemberDetails.getMethods()) {      if (methodMatch(classMethod,method)) {        pushedElements.addAll(pushInMethod(declaredType,classMethod,writeOnDisk));        methodExists=true;      }    }    getFileManager().scan();  }  Validate.isTrue(methodExists,String.format("ERROR: No methods found on entire project that matches with '%s' expression.",method));} @AT@ 7708 @LENGTH@ 855
---------UPD EnhancedForStatement@@for (JavaType declaredType : allDeclaredTypes) {  ClassOrInterfaceTypeDetails classDetails=getTypeLocationService().getTypeDetails(declaredType);  MemberDetails classMemberDetails=getMemberDetailsScanner().getMemberDetails(getClass().getName(),classDetails);  for (  MethodMetadata classMethod : classMemberDetails.getMethods()) {    if (methodMatch(classMethod,method)) {      pushedElements.addAll(pushInMethod(declaredType,classMethod,writeOnDisk));      methodExists=true;    }  }} @TO@ for (JavaType declaredType : allDeclaredTypes) {  ClassOrInterfaceTypeDetails classDetails=getTypeLocationService().getTypeDetails(declaredType);  MemberDetails classMemberDetails=getMemberDetailsScanner().getMemberDetails(getClass().getName(),classDetails);  for (  MethodMetadata classMethod : classMemberDetails.getMethods()) {    if (methodMatch(classMethod,method)) {      pushedElements.addAll(pushInMethod(declaredType,classMethod,writeOnDisk));      methodExists=true;    }  }  getFileManager().scan();} @AT@ 7824 @LENGTH@ 580
------------INS ExpressionStatement@@MethodInvocation:getFileManager().scan() @TO@ EnhancedForStatement@@for (JavaType declaredType : allDeclaredTypes) {  ClassOrInterfaceTypeDetails classDetails=getTypeLocationService().getTypeDetails(declaredType);  MemberDetails classMemberDetails=getMemberDetailsScanner().getMemberDetails(getClass().getName(),classDetails);  for (  MethodMetadata classMethod : classMemberDetails.getMethods()) {    if (methodMatch(classMethod,method)) {      pushedElements.addAll(pushInMethod(declaredType,classMethod,writeOnDisk));      methodExists=true;    }  }} @AT@ 8446 @LENGTH@ 24
---------------INS MethodInvocation@@getFileManager().scan() @TO@ ExpressionStatement@@MethodInvocation:getFileManager().scan() @AT@ 8446 @LENGTH@ 23
------------------INS MethodInvocation@@MethodName:getFileManager:[] @TO@ MethodInvocation@@getFileManager().scan() @AT@ 8446 @LENGTH@ 16
------------------INS SimpleName@@MethodName:scan:[] @TO@ MethodInvocation@@getFileManager().scan() @AT@ 8463 @LENGTH@ 6
---UPD IfStatement@@if (method != null) {  boolean methodExists=false;  for (  JavaType declaredType : allDeclaredTypes) {    ClassOrInterfaceTypeDetails classDetails=getTypeLocationService().getTypeDetails(declaredType);    MemberDetails classMemberDetails=getMemberDetailsScanner().getMemberDetails(getClass().getName(),classDetails);    for (    MethodMetadata classMethod : classMemberDetails.getMethods()) {      if (methodMatch(classMethod,method)) {        pushedElements.addAll(pushInMethod(declaredType,classMethod,writeOnDisk));        methodExists=true;      }    }  }  Validate.isTrue(methodExists,String.format("ERROR: No methods found on entire project that matches with '%s' expression.",method));} else if (specifiedPackage != null) {  for (  JavaType declaredType : allDeclaredTypes) {    if (declaredType.getPackage().equals(specifiedPackage)) {      pushedElements.addAll(pushInClass(declaredType,writeOnDisk,true));    }  }} else {  LOGGER.log(Level.WARNING,"ERROR: You must specify at least one parameter. ");} @TO@ if (method != null) {  boolean methodExists=false;  for (  JavaType declaredType : allDeclaredTypes) {    ClassOrInterfaceTypeDetails classDetails=getTypeLocationService().getTypeDetails(declaredType);    MemberDetails classMemberDetails=getMemberDetailsScanner().getMemberDetails(getClass().getName(),classDetails);    for (    MethodMetadata classMethod : classMemberDetails.getMethods()) {      if (methodMatch(classMethod,method)) {        pushedElements.addAll(pushInMethod(declaredType,classMethod,writeOnDisk));        methodExists=true;      }    }    getFileManager().scan();  }  Validate.isTrue(methodExists,String.format("ERROR: No methods found on entire project that matches with '%s' expression.",method));} else if (specifiedPackage != null) {  for (  JavaType declaredType : allDeclaredTypes) {    if (declaredType.getPackage().equals(specifiedPackage)) {      pushedElements.addAll(pushInClass(declaredType,writeOnDisk,true));    }  }} else {  LOGGER.log(Level.WARNING,"ERROR: You must specify at least one parameter. ");} @AT@ 7688 @LENGTH@ 1234
------UPD Block@@ThenBody:{  boolean methodExists=false;  for (  JavaType declaredType : allDeclaredTypes) {    ClassOrInterfaceTypeDetails classDetails=getTypeLocationService().getTypeDetails(declaredType);    MemberDetails classMemberDetails=getMemberDetailsScanner().getMemberDetails(getClass().getName(),classDetails);    for (    MethodMetadata classMethod : classMemberDetails.getMethods()) {      if (methodMatch(classMethod,method)) {        pushedElements.addAll(pushInMethod(declaredType,classMethod,writeOnDisk));        methodExists=true;      }    }  }  Validate.isTrue(methodExists,String.format("ERROR: No methods found on entire project that matches with '%s' expression.",method));} @TO@ ThenBody:{  boolean methodExists=false;  for (  JavaType declaredType : allDeclaredTypes) {    ClassOrInterfaceTypeDetails classDetails=getTypeLocationService().getTypeDetails(declaredType);    MemberDetails classMemberDetails=getMemberDetailsScanner().getMemberDetails(getClass().getName(),classDetails);    for (    MethodMetadata classMethod : classMemberDetails.getMethods()) {      if (methodMatch(classMethod,method)) {        pushedElements.addAll(pushInMethod(declaredType,classMethod,writeOnDisk));        methodExists=true;      }    }    getFileManager().scan();  }  Validate.isTrue(methodExists,String.format("ERROR: No methods found on entire project that matches with '%s' expression.",method));} @AT@ 7708 @LENGTH@ 855
---------UPD EnhancedForStatement@@for (JavaType declaredType : allDeclaredTypes) {  ClassOrInterfaceTypeDetails classDetails=getTypeLocationService().getTypeDetails(declaredType);  MemberDetails classMemberDetails=getMemberDetailsScanner().getMemberDetails(getClass().getName(),classDetails);  for (  MethodMetadata classMethod : classMemberDetails.getMethods()) {    if (methodMatch(classMethod,method)) {      pushedElements.addAll(pushInMethod(declaredType,classMethod,writeOnDisk));      methodExists=true;    }  }} @TO@ for (JavaType declaredType : allDeclaredTypes) {  ClassOrInterfaceTypeDetails classDetails=getTypeLocationService().getTypeDetails(declaredType);  MemberDetails classMemberDetails=getMemberDetailsScanner().getMemberDetails(getClass().getName(),classDetails);  for (  MethodMetadata classMethod : classMemberDetails.getMethods()) {    if (methodMatch(classMethod,method)) {      pushedElements.addAll(pushInMethod(declaredType,classMethod,writeOnDisk));      methodExists=true;    }  }  getFileManager().scan();} @AT@ 7824 @LENGTH@ 580
------------INS ExpressionStatement@@MethodInvocation:getFileManager().scan() @TO@ EnhancedForStatement@@for (JavaType declaredType : allDeclaredTypes) {  ClassOrInterfaceTypeDetails classDetails=getTypeLocationService().getTypeDetails(declaredType);  MemberDetails classMemberDetails=getMemberDetailsScanner().getMemberDetails(getClass().getName(),classDetails);  for (  MethodMetadata classMethod : classMemberDetails.getMethods()) {    if (methodMatch(classMethod,method)) {      pushedElements.addAll(pushInMethod(declaredType,classMethod,writeOnDisk));      methodExists=true;    }  }} @AT@ 8446 @LENGTH@ 24
---------------INS MethodInvocation@@getFileManager().scan() @TO@ ExpressionStatement@@MethodInvocation:getFileManager().scan() @AT@ 8446 @LENGTH@ 23
------------------INS MethodInvocation@@MethodName:getFileManager:[] @TO@ MethodInvocation@@getFileManager().scan() @AT@ 8446 @LENGTH@ 16
------------------INS SimpleName@@MethodName:scan:[] @TO@ MethodInvocation@@getFileManager().scan() @AT@ 8463 @LENGTH@ 6


INS FieldDeclaration@@static, final, List<String>, [APPEND_CHARACTERS=Arrays.asList("-","~")] @TO@ TypeDeclaration@@[public]PathToSpEL,  @AT@ 1164 @LENGTH@ 70
---INS Modifier@@static @TO@ FieldDeclaration@@static, final, List<String>, [APPEND_CHARACTERS=Arrays.asList("-","~")] @AT@ 1164 @LENGTH@ 6
---INS Modifier@@final @TO@ FieldDeclaration@@static, final, List<String>, [APPEND_CHARACTERS=Arrays.asList("-","~")] @AT@ 1171 @LENGTH@ 5
---INS ParameterizedType@@List<String> @TO@ FieldDeclaration@@static, final, List<String>, [APPEND_CHARACTERS=Arrays.asList("-","~")] @AT@ 1177 @LENGTH@ 12
------INS SimpleType@@List @TO@ ParameterizedType@@List<String> @AT@ 1177 @LENGTH@ 4
------INS SimpleType@@String @TO@ ParameterizedType@@List<String> @AT@ 1182 @LENGTH@ 6
---INS VariableDeclarationFragment@@APPEND_CHARACTERS=Arrays.asList("-","~") @TO@ FieldDeclaration@@static, final, List<String>, [APPEND_CHARACTERS=Arrays.asList("-","~")] @AT@ 1190 @LENGTH@ 43
------INS SimpleName@@APPEND_CHARACTERS @TO@ VariableDeclarationFragment@@APPEND_CHARACTERS=Arrays.asList("-","~") @AT@ 1190 @LENGTH@ 17
------INS MethodInvocation@@Arrays.asList("-","~") @TO@ VariableDeclarationFragment@@APPEND_CHARACTERS=Arrays.asList("-","~") @AT@ 1210 @LENGTH@ 23
---------INS SimpleName@@Name:Arrays @TO@ MethodInvocation@@Arrays.asList("-","~") @AT@ 1210 @LENGTH@ 6
---------INS SimpleName@@MethodName:asList:["-", "~"] @TO@ MethodInvocation@@Arrays.asList("-","~") @AT@ 1217 @LENGTH@ 16
------------INS StringLiteral@@"-" @TO@ SimpleName@@MethodName:asList:["-", "~"] @AT@ 1224 @LENGTH@ 3
------------INS StringLiteral@@"~" @TO@ SimpleName@@MethodName:asList:["-", "~"] @AT@ 1229 @LENGTH@ 3


UPD ReturnStatement@@MethodInvocation:flag.get() @TO@ MethodInvocation:flag.isCancelFlagSet() @AT@ 4724 @LENGTH@ 18
---UPD MethodInvocation@@flag.get() @TO@ flag.isCancelFlagSet() @AT@ 4731 @LENGTH@ 10
------UPD SimpleName@@MethodName:get:[] @TO@ MethodName:isCancelFlagSet:[] @AT@ 4736 @LENGTH@ 5


INS IfStatement@@if (fop.getConf().isMmTable()) {  LOG.warn("Currently, inferring buckets is not going to work for MM tables (by design).");} @TO@ MethodDeclaration@@public, Object, MethodName:process, Node nd, Stack<Node> stack, NodeProcessorCtx procCtx, Object... nodeOutputs, SemanticException,  @AT@ 18100 @LENGTH@ 206
---INS MethodInvocation@@fop.getConf().isMmTable() @TO@ IfStatement@@if (fop.getConf().isMmTable()) {  LOG.warn("Currently, inferring buckets is not going to work for MM tables (by design).");} @AT@ 18104 @LENGTH@ 25
------INS MethodInvocation@@MethodName:getConf:[] @TO@ MethodInvocation@@fop.getConf().isMmTable() @AT@ 18104 @LENGTH@ 13
------INS SimpleName@@Name:fop @TO@ MethodInvocation@@fop.getConf().isMmTable() @AT@ 18104 @LENGTH@ 3
------INS SimpleName@@MethodName:isMmTable:[] @TO@ MethodInvocation@@fop.getConf().isMmTable() @AT@ 18118 @LENGTH@ 11
---INS Block@@ThenBody:{  LOG.warn("Currently, inferring buckets is not going to work for MM tables (by design).");} @TO@ IfStatement@@if (fop.getConf().isMmTable()) {  LOG.warn("Currently, inferring buckets is not going to work for MM tables (by design).");} @AT@ 18131 @LENGTH@ 175
------INS ExpressionStatement@@MethodInvocation:LOG.warn("Currently, inferring buckets is not going to work for MM tables (by design).") @TO@ Block@@ThenBody:{  LOG.warn("Currently, inferring buckets is not going to work for MM tables (by design).");} @AT@ 18209 @LENGTH@ 89
---------INS MethodInvocation@@LOG.warn("Currently, inferring buckets is not going to work for MM tables (by design).") @TO@ ExpressionStatement@@MethodInvocation:LOG.warn("Currently, inferring buckets is not going to work for MM tables (by design).") @AT@ 18209 @LENGTH@ 88
------------INS SimpleName@@Name:LOG @TO@ MethodInvocation@@LOG.warn("Currently, inferring buckets is not going to work for MM tables (by design).") @AT@ 18209 @LENGTH@ 3
------------INS SimpleName@@MethodName:warn:["Currently, inferring buckets is not going to work for MM tables (by design)."] @TO@ MethodInvocation@@LOG.warn("Currently, inferring buckets is not going to work for MM tables (by design).") @AT@ 18213 @LENGTH@ 84
---------------INS StringLiteral@@"Currently, inferring buckets is not going to work for MM tables (by design)." @TO@ SimpleName@@MethodName:warn:["Currently, inferring buckets is not going to work for MM tables (by design)."] @AT@ 18218 @LENGTH@ 78


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<DockerComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<DockerComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5429 @LENGTH@ 339
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 5433 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5433 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  ComponentCustomizer<DockerComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ ThenBody:{  for (  ComponentCustomizer<DockerComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5489 @LENGTH@ 279
------UPD EnhancedForStatement@@for (ComponentCustomizer<DockerComponent> configurer : customizers) {  LOGGER.debug("Configure component {}, with configurer {}",component,configurer);  configurer.customize(component);} @TO@ for (ComponentCustomizer<DockerComponent> customizer : customizers) {  LOGGER.debug("Configure component {}, with customizer {}",component,customizer);  customizer.customize(component);} @AT@ 5503 @LENGTH@ 255
---------UPD SingleVariableDeclaration@@ComponentCustomizer<DockerComponent> configurer @TO@ ComponentCustomizer<DockerComponent> customizer @AT@ 5508 @LENGTH@ 47
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5545 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5589 @LENGTH@ 106
------------UPD MethodInvocation@@LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5589 @LENGTH@ 105
---------------UPD SimpleName@@MethodName:debug:["Configure component {}, with configurer {}", component, configurer] @TO@ MethodName:debug:["Configure component {}, with customizer {}", component, customizer] @AT@ 5596 @LENGTH@ 98
------------------UPD StringLiteral@@"Configure component {}, with configurer {}" @TO@ "Configure component {}, with customizer {}" @AT@ 5602 @LENGTH@ 44
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5683 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(component) @TO@ MethodInvocation:customizer.customize(component) @AT@ 5712 @LENGTH@ 32
------------UPD MethodInvocation@@configurer.customize(component) @TO@ customizer.customize(component) @AT@ 5712 @LENGTH@ 31
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5712 @LENGTH@ 10


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled(); @AT@ 5277 @LENGTH@ 160
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5285 @LENGTH@ 151
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5285 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5302 @LENGTH@ 134
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 5302 @LENGTH@ 64
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5302 @LENGTH@ 35
---------UPD MethodInvocation@@componentConfiguration.getConfigurer().isEnabled() @TO@ componentConfiguration.getCustomizer().isEnabled() @AT@ 5386 @LENGTH@ 50
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5386 @LENGTH@ 38


UPD TypeDeclaration@@[public]StageConfigTest,  @TO@ [@SuppressWarnings("deprecation"), public]StageConfigTest,  @AT@ 342 @LENGTH@ 780
---INS SingleMemberAnnotation@@@SuppressWarnings("deprecation") @TO@ TypeDeclaration@@[public]StageConfigTest,  @AT@ 342 @LENGTH@ 32


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && dataformatConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && dataformatConfiguration.getCustomizer().isEnabled(); @AT@ 5155 @LENGTH@ 177
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && dataformatConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && dataformatConfiguration.getCustomizer().isEnabled() @AT@ 5163 @LENGTH@ 168
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5163 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && dataformatConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && dataformatConfiguration.getCustomizer().isEnabled() @AT@ 5180 @LENGTH@ 151
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 5180 @LENGTH@ 72
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5180 @LENGTH@ 35
---------UPD MethodInvocation@@dataformatConfiguration.getConfigurer().isEnabled() @TO@ dataformatConfiguration.getCustomizer().isEnabled() @AT@ 5280 @LENGTH@ 51
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5280 @LENGTH@ 39


UPD VariableDeclarationStatement@@final ObjectIdentity objectIdentity=new ObjectIdentityImpl(Contact.class,new Long(i)); @TO@ final ObjectIdentity objectIdentity=new ObjectIdentityImpl(Contact.class,Long.valueOf(i)); @AT@ 9531 @LENGTH@ 94
---UPD VariableDeclarationFragment@@objectIdentity=new ObjectIdentityImpl(Contact.class,new Long(i)) @TO@ objectIdentity=new ObjectIdentityImpl(Contact.class,Long.valueOf(i)) @AT@ 9552 @LENGTH@ 72
------UPD ClassInstanceCreation@@ObjectIdentityImpl[Contact.class, new Long(i)] @TO@ ObjectIdentityImpl[Contact.class, Long.valueOf(i)] @AT@ 9569 @LENGTH@ 55
---------INS MethodInvocation@@Long.valueOf(i) @TO@ ClassInstanceCreation@@ObjectIdentityImpl[Contact.class, new Long(i)] @AT@ 9612 @LENGTH@ 15
------------INS SimpleName@@Name:Long @TO@ MethodInvocation@@Long.valueOf(i) @AT@ 9612 @LENGTH@ 4
------------INS SimpleName@@MethodName:valueOf:[i] @TO@ MethodInvocation@@Long.valueOf(i) @AT@ 9617 @LENGTH@ 10
---------------INS SimpleName@@i @TO@ SimpleName@@MethodName:valueOf:[i] @AT@ 9625 @LENGTH@ 1
---------DEL ClassInstanceCreation@@Long[i] @AT@ 9612 @LENGTH@ 11
------------DEL New@@new @AT@ 9612 @LENGTH@ 3
------------DEL SimpleType@@Long @AT@ 9616 @LENGTH@ 4
------------DEL SimpleName@@i @AT@ 9621 @LENGTH@ 1


UPD FieldDeclaration@@public, static, final, JavaType, [ROO_LINK_FACTORY=new JavaType("org.springframework.roo.addon.web.mvc.exceptions.annotations.RooLinkFactory")] @TO@ public, static, final, JavaType, [ROO_LINK_FACTORY=new JavaType("org.springframework.roo.addon.web.mvc.thymeleaf.annotations.RooLinkFactory")] @AT@ 7855 @LENGTH@ 147
---UPD VariableDeclarationFragment@@ROO_LINK_FACTORY=new JavaType("org.springframework.roo.addon.web.mvc.exceptions.annotations.RooLinkFactory") @TO@ ROO_LINK_FACTORY=new JavaType("org.springframework.roo.addon.web.mvc.thymeleaf.annotations.RooLinkFactory") @AT@ 7884 @LENGTH@ 117
------UPD ClassInstanceCreation@@JavaType["org.springframework.roo.addon.web.mvc.exceptions.annotations.RooLinkFactory"] @TO@ JavaType["org.springframework.roo.addon.web.mvc.thymeleaf.annotations.RooLinkFactory"] @AT@ 7903 @LENGTH@ 98
---------UPD StringLiteral@@"org.springframework.roo.addon.web.mvc.exceptions.annotations.RooLinkFactory" @TO@ "org.springframework.roo.addon.web.mvc.thymeleaf.annotations.RooLinkFactory" @AT@ 7923 @LENGTH@ 77


UPD VariableDeclarationStatement@@int readed; @TO@ int read; @AT@ 30723 @LENGTH@ 11
---UPD VariableDeclarationFragment@@readed @TO@ read @AT@ 30727 @LENGTH@ 6
------UPD SimpleName@@readed @TO@ read @AT@ 30727 @LENGTH@ 6


INS ExpressionStatement@@MethodInvocation:this.template.stop() @TO@ MethodDeclaration@@public, void, MethodName:cleanup, Exception,  @AT@ 2005 @LENGTH@ 21
---INS MethodInvocation@@this.template.stop() @TO@ ExpressionStatement@@MethodInvocation:this.template.stop() @AT@ 2005 @LENGTH@ 20
------INS FieldAccess@@this.template @TO@ MethodInvocation@@this.template.stop() @AT@ 2005 @LENGTH@ 13
---------INS ThisExpression@@this @TO@ FieldAccess@@this.template @AT@ 2005 @LENGTH@ 4
---------INS SimpleName@@template @TO@ FieldAccess@@this.template @AT@ 2010 @LENGTH@ 8
------INS SimpleName@@MethodName:stop:[] @TO@ MethodInvocation@@this.template.stop() @AT@ 2019 @LENGTH@ 6


UPD ExpressionStatement@@MethodInvocation:doReturn(this.auditor).when(this.auditorAware).getCurrentAuditor() @TO@ MethodInvocation:doReturn(Optional.of(this.auditor)).when(this.auditorAware).getCurrentAuditor() @AT@ 2804 @LENGTH@ 67
---UPD MethodInvocation@@doReturn(this.auditor).when(this.auditorAware).getCurrentAuditor() @TO@ doReturn(Optional.of(this.auditor)).when(this.auditorAware).getCurrentAuditor() @AT@ 2804 @LENGTH@ 66
------UPD MethodInvocation@@MethodName:doReturn:[this.auditor] @TO@ MethodName:doReturn:[Optional.of(this.auditor)] @AT@ 2804 @LENGTH@ 22
---------DEL FieldAccess@@this.auditor @AT@ 2813 @LENGTH@ 12
---------INS MethodInvocation@@Optional.of(this.auditor) @TO@ MethodInvocation@@MethodName:doReturn:[this.auditor] @AT@ 2841 @LENGTH@ 25
------------INS SimpleName@@Name:Optional @TO@ MethodInvocation@@Optional.of(this.auditor) @AT@ 2841 @LENGTH@ 8
------------INS SimpleName@@MethodName:of:[this.auditor] @TO@ MethodInvocation@@Optional.of(this.auditor) @AT@ 2850 @LENGTH@ 16
---------------INS FieldAccess@@this.auditor @TO@ SimpleName@@MethodName:of:[this.auditor] @AT@ 2853 @LENGTH@ 12
------------------MOV ThisExpression@@this @TO@ FieldAccess@@this.auditor @AT@ 2813 @LENGTH@ 4
------------------MOV SimpleName@@auditor @TO@ FieldAccess@@this.auditor @AT@ 2818 @LENGTH@ 7


UPD ExpressionStatement@@Assignment:shifts+=keyShifts[i] @TO@ Assignment:shifts+=keyShifts[i] & 0xff @AT@ 21224 @LENGTH@ 23
---UPD Assignment@@shifts+=keyShifts[i] @TO@ shifts+=keyShifts[i] & 0xff @AT@ 21224 @LENGTH@ 22
------INS InfixExpression@@keyShifts[i] & 0xff @TO@ Assignment@@shifts+=keyShifts[i] @AT@ 21234 @LENGTH@ 19
---------INS ArrayAccess@@keyShifts[i] @TO@ InfixExpression@@keyShifts[i] & 0xff @AT@ 21234 @LENGTH@ 12
------------MOV SimpleName@@keyShifts @TO@ ArrayAccess@@keyShifts[i] @AT@ 21234 @LENGTH@ 9
------------MOV SimpleName@@i @TO@ ArrayAccess@@keyShifts[i] @AT@ 21244 @LENGTH@ 1
---------INS Operator@@& @TO@ InfixExpression@@keyShifts[i] & 0xff @AT@ 21246 @LENGTH@ 1
---------INS NumberLiteral@@0xff @TO@ InfixExpression@@keyShifts[i] & 0xff @AT@ 21249 @LENGTH@ 4
------DEL ArrayAccess@@keyShifts[i] @AT@ 21234 @LENGTH@ 12


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled(); @AT@ 5226 @LENGTH@ 160
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5234 @LENGTH@ 151
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5234 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5251 @LENGTH@ 134
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 5251 @LENGTH@ 64
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5251 @LENGTH@ 35
---------UPD MethodInvocation@@componentConfiguration.getConfigurer().isEnabled() @TO@ componentConfiguration.getCustomizer().isEnabled() @AT@ 5335 @LENGTH@ 50
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5335 @LENGTH@ 38


UPD VariableDeclarationStatement@@final boolean hasRefreshToken=ObjectHelper.isEmpty(refreshToken); @TO@ final boolean hasRefreshToken=ObjectHelper.isNotEmpty(refreshToken); @AT@ 5369 @LENGTH@ 67
---UPD VariableDeclarationFragment@@hasRefreshToken=ObjectHelper.isEmpty(refreshToken) @TO@ hasRefreshToken=ObjectHelper.isNotEmpty(refreshToken) @AT@ 5383 @LENGTH@ 52
------UPD MethodInvocation@@ObjectHelper.isEmpty(refreshToken) @TO@ ObjectHelper.isNotEmpty(refreshToken) @AT@ 5401 @LENGTH@ 34
---------UPD SimpleName@@MethodName:isEmpty:[refreshToken] @TO@ MethodName:isNotEmpty:[refreshToken] @AT@ 5414 @LENGTH@ 21


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  LanguageCustomizer<SqlLanguage> configurer : customizers) {    LOGGER.debug("Configure language {}, with configurer {}",language,configurer);    configurer.customize(language);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  LanguageCustomizer<SqlLanguage> customizer : customizers) {    LOGGER.debug("Configure language {}, with customizer {}",language,customizer);    customizer.customize(language);  }} @AT@ 4671 @LENGTH@ 331
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 4675 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 4675 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  LanguageCustomizer<SqlLanguage> configurer : customizers) {    LOGGER.debug("Configure language {}, with configurer {}",language,configurer);    configurer.customize(language);  }} @TO@ ThenBody:{  for (  LanguageCustomizer<SqlLanguage> customizer : customizers) {    LOGGER.debug("Configure language {}, with customizer {}",language,customizer);    customizer.customize(language);  }} @AT@ 4731 @LENGTH@ 271
------UPD EnhancedForStatement@@for (LanguageCustomizer<SqlLanguage> configurer : customizers) {  LOGGER.debug("Configure language {}, with configurer {}",language,configurer);  configurer.customize(language);} @TO@ for (LanguageCustomizer<SqlLanguage> customizer : customizers) {  LOGGER.debug("Configure language {}, with customizer {}",language,customizer);  customizer.customize(language);} @AT@ 4745 @LENGTH@ 247
---------UPD SingleVariableDeclaration@@LanguageCustomizer<SqlLanguage> configurer @TO@ LanguageCustomizer<SqlLanguage> customizer @AT@ 4750 @LENGTH@ 42
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 4782 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure language {}, with configurer {}",language,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure language {}, with customizer {}",language,customizer) @AT@ 4826 @LENGTH@ 104
------------UPD MethodInvocation@@LOGGER.debug("Configure language {}, with configurer {}",language,configurer) @TO@ LOGGER.debug("Configure language {}, with customizer {}",language,customizer) @AT@ 4826 @LENGTH@ 103
---------------UPD SimpleName@@MethodName:debug:["Configure language {}, with configurer {}", language, configurer] @TO@ MethodName:debug:["Configure language {}, with customizer {}", language, customizer] @AT@ 4833 @LENGTH@ 96
------------------UPD StringLiteral@@"Configure language {}, with configurer {}" @TO@ "Configure language {}, with customizer {}" @AT@ 4839 @LENGTH@ 43
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 4918 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(language) @TO@ MethodInvocation:customizer.customize(language) @AT@ 4947 @LENGTH@ 31
------------UPD MethodInvocation@@configurer.customize(language) @TO@ customizer.customize(language) @AT@ 4947 @LENGTH@ 30
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 4947 @LENGTH@ 10


UPD ExpressionStatement@@MethodInvocation:assertThat(content).contains("\"title\":\" My Custom App\"") @TO@ MethodInvocation:assertThat(content).contains("\"title\":\"My Custom App\"") @AT@ 1396 @LENGTH@ 61
---UPD MethodInvocation@@assertThat(content).contains("\"title\":\" My Custom App\"") @TO@ assertThat(content).contains("\"title\":\"My Custom App\"") @AT@ 1396 @LENGTH@ 60
------UPD SimpleName@@MethodName:contains:["\"title\":\" My Custom App\""] @TO@ MethodName:contains:["\"title\":\"My Custom App\""] @AT@ 1416 @LENGTH@ 40
---------UPD StringLiteral@@"\"title\":\" My Custom App\"" @TO@ "\"title\":\"My Custom App\"" @AT@ 1425 @LENGTH@ 30


MOV FieldDeclaration@@private, static, final, String, [UTF_8="UTF-8"] @TO@ TypeDeclaration@@[@Mojo(name="generate",requiresProject=false,defaultPhase=LifecyclePhase.GENERATE_SOURCES), public]CamelSalesforceMojo, AbstractMojo @AT@ 4316 @LENGTH@ 44


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled(); @AT@ 5243 @LENGTH@ 160
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5251 @LENGTH@ 151
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5251 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5268 @LENGTH@ 134
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 5268 @LENGTH@ 64
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5268 @LENGTH@ 35
---------UPD MethodInvocation@@componentConfiguration.getConfigurer().isEnabled() @TO@ componentConfiguration.getCustomizer().isEnabled() @AT@ 5352 @LENGTH@ 50
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5352 @LENGTH@ 38


UPD ExpressionStatement@@MethodInvocation:Assert.hasLength(newSessionId) @TO@ MethodInvocation:Assert.hasLength(newSessionId,"newSessionId must have length") @AT@ 1888 @LENGTH@ 31
---UPD MethodInvocation@@Assert.hasLength(newSessionId) @TO@ Assert.hasLength(newSessionId,"newSessionId must have length") @AT@ 1888 @LENGTH@ 30
------UPD SimpleName@@MethodName:hasLength:[newSessionId] @TO@ MethodName:hasLength:[newSessionId, "newSessionId must have length"] @AT@ 1895 @LENGTH@ 23
---------INS StringLiteral@@"newSessionId must have length" @TO@ SimpleName@@MethodName:hasLength:[newSessionId] @AT@ 1952 @LENGTH@ 31


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<CometdComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<CometdComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5452 @LENGTH@ 339
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 5456 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5456 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  ComponentCustomizer<CometdComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ ThenBody:{  for (  ComponentCustomizer<CometdComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5512 @LENGTH@ 279
------UPD EnhancedForStatement@@for (ComponentCustomizer<CometdComponent> configurer : customizers) {  LOGGER.debug("Configure component {}, with configurer {}",component,configurer);  configurer.customize(component);} @TO@ for (ComponentCustomizer<CometdComponent> customizer : customizers) {  LOGGER.debug("Configure component {}, with customizer {}",component,customizer);  customizer.customize(component);} @AT@ 5526 @LENGTH@ 255
---------UPD SingleVariableDeclaration@@ComponentCustomizer<CometdComponent> configurer @TO@ ComponentCustomizer<CometdComponent> customizer @AT@ 5531 @LENGTH@ 47
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5568 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5612 @LENGTH@ 106
------------UPD MethodInvocation@@LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5612 @LENGTH@ 105
---------------UPD SimpleName@@MethodName:debug:["Configure component {}, with configurer {}", component, configurer] @TO@ MethodName:debug:["Configure component {}, with customizer {}", component, customizer] @AT@ 5619 @LENGTH@ 98
------------------UPD StringLiteral@@"Configure component {}, with configurer {}" @TO@ "Configure component {}, with customizer {}" @AT@ 5625 @LENGTH@ 44
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5706 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(component) @TO@ MethodInvocation:customizer.customize(component) @AT@ 5735 @LENGTH@ 32
------------UPD MethodInvocation@@configurer.customize(component) @TO@ customizer.customize(component) @AT@ 5735 @LENGTH@ 31
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5735 @LENGTH@ 10


INS ExpressionStatement@@Assignment:current=nestedEnum.nextElement() @TO@ MethodDeclaration@@public, ArchiveEntry, MethodName:next,  @AT@ 10070 @LENGTH@ 35
---MOV Assignment@@current=nestedEnum.nextElement() @TO@ ExpressionStatement@@Assignment:current=nestedEnum.nextElement() @AT@ 10077 @LENGTH@ 34


UPD FieldDeclaration@@private, boolean, [reliable=false] @TO@ private, boolean, [reliable] @AT@ 1100 @LENGTH@ 33
---UPD VariableDeclarationFragment@@reliable=false @TO@ reliable @AT@ 1116 @LENGTH@ 16
------DEL BooleanLiteral@@false @AT@ 1127 @LENGTH@ 5


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  DataFormatCustomizer<RssDataFormat> configurer : customizers) {    LOGGER.debug("Configure dataformat {}, with configurer {}",dataformat,configurer);    configurer.customize(dataformat);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  DataFormatCustomizer<RssDataFormat> customizer : customizers) {    LOGGER.debug("Configure dataformat {}, with customizer {}",dataformat,customizer);    customizer.customize(dataformat);  }} @AT@ 5269 @LENGTH@ 422
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 5273 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5273 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  DataFormatCustomizer<RssDataFormat> configurer : customizers) {    LOGGER.debug("Configure dataformat {}, with configurer {}",dataformat,configurer);    configurer.customize(dataformat);  }} @TO@ ThenBody:{  for (  DataFormatCustomizer<RssDataFormat> customizer : customizers) {    LOGGER.debug("Configure dataformat {}, with customizer {}",dataformat,customizer);    customizer.customize(dataformat);  }} @AT@ 5329 @LENGTH@ 362
------UPD EnhancedForStatement@@for (DataFormatCustomizer<RssDataFormat> configurer : customizers) {  LOGGER.debug("Configure dataformat {}, with configurer {}",dataformat,configurer);  configurer.customize(dataformat);} @TO@ for (DataFormatCustomizer<RssDataFormat> customizer : customizers) {  LOGGER.debug("Configure dataformat {}, with customizer {}",dataformat,customizer);  customizer.customize(dataformat);} @AT@ 5351 @LENGTH@ 322
---------UPD SingleVariableDeclaration@@DataFormatCustomizer<RssDataFormat> configurer @TO@ DataFormatCustomizer<RssDataFormat> customizer @AT@ 5356 @LENGTH@ 46
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5392 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure dataformat {}, with configurer {}",dataformat,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure dataformat {}, with customizer {}",dataformat,customizer) @AT@ 5444 @LENGTH@ 149
------------UPD MethodInvocation@@LOGGER.debug("Configure dataformat {}, with configurer {}",dataformat,configurer) @TO@ LOGGER.debug("Configure dataformat {}, with customizer {}",dataformat,customizer) @AT@ 5444 @LENGTH@ 148
---------------UPD SimpleName@@MethodName:debug:["Configure dataformat {}, with configurer {}", dataformat, configurer] @TO@ MethodName:debug:["Configure dataformat {}, with customizer {}", dataformat, customizer] @AT@ 5451 @LENGTH@ 141
------------------UPD StringLiteral@@"Configure dataformat {}, with configurer {}" @TO@ "Configure dataformat {}, with customizer {}" @AT@ 5490 @LENGTH@ 45
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5581 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(dataformat) @TO@ MethodInvocation:customizer.customize(dataformat) @AT@ 5618 @LENGTH@ 33
------------UPD MethodInvocation@@configurer.customize(dataformat) @TO@ customizer.customize(dataformat) @AT@ 5618 @LENGTH@ 32
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5618 @LENGTH@ 10


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled(); @AT@ 5225 @LENGTH@ 160
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5233 @LENGTH@ 151
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5233 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5250 @LENGTH@ 134
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 5250 @LENGTH@ 64
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5250 @LENGTH@ 35
---------UPD MethodInvocation@@componentConfiguration.getConfigurer().isEnabled() @TO@ componentConfiguration.getCustomizer().isEnabled() @AT@ 5334 @LENGTH@ 50
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5334 @LENGTH@ 38


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  DataFormatCustomizer<JacksonXMLDataFormat> configurer : customizers) {    LOGGER.debug("Configure dataformat {}, with configurer {}",dataformat,configurer);    configurer.customize(dataformat);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  DataFormatCustomizer<JacksonXMLDataFormat> customizer : customizers) {    LOGGER.debug("Configure dataformat {}, with customizer {}",dataformat,customizer);    customizer.customize(dataformat);  }} @AT@ 5398 @LENGTH@ 429
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 5402 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5402 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  DataFormatCustomizer<JacksonXMLDataFormat> configurer : customizers) {    LOGGER.debug("Configure dataformat {}, with configurer {}",dataformat,configurer);    configurer.customize(dataformat);  }} @TO@ ThenBody:{  for (  DataFormatCustomizer<JacksonXMLDataFormat> customizer : customizers) {    LOGGER.debug("Configure dataformat {}, with customizer {}",dataformat,customizer);    customizer.customize(dataformat);  }} @AT@ 5458 @LENGTH@ 369
------UPD EnhancedForStatement@@for (DataFormatCustomizer<JacksonXMLDataFormat> configurer : customizers) {  LOGGER.debug("Configure dataformat {}, with configurer {}",dataformat,configurer);  configurer.customize(dataformat);} @TO@ for (DataFormatCustomizer<JacksonXMLDataFormat> customizer : customizers) {  LOGGER.debug("Configure dataformat {}, with customizer {}",dataformat,customizer);  customizer.customize(dataformat);} @AT@ 5480 @LENGTH@ 329
---------UPD SingleVariableDeclaration@@DataFormatCustomizer<JacksonXMLDataFormat> configurer @TO@ DataFormatCustomizer<JacksonXMLDataFormat> customizer @AT@ 5485 @LENGTH@ 53
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5528 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure dataformat {}, with configurer {}",dataformat,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure dataformat {}, with customizer {}",dataformat,customizer) @AT@ 5580 @LENGTH@ 149
------------UPD MethodInvocation@@LOGGER.debug("Configure dataformat {}, with configurer {}",dataformat,configurer) @TO@ LOGGER.debug("Configure dataformat {}, with customizer {}",dataformat,customizer) @AT@ 5580 @LENGTH@ 148
---------------UPD SimpleName@@MethodName:debug:["Configure dataformat {}, with configurer {}", dataformat, configurer] @TO@ MethodName:debug:["Configure dataformat {}, with customizer {}", dataformat, customizer] @AT@ 5587 @LENGTH@ 141
------------------UPD StringLiteral@@"Configure dataformat {}, with configurer {}" @TO@ "Configure dataformat {}, with customizer {}" @AT@ 5626 @LENGTH@ 45
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5717 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(dataformat) @TO@ MethodInvocation:customizer.customize(dataformat) @AT@ 5754 @LENGTH@ 33
------------UPD MethodInvocation@@configurer.customize(dataformat) @TO@ customizer.customize(dataformat) @AT@ 5754 @LENGTH@ 32
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5754 @LENGTH@ 10


UPD ExpressionStatement@@MethodInvocation:Assert.state(!users.containsKey(newUser.getUserId())) @TO@ MethodInvocation:Assert.isTrue(!users.containsKey(newUser.getUserId()),"user should not exist") @AT@ 1278 @LENGTH@ 54
---UPD MethodInvocation@@Assert.state(!users.containsKey(newUser.getUserId())) @TO@ Assert.isTrue(!users.containsKey(newUser.getUserId()),"user should not exist") @AT@ 1278 @LENGTH@ 53
------UPD SimpleName@@MethodName:state:[!users.containsKey(newUser.getUserId())] @TO@ MethodName:isTrue:[!users.containsKey(newUser.getUserId()), "user should not exist"] @AT@ 1285 @LENGTH@ 46
---------INS StringLiteral@@"user should not exist" @TO@ SimpleName@@MethodName:state:[!users.containsKey(newUser.getUserId())] @AT@ 1333 @LENGTH@ 23


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<SftpComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<SftpComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5409 @LENGTH@ 337
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 5413 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5413 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  ComponentCustomizer<SftpComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ ThenBody:{  for (  ComponentCustomizer<SftpComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5469 @LENGTH@ 277
------UPD EnhancedForStatement@@for (ComponentCustomizer<SftpComponent> configurer : customizers) {  LOGGER.debug("Configure component {}, with configurer {}",component,configurer);  configurer.customize(component);} @TO@ for (ComponentCustomizer<SftpComponent> customizer : customizers) {  LOGGER.debug("Configure component {}, with customizer {}",component,customizer);  customizer.customize(component);} @AT@ 5483 @LENGTH@ 253
---------UPD SingleVariableDeclaration@@ComponentCustomizer<SftpComponent> configurer @TO@ ComponentCustomizer<SftpComponent> customizer @AT@ 5488 @LENGTH@ 45
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5523 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5567 @LENGTH@ 106
------------UPD MethodInvocation@@LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5567 @LENGTH@ 105
---------------UPD SimpleName@@MethodName:debug:["Configure component {}, with configurer {}", component, configurer] @TO@ MethodName:debug:["Configure component {}, with customizer {}", component, customizer] @AT@ 5574 @LENGTH@ 98
------------------UPD StringLiteral@@"Configure component {}, with configurer {}" @TO@ "Configure component {}, with customizer {}" @AT@ 5580 @LENGTH@ 44
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5661 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(component) @TO@ MethodInvocation:customizer.customize(component) @AT@ 5690 @LENGTH@ 32
------------UPD MethodInvocation@@configurer.customize(component) @TO@ customizer.customize(component) @AT@ 5690 @LENGTH@ 31
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5690 @LENGTH@ 10


UPD ExpressionStatement@@MethodInvocation:writeOut(ZipEightByteInteger.getBytes(SHORT + SHORT + WORD+ WORD+ DWORD+ DWORD+ DWORD+ DWORD)) @TO@ MethodInvocation:writeOut(ZipEightByteInteger.getBytes(SHORT + SHORT + WORD+ WORD+ DWORD+ DWORD+ DWORD+ (long)DWORD)) @AT@ 52728 @LENGTH@ 554
---UPD MethodInvocation@@writeOut(ZipEightByteInteger.getBytes(SHORT + SHORT + WORD+ WORD+ DWORD+ DWORD+ DWORD+ DWORD)) @TO@ writeOut(ZipEightByteInteger.getBytes(SHORT + SHORT + WORD+ WORD+ DWORD+ DWORD+ DWORD+ (long)DWORD)) @AT@ 52728 @LENGTH@ 553
------UPD SimpleName@@MethodName:writeOut:[ZipEightByteInteger.getBytes(SHORT + SHORT + WORD+ WORD+ DWORD+ DWORD+ DWORD+ DWORD)] @TO@ MethodName:writeOut:[ZipEightByteInteger.getBytes(SHORT + SHORT + WORD+ WORD+ DWORD+ DWORD+ DWORD+ (long)DWORD)] @AT@ 52728 @LENGTH@ 553
---------UPD MethodInvocation@@ZipEightByteInteger.getBytes(SHORT + SHORT + WORD+ WORD+ DWORD+ DWORD+ DWORD+ DWORD) @TO@ ZipEightByteInteger.getBytes(SHORT + SHORT + WORD+ WORD+ DWORD+ DWORD+ DWORD+ (long)DWORD) @AT@ 52737 @LENGTH@ 543
------------UPD SimpleName@@MethodName:getBytes:[SHORT + SHORT + WORD+ WORD+ DWORD+ DWORD+ DWORD+ DWORD] @TO@ MethodName:getBytes:[SHORT + SHORT + WORD+ WORD+ DWORD+ DWORD+ DWORD+ (long)DWORD] @AT@ 52775 @LENGTH@ 505
---------------UPD InfixExpression@@SHORT + SHORT + WORD+ WORD+ DWORD+ DWORD+ DWORD+ DWORD @TO@ SHORT + SHORT + WORD+ WORD+ DWORD+ DWORD+ DWORD+ (long)DWORD @AT@ 52784 @LENGTH@ 448
------------------INS CastExpression@@(long)DWORD @TO@ InfixExpression@@SHORT + SHORT + WORD+ WORD+ DWORD+ DWORD+ DWORD+ DWORD @AT@ 53227 @LENGTH@ 12
---------------------INS PrimitiveType@@long @TO@ CastExpression@@(long)DWORD @AT@ 53228 @LENGTH@ 4
---------------------INS SimpleName@@DWORD @TO@ CastExpression@@(long)DWORD @AT@ 53234 @LENGTH@ 5
------------------DEL SimpleName@@DWORD @AT@ 53227 @LENGTH@ 5


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled(); @AT@ 5243 @LENGTH@ 160
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5251 @LENGTH@ 151
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5251 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5268 @LENGTH@ 134
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 5268 @LENGTH@ 64
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5268 @LENGTH@ 35
---------UPD MethodInvocation@@componentConfiguration.getConfigurer().isEnabled() @TO@ componentConfiguration.getCustomizer().isEnabled() @AT@ 5352 @LENGTH@ 50
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5352 @LENGTH@ 38


UPD SuperConstructorInvocation@@super(new Parameters(RESOURCE_PATH,ServerDescriptions.getResourceDescriptionResolver("core.management.native-interface")).setAddHandler(NativeManagementAddHandler.INSTANCE).setRemoveHandler(NativeManagementRemoveHandler.INSTANCE).setAddRestartLevel(OperationEntry.Flag.RESTART_NONE).setRemoveRestartLevel(OperationEntry.Flag.RESTART_RESOURCE_SERVICES));
 @TO@ super(new Parameters(RESOURCE_PATH,ServerDescriptions.getResourceDescriptionResolver("core.management.native-interface")).setAddHandler(NativeManagementAddHandler.INSTANCE).setRemoveHandler(NativeManagementRemoveHandler.INSTANCE));
 @AT@ 3674 @LENGTH@ 406
---UPD MethodInvocation@@new Parameters(RESOURCE_PATH,ServerDescriptions.getResourceDescriptionResolver("core.management.native-interface")).setAddHandler(NativeManagementAddHandler.INSTANCE).setRemoveHandler(NativeManagementRemoveHandler.INSTANCE).setAddRestartLevel(OperationEntry.Flag.RESTART_NONE).setRemoveRestartLevel(OperationEntry.Flag.RESTART_RESOURCE_SERVICES) @TO@ new Parameters(RESOURCE_PATH,ServerDescriptions.getResourceDescriptionResolver("core.management.native-interface")).setAddHandler(NativeManagementAddHandler.INSTANCE).setRemoveHandler(NativeManagementRemoveHandler.INSTANCE) @AT@ 3680 @LENGTH@ 398
------DEL MethodInvocation@@MethodName:setAddRestartLevel:[OperationEntry.Flag.RESTART_NONE] @AT@ 3680 @LENGTH@ 316
---------DEL QualifiedName@@OperationEntry.Flag.RESTART_NONE @AT@ 3963 @LENGTH@ 32
------------DEL QualifiedName@@OperationEntry.Flag @AT@ 3963 @LENGTH@ 19
---------------DEL SimpleName@@OperationEntry @AT@ 3963 @LENGTH@ 14
---------------DEL SimpleName@@Flag @AT@ 3978 @LENGTH@ 4
------------DEL SimpleName@@RESTART_NONE @AT@ 3983 @LENGTH@ 12
------DEL MethodInvocation@@MethodName:setRemoveHandler:[NativeManagementRemoveHandler.INSTANCE] @AT@ 3680 @LENGTH@ 250
---------DEL QualifiedName@@NativeManagementRemoveHandler.INSTANCE @AT@ 3891 @LENGTH@ 38
------INS SimpleName@@MethodName:setRemoveHandler:[NativeManagementRemoveHandler.INSTANCE] @TO@ MethodInvocation@@new Parameters(RESOURCE_PATH,ServerDescriptions.getResourceDescriptionResolver("core.management.native-interface")).setAddHandler(NativeManagementAddHandler.INSTANCE).setRemoveHandler(NativeManagementRemoveHandler.INSTANCE).setAddRestartLevel(OperationEntry.Flag.RESTART_NONE).setRemoveRestartLevel(OperationEntry.Flag.RESTART_RESOURCE_SERVICES) @AT@ 3728 @LENGTH@ 56
---------INS QualifiedName@@NativeManagementRemoveHandler.INSTANCE @TO@ SimpleName@@MethodName:setRemoveHandler:[NativeManagementRemoveHandler.INSTANCE] @AT@ 3745 @LENGTH@ 38
------------MOV SimpleName@@NativeManagementRemoveHandler @TO@ QualifiedName@@NativeManagementRemoveHandler.INSTANCE @AT@ 3891 @LENGTH@ 29
------------MOV SimpleName@@INSTANCE @TO@ QualifiedName@@NativeManagementRemoveHandler.INSTANCE @AT@ 3921 @LENGTH@ 8
------DEL SimpleName@@MethodName:setRemoveRestartLevel:[OperationEntry.Flag.RESTART_RESOURCE_SERVICES] @AT@ 4010 @LENGTH@ 68
---------DEL QualifiedName@@OperationEntry.Flag.RESTART_RESOURCE_SERVICES @AT@ 4032 @LENGTH@ 45
------------DEL QualifiedName@@OperationEntry.Flag @AT@ 4032 @LENGTH@ 19
---------------DEL SimpleName@@OperationEntry @AT@ 4032 @LENGTH@ 14
---------------DEL SimpleName@@Flag @AT@ 4047 @LENGTH@ 4
------------DEL SimpleName@@RESTART_RESOURCE_SERVICES @AT@ 4052 @LENGTH@ 25


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled(); @AT@ 5370 @LENGTH@ 160
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5378 @LENGTH@ 151
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5378 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5395 @LENGTH@ 134
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 5395 @LENGTH@ 64
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5395 @LENGTH@ 35
---------UPD MethodInvocation@@componentConfiguration.getConfigurer().isEnabled() @TO@ componentConfiguration.getCustomizer().isEnabled() @AT@ 5479 @LENGTH@ 50
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5479 @LENGTH@ 38


UPD VariableDeclarationStatement@@ResultBuilder builder=ResultBuilder.withStatusAndScope(Result.Status.OK,Scope.PARAMETERS).error(ResultErrorHelper.requiresOption("clientId",parameters)).error(ResultErrorHelper.requiresOption("clientSecret",parameters)).error(ResultErrorHelper.requiresOption("userName",parameters)).error(ResultErrorHelper.requiresOption("password",parameters)); @TO@ ResultBuilder builder=ResultBuilder.withStatusAndScope(Result.Status.OK,Scope.PARAMETERS).error(ResultErrorHelper.requiresOption("clientId",parameters)).error(ResultErrorHelper.requiresOption("clientSecret",parameters)); @AT@ 2488 @LENGTH@ 405
---UPD VariableDeclarationFragment@@builder=ResultBuilder.withStatusAndScope(Result.Status.OK,Scope.PARAMETERS).error(ResultErrorHelper.requiresOption("clientId",parameters)).error(ResultErrorHelper.requiresOption("clientSecret",parameters)).error(ResultErrorHelper.requiresOption("userName",parameters)).error(ResultErrorHelper.requiresOption("password",parameters)) @TO@ builder=ResultBuilder.withStatusAndScope(Result.Status.OK,Scope.PARAMETERS).error(ResultErrorHelper.requiresOption("clientId",parameters)).error(ResultErrorHelper.requiresOption("clientSecret",parameters)) @AT@ 2502 @LENGTH@ 390
------UPD MethodInvocation@@ResultBuilder.withStatusAndScope(Result.Status.OK,Scope.PARAMETERS).error(ResultErrorHelper.requiresOption("clientId",parameters)).error(ResultErrorHelper.requiresOption("clientSecret",parameters)).error(ResultErrorHelper.requiresOption("userName",parameters)).error(ResultErrorHelper.requiresOption("password",parameters)) @TO@ ResultBuilder.withStatusAndScope(Result.Status.OK,Scope.PARAMETERS).error(ResultErrorHelper.requiresOption("clientId",parameters)).error(ResultErrorHelper.requiresOption("clientSecret",parameters)) @AT@ 2512 @LENGTH@ 380
---------DEL MethodInvocation@@MethodName:error:[ResultErrorHelper.requiresOption("userName",parameters)] @AT@ 2512 @LENGTH@ 303
------------DEL MethodInvocation@@ResultErrorHelper.requiresOption("userName",parameters) @AT@ 2758 @LENGTH@ 56
---------------DEL SimpleName@@Name:ResultErrorHelper @AT@ 2758 @LENGTH@ 17
---------------DEL SimpleName@@MethodName:requiresOption:["userName", parameters] @AT@ 2776 @LENGTH@ 38
------------------DEL StringLiteral@@"userName" @AT@ 2791 @LENGTH@ 10
------------------DEL SimpleName@@parameters @AT@ 2803 @LENGTH@ 10
---------DEL MethodInvocation@@MethodName:error:[ResultErrorHelper.requiresOption("clientSecret",parameters)] @AT@ 2512 @LENGTH@ 226
---------UPD SimpleName@@MethodName:error:[ResultErrorHelper.requiresOption("password",parameters)] @TO@ MethodName:error:[ResultErrorHelper.requiresOption("clientSecret",parameters)] @AT@ 2829 @LENGTH@ 63
------------MOV MethodInvocation@@ResultErrorHelper.requiresOption("clientSecret",parameters) @TO@ SimpleName@@MethodName:error:[ResultErrorHelper.requiresOption("password",parameters)] @AT@ 2677 @LENGTH@ 60
------------DEL MethodInvocation@@ResultErrorHelper.requiresOption("password",parameters) @AT@ 2835 @LENGTH@ 56
---------------DEL SimpleName@@Name:ResultErrorHelper @AT@ 2835 @LENGTH@ 17
---------------DEL SimpleName@@MethodName:requiresOption:["password", parameters] @AT@ 2853 @LENGTH@ 38
------------------DEL StringLiteral@@"password" @AT@ 2868 @LENGTH@ 10
------------------DEL SimpleName@@parameters @AT@ 2880 @LENGTH@ 10


UPD VariableDeclarationStatement@@Cache cache=cacheContainer.getCache("server"); @TO@ Cache<String,String> cache=cacheContainer.getCache("server"); @AT@ 613 @LENGTH@ 48
---INS ParameterizedType@@Cache<String,String> @TO@ VariableDeclarationStatement@@Cache cache=cacheContainer.getCache("server"); @AT@ 613 @LENGTH@ 20
------INS SimpleType@@Cache @TO@ ParameterizedType@@Cache<String,String> @AT@ 613 @LENGTH@ 5
------INS SimpleType@@String @TO@ ParameterizedType@@Cache<String,String> @AT@ 619 @LENGTH@ 6
------INS SimpleType@@String @TO@ ParameterizedType@@Cache<String,String> @AT@ 626 @LENGTH@ 6
---DEL SimpleType@@Cache @AT@ 613 @LENGTH@ 5


UPD Block@@ThenBody:{  AtomicInteger counter=new AtomicInteger(0);  AtomicReference<Throwable> thrown=new AtomicReference<>(null);  data=new StreamPayload<>(data.getItem(),(ex,error) -> {    int status=counter.incrementAndGet();    thrown.compareAndSet(null,error);    if (status == subs.size()) {      originalCallback.processed(ex,thrown.get());    }  });} @TO@ ThenBody:{  AtomicInteger counter=new AtomicInteger(subs.size());  AtomicReference<Throwable> thrown=new AtomicReference<>(null);  data=new StreamPayload<>(data.getItem(),(ex,error) -> {    thrown.compareAndSet(null,error);    if (counter.decrementAndGet() == 0) {      originalCallback.processed(ex,thrown.get());    }  });} @AT@ 3156 @LENGTH@ 544
---UPD VariableDeclarationStatement@@AtomicInteger counter=new AtomicInteger(0); @TO@ AtomicInteger counter=new AtomicInteger(subs.size()); @AT@ 3244 @LENGTH@ 45
------UPD VariableDeclarationFragment@@counter=new AtomicInteger(0) @TO@ counter=new AtomicInteger(subs.size()) @AT@ 3258 @LENGTH@ 30
---------UPD ClassInstanceCreation@@AtomicInteger[0] @TO@ AtomicInteger[subs.size()] @AT@ 3268 @LENGTH@ 20
------------DEL NumberLiteral@@0 @AT@ 3286 @LENGTH@ 1
------------INS MethodInvocation@@subs.size() @TO@ ClassInstanceCreation@@AtomicInteger[0] @AT@ 3424 @LENGTH@ 11
---------------INS SimpleName@@Name:subs @TO@ MethodInvocation@@subs.size() @AT@ 3424 @LENGTH@ 4
---------------INS SimpleName@@MethodName:size:[] @TO@ MethodInvocation@@subs.size() @AT@ 3429 @LENGTH@ 6
---UPD ExpressionStatement@@Assignment:data=new StreamPayload<>(data.getItem(),(ex,error) -> {
  int status=counter.incrementAndGet();
  thrown.compareAndSet(null,error);
  if (status == subs.size()) {
    originalCallback.processed(ex,thrown.get());
  }
}
) @TO@ Assignment:data=new StreamPayload<>(data.getItem(),(ex,error) -> {
  thrown.compareAndSet(null,error);
  if (counter.decrementAndGet() == 0) {
    originalCallback.processed(ex,thrown.get());
  }
}
) @AT@ 3379 @LENGTH@ 311
------UPD Assignment@@data=new StreamPayload<>(data.getItem(),(ex,error) -> {
  int status=counter.incrementAndGet();
  thrown.compareAndSet(null,error);
  if (status == subs.size()) {
    originalCallback.processed(ex,thrown.get());
  }
}
) @TO@ data=new StreamPayload<>(data.getItem(),(ex,error) -> {
  thrown.compareAndSet(null,error);
  if (counter.decrementAndGet() == 0) {
    originalCallback.processed(ex,thrown.get());
  }
}
) @AT@ 3379 @LENGTH@ 310
---------UPD ClassInstanceCreation@@StreamPayload<>[data.getItem(), (ex,error) -> {
  int status=counter.incrementAndGet();
  thrown.compareAndSet(null,error);
  if (status == subs.size()) {
    originalCallback.processed(ex,thrown.get());
  }
}
] @TO@ StreamPayload<>[data.getItem(), (ex,error) -> {
  thrown.compareAndSet(null,error);
  if (counter.decrementAndGet() == 0) {
    originalCallback.processed(ex,thrown.get());
  }
}
] @AT@ 3386 @LENGTH@ 303
------------UPD LambdaExpression@@(ex,error) -> {
  int status=counter.incrementAndGet();
  thrown.compareAndSet(null,error);
  if (status == subs.size()) {
    originalCallback.processed(ex,thrown.get());
  }
}
 @TO@ (ex,error) -> {
  thrown.compareAndSet(null,error);
  if (counter.decrementAndGet() == 0) {
    originalCallback.processed(ex,thrown.get());
  }
}
 @AT@ 3422 @LENGTH@ 266
---------------DEL VariableDeclarationStatement@@int status=counter.incrementAndGet(); @AT@ 3455 @LENGTH@ 39
------------------DEL PrimitiveType@@int @AT@ 3455 @LENGTH@ 3
------------------DEL VariableDeclarationFragment@@status=counter.incrementAndGet() @AT@ 3459 @LENGTH@ 34
---------------------DEL SimpleName@@status @AT@ 3459 @LENGTH@ 6
---------------------DEL MethodInvocation@@counter.incrementAndGet() @AT@ 3468 @LENGTH@ 25
------------------------DEL SimpleName@@Name:counter @AT@ 3468 @LENGTH@ 7
------------------------DEL SimpleName@@MethodName:incrementAndGet:[] @AT@ 3476 @LENGTH@ 17
---------------UPD IfStatement@@if (status == subs.size()) {  originalCallback.processed(ex,thrown.get());} @TO@ if (counter.decrementAndGet() == 0) {  originalCallback.processed(ex,thrown.get());} @AT@ 3562 @LENGTH@ 112
------------------UPD InfixExpression@@status == subs.size() @TO@ counter.decrementAndGet() == 0 @AT@ 3566 @LENGTH@ 21
---------------------DEL SimpleName@@status @AT@ 3566 @LENGTH@ 6
---------------------DEL Operator@@== @AT@ 3572 @LENGTH@ 2
---------------------UPD MethodInvocation@@subs.size() @TO@ counter.decrementAndGet() @AT@ 3576 @LENGTH@ 11
------------------------UPD SimpleName@@Name:subs @TO@ Name:counter @AT@ 3576 @LENGTH@ 4
------------------------UPD SimpleName@@MethodName:size:[] @TO@ MethodName:decrementAndGet:[] @AT@ 3581 @LENGTH@ 6
---------------------INS Operator@@== @TO@ InfixExpression@@status == subs.size() @AT@ 3779 @LENGTH@ 2
---------------------INS NumberLiteral@@0 @TO@ InfixExpression@@status == subs.size() @AT@ 3783 @LENGTH@ 1


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled(); @AT@ 5328 @LENGTH@ 160
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5336 @LENGTH@ 151
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5336 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5353 @LENGTH@ 134
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 5353 @LENGTH@ 64
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5353 @LENGTH@ 35
---------UPD MethodInvocation@@componentConfiguration.getConfigurer().isEnabled() @TO@ componentConfiguration.getCustomizer().isEnabled() @AT@ 5437 @LENGTH@ 50
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5437 @LENGTH@ 38


UPD ReturnStatement@@MethodInvocation:multiHashOrdered(parentHashCode(),7919,port) @TO@ MethodInvocation:multiHashUnordered(parentHashCode(),7919,port) @AT@ 1616 @LENGTH@ 54
---UPD MethodInvocation@@multiHashOrdered(parentHashCode(),7919,port) @TO@ multiHashUnordered(parentHashCode(),7919,port) @AT@ 1623 @LENGTH@ 46
------UPD SimpleName@@MethodName:multiHashOrdered:[parentHashCode(), 7919, port] @TO@ MethodName:multiHashUnordered:[parentHashCode(), 7919, port] @AT@ 1623 @LENGTH@ 46


UPD ExpressionStatement@@MethodInvocation:assertTrue(json.contains("\"queueSize\": { \"kind\": \"property\", \"label\": \"advanced\", \"required\": \"false\"," + " \"type\": \"integer\", \"javaType\": \"int\", \"deprecated\": \"false\", \"secret\": \"false\", \"value\": \"0\"")) @TO@ MethodInvocation:assertTrue(json.contains("\"queueSize\": { \"kind\": \"property\", \"group\": \"advanced\", \"label\": \"advanced\"")) @AT@ 18085 @LENGTH@ 254
---UPD MethodInvocation@@assertTrue(json.contains("\"queueSize\": { \"kind\": \"property\", \"label\": \"advanced\", \"required\": \"false\"," + " \"type\": \"integer\", \"javaType\": \"int\", \"deprecated\": \"false\", \"secret\": \"false\", \"value\": \"0\"")) @TO@ assertTrue(json.contains("\"queueSize\": { \"kind\": \"property\", \"group\": \"advanced\", \"label\": \"advanced\"")) @AT@ 18085 @LENGTH@ 253
------UPD SimpleName@@MethodName:assertTrue:[json.contains("\"queueSize\": { \"kind\": \"property\", \"label\": \"advanced\", \"required\": \"false\"," + " \"type\": \"integer\", \"javaType\": \"int\", \"deprecated\": \"false\", \"secret\": \"false\", \"value\": \"0\"")] @TO@ MethodName:assertTrue:[json.contains("\"queueSize\": { \"kind\": \"property\", \"group\": \"advanced\", \"label\": \"advanced\"")] @AT@ 18085 @LENGTH@ 253
---------UPD MethodInvocation@@json.contains("\"queueSize\": { \"kind\": \"property\", \"label\": \"advanced\", \"required\": \"false\"," + " \"type\": \"integer\", \"javaType\": \"int\", \"deprecated\": \"false\", \"secret\": \"false\", \"value\": \"0\"") @TO@ json.contains("\"queueSize\": { \"kind\": \"property\", \"group\": \"advanced\", \"label\": \"advanced\"") @AT@ 18096 @LENGTH@ 241
------------UPD SimpleName@@MethodName:contains:["\"queueSize\": { \"kind\": \"property\", \"label\": \"advanced\", \"required\": \"false\"," + " \"type\": \"integer\", \"javaType\": \"int\", \"deprecated\": \"false\", \"secret\": \"false\", \"value\": \"0\""] @TO@ MethodName:contains:["\"queueSize\": { \"kind\": \"property\", \"group\": \"advanced\", \"label\": \"advanced\""] @AT@ 18101 @LENGTH@ 236
---------------INS StringLiteral@@"\"queueSize\": { \"kind\": \"property\", \"group\": \"advanced\", \"label\": \"advanced\"" @TO@ SimpleName@@MethodName:contains:["\"queueSize\": { \"kind\": \"property\", \"label\": \"advanced\", \"required\": \"false\"," + " \"type\": \"integer\", \"javaType\": \"int\", \"deprecated\": \"false\", \"secret\": \"false\", \"value\": \"0\""] @AT@ 17821 @LENGTH@ 91
---------------DEL InfixExpression@@"\"queueSize\": { \"kind\": \"property\", \"label\": \"advanced\", \"required\": \"false\"," + " \"type\": \"integer\", \"javaType\": \"int\", \"deprecated\": \"false\", \"secret\": \"false\", \"value\": \"0\"" @AT@ 18110 @LENGTH@ 226
------------------DEL StringLiteral@@"\"queueSize\": { \"kind\": \"property\", \"label\": \"advanced\", \"required\": \"false\"," @AT@ 18110 @LENGTH@ 92
------------------DEL Operator@@+ @AT@ 18202 @LENGTH@ 1
------------------DEL StringLiteral@@" \"type\": \"integer\", \"javaType\": \"int\", \"deprecated\": \"false\", \"secret\": \"false\", \"value\": \"0\"" @AT@ 18221 @LENGTH@ 115


UPD ExpressionStatement@@MethodInvocation:converter.setJsonObjectMapper(mapper) @TO@ Assignment:converter=new Jackson2JsonMessageConverter(mapper) @AT@ 2827 @LENGTH@ 38
---DEL MethodInvocation@@converter.setJsonObjectMapper(mapper) @AT@ 2827 @LENGTH@ 37
------DEL SimpleName@@Name:converter @AT@ 2827 @LENGTH@ 9
------DEL SimpleName@@MethodName:setJsonObjectMapper:[mapper] @AT@ 2837 @LENGTH@ 27
---------DEL SimpleName@@mapper @AT@ 2857 @LENGTH@ 6
---INS Assignment@@converter=new Jackson2JsonMessageConverter(mapper) @TO@ ExpressionStatement@@MethodInvocation:converter.setJsonObjectMapper(mapper) @AT@ 2827 @LENGTH@ 52
------INS SimpleName@@converter @TO@ Assignment@@converter=new Jackson2JsonMessageConverter(mapper) @AT@ 2827 @LENGTH@ 9
------INS Operator@@= @TO@ Assignment@@converter=new Jackson2JsonMessageConverter(mapper) @AT@ 2836 @LENGTH@ 1
------INS ClassInstanceCreation@@Jackson2JsonMessageConverter[mapper] @TO@ Assignment@@converter=new Jackson2JsonMessageConverter(mapper) @AT@ 2839 @LENGTH@ 40
---------INS New@@new @TO@ ClassInstanceCreation@@Jackson2JsonMessageConverter[mapper] @AT@ 2839 @LENGTH@ 3
---------INS SimpleType@@Jackson2JsonMessageConverter @TO@ ClassInstanceCreation@@Jackson2JsonMessageConverter[mapper] @AT@ 2843 @LENGTH@ 28
---------INS SimpleName@@mapper @TO@ ClassInstanceCreation@@Jackson2JsonMessageConverter[mapper] @AT@ 2872 @LENGTH@ 6


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && dataformatConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && dataformatConfiguration.getCustomizer().isEnabled(); @AT@ 5256 @LENGTH@ 177
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && dataformatConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && dataformatConfiguration.getCustomizer().isEnabled() @AT@ 5264 @LENGTH@ 168
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5264 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && dataformatConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && dataformatConfiguration.getCustomizer().isEnabled() @AT@ 5281 @LENGTH@ 151
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 5281 @LENGTH@ 72
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5281 @LENGTH@ 35
---------UPD MethodInvocation@@dataformatConfiguration.getConfigurer().isEnabled() @TO@ dataformatConfiguration.getCustomizer().isEnabled() @AT@ 5381 @LENGTH@ 51
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5381 @LENGTH@ 39


UPD ExpressionStatement@@MethodInvocation:Assert.notNull("RabbitTemplate must not be null") @TO@ MethodInvocation:Assert.notNull(rabbitTemplate,"'rabbitTemplate' must not be null") @AT@ 2061 @LENGTH@ 50
---UPD MethodInvocation@@Assert.notNull("RabbitTemplate must not be null") @TO@ Assert.notNull(rabbitTemplate,"'rabbitTemplate' must not be null") @AT@ 2061 @LENGTH@ 49
------UPD SimpleName@@MethodName:notNull:["RabbitTemplate must not be null"] @TO@ MethodName:notNull:[rabbitTemplate, "'rabbitTemplate' must not be null"] @AT@ 2068 @LENGTH@ 42
---------UPD StringLiteral@@"RabbitTemplate must not be null" @TO@ "'rabbitTemplate' must not be null" @AT@ 2076 @LENGTH@ 33
---------INS SimpleName@@rabbitTemplate @TO@ SimpleName@@MethodName:notNull:["RabbitTemplate must not be null"] @AT@ 2076 @LENGTH@ 14


UPD IfStatement@@if (!handler.equals(server.getHandler())) {  ((HandlerWrapper)handler).setHandler(server.getHandler());  server.setHandler(handler);} @TO@ if (!isHandlerInChain(server.getHandler(),handler)) {  ((HandlerWrapper)handler).setHandler(server.getHandler());  server.setHandler(handler);} @AT@ 54054 @LENGTH@ 201
---UPD PrefixExpression@@!handler.equals(server.getHandler()) @TO@ !isHandlerInChain(server.getHandler(),handler) @AT@ 54058 @LENGTH@ 36
------UPD MethodInvocation@@handler.equals(server.getHandler()) @TO@ isHandlerInChain(server.getHandler(),handler) @AT@ 54059 @LENGTH@ 35
---------DEL SimpleName@@Name:handler @AT@ 54059 @LENGTH@ 7
---------UPD SimpleName@@MethodName:equals:[server.getHandler()] @TO@ MethodName:isHandlerInChain:[server.getHandler(), handler] @AT@ 54067 @LENGTH@ 27
------------INS SimpleName@@handler @TO@ SimpleName@@MethodName:equals:[server.getHandler()] @AT@ 54086 @LENGTH@ 7


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<ElasticsearchComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<ElasticsearchComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5584 @LENGTH@ 346
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 5588 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5588 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  ComponentCustomizer<ElasticsearchComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ ThenBody:{  for (  ComponentCustomizer<ElasticsearchComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5644 @LENGTH@ 286
------UPD EnhancedForStatement@@for (ComponentCustomizer<ElasticsearchComponent> configurer : customizers) {  LOGGER.debug("Configure component {}, with configurer {}",component,configurer);  configurer.customize(component);} @TO@ for (ComponentCustomizer<ElasticsearchComponent> customizer : customizers) {  LOGGER.debug("Configure component {}, with customizer {}",component,customizer);  customizer.customize(component);} @AT@ 5658 @LENGTH@ 262
---------UPD SingleVariableDeclaration@@ComponentCustomizer<ElasticsearchComponent> configurer @TO@ ComponentCustomizer<ElasticsearchComponent> customizer @AT@ 5663 @LENGTH@ 54
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5707 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5751 @LENGTH@ 106
------------UPD MethodInvocation@@LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5751 @LENGTH@ 105
---------------UPD SimpleName@@MethodName:debug:["Configure component {}, with configurer {}", component, configurer] @TO@ MethodName:debug:["Configure component {}, with customizer {}", component, customizer] @AT@ 5758 @LENGTH@ 98
------------------UPD StringLiteral@@"Configure component {}, with configurer {}" @TO@ "Configure component {}, with customizer {}" @AT@ 5764 @LENGTH@ 44
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5845 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(component) @TO@ MethodInvocation:customizer.customize(component) @AT@ 5874 @LENGTH@ 32
------------UPD MethodInvocation@@configurer.customize(component) @TO@ customizer.customize(component) @AT@ 5874 @LENGTH@ 31
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5874 @LENGTH@ 10


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && dataformatConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && dataformatConfiguration.getCustomizer().isEnabled(); @AT@ 5090 @LENGTH@ 177
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && dataformatConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && dataformatConfiguration.getCustomizer().isEnabled() @AT@ 5098 @LENGTH@ 168
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5098 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && dataformatConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && dataformatConfiguration.getCustomizer().isEnabled() @AT@ 5115 @LENGTH@ 151
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 5115 @LENGTH@ 72
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5115 @LENGTH@ 35
---------UPD MethodInvocation@@dataformatConfiguration.getConfigurer().isEnabled() @TO@ dataformatConfiguration.getCustomizer().isEnabled() @AT@ 5215 @LENGTH@ 51
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5215 @LENGTH@ 39


UPD ReturnStatement@@MethodInvocation:target.map(it -> methods.stream().collect(Collectors.toMap(Method::getName,method -> new Function(method,it)))).orElseGet(Collections::emptyMap) @TO@ MethodInvocation:target.map(it -> methods.stream().collect(Collectors.toMap(Method::getName,method -> new Function(method,it),(left,right) -> right))).orElseGet(Collections::emptyMap) @AT@ 8271 @LENGTH@ 188
---UPD MethodInvocation@@target.map(it -> methods.stream().collect(Collectors.toMap(Method::getName,method -> new Function(method,it)))).orElseGet(Collections::emptyMap) @TO@ target.map(it -> methods.stream().collect(Collectors.toMap(Method::getName,method -> new Function(method,it),(left,right) -> right))).orElseGet(Collections::emptyMap) @AT@ 8278 @LENGTH@ 180
------UPD MethodInvocation@@MethodName:map:[it -> methods.stream().collect(Collectors.toMap(Method::getName,method -> new Function(method,it)))] @TO@ MethodName:map:[it -> methods.stream().collect(Collectors.toMap(Method::getName,method -> new Function(method,it),(left,right) -> right))] @AT@ 8278 @LENGTH@ 141
---------UPD LambdaExpression@@it -> methods.stream().collect(Collectors.toMap(Method::getName,method -> new Function(method,it))) @TO@ it -> methods.stream().collect(Collectors.toMap(Method::getName,method -> new Function(method,it),(left,right) -> right)) @AT@ 8289 @LENGTH@ 129
------------UPD MethodInvocation@@methods.stream().collect(Collectors.toMap(Method::getName,method -> new Function(method,it))) @TO@ methods.stream().collect(Collectors.toMap(Method::getName,method -> new Function(method,it),(left,right) -> right)) @AT@ 8295 @LENGTH@ 123
---------------UPD SimpleName@@MethodName:collect:[Collectors.toMap(Method::getName,method -> new Function(method,it))] @TO@ MethodName:collect:[Collectors.toMap(Method::getName,method -> new Function(method,it),(left,right) -> right)] @AT@ 8320 @LENGTH@ 98
------------------UPD MethodInvocation@@Collectors.toMap(Method::getName,method -> new Function(method,it)) @TO@ Collectors.toMap(Method::getName,method -> new Function(method,it),(left,right) -> right) @AT@ 8328 @LENGTH@ 89
---------------------UPD SimpleName@@MethodName:toMap:[Method::getName, method -> new Function(method,it)] @TO@ MethodName:toMap:[Method::getName, method -> new Function(method,it), (left,right) -> right] @AT@ 8339 @LENGTH@ 78
------------------------INS LambdaExpression@@(left,right) -> right @TO@ SimpleName@@MethodName:toMap:[Method::getName, method -> new Function(method,it)] @AT@ 8428 @LENGTH@ 22
---------------------------INS VariableDeclarationFragment@@left @TO@ LambdaExpression@@(left,right) -> right @AT@ 8429 @LENGTH@ 4
------------------------------INS SimpleName@@left @TO@ VariableDeclarationFragment@@left @AT@ 8429 @LENGTH@ 4
---------------------------INS VariableDeclarationFragment@@right @TO@ LambdaExpression@@(left,right) -> right @AT@ 8435 @LENGTH@ 5
------------------------------INS SimpleName@@right @TO@ VariableDeclarationFragment@@right @AT@ 8435 @LENGTH@ 5
---------------------------INS SimpleName@@right @TO@ LambdaExpression@@(left,right) -> right @AT@ 8445 @LENGTH@ 5


UPD ExpressionStatement@@MethodInvocation:assertThat(captor.getAllValues(),contains(containsString("exclusive"))) @TO@ MethodInvocation:assertThat(captor.getAllValues(),hasItem(containsString("exclusive"))) @AT@ 15154 @LENGTH@ 73
---UPD MethodInvocation@@assertThat(captor.getAllValues(),contains(containsString("exclusive"))) @TO@ assertThat(captor.getAllValues(),hasItem(containsString("exclusive"))) @AT@ 15154 @LENGTH@ 72
------UPD SimpleName@@MethodName:assertThat:[captor.getAllValues(), contains(containsString("exclusive"))] @TO@ MethodName:assertThat:[captor.getAllValues(), hasItem(containsString("exclusive"))] @AT@ 15154 @LENGTH@ 72
---------UPD MethodInvocation@@contains(containsString("exclusive")) @TO@ hasItem(containsString("exclusive")) @AT@ 15188 @LENGTH@ 37
------------UPD SimpleName@@MethodName:contains:[containsString("exclusive")] @TO@ MethodName:hasItem:[containsString("exclusive")] @AT@ 15188 @LENGTH@ 37
------------UPD SimpleName@@MethodName:contains:[containsString("exclusive")] @TO@ MethodName:hasItem:[containsString("exclusive")] @AT@ 15188 @LENGTH@ 37


UPD FieldDeclaration@@private, static, Map<Integer,IntervalProcessor>, [processorMap] @TO@ private, Map<Integer,IntervalProcessor>, [processorMap] @AT@ 2760 @LENGTH@ 60
---DEL Modifier@@static @AT@ 2768 @LENGTH@ 6


UPD VariableDeclarationStatement@@final StringBuilder sb=new StringBuilder("OutgoingVideoMessage{"); @TO@ final StringBuilder sb=new StringBuilder("OutgoingDocumentMessage{"); @AT@ 1696 @LENGTH@ 68
---UPD VariableDeclarationFragment@@sb=new StringBuilder("OutgoingVideoMessage{") @TO@ sb=new StringBuilder("OutgoingDocumentMessage{") @AT@ 1716 @LENGTH@ 47
------UPD ClassInstanceCreation@@StringBuilder["OutgoingVideoMessage{"] @TO@ StringBuilder["OutgoingDocumentMessage{"] @AT@ 1721 @LENGTH@ 42
---------UPD StringLiteral@@"OutgoingVideoMessage{" @TO@ "OutgoingDocumentMessage{" @AT@ 1739 @LENGTH@ 23


UPD ExpressionStatement@@MethodInvocation:Assert.assertFalse(services.stream().anyMatch(s -> s.getHealth().isHealthy() == false)) @TO@ MethodInvocation:Assert.assertFalse(services.stream().anyMatch(s -> !s.getHealth().isHealthy())) @AT@ 2819 @LENGTH@ 88
---UPD MethodInvocation@@Assert.assertFalse(services.stream().anyMatch(s -> s.getHealth().isHealthy() == false)) @TO@ Assert.assertFalse(services.stream().anyMatch(s -> !s.getHealth().isHealthy())) @AT@ 2819 @LENGTH@ 87
------UPD SimpleName@@MethodName:assertFalse:[services.stream().anyMatch(s -> s.getHealth().isHealthy() == false)] @TO@ MethodName:assertFalse:[services.stream().anyMatch(s -> !s.getHealth().isHealthy())] @AT@ 2826 @LENGTH@ 80
---------UPD MethodInvocation@@services.stream().anyMatch(s -> s.getHealth().isHealthy() == false) @TO@ services.stream().anyMatch(s -> !s.getHealth().isHealthy()) @AT@ 2838 @LENGTH@ 67
------------UPD SimpleName@@MethodName:anyMatch:[s -> s.getHealth().isHealthy() == false] @TO@ MethodName:anyMatch:[s -> !s.getHealth().isHealthy()] @AT@ 2856 @LENGTH@ 49
---------------UPD LambdaExpression@@s -> s.getHealth().isHealthy() == false @TO@ s -> !s.getHealth().isHealthy() @AT@ 2865 @LENGTH@ 39
------------------DEL InfixExpression@@s.getHealth().isHealthy() == false @AT@ 2870 @LENGTH@ 34
---------------------DEL MethodInvocation@@s.getHealth().isHealthy() @AT@ 2870 @LENGTH@ 25
---------------------DEL Operator@@== @AT@ 2895 @LENGTH@ 2
---------------------DEL BooleanLiteral@@false @AT@ 2899 @LENGTH@ 5
------------------INS PrefixExpression@@!s.getHealth().isHealthy() @TO@ LambdaExpression@@s -> s.getHealth().isHealthy() == false @AT@ 2870 @LENGTH@ 26
---------------------INS Operator@@! @TO@ PrefixExpression@@!s.getHealth().isHealthy() @AT@ 2870 @LENGTH@ 1
---------------------INS MethodInvocation@@s.getHealth().isHealthy() @TO@ PrefixExpression@@!s.getHealth().isHealthy() @AT@ 2871 @LENGTH@ 25
------------------------MOV MethodInvocation@@MethodName:getHealth:[] @TO@ MethodInvocation@@s.getHealth().isHealthy() @AT@ 2870 @LENGTH@ 13
------------------------MOV SimpleName@@Name:s @TO@ MethodInvocation@@s.getHealth().isHealthy() @AT@ 2870 @LENGTH@ 1
------------------------MOV SimpleName@@MethodName:isHealthy:[] @TO@ MethodInvocation@@s.getHealth().isHealthy() @AT@ 2884 @LENGTH@ 11


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && dataformatConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && dataformatConfiguration.getCustomizer().isEnabled(); @AT@ 5172 @LENGTH@ 177
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && dataformatConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && dataformatConfiguration.getCustomizer().isEnabled() @AT@ 5180 @LENGTH@ 168
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5180 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && dataformatConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && dataformatConfiguration.getCustomizer().isEnabled() @AT@ 5197 @LENGTH@ 151
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 5197 @LENGTH@ 72
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5197 @LENGTH@ 35
---------UPD MethodInvocation@@dataformatConfiguration.getConfigurer().isEnabled() @TO@ dataformatConfiguration.getCustomizer().isEnabled() @AT@ 5297 @LENGTH@ 51
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5297 @LENGTH@ 39


UPD TryStatement@@try {  return this.handlerMethod.invoke(message,amqpMessage,channel);} catch (MessagingException ex) {  throw new ListenerExecutionFailedException(createMessagingErrorMessage("Listener method could not " + "be invoked with the incoming message",message.getPayload()),ex);}catch (Exception ex) {  throw new ListenerExecutionFailedException("Listener method '" + this.handlerMethod.getMethodAsString(message.getPayload()) + "' threw exception",ex);} @TO@ try {  return this.handlerMethod.invoke(message,amqpMessage,channel);} catch (MessagingException ex) {  throw new ListenerExecutionFailedException(createMessagingErrorMessage("Listener method could not " + "be invoked with the incoming message",message.getPayload()),ex,amqpMessage);}catch (Exception ex) {  throw new ListenerExecutionFailedException("Listener method '" + this.handlerMethod.getMethodAsString(message.getPayload()) + "' threw exception",ex,amqpMessage);} @AT@ 5963 @LENGTH@ 482
---UPD CatchClause@@catch (MessagingException ex) {  throw new ListenerExecutionFailedException(createMessagingErrorMessage("Listener method could not " + "be invoked with the incoming message",message.getPayload()),ex);} @TO@ catch (MessagingException ex) {  throw new ListenerExecutionFailedException(createMessagingErrorMessage("Listener method could not " + "be invoked with the incoming message",message.getPayload()),ex,amqpMessage);} @AT@ 6043 @LENGTH@ 213
------UPD ThrowStatement@@ClassInstanceCreation:new ListenerExecutionFailedException(createMessagingErrorMessage("Listener method could not " + "be invoked with the incoming message",message.getPayload()),ex) @TO@ ClassInstanceCreation:new ListenerExecutionFailedException(createMessagingErrorMessage("Listener method could not " + "be invoked with the incoming message",message.getPayload()),ex,amqpMessage) @AT@ 6078 @LENGTH@ 174
---------UPD ClassInstanceCreation@@ListenerExecutionFailedException[createMessagingErrorMessage("Listener method could not " + "be invoked with the incoming message",message.getPayload()), ex] @TO@ ListenerExecutionFailedException[createMessagingErrorMessage("Listener method could not " + "be invoked with the incoming message",message.getPayload()), ex, amqpMessage] @AT@ 6084 @LENGTH@ 167
------------INS SimpleName@@amqpMessage @TO@ ClassInstanceCreation@@ListenerExecutionFailedException[createMessagingErrorMessage("Listener method could not " + "be invoked with the incoming message",message.getPayload()), ex] @AT@ 6255 @LENGTH@ 11
---UPD CatchClause@@catch (Exception ex) {  throw new ListenerExecutionFailedException("Listener method '" + this.handlerMethod.getMethodAsString(message.getPayload()) + "' threw exception",ex);} @TO@ catch (Exception ex) {  throw new ListenerExecutionFailedException("Listener method '" + this.handlerMethod.getMethodAsString(message.getPayload()) + "' threw exception",ex,amqpMessage);} @AT@ 6259 @LENGTH@ 186
------UPD ThrowStatement@@ClassInstanceCreation:new ListenerExecutionFailedException("Listener method '" + this.handlerMethod.getMethodAsString(message.getPayload()) + "' threw exception",ex) @TO@ ClassInstanceCreation:new ListenerExecutionFailedException("Listener method '" + this.handlerMethod.getMethodAsString(message.getPayload()) + "' threw exception",ex,amqpMessage) @AT@ 6285 @LENGTH@ 156
---------UPD ClassInstanceCreation@@ListenerExecutionFailedException["Listener method '" + this.handlerMethod.getMethodAsString(message.getPayload()) + "' threw exception", ex] @TO@ ListenerExecutionFailedException["Listener method '" + this.handlerMethod.getMethodAsString(message.getPayload()) + "' threw exception", ex, amqpMessage] @AT@ 6291 @LENGTH@ 149
------------INS SimpleName@@amqpMessage @TO@ ClassInstanceCreation@@ListenerExecutionFailedException["Listener method '" + this.handlerMethod.getMethodAsString(message.getPayload()) + "' threw exception", ex] @AT@ 6457 @LENGTH@ 11


UPD MethodDeclaration@@void, MethodName:forceReservedMemory, int allocationSize, int count,  @TO@ long, MethodName:forceReservedMemory, int allocationSize, int count,  @AT@ 1127 @LENGTH@ 51
---UPD PrimitiveType@@void @TO@ long @AT@ 1122 @LENGTH@ 4


UPD TypeDeclaration@@[static]UserRepositoryImpl, QueryDslRepositorySupport[UserRepository] @TO@ [static]UserRepositoryImpl, QuerydslRepositorySupport[UserRepository] @AT@ 3604 @LENGTH@ 744
---UPD SimpleType@@QueryDslRepositorySupport @TO@ QuerydslRepositorySupport @AT@ 3644 @LENGTH@ 25


UPD TypeDeclaration@@[@DirtiesContext, @RunWith(SpringRunner.class), @SpringBootApplication, @SpringBootTest(classes={CamelAutoConfiguration.class,CamelCloudAutoConfiguration.class,CamelCloudServiceCallConfiguration.class},properties={"ribbon.eureka.enabled=false","ribbon.listOfServers=localhost:9090,localhost:9092","ribbon.ServerListRefreshInterval=15000","debug=false"}), public]CamelCloudServiceCallRibbonTest,  @TO@ [@DirtiesContext, @RunWith(SpringRunner.class), @SpringBootApplication, @SpringBootTest(classes={CamelAutoConfiguration.class,CamelCloudAutoConfiguration.class,CamelCloudServiceCallRoutesAutoConfiguration.class},properties={"ribbon.eureka.enabled=false","ribbon.listOfServers=localhost:9090,localhost:9092","ribbon.ServerListRefreshInterval=15000","debug=false"}), public]CamelCloudServiceCallRibbonTest,  @AT@ 1342 @LENGTH@ 800
---UPD NormalAnnotation@@@SpringBootTest(classes={CamelAutoConfiguration.class,CamelCloudAutoConfiguration.class,CamelCloudServiceCallConfiguration.class},properties={"ribbon.eureka.enabled=false","ribbon.listOfServers=localhost:9090,localhost:9092","ribbon.ServerListRefreshInterval=15000","debug=false"}) @TO@ @SpringBootTest(classes={CamelAutoConfiguration.class,CamelCloudAutoConfiguration.class,CamelCloudServiceCallRoutesAutoConfiguration.class},properties={"ribbon.eureka.enabled=false","ribbon.listOfServers=localhost:9090,localhost:9092","ribbon.ServerListRefreshInterval=15000","debug=false"}) @AT@ 1410 @LENGTH@ 369


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled(); @AT@ 5225 @LENGTH@ 160
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5233 @LENGTH@ 151
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5233 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5250 @LENGTH@ 134
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 5250 @LENGTH@ 64
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5250 @LENGTH@ 35
---------UPD MethodInvocation@@componentConfiguration.getConfigurer().isEnabled() @TO@ componentConfiguration.getCustomizer().isEnabled() @AT@ 5334 @LENGTH@ 50
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5334 @LENGTH@ 38


UPD FieldDeclaration@@private, static, final, int, [CONCURRENT_THREAD_COUNT=300] @TO@ private, static, final, int, [CONCURRENT_THREAD_COUNT=30] @AT@ 1883 @LENGTH@ 55
---UPD VariableDeclarationFragment@@CONCURRENT_THREAD_COUNT=300 @TO@ CONCURRENT_THREAD_COUNT=30 @AT@ 1908 @LENGTH@ 29
------UPD NumberLiteral@@300 @TO@ 30 @AT@ 1934 @LENGTH@ 3


UPD VariableDeclarationStatement@@MetaStoreSchemaInfo schemInfo=new MetaStoreSchemaInfo(metaStoreRoot,conf,"derby"); @TO@ MetaStoreSchemaInfo schemInfo=new MetaStoreSchemaInfo(metaStoreRoot,"derby"); @AT@ 7921 @LENGTH@ 86
---UPD VariableDeclarationFragment@@schemInfo=new MetaStoreSchemaInfo(metaStoreRoot,conf,"derby") @TO@ schemInfo=new MetaStoreSchemaInfo(metaStoreRoot,"derby") @AT@ 7941 @LENGTH@ 65
------UPD ClassInstanceCreation@@MetaStoreSchemaInfo[metaStoreRoot, conf, "derby"] @TO@ MetaStoreSchemaInfo[metaStoreRoot, "derby"] @AT@ 7953 @LENGTH@ 53
---------DEL SimpleName@@conf @AT@ 7992 @LENGTH@ 4


UPD ExpressionStatement@@MethodInvocation:assertTrue(json.contains("\"resultType\": { \"kind\": \"attribute\", \"displayName\": \"Result Type\", \"required\": false, \"type\": \"string\", \"javaType\": \"java.lang.String\", \"deprecated\": false")) @TO@ MethodInvocation:assertTrue(json.contains("\"resultType\": { \"kind\": \"attribute\", \"displayName\": \"Result Type\", \"required\": false, \"type\": \"string\"" + ", \"javaType\": \"java.lang.String\", \"deprecated\": false")) @AT@ 1611 @LENGTH@ 207
---UPD MethodInvocation@@assertTrue(json.contains("\"resultType\": { \"kind\": \"attribute\", \"displayName\": \"Result Type\", \"required\": false, \"type\": \"string\", \"javaType\": \"java.lang.String\", \"deprecated\": false")) @TO@ assertTrue(json.contains("\"resultType\": { \"kind\": \"attribute\", \"displayName\": \"Result Type\", \"required\": false, \"type\": \"string\"" + ", \"javaType\": \"java.lang.String\", \"deprecated\": false")) @AT@ 1611 @LENGTH@ 206
------UPD SimpleName@@MethodName:assertTrue:[json.contains("\"resultType\": { \"kind\": \"attribute\", \"displayName\": \"Result Type\", \"required\": false, \"type\": \"string\", \"javaType\": \"java.lang.String\", \"deprecated\": false")] @TO@ MethodName:assertTrue:[json.contains("\"resultType\": { \"kind\": \"attribute\", \"displayName\": \"Result Type\", \"required\": false, \"type\": \"string\"" + ", \"javaType\": \"java.lang.String\", \"deprecated\": false")] @AT@ 1611 @LENGTH@ 206
---------UPD MethodInvocation@@json.contains("\"resultType\": { \"kind\": \"attribute\", \"displayName\": \"Result Type\", \"required\": false, \"type\": \"string\", \"javaType\": \"java.lang.String\", \"deprecated\": false") @TO@ json.contains("\"resultType\": { \"kind\": \"attribute\", \"displayName\": \"Result Type\", \"required\": false, \"type\": \"string\"" + ", \"javaType\": \"java.lang.String\", \"deprecated\": false") @AT@ 1622 @LENGTH@ 194
------------UPD SimpleName@@MethodName:contains:["\"resultType\": { \"kind\": \"attribute\", \"displayName\": \"Result Type\", \"required\": false, \"type\": \"string\", \"javaType\": \"java.lang.String\", \"deprecated\": false"] @TO@ MethodName:contains:["\"resultType\": { \"kind\": \"attribute\", \"displayName\": \"Result Type\", \"required\": false, \"type\": \"string\"" + ", \"javaType\": \"java.lang.String\", \"deprecated\": false"] @AT@ 1627 @LENGTH@ 189
---------------INS InfixExpression@@"\"resultType\": { \"kind\": \"attribute\", \"displayName\": \"Result Type\", \"required\": false, \"type\": \"string\"" + ", \"javaType\": \"java.lang.String\", \"deprecated\": false" @TO@ SimpleName@@MethodName:contains:["\"resultType\": { \"kind\": \"attribute\", \"displayName\": \"Result Type\", \"required\": false, \"type\": \"string\", \"javaType\": \"java.lang.String\", \"deprecated\": false"] @AT@ 1636 @LENGTH@ 196
------------------INS StringLiteral@@"\"resultType\": { \"kind\": \"attribute\", \"displayName\": \"Result Type\", \"required\": false, \"type\": \"string\"" @TO@ InfixExpression@@"\"resultType\": { \"kind\": \"attribute\", \"displayName\": \"Result Type\", \"required\": false, \"type\": \"string\"" + ", \"javaType\": \"java.lang.String\", \"deprecated\": false" @AT@ 1636 @LENGTH@ 120
------------------INS Operator@@+ @TO@ InfixExpression@@"\"resultType\": { \"kind\": \"attribute\", \"displayName\": \"Result Type\", \"required\": false, \"type\": \"string\"" + ", \"javaType\": \"java.lang.String\", \"deprecated\": false" @AT@ 1756 @LENGTH@ 1
------------------INS StringLiteral@@", \"javaType\": \"java.lang.String\", \"deprecated\": false" @TO@ InfixExpression@@"\"resultType\": { \"kind\": \"attribute\", \"displayName\": \"Result Type\", \"required\": false, \"type\": \"string\"" + ", \"javaType\": \"java.lang.String\", \"deprecated\": false" @AT@ 1771 @LENGTH@ 61
---------------DEL StringLiteral@@"\"resultType\": { \"kind\": \"attribute\", \"displayName\": \"Result Type\", \"required\": false, \"type\": \"string\", \"javaType\": \"java.lang.String\", \"deprecated\": false" @AT@ 1636 @LENGTH@ 179


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled(); @AT@ 5260 @LENGTH@ 160
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5268 @LENGTH@ 151
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5268 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5285 @LENGTH@ 134
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 5285 @LENGTH@ 64
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5285 @LENGTH@ 35
---------UPD MethodInvocation@@componentConfiguration.getConfigurer().isEnabled() @TO@ componentConfiguration.getCustomizer().isEnabled() @AT@ 5369 @LENGTH@ 50
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5369 @LENGTH@ 38


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<SjmsComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<SjmsComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5395 @LENGTH@ 337
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 5399 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5399 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  ComponentCustomizer<SjmsComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ ThenBody:{  for (  ComponentCustomizer<SjmsComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5455 @LENGTH@ 277
------UPD EnhancedForStatement@@for (ComponentCustomizer<SjmsComponent> configurer : customizers) {  LOGGER.debug("Configure component {}, with configurer {}",component,configurer);  configurer.customize(component);} @TO@ for (ComponentCustomizer<SjmsComponent> customizer : customizers) {  LOGGER.debug("Configure component {}, with customizer {}",component,customizer);  customizer.customize(component);} @AT@ 5469 @LENGTH@ 253
---------UPD SingleVariableDeclaration@@ComponentCustomizer<SjmsComponent> configurer @TO@ ComponentCustomizer<SjmsComponent> customizer @AT@ 5474 @LENGTH@ 45
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5509 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5553 @LENGTH@ 106
------------UPD MethodInvocation@@LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5553 @LENGTH@ 105
---------------UPD SimpleName@@MethodName:debug:["Configure component {}, with configurer {}", component, configurer] @TO@ MethodName:debug:["Configure component {}, with customizer {}", component, customizer] @AT@ 5560 @LENGTH@ 98
------------------UPD StringLiteral@@"Configure component {}, with configurer {}" @TO@ "Configure component {}, with customizer {}" @AT@ 5566 @LENGTH@ 44
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5647 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(component) @TO@ MethodInvocation:customizer.customize(component) @AT@ 5676 @LENGTH@ 32
------------UPD MethodInvocation@@configurer.customize(component) @TO@ customizer.customize(component) @AT@ 5676 @LENGTH@ 31
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5676 @LENGTH@ 10


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled(); @AT@ 5269 @LENGTH@ 160
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5277 @LENGTH@ 151
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5277 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5294 @LENGTH@ 134
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 5294 @LENGTH@ 64
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5294 @LENGTH@ 35
---------UPD MethodInvocation@@componentConfiguration.getConfigurer().isEnabled() @TO@ componentConfiguration.getCustomizer().isEnabled() @AT@ 5378 @LENGTH@ 50
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5378 @LENGTH@ 38


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  DataFormatCustomizer<CsvDataFormat> configurer : customizers) {    LOGGER.debug("Configure dataformat {}, with configurer {}",dataformat,configurer);    configurer.customize(dataformat);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  DataFormatCustomizer<CsvDataFormat> customizer : customizers) {    LOGGER.debug("Configure dataformat {}, with customizer {}",dataformat,customizer);    customizer.customize(dataformat);  }} @AT@ 5269 @LENGTH@ 422
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 5273 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5273 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  DataFormatCustomizer<CsvDataFormat> configurer : customizers) {    LOGGER.debug("Configure dataformat {}, with configurer {}",dataformat,configurer);    configurer.customize(dataformat);  }} @TO@ ThenBody:{  for (  DataFormatCustomizer<CsvDataFormat> customizer : customizers) {    LOGGER.debug("Configure dataformat {}, with customizer {}",dataformat,customizer);    customizer.customize(dataformat);  }} @AT@ 5329 @LENGTH@ 362
------UPD EnhancedForStatement@@for (DataFormatCustomizer<CsvDataFormat> configurer : customizers) {  LOGGER.debug("Configure dataformat {}, with configurer {}",dataformat,configurer);  configurer.customize(dataformat);} @TO@ for (DataFormatCustomizer<CsvDataFormat> customizer : customizers) {  LOGGER.debug("Configure dataformat {}, with customizer {}",dataformat,customizer);  customizer.customize(dataformat);} @AT@ 5351 @LENGTH@ 322
---------UPD SingleVariableDeclaration@@DataFormatCustomizer<CsvDataFormat> configurer @TO@ DataFormatCustomizer<CsvDataFormat> customizer @AT@ 5356 @LENGTH@ 46
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5392 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure dataformat {}, with configurer {}",dataformat,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure dataformat {}, with customizer {}",dataformat,customizer) @AT@ 5444 @LENGTH@ 149
------------UPD MethodInvocation@@LOGGER.debug("Configure dataformat {}, with configurer {}",dataformat,configurer) @TO@ LOGGER.debug("Configure dataformat {}, with customizer {}",dataformat,customizer) @AT@ 5444 @LENGTH@ 148
---------------UPD SimpleName@@MethodName:debug:["Configure dataformat {}, with configurer {}", dataformat, configurer] @TO@ MethodName:debug:["Configure dataformat {}, with customizer {}", dataformat, customizer] @AT@ 5451 @LENGTH@ 141
------------------UPD StringLiteral@@"Configure dataformat {}, with configurer {}" @TO@ "Configure dataformat {}, with customizer {}" @AT@ 5490 @LENGTH@ 45
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5581 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(dataformat) @TO@ MethodInvocation:customizer.customize(dataformat) @AT@ 5618 @LENGTH@ 33
------------UPD MethodInvocation@@configurer.customize(dataformat) @TO@ customizer.customize(dataformat) @AT@ 5618 @LENGTH@ 32
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5618 @LENGTH@ 10


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  LanguageCustomizer<JsonPathLanguage> configurer : customizers) {    LOGGER.debug("Configure language {}, with configurer {}",language,configurer);    configurer.customize(language);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  LanguageCustomizer<JsonPathLanguage> customizer : customizers) {    LOGGER.debug("Configure language {}, with customizer {}",language,customizer);    customizer.customize(language);  }} @AT@ 4743 @LENGTH@ 336
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 4747 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 4747 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  LanguageCustomizer<JsonPathLanguage> configurer : customizers) {    LOGGER.debug("Configure language {}, with configurer {}",language,configurer);    configurer.customize(language);  }} @TO@ ThenBody:{  for (  LanguageCustomizer<JsonPathLanguage> customizer : customizers) {    LOGGER.debug("Configure language {}, with customizer {}",language,customizer);    customizer.customize(language);  }} @AT@ 4803 @LENGTH@ 276
------UPD EnhancedForStatement@@for (LanguageCustomizer<JsonPathLanguage> configurer : customizers) {  LOGGER.debug("Configure language {}, with configurer {}",language,configurer);  configurer.customize(language);} @TO@ for (LanguageCustomizer<JsonPathLanguage> customizer : customizers) {  LOGGER.debug("Configure language {}, with customizer {}",language,customizer);  customizer.customize(language);} @AT@ 4817 @LENGTH@ 252
---------UPD SingleVariableDeclaration@@LanguageCustomizer<JsonPathLanguage> configurer @TO@ LanguageCustomizer<JsonPathLanguage> customizer @AT@ 4822 @LENGTH@ 47
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 4859 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure language {}, with configurer {}",language,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure language {}, with customizer {}",language,customizer) @AT@ 4903 @LENGTH@ 104
------------UPD MethodInvocation@@LOGGER.debug("Configure language {}, with configurer {}",language,configurer) @TO@ LOGGER.debug("Configure language {}, with customizer {}",language,customizer) @AT@ 4903 @LENGTH@ 103
---------------UPD SimpleName@@MethodName:debug:["Configure language {}, with configurer {}", language, configurer] @TO@ MethodName:debug:["Configure language {}, with customizer {}", language, customizer] @AT@ 4910 @LENGTH@ 96
------------------UPD StringLiteral@@"Configure language {}, with configurer {}" @TO@ "Configure language {}, with customizer {}" @AT@ 4916 @LENGTH@ 43
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 4995 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(language) @TO@ MethodInvocation:customizer.customize(language) @AT@ 5024 @LENGTH@ 31
------------UPD MethodInvocation@@configurer.customize(language) @TO@ customizer.customize(language) @AT@ 5024 @LENGTH@ 30
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5024 @LENGTH@ 10


UPD Block@@ThenBody:{  final Element typeElement=XmlUtils.createTextElement(document,"type",type.toString().toLowerCase());  dependencyElement.appendChild(typeElement);} @TO@ ThenBody:{  String typeContent="";  if (type == DependencyType.TESTJAR) {    typeContent="test-jar";  } else {    typeContent=type.toString().toLowerCase();  }  final Element typeElement=XmlUtils.createTextElement(document,"type",typeContent);  dependencyElement.appendChild(typeElement);} @AT@ 10443 @LENGTH@ 250
---UPD VariableDeclarationStatement@@final Element typeElement=XmlUtils.createTextElement(document,"type",type.toString().toLowerCase()); @TO@ final Element typeElement=XmlUtils.createTextElement(document,"type",typeContent); @AT@ 10523 @LENGTH@ 114
------UPD VariableDeclarationFragment@@typeElement=XmlUtils.createTextElement(document,"type",type.toString().toLowerCase()) @TO@ typeElement=XmlUtils.createTextElement(document,"type",typeContent) @AT@ 10537 @LENGTH@ 99
---------UPD MethodInvocation@@XmlUtils.createTextElement(document,"type",type.toString().toLowerCase()) @TO@ XmlUtils.createTextElement(document,"type",typeContent) @AT@ 10561 @LENGTH@ 75
------------UPD SimpleName@@MethodName:createTextElement:[document, "type", type.toString().toLowerCase()] @TO@ MethodName:createTextElement:[document, "type", typeContent] @AT@ 10570 @LENGTH@ 66
---------------DEL MethodInvocation@@type.toString().toLowerCase() @AT@ 10606 @LENGTH@ 29
------------------DEL MethodInvocation@@MethodName:toString:[] @AT@ 10606 @LENGTH@ 15
------------------DEL SimpleName@@Name:type @AT@ 10606 @LENGTH@ 4
------------------DEL SimpleName@@MethodName:toLowerCase:[] @AT@ 10622 @LENGTH@ 13
---------------INS SimpleName@@typeContent @TO@ SimpleName@@MethodName:createTextElement:[document, "type", type.toString().toLowerCase()] @AT@ 10782 @LENGTH@ 11
---INS VariableDeclarationStatement@@String typeContent=""; @TO@ Block@@ThenBody:{  final Element typeElement=XmlUtils.createTextElement(document,"type",type.toString().toLowerCase());  dependencyElement.appendChild(typeElement);} @AT@ 10523 @LENGTH@ 24
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String typeContent=""; @AT@ 10523 @LENGTH@ 6
------INS VariableDeclarationFragment@@typeContent="" @TO@ VariableDeclarationStatement@@String typeContent=""; @AT@ 10530 @LENGTH@ 16
---------INS SimpleName@@typeContent @TO@ VariableDeclarationFragment@@typeContent="" @AT@ 10530 @LENGTH@ 11
---------INS StringLiteral@@"" @TO@ VariableDeclarationFragment@@typeContent="" @AT@ 10544 @LENGTH@ 2
---INS IfStatement@@if (type == DependencyType.TESTJAR) {  typeContent="test-jar";} else {  typeContent=type.toString().toLowerCase();} @TO@ Block@@ThenBody:{  final Element typeElement=XmlUtils.createTextElement(document,"type",type.toString().toLowerCase());  dependencyElement.appendChild(typeElement);} @AT@ 10554 @LENGTH@ 147
------INS InfixExpression@@type == DependencyType.TESTJAR @TO@ IfStatement@@if (type == DependencyType.TESTJAR) {  typeContent="test-jar";} else {  typeContent=type.toString().toLowerCase();} @AT@ 10558 @LENGTH@ 30
---------INS SimpleName@@type @TO@ InfixExpression@@type == DependencyType.TESTJAR @AT@ 10558 @LENGTH@ 4
---------INS Operator@@== @TO@ InfixExpression@@type == DependencyType.TESTJAR @AT@ 10562 @LENGTH@ 2
---------INS QualifiedName@@DependencyType.TESTJAR @TO@ InfixExpression@@type == DependencyType.TESTJAR @AT@ 10566 @LENGTH@ 22
------------INS SimpleName@@DependencyType @TO@ QualifiedName@@DependencyType.TESTJAR @AT@ 10566 @LENGTH@ 14
------------INS SimpleName@@TESTJAR @TO@ QualifiedName@@DependencyType.TESTJAR @AT@ 10581 @LENGTH@ 7
------INS Block@@ThenBody:{  typeContent="test-jar";} @TO@ IfStatement@@if (type == DependencyType.TESTJAR) {  typeContent="test-jar";} else {  typeContent=type.toString().toLowerCase();} @AT@ 10590 @LENGTH@ 43
---------INS ExpressionStatement@@Assignment:typeContent="test-jar" @TO@ Block@@ThenBody:{  typeContent="test-jar";} @AT@ 10600 @LENGTH@ 25
------------INS Assignment@@typeContent="test-jar" @TO@ ExpressionStatement@@Assignment:typeContent="test-jar" @AT@ 10600 @LENGTH@ 24
---------------INS SimpleName@@typeContent @TO@ Assignment@@typeContent="test-jar" @AT@ 10600 @LENGTH@ 11
---------------INS Operator@@= @TO@ Assignment@@typeContent="test-jar" @AT@ 10611 @LENGTH@ 1
---------------INS StringLiteral@@"test-jar" @TO@ Assignment@@typeContent="test-jar" @AT@ 10614 @LENGTH@ 10
------INS Block@@ElseBody:{  typeContent=type.toString().toLowerCase();} @TO@ IfStatement@@if (type == DependencyType.TESTJAR) {  typeContent="test-jar";} else {  typeContent=type.toString().toLowerCase();} @AT@ 10639 @LENGTH@ 62
---------INS ExpressionStatement@@Assignment:typeContent=type.toString().toLowerCase() @TO@ Block@@ElseBody:{  typeContent=type.toString().toLowerCase();} @AT@ 10649 @LENGTH@ 44
------------INS Assignment@@typeContent=type.toString().toLowerCase() @TO@ ExpressionStatement@@Assignment:typeContent=type.toString().toLowerCase() @AT@ 10649 @LENGTH@ 43
---------------INS SimpleName@@typeContent @TO@ Assignment@@typeContent=type.toString().toLowerCase() @AT@ 10649 @LENGTH@ 11
---------------INS Operator@@= @TO@ Assignment@@typeContent=type.toString().toLowerCase() @AT@ 10660 @LENGTH@ 1
---------------INS MethodInvocation@@type.toString().toLowerCase() @TO@ Assignment@@typeContent=type.toString().toLowerCase() @AT@ 10663 @LENGTH@ 29
------------------INS MethodInvocation@@MethodName:toString:[] @TO@ MethodInvocation@@type.toString().toLowerCase() @AT@ 10663 @LENGTH@ 15
------------------INS SimpleName@@Name:type @TO@ MethodInvocation@@type.toString().toLowerCase() @AT@ 10663 @LENGTH@ 4
------------------INS SimpleName@@MethodName:toLowerCase:[] @TO@ MethodInvocation@@type.toString().toLowerCase() @AT@ 10679 @LENGTH@ 13


UPD TypeDeclaration@@[@Transactional, @ContextConfiguration, @RunWith(SpringJUnit4ClassRunner.class), public]QueryDslRepositorySupportIntegrationTests,  @TO@ [@Transactional, @ContextConfiguration, @RunWith(SpringJUnit4ClassRunner.class), public]QuerydslRepositorySupportIntegrationTests,  @AT@ 1917 @LENGTH@ 1937
---UPD SimpleName@@ClassName:QueryDslRepositorySupportIntegrationTests @TO@ ClassName:QuerydslRepositorySupportIntegrationTests @AT@ 2007 @LENGTH@ 41


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled(); @AT@ 5270 @LENGTH@ 160
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5278 @LENGTH@ 151
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5278 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5295 @LENGTH@ 134
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 5295 @LENGTH@ 64
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5295 @LENGTH@ 35
---------UPD MethodInvocation@@componentConfiguration.getConfigurer().isEnabled() @TO@ componentConfiguration.getCustomizer().isEnabled() @AT@ 5379 @LENGTH@ 50
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5379 @LENGTH@ 38


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<DnsComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<DnsComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5378 @LENGTH@ 336
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 5382 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5382 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  ComponentCustomizer<DnsComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ ThenBody:{  for (  ComponentCustomizer<DnsComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5438 @LENGTH@ 276
------UPD EnhancedForStatement@@for (ComponentCustomizer<DnsComponent> configurer : customizers) {  LOGGER.debug("Configure component {}, with configurer {}",component,configurer);  configurer.customize(component);} @TO@ for (ComponentCustomizer<DnsComponent> customizer : customizers) {  LOGGER.debug("Configure component {}, with customizer {}",component,customizer);  customizer.customize(component);} @AT@ 5452 @LENGTH@ 252
---------UPD SingleVariableDeclaration@@ComponentCustomizer<DnsComponent> configurer @TO@ ComponentCustomizer<DnsComponent> customizer @AT@ 5457 @LENGTH@ 44
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5491 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5535 @LENGTH@ 106
------------UPD MethodInvocation@@LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5535 @LENGTH@ 105
---------------UPD SimpleName@@MethodName:debug:["Configure component {}, with configurer {}", component, configurer] @TO@ MethodName:debug:["Configure component {}, with customizer {}", component, customizer] @AT@ 5542 @LENGTH@ 98
------------------UPD StringLiteral@@"Configure component {}, with configurer {}" @TO@ "Configure component {}, with customizer {}" @AT@ 5548 @LENGTH@ 44
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5629 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(component) @TO@ MethodInvocation:customizer.customize(component) @AT@ 5658 @LENGTH@ 32
------------UPD MethodInvocation@@configurer.customize(component) @TO@ customizer.customize(component) @AT@ 5658 @LENGTH@ 31
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5658 @LENGTH@ 10


UPD MethodDeclaration@@public, abstract, Object, MethodName:doInvokeProxy, final Object proxy, final Method method, final Object[] args, Throwable,  @TO@ public, abstract, Object, MethodName:doInvokeProxy, Object proxy, Method method, Object[] args, Throwable,  @AT@ 3921 @LENGTH@ 116
---UPD SingleVariableDeclaration@@final Object proxy @TO@ Object proxy @AT@ 3958 @LENGTH@ 18
------DEL Modifier@@final @AT@ 3958 @LENGTH@ 5
---UPD SingleVariableDeclaration@@final Method method @TO@ Method method @AT@ 3978 @LENGTH@ 19
------DEL Modifier@@final @AT@ 3978 @LENGTH@ 5
---UPD SingleVariableDeclaration@@final Object[] args @TO@ Object[] args @AT@ 3999 @LENGTH@ 19
------DEL Modifier@@final @AT@ 3999 @LENGTH@ 5


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && dataformatConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && dataformatConfiguration.getCustomizer().isEnabled(); @AT@ 5138 @LENGTH@ 177
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && dataformatConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && dataformatConfiguration.getCustomizer().isEnabled() @AT@ 5146 @LENGTH@ 168
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5146 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && dataformatConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && dataformatConfiguration.getCustomizer().isEnabled() @AT@ 5163 @LENGTH@ 151
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 5163 @LENGTH@ 72
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5163 @LENGTH@ 35
---------UPD MethodInvocation@@dataformatConfiguration.getConfigurer().isEnabled() @TO@ dataformatConfiguration.getCustomizer().isEnabled() @AT@ 5263 @LENGTH@ 51
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5263 @LENGTH@ 39


INS MethodDeclaration@@public, String, MethodName:getContentTypeFormat,  @TO@ TypeDeclaration@@[@Metadata(firstVersion="2.2.0",label="dataformat,transformation",title="Protobuf"), @XmlRootElement(name="protobuf"), @XmlAccessorType(XmlAccessType.FIELD), public]ProtobufDataFormat, DataFormatDefinition @AT@ 2816 @LENGTH@ 78
---INS Modifier@@public @TO@ MethodDeclaration@@public, String, MethodName:getContentTypeFormat,  @AT@ 2816 @LENGTH@ 6
---INS SimpleType@@String @TO@ MethodDeclaration@@public, String, MethodName:getContentTypeFormat,  @AT@ 2823 @LENGTH@ 6
---INS SimpleName@@MethodName:getContentTypeFormat @TO@ MethodDeclaration@@public, String, MethodName:getContentTypeFormat,  @AT@ 2830 @LENGTH@ 20
---INS ReturnStatement@@SimpleName:contentTypeFormat @TO@ MethodDeclaration@@public, String, MethodName:getContentTypeFormat,  @AT@ 2863 @LENGTH@ 25
------INS SimpleName@@contentTypeFormat @TO@ ReturnStatement@@SimpleName:contentTypeFormat @AT@ 2870 @LENGTH@ 17


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled(); @AT@ 5243 @LENGTH@ 160
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5251 @LENGTH@ 151
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5251 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5268 @LENGTH@ 134
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 5268 @LENGTH@ 64
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5268 @LENGTH@ 35
---------UPD MethodInvocation@@componentConfiguration.getConfigurer().isEnabled() @TO@ componentConfiguration.getCustomizer().isEnabled() @AT@ 5352 @LENGTH@ 50
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5352 @LENGTH@ 38


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<RouteboxComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<RouteboxComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5463 @LENGTH@ 341
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 5467 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5467 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  ComponentCustomizer<RouteboxComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ ThenBody:{  for (  ComponentCustomizer<RouteboxComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5523 @LENGTH@ 281
------UPD EnhancedForStatement@@for (ComponentCustomizer<RouteboxComponent> configurer : customizers) {  LOGGER.debug("Configure component {}, with configurer {}",component,configurer);  configurer.customize(component);} @TO@ for (ComponentCustomizer<RouteboxComponent> customizer : customizers) {  LOGGER.debug("Configure component {}, with customizer {}",component,customizer);  customizer.customize(component);} @AT@ 5537 @LENGTH@ 257
---------UPD SingleVariableDeclaration@@ComponentCustomizer<RouteboxComponent> configurer @TO@ ComponentCustomizer<RouteboxComponent> customizer @AT@ 5542 @LENGTH@ 49
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5581 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5625 @LENGTH@ 106
------------UPD MethodInvocation@@LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5625 @LENGTH@ 105
---------------UPD SimpleName@@MethodName:debug:["Configure component {}, with configurer {}", component, configurer] @TO@ MethodName:debug:["Configure component {}, with customizer {}", component, customizer] @AT@ 5632 @LENGTH@ 98
------------------UPD StringLiteral@@"Configure component {}, with configurer {}" @TO@ "Configure component {}, with customizer {}" @AT@ 5638 @LENGTH@ 44
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5719 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(component) @TO@ MethodInvocation:customizer.customize(component) @AT@ 5748 @LENGTH@ 32
------------UPD MethodInvocation@@configurer.customize(component) @TO@ customizer.customize(component) @AT@ 5748 @LENGTH@ 31
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5748 @LENGTH@ 10


UPD FieldDeclaration@@private, static, long, [serialVersionUID=1L] @TO@ private, static, final, long, [serialVersionUID=1L] @AT@ 1532 @LENGTH@ 42
---INS Modifier@@final @TO@ FieldDeclaration@@private, static, long, [serialVersionUID=1L] @AT@ 1547 @LENGTH@ 5


UPD VariableDeclarationStatement@@Expression target=expressionParser.parseExpression(field,parserContext); @TO@ Expression target=emptyValueExpressionParser.parseExpression(field,parserContext); @AT@ 17752 @LENGTH@ 75
---UPD VariableDeclarationFragment@@target=expressionParser.parseExpression(field,parserContext) @TO@ target=emptyValueExpressionParser.parseExpression(field,parserContext) @AT@ 17763 @LENGTH@ 63
------UPD MethodInvocation@@expressionParser.parseExpression(field,parserContext) @TO@ emptyValueExpressionParser.parseExpression(field,parserContext) @AT@ 17772 @LENGTH@ 54
---------UPD SimpleName@@Name:expressionParser @TO@ Name:emptyValueExpressionParser @AT@ 17772 @LENGTH@ 16


INS VariableDeclarationStatement@@final ModelNode originalDeployment=deploymentModel.clone(); @TO@ MethodDeclaration@@public, void, MethodName:execute, OperationContext context, ModelNode operation, OperationFailedException,  @AT@ 6012 @LENGTH@ 61
---INS Modifier@@final @TO@ VariableDeclarationStatement@@final ModelNode originalDeployment=deploymentModel.clone(); @AT@ 6012 @LENGTH@ 5
---INS SimpleType@@ModelNode @TO@ VariableDeclarationStatement@@final ModelNode originalDeployment=deploymentModel.clone(); @AT@ 6018 @LENGTH@ 9
---INS VariableDeclarationFragment@@originalDeployment=deploymentModel.clone() @TO@ VariableDeclarationStatement@@final ModelNode originalDeployment=deploymentModel.clone(); @AT@ 6028 @LENGTH@ 44
------INS SimpleName@@originalDeployment @TO@ VariableDeclarationFragment@@originalDeployment=deploymentModel.clone() @AT@ 6028 @LENGTH@ 18
------INS MethodInvocation@@deploymentModel.clone() @TO@ VariableDeclarationFragment@@originalDeployment=deploymentModel.clone() @AT@ 6049 @LENGTH@ 23
---------INS SimpleName@@Name:deploymentModel @TO@ MethodInvocation@@deploymentModel.clone() @AT@ 6049 @LENGTH@ 15
---------INS SimpleName@@MethodName:clone:[] @TO@ MethodInvocation@@deploymentModel.clone() @AT@ 6065 @LENGTH@ 7


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled(); @AT@ 5277 @LENGTH@ 160
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5285 @LENGTH@ 151
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5285 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5302 @LENGTH@ 134
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 5302 @LENGTH@ 64
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5302 @LENGTH@ 35
---------UPD MethodInvocation@@componentConfiguration.getConfigurer().isEnabled() @TO@ componentConfiguration.getCustomizer().isEnabled() @AT@ 5386 @LENGTH@ 50
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5386 @LENGTH@ 38


UPD ExpressionStatement@@MethodInvocation:when(mappingContext.getPersistentEntity(Person.class)).thenReturn(entity) @TO@ MethodInvocation:when(mappingContext.getPersistentEntity(Person.class)).thenReturn(Optional.of(entity)) @AT@ 2125 @LENGTH@ 74
---UPD MethodInvocation@@when(mappingContext.getPersistentEntity(Person.class)).thenReturn(entity) @TO@ when(mappingContext.getPersistentEntity(Person.class)).thenReturn(Optional.of(entity)) @AT@ 2125 @LENGTH@ 73
------UPD SimpleName@@MethodName:thenReturn:[entity] @TO@ MethodName:thenReturn:[Optional.of(entity)] @AT@ 2180 @LENGTH@ 18
---------INS MethodInvocation@@Optional.of(entity) @TO@ SimpleName@@MethodName:thenReturn:[entity] @AT@ 2218 @LENGTH@ 19
------------INS SimpleName@@Name:Optional @TO@ MethodInvocation@@Optional.of(entity) @AT@ 2218 @LENGTH@ 8
------------INS SimpleName@@MethodName:of:[entity] @TO@ MethodInvocation@@Optional.of(entity) @AT@ 2227 @LENGTH@ 10
---------------MOV SimpleName@@entity @TO@ SimpleName@@MethodName:of:[entity] @AT@ 2191 @LENGTH@ 6


UPD ExpressionStatement@@MethodInvocation:Assert.assertEquals("client identifier invalid",result.getErrors().get(1).getDescription()) @TO@ MethodInvocation:Assert.assertEquals("invalid_client_id",result.getErrors().get(1).getDetail("salesforce_code")) @AT@ 7884 @LENGTH@ 93
---UPD MethodInvocation@@Assert.assertEquals("client identifier invalid",result.getErrors().get(1).getDescription()) @TO@ Assert.assertEquals("invalid_client_id",result.getErrors().get(1).getDetail("salesforce_code")) @AT@ 7884 @LENGTH@ 92
------UPD SimpleName@@MethodName:assertEquals:["client identifier invalid", result.getErrors().get(1).getDescription()] @TO@ MethodName:assertEquals:["invalid_client_id", result.getErrors().get(1).getDetail("salesforce_code")] @AT@ 7891 @LENGTH@ 85
---------UPD StringLiteral@@"client identifier invalid" @TO@ "invalid_client_id" @AT@ 7904 @LENGTH@ 27
---------UPD MethodInvocation@@result.getErrors().get(1).getDescription() @TO@ result.getErrors().get(1).getDetail("salesforce_code") @AT@ 7933 @LENGTH@ 42
------------UPD SimpleName@@MethodName:getDescription:[] @TO@ MethodName:getDetail:["salesforce_code"] @AT@ 7959 @LENGTH@ 16
---------------INS StringLiteral@@"salesforce_code" @TO@ SimpleName@@MethodName:getDescription:[] @AT@ 7964 @LENGTH@ 17


UPD MethodDeclaration@@public, voidMethodName:MyCodec,  @TO@ voidMethodName:MyCodec,  @AT@ 4884 @LENGTH@ 62
---DEL Modifier@@public @AT@ 4884 @LENGTH@ 6


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<S3Component> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<S3Component> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5377 @LENGTH@ 335
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 5381 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5381 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  ComponentCustomizer<S3Component> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ ThenBody:{  for (  ComponentCustomizer<S3Component> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5437 @LENGTH@ 275
------UPD EnhancedForStatement@@for (ComponentCustomizer<S3Component> configurer : customizers) {  LOGGER.debug("Configure component {}, with configurer {}",component,configurer);  configurer.customize(component);} @TO@ for (ComponentCustomizer<S3Component> customizer : customizers) {  LOGGER.debug("Configure component {}, with customizer {}",component,customizer);  customizer.customize(component);} @AT@ 5451 @LENGTH@ 251
---------UPD SingleVariableDeclaration@@ComponentCustomizer<S3Component> configurer @TO@ ComponentCustomizer<S3Component> customizer @AT@ 5456 @LENGTH@ 43
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5489 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5533 @LENGTH@ 106
------------UPD MethodInvocation@@LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5533 @LENGTH@ 105
---------------UPD SimpleName@@MethodName:debug:["Configure component {}, with configurer {}", component, configurer] @TO@ MethodName:debug:["Configure component {}, with customizer {}", component, customizer] @AT@ 5540 @LENGTH@ 98
------------------UPD StringLiteral@@"Configure component {}, with configurer {}" @TO@ "Configure component {}, with customizer {}" @AT@ 5546 @LENGTH@ 44
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5627 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(component) @TO@ MethodInvocation:customizer.customize(component) @AT@ 5656 @LENGTH@ 32
------------UPD MethodInvocation@@configurer.customize(component) @TO@ customizer.customize(component) @AT@ 5656 @LENGTH@ 31
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5656 @LENGTH@ 10


UPD FieldDeclaration@@private, final, List<String>, [remoteRepositories=new LinkedList()] @TO@ private, final, List<String>, [remoteRepositories=new LinkedList<>()] @AT@ 1733 @LENGTH@ 65
---UPD VariableDeclarationFragment@@remoteRepositories=new LinkedList() @TO@ remoteRepositories=new LinkedList<>() @AT@ 1760 @LENGTH@ 37
------UPD ClassInstanceCreation@@LinkedList[] @TO@ LinkedList<>[] @AT@ 1781 @LENGTH@ 16
---------INS ParameterizedType@@LinkedList<> @TO@ ClassInstanceCreation@@LinkedList[] @AT@ 1785 @LENGTH@ 12
------------INS SimpleType@@LinkedList @TO@ ParameterizedType@@LinkedList<> @AT@ 1785 @LENGTH@ 10
---------DEL SimpleType@@LinkedList @AT@ 1785 @LENGTH@ 10


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  DataFormatCustomizer<HL7DataFormat> configurer : customizers) {    LOGGER.debug("Configure dataformat {}, with configurer {}",dataformat,configurer);    configurer.customize(dataformat);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  DataFormatCustomizer<HL7DataFormat> customizer : customizers) {    LOGGER.debug("Configure dataformat {}, with customizer {}",dataformat,customizer);    customizer.customize(dataformat);  }} @AT@ 5267 @LENGTH@ 422
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 5271 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5271 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  DataFormatCustomizer<HL7DataFormat> configurer : customizers) {    LOGGER.debug("Configure dataformat {}, with configurer {}",dataformat,configurer);    configurer.customize(dataformat);  }} @TO@ ThenBody:{  for (  DataFormatCustomizer<HL7DataFormat> customizer : customizers) {    LOGGER.debug("Configure dataformat {}, with customizer {}",dataformat,customizer);    customizer.customize(dataformat);  }} @AT@ 5327 @LENGTH@ 362
------UPD EnhancedForStatement@@for (DataFormatCustomizer<HL7DataFormat> configurer : customizers) {  LOGGER.debug("Configure dataformat {}, with configurer {}",dataformat,configurer);  configurer.customize(dataformat);} @TO@ for (DataFormatCustomizer<HL7DataFormat> customizer : customizers) {  LOGGER.debug("Configure dataformat {}, with customizer {}",dataformat,customizer);  customizer.customize(dataformat);} @AT@ 5349 @LENGTH@ 322
---------UPD SingleVariableDeclaration@@DataFormatCustomizer<HL7DataFormat> configurer @TO@ DataFormatCustomizer<HL7DataFormat> customizer @AT@ 5354 @LENGTH@ 46
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5390 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure dataformat {}, with configurer {}",dataformat,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure dataformat {}, with customizer {}",dataformat,customizer) @AT@ 5442 @LENGTH@ 149
------------UPD MethodInvocation@@LOGGER.debug("Configure dataformat {}, with configurer {}",dataformat,configurer) @TO@ LOGGER.debug("Configure dataformat {}, with customizer {}",dataformat,customizer) @AT@ 5442 @LENGTH@ 148
---------------UPD SimpleName@@MethodName:debug:["Configure dataformat {}, with configurer {}", dataformat, configurer] @TO@ MethodName:debug:["Configure dataformat {}, with customizer {}", dataformat, customizer] @AT@ 5449 @LENGTH@ 141
------------------UPD StringLiteral@@"Configure dataformat {}, with configurer {}" @TO@ "Configure dataformat {}, with customizer {}" @AT@ 5488 @LENGTH@ 45
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5579 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(dataformat) @TO@ MethodInvocation:customizer.customize(dataformat) @AT@ 5616 @LENGTH@ 33
------------UPD MethodInvocation@@configurer.customize(dataformat) @TO@ customizer.customize(dataformat) @AT@ 5616 @LENGTH@ 32
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5616 @LENGTH@ 10


UPD ExpressionStatement@@MethodInvocation:Assert.assertEquals("401",result.getErrors().get(0).getCode()) @TO@ MethodInvocation:Assert.assertEquals(ComponentVerifier.CODE_AUTHENTICATION,result.getErrors().get(0).getCode()) @AT@ 2327 @LENGTH@ 64
---UPD MethodInvocation@@Assert.assertEquals("401",result.getErrors().get(0).getCode()) @TO@ Assert.assertEquals(ComponentVerifier.CODE_AUTHENTICATION,result.getErrors().get(0).getCode()) @AT@ 2327 @LENGTH@ 63
------UPD SimpleName@@MethodName:assertEquals:["401", result.getErrors().get(0).getCode()] @TO@ MethodName:assertEquals:[ComponentVerifier.CODE_AUTHENTICATION, result.getErrors().get(0).getCode()] @AT@ 2334 @LENGTH@ 56
---------INS QualifiedName@@ComponentVerifier.CODE_AUTHENTICATION @TO@ SimpleName@@MethodName:assertEquals:["401", result.getErrors().get(0).getCode()] @AT@ 2347 @LENGTH@ 37
------------INS SimpleName@@ComponentVerifier @TO@ QualifiedName@@ComponentVerifier.CODE_AUTHENTICATION @AT@ 2347 @LENGTH@ 17
------------INS SimpleName@@CODE_AUTHENTICATION @TO@ QualifiedName@@ComponentVerifier.CODE_AUTHENTICATION @AT@ 2365 @LENGTH@ 19
---------DEL StringLiteral@@"401" @AT@ 2347 @LENGTH@ 5


UPD ExpressionStatement@@MethodInvocation:cli.sendLine(String.format("/subsystem=elytron/http-authentication-factory=%1$s:add(security-domain=%1$s, http-server-mechanism-factory=%1$s," + "  mechanism-configurations=[" + "    {mechanism-name=DIGEST,mechanism-realm-configurations=[{realm-name=%1$s}]},"+ "    {mechanism-name=BASIC,mechanism-realm-configurations=[{realm-name=%1$s}]},"+ "    {mechanism-name=FORM]}])",name)) @TO@ MethodInvocation:cli.sendLine(String.format("/subsystem=elytron/http-authentication-factory=%1$s:add(security-domain=%1$s, http-server-mechanism-factory=%1$s," + "  mechanism-configurations=[" + "    {mechanism-name=DIGEST,mechanism-realm-configurations=[{realm-name=%1$s}]},"+ "    {mechanism-name=BASIC,mechanism-realm-configurations=[{realm-name=%1$s}]},"+ "    {mechanism-name=FORM}])",name)) @AT@ 3110 @LENGTH@ 497
---UPD MethodInvocation@@cli.sendLine(String.format("/subsystem=elytron/http-authentication-factory=%1$s:add(security-domain=%1$s, http-server-mechanism-factory=%1$s," + "  mechanism-configurations=[" + "    {mechanism-name=DIGEST,mechanism-realm-configurations=[{realm-name=%1$s}]},"+ "    {mechanism-name=BASIC,mechanism-realm-configurations=[{realm-name=%1$s}]},"+ "    {mechanism-name=FORM]}])",name)) @TO@ cli.sendLine(String.format("/subsystem=elytron/http-authentication-factory=%1$s:add(security-domain=%1$s, http-server-mechanism-factory=%1$s," + "  mechanism-configurations=[" + "    {mechanism-name=DIGEST,mechanism-realm-configurations=[{realm-name=%1$s}]},"+ "    {mechanism-name=BASIC,mechanism-realm-configurations=[{realm-name=%1$s}]},"+ "    {mechanism-name=FORM}])",name)) @AT@ 3110 @LENGTH@ 496
------UPD SimpleName@@MethodName:sendLine:[String.format("/subsystem=elytron/http-authentication-factory=%1$s:add(security-domain=%1$s, http-server-mechanism-factory=%1$s," + "  mechanism-configurations=[" + "    {mechanism-name=DIGEST,mechanism-realm-configurations=[{realm-name=%1$s}]},"+ "    {mechanism-name=BASIC,mechanism-realm-configurations=[{realm-name=%1$s}]},"+ "    {mechanism-name=FORM]}])",name)] @TO@ MethodName:sendLine:[String.format("/subsystem=elytron/http-authentication-factory=%1$s:add(security-domain=%1$s, http-server-mechanism-factory=%1$s," + "  mechanism-configurations=[" + "    {mechanism-name=DIGEST,mechanism-realm-configurations=[{realm-name=%1$s}]},"+ "    {mechanism-name=BASIC,mechanism-realm-configurations=[{realm-name=%1$s}]},"+ "    {mechanism-name=FORM}])",name)] @AT@ 3114 @LENGTH@ 492
---------UPD MethodInvocation@@String.format("/subsystem=elytron/http-authentication-factory=%1$s:add(security-domain=%1$s, http-server-mechanism-factory=%1$s," + "  mechanism-configurations=[" + "    {mechanism-name=DIGEST,mechanism-realm-configurations=[{realm-name=%1$s}]},"+ "    {mechanism-name=BASIC,mechanism-realm-configurations=[{realm-name=%1$s}]},"+ "    {mechanism-name=FORM]}])",name) @TO@ String.format("/subsystem=elytron/http-authentication-factory=%1$s:add(security-domain=%1$s, http-server-mechanism-factory=%1$s," + "  mechanism-configurations=[" + "    {mechanism-name=DIGEST,mechanism-realm-configurations=[{realm-name=%1$s}]},"+ "    {mechanism-name=BASIC,mechanism-realm-configurations=[{realm-name=%1$s}]},"+ "    {mechanism-name=FORM}])",name) @AT@ 3123 @LENGTH@ 482
------------UPD SimpleName@@MethodName:format:["/subsystem=elytron/http-authentication-factory=%1$s:add(security-domain=%1$s, http-server-mechanism-factory=%1$s," + "  mechanism-configurations=[" + "    {mechanism-name=DIGEST,mechanism-realm-configurations=[{realm-name=%1$s}]},"+ "    {mechanism-name=BASIC,mechanism-realm-configurations=[{realm-name=%1$s}]},"+ "    {mechanism-name=FORM]}])", name] @TO@ MethodName:format:["/subsystem=elytron/http-authentication-factory=%1$s:add(security-domain=%1$s, http-server-mechanism-factory=%1$s," + "  mechanism-configurations=[" + "    {mechanism-name=DIGEST,mechanism-realm-configurations=[{realm-name=%1$s}]},"+ "    {mechanism-name=BASIC,mechanism-realm-configurations=[{realm-name=%1$s}]},"+ "    {mechanism-name=FORM}])", name] @AT@ 3147 @LENGTH@ 458
---------------UPD InfixExpression@@"/subsystem=elytron/http-authentication-factory=%1$s:add(security-domain=%1$s, http-server-mechanism-factory=%1$s," + "  mechanism-configurations=[" + "    {mechanism-name=DIGEST,mechanism-realm-configurations=[{realm-name=%1$s}]},"+ "    {mechanism-name=BASIC,mechanism-realm-configurations=[{realm-name=%1$s}]},"+ "    {mechanism-name=FORM]}])" @TO@ "/subsystem=elytron/http-authentication-factory=%1$s:add(security-domain=%1$s, http-server-mechanism-factory=%1$s," + "  mechanism-configurations=[" + "    {mechanism-name=DIGEST,mechanism-realm-configurations=[{realm-name=%1$s}]},"+ "    {mechanism-name=BASIC,mechanism-realm-configurations=[{realm-name=%1$s}]},"+ "    {mechanism-name=FORM}])" @AT@ 3154 @LENGTH@ 444
------------------UPD StringLiteral@@"    {mechanism-name=FORM]}])" @TO@ "    {mechanism-name=FORM}])" @AT@ 3568 @LENGTH@ 30


UPD ExpressionStatement@@MethodInvocation:Assert.notNull(bankDao) @TO@ MethodInvocation:Assert.notNull(bankDao,"bankDao cannot be null") @AT@ 873 @LENGTH@ 24
---UPD MethodInvocation@@Assert.notNull(bankDao) @TO@ Assert.notNull(bankDao,"bankDao cannot be null") @AT@ 873 @LENGTH@ 23
------UPD SimpleName@@MethodName:notNull:[bankDao] @TO@ MethodName:notNull:[bankDao, "bankDao cannot be null"] @AT@ 880 @LENGTH@ 16
---------INS StringLiteral@@"bankDao cannot be null" @TO@ SimpleName@@MethodName:notNull:[bankDao] @AT@ 897 @LENGTH@ 24


INS IfStatement@@if (context.hasOptionalCapability("org.wildfly.remoting.endpoint",TransactionSubsystemRootResourceDefinition.TRANSACTION_CAPABILITY.getName(),null)) {  final RemotingTransactionServiceService remoteTransactionServiceService=new RemotingTransactionServiceService();  context.getServiceTarget().addService(TxnServices.JBOSS_TXN_REMOTE_TRANSACTION_SERVICE,remoteTransactionServiceService).addDependency(TxnServices.JBOSS_TXN_LOCAL_TRANSACTION_CONTEXT,LocalTransactionContext.class,remoteTransactionServiceService.getLocalTransactionContextInjector()).addDependency(RemotingServices.SUBSYSTEM_ENDPOINT,Endpoint.class,remoteTransactionServiceService.getEndpointInjector()).setInitialMode(Mode.ACTIVE).install();} @TO@ MethodDeclaration@@protected, void, MethodName:performBoottime, OperationContext context, ModelNode operation, ModelNode model, OperationFailedException,  @AT@ 14115 @LENGTH@ 814
---INS MethodInvocation@@context.hasOptionalCapability("org.wildfly.remoting.endpoint",TransactionSubsystemRootResourceDefinition.TRANSACTION_CAPABILITY.getName(),null) @TO@ IfStatement@@if (context.hasOptionalCapability("org.wildfly.remoting.endpoint",TransactionSubsystemRootResourceDefinition.TRANSACTION_CAPABILITY.getName(),null)) {  final RemotingTransactionServiceService remoteTransactionServiceService=new RemotingTransactionServiceService();  context.getServiceTarget().addService(TxnServices.JBOSS_TXN_REMOTE_TRANSACTION_SERVICE,remoteTransactionServiceService).addDependency(TxnServices.JBOSS_TXN_LOCAL_TRANSACTION_CONTEXT,LocalTransactionContext.class,remoteTransactionServiceService.getLocalTransactionContextInjector()).addDependency(RemotingServices.SUBSYSTEM_ENDPOINT,Endpoint.class,remoteTransactionServiceService.getEndpointInjector()).setInitialMode(Mode.ACTIVE).install();} @AT@ 14119 @LENGTH@ 144
------INS SimpleName@@Name:context @TO@ MethodInvocation@@context.hasOptionalCapability("org.wildfly.remoting.endpoint",TransactionSubsystemRootResourceDefinition.TRANSACTION_CAPABILITY.getName(),null) @AT@ 14119 @LENGTH@ 7
------INS SimpleName@@MethodName:hasOptionalCapability:["org.wildfly.remoting.endpoint", TransactionSubsystemRootResourceDefinition.TRANSACTION_CAPABILITY.getName(), null] @TO@ MethodInvocation@@context.hasOptionalCapability("org.wildfly.remoting.endpoint",TransactionSubsystemRootResourceDefinition.TRANSACTION_CAPABILITY.getName(),null) @AT@ 14127 @LENGTH@ 136
---------INS StringLiteral@@"org.wildfly.remoting.endpoint" @TO@ SimpleName@@MethodName:hasOptionalCapability:["org.wildfly.remoting.endpoint", TransactionSubsystemRootResourceDefinition.TRANSACTION_CAPABILITY.getName(), null] @AT@ 14149 @LENGTH@ 31
---------INS MethodInvocation@@TransactionSubsystemRootResourceDefinition.TRANSACTION_CAPABILITY.getName() @TO@ SimpleName@@MethodName:hasOptionalCapability:["org.wildfly.remoting.endpoint", TransactionSubsystemRootResourceDefinition.TRANSACTION_CAPABILITY.getName(), null] @AT@ 14182 @LENGTH@ 75
------------INS QualifiedName@@Name:TransactionSubsystemRootResourceDefinition.TRANSACTION_CAPABILITY @TO@ MethodInvocation@@TransactionSubsystemRootResourceDefinition.TRANSACTION_CAPABILITY.getName() @AT@ 14182 @LENGTH@ 65
------------INS SimpleName@@MethodName:getName:[] @TO@ MethodInvocation@@TransactionSubsystemRootResourceDefinition.TRANSACTION_CAPABILITY.getName() @AT@ 14248 @LENGTH@ 9
---------INS NullLiteral@@null @TO@ SimpleName@@MethodName:hasOptionalCapability:["org.wildfly.remoting.endpoint", TransactionSubsystemRootResourceDefinition.TRANSACTION_CAPABILITY.getName(), null] @AT@ 14258 @LENGTH@ 4
---INS Block@@ThenBody:{  final RemotingTransactionServiceService remoteTransactionServiceService=new RemotingTransactionServiceService();  context.getServiceTarget().addService(TxnServices.JBOSS_TXN_REMOTE_TRANSACTION_SERVICE,remoteTransactionServiceService).addDependency(TxnServices.JBOSS_TXN_LOCAL_TRANSACTION_CONTEXT,LocalTransactionContext.class,remoteTransactionServiceService.getLocalTransactionContextInjector()).addDependency(RemotingServices.SUBSYSTEM_ENDPOINT,Endpoint.class,remoteTransactionServiceService.getEndpointInjector()).setInitialMode(Mode.ACTIVE).install();} @TO@ IfStatement@@if (context.hasOptionalCapability("org.wildfly.remoting.endpoint",TransactionSubsystemRootResourceDefinition.TRANSACTION_CAPABILITY.getName(),null)) {  final RemotingTransactionServiceService remoteTransactionServiceService=new RemotingTransactionServiceService();  context.getServiceTarget().addService(TxnServices.JBOSS_TXN_REMOTE_TRANSACTION_SERVICE,remoteTransactionServiceService).addDependency(TxnServices.JBOSS_TXN_LOCAL_TRANSACTION_CONTEXT,LocalTransactionContext.class,remoteTransactionServiceService.getLocalTransactionContextInjector()).addDependency(RemotingServices.SUBSYSTEM_ENDPOINT,Endpoint.class,remoteTransactionServiceService.getEndpointInjector()).setInitialMode(Mode.ACTIVE).install();} @AT@ 14265 @LENGTH@ 664
------MOV VariableDeclarationStatement@@final RemotingTransactionServiceService remoteTransactionServiceService=new RemotingTransactionServiceService(); @TO@ Block@@ThenBody:{  final RemotingTransactionServiceService remoteTransactionServiceService=new RemotingTransactionServiceService();  context.getServiceTarget().addService(TxnServices.JBOSS_TXN_REMOTE_TRANSACTION_SERVICE,remoteTransactionServiceService).addDependency(TxnServices.JBOSS_TXN_LOCAL_TRANSACTION_CONTEXT,LocalTransactionContext.class,remoteTransactionServiceService.getLocalTransactionContextInjector()).addDependency(RemotingServices.SUBSYSTEM_ENDPOINT,Endpoint.class,remoteTransactionServiceService.getEndpointInjector()).setInitialMode(Mode.ACTIVE).install();} @AT@ 14115 @LENGTH@ 114
------MOV ExpressionStatement@@MethodInvocation:context.getServiceTarget().addService(TxnServices.JBOSS_TXN_REMOTE_TRANSACTION_SERVICE,remoteTransactionServiceService).addDependency(TxnServices.JBOSS_TXN_LOCAL_TRANSACTION_CONTEXT,LocalTransactionContext.class,remoteTransactionServiceService.getLocalTransactionContextInjector()).addDependency(RemotingServices.SUBSYSTEM_ENDPOINT,Endpoint.class,remoteTransactionServiceService.getEndpointInjector()).setInitialMode(Mode.ACTIVE).install() @TO@ Block@@ThenBody:{  final RemotingTransactionServiceService remoteTransactionServiceService=new RemotingTransactionServiceService();  context.getServiceTarget().addService(TxnServices.JBOSS_TXN_REMOTE_TRANSACTION_SERVICE,remoteTransactionServiceService).addDependency(TxnServices.JBOSS_TXN_LOCAL_TRANSACTION_CONTEXT,LocalTransactionContext.class,remoteTransactionServiceService.getLocalTransactionContextInjector()).addDependency(RemotingServices.SUBSYSTEM_ENDPOINT,Endpoint.class,remoteTransactionServiceService.getEndpointInjector()).setInitialMode(Mode.ACTIVE).install();} @AT@ 14238 @LENGTH@ 513


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled(); @AT@ 5311 @LENGTH@ 160
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5319 @LENGTH@ 151
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5319 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5336 @LENGTH@ 134
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 5336 @LENGTH@ 64
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5336 @LENGTH@ 35
---------UPD MethodInvocation@@componentConfiguration.getConfigurer().isEnabled() @TO@ componentConfiguration.getCustomizer().isEnabled() @AT@ 5420 @LENGTH@ 50
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5420 @LENGTH@ 38


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<HazelcastRingbufferComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<HazelcastRingbufferComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5686 @LENGTH@ 352
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 5690 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5690 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  ComponentCustomizer<HazelcastRingbufferComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ ThenBody:{  for (  ComponentCustomizer<HazelcastRingbufferComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5746 @LENGTH@ 292
------UPD EnhancedForStatement@@for (ComponentCustomizer<HazelcastRingbufferComponent> configurer : customizers) {  LOGGER.debug("Configure component {}, with configurer {}",component,configurer);  configurer.customize(component);} @TO@ for (ComponentCustomizer<HazelcastRingbufferComponent> customizer : customizers) {  LOGGER.debug("Configure component {}, with customizer {}",component,customizer);  customizer.customize(component);} @AT@ 5760 @LENGTH@ 268
---------UPD SingleVariableDeclaration@@ComponentCustomizer<HazelcastRingbufferComponent> configurer @TO@ ComponentCustomizer<HazelcastRingbufferComponent> customizer @AT@ 5765 @LENGTH@ 60
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5815 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5859 @LENGTH@ 106
------------UPD MethodInvocation@@LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5859 @LENGTH@ 105
---------------UPD SimpleName@@MethodName:debug:["Configure component {}, with configurer {}", component, configurer] @TO@ MethodName:debug:["Configure component {}, with customizer {}", component, customizer] @AT@ 5866 @LENGTH@ 98
------------------UPD StringLiteral@@"Configure component {}, with configurer {}" @TO@ "Configure component {}, with customizer {}" @AT@ 5872 @LENGTH@ 44
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5953 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(component) @TO@ MethodInvocation:customizer.customize(component) @AT@ 5982 @LENGTH@ 32
------------UPD MethodInvocation@@configurer.customize(component) @TO@ customizer.customize(component) @AT@ 5982 @LENGTH@ 31
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5982 @LENGTH@ 10


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && dataformatConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && dataformatConfiguration.getCustomizer().isEnabled(); @AT@ 5176 @LENGTH@ 177
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && dataformatConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && dataformatConfiguration.getCustomizer().isEnabled() @AT@ 5184 @LENGTH@ 168
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5184 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && dataformatConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && dataformatConfiguration.getCustomizer().isEnabled() @AT@ 5201 @LENGTH@ 151
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 5201 @LENGTH@ 72
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5201 @LENGTH@ 35
---------UPD MethodInvocation@@dataformatConfiguration.getConfigurer().isEnabled() @TO@ dataformatConfiguration.getCustomizer().isEnabled() @AT@ 5301 @LENGTH@ 51
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5301 @LENGTH@ 39


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<HazelcastSedaComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<HazelcastSedaComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5584 @LENGTH@ 346
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 5588 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5588 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  ComponentCustomizer<HazelcastSedaComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ ThenBody:{  for (  ComponentCustomizer<HazelcastSedaComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5644 @LENGTH@ 286
------UPD EnhancedForStatement@@for (ComponentCustomizer<HazelcastSedaComponent> configurer : customizers) {  LOGGER.debug("Configure component {}, with configurer {}",component,configurer);  configurer.customize(component);} @TO@ for (ComponentCustomizer<HazelcastSedaComponent> customizer : customizers) {  LOGGER.debug("Configure component {}, with customizer {}",component,customizer);  customizer.customize(component);} @AT@ 5658 @LENGTH@ 262
---------UPD SingleVariableDeclaration@@ComponentCustomizer<HazelcastSedaComponent> configurer @TO@ ComponentCustomizer<HazelcastSedaComponent> customizer @AT@ 5663 @LENGTH@ 54
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5707 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5751 @LENGTH@ 106
------------UPD MethodInvocation@@LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5751 @LENGTH@ 105
---------------UPD SimpleName@@MethodName:debug:["Configure component {}, with configurer {}", component, configurer] @TO@ MethodName:debug:["Configure component {}, with customizer {}", component, customizer] @AT@ 5758 @LENGTH@ 98
------------------UPD StringLiteral@@"Configure component {}, with configurer {}" @TO@ "Configure component {}, with customizer {}" @AT@ 5764 @LENGTH@ 44
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5845 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(component) @TO@ MethodInvocation:customizer.customize(component) @AT@ 5874 @LENGTH@ 32
------------UPD MethodInvocation@@configurer.customize(component) @TO@ customizer.customize(component) @AT@ 5874 @LENGTH@ 31
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5874 @LENGTH@ 10


UPD ExpressionStatement@@MethodInvocation:fail("Should have thrown NoSuchProviderException as stmp protocol cannot be used for consuming mails") @TO@ MethodInvocation:fail("Should have thrown NoSuchProviderException as smtp protocol cannot be used for consuming mails") @AT@ 1420 @LENGTH@ 103
---UPD MethodInvocation@@fail("Should have thrown NoSuchProviderException as stmp protocol cannot be used for consuming mails") @TO@ fail("Should have thrown NoSuchProviderException as smtp protocol cannot be used for consuming mails") @AT@ 1420 @LENGTH@ 102
------UPD SimpleName@@MethodName:fail:["Should have thrown NoSuchProviderException as stmp protocol cannot be used for consuming mails"] @TO@ MethodName:fail:["Should have thrown NoSuchProviderException as smtp protocol cannot be used for consuming mails"] @AT@ 1420 @LENGTH@ 102
---------UPD StringLiteral@@"Should have thrown NoSuchProviderException as stmp protocol cannot be used for consuming mails" @TO@ "Should have thrown NoSuchProviderException as smtp protocol cannot be used for consuming mails" @AT@ 1425 @LENGTH@ 96


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && languageConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && languageConfiguration.getCustomizer().isEnabled(); @AT@ 4521 @LENGTH@ 159
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && languageConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && languageConfiguration.getCustomizer().isEnabled() @AT@ 4529 @LENGTH@ 150
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 4529 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && languageConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && languageConfiguration.getCustomizer().isEnabled() @AT@ 4546 @LENGTH@ 133
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 4546 @LENGTH@ 64
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 4546 @LENGTH@ 35
---------UPD MethodInvocation@@languageConfiguration.getConfigurer().isEnabled() @TO@ languageConfiguration.getCustomizer().isEnabled() @AT@ 4630 @LENGTH@ 49
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 4630 @LENGTH@ 37


UPD FieldDeclaration@@static, final, RuntimeCapability<Consumer<ServiceBuilder>>, [ELYTRON_RUNTIME_CAPABILITY=RuntimeCapability.Builder.of(ELYTRON_CAPABILITY,(Consumer<ServiceBuilder>)ElytronDefinition::commonDependencies).build()] @TO@ static, final, RuntimeCapability<Consumer<ServiceBuilder>>, [ELYTRON_RUNTIME_CAPABILITY=RuntimeCapability.Builder.of(ELYTRON_CAPABILITY,COMMON_DEPENDENCIES).build()] @AT@ 3862 @LENGTH@ 235
---UPD VariableDeclarationFragment@@ELYTRON_RUNTIME_CAPABILITY=RuntimeCapability.Builder.of(ELYTRON_CAPABILITY,(Consumer<ServiceBuilder>)ElytronDefinition::commonDependencies).build() @TO@ ELYTRON_RUNTIME_CAPABILITY=RuntimeCapability.Builder.of(ELYTRON_CAPABILITY,COMMON_DEPENDENCIES).build() @AT@ 3919 @LENGTH@ 177
------UPD MethodInvocation@@RuntimeCapability.Builder.of(ELYTRON_CAPABILITY,(Consumer<ServiceBuilder>)ElytronDefinition::commonDependencies).build() @TO@ RuntimeCapability.Builder.of(ELYTRON_CAPABILITY,COMMON_DEPENDENCIES).build() @AT@ 3948 @LENGTH@ 148
---------UPD MethodInvocation@@MethodName:of:[ELYTRON_CAPABILITY, (Consumer<ServiceBuilder>)ElytronDefinition::commonDependencies] @TO@ MethodName:of:[ELYTRON_CAPABILITY, COMMON_DEPENDENCIES] @AT@ 3948 @LENGTH@ 127
------------DEL CastExpression@@(Consumer<ServiceBuilder>)ElytronDefinition::commonDependencies @AT@ 4010 @LENGTH@ 64
---------------DEL ParameterizedType@@Consumer<ServiceBuilder> @AT@ 4011 @LENGTH@ 24
------------------DEL SimpleType@@Consumer @AT@ 4011 @LENGTH@ 8
------------------DEL SimpleType@@ServiceBuilder @AT@ 4020 @LENGTH@ 14
------------INS SimpleName@@COMMON_DEPENDENCIES @TO@ MethodInvocation@@MethodName:of:[ELYTRON_CAPABILITY, (Consumer<ServiceBuilder>)ElytronDefinition::commonDependencies] @AT@ 4504 @LENGTH@ 19


UPD ExpressionStatement@@MethodInvocation:Assert.assertEquals(VerificationError.StandardCode.EXCEPTION,result.getErrors().get(0).getCode()) @TO@ MethodInvocation:Assert.assertEquals(VerificationError.StandardCode.AUTHENTICATION,result.getErrors().get(0).getCode()) @AT@ 6488 @LENGTH@ 99
---UPD MethodInvocation@@Assert.assertEquals(VerificationError.StandardCode.EXCEPTION,result.getErrors().get(0).getCode()) @TO@ Assert.assertEquals(VerificationError.StandardCode.AUTHENTICATION,result.getErrors().get(0).getCode()) @AT@ 6488 @LENGTH@ 98
------UPD SimpleName@@MethodName:assertEquals:[VerificationError.StandardCode.EXCEPTION, result.getErrors().get(0).getCode()] @TO@ MethodName:assertEquals:[VerificationError.StandardCode.AUTHENTICATION, result.getErrors().get(0).getCode()] @AT@ 6495 @LENGTH@ 91
---------UPD QualifiedName@@VerificationError.StandardCode.EXCEPTION @TO@ VerificationError.StandardCode.AUTHENTICATION @AT@ 6508 @LENGTH@ 40
------------UPD SimpleName@@EXCEPTION @TO@ AUTHENTICATION @AT@ 6539 @LENGTH@ 9


UPD ExpressionStatement@@MethodInvocation:Assert.isTrue(AuthorizationGrantType.AUTHORIZATION_CODE.equals(this.authorizedGrantType),"authorizedGrantType must be " + AuthorizationGrantType.AUTHORIZATION_CODE.value()) @TO@ MethodInvocation:Assert.isTrue(AuthorizationGrantType.AUTHORIZATION_CODE.equals(this.authorizedGrantType),"authorizedGrantType must be " + AuthorizationGrantType.AUTHORIZATION_CODE.getValue()) @AT@ 8056 @LENGTH@ 178
---UPD MethodInvocation@@Assert.isTrue(AuthorizationGrantType.AUTHORIZATION_CODE.equals(this.authorizedGrantType),"authorizedGrantType must be " + AuthorizationGrantType.AUTHORIZATION_CODE.value()) @TO@ Assert.isTrue(AuthorizationGrantType.AUTHORIZATION_CODE.equals(this.authorizedGrantType),"authorizedGrantType must be " + AuthorizationGrantType.AUTHORIZATION_CODE.getValue()) @AT@ 8056 @LENGTH@ 177
------UPD SimpleName@@MethodName:isTrue:[AuthorizationGrantType.AUTHORIZATION_CODE.equals(this.authorizedGrantType), "authorizedGrantType must be " + AuthorizationGrantType.AUTHORIZATION_CODE.value()] @TO@ MethodName:isTrue:[AuthorizationGrantType.AUTHORIZATION_CODE.equals(this.authorizedGrantType), "authorizedGrantType must be " + AuthorizationGrantType.AUTHORIZATION_CODE.getValue()] @AT@ 8063 @LENGTH@ 170
---------UPD InfixExpression@@"authorizedGrantType must be " + AuthorizationGrantType.AUTHORIZATION_CODE.value() @TO@ "authorizedGrantType must be " + AuthorizationGrantType.AUTHORIZATION_CODE.getValue() @AT@ 8150 @LENGTH@ 82
------------UPD MethodInvocation@@AuthorizationGrantType.AUTHORIZATION_CODE.value() @TO@ AuthorizationGrantType.AUTHORIZATION_CODE.getValue() @AT@ 8183 @LENGTH@ 49
---------------UPD SimpleName@@MethodName:value:[] @TO@ MethodName:getValue:[] @AT@ 8225 @LENGTH@ 7


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  DataFormatCustomizer<UniVocityCsvDataFormat> configurer : customizers) {    LOGGER.debug("Configure dataformat {}, with configurer {}",dataformat,configurer);    configurer.customize(dataformat);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  DataFormatCustomizer<UniVocityCsvDataFormat> customizer : customizers) {    LOGGER.debug("Configure dataformat {}, with customizer {}",dataformat,customizer);    customizer.customize(dataformat);  }} @AT@ 5450 @LENGTH@ 431
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 5454 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5454 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  DataFormatCustomizer<UniVocityCsvDataFormat> configurer : customizers) {    LOGGER.debug("Configure dataformat {}, with configurer {}",dataformat,configurer);    configurer.customize(dataformat);  }} @TO@ ThenBody:{  for (  DataFormatCustomizer<UniVocityCsvDataFormat> customizer : customizers) {    LOGGER.debug("Configure dataformat {}, with customizer {}",dataformat,customizer);    customizer.customize(dataformat);  }} @AT@ 5510 @LENGTH@ 371
------UPD EnhancedForStatement@@for (DataFormatCustomizer<UniVocityCsvDataFormat> configurer : customizers) {  LOGGER.debug("Configure dataformat {}, with configurer {}",dataformat,configurer);  configurer.customize(dataformat);} @TO@ for (DataFormatCustomizer<UniVocityCsvDataFormat> customizer : customizers) {  LOGGER.debug("Configure dataformat {}, with customizer {}",dataformat,customizer);  customizer.customize(dataformat);} @AT@ 5532 @LENGTH@ 331
---------UPD SingleVariableDeclaration@@DataFormatCustomizer<UniVocityCsvDataFormat> configurer @TO@ DataFormatCustomizer<UniVocityCsvDataFormat> customizer @AT@ 5537 @LENGTH@ 55
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5582 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure dataformat {}, with configurer {}",dataformat,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure dataformat {}, with customizer {}",dataformat,customizer) @AT@ 5634 @LENGTH@ 149
------------UPD MethodInvocation@@LOGGER.debug("Configure dataformat {}, with configurer {}",dataformat,configurer) @TO@ LOGGER.debug("Configure dataformat {}, with customizer {}",dataformat,customizer) @AT@ 5634 @LENGTH@ 148
---------------UPD SimpleName@@MethodName:debug:["Configure dataformat {}, with configurer {}", dataformat, configurer] @TO@ MethodName:debug:["Configure dataformat {}, with customizer {}", dataformat, customizer] @AT@ 5641 @LENGTH@ 141
------------------UPD StringLiteral@@"Configure dataformat {}, with configurer {}" @TO@ "Configure dataformat {}, with customizer {}" @AT@ 5680 @LENGTH@ 45
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5771 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(dataformat) @TO@ MethodInvocation:customizer.customize(dataformat) @AT@ 5808 @LENGTH@ 33
------------UPD MethodInvocation@@configurer.customize(dataformat) @TO@ customizer.customize(dataformat) @AT@ 5808 @LENGTH@ 32
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5808 @LENGTH@ 10


UPD FieldDeclaration@@public, static, String, [HIVE_LIST_BUCKETING_DEFAULT_KEY="HIVE_DEFAULT_LIST_BUCKETING_KEY"] @TO@ public, static, final, String, [HIVE_LIST_BUCKETING_DEFAULT_KEY="HIVE_DEFAULT_LIST_BUCKETING_KEY"] @AT@ 1782 @LENGTH@ 89
---INS Modifier@@final @TO@ FieldDeclaration@@public, static, String, [HIVE_LIST_BUCKETING_DEFAULT_KEY="HIVE_DEFAULT_LIST_BUCKETING_KEY"] @AT@ 1802 @LENGTH@ 5


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<VelocityComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<VelocityComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5463 @LENGTH@ 341
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 5467 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5467 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  ComponentCustomizer<VelocityComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ ThenBody:{  for (  ComponentCustomizer<VelocityComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5523 @LENGTH@ 281
------UPD EnhancedForStatement@@for (ComponentCustomizer<VelocityComponent> configurer : customizers) {  LOGGER.debug("Configure component {}, with configurer {}",component,configurer);  configurer.customize(component);} @TO@ for (ComponentCustomizer<VelocityComponent> customizer : customizers) {  LOGGER.debug("Configure component {}, with customizer {}",component,customizer);  customizer.customize(component);} @AT@ 5537 @LENGTH@ 257
---------UPD SingleVariableDeclaration@@ComponentCustomizer<VelocityComponent> configurer @TO@ ComponentCustomizer<VelocityComponent> customizer @AT@ 5542 @LENGTH@ 49
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5581 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5625 @LENGTH@ 106
------------UPD MethodInvocation@@LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5625 @LENGTH@ 105
---------------UPD SimpleName@@MethodName:debug:["Configure component {}, with configurer {}", component, configurer] @TO@ MethodName:debug:["Configure component {}, with customizer {}", component, customizer] @AT@ 5632 @LENGTH@ 98
------------------UPD StringLiteral@@"Configure component {}, with configurer {}" @TO@ "Configure component {}, with customizer {}" @AT@ 5638 @LENGTH@ 44
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5719 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(component) @TO@ MethodInvocation:customizer.customize(component) @AT@ 5748 @LENGTH@ 32
------------UPD MethodInvocation@@configurer.customize(component) @TO@ customizer.customize(component) @AT@ 5748 @LENGTH@ 31
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5748 @LENGTH@ 10


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled(); @AT@ 5328 @LENGTH@ 160
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5336 @LENGTH@ 151
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5336 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5353 @LENGTH@ 134
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 5353 @LENGTH@ 64
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5353 @LENGTH@ 35
---------UPD MethodInvocation@@componentConfiguration.getConfigurer().isEnabled() @TO@ componentConfiguration.getCustomizer().isEnabled() @AT@ 5437 @LENGTH@ 50
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5437 @LENGTH@ 38


UPD VariableDeclarationStatement@@CommonBean<List<String>> listBean=CommonBeanBuilder.newBuilder().beanClass(CommandLineArgsExtension.class).scope(Dependent.class).createSupplier(() -> argsList).addQualifier(DefaultLiteral.INSTANCE).addType(List.class).addType(Object.class).build(); @TO@ CommonBean<List> listBean=CommonBeanBuilder.newBuilder(List.class).beanClass(CommandLineArgsExtension.class).scope(Dependent.class).createSupplier(() -> argsList).addQualifier(DefaultLiteral.INSTANCE).addType(List.class).addType(Object.class).build(); @AT@ 1951 @LENGTH@ 353
---UPD ParameterizedType@@CommonBean<List<String>> @TO@ CommonBean<List> @AT@ 1951 @LENGTH@ 24
------DEL ParameterizedType@@List<String> @AT@ 1962 @LENGTH@ 12
---------DEL SimpleType@@String @AT@ 1967 @LENGTH@ 6
------MOV SimpleType@@List @TO@ ParameterizedType@@CommonBean<List<String>> @AT@ 1962 @LENGTH@ 4
---UPD VariableDeclarationFragment@@listBean=CommonBeanBuilder.newBuilder().beanClass(CommandLineArgsExtension.class).scope(Dependent.class).createSupplier(() -> argsList).addQualifier(DefaultLiteral.INSTANCE).addType(List.class).addType(Object.class).build() @TO@ listBean=CommonBeanBuilder.newBuilder(List.class).beanClass(CommandLineArgsExtension.class).scope(Dependent.class).createSupplier(() -> argsList).addQualifier(DefaultLiteral.INSTANCE).addType(List.class).addType(Object.class).build() @AT@ 1976 @LENGTH@ 327
------UPD MethodInvocation@@CommonBeanBuilder.newBuilder().beanClass(CommandLineArgsExtension.class).scope(Dependent.class).createSupplier(() -> argsList).addQualifier(DefaultLiteral.INSTANCE).addType(List.class).addType(Object.class).build() @TO@ CommonBeanBuilder.newBuilder(List.class).beanClass(CommandLineArgsExtension.class).scope(Dependent.class).createSupplier(() -> argsList).addQualifier(DefaultLiteral.INSTANCE).addType(List.class).addType(Object.class).build() @AT@ 1987 @LENGTH@ 316
---------UPD MethodInvocation@@MethodName:newBuilder:[] @TO@ MethodName:newBuilder:[List.class] @AT@ 1987 @LENGTH@ 30
------------INS TypeLiteral@@List.class @TO@ MethodInvocation@@MethodName:newBuilder:[] @AT@ 2022 @LENGTH@ 10


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled(); @AT@ 5277 @LENGTH@ 160
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5285 @LENGTH@ 151
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5285 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5302 @LENGTH@ 134
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 5302 @LENGTH@ 64
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5302 @LENGTH@ 35
---------UPD MethodInvocation@@componentConfiguration.getConfigurer().isEnabled() @TO@ componentConfiguration.getCustomizer().isEnabled() @AT@ 5386 @LENGTH@ 50
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5386 @LENGTH@ 38


UPD ReturnStatement@@MethodInvocation:multiHashOrdered(parentHashCode(),10391,protocol.hashCode()) @TO@ MethodInvocation:multiHashUnordered(parentHashCode(),10391,protocol.hashCode()) @AT@ 1751 @LENGTH@ 70
---UPD MethodInvocation@@multiHashOrdered(parentHashCode(),10391,protocol.hashCode()) @TO@ multiHashUnordered(parentHashCode(),10391,protocol.hashCode()) @AT@ 1758 @LENGTH@ 62
------UPD SimpleName@@MethodName:multiHashOrdered:[parentHashCode(), 10391, protocol.hashCode()] @TO@ MethodName:multiHashUnordered:[parentHashCode(), 10391, protocol.hashCode()] @AT@ 1758 @LENGTH@ 62


UPD TryStatement@@try {  this.channel.basicCancel(consumerTag);} catch (IOException e) {  if (logger.isDebugEnabled()) {    logger.debug("Error performing 'basicCancel'",e);  }}catch (AlreadyClosedException e) {  if (logger.isTraceEnabled()) {    logger.trace(this.channel + " is already closed");  }} @TO@ try {  if (this.channel.isOpen()) {    this.channel.basicCancel(consumerTag);  }} catch (IOException|IllegalStateException e) {  if (logger.isDebugEnabled()) {    logger.debug("Error performing 'basicCancel'",e);  }}catch (AlreadyClosedException e) {  if (logger.isTraceEnabled()) {    logger.trace(this.channel + " is already closed");  }} @AT@ 13001 @LENGTH@ 322
---INS IfStatement@@if (this.channel.isOpen()) {  this.channel.basicCancel(consumerTag);} @TO@ TryStatement@@try {  this.channel.basicCancel(consumerTag);} catch (IOException e) {  if (logger.isDebugEnabled()) {    logger.debug("Error performing 'basicCancel'",e);  }}catch (AlreadyClosedException e) {  if (logger.isTraceEnabled()) {    logger.trace(this.channel + " is already closed");  }} @AT@ 13011 @LENGTH@ 78
------INS MethodInvocation@@this.channel.isOpen() @TO@ IfStatement@@if (this.channel.isOpen()) {  this.channel.basicCancel(consumerTag);} @AT@ 13015 @LENGTH@ 21
---------INS FieldAccess@@this.channel @TO@ MethodInvocation@@this.channel.isOpen() @AT@ 13015 @LENGTH@ 12
------------INS ThisExpression@@this @TO@ FieldAccess@@this.channel @AT@ 13015 @LENGTH@ 4
------------INS SimpleName@@channel @TO@ FieldAccess@@this.channel @AT@ 13020 @LENGTH@ 7
---------INS SimpleName@@MethodName:isOpen:[] @TO@ MethodInvocation@@this.channel.isOpen() @AT@ 13028 @LENGTH@ 8
------INS Block@@ThenBody:{  this.channel.basicCancel(consumerTag);} @TO@ IfStatement@@if (this.channel.isOpen()) {  this.channel.basicCancel(consumerTag);} @AT@ 13038 @LENGTH@ 51
---------MOV ExpressionStatement@@MethodInvocation:this.channel.basicCancel(consumerTag) @TO@ Block@@ThenBody:{  this.channel.basicCancel(consumerTag);} @AT@ 13011 @LENGTH@ 38
---UPD CatchClause@@catch (IOException e) {  if (logger.isDebugEnabled()) {    logger.debug("Error performing 'basicCancel'",e);  }} @TO@ catch (IOException|IllegalStateException e) {  if (logger.isDebugEnabled()) {    logger.debug("Error performing 'basicCancel'",e);  }} @AT@ 13058 @LENGTH@ 125
------UPD SingleVariableDeclaration@@IOException e @TO@ IOException|IllegalStateException e @AT@ 13065 @LENGTH@ 13
---------DEL SimpleType@@IOException @AT@ 13065 @LENGTH@ 11
---------INS UnionType@@IOException|IllegalStateException @TO@ SingleVariableDeclaration@@IOException e @AT@ 13105 @LENGTH@ 35
------------INS SimpleType@@IOException @TO@ UnionType@@IOException|IllegalStateException @AT@ 13105 @LENGTH@ 11
------------INS SimpleType@@IllegalStateException @TO@ UnionType@@IOException|IllegalStateException @AT@ 13119 @LENGTH@ 21


MOV FieldDeclaration@@private, static, final, Logger, [LOG=LoggerFactory.getLogger("hive.ql.exec.HiveHistoryImpl")] @TO@ TypeDeclaration@@[public]HiveHistoryImpl, [HiveHistory] @AT@ 1899 @LENGTH@ 90


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  DataFormatCustomizer<FlatpackDataFormat> configurer : customizers) {    LOGGER.debug("Configure dataformat {}, with configurer {}",dataformat,configurer);    configurer.customize(dataformat);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  DataFormatCustomizer<FlatpackDataFormat> customizer : customizers) {    LOGGER.debug("Configure dataformat {}, with customizer {}",dataformat,customizer);    customizer.customize(dataformat);  }} @AT@ 5366 @LENGTH@ 427
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 5370 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5370 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  DataFormatCustomizer<FlatpackDataFormat> configurer : customizers) {    LOGGER.debug("Configure dataformat {}, with configurer {}",dataformat,configurer);    configurer.customize(dataformat);  }} @TO@ ThenBody:{  for (  DataFormatCustomizer<FlatpackDataFormat> customizer : customizers) {    LOGGER.debug("Configure dataformat {}, with customizer {}",dataformat,customizer);    customizer.customize(dataformat);  }} @AT@ 5426 @LENGTH@ 367
------UPD EnhancedForStatement@@for (DataFormatCustomizer<FlatpackDataFormat> configurer : customizers) {  LOGGER.debug("Configure dataformat {}, with configurer {}",dataformat,configurer);  configurer.customize(dataformat);} @TO@ for (DataFormatCustomizer<FlatpackDataFormat> customizer : customizers) {  LOGGER.debug("Configure dataformat {}, with customizer {}",dataformat,customizer);  customizer.customize(dataformat);} @AT@ 5448 @LENGTH@ 327
---------UPD SingleVariableDeclaration@@DataFormatCustomizer<FlatpackDataFormat> configurer @TO@ DataFormatCustomizer<FlatpackDataFormat> customizer @AT@ 5453 @LENGTH@ 51
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5494 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure dataformat {}, with configurer {}",dataformat,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure dataformat {}, with customizer {}",dataformat,customizer) @AT@ 5546 @LENGTH@ 149
------------UPD MethodInvocation@@LOGGER.debug("Configure dataformat {}, with configurer {}",dataformat,configurer) @TO@ LOGGER.debug("Configure dataformat {}, with customizer {}",dataformat,customizer) @AT@ 5546 @LENGTH@ 148
---------------UPD SimpleName@@MethodName:debug:["Configure dataformat {}, with configurer {}", dataformat, configurer] @TO@ MethodName:debug:["Configure dataformat {}, with customizer {}", dataformat, customizer] @AT@ 5553 @LENGTH@ 141
------------------UPD StringLiteral@@"Configure dataformat {}, with configurer {}" @TO@ "Configure dataformat {}, with customizer {}" @AT@ 5592 @LENGTH@ 45
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5683 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(dataformat) @TO@ MethodInvocation:customizer.customize(dataformat) @AT@ 5720 @LENGTH@ 33
------------UPD MethodInvocation@@configurer.customize(dataformat) @TO@ customizer.customize(dataformat) @AT@ 5720 @LENGTH@ 32
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5720 @LENGTH@ 10


UPD IfStatement@@if (fastExistsCheck) {  LOG.trace("Using fast exists to update file information for {}",file);  files=operations.listFiles(file.getAbsoluteFilePath());} else {  LOG.trace("Using full directory listing to update file information for {}. Consider enabling fastExistsCheck option.",file);  files=operations.listFiles(file.getParent());} @TO@ if (fastExistsCheck) {  String path=file.getAbsoluteFilePath();  if (path.equals("/") || path.equals("\\")) {    LOG.trace("Using fast exists to update file information in home directory");    files=operations.listFiles();  } else {    LOG.trace("Using fast exists to update file information for {}",path);    files=operations.listFiles(path);  }} else {  String path=file.getParent();  if (path.equals("/") || path.equals("\\")) {    LOG.trace("Using full directory listing in home directory to update file information. Consider enabling fastExistsCheck option.");    files=operations.listFiles();  } else {    LOG.trace("Using full directory listing to update file information for {}. Consider enabling fastExistsCheck option.",path);    files=operations.listFiles(path);  }} @AT@ 3112 @LENGTH@ 704
---INS Block@@ThenBody:{  String path=file.getAbsoluteFilePath();  if (path.equals("/") || path.equals("\\")) {    LOG.trace("Using fast exists to update file information in home directory");    files=operations.listFiles();  } else {    LOG.trace("Using fast exists to update file information for {}",path);    files=operations.listFiles(path);  }} @TO@ IfStatement@@if (fastExistsCheck) {  LOG.trace("Using fast exists to update file information for {}",file);  files=operations.listFiles(file.getAbsoluteFilePath());} else {  LOG.trace("Using full directory listing to update file information for {}. Consider enabling fastExistsCheck option.",file);  files=operations.listFiles(file.getParent());} @AT@ 3131 @LENGTH@ 721
------INS VariableDeclarationStatement@@String path=file.getAbsoluteFilePath(); @TO@ Block@@ThenBody:{  String path=file.getAbsoluteFilePath();  if (path.equals("/") || path.equals("\\")) {    LOG.trace("Using fast exists to update file information in home directory");    files=operations.listFiles();  } else {    LOG.trace("Using fast exists to update file information for {}",path);    files=operations.listFiles(path);  }} @AT@ 3337 @LENGTH@ 41
---------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String path=file.getAbsoluteFilePath(); @AT@ 3337 @LENGTH@ 6
---------INS VariableDeclarationFragment@@path=file.getAbsoluteFilePath() @TO@ VariableDeclarationStatement@@String path=file.getAbsoluteFilePath(); @AT@ 3344 @LENGTH@ 33
------------INS SimpleName@@path @TO@ VariableDeclarationFragment@@path=file.getAbsoluteFilePath() @AT@ 3344 @LENGTH@ 4
------------INS MethodInvocation@@file.getAbsoluteFilePath() @TO@ VariableDeclarationFragment@@path=file.getAbsoluteFilePath() @AT@ 3351 @LENGTH@ 26
---------------INS SimpleName@@Name:file @TO@ MethodInvocation@@file.getAbsoluteFilePath() @AT@ 3351 @LENGTH@ 4
---------------INS SimpleName@@MethodName:getAbsoluteFilePath:[] @TO@ MethodInvocation@@file.getAbsoluteFilePath() @AT@ 3356 @LENGTH@ 21
------INS IfStatement@@if (path.equals("/") || path.equals("\\")) {  LOG.trace("Using fast exists to update file information in home directory");  files=operations.listFiles();} else {  LOG.trace("Using fast exists to update file information for {}",path);  files=operations.listFiles(path);} @TO@ Block@@ThenBody:{  String path=file.getAbsoluteFilePath();  if (path.equals("/") || path.equals("\\")) {    LOG.trace("Using fast exists to update file information in home directory");    files=operations.listFiles();  } else {    LOG.trace("Using fast exists to update file information for {}",path);    files=operations.listFiles(path);  }} @AT@ 3395 @LENGTH@ 443
---------MOV Block@@ThenBody:{  LOG.trace("Using fast exists to update file information for {}",file);  files=operations.listFiles(file.getAbsoluteFilePath());} @TO@ IfStatement@@if (path.equals("/") || path.equals("\\")) {  LOG.trace("Using fast exists to update file information in home directory");  files=operations.listFiles();} else {  LOG.trace("Using fast exists to update file information for {}",path);  files=operations.listFiles(path);} @AT@ 3133 @LENGTH@ 365
------------UPD ExpressionStatement@@MethodInvocation:LOG.trace("Using fast exists to update file information for {}",file) @TO@ MethodInvocation:LOG.trace("Using fast exists to update file information for {}",path) @AT@ 3339 @LENGTH@ 71
---------------UPD MethodInvocation@@LOG.trace("Using fast exists to update file information for {}",file) @TO@ LOG.trace("Using fast exists to update file information for {}",path) @AT@ 3339 @LENGTH@ 70
------------------UPD SimpleName@@MethodName:trace:["Using fast exists to update file information for {}", file] @TO@ MethodName:trace:["Using fast exists to update file information for {}", path] @AT@ 3343 @LENGTH@ 66
---------------------UPD SimpleName@@file @TO@ path @AT@ 3404 @LENGTH@ 4
------------UPD ExpressionStatement@@Assignment:files=operations.listFiles(file.getAbsoluteFilePath()) @TO@ Assignment:files=operations.listFiles(path) @AT@ 3427 @LENGTH@ 57
---------------UPD Assignment@@files=operations.listFiles(file.getAbsoluteFilePath()) @TO@ files=operations.listFiles(path) @AT@ 3427 @LENGTH@ 56
------------------UPD MethodInvocation@@operations.listFiles(file.getAbsoluteFilePath()) @TO@ operations.listFiles(path) @AT@ 3435 @LENGTH@ 48
---------------------UPD SimpleName@@MethodName:listFiles:[file.getAbsoluteFilePath()] @TO@ MethodName:listFiles:[path] @AT@ 3446 @LENGTH@ 37
------------------------DEL MethodInvocation@@file.getAbsoluteFilePath() @AT@ 3456 @LENGTH@ 26
---------------------------DEL SimpleName@@Name:file @AT@ 3456 @LENGTH@ 4
---------------------------DEL SimpleName@@MethodName:getAbsoluteFilePath:[] @AT@ 3461 @LENGTH@ 21
------------------------INS SimpleName@@path @TO@ SimpleName@@MethodName:listFiles:[file.getAbsoluteFilePath()] @AT@ 3814 @LENGTH@ 4
---------INS InfixExpression@@path.equals("/") || path.equals("\\") @TO@ IfStatement@@if (path.equals("/") || path.equals("\\")) {  LOG.trace("Using fast exists to update file information in home directory");  files=operations.listFiles();} else {  LOG.trace("Using fast exists to update file information for {}",path);  files=operations.listFiles(path);} @AT@ 3399 @LENGTH@ 37
------------INS MethodInvocation@@path.equals("/") @TO@ InfixExpression@@path.equals("/") || path.equals("\\") @AT@ 3399 @LENGTH@ 16
---------------INS SimpleName@@Name:path @TO@ MethodInvocation@@path.equals("/") @AT@ 3399 @LENGTH@ 4
---------------INS SimpleName@@MethodName:equals:["/"] @TO@ MethodInvocation@@path.equals("/") @AT@ 3404 @LENGTH@ 11
------------------INS StringLiteral@@"/" @TO@ SimpleName@@MethodName:equals:["/"] @AT@ 3411 @LENGTH@ 3
------------INS Operator@@|| @TO@ InfixExpression@@path.equals("/") || path.equals("\\") @AT@ 3415 @LENGTH@ 2
------------INS MethodInvocation@@path.equals("\\") @TO@ InfixExpression@@path.equals("/") || path.equals("\\") @AT@ 3419 @LENGTH@ 17
---------------INS SimpleName@@Name:path @TO@ MethodInvocation@@path.equals("\\") @AT@ 3419 @LENGTH@ 4
---------------INS SimpleName@@MethodName:equals:["\\"] @TO@ MethodInvocation@@path.equals("\\") @AT@ 3424 @LENGTH@ 12
------------------INS StringLiteral@@"\\" @TO@ SimpleName@@MethodName:equals:["\\"] @AT@ 3431 @LENGTH@ 4
---------INS Block@@ThenBody:{  LOG.trace("Using fast exists to update file information in home directory");  files=operations.listFiles();} @TO@ IfStatement@@if (path.equals("/") || path.equals("\\")) {  LOG.trace("Using fast exists to update file information in home directory");  files=operations.listFiles();} else {  LOG.trace("Using fast exists to update file information for {}",path);  files=operations.listFiles(path);} @AT@ 3438 @LENGTH@ 227
------------INS ExpressionStatement@@MethodInvocation:LOG.trace("Using fast exists to update file information in home directory") @TO@ Block@@ThenBody:{  LOG.trace("Using fast exists to update file information in home directory");  files=operations.listFiles();} @AT@ 3519 @LENGTH@ 76
---------------INS MethodInvocation@@LOG.trace("Using fast exists to update file information in home directory") @TO@ ExpressionStatement@@MethodInvocation:LOG.trace("Using fast exists to update file information in home directory") @AT@ 3519 @LENGTH@ 75
------------------INS SimpleName@@Name:LOG @TO@ MethodInvocation@@LOG.trace("Using fast exists to update file information in home directory") @AT@ 3519 @LENGTH@ 3
------------------INS SimpleName@@MethodName:trace:["Using fast exists to update file information in home directory"] @TO@ MethodInvocation@@LOG.trace("Using fast exists to update file information in home directory") @AT@ 3523 @LENGTH@ 71
---------------------INS StringLiteral@@"Using fast exists to update file information in home directory" @TO@ SimpleName@@MethodName:trace:["Using fast exists to update file information in home directory"] @AT@ 3529 @LENGTH@ 64
------------INS ExpressionStatement@@Assignment:files=operations.listFiles() @TO@ Block@@ThenBody:{  LOG.trace("Using fast exists to update file information in home directory");  files=operations.listFiles();} @AT@ 3616 @LENGTH@ 31
---------------INS Assignment@@files=operations.listFiles() @TO@ ExpressionStatement@@Assignment:files=operations.listFiles() @AT@ 3616 @LENGTH@ 30
------------------INS SimpleName@@files @TO@ Assignment@@files=operations.listFiles() @AT@ 3616 @LENGTH@ 5
------------------INS Operator@@= @TO@ Assignment@@files=operations.listFiles() @AT@ 3621 @LENGTH@ 1
------------------INS MethodInvocation@@operations.listFiles() @TO@ Assignment@@files=operations.listFiles() @AT@ 3624 @LENGTH@ 22
---------------------INS SimpleName@@Name:operations @TO@ MethodInvocation@@operations.listFiles() @AT@ 3624 @LENGTH@ 10
---------------------INS SimpleName@@MethodName:listFiles:[] @TO@ MethodInvocation@@operations.listFiles() @AT@ 3635 @LENGTH@ 11
---UPD Block@@ThenBody:{  LOG.trace("Using fast exists to update file information for {}",file);  files=operations.listFiles(file.getAbsoluteFilePath());} @TO@ ElseBody:{  LOG.trace("Using fast exists to update file information for {}",path);  files=operations.listFiles(path);} @AT@ 3133 @LENGTH@ 365
---UPD Block@@ElseBody:{  LOG.trace("Using full directory listing to update file information for {}. Consider enabling fastExistsCheck option.",file);  files=operations.listFiles(file.getParent());} @TO@ ElseBody:{  LOG.trace("Using full directory listing to update file information for {}. Consider enabling fastExistsCheck option.",path);  files=operations.listFiles(path);} @AT@ 3504 @LENGTH@ 312
---INS Block@@ElseBody:{  String path=file.getParent();  if (path.equals("/") || path.equals("\\")) {    LOG.trace("Using full directory listing in home directory to update file information. Consider enabling fastExistsCheck option.");    files=operations.listFiles();  } else {    LOG.trace("Using full directory listing to update file information for {}. Consider enabling fastExistsCheck option.",path);    files=operations.listFiles(path);  }} @TO@ IfStatement@@if (fastExistsCheck) {  LOG.trace("Using fast exists to update file information for {}",file);  files=operations.listFiles(file.getAbsoluteFilePath());} else {  LOG.trace("Using full directory listing to update file information for {}. Consider enabling fastExistsCheck option.",file);  files=operations.listFiles(file.getParent());} @AT@ 3858 @LENGTH@ 722
------INS VariableDeclarationStatement@@String path=file.getParent(); @TO@ Block@@ElseBody:{  String path=file.getParent();  if (path.equals("/") || path.equals("\\")) {    LOG.trace("Using full directory listing in home directory to update file information. Consider enabling fastExistsCheck option.");    files=operations.listFiles();  } else {    LOG.trace("Using full directory listing to update file information for {}. Consider enabling fastExistsCheck option.",path);    files=operations.listFiles(path);  }} @AT@ 3967 @LENGTH@ 31
---------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String path=file.getParent(); @AT@ 3967 @LENGTH@ 6
---------INS VariableDeclarationFragment@@path=file.getParent() @TO@ VariableDeclarationStatement@@String path=file.getParent(); @AT@ 3974 @LENGTH@ 23
------------INS SimpleName@@path @TO@ VariableDeclarationFragment@@path=file.getParent() @AT@ 3974 @LENGTH@ 4
------------INS MethodInvocation@@file.getParent() @TO@ VariableDeclarationFragment@@path=file.getParent() @AT@ 3981 @LENGTH@ 16
---------------INS SimpleName@@Name:file @TO@ MethodInvocation@@file.getParent() @AT@ 3981 @LENGTH@ 4
---------------INS SimpleName@@MethodName:getParent:[] @TO@ MethodInvocation@@file.getParent() @AT@ 3986 @LENGTH@ 11
------INS IfStatement@@if (path.equals("/") || path.equals("\\")) {  LOG.trace("Using full directory listing in home directory to update file information. Consider enabling fastExistsCheck option.");  files=operations.listFiles();} else {  LOG.trace("Using full directory listing to update file information for {}. Consider enabling fastExistsCheck option.",path);  files=operations.listFiles(path);} @TO@ Block@@ElseBody:{  String path=file.getParent();  if (path.equals("/") || path.equals("\\")) {    LOG.trace("Using full directory listing in home directory to update file information. Consider enabling fastExistsCheck option.");    files=operations.listFiles();  } else {    LOG.trace("Using full directory listing to update file information for {}. Consider enabling fastExistsCheck option.",path);    files=operations.listFiles(path);  }} @AT@ 4015 @LENGTH@ 551
---------MOV Block@@ElseBody:{  LOG.trace("Using full directory listing to update file information for {}. Consider enabling fastExistsCheck option.",file);  files=operations.listFiles(file.getParent());} @TO@ IfStatement@@if (path.equals("/") || path.equals("\\")) {  LOG.trace("Using full directory listing in home directory to update file information. Consider enabling fastExistsCheck option.");  files=operations.listFiles();} else {  LOG.trace("Using full directory listing to update file information for {}. Consider enabling fastExistsCheck option.",path);  files=operations.listFiles(path);} @AT@ 3504 @LENGTH@ 312
------------UPD ExpressionStatement@@MethodInvocation:LOG.trace("Using full directory listing to update file information for {}. Consider enabling fastExistsCheck option.",file) @TO@ MethodInvocation:LOG.trace("Using full directory listing to update file information for {}. Consider enabling fastExistsCheck option.",path) @AT@ 3522 @LENGTH@ 125
---------------UPD MethodInvocation@@LOG.trace("Using full directory listing to update file information for {}. Consider enabling fastExistsCheck option.",file) @TO@ LOG.trace("Using full directory listing to update file information for {}. Consider enabling fastExistsCheck option.",path) @AT@ 3522 @LENGTH@ 124
------------------UPD SimpleName@@MethodName:trace:["Using full directory listing to update file information for {}. Consider enabling fastExistsCheck option.", file] @TO@ MethodName:trace:["Using full directory listing to update file information for {}. Consider enabling fastExistsCheck option.", path] @AT@ 3526 @LENGTH@ 120
---------------------UPD SimpleName@@file @TO@ path @AT@ 3641 @LENGTH@ 4
------------UPD ExpressionStatement@@Assignment:files=operations.listFiles(file.getParent()) @TO@ Assignment:files=operations.listFiles(path) @AT@ 3755 @LENGTH@ 47
---------------UPD Assignment@@files=operations.listFiles(file.getParent()) @TO@ files=operations.listFiles(path) @AT@ 3755 @LENGTH@ 46
------------------UPD MethodInvocation@@operations.listFiles(file.getParent()) @TO@ operations.listFiles(path) @AT@ 3763 @LENGTH@ 38
---------------------UPD SimpleName@@MethodName:listFiles:[file.getParent()] @TO@ MethodName:listFiles:[path] @AT@ 3774 @LENGTH@ 27
------------------------DEL MethodInvocation@@file.getParent() @AT@ 3784 @LENGTH@ 16
---------------------------DEL SimpleName@@Name:file @AT@ 3784 @LENGTH@ 4
---------------------------DEL SimpleName@@MethodName:getParent:[] @AT@ 3789 @LENGTH@ 11
------------------------INS SimpleName@@path @TO@ SimpleName@@MethodName:listFiles:[file.getParent()] @AT@ 4542 @LENGTH@ 4
---------INS InfixExpression@@path.equals("/") || path.equals("\\") @TO@ IfStatement@@if (path.equals("/") || path.equals("\\")) {  LOG.trace("Using full directory listing in home directory to update file information. Consider enabling fastExistsCheck option.");  files=operations.listFiles();} else {  LOG.trace("Using full directory listing to update file information for {}. Consider enabling fastExistsCheck option.",path);  files=operations.listFiles(path);} @AT@ 4019 @LENGTH@ 37
------------INS MethodInvocation@@path.equals("/") @TO@ InfixExpression@@path.equals("/") || path.equals("\\") @AT@ 4019 @LENGTH@ 16
---------------INS SimpleName@@Name:path @TO@ MethodInvocation@@path.equals("/") @AT@ 4019 @LENGTH@ 4
---------------INS SimpleName@@MethodName:equals:["/"] @TO@ MethodInvocation@@path.equals("/") @AT@ 4024 @LENGTH@ 11
------------------INS StringLiteral@@"/" @TO@ SimpleName@@MethodName:equals:["/"] @AT@ 4031 @LENGTH@ 3
------------INS Operator@@|| @TO@ InfixExpression@@path.equals("/") || path.equals("\\") @AT@ 4035 @LENGTH@ 2
------------INS MethodInvocation@@path.equals("\\") @TO@ InfixExpression@@path.equals("/") || path.equals("\\") @AT@ 4039 @LENGTH@ 17
---------------INS SimpleName@@Name:path @TO@ MethodInvocation@@path.equals("\\") @AT@ 4039 @LENGTH@ 4
---------------INS SimpleName@@MethodName:equals:["\\"] @TO@ MethodInvocation@@path.equals("\\") @AT@ 4044 @LENGTH@ 12
------------------INS StringLiteral@@"\\" @TO@ SimpleName@@MethodName:equals:["\\"] @AT@ 4051 @LENGTH@ 4
---------INS Block@@ThenBody:{  LOG.trace("Using full directory listing in home directory to update file information. Consider enabling fastExistsCheck option.");  files=operations.listFiles();} @TO@ IfStatement@@if (path.equals("/") || path.equals("\\")) {  LOG.trace("Using full directory listing in home directory to update file information. Consider enabling fastExistsCheck option.");  files=operations.listFiles();} else {  LOG.trace("Using full directory listing to update file information for {}. Consider enabling fastExistsCheck option.",path);  files=operations.listFiles(path);} @AT@ 4058 @LENGTH@ 281
------------INS ExpressionStatement@@MethodInvocation:LOG.trace("Using full directory listing in home directory to update file information. Consider enabling fastExistsCheck option.") @TO@ Block@@ThenBody:{  LOG.trace("Using full directory listing in home directory to update file information. Consider enabling fastExistsCheck option.");  files=operations.listFiles();} @AT@ 4139 @LENGTH@ 130
---------------INS MethodInvocation@@LOG.trace("Using full directory listing in home directory to update file information. Consider enabling fastExistsCheck option.") @TO@ ExpressionStatement@@MethodInvocation:LOG.trace("Using full directory listing in home directory to update file information. Consider enabling fastExistsCheck option.") @AT@ 4139 @LENGTH@ 129
------------------INS SimpleName@@Name:LOG @TO@ MethodInvocation@@LOG.trace("Using full directory listing in home directory to update file information. Consider enabling fastExistsCheck option.") @AT@ 4139 @LENGTH@ 3
------------------INS SimpleName@@MethodName:trace:["Using full directory listing in home directory to update file information. Consider enabling fastExistsCheck option."] @TO@ MethodInvocation@@LOG.trace("Using full directory listing in home directory to update file information. Consider enabling fastExistsCheck option.") @AT@ 4143 @LENGTH@ 125
---------------------INS StringLiteral@@"Using full directory listing in home directory to update file information. Consider enabling fastExistsCheck option." @TO@ SimpleName@@MethodName:trace:["Using full directory listing in home directory to update file information. Consider enabling fastExistsCheck option."] @AT@ 4149 @LENGTH@ 118
------------INS ExpressionStatement@@Assignment:files=operations.listFiles() @TO@ Block@@ThenBody:{  LOG.trace("Using full directory listing in home directory to update file information. Consider enabling fastExistsCheck option.");  files=operations.listFiles();} @AT@ 4290 @LENGTH@ 31
---------------INS Assignment@@files=operations.listFiles() @TO@ ExpressionStatement@@Assignment:files=operations.listFiles() @AT@ 4290 @LENGTH@ 30
------------------INS SimpleName@@files @TO@ Assignment@@files=operations.listFiles() @AT@ 4290 @LENGTH@ 5
------------------INS Operator@@= @TO@ Assignment@@files=operations.listFiles() @AT@ 4295 @LENGTH@ 1
------------------INS MethodInvocation@@operations.listFiles() @TO@ Assignment@@files=operations.listFiles() @AT@ 4298 @LENGTH@ 22
---------------------INS SimpleName@@Name:operations @TO@ MethodInvocation@@operations.listFiles() @AT@ 4298 @LENGTH@ 10
---------------------INS SimpleName@@MethodName:listFiles:[] @TO@ MethodInvocation@@operations.listFiles() @AT@ 4309 @LENGTH@ 11


DEL ExpressionStatement@@MethodInvocation:when(propertyMock.getActualType()).thenReturn((Class)Number.class) @AT@ 4579 @LENGTH@ 68
---DEL MethodInvocation@@when(propertyMock.getActualType()).thenReturn((Class)Number.class) @AT@ 4579 @LENGTH@ 67
------DEL MethodInvocation@@MethodName:when:[propertyMock.getActualType()] @AT@ 4579 @LENGTH@ 34
---------DEL MethodInvocation@@propertyMock.getActualType() @AT@ 4584 @LENGTH@ 28
------------DEL SimpleName@@Name:propertyMock @AT@ 4584 @LENGTH@ 12
------------DEL SimpleName@@MethodName:getActualType:[] @AT@ 4597 @LENGTH@ 15
------DEL SimpleName@@MethodName:thenReturn:[(Class)Number.class] @AT@ 4614 @LENGTH@ 32
---------DEL CastExpression@@(Class)Number.class @AT@ 4625 @LENGTH@ 20
------------DEL SimpleType@@Class @AT@ 4626 @LENGTH@ 5
------------DEL TypeLiteral@@Number.class @AT@ 4633 @LENGTH@ 12


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled(); @AT@ 5209 @LENGTH@ 160
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5217 @LENGTH@ 151
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5217 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5234 @LENGTH@ 134
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 5234 @LENGTH@ 64
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5234 @LENGTH@ 35
---------UPD MethodInvocation@@componentConfiguration.getConfigurer().isEnabled() @TO@ componentConfiguration.getCustomizer().isEnabled() @AT@ 5318 @LENGTH@ 50
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5318 @LENGTH@ 38


UPD FieldDeclaration@@private, static, Set<String>, [vectorizableMapJoinNativeEngines=new LinkedHashSet<String>(Arrays.asList("tez","spark"))] @TO@ private, static, final, Set<String>, [vectorizableMapJoinNativeEngines=new LinkedHashSet<String>(Arrays.asList("tez","spark"))] @AT@ 12420 @LENGTH@ 125
---INS Modifier@@final @TO@ FieldDeclaration@@private, static, Set<String>, [vectorizableMapJoinNativeEngines=new LinkedHashSet<String>(Arrays.asList("tez","spark"))] @AT@ 12209 @LENGTH@ 5


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<UndertowComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<UndertowComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5463 @LENGTH@ 341
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 5467 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5467 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  ComponentCustomizer<UndertowComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ ThenBody:{  for (  ComponentCustomizer<UndertowComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5523 @LENGTH@ 281
------UPD EnhancedForStatement@@for (ComponentCustomizer<UndertowComponent> configurer : customizers) {  LOGGER.debug("Configure component {}, with configurer {}",component,configurer);  configurer.customize(component);} @TO@ for (ComponentCustomizer<UndertowComponent> customizer : customizers) {  LOGGER.debug("Configure component {}, with customizer {}",component,customizer);  customizer.customize(component);} @AT@ 5537 @LENGTH@ 257
---------UPD SingleVariableDeclaration@@ComponentCustomizer<UndertowComponent> configurer @TO@ ComponentCustomizer<UndertowComponent> customizer @AT@ 5542 @LENGTH@ 49
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5581 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5625 @LENGTH@ 106
------------UPD MethodInvocation@@LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5625 @LENGTH@ 105
---------------UPD SimpleName@@MethodName:debug:["Configure component {}, with configurer {}", component, configurer] @TO@ MethodName:debug:["Configure component {}, with customizer {}", component, customizer] @AT@ 5632 @LENGTH@ 98
------------------UPD StringLiteral@@"Configure component {}, with configurer {}" @TO@ "Configure component {}, with customizer {}" @AT@ 5638 @LENGTH@ 44
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5719 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(component) @TO@ MethodInvocation:customizer.customize(component) @AT@ 5748 @LENGTH@ 32
------------UPD MethodInvocation@@configurer.customize(component) @TO@ customizer.customize(component) @AT@ 5748 @LENGTH@ 31
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5748 @LENGTH@ 10


DEL VariableDeclarationStatement@@final EJBClientTransactionContext localUserTxContext=EJBClientTransactionContext.createLocal(); @AT@ 4112 @LENGTH@ 97
---DEL Modifier@@final @AT@ 4112 @LENGTH@ 5
---DEL SimpleType@@EJBClientTransactionContext @AT@ 4118 @LENGTH@ 27
---DEL VariableDeclarationFragment@@localUserTxContext=EJBClientTransactionContext.createLocal() @AT@ 4146 @LENGTH@ 62
------DEL SimpleName@@localUserTxContext @AT@ 4146 @LENGTH@ 18
------DEL MethodInvocation@@EJBClientTransactionContext.createLocal() @AT@ 4167 @LENGTH@ 41
---------DEL SimpleName@@Name:EJBClientTransactionContext @AT@ 4167 @LENGTH@ 27
---------DEL SimpleName@@MethodName:createLocal:[] @AT@ 4195 @LENGTH@ 13


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && dataformatConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && dataformatConfiguration.getCustomizer().isEnabled(); @AT@ 5170 @LENGTH@ 177
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && dataformatConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && dataformatConfiguration.getCustomizer().isEnabled() @AT@ 5178 @LENGTH@ 168
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5178 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && dataformatConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && dataformatConfiguration.getCustomizer().isEnabled() @AT@ 5195 @LENGTH@ 151
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 5195 @LENGTH@ 72
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5195 @LENGTH@ 35
---------UPD MethodInvocation@@dataformatConfiguration.getConfigurer().isEnabled() @TO@ dataformatConfiguration.getCustomizer().isEnabled() @AT@ 5295 @LENGTH@ 51
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5295 @LENGTH@ 39


UPD ExpressionStatement@@MethodInvocation:Assert.assertEquals("401",result.getErrors().get(0).getCode()) @TO@ MethodInvocation:Assert.assertEquals(ComponentVerifier.CODE_AUTHENTICATION,result.getErrors().get(0).getCode()) @AT@ 3231 @LENGTH@ 64
---UPD MethodInvocation@@Assert.assertEquals("401",result.getErrors().get(0).getCode()) @TO@ Assert.assertEquals(ComponentVerifier.CODE_AUTHENTICATION,result.getErrors().get(0).getCode()) @AT@ 3231 @LENGTH@ 63
------UPD SimpleName@@MethodName:assertEquals:["401", result.getErrors().get(0).getCode()] @TO@ MethodName:assertEquals:[ComponentVerifier.CODE_AUTHENTICATION, result.getErrors().get(0).getCode()] @AT@ 3238 @LENGTH@ 56
---------DEL StringLiteral@@"401" @AT@ 3251 @LENGTH@ 5
---------INS QualifiedName@@ComponentVerifier.CODE_AUTHENTICATION @TO@ SimpleName@@MethodName:assertEquals:["401", result.getErrors().get(0).getCode()] @AT@ 3283 @LENGTH@ 37
------------INS SimpleName@@ComponentVerifier @TO@ QualifiedName@@ComponentVerifier.CODE_AUTHENTICATION @AT@ 3283 @LENGTH@ 17
------------INS SimpleName@@CODE_AUTHENTICATION @TO@ QualifiedName@@ComponentVerifier.CODE_AUTHENTICATION @AT@ 3301 @LENGTH@ 19


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  DataFormatCustomizer<BindyKeyValuePairDataFormat> configurer : customizers) {    LOGGER.debug("Configure dataformat {}, with configurer {}",dataformat,configurer);    configurer.customize(dataformat);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  DataFormatCustomizer<BindyKeyValuePairDataFormat> customizer : customizers) {    LOGGER.debug("Configure dataformat {}, with customizer {}",dataformat,customizer);    customizer.customize(dataformat);  }} @AT@ 5507 @LENGTH@ 436
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 5511 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5511 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  DataFormatCustomizer<BindyKeyValuePairDataFormat> configurer : customizers) {    LOGGER.debug("Configure dataformat {}, with configurer {}",dataformat,configurer);    configurer.customize(dataformat);  }} @TO@ ThenBody:{  for (  DataFormatCustomizer<BindyKeyValuePairDataFormat> customizer : customizers) {    LOGGER.debug("Configure dataformat {}, with customizer {}",dataformat,customizer);    customizer.customize(dataformat);  }} @AT@ 5567 @LENGTH@ 376
------UPD EnhancedForStatement@@for (DataFormatCustomizer<BindyKeyValuePairDataFormat> configurer : customizers) {  LOGGER.debug("Configure dataformat {}, with configurer {}",dataformat,configurer);  configurer.customize(dataformat);} @TO@ for (DataFormatCustomizer<BindyKeyValuePairDataFormat> customizer : customizers) {  LOGGER.debug("Configure dataformat {}, with customizer {}",dataformat,customizer);  customizer.customize(dataformat);} @AT@ 5589 @LENGTH@ 336
---------UPD SingleVariableDeclaration@@DataFormatCustomizer<BindyKeyValuePairDataFormat> configurer @TO@ DataFormatCustomizer<BindyKeyValuePairDataFormat> customizer @AT@ 5594 @LENGTH@ 60
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5644 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure dataformat {}, with configurer {}",dataformat,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure dataformat {}, with customizer {}",dataformat,customizer) @AT@ 5696 @LENGTH@ 149
------------UPD MethodInvocation@@LOGGER.debug("Configure dataformat {}, with configurer {}",dataformat,configurer) @TO@ LOGGER.debug("Configure dataformat {}, with customizer {}",dataformat,customizer) @AT@ 5696 @LENGTH@ 148
---------------UPD SimpleName@@MethodName:debug:["Configure dataformat {}, with configurer {}", dataformat, configurer] @TO@ MethodName:debug:["Configure dataformat {}, with customizer {}", dataformat, customizer] @AT@ 5703 @LENGTH@ 141
------------------UPD StringLiteral@@"Configure dataformat {}, with configurer {}" @TO@ "Configure dataformat {}, with customizer {}" @AT@ 5742 @LENGTH@ 45
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5833 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(dataformat) @TO@ MethodInvocation:customizer.customize(dataformat) @AT@ 5870 @LENGTH@ 33
------------UPD MethodInvocation@@configurer.customize(dataformat) @TO@ customizer.customize(dataformat) @AT@ 5870 @LENGTH@ 32
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5870 @LENGTH@ 10


INS IfStatement@@if ("application/json".equals(mockExchange.getResponseHeaders().getFirst(Headers.CONTENT_TYPE))) {  responses.add(new InVMResponse(mockExchange.getStatusCode(),sb.toString()));} else {  StringBuffer json=new StringBuffer("{");  json.append("\"id\"").append(":\"").append(mockExchange.getRelativePath()).append("\",");  json.append("\"result\"").append(":\"").append("DOWN").append("\",");  json.append("\"data\"").append(":").append("{");  json.append("\"status-code\"").append(":").append(mockExchange.getStatusCode());  json.append("}");  json.append("}");  responses.add(new InVMResponse(mockExchange.getStatusCode(),json.toString()));} @TO@ MethodDeclaration@@public, void, MethodName:closed, ServerConnection connection,  @AT@ 8279 @LENGTH@ 909
---INS MethodInvocation@@"application/json".equals(mockExchange.getResponseHeaders().getFirst(Headers.CONTENT_TYPE)) @TO@ IfStatement@@if ("application/json".equals(mockExchange.getResponseHeaders().getFirst(Headers.CONTENT_TYPE))) {  responses.add(new InVMResponse(mockExchange.getStatusCode(),sb.toString()));} else {  StringBuffer json=new StringBuffer("{");  json.append("\"id\"").append(":\"").append(mockExchange.getRelativePath()).append("\",");  json.append("\"result\"").append(":\"").append("DOWN").append("\",");  json.append("\"data\"").append(":").append("{");  json.append("\"status-code\"").append(":").append(mockExchange.getStatusCode());  json.append("}");  json.append("}");  responses.add(new InVMResponse(mockExchange.getStatusCode(),json.toString()));} @AT@ 8283 @LENGTH@ 91
------INS StringLiteral@@"application/json" @TO@ MethodInvocation@@"application/json".equals(mockExchange.getResponseHeaders().getFirst(Headers.CONTENT_TYPE)) @AT@ 8283 @LENGTH@ 18
------INS SimpleName@@MethodName:equals:[mockExchange.getResponseHeaders().getFirst(Headers.CONTENT_TYPE)] @TO@ MethodInvocation@@"application/json".equals(mockExchange.getResponseHeaders().getFirst(Headers.CONTENT_TYPE)) @AT@ 8302 @LENGTH@ 72
---------INS MethodInvocation@@mockExchange.getResponseHeaders().getFirst(Headers.CONTENT_TYPE) @TO@ SimpleName@@MethodName:equals:[mockExchange.getResponseHeaders().getFirst(Headers.CONTENT_TYPE)] @AT@ 8309 @LENGTH@ 64
------------INS MethodInvocation@@MethodName:getResponseHeaders:[] @TO@ MethodInvocation@@mockExchange.getResponseHeaders().getFirst(Headers.CONTENT_TYPE) @AT@ 8309 @LENGTH@ 33
------------INS SimpleName@@Name:mockExchange @TO@ MethodInvocation@@mockExchange.getResponseHeaders().getFirst(Headers.CONTENT_TYPE) @AT@ 8309 @LENGTH@ 12
------------INS SimpleName@@MethodName:getFirst:[Headers.CONTENT_TYPE] @TO@ MethodInvocation@@mockExchange.getResponseHeaders().getFirst(Headers.CONTENT_TYPE) @AT@ 8343 @LENGTH@ 30
---------------INS QualifiedName@@Headers.CONTENT_TYPE @TO@ SimpleName@@MethodName:getFirst:[Headers.CONTENT_TYPE] @AT@ 8352 @LENGTH@ 20
------------------INS SimpleName@@Headers @TO@ QualifiedName@@Headers.CONTENT_TYPE @AT@ 8352 @LENGTH@ 7
------------------INS SimpleName@@CONTENT_TYPE @TO@ QualifiedName@@Headers.CONTENT_TYPE @AT@ 8360 @LENGTH@ 12
---INS Block@@ThenBody:{  responses.add(new InVMResponse(mockExchange.getStatusCode(),sb.toString()));} @TO@ IfStatement@@if ("application/json".equals(mockExchange.getResponseHeaders().getFirst(Headers.CONTENT_TYPE))) {  responses.add(new InVMResponse(mockExchange.getStatusCode(),sb.toString()));} else {  StringBuffer json=new StringBuffer("{");  json.append("\"id\"").append(":\"").append(mockExchange.getRelativePath()).append("\",");  json.append("\"result\"").append(":\"").append("DOWN").append("\",");  json.append("\"data\"").append(":").append("{");  json.append("\"status-code\"").append(":").append(mockExchange.getStatusCode());  json.append("}");  json.append("}");  responses.add(new InVMResponse(mockExchange.getStatusCode(),json.toString()));} @AT@ 8376 @LENGTH@ 125
------MOV ExpressionStatement@@MethodInvocation:responses.add(new InVMResponse(mockExchange.getStatusCode(),sb.toString())) @TO@ Block@@ThenBody:{  responses.add(new InVMResponse(mockExchange.getStatusCode(),sb.toString()));} @AT@ 8279 @LENGTH@ 77
---INS Block@@ElseBody:{  StringBuffer json=new StringBuffer("{");  json.append("\"id\"").append(":\"").append(mockExchange.getRelativePath()).append("\",");  json.append("\"result\"").append(":\"").append("DOWN").append("\",");  json.append("\"data\"").append(":").append("{");  json.append("\"status-code\"").append(":").append(mockExchange.getStatusCode());  json.append("}");  json.append("}");  responses.add(new InVMResponse(mockExchange.getStatusCode(),json.toString()));} @TO@ IfStatement@@if ("application/json".equals(mockExchange.getResponseHeaders().getFirst(Headers.CONTENT_TYPE))) {  responses.add(new InVMResponse(mockExchange.getStatusCode(),sb.toString()));} else {  StringBuffer json=new StringBuffer("{");  json.append("\"id\"").append(":\"").append(mockExchange.getRelativePath()).append("\",");  json.append("\"result\"").append(":\"").append("DOWN").append("\",");  json.append("\"data\"").append(":").append("{");  json.append("\"status-code\"").append(":").append(mockExchange.getStatusCode());  json.append("}");  json.append("}");  responses.add(new InVMResponse(mockExchange.getStatusCode(),json.toString()));} @AT@ 8507 @LENGTH@ 681
------INS VariableDeclarationStatement@@StringBuffer json=new StringBuffer("{"); @TO@ Block@@ElseBody:{  StringBuffer json=new StringBuffer("{");  json.append("\"id\"").append(":\"").append(mockExchange.getRelativePath()).append("\",");  json.append("\"result\"").append(":\"").append("DOWN").append("\",");  json.append("\"data\"").append(":").append("{");  json.append("\"status-code\"").append(":").append(mockExchange.getStatusCode());  json.append("}");  json.append("}");  responses.add(new InVMResponse(mockExchange.getStatusCode(),json.toString()));} @AT@ 8533 @LENGTH@ 42
---------INS SimpleType@@StringBuffer @TO@ VariableDeclarationStatement@@StringBuffer json=new StringBuffer("{"); @AT@ 8533 @LENGTH@ 12
---------INS VariableDeclarationFragment@@json=new StringBuffer("{") @TO@ VariableDeclarationStatement@@StringBuffer json=new StringBuffer("{"); @AT@ 8546 @LENGTH@ 28
------------INS SimpleName@@json @TO@ VariableDeclarationFragment@@json=new StringBuffer("{") @AT@ 8546 @LENGTH@ 4
------------INS ClassInstanceCreation@@StringBuffer["{"] @TO@ VariableDeclarationFragment@@json=new StringBuffer("{") @AT@ 8553 @LENGTH@ 21
---------------INS New@@new @TO@ ClassInstanceCreation@@StringBuffer["{"] @AT@ 8553 @LENGTH@ 3
---------------INS SimpleType@@StringBuffer @TO@ ClassInstanceCreation@@StringBuffer["{"] @AT@ 8557 @LENGTH@ 12
---------------INS StringLiteral@@"{" @TO@ ClassInstanceCreation@@StringBuffer["{"] @AT@ 8570 @LENGTH@ 3
------INS ExpressionStatement@@MethodInvocation:json.append("\"id\"").append(":\"").append(mockExchange.getRelativePath()).append("\",") @TO@ Block@@ElseBody:{  StringBuffer json=new StringBuffer("{");  json.append("\"id\"").append(":\"").append(mockExchange.getRelativePath()).append("\",");  json.append("\"result\"").append(":\"").append("DOWN").append("\",");  json.append("\"data\"").append(":").append("{");  json.append("\"status-code\"").append(":").append(mockExchange.getStatusCode());  json.append("}");  json.append("}");  responses.add(new InVMResponse(mockExchange.getStatusCode(),json.toString()));} @AT@ 8600 @LENGTH@ 89
---------INS MethodInvocation@@json.append("\"id\"").append(":\"").append(mockExchange.getRelativePath()).append("\",") @TO@ ExpressionStatement@@MethodInvocation:json.append("\"id\"").append(":\"").append(mockExchange.getRelativePath()).append("\",") @AT@ 8600 @LENGTH@ 88
------------INS MethodInvocation@@MethodName:append:[mockExchange.getRelativePath()] @TO@ MethodInvocation@@json.append("\"id\"").append(":\"").append(mockExchange.getRelativePath()).append("\",") @AT@ 8600 @LENGTH@ 74
---------------INS MethodInvocation@@mockExchange.getRelativePath() @TO@ MethodInvocation@@MethodName:append:[mockExchange.getRelativePath()] @AT@ 8643 @LENGTH@ 30
------------------INS SimpleName@@Name:mockExchange @TO@ MethodInvocation@@mockExchange.getRelativePath() @AT@ 8643 @LENGTH@ 12
------------------INS SimpleName@@MethodName:getRelativePath:[] @TO@ MethodInvocation@@mockExchange.getRelativePath() @AT@ 8656 @LENGTH@ 17
------------INS MethodInvocation@@MethodName:append:[":\""] @TO@ MethodInvocation@@json.append("\"id\"").append(":\"").append(mockExchange.getRelativePath()).append("\",") @AT@ 8600 @LENGTH@ 35
---------------INS StringLiteral@@":\"" @TO@ MethodInvocation@@MethodName:append:[":\""] @AT@ 8629 @LENGTH@ 5
------------INS MethodInvocation@@MethodName:append:["\"id\""] @TO@ MethodInvocation@@json.append("\"id\"").append(":\"").append(mockExchange.getRelativePath()).append("\",") @AT@ 8600 @LENGTH@ 21
---------------INS StringLiteral@@"\"id\"" @TO@ MethodInvocation@@MethodName:append:["\"id\""] @AT@ 8612 @LENGTH@ 8
------------INS SimpleName@@Name:json @TO@ MethodInvocation@@json.append("\"id\"").append(":\"").append(mockExchange.getRelativePath()).append("\",") @AT@ 8600 @LENGTH@ 4
------------INS SimpleName@@MethodName:append:["\","] @TO@ MethodInvocation@@json.append("\"id\"").append(":\"").append(mockExchange.getRelativePath()).append("\",") @AT@ 8675 @LENGTH@ 13
---------------INS StringLiteral@@"\"," @TO@ SimpleName@@MethodName:append:["\","] @AT@ 8682 @LENGTH@ 5
------INS ExpressionStatement@@MethodInvocation:json.append("\"result\"").append(":\"").append("DOWN").append("\",") @TO@ Block@@ElseBody:{  StringBuffer json=new StringBuffer("{");  json.append("\"id\"").append(":\"").append(mockExchange.getRelativePath()).append("\",");  json.append("\"result\"").append(":\"").append("DOWN").append("\",");  json.append("\"data\"").append(":").append("{");  json.append("\"status-code\"").append(":").append(mockExchange.getStatusCode());  json.append("}");  json.append("}");  responses.add(new InVMResponse(mockExchange.getStatusCode(),json.toString()));} @AT@ 8714 @LENGTH@ 69
---------INS MethodInvocation@@json.append("\"result\"").append(":\"").append("DOWN").append("\",") @TO@ ExpressionStatement@@MethodInvocation:json.append("\"result\"").append(":\"").append("DOWN").append("\",") @AT@ 8714 @LENGTH@ 68
------------INS MethodInvocation@@MethodName:append:["DOWN"] @TO@ MethodInvocation@@json.append("\"result\"").append(":\"").append("DOWN").append("\",") @AT@ 8714 @LENGTH@ 54
---------------INS StringLiteral@@"DOWN" @TO@ MethodInvocation@@MethodName:append:["DOWN"] @AT@ 8761 @LENGTH@ 6
------------INS MethodInvocation@@MethodName:append:[":\""] @TO@ MethodInvocation@@json.append("\"result\"").append(":\"").append("DOWN").append("\",") @AT@ 8714 @LENGTH@ 39
---------------INS StringLiteral@@":\"" @TO@ MethodInvocation@@MethodName:append:[":\""] @AT@ 8747 @LENGTH@ 5
------------INS MethodInvocation@@MethodName:append:["\"result\""] @TO@ MethodInvocation@@json.append("\"result\"").append(":\"").append("DOWN").append("\",") @AT@ 8714 @LENGTH@ 25
---------------INS StringLiteral@@"\"result\"" @TO@ MethodInvocation@@MethodName:append:["\"result\""] @AT@ 8726 @LENGTH@ 12
------------INS SimpleName@@Name:json @TO@ MethodInvocation@@json.append("\"result\"").append(":\"").append("DOWN").append("\",") @AT@ 8714 @LENGTH@ 4
------------INS SimpleName@@MethodName:append:["\","] @TO@ MethodInvocation@@json.append("\"result\"").append(":\"").append("DOWN").append("\",") @AT@ 8769 @LENGTH@ 13
---------------INS StringLiteral@@"\"," @TO@ SimpleName@@MethodName:append:["\","] @AT@ 8776 @LENGTH@ 5
------INS ExpressionStatement@@MethodInvocation:json.append("\"data\"").append(":").append("{") @TO@ Block@@ElseBody:{  StringBuffer json=new StringBuffer("{");  json.append("\"id\"").append(":\"").append(mockExchange.getRelativePath()).append("\",");  json.append("\"result\"").append(":\"").append("DOWN").append("\",");  json.append("\"data\"").append(":").append("{");  json.append("\"status-code\"").append(":").append(mockExchange.getStatusCode());  json.append("}");  json.append("}");  responses.add(new InVMResponse(mockExchange.getStatusCode(),json.toString()));} @AT@ 8812 @LENGTH@ 48
---------INS MethodInvocation@@json.append("\"data\"").append(":").append("{") @TO@ ExpressionStatement@@MethodInvocation:json.append("\"data\"").append(":").append("{") @AT@ 8812 @LENGTH@ 47
------------INS MethodInvocation@@MethodName:append:[":"] @TO@ MethodInvocation@@json.append("\"data\"").append(":").append("{") @AT@ 8812 @LENGTH@ 35
---------------INS StringLiteral@@":" @TO@ MethodInvocation@@MethodName:append:[":"] @AT@ 8843 @LENGTH@ 3
------------INS MethodInvocation@@MethodName:append:["\"data\""] @TO@ MethodInvocation@@json.append("\"data\"").append(":").append("{") @AT@ 8812 @LENGTH@ 23
---------------INS StringLiteral@@"\"data\"" @TO@ MethodInvocation@@MethodName:append:["\"data\""] @AT@ 8824 @LENGTH@ 10
------------INS SimpleName@@Name:json @TO@ MethodInvocation@@json.append("\"data\"").append(":").append("{") @AT@ 8812 @LENGTH@ 4
------------INS SimpleName@@MethodName:append:["{"] @TO@ MethodInvocation@@json.append("\"data\"").append(":").append("{") @AT@ 8848 @LENGTH@ 11
---------------INS StringLiteral@@"{" @TO@ SimpleName@@MethodName:append:["{"] @AT@ 8855 @LENGTH@ 3
------INS ExpressionStatement@@MethodInvocation:json.append("\"status-code\"").append(":").append(mockExchange.getStatusCode()) @TO@ Block@@ElseBody:{  StringBuffer json=new StringBuffer("{");  json.append("\"id\"").append(":\"").append(mockExchange.getRelativePath()).append("\",");  json.append("\"result\"").append(":\"").append("DOWN").append("\",");  json.append("\"data\"").append(":").append("{");  json.append("\"status-code\"").append(":").append(mockExchange.getStatusCode());  json.append("}");  json.append("}");  responses.add(new InVMResponse(mockExchange.getStatusCode(),json.toString()));} @AT@ 8893 @LENGTH@ 80
---------INS MethodInvocation@@json.append("\"status-code\"").append(":").append(mockExchange.getStatusCode()) @TO@ ExpressionStatement@@MethodInvocation:json.append("\"status-code\"").append(":").append(mockExchange.getStatusCode()) @AT@ 8893 @LENGTH@ 79
------------INS MethodInvocation@@MethodName:append:[":"] @TO@ MethodInvocation@@json.append("\"status-code\"").append(":").append(mockExchange.getStatusCode()) @AT@ 8893 @LENGTH@ 42
---------------INS StringLiteral@@":" @TO@ MethodInvocation@@MethodName:append:[":"] @AT@ 8931 @LENGTH@ 3
------------INS MethodInvocation@@MethodName:append:["\"status-code\""] @TO@ MethodInvocation@@json.append("\"status-code\"").append(":").append(mockExchange.getStatusCode()) @AT@ 8893 @LENGTH@ 30
---------------INS StringLiteral@@"\"status-code\"" @TO@ MethodInvocation@@MethodName:append:["\"status-code\""] @AT@ 8905 @LENGTH@ 17
------------INS SimpleName@@Name:json @TO@ MethodInvocation@@json.append("\"status-code\"").append(":").append(mockExchange.getStatusCode()) @AT@ 8893 @LENGTH@ 4
------------INS SimpleName@@MethodName:append:[mockExchange.getStatusCode()] @TO@ MethodInvocation@@json.append("\"status-code\"").append(":").append(mockExchange.getStatusCode()) @AT@ 8936 @LENGTH@ 36
---------------INS MethodInvocation@@mockExchange.getStatusCode() @TO@ SimpleName@@MethodName:append:[mockExchange.getStatusCode()] @AT@ 8943 @LENGTH@ 28
------------------INS SimpleName@@Name:mockExchange @TO@ MethodInvocation@@mockExchange.getStatusCode() @AT@ 8943 @LENGTH@ 12
------------------INS SimpleName@@MethodName:getStatusCode:[] @TO@ MethodInvocation@@mockExchange.getStatusCode() @AT@ 8956 @LENGTH@ 15
------INS ExpressionStatement@@MethodInvocation:json.append("}") @TO@ Block@@ElseBody:{  StringBuffer json=new StringBuffer("{");  json.append("\"id\"").append(":\"").append(mockExchange.getRelativePath()).append("\",");  json.append("\"result\"").append(":\"").append("DOWN").append("\",");  json.append("\"data\"").append(":").append("{");  json.append("\"status-code\"").append(":").append(mockExchange.getStatusCode());  json.append("}");  json.append("}");  responses.add(new InVMResponse(mockExchange.getStatusCode(),json.toString()));} @AT@ 9002 @LENGTH@ 17
---------INS MethodInvocation@@json.append("}") @TO@ ExpressionStatement@@MethodInvocation:json.append("}") @AT@ 9002 @LENGTH@ 16
------------INS SimpleName@@Name:json @TO@ MethodInvocation@@json.append("}") @AT@ 9002 @LENGTH@ 4
------------INS SimpleName@@MethodName:append:["}"] @TO@ MethodInvocation@@json.append("}") @AT@ 9007 @LENGTH@ 11
---------------INS StringLiteral@@"}" @TO@ SimpleName@@MethodName:append:["}"] @AT@ 9014 @LENGTH@ 3
------INS ExpressionStatement@@MethodInvocation:json.append("}") @TO@ Block@@ElseBody:{  StringBuffer json=new StringBuffer("{");  json.append("\"id\"").append(":\"").append(mockExchange.getRelativePath()).append("\",");  json.append("\"result\"").append(":\"").append("DOWN").append("\",");  json.append("\"data\"").append(":").append("{");  json.append("\"status-code\"").append(":").append(mockExchange.getStatusCode());  json.append("}");  json.append("}");  responses.add(new InVMResponse(mockExchange.getStatusCode(),json.toString()));} @AT@ 9044 @LENGTH@ 17
---------INS MethodInvocation@@json.append("}") @TO@ ExpressionStatement@@MethodInvocation:json.append("}") @AT@ 9044 @LENGTH@ 16
------------INS SimpleName@@Name:json @TO@ MethodInvocation@@json.append("}") @AT@ 9044 @LENGTH@ 4
------------INS SimpleName@@MethodName:append:["}"] @TO@ MethodInvocation@@json.append("}") @AT@ 9049 @LENGTH@ 11
---------------INS StringLiteral@@"}" @TO@ SimpleName@@MethodName:append:["}"] @AT@ 9056 @LENGTH@ 3
------INS ExpressionStatement@@MethodInvocation:responses.add(new InVMResponse(mockExchange.getStatusCode(),json.toString())) @TO@ Block@@ElseBody:{  StringBuffer json=new StringBuffer("{");  json.append("\"id\"").append(":\"").append(mockExchange.getRelativePath()).append("\",");  json.append("\"result\"").append(":\"").append("DOWN").append("\",");  json.append("\"data\"").append(":").append("{");  json.append("\"status-code\"").append(":").append(mockExchange.getStatusCode());  json.append("}");  json.append("}");  responses.add(new InVMResponse(mockExchange.getStatusCode(),json.toString()));} @AT@ 9087 @LENGTH@ 79
---------INS MethodInvocation@@responses.add(new InVMResponse(mockExchange.getStatusCode(),json.toString())) @TO@ ExpressionStatement@@MethodInvocation:responses.add(new InVMResponse(mockExchange.getStatusCode(),json.toString())) @AT@ 9087 @LENGTH@ 78
------------INS SimpleName@@Name:responses @TO@ MethodInvocation@@responses.add(new InVMResponse(mockExchange.getStatusCode(),json.toString())) @AT@ 9087 @LENGTH@ 9
------------INS SimpleName@@MethodName:add:[new InVMResponse(mockExchange.getStatusCode(),json.toString())] @TO@ MethodInvocation@@responses.add(new InVMResponse(mockExchange.getStatusCode(),json.toString())) @AT@ 9097 @LENGTH@ 68
---------------INS ClassInstanceCreation@@InVMResponse[mockExchange.getStatusCode(), json.toString()] @TO@ SimpleName@@MethodName:add:[new InVMResponse(mockExchange.getStatusCode(),json.toString())] @AT@ 9101 @LENGTH@ 63
------------------INS New@@new @TO@ ClassInstanceCreation@@InVMResponse[mockExchange.getStatusCode(), json.toString()] @AT@ 9101 @LENGTH@ 3
------------------INS SimpleType@@InVMResponse @TO@ ClassInstanceCreation@@InVMResponse[mockExchange.getStatusCode(), json.toString()] @AT@ 9105 @LENGTH@ 12
------------------INS MethodInvocation@@mockExchange.getStatusCode() @TO@ ClassInstanceCreation@@InVMResponse[mockExchange.getStatusCode(), json.toString()] @AT@ 9118 @LENGTH@ 28
---------------------INS SimpleName@@Name:mockExchange @TO@ MethodInvocation@@mockExchange.getStatusCode() @AT@ 9118 @LENGTH@ 12
---------------------INS SimpleName@@MethodName:getStatusCode:[] @TO@ MethodInvocation@@mockExchange.getStatusCode() @AT@ 9131 @LENGTH@ 15
------------------INS MethodInvocation@@json.toString() @TO@ ClassInstanceCreation@@InVMResponse[mockExchange.getStatusCode(), json.toString()] @AT@ 9148 @LENGTH@ 15
---------------------INS SimpleName@@Name:json @TO@ MethodInvocation@@json.toString() @AT@ 9148 @LENGTH@ 4
---------------------INS SimpleName@@MethodName:toString:[] @TO@ MethodInvocation@@json.toString() @AT@ 9153 @LENGTH@ 10


INS MethodDeclaration@@public, void, MethodName:writesArrayOverUndefinedValueForPut, Exception,  @TO@ TypeDeclaration@@[@RunWith(MockitoJUnitRunner.class), public]DomainObjectReaderUnitTests,  @AT@ 12435 @LENGTH@ 465
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:writesArrayOverUndefinedValueForPut, Exception,  @AT@ 12435 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:writesArrayOverUndefinedValueForPut, Exception,  @AT@ 12442 @LENGTH@ 4
---INS SimpleName@@MethodName:writesArrayOverUndefinedValueForPut @TO@ MethodDeclaration@@public, void, MethodName:writesArrayOverUndefinedValueForPut, Exception,  @AT@ 12447 @LENGTH@ 35
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:writesArrayOverUndefinedValueForPut, Exception,  @AT@ 12492 @LENGTH@ 9
---INS VariableDeclarationStatement@@Parent source=new Parent(); @TO@ MethodDeclaration@@public, void, MethodName:writesArrayOverUndefinedValueForPut, Exception,  @AT@ 12507 @LENGTH@ 29
------INS SimpleType@@Parent @TO@ VariableDeclarationStatement@@Parent source=new Parent(); @AT@ 12507 @LENGTH@ 6
------INS VariableDeclarationFragment@@source=new Parent() @TO@ VariableDeclarationStatement@@Parent source=new Parent(); @AT@ 12514 @LENGTH@ 21
---------INS SimpleName@@source @TO@ VariableDeclarationFragment@@source=new Parent() @AT@ 12514 @LENGTH@ 6
---------INS ClassInstanceCreation@@Parent[] @TO@ VariableDeclarationFragment@@source=new Parent() @AT@ 12523 @LENGTH@ 12
------------INS New@@new @TO@ ClassInstanceCreation@@Parent[] @AT@ 12523 @LENGTH@ 3
------------INS SimpleType@@Parent @TO@ ClassInstanceCreation@@Parent[] @AT@ 12527 @LENGTH@ 6
---INS ExpressionStatement@@Assignment:source.inner=new Child() @TO@ MethodDeclaration@@public, void, MethodName:writesArrayOverUndefinedValueForPut, Exception,  @AT@ 12539 @LENGTH@ 27
------INS Assignment@@source.inner=new Child() @TO@ ExpressionStatement@@Assignment:source.inner=new Child() @AT@ 12539 @LENGTH@ 26
---------INS QualifiedName@@source.inner @TO@ Assignment@@source.inner=new Child() @AT@ 12539 @LENGTH@ 12
------------INS SimpleName@@source @TO@ QualifiedName@@source.inner @AT@ 12539 @LENGTH@ 6
------------INS SimpleName@@inner @TO@ QualifiedName@@source.inner @AT@ 12546 @LENGTH@ 5
---------INS Operator@@= @TO@ Assignment@@source.inner=new Child() @AT@ 12551 @LENGTH@ 1
---------INS ClassInstanceCreation@@Child[] @TO@ Assignment@@source.inner=new Child() @AT@ 12554 @LENGTH@ 11
------------INS New@@new @TO@ ClassInstanceCreation@@Child[] @AT@ 12554 @LENGTH@ 3
------------INS SimpleType@@Child @TO@ ClassInstanceCreation@@Child[] @AT@ 12558 @LENGTH@ 5
---INS ExpressionStatement@@Assignment:source.inner.items=null @TO@ MethodDeclaration@@public, void, MethodName:writesArrayOverUndefinedValueForPut, Exception,  @AT@ 12569 @LENGTH@ 26
------INS Assignment@@source.inner.items=null @TO@ ExpressionStatement@@Assignment:source.inner.items=null @AT@ 12569 @LENGTH@ 25
---------INS QualifiedName@@source.inner.items @TO@ Assignment@@source.inner.items=null @AT@ 12569 @LENGTH@ 18
------------INS QualifiedName@@source.inner @TO@ QualifiedName@@source.inner.items @AT@ 12569 @LENGTH@ 12
---------------INS SimpleName@@source @TO@ QualifiedName@@source.inner @AT@ 12569 @LENGTH@ 6
---------------INS SimpleName@@inner @TO@ QualifiedName@@source.inner @AT@ 12576 @LENGTH@ 5
------------INS SimpleName@@items @TO@ QualifiedName@@source.inner.items @AT@ 12582 @LENGTH@ 5
---------INS Operator@@= @TO@ Assignment@@source.inner.items=null @AT@ 12587 @LENGTH@ 1
---------INS NullLiteral@@null @TO@ Assignment@@source.inner.items=null @AT@ 12590 @LENGTH@ 4
---INS VariableDeclarationStatement@@JsonNode node=new ObjectMapper().readTree("{ \"inner\" : { \"items\" : [ { \"some\" : \"value\" } ] } }"); @TO@ MethodDeclaration@@public, void, MethodName:writesArrayOverUndefinedValueForPut, Exception,  @AT@ 12599 @LENGTH@ 108
------INS SimpleType@@JsonNode @TO@ VariableDeclarationStatement@@JsonNode node=new ObjectMapper().readTree("{ \"inner\" : { \"items\" : [ { \"some\" : \"value\" } ] } }"); @AT@ 12599 @LENGTH@ 8
------INS VariableDeclarationFragment@@node=new ObjectMapper().readTree("{ \"inner\" : { \"items\" : [ { \"some\" : \"value\" } ] } }") @TO@ VariableDeclarationStatement@@JsonNode node=new ObjectMapper().readTree("{ \"inner\" : { \"items\" : [ { \"some\" : \"value\" } ] } }"); @AT@ 12608 @LENGTH@ 98
---------INS SimpleName@@node @TO@ VariableDeclarationFragment@@node=new ObjectMapper().readTree("{ \"inner\" : { \"items\" : [ { \"some\" : \"value\" } ] } }") @AT@ 12608 @LENGTH@ 4
---------INS MethodInvocation@@new ObjectMapper().readTree("{ \"inner\" : { \"items\" : [ { \"some\" : \"value\" } ] } }") @TO@ VariableDeclarationFragment@@node=new ObjectMapper().readTree("{ \"inner\" : { \"items\" : [ { \"some\" : \"value\" } ] } }") @AT@ 12615 @LENGTH@ 91
------------INS ClassInstanceCreation@@ObjectMapper[] @TO@ MethodInvocation@@new ObjectMapper().readTree("{ \"inner\" : { \"items\" : [ { \"some\" : \"value\" } ] } }") @AT@ 12615 @LENGTH@ 18
---------------INS New@@new @TO@ ClassInstanceCreation@@ObjectMapper[] @AT@ 12615 @LENGTH@ 3
---------------INS SimpleType@@ObjectMapper @TO@ ClassInstanceCreation@@ObjectMapper[] @AT@ 12619 @LENGTH@ 12
------------INS SimpleName@@MethodName:readTree:["{ \"inner\" : { \"items\" : [ { \"some\" : \"value\" } ] } }"] @TO@ MethodInvocation@@new ObjectMapper().readTree("{ \"inner\" : { \"items\" : [ { \"some\" : \"value\" } ] } }") @AT@ 12634 @LENGTH@ 72
---------------INS StringLiteral@@"{ \"inner\" : { \"items\" : [ { \"some\" : \"value\" } ] } }" @TO@ SimpleName@@MethodName:readTree:["{ \"inner\" : { \"items\" : [ { \"some\" : \"value\" } ] } }"] @AT@ 12643 @LENGTH@ 62
---INS VariableDeclarationStatement@@Parent result=reader.readPut((ObjectNode)node,source,new ObjectMapper()); @TO@ MethodDeclaration@@public, void, MethodName:writesArrayOverUndefinedValueForPut, Exception,  @AT@ 12711 @LENGTH@ 78
------INS SimpleType@@Parent @TO@ VariableDeclarationStatement@@Parent result=reader.readPut((ObjectNode)node,source,new ObjectMapper()); @AT@ 12711 @LENGTH@ 6
------INS VariableDeclarationFragment@@result=reader.readPut((ObjectNode)node,source,new ObjectMapper()) @TO@ VariableDeclarationStatement@@Parent result=reader.readPut((ObjectNode)node,source,new ObjectMapper()); @AT@ 12718 @LENGTH@ 70
---------INS SimpleName@@result @TO@ VariableDeclarationFragment@@result=reader.readPut((ObjectNode)node,source,new ObjectMapper()) @AT@ 12718 @LENGTH@ 6
---------INS MethodInvocation@@reader.readPut((ObjectNode)node,source,new ObjectMapper()) @TO@ VariableDeclarationFragment@@result=reader.readPut((ObjectNode)node,source,new ObjectMapper()) @AT@ 12727 @LENGTH@ 61
------------INS SimpleName@@Name:reader @TO@ MethodInvocation@@reader.readPut((ObjectNode)node,source,new ObjectMapper()) @AT@ 12727 @LENGTH@ 6
------------INS SimpleName@@MethodName:readPut:[(ObjectNode)node, source, new ObjectMapper()] @TO@ MethodInvocation@@reader.readPut((ObjectNode)node,source,new ObjectMapper()) @AT@ 12734 @LENGTH@ 54
---------------INS CastExpression@@(ObjectNode)node @TO@ SimpleName@@MethodName:readPut:[(ObjectNode)node, source, new ObjectMapper()] @AT@ 12742 @LENGTH@ 17
------------------INS SimpleType@@ObjectNode @TO@ CastExpression@@(ObjectNode)node @AT@ 12743 @LENGTH@ 10
------------------INS SimpleName@@node @TO@ CastExpression@@(ObjectNode)node @AT@ 12755 @LENGTH@ 4
---------------INS SimpleName@@source @TO@ SimpleName@@MethodName:readPut:[(ObjectNode)node, source, new ObjectMapper()] @AT@ 12761 @LENGTH@ 6
---------------INS ClassInstanceCreation@@ObjectMapper[] @TO@ SimpleName@@MethodName:readPut:[(ObjectNode)node, source, new ObjectMapper()] @AT@ 12769 @LENGTH@ 18
------------------INS New@@new @TO@ ClassInstanceCreation@@ObjectMapper[] @AT@ 12769 @LENGTH@ 3
------------------INS SimpleType@@ObjectMapper @TO@ ClassInstanceCreation@@ObjectMapper[] @AT@ 12773 @LENGTH@ 12
---INS ExpressionStatement@@MethodInvocation:assertThat(result.inner.items.size(),is(1)) @TO@ MethodDeclaration@@public, void, MethodName:writesArrayOverUndefinedValueForPut, Exception,  @AT@ 12793 @LENGTH@ 45
------INS MethodInvocation@@assertThat(result.inner.items.size(),is(1)) @TO@ ExpressionStatement@@MethodInvocation:assertThat(result.inner.items.size(),is(1)) @AT@ 12793 @LENGTH@ 44
---------INS SimpleName@@MethodName:assertThat:[result.inner.items.size(), is(1)] @TO@ MethodInvocation@@assertThat(result.inner.items.size(),is(1)) @AT@ 12793 @LENGTH@ 44
------------INS MethodInvocation@@result.inner.items.size() @TO@ SimpleName@@MethodName:assertThat:[result.inner.items.size(), is(1)] @AT@ 12804 @LENGTH@ 25
---------------INS QualifiedName@@Name:result.inner.items @TO@ MethodInvocation@@result.inner.items.size() @AT@ 12804 @LENGTH@ 18
---------------INS SimpleName@@MethodName:size:[] @TO@ MethodInvocation@@result.inner.items.size() @AT@ 12823 @LENGTH@ 6
------------INS MethodInvocation@@is(1) @TO@ SimpleName@@MethodName:assertThat:[result.inner.items.size(), is(1)] @AT@ 12831 @LENGTH@ 5
---------------INS SimpleName@@MethodName:is:[1] @TO@ MethodInvocation@@is(1) @AT@ 12831 @LENGTH@ 5
------------------INS NumberLiteral@@1 @TO@ SimpleName@@MethodName:is:[1] @AT@ 12834 @LENGTH@ 1
---------------INS SimpleName@@MethodName:is:[1] @TO@ MethodInvocation@@is(1) @AT@ 12831 @LENGTH@ 5
------------------INS NumberLiteral@@1 @TO@ SimpleName@@MethodName:is:[1] @AT@ 12834 @LENGTH@ 1
---INS ExpressionStatement@@MethodInvocation:assertThat(result.inner.items.get(0).some,is("value")) @TO@ MethodDeclaration@@public, void, MethodName:writesArrayOverUndefinedValueForPut, Exception,  @AT@ 12841 @LENGTH@ 56
------INS MethodInvocation@@assertThat(result.inner.items.get(0).some,is("value")) @TO@ ExpressionStatement@@MethodInvocation:assertThat(result.inner.items.get(0).some,is("value")) @AT@ 12841 @LENGTH@ 55
---------INS SimpleName@@MethodName:assertThat:[result.inner.items.get(0).some, is("value")] @TO@ MethodInvocation@@assertThat(result.inner.items.get(0).some,is("value")) @AT@ 12841 @LENGTH@ 55
------------INS FieldAccess@@result.inner.items.get(0).some @TO@ SimpleName@@MethodName:assertThat:[result.inner.items.get(0).some, is("value")] @AT@ 12852 @LENGTH@ 30
---------------INS MethodInvocation@@result.inner.items.get(0) @TO@ FieldAccess@@result.inner.items.get(0).some @AT@ 12852 @LENGTH@ 25
------------------INS QualifiedName@@Name:result.inner.items @TO@ MethodInvocation@@result.inner.items.get(0) @AT@ 12852 @LENGTH@ 18
------------------INS SimpleName@@MethodName:get:[0] @TO@ MethodInvocation@@result.inner.items.get(0) @AT@ 12871 @LENGTH@ 6
---------------------INS NumberLiteral@@0 @TO@ SimpleName@@MethodName:get:[0] @AT@ 12875 @LENGTH@ 1
---------------INS SimpleName@@some @TO@ FieldAccess@@result.inner.items.get(0).some @AT@ 12878 @LENGTH@ 4
------------INS MethodInvocation@@is("value") @TO@ SimpleName@@MethodName:assertThat:[result.inner.items.get(0).some, is("value")] @AT@ 12884 @LENGTH@ 11
---------------INS SimpleName@@MethodName:is:["value"] @TO@ MethodInvocation@@is("value") @AT@ 12884 @LENGTH@ 11
------------------INS StringLiteral@@"value" @TO@ SimpleName@@MethodName:is:["value"] @AT@ 12887 @LENGTH@ 7


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled(); @AT@ 5426 @LENGTH@ 160
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5434 @LENGTH@ 151
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5434 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5451 @LENGTH@ 134
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 5451 @LENGTH@ 64
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5451 @LENGTH@ 35
---------UPD MethodInvocation@@componentConfiguration.getConfigurer().isEnabled() @TO@ componentConfiguration.getCustomizer().isEnabled() @AT@ 5535 @LENGTH@ 50
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5535 @LENGTH@ 38


UPD VariableDeclarationStatement@@DsSecurityImpl dsSecurity=new DsSecurityImpl(user,password,null,false,null); @TO@ DsSecurityImpl dsSecurity=new DsSecurityImpl(user,password,null,false,null,null); @AT@ 7409 @LENGTH@ 82
---UPD VariableDeclarationFragment@@dsSecurity=new DsSecurityImpl(user,password,null,false,null) @TO@ dsSecurity=new DsSecurityImpl(user,password,null,false,null,null) @AT@ 7424 @LENGTH@ 66
------UPD ClassInstanceCreation@@DsSecurityImpl[user, password, null, false, null] @TO@ DsSecurityImpl[user, password, null, false, null, null] @AT@ 7437 @LENGTH@ 53
---------INS NullLiteral@@null @TO@ ClassInstanceCreation@@DsSecurityImpl[user, password, null, false, null] @AT@ 7491 @LENGTH@ 4


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && languageConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && languageConfiguration.getCustomizer().isEnabled(); @AT@ 4517 @LENGTH@ 159
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && languageConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && languageConfiguration.getCustomizer().isEnabled() @AT@ 4525 @LENGTH@ 150
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 4525 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && languageConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && languageConfiguration.getCustomizer().isEnabled() @AT@ 4542 @LENGTH@ 133
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 4542 @LENGTH@ 64
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 4542 @LENGTH@ 35
---------UPD MethodInvocation@@languageConfiguration.getConfigurer().isEnabled() @TO@ languageConfiguration.getCustomizer().isEnabled() @AT@ 4626 @LENGTH@ 49
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 4626 @LENGTH@ 37


UPD IfStatement@@if (metadataService.get(declaredByMetadataId) != null) {  return;} @TO@ if (metadataService.get(declaredByMetadataId) != null) {  continue;} @AT@ 8705 @LENGTH@ 115
---UPD Block@@ThenBody:{  return;} @TO@ ThenBody:{  continue;} @AT@ 8760 @LENGTH@ 60
------INS ContinueStatement@@ @TO@ Block@@ThenBody:{  return;} @AT@ 8805 @LENGTH@ 9
------DEL ReturnStatement@@ @AT@ 8805 @LENGTH@ 7


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled(); @AT@ 5294 @LENGTH@ 160
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5302 @LENGTH@ 151
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5302 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5319 @LENGTH@ 134
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 5319 @LENGTH@ 64
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5319 @LENGTH@ 35
---------UPD MethodInvocation@@componentConfiguration.getConfigurer().isEnabled() @TO@ componentConfiguration.getCustomizer().isEnabled() @AT@ 5403 @LENGTH@ 50
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5403 @LENGTH@ 38


UPD FieldDeclaration@@private, static, int, [STACK_LENGTH_LIMIT=15] @TO@ private, static, final, int, [STACK_LENGTH_LIMIT=15] @AT@ 58495 @LENGTH@ 43
---INS Modifier@@final @TO@ FieldDeclaration@@private, static, int, [STACK_LENGTH_LIMIT=15] @AT@ 58510 @LENGTH@ 5


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<VmComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<VmComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5361 @LENGTH@ 335
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 5365 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5365 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  ComponentCustomizer<VmComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ ThenBody:{  for (  ComponentCustomizer<VmComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5421 @LENGTH@ 275
------UPD EnhancedForStatement@@for (ComponentCustomizer<VmComponent> configurer : customizers) {  LOGGER.debug("Configure component {}, with configurer {}",component,configurer);  configurer.customize(component);} @TO@ for (ComponentCustomizer<VmComponent> customizer : customizers) {  LOGGER.debug("Configure component {}, with customizer {}",component,customizer);  customizer.customize(component);} @AT@ 5435 @LENGTH@ 251
---------UPD SingleVariableDeclaration@@ComponentCustomizer<VmComponent> configurer @TO@ ComponentCustomizer<VmComponent> customizer @AT@ 5440 @LENGTH@ 43
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5473 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5517 @LENGTH@ 106
------------UPD MethodInvocation@@LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5517 @LENGTH@ 105
---------------UPD SimpleName@@MethodName:debug:["Configure component {}, with configurer {}", component, configurer] @TO@ MethodName:debug:["Configure component {}, with customizer {}", component, customizer] @AT@ 5524 @LENGTH@ 98
------------------UPD StringLiteral@@"Configure component {}, with configurer {}" @TO@ "Configure component {}, with customizer {}" @AT@ 5530 @LENGTH@ 44
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5611 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(component) @TO@ MethodInvocation:customizer.customize(component) @AT@ 5640 @LENGTH@ 32
------------UPD MethodInvocation@@configurer.customize(component) @TO@ customizer.customize(component) @AT@ 5640 @LENGTH@ 31
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5640 @LENGTH@ 10


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled(); @AT@ 5328 @LENGTH@ 160
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5336 @LENGTH@ 151
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5336 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5353 @LENGTH@ 134
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 5353 @LENGTH@ 64
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5353 @LENGTH@ 35
---------UPD MethodInvocation@@componentConfiguration.getConfigurer().isEnabled() @TO@ componentConfiguration.getCustomizer().isEnabled() @AT@ 5437 @LENGTH@ 50
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5437 @LENGTH@ 38


UPD MethodDeclaration@@public, void, MethodName:addEquals, @CliOption(key="class",mandatory=false,unspecifiedDefaultValue="*",optionContext=UPDATE_PROJECT,help="The name of the class to generate `equals()` and `hashCode()` " + "methods. When working on a mono module project, simply specify the name of the class in which " + "the methods will be included. If you consider it necessary, you can also specify the package. "+ "Ex.: `--class ~.domain.MyClass` (where `~` is the base package). When working with multiple "+ "modules, you should specify the name of the class and the module where it is. "+ "Ex.: `--class model:~.domain.MyClass`. "+ "If the module is not specified, it is assumed that the class is in the module which has the focus. "+ "Default if option not present: the class focused by Roo shell.") final JavaType javaType, @CliOption(key="appendSuper",mandatory=false,specifiedDefaultValue="true",unspecifiedDefaultValue="false",help="Whether to call the super class `equals()` and `hashCode()` methods." + "Default if option present: `true`; default if option not present: `false`.") final boolean appendSuper, @CliOption(key="excludeFields",mandatory=false,specifiedDefaultValue="",optionContext="exclude-fields",help="The fields to exclude in the `equals()` and `hashcode()` methods. Multiple field names must be a double-quoted list separated by spaces.s") final Set<String> excludeFields,  @TO@ public, void, MethodName:addEquals, @CliOption(key="class",mandatory=false,unspecifiedDefaultValue="*",optionContext=UPDATE_PROJECT,help="The name of the class to generate `equals()` and `hashCode()` " + "methods. When working on a mono module project, simply specify the name of the class in which " + "the methods will be included. If you consider it necessary, you can also specify the package. "+ "Ex.: `--class ~.domain.MyClass` (where `~` is the base package). When working with multiple "+ "modules, you should specify the name of the class and the module where it is. "+ "Ex.: `--class model:~.domain.MyClass`. "+ "If the module is not specified, it is assumed that the class is in the module which has the focus. "+ "Default if option not present: the class focused by Roo shell.") final JavaType javaType, @CliOption(key="appendSuper",mandatory=false,specifiedDefaultValue="true",unspecifiedDefaultValue="false",help="Whether to call the super class `equals()` and `hashCode()` methods. This param " + "has no effect when used against JPA entities. " + "Default if option present: `true`; default if option not present: `false`.") final boolean appendSuper, @CliOption(key="excludeFields",mandatory=false,specifiedDefaultValue="",optionContext="exclude-fields",help="The fields to exclude in the `equals()` and `hashcode()` methods. Multiple field names must be a double-quoted list separated by spaces.s") final Set<String> excludeFields,  @AT@ 1768 @LENGTH@ 1767
---UPD SingleVariableDeclaration@@@CliOption(key="appendSuper",mandatory=false,specifiedDefaultValue="true",unspecifiedDefaultValue="false",help="Whether to call the super class `equals()` and `hashCode()` methods." + "Default if option present: `true`; default if option not present: `false`.") final boolean appendSuper @TO@ @CliOption(key="appendSuper",mandatory=false,specifiedDefaultValue="true",unspecifiedDefaultValue="false",help="Whether to call the super class `equals()` and `hashCode()` methods. This param " + "has no effect when used against JPA entities. " + "Default if option present: `true`; default if option not present: `false`.") final boolean appendSuper @AT@ 2751 @LENGTH@ 335


INS MethodDeclaration@@User, MethodName:findOneWithMultipleSubGraphsById, Integer id,  @TO@ TypeDeclaration@@[public]RepositoryMethodsWithEntityGraphConfigRepository, [CrudRepository<User,Integer>, QueryDslPredicateExecutor<User>] @AT@ 2423 @LENGTH@ 45
---INS SimpleType@@User @TO@ MethodDeclaration@@User, MethodName:findOneWithMultipleSubGraphsById, Integer id,  @AT@ 2418 @LENGTH@ 4
---INS SimpleName@@MethodName:findOneWithMultipleSubGraphsById @TO@ MethodDeclaration@@User, MethodName:findOneWithMultipleSubGraphsById, Integer id,  @AT@ 2423 @LENGTH@ 32
---INS SingleVariableDeclaration@@Integer id @TO@ MethodDeclaration@@User, MethodName:findOneWithMultipleSubGraphsById, Integer id,  @AT@ 2456 @LENGTH@ 10
------INS SimpleType@@Integer @TO@ SingleVariableDeclaration@@Integer id @AT@ 2456 @LENGTH@ 7
------INS SimpleName@@id @TO@ SingleVariableDeclaration@@Integer id @AT@ 2464 @LENGTH@ 2


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && dataformatConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && dataformatConfiguration.getCustomizer().isEnabled(); @AT@ 5112 @LENGTH@ 177
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && dataformatConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && dataformatConfiguration.getCustomizer().isEnabled() @AT@ 5120 @LENGTH@ 168
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5120 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && dataformatConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && dataformatConfiguration.getCustomizer().isEnabled() @AT@ 5137 @LENGTH@ 151
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 5137 @LENGTH@ 72
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5137 @LENGTH@ 35
---------UPD MethodInvocation@@dataformatConfiguration.getConfigurer().isEnabled() @TO@ dataformatConfiguration.getCustomizer().isEnabled() @AT@ 5237 @LENGTH@ 51
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5237 @LENGTH@ 39


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled(); @AT@ 5277 @LENGTH@ 160
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5285 @LENGTH@ 151
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5285 @LENGTH@ 14


UPD MethodDeclaration@@protected, URL, MethodName:getXMLConfig,  @TO@ private, URL, MethodName:getXMLConfig,  @AT@ 2170 @LENGTH@ 150
---UPD Modifier@@protected @TO@ private @AT@ 2170 @LENGTH@ 9


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<AMQPComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<AMQPComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5395 @LENGTH@ 337
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 5399 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5399 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  ComponentCustomizer<AMQPComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ ThenBody:{  for (  ComponentCustomizer<AMQPComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5455 @LENGTH@ 277
------UPD EnhancedForStatement@@for (ComponentCustomizer<AMQPComponent> configurer : customizers) {  LOGGER.debug("Configure component {}, with configurer {}",component,configurer);  configurer.customize(component);} @TO@ for (ComponentCustomizer<AMQPComponent> customizer : customizers) {  LOGGER.debug("Configure component {}, with customizer {}",component,customizer);  customizer.customize(component);} @AT@ 5469 @LENGTH@ 253
---------UPD SingleVariableDeclaration@@ComponentCustomizer<AMQPComponent> configurer @TO@ ComponentCustomizer<AMQPComponent> customizer @AT@ 5474 @LENGTH@ 45
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5509 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5553 @LENGTH@ 106
------------UPD MethodInvocation@@LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5553 @LENGTH@ 105
---------------UPD SimpleName@@MethodName:debug:["Configure component {}, with configurer {}", component, configurer] @TO@ MethodName:debug:["Configure component {}, with customizer {}", component, customizer] @AT@ 5560 @LENGTH@ 98
------------------UPD StringLiteral@@"Configure component {}, with configurer {}" @TO@ "Configure component {}, with customizer {}" @AT@ 5566 @LENGTH@ 44
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5647 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(component) @TO@ MethodInvocation:customizer.customize(component) @AT@ 5676 @LENGTH@ 32
------------UPD MethodInvocation@@configurer.customize(component) @TO@ customizer.customize(component) @AT@ 5676 @LENGTH@ 31
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5676 @LENGTH@ 10


INS ExpressionStatement@@MethodInvocation:template.setBeanName(this.testName.getMethodName() + "SendReceiveRabbitTemplate") @TO@ MethodDeclaration@@protected, RabbitTemplate, MethodName:createSendAndReceiveRabbitTemplate, ConnectionFactory connectionFactory,  @AT@ 1140 @LENGTH@ 82
---INS MethodInvocation@@template.setBeanName(this.testName.getMethodName() + "SendReceiveRabbitTemplate") @TO@ ExpressionStatement@@MethodInvocation:template.setBeanName(this.testName.getMethodName() + "SendReceiveRabbitTemplate") @AT@ 1140 @LENGTH@ 81
------INS SimpleName@@Name:template @TO@ MethodInvocation@@template.setBeanName(this.testName.getMethodName() + "SendReceiveRabbitTemplate") @AT@ 1140 @LENGTH@ 8
------INS SimpleName@@MethodName:setBeanName:[this.testName.getMethodName() + "SendReceiveRabbitTemplate"] @TO@ MethodInvocation@@template.setBeanName(this.testName.getMethodName() + "SendReceiveRabbitTemplate") @AT@ 1149 @LENGTH@ 72
---------INS InfixExpression@@this.testName.getMethodName() + "SendReceiveRabbitTemplate" @TO@ SimpleName@@MethodName:setBeanName:[this.testName.getMethodName() + "SendReceiveRabbitTemplate"] @AT@ 1161 @LENGTH@ 59
------------INS MethodInvocation@@this.testName.getMethodName() @TO@ InfixExpression@@this.testName.getMethodName() + "SendReceiveRabbitTemplate" @AT@ 1161 @LENGTH@ 29
---------------INS FieldAccess@@this.testName @TO@ MethodInvocation@@this.testName.getMethodName() @AT@ 1161 @LENGTH@ 13
------------------INS ThisExpression@@this @TO@ FieldAccess@@this.testName @AT@ 1161 @LENGTH@ 4
------------------INS SimpleName@@testName @TO@ FieldAccess@@this.testName @AT@ 1166 @LENGTH@ 8
---------------INS SimpleName@@MethodName:getMethodName:[] @TO@ MethodInvocation@@this.testName.getMethodName() @AT@ 1175 @LENGTH@ 15
------------INS Operator@@+ @TO@ InfixExpression@@this.testName.getMethodName() + "SendReceiveRabbitTemplate" @AT@ 1190 @LENGTH@ 1
------------INS StringLiteral@@"SendReceiveRabbitTemplate" @TO@ InfixExpression@@this.testName.getMethodName() + "SendReceiveRabbitTemplate" @AT@ 1193 @LENGTH@ 27


UPD ExpressionStatement@@MethodInvocation:Assert.notEmpty(values) @TO@ MethodInvocation:Assert.notEmpty(values,"values cannot be empty") @AT@ 1518 @LENGTH@ 24
---UPD MethodInvocation@@Assert.notEmpty(values) @TO@ Assert.notEmpty(values,"values cannot be empty") @AT@ 1518 @LENGTH@ 23
------UPD SimpleName@@MethodName:notEmpty:[values] @TO@ MethodName:notEmpty:[values, "values cannot be empty"] @AT@ 1525 @LENGTH@ 16
---------INS StringLiteral@@"values cannot be empty" @TO@ SimpleName@@MethodName:notEmpty:[values] @AT@ 1542 @LENGTH@ 24


UPD FieldDeclaration@@private, static, long, [serialVersionUID=1L] @TO@ private, static, final, long, [serialVersionUID=1L] @AT@ 1145 @LENGTH@ 42
---INS Modifier@@final @TO@ FieldDeclaration@@private, static, long, [serialVersionUID=1L] @AT@ 1160 @LENGTH@ 5


UPD ExpressionStatement@@Assignment:client=new DefaultAsyncHttpClient() @TO@ Assignment:client=new DefaultAsyncHttpClient(config) @AT@ 3991 @LENGTH@ 38
---UPD Assignment@@client=new DefaultAsyncHttpClient() @TO@ client=new DefaultAsyncHttpClient(config) @AT@ 3991 @LENGTH@ 37
------UPD ClassInstanceCreation@@DefaultAsyncHttpClient[] @TO@ DefaultAsyncHttpClient[config] @AT@ 4000 @LENGTH@ 28
---------INS SimpleName@@config @TO@ ClassInstanceCreation@@DefaultAsyncHttpClient[] @AT@ 4027 @LENGTH@ 6


UPD TypeDeclaration@@[private]UriAwareHttpServletRequest, [HttpServletRequest] @TO@ [private, static]UriAwareHttpServletRequest, [HttpServletRequest] @AT@ 6559 @LENGTH@ 7867
---INS Modifier@@static @TO@ TypeDeclaration@@[private]UriAwareHttpServletRequest, [HttpServletRequest] @AT@ 6567 @LENGTH@ 6


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled(); @AT@ 5294 @LENGTH@ 160
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5302 @LENGTH@ 151
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5302 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5319 @LENGTH@ 134
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 5319 @LENGTH@ 64
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5319 @LENGTH@ 35
---------UPD MethodInvocation@@componentConfiguration.getConfigurer().isEnabled() @TO@ componentConfiguration.getCustomizer().isEnabled() @AT@ 5403 @LENGTH@ 50
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5403 @LENGTH@ 38


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<IgniteIdGenComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<IgniteIdGenComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5530 @LENGTH@ 344
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 5534 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5534 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  ComponentCustomizer<IgniteIdGenComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ ThenBody:{  for (  ComponentCustomizer<IgniteIdGenComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5590 @LENGTH@ 284
------UPD EnhancedForStatement@@for (ComponentCustomizer<IgniteIdGenComponent> configurer : customizers) {  LOGGER.debug("Configure component {}, with configurer {}",component,configurer);  configurer.customize(component);} @TO@ for (ComponentCustomizer<IgniteIdGenComponent> customizer : customizers) {  LOGGER.debug("Configure component {}, with customizer {}",component,customizer);  customizer.customize(component);} @AT@ 5604 @LENGTH@ 260
---------UPD SingleVariableDeclaration@@ComponentCustomizer<IgniteIdGenComponent> configurer @TO@ ComponentCustomizer<IgniteIdGenComponent> customizer @AT@ 5609 @LENGTH@ 52
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5651 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5695 @LENGTH@ 106
------------UPD MethodInvocation@@LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5695 @LENGTH@ 105
---------------UPD SimpleName@@MethodName:debug:["Configure component {}, with configurer {}", component, configurer] @TO@ MethodName:debug:["Configure component {}, with customizer {}", component, customizer] @AT@ 5702 @LENGTH@ 98
------------------UPD StringLiteral@@"Configure component {}, with configurer {}" @TO@ "Configure component {}, with customizer {}" @AT@ 5708 @LENGTH@ 44
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5789 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(component) @TO@ MethodInvocation:customizer.customize(component) @AT@ 5818 @LENGTH@ 32
------------UPD MethodInvocation@@configurer.customize(component) @TO@ customizer.customize(component) @AT@ 5818 @LENGTH@ 31
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5818 @LENGTH@ 10


UPD ExpressionStatement@@MethodInvocation:Assert.notNull(generatedBy) @TO@ MethodInvocation:Assert.notNull(generatedBy,"generatedBy cannot be null") @AT@ 1682 @LENGTH@ 28
---UPD MethodInvocation@@Assert.notNull(generatedBy) @TO@ Assert.notNull(generatedBy,"generatedBy cannot be null") @AT@ 1682 @LENGTH@ 27
------UPD SimpleName@@MethodName:notNull:[generatedBy] @TO@ MethodName:notNull:[generatedBy, "generatedBy cannot be null"] @AT@ 1689 @LENGTH@ 20
---------INS StringLiteral@@"generatedBy cannot be null" @TO@ SimpleName@@MethodName:notNull:[generatedBy] @AT@ 1710 @LENGTH@ 28


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && dataformatConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && dataformatConfiguration.getCustomizer().isEnabled(); @AT@ 5200 @LENGTH@ 177
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && dataformatConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && dataformatConfiguration.getCustomizer().isEnabled() @AT@ 5208 @LENGTH@ 168
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5208 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && dataformatConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && dataformatConfiguration.getCustomizer().isEnabled() @AT@ 5225 @LENGTH@ 151
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 5225 @LENGTH@ 72
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5225 @LENGTH@ 35
---------UPD MethodInvocation@@dataformatConfiguration.getConfigurer().isEnabled() @TO@ dataformatConfiguration.getCustomizer().isEnabled() @AT@ 5325 @LENGTH@ 51
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5325 @LENGTH@ 39


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<HazelcastTopicComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<HazelcastTopicComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5601 @LENGTH@ 347
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 5605 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5605 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  ComponentCustomizer<HazelcastTopicComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ ThenBody:{  for (  ComponentCustomizer<HazelcastTopicComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5661 @LENGTH@ 287
------UPD EnhancedForStatement@@for (ComponentCustomizer<HazelcastTopicComponent> configurer : customizers) {  LOGGER.debug("Configure component {}, with configurer {}",component,configurer);  configurer.customize(component);} @TO@ for (ComponentCustomizer<HazelcastTopicComponent> customizer : customizers) {  LOGGER.debug("Configure component {}, with customizer {}",component,customizer);  customizer.customize(component);} @AT@ 5675 @LENGTH@ 263
---------UPD SingleVariableDeclaration@@ComponentCustomizer<HazelcastTopicComponent> configurer @TO@ ComponentCustomizer<HazelcastTopicComponent> customizer @AT@ 5680 @LENGTH@ 55
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5725 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5769 @LENGTH@ 106
------------UPD MethodInvocation@@LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5769 @LENGTH@ 105
---------------UPD SimpleName@@MethodName:debug:["Configure component {}, with configurer {}", component, configurer] @TO@ MethodName:debug:["Configure component {}, with customizer {}", component, customizer] @AT@ 5776 @LENGTH@ 98
------------------UPD StringLiteral@@"Configure component {}, with configurer {}" @TO@ "Configure component {}, with customizer {}" @AT@ 5782 @LENGTH@ 44
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5863 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(component) @TO@ MethodInvocation:customizer.customize(component) @AT@ 5892 @LENGTH@ 32
------------UPD MethodInvocation@@configurer.customize(component) @TO@ customizer.customize(component) @AT@ 5892 @LENGTH@ 31
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5892 @LENGTH@ 10


UPD ReturnStatement@@MethodInvocation:multiHashOrdered(parentHashCode(),5693,type.hashCode()) @TO@ MethodInvocation:multiHashUnordered(parentHashCode(),5693,type.hashCode()) @AT@ 1720 @LENGTH@ 65
---UPD MethodInvocation@@multiHashOrdered(parentHashCode(),5693,type.hashCode()) @TO@ multiHashUnordered(parentHashCode(),5693,type.hashCode()) @AT@ 1727 @LENGTH@ 57
------UPD SimpleName@@MethodName:multiHashOrdered:[parentHashCode(), 5693, type.hashCode()] @TO@ MethodName:multiHashUnordered:[parentHashCode(), 5693, type.hashCode()] @AT@ 1727 @LENGTH@ 57


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && dataformatConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && dataformatConfiguration.getCustomizer().isEnabled(); @AT@ 5308 @LENGTH@ 177
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && dataformatConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && dataformatConfiguration.getCustomizer().isEnabled() @AT@ 5316 @LENGTH@ 168
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5316 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && dataformatConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && dataformatConfiguration.getCustomizer().isEnabled() @AT@ 5333 @LENGTH@ 151
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 5333 @LENGTH@ 72
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5333 @LENGTH@ 35
---------UPD MethodInvocation@@dataformatConfiguration.getConfigurer().isEnabled() @TO@ dataformatConfiguration.getCustomizer().isEnabled() @AT@ 5433 @LENGTH@ 51
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5433 @LENGTH@ 39


UPD TypeDeclaration@@[@RunWith(SpringJUnit4ClassRunner.class), @ContextConfiguration({"classpath:infrastructure.xml"}), @Transactional, public]QueryDslRepositorySupportTests,  @TO@ [@RunWith(SpringJUnit4ClassRunner.class), @ContextConfiguration({"classpath:infrastructure.xml"}), @Transactional, public]QuerydslRepositorySupportTests,  @AT@ 1380 @LENGTH@ 2970
---UPD SimpleName@@ClassName:QueryDslRepositorySupportTests @TO@ ClassName:QuerydslRepositorySupportTests @AT@ 1506 @LENGTH@ 30


UPD VariableDeclarationStatement@@SortedSet<String> bucketCols=new TreeSet<>(sd.getBucketCols()); @TO@ List<String> bucketCols=new ArrayList<>(sd.getBucketCols()); @AT@ 27006 @LENGTH@ 65
---UPD ParameterizedType@@SortedSet<String> @TO@ List<String> @AT@ 27006 @LENGTH@ 17
------UPD SimpleType@@SortedSet @TO@ List @AT@ 27006 @LENGTH@ 9
---UPD VariableDeclarationFragment@@bucketCols=new TreeSet<>(sd.getBucketCols()) @TO@ bucketCols=new ArrayList<>(sd.getBucketCols()) @AT@ 27024 @LENGTH@ 46
------UPD ClassInstanceCreation@@TreeSet<>[sd.getBucketCols()] @TO@ ArrayList<>[sd.getBucketCols()] @AT@ 27037 @LENGTH@ 33
---------UPD ParameterizedType@@TreeSet<> @TO@ ArrayList<> @AT@ 27041 @LENGTH@ 9
------------UPD SimpleType@@TreeSet @TO@ ArrayList @AT@ 27041 @LENGTH@ 7


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<NetWeaverComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<NetWeaverComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5496 @LENGTH@ 342
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 5500 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5500 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  ComponentCustomizer<NetWeaverComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ ThenBody:{  for (  ComponentCustomizer<NetWeaverComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5556 @LENGTH@ 282
------UPD EnhancedForStatement@@for (ComponentCustomizer<NetWeaverComponent> configurer : customizers) {  LOGGER.debug("Configure component {}, with configurer {}",component,configurer);  configurer.customize(component);} @TO@ for (ComponentCustomizer<NetWeaverComponent> customizer : customizers) {  LOGGER.debug("Configure component {}, with customizer {}",component,customizer);  customizer.customize(component);} @AT@ 5570 @LENGTH@ 258
---------UPD SingleVariableDeclaration@@ComponentCustomizer<NetWeaverComponent> configurer @TO@ ComponentCustomizer<NetWeaverComponent> customizer @AT@ 5575 @LENGTH@ 50
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5615 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5659 @LENGTH@ 106
------------UPD MethodInvocation@@LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5659 @LENGTH@ 105
---------------UPD SimpleName@@MethodName:debug:["Configure component {}, with configurer {}", component, configurer] @TO@ MethodName:debug:["Configure component {}, with customizer {}", component, customizer] @AT@ 5666 @LENGTH@ 98
------------------UPD StringLiteral@@"Configure component {}, with configurer {}" @TO@ "Configure component {}, with customizer {}" @AT@ 5672 @LENGTH@ 44
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5753 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(component) @TO@ MethodInvocation:customizer.customize(component) @AT@ 5782 @LENGTH@ 32
------------UPD MethodInvocation@@configurer.customize(component) @TO@ customizer.customize(component) @AT@ 5782 @LENGTH@ 31
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5782 @LENGTH@ 10


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled(); @AT@ 5226 @LENGTH@ 160
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5234 @LENGTH@ 151
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5234 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5251 @LENGTH@ 134
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 5251 @LENGTH@ 64
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5251 @LENGTH@ 35
---------UPD MethodInvocation@@componentConfiguration.getConfigurer().isEnabled() @TO@ componentConfiguration.getCustomizer().isEnabled() @AT@ 5335 @LENGTH@ 50
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5335 @LENGTH@ 38


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<PdfComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<PdfComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5378 @LENGTH@ 336
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 5382 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5382 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  ComponentCustomizer<PdfComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ ThenBody:{  for (  ComponentCustomizer<PdfComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5438 @LENGTH@ 276
------UPD EnhancedForStatement@@for (ComponentCustomizer<PdfComponent> configurer : customizers) {  LOGGER.debug("Configure component {}, with configurer {}",component,configurer);  configurer.customize(component);} @TO@ for (ComponentCustomizer<PdfComponent> customizer : customizers) {  LOGGER.debug("Configure component {}, with customizer {}",component,customizer);  customizer.customize(component);} @AT@ 5452 @LENGTH@ 252
---------UPD SingleVariableDeclaration@@ComponentCustomizer<PdfComponent> configurer @TO@ ComponentCustomizer<PdfComponent> customizer @AT@ 5457 @LENGTH@ 44
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5491 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5535 @LENGTH@ 106
------------UPD MethodInvocation@@LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5535 @LENGTH@ 105
---------------UPD SimpleName@@MethodName:debug:["Configure component {}, with configurer {}", component, configurer] @TO@ MethodName:debug:["Configure component {}, with customizer {}", component, customizer] @AT@ 5542 @LENGTH@ 98
------------------UPD StringLiteral@@"Configure component {}, with configurer {}" @TO@ "Configure component {}, with customizer {}" @AT@ 5548 @LENGTH@ 44
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5629 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(component) @TO@ MethodInvocation:customizer.customize(component) @AT@ 5658 @LENGTH@ 32
------------UPD MethodInvocation@@configurer.customize(component) @TO@ customizer.customize(component) @AT@ 5658 @LENGTH@ 31
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5658 @LENGTH@ 10


UPD ExpressionStatement@@MethodInvocation:Utilities.LOG14535.info("creating new paths " + System.identityHashCode(fsp2) + " for "+ dirName+ ", childSpec "+ unionPath+ ": tmpPath "+ fsp2.getTmpPath()+ ", task path "+ fsp2.getTaskOutputTempPath(),new Exception()) @TO@ MethodInvocation:Utilities.LOG14535.info("creating new paths " + System.identityHashCode(fsp2) + " for "+ dirName+ ", childSpec "+ unionPath+ ": tmpPath "+ fsp2.getTmpPath()+ ", task path "+ fsp2.getTaskOutputTempPath()) @AT@ 38437 @LENGTH@ 244
---UPD MethodInvocation@@Utilities.LOG14535.info("creating new paths " + System.identityHashCode(fsp2) + " for "+ dirName+ ", childSpec "+ unionPath+ ": tmpPath "+ fsp2.getTmpPath()+ ", task path "+ fsp2.getTaskOutputTempPath(),new Exception()) @TO@ Utilities.LOG14535.info("creating new paths " + System.identityHashCode(fsp2) + " for "+ dirName+ ", childSpec "+ unionPath+ ": tmpPath "+ fsp2.getTmpPath()+ ", task path "+ fsp2.getTaskOutputTempPath()) @AT@ 38437 @LENGTH@ 243
------UPD SimpleName@@MethodName:info:["creating new paths " + System.identityHashCode(fsp2) + " for "+ dirName+ ", childSpec "+ unionPath+ ": tmpPath "+ fsp2.getTmpPath()+ ", task path "+ fsp2.getTaskOutputTempPath(), new Exception()] @TO@ MethodName:info:["creating new paths " + System.identityHashCode(fsp2) + " for "+ dirName+ ", childSpec "+ unionPath+ ": tmpPath "+ fsp2.getTmpPath()+ ", task path "+ fsp2.getTaskOutputTempPath()] @AT@ 38456 @LENGTH@ 224
---------DEL ClassInstanceCreation@@Exception[] @AT@ 38664 @LENGTH@ 15
------------DEL New@@new @AT@ 38664 @LENGTH@ 3
------------DEL SimpleType@@Exception @AT@ 38668 @LENGTH@ 9


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled(); @AT@ 5243 @LENGTH@ 160
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5251 @LENGTH@ 151
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5251 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5268 @LENGTH@ 134
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 5268 @LENGTH@ 64
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5268 @LENGTH@ 35
---------UPD MethodInvocation@@componentConfiguration.getConfigurer().isEnabled() @TO@ componentConfiguration.getCustomizer().isEnabled() @AT@ 5352 @LENGTH@ 50
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5352 @LENGTH@ 38


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<SmppComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<SmppComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5416 @LENGTH@ 337
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 5420 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5420 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  ComponentCustomizer<SmppComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ ThenBody:{  for (  ComponentCustomizer<SmppComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5476 @LENGTH@ 277
------UPD EnhancedForStatement@@for (ComponentCustomizer<SmppComponent> configurer : customizers) {  LOGGER.debug("Configure component {}, with configurer {}",component,configurer);  configurer.customize(component);} @TO@ for (ComponentCustomizer<SmppComponent> customizer : customizers) {  LOGGER.debug("Configure component {}, with customizer {}",component,customizer);  customizer.customize(component);} @AT@ 5490 @LENGTH@ 253
---------UPD SingleVariableDeclaration@@ComponentCustomizer<SmppComponent> configurer @TO@ ComponentCustomizer<SmppComponent> customizer @AT@ 5495 @LENGTH@ 45
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5530 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5574 @LENGTH@ 106
------------UPD MethodInvocation@@LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5574 @LENGTH@ 105
---------------UPD SimpleName@@MethodName:debug:["Configure component {}, with configurer {}", component, configurer] @TO@ MethodName:debug:["Configure component {}, with customizer {}", component, customizer] @AT@ 5581 @LENGTH@ 98
------------------UPD StringLiteral@@"Configure component {}, with configurer {}" @TO@ "Configure component {}, with customizer {}" @AT@ 5587 @LENGTH@ 44
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5668 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(component) @TO@ MethodInvocation:customizer.customize(component) @AT@ 5697 @LENGTH@ 32
------------UPD MethodInvocation@@configurer.customize(component) @TO@ customizer.customize(component) @AT@ 5697 @LENGTH@ 31
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5697 @LENGTH@ 10


UPD IfStatement@@if (!isReadOnly()) {  ensureGovernorHasField(new FieldMetadataBuilder(getIterableToAddCantBeNullConstant()));  ensureGovernorHasField(new FieldMetadataBuilder(getIterableToRemoveCantBeNullConstant()));  addMethodName=getAddMethodName(field);  removeMethodName=getRemoveMethodName(field);  addMethod=getAddValueMethod(addMethodName,field,cardinality,childType,mappedBy,removeMethodName,importResolver);  removeMethod=getRemoveMethod(removeMethodName,field,cardinality,childType,mappedBy,importResolver);  ensureGovernorHasMethod(new MethodMetadataBuilder(addMethod));  ensureGovernorHasMethod(new MethodMetadataBuilder(removeMethod));} @TO@ if (!isReadOnly()) {  addMethodName=getAddMethodName(field);  removeMethodName=getRemoveMethodName(field);  addMethod=getAddValueMethod(addMethodName,field,cardinality,childType,mappedBy,removeMethodName,importResolver);  removeMethod=getRemoveMethod(removeMethodName,field,cardinality,childType,mappedBy,importResolver);  ensureGovernorHasMethod(new MethodMetadataBuilder(addMethod));  ensureGovernorHasMethod(new MethodMetadataBuilder(removeMethod));} @AT@ 10433 @LENGTH@ 875
---UPD Block@@ThenBody:{  ensureGovernorHasField(new FieldMetadataBuilder(getIterableToAddCantBeNullConstant()));  ensureGovernorHasField(new FieldMetadataBuilder(getIterableToRemoveCantBeNullConstant()));  addMethodName=getAddMethodName(field);  removeMethodName=getRemoveMethodName(field);  addMethod=getAddValueMethod(addMethodName,field,cardinality,childType,mappedBy,removeMethodName,importResolver);  removeMethod=getRemoveMethod(removeMethodName,field,cardinality,childType,mappedBy,importResolver);  ensureGovernorHasMethod(new MethodMetadataBuilder(addMethod));  ensureGovernorHasMethod(new MethodMetadataBuilder(removeMethod));} @TO@ ThenBody:{  addMethodName=getAddMethodName(field);  removeMethodName=getRemoveMethodName(field);  addMethod=getAddValueMethod(addMethodName,field,cardinality,childType,mappedBy,removeMethodName,importResolver);  removeMethod=getRemoveMethod(removeMethodName,field,cardinality,childType,mappedBy,importResolver);  ensureGovernorHasMethod(new MethodMetadataBuilder(addMethod));  ensureGovernorHasMethod(new MethodMetadataBuilder(removeMethod));} @AT@ 10452 @LENGTH@ 856


UPD ExpressionStatement@@MethodInvocation:mvc.perform(login()).andExpect(status().isFound()).andExpect(redirectUrl("/")).andExpect(authenticated().withUsername("user")) @TO@ MethodInvocation:mvc.perform(login()).andExpect(status().isFound()).andExpect(redirectedUrl("/")).andExpect(authenticated().withUsername("user")) @AT@ 2749 @LENGTH@ 142
---UPD MethodInvocation@@mvc.perform(login()).andExpect(status().isFound()).andExpect(redirectUrl("/")).andExpect(authenticated().withUsername("user")) @TO@ mvc.perform(login()).andExpect(status().isFound()).andExpect(redirectedUrl("/")).andExpect(authenticated().withUsername("user")) @AT@ 2749 @LENGTH@ 141
------UPD MethodInvocation@@MethodName:andExpect:[redirectUrl("/")] @TO@ MethodName:andExpect:[redirectedUrl("/")] @AT@ 2749 @LENGTH@ 88
---------UPD MethodInvocation@@redirectUrl("/") @TO@ redirectedUrl("/") @AT@ 2820 @LENGTH@ 16
------------UPD SimpleName@@MethodName:redirectUrl:["/"] @TO@ MethodName:redirectedUrl:["/"] @AT@ 2820 @LENGTH@ 16


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<IrcComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<IrcComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5378 @LENGTH@ 336
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 5382 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5382 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  ComponentCustomizer<IrcComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ ThenBody:{  for (  ComponentCustomizer<IrcComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5438 @LENGTH@ 276
------UPD EnhancedForStatement@@for (ComponentCustomizer<IrcComponent> configurer : customizers) {  LOGGER.debug("Configure component {}, with configurer {}",component,configurer);  configurer.customize(component);} @TO@ for (ComponentCustomizer<IrcComponent> customizer : customizers) {  LOGGER.debug("Configure component {}, with customizer {}",component,customizer);  customizer.customize(component);} @AT@ 5452 @LENGTH@ 252
---------UPD SingleVariableDeclaration@@ComponentCustomizer<IrcComponent> configurer @TO@ ComponentCustomizer<IrcComponent> customizer @AT@ 5457 @LENGTH@ 44
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5491 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5535 @LENGTH@ 106
------------UPD MethodInvocation@@LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5535 @LENGTH@ 105
---------------UPD SimpleName@@MethodName:debug:["Configure component {}, with configurer {}", component, configurer] @TO@ MethodName:debug:["Configure component {}, with customizer {}", component, customizer] @AT@ 5542 @LENGTH@ 98
------------------UPD StringLiteral@@"Configure component {}, with configurer {}" @TO@ "Configure component {}, with customizer {}" @AT@ 5548 @LENGTH@ 44
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5629 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(component) @TO@ MethodInvocation:customizer.customize(component) @AT@ 5658 @LENGTH@ 32
------------UPD MethodInvocation@@configurer.customize(component) @TO@ customizer.customize(component) @AT@ 5658 @LENGTH@ 31
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5658 @LENGTH@ 10


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled(); @AT@ 5332 @LENGTH@ 160
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5340 @LENGTH@ 151
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5340 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5357 @LENGTH@ 134
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 5357 @LENGTH@ 64
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5357 @LENGTH@ 35
---------UPD MethodInvocation@@componentConfiguration.getConfigurer().isEnabled() @TO@ componentConfiguration.getCustomizer().isEnabled() @AT@ 5441 @LENGTH@ 50
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5441 @LENGTH@ 38


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<ChunkComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<ChunkComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5412 @LENGTH@ 338
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 5416 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5416 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  ComponentCustomizer<ChunkComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ ThenBody:{  for (  ComponentCustomizer<ChunkComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5472 @LENGTH@ 278
------UPD EnhancedForStatement@@for (ComponentCustomizer<ChunkComponent> configurer : customizers) {  LOGGER.debug("Configure component {}, with configurer {}",component,configurer);  configurer.customize(component);} @TO@ for (ComponentCustomizer<ChunkComponent> customizer : customizers) {  LOGGER.debug("Configure component {}, with customizer {}",component,customizer);  customizer.customize(component);} @AT@ 5486 @LENGTH@ 254
---------UPD SingleVariableDeclaration@@ComponentCustomizer<ChunkComponent> configurer @TO@ ComponentCustomizer<ChunkComponent> customizer @AT@ 5491 @LENGTH@ 46
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5527 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5571 @LENGTH@ 106
------------UPD MethodInvocation@@LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5571 @LENGTH@ 105
---------------UPD SimpleName@@MethodName:debug:["Configure component {}, with configurer {}", component, configurer] @TO@ MethodName:debug:["Configure component {}, with customizer {}", component, customizer] @AT@ 5578 @LENGTH@ 98
------------------UPD StringLiteral@@"Configure component {}, with configurer {}" @TO@ "Configure component {}, with customizer {}" @AT@ 5584 @LENGTH@ 44
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5665 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(component) @TO@ MethodInvocation:customizer.customize(component) @AT@ 5694 @LENGTH@ 32
------------UPD MethodInvocation@@configurer.customize(component) @TO@ customizer.customize(component) @AT@ 5694 @LENGTH@ 31
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5694 @LENGTH@ 10


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  DataFormatCustomizer<GzipDataFormat> configurer : customizers) {    LOGGER.debug("Configure dataformat {}, with configurer {}",dataformat,configurer);    configurer.customize(dataformat);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  DataFormatCustomizer<GzipDataFormat> customizer : customizers) {    LOGGER.debug("Configure dataformat {}, with customizer {}",dataformat,customizer);    customizer.customize(dataformat);  }} @AT@ 5264 @LENGTH@ 423
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 5268 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5268 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  DataFormatCustomizer<GzipDataFormat> configurer : customizers) {    LOGGER.debug("Configure dataformat {}, with configurer {}",dataformat,configurer);    configurer.customize(dataformat);  }} @TO@ ThenBody:{  for (  DataFormatCustomizer<GzipDataFormat> customizer : customizers) {    LOGGER.debug("Configure dataformat {}, with customizer {}",dataformat,customizer);    customizer.customize(dataformat);  }} @AT@ 5324 @LENGTH@ 363
------UPD EnhancedForStatement@@for (DataFormatCustomizer<GzipDataFormat> configurer : customizers) {  LOGGER.debug("Configure dataformat {}, with configurer {}",dataformat,configurer);  configurer.customize(dataformat);} @TO@ for (DataFormatCustomizer<GzipDataFormat> customizer : customizers) {  LOGGER.debug("Configure dataformat {}, with customizer {}",dataformat,customizer);  customizer.customize(dataformat);} @AT@ 5346 @LENGTH@ 323
---------UPD SingleVariableDeclaration@@DataFormatCustomizer<GzipDataFormat> configurer @TO@ DataFormatCustomizer<GzipDataFormat> customizer @AT@ 5351 @LENGTH@ 47
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5388 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure dataformat {}, with configurer {}",dataformat,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure dataformat {}, with customizer {}",dataformat,customizer) @AT@ 5440 @LENGTH@ 149
------------UPD MethodInvocation@@LOGGER.debug("Configure dataformat {}, with configurer {}",dataformat,configurer) @TO@ LOGGER.debug("Configure dataformat {}, with customizer {}",dataformat,customizer) @AT@ 5440 @LENGTH@ 148
---------------UPD SimpleName@@MethodName:debug:["Configure dataformat {}, with configurer {}", dataformat, configurer] @TO@ MethodName:debug:["Configure dataformat {}, with customizer {}", dataformat, customizer] @AT@ 5447 @LENGTH@ 141
------------------UPD StringLiteral@@"Configure dataformat {}, with configurer {}" @TO@ "Configure dataformat {}, with customizer {}" @AT@ 5486 @LENGTH@ 45
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5577 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(dataformat) @TO@ MethodInvocation:customizer.customize(dataformat) @AT@ 5614 @LENGTH@ 33
------------UPD MethodInvocation@@configurer.customize(dataformat) @TO@ customizer.customize(dataformat) @AT@ 5614 @LENGTH@ 32
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5614 @LENGTH@ 10


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && languageConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && languageConfiguration.getCustomizer().isEnabled(); @AT@ 4770 @LENGTH@ 159
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && languageConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && languageConfiguration.getCustomizer().isEnabled() @AT@ 4778 @LENGTH@ 150
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 4778 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && languageConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && languageConfiguration.getCustomizer().isEnabled() @AT@ 4795 @LENGTH@ 133
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 4795 @LENGTH@ 64
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 4795 @LENGTH@ 35
---------UPD MethodInvocation@@languageConfiguration.getConfigurer().isEnabled() @TO@ languageConfiguration.getCustomizer().isEnabled() @AT@ 4879 @LENGTH@ 49
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 4879 @LENGTH@ 37


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<GangliaComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<GangliaComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5446 @LENGTH@ 340
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 5450 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5450 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  ComponentCustomizer<GangliaComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ ThenBody:{  for (  ComponentCustomizer<GangliaComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5506 @LENGTH@ 280
------UPD EnhancedForStatement@@for (ComponentCustomizer<GangliaComponent> configurer : customizers) {  LOGGER.debug("Configure component {}, with configurer {}",component,configurer);  configurer.customize(component);} @TO@ for (ComponentCustomizer<GangliaComponent> customizer : customizers) {  LOGGER.debug("Configure component {}, with customizer {}",component,customizer);  customizer.customize(component);} @AT@ 5520 @LENGTH@ 256
---------UPD SingleVariableDeclaration@@ComponentCustomizer<GangliaComponent> configurer @TO@ ComponentCustomizer<GangliaComponent> customizer @AT@ 5525 @LENGTH@ 48
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5563 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5607 @LENGTH@ 106
------------UPD MethodInvocation@@LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5607 @LENGTH@ 105
---------------UPD SimpleName@@MethodName:debug:["Configure component {}, with configurer {}", component, configurer] @TO@ MethodName:debug:["Configure component {}, with customizer {}", component, customizer] @AT@ 5614 @LENGTH@ 98
------------------UPD StringLiteral@@"Configure component {}, with configurer {}" @TO@ "Configure component {}, with customizer {}" @AT@ 5620 @LENGTH@ 44
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5701 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(component) @TO@ MethodInvocation:customizer.customize(component) @AT@ 5730 @LENGTH@ 32
------------UPD MethodInvocation@@configurer.customize(component) @TO@ customizer.customize(component) @AT@ 5730 @LENGTH@ 31
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5730 @LENGTH@ 10


UPD FieldDeclaration@@static, final, Logger, [LOG=LoggerFactory.getLogger(BaseEmbeddedKafkaTest.class)] @TO@ private, static, final, Logger, [LOG=LoggerFactory.getLogger(BaseEmbeddedKafkaTest.class)] @AT@ 1506 @LENGTH@ 79
---INS Modifier@@private @TO@ FieldDeclaration@@static, final, Logger, [LOG=LoggerFactory.getLogger(BaseEmbeddedKafkaTest.class)] @AT@ 1910 @LENGTH@ 7


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled(); @AT@ 5328 @LENGTH@ 160
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5336 @LENGTH@ 151
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5336 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5353 @LENGTH@ 134
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 5353 @LENGTH@ 64
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5353 @LENGTH@ 35
---------UPD MethodInvocation@@componentConfiguration.getConfigurer().isEnabled() @TO@ componentConfiguration.getCustomizer().isEnabled() @AT@ 5437 @LENGTH@ 50
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5437 @LENGTH@ 38


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<StreamComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<StreamComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5429 @LENGTH@ 339
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 5433 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5433 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  ComponentCustomizer<StreamComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ ThenBody:{  for (  ComponentCustomizer<StreamComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5489 @LENGTH@ 279
------UPD EnhancedForStatement@@for (ComponentCustomizer<StreamComponent> configurer : customizers) {  LOGGER.debug("Configure component {}, with configurer {}",component,configurer);  configurer.customize(component);} @TO@ for (ComponentCustomizer<StreamComponent> customizer : customizers) {  LOGGER.debug("Configure component {}, with customizer {}",component,customizer);  customizer.customize(component);} @AT@ 5503 @LENGTH@ 255
---------UPD SingleVariableDeclaration@@ComponentCustomizer<StreamComponent> configurer @TO@ ComponentCustomizer<StreamComponent> customizer @AT@ 5508 @LENGTH@ 47
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5545 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5589 @LENGTH@ 106
------------UPD MethodInvocation@@LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5589 @LENGTH@ 105
---------------UPD SimpleName@@MethodName:debug:["Configure component {}, with configurer {}", component, configurer] @TO@ MethodName:debug:["Configure component {}, with customizer {}", component, customizer] @AT@ 5596 @LENGTH@ 98
------------------UPD StringLiteral@@"Configure component {}, with configurer {}" @TO@ "Configure component {}, with customizer {}" @AT@ 5602 @LENGTH@ 44
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5683 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(component) @TO@ MethodInvocation:customizer.customize(component) @AT@ 5712 @LENGTH@ 32
------------UPD MethodInvocation@@configurer.customize(component) @TO@ customizer.customize(component) @AT@ 5712 @LENGTH@ 31
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5712 @LENGTH@ 10


UPD ExpressionStatement@@MethodInvocation:((Defaultable)this.field.get(this.instance)).set(value) @TO@ MethodInvocation:((Defaultable<T>)this.field.get(this.instance)).set(value) @AT@ 1040 @LENGTH@ 57
---UPD MethodInvocation@@((Defaultable)this.field.get(this.instance)).set(value) @TO@ ((Defaultable<T>)this.field.get(this.instance)).set(value) @AT@ 1040 @LENGTH@ 56
------UPD ParenthesizedExpression@@((Defaultable)this.field.get(this.instance)) @TO@ ((Defaultable<T>)this.field.get(this.instance)) @AT@ 1040 @LENGTH@ 45
---------UPD CastExpression@@(Defaultable)this.field.get(this.instance) @TO@ (Defaultable<T>)this.field.get(this.instance) @AT@ 1041 @LENGTH@ 43
------------DEL SimpleType@@Defaultable @AT@ 1042 @LENGTH@ 11
------------INS ParameterizedType@@Defaultable<T> @TO@ CastExpression@@(Defaultable)this.field.get(this.instance) @AT@ 1077 @LENGTH@ 14
---------------INS SimpleType@@Defaultable @TO@ ParameterizedType@@Defaultable<T> @AT@ 1077 @LENGTH@ 11
---------------INS SimpleType@@T @TO@ ParameterizedType@@Defaultable<T> @AT@ 1089 @LENGTH@ 1


INS MethodDeclaration@@protected, Object, T, MethodName:evaluateValueFromTarget, Object targetObject, Class<T> entityType,  @TO@ TypeDeclaration@@AddOperation, PatchOperation @AT@ 1773 @LENGTH@ 630
---INS Modifier@@protected @TO@ MethodDeclaration@@protected, Object, T, MethodName:evaluateValueFromTarget, Object targetObject, Class<T> entityType,  @AT@ 1773 @LENGTH@ 9
---INS SimpleType@@Object @TO@ MethodDeclaration@@protected, Object, T, MethodName:evaluateValueFromTarget, Object targetObject, Class<T> entityType,  @AT@ 1787 @LENGTH@ 6
---INS SimpleName@@MethodName:evaluateValueFromTarget @TO@ MethodDeclaration@@protected, Object, T, MethodName:evaluateValueFromTarget, Object targetObject, Class<T> entityType,  @AT@ 1794 @LENGTH@ 23
---INS SingleVariableDeclaration@@Object targetObject @TO@ MethodDeclaration@@protected, Object, T, MethodName:evaluateValueFromTarget, Object targetObject, Class<T> entityType,  @AT@ 1818 @LENGTH@ 19
------INS SimpleType@@Object @TO@ SingleVariableDeclaration@@Object targetObject @AT@ 1818 @LENGTH@ 6
------INS SimpleName@@targetObject @TO@ SingleVariableDeclaration@@Object targetObject @AT@ 1825 @LENGTH@ 12
---INS SingleVariableDeclaration@@Class<T> entityType @TO@ MethodDeclaration@@protected, Object, T, MethodName:evaluateValueFromTarget, Object targetObject, Class<T> entityType,  @AT@ 1839 @LENGTH@ 19
------INS ParameterizedType@@Class<T> @TO@ SingleVariableDeclaration@@Class<T> entityType @AT@ 1839 @LENGTH@ 8
---------INS SimpleType@@Class @TO@ ParameterizedType@@Class<T> @AT@ 1839 @LENGTH@ 5
---------INS SimpleType@@T @TO@ ParameterizedType@@Class<T> @AT@ 1845 @LENGTH@ 1
------INS SimpleName@@entityType @TO@ SingleVariableDeclaration@@Class<T> entityType @AT@ 1848 @LENGTH@ 10
---INS IfStatement@@if (!path.endsWith("-")) {  return super.evaluateValueFromTarget(targetObject,entityType);} @TO@ MethodDeclaration@@protected, Object, T, MethodName:evaluateValueFromTarget, Object targetObject, Class<T> entityType,  @AT@ 1865 @LENGTH@ 97
------INS PrefixExpression@@!path.endsWith("-") @TO@ IfStatement@@if (!path.endsWith("-")) {  return super.evaluateValueFromTarget(targetObject,entityType);} @AT@ 1869 @LENGTH@ 19
---------INS Operator@@! @TO@ PrefixExpression@@!path.endsWith("-") @AT@ 1869 @LENGTH@ 1
---------INS MethodInvocation@@path.endsWith("-") @TO@ PrefixExpression@@!path.endsWith("-") @AT@ 1870 @LENGTH@ 18
------------INS SimpleName@@Name:path @TO@ MethodInvocation@@path.endsWith("-") @AT@ 1870 @LENGTH@ 4
------------INS SimpleName@@MethodName:endsWith:["-"] @TO@ MethodInvocation@@path.endsWith("-") @AT@ 1875 @LENGTH@ 13
---------------INS StringLiteral@@"-" @TO@ SimpleName@@MethodName:endsWith:["-"] @AT@ 1884 @LENGTH@ 3
------INS Block@@ThenBody:{  return super.evaluateValueFromTarget(targetObject,entityType);} @TO@ IfStatement@@if (!path.endsWith("-")) {  return super.evaluateValueFromTarget(targetObject,entityType);} @AT@ 1890 @LENGTH@ 72
---------INS ReturnStatement@@SuperMethodInvocation:super.evaluateValueFromTarget(targetObject,entityType) @TO@ Block@@ThenBody:{  return super.evaluateValueFromTarget(targetObject,entityType);} @AT@ 1895 @LENGTH@ 63
------------INS SuperMethodInvocation@@super.evaluateValueFromTarget(targetObject,entityType) @TO@ ReturnStatement@@SuperMethodInvocation:super.evaluateValueFromTarget(targetObject,entityType) @AT@ 1902 @LENGTH@ 55
---------------INS SimpleName@@MethodName:evaluateValueFromTarget:[targetObject, entityType] @TO@ SuperMethodInvocation@@super.evaluateValueFromTarget(targetObject,entityType) @AT@ 1908 @LENGTH@ 23
---------------INS SimpleName@@targetObject @TO@ SuperMethodInvocation@@super.evaluateValueFromTarget(targetObject,entityType) @AT@ 1932 @LENGTH@ 12
---------------INS SimpleName@@entityType @TO@ SuperMethodInvocation@@super.evaluateValueFromTarget(targetObject,entityType) @AT@ 1946 @LENGTH@ 10
---INS VariableDeclarationStatement@@String pathSource=Arrays.stream(path.split("/")).filter(it -> !it.matches("\\d")).filter(it -> !it.equals("-")).filter(it -> !it.isEmpty()).collect(Collectors.joining(".")); @TO@ MethodDeclaration@@protected, Object, T, MethodName:evaluateValueFromTarget, Object targetObject, Class<T> entityType,  @AT@ 1966 @LENGTH@ 235
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String pathSource=Arrays.stream(path.split("/")).filter(it -> !it.matches("\\d")).filter(it -> !it.equals("-")).filter(it -> !it.isEmpty()).collect(Collectors.joining(".")); @AT@ 1966 @LENGTH@ 6
------INS VariableDeclarationFragment@@pathSource=Arrays.stream(path.split("/")).filter(it -> !it.matches("\\d")).filter(it -> !it.equals("-")).filter(it -> !it.isEmpty()).collect(Collectors.joining(".")) @TO@ VariableDeclarationStatement@@String pathSource=Arrays.stream(path.split("/")).filter(it -> !it.matches("\\d")).filter(it -> !it.equals("-")).filter(it -> !it.isEmpty()).collect(Collectors.joining(".")); @AT@ 1973 @LENGTH@ 227
---------INS SimpleName@@pathSource @TO@ VariableDeclarationFragment@@pathSource=Arrays.stream(path.split("/")).filter(it -> !it.matches("\\d")).filter(it -> !it.equals("-")).filter(it -> !it.isEmpty()).collect(Collectors.joining(".")) @AT@ 1973 @LENGTH@ 10
---------INS MethodInvocation@@Arrays.stream(path.split("/")).filter(it -> !it.matches("\\d")).filter(it -> !it.equals("-")).filter(it -> !it.isEmpty()).collect(Collectors.joining(".")) @TO@ VariableDeclarationFragment@@pathSource=Arrays.stream(path.split("/")).filter(it -> !it.matches("\\d")).filter(it -> !it.equals("-")).filter(it -> !it.isEmpty()).collect(Collectors.joining(".")) @AT@ 1986 @LENGTH@ 214
------------INS MethodInvocation@@MethodName:filter:[it -> !it.isEmpty()] @TO@ MethodInvocation@@Arrays.stream(path.split("/")).filter(it -> !it.matches("\\d")).filter(it -> !it.equals("-")).filter(it -> !it.isEmpty()).collect(Collectors.joining(".")) @AT@ 1986 @LENGTH@ 173
---------------INS LambdaExpression@@it -> !it.isEmpty() @TO@ MethodInvocation@@MethodName:filter:[it -> !it.isEmpty()] @AT@ 2139 @LENGTH@ 19
------------------INS VariableDeclarationFragment@@it @TO@ LambdaExpression@@it -> !it.isEmpty() @AT@ 2139 @LENGTH@ 2
---------------------INS SimpleName@@it @TO@ VariableDeclarationFragment@@it @AT@ 2139 @LENGTH@ 2
------------------INS PrefixExpression@@!it.isEmpty() @TO@ LambdaExpression@@it -> !it.isEmpty() @AT@ 2145 @LENGTH@ 13
---------------------INS Operator@@! @TO@ PrefixExpression@@!it.isEmpty() @AT@ 2145 @LENGTH@ 1
---------------------INS MethodInvocation@@it.isEmpty() @TO@ PrefixExpression@@!it.isEmpty() @AT@ 2146 @LENGTH@ 12
------------------------INS SimpleName@@Name:it @TO@ MethodInvocation@@it.isEmpty() @AT@ 2146 @LENGTH@ 2
------------------------INS SimpleName@@MethodName:isEmpty:[] @TO@ MethodInvocation@@it.isEmpty() @AT@ 2149 @LENGTH@ 9
------------INS MethodInvocation@@MethodName:filter:[it -> !it.equals("-")] @TO@ MethodInvocation@@Arrays.stream(path.split("/")).filter(it -> !it.matches("\\d")).filter(it -> !it.equals("-")).filter(it -> !it.isEmpty()).collect(Collectors.joining(".")) @AT@ 1986 @LENGTH@ 118
---------------INS LambdaExpression@@it -> !it.equals("-") @TO@ MethodInvocation@@MethodName:filter:[it -> !it.equals("-")] @AT@ 2082 @LENGTH@ 21
------------------INS VariableDeclarationFragment@@it @TO@ LambdaExpression@@it -> !it.equals("-") @AT@ 2082 @LENGTH@ 2
---------------------INS SimpleName@@it @TO@ VariableDeclarationFragment@@it @AT@ 2082 @LENGTH@ 2
------------------INS PrefixExpression@@!it.equals("-") @TO@ LambdaExpression@@it -> !it.equals("-") @AT@ 2088 @LENGTH@ 15
---------------------INS Operator@@! @TO@ PrefixExpression@@!it.equals("-") @AT@ 2088 @LENGTH@ 1
---------------------INS MethodInvocation@@it.equals("-") @TO@ PrefixExpression@@!it.equals("-") @AT@ 2089 @LENGTH@ 14
------------------------INS SimpleName@@Name:it @TO@ MethodInvocation@@it.equals("-") @AT@ 2089 @LENGTH@ 2
------------------------INS SimpleName@@MethodName:equals:["-"] @TO@ MethodInvocation@@it.equals("-") @AT@ 2092 @LENGTH@ 11
---------------------------INS StringLiteral@@"-" @TO@ SimpleName@@MethodName:equals:["-"] @AT@ 2099 @LENGTH@ 3
------------INS MethodInvocation@@MethodName:filter:[it -> !it.matches("\\d")] @TO@ MethodInvocation@@Arrays.stream(path.split("/")).filter(it -> !it.matches("\\d")).filter(it -> !it.equals("-")).filter(it -> !it.isEmpty()).collect(Collectors.joining(".")) @AT@ 1986 @LENGTH@ 70
---------------INS LambdaExpression@@it -> !it.matches("\\d") @TO@ MethodInvocation@@MethodName:filter:[it -> !it.matches("\\d")] @AT@ 2031 @LENGTH@ 24
------------------INS VariableDeclarationFragment@@it @TO@ LambdaExpression@@it -> !it.matches("\\d") @AT@ 2031 @LENGTH@ 2
---------------------INS SimpleName@@it @TO@ VariableDeclarationFragment@@it @AT@ 2031 @LENGTH@ 2
------------------INS PrefixExpression@@!it.matches("\\d") @TO@ LambdaExpression@@it -> !it.matches("\\d") @AT@ 2037 @LENGTH@ 18
---------------------INS Operator@@! @TO@ PrefixExpression@@!it.matches("\\d") @AT@ 2037 @LENGTH@ 1
---------------------INS MethodInvocation@@it.matches("\\d") @TO@ PrefixExpression@@!it.matches("\\d") @AT@ 2038 @LENGTH@ 17
------------------------INS SimpleName@@Name:it @TO@ MethodInvocation@@it.matches("\\d") @AT@ 2038 @LENGTH@ 2
------------------------INS SimpleName@@MethodName:matches:["\\d"] @TO@ MethodInvocation@@it.matches("\\d") @AT@ 2041 @LENGTH@ 14
---------------------------INS StringLiteral@@"\\d" @TO@ SimpleName@@MethodName:matches:["\\d"] @AT@ 2049 @LENGTH@ 5
------------INS MethodInvocation@@MethodName:stream:[path.split("/")] @TO@ MethodInvocation@@Arrays.stream(path.split("/")).filter(it -> !it.matches("\\d")).filter(it -> !it.equals("-")).filter(it -> !it.isEmpty()).collect(Collectors.joining(".")) @AT@ 1986 @LENGTH@ 30
---------------INS MethodInvocation@@path.split("/") @TO@ MethodInvocation@@MethodName:stream:[path.split("/")] @AT@ 2000 @LENGTH@ 15
------------------INS SimpleName@@Name:path @TO@ MethodInvocation@@path.split("/") @AT@ 2000 @LENGTH@ 4
------------------INS SimpleName@@MethodName:split:["/"] @TO@ MethodInvocation@@path.split("/") @AT@ 2005 @LENGTH@ 10
---------------------INS StringLiteral@@"/" @TO@ SimpleName@@MethodName:split:["/"] @AT@ 2011 @LENGTH@ 3
------------INS SimpleName@@Name:Arrays @TO@ MethodInvocation@@Arrays.stream(path.split("/")).filter(it -> !it.matches("\\d")).filter(it -> !it.equals("-")).filter(it -> !it.isEmpty()).collect(Collectors.joining(".")) @AT@ 1986 @LENGTH@ 6
------------INS SimpleName@@MethodName:collect:[Collectors.joining(".")] @TO@ MethodInvocation@@Arrays.stream(path.split("/")).filter(it -> !it.matches("\\d")).filter(it -> !it.equals("-")).filter(it -> !it.isEmpty()).collect(Collectors.joining(".")) @AT@ 2168 @LENGTH@ 32
---------------INS MethodInvocation@@Collectors.joining(".") @TO@ SimpleName@@MethodName:collect:[Collectors.joining(".")] @AT@ 2176 @LENGTH@ 23
------------------INS SimpleName@@Name:Collectors @TO@ MethodInvocation@@Collectors.joining(".") @AT@ 2176 @LENGTH@ 10
------------------INS SimpleName@@MethodName:joining:["."] @TO@ MethodInvocation@@Collectors.joining(".") @AT@ 2187 @LENGTH@ 12
---------------------INS StringLiteral@@"." @TO@ SimpleName@@MethodName:joining:["."] @AT@ 2195 @LENGTH@ 3
---INS VariableDeclarationStatement@@PropertyPath propertyPath=PropertyPath.from(pathSource,entityType); @TO@ MethodDeclaration@@protected, Object, T, MethodName:evaluateValueFromTarget, Object targetObject, Class<T> entityType,  @AT@ 2205 @LENGTH@ 70
------INS SimpleType@@PropertyPath @TO@ VariableDeclarationStatement@@PropertyPath propertyPath=PropertyPath.from(pathSource,entityType); @AT@ 2205 @LENGTH@ 12
------INS VariableDeclarationFragment@@propertyPath=PropertyPath.from(pathSource,entityType) @TO@ VariableDeclarationStatement@@PropertyPath propertyPath=PropertyPath.from(pathSource,entityType); @AT@ 2218 @LENGTH@ 56
---------INS SimpleName@@propertyPath @TO@ VariableDeclarationFragment@@propertyPath=PropertyPath.from(pathSource,entityType) @AT@ 2218 @LENGTH@ 12
---------INS MethodInvocation@@PropertyPath.from(pathSource,entityType) @TO@ VariableDeclarationFragment@@propertyPath=PropertyPath.from(pathSource,entityType) @AT@ 2233 @LENGTH@ 41
------------INS SimpleName@@Name:PropertyPath @TO@ MethodInvocation@@PropertyPath.from(pathSource,entityType) @AT@ 2233 @LENGTH@ 12
------------INS SimpleName@@MethodName:from:[pathSource, entityType] @TO@ MethodInvocation@@PropertyPath.from(pathSource,entityType) @AT@ 2246 @LENGTH@ 28
---------------INS SimpleName@@pathSource @TO@ SimpleName@@MethodName:from:[pathSource, entityType] @AT@ 2251 @LENGTH@ 10
---------------INS SimpleName@@entityType @TO@ SimpleName@@MethodName:from:[pathSource, entityType] @AT@ 2263 @LENGTH@ 10
---INS ReturnStatement@@ConditionalExpression:value instanceof LateObjectEvaluator ? ((LateObjectEvaluator)value).evaluate(propertyPath.getType()) : value @TO@ MethodDeclaration@@protected, Object, T, MethodName:evaluateValueFromTarget, Object targetObject, Class<T> entityType,  @AT@ 2279 @LENGTH@ 121
------INS ConditionalExpression@@value instanceof LateObjectEvaluator ? ((LateObjectEvaluator)value).evaluate(propertyPath.getType()) : value @TO@ ReturnStatement@@ConditionalExpression:value instanceof LateObjectEvaluator ? ((LateObjectEvaluator)value).evaluate(propertyPath.getType()) : value @AT@ 2286 @LENGTH@ 113
---------INS InstanceofExpression@@value instanceof LateObjectEvaluator @TO@ ConditionalExpression@@value instanceof LateObjectEvaluator ? ((LateObjectEvaluator)value).evaluate(propertyPath.getType()) : value @AT@ 2286 @LENGTH@ 36
------------INS SimpleName@@value @TO@ InstanceofExpression@@value instanceof LateObjectEvaluator @AT@ 2286 @LENGTH@ 5
------------INS Instanceof@@instanceof @TO@ InstanceofExpression@@value instanceof LateObjectEvaluator @AT@ 2292 @LENGTH@ 10
------------INS SimpleType@@LateObjectEvaluator @TO@ InstanceofExpression@@value instanceof LateObjectEvaluator @AT@ 2303 @LENGTH@ 19
---------INS MethodInvocation@@((LateObjectEvaluator)value).evaluate(propertyPath.getType()) @TO@ ConditionalExpression@@value instanceof LateObjectEvaluator ? ((LateObjectEvaluator)value).evaluate(propertyPath.getType()) : value @AT@ 2325 @LENGTH@ 62
------------INS ParenthesizedExpression@@((LateObjectEvaluator)value) @TO@ MethodInvocation@@((LateObjectEvaluator)value).evaluate(propertyPath.getType()) @AT@ 2325 @LENGTH@ 29
---------------INS CastExpression@@(LateObjectEvaluator)value @TO@ ParenthesizedExpression@@((LateObjectEvaluator)value) @AT@ 2326 @LENGTH@ 27
------------------INS SimpleType@@LateObjectEvaluator @TO@ CastExpression@@(LateObjectEvaluator)value @AT@ 2327 @LENGTH@ 19
------------------INS SimpleName@@value @TO@ CastExpression@@(LateObjectEvaluator)value @AT@ 2348 @LENGTH@ 5
------------INS SimpleName@@MethodName:evaluate:[propertyPath.getType()] @TO@ MethodInvocation@@((LateObjectEvaluator)value).evaluate(propertyPath.getType()) @AT@ 2355 @LENGTH@ 32
---------------INS MethodInvocation@@propertyPath.getType() @TO@ SimpleName@@MethodName:evaluate:[propertyPath.getType()] @AT@ 2364 @LENGTH@ 22
------------------INS SimpleName@@Name:propertyPath @TO@ MethodInvocation@@propertyPath.getType() @AT@ 2364 @LENGTH@ 12
------------------INS SimpleName@@MethodName:getType:[] @TO@ MethodInvocation@@propertyPath.getType() @AT@ 2377 @LENGTH@ 9
---------INS SimpleName@@value @TO@ ConditionalExpression@@value instanceof LateObjectEvaluator ? ((LateObjectEvaluator)value).evaluate(propertyPath.getType()) : value @AT@ 2394 @LENGTH@ 5


DEL ThrowStatement@@MethodInvocation:this.operationNotSupported() @AT@ 6241 @LENGTH@ 35
---DEL MethodInvocation@@this.operationNotSupported() @AT@ 6247 @LENGTH@ 28
------DEL ThisExpression@@this @AT@ 6247 @LENGTH@ 4


INS IfStatement@@if (controllerMetadata == null) {  return null;} @TO@ MethodDeclaration@@protected, ItdTypeDetailsProvidingMetadataItem, MethodName:getMetadata, final String metadataIdentificationString, final JavaType aspectName, final PhysicalTypeMetadata governorPhysicalTypeMetadata, final String itdFilename,  @AT@ 6721 @LENGTH@ 58
---INS InfixExpression@@controllerMetadata == null @TO@ IfStatement@@if (controllerMetadata == null) {  return null;} @AT@ 6725 @LENGTH@ 26
------INS SimpleName@@controllerMetadata @TO@ InfixExpression@@controllerMetadata == null @AT@ 6725 @LENGTH@ 18
------INS Operator@@== @TO@ InfixExpression@@controllerMetadata == null @AT@ 6743 @LENGTH@ 2
------INS NullLiteral@@null @TO@ InfixExpression@@controllerMetadata == null @AT@ 6747 @LENGTH@ 4
---INS Block@@ThenBody:{  return null;} @TO@ IfStatement@@if (controllerMetadata == null) {  return null;} @AT@ 6753 @LENGTH@ 26
------INS ReturnStatement@@NullLiteral:null @TO@ Block@@ThenBody:{  return null;} @AT@ 6761 @LENGTH@ 12
---------INS NullLiteral@@null @TO@ ReturnStatement@@NullLiteral:null @AT@ 6768 @LENGTH@ 4


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && dataformatConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && dataformatConfiguration.getCustomizer().isEnabled(); @AT@ 5136 @LENGTH@ 177
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && dataformatConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && dataformatConfiguration.getCustomizer().isEnabled() @AT@ 5144 @LENGTH@ 168
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5144 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && dataformatConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && dataformatConfiguration.getCustomizer().isEnabled() @AT@ 5161 @LENGTH@ 151
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 5161 @LENGTH@ 72
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5161 @LENGTH@ 35
---------UPD MethodInvocation@@dataformatConfiguration.getConfigurer().isEnabled() @TO@ dataformatConfiguration.getCustomizer().isEnabled() @AT@ 5261 @LENGTH@ 51
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5261 @LENGTH@ 39


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<MockComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<MockComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5395 @LENGTH@ 337
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 5399 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5399 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  ComponentCustomizer<MockComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ ThenBody:{  for (  ComponentCustomizer<MockComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5455 @LENGTH@ 277
------UPD EnhancedForStatement@@for (ComponentCustomizer<MockComponent> configurer : customizers) {  LOGGER.debug("Configure component {}, with configurer {}",component,configurer);  configurer.customize(component);} @TO@ for (ComponentCustomizer<MockComponent> customizer : customizers) {  LOGGER.debug("Configure component {}, with customizer {}",component,customizer);  customizer.customize(component);} @AT@ 5469 @LENGTH@ 253
---------UPD SingleVariableDeclaration@@ComponentCustomizer<MockComponent> configurer @TO@ ComponentCustomizer<MockComponent> customizer @AT@ 5474 @LENGTH@ 45
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5509 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5553 @LENGTH@ 106
------------UPD MethodInvocation@@LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5553 @LENGTH@ 105
---------------UPD SimpleName@@MethodName:debug:["Configure component {}, with configurer {}", component, configurer] @TO@ MethodName:debug:["Configure component {}, with customizer {}", component, customizer] @AT@ 5560 @LENGTH@ 98
------------------UPD StringLiteral@@"Configure component {}, with configurer {}" @TO@ "Configure component {}, with customizer {}" @AT@ 5566 @LENGTH@ 44
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5647 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(component) @TO@ MethodInvocation:customizer.customize(component) @AT@ 5676 @LENGTH@ 32
------------UPD MethodInvocation@@configurer.customize(component) @TO@ customizer.customize(component) @AT@ 5676 @LENGTH@ 31
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5676 @LENGTH@ 10


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<MustacheComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<MustacheComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5463 @LENGTH@ 341
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 5467 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5467 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  ComponentCustomizer<MustacheComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ ThenBody:{  for (  ComponentCustomizer<MustacheComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5523 @LENGTH@ 281
------UPD EnhancedForStatement@@for (ComponentCustomizer<MustacheComponent> configurer : customizers) {  LOGGER.debug("Configure component {}, with configurer {}",component,configurer);  configurer.customize(component);} @TO@ for (ComponentCustomizer<MustacheComponent> customizer : customizers) {  LOGGER.debug("Configure component {}, with customizer {}",component,customizer);  customizer.customize(component);} @AT@ 5537 @LENGTH@ 257
---------UPD SingleVariableDeclaration@@ComponentCustomizer<MustacheComponent> configurer @TO@ ComponentCustomizer<MustacheComponent> customizer @AT@ 5542 @LENGTH@ 49
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5581 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5625 @LENGTH@ 106
------------UPD MethodInvocation@@LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5625 @LENGTH@ 105
---------------UPD SimpleName@@MethodName:debug:["Configure component {}, with configurer {}", component, configurer] @TO@ MethodName:debug:["Configure component {}, with customizer {}", component, customizer] @AT@ 5632 @LENGTH@ 98
------------------UPD StringLiteral@@"Configure component {}, with configurer {}" @TO@ "Configure component {}, with customizer {}" @AT@ 5638 @LENGTH@ 44
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5719 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(component) @TO@ MethodInvocation:customizer.customize(component) @AT@ 5748 @LENGTH@ 32
------------UPD MethodInvocation@@configurer.customize(component) @TO@ customizer.customize(component) @AT@ 5748 @LENGTH@ 31
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5748 @LENGTH@ 10


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && languageConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && languageConfiguration.getCustomizer().isEnabled(); @AT@ 4619 @LENGTH@ 159
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && languageConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && languageConfiguration.getCustomizer().isEnabled() @AT@ 4627 @LENGTH@ 150
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 4627 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && languageConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && languageConfiguration.getCustomizer().isEnabled() @AT@ 4644 @LENGTH@ 133
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 4644 @LENGTH@ 64
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 4644 @LENGTH@ 35
---------UPD MethodInvocation@@languageConfiguration.getConfigurer().isEnabled() @TO@ languageConfiguration.getCustomizer().isEnabled() @AT@ 4728 @LENGTH@ 49
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 4728 @LENGTH@ 37


UPD IfStatement@@if (sd.getSkewedInfo() != null) {  SkewedInfo skewed=sd.getSkewedInfo();  if (skewed.getSkewedColNames() != null) {    SortedSet<String> colnames=new TreeSet<>(skewed.getSkewedColNames());    for (    String colname : colnames)     md.update(colname.getBytes(ENCODING));  }  if (skewed.getSkewedColValues() != null) {    SortedSet<String> sortedOuterList=new TreeSet<>();    for (    List<String> innerList : skewed.getSkewedColValues()) {      SortedSet<String> sortedInnerList=new TreeSet<>(innerList);      sortedOuterList.add(StringUtils.join(sortedInnerList,"."));    }    for (    String colval : sortedOuterList)     md.update(colval.getBytes(ENCODING));  }  if (skewed.getSkewedColValueLocationMaps() != null) {    SortedMap<String,String> sortedMap=new TreeMap<>();    for (    Map.Entry<List<String>,String> smap : skewed.getSkewedColValueLocationMaps().entrySet()) {      SortedSet<String> sortedKey=new TreeSet<>(smap.getKey());      sortedMap.put(StringUtils.join(sortedKey,"."),smap.getValue());    }    for (    Map.Entry<String,String> e : sortedMap.entrySet()) {      md.update(e.getKey().getBytes(ENCODING));      md.update(e.getValue().getBytes(ENCODING));    }  }} @TO@ if (sd.getSkewedInfo() != null) {  SkewedInfo skewed=sd.getSkewedInfo();  if (skewed.getSkewedColNames() != null) {    SortedSet<String> colnames=new TreeSet<>(skewed.getSkewedColNames());    for (    String colname : colnames)     md.update(colname.getBytes(ENCODING));  }  if (skewed.getSkewedColValues() != null) {    SortedSet<String> sortedOuterList=new TreeSet<>();    for (    List<String> innerList : skewed.getSkewedColValues()) {      SortedSet<String> sortedInnerList=new TreeSet<>(innerList);      sortedOuterList.add(StringUtils.join(sortedInnerList,"."));    }    for (    String colval : sortedOuterList)     md.update(colval.getBytes(ENCODING));  }  if (skewed.getSkewedColValueLocationMaps() != null) {    SortedMap<String,String> sortedMap=new TreeMap<>();    for (    Map.Entry<List<String>,String> smap : skewed.getSkewedColValueLocationMaps().entrySet()) {      SortedSet<String> sortedKey=new TreeSet<>(smap.getKey());      sortedMap.put(StringUtils.join(sortedKey,"."),smap.getValue());    }    for (    Map.Entry<String,String> e : sortedMap.entrySet()) {      md.update(e.getKey().getBytes(ENCODING));      md.update(e.getValue().getBytes(ENCODING));    }  }  md.update(sd.isStoredAsSubDirectories() ? "true".getBytes(ENCODING) : "false".getBytes(ENCODING));} @AT@ 27437 @LENGTH@ 1299
---UPD Block@@ThenBody:{  SkewedInfo skewed=sd.getSkewedInfo();  if (skewed.getSkewedColNames() != null) {    SortedSet<String> colnames=new TreeSet<>(skewed.getSkewedColNames());    for (    String colname : colnames)     md.update(colname.getBytes(ENCODING));  }  if (skewed.getSkewedColValues() != null) {    SortedSet<String> sortedOuterList=new TreeSet<>();    for (    List<String> innerList : skewed.getSkewedColValues()) {      SortedSet<String> sortedInnerList=new TreeSet<>(innerList);      sortedOuterList.add(StringUtils.join(sortedInnerList,"."));    }    for (    String colval : sortedOuterList)     md.update(colval.getBytes(ENCODING));  }  if (skewed.getSkewedColValueLocationMaps() != null) {    SortedMap<String,String> sortedMap=new TreeMap<>();    for (    Map.Entry<List<String>,String> smap : skewed.getSkewedColValueLocationMaps().entrySet()) {      SortedSet<String> sortedKey=new TreeSet<>(smap.getKey());      sortedMap.put(StringUtils.join(sortedKey,"."),smap.getValue());    }    for (    Map.Entry<String,String> e : sortedMap.entrySet()) {      md.update(e.getKey().getBytes(ENCODING));      md.update(e.getValue().getBytes(ENCODING));    }  }} @TO@ ThenBody:{  SkewedInfo skewed=sd.getSkewedInfo();  if (skewed.getSkewedColNames() != null) {    SortedSet<String> colnames=new TreeSet<>(skewed.getSkewedColNames());    for (    String colname : colnames)     md.update(colname.getBytes(ENCODING));  }  if (skewed.getSkewedColValues() != null) {    SortedSet<String> sortedOuterList=new TreeSet<>();    for (    List<String> innerList : skewed.getSkewedColValues()) {      SortedSet<String> sortedInnerList=new TreeSet<>(innerList);      sortedOuterList.add(StringUtils.join(sortedInnerList,"."));    }    for (    String colval : sortedOuterList)     md.update(colval.getBytes(ENCODING));  }  if (skewed.getSkewedColValueLocationMaps() != null) {    SortedMap<String,String> sortedMap=new TreeMap<>();    for (    Map.Entry<List<String>,String> smap : skewed.getSkewedColValueLocationMaps().entrySet()) {      SortedSet<String> sortedKey=new TreeSet<>(smap.getKey());      sortedMap.put(StringUtils.join(sortedKey,"."),smap.getValue());    }    for (    Map.Entry<String,String> e : sortedMap.entrySet()) {      md.update(e.getKey().getBytes(ENCODING));      md.update(e.getValue().getBytes(ENCODING));    }  }  md.update(sd.isStoredAsSubDirectories() ? "true".getBytes(ENCODING) : "false".getBytes(ENCODING));} @AT@ 27469 @LENGTH@ 1267
------INS ExpressionStatement@@MethodInvocation:md.update(sd.isStoredAsSubDirectories() ? "true".getBytes(ENCODING) : "false".getBytes(ENCODING)) @TO@ Block@@ThenBody:{  SkewedInfo skewed=sd.getSkewedInfo();  if (skewed.getSkewedColNames() != null) {    SortedSet<String> colnames=new TreeSet<>(skewed.getSkewedColNames());    for (    String colname : colnames)     md.update(colname.getBytes(ENCODING));  }  if (skewed.getSkewedColValues() != null) {    SortedSet<String> sortedOuterList=new TreeSet<>();    for (    List<String> innerList : skewed.getSkewedColValues()) {      SortedSet<String> sortedInnerList=new TreeSet<>(innerList);      sortedOuterList.add(StringUtils.join(sortedInnerList,"."));    }    for (    String colval : sortedOuterList)     md.update(colval.getBytes(ENCODING));  }  if (skewed.getSkewedColValueLocationMaps() != null) {    SortedMap<String,String> sortedMap=new TreeMap<>();    for (    Map.Entry<List<String>,String> smap : skewed.getSkewedColValueLocationMaps().entrySet()) {      SortedSet<String> sortedKey=new TreeSet<>(smap.getKey());      sortedMap.put(StringUtils.join(sortedKey,"."),smap.getValue());    }    for (    Map.Entry<String,String> e : sortedMap.entrySet()) {      md.update(e.getKey().getBytes(ENCODING));      md.update(e.getValue().getBytes(ENCODING));    }  }} @AT@ 28734 @LENGTH@ 98
---------INS MethodInvocation@@md.update(sd.isStoredAsSubDirectories() ? "true".getBytes(ENCODING) : "false".getBytes(ENCODING)) @TO@ ExpressionStatement@@MethodInvocation:md.update(sd.isStoredAsSubDirectories() ? "true".getBytes(ENCODING) : "false".getBytes(ENCODING)) @AT@ 28734 @LENGTH@ 97
------------INS SimpleName@@Name:md @TO@ MethodInvocation@@md.update(sd.isStoredAsSubDirectories() ? "true".getBytes(ENCODING) : "false".getBytes(ENCODING)) @AT@ 28734 @LENGTH@ 2
------------INS SimpleName@@MethodName:update:[sd.isStoredAsSubDirectories() ? "true".getBytes(ENCODING) : "false".getBytes(ENCODING)] @TO@ MethodInvocation@@md.update(sd.isStoredAsSubDirectories() ? "true".getBytes(ENCODING) : "false".getBytes(ENCODING)) @AT@ 28737 @LENGTH@ 94
---------------INS ConditionalExpression@@sd.isStoredAsSubDirectories() ? "true".getBytes(ENCODING) : "false".getBytes(ENCODING) @TO@ SimpleName@@MethodName:update:[sd.isStoredAsSubDirectories() ? "true".getBytes(ENCODING) : "false".getBytes(ENCODING)] @AT@ 28744 @LENGTH@ 86
------------------INS MethodInvocation@@sd.isStoredAsSubDirectories() @TO@ ConditionalExpression@@sd.isStoredAsSubDirectories() ? "true".getBytes(ENCODING) : "false".getBytes(ENCODING) @AT@ 28744 @LENGTH@ 29
---------------------INS SimpleName@@Name:sd @TO@ MethodInvocation@@sd.isStoredAsSubDirectories() @AT@ 28744 @LENGTH@ 2
---------------------INS SimpleName@@MethodName:isStoredAsSubDirectories:[] @TO@ MethodInvocation@@sd.isStoredAsSubDirectories() @AT@ 28747 @LENGTH@ 26
------------------INS MethodInvocation@@"true".getBytes(ENCODING) @TO@ ConditionalExpression@@sd.isStoredAsSubDirectories() ? "true".getBytes(ENCODING) : "false".getBytes(ENCODING) @AT@ 28776 @LENGTH@ 25
---------------------INS StringLiteral@@"true" @TO@ MethodInvocation@@"true".getBytes(ENCODING) @AT@ 28776 @LENGTH@ 6
---------------------INS SimpleName@@MethodName:getBytes:[ENCODING] @TO@ MethodInvocation@@"true".getBytes(ENCODING) @AT@ 28783 @LENGTH@ 18
------------------------INS SimpleName@@ENCODING @TO@ SimpleName@@MethodName:getBytes:[ENCODING] @AT@ 28792 @LENGTH@ 8
------------------INS MethodInvocation@@"false".getBytes(ENCODING) @TO@ ConditionalExpression@@sd.isStoredAsSubDirectories() ? "true".getBytes(ENCODING) : "false".getBytes(ENCODING) @AT@ 28804 @LENGTH@ 26
---------------------INS StringLiteral@@"false" @TO@ MethodInvocation@@"false".getBytes(ENCODING) @AT@ 28804 @LENGTH@ 7
---------------------INS SimpleName@@MethodName:getBytes:[ENCODING] @TO@ MethodInvocation@@"false".getBytes(ENCODING) @AT@ 28812 @LENGTH@ 18
------------------------INS SimpleName@@ENCODING @TO@ SimpleName@@MethodName:getBytes:[ENCODING] @AT@ 28821 @LENGTH@ 8


UPD ExpressionStatement@@MethodInvocation:restConfiguration().producerComponent("dummy") @TO@ MethodInvocation:restConfiguration().host("camelhost").producerComponent("dummy") @AT@ 1818 @LENGTH@ 47
---UPD MethodInvocation@@restConfiguration().producerComponent("dummy") @TO@ restConfiguration().host("camelhost").producerComponent("dummy") @AT@ 1818 @LENGTH@ 46
------INS MethodInvocation@@MethodName:host:["camelhost"] @TO@ MethodInvocation@@restConfiguration().producerComponent("dummy") @AT@ 1818 @LENGTH@ 37
---------INS StringLiteral@@"camelhost" @TO@ MethodInvocation@@MethodName:host:["camelhost"] @AT@ 1843 @LENGTH@ 11


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<TwitterComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<TwitterComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5446 @LENGTH@ 340
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 5450 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5450 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  ComponentCustomizer<TwitterComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ ThenBody:{  for (  ComponentCustomizer<TwitterComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5506 @LENGTH@ 280
------UPD EnhancedForStatement@@for (ComponentCustomizer<TwitterComponent> configurer : customizers) {  LOGGER.debug("Configure component {}, with configurer {}",component,configurer);  configurer.customize(component);} @TO@ for (ComponentCustomizer<TwitterComponent> customizer : customizers) {  LOGGER.debug("Configure component {}, with customizer {}",component,customizer);  customizer.customize(component);} @AT@ 5520 @LENGTH@ 256
---------UPD SingleVariableDeclaration@@ComponentCustomizer<TwitterComponent> configurer @TO@ ComponentCustomizer<TwitterComponent> customizer @AT@ 5525 @LENGTH@ 48
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5563 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5607 @LENGTH@ 106
------------UPD MethodInvocation@@LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5607 @LENGTH@ 105
---------------UPD SimpleName@@MethodName:debug:["Configure component {}, with configurer {}", component, configurer] @TO@ MethodName:debug:["Configure component {}, with customizer {}", component, customizer] @AT@ 5614 @LENGTH@ 98
------------------UPD StringLiteral@@"Configure component {}, with configurer {}" @TO@ "Configure component {}, with customizer {}" @AT@ 5620 @LENGTH@ 44
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5701 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(component) @TO@ MethodInvocation:customizer.customize(component) @AT@ 5730 @LENGTH@ 32
------------UPD MethodInvocation@@configurer.customize(component) @TO@ customizer.customize(component) @AT@ 5730 @LENGTH@ 31
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5730 @LENGTH@ 10


UPD FieldDeclaration@@private, static, long, [serialVersionUID=1L] @TO@ private, static, final, long, [serialVersionUID=1L] @AT@ 2289 @LENGTH@ 42
---INS Modifier@@final @TO@ FieldDeclaration@@private, static, long, [serialVersionUID=1L] @AT@ 2304 @LENGTH@ 5


INS FieldDeclaration@@String, [CODE_AUTHENTICATION="authentication"] @TO@ TypeDeclaration@@[public]ComponentVerifier,  @AT@ 1094 @LENGTH@ 46
---INS SimpleType@@String @TO@ FieldDeclaration@@String, [CODE_AUTHENTICATION="authentication"] @AT@ 1094 @LENGTH@ 6
---INS VariableDeclarationFragment@@CODE_AUTHENTICATION="authentication" @TO@ FieldDeclaration@@String, [CODE_AUTHENTICATION="authentication"] @AT@ 1101 @LENGTH@ 38
------INS SimpleName@@CODE_AUTHENTICATION @TO@ VariableDeclarationFragment@@CODE_AUTHENTICATION="authentication" @AT@ 1101 @LENGTH@ 19
------INS StringLiteral@@"authentication" @TO@ VariableDeclarationFragment@@CODE_AUTHENTICATION="authentication" @AT@ 1123 @LENGTH@ 16


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled(); @AT@ 5226 @LENGTH@ 160
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5234 @LENGTH@ 151
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5234 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5251 @LENGTH@ 134
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 5251 @LENGTH@ 64
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5251 @LENGTH@ 35
---------UPD MethodInvocation@@componentConfiguration.getConfigurer().isEnabled() @TO@ componentConfiguration.getCustomizer().isEnabled() @AT@ 5335 @LENGTH@ 50
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5335 @LENGTH@ 38


UPD VariableDeclarationStatement@@Object out=template.requestBody(getAhcEndpointUri() + "?realm.scheme=DIGEST&realm.principal=someUser" + "&realm.password=somePass&realm.usePreemptiveAuth=true",null,String.class); @TO@ Object out=template.requestBody(getAhcEndpointUri() + "?clientConfig.realm.scheme=DIGEST&clientConfig.realm.principal=someUser" + "&clientConfig.realm.password=somePass&clientConfig.realm.usePreemptiveAuth=true",null,String.class); @AT@ 1049 @LENGTH@ 215
---UPD VariableDeclarationFragment@@out=template.requestBody(getAhcEndpointUri() + "?realm.scheme=DIGEST&realm.principal=someUser" + "&realm.password=somePass&realm.usePreemptiveAuth=true",null,String.class) @TO@ out=template.requestBody(getAhcEndpointUri() + "?clientConfig.realm.scheme=DIGEST&clientConfig.realm.principal=someUser" + "&clientConfig.realm.password=somePass&clientConfig.realm.usePreemptiveAuth=true",null,String.class) @AT@ 1056 @LENGTH@ 207
------UPD MethodInvocation@@template.requestBody(getAhcEndpointUri() + "?realm.scheme=DIGEST&realm.principal=someUser" + "&realm.password=somePass&realm.usePreemptiveAuth=true",null,String.class) @TO@ template.requestBody(getAhcEndpointUri() + "?clientConfig.realm.scheme=DIGEST&clientConfig.realm.principal=someUser" + "&clientConfig.realm.password=somePass&clientConfig.realm.usePreemptiveAuth=true",null,String.class) @AT@ 1062 @LENGTH@ 201
---------UPD SimpleName@@MethodName:requestBody:[getAhcEndpointUri() + "?realm.scheme=DIGEST&realm.principal=someUser" + "&realm.password=somePass&realm.usePreemptiveAuth=true", null, String.class] @TO@ MethodName:requestBody:[getAhcEndpointUri() + "?clientConfig.realm.scheme=DIGEST&clientConfig.realm.principal=someUser" + "&clientConfig.realm.password=somePass&clientConfig.realm.usePreemptiveAuth=true", null, String.class] @AT@ 1071 @LENGTH@ 192
------------UPD InfixExpression@@getAhcEndpointUri() + "?realm.scheme=DIGEST&realm.principal=someUser" + "&realm.password=somePass&realm.usePreemptiveAuth=true" @TO@ getAhcEndpointUri() + "?clientConfig.realm.scheme=DIGEST&clientConfig.realm.principal=someUser" + "&clientConfig.realm.password=somePass&clientConfig.realm.usePreemptiveAuth=true" @AT@ 1083 @LENGTH@ 159
---------------UPD StringLiteral@@"?realm.scheme=DIGEST&realm.principal=someUser" @TO@ "?clientConfig.realm.scheme=DIGEST&clientConfig.realm.principal=someUser" @AT@ 1121 @LENGTH@ 47
---------------UPD StringLiteral@@"&realm.password=somePass&realm.usePreemptiveAuth=true" @TO@ "&clientConfig.realm.password=somePass&clientConfig.realm.usePreemptiveAuth=true" @AT@ 1187 @LENGTH@ 55


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<GlanceComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<GlanceComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5469 @LENGTH@ 339
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 5473 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5473 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  ComponentCustomizer<GlanceComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ ThenBody:{  for (  ComponentCustomizer<GlanceComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5529 @LENGTH@ 279
------UPD EnhancedForStatement@@for (ComponentCustomizer<GlanceComponent> configurer : customizers) {  LOGGER.debug("Configure component {}, with configurer {}",component,configurer);  configurer.customize(component);} @TO@ for (ComponentCustomizer<GlanceComponent> customizer : customizers) {  LOGGER.debug("Configure component {}, with customizer {}",component,customizer);  customizer.customize(component);} @AT@ 5543 @LENGTH@ 255
---------UPD SingleVariableDeclaration@@ComponentCustomizer<GlanceComponent> configurer @TO@ ComponentCustomizer<GlanceComponent> customizer @AT@ 5548 @LENGTH@ 47
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5585 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5629 @LENGTH@ 106
------------UPD MethodInvocation@@LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5629 @LENGTH@ 105
---------------UPD SimpleName@@MethodName:debug:["Configure component {}, with configurer {}", component, configurer] @TO@ MethodName:debug:["Configure component {}, with customizer {}", component, customizer] @AT@ 5636 @LENGTH@ 98
------------------UPD StringLiteral@@"Configure component {}, with configurer {}" @TO@ "Configure component {}, with customizer {}" @AT@ 5642 @LENGTH@ 44
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5723 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(component) @TO@ MethodInvocation:customizer.customize(component) @AT@ 5752 @LENGTH@ 32
------------UPD MethodInvocation@@configurer.customize(component) @TO@ customizer.customize(component) @AT@ 5752 @LENGTH@ 31
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5752 @LENGTH@ 10


INS FieldDeclaration@@public, static, final, JavaType, [PAGE_REQUEST=new JavaType("org.springframework.data.domain.PageRequest")] @TO@ TypeDeclaration@@[public, final]SpringJavaType,  @AT@ 9283 @LENGTH@ 111
---INS Modifier@@public @TO@ FieldDeclaration@@public, static, final, JavaType, [PAGE_REQUEST=new JavaType("org.springframework.data.domain.PageRequest")] @AT@ 9283 @LENGTH@ 6
---INS Modifier@@static @TO@ FieldDeclaration@@public, static, final, JavaType, [PAGE_REQUEST=new JavaType("org.springframework.data.domain.PageRequest")] @AT@ 9290 @LENGTH@ 6
---INS Modifier@@final @TO@ FieldDeclaration@@public, static, final, JavaType, [PAGE_REQUEST=new JavaType("org.springframework.data.domain.PageRequest")] @AT@ 9297 @LENGTH@ 5
---INS SimpleType@@JavaType @TO@ FieldDeclaration@@public, static, final, JavaType, [PAGE_REQUEST=new JavaType("org.springframework.data.domain.PageRequest")] @AT@ 9303 @LENGTH@ 8
---INS VariableDeclarationFragment@@PAGE_REQUEST=new JavaType("org.springframework.data.domain.PageRequest") @TO@ FieldDeclaration@@public, static, final, JavaType, [PAGE_REQUEST=new JavaType("org.springframework.data.domain.PageRequest")] @AT@ 9312 @LENGTH@ 81
------INS SimpleName@@PAGE_REQUEST @TO@ VariableDeclarationFragment@@PAGE_REQUEST=new JavaType("org.springframework.data.domain.PageRequest") @AT@ 9312 @LENGTH@ 12
------INS ClassInstanceCreation@@JavaType["org.springframework.data.domain.PageRequest"] @TO@ VariableDeclarationFragment@@PAGE_REQUEST=new JavaType("org.springframework.data.domain.PageRequest") @AT@ 9327 @LENGTH@ 66
---------INS New@@new @TO@ ClassInstanceCreation@@JavaType["org.springframework.data.domain.PageRequest"] @AT@ 9327 @LENGTH@ 3
---------INS SimpleType@@JavaType @TO@ ClassInstanceCreation@@JavaType["org.springframework.data.domain.PageRequest"] @AT@ 9331 @LENGTH@ 8
---------INS StringLiteral@@"org.springframework.data.domain.PageRequest" @TO@ ClassInstanceCreation@@JavaType["org.springframework.data.domain.PageRequest"] @AT@ 9347 @LENGTH@ 45


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled(); @AT@ 5209 @LENGTH@ 160
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5217 @LENGTH@ 151
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5217 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5234 @LENGTH@ 134
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 5234 @LENGTH@ 64
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5234 @LENGTH@ 35
---------UPD MethodInvocation@@componentConfiguration.getConfigurer().isEnabled() @TO@ componentConfiguration.getCustomizer().isEnabled() @AT@ 5318 @LENGTH@ 50
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5318 @LENGTH@ 38


UPD ReturnStatement@@MethodInvocation:GeoResult.class.equals(from.getComponentType().getType()) @TO@ MethodInvocation:GeoResult.class.equals(from.getComponentType().get().getType()) @AT@ 6121 @LENGTH@ 65
---UPD MethodInvocation@@GeoResult.class.equals(from.getComponentType().getType()) @TO@ GeoResult.class.equals(from.getComponentType().get().getType()) @AT@ 6128 @LENGTH@ 57
------UPD SimpleName@@MethodName:equals:[from.getComponentType().getType()] @TO@ MethodName:equals:[from.getComponentType().get().getType()] @AT@ 6144 @LENGTH@ 41
---------UPD MethodInvocation@@from.getComponentType().getType() @TO@ from.getComponentType().get().getType() @AT@ 6151 @LENGTH@ 33
------------INS MethodInvocation@@MethodName:get:[] @TO@ MethodInvocation@@from.getComponentType().getType() @AT@ 6250 @LENGTH@ 29


UPD VariableDeclarationStatement@@String partNamespaceFromHeader=(String)exchange.getIn().getHeader(JaxbConstants.JAXB_PART_NAMESPACE); @TO@ String partNamespaceFromHeader=exchange.getIn().getHeader(JaxbConstants.JAXB_PART_NAMESPACE,String.class); @AT@ 7545 @LENGTH@ 103
---UPD VariableDeclarationFragment@@partNamespaceFromHeader=(String)exchange.getIn().getHeader(JaxbConstants.JAXB_PART_NAMESPACE) @TO@ partNamespaceFromHeader=exchange.getIn().getHeader(JaxbConstants.JAXB_PART_NAMESPACE,String.class) @AT@ 7552 @LENGTH@ 95
------DEL CastExpression@@(String)exchange.getIn().getHeader(JaxbConstants.JAXB_PART_NAMESPACE) @AT@ 7578 @LENGTH@ 69
---------DEL SimpleType@@String @AT@ 7579 @LENGTH@ 6
---------DEL MethodInvocation@@exchange.getIn().getHeader(JaxbConstants.JAXB_PART_NAMESPACE) @AT@ 7586 @LENGTH@ 61
------INS MethodInvocation@@exchange.getIn().getHeader(JaxbConstants.JAXB_PART_NAMESPACE,String.class) @TO@ VariableDeclarationFragment@@partNamespaceFromHeader=(String)exchange.getIn().getHeader(JaxbConstants.JAXB_PART_NAMESPACE) @AT@ 7583 @LENGTH@ 75
---------MOV MethodInvocation@@MethodName:getIn:[] @TO@ MethodInvocation@@exchange.getIn().getHeader(JaxbConstants.JAXB_PART_NAMESPACE,String.class) @AT@ 7586 @LENGTH@ 16
---------MOV SimpleName@@Name:exchange @TO@ MethodInvocation@@exchange.getIn().getHeader(JaxbConstants.JAXB_PART_NAMESPACE,String.class) @AT@ 7586 @LENGTH@ 8
---------MOV SimpleName@@MethodName:getHeader:[JaxbConstants.JAXB_PART_NAMESPACE] @TO@ MethodInvocation@@exchange.getIn().getHeader(JaxbConstants.JAXB_PART_NAMESPACE,String.class) @AT@ 7603 @LENGTH@ 44
------------INS TypeLiteral@@String.class @TO@ SimpleName@@MethodName:getHeader:[JaxbConstants.JAXB_PART_NAMESPACE] @AT@ 7645 @LENGTH@ 12


UPD VariableDeclarationStatement@@String urlString="service:jmx:remote://localhost:4777"; @TO@ String urlString="service:jmx:remote://localhost:4447"; @AT@ 2310 @LENGTH@ 57
---UPD VariableDeclarationFragment@@urlString="service:jmx:remote://localhost:4777" @TO@ urlString="service:jmx:remote://localhost:4447" @AT@ 2317 @LENGTH@ 49
------UPD StringLiteral@@"service:jmx:remote://localhost:4777" @TO@ "service:jmx:remote://localhost:4447" @AT@ 2329 @LENGTH@ 37


UPD EnhancedForStatement@@for (Task<?> task : pctx.getRootTasks()) {  if (!(task instanceof MapRedTask) || !((MapRedTask)task).getWork().isFinalMapRed()) {    continue;  }  MapredWork mrWork=((MapRedTask)task).getWork();  MapWork mapWork=mrWork.getMapWork();  ReduceWork reduceWork=mrWork.getReduceWork();  if (reduceWork == null || reduceWork.getNumReduceTasks() != 1 || mapWork.getAliasToWork().size() != 1 || mapWork.getSamplingType() > 0 || reduceWork.getReducer() == null) {    continue;  }  if (OperatorUtils.findSingleOperator(reduceWork.getReducer(),GroupByOperator.class) != null) {    continue;  }  Operator<?> operator=mapWork.getAliasToWork().values().iterator().next();  if (!(operator instanceof TableScanOperator)) {    continue;  }  ReduceSinkOperator child=OperatorUtils.findSingleOperator(operator,ReduceSinkOperator.class);  if (child == null || child.getConf().getNumReducers() != 1 || !child.getConf().getPartitionCols().isEmpty()) {    continue;  }  child.getConf().setNumReducers(-1);  reduceWork.setNumReduceTasks(-1);  mapWork.setSamplingType(MapWork.SAMPLING_ON_START);} @TO@ for (Task<?> task : pctx.getRootTasks()) {  if (!(task instanceof MapRedTask) || !((MapRedTask)task).getWork().isFinalMapRed()) {    continue;  }  MapredWork mrWork=((MapRedTask)task).getWork();  MapWork mapWork=mrWork.getMapWork();  ReduceWork reduceWork=mrWork.getReduceWork();  if (reduceWork == null || reduceWork.getNumReduceTasks() != 1 || mapWork.getAliasToWork().size() != 1 || mapWork.getSamplingType() > 0 || reduceWork.getReducer() == null) {    continue;  }  if (OperatorUtils.findSingleOperator(reduceWork.getReducer(),GroupByOperator.class) != null) {    continue;  }  Operator<?> operator=mapWork.getAliasToWork().values().iterator().next();  if (!(operator instanceof TableScanOperator)) {    continue;  }  TableScanOperator tsop=(TableScanOperator)operator;  Table tbl=tsop.getConf().getTableMetadata();  if (tbl == null) {    continue;  }  if (MetaStoreUtils.isInsertOnlyTable(tbl.getParameters())) {    continue;  }  ReduceSinkOperator child=OperatorUtils.findSingleOperator(operator,ReduceSinkOperator.class);  if (child == null || child.getConf().getNumReducers() != 1 || !child.getConf().getPartitionCols().isEmpty()) {    continue;  }  child.getConf().setNumReducers(-1);  reduceWork.setNumReduceTasks(-1);  mapWork.setSamplingType(MapWork.SAMPLING_ON_START);} @AT@ 1739 @LENGTH@ 1408
---INS VariableDeclarationStatement@@TableScanOperator tsop=(TableScanOperator)operator; @TO@ EnhancedForStatement@@for (Task<?> task : pctx.getRootTasks()) {  if (!(task instanceof MapRedTask) || !((MapRedTask)task).getWork().isFinalMapRed()) {    continue;  }  MapredWork mrWork=((MapRedTask)task).getWork();  MapWork mapWork=mrWork.getMapWork();  ReduceWork reduceWork=mrWork.getReduceWork();  if (reduceWork == null || reduceWork.getNumReduceTasks() != 1 || mapWork.getAliasToWork().size() != 1 || mapWork.getSamplingType() > 0 || reduceWork.getReducer() == null) {    continue;  }  if (OperatorUtils.findSingleOperator(reduceWork.getReducer(),GroupByOperator.class) != null) {    continue;  }  Operator<?> operator=mapWork.getAliasToWork().values().iterator().next();  if (!(operator instanceof TableScanOperator)) {    continue;  }  ReduceSinkOperator child=OperatorUtils.findSingleOperator(operator,ReduceSinkOperator.class);  if (child == null || child.getConf().getNumReducers() != 1 || !child.getConf().getPartitionCols().isEmpty()) {    continue;  }  child.getConf().setNumReducers(-1);  reduceWork.setNumReduceTasks(-1);  mapWork.setSamplingType(MapWork.SAMPLING_ON_START);} @AT@ 2847 @LENGTH@ 53
------INS SimpleType@@TableScanOperator @TO@ VariableDeclarationStatement@@TableScanOperator tsop=(TableScanOperator)operator; @AT@ 2847 @LENGTH@ 17
------INS VariableDeclarationFragment@@tsop=(TableScanOperator)operator @TO@ VariableDeclarationStatement@@TableScanOperator tsop=(TableScanOperator)operator; @AT@ 2865 @LENGTH@ 34
---------INS SimpleName@@tsop @TO@ VariableDeclarationFragment@@tsop=(TableScanOperator)operator @AT@ 2865 @LENGTH@ 4
---------INS CastExpression@@(TableScanOperator)operator @TO@ VariableDeclarationFragment@@tsop=(TableScanOperator)operator @AT@ 2872 @LENGTH@ 27
------------INS SimpleType@@TableScanOperator @TO@ CastExpression@@(TableScanOperator)operator @AT@ 2873 @LENGTH@ 17
------------INS SimpleName@@operator @TO@ CastExpression@@(TableScanOperator)operator @AT@ 2891 @LENGTH@ 8
---INS VariableDeclarationStatement@@Table tbl=tsop.getConf().getTableMetadata(); @TO@ EnhancedForStatement@@for (Task<?> task : pctx.getRootTasks()) {  if (!(task instanceof MapRedTask) || !((MapRedTask)task).getWork().isFinalMapRed()) {    continue;  }  MapredWork mrWork=((MapRedTask)task).getWork();  MapWork mapWork=mrWork.getMapWork();  ReduceWork reduceWork=mrWork.getReduceWork();  if (reduceWork == null || reduceWork.getNumReduceTasks() != 1 || mapWork.getAliasToWork().size() != 1 || mapWork.getSamplingType() > 0 || reduceWork.getReducer() == null) {    continue;  }  if (OperatorUtils.findSingleOperator(reduceWork.getReducer(),GroupByOperator.class) != null) {    continue;  }  Operator<?> operator=mapWork.getAliasToWork().values().iterator().next();  if (!(operator instanceof TableScanOperator)) {    continue;  }  ReduceSinkOperator child=OperatorUtils.findSingleOperator(operator,ReduceSinkOperator.class);  if (child == null || child.getConf().getNumReducers() != 1 || !child.getConf().getPartitionCols().isEmpty()) {    continue;  }  child.getConf().setNumReducers(-1);  reduceWork.setNumReduceTasks(-1);  mapWork.setSamplingType(MapWork.SAMPLING_ON_START);} @AT@ 2907 @LENGTH@ 46
------INS SimpleType@@Table @TO@ VariableDeclarationStatement@@Table tbl=tsop.getConf().getTableMetadata(); @AT@ 2907 @LENGTH@ 5
------INS VariableDeclarationFragment@@tbl=tsop.getConf().getTableMetadata() @TO@ VariableDeclarationStatement@@Table tbl=tsop.getConf().getTableMetadata(); @AT@ 2913 @LENGTH@ 39
---------INS SimpleName@@tbl @TO@ VariableDeclarationFragment@@tbl=tsop.getConf().getTableMetadata() @AT@ 2913 @LENGTH@ 3
---------INS MethodInvocation@@tsop.getConf().getTableMetadata() @TO@ VariableDeclarationFragment@@tbl=tsop.getConf().getTableMetadata() @AT@ 2919 @LENGTH@ 33
------------INS MethodInvocation@@MethodName:getConf:[] @TO@ MethodInvocation@@tsop.getConf().getTableMetadata() @AT@ 2919 @LENGTH@ 14
------------INS SimpleName@@Name:tsop @TO@ MethodInvocation@@tsop.getConf().getTableMetadata() @AT@ 2919 @LENGTH@ 4
------------INS SimpleName@@MethodName:getTableMetadata:[] @TO@ MethodInvocation@@tsop.getConf().getTableMetadata() @AT@ 2934 @LENGTH@ 18
---INS IfStatement@@if (tbl == null) {  continue;} @TO@ EnhancedForStatement@@for (Task<?> task : pctx.getRootTasks()) {  if (!(task instanceof MapRedTask) || !((MapRedTask)task).getWork().isFinalMapRed()) {    continue;  }  MapredWork mrWork=((MapRedTask)task).getWork();  MapWork mapWork=mrWork.getMapWork();  ReduceWork reduceWork=mrWork.getReduceWork();  if (reduceWork == null || reduceWork.getNumReduceTasks() != 1 || mapWork.getAliasToWork().size() != 1 || mapWork.getSamplingType() > 0 || reduceWork.getReducer() == null) {    continue;  }  if (OperatorUtils.findSingleOperator(reduceWork.getReducer(),GroupByOperator.class) != null) {    continue;  }  Operator<?> operator=mapWork.getAliasToWork().values().iterator().next();  if (!(operator instanceof TableScanOperator)) {    continue;  }  ReduceSinkOperator child=OperatorUtils.findSingleOperator(operator,ReduceSinkOperator.class);  if (child == null || child.getConf().getNumReducers() != 1 || !child.getConf().getPartitionCols().isEmpty()) {    continue;  }  child.getConf().setNumReducers(-1);  reduceWork.setNumReduceTasks(-1);  mapWork.setSamplingType(MapWork.SAMPLING_ON_START);} @AT@ 2960 @LENGTH@ 44
------INS InfixExpression@@tbl == null @TO@ IfStatement@@if (tbl == null) {  continue;} @AT@ 2964 @LENGTH@ 11
---------INS SimpleName@@tbl @TO@ InfixExpression@@tbl == null @AT@ 2964 @LENGTH@ 3
---------INS Operator@@== @TO@ InfixExpression@@tbl == null @AT@ 2967 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@tbl == null @AT@ 2971 @LENGTH@ 4
------INS Block@@ThenBody:{  continue;} @TO@ IfStatement@@if (tbl == null) {  continue;} @AT@ 2977 @LENGTH@ 27
---------INS ContinueStatement@@ @TO@ Block@@ThenBody:{  continue;} @AT@ 2987 @LENGTH@ 9
---INS IfStatement@@if (MetaStoreUtils.isInsertOnlyTable(tbl.getParameters())) {  continue;} @TO@ EnhancedForStatement@@for (Task<?> task : pctx.getRootTasks()) {  if (!(task instanceof MapRedTask) || !((MapRedTask)task).getWork().isFinalMapRed()) {    continue;  }  MapredWork mrWork=((MapRedTask)task).getWork();  MapWork mapWork=mrWork.getMapWork();  ReduceWork reduceWork=mrWork.getReduceWork();  if (reduceWork == null || reduceWork.getNumReduceTasks() != 1 || mapWork.getAliasToWork().size() != 1 || mapWork.getSamplingType() > 0 || reduceWork.getReducer() == null) {    continue;  }  if (OperatorUtils.findSingleOperator(reduceWork.getReducer(),GroupByOperator.class) != null) {    continue;  }  Operator<?> operator=mapWork.getAliasToWork().values().iterator().next();  if (!(operator instanceof TableScanOperator)) {    continue;  }  ReduceSinkOperator child=OperatorUtils.findSingleOperator(operator,ReduceSinkOperator.class);  if (child == null || child.getConf().getNumReducers() != 1 || !child.getConf().getPartitionCols().isEmpty()) {    continue;  }  child.getConf().setNumReducers(-1);  reduceWork.setNumReduceTasks(-1);  mapWork.setSamplingType(MapWork.SAMPLING_ON_START);} @AT@ 3011 @LENGTH@ 484
------INS MethodInvocation@@MetaStoreUtils.isInsertOnlyTable(tbl.getParameters()) @TO@ IfStatement@@if (MetaStoreUtils.isInsertOnlyTable(tbl.getParameters())) {  continue;} @AT@ 3015 @LENGTH@ 53
---------INS SimpleName@@Name:MetaStoreUtils @TO@ MethodInvocation@@MetaStoreUtils.isInsertOnlyTable(tbl.getParameters()) @AT@ 3015 @LENGTH@ 14
---------INS SimpleName@@MethodName:isInsertOnlyTable:[tbl.getParameters()] @TO@ MethodInvocation@@MetaStoreUtils.isInsertOnlyTable(tbl.getParameters()) @AT@ 3030 @LENGTH@ 38
------------INS MethodInvocation@@tbl.getParameters() @TO@ SimpleName@@MethodName:isInsertOnlyTable:[tbl.getParameters()] @AT@ 3048 @LENGTH@ 19
---------------INS SimpleName@@Name:tbl @TO@ MethodInvocation@@tbl.getParameters() @AT@ 3048 @LENGTH@ 3
---------------INS SimpleName@@MethodName:getParameters:[] @TO@ MethodInvocation@@tbl.getParameters() @AT@ 3052 @LENGTH@ 15
------INS Block@@ThenBody:{  continue;} @TO@ IfStatement@@if (MetaStoreUtils.isInsertOnlyTable(tbl.getParameters())) {  continue;} @AT@ 3070 @LENGTH@ 425
---------INS ContinueStatement@@ @TO@ Block@@ThenBody:{  continue;} @AT@ 3478 @LENGTH@ 9


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && dataformatConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && dataformatConfiguration.getCustomizer().isEnabled(); @AT@ 5155 @LENGTH@ 177
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && dataformatConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && dataformatConfiguration.getCustomizer().isEnabled() @AT@ 5163 @LENGTH@ 168
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5163 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && dataformatConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && dataformatConfiguration.getCustomizer().isEnabled() @AT@ 5180 @LENGTH@ 151
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 5180 @LENGTH@ 72
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5180 @LENGTH@ 35
---------UPD MethodInvocation@@dataformatConfiguration.getConfigurer().isEnabled() @TO@ dataformatConfiguration.getCustomizer().isEnabled() @AT@ 5280 @LENGTH@ 51
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5280 @LENGTH@ 39


UPD ExpressionStatement@@MethodInvocation:mvc.perform(login().user("notfound").password("invalid")).andExpect(status().isFound()).andExpect(redirectUrl("/authenticate?error")).andExpect(unauthenticated()) @TO@ MethodInvocation:mvc.perform(login().user("notfound").password("invalid")).andExpect(status().isFound()).andExpect(redirectedUrl("/authenticate?error")).andExpect(unauthenticated()) @AT@ 2960 @LENGTH@ 178
---UPD MethodInvocation@@mvc.perform(login().user("notfound").password("invalid")).andExpect(status().isFound()).andExpect(redirectUrl("/authenticate?error")).andExpect(unauthenticated()) @TO@ mvc.perform(login().user("notfound").password("invalid")).andExpect(status().isFound()).andExpect(redirectedUrl("/authenticate?error")).andExpect(unauthenticated()) @AT@ 2960 @LENGTH@ 177
------UPD MethodInvocation@@MethodName:andExpect:[redirectUrl("/authenticate?error")] @TO@ MethodName:andExpect:[redirectedUrl("/authenticate?error")] @AT@ 2960 @LENGTH@ 143
---------UPD MethodInvocation@@redirectUrl("/authenticate?error") @TO@ redirectedUrl("/authenticate?error") @AT@ 3068 @LENGTH@ 34
------------UPD SimpleName@@MethodName:redirectUrl:["/authenticate?error"] @TO@ MethodName:redirectedUrl:["/authenticate?error"] @AT@ 3068 @LENGTH@ 34


UPD ExpressionStatement@@Assignment:val^=(long)Math.pow(2,(length - 1) * 8) - 1 @TO@ Assignment:val^=(long)Math.pow(2.0,(length - 1) * 8) - 1 @AT@ 7395 @LENGTH@ 48
---UPD Assignment@@val^=(long)Math.pow(2,(length - 1) * 8) - 1 @TO@ val^=(long)Math.pow(2.0,(length - 1) * 8) - 1 @AT@ 7395 @LENGTH@ 47
------UPD InfixExpression@@(long)Math.pow(2,(length - 1) * 8) - 1 @TO@ (long)Math.pow(2.0,(length - 1) * 8) - 1 @AT@ 7402 @LENGTH@ 40
---------UPD CastExpression@@(long)Math.pow(2,(length - 1) * 8) @TO@ (long)Math.pow(2.0,(length - 1) * 8) @AT@ 7402 @LENGTH@ 36
------------UPD MethodInvocation@@Math.pow(2,(length - 1) * 8) @TO@ Math.pow(2.0,(length - 1) * 8) @AT@ 7409 @LENGTH@ 29
---------------UPD SimpleName@@MethodName:pow:[2, (length - 1) * 8] @TO@ MethodName:pow:[2.0, (length - 1) * 8] @AT@ 7414 @LENGTH@ 24
------------------UPD NumberLiteral@@2 @TO@ 2.0 @AT@ 7418 @LENGTH@ 1


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled(); @AT@ 5229 @LENGTH@ 160
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5237 @LENGTH@ 151
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5237 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5254 @LENGTH@ 134
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 5254 @LENGTH@ 64
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5254 @LENGTH@ 35
---------UPD MethodInvocation@@componentConfiguration.getConfigurer().isEnabled() @TO@ componentConfiguration.getCustomizer().isEnabled() @AT@ 5338 @LENGTH@ 50
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5338 @LENGTH@ 38


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled(); @AT@ 5283 @LENGTH@ 160
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5291 @LENGTH@ 151
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5291 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5308 @LENGTH@ 134
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 5308 @LENGTH@ 64
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5308 @LENGTH@ 35
---------UPD MethodInvocation@@componentConfiguration.getConfigurer().isEnabled() @TO@ componentConfiguration.getCustomizer().isEnabled() @AT@ 5392 @LENGTH@ 50
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5392 @LENGTH@ 38


UPD Block@@ThenBody:{  String propertyDotPath=(StringUtils.hasText(dotPath) ? dotPath + "." : "") + persistentProperty.getFieldName();  Float weight=indexed != null ? indexed.get().weight() : (includeOptions.getParentFieldSpec() != null ? includeOptions.getParentFieldSpec().getWeight() : 1.0F);  if (persistentProperty.isEntity()) {    TextIndexIncludeOptions optionsForNestedType=includeOptions;    if (!IncludeStrategy.FORCE.equals(includeOptions.getStrategy()) && indexed != null) {      optionsForNestedType=new TextIndexIncludeOptions(IncludeStrategy.FORCE,new TextIndexedFieldSpec(propertyDotPath,weight));    }    try {      appendTextIndexInformation(propertyDotPath,indexDefinitionBuilder,mappingContext.getRequiredPersistentEntity(persistentProperty.getActualType()),optionsForNestedType,guard);    } catch (    CyclicPropertyReferenceException e) {      LOGGER.info(e.getMessage(),e);    }catch (    InvalidDataAccessApiUsageException e) {      LOGGER.info(String.format("Potentially invalid index structure discovered. Breaking operation for %s.",entity.getName()),e);    }  } else   if (includeOptions.isForce() || indexed != null) {    indexDefinitionBuilder.onField(propertyDotPath,weight);  }} @TO@ ThenBody:{  String propertyDotPath=(StringUtils.hasText(dotPath) ? dotPath + "." : "") + persistentProperty.getFieldName();  Float weight=indexed.isPresent() ? indexed.get().weight() : (includeOptions.getParentFieldSpec() != null ? includeOptions.getParentFieldSpec().getWeight() : 1.0F);  if (persistentProperty.isEntity()) {    TextIndexIncludeOptions optionsForNestedType=includeOptions;    if (!IncludeStrategy.FORCE.equals(includeOptions.getStrategy()) && indexed.isPresent()) {      optionsForNestedType=new TextIndexIncludeOptions(IncludeStrategy.FORCE,new TextIndexedFieldSpec(propertyDotPath,weight));    }    try {      appendTextIndexInformation(propertyDotPath,indexDefinitionBuilder,mappingContext.getRequiredPersistentEntity(persistentProperty.getActualType()),optionsForNestedType,guard);    } catch (    CyclicPropertyReferenceException e) {      LOGGER.info(e.getMessage(),e);    }catch (    InvalidDataAccessApiUsageException e) {      LOGGER.info(String.format("Potentially invalid index structure discovered. Breaking operation for %s.",entity.getName()),e);    }  } else   if (includeOptions.isForce() || indexed.isPresent()) {    indexDefinitionBuilder.onField(propertyDotPath,weight);  }} @AT@ 10516 @LENGTH@ 1302
---UPD VariableDeclarationStatement@@Float weight=indexed != null ? indexed.get().weight() : (includeOptions.getParentFieldSpec() != null ? includeOptions.getParentFieldSpec().getWeight() : 1.0F); @TO@ Float weight=indexed.isPresent() ? indexed.get().weight() : (includeOptions.getParentFieldSpec() != null ? includeOptions.getParentFieldSpec().getWeight() : 1.0F); @AT@ 10651 @LENGTH@ 168
------UPD VariableDeclarationFragment@@weight=indexed != null ? indexed.get().weight() : (includeOptions.getParentFieldSpec() != null ? includeOptions.getParentFieldSpec().getWeight() : 1.0F) @TO@ weight=indexed.isPresent() ? indexed.get().weight() : (includeOptions.getParentFieldSpec() != null ? includeOptions.getParentFieldSpec().getWeight() : 1.0F) @AT@ 10657 @LENGTH@ 161
---------UPD ConditionalExpression@@indexed != null ? indexed.get().weight() : (includeOptions.getParentFieldSpec() != null ? includeOptions.getParentFieldSpec().getWeight() : 1.0F) @TO@ indexed.isPresent() ? indexed.get().weight() : (includeOptions.getParentFieldSpec() != null ? includeOptions.getParentFieldSpec().getWeight() : 1.0F) @AT@ 10666 @LENGTH@ 152
------------INS MethodInvocation@@indexed.isPresent() @TO@ ConditionalExpression@@indexed != null ? indexed.get().weight() : (includeOptions.getParentFieldSpec() != null ? includeOptions.getParentFieldSpec().getWeight() : 1.0F) @AT@ 10666 @LENGTH@ 19
---------------INS SimpleName@@Name:indexed @TO@ MethodInvocation@@indexed.isPresent() @AT@ 10666 @LENGTH@ 7
---------------INS SimpleName@@MethodName:isPresent:[] @TO@ MethodInvocation@@indexed.isPresent() @AT@ 10674 @LENGTH@ 11
------------DEL InfixExpression@@indexed != null @AT@ 10666 @LENGTH@ 15
---------------DEL SimpleName@@indexed @AT@ 10666 @LENGTH@ 7
---------------DEL Operator@@!= @AT@ 10673 @LENGTH@ 2
---------------DEL NullLiteral@@null @AT@ 10677 @LENGTH@ 4
---UPD IfStatement@@if (persistentProperty.isEntity()) {  TextIndexIncludeOptions optionsForNestedType=includeOptions;  if (!IncludeStrategy.FORCE.equals(includeOptions.getStrategy()) && indexed != null) {    optionsForNestedType=new TextIndexIncludeOptions(IncludeStrategy.FORCE,new TextIndexedFieldSpec(propertyDotPath,weight));  }  try {    appendTextIndexInformation(propertyDotPath,indexDefinitionBuilder,mappingContext.getRequiredPersistentEntity(persistentProperty.getActualType()),optionsForNestedType,guard);  } catch (  CyclicPropertyReferenceException e) {    LOGGER.info(e.getMessage(),e);  }catch (  InvalidDataAccessApiUsageException e) {    LOGGER.info(String.format("Potentially invalid index structure discovered. Breaking operation for %s.",entity.getName()),e);  }} else if (includeOptions.isForce() || indexed != null) {  indexDefinitionBuilder.onField(propertyDotPath,weight);} @TO@ if (persistentProperty.isEntity()) {  TextIndexIncludeOptions optionsForNestedType=includeOptions;  if (!IncludeStrategy.FORCE.equals(includeOptions.getStrategy()) && indexed.isPresent()) {    optionsForNestedType=new TextIndexIncludeOptions(IncludeStrategy.FORCE,new TextIndexedFieldSpec(propertyDotPath,weight));  }  try {    appendTextIndexInformation(propertyDotPath,indexDefinitionBuilder,mappingContext.getRequiredPersistentEntity(persistentProperty.getActualType()),optionsForNestedType,guard);  } catch (  CyclicPropertyReferenceException e) {    LOGGER.info(e.getMessage(),e);  }catch (  InvalidDataAccessApiUsageException e) {    LOGGER.info(String.format("Potentially invalid index structure discovered. Breaking operation for %s.",entity.getName()),e);  }} else if (includeOptions.isForce() || indexed.isPresent()) {  indexDefinitionBuilder.onField(propertyDotPath,weight);} @AT@ 10826 @LENGTH@ 986
------UPD Block@@ThenBody:{  TextIndexIncludeOptions optionsForNestedType=includeOptions;  if (!IncludeStrategy.FORCE.equals(includeOptions.getStrategy()) && indexed != null) {    optionsForNestedType=new TextIndexIncludeOptions(IncludeStrategy.FORCE,new TextIndexedFieldSpec(propertyDotPath,weight));  }  try {    appendTextIndexInformation(propertyDotPath,indexDefinitionBuilder,mappingContext.getRequiredPersistentEntity(persistentProperty.getActualType()),optionsForNestedType,guard);  } catch (  CyclicPropertyReferenceException e) {    LOGGER.info(e.getMessage(),e);  }catch (  InvalidDataAccessApiUsageException e) {    LOGGER.info(String.format("Potentially invalid index structure discovered. Breaking operation for %s.",entity.getName()),e);  }} @TO@ ThenBody:{  TextIndexIncludeOptions optionsForNestedType=includeOptions;  if (!IncludeStrategy.FORCE.equals(includeOptions.getStrategy()) && indexed.isPresent()) {    optionsForNestedType=new TextIndexIncludeOptions(IncludeStrategy.FORCE,new TextIndexedFieldSpec(propertyDotPath,weight));  }  try {    appendTextIndexInformation(propertyDotPath,indexDefinitionBuilder,mappingContext.getRequiredPersistentEntity(persistentProperty.getActualType()),optionsForNestedType,guard);  } catch (  CyclicPropertyReferenceException e) {    LOGGER.info(e.getMessage(),e);  }catch (  InvalidDataAccessApiUsageException e) {    LOGGER.info(String.format("Potentially invalid index structure discovered. Breaking operation for %s.",entity.getName()),e);  }} @AT@ 10861 @LENGTH@ 825
---------UPD IfStatement@@if (!IncludeStrategy.FORCE.equals(includeOptions.getStrategy()) && indexed != null) {  optionsForNestedType=new TextIndexIncludeOptions(IncludeStrategy.FORCE,new TextIndexedFieldSpec(propertyDotPath,weight));} @TO@ if (!IncludeStrategy.FORCE.equals(includeOptions.getStrategy()) && indexed.isPresent()) {  optionsForNestedType=new TextIndexIncludeOptions(IncludeStrategy.FORCE,new TextIndexedFieldSpec(propertyDotPath,weight));} @AT@ 10939 @LENGTH@ 235
------------UPD InfixExpression@@!IncludeStrategy.FORCE.equals(includeOptions.getStrategy()) && indexed != null @TO@ !IncludeStrategy.FORCE.equals(includeOptions.getStrategy()) && indexed.isPresent() @AT@ 10943 @LENGTH@ 78
---------------DEL InfixExpression@@indexed != null @AT@ 11006 @LENGTH@ 15
------------------DEL SimpleName@@indexed @AT@ 11006 @LENGTH@ 7
------------------DEL Operator@@!= @AT@ 11013 @LENGTH@ 2
------------------DEL NullLiteral@@null @AT@ 11017 @LENGTH@ 4
---------------INS MethodInvocation@@indexed.isPresent() @TO@ InfixExpression@@!IncludeStrategy.FORCE.equals(includeOptions.getStrategy()) && indexed != null @AT@ 11010 @LENGTH@ 19
------------------INS SimpleName@@Name:indexed @TO@ MethodInvocation@@indexed.isPresent() @AT@ 11010 @LENGTH@ 7
------------------INS SimpleName@@MethodName:isPresent:[] @TO@ MethodInvocation@@indexed.isPresent() @AT@ 11018 @LENGTH@ 11
------UPD Block@@ElseBody:if (includeOptions.isForce() || indexed != null) {  indexDefinitionBuilder.onField(propertyDotPath,weight);} @TO@ ElseBody:if (includeOptions.isForce() || indexed.isPresent()) {  indexDefinitionBuilder.onField(propertyDotPath,weight);} @AT@ 11692 @LENGTH@ 120
---------UPD IfStatement@@if (includeOptions.isForce() || indexed != null) {  indexDefinitionBuilder.onField(propertyDotPath,weight);} @TO@ if (includeOptions.isForce() || indexed.isPresent()) {  indexDefinitionBuilder.onField(propertyDotPath,weight);} @AT@ 11692 @LENGTH@ 120
------------UPD InfixExpression@@includeOptions.isForce() || indexed != null @TO@ includeOptions.isForce() || indexed.isPresent() @AT@ 11696 @LENGTH@ 43
---------------DEL InfixExpression@@indexed != null @AT@ 11724 @LENGTH@ 15
------------------DEL SimpleName@@indexed @AT@ 11724 @LENGTH@ 7
------------------DEL Operator@@!= @AT@ 11731 @LENGTH@ 2
------------------DEL NullLiteral@@null @AT@ 11735 @LENGTH@ 4
---------------INS MethodInvocation@@indexed.isPresent() @TO@ InfixExpression@@includeOptions.isForce() || indexed != null @AT@ 11732 @LENGTH@ 19
------------------INS SimpleName@@Name:indexed @TO@ MethodInvocation@@indexed.isPresent() @AT@ 11732 @LENGTH@ 7
------------------INS SimpleName@@MethodName:isPresent:[] @TO@ MethodInvocation@@indexed.isPresent() @AT@ 11740 @LENGTH@ 11


INS FieldDeclaration@@private, static, final, byte[], [EMPTY_ARRAY=new byte[0]] @TO@ TypeDeclaration@@[public, final]HiveDecimalWritable, FastHiveDecimal[WritableComparable<HiveDecimalWritable>] @AT@ 25278 @LENGTH@ 54
---INS Modifier@@private @TO@ FieldDeclaration@@private, static, final, byte[], [EMPTY_ARRAY=new byte[0]] @AT@ 25278 @LENGTH@ 7
---INS Modifier@@static @TO@ FieldDeclaration@@private, static, final, byte[], [EMPTY_ARRAY=new byte[0]] @AT@ 25286 @LENGTH@ 6
---INS Modifier@@final @TO@ FieldDeclaration@@private, static, final, byte[], [EMPTY_ARRAY=new byte[0]] @AT@ 25293 @LENGTH@ 5
---INS ArrayType@@byte[] @TO@ FieldDeclaration@@private, static, final, byte[], [EMPTY_ARRAY=new byte[0]] @AT@ 25299 @LENGTH@ 6
------INS PrimitiveType@@byte @TO@ ArrayType@@byte[] @AT@ 25299 @LENGTH@ 4
---INS VariableDeclarationFragment@@EMPTY_ARRAY=new byte[0] @TO@ FieldDeclaration@@private, static, final, byte[], [EMPTY_ARRAY=new byte[0]] @AT@ 25306 @LENGTH@ 25
------INS SimpleName@@EMPTY_ARRAY @TO@ VariableDeclarationFragment@@EMPTY_ARRAY=new byte[0] @AT@ 25306 @LENGTH@ 11
------MOV ArrayCreation@@new byte[0] @TO@ VariableDeclarationFragment@@EMPTY_ARRAY=new byte[0] @AT@ 25447 @LENGTH@ 11


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled(); @AT@ 5317 @LENGTH@ 160
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5325 @LENGTH@ 151
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5325 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5342 @LENGTH@ 134
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 5342 @LENGTH@ 64
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5342 @LENGTH@ 35
---------UPD MethodInvocation@@componentConfiguration.getConfigurer().isEnabled() @TO@ componentConfiguration.getCustomizer().isEnabled() @AT@ 5426 @LENGTH@ 50
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5426 @LENGTH@ 38


UPD IfStatement@@if (exchange.getPattern().isOutCapable()) {  exchange.getOut().setBody(doc);} else {  exchange.getIn().setBody(doc);} @TO@ if (exchange.getIn().getHeader("setin") != null && exchange.getIn().getHeader("setin").equals("true")) {  exchange.getIn().setBody(doc);} else {  exchange.getOut().setBody(doc);} @AT@ 1764 @LENGTH@ 157
---INS InfixExpression@@exchange.getIn().getHeader("setin") != null && exchange.getIn().getHeader("setin").equals("true") @TO@ IfStatement@@if (exchange.getPattern().isOutCapable()) {  exchange.getOut().setBody(doc);} else {  exchange.getIn().setBody(doc);} @AT@ 1768 @LENGTH@ 97
------INS InfixExpression@@exchange.getIn().getHeader("setin") != null @TO@ InfixExpression@@exchange.getIn().getHeader("setin") != null && exchange.getIn().getHeader("setin").equals("true") @AT@ 1768 @LENGTH@ 43
---------INS MethodInvocation@@exchange.getIn().getHeader("setin") @TO@ InfixExpression@@exchange.getIn().getHeader("setin") != null @AT@ 1768 @LENGTH@ 35
------------MOV MethodInvocation@@MethodName:getPattern:[] @TO@ MethodInvocation@@exchange.getIn().getHeader("setin") @AT@ 1768 @LENGTH@ 21
------------MOV SimpleName@@Name:exchange @TO@ MethodInvocation@@exchange.getIn().getHeader("setin") @AT@ 1768 @LENGTH@ 8
------------MOV SimpleName@@MethodName:isOutCapable:[] @TO@ MethodInvocation@@exchange.getIn().getHeader("setin") @AT@ 1790 @LENGTH@ 14
---------------INS StringLiteral@@"setin" @TO@ SimpleName@@MethodName:isOutCapable:[] @AT@ 1795 @LENGTH@ 7
---------INS Operator@@!= @TO@ InfixExpression@@exchange.getIn().getHeader("setin") != null @AT@ 1803 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@exchange.getIn().getHeader("setin") != null @AT@ 1807 @LENGTH@ 4
------INS Operator@@&& @TO@ InfixExpression@@exchange.getIn().getHeader("setin") != null && exchange.getIn().getHeader("setin").equals("true") @AT@ 1811 @LENGTH@ 2
------INS MethodInvocation@@exchange.getIn().getHeader("setin").equals("true") @TO@ InfixExpression@@exchange.getIn().getHeader("setin") != null && exchange.getIn().getHeader("setin").equals("true") @AT@ 1815 @LENGTH@ 50
---------INS MethodInvocation@@MethodName:getHeader:["setin"] @TO@ MethodInvocation@@exchange.getIn().getHeader("setin").equals("true") @AT@ 1815 @LENGTH@ 35
------------INS StringLiteral@@"setin" @TO@ MethodInvocation@@MethodName:getHeader:["setin"] @AT@ 1842 @LENGTH@ 7
---------INS MethodInvocation@@MethodName:getIn:[] @TO@ MethodInvocation@@exchange.getIn().getHeader("setin").equals("true") @AT@ 1815 @LENGTH@ 16
---------INS SimpleName@@Name:exchange @TO@ MethodInvocation@@exchange.getIn().getHeader("setin").equals("true") @AT@ 1815 @LENGTH@ 8
---------INS SimpleName@@MethodName:equals:["true"] @TO@ MethodInvocation@@exchange.getIn().getHeader("setin").equals("true") @AT@ 1851 @LENGTH@ 14
------------INS StringLiteral@@"true" @TO@ SimpleName@@MethodName:equals:["true"] @AT@ 1858 @LENGTH@ 6
---DEL MethodInvocation@@exchange.getPattern().isOutCapable() @AT@ 1768 @LENGTH@ 36
---UPD Block@@ThenBody:{  exchange.getOut().setBody(doc);} @TO@ ElseBody:{  exchange.getOut().setBody(doc);} @AT@ 1806 @LENGTH@ 55
---MOV Block@@ThenBody:{  exchange.getOut().setBody(doc);} @TO@ IfStatement@@if (exchange.getPattern().isOutCapable()) {  exchange.getOut().setBody(doc);} else {  exchange.getIn().setBody(doc);} @AT@ 1806 @LENGTH@ 55
---UPD Block@@ElseBody:{  exchange.getIn().setBody(doc);} @TO@ ThenBody:{  exchange.getIn().setBody(doc);} @AT@ 1867 @LENGTH@ 54


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<OptaPlannerComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<OptaPlannerComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5526 @LENGTH@ 344
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 5530 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5530 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  ComponentCustomizer<OptaPlannerComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ ThenBody:{  for (  ComponentCustomizer<OptaPlannerComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5586 @LENGTH@ 284
------UPD EnhancedForStatement@@for (ComponentCustomizer<OptaPlannerComponent> configurer : customizers) {  LOGGER.debug("Configure component {}, with configurer {}",component,configurer);  configurer.customize(component);} @TO@ for (ComponentCustomizer<OptaPlannerComponent> customizer : customizers) {  LOGGER.debug("Configure component {}, with customizer {}",component,customizer);  customizer.customize(component);} @AT@ 5600 @LENGTH@ 260
---------UPD SingleVariableDeclaration@@ComponentCustomizer<OptaPlannerComponent> configurer @TO@ ComponentCustomizer<OptaPlannerComponent> customizer @AT@ 5605 @LENGTH@ 52
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5647 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5691 @LENGTH@ 106
------------UPD MethodInvocation@@LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5691 @LENGTH@ 105
---------------UPD SimpleName@@MethodName:debug:["Configure component {}, with configurer {}", component, configurer] @TO@ MethodName:debug:["Configure component {}, with customizer {}", component, customizer] @AT@ 5698 @LENGTH@ 98
------------------UPD StringLiteral@@"Configure component {}, with configurer {}" @TO@ "Configure component {}, with customizer {}" @AT@ 5704 @LENGTH@ 44
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5785 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(component) @TO@ MethodInvocation:customizer.customize(component) @AT@ 5814 @LENGTH@ 32
------------UPD MethodInvocation@@configurer.customize(component) @TO@ customizer.customize(component) @AT@ 5814 @LENGTH@ 31
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5814 @LENGTH@ 10


UPD Block@@ThenBody:{  DeploymentResourceSupport.cleanup(deployment);  final String name=originalDeployment.require(NAME).asString();  final String runtimeName=originalDeployment.require(RUNTIME_NAME).asString();  final DeploymentHandlerUtil.ContentItem[] contents=getContents(originalDeployment.require(CONTENT));  doDeploy(context,runtimeName,name,deployment,registration,mutableRegistration,vaultReader,contents);  if (context.hasFailureDescription()) {    ServerLogger.ROOT_LOGGER.replaceRolledBack(replacedDeploymentUnitName,deploymentUnitName,getFormattedFailureDescription(context));  } else {    ServerLogger.ROOT_LOGGER.replaceRolledBackWithNoMessage(replacedDeploymentUnitName,deploymentUnitName);  }} @TO@ ThenBody:{  DeploymentResourceSupport.cleanup(deployment);  final String runtimeName=originalDeployment.require(RUNTIME_NAME).asString();  final DeploymentHandlerUtil.ContentItem[] contents=getContents(originalDeployment.require(CONTENT));  doDeploy(context,runtimeName,managementName,deployment,registration,mutableRegistration,vaultReader,contents);  if (context.hasFailureDescription()) {    ServerLogger.ROOT_LOGGER.replaceRolledBack(replacedDeploymentUnitName,deploymentUnitName,getFormattedFailureDescription(context));  } else {    ServerLogger.ROOT_LOGGER.replaceRolledBackWithNoMessage(replacedDeploymentUnitName,deploymentUnitName);  }} @AT@ 18694 @LENGTH@ 1052
---DEL VariableDeclarationStatement@@final String name=originalDeployment.require(NAME).asString(); @AT@ 18808 @LENGTH@ 64
------DEL Modifier@@final @AT@ 18808 @LENGTH@ 5
------DEL SimpleType@@String @AT@ 18814 @LENGTH@ 6
------DEL VariableDeclarationFragment@@name=originalDeployment.require(NAME).asString() @AT@ 18821 @LENGTH@ 50
---------DEL SimpleName@@name @AT@ 18821 @LENGTH@ 4
---------DEL MethodInvocation@@originalDeployment.require(NAME).asString() @AT@ 18828 @LENGTH@ 43
------------DEL MethodInvocation@@MethodName:require:[NAME] @AT@ 18828 @LENGTH@ 32
---------------DEL SimpleName@@NAME @AT@ 18855 @LENGTH@ 4
------------DEL SimpleName@@Name:originalDeployment @AT@ 18828 @LENGTH@ 18
------------DEL SimpleName@@MethodName:asString:[] @AT@ 18861 @LENGTH@ 10
---UPD ExpressionStatement@@MethodInvocation:doDeploy(context,runtimeName,name,deployment,registration,mutableRegistration,vaultReader,contents) @TO@ MethodInvocation:doDeploy(context,runtimeName,managementName,deployment,registration,mutableRegistration,vaultReader,contents) @AT@ 19152 @LENGTH@ 107
------UPD MethodInvocation@@doDeploy(context,runtimeName,name,deployment,registration,mutableRegistration,vaultReader,contents) @TO@ doDeploy(context,runtimeName,managementName,deployment,registration,mutableRegistration,vaultReader,contents) @AT@ 19152 @LENGTH@ 106
---------UPD SimpleName@@MethodName:doDeploy:[context, runtimeName, name, deployment, registration, mutableRegistration, vaultReader, contents] @TO@ MethodName:doDeploy:[context, runtimeName, managementName, deployment, registration, mutableRegistration, vaultReader, contents] @AT@ 19152 @LENGTH@ 106
------------UPD SimpleName@@name @TO@ managementName @AT@ 19183 @LENGTH@ 4


UPD ExpressionStatement@@MethodInvocation:addOperation.get(URI).set("cr-store://test/store001.jceks?create.storage=true") @TO@ MethodInvocation:addOperation.get(URI).set("cr-store://test/store001.jceks?create=true;keyStoreType=JCEKS;modifiable=true") @AT@ 2795 @LENGTH@ 80
---UPD MethodInvocation@@addOperation.get(URI).set("cr-store://test/store001.jceks?create.storage=true") @TO@ addOperation.get(URI).set("cr-store://test/store001.jceks?create=true;keyStoreType=JCEKS;modifiable=true") @AT@ 2795 @LENGTH@ 79
------UPD SimpleName@@MethodName:set:["cr-store://test/store001.jceks?create.storage=true"] @TO@ MethodName:set:["cr-store://test/store001.jceks?create=true;keyStoreType=JCEKS;modifiable=true"] @AT@ 2817 @LENGTH@ 57
---------UPD StringLiteral@@"cr-store://test/store001.jceks?create.storage=true" @TO@ "cr-store://test/store001.jceks?create=true;keyStoreType=JCEKS;modifiable=true" @AT@ 2821 @LENGTH@ 52


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<NettyComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<NettyComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5416 @LENGTH@ 338
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 5420 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5420 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  ComponentCustomizer<NettyComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ ThenBody:{  for (  ComponentCustomizer<NettyComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5476 @LENGTH@ 278
------UPD EnhancedForStatement@@for (ComponentCustomizer<NettyComponent> configurer : customizers) {  LOGGER.debug("Configure component {}, with configurer {}",component,configurer);  configurer.customize(component);} @TO@ for (ComponentCustomizer<NettyComponent> customizer : customizers) {  LOGGER.debug("Configure component {}, with customizer {}",component,customizer);  customizer.customize(component);} @AT@ 5490 @LENGTH@ 254
---------UPD SingleVariableDeclaration@@ComponentCustomizer<NettyComponent> configurer @TO@ ComponentCustomizer<NettyComponent> customizer @AT@ 5495 @LENGTH@ 46
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5531 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5575 @LENGTH@ 106
------------UPD MethodInvocation@@LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5575 @LENGTH@ 105
---------------UPD SimpleName@@MethodName:debug:["Configure component {}, with configurer {}", component, configurer] @TO@ MethodName:debug:["Configure component {}, with customizer {}", component, customizer] @AT@ 5582 @LENGTH@ 98
------------------UPD StringLiteral@@"Configure component {}, with configurer {}" @TO@ "Configure component {}, with customizer {}" @AT@ 5588 @LENGTH@ 44
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5669 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(component) @TO@ MethodInvocation:customizer.customize(component) @AT@ 5698 @LENGTH@ 32
------------UPD MethodInvocation@@configurer.customize(component) @TO@ customizer.customize(component) @AT@ 5698 @LENGTH@ 31
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5698 @LENGTH@ 10


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<SpringLdapComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<SpringLdapComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5499 @LENGTH@ 343
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 5503 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5503 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  ComponentCustomizer<SpringLdapComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ ThenBody:{  for (  ComponentCustomizer<SpringLdapComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5559 @LENGTH@ 283
------UPD EnhancedForStatement@@for (ComponentCustomizer<SpringLdapComponent> configurer : customizers) {  LOGGER.debug("Configure component {}, with configurer {}",component,configurer);  configurer.customize(component);} @TO@ for (ComponentCustomizer<SpringLdapComponent> customizer : customizers) {  LOGGER.debug("Configure component {}, with customizer {}",component,customizer);  customizer.customize(component);} @AT@ 5573 @LENGTH@ 259
---------UPD SingleVariableDeclaration@@ComponentCustomizer<SpringLdapComponent> configurer @TO@ ComponentCustomizer<SpringLdapComponent> customizer @AT@ 5578 @LENGTH@ 51
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5619 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5663 @LENGTH@ 106
------------UPD MethodInvocation@@LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5663 @LENGTH@ 105
---------------UPD SimpleName@@MethodName:debug:["Configure component {}, with configurer {}", component, configurer] @TO@ MethodName:debug:["Configure component {}, with customizer {}", component, customizer] @AT@ 5670 @LENGTH@ 98
------------------UPD StringLiteral@@"Configure component {}, with configurer {}" @TO@ "Configure component {}, with customizer {}" @AT@ 5676 @LENGTH@ 44
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5757 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(component) @TO@ MethodInvocation:customizer.customize(component) @AT@ 5786 @LENGTH@ 32
------------UPD MethodInvocation@@configurer.customize(component) @TO@ customizer.customize(component) @AT@ 5786 @LENGTH@ 31
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5786 @LENGTH@ 10


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled(); @AT@ 5260 @LENGTH@ 160
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5268 @LENGTH@ 151
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5268 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5285 @LENGTH@ 134
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 5285 @LENGTH@ 64
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5285 @LENGTH@ 35
---------UPD MethodInvocation@@componentConfiguration.getConfigurer().isEnabled() @TO@ componentConfiguration.getCustomizer().isEnabled() @AT@ 5369 @LENGTH@ 50
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5369 @LENGTH@ 38


DEL ExpressionStatement@@MethodInvocation:http.httpBasic() @AT@ 1374 @LENGTH@ 17
---DEL MethodInvocation@@http.httpBasic() @AT@ 1374 @LENGTH@ 16
------DEL SimpleName@@Name:http @AT@ 1374 @LENGTH@ 4
------DEL SimpleName@@MethodName:httpBasic:[] @AT@ 1379 @LENGTH@ 11


INS MethodDeclaration@@public, Set<T>, T extends Annotation, MethodName:getAnnotations, Class<T> type,  @TO@ TypeDeclaration@@[@Vetoed, final]SyntheticAnnotated, [Annotated] @AT@ 2358 @LENGTH@ 214
---INS Modifier@@public @TO@ MethodDeclaration@@public, Set<T>, T extends Annotation, MethodName:getAnnotations, Class<T> type,  @AT@ 2358 @LENGTH@ 6
---INS ParameterizedType@@Set<T> @TO@ MethodDeclaration@@public, Set<T>, T extends Annotation, MethodName:getAnnotations, Class<T> type,  @AT@ 2388 @LENGTH@ 6
------INS SimpleType@@Set @TO@ ParameterizedType@@Set<T> @AT@ 2388 @LENGTH@ 3
------INS SimpleType@@T @TO@ ParameterizedType@@Set<T> @AT@ 2392 @LENGTH@ 1
---INS SimpleName@@MethodName:getAnnotations @TO@ MethodDeclaration@@public, Set<T>, T extends Annotation, MethodName:getAnnotations, Class<T> type,  @AT@ 2395 @LENGTH@ 14
---INS SingleVariableDeclaration@@Class<T> type @TO@ MethodDeclaration@@public, Set<T>, T extends Annotation, MethodName:getAnnotations, Class<T> type,  @AT@ 2410 @LENGTH@ 13
------INS ParameterizedType@@Class<T> @TO@ SingleVariableDeclaration@@Class<T> type @AT@ 2410 @LENGTH@ 8
---------INS SimpleType@@Class @TO@ ParameterizedType@@Class<T> @AT@ 2410 @LENGTH@ 5
---------INS SimpleType@@T @TO@ ParameterizedType@@Class<T> @AT@ 2416 @LENGTH@ 1
------INS SimpleName@@type @TO@ SingleVariableDeclaration@@Class<T> type @AT@ 2419 @LENGTH@ 4
---INS ReturnStatement@@MethodInvocation:annotations.stream().filter(isAnnotationType(type)).map(type::cast).collect(toSet()) @TO@ MethodDeclaration@@public, Set<T>, T extends Annotation, MethodName:getAnnotations, Class<T> type,  @AT@ 2435 @LENGTH@ 131
------INS MethodInvocation@@annotations.stream().filter(isAnnotationType(type)).map(type::cast).collect(toSet()) @TO@ ReturnStatement@@MethodInvocation:annotations.stream().filter(isAnnotationType(type)).map(type::cast).collect(toSet()) @AT@ 2442 @LENGTH@ 123
---------INS MethodInvocation@@MethodName:map:[type::cast] @TO@ MethodInvocation@@annotations.stream().filter(isAnnotationType(type)).map(type::cast).collect(toSet()) @AT@ 2442 @LENGTH@ 93
---------INS MethodInvocation@@MethodName:filter:[isAnnotationType(type)] @TO@ MethodInvocation@@annotations.stream().filter(isAnnotationType(type)).map(type::cast).collect(toSet()) @AT@ 2442 @LENGTH@ 64
------------INS MethodInvocation@@isAnnotationType(type) @TO@ MethodInvocation@@MethodName:filter:[isAnnotationType(type)] @AT@ 2483 @LENGTH@ 22
---------------INS SimpleName@@MethodName:isAnnotationType:[type] @TO@ MethodInvocation@@isAnnotationType(type) @AT@ 2483 @LENGTH@ 22
------------------INS SimpleName@@type @TO@ SimpleName@@MethodName:isAnnotationType:[type] @AT@ 2500 @LENGTH@ 4
---------INS MethodInvocation@@MethodName:stream:[] @TO@ MethodInvocation@@annotations.stream().filter(isAnnotationType(type)).map(type::cast).collect(toSet()) @AT@ 2442 @LENGTH@ 20
---------INS SimpleName@@Name:annotations @TO@ MethodInvocation@@annotations.stream().filter(isAnnotationType(type)).map(type::cast).collect(toSet()) @AT@ 2442 @LENGTH@ 11
---------INS SimpleName@@MethodName:collect:[toSet()] @TO@ MethodInvocation@@annotations.stream().filter(isAnnotationType(type)).map(type::cast).collect(toSet()) @AT@ 2549 @LENGTH@ 16
------------INS MethodInvocation@@MethodName:toSet:[] @TO@ SimpleName@@MethodName:collect:[toSet()] @AT@ 2557 @LENGTH@ 7


UPD SuperConstructorInvocation@@super(((MongoTemplate)operations).getMongoDbFactory().getLegacyDb().getCollection(collectionName),new Function<DBObject,T>(){
  @Override public T apply(  DBObject input){
    return operations.getConverter().read(type,(BasicDBObject)input);
  }
}
,new SpringDataMongodbSerializer(operations.getConverter()));
 @TO@ super(((MongoTemplate)operations).getMongoDbFactory().getLegacyDb().getCollection(collectionName),new Function<DBObject,T>(){
  @Override public T apply(  DBObject input){
    ;
    return operations.getConverter().read(type,new Document((BasicDBObject)input));
  }
}
,new SpringDataMongodbSerializer(operations.getConverter()));
 @AT@ 1943 @LENGTH@ 336


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<GrpcComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<GrpcComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5395 @LENGTH@ 337
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 5399 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5399 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  ComponentCustomizer<GrpcComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ ThenBody:{  for (  ComponentCustomizer<GrpcComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5455 @LENGTH@ 277
------UPD EnhancedForStatement@@for (ComponentCustomizer<GrpcComponent> configurer : customizers) {  LOGGER.debug("Configure component {}, with configurer {}",component,configurer);  configurer.customize(component);} @TO@ for (ComponentCustomizer<GrpcComponent> customizer : customizers) {  LOGGER.debug("Configure component {}, with customizer {}",component,customizer);  customizer.customize(component);} @AT@ 5469 @LENGTH@ 253
---------UPD SingleVariableDeclaration@@ComponentCustomizer<GrpcComponent> configurer @TO@ ComponentCustomizer<GrpcComponent> customizer @AT@ 5474 @LENGTH@ 45
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5509 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5553 @LENGTH@ 106
------------UPD MethodInvocation@@LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5553 @LENGTH@ 105
---------------UPD SimpleName@@MethodName:debug:["Configure component {}, with configurer {}", component, configurer] @TO@ MethodName:debug:["Configure component {}, with customizer {}", component, customizer] @AT@ 5560 @LENGTH@ 98
------------------UPD StringLiteral@@"Configure component {}, with configurer {}" @TO@ "Configure component {}, with customizer {}" @AT@ 5566 @LENGTH@ 44
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5647 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(component) @TO@ MethodInvocation:customizer.customize(component) @AT@ 5676 @LENGTH@ 32
------------UPD MethodInvocation@@configurer.customize(component) @TO@ customizer.customize(component) @AT@ 5676 @LENGTH@ 31
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5676 @LENGTH@ 10


INS MethodDeclaration@@public, String, MethodName:toString, Object input,  @TO@ TypeDeclaration@@[public]MyOtherFooBean,  @AT@ 1033 @LENGTH@ 90
---INS Modifier@@public @TO@ MethodDeclaration@@public, String, MethodName:toString, Object input,  @AT@ 1033 @LENGTH@ 6
---INS SimpleType@@String @TO@ MethodDeclaration@@public, String, MethodName:toString, Object input,  @AT@ 1040 @LENGTH@ 6
---INS SimpleName@@MethodName:toString @TO@ MethodDeclaration@@public, String, MethodName:toString, Object input,  @AT@ 1047 @LENGTH@ 8
---INS SingleVariableDeclaration@@Object input @TO@ MethodDeclaration@@public, String, MethodName:toString, Object input,  @AT@ 1056 @LENGTH@ 12
------INS SimpleType@@Object @TO@ SingleVariableDeclaration@@Object input @AT@ 1056 @LENGTH@ 6
------INS SimpleName@@input @TO@ SingleVariableDeclaration@@Object input @AT@ 1063 @LENGTH@ 5
---INS ReturnStatement@@StringLiteral:"toString(Object) was called" @TO@ MethodDeclaration@@public, String, MethodName:toString, Object input,  @AT@ 1080 @LENGTH@ 37
------INS StringLiteral@@"toString(Object) was called" @TO@ ReturnStatement@@StringLiteral:"toString(Object) was called" @AT@ 1087 @LENGTH@ 29


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  LanguageCustomizer<OgnlLanguage> configurer : customizers) {    LOGGER.debug("Configure language {}, with configurer {}",language,configurer);    configurer.customize(language);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  LanguageCustomizer<OgnlLanguage> customizer : customizers) {    LOGGER.debug("Configure language {}, with customizer {}",language,customizer);    customizer.customize(language);  }} @AT@ 4689 @LENGTH@ 332
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 4693 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 4693 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  LanguageCustomizer<OgnlLanguage> configurer : customizers) {    LOGGER.debug("Configure language {}, with configurer {}",language,configurer);    configurer.customize(language);  }} @TO@ ThenBody:{  for (  LanguageCustomizer<OgnlLanguage> customizer : customizers) {    LOGGER.debug("Configure language {}, with customizer {}",language,customizer);    customizer.customize(language);  }} @AT@ 4749 @LENGTH@ 272
------UPD EnhancedForStatement@@for (LanguageCustomizer<OgnlLanguage> configurer : customizers) {  LOGGER.debug("Configure language {}, with configurer {}",language,configurer);  configurer.customize(language);} @TO@ for (LanguageCustomizer<OgnlLanguage> customizer : customizers) {  LOGGER.debug("Configure language {}, with customizer {}",language,customizer);  customizer.customize(language);} @AT@ 4763 @LENGTH@ 248
---------UPD SingleVariableDeclaration@@LanguageCustomizer<OgnlLanguage> configurer @TO@ LanguageCustomizer<OgnlLanguage> customizer @AT@ 4768 @LENGTH@ 43
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 4801 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure language {}, with configurer {}",language,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure language {}, with customizer {}",language,customizer) @AT@ 4845 @LENGTH@ 104
------------UPD MethodInvocation@@LOGGER.debug("Configure language {}, with configurer {}",language,configurer) @TO@ LOGGER.debug("Configure language {}, with customizer {}",language,customizer) @AT@ 4845 @LENGTH@ 103
---------------UPD SimpleName@@MethodName:debug:["Configure language {}, with configurer {}", language, configurer] @TO@ MethodName:debug:["Configure language {}, with customizer {}", language, customizer] @AT@ 4852 @LENGTH@ 96
------------------UPD StringLiteral@@"Configure language {}, with configurer {}" @TO@ "Configure language {}, with customizer {}" @AT@ 4858 @LENGTH@ 43
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 4937 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(language) @TO@ MethodInvocation:customizer.customize(language) @AT@ 4966 @LENGTH@ 31
------------UPD MethodInvocation@@configurer.customize(language) @TO@ customizer.customize(language) @AT@ 4966 @LENGTH@ 30
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 4966 @LENGTH@ 10


UPD MethodDeclaration@@public, void, MethodName:onSubscribe, Subscription subscription,  @TO@ public, void, MethodName:onSubscribe, Subscription newSubscription,  @AT@ 2014 @LENGTH@ 451
---UPD SingleVariableDeclaration@@Subscription subscription @TO@ Subscription newSubscription @AT@ 2038 @LENGTH@ 25
------UPD SimpleName@@subscription @TO@ newSubscription @AT@ 2051 @LENGTH@ 12
---UPD IfStatement@@if (subscription == null) {  throw new NullPointerException("subscription is null");} @TO@ if (newSubscription == null) {  throw new NullPointerException("subscription is null");} else if (newSubscription == this.subscription) {  throw new IllegalArgumentException("already subscribed to the subscription: " + newSubscription);} @AT@ 2083 @LENGTH@ 121
------UPD InfixExpression@@subscription == null @TO@ newSubscription == null @AT@ 2087 @LENGTH@ 20
---------UPD SimpleName@@subscription @TO@ newSubscription @AT@ 2087 @LENGTH@ 12
------INS Block@@ElseBody:if (newSubscription == this.subscription) {  throw new IllegalArgumentException("already subscribed to the subscription: " + newSubscription);} @TO@ IfStatement@@if (subscription == null) {  throw new NullPointerException("subscription is null");} @AT@ 2216 @LENGTH@ 179
---------INS IfStatement@@if (newSubscription == this.subscription) {  throw new IllegalArgumentException("already subscribed to the subscription: " + newSubscription);} @TO@ Block@@ElseBody:if (newSubscription == this.subscription) {  throw new IllegalArgumentException("already subscribed to the subscription: " + newSubscription);} @AT@ 2216 @LENGTH@ 179
------------INS InfixExpression@@newSubscription == this.subscription @TO@ IfStatement@@if (newSubscription == this.subscription) {  throw new IllegalArgumentException("already subscribed to the subscription: " + newSubscription);} @AT@ 2220 @LENGTH@ 36
---------------INS SimpleName@@newSubscription @TO@ InfixExpression@@newSubscription == this.subscription @AT@ 2220 @LENGTH@ 15
---------------INS Operator@@== @TO@ InfixExpression@@newSubscription == this.subscription @AT@ 2235 @LENGTH@ 2
---------------INS FieldAccess@@this.subscription @TO@ InfixExpression@@newSubscription == this.subscription @AT@ 2239 @LENGTH@ 17
------------------INS ThisExpression@@this @TO@ FieldAccess@@this.subscription @AT@ 2239 @LENGTH@ 4
------------------INS SimpleName@@subscription @TO@ FieldAccess@@this.subscription @AT@ 2244 @LENGTH@ 12
------------INS Block@@ThenBody:{  throw new IllegalArgumentException("already subscribed to the subscription: " + newSubscription);} @TO@ IfStatement@@if (newSubscription == this.subscription) {  throw new IllegalArgumentException("already subscribed to the subscription: " + newSubscription);} @AT@ 2258 @LENGTH@ 137
---------------INS ThrowStatement@@ClassInstanceCreation:new IllegalArgumentException("already subscribed to the subscription: " + newSubscription) @TO@ Block@@ThenBody:{  throw new IllegalArgumentException("already subscribed to the subscription: " + newSubscription);} @AT@ 2280 @LENGTH@ 97
------------------INS ClassInstanceCreation@@IllegalArgumentException["already subscribed to the subscription: " + newSubscription] @TO@ ThrowStatement@@ClassInstanceCreation:new IllegalArgumentException("already subscribed to the subscription: " + newSubscription) @AT@ 2286 @LENGTH@ 90
---------------------INS New@@new @TO@ ClassInstanceCreation@@IllegalArgumentException["already subscribed to the subscription: " + newSubscription] @AT@ 2286 @LENGTH@ 3
---------------------INS SimpleType@@IllegalArgumentException @TO@ ClassInstanceCreation@@IllegalArgumentException["already subscribed to the subscription: " + newSubscription] @AT@ 2290 @LENGTH@ 24
---------------------INS InfixExpression@@"already subscribed to the subscription: " + newSubscription @TO@ ClassInstanceCreation@@IllegalArgumentException["already subscribed to the subscription: " + newSubscription] @AT@ 2315 @LENGTH@ 60
------------------------INS StringLiteral@@"already subscribed to the subscription: " @TO@ InfixExpression@@"already subscribed to the subscription: " + newSubscription @AT@ 2315 @LENGTH@ 42
------------------------INS Operator@@+ @TO@ InfixExpression@@"already subscribed to the subscription: " + newSubscription @AT@ 2357 @LENGTH@ 1
------------------------INS SimpleName@@newSubscription @TO@ InfixExpression@@"already subscribed to the subscription: " + newSubscription @AT@ 2360 @LENGTH@ 15
---UPD IfStatement@@if (this.subscription != null) {  subscription.cancel();} else {  this.subscription=subscription;  subscriber.onSubscribe(subscription);} @TO@ if (this.subscription != null) {  newSubscription.cancel();} else {  this.subscription=newSubscription;  subscriber.onSubscribe(newSubscription);} @AT@ 2221 @LENGTH@ 230
------UPD Block@@ThenBody:{  subscription.cancel();} @TO@ ThenBody:{  newSubscription.cancel();} @AT@ 2252 @LENGTH@ 62
---------UPD ExpressionStatement@@MethodInvocation:subscription.cancel() @TO@ MethodInvocation:newSubscription.cancel() @AT@ 2274 @LENGTH@ 22
------------UPD MethodInvocation@@subscription.cancel() @TO@ newSubscription.cancel() @AT@ 2274 @LENGTH@ 21
---------------UPD SimpleName@@Name:subscription @TO@ Name:newSubscription @AT@ 2274 @LENGTH@ 12
------UPD Block@@ElseBody:{  this.subscription=subscription;  subscriber.onSubscribe(subscription);} @TO@ ElseBody:{  this.subscription=newSubscription;  subscriber.onSubscribe(newSubscription);} @AT@ 2320 @LENGTH@ 131
---------UPD ExpressionStatement@@Assignment:this.subscription=subscription @TO@ Assignment:this.subscription=newSubscription @AT@ 2342 @LENGTH@ 33
------------UPD Assignment@@this.subscription=subscription @TO@ this.subscription=newSubscription @AT@ 2342 @LENGTH@ 32
---------------UPD SimpleName@@subscription @TO@ newSubscription @AT@ 2362 @LENGTH@ 12
---------UPD ExpressionStatement@@MethodInvocation:subscriber.onSubscribe(subscription) @TO@ MethodInvocation:subscriber.onSubscribe(newSubscription) @AT@ 2396 @LENGTH@ 37
------------UPD MethodInvocation@@subscriber.onSubscribe(subscription) @TO@ subscriber.onSubscribe(newSubscription) @AT@ 2396 @LENGTH@ 36
---------------UPD SimpleName@@MethodName:onSubscribe:[subscription] @TO@ MethodName:onSubscribe:[newSubscription] @AT@ 2407 @LENGTH@ 25
------------------UPD SimpleName@@subscription @TO@ newSubscription @AT@ 2419 @LENGTH@ 12


INS ReturnStatement@@NullLiteral:null @TO@ MethodDeclaration@@public, URL, MethodName:getSchemaLocation, String namespace,  @AT@ 8525 @LENGTH@ 12
---INS NullLiteral@@null @TO@ ReturnStatement@@NullLiteral:null @AT@ 8532 @LENGTH@ 4


INS MethodDeclaration@@private, voidMethodName:FileHelper,  @TO@ TypeDeclaration@@[public]FileHelper,  @AT@ 1039 @LENGTH@ 28
---INS Modifier@@private @TO@ MethodDeclaration@@private, voidMethodName:FileHelper,  @AT@ 1039 @LENGTH@ 7
---INS SimpleName@@MethodName:FileHelper @TO@ MethodDeclaration@@private, voidMethodName:FileHelper,  @AT@ 1047 @LENGTH@ 10


UPD ExpressionStatement@@Assignment:url=file.toURL() @TO@ Assignment:url=file.toURI().toURL() @AT@ 892 @LENGTH@ 19
---UPD Assignment@@url=file.toURL() @TO@ url=file.toURI().toURL() @AT@ 892 @LENGTH@ 18
------UPD MethodInvocation@@file.toURL() @TO@ file.toURI().toURL() @AT@ 898 @LENGTH@ 12
---------INS MethodInvocation@@MethodName:toURI:[] @TO@ MethodInvocation@@file.toURL() @AT@ 898 @LENGTH@ 12


UPD FieldDeclaration@@private, static, Logger, [LOG=LoggerFactory.getLogger(SampleReactiveStreams.class)] @TO@ private, static, final, Logger, [LOG=LoggerFactory.getLogger(SampleReactiveStreams.class)] @AT@ 474 @LENGTH@ 81
---INS Modifier@@final @TO@ FieldDeclaration@@private, static, Logger, [LOG=LoggerFactory.getLogger(SampleReactiveStreams.class)] @AT@ 1293 @LENGTH@ 5


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled(); @AT@ 5277 @LENGTH@ 160
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5285 @LENGTH@ 151
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5285 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5302 @LENGTH@ 134
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 5302 @LENGTH@ 64
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5302 @LENGTH@ 35
---------UPD MethodInvocation@@componentConfiguration.getConfigurer().isEnabled() @TO@ componentConfiguration.getCustomizer().isEnabled() @AT@ 5386 @LENGTH@ 50
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5386 @LENGTH@ 38


UPD ExpressionStatement@@Assignment:requestAttr=WhiteboxImpl.getInternalState(filter,"ALREADY_FILTERED_ATTR_NAME",filter.getClass()) @TO@ Assignment:requestAttr=DebugFilter.ALREADY_FILTERED_ATTR_NAME @AT@ 2427 @LENGTH@ 105
---UPD Assignment@@requestAttr=WhiteboxImpl.getInternalState(filter,"ALREADY_FILTERED_ATTR_NAME",filter.getClass()) @TO@ requestAttr=DebugFilter.ALREADY_FILTERED_ATTR_NAME @AT@ 2427 @LENGTH@ 104
------DEL MethodInvocation@@WhiteboxImpl.getInternalState(filter,"ALREADY_FILTERED_ATTR_NAME",filter.getClass()) @AT@ 2441 @LENGTH@ 90
---------DEL SimpleName@@Name:WhiteboxImpl @AT@ 2441 @LENGTH@ 12
---------DEL SimpleName@@MethodName:getInternalState:[filter, "ALREADY_FILTERED_ATTR_NAME", filter.getClass()] @AT@ 2454 @LENGTH@ 77
------------DEL SimpleName@@filter @AT@ 2471 @LENGTH@ 6
------------DEL StringLiteral@@"ALREADY_FILTERED_ATTR_NAME" @AT@ 2479 @LENGTH@ 28
------------DEL MethodInvocation@@filter.getClass() @AT@ 2513 @LENGTH@ 17
---------------DEL SimpleName@@Name:filter @AT@ 2513 @LENGTH@ 6
---------------DEL SimpleName@@MethodName:getClass:[] @AT@ 2520 @LENGTH@ 10
------INS QualifiedName@@DebugFilter.ALREADY_FILTERED_ATTR_NAME @TO@ Assignment@@requestAttr=WhiteboxImpl.getInternalState(filter,"ALREADY_FILTERED_ATTR_NAME",filter.getClass()) @AT@ 2442 @LENGTH@ 38
---------INS SimpleName@@DebugFilter @TO@ QualifiedName@@DebugFilter.ALREADY_FILTERED_ATTR_NAME @AT@ 2442 @LENGTH@ 11
---------INS SimpleName@@ALREADY_FILTERED_ATTR_NAME @TO@ QualifiedName@@DebugFilter.ALREADY_FILTERED_ATTR_NAME @AT@ 2454 @LENGTH@ 26


UPD TypeDeclaration@@[@UriEndpoint(scheme="reactive-streams",title="Reactive Streams",syntax="reactive-streams:/stream",consumerClass=ReactiveStreamsConsumer.class,label="streams"), public]ReactiveStreamsEndpoint, DefaultEndpoint @TO@ [@UriEndpoint(scheme="reactive-streams",title="Reactive Streams",syntax="reactive-streams:stream",consumerClass=ReactiveStreamsConsumer.class,label="streams"), public]ReactiveStreamsEndpoint, DefaultEndpoint @AT@ 1172 @LENGTH@ 1972
---UPD NormalAnnotation@@@UriEndpoint(scheme="reactive-streams",title="Reactive Streams",syntax="reactive-streams:/stream",consumerClass=ReactiveStreamsConsumer.class,label="streams") @TO@ @UriEndpoint(scheme="reactive-streams",title="Reactive Streams",syntax="reactive-streams:stream",consumerClass=ReactiveStreamsConsumer.class,label="streams") @AT@ 1172 @LENGTH@ 180


UPD ExpressionStatement@@MethodInvocation:mvc.perform(formLogin("/authenticate").user("user","notfound").password("pass","invalid")).andExpect(status().isFound()).andExpect(redirectUrl("/authenticate?error")).andExpect(unauthenticated()) @TO@ MethodInvocation:mvc.perform(formLogin("/authenticate").user("user","notfound").password("pass","invalid")).andExpect(status().isFound()).andExpect(redirectedUrl("/authenticate?error")).andExpect(unauthenticated()) @AT@ 3578 @LENGTH@ 219
---UPD MethodInvocation@@mvc.perform(formLogin("/authenticate").user("user","notfound").password("pass","invalid")).andExpect(status().isFound()).andExpect(redirectUrl("/authenticate?error")).andExpect(unauthenticated()) @TO@ mvc.perform(formLogin("/authenticate").user("user","notfound").password("pass","invalid")).andExpect(status().isFound()).andExpect(redirectedUrl("/authenticate?error")).andExpect(unauthenticated()) @AT@ 3578 @LENGTH@ 218
------UPD MethodInvocation@@MethodName:andExpect:[redirectUrl("/authenticate?error")] @TO@ MethodName:andExpect:[redirectedUrl("/authenticate?error")] @AT@ 3578 @LENGTH@ 184
---------UPD MethodInvocation@@redirectUrl("/authenticate?error") @TO@ redirectedUrl("/authenticate?error") @AT@ 3727 @LENGTH@ 34
------------UPD SimpleName@@MethodName:redirectUrl:["/authenticate?error"] @TO@ MethodName:redirectedUrl:["/authenticate?error"] @AT@ 3727 @LENGTH@ 34


UPD ExpressionStatement@@MethodInvocation:verify(containerLogger).warn(any()) @TO@ MethodInvocation:verify(containerLogger,atLeastOnce()).warn(any()) @AT@ 15444 @LENGTH@ 36
---UPD MethodInvocation@@verify(containerLogger).warn(any()) @TO@ verify(containerLogger,atLeastOnce()).warn(any()) @AT@ 15444 @LENGTH@ 35
------UPD MethodInvocation@@MethodName:verify:[containerLogger] @TO@ MethodName:verify:[containerLogger, atLeastOnce()] @AT@ 15444 @LENGTH@ 23
---------INS MethodInvocation@@MethodName:atLeastOnce:[] @TO@ MethodInvocation@@MethodName:verify:[containerLogger] @AT@ 15466 @LENGTH@ 13


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled(); @AT@ 5300 @LENGTH@ 160
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5308 @LENGTH@ 151
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5308 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5325 @LENGTH@ 134
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 5325 @LENGTH@ 64
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5325 @LENGTH@ 35
---------UPD MethodInvocation@@componentConfiguration.getConfigurer().isEnabled() @TO@ componentConfiguration.getCustomizer().isEnabled() @AT@ 5409 @LENGTH@ 50
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5409 @LENGTH@ 38


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && languageConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && languageConfiguration.getCustomizer().isEnabled(); @AT@ 4523 @LENGTH@ 159
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && languageConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && languageConfiguration.getCustomizer().isEnabled() @AT@ 4531 @LENGTH@ 150
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 4531 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && languageConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && languageConfiguration.getCustomizer().isEnabled() @AT@ 4548 @LENGTH@ 133
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 4548 @LENGTH@ 64
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 4548 @LENGTH@ 35
---------UPD MethodInvocation@@languageConfiguration.getConfigurer().isEnabled() @TO@ languageConfiguration.getCustomizer().isEnabled() @AT@ 4632 @LENGTH@ 49
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 4632 @LENGTH@ 37


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled(); @AT@ 5226 @LENGTH@ 160
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5234 @LENGTH@ 151
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5234 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5251 @LENGTH@ 134
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 5251 @LENGTH@ 64
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5251 @LENGTH@ 35
---------UPD MethodInvocation@@componentConfiguration.getConfigurer().isEnabled() @TO@ componentConfiguration.getCustomizer().isEnabled() @AT@ 5335 @LENGTH@ 50
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5335 @LENGTH@ 38


UPD ReturnStatement@@MethodInvocation:entityMetadata.getIdProperty().getName() @TO@ MethodInvocation:entityMetadata.getIdProperty().get().getName() @AT@ 3741 @LENGTH@ 48
---UPD MethodInvocation@@entityMetadata.getIdProperty().getName() @TO@ entityMetadata.getIdProperty().get().getName() @AT@ 3748 @LENGTH@ 40
------INS MethodInvocation@@MethodName:get:[] @TO@ MethodInvocation@@entityMetadata.getIdProperty().getName() @AT@ 3748 @LENGTH@ 36


UPD FieldDeclaration@@public, static, final, String, [HS2_SUCEEDED_QUERIES="hs2_suceeded_queries"] @TO@ public, static, final, String, [HS2_SUCCEEDED_QUERIES="hs2_succeeded_queries"] @AT@ 4472 @LENGTH@ 73
---UPD VariableDeclarationFragment@@HS2_SUCEEDED_QUERIES="hs2_suceeded_queries" @TO@ HS2_SUCCEEDED_QUERIES="hs2_succeeded_queries" @AT@ 4499 @LENGTH@ 45
------UPD SimpleName@@HS2_SUCEEDED_QUERIES @TO@ HS2_SUCCEEDED_QUERIES @AT@ 4499 @LENGTH@ 20
------UPD StringLiteral@@"hs2_suceeded_queries" @TO@ "hs2_succeeded_queries" @AT@ 4522 @LENGTH@ 22


UPD IfStatement@@if (ti.bucketCols != null || ti.sortCols != null) {  updatePartitionBucketSortColumns(db,table,partn,ti.bucketCols,ti.numBuckets,ti.sortCols);} @TO@ if (!tbd.isMmTable() && (ti.bucketCols != null || ti.sortCols != null)) {  updatePartitionBucketSortColumns(db,table,partn,ti.bucketCols,ti.numBuckets,ti.sortCols);} @AT@ 17762 @LENGTH@ 168
---INS InfixExpression@@!tbd.isMmTable() && (ti.bucketCols != null || ti.sortCols != null) @TO@ IfStatement@@if (ti.bucketCols != null || ti.sortCols != null) {  updatePartitionBucketSortColumns(db,table,partn,ti.bucketCols,ti.numBuckets,ti.sortCols);} @AT@ 17830 @LENGTH@ 66
------INS PrefixExpression@@!tbd.isMmTable() @TO@ InfixExpression@@!tbd.isMmTable() && (ti.bucketCols != null || ti.sortCols != null) @AT@ 17830 @LENGTH@ 16
---------INS Operator@@! @TO@ PrefixExpression@@!tbd.isMmTable() @AT@ 17830 @LENGTH@ 1
---------INS MethodInvocation@@tbd.isMmTable() @TO@ PrefixExpression@@!tbd.isMmTable() @AT@ 17831 @LENGTH@ 15
------------INS SimpleName@@Name:tbd @TO@ MethodInvocation@@tbd.isMmTable() @AT@ 17831 @LENGTH@ 3
------------INS SimpleName@@MethodName:isMmTable:[] @TO@ MethodInvocation@@tbd.isMmTable() @AT@ 17835 @LENGTH@ 11
------INS Operator@@&& @TO@ InfixExpression@@!tbd.isMmTable() && (ti.bucketCols != null || ti.sortCols != null) @AT@ 17846 @LENGTH@ 2
------INS ParenthesizedExpression@@(ti.bucketCols != null || ti.sortCols != null) @TO@ InfixExpression@@!tbd.isMmTable() && (ti.bucketCols != null || ti.sortCols != null) @AT@ 17850 @LENGTH@ 46
---------MOV InfixExpression@@ti.bucketCols != null || ti.sortCols != null @TO@ ParenthesizedExpression@@(ti.bucketCols != null || ti.sortCols != null) @AT@ 17766 @LENGTH@ 44


UPD IfStatement@@if (fastExistsCheck) {  LOG.trace("Using fast exists to update file information for {}",file);  files=operations.listFiles(file.getAbsoluteFilePath());} else {  LOG.trace("Using full directory listing to update file information for {}. Consider enabling fastExistsCheck option.",file);  files=operations.listFiles(file.getParent());} @TO@ if (fastExistsCheck) {  String path=file.getAbsoluteFilePath();  if (path.equals("/") || path.equals("\\")) {    LOG.trace("Using fast exists to update file information in home directory");    files=operations.listFiles();  } else {    LOG.trace("Using fast exists to update file information for {}",path);    files=operations.listFiles(path);  }} else {  String path=file.getParent();  if (path.equals("/") || path.equals("\\")) {    LOG.trace("Using full directory listing in home directory to update file information. Consider enabling fastExistsCheck option.");    files=operations.listFiles();  } else {    LOG.trace("Using full directory listing to update file information for {}. Consider enabling fastExistsCheck option.",path);    files=operations.listFiles(path);  }} @AT@ 3178 @LENGTH@ 704
---INS Block@@ThenBody:{  String path=file.getAbsoluteFilePath();  if (path.equals("/") || path.equals("\\")) {    LOG.trace("Using fast exists to update file information in home directory");    files=operations.listFiles();  } else {    LOG.trace("Using fast exists to update file information for {}",path);    files=operations.listFiles(path);  }} @TO@ IfStatement@@if (fastExistsCheck) {  LOG.trace("Using fast exists to update file information for {}",file);  files=operations.listFiles(file.getAbsoluteFilePath());} else {  LOG.trace("Using full directory listing to update file information for {}. Consider enabling fastExistsCheck option.",file);  files=operations.listFiles(file.getParent());} @AT@ 3197 @LENGTH@ 721
------INS VariableDeclarationStatement@@String path=file.getAbsoluteFilePath(); @TO@ Block@@ThenBody:{  String path=file.getAbsoluteFilePath();  if (path.equals("/") || path.equals("\\")) {    LOG.trace("Using fast exists to update file information in home directory");    files=operations.listFiles();  } else {    LOG.trace("Using fast exists to update file information for {}",path);    files=operations.listFiles(path);  }} @AT@ 3403 @LENGTH@ 41
---------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String path=file.getAbsoluteFilePath(); @AT@ 3403 @LENGTH@ 6
---------INS VariableDeclarationFragment@@path=file.getAbsoluteFilePath() @TO@ VariableDeclarationStatement@@String path=file.getAbsoluteFilePath(); @AT@ 3410 @LENGTH@ 33
------------INS SimpleName@@path @TO@ VariableDeclarationFragment@@path=file.getAbsoluteFilePath() @AT@ 3410 @LENGTH@ 4
------------INS MethodInvocation@@file.getAbsoluteFilePath() @TO@ VariableDeclarationFragment@@path=file.getAbsoluteFilePath() @AT@ 3417 @LENGTH@ 26
---------------INS SimpleName@@Name:file @TO@ MethodInvocation@@file.getAbsoluteFilePath() @AT@ 3417 @LENGTH@ 4
---------------INS SimpleName@@MethodName:getAbsoluteFilePath:[] @TO@ MethodInvocation@@file.getAbsoluteFilePath() @AT@ 3422 @LENGTH@ 21
------INS IfStatement@@if (path.equals("/") || path.equals("\\")) {  LOG.trace("Using fast exists to update file information in home directory");  files=operations.listFiles();} else {  LOG.trace("Using fast exists to update file information for {}",path);  files=operations.listFiles(path);} @TO@ Block@@ThenBody:{  String path=file.getAbsoluteFilePath();  if (path.equals("/") || path.equals("\\")) {    LOG.trace("Using fast exists to update file information in home directory");    files=operations.listFiles();  } else {    LOG.trace("Using fast exists to update file information for {}",path);    files=operations.listFiles(path);  }} @AT@ 3461 @LENGTH@ 443
---------MOV Block@@ThenBody:{  LOG.trace("Using fast exists to update file information for {}",file);  files=operations.listFiles(file.getAbsoluteFilePath());} @TO@ IfStatement@@if (path.equals("/") || path.equals("\\")) {  LOG.trace("Using fast exists to update file information in home directory");  files=operations.listFiles();} else {  LOG.trace("Using fast exists to update file information for {}",path);  files=operations.listFiles(path);} @AT@ 3199 @LENGTH@ 365
------------UPD ExpressionStatement@@MethodInvocation:LOG.trace("Using fast exists to update file information for {}",file) @TO@ MethodInvocation:LOG.trace("Using fast exists to update file information for {}",path) @AT@ 3405 @LENGTH@ 71
---------------UPD MethodInvocation@@LOG.trace("Using fast exists to update file information for {}",file) @TO@ LOG.trace("Using fast exists to update file information for {}",path) @AT@ 3405 @LENGTH@ 70
------------------UPD SimpleName@@MethodName:trace:["Using fast exists to update file information for {}", file] @TO@ MethodName:trace:["Using fast exists to update file information for {}", path] @AT@ 3409 @LENGTH@ 66
---------------------UPD SimpleName@@file @TO@ path @AT@ 3470 @LENGTH@ 4
------------UPD ExpressionStatement@@Assignment:files=operations.listFiles(file.getAbsoluteFilePath()) @TO@ Assignment:files=operations.listFiles(path) @AT@ 3493 @LENGTH@ 57
---------------UPD Assignment@@files=operations.listFiles(file.getAbsoluteFilePath()) @TO@ files=operations.listFiles(path) @AT@ 3493 @LENGTH@ 56
------------------UPD MethodInvocation@@operations.listFiles(file.getAbsoluteFilePath()) @TO@ operations.listFiles(path) @AT@ 3501 @LENGTH@ 48
---------------------UPD SimpleName@@MethodName:listFiles:[file.getAbsoluteFilePath()] @TO@ MethodName:listFiles:[path] @AT@ 3512 @LENGTH@ 37
------------------------DEL MethodInvocation@@file.getAbsoluteFilePath() @AT@ 3522 @LENGTH@ 26
---------------------------DEL SimpleName@@Name:file @AT@ 3522 @LENGTH@ 4
---------------------------DEL SimpleName@@MethodName:getAbsoluteFilePath:[] @AT@ 3527 @LENGTH@ 21
------------------------INS SimpleName@@path @TO@ SimpleName@@MethodName:listFiles:[file.getAbsoluteFilePath()] @AT@ 3880 @LENGTH@ 4
---------INS InfixExpression@@path.equals("/") || path.equals("\\") @TO@ IfStatement@@if (path.equals("/") || path.equals("\\")) {  LOG.trace("Using fast exists to update file information in home directory");  files=operations.listFiles();} else {  LOG.trace("Using fast exists to update file information for {}",path);  files=operations.listFiles(path);} @AT@ 3465 @LENGTH@ 37
------------INS MethodInvocation@@path.equals("/") @TO@ InfixExpression@@path.equals("/") || path.equals("\\") @AT@ 3465 @LENGTH@ 16
---------------INS SimpleName@@Name:path @TO@ MethodInvocation@@path.equals("/") @AT@ 3465 @LENGTH@ 4
---------------INS SimpleName@@MethodName:equals:["/"] @TO@ MethodInvocation@@path.equals("/") @AT@ 3470 @LENGTH@ 11
------------------INS StringLiteral@@"/" @TO@ SimpleName@@MethodName:equals:["/"] @AT@ 3477 @LENGTH@ 3
------------INS Operator@@|| @TO@ InfixExpression@@path.equals("/") || path.equals("\\") @AT@ 3481 @LENGTH@ 2
------------INS MethodInvocation@@path.equals("\\") @TO@ InfixExpression@@path.equals("/") || path.equals("\\") @AT@ 3485 @LENGTH@ 17
---------------INS SimpleName@@Name:path @TO@ MethodInvocation@@path.equals("\\") @AT@ 3485 @LENGTH@ 4
---------------INS SimpleName@@MethodName:equals:["\\"] @TO@ MethodInvocation@@path.equals("\\") @AT@ 3490 @LENGTH@ 12
------------------INS StringLiteral@@"\\" @TO@ SimpleName@@MethodName:equals:["\\"] @AT@ 3497 @LENGTH@ 4
---------INS Block@@ThenBody:{  LOG.trace("Using fast exists to update file information in home directory");  files=operations.listFiles();} @TO@ IfStatement@@if (path.equals("/") || path.equals("\\")) {  LOG.trace("Using fast exists to update file information in home directory");  files=operations.listFiles();} else {  LOG.trace("Using fast exists to update file information for {}",path);  files=operations.listFiles(path);} @AT@ 3504 @LENGTH@ 227
------------INS ExpressionStatement@@MethodInvocation:LOG.trace("Using fast exists to update file information in home directory") @TO@ Block@@ThenBody:{  LOG.trace("Using fast exists to update file information in home directory");  files=operations.listFiles();} @AT@ 3585 @LENGTH@ 76
---------------INS MethodInvocation@@LOG.trace("Using fast exists to update file information in home directory") @TO@ ExpressionStatement@@MethodInvocation:LOG.trace("Using fast exists to update file information in home directory") @AT@ 3585 @LENGTH@ 75
------------------INS SimpleName@@Name:LOG @TO@ MethodInvocation@@LOG.trace("Using fast exists to update file information in home directory") @AT@ 3585 @LENGTH@ 3
------------------INS SimpleName@@MethodName:trace:["Using fast exists to update file information in home directory"] @TO@ MethodInvocation@@LOG.trace("Using fast exists to update file information in home directory") @AT@ 3589 @LENGTH@ 71
---------------------INS StringLiteral@@"Using fast exists to update file information in home directory" @TO@ SimpleName@@MethodName:trace:["Using fast exists to update file information in home directory"] @AT@ 3595 @LENGTH@ 64
------------INS ExpressionStatement@@Assignment:files=operations.listFiles() @TO@ Block@@ThenBody:{  LOG.trace("Using fast exists to update file information in home directory");  files=operations.listFiles();} @AT@ 3682 @LENGTH@ 31
---------------INS Assignment@@files=operations.listFiles() @TO@ ExpressionStatement@@Assignment:files=operations.listFiles() @AT@ 3682 @LENGTH@ 30
------------------INS SimpleName@@files @TO@ Assignment@@files=operations.listFiles() @AT@ 3682 @LENGTH@ 5
------------------INS Operator@@= @TO@ Assignment@@files=operations.listFiles() @AT@ 3687 @LENGTH@ 1
------------------INS MethodInvocation@@operations.listFiles() @TO@ Assignment@@files=operations.listFiles() @AT@ 3690 @LENGTH@ 22
---------------------INS SimpleName@@Name:operations @TO@ MethodInvocation@@operations.listFiles() @AT@ 3690 @LENGTH@ 10
---------------------INS SimpleName@@MethodName:listFiles:[] @TO@ MethodInvocation@@operations.listFiles() @AT@ 3701 @LENGTH@ 11
---UPD Block@@ThenBody:{  LOG.trace("Using fast exists to update file information for {}",file);  files=operations.listFiles(file.getAbsoluteFilePath());} @TO@ ElseBody:{  LOG.trace("Using fast exists to update file information for {}",path);  files=operations.listFiles(path);} @AT@ 3199 @LENGTH@ 365
---UPD Block@@ElseBody:{  LOG.trace("Using full directory listing to update file information for {}. Consider enabling fastExistsCheck option.",file);  files=operations.listFiles(file.getParent());} @TO@ ElseBody:{  LOG.trace("Using full directory listing to update file information for {}. Consider enabling fastExistsCheck option.",path);  files=operations.listFiles(path);} @AT@ 3570 @LENGTH@ 312
---INS Block@@ElseBody:{  String path=file.getParent();  if (path.equals("/") || path.equals("\\")) {    LOG.trace("Using full directory listing in home directory to update file information. Consider enabling fastExistsCheck option.");    files=operations.listFiles();  } else {    LOG.trace("Using full directory listing to update file information for {}. Consider enabling fastExistsCheck option.",path);    files=operations.listFiles(path);  }} @TO@ IfStatement@@if (fastExistsCheck) {  LOG.trace("Using fast exists to update file information for {}",file);  files=operations.listFiles(file.getAbsoluteFilePath());} else {  LOG.trace("Using full directory listing to update file information for {}. Consider enabling fastExistsCheck option.",file);  files=operations.listFiles(file.getParent());} @AT@ 3924 @LENGTH@ 631
------INS VariableDeclarationStatement@@String path=file.getParent(); @TO@ Block@@ElseBody:{  String path=file.getParent();  if (path.equals("/") || path.equals("\\")) {    LOG.trace("Using full directory listing in home directory to update file information. Consider enabling fastExistsCheck option.");    files=operations.listFiles();  } else {    LOG.trace("Using full directory listing to update file information for {}. Consider enabling fastExistsCheck option.",path);    files=operations.listFiles(path);  }} @AT@ 3942 @LENGTH@ 31
---------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String path=file.getParent(); @AT@ 3942 @LENGTH@ 6
---------INS VariableDeclarationFragment@@path=file.getParent() @TO@ VariableDeclarationStatement@@String path=file.getParent(); @AT@ 3949 @LENGTH@ 23
------------INS SimpleName@@path @TO@ VariableDeclarationFragment@@path=file.getParent() @AT@ 3949 @LENGTH@ 4
------------INS MethodInvocation@@file.getParent() @TO@ VariableDeclarationFragment@@path=file.getParent() @AT@ 3956 @LENGTH@ 16
---------------INS SimpleName@@Name:file @TO@ MethodInvocation@@file.getParent() @AT@ 3956 @LENGTH@ 4
---------------INS SimpleName@@MethodName:getParent:[] @TO@ MethodInvocation@@file.getParent() @AT@ 3961 @LENGTH@ 11
------INS IfStatement@@if (path.equals("/") || path.equals("\\")) {  LOG.trace("Using full directory listing in home directory to update file information. Consider enabling fastExistsCheck option.");  files=operations.listFiles();} else {  LOG.trace("Using full directory listing to update file information for {}. Consider enabling fastExistsCheck option.",path);  files=operations.listFiles(path);} @TO@ Block@@ElseBody:{  String path=file.getParent();  if (path.equals("/") || path.equals("\\")) {    LOG.trace("Using full directory listing in home directory to update file information. Consider enabling fastExistsCheck option.");    files=operations.listFiles();  } else {    LOG.trace("Using full directory listing to update file information for {}. Consider enabling fastExistsCheck option.",path);    files=operations.listFiles(path);  }} @AT@ 3990 @LENGTH@ 551
---------MOV Block@@ElseBody:{  LOG.trace("Using full directory listing to update file information for {}. Consider enabling fastExistsCheck option.",file);  files=operations.listFiles(file.getParent());} @TO@ IfStatement@@if (path.equals("/") || path.equals("\\")) {  LOG.trace("Using full directory listing in home directory to update file information. Consider enabling fastExistsCheck option.");  files=operations.listFiles();} else {  LOG.trace("Using full directory listing to update file information for {}. Consider enabling fastExistsCheck option.",path);  files=operations.listFiles(path);} @AT@ 3570 @LENGTH@ 312
------------UPD ExpressionStatement@@MethodInvocation:LOG.trace("Using full directory listing to update file information for {}. Consider enabling fastExistsCheck option.",file) @TO@ MethodInvocation:LOG.trace("Using full directory listing to update file information for {}. Consider enabling fastExistsCheck option.",path) @AT@ 3588 @LENGTH@ 125
---------------UPD MethodInvocation@@LOG.trace("Using full directory listing to update file information for {}. Consider enabling fastExistsCheck option.",file) @TO@ LOG.trace("Using full directory listing to update file information for {}. Consider enabling fastExistsCheck option.",path) @AT@ 3588 @LENGTH@ 124
------------------UPD SimpleName@@MethodName:trace:["Using full directory listing to update file information for {}. Consider enabling fastExistsCheck option.", file] @TO@ MethodName:trace:["Using full directory listing to update file information for {}. Consider enabling fastExistsCheck option.", path] @AT@ 3592 @LENGTH@ 120
---------------------UPD SimpleName@@file @TO@ path @AT@ 3707 @LENGTH@ 4
------------UPD ExpressionStatement@@Assignment:files=operations.listFiles(file.getParent()) @TO@ Assignment:files=operations.listFiles(path) @AT@ 3821 @LENGTH@ 47
---------------UPD Assignment@@files=operations.listFiles(file.getParent()) @TO@ files=operations.listFiles(path) @AT@ 3821 @LENGTH@ 46
------------------UPD MethodInvocation@@operations.listFiles(file.getParent()) @TO@ operations.listFiles(path) @AT@ 3829 @LENGTH@ 38
---------------------UPD SimpleName@@MethodName:listFiles:[file.getParent()] @TO@ MethodName:listFiles:[path] @AT@ 3840 @LENGTH@ 27
------------------------DEL MethodInvocation@@file.getParent() @AT@ 3850 @LENGTH@ 16
---------------------------DEL SimpleName@@Name:file @AT@ 3850 @LENGTH@ 4
---------------------------DEL SimpleName@@MethodName:getParent:[] @AT@ 3855 @LENGTH@ 11
------------------------INS SimpleName@@path @TO@ SimpleName@@MethodName:listFiles:[file.getParent()] @AT@ 4517 @LENGTH@ 4
---------INS InfixExpression@@path.equals("/") || path.equals("\\") @TO@ IfStatement@@if (path.equals("/") || path.equals("\\")) {  LOG.trace("Using full directory listing in home directory to update file information. Consider enabling fastExistsCheck option.");  files=operations.listFiles();} else {  LOG.trace("Using full directory listing to update file information for {}. Consider enabling fastExistsCheck option.",path);  files=operations.listFiles(path);} @AT@ 3994 @LENGTH@ 37
------------INS MethodInvocation@@path.equals("/") @TO@ InfixExpression@@path.equals("/") || path.equals("\\") @AT@ 3994 @LENGTH@ 16
---------------INS SimpleName@@Name:path @TO@ MethodInvocation@@path.equals("/") @AT@ 3994 @LENGTH@ 4
---------------INS SimpleName@@MethodName:equals:["/"] @TO@ MethodInvocation@@path.equals("/") @AT@ 3999 @LENGTH@ 11
------------------INS StringLiteral@@"/" @TO@ SimpleName@@MethodName:equals:["/"] @AT@ 4006 @LENGTH@ 3
------------INS Operator@@|| @TO@ InfixExpression@@path.equals("/") || path.equals("\\") @AT@ 4010 @LENGTH@ 2
------------INS MethodInvocation@@path.equals("\\") @TO@ InfixExpression@@path.equals("/") || path.equals("\\") @AT@ 4014 @LENGTH@ 17
---------------INS SimpleName@@Name:path @TO@ MethodInvocation@@path.equals("\\") @AT@ 4014 @LENGTH@ 4
---------------INS SimpleName@@MethodName:equals:["\\"] @TO@ MethodInvocation@@path.equals("\\") @AT@ 4019 @LENGTH@ 12
------------------INS StringLiteral@@"\\" @TO@ SimpleName@@MethodName:equals:["\\"] @AT@ 4026 @LENGTH@ 4
---------INS Block@@ThenBody:{  LOG.trace("Using full directory listing in home directory to update file information. Consider enabling fastExistsCheck option.");  files=operations.listFiles();} @TO@ IfStatement@@if (path.equals("/") || path.equals("\\")) {  LOG.trace("Using full directory listing in home directory to update file information. Consider enabling fastExistsCheck option.");  files=operations.listFiles();} else {  LOG.trace("Using full directory listing to update file information for {}. Consider enabling fastExistsCheck option.",path);  files=operations.listFiles(path);} @AT@ 4033 @LENGTH@ 281
------------INS ExpressionStatement@@MethodInvocation:LOG.trace("Using full directory listing in home directory to update file information. Consider enabling fastExistsCheck option.") @TO@ Block@@ThenBody:{  LOG.trace("Using full directory listing in home directory to update file information. Consider enabling fastExistsCheck option.");  files=operations.listFiles();} @AT@ 4114 @LENGTH@ 130
---------------INS MethodInvocation@@LOG.trace("Using full directory listing in home directory to update file information. Consider enabling fastExistsCheck option.") @TO@ ExpressionStatement@@MethodInvocation:LOG.trace("Using full directory listing in home directory to update file information. Consider enabling fastExistsCheck option.") @AT@ 4114 @LENGTH@ 129
------------------INS SimpleName@@Name:LOG @TO@ MethodInvocation@@LOG.trace("Using full directory listing in home directory to update file information. Consider enabling fastExistsCheck option.") @AT@ 4114 @LENGTH@ 3
------------------INS SimpleName@@MethodName:trace:["Using full directory listing in home directory to update file information. Consider enabling fastExistsCheck option."] @TO@ MethodInvocation@@LOG.trace("Using full directory listing in home directory to update file information. Consider enabling fastExistsCheck option.") @AT@ 4118 @LENGTH@ 125
---------------------INS StringLiteral@@"Using full directory listing in home directory to update file information. Consider enabling fastExistsCheck option." @TO@ SimpleName@@MethodName:trace:["Using full directory listing in home directory to update file information. Consider enabling fastExistsCheck option."] @AT@ 4124 @LENGTH@ 118
------------INS ExpressionStatement@@Assignment:files=operations.listFiles() @TO@ Block@@ThenBody:{  LOG.trace("Using full directory listing in home directory to update file information. Consider enabling fastExistsCheck option.");  files=operations.listFiles();} @AT@ 4265 @LENGTH@ 31
---------------INS Assignment@@files=operations.listFiles() @TO@ ExpressionStatement@@Assignment:files=operations.listFiles() @AT@ 4265 @LENGTH@ 30
------------------INS SimpleName@@files @TO@ Assignment@@files=operations.listFiles() @AT@ 4265 @LENGTH@ 5
------------------INS Operator@@= @TO@ Assignment@@files=operations.listFiles() @AT@ 4270 @LENGTH@ 1
------------------INS MethodInvocation@@operations.listFiles() @TO@ Assignment@@files=operations.listFiles() @AT@ 4273 @LENGTH@ 22
---------------------INS SimpleName@@Name:operations @TO@ MethodInvocation@@operations.listFiles() @AT@ 4273 @LENGTH@ 10
---------------------INS SimpleName@@MethodName:listFiles:[] @TO@ MethodInvocation@@operations.listFiles() @AT@ 4284 @LENGTH@ 11


UPD ReturnStatement@@MethodInvocation:getSlaveConfiguration(hostName,hostConfigPath,testName,baseConfig,readOnlyHost,false) @TO@ MethodInvocation:getSlaveConfiguration(hostName,hostConfigPath,testName,baseConfig,readOnlyHost,Boolean.getBoolean("wildfly.slave.debug")) @AT@ 7823 @LENGTH@ 98
---UPD MethodInvocation@@getSlaveConfiguration(hostName,hostConfigPath,testName,baseConfig,readOnlyHost,false) @TO@ getSlaveConfiguration(hostName,hostConfigPath,testName,baseConfig,readOnlyHost,Boolean.getBoolean("wildfly.slave.debug")) @AT@ 7830 @LENGTH@ 90
------UPD SimpleName@@MethodName:getSlaveConfiguration:[hostName, hostConfigPath, testName, baseConfig, readOnlyHost, false] @TO@ MethodName:getSlaveConfiguration:[hostName, hostConfigPath, testName, baseConfig, readOnlyHost, Boolean.getBoolean("wildfly.slave.debug")] @AT@ 7830 @LENGTH@ 90
---------DEL BooleanLiteral@@false @AT@ 7914 @LENGTH@ 5
---------INS MethodInvocation@@Boolean.getBoolean("wildfly.slave.debug") @TO@ SimpleName@@MethodName:getSlaveConfiguration:[hostName, hostConfigPath, testName, baseConfig, readOnlyHost, false] @AT@ 7951 @LENGTH@ 41
------------INS SimpleName@@Name:Boolean @TO@ MethodInvocation@@Boolean.getBoolean("wildfly.slave.debug") @AT@ 7951 @LENGTH@ 7
------------INS SimpleName@@MethodName:getBoolean:["wildfly.slave.debug"] @TO@ MethodInvocation@@Boolean.getBoolean("wildfly.slave.debug") @AT@ 7959 @LENGTH@ 33
---------------INS StringLiteral@@"wildfly.slave.debug" @TO@ SimpleName@@MethodName:getBoolean:["wildfly.slave.debug"] @AT@ 7970 @LENGTH@ 21


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled(); @AT@ 5361 @LENGTH@ 160
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5369 @LENGTH@ 151
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5369 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5386 @LENGTH@ 134
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 5386 @LENGTH@ 64
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5386 @LENGTH@ 35
---------UPD MethodInvocation@@componentConfiguration.getConfigurer().isEnabled() @TO@ componentConfiguration.getCustomizer().isEnabled() @AT@ 5470 @LENGTH@ 50
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5470 @LENGTH@ 38


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<MsvComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<MsvComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5398 @LENGTH@ 336
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 5402 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5402 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  ComponentCustomizer<MsvComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ ThenBody:{  for (  ComponentCustomizer<MsvComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5458 @LENGTH@ 276
------UPD EnhancedForStatement@@for (ComponentCustomizer<MsvComponent> configurer : customizers) {  LOGGER.debug("Configure component {}, with configurer {}",component,configurer);  configurer.customize(component);} @TO@ for (ComponentCustomizer<MsvComponent> customizer : customizers) {  LOGGER.debug("Configure component {}, with customizer {}",component,customizer);  customizer.customize(component);} @AT@ 5472 @LENGTH@ 252
---------UPD SingleVariableDeclaration@@ComponentCustomizer<MsvComponent> configurer @TO@ ComponentCustomizer<MsvComponent> customizer @AT@ 5477 @LENGTH@ 44
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5511 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5555 @LENGTH@ 106
------------UPD MethodInvocation@@LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5555 @LENGTH@ 105
---------------UPD SimpleName@@MethodName:debug:["Configure component {}, with configurer {}", component, configurer] @TO@ MethodName:debug:["Configure component {}, with customizer {}", component, customizer] @AT@ 5562 @LENGTH@ 98
------------------UPD StringLiteral@@"Configure component {}, with configurer {}" @TO@ "Configure component {}, with customizer {}" @AT@ 5568 @LENGTH@ 44
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5649 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(component) @TO@ MethodInvocation:customizer.customize(component) @AT@ 5678 @LENGTH@ 32
------------UPD MethodInvocation@@configurer.customize(component) @TO@ customizer.customize(component) @AT@ 5678 @LENGTH@ 31
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5678 @LENGTH@ 10


UPD ReturnStatement@@MethodInvocation:multiHashOrdered(parentHashCode(),22817,Objects.hashCode(operation)) @TO@ MethodInvocation:multiHashUnordered(parentHashCode(),22817,Objects.hashCode(operation)) @AT@ 2888 @LENGTH@ 78
---UPD MethodInvocation@@multiHashOrdered(parentHashCode(),22817,Objects.hashCode(operation)) @TO@ multiHashUnordered(parentHashCode(),22817,Objects.hashCode(operation)) @AT@ 2895 @LENGTH@ 70
------UPD SimpleName@@MethodName:multiHashOrdered:[parentHashCode(), 22817, Objects.hashCode(operation)] @TO@ MethodName:multiHashUnordered:[parentHashCode(), 22817, Objects.hashCode(operation)] @AT@ 2895 @LENGTH@ 70


UPD ExpressionStatement@@MethodInvocation:resolver.setFallbackPageable(null) @TO@ MethodInvocation:resolver.setFallbackPageable(Optional.empty()) @AT@ 8283 @LENGTH@ 35
---UPD MethodInvocation@@resolver.setFallbackPageable(null) @TO@ resolver.setFallbackPageable(Optional.empty()) @AT@ 8283 @LENGTH@ 34
------UPD SimpleName@@MethodName:setFallbackPageable:[null] @TO@ MethodName:setFallbackPageable:[Optional.empty()] @AT@ 8292 @LENGTH@ 25
---------INS MethodInvocation@@Optional.empty() @TO@ SimpleName@@MethodName:setFallbackPageable:[null] @AT@ 8312 @LENGTH@ 16
------------INS SimpleName@@Name:Optional @TO@ MethodInvocation@@Optional.empty() @AT@ 8312 @LENGTH@ 8
------------INS SimpleName@@MethodName:empty:[] @TO@ MethodInvocation@@Optional.empty() @AT@ 8321 @LENGTH@ 7
---------DEL NullLiteral@@null @AT@ 8312 @LENGTH@ 4


UPD Block@@ThenBody:{  final boolean hasXz=internalIsBrotliCompressionAvailable();  cachedBrotliAvailability=hasXz ? CachedAvailability.CACHED_AVAILABLE : CachedAvailability.CACHED_UNAVAILABLE;} @TO@ ThenBody:{  final boolean hasBrotli=internalIsBrotliCompressionAvailable();  cachedBrotliAvailability=hasBrotli ? CachedAvailability.CACHED_AVAILABLE : CachedAvailability.CACHED_UNAVAILABLE;} @AT@ 2763 @LENGTH@ 225
---UPD VariableDeclarationStatement@@final boolean hasXz=internalIsBrotliCompressionAvailable(); @TO@ final boolean hasBrotli=internalIsBrotliCompressionAvailable(); @AT@ 2777 @LENGTH@ 61
------UPD VariableDeclarationFragment@@hasXz=internalIsBrotliCompressionAvailable() @TO@ hasBrotli=internalIsBrotliCompressionAvailable() @AT@ 2791 @LENGTH@ 46
---------UPD SimpleName@@hasXz @TO@ hasBrotli @AT@ 2791 @LENGTH@ 5
---UPD ExpressionStatement@@Assignment:cachedBrotliAvailability=hasXz ? CachedAvailability.CACHED_AVAILABLE : CachedAvailability.CACHED_UNAVAILABLE @TO@ Assignment:cachedBrotliAvailability=hasBrotli ? CachedAvailability.CACHED_AVAILABLE : CachedAvailability.CACHED_UNAVAILABLE @AT@ 2851 @LENGTH@ 127
------UPD Assignment@@cachedBrotliAvailability=hasXz ? CachedAvailability.CACHED_AVAILABLE : CachedAvailability.CACHED_UNAVAILABLE @TO@ cachedBrotliAvailability=hasBrotli ? CachedAvailability.CACHED_AVAILABLE : CachedAvailability.CACHED_UNAVAILABLE @AT@ 2851 @LENGTH@ 126
---------UPD ConditionalExpression@@hasXz ? CachedAvailability.CACHED_AVAILABLE : CachedAvailability.CACHED_UNAVAILABLE @TO@ hasBrotli ? CachedAvailability.CACHED_AVAILABLE : CachedAvailability.CACHED_UNAVAILABLE @AT@ 2878 @LENGTH@ 99
------------UPD SimpleName@@hasXz @TO@ hasBrotli @AT@ 2878 @LENGTH@ 5


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<IgniteMessagingComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<IgniteMessagingComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5618 @LENGTH@ 348
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 5622 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5622 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  ComponentCustomizer<IgniteMessagingComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ ThenBody:{  for (  ComponentCustomizer<IgniteMessagingComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5678 @LENGTH@ 288
------UPD EnhancedForStatement@@for (ComponentCustomizer<IgniteMessagingComponent> configurer : customizers) {  LOGGER.debug("Configure component {}, with configurer {}",component,configurer);  configurer.customize(component);} @TO@ for (ComponentCustomizer<IgniteMessagingComponent> customizer : customizers) {  LOGGER.debug("Configure component {}, with customizer {}",component,customizer);  customizer.customize(component);} @AT@ 5692 @LENGTH@ 264
---------UPD SingleVariableDeclaration@@ComponentCustomizer<IgniteMessagingComponent> configurer @TO@ ComponentCustomizer<IgniteMessagingComponent> customizer @AT@ 5697 @LENGTH@ 56
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5743 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5787 @LENGTH@ 106
------------UPD MethodInvocation@@LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5787 @LENGTH@ 105
---------------UPD SimpleName@@MethodName:debug:["Configure component {}, with configurer {}", component, configurer] @TO@ MethodName:debug:["Configure component {}, with customizer {}", component, customizer] @AT@ 5794 @LENGTH@ 98
------------------UPD StringLiteral@@"Configure component {}, with configurer {}" @TO@ "Configure component {}, with customizer {}" @AT@ 5800 @LENGTH@ 44
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5881 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(component) @TO@ MethodInvocation:customizer.customize(component) @AT@ 5910 @LENGTH@ 32
------------UPD MethodInvocation@@configurer.customize(component) @TO@ customizer.customize(component) @AT@ 5910 @LENGTH@ 31
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5910 @LENGTH@ 10


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<HazelcastListComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<HazelcastListComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5584 @LENGTH@ 346
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 5588 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5588 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  ComponentCustomizer<HazelcastListComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ ThenBody:{  for (  ComponentCustomizer<HazelcastListComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5644 @LENGTH@ 286
------UPD EnhancedForStatement@@for (ComponentCustomizer<HazelcastListComponent> configurer : customizers) {  LOGGER.debug("Configure component {}, with configurer {}",component,configurer);  configurer.customize(component);} @TO@ for (ComponentCustomizer<HazelcastListComponent> customizer : customizers) {  LOGGER.debug("Configure component {}, with customizer {}",component,customizer);  customizer.customize(component);} @AT@ 5658 @LENGTH@ 262
---------UPD SingleVariableDeclaration@@ComponentCustomizer<HazelcastListComponent> configurer @TO@ ComponentCustomizer<HazelcastListComponent> customizer @AT@ 5663 @LENGTH@ 54
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5707 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5751 @LENGTH@ 106
------------UPD MethodInvocation@@LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5751 @LENGTH@ 105
---------------UPD SimpleName@@MethodName:debug:["Configure component {}, with configurer {}", component, configurer] @TO@ MethodName:debug:["Configure component {}, with customizer {}", component, customizer] @AT@ 5758 @LENGTH@ 98
------------------UPD StringLiteral@@"Configure component {}, with configurer {}" @TO@ "Configure component {}, with customizer {}" @AT@ 5764 @LENGTH@ 44
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5845 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(component) @TO@ MethodInvocation:customizer.customize(component) @AT@ 5874 @LENGTH@ 32
------------UPD MethodInvocation@@configurer.customize(component) @TO@ customizer.customize(component) @AT@ 5874 @LENGTH@ 31
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5874 @LENGTH@ 10


UPD VariableDeclarationStatement@@Matcher matcher=pattern.matcher(path); @TO@ Matcher matcher=PATTERN.matcher(path); @AT@ 10367 @LENGTH@ 40
---UPD VariableDeclarationFragment@@matcher=pattern.matcher(path) @TO@ matcher=PATTERN.matcher(path) @AT@ 10375 @LENGTH@ 31
------UPD MethodInvocation@@pattern.matcher(path) @TO@ PATTERN.matcher(path) @AT@ 10385 @LENGTH@ 21
---------UPD SimpleName@@Name:pattern @TO@ Name:PATTERN @AT@ 10385 @LENGTH@ 7


UPD ReturnStatement@@MethodInvocation:multiHashOrdered(parentHashCode(),2011,hostSpec.hashCode()) @TO@ MethodInvocation:multiHashUnordered(parentHashCode(),2011,hostSpec.hashCode()) @AT@ 2298 @LENGTH@ 69
---UPD MethodInvocation@@multiHashOrdered(parentHashCode(),2011,hostSpec.hashCode()) @TO@ multiHashUnordered(parentHashCode(),2011,hostSpec.hashCode()) @AT@ 2305 @LENGTH@ 61
------UPD SimpleName@@MethodName:multiHashOrdered:[parentHashCode(), 2011, hostSpec.hashCode()] @TO@ MethodName:multiHashUnordered:[parentHashCode(), 2011, hostSpec.hashCode()] @AT@ 2305 @LENGTH@ 61


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled(); @AT@ 5361 @LENGTH@ 160
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5369 @LENGTH@ 151
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5369 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5386 @LENGTH@ 134
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 5386 @LENGTH@ 64
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5386 @LENGTH@ 35
---------UPD MethodInvocation@@componentConfiguration.getConfigurer().isEnabled() @TO@ componentConfiguration.getCustomizer().isEnabled() @AT@ 5470 @LENGTH@ 50
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5470 @LENGTH@ 38


UPD ExpressionStatement@@MethodInvocation:assertThat(captor.getValue(),containsString("Created new connection: SimpleConnection")) @TO@ MethodInvocation:assertThat(captor.getValue(),allOf(containsString("Created new connection: "),containsString("SimpleConnection"))) @AT@ 3383 @LENGTH@ 90
---UPD MethodInvocation@@assertThat(captor.getValue(),containsString("Created new connection: SimpleConnection")) @TO@ assertThat(captor.getValue(),allOf(containsString("Created new connection: "),containsString("SimpleConnection"))) @AT@ 3383 @LENGTH@ 89
------UPD SimpleName@@MethodName:assertThat:[captor.getValue(), containsString("Created new connection: SimpleConnection")] @TO@ MethodName:assertThat:[captor.getValue(), allOf(containsString("Created new connection: "),containsString("SimpleConnection"))] @AT@ 3383 @LENGTH@ 89
---------UPD MethodInvocation@@containsString("Created new connection: SimpleConnection") @TO@ containsString("Created new connection: ") @AT@ 3413 @LENGTH@ 58
---------INS MethodInvocation@@allOf(containsString("Created new connection: "),containsString("SimpleConnection")) @TO@ SimpleName@@MethodName:assertThat:[captor.getValue(), containsString("Created new connection: SimpleConnection")] @AT@ 3464 @LENGTH@ 85
------------INS SimpleName@@MethodName:allOf:[containsString("Created new connection: "), containsString("SimpleConnection")] @TO@ MethodInvocation@@allOf(containsString("Created new connection: "),containsString("SimpleConnection")) @AT@ 3464 @LENGTH@ 85
---------------MOV MethodInvocation@@containsString("Created new connection: SimpleConnection") @TO@ SimpleName@@MethodName:allOf:[containsString("Created new connection: "), containsString("SimpleConnection")] @AT@ 3413 @LENGTH@ 58
------------------UPD SimpleName@@MethodName:containsString:["Created new connection: SimpleConnection"] @TO@ MethodName:containsString:["Created new connection: "] @AT@ 3413 @LENGTH@ 58
---------------------UPD StringLiteral@@"Created new connection: SimpleConnection" @TO@ "Created new connection: " @AT@ 3428 @LENGTH@ 42
---------------INS MethodInvocation@@containsString("SimpleConnection") @TO@ SimpleName@@MethodName:allOf:[containsString("Created new connection: "), containsString("SimpleConnection")] @AT@ 3514 @LENGTH@ 34
------------------INS SimpleName@@MethodName:containsString:["SimpleConnection"] @TO@ MethodInvocation@@containsString("SimpleConnection") @AT@ 3514 @LENGTH@ 34
---------------------INS StringLiteral@@"SimpleConnection" @TO@ SimpleName@@MethodName:containsString:["SimpleConnection"] @AT@ 3529 @LENGTH@ 18
------------------INS SimpleName@@MethodName:containsString:["SimpleConnection"] @TO@ MethodInvocation@@containsString("SimpleConnection") @AT@ 3514 @LENGTH@ 34
---------------------INS StringLiteral@@"SimpleConnection" @TO@ SimpleName@@MethodName:containsString:["SimpleConnection"] @AT@ 3529 @LENGTH@ 18
------------------INS SimpleName@@MethodName:containsString:["SimpleConnection"] @TO@ MethodInvocation@@containsString("SimpleConnection") @AT@ 3514 @LENGTH@ 34
---------------------INS StringLiteral@@"SimpleConnection" @TO@ SimpleName@@MethodName:containsString:["SimpleConnection"] @AT@ 3529 @LENGTH@ 18
------------------INS SimpleName@@MethodName:containsString:["SimpleConnection"] @TO@ MethodInvocation@@containsString("SimpleConnection") @AT@ 3514 @LENGTH@ 34
---------------------INS StringLiteral@@"SimpleConnection" @TO@ SimpleName@@MethodName:containsString:["SimpleConnection"] @AT@ 3529 @LENGTH@ 18
------------------INS SimpleName@@MethodName:containsString:["SimpleConnection"] @TO@ MethodInvocation@@containsString("SimpleConnection") @AT@ 3514 @LENGTH@ 34
---------------------INS StringLiteral@@"SimpleConnection" @TO@ SimpleName@@MethodName:containsString:["SimpleConnection"] @AT@ 3529 @LENGTH@ 18
------------INS SimpleName@@MethodName:allOf:[containsString("Created new connection: "), containsString("SimpleConnection")] @TO@ MethodInvocation@@allOf(containsString("Created new connection: "),containsString("SimpleConnection")) @AT@ 3464 @LENGTH@ 85
---------------MOV MethodInvocation@@containsString("Created new connection: SimpleConnection") @TO@ SimpleName@@MethodName:allOf:[containsString("Created new connection: "), containsString("SimpleConnection")] @AT@ 3413 @LENGTH@ 58
------------------UPD SimpleName@@MethodName:containsString:["Created new connection: SimpleConnection"] @TO@ MethodName:containsString:["Created new connection: "] @AT@ 3413 @LENGTH@ 58
---------------------UPD StringLiteral@@"Created new connection: SimpleConnection" @TO@ "Created new connection: " @AT@ 3428 @LENGTH@ 42
---------------INS MethodInvocation@@containsString("SimpleConnection") @TO@ SimpleName@@MethodName:allOf:[containsString("Created new connection: "), containsString("SimpleConnection")] @AT@ 3514 @LENGTH@ 34
------------------INS SimpleName@@MethodName:containsString:["SimpleConnection"] @TO@ MethodInvocation@@containsString("SimpleConnection") @AT@ 3514 @LENGTH@ 34
---------------------INS StringLiteral@@"SimpleConnection" @TO@ SimpleName@@MethodName:containsString:["SimpleConnection"] @AT@ 3529 @LENGTH@ 18
------------------INS SimpleName@@MethodName:containsString:["SimpleConnection"] @TO@ MethodInvocation@@containsString("SimpleConnection") @AT@ 3514 @LENGTH@ 34
---------------------INS StringLiteral@@"SimpleConnection" @TO@ SimpleName@@MethodName:containsString:["SimpleConnection"] @AT@ 3529 @LENGTH@ 18
------------------INS SimpleName@@MethodName:containsString:["SimpleConnection"] @TO@ MethodInvocation@@containsString("SimpleConnection") @AT@ 3514 @LENGTH@ 34
---------------------INS StringLiteral@@"SimpleConnection" @TO@ SimpleName@@MethodName:containsString:["SimpleConnection"] @AT@ 3529 @LENGTH@ 18
------------------INS SimpleName@@MethodName:containsString:["SimpleConnection"] @TO@ MethodInvocation@@containsString("SimpleConnection") @AT@ 3514 @LENGTH@ 34
---------------------INS StringLiteral@@"SimpleConnection" @TO@ SimpleName@@MethodName:containsString:["SimpleConnection"] @AT@ 3529 @LENGTH@ 18
------------------INS SimpleName@@MethodName:containsString:["SimpleConnection"] @TO@ MethodInvocation@@containsString("SimpleConnection") @AT@ 3514 @LENGTH@ 34
---------------------INS StringLiteral@@"SimpleConnection" @TO@ SimpleName@@MethodName:containsString:["SimpleConnection"] @AT@ 3529 @LENGTH@ 18


UPD VariableDeclarationStatement@@String expectedRoleHierarchy="ROLE_A > ROLE_B\nROLE_A > ROLE_C\nROLE_B > ROLE_D\nROLE_C > ROLE_D\n"; @TO@ String expectedRoleHierarchy="ROLE_A > ROLE_B" + EOL + "ROLE_A > ROLE_C"+ EOL+ "ROLE_B > ROLE_D"+ EOL+ "ROLE_C > ROLE_D"+ EOL; @AT@ 1040 @LENGTH@ 102
---UPD VariableDeclarationFragment@@expectedRoleHierarchy="ROLE_A > ROLE_B\nROLE_A > ROLE_C\nROLE_B > ROLE_D\nROLE_C > ROLE_D\n" @TO@ expectedRoleHierarchy="ROLE_A > ROLE_B" + EOL + "ROLE_A > ROLE_C"+ EOL+ "ROLE_B > ROLE_D"+ EOL+ "ROLE_C > ROLE_D"+ EOL @AT@ 1047 @LENGTH@ 94
------DEL StringLiteral@@"ROLE_A > ROLE_B\nROLE_A > ROLE_C\nROLE_B > ROLE_D\nROLE_C > ROLE_D\n" @AT@ 1071 @LENGTH@ 70
------INS InfixExpression@@"ROLE_A > ROLE_B" + EOL + "ROLE_A > ROLE_C"+ EOL+ "ROLE_B > ROLE_D"+ EOL+ "ROLE_C > ROLE_D"+ EOL @TO@ VariableDeclarationFragment@@expectedRoleHierarchy="ROLE_A > ROLE_B\nROLE_A > ROLE_C\nROLE_B > ROLE_D\nROLE_C > ROLE_D\n" @AT@ 1150 @LENGTH@ 113
---------INS StringLiteral@@"ROLE_A > ROLE_B" @TO@ InfixExpression@@"ROLE_A > ROLE_B" + EOL + "ROLE_A > ROLE_C"+ EOL+ "ROLE_B > ROLE_D"+ EOL+ "ROLE_C > ROLE_D"+ EOL @AT@ 1150 @LENGTH@ 17
---------INS Operator@@+ @TO@ InfixExpression@@"ROLE_A > ROLE_B" + EOL + "ROLE_A > ROLE_C"+ EOL+ "ROLE_B > ROLE_D"+ EOL+ "ROLE_C > ROLE_D"+ EOL @AT@ 1167 @LENGTH@ 1
---------INS SimpleName@@EOL @TO@ InfixExpression@@"ROLE_A > ROLE_B" + EOL + "ROLE_A > ROLE_C"+ EOL+ "ROLE_B > ROLE_D"+ EOL+ "ROLE_C > ROLE_D"+ EOL @AT@ 1170 @LENGTH@ 3
---------INS StringLiteral@@"ROLE_A > ROLE_C" @TO@ InfixExpression@@"ROLE_A > ROLE_B" + EOL + "ROLE_A > ROLE_C"+ EOL+ "ROLE_B > ROLE_D"+ EOL+ "ROLE_C > ROLE_D"+ EOL @AT@ 1180 @LENGTH@ 17
---------INS SimpleName@@EOL @TO@ InfixExpression@@"ROLE_A > ROLE_B" + EOL + "ROLE_A > ROLE_C"+ EOL+ "ROLE_B > ROLE_D"+ EOL+ "ROLE_C > ROLE_D"+ EOL @AT@ 1200 @LENGTH@ 3
---------INS StringLiteral@@"ROLE_B > ROLE_D" @TO@ InfixExpression@@"ROLE_A > ROLE_B" + EOL + "ROLE_A > ROLE_C"+ EOL+ "ROLE_B > ROLE_D"+ EOL+ "ROLE_C > ROLE_D"+ EOL @AT@ 1210 @LENGTH@ 17
---------INS SimpleName@@EOL @TO@ InfixExpression@@"ROLE_A > ROLE_B" + EOL + "ROLE_A > ROLE_C"+ EOL+ "ROLE_B > ROLE_D"+ EOL+ "ROLE_C > ROLE_D"+ EOL @AT@ 1230 @LENGTH@ 3
---------INS StringLiteral@@"ROLE_C > ROLE_D" @TO@ InfixExpression@@"ROLE_A > ROLE_B" + EOL + "ROLE_A > ROLE_C"+ EOL+ "ROLE_B > ROLE_D"+ EOL+ "ROLE_C > ROLE_D"+ EOL @AT@ 1240 @LENGTH@ 17
---------INS SimpleName@@EOL @TO@ InfixExpression@@"ROLE_A > ROLE_B" + EOL + "ROLE_A > ROLE_C"+ EOL+ "ROLE_B > ROLE_D"+ EOL+ "ROLE_C > ROLE_D"+ EOL @AT@ 1260 @LENGTH@ 3


UPD ReturnStatement@@MethodInvocation:multiHashOrdered(multiHashOrdered(parentHashCode(),5393,Objects.hashCode(denied)),3719,Objects.hashCode(allowed)) @TO@ MethodInvocation:multiHashUnordered(multiHashUnordered(parentHashCode(),5393,Objects.hashCode(denied)),3719,Objects.hashCode(allowed)) @AT@ 2754 @LENGTH@ 125
---UPD MethodInvocation@@multiHashOrdered(multiHashOrdered(parentHashCode(),5393,Objects.hashCode(denied)),3719,Objects.hashCode(allowed)) @TO@ multiHashUnordered(multiHashUnordered(parentHashCode(),5393,Objects.hashCode(denied)),3719,Objects.hashCode(allowed)) @AT@ 2761 @LENGTH@ 117
------UPD SimpleName@@MethodName:multiHashOrdered:[multiHashOrdered(parentHashCode(),5393,Objects.hashCode(denied)), 3719, Objects.hashCode(allowed)] @TO@ MethodName:multiHashUnordered:[multiHashUnordered(parentHashCode(),5393,Objects.hashCode(denied)), 3719, Objects.hashCode(allowed)] @AT@ 2761 @LENGTH@ 117
---------UPD MethodInvocation@@multiHashOrdered(parentHashCode(),5393,Objects.hashCode(denied)) @TO@ multiHashUnordered(parentHashCode(),5393,Objects.hashCode(denied)) @AT@ 2778 @LENGTH@ 66
------------UPD SimpleName@@MethodName:multiHashOrdered:[parentHashCode(), 5393, Objects.hashCode(denied)] @TO@ MethodName:multiHashUnordered:[parentHashCode(), 5393, Objects.hashCode(denied)] @AT@ 2778 @LENGTH@ 66
------------UPD SimpleName@@MethodName:multiHashOrdered:[parentHashCode(), 5393, Objects.hashCode(denied)] @TO@ MethodName:multiHashUnordered:[parentHashCode(), 5393, Objects.hashCode(denied)] @AT@ 2778 @LENGTH@ 66


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<SnsComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<SnsComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5394 @LENGTH@ 336
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 5398 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5398 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  ComponentCustomizer<SnsComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ ThenBody:{  for (  ComponentCustomizer<SnsComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5454 @LENGTH@ 276
------UPD EnhancedForStatement@@for (ComponentCustomizer<SnsComponent> configurer : customizers) {  LOGGER.debug("Configure component {}, with configurer {}",component,configurer);  configurer.customize(component);} @TO@ for (ComponentCustomizer<SnsComponent> customizer : customizers) {  LOGGER.debug("Configure component {}, with customizer {}",component,customizer);  customizer.customize(component);} @AT@ 5468 @LENGTH@ 252
---------UPD SingleVariableDeclaration@@ComponentCustomizer<SnsComponent> configurer @TO@ ComponentCustomizer<SnsComponent> customizer @AT@ 5473 @LENGTH@ 44
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5507 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5551 @LENGTH@ 106
------------UPD MethodInvocation@@LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5551 @LENGTH@ 105
---------------UPD SimpleName@@MethodName:debug:["Configure component {}, with configurer {}", component, configurer] @TO@ MethodName:debug:["Configure component {}, with customizer {}", component, customizer] @AT@ 5558 @LENGTH@ 98
------------------UPD StringLiteral@@"Configure component {}, with configurer {}" @TO@ "Configure component {}, with customizer {}" @AT@ 5564 @LENGTH@ 44
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5645 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(component) @TO@ MethodInvocation:customizer.customize(component) @AT@ 5674 @LENGTH@ 32
------------UPD MethodInvocation@@configurer.customize(component) @TO@ customizer.customize(component) @AT@ 5674 @LENGTH@ 31
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5674 @LENGTH@ 10


DEL ExpressionStatement@@MethodInvocation:when(propertyMock.getActualType()).thenReturn((Class)Class.class) @AT@ 7598 @LENGTH@ 67
---DEL MethodInvocation@@when(propertyMock.getActualType()).thenReturn((Class)Class.class) @AT@ 7598 @LENGTH@ 66
------DEL MethodInvocation@@MethodName:when:[propertyMock.getActualType()] @AT@ 7598 @LENGTH@ 34
---------DEL MethodInvocation@@propertyMock.getActualType() @AT@ 7603 @LENGTH@ 28
------------DEL SimpleName@@Name:propertyMock @AT@ 7603 @LENGTH@ 12
------------DEL SimpleName@@MethodName:getActualType:[] @AT@ 7616 @LENGTH@ 15
------DEL SimpleName@@MethodName:thenReturn:[(Class)Class.class] @AT@ 7633 @LENGTH@ 31
---------DEL CastExpression@@(Class)Class.class @AT@ 7644 @LENGTH@ 19
------------DEL SimpleType@@Class @AT@ 7645 @LENGTH@ 5
------------DEL TypeLiteral@@Class.class @AT@ 7652 @LENGTH@ 11


UPD ExpressionStatement@@MethodInvocation:assertThat(params.get(OAuth2Parameter.RESPONSE_TYPE)).isEqualTo(ResponseType.CODE.value()) @TO@ MethodInvocation:assertThat(params.get(OAuth2Parameter.RESPONSE_TYPE)).isEqualTo(ResponseType.CODE.getValue()) @AT@ 6245 @LENGTH@ 91
---UPD MethodInvocation@@assertThat(params.get(OAuth2Parameter.RESPONSE_TYPE)).isEqualTo(ResponseType.CODE.value()) @TO@ assertThat(params.get(OAuth2Parameter.RESPONSE_TYPE)).isEqualTo(ResponseType.CODE.getValue()) @AT@ 6245 @LENGTH@ 90
------UPD SimpleName@@MethodName:isEqualTo:[ResponseType.CODE.value()] @TO@ MethodName:isEqualTo:[ResponseType.CODE.getValue()] @AT@ 6299 @LENGTH@ 36
---------UPD MethodInvocation@@ResponseType.CODE.value() @TO@ ResponseType.CODE.getValue() @AT@ 6309 @LENGTH@ 25
------------UPD SimpleName@@MethodName:value:[] @TO@ MethodName:getValue:[] @AT@ 6327 @LENGTH@ 7


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<DropboxComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<DropboxComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5446 @LENGTH@ 340
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 5450 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5450 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  ComponentCustomizer<DropboxComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ ThenBody:{  for (  ComponentCustomizer<DropboxComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5506 @LENGTH@ 280
------UPD EnhancedForStatement@@for (ComponentCustomizer<DropboxComponent> configurer : customizers) {  LOGGER.debug("Configure component {}, with configurer {}",component,configurer);  configurer.customize(component);} @TO@ for (ComponentCustomizer<DropboxComponent> customizer : customizers) {  LOGGER.debug("Configure component {}, with customizer {}",component,customizer);  customizer.customize(component);} @AT@ 5520 @LENGTH@ 256
---------UPD SingleVariableDeclaration@@ComponentCustomizer<DropboxComponent> configurer @TO@ ComponentCustomizer<DropboxComponent> customizer @AT@ 5525 @LENGTH@ 48
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5563 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5607 @LENGTH@ 106
------------UPD MethodInvocation@@LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5607 @LENGTH@ 105
---------------UPD SimpleName@@MethodName:debug:["Configure component {}, with configurer {}", component, configurer] @TO@ MethodName:debug:["Configure component {}, with customizer {}", component, customizer] @AT@ 5614 @LENGTH@ 98
------------------UPD StringLiteral@@"Configure component {}, with configurer {}" @TO@ "Configure component {}, with customizer {}" @AT@ 5620 @LENGTH@ 44
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5701 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(component) @TO@ MethodInvocation:customizer.customize(component) @AT@ 5730 @LENGTH@ 32
------------UPD MethodInvocation@@configurer.customize(component) @TO@ customizer.customize(component) @AT@ 5730 @LENGTH@ 31
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5730 @LENGTH@ 10


UPD ReturnStatement@@MethodInvocation:multiHashOrdered(parentHashCode(),7879,authority.hashCode()) @TO@ MethodInvocation:multiHashUnordered(parentHashCode(),7879,authority.hashCode()) @AT@ 1823 @LENGTH@ 70
---UPD MethodInvocation@@multiHashOrdered(parentHashCode(),7879,authority.hashCode()) @TO@ multiHashUnordered(parentHashCode(),7879,authority.hashCode()) @AT@ 1830 @LENGTH@ 62
------UPD SimpleName@@MethodName:multiHashOrdered:[parentHashCode(), 7879, authority.hashCode()] @TO@ MethodName:multiHashUnordered:[parentHashCode(), 7879, authority.hashCode()] @AT@ 1830 @LENGTH@ 62


UPD MethodDeclaration@@public, void, MethodName:testConnect,  @TO@ public, void, MethodName:testConnect, Exception,  @AT@ 1890 @LENGTH@ 533
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:testConnect,  @AT@ 1923 @LENGTH@ 9
---INS ExpressionStatement@@MethodInvocation:lqcf.destroy() @TO@ MethodDeclaration@@public, void, MethodName:testConnect,  @AT@ 2440 @LENGTH@ 15
------INS MethodInvocation@@lqcf.destroy() @TO@ ExpressionStatement@@MethodInvocation:lqcf.destroy() @AT@ 2440 @LENGTH@ 14
---------INS SimpleName@@Name:lqcf @TO@ MethodInvocation@@lqcf.destroy() @AT@ 2440 @LENGTH@ 4
---------INS SimpleName@@MethodName:destroy:[] @TO@ MethodInvocation@@lqcf.destroy() @AT@ 2445 @LENGTH@ 9


INS MethodDeclaration@@public, BlacklistServiceCallServiceFilterConfiguration, MethodName:blacklistFilter,  @TO@ TypeDeclaration@@[@Metadata(label="eip,routing"), @XmlRootElement(name="serviceCall"), @XmlAccessorType(XmlAccessType.FIELD), public]ServiceCallDefinition, NoOutputDefinition<ServiceCallDefinition> @AT@ 22453 @LENGTH@ 262
---INS Modifier@@public @TO@ MethodDeclaration@@public, BlacklistServiceCallServiceFilterConfiguration, MethodName:blacklistFilter,  @AT@ 22453 @LENGTH@ 6
---INS SimpleType@@BlacklistServiceCallServiceFilterConfiguration @TO@ MethodDeclaration@@public, BlacklistServiceCallServiceFilterConfiguration, MethodName:blacklistFilter,  @AT@ 22460 @LENGTH@ 46
---INS SimpleName@@MethodName:blacklistFilter @TO@ MethodDeclaration@@public, BlacklistServiceCallServiceFilterConfiguration, MethodName:blacklistFilter,  @AT@ 22507 @LENGTH@ 15
---INS VariableDeclarationStatement@@BlacklistServiceCallServiceFilterConfiguration conf=new BlacklistServiceCallServiceFilterConfiguration(); @TO@ MethodDeclaration@@public, BlacklistServiceCallServiceFilterConfiguration, MethodName:blacklistFilter,  @AT@ 22535 @LENGTH@ 107
------INS SimpleType@@BlacklistServiceCallServiceFilterConfiguration @TO@ VariableDeclarationStatement@@BlacklistServiceCallServiceFilterConfiguration conf=new BlacklistServiceCallServiceFilterConfiguration(); @AT@ 22535 @LENGTH@ 46
------INS VariableDeclarationFragment@@conf=new BlacklistServiceCallServiceFilterConfiguration() @TO@ VariableDeclarationStatement@@BlacklistServiceCallServiceFilterConfiguration conf=new BlacklistServiceCallServiceFilterConfiguration(); @AT@ 22582 @LENGTH@ 59
---------INS SimpleName@@conf @TO@ VariableDeclarationFragment@@conf=new BlacklistServiceCallServiceFilterConfiguration() @AT@ 22582 @LENGTH@ 4
---------INS ClassInstanceCreation@@BlacklistServiceCallServiceFilterConfiguration[] @TO@ VariableDeclarationFragment@@conf=new BlacklistServiceCallServiceFilterConfiguration() @AT@ 22589 @LENGTH@ 52
------------INS New@@new @TO@ ClassInstanceCreation@@BlacklistServiceCallServiceFilterConfiguration[] @AT@ 22589 @LENGTH@ 3
------------INS SimpleType@@BlacklistServiceCallServiceFilterConfiguration @TO@ ClassInstanceCreation@@BlacklistServiceCallServiceFilterConfiguration[] @AT@ 22593 @LENGTH@ 46
---INS ExpressionStatement@@MethodInvocation:setServiceFilterConfiguration(conf) @TO@ MethodDeclaration@@public, BlacklistServiceCallServiceFilterConfiguration, MethodName:blacklistFilter,  @AT@ 22651 @LENGTH@ 36
------INS MethodInvocation@@setServiceFilterConfiguration(conf) @TO@ ExpressionStatement@@MethodInvocation:setServiceFilterConfiguration(conf) @AT@ 22651 @LENGTH@ 35
---------INS SimpleName@@MethodName:setServiceFilterConfiguration:[conf] @TO@ MethodInvocation@@setServiceFilterConfiguration(conf) @AT@ 22651 @LENGTH@ 35
------------INS SimpleName@@conf @TO@ SimpleName@@MethodName:setServiceFilterConfiguration:[conf] @AT@ 22681 @LENGTH@ 4
---INS ReturnStatement@@SimpleName:conf @TO@ MethodDeclaration@@public, BlacklistServiceCallServiceFilterConfiguration, MethodName:blacklistFilter,  @AT@ 22697 @LENGTH@ 12
------INS SimpleName@@conf @TO@ ReturnStatement@@SimpleName:conf @AT@ 22704 @LENGTH@ 4


UPD ReturnStatement@@MethodInvocation:multiHashOrdered(parentHashCode(),3923,pathSpec.hashCode()) @TO@ MethodInvocation:multiHashUnordered(parentHashCode(),3923,pathSpec.hashCode()) @AT@ 1947 @LENGTH@ 69
---UPD MethodInvocation@@multiHashOrdered(parentHashCode(),3923,pathSpec.hashCode()) @TO@ multiHashUnordered(parentHashCode(),3923,pathSpec.hashCode()) @AT@ 1954 @LENGTH@ 61
------UPD SimpleName@@MethodName:multiHashOrdered:[parentHashCode(), 3923, pathSpec.hashCode()] @TO@ MethodName:multiHashUnordered:[parentHashCode(), 3923, pathSpec.hashCode()] @AT@ 1954 @LENGTH@ 61


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<ValidatorComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<ValidatorComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5480 @LENGTH@ 342
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 5484 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5484 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  ComponentCustomizer<ValidatorComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ ThenBody:{  for (  ComponentCustomizer<ValidatorComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5540 @LENGTH@ 282
------UPD EnhancedForStatement@@for (ComponentCustomizer<ValidatorComponent> configurer : customizers) {  LOGGER.debug("Configure component {}, with configurer {}",component,configurer);  configurer.customize(component);} @TO@ for (ComponentCustomizer<ValidatorComponent> customizer : customizers) {  LOGGER.debug("Configure component {}, with customizer {}",component,customizer);  customizer.customize(component);} @AT@ 5554 @LENGTH@ 258
---------UPD SingleVariableDeclaration@@ComponentCustomizer<ValidatorComponent> configurer @TO@ ComponentCustomizer<ValidatorComponent> customizer @AT@ 5559 @LENGTH@ 50
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5599 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5643 @LENGTH@ 106
------------UPD MethodInvocation@@LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5643 @LENGTH@ 105
---------------UPD SimpleName@@MethodName:debug:["Configure component {}, with configurer {}", component, configurer] @TO@ MethodName:debug:["Configure component {}, with customizer {}", component, customizer] @AT@ 5650 @LENGTH@ 98
------------------UPD StringLiteral@@"Configure component {}, with configurer {}" @TO@ "Configure component {}, with customizer {}" @AT@ 5656 @LENGTH@ 44
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5737 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(component) @TO@ MethodInvocation:customizer.customize(component) @AT@ 5766 @LENGTH@ 32
------------UPD MethodInvocation@@configurer.customize(component) @TO@ customizer.customize(component) @AT@ 5766 @LENGTH@ 31
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5766 @LENGTH@ 10


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<GitComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<GitComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5378 @LENGTH@ 336
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 5382 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5382 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  ComponentCustomizer<GitComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ ThenBody:{  for (  ComponentCustomizer<GitComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5438 @LENGTH@ 276
------UPD EnhancedForStatement@@for (ComponentCustomizer<GitComponent> configurer : customizers) {  LOGGER.debug("Configure component {}, with configurer {}",component,configurer);  configurer.customize(component);} @TO@ for (ComponentCustomizer<GitComponent> customizer : customizers) {  LOGGER.debug("Configure component {}, with customizer {}",component,customizer);  customizer.customize(component);} @AT@ 5452 @LENGTH@ 252
---------UPD SingleVariableDeclaration@@ComponentCustomizer<GitComponent> configurer @TO@ ComponentCustomizer<GitComponent> customizer @AT@ 5457 @LENGTH@ 44
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5491 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5535 @LENGTH@ 106
------------UPD MethodInvocation@@LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5535 @LENGTH@ 105
---------------UPD SimpleName@@MethodName:debug:["Configure component {}, with configurer {}", component, configurer] @TO@ MethodName:debug:["Configure component {}, with customizer {}", component, customizer] @AT@ 5542 @LENGTH@ 98
------------------UPD StringLiteral@@"Configure component {}, with configurer {}" @TO@ "Configure component {}, with customizer {}" @AT@ 5548 @LENGTH@ 44
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5629 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(component) @TO@ MethodInvocation:customizer.customize(component) @AT@ 5658 @LENGTH@ 32
------------UPD MethodInvocation@@configurer.customize(component) @TO@ customizer.customize(component) @AT@ 5658 @LENGTH@ 31
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5658 @LENGTH@ 10


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled(); @AT@ 5225 @LENGTH@ 160
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5233 @LENGTH@ 151
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5233 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5250 @LENGTH@ 134
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 5250 @LENGTH@ 64
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5250 @LENGTH@ 35
---------UPD MethodInvocation@@componentConfiguration.getConfigurer().isEnabled() @TO@ componentConfiguration.getCustomizer().isEnabled() @AT@ 5334 @LENGTH@ 50
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5334 @LENGTH@ 38


DEL MethodDeclaration@@public, int, MethodName:hashCode,  @AT@ 4134 @LENGTH@ 188
---DEL Modifier@@public @AT@ 4134 @LENGTH@ 6
---DEL PrimitiveType@@int @AT@ 4141 @LENGTH@ 3
---DEL SimpleName@@MethodName:hashCode @AT@ 4145 @LENGTH@ 8
---DEL VariableDeclarationStatement@@int result=17; @AT@ 4166 @LENGTH@ 16
------DEL PrimitiveType@@int @AT@ 4166 @LENGTH@ 3
------DEL VariableDeclarationFragment@@result=17 @AT@ 4170 @LENGTH@ 11
---------DEL SimpleName@@result @AT@ 4170 @LENGTH@ 6
---------DEL NumberLiteral@@17 @AT@ 4179 @LENGTH@ 2
---DEL IfStatement@@if (name != null) {  result+=31 * result + 7 * name.hashCode();} else {  result+=31 * result + 7;} @AT@ 4191 @LENGTH@ 102
------DEL InfixExpression@@name != null @AT@ 4195 @LENGTH@ 12
---------DEL SimpleName@@name @AT@ 4195 @LENGTH@ 4
---------DEL Operator@@!= @AT@ 4199 @LENGTH@ 2
---------DEL NullLiteral@@null @AT@ 4203 @LENGTH@ 4
------DEL Block@@ThenBody:{  result+=31 * result + 7 * name.hashCode();} @AT@ 4209 @LENGTH@ 48
---------DEL ExpressionStatement@@Assignment:result+=31 * result + 7 * name.hashCode() @AT@ 4211 @LENGTH@ 44
------------DEL Assignment@@result+=31 * result + 7 * name.hashCode() @AT@ 4211 @LENGTH@ 43
---------------DEL SimpleName@@result @AT@ 4211 @LENGTH@ 6
---------------DEL Operator@@+= @AT@ 4217 @LENGTH@ 2
---------------DEL InfixExpression@@31 * result + 7 * name.hashCode() @AT@ 4221 @LENGTH@ 33
------------------DEL InfixExpression@@31 * result @AT@ 4221 @LENGTH@ 11
---------------------DEL NumberLiteral@@31 @AT@ 4221 @LENGTH@ 2
---------------------DEL Operator@@* @AT@ 4223 @LENGTH@ 1
---------------------DEL SimpleName@@result @AT@ 4226 @LENGTH@ 6
------------------DEL Operator@@+ @AT@ 4232 @LENGTH@ 1
------------------DEL InfixExpression@@7 * name.hashCode() @AT@ 4235 @LENGTH@ 19
---------------------DEL NumberLiteral@@7 @AT@ 4235 @LENGTH@ 1
---------------------DEL Operator@@* @AT@ 4236 @LENGTH@ 1
---------------------DEL MethodInvocation@@name.hashCode() @AT@ 4239 @LENGTH@ 15
------------------------DEL SimpleName@@Name:name @AT@ 4239 @LENGTH@ 4
------------------------DEL SimpleName@@MethodName:hashCode:[] @AT@ 4244 @LENGTH@ 10
------DEL Block@@ElseBody:{  result+=31 * result + 7;} @AT@ 4263 @LENGTH@ 30
---------DEL ExpressionStatement@@Assignment:result+=31 * result + 7 @AT@ 4265 @LENGTH@ 26
------------DEL Assignment@@result+=31 * result + 7 @AT@ 4265 @LENGTH@ 25
---------------DEL SimpleName@@result @AT@ 4265 @LENGTH@ 6
---------------DEL Operator@@+= @AT@ 4271 @LENGTH@ 2
---------------DEL InfixExpression@@31 * result + 7 @AT@ 4275 @LENGTH@ 15
------------------DEL InfixExpression@@31 * result @AT@ 4275 @LENGTH@ 11
---------------------DEL NumberLiteral@@31 @AT@ 4275 @LENGTH@ 2
---------------------DEL Operator@@* @AT@ 4277 @LENGTH@ 1
---------------------DEL SimpleName@@result @AT@ 4280 @LENGTH@ 6
------------------DEL Operator@@+ @AT@ 4286 @LENGTH@ 1
------------------DEL NumberLiteral@@7 @AT@ 4289 @LENGTH@ 1
---DEL ReturnStatement@@SimpleName:result @AT@ 4302 @LENGTH@ 14
------DEL SimpleName@@result @AT@ 4309 @LENGTH@ 6


UPD MethodDeclaration@@public, voidMethodName:ConnectorModel, String componentName, String className,  @TO@ voidMethodName:ConnectorModel, String componentName, String className,  @AT@ 2714 @LENGTH@ 228
---DEL Modifier@@public @AT@ 2714 @LENGTH@ 6


UPD FieldDeclaration@@private, static, long, [INT_MASK=0x00000000ffffffffL] @TO@ private, static, final, long, [INT_MASK=0x00000000ffffffffL] @AT@ 1709 @LENGTH@ 52
---INS Modifier@@final @TO@ FieldDeclaration@@private, static, long, [INT_MASK=0x00000000ffffffffL] @AT@ 1724 @LENGTH@ 5


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  DataFormatCustomizer<BeanIODataFormat> configurer : customizers) {    LOGGER.debug("Configure dataformat {}, with configurer {}",dataformat,configurer);    configurer.customize(dataformat);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  DataFormatCustomizer<BeanIODataFormat> customizer : customizers) {    LOGGER.debug("Configure dataformat {}, with customizer {}",dataformat,customizer);    customizer.customize(dataformat);  }} @AT@ 5332 @LENGTH@ 425
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 5336 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5336 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  DataFormatCustomizer<BeanIODataFormat> configurer : customizers) {    LOGGER.debug("Configure dataformat {}, with configurer {}",dataformat,configurer);    configurer.customize(dataformat);  }} @TO@ ThenBody:{  for (  DataFormatCustomizer<BeanIODataFormat> customizer : customizers) {    LOGGER.debug("Configure dataformat {}, with customizer {}",dataformat,customizer);    customizer.customize(dataformat);  }} @AT@ 5392 @LENGTH@ 365
------UPD EnhancedForStatement@@for (DataFormatCustomizer<BeanIODataFormat> configurer : customizers) {  LOGGER.debug("Configure dataformat {}, with configurer {}",dataformat,configurer);  configurer.customize(dataformat);} @TO@ for (DataFormatCustomizer<BeanIODataFormat> customizer : customizers) {  LOGGER.debug("Configure dataformat {}, with customizer {}",dataformat,customizer);  customizer.customize(dataformat);} @AT@ 5414 @LENGTH@ 325
---------UPD SingleVariableDeclaration@@DataFormatCustomizer<BeanIODataFormat> configurer @TO@ DataFormatCustomizer<BeanIODataFormat> customizer @AT@ 5419 @LENGTH@ 49
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5458 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure dataformat {}, with configurer {}",dataformat,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure dataformat {}, with customizer {}",dataformat,customizer) @AT@ 5510 @LENGTH@ 149
------------UPD MethodInvocation@@LOGGER.debug("Configure dataformat {}, with configurer {}",dataformat,configurer) @TO@ LOGGER.debug("Configure dataformat {}, with customizer {}",dataformat,customizer) @AT@ 5510 @LENGTH@ 148
---------------UPD SimpleName@@MethodName:debug:["Configure dataformat {}, with configurer {}", dataformat, configurer] @TO@ MethodName:debug:["Configure dataformat {}, with customizer {}", dataformat, customizer] @AT@ 5517 @LENGTH@ 141
------------------UPD StringLiteral@@"Configure dataformat {}, with configurer {}" @TO@ "Configure dataformat {}, with customizer {}" @AT@ 5556 @LENGTH@ 45
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5647 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(dataformat) @TO@ MethodInvocation:customizer.customize(dataformat) @AT@ 5684 @LENGTH@ 33
------------UPD MethodInvocation@@configurer.customize(dataformat) @TO@ customizer.customize(dataformat) @AT@ 5684 @LENGTH@ 32
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5684 @LENGTH@ 10


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<MasterComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<MasterComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5467 @LENGTH@ 339
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 5471 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5471 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  ComponentCustomizer<MasterComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ ThenBody:{  for (  ComponentCustomizer<MasterComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5527 @LENGTH@ 279
------UPD EnhancedForStatement@@for (ComponentCustomizer<MasterComponent> configurer : customizers) {  LOGGER.debug("Configure component {}, with configurer {}",component,configurer);  configurer.customize(component);} @TO@ for (ComponentCustomizer<MasterComponent> customizer : customizers) {  LOGGER.debug("Configure component {}, with customizer {}",component,customizer);  customizer.customize(component);} @AT@ 5541 @LENGTH@ 255
---------UPD SingleVariableDeclaration@@ComponentCustomizer<MasterComponent> configurer @TO@ ComponentCustomizer<MasterComponent> customizer @AT@ 5546 @LENGTH@ 47
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5583 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5627 @LENGTH@ 106
------------UPD MethodInvocation@@LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5627 @LENGTH@ 105
---------------UPD SimpleName@@MethodName:debug:["Configure component {}, with configurer {}", component, configurer] @TO@ MethodName:debug:["Configure component {}, with customizer {}", component, customizer] @AT@ 5634 @LENGTH@ 98
------------------UPD StringLiteral@@"Configure component {}, with configurer {}" @TO@ "Configure component {}, with customizer {}" @AT@ 5640 @LENGTH@ 44
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5721 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(component) @TO@ MethodInvocation:customizer.customize(component) @AT@ 5750 @LENGTH@ 32
------------UPD MethodInvocation@@configurer.customize(component) @TO@ customizer.customize(component) @AT@ 5750 @LENGTH@ 31
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5750 @LENGTH@ 10


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled(); @AT@ 5257 @LENGTH@ 160
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5265 @LENGTH@ 151
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5265 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5282 @LENGTH@ 134
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 5282 @LENGTH@ 64
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5282 @LENGTH@ 35
---------UPD MethodInvocation@@componentConfiguration.getConfigurer().isEnabled() @TO@ componentConfiguration.getCustomizer().isEnabled() @AT@ 5366 @LENGTH@ 50
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5366 @LENGTH@ 38


UPD MethodDeclaration@@Index, MethodName:createIndex, Archive archive, IOException,  @TO@ Index, MethodName:createIndex, Archive<?> archive, IOException,  @AT@ 2268 @LENGTH@ 484
---UPD SingleVariableDeclaration@@Archive archive @TO@ Archive<?> archive @AT@ 2280 @LENGTH@ 15
------INS ParameterizedType@@Archive<?> @TO@ SingleVariableDeclaration@@Archive archive @AT@ 2280 @LENGTH@ 10
---------INS SimpleType@@Archive @TO@ ParameterizedType@@Archive<?> @AT@ 2280 @LENGTH@ 7
---------INS WildcardType@@? @TO@ ParameterizedType@@Archive<?> @AT@ 2288 @LENGTH@ 1
------DEL SimpleType@@Archive @AT@ 2280 @LENGTH@ 7


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled(); @AT@ 5311 @LENGTH@ 160
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5319 @LENGTH@ 151
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5319 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5336 @LENGTH@ 134
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 5336 @LENGTH@ 64
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5336 @LENGTH@ 35
---------UPD MethodInvocation@@componentConfiguration.getConfigurer().isEnabled() @TO@ componentConfiguration.getCustomizer().isEnabled() @AT@ 5420 @LENGTH@ 50
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5420 @LENGTH@ 38


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<RestComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<RestComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5395 @LENGTH@ 337
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 5399 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5399 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  ComponentCustomizer<RestComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ ThenBody:{  for (  ComponentCustomizer<RestComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5455 @LENGTH@ 277
------UPD EnhancedForStatement@@for (ComponentCustomizer<RestComponent> configurer : customizers) {  LOGGER.debug("Configure component {}, with configurer {}",component,configurer);  configurer.customize(component);} @TO@ for (ComponentCustomizer<RestComponent> customizer : customizers) {  LOGGER.debug("Configure component {}, with customizer {}",component,customizer);  customizer.customize(component);} @AT@ 5469 @LENGTH@ 253
---------UPD SingleVariableDeclaration@@ComponentCustomizer<RestComponent> configurer @TO@ ComponentCustomizer<RestComponent> customizer @AT@ 5474 @LENGTH@ 45
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5509 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5553 @LENGTH@ 106
------------UPD MethodInvocation@@LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5553 @LENGTH@ 105
---------------UPD SimpleName@@MethodName:debug:["Configure component {}, with configurer {}", component, configurer] @TO@ MethodName:debug:["Configure component {}, with customizer {}", component, customizer] @AT@ 5560 @LENGTH@ 98
------------------UPD StringLiteral@@"Configure component {}, with configurer {}" @TO@ "Configure component {}, with customizer {}" @AT@ 5566 @LENGTH@ 44
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5647 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(component) @TO@ MethodInvocation:customizer.customize(component) @AT@ 5676 @LENGTH@ 32
------------UPD MethodInvocation@@configurer.customize(component) @TO@ customizer.customize(component) @AT@ 5676 @LENGTH@ 31
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5676 @LENGTH@ 10


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<TestComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<TestComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5395 @LENGTH@ 337
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 5399 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5399 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  ComponentCustomizer<TestComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ ThenBody:{  for (  ComponentCustomizer<TestComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5455 @LENGTH@ 277
------UPD EnhancedForStatement@@for (ComponentCustomizer<TestComponent> configurer : customizers) {  LOGGER.debug("Configure component {}, with configurer {}",component,configurer);  configurer.customize(component);} @TO@ for (ComponentCustomizer<TestComponent> customizer : customizers) {  LOGGER.debug("Configure component {}, with customizer {}",component,customizer);  customizer.customize(component);} @AT@ 5469 @LENGTH@ 253
---------UPD SingleVariableDeclaration@@ComponentCustomizer<TestComponent> configurer @TO@ ComponentCustomizer<TestComponent> customizer @AT@ 5474 @LENGTH@ 45
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5509 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5553 @LENGTH@ 106
------------UPD MethodInvocation@@LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5553 @LENGTH@ 105
---------------UPD SimpleName@@MethodName:debug:["Configure component {}, with configurer {}", component, configurer] @TO@ MethodName:debug:["Configure component {}, with customizer {}", component, customizer] @AT@ 5560 @LENGTH@ 98
------------------UPD StringLiteral@@"Configure component {}, with configurer {}" @TO@ "Configure component {}, with customizer {}" @AT@ 5566 @LENGTH@ 44
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5647 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(component) @TO@ MethodInvocation:customizer.customize(component) @AT@ 5676 @LENGTH@ 32
------------UPD MethodInvocation@@configurer.customize(component) @TO@ customizer.customize(component) @AT@ 5676 @LENGTH@ 31
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5676 @LENGTH@ 10


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<NatsComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<NatsComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5395 @LENGTH@ 337
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 5399 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5399 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  ComponentCustomizer<NatsComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ ThenBody:{  for (  ComponentCustomizer<NatsComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5455 @LENGTH@ 277
------UPD EnhancedForStatement@@for (ComponentCustomizer<NatsComponent> configurer : customizers) {  LOGGER.debug("Configure component {}, with configurer {}",component,configurer);  configurer.customize(component);} @TO@ for (ComponentCustomizer<NatsComponent> customizer : customizers) {  LOGGER.debug("Configure component {}, with customizer {}",component,customizer);  customizer.customize(component);} @AT@ 5469 @LENGTH@ 253
---------UPD SingleVariableDeclaration@@ComponentCustomizer<NatsComponent> configurer @TO@ ComponentCustomizer<NatsComponent> customizer @AT@ 5474 @LENGTH@ 45
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5509 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5553 @LENGTH@ 106
------------UPD MethodInvocation@@LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5553 @LENGTH@ 105
---------------UPD SimpleName@@MethodName:debug:["Configure component {}, with configurer {}", component, configurer] @TO@ MethodName:debug:["Configure component {}, with customizer {}", component, customizer] @AT@ 5560 @LENGTH@ 98
------------------UPD StringLiteral@@"Configure component {}, with configurer {}" @TO@ "Configure component {}, with customizer {}" @AT@ 5566 @LENGTH@ 44
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5647 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(component) @TO@ MethodInvocation:customizer.customize(component) @AT@ 5676 @LENGTH@ 32
------------UPD MethodInvocation@@configurer.customize(component) @TO@ customizer.customize(component) @AT@ 5676 @LENGTH@ 31
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5676 @LENGTH@ 10


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<NettyComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<NettyComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5412 @LENGTH@ 338
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 5416 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5416 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  ComponentCustomizer<NettyComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ ThenBody:{  for (  ComponentCustomizer<NettyComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5472 @LENGTH@ 278
------UPD EnhancedForStatement@@for (ComponentCustomizer<NettyComponent> configurer : customizers) {  LOGGER.debug("Configure component {}, with configurer {}",component,configurer);  configurer.customize(component);} @TO@ for (ComponentCustomizer<NettyComponent> customizer : customizers) {  LOGGER.debug("Configure component {}, with customizer {}",component,customizer);  customizer.customize(component);} @AT@ 5486 @LENGTH@ 254
---------UPD SingleVariableDeclaration@@ComponentCustomizer<NettyComponent> configurer @TO@ ComponentCustomizer<NettyComponent> customizer @AT@ 5491 @LENGTH@ 46
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5527 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5571 @LENGTH@ 106
------------UPD MethodInvocation@@LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5571 @LENGTH@ 105
---------------UPD SimpleName@@MethodName:debug:["Configure component {}, with configurer {}", component, configurer] @TO@ MethodName:debug:["Configure component {}, with customizer {}", component, customizer] @AT@ 5578 @LENGTH@ 98
------------------UPD StringLiteral@@"Configure component {}, with configurer {}" @TO@ "Configure component {}, with customizer {}" @AT@ 5584 @LENGTH@ 44
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5665 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(component) @TO@ MethodInvocation:customizer.customize(component) @AT@ 5694 @LENGTH@ 32
------------UPD MethodInvocation@@configurer.customize(component) @TO@ customizer.customize(component) @AT@ 5694 @LENGTH@ 31
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5694 @LENGTH@ 10


UPD FieldDeclaration@@private, static, long, [BYTE_MASK=0x00000000000000ffL] @TO@ private, static, final, long, [BYTE_MASK=0x00000000000000ffL] @AT@ 1764 @LENGTH@ 52
---INS Modifier@@final @TO@ FieldDeclaration@@private, static, long, [BYTE_MASK=0x00000000000000ffL] @AT@ 1785 @LENGTH@ 5


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  DataFormatCustomizer<ProtobufDataFormat> configurer : customizers) {    LOGGER.debug("Configure dataformat {}, with configurer {}",dataformat,configurer);    configurer.customize(dataformat);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  DataFormatCustomizer<ProtobufDataFormat> customizer : customizers) {    LOGGER.debug("Configure dataformat {}, with customizer {}",dataformat,customizer);    customizer.customize(dataformat);  }} @AT@ 5366 @LENGTH@ 427
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 5370 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5370 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  DataFormatCustomizer<ProtobufDataFormat> configurer : customizers) {    LOGGER.debug("Configure dataformat {}, with configurer {}",dataformat,configurer);    configurer.customize(dataformat);  }} @TO@ ThenBody:{  for (  DataFormatCustomizer<ProtobufDataFormat> customizer : customizers) {    LOGGER.debug("Configure dataformat {}, with customizer {}",dataformat,customizer);    customizer.customize(dataformat);  }} @AT@ 5426 @LENGTH@ 367
------UPD EnhancedForStatement@@for (DataFormatCustomizer<ProtobufDataFormat> configurer : customizers) {  LOGGER.debug("Configure dataformat {}, with configurer {}",dataformat,configurer);  configurer.customize(dataformat);} @TO@ for (DataFormatCustomizer<ProtobufDataFormat> customizer : customizers) {  LOGGER.debug("Configure dataformat {}, with customizer {}",dataformat,customizer);  customizer.customize(dataformat);} @AT@ 5448 @LENGTH@ 327
---------UPD SingleVariableDeclaration@@DataFormatCustomizer<ProtobufDataFormat> configurer @TO@ DataFormatCustomizer<ProtobufDataFormat> customizer @AT@ 5453 @LENGTH@ 51
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5494 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure dataformat {}, with configurer {}",dataformat,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure dataformat {}, with customizer {}",dataformat,customizer) @AT@ 5546 @LENGTH@ 149
------------UPD MethodInvocation@@LOGGER.debug("Configure dataformat {}, with configurer {}",dataformat,configurer) @TO@ LOGGER.debug("Configure dataformat {}, with customizer {}",dataformat,customizer) @AT@ 5546 @LENGTH@ 148
---------------UPD SimpleName@@MethodName:debug:["Configure dataformat {}, with configurer {}", dataformat, configurer] @TO@ MethodName:debug:["Configure dataformat {}, with customizer {}", dataformat, customizer] @AT@ 5553 @LENGTH@ 141
------------------UPD StringLiteral@@"Configure dataformat {}, with configurer {}" @TO@ "Configure dataformat {}, with customizer {}" @AT@ 5592 @LENGTH@ 45
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5683 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(dataformat) @TO@ MethodInvocation:customizer.customize(dataformat) @AT@ 5720 @LENGTH@ 33
------------UPD MethodInvocation@@configurer.customize(dataformat) @TO@ customizer.customize(dataformat) @AT@ 5720 @LENGTH@ 32
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5720 @LENGTH@ 10


INS ExpressionStatement@@MethodInvocation:this.delegate.removeAccessToken(token) @TO@ MethodDeclaration@@public, void, MethodName:removeAccessToken, OAuth2AccessToken token,  @AT@ 6194 @LENGTH@ 39
---INS MethodInvocation@@this.delegate.removeAccessToken(token) @TO@ ExpressionStatement@@MethodInvocation:this.delegate.removeAccessToken(token) @AT@ 6194 @LENGTH@ 38
------INS FieldAccess@@this.delegate @TO@ MethodInvocation@@this.delegate.removeAccessToken(token) @AT@ 6194 @LENGTH@ 13
---------INS ThisExpression@@this @TO@ FieldAccess@@this.delegate @AT@ 6194 @LENGTH@ 4
---------INS SimpleName@@delegate @TO@ FieldAccess@@this.delegate @AT@ 6199 @LENGTH@ 8
------MOV SimpleName@@MethodName:operationNotSupported:[] @TO@ MethodInvocation@@this.delegate.removeAccessToken(token) @AT@ 6252 @LENGTH@ 23
---------INS SimpleName@@token @TO@ SimpleName@@MethodName:operationNotSupported:[] @AT@ 6226 @LENGTH@ 5


INS MethodDeclaration@@public, Foo1, MethodName:foo1Prototype,  @TO@ TypeDeclaration@@[@Configuration, @EnableRabbit, @EnableTransactionManagement, public, static]EnableRabbitConfig,  @AT@ 37025 @LENGTH@ 55
---INS Modifier@@public @TO@ MethodDeclaration@@public, Foo1, MethodName:foo1Prototype,  @AT@ 37025 @LENGTH@ 6
---INS SimpleType@@Foo1 @TO@ MethodDeclaration@@public, Foo1, MethodName:foo1Prototype,  @AT@ 37032 @LENGTH@ 4
---INS SimpleName@@MethodName:foo1Prototype @TO@ MethodDeclaration@@public, Foo1, MethodName:foo1Prototype,  @AT@ 37037 @LENGTH@ 13
---INS ReturnStatement@@ClassInstanceCreation:new Foo1() @TO@ MethodDeclaration@@public, Foo1, MethodName:foo1Prototype,  @AT@ 37058 @LENGTH@ 18
------INS ClassInstanceCreation@@Foo1[] @TO@ ReturnStatement@@ClassInstanceCreation:new Foo1() @AT@ 37065 @LENGTH@ 10
---------INS New@@new @TO@ ClassInstanceCreation@@Foo1[] @AT@ 37065 @LENGTH@ 3
---------INS SimpleType@@Foo1 @TO@ ClassInstanceCreation@@Foo1[] @AT@ 37069 @LENGTH@ 4


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled(); @AT@ 5209 @LENGTH@ 160
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5217 @LENGTH@ 151
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5217 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5234 @LENGTH@ 134
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 5234 @LENGTH@ 64
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5234 @LENGTH@ 35
---------UPD MethodInvocation@@componentConfiguration.getConfigurer().isEnabled() @TO@ componentConfiguration.getCustomizer().isEnabled() @AT@ 5318 @LENGTH@ 50
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5318 @LENGTH@ 38


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  DataFormatCustomizer<BindyCsvDataFormat> configurer : customizers) {    LOGGER.debug("Configure dataformat {}, with configurer {}",dataformat,configurer);    configurer.customize(dataformat);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  DataFormatCustomizer<BindyCsvDataFormat> customizer : customizers) {    LOGGER.debug("Configure dataformat {}, with customizer {}",dataformat,customizer);    customizer.customize(dataformat);  }} @AT@ 5370 @LENGTH@ 427
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 5374 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5374 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  DataFormatCustomizer<BindyCsvDataFormat> configurer : customizers) {    LOGGER.debug("Configure dataformat {}, with configurer {}",dataformat,configurer);    configurer.customize(dataformat);  }} @TO@ ThenBody:{  for (  DataFormatCustomizer<BindyCsvDataFormat> customizer : customizers) {    LOGGER.debug("Configure dataformat {}, with customizer {}",dataformat,customizer);    customizer.customize(dataformat);  }} @AT@ 5430 @LENGTH@ 367
------UPD EnhancedForStatement@@for (DataFormatCustomizer<BindyCsvDataFormat> configurer : customizers) {  LOGGER.debug("Configure dataformat {}, with configurer {}",dataformat,configurer);  configurer.customize(dataformat);} @TO@ for (DataFormatCustomizer<BindyCsvDataFormat> customizer : customizers) {  LOGGER.debug("Configure dataformat {}, with customizer {}",dataformat,customizer);  customizer.customize(dataformat);} @AT@ 5452 @LENGTH@ 327
---------UPD SingleVariableDeclaration@@DataFormatCustomizer<BindyCsvDataFormat> configurer @TO@ DataFormatCustomizer<BindyCsvDataFormat> customizer @AT@ 5457 @LENGTH@ 51
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5498 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure dataformat {}, with configurer {}",dataformat,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure dataformat {}, with customizer {}",dataformat,customizer) @AT@ 5550 @LENGTH@ 149
------------UPD MethodInvocation@@LOGGER.debug("Configure dataformat {}, with configurer {}",dataformat,configurer) @TO@ LOGGER.debug("Configure dataformat {}, with customizer {}",dataformat,customizer) @AT@ 5550 @LENGTH@ 148
---------------UPD SimpleName@@MethodName:debug:["Configure dataformat {}, with configurer {}", dataformat, configurer] @TO@ MethodName:debug:["Configure dataformat {}, with customizer {}", dataformat, customizer] @AT@ 5557 @LENGTH@ 141
------------------UPD StringLiteral@@"Configure dataformat {}, with configurer {}" @TO@ "Configure dataformat {}, with customizer {}" @AT@ 5596 @LENGTH@ 45
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5687 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(dataformat) @TO@ MethodInvocation:customizer.customize(dataformat) @AT@ 5724 @LENGTH@ 33
------------UPD MethodInvocation@@configurer.customize(dataformat) @TO@ customizer.customize(dataformat) @AT@ 5724 @LENGTH@ 32
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5724 @LENGTH@ 10


UPD ReturnStatement@@MethodInvocation:multiHashOrdered(parentHashCode(),10979,principal.hashCode()) @TO@ MethodInvocation:multiHashUnordered(parentHashCode(),10979,principal.hashCode()) @AT@ 2492 @LENGTH@ 71
---UPD MethodInvocation@@multiHashOrdered(parentHashCode(),10979,principal.hashCode()) @TO@ multiHashUnordered(parentHashCode(),10979,principal.hashCode()) @AT@ 2499 @LENGTH@ 63
------UPD SimpleName@@MethodName:multiHashOrdered:[parentHashCode(), 10979, principal.hashCode()] @TO@ MethodName:multiHashUnordered:[parentHashCode(), 10979, principal.hashCode()] @AT@ 2499 @LENGTH@ 63


UPD TypeDeclaration@@[public]NeverCloseHandler, [ThrottingExceptionHalfOpenHandler] @TO@ [public]NeverCloseHandler, [ThrottlingExceptionHalfOpenHandler] @AT@ 4129 @LENGTH@ 192
---UPD SimpleType@@ThrottingExceptionHalfOpenHandler @TO@ ThrottlingExceptionHalfOpenHandler @AT@ 4171 @LENGTH@ 33


UPD IfStatement@@if (ApplicationEnvironment.Mode.UBERJAR == appEnv.getMode()) {  ArtifactLookup artifactLookup=ArtifactLookup.get();  for (  String gav : appEnv.getDependencies()) {    depContainer.addAsLibraries(artifactLookup.artifact(gav));  }} else {  Set<String> paths=appEnv.resolveDependencies(Collections.EMPTY_LIST);  for (  String path : paths) {    depContainer.addAsLibraries(new File(path));  }} @TO@ if (ApplicationEnvironment.Mode.UBERJAR == appEnv.getMode()) {  ArtifactLookup artifactLookup=ArtifactLookup.get();  for (  String gav : appEnv.getDependencies()) {    depContainer.addAsLibrary(artifactLookup.artifact(gav));  }} else {  Set<String> paths=appEnv.resolveDependencies(Collections.EMPTY_LIST);  for (  String path : paths) {    if (path.endsWith(".jar")) {      depContainer.addAsLibrary(new File(path));    } else {      depContainer.merge(ShrinkWrap.create(GenericArchive.class).as(ExplodedImporter.class).importDirectory(path).as(GenericArchive.class),"/WEB-INF/classes",Filters.includeAll());    }  }} @AT@ 7096 @LENGTH@ 661
---UPD Block@@ThenBody:{  ArtifactLookup artifactLookup=ArtifactLookup.get();  for (  String gav : appEnv.getDependencies()) {    depContainer.addAsLibraries(artifactLookup.artifact(gav));  }} @TO@ ThenBody:{  ArtifactLookup artifactLookup=ArtifactLookup.get();  for (  String gav : appEnv.getDependencies()) {    depContainer.addAsLibrary(artifactLookup.artifact(gav));  }} @AT@ 7157 @LENGTH@ 304
------UPD EnhancedForStatement@@for (String gav : appEnv.getDependencies()) {  depContainer.addAsLibraries(artifactLookup.artifact(gav));} @TO@ for (String gav : appEnv.getDependencies()) {  depContainer.addAsLibrary(artifactLookup.artifact(gav));} @AT@ 7269 @LENGTH@ 166
---------UPD ExpressionStatement@@MethodInvocation:depContainer.addAsLibraries(artifactLookup.artifact(gav)) @TO@ MethodInvocation:depContainer.addAsLibrary(artifactLookup.artifact(gav)) @AT@ 7347 @LENGTH@ 58
------------UPD MethodInvocation@@depContainer.addAsLibraries(artifactLookup.artifact(gav)) @TO@ depContainer.addAsLibrary(artifactLookup.artifact(gav)) @AT@ 7347 @LENGTH@ 57
---------------UPD SimpleName@@MethodName:addAsLibraries:[artifactLookup.artifact(gav)] @TO@ MethodName:addAsLibrary:[artifactLookup.artifact(gav)] @AT@ 7360 @LENGTH@ 44
---UPD Block@@ElseBody:{  Set<String> paths=appEnv.resolveDependencies(Collections.EMPTY_LIST);  for (  String path : paths) {    depContainer.addAsLibraries(new File(path));  }} @TO@ ElseBody:{  Set<String> paths=appEnv.resolveDependencies(Collections.EMPTY_LIST);  for (  String path : paths) {    if (path.endsWith(".jar")) {      depContainer.addAsLibrary(new File(path));    } else {      depContainer.merge(ShrinkWrap.create(GenericArchive.class).as(ExplodedImporter.class).importDirectory(path).as(GenericArchive.class),"/WEB-INF/classes",Filters.includeAll());    }  }} @AT@ 7467 @LENGTH@ 290
------UPD EnhancedForStatement@@for (String path : paths) {  depContainer.addAsLibraries(new File(path));} @TO@ for (String path : paths) {  if (path.endsWith(".jar")) {    depContainer.addAsLibrary(new File(path));  } else {    depContainer.merge(ShrinkWrap.create(GenericArchive.class).as(ExplodedImporter.class).importDirectory(path).as(GenericArchive.class),"/WEB-INF/classes",Filters.includeAll());  }} @AT@ 7597 @LENGTH@ 134
---------DEL ExpressionStatement@@MethodInvocation:depContainer.addAsLibraries(new File(path)) @AT@ 7657 @LENGTH@ 44
---------INS IfStatement@@if (path.endsWith(".jar")) {  depContainer.addAsLibrary(new File(path));} else {  depContainer.merge(ShrinkWrap.create(GenericArchive.class).as(ExplodedImporter.class).importDirectory(path).as(GenericArchive.class),"/WEB-INF/classes",Filters.includeAll());} @TO@ EnhancedForStatement@@for (String path : paths) {  depContainer.addAsLibraries(new File(path));} @AT@ 7827 @LENGTH@ 722
------------INS MethodInvocation@@path.endsWith(".jar") @TO@ IfStatement@@if (path.endsWith(".jar")) {  depContainer.addAsLibrary(new File(path));} else {  depContainer.merge(ShrinkWrap.create(GenericArchive.class).as(ExplodedImporter.class).importDirectory(path).as(GenericArchive.class),"/WEB-INF/classes",Filters.includeAll());} @AT@ 7831 @LENGTH@ 21
---------------INS SimpleName@@Name:path @TO@ MethodInvocation@@path.endsWith(".jar") @AT@ 7831 @LENGTH@ 4
---------------INS SimpleName@@MethodName:endsWith:[".jar"] @TO@ MethodInvocation@@path.endsWith(".jar") @AT@ 7836 @LENGTH@ 16
------------------INS StringLiteral@@".jar" @TO@ SimpleName@@MethodName:endsWith:[".jar"] @AT@ 7845 @LENGTH@ 6
------------INS Block@@ThenBody:{  depContainer.addAsLibrary(new File(path));} @TO@ IfStatement@@if (path.endsWith(".jar")) {  depContainer.addAsLibrary(new File(path));} else {  depContainer.merge(ShrinkWrap.create(GenericArchive.class).as(ExplodedImporter.class).importDirectory(path).as(GenericArchive.class),"/WEB-INF/classes",Filters.includeAll());} @AT@ 7854 @LENGTH@ 114
---------------INS ExpressionStatement@@MethodInvocation:depContainer.addAsLibrary(new File(path)) @TO@ Block@@ThenBody:{  depContainer.addAsLibrary(new File(path));} @AT@ 7892 @LENGTH@ 42
------------------MOV MethodInvocation@@depContainer.addAsLibraries(new File(path)) @TO@ ExpressionStatement@@MethodInvocation:depContainer.addAsLibrary(new File(path)) @AT@ 7657 @LENGTH@ 43
---------------------UPD SimpleName@@MethodName:addAsLibraries:[new File(path)] @TO@ MethodName:addAsLibrary:[new File(path)] @AT@ 7670 @LENGTH@ 30
------------INS Block@@ElseBody:{  depContainer.merge(ShrinkWrap.create(GenericArchive.class).as(ExplodedImporter.class).importDirectory(path).as(GenericArchive.class),"/WEB-INF/classes",Filters.includeAll());} @TO@ IfStatement@@if (path.endsWith(".jar")) {  depContainer.addAsLibrary(new File(path));} else {  depContainer.merge(ShrinkWrap.create(GenericArchive.class).as(ExplodedImporter.class).importDirectory(path).as(GenericArchive.class),"/WEB-INF/classes",Filters.includeAll());} @AT@ 7974 @LENGTH@ 575
---------------INS ExpressionStatement@@MethodInvocation:depContainer.merge(ShrinkWrap.create(GenericArchive.class).as(ExplodedImporter.class).importDirectory(path).as(GenericArchive.class),"/WEB-INF/classes",Filters.includeAll()) @TO@ Block@@ElseBody:{  depContainer.merge(ShrinkWrap.create(GenericArchive.class).as(ExplodedImporter.class).importDirectory(path).as(GenericArchive.class),"/WEB-INF/classes",Filters.includeAll());} @AT@ 8012 @LENGTH@ 503
------------------INS MethodInvocation@@depContainer.merge(ShrinkWrap.create(GenericArchive.class).as(ExplodedImporter.class).importDirectory(path).as(GenericArchive.class),"/WEB-INF/classes",Filters.includeAll()) @TO@ ExpressionStatement@@MethodInvocation:depContainer.merge(ShrinkWrap.create(GenericArchive.class).as(ExplodedImporter.class).importDirectory(path).as(GenericArchive.class),"/WEB-INF/classes",Filters.includeAll()) @AT@ 8012 @LENGTH@ 502
---------------------INS SimpleName@@Name:depContainer @TO@ MethodInvocation@@depContainer.merge(ShrinkWrap.create(GenericArchive.class).as(ExplodedImporter.class).importDirectory(path).as(GenericArchive.class),"/WEB-INF/classes",Filters.includeAll()) @AT@ 8012 @LENGTH@ 12
---------------------INS SimpleName@@MethodName:merge:[ShrinkWrap.create(GenericArchive.class).as(ExplodedImporter.class).importDirectory(path).as(GenericArchive.class), "/WEB-INF/classes", Filters.includeAll()] @TO@ MethodInvocation@@depContainer.merge(ShrinkWrap.create(GenericArchive.class).as(ExplodedImporter.class).importDirectory(path).as(GenericArchive.class),"/WEB-INF/classes",Filters.includeAll()) @AT@ 8070 @LENGTH@ 444
------------------------INS MethodInvocation@@ShrinkWrap.create(GenericArchive.class).as(ExplodedImporter.class).importDirectory(path).as(GenericArchive.class) @TO@ SimpleName@@MethodName:merge:[ShrinkWrap.create(GenericArchive.class).as(ExplodedImporter.class).importDirectory(path).as(GenericArchive.class), "/WEB-INF/classes", Filters.includeAll()] @AT@ 8076 @LENGTH@ 293
---------------------------INS MethodInvocation@@MethodName:importDirectory:[path] @TO@ MethodInvocation@@ShrinkWrap.create(GenericArchive.class).as(ExplodedImporter.class).importDirectory(path).as(GenericArchive.class) @AT@ 8076 @LENGTH@ 208
------------------------------INS SimpleName@@path @TO@ MethodInvocation@@MethodName:importDirectory:[path] @AT@ 8279 @LENGTH@ 4
---------------------------INS MethodInvocation@@MethodName:as:[ExplodedImporter.class] @TO@ MethodInvocation@@ShrinkWrap.create(GenericArchive.class).as(ExplodedImporter.class).importDirectory(path).as(GenericArchive.class) @AT@ 8076 @LENGTH@ 126
------------------------------INS TypeLiteral@@ExplodedImporter.class @TO@ MethodInvocation@@MethodName:as:[ExplodedImporter.class] @AT@ 8179 @LENGTH@ 22
---------------------------INS MethodInvocation@@MethodName:create:[GenericArchive.class] @TO@ MethodInvocation@@ShrinkWrap.create(GenericArchive.class).as(ExplodedImporter.class).importDirectory(path).as(GenericArchive.class) @AT@ 8076 @LENGTH@ 39
------------------------------INS TypeLiteral@@GenericArchive.class @TO@ MethodInvocation@@MethodName:create:[GenericArchive.class] @AT@ 8094 @LENGTH@ 20
---------------------------INS SimpleName@@Name:ShrinkWrap @TO@ MethodInvocation@@ShrinkWrap.create(GenericArchive.class).as(ExplodedImporter.class).importDirectory(path).as(GenericArchive.class) @AT@ 8076 @LENGTH@ 10
---------------------------INS SimpleName@@MethodName:as:[GenericArchive.class] @TO@ MethodInvocation@@ShrinkWrap.create(GenericArchive.class).as(ExplodedImporter.class).importDirectory(path).as(GenericArchive.class) @AT@ 8345 @LENGTH@ 24
------------------------------INS TypeLiteral@@GenericArchive.class @TO@ SimpleName@@MethodName:as:[GenericArchive.class] @AT@ 8348 @LENGTH@ 20
------------------------INS StringLiteral@@"/WEB-INF/classes" @TO@ SimpleName@@MethodName:merge:[ShrinkWrap.create(GenericArchive.class).as(ExplodedImporter.class).importDirectory(path).as(GenericArchive.class), "/WEB-INF/classes", Filters.includeAll()] @AT@ 8422 @LENGTH@ 18
------------------------INS MethodInvocation@@Filters.includeAll() @TO@ SimpleName@@MethodName:merge:[ShrinkWrap.create(GenericArchive.class).as(ExplodedImporter.class).importDirectory(path).as(GenericArchive.class), "/WEB-INF/classes", Filters.includeAll()] @AT@ 8493 @LENGTH@ 20
---------------------------INS SimpleName@@Name:Filters @TO@ MethodInvocation@@Filters.includeAll() @AT@ 8493 @LENGTH@ 7
---------------------------INS SimpleName@@MethodName:includeAll:[] @TO@ MethodInvocation@@Filters.includeAll() @AT@ 8501 @LENGTH@ 12


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<FreemarkerComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<FreemarkerComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5497 @LENGTH@ 343
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 5501 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5501 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  ComponentCustomizer<FreemarkerComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ ThenBody:{  for (  ComponentCustomizer<FreemarkerComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5557 @LENGTH@ 283
------UPD EnhancedForStatement@@for (ComponentCustomizer<FreemarkerComponent> configurer : customizers) {  LOGGER.debug("Configure component {}, with configurer {}",component,configurer);  configurer.customize(component);} @TO@ for (ComponentCustomizer<FreemarkerComponent> customizer : customizers) {  LOGGER.debug("Configure component {}, with customizer {}",component,customizer);  customizer.customize(component);} @AT@ 5571 @LENGTH@ 259
---------UPD SingleVariableDeclaration@@ComponentCustomizer<FreemarkerComponent> configurer @TO@ ComponentCustomizer<FreemarkerComponent> customizer @AT@ 5576 @LENGTH@ 51
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5617 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5661 @LENGTH@ 106
------------UPD MethodInvocation@@LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5661 @LENGTH@ 105
---------------UPD SimpleName@@MethodName:debug:["Configure component {}, with configurer {}", component, configurer] @TO@ MethodName:debug:["Configure component {}, with customizer {}", component, customizer] @AT@ 5668 @LENGTH@ 98
------------------UPD StringLiteral@@"Configure component {}, with configurer {}" @TO@ "Configure component {}, with customizer {}" @AT@ 5674 @LENGTH@ 44
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5755 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(component) @TO@ MethodInvocation:customizer.customize(component) @AT@ 5784 @LENGTH@ 32
------------UPD MethodInvocation@@configurer.customize(component) @TO@ customizer.customize(component) @AT@ 5784 @LENGTH@ 31
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5784 @LENGTH@ 10


UPD ExpressionStatement@@MethodInvocation:fail("IllegalArgumentException excepted") @TO@ MethodInvocation:fail("IllegalArgumentException expected") @AT@ 34324 @LENGTH@ 42
---UPD MethodInvocation@@fail("IllegalArgumentException excepted") @TO@ fail("IllegalArgumentException expected") @AT@ 34324 @LENGTH@ 41
------UPD SimpleName@@MethodName:fail:["IllegalArgumentException excepted"] @TO@ MethodName:fail:["IllegalArgumentException expected"] @AT@ 34324 @LENGTH@ 41
---------UPD StringLiteral@@"IllegalArgumentException excepted" @TO@ "IllegalArgumentException expected" @AT@ 34329 @LENGTH@ 35


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled(); @AT@ 5277 @LENGTH@ 160
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5285 @LENGTH@ 151
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5285 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5302 @LENGTH@ 134
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 5302 @LENGTH@ 64
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5302 @LENGTH@ 35
---------UPD MethodInvocation@@componentConfiguration.getConfigurer().isEnabled() @TO@ componentConfiguration.getCustomizer().isEnabled() @AT@ 5386 @LENGTH@ 50
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5386 @LENGTH@ 38


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled(); @AT@ 5281 @LENGTH@ 160
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5289 @LENGTH@ 151
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5289 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5306 @LENGTH@ 134
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 5306 @LENGTH@ 64
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5306 @LENGTH@ 35
---------UPD MethodInvocation@@componentConfiguration.getConfigurer().isEnabled() @TO@ componentConfiguration.getCustomizer().isEnabled() @AT@ 5390 @LENGTH@ 50
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5390 @LENGTH@ 38


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  LanguageCustomizer<ConstantLanguage> configurer : customizers) {    LOGGER.debug("Configure language {}, with configurer {}",language,configurer);    configurer.customize(language);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  LanguageCustomizer<ConstantLanguage> customizer : customizers) {    LOGGER.debug("Configure language {}, with customizer {}",language,customizer);    customizer.customize(language);  }} @AT@ 4761 @LENGTH@ 336
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 4765 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 4765 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  LanguageCustomizer<ConstantLanguage> configurer : customizers) {    LOGGER.debug("Configure language {}, with configurer {}",language,configurer);    configurer.customize(language);  }} @TO@ ThenBody:{  for (  LanguageCustomizer<ConstantLanguage> customizer : customizers) {    LOGGER.debug("Configure language {}, with customizer {}",language,customizer);    customizer.customize(language);  }} @AT@ 4821 @LENGTH@ 276
------UPD EnhancedForStatement@@for (LanguageCustomizer<ConstantLanguage> configurer : customizers) {  LOGGER.debug("Configure language {}, with configurer {}",language,configurer);  configurer.customize(language);} @TO@ for (LanguageCustomizer<ConstantLanguage> customizer : customizers) {  LOGGER.debug("Configure language {}, with customizer {}",language,customizer);  customizer.customize(language);} @AT@ 4835 @LENGTH@ 252
---------UPD SingleVariableDeclaration@@LanguageCustomizer<ConstantLanguage> configurer @TO@ LanguageCustomizer<ConstantLanguage> customizer @AT@ 4840 @LENGTH@ 47
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 4877 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure language {}, with configurer {}",language,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure language {}, with customizer {}",language,customizer) @AT@ 4921 @LENGTH@ 104
------------UPD MethodInvocation@@LOGGER.debug("Configure language {}, with configurer {}",language,configurer) @TO@ LOGGER.debug("Configure language {}, with customizer {}",language,customizer) @AT@ 4921 @LENGTH@ 103
---------------UPD SimpleName@@MethodName:debug:["Configure language {}, with configurer {}", language, configurer] @TO@ MethodName:debug:["Configure language {}, with customizer {}", language, customizer] @AT@ 4928 @LENGTH@ 96
------------------UPD StringLiteral@@"Configure language {}, with configurer {}" @TO@ "Configure language {}, with customizer {}" @AT@ 4934 @LENGTH@ 43
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5013 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(language) @TO@ MethodInvocation:customizer.customize(language) @AT@ 5042 @LENGTH@ 31
------------UPD MethodInvocation@@configurer.customize(language) @TO@ customizer.customize(language) @AT@ 5042 @LENGTH@ 30
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5042 @LENGTH@ 10


DEL MethodDeclaration@@public, voidMethodName:HiveSessionImplwithUGI, TProtocolVersion protocol, String username, String password, HiveConf hiveConf, String ipAddress, String delegationToken, HiveSQLException,  @AT@ 2099 @LENGTH@ 269
---DEL Modifier@@public @AT@ 2099 @LENGTH@ 6
---DEL SimpleName@@MethodName:HiveSessionImplwithUGI @AT@ 2106 @LENGTH@ 22
---DEL SingleVariableDeclaration@@TProtocolVersion protocol @AT@ 2129 @LENGTH@ 25
------DEL SimpleType@@TProtocolVersion @AT@ 2129 @LENGTH@ 16
------DEL SimpleName@@protocol @AT@ 2146 @LENGTH@ 8
---DEL SingleVariableDeclaration@@String username @AT@ 2156 @LENGTH@ 15
------DEL SimpleType@@String @AT@ 2156 @LENGTH@ 6
------DEL SimpleName@@username @AT@ 2163 @LENGTH@ 8
---DEL SingleVariableDeclaration@@String password @AT@ 2177 @LENGTH@ 15
------DEL SimpleType@@String @AT@ 2177 @LENGTH@ 6
------DEL SimpleName@@password @AT@ 2184 @LENGTH@ 8
---DEL SingleVariableDeclaration@@HiveConf hiveConf @AT@ 2194 @LENGTH@ 17
------DEL SimpleType@@HiveConf @AT@ 2194 @LENGTH@ 8
------DEL SimpleName@@hiveConf @AT@ 2203 @LENGTH@ 8
---DEL SingleVariableDeclaration@@String ipAddress @AT@ 2213 @LENGTH@ 16
------DEL SimpleType@@String @AT@ 2213 @LENGTH@ 6
------DEL SimpleName@@ipAddress @AT@ 2220 @LENGTH@ 9
---DEL SingleVariableDeclaration@@String delegationToken @AT@ 2231 @LENGTH@ 22
------DEL SimpleType@@String @AT@ 2231 @LENGTH@ 6
------DEL SimpleName@@delegationToken @AT@ 2238 @LENGTH@ 15
---DEL SimpleType@@HiveSQLException @AT@ 2262 @LENGTH@ 16
---DEL ConstructorInvocation@@this(null,protocol,username,password,hiveConf,ipAddress,delegationToken); @AT@ 2285 @LENGTH@ 79
------DEL NullLiteral@@null @AT@ 2290 @LENGTH@ 4
------DEL SimpleName@@protocol @AT@ 2296 @LENGTH@ 8
------DEL SimpleName@@username @AT@ 2306 @LENGTH@ 8
------DEL SimpleName@@password @AT@ 2316 @LENGTH@ 8
------DEL SimpleName@@hiveConf @AT@ 2326 @LENGTH@ 8
------DEL SimpleName@@ipAddress @AT@ 2336 @LENGTH@ 9
------DEL SimpleName@@delegationToken @AT@ 2347 @LENGTH@ 15


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled(); @AT@ 5283 @LENGTH@ 160
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5291 @LENGTH@ 151
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5291 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5308 @LENGTH@ 134
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 5308 @LENGTH@ 64
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5308 @LENGTH@ 35
---------UPD MethodInvocation@@componentConfiguration.getConfigurer().isEnabled() @TO@ componentConfiguration.getCustomizer().isEnabled() @AT@ 5392 @LENGTH@ 50
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5392 @LENGTH@ 38


INS VariableDeclarationStatement@@ResolvableType owner=contextClass == null ? null : ResolvableType.forClass(contextClass); @TO@ MethodDeclaration@@public, boolean, MethodName:canRead, Type type, Class<?> contextClass, MediaType mediaType,  @AT@ 4361 @LENGTH@ 91
---INS SimpleType@@ResolvableType @TO@ VariableDeclarationStatement@@ResolvableType owner=contextClass == null ? null : ResolvableType.forClass(contextClass); @AT@ 4361 @LENGTH@ 14
---INS VariableDeclarationFragment@@owner=contextClass == null ? null : ResolvableType.forClass(contextClass) @TO@ VariableDeclarationStatement@@ResolvableType owner=contextClass == null ? null : ResolvableType.forClass(contextClass); @AT@ 4376 @LENGTH@ 75
------INS SimpleName@@owner @TO@ VariableDeclarationFragment@@owner=contextClass == null ? null : ResolvableType.forClass(contextClass) @AT@ 4376 @LENGTH@ 5
------INS ConditionalExpression@@contextClass == null ? null : ResolvableType.forClass(contextClass) @TO@ VariableDeclarationFragment@@owner=contextClass == null ? null : ResolvableType.forClass(contextClass) @AT@ 4384 @LENGTH@ 67
---------INS InfixExpression@@contextClass == null @TO@ ConditionalExpression@@contextClass == null ? null : ResolvableType.forClass(contextClass) @AT@ 4384 @LENGTH@ 20
------------INS SimpleName@@contextClass @TO@ InfixExpression@@contextClass == null @AT@ 4384 @LENGTH@ 12
------------INS Operator@@== @TO@ InfixExpression@@contextClass == null @AT@ 4396 @LENGTH@ 2
------------INS NullLiteral@@null @TO@ InfixExpression@@contextClass == null @AT@ 4400 @LENGTH@ 4
---------INS NullLiteral@@null @TO@ ConditionalExpression@@contextClass == null ? null : ResolvableType.forClass(contextClass) @AT@ 4407 @LENGTH@ 4
---------INS MethodInvocation@@ResolvableType.forClass(contextClass) @TO@ ConditionalExpression@@contextClass == null ? null : ResolvableType.forClass(contextClass) @AT@ 4414 @LENGTH@ 37
------------INS SimpleName@@Name:ResolvableType @TO@ MethodInvocation@@ResolvableType.forClass(contextClass) @AT@ 4414 @LENGTH@ 14
------------INS SimpleName@@MethodName:forClass:[contextClass] @TO@ MethodInvocation@@ResolvableType.forClass(contextClass) @AT@ 4429 @LENGTH@ 22
---------------INS SimpleName@@contextClass @TO@ SimpleName@@MethodName:forClass:[contextClass] @AT@ 4438 @LENGTH@ 12


INS MethodDeclaration@@User, MethodName:findOneWithMultipleSubGraphsUsingNamedEntityGraphById, Integer id,  @TO@ TypeDeclaration@@[public]RepositoryMethodsWithEntityGraphConfigRepository, [CrudRepository<User,Integer>, QueryDslPredicateExecutor<User>] @AT@ 2238 @LENGTH@ 66
---INS SimpleType@@User @TO@ MethodDeclaration@@User, MethodName:findOneWithMultipleSubGraphsUsingNamedEntityGraphById, Integer id,  @AT@ 2233 @LENGTH@ 4
---INS SimpleName@@MethodName:findOneWithMultipleSubGraphsUsingNamedEntityGraphById @TO@ MethodDeclaration@@User, MethodName:findOneWithMultipleSubGraphsUsingNamedEntityGraphById, Integer id,  @AT@ 2238 @LENGTH@ 53
---INS SingleVariableDeclaration@@Integer id @TO@ MethodDeclaration@@User, MethodName:findOneWithMultipleSubGraphsUsingNamedEntityGraphById, Integer id,  @AT@ 2292 @LENGTH@ 10
------INS SimpleType@@Integer @TO@ SingleVariableDeclaration@@Integer id @AT@ 2292 @LENGTH@ 7
------INS SimpleName@@id @TO@ SingleVariableDeclaration@@Integer id @AT@ 2300 @LENGTH@ 2


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && dataformatConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && dataformatConfiguration.getCustomizer().isEnabled(); @AT@ 5163 @LENGTH@ 177
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && dataformatConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && dataformatConfiguration.getCustomizer().isEnabled() @AT@ 5171 @LENGTH@ 168
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5171 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && dataformatConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && dataformatConfiguration.getCustomizer().isEnabled() @AT@ 5188 @LENGTH@ 151
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 5188 @LENGTH@ 72
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5188 @LENGTH@ 35
---------UPD MethodInvocation@@dataformatConfiguration.getConfigurer().isEnabled() @TO@ dataformatConfiguration.getCustomizer().isEnabled() @AT@ 5288 @LENGTH@ 51
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5288 @LENGTH@ 39


UPD ForStatement@@for (int i=0; methodParams.size() < i; i++) {  if (!methodParams.get(i).getJavaType().getSimpleTypeName().equals(parameterTypes[i])) {    sameParameterTypes=false;    break;  }} @TO@ for (int i=0; i < methodParams.size(); i++) {  if (!methodParams.get(i).getJavaType().getSimpleTypeName().equals(parameterTypes[i])) {    sameParameterTypes=false;    break;  }} @AT@ 24384 @LENGTH@ 236
---UPD InfixExpression@@methodParams.size() < i @TO@ i < methodParams.size() @AT@ 24400 @LENGTH@ 23
------INS SimpleName@@i @TO@ InfixExpression@@methodParams.size() < i @AT@ 24401 @LENGTH@ 1
------INS Operator@@< @TO@ InfixExpression@@methodParams.size() < i @AT@ 24402 @LENGTH@ 1
------DEL Operator@@< @AT@ 24419 @LENGTH@ 1
------DEL SimpleName@@i @AT@ 24422 @LENGTH@ 1


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<GoogleMailComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<GoogleMailComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5501 @LENGTH@ 343
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 5505 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5505 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  ComponentCustomizer<GoogleMailComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ ThenBody:{  for (  ComponentCustomizer<GoogleMailComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5561 @LENGTH@ 283
------UPD EnhancedForStatement@@for (ComponentCustomizer<GoogleMailComponent> configurer : customizers) {  LOGGER.debug("Configure component {}, with configurer {}",component,configurer);  configurer.customize(component);} @TO@ for (ComponentCustomizer<GoogleMailComponent> customizer : customizers) {  LOGGER.debug("Configure component {}, with customizer {}",component,customizer);  customizer.customize(component);} @AT@ 5575 @LENGTH@ 259
---------UPD SingleVariableDeclaration@@ComponentCustomizer<GoogleMailComponent> configurer @TO@ ComponentCustomizer<GoogleMailComponent> customizer @AT@ 5580 @LENGTH@ 51
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5621 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5665 @LENGTH@ 106
------------UPD MethodInvocation@@LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5665 @LENGTH@ 105
---------------UPD SimpleName@@MethodName:debug:["Configure component {}, with configurer {}", component, configurer] @TO@ MethodName:debug:["Configure component {}, with customizer {}", component, customizer] @AT@ 5672 @LENGTH@ 98
------------------UPD StringLiteral@@"Configure component {}, with configurer {}" @TO@ "Configure component {}, with customizer {}" @AT@ 5678 @LENGTH@ 44
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5759 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(component) @TO@ MethodInvocation:customizer.customize(component) @AT@ 5788 @LENGTH@ 32
------------UPD MethodInvocation@@configurer.customize(component) @TO@ customizer.customize(component) @AT@ 5788 @LENGTH@ 31
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5788 @LENGTH@ 10


UPD FieldDeclaration@@public, static, String, [HIVE_LIST_BUCKETING_DEFAULT_DIR_NAME="HIVE_DEFAULT_LIST_BUCKETING_DIR_NAME"] @TO@ public, static, final, String, [HIVE_LIST_BUCKETING_DEFAULT_DIR_NAME="HIVE_DEFAULT_LIST_BUCKETING_DIR_NAME"] @AT@ 1594 @LENGTH@ 105
---INS Modifier@@final @TO@ FieldDeclaration@@public, static, String, [HIVE_LIST_BUCKETING_DEFAULT_DIR_NAME="HIVE_DEFAULT_LIST_BUCKETING_DIR_NAME"] @AT@ 1608 @LENGTH@ 5


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<TelegramComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<TelegramComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5463 @LENGTH@ 341
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 5467 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5467 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  ComponentCustomizer<TelegramComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ ThenBody:{  for (  ComponentCustomizer<TelegramComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5523 @LENGTH@ 281
------UPD EnhancedForStatement@@for (ComponentCustomizer<TelegramComponent> configurer : customizers) {  LOGGER.debug("Configure component {}, with configurer {}",component,configurer);  configurer.customize(component);} @TO@ for (ComponentCustomizer<TelegramComponent> customizer : customizers) {  LOGGER.debug("Configure component {}, with customizer {}",component,customizer);  customizer.customize(component);} @AT@ 5537 @LENGTH@ 257
---------UPD SingleVariableDeclaration@@ComponentCustomizer<TelegramComponent> configurer @TO@ ComponentCustomizer<TelegramComponent> customizer @AT@ 5542 @LENGTH@ 49
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5581 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5625 @LENGTH@ 106
------------UPD MethodInvocation@@LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5625 @LENGTH@ 105
---------------UPD SimpleName@@MethodName:debug:["Configure component {}, with configurer {}", component, configurer] @TO@ MethodName:debug:["Configure component {}, with customizer {}", component, customizer] @AT@ 5632 @LENGTH@ 98
------------------UPD StringLiteral@@"Configure component {}, with configurer {}" @TO@ "Configure component {}, with customizer {}" @AT@ 5638 @LENGTH@ 44
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5719 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(component) @TO@ MethodInvocation:customizer.customize(component) @AT@ 5748 @LENGTH@ 32
------------UPD MethodInvocation@@configurer.customize(component) @TO@ customizer.customize(component) @AT@ 5748 @LENGTH@ 31
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5748 @LENGTH@ 10


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled(); @AT@ 5226 @LENGTH@ 160
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5234 @LENGTH@ 151
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5234 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5251 @LENGTH@ 134
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 5251 @LENGTH@ 64
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5251 @LENGTH@ 35
---------UPD MethodInvocation@@componentConfiguration.getConfigurer().isEnabled() @TO@ componentConfiguration.getCustomizer().isEnabled() @AT@ 5335 @LENGTH@ 50
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5335 @LENGTH@ 38


UPD ExpressionStatement@@MethodInvocation:LOG.debug("Added property name: " + name + " value: "+ value.toString()) @TO@ MethodInvocation:LOG.debug("Added property name: " + name + " value: "+ value) @AT@ 4551 @LENGTH@ 74
---UPD MethodInvocation@@LOG.debug("Added property name: " + name + " value: "+ value.toString()) @TO@ LOG.debug("Added property name: " + name + " value: "+ value) @AT@ 4551 @LENGTH@ 73
------UPD SimpleName@@MethodName:debug:["Added property name: " + name + " value: "+ value.toString()] @TO@ MethodName:debug:["Added property name: " + name + " value: "+ value] @AT@ 4555 @LENGTH@ 69
---------UPD InfixExpression@@"Added property name: " + name + " value: "+ value.toString() @TO@ "Added property name: " + name + " value: "+ value @AT@ 4561 @LENGTH@ 62
------------INS SimpleName@@value @TO@ InfixExpression@@"Added property name: " + name + " value: "+ value.toString() @AT@ 4596 @LENGTH@ 5
------------DEL MethodInvocation@@value.toString() @AT@ 4607 @LENGTH@ 16
---------------DEL SimpleName@@Name:value @AT@ 4607 @LENGTH@ 5
---------------DEL SimpleName@@MethodName:toString:[] @AT@ 4613 @LENGTH@ 10


UPD VariableDeclarationStatement@@Collection<ArtifactSpec> resolvedTransientDependencies=Collections.EMPTY_SET; @TO@ Collection<ArtifactSpec> resolvedTransientDependencies=Collections.emptySet(); @AT@ 6724 @LENGTH@ 79
---UPD VariableDeclarationFragment@@resolvedTransientDependencies=Collections.EMPTY_SET @TO@ resolvedTransientDependencies=Collections.emptySet() @AT@ 6749 @LENGTH@ 53
------INS MethodInvocation@@Collections.emptySet() @TO@ VariableDeclarationFragment@@resolvedTransientDependencies=Collections.EMPTY_SET @AT@ 6781 @LENGTH@ 22
---------INS SimpleName@@Name:Collections @TO@ MethodInvocation@@Collections.emptySet() @AT@ 6781 @LENGTH@ 11
---------INS SimpleName@@MethodName:emptySet:[] @TO@ MethodInvocation@@Collections.emptySet() @AT@ 6793 @LENGTH@ 10
------DEL QualifiedName@@Collections.EMPTY_SET @AT@ 6781 @LENGTH@ 21
---------DEL SimpleName@@Collections @AT@ 6781 @LENGTH@ 11
---------DEL SimpleName@@EMPTY_SET @AT@ 6793 @LENGTH@ 9


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled(); @AT@ 5225 @LENGTH@ 160
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5233 @LENGTH@ 151
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5233 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5250 @LENGTH@ 134
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 5250 @LENGTH@ 64
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5250 @LENGTH@ 35
---------UPD MethodInvocation@@componentConfiguration.getConfigurer().isEnabled() @TO@ componentConfiguration.getCustomizer().isEnabled() @AT@ 5334 @LENGTH@ 50
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5334 @LENGTH@ 38


INS IfStatement@@if (url == null) {  return false;} @TO@ MethodDeclaration@@public, static, boolean, MethodName:isAbsoluteUrl, String url,  @AT@ 4216 @LENGTH@ 38
---INS InfixExpression@@url == null @TO@ IfStatement@@if (url == null) {  return false;} @AT@ 4219 @LENGTH@ 11
------INS SimpleName@@url @TO@ InfixExpression@@url == null @AT@ 4219 @LENGTH@ 3
------INS Operator@@== @TO@ InfixExpression@@url == null @AT@ 4222 @LENGTH@ 2
------INS NullLiteral@@null @TO@ InfixExpression@@url == null @AT@ 4226 @LENGTH@ 4
---INS Block@@ThenBody:{  return false;} @TO@ IfStatement@@if (url == null) {  return false;} @AT@ 4232 @LENGTH@ 22
------INS ReturnStatement@@BooleanLiteral:false @TO@ Block@@ThenBody:{  return false;} @AT@ 4237 @LENGTH@ 13
---------INS BooleanLiteral@@false @TO@ ReturnStatement@@BooleanLiteral:false @AT@ 4244 @LENGTH@ 5


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled(); @AT@ 5483 @LENGTH@ 160
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5491 @LENGTH@ 151
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5491 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5508 @LENGTH@ 134
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 5508 @LENGTH@ 64
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5508 @LENGTH@ 35
---------UPD MethodInvocation@@componentConfiguration.getConfigurer().isEnabled() @TO@ componentConfiguration.getCustomizer().isEnabled() @AT@ 5592 @LENGTH@ 50
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5592 @LENGTH@ 38


INS IfStatement@@if (!Boolean.TRUE.equals(map.get("active"))) {  logger.debug("check_token returned active attribute: " + map.get("active"));  throw new InvalidTokenException(accessToken);} @TO@ MethodDeclaration@@public, OAuth2Authentication, MethodName:loadAuthentication, String accessToken, AuthenticationException, InvalidTokenException,  @AT@ 4042 @LENGTH@ 179
---INS PrefixExpression@@!Boolean.TRUE.equals(map.get("active")) @TO@ IfStatement@@if (!Boolean.TRUE.equals(map.get("active"))) {  logger.debug("check_token returned active attribute: " + map.get("active"));  throw new InvalidTokenException(accessToken);} @AT@ 4046 @LENGTH@ 39
------INS Operator@@! @TO@ PrefixExpression@@!Boolean.TRUE.equals(map.get("active")) @AT@ 4046 @LENGTH@ 1
------INS MethodInvocation@@Boolean.TRUE.equals(map.get("active")) @TO@ PrefixExpression@@!Boolean.TRUE.equals(map.get("active")) @AT@ 4047 @LENGTH@ 38
---------INS QualifiedName@@Name:Boolean.TRUE @TO@ MethodInvocation@@Boolean.TRUE.equals(map.get("active")) @AT@ 4047 @LENGTH@ 12
---------INS SimpleName@@MethodName:equals:[map.get("active")] @TO@ MethodInvocation@@Boolean.TRUE.equals(map.get("active")) @AT@ 4060 @LENGTH@ 25
------------INS MethodInvocation@@map.get("active") @TO@ SimpleName@@MethodName:equals:[map.get("active")] @AT@ 4067 @LENGTH@ 17
---------------INS SimpleName@@Name:map @TO@ MethodInvocation@@map.get("active") @AT@ 4067 @LENGTH@ 3
---------------INS SimpleName@@MethodName:get:["active"] @TO@ MethodInvocation@@map.get("active") @AT@ 4071 @LENGTH@ 13
------------------INS StringLiteral@@"active" @TO@ SimpleName@@MethodName:get:["active"] @AT@ 4075 @LENGTH@ 8
---INS Block@@ThenBody:{  logger.debug("check_token returned active attribute: " + map.get("active"));  throw new InvalidTokenException(accessToken);} @TO@ IfStatement@@if (!Boolean.TRUE.equals(map.get("active"))) {  logger.debug("check_token returned active attribute: " + map.get("active"));  throw new InvalidTokenException(accessToken);} @AT@ 4087 @LENGTH@ 134
------INS ExpressionStatement@@MethodInvocation:logger.debug("check_token returned active attribute: " + map.get("active")) @TO@ Block@@ThenBody:{  logger.debug("check_token returned active attribute: " + map.get("active"));  throw new InvalidTokenException(accessToken);} @AT@ 4092 @LENGTH@ 76
---------MOV MethodInvocation@@Assert.state(map.containsKey("client_id"),"Client id must be present in response from auth server") @TO@ ExpressionStatement@@MethodInvocation:logger.debug("check_token returned active attribute: " + map.get("active")) @AT@ 4070 @LENGTH@ 100
------------UPD SimpleName@@Name:Assert @TO@ Name:logger @AT@ 4070 @LENGTH@ 6
------------UPD SimpleName@@MethodName:state:[map.containsKey("client_id"), "Client id must be present in response from auth server"] @TO@ MethodName:debug:["check_token returned active attribute: " + map.get("active")] @AT@ 4077 @LENGTH@ 93
---------------DEL MethodInvocation@@map.containsKey("client_id") @AT@ 4083 @LENGTH@ 28
---------------INS InfixExpression@@"check_token returned active attribute: " + map.get("active") @TO@ SimpleName@@MethodName:state:[map.containsKey("client_id"), "Client id must be present in response from auth server"] @AT@ 4105 @LENGTH@ 61
------------------INS StringLiteral@@"check_token returned active attribute: " @TO@ InfixExpression@@"check_token returned active attribute: " + map.get("active") @AT@ 4105 @LENGTH@ 41
------------------INS Operator@@+ @TO@ InfixExpression@@"check_token returned active attribute: " + map.get("active") @AT@ 4146 @LENGTH@ 1
------------------INS MethodInvocation@@map.get("active") @TO@ InfixExpression@@"check_token returned active attribute: " + map.get("active") @AT@ 4149 @LENGTH@ 17
---------------------MOV SimpleName@@Name:map @TO@ MethodInvocation@@map.get("active") @AT@ 4083 @LENGTH@ 3
---------------------MOV SimpleName@@Name:map @TO@ MethodInvocation@@map.get("active") @AT@ 4083 @LENGTH@ 3
---------------------MOV SimpleName@@MethodName:containsKey:["client_id"] @TO@ MethodInvocation@@map.get("active") @AT@ 4087 @LENGTH@ 24
------------------------UPD StringLiteral@@"client_id" @TO@ "active" @AT@ 4099 @LENGTH@ 11
---------------------MOV SimpleName@@MethodName:containsKey:["client_id"] @TO@ MethodInvocation@@map.get("active") @AT@ 4087 @LENGTH@ 24
------------------------UPD StringLiteral@@"client_id" @TO@ "active" @AT@ 4099 @LENGTH@ 11
---------------DEL StringLiteral@@"Client id must be present in response from auth server" @AT@ 4113 @LENGTH@ 56
------INS ThrowStatement@@ClassInstanceCreation:new InvalidTokenException(accessToken) @TO@ Block@@ThenBody:{  logger.debug("check_token returned active attribute: " + map.get("active"));  throw new InvalidTokenException(accessToken);} @AT@ 4172 @LENGTH@ 45
---------INS ClassInstanceCreation@@InvalidTokenException[accessToken] @TO@ ThrowStatement@@ClassInstanceCreation:new InvalidTokenException(accessToken) @AT@ 4178 @LENGTH@ 38
------------INS New@@new @TO@ ClassInstanceCreation@@InvalidTokenException[accessToken] @AT@ 4178 @LENGTH@ 3
------------INS SimpleType@@InvalidTokenException @TO@ ClassInstanceCreation@@InvalidTokenException[accessToken] @AT@ 4182 @LENGTH@ 21
------------INS SimpleName@@accessToken @TO@ ClassInstanceCreation@@InvalidTokenException[accessToken] @AT@ 4204 @LENGTH@ 11


UPD SwitchStatement@@switch (tailLen) {case 1:  k=orBytes(tail[0],data[0],data[1],data[2]);break;case 2:k=orBytes(tail[0],tail[1],data[0],data[1]);break;case 3:k=orBytes(tail[0],tail[1],tail[2],data[0]);break;default :throw new AssertionError(tailLen);} @TO@ switch (tailLen) {case 1:  k=orBytes(tail[0],data[offset],data[offset + 1],data[offset + 2]);break;case 2:k=orBytes(tail[0],tail[1],data[offset],data[offset + 1]);break;case 3:k=orBytes(tail[0],tail[1],tail[2],data[offset]);break;default :throw new AssertionError(tailLen);} @AT@ 10565 @LENGTH@ 356
---UPD ExpressionStatement@@Assignment:k=orBytes(tail[0],data[0],data[1],data[2]) @TO@ Assignment:k=orBytes(tail[0],data[offset],data[offset + 1],data[offset + 2]) @AT@ 10610 @LENGTH@ 48
------UPD Assignment@@k=orBytes(tail[0],data[0],data[1],data[2]) @TO@ k=orBytes(tail[0],data[offset],data[offset + 1],data[offset + 2]) @AT@ 10610 @LENGTH@ 47
---------UPD MethodInvocation@@orBytes(tail[0],data[0],data[1],data[2]) @TO@ orBytes(tail[0],data[offset],data[offset + 1],data[offset + 2]) @AT@ 10614 @LENGTH@ 43
------------UPD SimpleName@@MethodName:orBytes:[tail[0], data[0], data[1], data[2]] @TO@ MethodName:orBytes:[tail[0], data[offset], data[offset + 1], data[offset + 2]] @AT@ 10614 @LENGTH@ 43
---------------UPD ArrayAccess@@data[0] @TO@ data[offset] @AT@ 10631 @LENGTH@ 7
------------------INS SimpleName@@offset @TO@ ArrayAccess@@data[0] @AT@ 10635 @LENGTH@ 6
------------------DEL NumberLiteral@@0 @AT@ 10636 @LENGTH@ 1
---------------UPD ArrayAccess@@data[1] @TO@ data[offset + 1] @AT@ 10640 @LENGTH@ 7
------------------DEL NumberLiteral@@1 @AT@ 10645 @LENGTH@ 1
------------------INS InfixExpression@@offset + 1 @TO@ ArrayAccess@@data[1] @AT@ 10649 @LENGTH@ 10
---------------------INS SimpleName@@offset @TO@ InfixExpression@@offset + 1 @AT@ 10649 @LENGTH@ 6
---------------------INS Operator@@+ @TO@ InfixExpression@@offset + 1 @AT@ 10655 @LENGTH@ 1
---------------------INS NumberLiteral@@1 @TO@ InfixExpression@@offset + 1 @AT@ 10658 @LENGTH@ 1
---------------UPD ArrayAccess@@data[2] @TO@ data[offset + 2] @AT@ 10649 @LENGTH@ 7
------------------DEL NumberLiteral@@2 @AT@ 10654 @LENGTH@ 1
------------------INS InfixExpression@@offset + 2 @TO@ ArrayAccess@@data[2] @AT@ 10667 @LENGTH@ 10
---------------------INS SimpleName@@offset @TO@ InfixExpression@@offset + 2 @AT@ 10667 @LENGTH@ 6
---------------------INS Operator@@+ @TO@ InfixExpression@@offset + 2 @AT@ 10673 @LENGTH@ 1
---------------------INS NumberLiteral@@2 @TO@ InfixExpression@@offset + 2 @AT@ 10676 @LENGTH@ 1
---UPD ExpressionStatement@@Assignment:k=orBytes(tail[0],tail[1],data[0],data[1]) @TO@ Assignment:k=orBytes(tail[0],tail[1],data[offset],data[offset + 1]) @AT@ 10702 @LENGTH@ 48
------UPD Assignment@@k=orBytes(tail[0],tail[1],data[0],data[1]) @TO@ k=orBytes(tail[0],tail[1],data[offset],data[offset + 1]) @AT@ 10702 @LENGTH@ 47
---------UPD MethodInvocation@@orBytes(tail[0],tail[1],data[0],data[1]) @TO@ orBytes(tail[0],tail[1],data[offset],data[offset + 1]) @AT@ 10706 @LENGTH@ 43
------------UPD SimpleName@@MethodName:orBytes:[tail[0], tail[1], data[0], data[1]] @TO@ MethodName:orBytes:[tail[0], tail[1], data[offset], data[offset + 1]] @AT@ 10706 @LENGTH@ 43
---------------UPD ArrayAccess@@data[0] @TO@ data[offset] @AT@ 10732 @LENGTH@ 7
------------------DEL NumberLiteral@@0 @AT@ 10737 @LENGTH@ 1
------------------INS SimpleName@@offset @TO@ ArrayAccess@@data[0] @AT@ 10759 @LENGTH@ 6
---------------UPD ArrayAccess@@data[1] @TO@ data[offset + 1] @AT@ 10741 @LENGTH@ 7
------------------DEL NumberLiteral@@1 @AT@ 10746 @LENGTH@ 1
------------------INS InfixExpression@@offset + 1 @TO@ ArrayAccess@@data[1] @AT@ 10773 @LENGTH@ 10
---------------------INS SimpleName@@offset @TO@ InfixExpression@@offset + 1 @AT@ 10773 @LENGTH@ 6
---------------------INS Operator@@+ @TO@ InfixExpression@@offset + 1 @AT@ 10779 @LENGTH@ 1
---------------------INS NumberLiteral@@1 @TO@ InfixExpression@@offset + 1 @AT@ 10782 @LENGTH@ 1
---UPD ExpressionStatement@@Assignment:k=orBytes(tail[0],tail[1],tail[2],data[0]) @TO@ Assignment:k=orBytes(tail[0],tail[1],tail[2],data[offset]) @AT@ 10794 @LENGTH@ 48
------UPD Assignment@@k=orBytes(tail[0],tail[1],tail[2],data[0]) @TO@ k=orBytes(tail[0],tail[1],tail[2],data[offset]) @AT@ 10794 @LENGTH@ 47
---------UPD MethodInvocation@@orBytes(tail[0],tail[1],tail[2],data[0]) @TO@ orBytes(tail[0],tail[1],tail[2],data[offset]) @AT@ 10798 @LENGTH@ 43
------------UPD SimpleName@@MethodName:orBytes:[tail[0], tail[1], tail[2], data[0]] @TO@ MethodName:orBytes:[tail[0], tail[1], tail[2], data[offset]] @AT@ 10798 @LENGTH@ 43
---------------UPD ArrayAccess@@data[0] @TO@ data[offset] @AT@ 10833 @LENGTH@ 7
------------------DEL NumberLiteral@@0 @AT@ 10838 @LENGTH@ 1
------------------INS SimpleName@@offset @TO@ ArrayAccess@@data[0] @AT@ 10874 @LENGTH@ 6


UPD FieldDeclaration@@private, static, String, [driverName="org.apache.hive.jdbc.HiveDriver"] @TO@ private, static, final, String, [driverName="org.apache.hive.jdbc.HiveDriver"] @AT@ 1028 @LENGTH@ 69
---INS Modifier@@final @TO@ FieldDeclaration@@private, static, String, [driverName="org.apache.hive.jdbc.HiveDriver"] @AT@ 1043 @LENGTH@ 5


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled(); @AT@ 5432 @LENGTH@ 160
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5440 @LENGTH@ 151
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5440 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5457 @LENGTH@ 134
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 5457 @LENGTH@ 64
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5457 @LENGTH@ 35
---------UPD MethodInvocation@@componentConfiguration.getConfigurer().isEnabled() @TO@ componentConfiguration.getCustomizer().isEnabled() @AT@ 5541 @LENGTH@ 50
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5541 @LENGTH@ 38


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<FtpsComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<FtpsComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5409 @LENGTH@ 337
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 5413 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5413 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  ComponentCustomizer<FtpsComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ ThenBody:{  for (  ComponentCustomizer<FtpsComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5469 @LENGTH@ 277
------UPD EnhancedForStatement@@for (ComponentCustomizer<FtpsComponent> configurer : customizers) {  LOGGER.debug("Configure component {}, with configurer {}",component,configurer);  configurer.customize(component);} @TO@ for (ComponentCustomizer<FtpsComponent> customizer : customizers) {  LOGGER.debug("Configure component {}, with customizer {}",component,customizer);  customizer.customize(component);} @AT@ 5483 @LENGTH@ 253
---------UPD SingleVariableDeclaration@@ComponentCustomizer<FtpsComponent> configurer @TO@ ComponentCustomizer<FtpsComponent> customizer @AT@ 5488 @LENGTH@ 45
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5523 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5567 @LENGTH@ 106
------------UPD MethodInvocation@@LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5567 @LENGTH@ 105
---------------UPD SimpleName@@MethodName:debug:["Configure component {}, with configurer {}", component, configurer] @TO@ MethodName:debug:["Configure component {}, with customizer {}", component, customizer] @AT@ 5574 @LENGTH@ 98
------------------UPD StringLiteral@@"Configure component {}, with configurer {}" @TO@ "Configure component {}, with customizer {}" @AT@ 5580 @LENGTH@ 44
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5661 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(component) @TO@ MethodInvocation:customizer.customize(component) @AT@ 5690 @LENGTH@ 32
------------UPD MethodInvocation@@configurer.customize(component) @TO@ customizer.customize(component) @AT@ 5690 @LENGTH@ 31
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5690 @LENGTH@ 10


UPD ReturnStatement@@MethodInvocation:multiHashOrdered(parentHashCode(),47287,rewriter.hashCode()) @TO@ MethodInvocation:multiHashUnordered(parentHashCode(),47287,rewriter.hashCode()) @AT@ 1870 @LENGTH@ 70
---UPD MethodInvocation@@multiHashOrdered(parentHashCode(),47287,rewriter.hashCode()) @TO@ multiHashUnordered(parentHashCode(),47287,rewriter.hashCode()) @AT@ 1877 @LENGTH@ 62
------UPD SimpleName@@MethodName:multiHashOrdered:[parentHashCode(), 47287, rewriter.hashCode()] @TO@ MethodName:multiHashUnordered:[parentHashCode(), 47287, rewriter.hashCode()] @AT@ 1877 @LENGTH@ 62


UPD ReturnStatement@@QualifiedName:Collections.EMPTY_SET @TO@ MethodInvocation:Collections.emptySet() @AT@ 6811 @LENGTH@ 29
---INS MethodInvocation@@Collections.emptySet() @TO@ ReturnStatement@@QualifiedName:Collections.EMPTY_SET @AT@ 6818 @LENGTH@ 22
------INS SimpleName@@Name:Collections @TO@ MethodInvocation@@Collections.emptySet() @AT@ 6818 @LENGTH@ 11
------INS SimpleName@@MethodName:emptySet:[] @TO@ MethodInvocation@@Collections.emptySet() @AT@ 6830 @LENGTH@ 10
---DEL QualifiedName@@Collections.EMPTY_SET @AT@ 6818 @LENGTH@ 21
------DEL SimpleName@@Collections @AT@ 6818 @LENGTH@ 11
------DEL SimpleName@@EMPTY_SET @AT@ 6830 @LENGTH@ 9


UPD ReturnStatement@@MethodInvocation:descriptors.stream().map(FeatureDescriptor::getName).collect(Collectors.toList()) @TO@ MethodInvocation:descriptors.stream().map(FeatureDescriptor::getName).distinct().collect(Collectors.toList()) @AT@ 1975 @LENGTH@ 103
---UPD MethodInvocation@@descriptors.stream().map(FeatureDescriptor::getName).collect(Collectors.toList()) @TO@ descriptors.stream().map(FeatureDescriptor::getName).distinct().collect(Collectors.toList()) @AT@ 1982 @LENGTH@ 95
------INS MethodInvocation@@MethodName:distinct:[] @TO@ MethodInvocation@@descriptors.stream().map(FeatureDescriptor::getName).collect(Collectors.toList()) @AT@ 1982 @LENGTH@ 77


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<SjmsBatchComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<SjmsBatchComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5484 @LENGTH@ 342
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 5488 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5488 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  ComponentCustomizer<SjmsBatchComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ ThenBody:{  for (  ComponentCustomizer<SjmsBatchComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5544 @LENGTH@ 282
------UPD EnhancedForStatement@@for (ComponentCustomizer<SjmsBatchComponent> configurer : customizers) {  LOGGER.debug("Configure component {}, with configurer {}",component,configurer);  configurer.customize(component);} @TO@ for (ComponentCustomizer<SjmsBatchComponent> customizer : customizers) {  LOGGER.debug("Configure component {}, with customizer {}",component,customizer);  customizer.customize(component);} @AT@ 5558 @LENGTH@ 258
---------UPD SingleVariableDeclaration@@ComponentCustomizer<SjmsBatchComponent> configurer @TO@ ComponentCustomizer<SjmsBatchComponent> customizer @AT@ 5563 @LENGTH@ 50
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5603 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5647 @LENGTH@ 106
------------UPD MethodInvocation@@LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5647 @LENGTH@ 105
---------------UPD SimpleName@@MethodName:debug:["Configure component {}, with configurer {}", component, configurer] @TO@ MethodName:debug:["Configure component {}, with customizer {}", component, customizer] @AT@ 5654 @LENGTH@ 98
------------------UPD StringLiteral@@"Configure component {}, with configurer {}" @TO@ "Configure component {}, with customizer {}" @AT@ 5660 @LENGTH@ 44
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5741 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(component) @TO@ MethodInvocation:customizer.customize(component) @AT@ 5770 @LENGTH@ 32
------------UPD MethodInvocation@@configurer.customize(component) @TO@ customizer.customize(component) @AT@ 5770 @LENGTH@ 31
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5770 @LENGTH@ 10


UPD ReturnStatement@@MethodInvocation:multiHashOrdered(parentHashCode(),70729,0) @TO@ MethodInvocation:multiHashUnordered(parentHashCode(),70729,0) @AT@ 2687 @LENGTH@ 52
---UPD MethodInvocation@@multiHashOrdered(parentHashCode(),70729,0) @TO@ multiHashUnordered(parentHashCode(),70729,0) @AT@ 2694 @LENGTH@ 44
------UPD SimpleName@@MethodName:multiHashOrdered:[parentHashCode(), 70729, 0] @TO@ MethodName:multiHashUnordered:[parentHashCode(), 70729, 0] @AT@ 2694 @LENGTH@ 44


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<GeoCoderComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<GeoCoderComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5463 @LENGTH@ 341
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 5467 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5467 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  ComponentCustomizer<GeoCoderComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ ThenBody:{  for (  ComponentCustomizer<GeoCoderComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5523 @LENGTH@ 281
------UPD EnhancedForStatement@@for (ComponentCustomizer<GeoCoderComponent> configurer : customizers) {  LOGGER.debug("Configure component {}, with configurer {}",component,configurer);  configurer.customize(component);} @TO@ for (ComponentCustomizer<GeoCoderComponent> customizer : customizers) {  LOGGER.debug("Configure component {}, with customizer {}",component,customizer);  customizer.customize(component);} @AT@ 5537 @LENGTH@ 257
---------UPD SingleVariableDeclaration@@ComponentCustomizer<GeoCoderComponent> configurer @TO@ ComponentCustomizer<GeoCoderComponent> customizer @AT@ 5542 @LENGTH@ 49
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5581 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5625 @LENGTH@ 106
------------UPD MethodInvocation@@LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5625 @LENGTH@ 105
---------------UPD SimpleName@@MethodName:debug:["Configure component {}, with configurer {}", component, configurer] @TO@ MethodName:debug:["Configure component {}, with customizer {}", component, customizer] @AT@ 5632 @LENGTH@ 98
------------------UPD StringLiteral@@"Configure component {}, with configurer {}" @TO@ "Configure component {}, with customizer {}" @AT@ 5638 @LENGTH@ 44
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5719 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(component) @TO@ MethodInvocation:customizer.customize(component) @AT@ 5748 @LENGTH@ 32
------------UPD MethodInvocation@@configurer.customize(component) @TO@ customizer.customize(component) @AT@ 5748 @LENGTH@ 31
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5748 @LENGTH@ 10


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<JGroupsComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<JGroupsComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5446 @LENGTH@ 340
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 5450 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5450 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  ComponentCustomizer<JGroupsComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ ThenBody:{  for (  ComponentCustomizer<JGroupsComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5506 @LENGTH@ 280
------UPD EnhancedForStatement@@for (ComponentCustomizer<JGroupsComponent> configurer : customizers) {  LOGGER.debug("Configure component {}, with configurer {}",component,configurer);  configurer.customize(component);} @TO@ for (ComponentCustomizer<JGroupsComponent> customizer : customizers) {  LOGGER.debug("Configure component {}, with customizer {}",component,customizer);  customizer.customize(component);} @AT@ 5520 @LENGTH@ 256
---------UPD SingleVariableDeclaration@@ComponentCustomizer<JGroupsComponent> configurer @TO@ ComponentCustomizer<JGroupsComponent> customizer @AT@ 5525 @LENGTH@ 48
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5563 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5607 @LENGTH@ 106
------------UPD MethodInvocation@@LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5607 @LENGTH@ 105
---------------UPD SimpleName@@MethodName:debug:["Configure component {}, with configurer {}", component, configurer] @TO@ MethodName:debug:["Configure component {}, with customizer {}", component, customizer] @AT@ 5614 @LENGTH@ 98
------------------UPD StringLiteral@@"Configure component {}, with configurer {}" @TO@ "Configure component {}, with customizer {}" @AT@ 5620 @LENGTH@ 44
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5701 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(component) @TO@ MethodInvocation:customizer.customize(component) @AT@ 5730 @LENGTH@ 32
------------UPD MethodInvocation@@configurer.customize(component) @TO@ customizer.customize(component) @AT@ 5730 @LENGTH@ 31
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5730 @LENGTH@ 10


UPD ExpressionStatement@@MethodInvocation:Collections.list(Sasl.getSaslClientFactories()).stream().flatMap(sf -> Arrays.stream(sf.getMechanismNames(emptyMap()))).forEach(s -> assertThat(s,RegularExpressionMatcher.matchesPattern(REGEX_MECHANISM_NAME))) @TO@ MethodInvocation:Collections.list(Sasl.getSaslServerFactories()).stream().flatMap(sf -> Arrays.stream(sf.getMechanismNames(emptyMap()))).forEach(s -> assertThat(s,RegularExpressionMatcher.matchesPattern(REGEX_MECHANISM_NAME))) @AT@ 4521 @LENGTH@ 228
---UPD MethodInvocation@@Collections.list(Sasl.getSaslClientFactories()).stream().flatMap(sf -> Arrays.stream(sf.getMechanismNames(emptyMap()))).forEach(s -> assertThat(s,RegularExpressionMatcher.matchesPattern(REGEX_MECHANISM_NAME))) @TO@ Collections.list(Sasl.getSaslServerFactories()).stream().flatMap(sf -> Arrays.stream(sf.getMechanismNames(emptyMap()))).forEach(s -> assertThat(s,RegularExpressionMatcher.matchesPattern(REGEX_MECHANISM_NAME))) @AT@ 4521 @LENGTH@ 227
------UPD MethodInvocation@@MethodName:list:[Sasl.getSaslClientFactories()] @TO@ MethodName:list:[Sasl.getSaslServerFactories()] @AT@ 4521 @LENGTH@ 47
---------UPD MethodInvocation@@Sasl.getSaslClientFactories() @TO@ Sasl.getSaslServerFactories() @AT@ 4538 @LENGTH@ 29
------------UPD SimpleName@@MethodName:getSaslClientFactories:[] @TO@ MethodName:getSaslServerFactories:[] @AT@ 4543 @LENGTH@ 24


UPD ExpressionStatement@@MethodInvocation:Assert.notNull("Message source must not be null") @TO@ MethodInvocation:Assert.notNull(messageSource,"Message source must not be null") @AT@ 3857 @LENGTH@ 50
---UPD MethodInvocation@@Assert.notNull("Message source must not be null") @TO@ Assert.notNull(messageSource,"Message source must not be null") @AT@ 3857 @LENGTH@ 49
------UPD SimpleName@@MethodName:notNull:["Message source must not be null"] @TO@ MethodName:notNull:[messageSource, "Message source must not be null"] @AT@ 3864 @LENGTH@ 42
---------INS SimpleName@@messageSource @TO@ SimpleName@@MethodName:notNull:["Message source must not be null"] @AT@ 3872 @LENGTH@ 13


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled(); @AT@ 5260 @LENGTH@ 160
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5268 @LENGTH@ 151
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5268 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5285 @LENGTH@ 134
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 5285 @LENGTH@ 64
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5285 @LENGTH@ 35
---------UPD MethodInvocation@@componentConfiguration.getConfigurer().isEnabled() @TO@ componentConfiguration.getCustomizer().isEnabled() @AT@ 5369 @LENGTH@ 50
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5369 @LENGTH@ 38


INS MethodDeclaration@@public, void, MethodName:testPrototypeCache,  @TO@ TypeDeclaration@@[@ContextConfiguration(classes=EnableRabbitIntegrationTests.EnableRabbitConfig.class), @RunWith(SpringJUnit4ClassRunner.class), @DirtiesContext, @TestExecutionListeners(mergeMode=MergeMode.MERGE_WITH_DEFAULTS,listeners=EnableRabbitIntegrationTests.DeleteQueuesExecutionListener.class), public]EnableRabbitIntegrationTests,  @AT@ 24865 @LENGTH@ 599
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testPrototypeCache,  @AT@ 24865 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testPrototypeCache,  @AT@ 24872 @LENGTH@ 4
---INS SimpleName@@MethodName:testPrototypeCache @TO@ MethodDeclaration@@public, void, MethodName:testPrototypeCache,  @AT@ 24877 @LENGTH@ 18
---INS VariableDeclarationStatement@@RabbitListenerAnnotationBeanPostProcessor bpp=this.context.getBean(RabbitListenerAnnotationBeanPostProcessor.class); @TO@ MethodDeclaration@@public, void, MethodName:testPrototypeCache,  @AT@ 24902 @LENGTH@ 122
------INS SimpleType@@RabbitListenerAnnotationBeanPostProcessor @TO@ VariableDeclarationStatement@@RabbitListenerAnnotationBeanPostProcessor bpp=this.context.getBean(RabbitListenerAnnotationBeanPostProcessor.class); @AT@ 24902 @LENGTH@ 41
------INS VariableDeclarationFragment@@bpp=this.context.getBean(RabbitListenerAnnotationBeanPostProcessor.class) @TO@ VariableDeclarationStatement@@RabbitListenerAnnotationBeanPostProcessor bpp=this.context.getBean(RabbitListenerAnnotationBeanPostProcessor.class); @AT@ 24944 @LENGTH@ 79
---------INS SimpleName@@bpp @TO@ VariableDeclarationFragment@@bpp=this.context.getBean(RabbitListenerAnnotationBeanPostProcessor.class) @AT@ 24944 @LENGTH@ 3
---------INS MethodInvocation@@this.context.getBean(RabbitListenerAnnotationBeanPostProcessor.class) @TO@ VariableDeclarationFragment@@bpp=this.context.getBean(RabbitListenerAnnotationBeanPostProcessor.class) @AT@ 24954 @LENGTH@ 69
------------INS FieldAccess@@this.context @TO@ MethodInvocation@@this.context.getBean(RabbitListenerAnnotationBeanPostProcessor.class) @AT@ 24954 @LENGTH@ 12
---------------INS ThisExpression@@this @TO@ FieldAccess@@this.context @AT@ 24954 @LENGTH@ 4
---------------INS SimpleName@@context @TO@ FieldAccess@@this.context @AT@ 24959 @LENGTH@ 7
------------INS SimpleName@@MethodName:getBean:[RabbitListenerAnnotationBeanPostProcessor.class] @TO@ MethodInvocation@@this.context.getBean(RabbitListenerAnnotationBeanPostProcessor.class) @AT@ 24967 @LENGTH@ 56
---------------INS TypeLiteral@@RabbitListenerAnnotationBeanPostProcessor.class @TO@ SimpleName@@MethodName:getBean:[RabbitListenerAnnotationBeanPostProcessor.class] @AT@ 24975 @LENGTH@ 47
---INS VariableDeclarationStatement@@MultiValueMap<?,?> methodCache=TestUtils.getPropertyValue(bpp,"methodCache",MultiValueMap.class); @TO@ MethodDeclaration@@public, void, MethodName:testPrototypeCache,  @AT@ 25027 @LENGTH@ 102
------INS ParameterizedType@@MultiValueMap<?,?> @TO@ VariableDeclarationStatement@@MultiValueMap<?,?> methodCache=TestUtils.getPropertyValue(bpp,"methodCache",MultiValueMap.class); @AT@ 25027 @LENGTH@ 19
---------INS SimpleType@@MultiValueMap @TO@ ParameterizedType@@MultiValueMap<?,?> @AT@ 25027 @LENGTH@ 13
---------INS WildcardType@@? @TO@ ParameterizedType@@MultiValueMap<?,?> @AT@ 25041 @LENGTH@ 1
---------INS WildcardType@@? @TO@ ParameterizedType@@MultiValueMap<?,?> @AT@ 25044 @LENGTH@ 1
------INS VariableDeclarationFragment@@methodCache=TestUtils.getPropertyValue(bpp,"methodCache",MultiValueMap.class) @TO@ VariableDeclarationStatement@@MultiValueMap<?,?> methodCache=TestUtils.getPropertyValue(bpp,"methodCache",MultiValueMap.class); @AT@ 25047 @LENGTH@ 81
---------INS SimpleName@@methodCache @TO@ VariableDeclarationFragment@@methodCache=TestUtils.getPropertyValue(bpp,"methodCache",MultiValueMap.class) @AT@ 25047 @LENGTH@ 11
---------INS MethodInvocation@@TestUtils.getPropertyValue(bpp,"methodCache",MultiValueMap.class) @TO@ VariableDeclarationFragment@@methodCache=TestUtils.getPropertyValue(bpp,"methodCache",MultiValueMap.class) @AT@ 25061 @LENGTH@ 67
------------INS SimpleName@@Name:TestUtils @TO@ MethodInvocation@@TestUtils.getPropertyValue(bpp,"methodCache",MultiValueMap.class) @AT@ 25061 @LENGTH@ 9
------------INS SimpleName@@MethodName:getPropertyValue:[bpp, "methodCache", MultiValueMap.class] @TO@ MethodInvocation@@TestUtils.getPropertyValue(bpp,"methodCache",MultiValueMap.class) @AT@ 25071 @LENGTH@ 57
---------------INS SimpleName@@bpp @TO@ SimpleName@@MethodName:getPropertyValue:[bpp, "methodCache", MultiValueMap.class] @AT@ 25088 @LENGTH@ 3
---------------INS StringLiteral@@"methodCache" @TO@ SimpleName@@MethodName:getPropertyValue:[bpp, "methodCache", MultiValueMap.class] @AT@ 25093 @LENGTH@ 13
---------------INS TypeLiteral@@MultiValueMap.class @TO@ SimpleName@@MethodName:getPropertyValue:[bpp, "methodCache", MultiValueMap.class] @AT@ 25108 @LENGTH@ 19
---INS ExpressionStatement@@MethodInvocation:assertFalse(methodCache.containsKey(Foo1.class)) @TO@ MethodDeclaration@@public, void, MethodName:testPrototypeCache,  @AT@ 25132 @LENGTH@ 49
------INS MethodInvocation@@assertFalse(methodCache.containsKey(Foo1.class)) @TO@ ExpressionStatement@@MethodInvocation:assertFalse(methodCache.containsKey(Foo1.class)) @AT@ 25132 @LENGTH@ 48
---------INS SimpleName@@MethodName:assertFalse:[methodCache.containsKey(Foo1.class)] @TO@ MethodInvocation@@assertFalse(methodCache.containsKey(Foo1.class)) @AT@ 25132 @LENGTH@ 48
------------INS MethodInvocation@@methodCache.containsKey(Foo1.class) @TO@ SimpleName@@MethodName:assertFalse:[methodCache.containsKey(Foo1.class)] @AT@ 25144 @LENGTH@ 35
---------------INS SimpleName@@Name:methodCache @TO@ MethodInvocation@@methodCache.containsKey(Foo1.class) @AT@ 25144 @LENGTH@ 11
---------------INS SimpleName@@MethodName:containsKey:[Foo1.class] @TO@ MethodInvocation@@methodCache.containsKey(Foo1.class) @AT@ 25156 @LENGTH@ 23
------------------INS TypeLiteral@@Foo1.class @TO@ SimpleName@@MethodName:containsKey:[Foo1.class] @AT@ 25168 @LENGTH@ 10
---INS ExpressionStatement@@MethodInvocation:this.context.getBean("foo1Prototype") @TO@ MethodDeclaration@@public, void, MethodName:testPrototypeCache,  @AT@ 25184 @LENGTH@ 38
------INS MethodInvocation@@this.context.getBean("foo1Prototype") @TO@ ExpressionStatement@@MethodInvocation:this.context.getBean("foo1Prototype") @AT@ 25184 @LENGTH@ 37
---------INS FieldAccess@@this.context @TO@ MethodInvocation@@this.context.getBean("foo1Prototype") @AT@ 25184 @LENGTH@ 12
------------INS ThisExpression@@this @TO@ FieldAccess@@this.context @AT@ 25184 @LENGTH@ 4
------------INS SimpleName@@context @TO@ FieldAccess@@this.context @AT@ 25189 @LENGTH@ 7
---------INS SimpleName@@MethodName:getBean:["foo1Prototype"] @TO@ MethodInvocation@@this.context.getBean("foo1Prototype") @AT@ 25197 @LENGTH@ 24
------------INS StringLiteral@@"foo1Prototype" @TO@ SimpleName@@MethodName:getBean:["foo1Prototype"] @AT@ 25205 @LENGTH@ 15
---INS ExpressionStatement@@MethodInvocation:assertTrue(methodCache.containsKey(Foo1.class)) @TO@ MethodDeclaration@@public, void, MethodName:testPrototypeCache,  @AT@ 25225 @LENGTH@ 48
------INS MethodInvocation@@assertTrue(methodCache.containsKey(Foo1.class)) @TO@ ExpressionStatement@@MethodInvocation:assertTrue(methodCache.containsKey(Foo1.class)) @AT@ 25225 @LENGTH@ 47
---------INS SimpleName@@MethodName:assertTrue:[methodCache.containsKey(Foo1.class)] @TO@ MethodInvocation@@assertTrue(methodCache.containsKey(Foo1.class)) @AT@ 25225 @LENGTH@ 47
------------INS MethodInvocation@@methodCache.containsKey(Foo1.class) @TO@ SimpleName@@MethodName:assertTrue:[methodCache.containsKey(Foo1.class)] @AT@ 25236 @LENGTH@ 35
---------------INS SimpleName@@Name:methodCache @TO@ MethodInvocation@@methodCache.containsKey(Foo1.class) @AT@ 25236 @LENGTH@ 11
---------------INS SimpleName@@MethodName:containsKey:[Foo1.class] @TO@ MethodInvocation@@methodCache.containsKey(Foo1.class) @AT@ 25248 @LENGTH@ 23
------------------INS TypeLiteral@@Foo1.class @TO@ SimpleName@@MethodName:containsKey:[Foo1.class] @AT@ 25260 @LENGTH@ 10
---INS VariableDeclarationStatement@@Object value=methodCache.get(Foo1.class); @TO@ MethodDeclaration@@public, void, MethodName:testPrototypeCache,  @AT@ 25276 @LENGTH@ 43
------INS SimpleType@@Object @TO@ VariableDeclarationStatement@@Object value=methodCache.get(Foo1.class); @AT@ 25276 @LENGTH@ 6
------INS VariableDeclarationFragment@@value=methodCache.get(Foo1.class) @TO@ VariableDeclarationStatement@@Object value=methodCache.get(Foo1.class); @AT@ 25283 @LENGTH@ 35
---------INS SimpleName@@value @TO@ VariableDeclarationFragment@@value=methodCache.get(Foo1.class) @AT@ 25283 @LENGTH@ 5
---------INS MethodInvocation@@methodCache.get(Foo1.class) @TO@ VariableDeclarationFragment@@value=methodCache.get(Foo1.class) @AT@ 25291 @LENGTH@ 27
------------INS SimpleName@@Name:methodCache @TO@ MethodInvocation@@methodCache.get(Foo1.class) @AT@ 25291 @LENGTH@ 11
------------INS SimpleName@@MethodName:get:[Foo1.class] @TO@ MethodInvocation@@methodCache.get(Foo1.class) @AT@ 25303 @LENGTH@ 15
---------------INS TypeLiteral@@Foo1.class @TO@ SimpleName@@MethodName:get:[Foo1.class] @AT@ 25307 @LENGTH@ 10
---INS ExpressionStatement@@MethodInvocation:this.context.getBean("foo1Prototype") @TO@ MethodDeclaration@@public, void, MethodName:testPrototypeCache,  @AT@ 25322 @LENGTH@ 38
------INS MethodInvocation@@this.context.getBean("foo1Prototype") @TO@ ExpressionStatement@@MethodInvocation:this.context.getBean("foo1Prototype") @AT@ 25322 @LENGTH@ 37
---------INS FieldAccess@@this.context @TO@ MethodInvocation@@this.context.getBean("foo1Prototype") @AT@ 25322 @LENGTH@ 12
------------INS ThisExpression@@this @TO@ FieldAccess@@this.context @AT@ 25322 @LENGTH@ 4
------------INS SimpleName@@context @TO@ FieldAccess@@this.context @AT@ 25327 @LENGTH@ 7
---------INS SimpleName@@MethodName:getBean:["foo1Prototype"] @TO@ MethodInvocation@@this.context.getBean("foo1Prototype") @AT@ 25335 @LENGTH@ 24
------------INS StringLiteral@@"foo1Prototype" @TO@ SimpleName@@MethodName:getBean:["foo1Prototype"] @AT@ 25343 @LENGTH@ 15
---INS ExpressionStatement@@MethodInvocation:assertTrue(methodCache.containsKey(Foo1.class)) @TO@ MethodDeclaration@@public, void, MethodName:testPrototypeCache,  @AT@ 25363 @LENGTH@ 48
------INS MethodInvocation@@assertTrue(methodCache.containsKey(Foo1.class)) @TO@ ExpressionStatement@@MethodInvocation:assertTrue(methodCache.containsKey(Foo1.class)) @AT@ 25363 @LENGTH@ 47
---------INS SimpleName@@MethodName:assertTrue:[methodCache.containsKey(Foo1.class)] @TO@ MethodInvocation@@assertTrue(methodCache.containsKey(Foo1.class)) @AT@ 25363 @LENGTH@ 47
------------INS MethodInvocation@@methodCache.containsKey(Foo1.class) @TO@ SimpleName@@MethodName:assertTrue:[methodCache.containsKey(Foo1.class)] @AT@ 25374 @LENGTH@ 35
---------------INS SimpleName@@Name:methodCache @TO@ MethodInvocation@@methodCache.containsKey(Foo1.class) @AT@ 25374 @LENGTH@ 11
---------------INS SimpleName@@MethodName:containsKey:[Foo1.class] @TO@ MethodInvocation@@methodCache.containsKey(Foo1.class) @AT@ 25386 @LENGTH@ 23
------------------INS TypeLiteral@@Foo1.class @TO@ SimpleName@@MethodName:containsKey:[Foo1.class] @AT@ 25398 @LENGTH@ 10
---INS ExpressionStatement@@MethodInvocation:assertSame(value,methodCache.get(Foo1.class)) @TO@ MethodDeclaration@@public, void, MethodName:testPrototypeCache,  @AT@ 25414 @LENGTH@ 47
------INS MethodInvocation@@assertSame(value,methodCache.get(Foo1.class)) @TO@ ExpressionStatement@@MethodInvocation:assertSame(value,methodCache.get(Foo1.class)) @AT@ 25414 @LENGTH@ 46
---------INS SimpleName@@MethodName:assertSame:[value, methodCache.get(Foo1.class)] @TO@ MethodInvocation@@assertSame(value,methodCache.get(Foo1.class)) @AT@ 25414 @LENGTH@ 46
------------INS SimpleName@@value @TO@ SimpleName@@MethodName:assertSame:[value, methodCache.get(Foo1.class)] @AT@ 25425 @LENGTH@ 5
------------INS MethodInvocation@@methodCache.get(Foo1.class) @TO@ SimpleName@@MethodName:assertSame:[value, methodCache.get(Foo1.class)] @AT@ 25432 @LENGTH@ 27
---------------INS SimpleName@@Name:methodCache @TO@ MethodInvocation@@methodCache.get(Foo1.class) @AT@ 25432 @LENGTH@ 11
---------------INS SimpleName@@MethodName:get:[Foo1.class] @TO@ MethodInvocation@@methodCache.get(Foo1.class) @AT@ 25444 @LENGTH@ 15
------------------INS TypeLiteral@@Foo1.class @TO@ SimpleName@@MethodName:get:[Foo1.class] @AT@ 25448 @LENGTH@ 10


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && languageConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && languageConfiguration.getCustomizer().isEnabled(); @AT@ 4553 @LENGTH@ 159
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && languageConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && languageConfiguration.getCustomizer().isEnabled() @AT@ 4561 @LENGTH@ 150
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 4561 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && languageConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && languageConfiguration.getCustomizer().isEnabled() @AT@ 4578 @LENGTH@ 133
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 4578 @LENGTH@ 64
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 4578 @LENGTH@ 35
---------UPD MethodInvocation@@languageConfiguration.getConfigurer().isEnabled() @TO@ languageConfiguration.getCustomizer().isEnabled() @AT@ 4662 @LENGTH@ 49
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 4662 @LENGTH@ 37


UPD VariableDeclarationStatement@@ExtensionRegistry extensionRegistry=new ExtensionRegistry(ProcessType.SELF_CONTAINED,new RunningModeControl(RunningMode.NORMAL)); @TO@ ExtensionRegistry extensionRegistry=new ExtensionRegistry(ProcessType.SELF_CONTAINED,new RunningModeControl(RunningMode.NORMAL),null,null,RuntimeHostControllerInfoAccessor.SERVER); @AT@ 3438 @LENGTH@ 132
---UPD VariableDeclarationFragment@@extensionRegistry=new ExtensionRegistry(ProcessType.SELF_CONTAINED,new RunningModeControl(RunningMode.NORMAL)) @TO@ extensionRegistry=new ExtensionRegistry(ProcessType.SELF_CONTAINED,new RunningModeControl(RunningMode.NORMAL),null,null,RuntimeHostControllerInfoAccessor.SERVER) @AT@ 3456 @LENGTH@ 113
------UPD ClassInstanceCreation@@ExtensionRegistry[ProcessType.SELF_CONTAINED, new RunningModeControl(RunningMode.NORMAL)] @TO@ ExtensionRegistry[ProcessType.SELF_CONTAINED, new RunningModeControl(RunningMode.NORMAL), null, null, RuntimeHostControllerInfoAccessor.SERVER] @AT@ 3476 @LENGTH@ 93
---------INS NullLiteral@@null @TO@ ClassInstanceCreation@@ExtensionRegistry[ProcessType.SELF_CONTAINED, new RunningModeControl(RunningMode.NORMAL)] @AT@ 3695 @LENGTH@ 4
---------INS NullLiteral@@null @TO@ ClassInstanceCreation@@ExtensionRegistry[ProcessType.SELF_CONTAINED, new RunningModeControl(RunningMode.NORMAL)] @AT@ 3717 @LENGTH@ 4
---------INS QualifiedName@@RuntimeHostControllerInfoAccessor.SERVER @TO@ ClassInstanceCreation@@ExtensionRegistry[ProcessType.SELF_CONTAINED, new RunningModeControl(RunningMode.NORMAL)] @AT@ 3739 @LENGTH@ 40
------------INS SimpleName@@RuntimeHostControllerInfoAccessor @TO@ QualifiedName@@RuntimeHostControllerInfoAccessor.SERVER @AT@ 3739 @LENGTH@ 33
------------INS SimpleName@@SERVER @TO@ QualifiedName@@RuntimeHostControllerInfoAccessor.SERVER @AT@ 3773 @LENGTH@ 6


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<JdbcComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<JdbcComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5395 @LENGTH@ 337
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 5399 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5399 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  ComponentCustomizer<JdbcComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ ThenBody:{  for (  ComponentCustomizer<JdbcComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5455 @LENGTH@ 277
------UPD EnhancedForStatement@@for (ComponentCustomizer<JdbcComponent> configurer : customizers) {  LOGGER.debug("Configure component {}, with configurer {}",component,configurer);  configurer.customize(component);} @TO@ for (ComponentCustomizer<JdbcComponent> customizer : customizers) {  LOGGER.debug("Configure component {}, with customizer {}",component,customizer);  customizer.customize(component);} @AT@ 5469 @LENGTH@ 253
---------UPD SingleVariableDeclaration@@ComponentCustomizer<JdbcComponent> configurer @TO@ ComponentCustomizer<JdbcComponent> customizer @AT@ 5474 @LENGTH@ 45
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5509 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5553 @LENGTH@ 106
------------UPD MethodInvocation@@LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5553 @LENGTH@ 105
---------------UPD SimpleName@@MethodName:debug:["Configure component {}, with configurer {}", component, configurer] @TO@ MethodName:debug:["Configure component {}, with customizer {}", component, customizer] @AT@ 5560 @LENGTH@ 98
------------------UPD StringLiteral@@"Configure component {}, with configurer {}" @TO@ "Configure component {}, with customizer {}" @AT@ 5566 @LENGTH@ 44
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5647 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(component) @TO@ MethodInvocation:customizer.customize(component) @AT@ 5676 @LENGTH@ 32
------------UPD MethodInvocation@@configurer.customize(component) @TO@ customizer.customize(component) @AT@ 5676 @LENGTH@ 31
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5676 @LENGTH@ 10


UPD ForStatement@@for (int i=0; i < queuesToDeclare.length; i++) {  declareQueue(queuesToDeclare[i]);  resolveAsString(resolveExpression(queuesToDeclare[i].value()),result);} @TO@ for (int i=0; i < queuesToDeclare.length; i++) {  result.add(declareQueue(queuesToDeclare[i]));} @AT@ 20903 @LENGTH@ 169
---UPD ExpressionStatement@@MethodInvocation:declareQueue(queuesToDeclare[i]) @TO@ MethodInvocation:result.add(declareQueue(queuesToDeclare[i])) @AT@ 20958 @LENGTH@ 33
------INS MethodInvocation@@result.add(declareQueue(queuesToDeclare[i])) @TO@ ExpressionStatement@@MethodInvocation:declareQueue(queuesToDeclare[i]) @AT@ 20958 @LENGTH@ 44
---------INS SimpleName@@Name:result @TO@ MethodInvocation@@result.add(declareQueue(queuesToDeclare[i])) @AT@ 20958 @LENGTH@ 6
---------INS SimpleName@@MethodName:add:[declareQueue(queuesToDeclare[i])] @TO@ MethodInvocation@@result.add(declareQueue(queuesToDeclare[i])) @AT@ 20965 @LENGTH@ 37
------------MOV MethodInvocation@@declareQueue(queuesToDeclare[i]) @TO@ SimpleName@@MethodName:add:[declareQueue(queuesToDeclare[i])] @AT@ 20958 @LENGTH@ 32
------------MOV MethodInvocation@@declareQueue(queuesToDeclare[i]) @TO@ SimpleName@@MethodName:add:[declareQueue(queuesToDeclare[i])] @AT@ 20958 @LENGTH@ 32
---DEL ExpressionStatement@@MethodInvocation:resolveAsString(resolveExpression(queuesToDeclare[i].value()),result) @AT@ 20996 @LENGTH@ 71
------DEL MethodInvocation@@resolveAsString(resolveExpression(queuesToDeclare[i].value()),result) @AT@ 20996 @LENGTH@ 70
---------DEL SimpleName@@MethodName:resolveAsString:[resolveExpression(queuesToDeclare[i].value()), result] @AT@ 20996 @LENGTH@ 70
------------DEL MethodInvocation@@resolveExpression(queuesToDeclare[i].value()) @AT@ 21012 @LENGTH@ 45
---------------DEL SimpleName@@MethodName:resolveExpression:[queuesToDeclare[i].value()] @AT@ 21012 @LENGTH@ 45
------------------DEL MethodInvocation@@queuesToDeclare[i].value() @AT@ 21030 @LENGTH@ 26
---------------------DEL ArrayAccess@@queuesToDeclare[i] @AT@ 21030 @LENGTH@ 18
------------------------DEL SimpleName@@queuesToDeclare @AT@ 21030 @LENGTH@ 15
------------------------DEL SimpleName@@i @AT@ 21046 @LENGTH@ 1
---------------------DEL SimpleName@@MethodName:value:[] @AT@ 21049 @LENGTH@ 7
------------DEL SimpleName@@result @AT@ 21059 @LENGTH@ 6


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<Olingo2Component> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<Olingo2Component> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5446 @LENGTH@ 340
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 5450 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5450 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  ComponentCustomizer<Olingo2Component> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ ThenBody:{  for (  ComponentCustomizer<Olingo2Component> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5506 @LENGTH@ 280
------UPD EnhancedForStatement@@for (ComponentCustomizer<Olingo2Component> configurer : customizers) {  LOGGER.debug("Configure component {}, with configurer {}",component,configurer);  configurer.customize(component);} @TO@ for (ComponentCustomizer<Olingo2Component> customizer : customizers) {  LOGGER.debug("Configure component {}, with customizer {}",component,customizer);  customizer.customize(component);} @AT@ 5520 @LENGTH@ 256
---------UPD SingleVariableDeclaration@@ComponentCustomizer<Olingo2Component> configurer @TO@ ComponentCustomizer<Olingo2Component> customizer @AT@ 5525 @LENGTH@ 48
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5563 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5607 @LENGTH@ 106
------------UPD MethodInvocation@@LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5607 @LENGTH@ 105
---------------UPD SimpleName@@MethodName:debug:["Configure component {}, with configurer {}", component, configurer] @TO@ MethodName:debug:["Configure component {}, with customizer {}", component, customizer] @AT@ 5614 @LENGTH@ 98
------------------UPD StringLiteral@@"Configure component {}, with configurer {}" @TO@ "Configure component {}, with customizer {}" @AT@ 5620 @LENGTH@ 44
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5701 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(component) @TO@ MethodInvocation:customizer.customize(component) @AT@ 5730 @LENGTH@ 32
------------UPD MethodInvocation@@configurer.customize(component) @TO@ customizer.customize(component) @AT@ 5730 @LENGTH@ 31
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5730 @LENGTH@ 10


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled(); @AT@ 5260 @LENGTH@ 160
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5268 @LENGTH@ 151
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5268 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5285 @LENGTH@ 134
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 5285 @LENGTH@ 64
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5285 @LENGTH@ 35
---------UPD MethodInvocation@@componentConfiguration.getConfigurer().isEnabled() @TO@ componentConfiguration.getCustomizer().isEnabled() @AT@ 5369 @LENGTH@ 50
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5369 @LENGTH@ 38


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && dataformatConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && dataformatConfiguration.getCustomizer().isEnabled(); @AT@ 5155 @LENGTH@ 177
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && dataformatConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && dataformatConfiguration.getCustomizer().isEnabled() @AT@ 5163 @LENGTH@ 168
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5163 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && dataformatConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && dataformatConfiguration.getCustomizer().isEnabled() @AT@ 5180 @LENGTH@ 151
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 5180 @LENGTH@ 72
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5180 @LENGTH@ 35
---------UPD MethodInvocation@@dataformatConfiguration.getConfigurer().isEnabled() @TO@ dataformatConfiguration.getCustomizer().isEnabled() @AT@ 5280 @LENGTH@ 51
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5280 @LENGTH@ 39


UPD VariableDeclarationStatement@@String expectedPath=new File(System.getProperty("user.dir"),fileName).toURL().toString(); @TO@ String expectedPath=new File(System.getProperty("user.dir"),fileName).toURI().toURL().toString(); @AT@ 3228 @LENGTH@ 92
---UPD VariableDeclarationFragment@@expectedPath=new File(System.getProperty("user.dir"),fileName).toURL().toString() @TO@ expectedPath=new File(System.getProperty("user.dir"),fileName).toURI().toURL().toString() @AT@ 3235 @LENGTH@ 84
------UPD MethodInvocation@@new File(System.getProperty("user.dir"),fileName).toURL().toString() @TO@ new File(System.getProperty("user.dir"),fileName).toURI().toURL().toString() @AT@ 3250 @LENGTH@ 69
---------INS MethodInvocation@@MethodName:toURI:[] @TO@ MethodInvocation@@new File(System.getProperty("user.dir"),fileName).toURL().toString() @AT@ 3250 @LENGTH@ 58


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && dataformatConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && dataformatConfiguration.getCustomizer().isEnabled(); @AT@ 5219 @LENGTH@ 177
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && dataformatConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && dataformatConfiguration.getCustomizer().isEnabled() @AT@ 5227 @LENGTH@ 168
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5227 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && dataformatConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && dataformatConfiguration.getCustomizer().isEnabled() @AT@ 5244 @LENGTH@ 151
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 5244 @LENGTH@ 72
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5244 @LENGTH@ 35
---------UPD MethodInvocation@@dataformatConfiguration.getConfigurer().isEnabled() @TO@ dataformatConfiguration.getCustomizer().isEnabled() @AT@ 5344 @LENGTH@ 51
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5344 @LENGTH@ 39


UPD ExpressionStatement@@MethodInvocation:Assert.notNull(bankService) @TO@ MethodInvocation:Assert.notNull(bankService,"bankService cannot be null") @AT@ 1057 @LENGTH@ 28
---UPD MethodInvocation@@Assert.notNull(bankService) @TO@ Assert.notNull(bankService,"bankService cannot be null") @AT@ 1057 @LENGTH@ 27
------UPD SimpleName@@MethodName:notNull:[bankService] @TO@ MethodName:notNull:[bankService, "bankService cannot be null"] @AT@ 1064 @LENGTH@ 20
---------INS StringLiteral@@"bankService cannot be null" @TO@ SimpleName@@MethodName:notNull:[bankService] @AT@ 1085 @LENGTH@ 28


UPD VariableDeclarationStatement@@CommonBean<URL> urlBean=CommonBeanBuilder.newBuilder().beanClass(XMLConfigProducingExtension.class).scope(Dependent.class).addQualifier(XMLConfig.Literal.INSTANCE).createSupplier(this::getXMLConfig).addType(URL.class).addType(Object.class).build(); @TO@ CommonBean<URL> urlBean=CommonBeanBuilder.newBuilder(URL.class).beanClass(XMLConfigProducingExtension.class).scope(Dependent.class).addQualifier(XMLConfig.Literal.INSTANCE).createSupplier(this::getXMLConfig).addType(URL.class).addType(Object.class).build(); @AT@ 1738 @LENGTH@ 376
---UPD VariableDeclarationFragment@@urlBean=CommonBeanBuilder.newBuilder().beanClass(XMLConfigProducingExtension.class).scope(Dependent.class).addQualifier(XMLConfig.Literal.INSTANCE).createSupplier(this::getXMLConfig).addType(URL.class).addType(Object.class).build() @TO@ urlBean=CommonBeanBuilder.newBuilder(URL.class).beanClass(XMLConfigProducingExtension.class).scope(Dependent.class).addQualifier(XMLConfig.Literal.INSTANCE).createSupplier(this::getXMLConfig).addType(URL.class).addType(Object.class).build() @AT@ 1754 @LENGTH@ 359
------UPD MethodInvocation@@CommonBeanBuilder.newBuilder().beanClass(XMLConfigProducingExtension.class).scope(Dependent.class).addQualifier(XMLConfig.Literal.INSTANCE).createSupplier(this::getXMLConfig).addType(URL.class).addType(Object.class).build() @TO@ CommonBeanBuilder.newBuilder(URL.class).beanClass(XMLConfigProducingExtension.class).scope(Dependent.class).addQualifier(XMLConfig.Literal.INSTANCE).createSupplier(this::getXMLConfig).addType(URL.class).addType(Object.class).build() @AT@ 1764 @LENGTH@ 349
---------UPD MethodInvocation@@MethodName:newBuilder:[] @TO@ MethodName:newBuilder:[URL.class] @AT@ 1764 @LENGTH@ 30
------------INS TypeLiteral@@URL.class @TO@ MethodInvocation@@MethodName:newBuilder:[] @AT@ 1793 @LENGTH@ 9


UPD MethodDeclaration@@public, Class<?>, MethodName:getWrapperType,  @TO@ public, WrapperType, MethodName:getWrapperType,  @AT@ 1378 @LENGTH@ 88
---DEL ParameterizedType@@Class<?> @AT@ 1385 @LENGTH@ 8
------DEL SimpleType@@Class @AT@ 1385 @LENGTH@ 5
------DEL WildcardType@@? @AT@ 1391 @LENGTH@ 1
---UPD ReturnStatement@@TypeLiteral:javaslang.collection.Traversable.class @TO@ MethodInvocation:WrapperType.multiValue(javaslang.collection.Traversable.class) @AT@ 1416 @LENGTH@ 46
------DEL TypeLiteral@@javaslang.collection.Traversable.class @AT@ 1423 @LENGTH@ 38
------INS MethodInvocation@@WrapperType.multiValue(javaslang.collection.Traversable.class) @TO@ ReturnStatement@@TypeLiteral:javaslang.collection.Traversable.class @AT@ 1512 @LENGTH@ 62
---------INS SimpleName@@Name:WrapperType @TO@ MethodInvocation@@WrapperType.multiValue(javaslang.collection.Traversable.class) @AT@ 1512 @LENGTH@ 11
---------INS SimpleName@@MethodName:multiValue:[javaslang.collection.Traversable.class] @TO@ MethodInvocation@@WrapperType.multiValue(javaslang.collection.Traversable.class) @AT@ 1524 @LENGTH@ 50
------------INS TypeLiteral@@javaslang.collection.Traversable.class @TO@ SimpleName@@MethodName:multiValue:[javaslang.collection.Traversable.class] @AT@ 1535 @LENGTH@ 38
---INS SimpleType@@WrapperType @TO@ MethodDeclaration@@public, Class<?>, MethodName:getWrapperType,  @AT@ 1471 @LENGTH@ 11


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled(); @AT@ 5328 @LENGTH@ 160
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5336 @LENGTH@ 151
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5336 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5353 @LENGTH@ 134
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 5353 @LENGTH@ 64
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5353 @LENGTH@ 35
---------UPD MethodInvocation@@componentConfiguration.getConfigurer().isEnabled() @TO@ componentConfiguration.getCustomizer().isEnabled() @AT@ 5437 @LENGTH@ 50
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5437 @LENGTH@ 38


UPD ExpressionStatement@@MethodInvocation:sb.append(methodInfo.annotation(PATH).value().asString()) @TO@ MethodInvocation:safeAppend(sb,methodInfo.annotation(PATH).value().asString()) @AT@ 4197 @LENGTH@ 58
---UPD MethodInvocation@@sb.append(methodInfo.annotation(PATH).value().asString()) @TO@ safeAppend(sb,methodInfo.annotation(PATH).value().asString()) @AT@ 4197 @LENGTH@ 57
------DEL SimpleName@@Name:sb @AT@ 4197 @LENGTH@ 2
------UPD SimpleName@@MethodName:append:[methodInfo.annotation(PATH).value().asString()] @TO@ MethodName:safeAppend:[sb, methodInfo.annotation(PATH).value().asString()] @AT@ 4200 @LENGTH@ 54
---------INS SimpleName@@sb @TO@ SimpleName@@MethodName:append:[methodInfo.annotation(PATH).value().asString()] @AT@ 4208 @LENGTH@ 2


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  DataFormatCustomizer<ZipFileDataFormat> configurer : customizers) {    LOGGER.debug("Configure dataformat {}, with configurer {}",dataformat,configurer);    configurer.customize(dataformat);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  DataFormatCustomizer<ZipFileDataFormat> customizer : customizers) {    LOGGER.debug("Configure dataformat {}, with customizer {}",dataformat,customizer);    customizer.customize(dataformat);  }} @AT@ 5349 @LENGTH@ 426
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 5353 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5353 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  DataFormatCustomizer<ZipFileDataFormat> configurer : customizers) {    LOGGER.debug("Configure dataformat {}, with configurer {}",dataformat,configurer);    configurer.customize(dataformat);  }} @TO@ ThenBody:{  for (  DataFormatCustomizer<ZipFileDataFormat> customizer : customizers) {    LOGGER.debug("Configure dataformat {}, with customizer {}",dataformat,customizer);    customizer.customize(dataformat);  }} @AT@ 5409 @LENGTH@ 366
------UPD EnhancedForStatement@@for (DataFormatCustomizer<ZipFileDataFormat> configurer : customizers) {  LOGGER.debug("Configure dataformat {}, with configurer {}",dataformat,configurer);  configurer.customize(dataformat);} @TO@ for (DataFormatCustomizer<ZipFileDataFormat> customizer : customizers) {  LOGGER.debug("Configure dataformat {}, with customizer {}",dataformat,customizer);  customizer.customize(dataformat);} @AT@ 5431 @LENGTH@ 326
---------UPD SingleVariableDeclaration@@DataFormatCustomizer<ZipFileDataFormat> configurer @TO@ DataFormatCustomizer<ZipFileDataFormat> customizer @AT@ 5436 @LENGTH@ 50
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5476 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure dataformat {}, with configurer {}",dataformat,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure dataformat {}, with customizer {}",dataformat,customizer) @AT@ 5528 @LENGTH@ 149
------------UPD MethodInvocation@@LOGGER.debug("Configure dataformat {}, with configurer {}",dataformat,configurer) @TO@ LOGGER.debug("Configure dataformat {}, with customizer {}",dataformat,customizer) @AT@ 5528 @LENGTH@ 148
---------------UPD SimpleName@@MethodName:debug:["Configure dataformat {}, with configurer {}", dataformat, configurer] @TO@ MethodName:debug:["Configure dataformat {}, with customizer {}", dataformat, customizer] @AT@ 5535 @LENGTH@ 141
------------------UPD StringLiteral@@"Configure dataformat {}, with configurer {}" @TO@ "Configure dataformat {}, with customizer {}" @AT@ 5574 @LENGTH@ 45
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5665 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(dataformat) @TO@ MethodInvocation:customizer.customize(dataformat) @AT@ 5702 @LENGTH@ 33
------------UPD MethodInvocation@@configurer.customize(dataformat) @TO@ customizer.customize(dataformat) @AT@ 5702 @LENGTH@ 32
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5702 @LENGTH@ 10


INS ExpressionStatement@@MethodInvocation:conf.setVar(HiveConf.ConfVars.HIVE_TXN_MANAGER,"org.apache.hadoop.hive.ql.lockmgr.DbTxnManager") @TO@ MethodDeclaration@@public, void, MethodName:testDummyTxnManagerOnAcidTable, Exception,  @AT@ 19813 @LENGTH@ 98
---INS MethodInvocation@@conf.setVar(HiveConf.ConfVars.HIVE_TXN_MANAGER,"org.apache.hadoop.hive.ql.lockmgr.DbTxnManager") @TO@ ExpressionStatement@@MethodInvocation:conf.setVar(HiveConf.ConfVars.HIVE_TXN_MANAGER,"org.apache.hadoop.hive.ql.lockmgr.DbTxnManager") @AT@ 19813 @LENGTH@ 97
------INS SimpleName@@Name:conf @TO@ MethodInvocation@@conf.setVar(HiveConf.ConfVars.HIVE_TXN_MANAGER,"org.apache.hadoop.hive.ql.lockmgr.DbTxnManager") @AT@ 19813 @LENGTH@ 4
------INS SimpleName@@MethodName:setVar:[HiveConf.ConfVars.HIVE_TXN_MANAGER, "org.apache.hadoop.hive.ql.lockmgr.DbTxnManager"] @TO@ MethodInvocation@@conf.setVar(HiveConf.ConfVars.HIVE_TXN_MANAGER,"org.apache.hadoop.hive.ql.lockmgr.DbTxnManager") @AT@ 19818 @LENGTH@ 92
---------INS QualifiedName@@HiveConf.ConfVars.HIVE_TXN_MANAGER @TO@ SimpleName@@MethodName:setVar:[HiveConf.ConfVars.HIVE_TXN_MANAGER, "org.apache.hadoop.hive.ql.lockmgr.DbTxnManager"] @AT@ 19825 @LENGTH@ 34
------------INS QualifiedName@@HiveConf.ConfVars @TO@ QualifiedName@@HiveConf.ConfVars.HIVE_TXN_MANAGER @AT@ 19825 @LENGTH@ 17
---------------INS SimpleName@@HiveConf @TO@ QualifiedName@@HiveConf.ConfVars @AT@ 19825 @LENGTH@ 8
---------------INS SimpleName@@ConfVars @TO@ QualifiedName@@HiveConf.ConfVars @AT@ 19834 @LENGTH@ 8
------------INS SimpleName@@HIVE_TXN_MANAGER @TO@ QualifiedName@@HiveConf.ConfVars.HIVE_TXN_MANAGER @AT@ 19843 @LENGTH@ 16
---------INS StringLiteral@@"org.apache.hadoop.hive.ql.lockmgr.DbTxnManager" @TO@ SimpleName@@MethodName:setVar:[HiveConf.ConfVars.HIVE_TXN_MANAGER, "org.apache.hadoop.hive.ql.lockmgr.DbTxnManager"] @AT@ 19861 @LENGTH@ 48


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled(); @AT@ 5209 @LENGTH@ 160
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5217 @LENGTH@ 151
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5217 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5234 @LENGTH@ 134
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 5234 @LENGTH@ 64
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5234 @LENGTH@ 35
---------UPD MethodInvocation@@componentConfiguration.getConfigurer().isEnabled() @TO@ componentConfiguration.getCustomizer().isEnabled() @AT@ 5318 @LENGTH@ 50
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5318 @LENGTH@ 38


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled(); @AT@ 5209 @LENGTH@ 160
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5217 @LENGTH@ 151
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5217 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5234 @LENGTH@ 134
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 5234 @LENGTH@ 64
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5234 @LENGTH@ 35
---------UPD MethodInvocation@@componentConfiguration.getConfigurer().isEnabled() @TO@ componentConfiguration.getCustomizer().isEnabled() @AT@ 5318 @LENGTH@ 50
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5318 @LENGTH@ 38


UPD IfStatement@@if (ClassUtils.isPrimitiveOrWrapper(returnedObjectType)) {  this.metadata=new SimpleMongoEntityMetadata<Object>((Class<Object>)domainClass,mappingContext.getPersistentEntity(domainClass));} else {  MongoPersistentEntity<?> returnedEntity=mappingContext.getPersistentEntity(returnedObjectType);  MongoPersistentEntity<?> managedEntity=mappingContext.getPersistentEntity(domainClass);  returnedEntity=returnedEntity == null || returnedEntity.getType().isInterface() ? managedEntity : returnedEntity;  MongoPersistentEntity<?> collectionEntity=domainClass.isAssignableFrom(returnedObjectType) ? returnedEntity : managedEntity;  this.metadata=new SimpleMongoEntityMetadata<Object>((Class<Object>)returnedEntity.getType(),collectionEntity);} @TO@ if (ClassUtils.isPrimitiveOrWrapper(returnedObjectType)) {  this.metadata=new SimpleMongoEntityMetadata<Object>((Class<Object>)domainClass,mappingContext.getRequiredPersistentEntity(domainClass));} else {  Optional<? extends MongoPersistentEntity<?>> returnedEntity=mappingContext.getPersistentEntity(returnedObjectType);  MongoPersistentEntity<?> managedEntity=mappingContext.getRequiredPersistentEntity(domainClass);  returnedEntity=!returnedEntity.isPresent() || returnedEntity.get().getType().isInterface() ? Optional.of(managedEntity) : returnedEntity;  MongoPersistentEntity<?> collectionEntity=domainClass.isAssignableFrom(returnedObjectType) ? returnedEntity.get() : managedEntity;  this.metadata=new SimpleMongoEntityMetadata<Object>((Class<Object>)returnedEntity.get().getType(),collectionEntity);} @AT@ 4568 @LENGTH@ 806
---UPD Block@@ThenBody:{  this.metadata=new SimpleMongoEntityMetadata<Object>((Class<Object>)domainClass,mappingContext.getPersistentEntity(domainClass));} @TO@ ThenBody:{  this.metadata=new SimpleMongoEntityMetadata<Object>((Class<Object>)domainClass,mappingContext.getRequiredPersistentEntity(domainClass));} @AT@ 4625 @LENGTH@ 151
------UPD ExpressionStatement@@Assignment:this.metadata=new SimpleMongoEntityMetadata<Object>((Class<Object>)domainClass,mappingContext.getPersistentEntity(domainClass)) @TO@ Assignment:this.metadata=new SimpleMongoEntityMetadata<Object>((Class<Object>)domainClass,mappingContext.getRequiredPersistentEntity(domainClass)) @AT@ 4632 @LENGTH@ 138
---------UPD Assignment@@this.metadata=new SimpleMongoEntityMetadata<Object>((Class<Object>)domainClass,mappingContext.getPersistentEntity(domainClass)) @TO@ this.metadata=new SimpleMongoEntityMetadata<Object>((Class<Object>)domainClass,mappingContext.getRequiredPersistentEntity(domainClass)) @AT@ 4632 @LENGTH@ 137
------------UPD ClassInstanceCreation@@SimpleMongoEntityMetadata<Object>[(Class<Object>)domainClass, mappingContext.getPersistentEntity(domainClass)] @TO@ SimpleMongoEntityMetadata<Object>[(Class<Object>)domainClass, mappingContext.getRequiredPersistentEntity(domainClass)] @AT@ 4648 @LENGTH@ 121
---------------UPD MethodInvocation@@mappingContext.getPersistentEntity(domainClass) @TO@ mappingContext.getRequiredPersistentEntity(domainClass) @AT@ 4721 @LENGTH@ 47
------------------UPD SimpleName@@MethodName:getPersistentEntity:[domainClass] @TO@ MethodName:getRequiredPersistentEntity:[domainClass] @AT@ 4736 @LENGTH@ 32
---UPD Block@@ElseBody:{  MongoPersistentEntity<?> returnedEntity=mappingContext.getPersistentEntity(returnedObjectType);  MongoPersistentEntity<?> managedEntity=mappingContext.getPersistentEntity(domainClass);  returnedEntity=returnedEntity == null || returnedEntity.getType().isInterface() ? managedEntity : returnedEntity;  MongoPersistentEntity<?> collectionEntity=domainClass.isAssignableFrom(returnedObjectType) ? returnedEntity : managedEntity;  this.metadata=new SimpleMongoEntityMetadata<Object>((Class<Object>)returnedEntity.getType(),collectionEntity);} @TO@ ElseBody:{  Optional<? extends MongoPersistentEntity<?>> returnedEntity=mappingContext.getPersistentEntity(returnedObjectType);  MongoPersistentEntity<?> managedEntity=mappingContext.getRequiredPersistentEntity(domainClass);  returnedEntity=!returnedEntity.isPresent() || returnedEntity.get().getType().isInterface() ? Optional.of(managedEntity) : returnedEntity;  MongoPersistentEntity<?> collectionEntity=domainClass.isAssignableFrom(returnedObjectType) ? returnedEntity.get() : managedEntity;  this.metadata=new SimpleMongoEntityMetadata<Object>((Class<Object>)returnedEntity.get().getType(),collectionEntity);} @AT@ 4782 @LENGTH@ 592
------UPD VariableDeclarationStatement@@MongoPersistentEntity<?> returnedEntity=mappingContext.getPersistentEntity(returnedObjectType); @TO@ Optional<? extends MongoPersistentEntity<?>> returnedEntity=mappingContext.getPersistentEntity(returnedObjectType); @AT@ 4789 @LENGTH@ 97
---------UPD ParameterizedType@@MongoPersistentEntity<?> @TO@ Optional<? extends MongoPersistentEntity<?>> @AT@ 4789 @LENGTH@ 24
------------UPD SimpleType@@MongoPersistentEntity @TO@ Optional @AT@ 4789 @LENGTH@ 21
------UPD VariableDeclarationStatement@@MongoPersistentEntity<?> managedEntity=mappingContext.getPersistentEntity(domainClass); @TO@ MongoPersistentEntity<?> managedEntity=mappingContext.getRequiredPersistentEntity(domainClass); @AT@ 4891 @LENGTH@ 89
---------UPD VariableDeclarationFragment@@managedEntity=mappingContext.getPersistentEntity(domainClass) @TO@ managedEntity=mappingContext.getRequiredPersistentEntity(domainClass) @AT@ 4916 @LENGTH@ 63
------------UPD MethodInvocation@@mappingContext.getPersistentEntity(domainClass) @TO@ mappingContext.getRequiredPersistentEntity(domainClass) @AT@ 4932 @LENGTH@ 47
---------------UPD SimpleName@@MethodName:getPersistentEntity:[domainClass] @TO@ MethodName:getRequiredPersistentEntity:[domainClass] @AT@ 4947 @LENGTH@ 32
------UPD ExpressionStatement@@Assignment:returnedEntity=returnedEntity == null || returnedEntity.getType().isInterface() ? managedEntity : returnedEntity @TO@ Assignment:returnedEntity=!returnedEntity.isPresent() || returnedEntity.get().getType().isInterface() ? Optional.of(managedEntity) : returnedEntity @AT@ 4985 @LENGTH@ 121
---------UPD Assignment@@returnedEntity=returnedEntity == null || returnedEntity.getType().isInterface() ? managedEntity : returnedEntity @TO@ returnedEntity=!returnedEntity.isPresent() || returnedEntity.get().getType().isInterface() ? Optional.of(managedEntity) : returnedEntity @AT@ 4985 @LENGTH@ 120
------------UPD ConditionalExpression@@returnedEntity == null || returnedEntity.getType().isInterface() ? managedEntity : returnedEntity @TO@ !returnedEntity.isPresent() || returnedEntity.get().getType().isInterface() ? Optional.of(managedEntity) : returnedEntity @AT@ 5002 @LENGTH@ 103
---------------UPD InfixExpression@@returnedEntity == null || returnedEntity.getType().isInterface() @TO@ !returnedEntity.isPresent() || returnedEntity.get().getType().isInterface() @AT@ 5002 @LENGTH@ 64
------------------DEL InfixExpression@@returnedEntity == null @AT@ 5002 @LENGTH@ 22
---------------------DEL SimpleName@@returnedEntity @AT@ 5002 @LENGTH@ 14
---------------------DEL Operator@@== @AT@ 5016 @LENGTH@ 2
---------------------DEL NullLiteral@@null @AT@ 5020 @LENGTH@ 4
------------------UPD MethodInvocation@@returnedEntity.getType().isInterface() @TO@ returnedEntity.get().getType().isInterface() @AT@ 5028 @LENGTH@ 38
---------------------INS MethodInvocation@@MethodName:get:[] @TO@ MethodInvocation@@returnedEntity.getType().isInterface() @AT@ 5096 @LENGTH@ 20
------------------INS PrefixExpression@@!returnedEntity.isPresent() @TO@ InfixExpression@@returnedEntity == null || returnedEntity.getType().isInterface() @AT@ 5065 @LENGTH@ 27
---------------------INS Operator@@! @TO@ PrefixExpression@@!returnedEntity.isPresent() @AT@ 5065 @LENGTH@ 1
---------------------INS MethodInvocation@@returnedEntity.isPresent() @TO@ PrefixExpression@@!returnedEntity.isPresent() @AT@ 5066 @LENGTH@ 26
------------------------INS SimpleName@@Name:returnedEntity @TO@ MethodInvocation@@returnedEntity.isPresent() @AT@ 5066 @LENGTH@ 14
------------------------INS SimpleName@@MethodName:isPresent:[] @TO@ MethodInvocation@@returnedEntity.isPresent() @AT@ 5081 @LENGTH@ 11
---------------DEL SimpleName@@managedEntity @AT@ 5069 @LENGTH@ 13
---------------INS MethodInvocation@@Optional.of(managedEntity) @TO@ ConditionalExpression@@returnedEntity == null || returnedEntity.getType().isInterface() ? managedEntity : returnedEntity @AT@ 5143 @LENGTH@ 26
------------------INS SimpleName@@Name:Optional @TO@ MethodInvocation@@Optional.of(managedEntity) @AT@ 5143 @LENGTH@ 8
------------------INS SimpleName@@MethodName:of:[managedEntity] @TO@ MethodInvocation@@Optional.of(managedEntity) @AT@ 5152 @LENGTH@ 17
---------------------INS SimpleName@@managedEntity @TO@ SimpleName@@MethodName:of:[managedEntity] @AT@ 5155 @LENGTH@ 13
------UPD VariableDeclarationStatement@@MongoPersistentEntity<?> collectionEntity=domainClass.isAssignableFrom(returnedObjectType) ? returnedEntity : managedEntity; @TO@ MongoPersistentEntity<?> collectionEntity=domainClass.isAssignableFrom(returnedObjectType) ? returnedEntity.get() : managedEntity; @AT@ 5111 @LENGTH@ 132
---------UPD VariableDeclarationFragment@@collectionEntity=domainClass.isAssignableFrom(returnedObjectType) ? returnedEntity : managedEntity @TO@ collectionEntity=domainClass.isAssignableFrom(returnedObjectType) ? returnedEntity.get() : managedEntity @AT@ 5136 @LENGTH@ 106
------------UPD ConditionalExpression@@domainClass.isAssignableFrom(returnedObjectType) ? returnedEntity : managedEntity @TO@ domainClass.isAssignableFrom(returnedObjectType) ? returnedEntity.get() : managedEntity @AT@ 5155 @LENGTH@ 87
---------------DEL SimpleName@@returnedEntity @AT@ 5206 @LENGTH@ 14
---------------INS MethodInvocation@@returnedEntity.get() @TO@ ConditionalExpression@@domainClass.isAssignableFrom(returnedObjectType) ? returnedEntity : managedEntity @AT@ 5293 @LENGTH@ 20
------------------INS SimpleName@@Name:returnedEntity @TO@ MethodInvocation@@returnedEntity.get() @AT@ 5293 @LENGTH@ 14
------------------INS SimpleName@@MethodName:get:[] @TO@ MethodInvocation@@returnedEntity.get() @AT@ 5308 @LENGTH@ 5
------UPD ExpressionStatement@@Assignment:this.metadata=new SimpleMongoEntityMetadata<Object>((Class<Object>)returnedEntity.getType(),collectionEntity) @TO@ Assignment:this.metadata=new SimpleMongoEntityMetadata<Object>((Class<Object>)returnedEntity.get().getType(),collectionEntity) @AT@ 5249 @LENGTH@ 120
---------UPD Assignment@@this.metadata=new SimpleMongoEntityMetadata<Object>((Class<Object>)returnedEntity.getType(),collectionEntity) @TO@ this.metadata=new SimpleMongoEntityMetadata<Object>((Class<Object>)returnedEntity.get().getType(),collectionEntity) @AT@ 5249 @LENGTH@ 119
------------UPD ClassInstanceCreation@@SimpleMongoEntityMetadata<Object>[(Class<Object>)returnedEntity.getType(), collectionEntity] @TO@ SimpleMongoEntityMetadata<Object>[(Class<Object>)returnedEntity.get().getType(), collectionEntity] @AT@ 5265 @LENGTH@ 103
---------------UPD CastExpression@@(Class<Object>)returnedEntity.getType() @TO@ (Class<Object>)returnedEntity.get().getType() @AT@ 5303 @LENGTH@ 40
------------------UPD MethodInvocation@@returnedEntity.getType() @TO@ returnedEntity.get().getType() @AT@ 5319 @LENGTH@ 24
---------------------INS MethodInvocation@@MethodName:get:[] @TO@ MethodInvocation@@returnedEntity.getType() @AT@ 5412 @LENGTH@ 20


MOV ExpressionStatement@@MethodInvocation:registerDependency(javaBeanMetadataKey,metadataIdentificationString) @TO@ MethodDeclaration@@protected, ItdTypeDetailsProvidingMetadataItem, MethodName:getMetadata, final String metadataIdentificationString, final JavaType aspectName, final PhysicalTypeMetadata governorPhysicalTypeMetadata, final String itdFilename,  @AT@ 9438 @LENGTH@ 70


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled(); @AT@ 5378 @LENGTH@ 160
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5386 @LENGTH@ 151
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5386 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5403 @LENGTH@ 134
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 5403 @LENGTH@ 64
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5403 @LENGTH@ 35
---------UPD MethodInvocation@@componentConfiguration.getConfigurer().isEnabled() @TO@ componentConfiguration.getCustomizer().isEnabled() @AT@ 5487 @LENGTH@ 50
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5487 @LENGTH@ 38


UPD ExpressionStatement@@MethodInvocation:from("timer:new-order?delay=1s&period={{example.generateOrderPeriod:2s}}").routeId("generate-order").bean("orderService","generateOrder").to("jpa:io.fabric8.quickstarts.camel.Order").log("Inserted new order ${body.id}") @TO@ MethodInvocation:from("timer:new-order?delay=1s&period={{example.generateOrderPeriod:2s}}").routeId("generate-order").bean("orderService","generateOrder").to("jpa:org.apache.camel.example.spring.boot.rest.jpa.Order").log("Inserted new order ${body.id}") @AT@ 3021 @LENGTH@ 289
---UPD MethodInvocation@@from("timer:new-order?delay=1s&period={{example.generateOrderPeriod:2s}}").routeId("generate-order").bean("orderService","generateOrder").to("jpa:io.fabric8.quickstarts.camel.Order").log("Inserted new order ${body.id}") @TO@ from("timer:new-order?delay=1s&period={{example.generateOrderPeriod:2s}}").routeId("generate-order").bean("orderService","generateOrder").to("jpa:org.apache.camel.example.spring.boot.rest.jpa.Order").log("Inserted new order ${body.id}") @AT@ 3021 @LENGTH@ 288
------UPD MethodInvocation@@MethodName:to:["jpa:io.fabric8.quickstarts.camel.Order"] @TO@ MethodName:to:["jpa:org.apache.camel.example.spring.boot.rest.jpa.Order"] @AT@ 3021 @LENGTH@ 234
---------UPD StringLiteral@@"jpa:io.fabric8.quickstarts.camel.Order" @TO@ "jpa:org.apache.camel.example.spring.boot.rest.jpa.Order" @AT@ 3214 @LENGTH@ 40


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled(); @AT@ 5311 @LENGTH@ 160
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5319 @LENGTH@ 151
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5319 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5336 @LENGTH@ 134
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 5336 @LENGTH@ 64
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5336 @LENGTH@ 35
---------UPD MethodInvocation@@componentConfiguration.getConfigurer().isEnabled() @TO@ componentConfiguration.getCustomizer().isEnabled() @AT@ 5420 @LENGTH@ 50
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5420 @LENGTH@ 38


UPD EnhancedForStatement@@for (String key : nestedProperties.keySet()) {  List<PersistentProperty<?>> persistentProperties=new ArrayList<PersistentProperty<?>>();  persistentProperties.add(persistentProperty);  persistentProperties.addAll(nestedProperties.get(key));  mapping.put(key,persistentProperties);} @TO@ for (Entry<String,List<PersistentProperty<?>>> entry : nestedProperties.entrySet()) {  List<PersistentProperty<?>> persistentProperties=new ArrayList<PersistentProperty<?>>();  persistentProperties.add(persistentProperty);  persistentProperties.addAll(entry.getValue());  mapping.put(entry.getKey(),persistentProperties);} @AT@ 6562 @LENGTH@ 303
---UPD SingleVariableDeclaration@@String key @TO@ Entry<String,List<PersistentProperty<?>>> entry @AT@ 6567 @LENGTH@ 10
------DEL SimpleType@@String @AT@ 6567 @LENGTH@ 6
------UPD SimpleName@@key @TO@ entry @AT@ 6574 @LENGTH@ 3
------INS ParameterizedType@@Entry<String,List<PersistentProperty<?>>> @TO@ SingleVariableDeclaration@@String key @AT@ 6595 @LENGTH@ 42
---------INS SimpleType@@Entry @TO@ ParameterizedType@@Entry<String,List<PersistentProperty<?>>> @AT@ 6595 @LENGTH@ 5
---------INS SimpleType@@String @TO@ ParameterizedType@@Entry<String,List<PersistentProperty<?>>> @AT@ 6601 @LENGTH@ 6
---------INS ParameterizedType@@List<PersistentProperty<?>> @TO@ ParameterizedType@@Entry<String,List<PersistentProperty<?>>> @AT@ 6609 @LENGTH@ 27
------------INS SimpleType@@List @TO@ ParameterizedType@@List<PersistentProperty<?>> @AT@ 6609 @LENGTH@ 4
------------INS ParameterizedType@@PersistentProperty<?> @TO@ ParameterizedType@@List<PersistentProperty<?>> @AT@ 6614 @LENGTH@ 21
---------------INS SimpleType@@PersistentProperty @TO@ ParameterizedType@@PersistentProperty<?> @AT@ 6614 @LENGTH@ 18
---------------INS WildcardType@@? @TO@ ParameterizedType@@PersistentProperty<?> @AT@ 6633 @LENGTH@ 1
---UPD MethodInvocation@@nestedProperties.keySet() @TO@ nestedProperties.entrySet() @AT@ 6580 @LENGTH@ 25
------UPD SimpleName@@MethodName:keySet:[] @TO@ MethodName:entrySet:[] @AT@ 6597 @LENGTH@ 8
---UPD ExpressionStatement@@MethodInvocation:persistentProperties.addAll(nestedProperties.get(key)) @TO@ MethodInvocation:persistentProperties.addAll(entry.getValue()) @AT@ 6760 @LENGTH@ 55
------UPD MethodInvocation@@persistentProperties.addAll(nestedProperties.get(key)) @TO@ persistentProperties.addAll(entry.getValue()) @AT@ 6760 @LENGTH@ 54
---------UPD SimpleName@@MethodName:addAll:[nestedProperties.get(key)] @TO@ MethodName:addAll:[entry.getValue()] @AT@ 6781 @LENGTH@ 33
------------UPD MethodInvocation@@nestedProperties.get(key) @TO@ entry.getValue() @AT@ 6788 @LENGTH@ 25
---------------UPD SimpleName@@Name:nestedProperties @TO@ Name:entry @AT@ 6788 @LENGTH@ 16
---------------UPD SimpleName@@MethodName:get:[key] @TO@ MethodName:getValue:[] @AT@ 6805 @LENGTH@ 8
------------------DEL SimpleName@@key @AT@ 6809 @LENGTH@ 3
---UPD ExpressionStatement@@MethodInvocation:mapping.put(key,persistentProperties) @TO@ MethodInvocation:mapping.put(entry.getKey(),persistentProperties) @AT@ 6821 @LENGTH@ 39
------UPD MethodInvocation@@mapping.put(key,persistentProperties) @TO@ mapping.put(entry.getKey(),persistentProperties) @AT@ 6821 @LENGTH@ 38
---------UPD SimpleName@@MethodName:put:[key, persistentProperties] @TO@ MethodName:put:[entry.getKey(), persistentProperties] @AT@ 6829 @LENGTH@ 30
------------DEL SimpleName@@key @AT@ 6833 @LENGTH@ 3
------------INS MethodInvocation@@entry.getKey() @TO@ SimpleName@@MethodName:put:[key, persistentProperties] @AT@ 6892 @LENGTH@ 14
---------------INS SimpleName@@Name:entry @TO@ MethodInvocation@@entry.getKey() @AT@ 6892 @LENGTH@ 5
---------------INS SimpleName@@MethodName:getKey:[] @TO@ MethodInvocation@@entry.getKey() @AT@ 6898 @LENGTH@ 8


UPD VariableDeclarationStatement@@ResultProcessor processor=method.getResultProcessor().withDynamicProjection(accessor); @TO@ ResultProcessor processor=method.getResultProcessor().withDynamicProjection(Optional.of(accessor)); @AT@ 3858 @LENGTH@ 88
---UPD VariableDeclarationFragment@@processor=method.getResultProcessor().withDynamicProjection(accessor) @TO@ processor=method.getResultProcessor().withDynamicProjection(Optional.of(accessor)) @AT@ 3874 @LENGTH@ 71
------UPD MethodInvocation@@method.getResultProcessor().withDynamicProjection(accessor) @TO@ method.getResultProcessor().withDynamicProjection(Optional.of(accessor)) @AT@ 3886 @LENGTH@ 59
---------UPD SimpleName@@MethodName:withDynamicProjection:[accessor] @TO@ MethodName:withDynamicProjection:[Optional.of(accessor)] @AT@ 3914 @LENGTH@ 31
------------INS MethodInvocation@@Optional.of(accessor) @TO@ SimpleName@@MethodName:withDynamicProjection:[accessor] @AT@ 3964 @LENGTH@ 21
---------------INS SimpleName@@Name:Optional @TO@ MethodInvocation@@Optional.of(accessor) @AT@ 3964 @LENGTH@ 8
---------------INS SimpleName@@MethodName:of:[accessor] @TO@ MethodInvocation@@Optional.of(accessor) @AT@ 3973 @LENGTH@ 12
------------------MOV SimpleName@@accessor @TO@ SimpleName@@MethodName:of:[accessor] @AT@ 3936 @LENGTH@ 8


UPD ExpressionStatement@@MethodInvocation:Assert.notEmpty(p.cn) @TO@ MethodInvocation:Assert.notEmpty(p.cn,"person.cn cannot be empty") @AT@ 3915 @LENGTH@ 22
---UPD MethodInvocation@@Assert.notEmpty(p.cn) @TO@ Assert.notEmpty(p.cn,"person.cn cannot be empty") @AT@ 3915 @LENGTH@ 21
------UPD SimpleName@@MethodName:notEmpty:[p.cn] @TO@ MethodName:notEmpty:[p.cn, "person.cn cannot be empty"] @AT@ 3922 @LENGTH@ 14
---------INS StringLiteral@@"person.cn cannot be empty" @TO@ SimpleName@@MethodName:notEmpty:[p.cn] @AT@ 3965 @LENGTH@ 27


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<CacheComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<CacheComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5412 @LENGTH@ 338
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 5416 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5416 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  ComponentCustomizer<CacheComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ ThenBody:{  for (  ComponentCustomizer<CacheComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5472 @LENGTH@ 278
------UPD EnhancedForStatement@@for (ComponentCustomizer<CacheComponent> configurer : customizers) {  LOGGER.debug("Configure component {}, with configurer {}",component,configurer);  configurer.customize(component);} @TO@ for (ComponentCustomizer<CacheComponent> customizer : customizers) {  LOGGER.debug("Configure component {}, with customizer {}",component,customizer);  customizer.customize(component);} @AT@ 5486 @LENGTH@ 254
---------UPD SingleVariableDeclaration@@ComponentCustomizer<CacheComponent> configurer @TO@ ComponentCustomizer<CacheComponent> customizer @AT@ 5491 @LENGTH@ 46
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5527 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5571 @LENGTH@ 106
------------UPD MethodInvocation@@LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5571 @LENGTH@ 105
---------------UPD SimpleName@@MethodName:debug:["Configure component {}, with configurer {}", component, configurer] @TO@ MethodName:debug:["Configure component {}, with customizer {}", component, customizer] @AT@ 5578 @LENGTH@ 98
------------------UPD StringLiteral@@"Configure component {}, with configurer {}" @TO@ "Configure component {}, with customizer {}" @AT@ 5584 @LENGTH@ 44
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5665 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(component) @TO@ MethodInvocation:customizer.customize(component) @AT@ 5694 @LENGTH@ 32
------------UPD MethodInvocation@@configurer.customize(component) @TO@ customizer.customize(component) @AT@ 5694 @LENGTH@ 31
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5694 @LENGTH@ 10


UPD VariableDeclarationStatement@@UriComponentsBuilder uriBuilder=UriComponentsBuilder.fromUriString(authorizationRequestAttributes.getAuthorizeUri()).queryParam(OAuth2Parameter.RESPONSE_TYPE,ResponseType.CODE.value()); @TO@ UriComponentsBuilder uriBuilder=UriComponentsBuilder.fromUriString(authorizationRequestAttributes.getAuthorizeUri()).queryParam(OAuth2Parameter.RESPONSE_TYPE,ResponseType.CODE.getValue()); @AT@ 1633 @LENGTH@ 198
---UPD VariableDeclarationFragment@@uriBuilder=UriComponentsBuilder.fromUriString(authorizationRequestAttributes.getAuthorizeUri()).queryParam(OAuth2Parameter.RESPONSE_TYPE,ResponseType.CODE.value()) @TO@ uriBuilder=UriComponentsBuilder.fromUriString(authorizationRequestAttributes.getAuthorizeUri()).queryParam(OAuth2Parameter.RESPONSE_TYPE,ResponseType.CODE.getValue()) @AT@ 1654 @LENGTH@ 176
------UPD MethodInvocation@@UriComponentsBuilder.fromUriString(authorizationRequestAttributes.getAuthorizeUri()).queryParam(OAuth2Parameter.RESPONSE_TYPE,ResponseType.CODE.value()) @TO@ UriComponentsBuilder.fromUriString(authorizationRequestAttributes.getAuthorizeUri()).queryParam(OAuth2Parameter.RESPONSE_TYPE,ResponseType.CODE.getValue()) @AT@ 1667 @LENGTH@ 163
---------UPD SimpleName@@MethodName:queryParam:[OAuth2Parameter.RESPONSE_TYPE, ResponseType.CODE.value()] @TO@ MethodName:queryParam:[OAuth2Parameter.RESPONSE_TYPE, ResponseType.CODE.getValue()] @AT@ 1762 @LENGTH@ 68
------------UPD MethodInvocation@@ResponseType.CODE.value() @TO@ ResponseType.CODE.getValue() @AT@ 1804 @LENGTH@ 25
---------------UPD SimpleName@@MethodName:value:[] @TO@ MethodName:getValue:[] @AT@ 1822 @LENGTH@ 7


UPD ExpressionStatement@@MethodInvocation:LOGGER.info(String.format("INFO: You have not included the identifier field/s of the entity '%s' in " + "your projection, which is necessary to be able to use this projection " + "in the view layer. But don't worry, Spring Roo have included it automatically.",entity.getSimpleTypeName())) @TO@ MethodInvocation:LOGGER.info(String.format("INFO: You haven't included the identifier field/s of the entity '%s' in " + "your projection, which is necessary to be able to use this projection " + "in the view layer. But don't worry, Spring Roo has included it automatically.",entity.getSimpleTypeName())) @AT@ 18755 @LENGTH@ 347
---UPD MethodInvocation@@LOGGER.info(String.format("INFO: You have not included the identifier field/s of the entity '%s' in " + "your projection, which is necessary to be able to use this projection " + "in the view layer. But don't worry, Spring Roo have included it automatically.",entity.getSimpleTypeName())) @TO@ LOGGER.info(String.format("INFO: You haven't included the identifier field/s of the entity '%s' in " + "your projection, which is necessary to be able to use this projection " + "in the view layer. But don't worry, Spring Roo has included it automatically.",entity.getSimpleTypeName())) @AT@ 18755 @LENGTH@ 346
------UPD SimpleName@@MethodName:info:[String.format("INFO: You have not included the identifier field/s of the entity '%s' in " + "your projection, which is necessary to be able to use this projection " + "in the view layer. But don't worry, Spring Roo have included it automatically.",entity.getSimpleTypeName())] @TO@ MethodName:info:[String.format("INFO: You haven't included the identifier field/s of the entity '%s' in " + "your projection, which is necessary to be able to use this projection " + "in the view layer. But don't worry, Spring Roo has included it automatically.",entity.getSimpleTypeName())] @AT@ 18762 @LENGTH@ 339
---------UPD MethodInvocation@@String.format("INFO: You have not included the identifier field/s of the entity '%s' in " + "your projection, which is necessary to be able to use this projection " + "in the view layer. But don't worry, Spring Roo have included it automatically.",entity.getSimpleTypeName()) @TO@ String.format("INFO: You haven't included the identifier field/s of the entity '%s' in " + "your projection, which is necessary to be able to use this projection " + "in the view layer. But don't worry, Spring Roo has included it automatically.",entity.getSimpleTypeName()) @AT@ 18767 @LENGTH@ 333
------------UPD SimpleName@@MethodName:format:["INFO: You have not included the identifier field/s of the entity '%s' in " + "your projection, which is necessary to be able to use this projection " + "in the view layer. But don't worry, Spring Roo have included it automatically.", entity.getSimpleTypeName()] @TO@ MethodName:format:["INFO: You haven't included the identifier field/s of the entity '%s' in " + "your projection, which is necessary to be able to use this projection " + "in the view layer. But don't worry, Spring Roo has included it automatically.", entity.getSimpleTypeName()] @AT@ 18774 @LENGTH@ 326
---------------UPD InfixExpression@@"INFO: You have not included the identifier field/s of the entity '%s' in " + "your projection, which is necessary to be able to use this projection " + "in the view layer. But don't worry, Spring Roo have included it automatically." @TO@ "INFO: You haven't included the identifier field/s of the entity '%s' in " + "your projection, which is necessary to be able to use this projection " + "in the view layer. But don't worry, Spring Roo has included it automatically." @AT@ 18794 @LENGTH@ 265
------------------UPD StringLiteral@@"INFO: You have not included the identifier field/s of the entity '%s' in " @TO@ "INFO: You haven't included the identifier field/s of the entity '%s' in " @AT@ 18794 @LENGTH@ 75
------------------UPD StringLiteral@@"in the view layer. But don't worry, Spring Roo have included it automatically." @TO@ "in the view layer. But don't worry, Spring Roo has included it automatically." @AT@ 18979 @LENGTH@ 80


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled(); @AT@ 5296 @LENGTH@ 160
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5304 @LENGTH@ 151
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5304 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5321 @LENGTH@ 134
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 5321 @LENGTH@ 64
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5321 @LENGTH@ 35
---------UPD MethodInvocation@@componentConfiguration.getConfigurer().isEnabled() @TO@ componentConfiguration.getCustomizer().isEnabled() @AT@ 5405 @LENGTH@ 50
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5405 @LENGTH@ 38


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<BraintreeComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<BraintreeComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5480 @LENGTH@ 342
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 5484 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5484 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  ComponentCustomizer<BraintreeComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ ThenBody:{  for (  ComponentCustomizer<BraintreeComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5540 @LENGTH@ 282
------UPD EnhancedForStatement@@for (ComponentCustomizer<BraintreeComponent> configurer : customizers) {  LOGGER.debug("Configure component {}, with configurer {}",component,configurer);  configurer.customize(component);} @TO@ for (ComponentCustomizer<BraintreeComponent> customizer : customizers) {  LOGGER.debug("Configure component {}, with customizer {}",component,customizer);  customizer.customize(component);} @AT@ 5554 @LENGTH@ 258
---------UPD SingleVariableDeclaration@@ComponentCustomizer<BraintreeComponent> configurer @TO@ ComponentCustomizer<BraintreeComponent> customizer @AT@ 5559 @LENGTH@ 50
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5599 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5643 @LENGTH@ 106
------------UPD MethodInvocation@@LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5643 @LENGTH@ 105
---------------UPD SimpleName@@MethodName:debug:["Configure component {}, with configurer {}", component, configurer] @TO@ MethodName:debug:["Configure component {}, with customizer {}", component, customizer] @AT@ 5650 @LENGTH@ 98
------------------UPD StringLiteral@@"Configure component {}, with configurer {}" @TO@ "Configure component {}, with customizer {}" @AT@ 5656 @LENGTH@ 44
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5737 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(component) @TO@ MethodInvocation:customizer.customize(component) @AT@ 5766 @LENGTH@ 32
------------UPD MethodInvocation@@configurer.customize(component) @TO@ customizer.customize(component) @AT@ 5766 @LENGTH@ 31
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5766 @LENGTH@ 10


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled(); @AT@ 5209 @LENGTH@ 160
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5217 @LENGTH@ 151
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5217 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5234 @LENGTH@ 134
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 5234 @LENGTH@ 64
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5234 @LENGTH@ 35
---------UPD MethodInvocation@@componentConfiguration.getConfigurer().isEnabled() @TO@ componentConfiguration.getCustomizer().isEnabled() @AT@ 5318 @LENGTH@ 50
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5318 @LENGTH@ 38


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled(); @AT@ 5226 @LENGTH@ 160
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5234 @LENGTH@ 151
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5234 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5251 @LENGTH@ 134
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 5251 @LENGTH@ 64
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5251 @LENGTH@ 35
---------UPD MethodInvocation@@componentConfiguration.getConfigurer().isEnabled() @TO@ componentConfiguration.getCustomizer().isEnabled() @AT@ 5335 @LENGTH@ 50
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5335 @LENGTH@ 38


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  DataFormatCustomizer<StringDataFormat> configurer : customizers) {    LOGGER.debug("Configure dataformat {}, with configurer {}",dataformat,configurer);    configurer.customize(dataformat);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  DataFormatCustomizer<StringDataFormat> customizer : customizers) {    LOGGER.debug("Configure dataformat {}, with customizer {}",dataformat,customizer);    customizer.customize(dataformat);  }} @AT@ 5306 @LENGTH@ 425
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 5310 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5310 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  DataFormatCustomizer<StringDataFormat> configurer : customizers) {    LOGGER.debug("Configure dataformat {}, with configurer {}",dataformat,configurer);    configurer.customize(dataformat);  }} @TO@ ThenBody:{  for (  DataFormatCustomizer<StringDataFormat> customizer : customizers) {    LOGGER.debug("Configure dataformat {}, with customizer {}",dataformat,customizer);    customizer.customize(dataformat);  }} @AT@ 5366 @LENGTH@ 365
------UPD EnhancedForStatement@@for (DataFormatCustomizer<StringDataFormat> configurer : customizers) {  LOGGER.debug("Configure dataformat {}, with configurer {}",dataformat,configurer);  configurer.customize(dataformat);} @TO@ for (DataFormatCustomizer<StringDataFormat> customizer : customizers) {  LOGGER.debug("Configure dataformat {}, with customizer {}",dataformat,customizer);  customizer.customize(dataformat);} @AT@ 5388 @LENGTH@ 325
---------UPD SingleVariableDeclaration@@DataFormatCustomizer<StringDataFormat> configurer @TO@ DataFormatCustomizer<StringDataFormat> customizer @AT@ 5393 @LENGTH@ 49
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5432 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure dataformat {}, with configurer {}",dataformat,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure dataformat {}, with customizer {}",dataformat,customizer) @AT@ 5484 @LENGTH@ 149
------------UPD MethodInvocation@@LOGGER.debug("Configure dataformat {}, with configurer {}",dataformat,configurer) @TO@ LOGGER.debug("Configure dataformat {}, with customizer {}",dataformat,customizer) @AT@ 5484 @LENGTH@ 148
---------------UPD SimpleName@@MethodName:debug:["Configure dataformat {}, with configurer {}", dataformat, configurer] @TO@ MethodName:debug:["Configure dataformat {}, with customizer {}", dataformat, customizer] @AT@ 5491 @LENGTH@ 141
------------------UPD StringLiteral@@"Configure dataformat {}, with configurer {}" @TO@ "Configure dataformat {}, with customizer {}" @AT@ 5530 @LENGTH@ 45
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5621 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(dataformat) @TO@ MethodInvocation:customizer.customize(dataformat) @AT@ 5658 @LENGTH@ 33
------------UPD MethodInvocation@@configurer.customize(dataformat) @TO@ customizer.customize(dataformat) @AT@ 5658 @LENGTH@ 32
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5658 @LENGTH@ 10


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled(); @AT@ 5311 @LENGTH@ 160
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5319 @LENGTH@ 151
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5319 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5336 @LENGTH@ 134
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 5336 @LENGTH@ 64
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5336 @LENGTH@ 35
---------UPD MethodInvocation@@componentConfiguration.getConfigurer().isEnabled() @TO@ componentConfiguration.getCustomizer().isEnabled() @AT@ 5420 @LENGTH@ 50
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5420 @LENGTH@ 38


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<BlobServiceComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<BlobServiceComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5522 @LENGTH@ 344
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 5526 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5526 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  ComponentCustomizer<BlobServiceComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ ThenBody:{  for (  ComponentCustomizer<BlobServiceComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5582 @LENGTH@ 284
------UPD EnhancedForStatement@@for (ComponentCustomizer<BlobServiceComponent> configurer : customizers) {  LOGGER.debug("Configure component {}, with configurer {}",component,configurer);  configurer.customize(component);} @TO@ for (ComponentCustomizer<BlobServiceComponent> customizer : customizers) {  LOGGER.debug("Configure component {}, with customizer {}",component,customizer);  customizer.customize(component);} @AT@ 5596 @LENGTH@ 260
---------UPD SingleVariableDeclaration@@ComponentCustomizer<BlobServiceComponent> configurer @TO@ ComponentCustomizer<BlobServiceComponent> customizer @AT@ 5601 @LENGTH@ 52
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5643 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5687 @LENGTH@ 106
------------UPD MethodInvocation@@LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5687 @LENGTH@ 105
---------------UPD SimpleName@@MethodName:debug:["Configure component {}, with configurer {}", component, configurer] @TO@ MethodName:debug:["Configure component {}, with customizer {}", component, customizer] @AT@ 5694 @LENGTH@ 98
------------------UPD StringLiteral@@"Configure component {}, with configurer {}" @TO@ "Configure component {}, with customizer {}" @AT@ 5700 @LENGTH@ 44
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5781 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(component) @TO@ MethodInvocation:customizer.customize(component) @AT@ 5810 @LENGTH@ 32
------------UPD MethodInvocation@@configurer.customize(component) @TO@ customizer.customize(component) @AT@ 5810 @LENGTH@ 31
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5810 @LENGTH@ 10


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<KeystoneComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<KeystoneComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5503 @LENGTH@ 341
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 5507 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5507 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  ComponentCustomizer<KeystoneComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ ThenBody:{  for (  ComponentCustomizer<KeystoneComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5563 @LENGTH@ 281
------UPD EnhancedForStatement@@for (ComponentCustomizer<KeystoneComponent> configurer : customizers) {  LOGGER.debug("Configure component {}, with configurer {}",component,configurer);  configurer.customize(component);} @TO@ for (ComponentCustomizer<KeystoneComponent> customizer : customizers) {  LOGGER.debug("Configure component {}, with customizer {}",component,customizer);  customizer.customize(component);} @AT@ 5577 @LENGTH@ 257
---------UPD SingleVariableDeclaration@@ComponentCustomizer<KeystoneComponent> configurer @TO@ ComponentCustomizer<KeystoneComponent> customizer @AT@ 5582 @LENGTH@ 49
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5621 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5665 @LENGTH@ 106
------------UPD MethodInvocation@@LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5665 @LENGTH@ 105
---------------UPD SimpleName@@MethodName:debug:["Configure component {}, with configurer {}", component, configurer] @TO@ MethodName:debug:["Configure component {}, with customizer {}", component, customizer] @AT@ 5672 @LENGTH@ 98
------------------UPD StringLiteral@@"Configure component {}, with configurer {}" @TO@ "Configure component {}, with customizer {}" @AT@ 5678 @LENGTH@ 44
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5759 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(component) @TO@ MethodInvocation:customizer.customize(component) @AT@ 5788 @LENGTH@ 32
------------UPD MethodInvocation@@configurer.customize(component) @TO@ customizer.customize(component) @AT@ 5788 @LENGTH@ 31
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5788 @LENGTH@ 10


UPD VariableDeclarationStatement@@List<String> confVarRegexList=Arrays.asList("hive.convert.join.bucket.mapjoin.tez","hive.optimize.index.filter.compact.maxsize","hive.tez.dummy","tez.task.dummy","hive.exec.dynamic.partition","hive.exec.dynamic.partition.mode","oozie.HadoopAccessorService.created","tez.queue.name"); @TO@ List<String> confVarRegexList=Arrays.asList("hive.convert.join.bucket.mapjoin.tez","hive.optimize.index.filter.compact.maxsize","hive.tez.dummy","tez.task.dummy","hive.exec.dynamic.partition","hive.exec.dynamic.partition.mode","hive.exec.max.dynamic.partitions","hive.exec.max.dynamic.partitions.pernode","oozie.HadoopAccessorService.created","tez.queue.name"); @AT@ 3709 @LENGTH@ 316
---UPD VariableDeclarationFragment@@confVarRegexList=Arrays.asList("hive.convert.join.bucket.mapjoin.tez","hive.optimize.index.filter.compact.maxsize","hive.tez.dummy","tez.task.dummy","hive.exec.dynamic.partition","hive.exec.dynamic.partition.mode","oozie.HadoopAccessorService.created","tez.queue.name") @TO@ confVarRegexList=Arrays.asList("hive.convert.join.bucket.mapjoin.tez","hive.optimize.index.filter.compact.maxsize","hive.tez.dummy","tez.task.dummy","hive.exec.dynamic.partition","hive.exec.dynamic.partition.mode","hive.exec.max.dynamic.partitions","hive.exec.max.dynamic.partitions.pernode","oozie.HadoopAccessorService.created","tez.queue.name") @AT@ 3722 @LENGTH@ 302
------UPD MethodInvocation@@Arrays.asList("hive.convert.join.bucket.mapjoin.tez","hive.optimize.index.filter.compact.maxsize","hive.tez.dummy","tez.task.dummy","hive.exec.dynamic.partition","hive.exec.dynamic.partition.mode","oozie.HadoopAccessorService.created","tez.queue.name") @TO@ Arrays.asList("hive.convert.join.bucket.mapjoin.tez","hive.optimize.index.filter.compact.maxsize","hive.tez.dummy","tez.task.dummy","hive.exec.dynamic.partition","hive.exec.dynamic.partition.mode","hive.exec.max.dynamic.partitions","hive.exec.max.dynamic.partitions.pernode","oozie.HadoopAccessorService.created","tez.queue.name") @AT@ 3741 @LENGTH@ 283
---------UPD SimpleName@@MethodName:asList:["hive.convert.join.bucket.mapjoin.tez", "hive.optimize.index.filter.compact.maxsize", "hive.tez.dummy", "tez.task.dummy", "hive.exec.dynamic.partition", "hive.exec.dynamic.partition.mode", "oozie.HadoopAccessorService.created", "tez.queue.name"] @TO@ MethodName:asList:["hive.convert.join.bucket.mapjoin.tez", "hive.optimize.index.filter.compact.maxsize", "hive.tez.dummy", "tez.task.dummy", "hive.exec.dynamic.partition", "hive.exec.dynamic.partition.mode", "hive.exec.max.dynamic.partitions", "hive.exec.max.dynamic.partitions.pernode", "oozie.HadoopAccessorService.created", "tez.queue.name"] @AT@ 3748 @LENGTH@ 276
------------INS StringLiteral@@"hive.exec.max.dynamic.partitions" @TO@ SimpleName@@MethodName:asList:["hive.convert.join.bucket.mapjoin.tez", "hive.optimize.index.filter.compact.maxsize", "hive.tez.dummy", "tez.task.dummy", "hive.exec.dynamic.partition", "hive.exec.dynamic.partition.mode", "oozie.HadoopAccessorService.created", "tez.queue.name"] @AT@ 3968 @LENGTH@ 34
------------INS StringLiteral@@"hive.exec.max.dynamic.partitions.pernode" @TO@ SimpleName@@MethodName:asList:["hive.convert.join.bucket.mapjoin.tez", "hive.optimize.index.filter.compact.maxsize", "hive.tez.dummy", "tez.task.dummy", "hive.exec.dynamic.partition", "hive.exec.dynamic.partition.mode", "oozie.HadoopAccessorService.created", "tez.queue.name"] @AT@ 4004 @LENGTH@ 42


UPD TypeDeclaration@@[static]ReconfiguringUserRepositoryImpl, QueryDslRepositorySupport @TO@ [static]ReconfiguringUserRepositoryImpl, QuerydslRepositorySupport @AT@ 3424 @LENGTH@ 321
---UPD SimpleType@@QueryDslRepositorySupport @TO@ QuerydslRepositorySupport @AT@ 3477 @LENGTH@ 25


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<DigitalOceanComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<DigitalOceanComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5543 @LENGTH@ 345
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 5547 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5547 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  ComponentCustomizer<DigitalOceanComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ ThenBody:{  for (  ComponentCustomizer<DigitalOceanComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5603 @LENGTH@ 285
------UPD EnhancedForStatement@@for (ComponentCustomizer<DigitalOceanComponent> configurer : customizers) {  LOGGER.debug("Configure component {}, with configurer {}",component,configurer);  configurer.customize(component);} @TO@ for (ComponentCustomizer<DigitalOceanComponent> customizer : customizers) {  LOGGER.debug("Configure component {}, with customizer {}",component,customizer);  customizer.customize(component);} @AT@ 5617 @LENGTH@ 261
---------UPD SingleVariableDeclaration@@ComponentCustomizer<DigitalOceanComponent> configurer @TO@ ComponentCustomizer<DigitalOceanComponent> customizer @AT@ 5622 @LENGTH@ 53
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5665 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5709 @LENGTH@ 106
------------UPD MethodInvocation@@LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5709 @LENGTH@ 105
---------------UPD SimpleName@@MethodName:debug:["Configure component {}, with configurer {}", component, configurer] @TO@ MethodName:debug:["Configure component {}, with customizer {}", component, customizer] @AT@ 5716 @LENGTH@ 98
------------------UPD StringLiteral@@"Configure component {}, with configurer {}" @TO@ "Configure component {}, with customizer {}" @AT@ 5722 @LENGTH@ 44
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5803 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(component) @TO@ MethodInvocation:customizer.customize(component) @AT@ 5832 @LENGTH@ 32
------------UPD MethodInvocation@@configurer.customize(component) @TO@ customizer.customize(component) @AT@ 5832 @LENGTH@ 31
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5832 @LENGTH@ 10


UPD TypeDeclaration@@ErrorHandlingClientCallback, [ClientCallback<T>] @TO@ [final]ErrorHandlingClientCallback, [ClientCallback<T>] @AT@ 2954 @LENGTH@ 459
---INS Modifier@@final @TO@ TypeDeclaration@@ErrorHandlingClientCallback, [ClientCallback<T>] @AT@ 2948 @LENGTH@ 5


INS MethodDeclaration@@public, void, MethodName:twoArgumentConstructorDoesNotThrowException,  @TO@ TypeDeclaration@@[@RunWith(MockitoJUnitRunner.class), public]RepositoryRestHandlerMappingUnitTests,  @AT@ 7732 @LENGTH@ 123
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:twoArgumentConstructorDoesNotThrowException,  @AT@ 7732 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:twoArgumentConstructorDoesNotThrowException,  @AT@ 7739 @LENGTH@ 4
---INS SimpleName@@MethodName:twoArgumentConstructorDoesNotThrowException @TO@ MethodDeclaration@@public, void, MethodName:twoArgumentConstructorDoesNotThrowException,  @AT@ 7744 @LENGTH@ 43
---INS ExpressionStatement@@ClassInstanceCreation:new RepositoryRestHandlerMapping(mappings,configuration) @TO@ MethodDeclaration@@public, void, MethodName:twoArgumentConstructorDoesNotThrowException,  @AT@ 7794 @LENGTH@ 58
------INS ClassInstanceCreation@@RepositoryRestHandlerMapping[mappings, configuration] @TO@ ExpressionStatement@@ClassInstanceCreation:new RepositoryRestHandlerMapping(mappings,configuration) @AT@ 7794 @LENGTH@ 57
---------INS New@@new @TO@ ClassInstanceCreation@@RepositoryRestHandlerMapping[mappings, configuration] @AT@ 7794 @LENGTH@ 3
---------INS SimpleType@@RepositoryRestHandlerMapping @TO@ ClassInstanceCreation@@RepositoryRestHandlerMapping[mappings, configuration] @AT@ 7798 @LENGTH@ 28
---------INS SimpleName@@mappings @TO@ ClassInstanceCreation@@RepositoryRestHandlerMapping[mappings, configuration] @AT@ 7827 @LENGTH@ 8
---------INS SimpleName@@configuration @TO@ ClassInstanceCreation@@RepositoryRestHandlerMapping[mappings, configuration] @AT@ 7837 @LENGTH@ 13


UPD MethodDeclaration@@public, void, MethodName:getDefinitionRefreshIfNecessaryWhenKeyIdNotFoundThenRefreshJwkDefinitions, Exception,  @TO@ public, void, MethodName:getDefinitionLoadIfNecessaryWhenKeyIdNotFoundThenLoadJwkDefinitions, Exception,  @AT@ 1137 @LENGTH@ 397
---UPD SimpleName@@MethodName:getDefinitionRefreshIfNecessaryWhenKeyIdNotFoundThenRefreshJwkDefinitions @TO@ MethodName:getDefinitionLoadIfNecessaryWhenKeyIdNotFoundThenLoadJwkDefinitions @AT@ 1149 @LENGTH@ 73
---UPD ExpressionStatement@@MethodInvocation:doNothing().when(jwkDefinitionSource).refreshJwkDefinitions() @TO@ MethodInvocation:when(JwkDefinitionSource.loadJwkDefinitions(any(URL.class))).thenReturn(Collections.<String,JwkDefinitionSource.JwkDefinitionHolder>emptyMap()) @AT@ 1341 @LENGTH@ 62
------UPD MethodInvocation@@doNothing().when(jwkDefinitionSource).refreshJwkDefinitions() @TO@ when(JwkDefinitionSource.loadJwkDefinitions(any(URL.class))).thenReturn(Collections.<String,JwkDefinitionSource.JwkDefinitionHolder>emptyMap()) @AT@ 1341 @LENGTH@ 61
---------UPD MethodInvocation@@MethodName:when:[jwkDefinitionSource] @TO@ MethodName:when:[JwkDefinitionSource.loadJwkDefinitions(any(URL.class))] @AT@ 1341 @LENGTH@ 37
------------UPD SimpleName@@jwkDefinitionSource @TO@ Name:JwkDefinitionSource @AT@ 1358 @LENGTH@ 19
------------INS MethodInvocation@@JwkDefinitionSource.loadJwkDefinitions(any(URL.class)) @TO@ MethodInvocation@@MethodName:when:[jwkDefinitionSource] @AT@ 1763 @LENGTH@ 54
---------------MOV SimpleName@@jwkDefinitionSource @TO@ MethodInvocation@@JwkDefinitionSource.loadJwkDefinitions(any(URL.class)) @AT@ 1358 @LENGTH@ 19
---------------INS SimpleName@@MethodName:loadJwkDefinitions:[any(URL.class)] @TO@ MethodInvocation@@JwkDefinitionSource.loadJwkDefinitions(any(URL.class)) @AT@ 1783 @LENGTH@ 34
------------------INS MethodInvocation@@any(URL.class) @TO@ SimpleName@@MethodName:loadJwkDefinitions:[any(URL.class)] @AT@ 1802 @LENGTH@ 14
---------------------INS SimpleName@@MethodName:any:[URL.class] @TO@ MethodInvocation@@any(URL.class) @AT@ 1802 @LENGTH@ 14
------------------------INS TypeLiteral@@URL.class @TO@ SimpleName@@MethodName:any:[URL.class] @AT@ 1806 @LENGTH@ 9
---------DEL MethodInvocation@@MethodName:doNothing:[] @AT@ 1341 @LENGTH@ 11
---------UPD SimpleName@@MethodName:refreshJwkDefinitions:[] @TO@ MethodName:emptyMap:[] @AT@ 1379 @LENGTH@ 23
---------INS SimpleName@@MethodName:thenReturn:[Collections.<String,JwkDefinitionSource.JwkDefinitionHolder>emptyMap()] @TO@ MethodInvocation@@doNothing().when(jwkDefinitionSource).refreshJwkDefinitions() @AT@ 1819 @LENGTH@ 83
------------INS MethodInvocation@@Collections.<String,JwkDefinitionSource.JwkDefinitionHolder>emptyMap() @TO@ SimpleName@@MethodName:thenReturn:[Collections.<String,JwkDefinitionSource.JwkDefinitionHolder>emptyMap()] @AT@ 1830 @LENGTH@ 71
---------------MOV SimpleName@@MethodName:refreshJwkDefinitions:[] @TO@ MethodInvocation@@Collections.<String,JwkDefinitionSource.JwkDefinitionHolder>emptyMap() @AT@ 1379 @LENGTH@ 23
---------------INS SimpleName@@Name:Collections @TO@ MethodInvocation@@Collections.<String,JwkDefinitionSource.JwkDefinitionHolder>emptyMap() @AT@ 1830 @LENGTH@ 11
---UPD ExpressionStatement@@MethodInvocation:jwkDefinitionSource.getDefinitionRefreshIfNecessary("invalid-key-id") @TO@ MethodInvocation:jwkDefinitionSource.getDefinitionLoadIfNecessary("invalid-key-id") @AT@ 1406 @LENGTH@ 70
------UPD MethodInvocation@@jwkDefinitionSource.getDefinitionRefreshIfNecessary("invalid-key-id") @TO@ jwkDefinitionSource.getDefinitionLoadIfNecessary("invalid-key-id") @AT@ 1406 @LENGTH@ 69
---------UPD SimpleName@@MethodName:getDefinitionRefreshIfNecessary:["invalid-key-id"] @TO@ MethodName:getDefinitionLoadIfNecessary:["invalid-key-id"] @AT@ 1426 @LENGTH@ 49
---UPD ExpressionStatement@@MethodInvocation:verify(jwkDefinitionSource).refreshJwkDefinitions() @TO@ MethodInvocation:verifyStatic() @AT@ 1479 @LENGTH@ 52
------DEL MethodInvocation@@verify(jwkDefinitionSource).refreshJwkDefinitions() @AT@ 1479 @LENGTH@ 51
---------DEL MethodInvocation@@MethodName:verify:[jwkDefinitionSource] @AT@ 1479 @LENGTH@ 27
------------DEL SimpleName@@jwkDefinitionSource @AT@ 1486 @LENGTH@ 19
---------DEL SimpleName@@MethodName:refreshJwkDefinitions:[] @AT@ 1507 @LENGTH@ 23
------INS MethodInvocation@@MethodName:verifyStatic:[] @TO@ ExpressionStatement@@MethodInvocation:verify(jwkDefinitionSource).refreshJwkDefinitions() @AT@ 1976 @LENGTH@ 14
---INS ExpressionStatement@@MethodInvocation:mockStatic(JwkDefinitionSource.class) @TO@ MethodDeclaration@@public, void, MethodName:getDefinitionRefreshIfNecessaryWhenKeyIdNotFoundThenRefreshJwkDefinitions, Exception,  @AT@ 1717 @LENGTH@ 38
------INS MethodInvocation@@mockStatic(JwkDefinitionSource.class) @TO@ ExpressionStatement@@MethodInvocation:mockStatic(JwkDefinitionSource.class) @AT@ 1717 @LENGTH@ 37
---------INS SimpleName@@MethodName:mockStatic:[JwkDefinitionSource.class] @TO@ MethodInvocation@@mockStatic(JwkDefinitionSource.class) @AT@ 1717 @LENGTH@ 37
------------INS TypeLiteral@@JwkDefinitionSource.class @TO@ SimpleName@@MethodName:mockStatic:[JwkDefinitionSource.class] @AT@ 1728 @LENGTH@ 25


UPD MethodDeclaration@@private, static, HiveIOExceptionHandlerChain, MethodName:get, JobConf job,  @TO@ private, static, synchronized, HiveIOExceptionHandlerChain, MethodName:get, JobConf job,  @AT@ 1139 @LENGTH@ 444
---INS Modifier@@synchronized @TO@ MethodDeclaration@@private, static, HiveIOExceptionHandlerChain, MethodName:get, JobConf job,  @AT@ 1160 @LENGTH@ 12


INS ExpressionStatement@@MethodInvocation:response.put("active",true) @TO@ MethodDeclaration@@public, Map<String,?>, MethodName:checkToken, @RequestParam("token") String value,  @AT@ 3694 @LENGTH@ 29
---INS MethodInvocation@@response.put("active",true) @TO@ ExpressionStatement@@MethodInvocation:response.put("active",true) @AT@ 3694 @LENGTH@ 28
------INS SimpleName@@Name:response @TO@ MethodInvocation@@response.put("active",true) @AT@ 3694 @LENGTH@ 8
------INS SimpleName@@MethodName:put:["active", true] @TO@ MethodInvocation@@response.put("active",true) @AT@ 3703 @LENGTH@ 19
---------INS StringLiteral@@"active" @TO@ SimpleName@@MethodName:put:["active", true] @AT@ 3707 @LENGTH@ 8
---------INS BooleanLiteral@@true @TO@ SimpleName@@MethodName:put:["active", true] @AT@ 3717 @LENGTH@ 4


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled(); @AT@ 5192 @LENGTH@ 160
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5200 @LENGTH@ 151
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5200 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5217 @LENGTH@ 134
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 5217 @LENGTH@ 64
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5217 @LENGTH@ 35
---------UPD MethodInvocation@@componentConfiguration.getConfigurer().isEnabled() @TO@ componentConfiguration.getCustomizer().isEnabled() @AT@ 5301 @LENGTH@ 50
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5301 @LENGTH@ 38


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<SpringBatchComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<SpringBatchComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5530 @LENGTH@ 344
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 5534 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5534 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  ComponentCustomizer<SpringBatchComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ ThenBody:{  for (  ComponentCustomizer<SpringBatchComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5590 @LENGTH@ 284
------UPD EnhancedForStatement@@for (ComponentCustomizer<SpringBatchComponent> configurer : customizers) {  LOGGER.debug("Configure component {}, with configurer {}",component,configurer);  configurer.customize(component);} @TO@ for (ComponentCustomizer<SpringBatchComponent> customizer : customizers) {  LOGGER.debug("Configure component {}, with customizer {}",component,customizer);  customizer.customize(component);} @AT@ 5604 @LENGTH@ 260
---------UPD SingleVariableDeclaration@@ComponentCustomizer<SpringBatchComponent> configurer @TO@ ComponentCustomizer<SpringBatchComponent> customizer @AT@ 5609 @LENGTH@ 52
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5651 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5695 @LENGTH@ 106
------------UPD MethodInvocation@@LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5695 @LENGTH@ 105
---------------UPD SimpleName@@MethodName:debug:["Configure component {}, with configurer {}", component, configurer] @TO@ MethodName:debug:["Configure component {}, with customizer {}", component, customizer] @AT@ 5702 @LENGTH@ 98
------------------UPD StringLiteral@@"Configure component {}, with configurer {}" @TO@ "Configure component {}, with customizer {}" @AT@ 5708 @LENGTH@ 44
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5789 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(component) @TO@ MethodInvocation:customizer.customize(component) @AT@ 5818 @LENGTH@ 32
------------UPD MethodInvocation@@configurer.customize(component) @TO@ customizer.customize(component) @AT@ 5818 @LENGTH@ 31
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5818 @LENGTH@ 10


UPD TypeDeclaration@@[@UriEndpoint(scheme="chronicle-engine",title="Chronicle Engine",syntax="chronicle-engine:addresses/path",consumerClass=ChronicleEngineConsumer.class,label="Chronicle"), public]ChronicleEngineEndpoint, DefaultEndpoint @TO@ [@UriEndpoint(scheme="chronicle-engine",title="Chronicle Engine",syntax="chronicle-engine:addresses/path",consumerClass=ChronicleEngineConsumer.class,label="datagrid,cache"), public]ChronicleEngineEndpoint, DefaultEndpoint @AT@ 1441 @LENGTH@ 2293
---UPD NormalAnnotation@@@UriEndpoint(scheme="chronicle-engine",title="Chronicle Engine",syntax="chronicle-engine:addresses/path",consumerClass=ChronicleEngineConsumer.class,label="Chronicle") @TO@ @UriEndpoint(scheme="chronicle-engine",title="Chronicle Engine",syntax="chronicle-engine:addresses/path",consumerClass=ChronicleEngineConsumer.class,label="datagrid,cache") @AT@ 1441 @LENGTH@ 181


UPD ReturnStatement@@MethodInvocation:resolver.getValueInternal(property,surroundingObject,evaluator,path) @TO@ MethodInvocation:resolver.getValueInternal(property,surroundingObject,evaluator,path).orElse(null) @AT@ 2160 @LENGTH@ 79
---UPD MethodInvocation@@resolver.getValueInternal(property,surroundingObject,evaluator,path) @TO@ resolver.getValueInternal(property,surroundingObject,evaluator,path).orElse(null) @AT@ 2167 @LENGTH@ 71
------INS MethodInvocation@@MethodName:getValueInternal:[property, surroundingObject, evaluator, path] @TO@ MethodInvocation@@resolver.getValueInternal(property,surroundingObject,evaluator,path) @AT@ 2167 @LENGTH@ 71
---------INS SimpleName@@property @TO@ MethodInvocation@@MethodName:getValueInternal:[property, surroundingObject, evaluator, path] @AT@ 2193 @LENGTH@ 8
---------INS SimpleName@@surroundingObject @TO@ MethodInvocation@@MethodName:getValueInternal:[property, surroundingObject, evaluator, path] @AT@ 2203 @LENGTH@ 17
---------INS SimpleName@@evaluator @TO@ MethodInvocation@@MethodName:getValueInternal:[property, surroundingObject, evaluator, path] @AT@ 2222 @LENGTH@ 9
---------INS SimpleName@@path @TO@ MethodInvocation@@MethodName:getValueInternal:[property, surroundingObject, evaluator, path] @AT@ 2233 @LENGTH@ 4
------DEL SimpleName@@MethodName:getValueInternal:[property, surroundingObject, evaluator, path] @AT@ 2176 @LENGTH@ 62
---------DEL SimpleName@@property @AT@ 2193 @LENGTH@ 8
---------DEL SimpleName@@surroundingObject @AT@ 2203 @LENGTH@ 17
---------DEL SimpleName@@evaluator @AT@ 2222 @LENGTH@ 9
---------DEL SimpleName@@path @AT@ 2233 @LENGTH@ 4
------INS SimpleName@@MethodName:orElse:[null] @TO@ MethodInvocation@@resolver.getValueInternal(property,surroundingObject,evaluator,path) @AT@ 2239 @LENGTH@ 12
---------INS NullLiteral@@null @TO@ SimpleName@@MethodName:orElse:[null] @AT@ 2246 @LENGTH@ 4


UPD FieldDeclaration@@public, static, String, [HIVE_IO_EXCEPTION_HANDLE_CHAIN="hive.io.exception.handlers"] @TO@ public, static, final, String, [HIVE_IO_EXCEPTION_HANDLE_CHAIN="hive.io.exception.handlers"] @AT@ 1497 @LENGTH@ 83
---INS Modifier@@final @TO@ FieldDeclaration@@public, static, String, [HIVE_IO_EXCEPTION_HANDLE_CHAIN="hive.io.exception.handlers"] @AT@ 1511 @LENGTH@ 5


UPD SwitchStatement@@switch (determineOperation(exchange)) {case DigitalOceanOperations.list:  getImages(exchange);break;case DigitalOceanOperations.ownList:getUserImages(exchange);break;case DigitalOceanOperations.listActions:getImageActions(exchange);break;case DigitalOceanOperations.get:getImage(exchange);break;case DigitalOceanOperations.update:updateImage(exchange);break;case DigitalOceanOperations.delete:deleteImage(exchange);break;case DigitalOceanOperations.transfer:transferImage(exchange);break;case DigitalOceanOperations.convert:convertImageToSnapshot(exchange);break;default :throw new IllegalArgumentException("Unsupported operation");} @TO@ switch (determineOperation(exchange)) {case list:  getImages(exchange);break;case ownList:getUserImages(exchange);break;case listActions:getImageActions(exchange);break;case get:getImage(exchange);break;case update:updateImage(exchange);break;case delete:deleteImage(exchange);break;case transfer:transferImage(exchange);break;case convert:convertImageToSnapshot(exchange);break;default :throw new IllegalArgumentException("Unsupported operation");} @AT@ 1770 @LENGTH@ 1045
---UPD SwitchCase@@case DigitalOceanOperations.list: @TO@ case list: @AT@ 1822 @LENGTH@ 33
------DEL QualifiedName@@DigitalOceanOperations.list @AT@ 1827 @LENGTH@ 27
---------DEL SimpleName@@DigitalOceanOperations @AT@ 1827 @LENGTH@ 22
---------DEL SimpleName@@list @AT@ 1850 @LENGTH@ 4
------INS SimpleName@@list @TO@ SwitchCase@@case DigitalOceanOperations.list: @AT@ 1827 @LENGTH@ 4
---UPD SwitchCase@@case DigitalOceanOperations.ownList: @TO@ case ownList: @AT@ 1928 @LENGTH@ 36
------INS SimpleName@@ownList @TO@ SwitchCase@@case DigitalOceanOperations.ownList: @AT@ 1910 @LENGTH@ 7
------DEL QualifiedName@@DigitalOceanOperations.ownList @AT@ 1933 @LENGTH@ 30
---------DEL SimpleName@@DigitalOceanOperations @AT@ 1933 @LENGTH@ 22
---------DEL SimpleName@@ownList @AT@ 1956 @LENGTH@ 7
---UPD SwitchCase@@case DigitalOceanOperations.listActions: @TO@ case listActions: @AT@ 2041 @LENGTH@ 40
------INS SimpleName@@listActions @TO@ SwitchCase@@case DigitalOceanOperations.listActions: @AT@ 2000 @LENGTH@ 11
------DEL QualifiedName@@DigitalOceanOperations.listActions @AT@ 2046 @LENGTH@ 34
---------DEL SimpleName@@DigitalOceanOperations @AT@ 2046 @LENGTH@ 22
---------DEL SimpleName@@listActions @AT@ 2069 @LENGTH@ 11
---UPD SwitchCase@@case DigitalOceanOperations.get: @TO@ case get: @AT@ 2160 @LENGTH@ 32
------INS SimpleName@@get @TO@ SwitchCase@@case DigitalOceanOperations.get: @AT@ 2096 @LENGTH@ 3
------DEL QualifiedName@@DigitalOceanOperations.get @AT@ 2165 @LENGTH@ 26
---------DEL SimpleName@@DigitalOceanOperations @AT@ 2165 @LENGTH@ 22
---------DEL SimpleName@@get @AT@ 2188 @LENGTH@ 3
---UPD SwitchCase@@case DigitalOceanOperations.update: @TO@ case update: @AT@ 2264 @LENGTH@ 35
------INS SimpleName@@update @TO@ SwitchCase@@case DigitalOceanOperations.update: @AT@ 2177 @LENGTH@ 6
------DEL QualifiedName@@DigitalOceanOperations.update @AT@ 2269 @LENGTH@ 29
---------DEL SimpleName@@DigitalOceanOperations @AT@ 2269 @LENGTH@ 22
---------DEL SimpleName@@update @AT@ 2292 @LENGTH@ 6
---UPD SwitchCase@@case DigitalOceanOperations.delete: @TO@ case delete: @AT@ 2374 @LENGTH@ 35
------INS SimpleName@@delete @TO@ SwitchCase@@case DigitalOceanOperations.delete: @AT@ 2264 @LENGTH@ 6
------DEL QualifiedName@@DigitalOceanOperations.delete @AT@ 2379 @LENGTH@ 29
---------DEL SimpleName@@DigitalOceanOperations @AT@ 2379 @LENGTH@ 22
---------DEL SimpleName@@delete @AT@ 2402 @LENGTH@ 6
---UPD SwitchCase@@case DigitalOceanOperations.transfer: @TO@ case transfer: @AT@ 2484 @LENGTH@ 37
------INS SimpleName@@transfer @TO@ SwitchCase@@case DigitalOceanOperations.transfer: @AT@ 2351 @LENGTH@ 8
------DEL QualifiedName@@DigitalOceanOperations.transfer @AT@ 2489 @LENGTH@ 31
---------DEL SimpleName@@DigitalOceanOperations @AT@ 2489 @LENGTH@ 22
---------DEL SimpleName@@transfer @AT@ 2512 @LENGTH@ 8
---UPD SwitchCase@@case DigitalOceanOperations.convert: @TO@ case convert: @AT@ 2598 @LENGTH@ 36
------INS SimpleName@@convert @TO@ SwitchCase@@case DigitalOceanOperations.convert: @AT@ 2442 @LENGTH@ 7
------DEL QualifiedName@@DigitalOceanOperations.convert @AT@ 2603 @LENGTH@ 30
---------DEL SimpleName@@DigitalOceanOperations @AT@ 2603 @LENGTH@ 22
---------DEL SimpleName@@convert @AT@ 2626 @LENGTH@ 7


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled(); @AT@ 5209 @LENGTH@ 160
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5217 @LENGTH@ 151
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5217 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5234 @LENGTH@ 134
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 5234 @LENGTH@ 64
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5234 @LENGTH@ 35
---------UPD MethodInvocation@@componentConfiguration.getConfigurer().isEnabled() @TO@ componentConfiguration.getCustomizer().isEnabled() @AT@ 5318 @LENGTH@ 50
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5318 @LENGTH@ 38


UPD IfStatement@@if (base instanceof Component) {  Component old=getCamelContext().removeComponent(scheme);  getCamelContext().addService(base,true,true);  getCamelContext().addComponent(scheme,(Component)base);} @TO@ if (base instanceof Component) {  getCamelContext().removeComponent(scheme);  getCamelContext().addService(base,true,true);  getCamelContext().addComponent(scheme,(Component)base);} @AT@ 3653 @LENGTH@ 378
---UPD Block@@ThenBody:{  Component old=getCamelContext().removeComponent(scheme);  getCamelContext().addService(base,true,true);  getCamelContext().addComponent(scheme,(Component)base);} @TO@ ThenBody:{  getCamelContext().removeComponent(scheme);  getCamelContext().addService(base,true,true);  getCamelContext().addComponent(scheme,(Component)base);} @AT@ 3684 @LENGTH@ 347
------INS ExpressionStatement@@MethodInvocation:getCamelContext().removeComponent(scheme) @TO@ Block@@ThenBody:{  Component old=getCamelContext().removeComponent(scheme);  getCamelContext().addService(base,true,true);  getCamelContext().addComponent(scheme,(Component)base);} @AT@ 3688 @LENGTH@ 42
---------MOV MethodInvocation@@getCamelContext().removeComponent(scheme) @TO@ ExpressionStatement@@MethodInvocation:getCamelContext().removeComponent(scheme) @AT@ 3726 @LENGTH@ 41
------DEL VariableDeclarationStatement@@Component old=getCamelContext().removeComponent(scheme); @AT@ 3710 @LENGTH@ 58
---------DEL SimpleType@@Component @AT@ 3710 @LENGTH@ 9
---------DEL VariableDeclarationFragment@@old=getCamelContext().removeComponent(scheme) @AT@ 3720 @LENGTH@ 47
------------DEL SimpleName@@old @AT@ 3720 @LENGTH@ 3


UPD VariableDeclarationStatement@@Cache cache=cacheContainer.getCache("default"); @TO@ Cache<String,String> cache=cacheContainer.getCache("default"); @AT@ 1473 @LENGTH@ 49
---INS ParameterizedType@@Cache<String,String> @TO@ VariableDeclarationStatement@@Cache cache=cacheContainer.getCache("default"); @AT@ 1473 @LENGTH@ 20
------INS SimpleType@@Cache @TO@ ParameterizedType@@Cache<String,String> @AT@ 1473 @LENGTH@ 5
------INS SimpleType@@String @TO@ ParameterizedType@@Cache<String,String> @AT@ 1479 @LENGTH@ 6
------INS SimpleType@@String @TO@ ParameterizedType@@Cache<String,String> @AT@ 1486 @LENGTH@ 6
---DEL SimpleType@@Cache @AT@ 1473 @LENGTH@ 5


INS FieldDeclaration@@private, final, ExpressionParser, [emptyValueExpressionParser=new BeanWrapperExpressionParser()] @TO@ TypeDeclaration@@[public, abstract]AbstractMvcView, [View] @AT@ 3627 @LENGTH@ 94
---INS Modifier@@private @TO@ FieldDeclaration@@private, final, ExpressionParser, [emptyValueExpressionParser=new BeanWrapperExpressionParser()] @AT@ 3627 @LENGTH@ 7
---INS Modifier@@final @TO@ FieldDeclaration@@private, final, ExpressionParser, [emptyValueExpressionParser=new BeanWrapperExpressionParser()] @AT@ 3635 @LENGTH@ 5
---INS SimpleType@@ExpressionParser @TO@ FieldDeclaration@@private, final, ExpressionParser, [emptyValueExpressionParser=new BeanWrapperExpressionParser()] @AT@ 3641 @LENGTH@ 16
---INS VariableDeclarationFragment@@emptyValueExpressionParser=new BeanWrapperExpressionParser() @TO@ FieldDeclaration@@private, final, ExpressionParser, [emptyValueExpressionParser=new BeanWrapperExpressionParser()] @AT@ 3658 @LENGTH@ 62
------INS SimpleName@@emptyValueExpressionParser @TO@ VariableDeclarationFragment@@emptyValueExpressionParser=new BeanWrapperExpressionParser() @AT@ 3658 @LENGTH@ 26
------INS ClassInstanceCreation@@BeanWrapperExpressionParser[] @TO@ VariableDeclarationFragment@@emptyValueExpressionParser=new BeanWrapperExpressionParser() @AT@ 3687 @LENGTH@ 33
---------INS New@@new @TO@ ClassInstanceCreation@@BeanWrapperExpressionParser[] @AT@ 3687 @LENGTH@ 3
---------INS SimpleType@@BeanWrapperExpressionParser @TO@ ClassInstanceCreation@@BeanWrapperExpressionParser[] @AT@ 3691 @LENGTH@ 27


UPD VariableDeclarationStatement@@MongoPersistentEntity<?> entity=context.getPersistentEntity(Entity.class); @TO@ MongoPersistentEntity<?> entity=context.getRequiredPersistentEntity(Entity.class); @AT@ 4255 @LENGTH@ 76
---UPD VariableDeclarationFragment@@entity=context.getPersistentEntity(Entity.class) @TO@ entity=context.getRequiredPersistentEntity(Entity.class) @AT@ 4280 @LENGTH@ 50
------UPD MethodInvocation@@context.getPersistentEntity(Entity.class) @TO@ context.getRequiredPersistentEntity(Entity.class) @AT@ 4289 @LENGTH@ 41
---------UPD SimpleName@@MethodName:getPersistentEntity:[Entity.class] @TO@ MethodName:getRequiredPersistentEntity:[Entity.class] @AT@ 4297 @LENGTH@ 33


UPD ExpressionStatement@@MethodInvocation:getHeaders().putAll(that.getHeaders()) @TO@ MethodInvocation:super.getHeaders().putAll(that.getHeaders()) @AT@ 1847 @LENGTH@ 39
---UPD MethodInvocation@@getHeaders().putAll(that.getHeaders()) @TO@ super.getHeaders().putAll(that.getHeaders()) @AT@ 1847 @LENGTH@ 38
------INS SuperMethodInvocation@@super.getHeaders() @TO@ MethodInvocation@@getHeaders().putAll(that.getHeaders()) @AT@ 1847 @LENGTH@ 18
---------INS SimpleName@@MethodName:getHeaders:[] @TO@ SuperMethodInvocation@@super.getHeaders() @AT@ 1853 @LENGTH@ 10
------DEL MethodInvocation@@MethodName:getHeaders:[] @AT@ 1847 @LENGTH@ 12


UPD TypeDeclaration@@[public]PersonRepository, [MongoRepository<Person,String>, QueryDslPredicateExecutor<Person>] @TO@ [public]PersonRepository, [MongoRepository<Person,String>, QuerydslPredicateExecutor<Person>] @AT@ 1707 @LENGTH@ 8038
---UPD ParameterizedType@@QueryDslPredicateExecutor<Person> @TO@ QuerydslPredicateExecutor<Person> @AT@ 1782 @LENGTH@ 33
------UPD SimpleType@@QueryDslPredicateExecutor @TO@ QuerydslPredicateExecutor @AT@ 1782 @LENGTH@ 25


UPD VariableDeclarationStatement@@ProtectionDomain domain=componentView.getProxyClass().getProtectionDomain(); @TO@ ProtectionDomain domain=new ProtectionDomain(componentView.getProxyClass().getProtectionDomain().getCodeSource(),null,null,getGrantedRoles(ejbComponent)); @AT@ 4426 @LENGTH@ 78
---UPD VariableDeclarationFragment@@domain=componentView.getProxyClass().getProtectionDomain() @TO@ domain=new ProtectionDomain(componentView.getProxyClass().getProtectionDomain().getCodeSource(),null,null,getGrantedRoles(ejbComponent)) @AT@ 4443 @LENGTH@ 60
------DEL MethodInvocation@@componentView.getProxyClass().getProtectionDomain() @AT@ 4452 @LENGTH@ 51
------INS ClassInstanceCreation@@ProtectionDomain[componentView.getProxyClass().getProtectionDomain().getCodeSource(), null, null, getGrantedRoles(ejbComponent)] @TO@ VariableDeclarationFragment@@domain=componentView.getProxyClass().getProtectionDomain() @AT@ 4739 @LENGTH@ 133
---------INS New@@new @TO@ ClassInstanceCreation@@ProtectionDomain[componentView.getProxyClass().getProtectionDomain().getCodeSource(), null, null, getGrantedRoles(ejbComponent)] @AT@ 4739 @LENGTH@ 3
---------INS SimpleType@@ProtectionDomain @TO@ ClassInstanceCreation@@ProtectionDomain[componentView.getProxyClass().getProtectionDomain().getCodeSource(), null, null, getGrantedRoles(ejbComponent)] @AT@ 4743 @LENGTH@ 16
---------INS MethodInvocation@@componentView.getProxyClass().getProtectionDomain().getCodeSource() @TO@ ClassInstanceCreation@@ProtectionDomain[componentView.getProxyClass().getProtectionDomain().getCodeSource(), null, null, getGrantedRoles(ejbComponent)] @AT@ 4761 @LENGTH@ 67
------------MOV MethodInvocation@@MethodName:getProxyClass:[] @TO@ MethodInvocation@@componentView.getProxyClass().getProtectionDomain().getCodeSource() @AT@ 4452 @LENGTH@ 29
------------MOV SimpleName@@Name:componentView @TO@ MethodInvocation@@componentView.getProxyClass().getProtectionDomain().getCodeSource() @AT@ 4452 @LENGTH@ 13
------------MOV SimpleName@@MethodName:getProtectionDomain:[] @TO@ MethodInvocation@@componentView.getProxyClass().getProtectionDomain().getCodeSource() @AT@ 4482 @LENGTH@ 21
------------INS MethodInvocation@@MethodName:getProtectionDomain:[] @TO@ MethodInvocation@@componentView.getProxyClass().getProtectionDomain().getCodeSource() @AT@ 4761 @LENGTH@ 51
---------INS NullLiteral@@null @TO@ ClassInstanceCreation@@ProtectionDomain[componentView.getProxyClass().getProtectionDomain().getCodeSource(), null, null, getGrantedRoles(ejbComponent)] @AT@ 4830 @LENGTH@ 4
---------INS NullLiteral@@null @TO@ ClassInstanceCreation@@ProtectionDomain[componentView.getProxyClass().getProtectionDomain().getCodeSource(), null, null, getGrantedRoles(ejbComponent)] @AT@ 4836 @LENGTH@ 4
---------INS MethodInvocation@@getGrantedRoles(ejbComponent) @TO@ ClassInstanceCreation@@ProtectionDomain[componentView.getProxyClass().getProtectionDomain().getCodeSource(), null, null, getGrantedRoles(ejbComponent)] @AT@ 4842 @LENGTH@ 29
------------INS SimpleName@@MethodName:getGrantedRoles:[ejbComponent] @TO@ MethodInvocation@@getGrantedRoles(ejbComponent) @AT@ 4842 @LENGTH@ 29
---------------INS SimpleName@@ejbComponent @TO@ SimpleName@@MethodName:getGrantedRoles:[ejbComponent] @AT@ 4858 @LENGTH@ 12


UPD IfStatement@@if (!name.startsWith(LoggingProperties.LOGGING)) {  return false;} @TO@ if (!name.startsWith(LoggingProperties.LOGGING + ".")) {  return false;} @AT@ 3229 @LENGTH@ 86
---UPD PrefixExpression@@!name.startsWith(LoggingProperties.LOGGING) @TO@ !name.startsWith(LoggingProperties.LOGGING + ".") @AT@ 3233 @LENGTH@ 43
------UPD MethodInvocation@@name.startsWith(LoggingProperties.LOGGING) @TO@ name.startsWith(LoggingProperties.LOGGING + ".") @AT@ 3234 @LENGTH@ 42
---------UPD SimpleName@@MethodName:startsWith:[LoggingProperties.LOGGING] @TO@ MethodName:startsWith:[LoggingProperties.LOGGING + "."] @AT@ 3239 @LENGTH@ 37
------------INS InfixExpression@@LoggingProperties.LOGGING + "." @TO@ SimpleName@@MethodName:startsWith:[LoggingProperties.LOGGING] @AT@ 3250 @LENGTH@ 31
---------------INS QualifiedName@@LoggingProperties.LOGGING @TO@ InfixExpression@@LoggingProperties.LOGGING + "." @AT@ 3250 @LENGTH@ 25
------------------MOV SimpleName@@LoggingProperties @TO@ QualifiedName@@LoggingProperties.LOGGING @AT@ 3250 @LENGTH@ 17
------------------MOV SimpleName@@LOGGING @TO@ QualifiedName@@LoggingProperties.LOGGING @AT@ 3268 @LENGTH@ 7
---------------INS Operator@@+ @TO@ InfixExpression@@LoggingProperties.LOGGING + "." @AT@ 3275 @LENGTH@ 1
---------------INS StringLiteral@@"." @TO@ InfixExpression@@LoggingProperties.LOGGING + "." @AT@ 3278 @LENGTH@ 3
------------DEL QualifiedName@@LoggingProperties.LOGGING @AT@ 3250 @LENGTH@ 25


UPD ExpressionStatement@@MethodInvocation:Assert.notNull(value) @TO@ MethodInvocation:Assert.notNull(value,"'value' must not be null") @AT@ 1606 @LENGTH@ 22
---UPD MethodInvocation@@Assert.notNull(value) @TO@ Assert.notNull(value,"'value' must not be null") @AT@ 1606 @LENGTH@ 21
------UPD SimpleName@@MethodName:notNull:[value] @TO@ MethodName:notNull:[value, "'value' must not be null"] @AT@ 1613 @LENGTH@ 14
---------INS StringLiteral@@"'value' must not be null" @TO@ SimpleName@@MethodName:notNull:[value] @AT@ 1633 @LENGTH@ 26


UPD ExpressionStatement@@MethodInvocation:new Execution(){
  @Override public void doWith(  MongoOperations operations){
    operations.findAll(Object.class);
  }
}
.assertDataAccessException() @TO@ MethodInvocation:new Execution(){
  @Override public void doWith(  MongoOperations operations){
    operations.findAll(Object.class);
  }
}
.assertException(IllegalArgumentException.class) @AT@ 5860 @LENGTH@ 158
---UPD MethodInvocation@@new Execution(){
  @Override public void doWith(  MongoOperations operations){
    operations.findAll(Object.class);
  }
}
.assertDataAccessException() @TO@ new Execution(){
  @Override public void doWith(  MongoOperations operations){
    operations.findAll(Object.class);
  }
}
.assertException(IllegalArgumentException.class) @AT@ 5860 @LENGTH@ 157
------UPD SimpleName@@MethodName:assertDataAccessException:[] @TO@ MethodName:assertException:[IllegalArgumentException.class] @AT@ 5990 @LENGTH@ 27
---------INS TypeLiteral@@IllegalArgumentException.class @TO@ SimpleName@@MethodName:assertDataAccessException:[] @AT@ 6006 @LENGTH@ 30


UPD IfStatement@@if (TestUtils.getPropertyValue(consumers.keySet().iterator().next(),"queue",BlockingQueue.class).size() > 3) {  prefetched.countDown();  break;} @TO@ if (TestUtils.getPropertyValue(consumers.iterator().next(),"queue",BlockingQueue.class).size() > 3) {  prefetched.countDown();  break;} @AT@ 13345 @LENGTH@ 166
---UPD InfixExpression@@TestUtils.getPropertyValue(consumers.keySet().iterator().next(),"queue",BlockingQueue.class).size() > 3 @TO@ TestUtils.getPropertyValue(consumers.iterator().next(),"queue",BlockingQueue.class).size() > 3 @AT@ 13349 @LENGTH@ 112
------UPD MethodInvocation@@TestUtils.getPropertyValue(consumers.keySet().iterator().next(),"queue",BlockingQueue.class).size() @TO@ TestUtils.getPropertyValue(consumers.iterator().next(),"queue",BlockingQueue.class).size() @AT@ 13349 @LENGTH@ 108
---------UPD MethodInvocation@@MethodName:getPropertyValue:[consumers.keySet().iterator().next(), "queue", BlockingQueue.class] @TO@ MethodName:getPropertyValue:[consumers.iterator().next(), "queue", BlockingQueue.class] @AT@ 13349 @LENGTH@ 94
------------UPD MethodInvocation@@consumers.keySet().iterator().next() @TO@ consumers.iterator().next() @AT@ 13376 @LENGTH@ 36
---------------DEL MethodInvocation@@MethodName:keySet:[] @AT@ 13376 @LENGTH@ 18


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled(); @AT@ 5226 @LENGTH@ 160
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5234 @LENGTH@ 151
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5234 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5251 @LENGTH@ 134
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 5251 @LENGTH@ 64
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5251 @LENGTH@ 35
---------UPD MethodInvocation@@componentConfiguration.getConfigurer().isEnabled() @TO@ componentConfiguration.getCustomizer().isEnabled() @AT@ 5335 @LENGTH@ 50
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5335 @LENGTH@ 38


UPD VariableDeclarationStatement@@GeoSpatialIndexed index=property.findAnnotation(GeoSpatialIndexed.class); @TO@ Optional<GeoSpatialIndexed> index=property.findAnnotation(GeoSpatialIndexed.class); @AT@ 13104 @LENGTH@ 75
---DEL SimpleType@@GeoSpatialIndexed @AT@ 13104 @LENGTH@ 17
---INS ParameterizedType@@Optional<GeoSpatialIndexed> @TO@ VariableDeclarationStatement@@GeoSpatialIndexed index=property.findAnnotation(GeoSpatialIndexed.class); @AT@ 13131 @LENGTH@ 27
------INS SimpleType@@Optional @TO@ ParameterizedType@@Optional<GeoSpatialIndexed> @AT@ 13131 @LENGTH@ 8
------INS SimpleType@@GeoSpatialIndexed @TO@ ParameterizedType@@Optional<GeoSpatialIndexed> @AT@ 13140 @LENGTH@ 17


UPD FieldDeclaration@@private, static, String, [MASKED_VALUE="###_MASKED_###"] @TO@ private, static, final, String, [MASKED_VALUE="###_MASKED_###"] @AT@ 1765 @LENGTH@ 54
---INS Modifier@@final @TO@ FieldDeclaration@@private, static, String, [MASKED_VALUE="###_MASKED_###"] @AT@ 1734 @LENGTH@ 5


UPD IfStatement@@if (node != null) {  Asset asset=node.getAsset();  if (asset instanceof SwaggerConfigurationAsset) {    this.configurationAsset=(SwaggerConfigurationAsset)asset;  } else {    this.configurationAsset=new SwaggerConfigurationAsset(asset.openStream());    getArchive().add(this.configurationAsset,SWAGGER_CONFIGURATION_PATH);  }} else {  this.configurationAsset=new SwaggerConfigurationAsset();  getArchive().add(this.configurationAsset,SWAGGER_CONFIGURATION_PATH);} @TO@ if (node != null) {  Asset asset=node.getAsset();  if (asset instanceof SwaggerConfigurationAsset) {    this.configurationAsset=(SwaggerConfigurationAsset)asset;  } else {    this.configurationAsset=new SwaggerConfigurationAsset(asset.openStream());    getArchive().add(this.configurationAsset,node.getPath());  }} else {  this.configurationAsset=new SwaggerConfigurationAsset();  if (getArchive().getName().endsWith(".war")) {    getArchive().add(this.configurationAsset,"WEB-INF/classes/" + SWAGGER_CONFIGURATION_PATH);  } else {    getArchive().add(this.configurationAsset,SWAGGER_CONFIGURATION_PATH);  }} @AT@ 4234 @LENGTH@ 597
---UPD Block@@ThenBody:{  Asset asset=node.getAsset();  if (asset instanceof SwaggerConfigurationAsset) {    this.configurationAsset=(SwaggerConfigurationAsset)asset;  } else {    this.configurationAsset=new SwaggerConfigurationAsset(asset.openStream());    getArchive().add(this.configurationAsset,SWAGGER_CONFIGURATION_PATH);  }} @TO@ ThenBody:{  Asset asset=node.getAsset();  if (asset instanceof SwaggerConfigurationAsset) {    this.configurationAsset=(SwaggerConfigurationAsset)asset;  } else {    this.configurationAsset=new SwaggerConfigurationAsset(asset.openStream());    getArchive().add(this.configurationAsset,node.getPath());  }} @AT@ 4252 @LENGTH@ 408
------UPD IfStatement@@if (asset instanceof SwaggerConfigurationAsset) {  this.configurationAsset=(SwaggerConfigurationAsset)asset;} else {  this.configurationAsset=new SwaggerConfigurationAsset(asset.openStream());  getArchive().add(this.configurationAsset,SWAGGER_CONFIGURATION_PATH);} @TO@ if (asset instanceof SwaggerConfigurationAsset) {  this.configurationAsset=(SwaggerConfigurationAsset)asset;} else {  this.configurationAsset=new SwaggerConfigurationAsset(asset.openStream());  getArchive().add(this.configurationAsset,node.getPath());} @AT@ 4309 @LENGTH@ 341
---------UPD Block@@ElseBody:{  this.configurationAsset=new SwaggerConfigurationAsset(asset.openStream());  getArchive().add(this.configurationAsset,SWAGGER_CONFIGURATION_PATH);} @TO@ ElseBody:{  this.configurationAsset=new SwaggerConfigurationAsset(asset.openStream());  getArchive().add(this.configurationAsset,node.getPath());} @AT@ 4455 @LENGTH@ 195
------------UPD ExpressionStatement@@MethodInvocation:getArchive().add(this.configurationAsset,SWAGGER_CONFIGURATION_PATH) @TO@ MethodInvocation:getArchive().add(this.configurationAsset,node.getPath()) @AT@ 4566 @LENGTH@ 70
---------------UPD MethodInvocation@@getArchive().add(this.configurationAsset,SWAGGER_CONFIGURATION_PATH) @TO@ getArchive().add(this.configurationAsset,node.getPath()) @AT@ 4566 @LENGTH@ 69
------------------UPD SimpleName@@MethodName:add:[this.configurationAsset, SWAGGER_CONFIGURATION_PATH] @TO@ MethodName:add:[this.configurationAsset, node.getPath()] @AT@ 4579 @LENGTH@ 56
---------------------DEL SimpleName@@SWAGGER_CONFIGURATION_PATH @AT@ 4608 @LENGTH@ 26
---------------------INS MethodInvocation@@node.getPath() @TO@ SimpleName@@MethodName:add:[this.configurationAsset, SWAGGER_CONFIGURATION_PATH] @AT@ 4778 @LENGTH@ 14
------------------------INS SimpleName@@Name:node @TO@ MethodInvocation@@node.getPath() @AT@ 4778 @LENGTH@ 4
------------------------INS SimpleName@@MethodName:getPath:[] @TO@ MethodInvocation@@node.getPath() @AT@ 4783 @LENGTH@ 9
---UPD Block@@ElseBody:{  this.configurationAsset=new SwaggerConfigurationAsset();  getArchive().add(this.configurationAsset,SWAGGER_CONFIGURATION_PATH);} @TO@ ElseBody:{  this.configurationAsset=new SwaggerConfigurationAsset();  if (getArchive().getName().endsWith(".war")) {    getArchive().add(this.configurationAsset,"WEB-INF/classes/" + SWAGGER_CONFIGURATION_PATH);  } else {    getArchive().add(this.configurationAsset,SWAGGER_CONFIGURATION_PATH);  }} @AT@ 4666 @LENGTH@ 165
------INS IfStatement@@if (getArchive().getName().endsWith(".war")) {  getArchive().add(this.configurationAsset,"WEB-INF/classes/" + SWAGGER_CONFIGURATION_PATH);} else {  getArchive().add(this.configurationAsset,SWAGGER_CONFIGURATION_PATH);} @TO@ Block@@ElseBody:{  this.configurationAsset=new SwaggerConfigurationAsset();  getArchive().add(this.configurationAsset,SWAGGER_CONFIGURATION_PATH);} @AT@ 4909 @LENGTH@ 276
---------INS MethodInvocation@@getArchive().getName().endsWith(".war") @TO@ IfStatement@@if (getArchive().getName().endsWith(".war")) {  getArchive().add(this.configurationAsset,"WEB-INF/classes/" + SWAGGER_CONFIGURATION_PATH);} else {  getArchive().add(this.configurationAsset,SWAGGER_CONFIGURATION_PATH);} @AT@ 4913 @LENGTH@ 39
------------INS MethodInvocation@@MethodName:getName:[] @TO@ MethodInvocation@@getArchive().getName().endsWith(".war") @AT@ 4913 @LENGTH@ 22
------------INS MethodInvocation@@MethodName:getArchive:[] @TO@ MethodInvocation@@getArchive().getName().endsWith(".war") @AT@ 4913 @LENGTH@ 12
------------INS SimpleName@@MethodName:endsWith:[".war"] @TO@ MethodInvocation@@getArchive().getName().endsWith(".war") @AT@ 4936 @LENGTH@ 16
---------------INS StringLiteral@@".war" @TO@ SimpleName@@MethodName:endsWith:[".war"] @AT@ 4945 @LENGTH@ 6
---------INS Block@@ThenBody:{  getArchive().add(this.configurationAsset,"WEB-INF/classes/" + SWAGGER_CONFIGURATION_PATH);} @TO@ IfStatement@@if (getArchive().getName().endsWith(".war")) {  getArchive().add(this.configurationAsset,"WEB-INF/classes/" + SWAGGER_CONFIGURATION_PATH);} else {  getArchive().add(this.configurationAsset,SWAGGER_CONFIGURATION_PATH);} @AT@ 4954 @LENGTH@ 123
------------INS ExpressionStatement@@MethodInvocation:getArchive().add(this.configurationAsset,"WEB-INF/classes/" + SWAGGER_CONFIGURATION_PATH) @TO@ Block@@ThenBody:{  getArchive().add(this.configurationAsset,"WEB-INF/classes/" + SWAGGER_CONFIGURATION_PATH);} @AT@ 4972 @LENGTH@ 91
---------------INS MethodInvocation@@getArchive().add(this.configurationAsset,"WEB-INF/classes/" + SWAGGER_CONFIGURATION_PATH) @TO@ ExpressionStatement@@MethodInvocation:getArchive().add(this.configurationAsset,"WEB-INF/classes/" + SWAGGER_CONFIGURATION_PATH) @AT@ 4972 @LENGTH@ 90
------------------INS MethodInvocation@@MethodName:getArchive:[] @TO@ MethodInvocation@@getArchive().add(this.configurationAsset,"WEB-INF/classes/" + SWAGGER_CONFIGURATION_PATH) @AT@ 4972 @LENGTH@ 12
------------------INS SimpleName@@MethodName:add:[this.configurationAsset, "WEB-INF/classes/" + SWAGGER_CONFIGURATION_PATH] @TO@ MethodInvocation@@getArchive().add(this.configurationAsset,"WEB-INF/classes/" + SWAGGER_CONFIGURATION_PATH) @AT@ 4985 @LENGTH@ 77
---------------------INS FieldAccess@@this.configurationAsset @TO@ SimpleName@@MethodName:add:[this.configurationAsset, "WEB-INF/classes/" + SWAGGER_CONFIGURATION_PATH] @AT@ 4989 @LENGTH@ 23
------------------------INS ThisExpression@@this @TO@ FieldAccess@@this.configurationAsset @AT@ 4989 @LENGTH@ 4
------------------------INS SimpleName@@configurationAsset @TO@ FieldAccess@@this.configurationAsset @AT@ 4994 @LENGTH@ 18
---------------------INS InfixExpression@@"WEB-INF/classes/" + SWAGGER_CONFIGURATION_PATH @TO@ SimpleName@@MethodName:add:[this.configurationAsset, "WEB-INF/classes/" + SWAGGER_CONFIGURATION_PATH] @AT@ 5014 @LENGTH@ 47
------------------------INS StringLiteral@@"WEB-INF/classes/" @TO@ InfixExpression@@"WEB-INF/classes/" + SWAGGER_CONFIGURATION_PATH @AT@ 5014 @LENGTH@ 18
------------------------INS Operator@@+ @TO@ InfixExpression@@"WEB-INF/classes/" + SWAGGER_CONFIGURATION_PATH @AT@ 5032 @LENGTH@ 1
------------------------INS SimpleName@@SWAGGER_CONFIGURATION_PATH @TO@ InfixExpression@@"WEB-INF/classes/" + SWAGGER_CONFIGURATION_PATH @AT@ 5035 @LENGTH@ 26
---------INS Block@@ElseBody:{  getArchive().add(this.configurationAsset,SWAGGER_CONFIGURATION_PATH);} @TO@ IfStatement@@if (getArchive().getName().endsWith(".war")) {  getArchive().add(this.configurationAsset,"WEB-INF/classes/" + SWAGGER_CONFIGURATION_PATH);} else {  getArchive().add(this.configurationAsset,SWAGGER_CONFIGURATION_PATH);} @AT@ 5083 @LENGTH@ 102
------------MOV ExpressionStatement@@MethodInvocation:getArchive().add(this.configurationAsset,SWAGGER_CONFIGURATION_PATH) @TO@ Block@@ElseBody:{  getArchive().add(this.configurationAsset,SWAGGER_CONFIGURATION_PATH);} @AT@ 4751 @LENGTH@ 70


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled(); @AT@ 5294 @LENGTH@ 160
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5302 @LENGTH@ 151
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5302 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5319 @LENGTH@ 134
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 5319 @LENGTH@ 64
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5319 @LENGTH@ 35
---------UPD MethodInvocation@@componentConfiguration.getConfigurer().isEnabled() @TO@ componentConfiguration.getCustomizer().isEnabled() @AT@ 5403 @LENGTH@ 50
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5403 @LENGTH@ 38


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && languageConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && languageConfiguration.getCustomizer().isEnabled(); @AT@ 4521 @LENGTH@ 159
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && languageConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && languageConfiguration.getCustomizer().isEnabled() @AT@ 4529 @LENGTH@ 150
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 4529 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && languageConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && languageConfiguration.getCustomizer().isEnabled() @AT@ 4546 @LENGTH@ 133
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 4546 @LENGTH@ 64
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 4546 @LENGTH@ 35
---------UPD MethodInvocation@@languageConfiguration.getConfigurer().isEnabled() @TO@ languageConfiguration.getCustomizer().isEnabled() @AT@ 4630 @LENGTH@ 49
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 4630 @LENGTH@ 37


UPD MethodDeclaration@@public, ModelAndView, MethodName:deletePermission, @RequestParam("contactId") int contactId, @RequestParam("sid") String sid, @RequestParam("permission") int mask,  @TO@ public, ModelAndView, MethodName:deletePermission, @RequestParam("contactId") long contactId, @RequestParam("sid") String sid, @RequestParam("permission") int mask,  @AT@ 5307 @LENGTH@ 627
---UPD SingleVariableDeclaration@@@RequestParam("contactId") int contactId @TO@ @RequestParam("contactId") long contactId @AT@ 5344 @LENGTH@ 40
------UPD PrimitiveType@@int @TO@ long @AT@ 5371 @LENGTH@ 3
---UPD VariableDeclarationStatement@@Contact contact=contactManager.getById(new Long(contactId)); @TO@ Contact contact=contactManager.getById(contactId); @AT@ 5465 @LENGTH@ 62
------UPD VariableDeclarationFragment@@contact=contactManager.getById(new Long(contactId)) @TO@ contact=contactManager.getById(contactId) @AT@ 5473 @LENGTH@ 53
---------UPD MethodInvocation@@contactManager.getById(new Long(contactId)) @TO@ contactManager.getById(contactId) @AT@ 5483 @LENGTH@ 43
------------UPD SimpleName@@MethodName:getById:[new Long(contactId)] @TO@ MethodName:getById:[contactId] @AT@ 5498 @LENGTH@ 28
---------------INS SimpleName@@contactId @TO@ SimpleName@@MethodName:getById:[new Long(contactId)] @AT@ 5498 @LENGTH@ 9
---------------DEL ClassInstanceCreation@@Long[contactId] @AT@ 5506 @LENGTH@ 19
------------------DEL New@@new @AT@ 5506 @LENGTH@ 3
------------------DEL SimpleType@@Long @AT@ 5510 @LENGTH@ 4
------------------DEL SimpleName@@contactId @AT@ 5515 @LENGTH@ 9


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled(); @AT@ 5226 @LENGTH@ 160
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5234 @LENGTH@ 151
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5234 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5251 @LENGTH@ 134
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 5251 @LENGTH@ 64
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5251 @LENGTH@ 35
---------UPD MethodInvocation@@componentConfiguration.getConfigurer().isEnabled() @TO@ componentConfiguration.getCustomizer().isEnabled() @AT@ 5335 @LENGTH@ 50
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5335 @LENGTH@ 38


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<GuavaEventBusComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<GuavaEventBusComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5584 @LENGTH@ 346
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 5588 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5588 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  ComponentCustomizer<GuavaEventBusComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ ThenBody:{  for (  ComponentCustomizer<GuavaEventBusComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5644 @LENGTH@ 286
------UPD EnhancedForStatement@@for (ComponentCustomizer<GuavaEventBusComponent> configurer : customizers) {  LOGGER.debug("Configure component {}, with configurer {}",component,configurer);  configurer.customize(component);} @TO@ for (ComponentCustomizer<GuavaEventBusComponent> customizer : customizers) {  LOGGER.debug("Configure component {}, with customizer {}",component,customizer);  customizer.customize(component);} @AT@ 5658 @LENGTH@ 262
---------UPD SingleVariableDeclaration@@ComponentCustomizer<GuavaEventBusComponent> configurer @TO@ ComponentCustomizer<GuavaEventBusComponent> customizer @AT@ 5663 @LENGTH@ 54
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5707 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5751 @LENGTH@ 106
------------UPD MethodInvocation@@LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5751 @LENGTH@ 105
---------------UPD SimpleName@@MethodName:debug:["Configure component {}, with configurer {}", component, configurer] @TO@ MethodName:debug:["Configure component {}, with customizer {}", component, customizer] @AT@ 5758 @LENGTH@ 98
------------------UPD StringLiteral@@"Configure component {}, with configurer {}" @TO@ "Configure component {}, with customizer {}" @AT@ 5764 @LENGTH@ 44
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5845 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(component) @TO@ MethodInvocation:customizer.customize(component) @AT@ 5874 @LENGTH@ 32
------------UPD MethodInvocation@@configurer.customize(component) @TO@ customizer.customize(component) @AT@ 5874 @LENGTH@ 31
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5874 @LENGTH@ 10


UPD MethodDeclaration@@int, MethodName:tryEvictContiguousData, int allocationSize, int count,  @TO@ long, MethodName:tryEvictContiguousData, int allocationSize, int count,  @AT@ 1365 @LENGTH@ 54
---UPD PrimitiveType@@int @TO@ long @AT@ 1361 @LENGTH@ 3


UPD MethodDeclaration@@protected, boolean, MethodName:isRedeclaredMethod, Optional<Method> method,  @TO@ private, static, boolean, MethodName:isRedeclaredMethod, Optional<Method> method,  @AT@ 4127 @LENGTH@ 161
---UPD Modifier@@protected @TO@ private @AT@ 4127 @LENGTH@ 9
---INS Modifier@@static @TO@ MethodDeclaration@@protected, boolean, MethodName:isRedeclaredMethod, Optional<Method> method,  @AT@ 4135 @LENGTH@ 6


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<WebsocketComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<WebsocketComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5480 @LENGTH@ 342
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 5484 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5484 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  ComponentCustomizer<WebsocketComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ ThenBody:{  for (  ComponentCustomizer<WebsocketComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5540 @LENGTH@ 282
------UPD EnhancedForStatement@@for (ComponentCustomizer<WebsocketComponent> configurer : customizers) {  LOGGER.debug("Configure component {}, with configurer {}",component,configurer);  configurer.customize(component);} @TO@ for (ComponentCustomizer<WebsocketComponent> customizer : customizers) {  LOGGER.debug("Configure component {}, with customizer {}",component,customizer);  customizer.customize(component);} @AT@ 5554 @LENGTH@ 258
---------UPD SingleVariableDeclaration@@ComponentCustomizer<WebsocketComponent> configurer @TO@ ComponentCustomizer<WebsocketComponent> customizer @AT@ 5559 @LENGTH@ 50
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5599 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5643 @LENGTH@ 106
------------UPD MethodInvocation@@LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5643 @LENGTH@ 105
---------------UPD SimpleName@@MethodName:debug:["Configure component {}, with configurer {}", component, configurer] @TO@ MethodName:debug:["Configure component {}, with customizer {}", component, customizer] @AT@ 5650 @LENGTH@ 98
------------------UPD StringLiteral@@"Configure component {}, with configurer {}" @TO@ "Configure component {}, with customizer {}" @AT@ 5656 @LENGTH@ 44
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5737 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(component) @TO@ MethodInvocation:customizer.customize(component) @AT@ 5766 @LENGTH@ 32
------------UPD MethodInvocation@@configurer.customize(component) @TO@ customizer.customize(component) @AT@ 5766 @LENGTH@ 31
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5766 @LENGTH@ 10


UPD VariableDeclarationStatement@@MockServerExchangeMutator exchangeMutator=new MockServerExchangeMutator(withUser()); @TO@ ExchangeMutatorWebFilter exchangeMutator=new ExchangeMutatorWebFilter(withUser()); @AT@ 4553 @LENGTH@ 86
---UPD SimpleType@@MockServerExchangeMutator @TO@ ExchangeMutatorWebFilter @AT@ 4553 @LENGTH@ 25
---UPD VariableDeclarationFragment@@exchangeMutator=new MockServerExchangeMutator(withUser()) @TO@ exchangeMutator=new ExchangeMutatorWebFilter(withUser()) @AT@ 4579 @LENGTH@ 59
------UPD ClassInstanceCreation@@MockServerExchangeMutator[withUser()] @TO@ ExchangeMutatorWebFilter[withUser()] @AT@ 4597 @LENGTH@ 41
---------UPD SimpleType@@MockServerExchangeMutator @TO@ ExchangeMutatorWebFilter @AT@ 4601 @LENGTH@ 25


UPD TryStatement@@try {  connection.close();} catch (Exception ex) {  logger.debug("Ignoring Connection exception - assuming already closed: " + ex.getMessage(),ex);} @TO@ try {  connection.close();} catch (AlreadyClosedException ace) {}catch (Exception ex) {  logger.debug("Ignoring Connection exception - assuming already closed: " + ex.getMessage(),ex);} @AT@ 1982 @LENGTH@ 166
---INS CatchClause@@catch (AlreadyClosedException ace) {} @TO@ TryStatement@@try {  connection.close();} catch (Exception ex) {  logger.debug("Ignoring Connection exception - assuming already closed: " + ex.getMessage(),ex);} @AT@ 2071 @LENGTH@ 54
------INS SingleVariableDeclaration@@AlreadyClosedException ace @TO@ CatchClause@@catch (AlreadyClosedException ace) {} @AT@ 2078 @LENGTH@ 26
---------INS SimpleType@@AlreadyClosedException @TO@ SingleVariableDeclaration@@AlreadyClosedException ace @AT@ 2078 @LENGTH@ 22
---------INS SimpleName@@ace @TO@ SingleVariableDeclaration@@AlreadyClosedException ace @AT@ 2101 @LENGTH@ 3


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled(); @AT@ 5200 @LENGTH@ 160
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5208 @LENGTH@ 151
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5208 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5225 @LENGTH@ 134
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 5225 @LENGTH@ 64
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5225 @LENGTH@ 35
---------UPD MethodInvocation@@componentConfiguration.getConfigurer().isEnabled() @TO@ componentConfiguration.getCustomizer().isEnabled() @AT@ 5309 @LENGTH@ 50
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5309 @LENGTH@ 38


UPD VariableDeclarationStatement@@MockServerExchangeMutator exchangeMutator=new MockServerExchangeMutator(withUser()); @TO@ ExchangeMutatorWebFilter exchangeMutator=new ExchangeMutatorWebFilter(withUser()); @AT@ 4349 @LENGTH@ 86
---UPD SimpleType@@MockServerExchangeMutator @TO@ ExchangeMutatorWebFilter @AT@ 4349 @LENGTH@ 25
---UPD VariableDeclarationFragment@@exchangeMutator=new MockServerExchangeMutator(withUser()) @TO@ exchangeMutator=new ExchangeMutatorWebFilter(withUser()) @AT@ 4375 @LENGTH@ 59
------UPD ClassInstanceCreation@@MockServerExchangeMutator[withUser()] @TO@ ExchangeMutatorWebFilter[withUser()] @AT@ 4393 @LENGTH@ 41
---------UPD SimpleType@@MockServerExchangeMutator @TO@ ExchangeMutatorWebFilter @AT@ 4397 @LENGTH@ 25


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled(); @AT@ 5277 @LENGTH@ 160
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5285 @LENGTH@ 151
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5285 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5302 @LENGTH@ 134
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 5302 @LENGTH@ 64
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5302 @LENGTH@ 35
---------UPD MethodInvocation@@componentConfiguration.getConfigurer().isEnabled() @TO@ componentConfiguration.getCustomizer().isEnabled() @AT@ 5386 @LENGTH@ 50
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5386 @LENGTH@ 38


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<DisruptorVmComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<DisruptorVmComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5530 @LENGTH@ 344
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 5534 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5534 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  ComponentCustomizer<DisruptorVmComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ ThenBody:{  for (  ComponentCustomizer<DisruptorVmComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5590 @LENGTH@ 284
------UPD EnhancedForStatement@@for (ComponentCustomizer<DisruptorVmComponent> configurer : customizers) {  LOGGER.debug("Configure component {}, with configurer {}",component,configurer);  configurer.customize(component);} @TO@ for (ComponentCustomizer<DisruptorVmComponent> customizer : customizers) {  LOGGER.debug("Configure component {}, with customizer {}",component,customizer);  customizer.customize(component);} @AT@ 5604 @LENGTH@ 260
---------UPD SingleVariableDeclaration@@ComponentCustomizer<DisruptorVmComponent> configurer @TO@ ComponentCustomizer<DisruptorVmComponent> customizer @AT@ 5609 @LENGTH@ 52
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5651 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5695 @LENGTH@ 106
------------UPD MethodInvocation@@LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5695 @LENGTH@ 105
---------------UPD SimpleName@@MethodName:debug:["Configure component {}, with configurer {}", component, configurer] @TO@ MethodName:debug:["Configure component {}, with customizer {}", component, customizer] @AT@ 5702 @LENGTH@ 98
------------------UPD StringLiteral@@"Configure component {}, with configurer {}" @TO@ "Configure component {}, with customizer {}" @AT@ 5708 @LENGTH@ 44
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5789 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(component) @TO@ MethodInvocation:customizer.customize(component) @AT@ 5818 @LENGTH@ 32
------------UPD MethodInvocation@@configurer.customize(component) @TO@ customizer.customize(component) @AT@ 5818 @LENGTH@ 31
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5818 @LENGTH@ 10


DEL IfStatement@@if (TransactionSynchronizationManager.isCurrentTransactionReadOnly()) {  System.out.println("hitting read only txn.");} @AT@ 2870 @LENGTH@ 124
---DEL MethodInvocation@@TransactionSynchronizationManager.isCurrentTransactionReadOnly() @AT@ 2874 @LENGTH@ 64
------DEL SimpleName@@Name:TransactionSynchronizationManager @AT@ 2874 @LENGTH@ 33
------DEL SimpleName@@MethodName:isCurrentTransactionReadOnly:[] @AT@ 2908 @LENGTH@ 30
---DEL Block@@ThenBody:{  System.out.println("hitting read only txn.");} @AT@ 2940 @LENGTH@ 54
------DEL ExpressionStatement@@MethodInvocation:System.out.println("hitting read only txn.") @AT@ 2945 @LENGTH@ 45
---------DEL MethodInvocation@@System.out.println("hitting read only txn.") @AT@ 2945 @LENGTH@ 44
------------DEL QualifiedName@@Name:System.out @AT@ 2945 @LENGTH@ 10
------------DEL SimpleName@@MethodName:println:["hitting read only txn."] @AT@ 2956 @LENGTH@ 33
---------------DEL StringLiteral@@"hitting read only txn." @AT@ 2964 @LENGTH@ 24


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<LumberjackComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<LumberjackComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5497 @LENGTH@ 343
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 5501 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5501 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  ComponentCustomizer<LumberjackComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ ThenBody:{  for (  ComponentCustomizer<LumberjackComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5557 @LENGTH@ 283
------UPD EnhancedForStatement@@for (ComponentCustomizer<LumberjackComponent> configurer : customizers) {  LOGGER.debug("Configure component {}, with configurer {}",component,configurer);  configurer.customize(component);} @TO@ for (ComponentCustomizer<LumberjackComponent> customizer : customizers) {  LOGGER.debug("Configure component {}, with customizer {}",component,customizer);  customizer.customize(component);} @AT@ 5571 @LENGTH@ 259
---------UPD SingleVariableDeclaration@@ComponentCustomizer<LumberjackComponent> configurer @TO@ ComponentCustomizer<LumberjackComponent> customizer @AT@ 5576 @LENGTH@ 51
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5617 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5661 @LENGTH@ 106
------------UPD MethodInvocation@@LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5661 @LENGTH@ 105
---------------UPD SimpleName@@MethodName:debug:["Configure component {}, with configurer {}", component, configurer] @TO@ MethodName:debug:["Configure component {}, with customizer {}", component, customizer] @AT@ 5668 @LENGTH@ 98
------------------UPD StringLiteral@@"Configure component {}, with configurer {}" @TO@ "Configure component {}, with customizer {}" @AT@ 5674 @LENGTH@ 44
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5755 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(component) @TO@ MethodInvocation:customizer.customize(component) @AT@ 5784 @LENGTH@ 32
------------UPD MethodInvocation@@configurer.customize(component) @TO@ customizer.customize(component) @AT@ 5784 @LENGTH@ 31
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5784 @LENGTH@ 10


INS MethodDeclaration@@private, voidMethodName:UriTypeConverter,  @TO@ TypeDeclaration@@[public]UriTypeConverter,  @AT@ 1146 @LENGTH@ 59
---INS Modifier@@private @TO@ MethodDeclaration@@private, voidMethodName:UriTypeConverter,  @AT@ 1146 @LENGTH@ 7
---INS SimpleName@@MethodName:UriTypeConverter @TO@ MethodDeclaration@@private, voidMethodName:UriTypeConverter,  @AT@ 1154 @LENGTH@ 16


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled(); @AT@ 5294 @LENGTH@ 160
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5302 @LENGTH@ 151
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5302 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5319 @LENGTH@ 134
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 5319 @LENGTH@ 64
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5319 @LENGTH@ 35
---------UPD MethodInvocation@@componentConfiguration.getConfigurer().isEnabled() @TO@ componentConfiguration.getCustomizer().isEnabled() @AT@ 5403 @LENGTH@ 50
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5403 @LENGTH@ 38


UPD VariableDeclarationStatement@@Set<?> consumers=TestUtils.getPropertyValue(container,"consumers",Map.class).keySet(); @TO@ Set<?> consumers=TestUtils.getPropertyValue(container,"consumers",Set.class); @AT@ 22889 @LENGTH@ 90
---UPD VariableDeclarationFragment@@consumers=TestUtils.getPropertyValue(container,"consumers",Map.class).keySet() @TO@ consumers=TestUtils.getPropertyValue(container,"consumers",Set.class) @AT@ 22896 @LENGTH@ 82
------UPD MethodInvocation@@TestUtils.getPropertyValue(container,"consumers",Map.class).keySet() @TO@ TestUtils.getPropertyValue(container,"consumers",Set.class) @AT@ 22908 @LENGTH@ 70
---------DEL MethodInvocation@@MethodName:getPropertyValue:[container, "consumers", Map.class] @AT@ 22908 @LENGTH@ 61
------------DEL SimpleName@@container @AT@ 22935 @LENGTH@ 9
------------DEL StringLiteral@@"consumers" @AT@ 22946 @LENGTH@ 11
------------DEL TypeLiteral@@Map.class @AT@ 22959 @LENGTH@ 9
---------INS SimpleName@@MethodName:getPropertyValue:[container, "consumers", Set.class] @TO@ MethodInvocation@@TestUtils.getPropertyValue(container,"consumers",Map.class).keySet() @AT@ 22909 @LENGTH@ 51
------------INS SimpleName@@container @TO@ SimpleName@@MethodName:getPropertyValue:[container, "consumers", Set.class] @AT@ 22926 @LENGTH@ 9
------------INS StringLiteral@@"consumers" @TO@ SimpleName@@MethodName:getPropertyValue:[container, "consumers", Set.class] @AT@ 22937 @LENGTH@ 11
------------INS TypeLiteral@@Set.class @TO@ SimpleName@@MethodName:getPropertyValue:[container, "consumers", Set.class] @AT@ 22950 @LENGTH@ 9
---------DEL SimpleName@@MethodName:keySet:[] @AT@ 22970 @LENGTH@ 8


UPD VariableDeclarationStatement@@Map<?,?> consumers=(Map<?,?>)TestUtils.getPropertyValue(container,"consumers"); @TO@ Set<?> consumers=(Set<?>)TestUtils.getPropertyValue(container,"consumers"); @AT@ 4923 @LENGTH@ 85
---UPD ParameterizedType@@Map<?,?> @TO@ Set<?> @AT@ 4923 @LENGTH@ 9
------UPD SimpleType@@Map @TO@ Set @AT@ 4923 @LENGTH@ 3
------DEL WildcardType@@? @AT@ 4930 @LENGTH@ 1
---UPD VariableDeclarationFragment@@consumers=(Map<?,?>)TestUtils.getPropertyValue(container,"consumers") @TO@ consumers=(Set<?>)TestUtils.getPropertyValue(container,"consumers") @AT@ 4933 @LENGTH@ 74
------UPD CastExpression@@(Map<?,?>)TestUtils.getPropertyValue(container,"consumers") @TO@ (Set<?>)TestUtils.getPropertyValue(container,"consumers") @AT@ 4945 @LENGTH@ 62
---------UPD ParameterizedType@@Map<?,?> @TO@ Set<?> @AT@ 4946 @LENGTH@ 9
------------UPD SimpleType@@Map @TO@ Set @AT@ 4946 @LENGTH@ 3
------------DEL WildcardType@@? @AT@ 4953 @LENGTH@ 1


UPD ReturnStatement@@CastExpression:(io.reactivex.Observable<?>)REACTIVE_ADAPTER_REGISTRY.getAdapter(io.reactivex.Single.class).fromPublisher(source) @TO@ CastExpression:(io.reactivex.Observable<?>)REACTIVE_ADAPTER_REGISTRY.getAdapter(io.reactivex.Observable.class).fromPublisher(source) @AT@ 21921 @LENGTH@ 128
---UPD CastExpression@@(io.reactivex.Observable<?>)REACTIVE_ADAPTER_REGISTRY.getAdapter(io.reactivex.Single.class).fromPublisher(source) @TO@ (io.reactivex.Observable<?>)REACTIVE_ADAPTER_REGISTRY.getAdapter(io.reactivex.Observable.class).fromPublisher(source) @AT@ 21928 @LENGTH@ 120
------UPD MethodInvocation@@REACTIVE_ADAPTER_REGISTRY.getAdapter(io.reactivex.Single.class).fromPublisher(source) @TO@ REACTIVE_ADAPTER_REGISTRY.getAdapter(io.reactivex.Observable.class).fromPublisher(source) @AT@ 21957 @LENGTH@ 91
---------UPD MethodInvocation@@MethodName:getAdapter:[io.reactivex.Single.class] @TO@ MethodName:getAdapter:[io.reactivex.Observable.class] @AT@ 21957 @LENGTH@ 63
------------UPD TypeLiteral@@io.reactivex.Single.class @TO@ io.reactivex.Observable.class @AT@ 21994 @LENGTH@ 25


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled(); @AT@ 5415 @LENGTH@ 160
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5423 @LENGTH@ 151
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5423 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5440 @LENGTH@ 134
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 5440 @LENGTH@ 64
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5440 @LENGTH@ 35
---------UPD MethodInvocation@@componentConfiguration.getConfigurer().isEnabled() @TO@ componentConfiguration.getCustomizer().isEnabled() @AT@ 5524 @LENGTH@ 50
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5524 @LENGTH@ 38


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && dataformatConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && dataformatConfiguration.getCustomizer().isEnabled(); @AT@ 5092 @LENGTH@ 177
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && dataformatConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && dataformatConfiguration.getCustomizer().isEnabled() @AT@ 5100 @LENGTH@ 168
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5100 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && dataformatConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && dataformatConfiguration.getCustomizer().isEnabled() @AT@ 5117 @LENGTH@ 151
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 5117 @LENGTH@ 72
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5117 @LENGTH@ 35
---------UPD MethodInvocation@@dataformatConfiguration.getConfigurer().isEnabled() @TO@ dataformatConfiguration.getCustomizer().isEnabled() @AT@ 5217 @LENGTH@ 51
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5217 @LENGTH@ 39


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled(); @AT@ 5277 @LENGTH@ 160
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5285 @LENGTH@ 151
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5285 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5302 @LENGTH@ 134
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 5302 @LENGTH@ 64
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5302 @LENGTH@ 35
---------UPD MethodInvocation@@componentConfiguration.getConfigurer().isEnabled() @TO@ componentConfiguration.getCustomizer().isEnabled() @AT@ 5386 @LENGTH@ 50
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5386 @LENGTH@ 38


UPD ExpressionStatement@@MethodInvocation:Assert.isTrue(userExists(user.getUsername())) @TO@ MethodInvocation:Assert.isTrue(userExists(user.getUsername()),"user should exist") @AT@ 3193 @LENGTH@ 46
---UPD MethodInvocation@@Assert.isTrue(userExists(user.getUsername())) @TO@ Assert.isTrue(userExists(user.getUsername()),"user should exist") @AT@ 3193 @LENGTH@ 45
------UPD SimpleName@@MethodName:isTrue:[userExists(user.getUsername())] @TO@ MethodName:isTrue:[userExists(user.getUsername()), "user should exist"] @AT@ 3200 @LENGTH@ 38
---------INS StringLiteral@@"user should exist" @TO@ SimpleName@@MethodName:isTrue:[userExists(user.getUsername())] @AT@ 3264 @LENGTH@ 19


UPD TryStatement@@try (CLIWrapper cli=new CLIWrapper(true)){  final String levelStr="";  final List<String> roles=new ArrayList<>();  cli.sendLine(String.format("/subsystem=elytron/filesystem-realm=%s:add(path=\"%s\", %s)",MANAGEMENT_FILESYSTEM_NAME,escapePath(fsRealmPath),levelStr));  cli.sendLine(String.format("/subsystem=elytron/filesystem-realm=%s/identity=%s:add()",MANAGEMENT_FILESYSTEM_NAME,USER));  cli.sendLine(String.format("/subsystem=elytron/filesystem-realm=%s/identity=%s:set-password(clear={password=\"%s\"})",MANAGEMENT_FILESYSTEM_NAME,USER,CORRECT_PASSWORD));  if (!roles.isEmpty()) {    cli.sendLine(String.format("/subsystem=elytron/filesystem-realm=%s/identity=%s:add-attribute(name=groups, value=[%s])",MANAGEMENT_FILESYSTEM_NAME,USER,String.join(",",roles)));  }  cli.sendLine(String.format("/subsystem=elytron/security-domain=%1$s:add(realms=[{realm=%1$s,role-decoder=groups-to-roles},{realm=local,role-mapper=super-user-mapper}],default-realm=%1$s,permission-mapper=default-permission-mapper)",MANAGEMENT_FILESYSTEM_NAME));  cli.sendLine(String.format("/subsystem=elytron/http-authentication-factory=%1$s:add(http-server-mechanism-factory=%2$s,security-domain=%1$s," + "mechanism-configurations=[{mechanism-name=BASIC,mechanism-realm-configurations=[{realm-name=\"%1$s\"}]}])",MANAGEMENT_FILESYSTEM_NAME,PREDEFINED_HTTP_SERVER_MECHANISM_FACTORY));  cli.sendLine(String.format("/core-service=management/management-interface=http-interface:write-attribute(name=http-authentication-factory,value=%s)",MANAGEMENT_FILESYSTEM_NAME));  cli.sendLine("reload");}  @TO@ try (CLIWrapper cli=new CLIWrapper(true)){  final String levelStr="";  final List<String> roles=new ArrayList<>();  cli.sendLine(String.format("/subsystem=elytron/filesystem-realm=%s:add(path=\"%s\", %s)",MANAGEMENT_FILESYSTEM_NAME,escapePath(fsRealmPath),levelStr));  cli.sendLine(String.format("/subsystem=elytron/filesystem-realm=%s:add-identity(identity=%s)",MANAGEMENT_FILESYSTEM_NAME,USER));  cli.sendLine(String.format("/subsystem=elytron/filesystem-realm=%s:set-password(identity=%s, clear={password=\"%s\"})",MANAGEMENT_FILESYSTEM_NAME,USER,CORRECT_PASSWORD));  if (!roles.isEmpty()) {    cli.sendLine(String.format("/subsystem=elytron/filesystem-realm=%s:add-identity-attribute=%s:add-attribute(name=groups, value=[%s])",MANAGEMENT_FILESYSTEM_NAME,USER,String.join(",",roles)));  }  cli.sendLine(String.format("/subsystem=elytron/security-domain=%1$s:add(realms=[{realm=%1$s,role-decoder=groups-to-roles},{realm=local,role-mapper=super-user-mapper}],default-realm=%1$s,permission-mapper=default-permission-mapper)",MANAGEMENT_FILESYSTEM_NAME));  cli.sendLine(String.format("/subsystem=elytron/http-authentication-factory=%1$s:add(http-server-mechanism-factory=%2$s,security-domain=%1$s," + "mechanism-configurations=[{mechanism-name=BASIC,mechanism-realm-configurations=[{realm-name=\"%1$s\"}]}])",MANAGEMENT_FILESYSTEM_NAME,PREDEFINED_HTTP_SERVER_MECHANISM_FACTORY));  cli.sendLine(String.format("/core-service=management/management-interface=http-interface:write-attribute(name=http-authentication-factory,value=%s)",MANAGEMENT_FILESYSTEM_NAME));  cli.sendLine("reload");}  @AT@ 2527 @LENGTH@ 1940
---UPD ExpressionStatement@@MethodInvocation:cli.sendLine(String.format("/subsystem=elytron/filesystem-realm=%s/identity=%s:add()",MANAGEMENT_FILESYSTEM_NAME,USER)) @TO@ MethodInvocation:cli.sendLine(String.format("/subsystem=elytron/filesystem-realm=%s:add-identity(identity=%s)",MANAGEMENT_FILESYSTEM_NAME,USER)) @AT@ 2851 @LENGTH@ 122
------UPD MethodInvocation@@cli.sendLine(String.format("/subsystem=elytron/filesystem-realm=%s/identity=%s:add()",MANAGEMENT_FILESYSTEM_NAME,USER)) @TO@ cli.sendLine(String.format("/subsystem=elytron/filesystem-realm=%s:add-identity(identity=%s)",MANAGEMENT_FILESYSTEM_NAME,USER)) @AT@ 2851 @LENGTH@ 121
---------UPD SimpleName@@MethodName:sendLine:[String.format("/subsystem=elytron/filesystem-realm=%s/identity=%s:add()",MANAGEMENT_FILESYSTEM_NAME,USER)] @TO@ MethodName:sendLine:[String.format("/subsystem=elytron/filesystem-realm=%s:add-identity(identity=%s)",MANAGEMENT_FILESYSTEM_NAME,USER)] @AT@ 2855 @LENGTH@ 117
------------UPD MethodInvocation@@String.format("/subsystem=elytron/filesystem-realm=%s/identity=%s:add()",MANAGEMENT_FILESYSTEM_NAME,USER) @TO@ String.format("/subsystem=elytron/filesystem-realm=%s:add-identity(identity=%s)",MANAGEMENT_FILESYSTEM_NAME,USER) @AT@ 2864 @LENGTH@ 107
---------------UPD SimpleName@@MethodName:format:["/subsystem=elytron/filesystem-realm=%s/identity=%s:add()", MANAGEMENT_FILESYSTEM_NAME, USER] @TO@ MethodName:format:["/subsystem=elytron/filesystem-realm=%s:add-identity(identity=%s)", MANAGEMENT_FILESYSTEM_NAME, USER] @AT@ 2871 @LENGTH@ 100
------------------UPD StringLiteral@@"/subsystem=elytron/filesystem-realm=%s/identity=%s:add()" @TO@ "/subsystem=elytron/filesystem-realm=%s:add-identity(identity=%s)" @AT@ 2878 @LENGTH@ 58
---UPD ExpressionStatement@@MethodInvocation:cli.sendLine(String.format("/subsystem=elytron/filesystem-realm=%s/identity=%s:set-password(clear={password=\"%s\"})",MANAGEMENT_FILESYSTEM_NAME,USER,CORRECT_PASSWORD)) @TO@ MethodInvocation:cli.sendLine(String.format("/subsystem=elytron/filesystem-realm=%s:set-password(identity=%s, clear={password=\"%s\"})",MANAGEMENT_FILESYSTEM_NAME,USER,CORRECT_PASSWORD)) @AT@ 2986 @LENGTH@ 192
------UPD MethodInvocation@@cli.sendLine(String.format("/subsystem=elytron/filesystem-realm=%s/identity=%s:set-password(clear={password=\"%s\"})",MANAGEMENT_FILESYSTEM_NAME,USER,CORRECT_PASSWORD)) @TO@ cli.sendLine(String.format("/subsystem=elytron/filesystem-realm=%s:set-password(identity=%s, clear={password=\"%s\"})",MANAGEMENT_FILESYSTEM_NAME,USER,CORRECT_PASSWORD)) @AT@ 2986 @LENGTH@ 191
---------UPD SimpleName@@MethodName:sendLine:[String.format("/subsystem=elytron/filesystem-realm=%s/identity=%s:set-password(clear={password=\"%s\"})",MANAGEMENT_FILESYSTEM_NAME,USER,CORRECT_PASSWORD)] @TO@ MethodName:sendLine:[String.format("/subsystem=elytron/filesystem-realm=%s:set-password(identity=%s, clear={password=\"%s\"})",MANAGEMENT_FILESYSTEM_NAME,USER,CORRECT_PASSWORD)] @AT@ 2990 @LENGTH@ 187
------------UPD MethodInvocation@@String.format("/subsystem=elytron/filesystem-realm=%s/identity=%s:set-password(clear={password=\"%s\"})",MANAGEMENT_FILESYSTEM_NAME,USER,CORRECT_PASSWORD) @TO@ String.format("/subsystem=elytron/filesystem-realm=%s:set-password(identity=%s, clear={password=\"%s\"})",MANAGEMENT_FILESYSTEM_NAME,USER,CORRECT_PASSWORD) @AT@ 2999 @LENGTH@ 177
---------------UPD SimpleName@@MethodName:format:["/subsystem=elytron/filesystem-realm=%s/identity=%s:set-password(clear={password=\"%s\"})", MANAGEMENT_FILESYSTEM_NAME, USER, CORRECT_PASSWORD] @TO@ MethodName:format:["/subsystem=elytron/filesystem-realm=%s:set-password(identity=%s, clear={password=\"%s\"})", MANAGEMENT_FILESYSTEM_NAME, USER, CORRECT_PASSWORD] @AT@ 3006 @LENGTH@ 170
------------------UPD StringLiteral@@"/subsystem=elytron/filesystem-realm=%s/identity=%s:set-password(clear={password=\"%s\"})" @TO@ "/subsystem=elytron/filesystem-realm=%s:set-password(identity=%s, clear={password=\"%s\"})" @AT@ 3013 @LENGTH@ 90
---UPD IfStatement@@if (!roles.isEmpty()) {  cli.sendLine(String.format("/subsystem=elytron/filesystem-realm=%s/identity=%s:add-attribute(name=groups, value=[%s])",MANAGEMENT_FILESYSTEM_NAME,USER,String.join(",",roles)));} @TO@ if (!roles.isEmpty()) {  cli.sendLine(String.format("/subsystem=elytron/filesystem-realm=%s:add-identity-attribute=%s:add-attribute(name=groups, value=[%s])",MANAGEMENT_FILESYSTEM_NAME,USER,String.join(",",roles)));} @AT@ 3191 @LENGTH@ 282
------UPD Block@@ThenBody:{  cli.sendLine(String.format("/subsystem=elytron/filesystem-realm=%s/identity=%s:add-attribute(name=groups, value=[%s])",MANAGEMENT_FILESYSTEM_NAME,USER,String.join(",",roles)));} @TO@ ThenBody:{  cli.sendLine(String.format("/subsystem=elytron/filesystem-realm=%s:add-identity-attribute=%s:add-attribute(name=groups, value=[%s])",MANAGEMENT_FILESYSTEM_NAME,USER,String.join(",",roles)));} @AT@ 3213 @LENGTH@ 260
---------UPD ExpressionStatement@@MethodInvocation:cli.sendLine(String.format("/subsystem=elytron/filesystem-realm=%s/identity=%s:add-attribute(name=groups, value=[%s])",MANAGEMENT_FILESYSTEM_NAME,USER,String.join(",",roles))) @TO@ MethodInvocation:cli.sendLine(String.format("/subsystem=elytron/filesystem-realm=%s:add-identity-attribute=%s:add-attribute(name=groups, value=[%s])",MANAGEMENT_FILESYSTEM_NAME,USER,String.join(",",roles))) @AT@ 3231 @LENGTH@ 228
------------UPD MethodInvocation@@cli.sendLine(String.format("/subsystem=elytron/filesystem-realm=%s/identity=%s:add-attribute(name=groups, value=[%s])",MANAGEMENT_FILESYSTEM_NAME,USER,String.join(",",roles))) @TO@ cli.sendLine(String.format("/subsystem=elytron/filesystem-realm=%s:add-identity-attribute=%s:add-attribute(name=groups, value=[%s])",MANAGEMENT_FILESYSTEM_NAME,USER,String.join(",",roles))) @AT@ 3231 @LENGTH@ 227
---------------UPD SimpleName@@MethodName:sendLine:[String.format("/subsystem=elytron/filesystem-realm=%s/identity=%s:add-attribute(name=groups, value=[%s])",MANAGEMENT_FILESYSTEM_NAME,USER,String.join(",",roles))] @TO@ MethodName:sendLine:[String.format("/subsystem=elytron/filesystem-realm=%s:add-identity-attribute=%s:add-attribute(name=groups, value=[%s])",MANAGEMENT_FILESYSTEM_NAME,USER,String.join(",",roles))] @AT@ 3235 @LENGTH@ 223
------------------UPD MethodInvocation@@String.format("/subsystem=elytron/filesystem-realm=%s/identity=%s:add-attribute(name=groups, value=[%s])",MANAGEMENT_FILESYSTEM_NAME,USER,String.join(",",roles)) @TO@ String.format("/subsystem=elytron/filesystem-realm=%s:add-identity-attribute=%s:add-attribute(name=groups, value=[%s])",MANAGEMENT_FILESYSTEM_NAME,USER,String.join(",",roles)) @AT@ 3244 @LENGTH@ 213
---------------------UPD SimpleName@@MethodName:format:["/subsystem=elytron/filesystem-realm=%s/identity=%s:add-attribute(name=groups, value=[%s])", MANAGEMENT_FILESYSTEM_NAME, USER, String.join(",",roles)] @TO@ MethodName:format:["/subsystem=elytron/filesystem-realm=%s:add-identity-attribute=%s:add-attribute(name=groups, value=[%s])", MANAGEMENT_FILESYSTEM_NAME, USER, String.join(",",roles)] @AT@ 3251 @LENGTH@ 206
------------------------UPD StringLiteral@@"/subsystem=elytron/filesystem-realm=%s/identity=%s:add-attribute(name=groups, value=[%s])" @TO@ "/subsystem=elytron/filesystem-realm=%s:add-identity-attribute=%s:add-attribute(name=groups, value=[%s])" @AT@ 3283 @LENGTH@ 91


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled(); @AT@ 5311 @LENGTH@ 160
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5319 @LENGTH@ 151
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5319 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5336 @LENGTH@ 134
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 5336 @LENGTH@ 64
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5336 @LENGTH@ 35
---------UPD MethodInvocation@@componentConfiguration.getConfigurer().isEnabled() @TO@ componentConfiguration.getCustomizer().isEnabled() @AT@ 5420 @LENGTH@ 50
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5420 @LENGTH@ 38


UPD IfStatement@@if (componentType.equals(candidate.getComponentType().getType())) {  return i;} @TO@ if (componentType.equals(candidate.getComponentType().get().getType())) {  return i;} @AT@ 5849 @LENGTH@ 88
---UPD MethodInvocation@@componentType.equals(candidate.getComponentType().getType()) @TO@ componentType.equals(candidate.getComponentType().get().getType()) @AT@ 5853 @LENGTH@ 60
------UPD SimpleName@@MethodName:equals:[candidate.getComponentType().getType()] @TO@ MethodName:equals:[candidate.getComponentType().get().getType()] @AT@ 5867 @LENGTH@ 46
---------UPD MethodInvocation@@candidate.getComponentType().getType() @TO@ candidate.getComponentType().get().getType() @AT@ 5874 @LENGTH@ 38
------------INS MethodInvocation@@MethodName:get:[] @TO@ MethodInvocation@@candidate.getComponentType().getType() @AT@ 5874 @LENGTH@ 34


UPD IfStatement@@if (version == null) {  doInsert(collectionName,objectToSave,this.mongoConverter);} else {  maybeEmitEvent(new BeforeConvertEvent<T>(objectToSave,collectionName));  assertUpdateableIdIfNotSet(objectToSave);  Object id=convertingAccessor.getProperty(idProperty);  Query query=new Query(Criteria.where(idProperty.getName()).is(id).and(versionProperty.getName()).is(version));  convertingAccessor.setProperty(versionProperty,versionNumber.longValue() + 1);  Document document=new Document();  this.mongoConverter.write(objectToSave,document);  maybeEmitEvent(new BeforeSaveEvent<T>(objectToSave,document,collectionName));  Update update=Update.fromDocument(document,ID_FIELD);  UpdateResult result=doUpdate(collectionName,query,update,objectToSave.getClass(),false,false);  if (result.getModifiedCount() == 0) {    throw new OptimisticLockingFailureException(String.format("Cannot save entity %s with version %s to collection %s. Has it been modified meanwhile?",id,versionNumber,collectionName));  }  maybeEmitEvent(new AfterSaveEvent<T>(objectToSave,document,collectionName));} @TO@ if (version == null) {  doInsert(collectionName,objectToSave,this.mongoConverter);} else {  convertingAccessor.setProperty(versionProperty,versionNumber.longValue() + 1);  maybeEmitEvent(new BeforeConvertEvent<T>(objectToSave,collectionName));  assertUpdateableIdIfNotSet(objectToSave);  Document document=new Document();  this.mongoConverter.write(objectToSave,document);  maybeEmitEvent(new BeforeSaveEvent<T>(objectToSave,document,collectionName));  Update update=Update.fromDocument(document,ID_FIELD);  Object id=convertingAccessor.getProperty(idProperty);  Query query=new Query(Criteria.where(idProperty.getName()).is(id).and(versionProperty.getName()).is(version));  UpdateResult result=doUpdate(collectionName,query,update,objectToSave.getClass(),false,false);  if (result.getModifiedCount() == 0) {    throw new OptimisticLockingFailureException(String.format("Cannot save entity %s with version %s to collection %s. Has it been modified meanwhile?",id,versionNumber,collectionName));  }  maybeEmitEvent(new AfterSaveEvent<T>(objectToSave,document,collectionName));} @AT@ 38378 @LENGTH@ 1246
---UPD Block@@ElseBody:{  maybeEmitEvent(new BeforeConvertEvent<T>(objectToSave,collectionName));  assertUpdateableIdIfNotSet(objectToSave);  Object id=convertingAccessor.getProperty(idProperty);  Query query=new Query(Criteria.where(idProperty.getName()).is(id).and(versionProperty.getName()).is(version));  convertingAccessor.setProperty(versionProperty,versionNumber.longValue() + 1);  Document document=new Document();  this.mongoConverter.write(objectToSave,document);  maybeEmitEvent(new BeforeSaveEvent<T>(objectToSave,document,collectionName));  Update update=Update.fromDocument(document,ID_FIELD);  UpdateResult result=doUpdate(collectionName,query,update,objectToSave.getClass(),false,false);  if (result.getModifiedCount() == 0) {    throw new OptimisticLockingFailureException(String.format("Cannot save entity %s with version %s to collection %s. Has it been modified meanwhile?",id,versionNumber,collectionName));  }  maybeEmitEvent(new AfterSaveEvent<T>(objectToSave,document,collectionName));} @TO@ ElseBody:{  convertingAccessor.setProperty(versionProperty,versionNumber.longValue() + 1);  maybeEmitEvent(new BeforeConvertEvent<T>(objectToSave,collectionName));  assertUpdateableIdIfNotSet(objectToSave);  Document document=new Document();  this.mongoConverter.write(objectToSave,document);  maybeEmitEvent(new BeforeSaveEvent<T>(objectToSave,document,collectionName));  Update update=Update.fromDocument(document,ID_FIELD);  Object id=convertingAccessor.getProperty(idProperty);  Query query=new Query(Criteria.where(idProperty.getName()).is(id).and(versionProperty.getName()).is(version));  UpdateResult result=doUpdate(collectionName,query,update,objectToSave.getClass(),false,false);  if (result.getModifiedCount() == 0) {    throw new OptimisticLockingFailureException(String.format("Cannot save entity %s with version %s to collection %s. Has it been modified meanwhile?",id,versionNumber,collectionName));  }  maybeEmitEvent(new AfterSaveEvent<T>(objectToSave,document,collectionName));} @AT@ 38474 @LENGTH@ 1150
------MOV VariableDeclarationStatement@@Object id=convertingAccessor.getProperty(idProperty); @TO@ Block@@ElseBody:{  maybeEmitEvent(new BeforeConvertEvent<T>(objectToSave,collectionName));  assertUpdateableIdIfNotSet(objectToSave);  Object id=convertingAccessor.getProperty(idProperty);  Query query=new Query(Criteria.where(idProperty.getName()).is(id).and(versionProperty.getName()).is(version));  convertingAccessor.setProperty(versionProperty,versionNumber.longValue() + 1);  Document document=new Document();  this.mongoConverter.write(objectToSave,document);  maybeEmitEvent(new BeforeSaveEvent<T>(objectToSave,document,collectionName));  Update update=Update.fromDocument(document,ID_FIELD);  UpdateResult result=doUpdate(collectionName,query,update,objectToSave.getClass(),false,false);  if (result.getModifiedCount() == 0) {    throw new OptimisticLockingFailureException(String.format("Cannot save entity %s with version %s to collection %s. Has it been modified meanwhile?",id,versionNumber,collectionName));  }  maybeEmitEvent(new AfterSaveEvent<T>(objectToSave,document,collectionName));} @AT@ 38660 @LENGTH@ 55
------MOV VariableDeclarationStatement@@Query query=new Query(Criteria.where(idProperty.getName()).is(id).and(versionProperty.getName()).is(version)); @TO@ Block@@ElseBody:{  maybeEmitEvent(new BeforeConvertEvent<T>(objectToSave,collectionName));  assertUpdateableIdIfNotSet(objectToSave);  Object id=convertingAccessor.getProperty(idProperty);  Query query=new Query(Criteria.where(idProperty.getName()).is(id).and(versionProperty.getName()).is(version));  convertingAccessor.setProperty(versionProperty,versionNumber.longValue() + 1);  Document document=new Document();  this.mongoConverter.write(objectToSave,document);  maybeEmitEvent(new BeforeSaveEvent<T>(objectToSave,document,collectionName));  Update update=Update.fromDocument(document,ID_FIELD);  UpdateResult result=doUpdate(collectionName,query,update,objectToSave.getClass(),false,false);  if (result.getModifiedCount() == 0) {    throw new OptimisticLockingFailureException(String.format("Cannot save entity %s with version %s to collection %s. Has it been modified meanwhile?",id,versionNumber,collectionName));  }  maybeEmitEvent(new AfterSaveEvent<T>(objectToSave,document,collectionName));} @AT@ 38719 @LENGTH@ 112
------MOV ExpressionStatement@@MethodInvocation:convertingAccessor.setProperty(versionProperty,versionNumber.longValue() + 1) @TO@ Block@@ElseBody:{  maybeEmitEvent(new BeforeConvertEvent<T>(objectToSave,collectionName));  assertUpdateableIdIfNotSet(objectToSave);  Object id=convertingAccessor.getProperty(idProperty);  Query query=new Query(Criteria.where(idProperty.getName()).is(id).and(versionProperty.getName()).is(version));  convertingAccessor.setProperty(versionProperty,versionNumber.longValue() + 1);  Document document=new Document();  this.mongoConverter.write(objectToSave,document);  maybeEmitEvent(new BeforeSaveEvent<T>(objectToSave,document,collectionName));  Update update=Update.fromDocument(document,ID_FIELD);  UpdateResult result=doUpdate(collectionName,query,update,objectToSave.getClass(),false,false);  if (result.getModifiedCount() == 0) {    throw new OptimisticLockingFailureException(String.format("Cannot save entity %s with version %s to collection %s. Has it been modified meanwhile?",id,versionNumber,collectionName));  }  maybeEmitEvent(new AfterSaveEvent<T>(objectToSave,document,collectionName));} @AT@ 38862 @LENGTH@ 79


UPD ReturnStatement@@MethodInvocation:multiHashOrdered(parentHashCode(),99251,Objects.hashCode(providerSupplier)) @TO@ MethodInvocation:multiHashUnordered(parentHashCode(),99251,Objects.hashCode(providerSupplier)) @AT@ 1818 @LENGTH@ 85
---UPD MethodInvocation@@multiHashOrdered(parentHashCode(),99251,Objects.hashCode(providerSupplier)) @TO@ multiHashUnordered(parentHashCode(),99251,Objects.hashCode(providerSupplier)) @AT@ 1825 @LENGTH@ 77
------UPD SimpleName@@MethodName:multiHashOrdered:[parentHashCode(), 99251, Objects.hashCode(providerSupplier)] @TO@ MethodName:multiHashUnordered:[parentHashCode(), 99251, Objects.hashCode(providerSupplier)] @AT@ 1825 @LENGTH@ 77


UPD MethodDeclaration@@public, Object, MethodName:resolveDbRef, MongoPersistentProperty property, DBRef dbref, DbRefResolverCallback callback, DbRefProxyHandler proxyHandler,  @TO@ public, Optional<Object>, MethodName:resolveDbRef, MongoPersistentProperty property, DBRef dbref, DbRefResolverCallback callback, DbRefProxyHandler proxyHandler,  @AT@ 4443 @LENGTH@ 166
---DEL SimpleType@@Object @AT@ 4450 @LENGTH@ 6
---INS ParameterizedType@@Optional<Object> @TO@ MethodDeclaration@@public, Object, MethodName:resolveDbRef, MongoPersistentProperty property, DBRef dbref, DbRefResolverCallback callback, DbRefProxyHandler proxyHandler,  @AT@ 4477 @LENGTH@ 16
------INS SimpleType@@Optional @TO@ ParameterizedType@@Optional<Object> @AT@ 4477 @LENGTH@ 8
------INS SimpleType@@Object @TO@ ParameterizedType@@Optional<Object> @AT@ 4486 @LENGTH@ 6
---UPD ReturnStatement@@NullLiteral:null @TO@ MethodInvocation:Optional.empty() @AT@ 4592 @LENGTH@ 12
------DEL NullLiteral@@null @AT@ 4599 @LENGTH@ 4
------INS MethodInvocation@@Optional.empty() @TO@ ReturnStatement@@NullLiteral:null @AT@ 4644 @LENGTH@ 16
---------INS SimpleName@@Name:Optional @TO@ MethodInvocation@@Optional.empty() @AT@ 4644 @LENGTH@ 8
---------INS SimpleName@@MethodName:empty:[] @TO@ MethodInvocation@@Optional.empty() @AT@ 4653 @LENGTH@ 7


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<JmsComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<JmsComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5378 @LENGTH@ 336
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 5382 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5382 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  ComponentCustomizer<JmsComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ ThenBody:{  for (  ComponentCustomizer<JmsComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5438 @LENGTH@ 276
------UPD EnhancedForStatement@@for (ComponentCustomizer<JmsComponent> configurer : customizers) {  LOGGER.debug("Configure component {}, with configurer {}",component,configurer);  configurer.customize(component);} @TO@ for (ComponentCustomizer<JmsComponent> customizer : customizers) {  LOGGER.debug("Configure component {}, with customizer {}",component,customizer);  customizer.customize(component);} @AT@ 5452 @LENGTH@ 252
---------UPD SingleVariableDeclaration@@ComponentCustomizer<JmsComponent> configurer @TO@ ComponentCustomizer<JmsComponent> customizer @AT@ 5457 @LENGTH@ 44
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5491 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5535 @LENGTH@ 106
------------UPD MethodInvocation@@LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5535 @LENGTH@ 105
---------------UPD SimpleName@@MethodName:debug:["Configure component {}, with configurer {}", component, configurer] @TO@ MethodName:debug:["Configure component {}, with customizer {}", component, customizer] @AT@ 5542 @LENGTH@ 98
------------------UPD StringLiteral@@"Configure component {}, with configurer {}" @TO@ "Configure component {}, with customizer {}" @AT@ 5548 @LENGTH@ 44
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5629 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(component) @TO@ MethodInvocation:customizer.customize(component) @AT@ 5658 @LENGTH@ 32
------------UPD MethodInvocation@@configurer.customize(component) @TO@ customizer.customize(component) @AT@ 5658 @LENGTH@ 31
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5658 @LENGTH@ 10


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled(); @AT@ 5226 @LENGTH@ 160
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5234 @LENGTH@ 151
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5234 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5251 @LENGTH@ 134
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 5251 @LENGTH@ 64
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5251 @LENGTH@ 35
---------UPD MethodInvocation@@componentConfiguration.getConfigurer().isEnabled() @TO@ componentConfiguration.getCustomizer().isEnabled() @AT@ 5335 @LENGTH@ 50
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5335 @LENGTH@ 38


UPD IfStatement@@if (entity.findAnnotation(Document.class) != null) {  for (  IndexDefinitionHolder indexToCreate : indexResolver.resolveIndexFor(entity.getTypeInformation())) {    createIndex(indexToCreate);  }} @TO@ if (entity.findAnnotation(Document.class).isPresent()) {  for (  IndexDefinitionHolder indexToCreate : indexResolver.resolveIndexFor(entity.getTypeInformation())) {    createIndex(indexToCreate);  }} @AT@ 5186 @LENGTH@ 201
---INS MethodInvocation@@entity.findAnnotation(Document.class).isPresent() @TO@ IfStatement@@if (entity.findAnnotation(Document.class) != null) {  for (  IndexDefinitionHolder indexToCreate : indexResolver.resolveIndexFor(entity.getTypeInformation())) {    createIndex(indexToCreate);  }} @AT@ 5190 @LENGTH@ 49
------INS MethodInvocation@@MethodName:findAnnotation:[Document.class] @TO@ MethodInvocation@@entity.findAnnotation(Document.class).isPresent() @AT@ 5190 @LENGTH@ 37
---------INS TypeLiteral@@Document.class @TO@ MethodInvocation@@MethodName:findAnnotation:[Document.class] @AT@ 5212 @LENGTH@ 14
------MOV SimpleName@@Name:entity @TO@ MethodInvocation@@entity.findAnnotation(Document.class).isPresent() @AT@ 5190 @LENGTH@ 6
------INS SimpleName@@MethodName:isPresent:[] @TO@ MethodInvocation@@entity.findAnnotation(Document.class).isPresent() @AT@ 5228 @LENGTH@ 11
---DEL InfixExpression@@entity.findAnnotation(Document.class) != null @AT@ 5190 @LENGTH@ 45
------DEL MethodInvocation@@entity.findAnnotation(Document.class) @AT@ 5190 @LENGTH@ 37
---------DEL SimpleName@@MethodName:findAnnotation:[Document.class] @AT@ 5197 @LENGTH@ 30
------------DEL TypeLiteral@@Document.class @AT@ 5212 @LENGTH@ 14
------DEL Operator@@!= @AT@ 5227 @LENGTH@ 2
------DEL NullLiteral@@null @AT@ 5231 @LENGTH@ 4


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  LanguageCustomizer<RubyLanguage> configurer : customizers) {    LOGGER.debug("Configure language {}, with configurer {}",language,configurer);    configurer.customize(language);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  LanguageCustomizer<RubyLanguage> customizer : customizers) {    LOGGER.debug("Configure language {}, with customizer {}",language,customizer);    customizer.customize(language);  }} @AT@ 4691 @LENGTH@ 332
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 4695 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 4695 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  LanguageCustomizer<RubyLanguage> configurer : customizers) {    LOGGER.debug("Configure language {}, with configurer {}",language,configurer);    configurer.customize(language);  }} @TO@ ThenBody:{  for (  LanguageCustomizer<RubyLanguage> customizer : customizers) {    LOGGER.debug("Configure language {}, with customizer {}",language,customizer);    customizer.customize(language);  }} @AT@ 4751 @LENGTH@ 272
------UPD EnhancedForStatement@@for (LanguageCustomizer<RubyLanguage> configurer : customizers) {  LOGGER.debug("Configure language {}, with configurer {}",language,configurer);  configurer.customize(language);} @TO@ for (LanguageCustomizer<RubyLanguage> customizer : customizers) {  LOGGER.debug("Configure language {}, with customizer {}",language,customizer);  customizer.customize(language);} @AT@ 4765 @LENGTH@ 248
---------UPD SingleVariableDeclaration@@LanguageCustomizer<RubyLanguage> configurer @TO@ LanguageCustomizer<RubyLanguage> customizer @AT@ 4770 @LENGTH@ 43
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 4803 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure language {}, with configurer {}",language,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure language {}, with customizer {}",language,customizer) @AT@ 4847 @LENGTH@ 104
------------UPD MethodInvocation@@LOGGER.debug("Configure language {}, with configurer {}",language,configurer) @TO@ LOGGER.debug("Configure language {}, with customizer {}",language,customizer) @AT@ 4847 @LENGTH@ 103
---------------UPD SimpleName@@MethodName:debug:["Configure language {}, with configurer {}", language, configurer] @TO@ MethodName:debug:["Configure language {}, with customizer {}", language, customizer] @AT@ 4854 @LENGTH@ 96
------------------UPD StringLiteral@@"Configure language {}, with configurer {}" @TO@ "Configure language {}, with customizer {}" @AT@ 4860 @LENGTH@ 43
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 4939 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(language) @TO@ MethodInvocation:customizer.customize(language) @AT@ 4968 @LENGTH@ 31
------------UPD MethodInvocation@@configurer.customize(language) @TO@ customizer.customize(language) @AT@ 4968 @LENGTH@ 30
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 4968 @LENGTH@ 10


INS MethodDeclaration@@public, void, MethodName:testValidateEndpointProducerOnly, Exception,  @TO@ TypeDeclaration@@[public]CamelCatalogTest,  @AT@ 34312 @LENGTH@ 557
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testValidateEndpointProducerOnly, Exception,  @AT@ 34312 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testValidateEndpointProducerOnly, Exception,  @AT@ 34319 @LENGTH@ 4
---INS SimpleName@@MethodName:testValidateEndpointProducerOnly @TO@ MethodDeclaration@@public, void, MethodName:testValidateEndpointProducerOnly, Exception,  @AT@ 34324 @LENGTH@ 32
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:testValidateEndpointProducerOnly, Exception,  @AT@ 34366 @LENGTH@ 9
---INS VariableDeclarationStatement@@String uri="file:outbox?bufferSize=4096&fileExist=Append"; @TO@ MethodDeclaration@@public, void, MethodName:testValidateEndpointProducerOnly, Exception,  @AT@ 34386 @LENGTH@ 60
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String uri="file:outbox?bufferSize=4096&fileExist=Append"; @AT@ 34386 @LENGTH@ 6
------INS VariableDeclarationFragment@@uri="file:outbox?bufferSize=4096&fileExist=Append" @TO@ VariableDeclarationStatement@@String uri="file:outbox?bufferSize=4096&fileExist=Append"; @AT@ 34393 @LENGTH@ 52
---------INS SimpleName@@uri @TO@ VariableDeclarationFragment@@uri="file:outbox?bufferSize=4096&fileExist=Append" @AT@ 34393 @LENGTH@ 3
---------INS StringLiteral@@"file:outbox?bufferSize=4096&fileExist=Append" @TO@ VariableDeclarationFragment@@uri="file:outbox?bufferSize=4096&fileExist=Append" @AT@ 34399 @LENGTH@ 46
---INS VariableDeclarationStatement@@EndpointValidationResult result=catalog.validateEndpointProperties(uri,false,false,true); @TO@ MethodDeclaration@@public, void, MethodName:testValidateEndpointProducerOnly, Exception,  @AT@ 34455 @LENGTH@ 94
------INS SimpleType@@EndpointValidationResult @TO@ VariableDeclarationStatement@@EndpointValidationResult result=catalog.validateEndpointProperties(uri,false,false,true); @AT@ 34455 @LENGTH@ 24
------INS VariableDeclarationFragment@@result=catalog.validateEndpointProperties(uri,false,false,true) @TO@ VariableDeclarationStatement@@EndpointValidationResult result=catalog.validateEndpointProperties(uri,false,false,true); @AT@ 34480 @LENGTH@ 68
---------INS SimpleName@@result @TO@ VariableDeclarationFragment@@result=catalog.validateEndpointProperties(uri,false,false,true) @AT@ 34480 @LENGTH@ 6
---------INS MethodInvocation@@catalog.validateEndpointProperties(uri,false,false,true) @TO@ VariableDeclarationFragment@@result=catalog.validateEndpointProperties(uri,false,false,true) @AT@ 34489 @LENGTH@ 59
------------INS SimpleName@@Name:catalog @TO@ MethodInvocation@@catalog.validateEndpointProperties(uri,false,false,true) @AT@ 34489 @LENGTH@ 7
------------INS SimpleName@@MethodName:validateEndpointProperties:[uri, false, false, true] @TO@ MethodInvocation@@catalog.validateEndpointProperties(uri,false,false,true) @AT@ 34497 @LENGTH@ 51
---------------INS SimpleName@@uri @TO@ SimpleName@@MethodName:validateEndpointProperties:[uri, false, false, true] @AT@ 34524 @LENGTH@ 3
---------------INS BooleanLiteral@@false @TO@ SimpleName@@MethodName:validateEndpointProperties:[uri, false, false, true] @AT@ 34529 @LENGTH@ 5
---------------INS BooleanLiteral@@false @TO@ SimpleName@@MethodName:validateEndpointProperties:[uri, false, false, true] @AT@ 34536 @LENGTH@ 5
---------------INS BooleanLiteral@@true @TO@ SimpleName@@MethodName:validateEndpointProperties:[uri, false, false, true] @AT@ 34543 @LENGTH@ 4
---INS ExpressionStatement@@MethodInvocation:assertTrue(result.isSuccess()) @TO@ MethodDeclaration@@public, void, MethodName:testValidateEndpointProducerOnly, Exception,  @AT@ 34558 @LENGTH@ 31
------INS MethodInvocation@@assertTrue(result.isSuccess()) @TO@ ExpressionStatement@@MethodInvocation:assertTrue(result.isSuccess()) @AT@ 34558 @LENGTH@ 30
---------INS SimpleName@@MethodName:assertTrue:[result.isSuccess()] @TO@ MethodInvocation@@assertTrue(result.isSuccess()) @AT@ 34558 @LENGTH@ 30
------------INS MethodInvocation@@result.isSuccess() @TO@ SimpleName@@MethodName:assertTrue:[result.isSuccess()] @AT@ 34569 @LENGTH@ 18
---------------INS SimpleName@@Name:result @TO@ MethodInvocation@@result.isSuccess() @AT@ 34569 @LENGTH@ 6
---------------INS SimpleName@@MethodName:isSuccess:[] @TO@ MethodInvocation@@result.isSuccess() @AT@ 34576 @LENGTH@ 11
---INS ExpressionStatement@@Assignment:uri="file:outbox?bufferSize=4096&fileExist=Append&delete=true" @TO@ MethodDeclaration@@public, void, MethodName:testValidateEndpointProducerOnly, Exception,  @AT@ 34599 @LENGTH@ 65
------INS Assignment@@uri="file:outbox?bufferSize=4096&fileExist=Append&delete=true" @TO@ ExpressionStatement@@Assignment:uri="file:outbox?bufferSize=4096&fileExist=Append&delete=true" @AT@ 34599 @LENGTH@ 64
---------INS SimpleName@@uri @TO@ Assignment@@uri="file:outbox?bufferSize=4096&fileExist=Append&delete=true" @AT@ 34599 @LENGTH@ 3
---------INS Operator@@= @TO@ Assignment@@uri="file:outbox?bufferSize=4096&fileExist=Append&delete=true" @AT@ 34602 @LENGTH@ 1
---------INS StringLiteral@@"file:outbox?bufferSize=4096&fileExist=Append&delete=true" @TO@ Assignment@@uri="file:outbox?bufferSize=4096&fileExist=Append&delete=true" @AT@ 34605 @LENGTH@ 58
---INS ExpressionStatement@@Assignment:result=catalog.validateEndpointProperties(uri,false,false,true) @TO@ MethodDeclaration@@public, void, MethodName:testValidateEndpointProducerOnly, Exception,  @AT@ 34673 @LENGTH@ 69
------INS Assignment@@result=catalog.validateEndpointProperties(uri,false,false,true) @TO@ ExpressionStatement@@Assignment:result=catalog.validateEndpointProperties(uri,false,false,true) @AT@ 34673 @LENGTH@ 68
---------INS SimpleName@@result @TO@ Assignment@@result=catalog.validateEndpointProperties(uri,false,false,true) @AT@ 34673 @LENGTH@ 6
---------INS Operator@@= @TO@ Assignment@@result=catalog.validateEndpointProperties(uri,false,false,true) @AT@ 34679 @LENGTH@ 1
---------INS MethodInvocation@@catalog.validateEndpointProperties(uri,false,false,true) @TO@ Assignment@@result=catalog.validateEndpointProperties(uri,false,false,true) @AT@ 34682 @LENGTH@ 59
------------INS SimpleName@@Name:catalog @TO@ MethodInvocation@@catalog.validateEndpointProperties(uri,false,false,true) @AT@ 34682 @LENGTH@ 7
------------INS SimpleName@@MethodName:validateEndpointProperties:[uri, false, false, true] @TO@ MethodInvocation@@catalog.validateEndpointProperties(uri,false,false,true) @AT@ 34690 @LENGTH@ 51
---------------INS SimpleName@@uri @TO@ SimpleName@@MethodName:validateEndpointProperties:[uri, false, false, true] @AT@ 34717 @LENGTH@ 3
---------------INS BooleanLiteral@@false @TO@ SimpleName@@MethodName:validateEndpointProperties:[uri, false, false, true] @AT@ 34722 @LENGTH@ 5
---------------INS BooleanLiteral@@false @TO@ SimpleName@@MethodName:validateEndpointProperties:[uri, false, false, true] @AT@ 34729 @LENGTH@ 5
---------------INS BooleanLiteral@@true @TO@ SimpleName@@MethodName:validateEndpointProperties:[uri, false, false, true] @AT@ 34736 @LENGTH@ 4
---INS ExpressionStatement@@MethodInvocation:assertFalse(result.isSuccess()) @TO@ MethodDeclaration@@public, void, MethodName:testValidateEndpointProducerOnly, Exception,  @AT@ 34751 @LENGTH@ 32
------INS MethodInvocation@@assertFalse(result.isSuccess()) @TO@ ExpressionStatement@@MethodInvocation:assertFalse(result.isSuccess()) @AT@ 34751 @LENGTH@ 31
---------INS SimpleName@@MethodName:assertFalse:[result.isSuccess()] @TO@ MethodInvocation@@assertFalse(result.isSuccess()) @AT@ 34751 @LENGTH@ 31
------------INS MethodInvocation@@result.isSuccess() @TO@ SimpleName@@MethodName:assertFalse:[result.isSuccess()] @AT@ 34763 @LENGTH@ 18
---------------INS SimpleName@@Name:result @TO@ MethodInvocation@@result.isSuccess() @AT@ 34763 @LENGTH@ 6
---------------INS SimpleName@@MethodName:isSuccess:[] @TO@ MethodInvocation@@result.isSuccess() @AT@ 34770 @LENGTH@ 11
---INS ExpressionStatement@@MethodInvocation:assertEquals("delete",result.getNotProducerOnly().iterator().next()) @TO@ MethodDeclaration@@public, void, MethodName:testValidateEndpointProducerOnly, Exception,  @AT@ 34793 @LENGTH@ 70
------INS MethodInvocation@@assertEquals("delete",result.getNotProducerOnly().iterator().next()) @TO@ ExpressionStatement@@MethodInvocation:assertEquals("delete",result.getNotProducerOnly().iterator().next()) @AT@ 34793 @LENGTH@ 69
---------INS SimpleName@@MethodName:assertEquals:["delete", result.getNotProducerOnly().iterator().next()] @TO@ MethodInvocation@@assertEquals("delete",result.getNotProducerOnly().iterator().next()) @AT@ 34793 @LENGTH@ 69
------------INS StringLiteral@@"delete" @TO@ SimpleName@@MethodName:assertEquals:["delete", result.getNotProducerOnly().iterator().next()] @AT@ 34806 @LENGTH@ 8
------------INS MethodInvocation@@result.getNotProducerOnly().iterator().next() @TO@ SimpleName@@MethodName:assertEquals:["delete", result.getNotProducerOnly().iterator().next()] @AT@ 34816 @LENGTH@ 45
---------------INS MethodInvocation@@MethodName:iterator:[] @TO@ MethodInvocation@@result.getNotProducerOnly().iterator().next() @AT@ 34816 @LENGTH@ 38
---------------INS MethodInvocation@@MethodName:getNotProducerOnly:[] @TO@ MethodInvocation@@result.getNotProducerOnly().iterator().next() @AT@ 34816 @LENGTH@ 27
---------------INS SimpleName@@Name:result @TO@ MethodInvocation@@result.getNotProducerOnly().iterator().next() @AT@ 34816 @LENGTH@ 6
---------------INS SimpleName@@MethodName:next:[] @TO@ MethodInvocation@@result.getNotProducerOnly().iterator().next() @AT@ 34855 @LENGTH@ 6


INS MethodDeclaration@@public, static, void, MethodName:beforeClass,  @TO@ TypeDeclaration@@[@RunWith(Arquillian.class), @RunAsClient, public]XSiteSimpleTestCase, ExtendedClusterAbstractTestCase @AT@ 4152 @LENGTH@ 380
---INS Modifier@@public @TO@ MethodDeclaration@@public, static, void, MethodName:beforeClass,  @AT@ 4152 @LENGTH@ 6
---INS Modifier@@static @TO@ MethodDeclaration@@public, static, void, MethodName:beforeClass,  @AT@ 4159 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, static, void, MethodName:beforeClass,  @AT@ 4166 @LENGTH@ 4
---INS SimpleName@@MethodName:beforeClass @TO@ MethodDeclaration@@public, static, void, MethodName:beforeClass,  @AT@ 4171 @LENGTH@ 11
---INS ExpressionStatement@@MethodInvocation:AccessController.doPrivileged(new PrivilegedAction<Void>(){
  @Override public Void run(){
    Assume.assumeFalse("Disable on Windows+IPv6 until CI environment is fixed",Util.checkForWindows() && (Util.getIpStackType() == StackType.IPv6));
    return null;
  }
}
) @TO@ MethodDeclaration@@public, static, void, MethodName:beforeClass,  @AT@ 4195 @LENGTH@ 331
------INS MethodInvocation@@AccessController.doPrivileged(new PrivilegedAction<Void>(){
  @Override public Void run(){
    Assume.assumeFalse("Disable on Windows+IPv6 until CI environment is fixed",Util.checkForWindows() && (Util.getIpStackType() == StackType.IPv6));
    return null;
  }
}
) @TO@ ExpressionStatement@@MethodInvocation:AccessController.doPrivileged(new PrivilegedAction<Void>(){
  @Override public Void run(){
    Assume.assumeFalse("Disable on Windows+IPv6 until CI environment is fixed",Util.checkForWindows() && (Util.getIpStackType() == StackType.IPv6));
    return null;
  }
}
) @AT@ 4195 @LENGTH@ 330
---------INS SimpleName@@Name:AccessController @TO@ MethodInvocation@@AccessController.doPrivileged(new PrivilegedAction<Void>(){
  @Override public Void run(){
    Assume.assumeFalse("Disable on Windows+IPv6 until CI environment is fixed",Util.checkForWindows() && (Util.getIpStackType() == StackType.IPv6));
    return null;
  }
}
) @AT@ 4195 @LENGTH@ 16
---------INS SimpleName@@MethodName:doPrivileged:[new PrivilegedAction<Void>(){
  @Override public Void run(){
    Assume.assumeFalse("Disable on Windows+IPv6 until CI environment is fixed",Util.checkForWindows() && (Util.getIpStackType() == StackType.IPv6));
    return null;
  }
}
] @TO@ MethodInvocation@@AccessController.doPrivileged(new PrivilegedAction<Void>(){
  @Override public Void run(){
    Assume.assumeFalse("Disable on Windows+IPv6 until CI environment is fixed",Util.checkForWindows() && (Util.getIpStackType() == StackType.IPv6));
    return null;
  }
}
) @AT@ 4212 @LENGTH@ 313
------------INS ClassInstanceCreation@@PrivilegedAction<Void>[] @TO@ SimpleName@@MethodName:doPrivileged:[new PrivilegedAction<Void>(){
  @Override public Void run(){
    Assume.assumeFalse("Disable on Windows+IPv6 until CI environment is fixed",Util.checkForWindows() && (Util.getIpStackType() == StackType.IPv6));
    return null;
  }
}
] @AT@ 4225 @LENGTH@ 299
---------------INS New@@new @TO@ ClassInstanceCreation@@PrivilegedAction<Void>[] @AT@ 4225 @LENGTH@ 3
---------------INS ParameterizedType@@PrivilegedAction<Void> @TO@ ClassInstanceCreation@@PrivilegedAction<Void>[] @AT@ 4229 @LENGTH@ 22
------------------INS SimpleType@@PrivilegedAction @TO@ ParameterizedType@@PrivilegedAction<Void> @AT@ 4229 @LENGTH@ 16
------------------INS SimpleType@@Void @TO@ ParameterizedType@@PrivilegedAction<Void> @AT@ 4246 @LENGTH@ 4
---------------INS AnonymousClassDeclaration@@AnonymousClass @TO@ ClassInstanceCreation@@PrivilegedAction<Void>[] @AT@ 4254 @LENGTH@ 270
------------------INS MethodDeclaration@@public, Void, MethodName:run,  @TO@ AnonymousClassDeclaration@@AnonymousClass @AT@ 4290 @LENGTH@ 224
---------------------INS Modifier@@public @TO@ MethodDeclaration@@public, Void, MethodName:run,  @AT@ 4290 @LENGTH@ 6
---------------------INS SimpleType@@Void @TO@ MethodDeclaration@@public, Void, MethodName:run,  @AT@ 4297 @LENGTH@ 4
---------------------INS SimpleName@@MethodName:run @TO@ MethodDeclaration@@public, Void, MethodName:run,  @AT@ 4302 @LENGTH@ 3
---------------------INS ExpressionStatement@@MethodInvocation:Assume.assumeFalse("Disable on Windows+IPv6 until CI environment is fixed",Util.checkForWindows() && (Util.getIpStackType() == StackType.IPv6)) @TO@ MethodDeclaration@@public, Void, MethodName:run,  @AT@ 4326 @LENGTH@ 145
------------------------INS MethodInvocation@@Assume.assumeFalse("Disable on Windows+IPv6 until CI environment is fixed",Util.checkForWindows() && (Util.getIpStackType() == StackType.IPv6)) @TO@ ExpressionStatement@@MethodInvocation:Assume.assumeFalse("Disable on Windows+IPv6 until CI environment is fixed",Util.checkForWindows() && (Util.getIpStackType() == StackType.IPv6)) @AT@ 4326 @LENGTH@ 144
---------------------------INS SimpleName@@Name:Assume @TO@ MethodInvocation@@Assume.assumeFalse("Disable on Windows+IPv6 until CI environment is fixed",Util.checkForWindows() && (Util.getIpStackType() == StackType.IPv6)) @AT@ 4326 @LENGTH@ 6
---------------------------INS SimpleName@@MethodName:assumeFalse:["Disable on Windows+IPv6 until CI environment is fixed", Util.checkForWindows() && (Util.getIpStackType() == StackType.IPv6)] @TO@ MethodInvocation@@Assume.assumeFalse("Disable on Windows+IPv6 until CI environment is fixed",Util.checkForWindows() && (Util.getIpStackType() == StackType.IPv6)) @AT@ 4333 @LENGTH@ 137
------------------------------INS StringLiteral@@"Disable on Windows+IPv6 until CI environment is fixed" @TO@ SimpleName@@MethodName:assumeFalse:["Disable on Windows+IPv6 until CI environment is fixed", Util.checkForWindows() && (Util.getIpStackType() == StackType.IPv6)] @AT@ 4345 @LENGTH@ 55
------------------------------INS InfixExpression@@Util.checkForWindows() && (Util.getIpStackType() == StackType.IPv6) @TO@ SimpleName@@MethodName:assumeFalse:["Disable on Windows+IPv6 until CI environment is fixed", Util.checkForWindows() && (Util.getIpStackType() == StackType.IPv6)] @AT@ 4402 @LENGTH@ 67
---------------------------------INS MethodInvocation@@Util.checkForWindows() @TO@ InfixExpression@@Util.checkForWindows() && (Util.getIpStackType() == StackType.IPv6) @AT@ 4402 @LENGTH@ 22
------------------------------------INS SimpleName@@Name:Util @TO@ MethodInvocation@@Util.checkForWindows() @AT@ 4402 @LENGTH@ 4
------------------------------------INS SimpleName@@MethodName:checkForWindows:[] @TO@ MethodInvocation@@Util.checkForWindows() @AT@ 4407 @LENGTH@ 17
---------------------------------INS Operator@@&& @TO@ InfixExpression@@Util.checkForWindows() && (Util.getIpStackType() == StackType.IPv6) @AT@ 4424 @LENGTH@ 2
---------------------------------INS ParenthesizedExpression@@(Util.getIpStackType() == StackType.IPv6) @TO@ InfixExpression@@Util.checkForWindows() && (Util.getIpStackType() == StackType.IPv6) @AT@ 4428 @LENGTH@ 41
------------------------------------INS InfixExpression@@Util.getIpStackType() == StackType.IPv6 @TO@ ParenthesizedExpression@@(Util.getIpStackType() == StackType.IPv6) @AT@ 4429 @LENGTH@ 39
---------------------------------------INS MethodInvocation@@Util.getIpStackType() @TO@ InfixExpression@@Util.getIpStackType() == StackType.IPv6 @AT@ 4429 @LENGTH@ 21
------------------------------------------INS SimpleName@@Name:Util @TO@ MethodInvocation@@Util.getIpStackType() @AT@ 4429 @LENGTH@ 4
------------------------------------------INS SimpleName@@MethodName:getIpStackType:[] @TO@ MethodInvocation@@Util.getIpStackType() @AT@ 4434 @LENGTH@ 16
---------------------------------------INS Operator@@== @TO@ InfixExpression@@Util.getIpStackType() == StackType.IPv6 @AT@ 4450 @LENGTH@ 2
---------------------------------------INS QualifiedName@@StackType.IPv6 @TO@ InfixExpression@@Util.getIpStackType() == StackType.IPv6 @AT@ 4454 @LENGTH@ 14
------------------------------------------INS SimpleName@@StackType @TO@ QualifiedName@@StackType.IPv6 @AT@ 4454 @LENGTH@ 9
------------------------------------------INS SimpleName@@IPv6 @TO@ QualifiedName@@StackType.IPv6 @AT@ 4464 @LENGTH@ 4
---------------------INS ReturnStatement@@NullLiteral:null @TO@ MethodDeclaration@@public, Void, MethodName:run,  @AT@ 4488 @LENGTH@ 12
------------------------INS NullLiteral@@null @TO@ ReturnStatement@@NullLiteral:null @AT@ 4495 @LENGTH@ 4


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled(); @AT@ 5257 @LENGTH@ 160
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5265 @LENGTH@ 151
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5265 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5282 @LENGTH@ 134
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 5282 @LENGTH@ 64
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5282 @LENGTH@ 35
---------UPD MethodInvocation@@componentConfiguration.getConfigurer().isEnabled() @TO@ componentConfiguration.getCustomizer().isEnabled() @AT@ 5366 @LENGTH@ 50
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5366 @LENGTH@ 38


UPD MethodDeclaration@@private, Artifact, MethodName:findExecutableArtifact, MojoExecutionException,  @TO@ protected, Artifact, MethodName:findExecutableArtifact, MojoExecutionException,  @AT@ 39558 @LENGTH@ 816
---UPD Modifier@@private @TO@ protected @AT@ 39558 @LENGTH@ 7


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<IgniteQueueComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<IgniteQueueComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5530 @LENGTH@ 344
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 5534 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5534 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  ComponentCustomizer<IgniteQueueComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ ThenBody:{  for (  ComponentCustomizer<IgniteQueueComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5590 @LENGTH@ 284
------UPD EnhancedForStatement@@for (ComponentCustomizer<IgniteQueueComponent> configurer : customizers) {  LOGGER.debug("Configure component {}, with configurer {}",component,configurer);  configurer.customize(component);} @TO@ for (ComponentCustomizer<IgniteQueueComponent> customizer : customizers) {  LOGGER.debug("Configure component {}, with customizer {}",component,customizer);  customizer.customize(component);} @AT@ 5604 @LENGTH@ 260
---------UPD SingleVariableDeclaration@@ComponentCustomizer<IgniteQueueComponent> configurer @TO@ ComponentCustomizer<IgniteQueueComponent> customizer @AT@ 5609 @LENGTH@ 52
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5651 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5695 @LENGTH@ 106
------------UPD MethodInvocation@@LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5695 @LENGTH@ 105
---------------UPD SimpleName@@MethodName:debug:["Configure component {}, with configurer {}", component, configurer] @TO@ MethodName:debug:["Configure component {}, with customizer {}", component, customizer] @AT@ 5702 @LENGTH@ 98
------------------UPD StringLiteral@@"Configure component {}, with configurer {}" @TO@ "Configure component {}, with customizer {}" @AT@ 5708 @LENGTH@ 44
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5789 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(component) @TO@ MethodInvocation:customizer.customize(component) @AT@ 5818 @LENGTH@ 32
------------UPD MethodInvocation@@configurer.customize(component) @TO@ customizer.customize(component) @AT@ 5818 @LENGTH@ 31
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5818 @LENGTH@ 10


UPD ExpressionStatement@@MethodInvocation:Assert.notEmpty(map) @TO@ MethodInvocation:Assert.notEmpty(map,"configAttributes cannot be empty") @AT@ 6587 @LENGTH@ 21
---UPD MethodInvocation@@Assert.notEmpty(map) @TO@ Assert.notEmpty(map,"configAttributes cannot be empty") @AT@ 6587 @LENGTH@ 20
------UPD SimpleName@@MethodName:notEmpty:[map] @TO@ MethodName:notEmpty:[map, "configAttributes cannot be empty"] @AT@ 6594 @LENGTH@ 13
---------INS StringLiteral@@"configAttributes cannot be empty" @TO@ SimpleName@@MethodName:notEmpty:[map] @AT@ 6608 @LENGTH@ 34


INS ExpressionStatement@@MethodInvocation:awaitContainerTermination() @TO@ MethodDeclaration@@public, void, MethodName:stop, Exception,  @AT@ 7673 @LENGTH@ 28
---INS MethodInvocation@@MethodName:awaitContainerTermination:[] @TO@ ExpressionStatement@@MethodInvocation:awaitContainerTermination() @AT@ 7673 @LENGTH@ 27


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled(); @AT@ 5243 @LENGTH@ 160
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5251 @LENGTH@ 151
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5251 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5268 @LENGTH@ 134
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 5268 @LENGTH@ 64
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5268 @LENGTH@ 35
---------UPD MethodInvocation@@componentConfiguration.getConfigurer().isEnabled() @TO@ componentConfiguration.getCustomizer().isEnabled() @AT@ 5352 @LENGTH@ 50
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5352 @LENGTH@ 38


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && languageConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && languageConfiguration.getCustomizer().isEnabled(); @AT@ 4593 @LENGTH@ 159
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && languageConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && languageConfiguration.getCustomizer().isEnabled() @AT@ 4601 @LENGTH@ 150
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 4601 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && languageConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && languageConfiguration.getCustomizer().isEnabled() @AT@ 4618 @LENGTH@ 133
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 4618 @LENGTH@ 64
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 4618 @LENGTH@ 35
---------UPD MethodInvocation@@languageConfiguration.getConfigurer().isEnabled() @TO@ languageConfiguration.getCustomizer().isEnabled() @AT@ 4702 @LENGTH@ 49
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 4702 @LENGTH@ 37


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<CoAPComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<CoAPComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5375 @LENGTH@ 337
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 5379 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5379 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  ComponentCustomizer<CoAPComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ ThenBody:{  for (  ComponentCustomizer<CoAPComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5435 @LENGTH@ 277
------UPD EnhancedForStatement@@for (ComponentCustomizer<CoAPComponent> configurer : customizers) {  LOGGER.debug("Configure component {}, with configurer {}",component,configurer);  configurer.customize(component);} @TO@ for (ComponentCustomizer<CoAPComponent> customizer : customizers) {  LOGGER.debug("Configure component {}, with customizer {}",component,customizer);  customizer.customize(component);} @AT@ 5449 @LENGTH@ 253
---------UPD SingleVariableDeclaration@@ComponentCustomizer<CoAPComponent> configurer @TO@ ComponentCustomizer<CoAPComponent> customizer @AT@ 5454 @LENGTH@ 45
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5489 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5533 @LENGTH@ 106
------------UPD MethodInvocation@@LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5533 @LENGTH@ 105
---------------UPD SimpleName@@MethodName:debug:["Configure component {}, with configurer {}", component, configurer] @TO@ MethodName:debug:["Configure component {}, with customizer {}", component, customizer] @AT@ 5540 @LENGTH@ 98
------------------UPD StringLiteral@@"Configure component {}, with configurer {}" @TO@ "Configure component {}, with customizer {}" @AT@ 5546 @LENGTH@ 44
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5627 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(component) @TO@ MethodInvocation:customizer.customize(component) @AT@ 5656 @LENGTH@ 32
------------UPD MethodInvocation@@configurer.customize(component) @TO@ customizer.customize(component) @AT@ 5656 @LENGTH@ 31
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5656 @LENGTH@ 10


UPD TypeDeclaration@@[@DirtiesContext, @RunWith(SpringRunner.class), @SpringBootApplication, @SpringBootTest(classes={CamelAutoConfiguration.class,CamelCloudAutoConfiguration.class,CamelCloudServiceChooserAutoConfiguration.class},properties={"camel.cloud.enabled=false","camel.cloud.service-discovery.enabled=false","camel.cloud.service-filter.enabled=false","camel.cloud.service-chooser.enabled=true","camel.cloud.load-balancer.enabled=false","debug=false"}), public]CamelCloudServiceCallConfigurationTest,  @TO@ [@DirtiesContext, @RunWith(SpringRunner.class), @SpringBootApplication(), @SpringBootTest(classes={CamelAutoConfiguration.class,CamelCloudAutoConfiguration.class,CamelCloudServiceChooserAutoConfiguration.class},properties={"camel.cloud.enabled=false","camel.cloud.service-discovery.enabled=false","camel.cloud.service-filter.enabled=false","camel.cloud.service-chooser.enabled=true","camel.cloud.load-balancer.enabled=false","debug=false"}), public]CamelCloudServiceCallConfigurationTest,  @AT@ 1650 @LENGTH@ 1487
---INS NormalAnnotation@@@SpringBootApplication() @TO@ TypeDeclaration@@[@DirtiesContext, @RunWith(SpringRunner.class), @SpringBootApplication, @SpringBootTest(classes={CamelAutoConfiguration.class,CamelCloudAutoConfiguration.class,CamelCloudServiceChooserAutoConfiguration.class},properties={"camel.cloud.enabled=false","camel.cloud.service-discovery.enabled=false","camel.cloud.service-filter.enabled=false","camel.cloud.service-chooser.enabled=true","camel.cloud.load-balancer.enabled=false","debug=false"}), public]CamelCloudServiceCallConfigurationTest,  @AT@ 1695 @LENGTH@ 24
---DEL MarkerAnnotation@@@SpringBootApplication @AT@ 1695 @LENGTH@ 22


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<QueueServiceComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<QueueServiceComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5539 @LENGTH@ 345
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 5543 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5543 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  ComponentCustomizer<QueueServiceComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ ThenBody:{  for (  ComponentCustomizer<QueueServiceComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5599 @LENGTH@ 285
------UPD EnhancedForStatement@@for (ComponentCustomizer<QueueServiceComponent> configurer : customizers) {  LOGGER.debug("Configure component {}, with configurer {}",component,configurer);  configurer.customize(component);} @TO@ for (ComponentCustomizer<QueueServiceComponent> customizer : customizers) {  LOGGER.debug("Configure component {}, with customizer {}",component,customizer);  customizer.customize(component);} @AT@ 5613 @LENGTH@ 261
---------UPD SingleVariableDeclaration@@ComponentCustomizer<QueueServiceComponent> configurer @TO@ ComponentCustomizer<QueueServiceComponent> customizer @AT@ 5618 @LENGTH@ 53
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5661 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5705 @LENGTH@ 106
------------UPD MethodInvocation@@LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5705 @LENGTH@ 105
---------------UPD SimpleName@@MethodName:debug:["Configure component {}, with configurer {}", component, configurer] @TO@ MethodName:debug:["Configure component {}, with customizer {}", component, customizer] @AT@ 5712 @LENGTH@ 98
------------------UPD StringLiteral@@"Configure component {}, with configurer {}" @TO@ "Configure component {}, with customizer {}" @AT@ 5718 @LENGTH@ 44
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5799 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(component) @TO@ MethodInvocation:customizer.customize(component) @AT@ 5828 @LENGTH@ 32
------------UPD MethodInvocation@@configurer.customize(component) @TO@ customizer.customize(component) @AT@ 5828 @LENGTH@ 31
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5828 @LENGTH@ 10


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled(); @AT@ 5277 @LENGTH@ 160
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5285 @LENGTH@ 151
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5285 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5302 @LENGTH@ 134
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 5302 @LENGTH@ 64
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5302 @LENGTH@ 35
---------UPD MethodInvocation@@componentConfiguration.getConfigurer().isEnabled() @TO@ componentConfiguration.getCustomizer().isEnabled() @AT@ 5386 @LENGTH@ 50
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5386 @LENGTH@ 38


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled(); @AT@ 5378 @LENGTH@ 160
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5386 @LENGTH@ 151
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5386 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5403 @LENGTH@ 134
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 5403 @LENGTH@ 64
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5403 @LENGTH@ 35
---------UPD MethodInvocation@@componentConfiguration.getConfigurer().isEnabled() @TO@ componentConfiguration.getCustomizer().isEnabled() @AT@ 5487 @LENGTH@ 50
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5487 @LENGTH@ 38


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled(); @AT@ 5226 @LENGTH@ 160
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5234 @LENGTH@ 151
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5234 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5251 @LENGTH@ 134
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 5251 @LENGTH@ 64
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5251 @LENGTH@ 35
---------UPD MethodInvocation@@componentConfiguration.getConfigurer().isEnabled() @TO@ componentConfiguration.getCustomizer().isEnabled() @AT@ 5335 @LENGTH@ 50
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5335 @LENGTH@ 38


UPD TypeDeclaration@@[@RunWith(SpringRunner.class), @SpringBootApplication, @ContextConfiguration(classes=ServletMappingDisablingTest.class), @SpringBootTest(webEnvironment=SpringBootTest.WebEnvironment.RANDOM_PORT,properties={"camel.component.servlet.mapping.enabled=false"}), public]ServletMappingDisablingTest,  @TO@ [@RunWith(SpringRunner.class), @SpringBootApplication, @DirtiesContext, @ContextConfiguration(classes=ServletMappingDisablingTest.class), @SpringBootTest(webEnvironment=SpringBootTest.WebEnvironment.RANDOM_PORT,properties={"camel.component.servlet.mapping.enabled=false"}), public]ServletMappingDisablingTest,  @AT@ 1519 @LENGTH@ 982
---INS MarkerAnnotation@@@DirtiesContext @TO@ TypeDeclaration@@[@RunWith(SpringRunner.class), @SpringBootApplication, @ContextConfiguration(classes=ServletMappingDisablingTest.class), @SpringBootTest(webEnvironment=SpringBootTest.WebEnvironment.RANDOM_PORT,properties={"camel.component.servlet.mapping.enabled=false"}), public]ServletMappingDisablingTest,  @AT@ 1605 @LENGTH@ 15


UPD TryStatement@@try {  final ModelNode response=client.execute(getStateOp);  if (Util.isSuccess(response)) {    serverState=response.get(ClientConstants.RESULT).asString();    if ("running".equals(serverState) || "restart-required".equals(serverState)) {      break;    }  }} catch (IOException|IllegalStateException e) {} @TO@ try {  final ModelNode response=client.execute(getStateOp);  if (Util.isSuccess(response)) {    serverState=response.get(ClientConstants.RESULT).asString();    if ("running".equals(serverState) || "restart-required".equals(serverState)) {      break;    }  }} catch (IOException e) {  Throwable ex=e;  while (ex != null) {    if (ex instanceof RedirectException) {      try {        ctx.connectController();        return;      } catch (      CommandLineException ce) {      }    }    ex=ex.getCause();  }}catch (IllegalStateException ex) {} @AT@ 11931 @LENGTH@ 737
---UPD CatchClause@@catch (IOException|IllegalStateException e) {} @TO@ catch (IOException e) {  Throwable ex=e;  while (ex != null) {    if (ex instanceof RedirectException) {      try {        ctx.connectController();        return;      } catch (      CommandLineException ce) {      }    }    ex=ex.getCause();  }} @AT@ 12391 @LENGTH@ 277
------UPD SingleVariableDeclaration@@IOException|IllegalStateException e @TO@ IOException e @AT@ 12398 @LENGTH@ 35
---------DEL UnionType@@IOException|IllegalStateException @AT@ 12398 @LENGTH@ 33
------------DEL SimpleType@@IOException @AT@ 12398 @LENGTH@ 11
------------DEL SimpleType@@IllegalStateException @AT@ 12410 @LENGTH@ 21
---------INS SimpleType@@IOException @TO@ SingleVariableDeclaration@@IOException|IllegalStateException e @AT@ 12438 @LENGTH@ 11
------INS VariableDeclarationStatement@@Throwable ex=e; @TO@ CatchClause@@catch (IOException|IllegalStateException e) {} @AT@ 12546 @LENGTH@ 17
---------INS SimpleType@@Throwable @TO@ VariableDeclarationStatement@@Throwable ex=e; @AT@ 12546 @LENGTH@ 9
---------INS VariableDeclarationFragment@@ex=e @TO@ VariableDeclarationStatement@@Throwable ex=e; @AT@ 12556 @LENGTH@ 6
------------INS SimpleName@@ex @TO@ VariableDeclarationFragment@@ex=e @AT@ 12556 @LENGTH@ 2
------------INS SimpleName@@e @TO@ VariableDeclarationFragment@@ex=e @AT@ 12561 @LENGTH@ 1
------INS WhileStatement@@while (ex != null) {  if (ex instanceof RedirectException) {    try {      ctx.connectController();      return;    } catch (    CommandLineException ce) {    }  }  ex=ex.getCause();} @TO@ CatchClause@@catch (IOException|IllegalStateException e) {} @AT@ 12580 @LENGTH@ 543
---------INS InfixExpression@@ex != null @TO@ WhileStatement@@while (ex != null) {  if (ex instanceof RedirectException) {    try {      ctx.connectController();      return;    } catch (    CommandLineException ce) {    }  }  ex=ex.getCause();} @AT@ 12587 @LENGTH@ 10
------------INS SimpleName@@ex @TO@ InfixExpression@@ex != null @AT@ 12587 @LENGTH@ 2
------------INS Operator@@!= @TO@ InfixExpression@@ex != null @AT@ 12589 @LENGTH@ 2
------------INS NullLiteral@@null @TO@ InfixExpression@@ex != null @AT@ 12593 @LENGTH@ 4
---------INS Block@@WhileBody:{  if (ex instanceof RedirectException) {    try {      ctx.connectController();      return;    } catch (    CommandLineException ce) {    }  }  ex=ex.getCause();} @TO@ WhileStatement@@while (ex != null) {  if (ex instanceof RedirectException) {    try {      ctx.connectController();      return;    } catch (    CommandLineException ce) {    }  }  ex=ex.getCause();} @AT@ 12599 @LENGTH@ 524
------------INS IfStatement@@if (ex instanceof RedirectException) {  try {    ctx.connectController();    return;  } catch (  CommandLineException ce) {  }} @TO@ Block@@WhileBody:{  if (ex instanceof RedirectException) {    try {      ctx.connectController();      return;    } catch (    CommandLineException ce) {    }  }  ex=ex.getCause();} @AT@ 12621 @LENGTH@ 444
---------------INS InstanceofExpression@@ex instanceof RedirectException @TO@ IfStatement@@if (ex instanceof RedirectException) {  try {    ctx.connectController();    return;  } catch (  CommandLineException ce) {  }} @AT@ 12625 @LENGTH@ 31
------------------INS SimpleName@@ex @TO@ InstanceofExpression@@ex instanceof RedirectException @AT@ 12625 @LENGTH@ 2
------------------INS Instanceof@@instanceof @TO@ InstanceofExpression@@ex instanceof RedirectException @AT@ 12628 @LENGTH@ 10
------------------INS SimpleType@@RedirectException @TO@ InstanceofExpression@@ex instanceof RedirectException @AT@ 12639 @LENGTH@ 17
---------------INS Block@@ThenBody:{  try {    ctx.connectController();    return;  } catch (  CommandLineException ce) {  }} @TO@ IfStatement@@if (ex instanceof RedirectException) {  try {    ctx.connectController();    return;  } catch (  CommandLineException ce) {  }} @AT@ 12658 @LENGTH@ 407
------------------INS TryStatement@@try {  ctx.connectController();  return;} catch (CommandLineException ce) {} @TO@ Block@@ThenBody:{  try {    ctx.connectController();    return;  } catch (  CommandLineException ce) {  }} @AT@ 12684 @LENGTH@ 359
---------------------INS ExpressionStatement@@MethodInvocation:ctx.connectController() @TO@ TryStatement@@try {  ctx.connectController();  return;} catch (CommandLineException ce) {} @AT@ 12718 @LENGTH@ 24
------------------------INS MethodInvocation@@ctx.connectController() @TO@ ExpressionStatement@@MethodInvocation:ctx.connectController() @AT@ 12718 @LENGTH@ 23
---------------------------INS SimpleName@@Name:ctx @TO@ MethodInvocation@@ctx.connectController() @AT@ 12718 @LENGTH@ 3
---------------------------INS SimpleName@@MethodName:connectController:[] @TO@ MethodInvocation@@ctx.connectController() @AT@ 12722 @LENGTH@ 19
---------------------INS ReturnStatement@@ @TO@ TryStatement@@try {  ctx.connectController();  return;} catch (CommandLineException ce) {} @AT@ 12771 @LENGTH@ 7
---------------------INS CatchClause@@catch (CommandLineException ce) {} @TO@ TryStatement@@try {  ctx.connectController();  return;} catch (CommandLineException ce) {} @AT@ 12805 @LENGTH@ 238
------------------------INS SingleVariableDeclaration@@CommandLineException ce @TO@ CatchClause@@catch (CommandLineException ce) {} @AT@ 12812 @LENGTH@ 23
---------------------------INS SimpleType@@CommandLineException @TO@ SingleVariableDeclaration@@CommandLineException ce @AT@ 12812 @LENGTH@ 20
---------------------------INS SimpleName@@ce @TO@ SingleVariableDeclaration@@CommandLineException ce @AT@ 12833 @LENGTH@ 2
------------INS ExpressionStatement@@Assignment:ex=ex.getCause() @TO@ Block@@WhileBody:{  if (ex instanceof RedirectException) {    try {      ctx.connectController();      return;    } catch (    CommandLineException ce) {    }  }  ex=ex.getCause();} @AT@ 13086 @LENGTH@ 19
---------------INS Assignment@@ex=ex.getCause() @TO@ ExpressionStatement@@Assignment:ex=ex.getCause() @AT@ 13086 @LENGTH@ 18
------------------INS SimpleName@@ex @TO@ Assignment@@ex=ex.getCause() @AT@ 13086 @LENGTH@ 2
------------------INS Operator@@= @TO@ Assignment@@ex=ex.getCause() @AT@ 13088 @LENGTH@ 1
------------------INS MethodInvocation@@ex.getCause() @TO@ Assignment@@ex=ex.getCause() @AT@ 13091 @LENGTH@ 13
---------------------INS SimpleName@@Name:ex @TO@ MethodInvocation@@ex.getCause() @AT@ 13091 @LENGTH@ 2
---------------------INS SimpleName@@MethodName:getCause:[] @TO@ MethodInvocation@@ex.getCause() @AT@ 13094 @LENGTH@ 10
---INS CatchClause@@catch (IllegalStateException ex) {} @TO@ TryStatement@@try {  final ModelNode response=client.execute(getStateOp);  if (Util.isSuccess(response)) {    serverState=response.get(ClientConstants.RESULT).asString();    if ("running".equals(serverState) || "restart-required".equals(serverState)) {      break;    }  }} catch (IOException|IllegalStateException e) {} @AT@ 13178 @LENGTH@ 266
------INS SingleVariableDeclaration@@IllegalStateException ex @TO@ CatchClause@@catch (IllegalStateException ex) {} @AT@ 13185 @LENGTH@ 24
---------INS SimpleType@@IllegalStateException @TO@ SingleVariableDeclaration@@IllegalStateException ex @AT@ 13185 @LENGTH@ 21
---------INS SimpleName@@ex @TO@ SingleVariableDeclaration@@IllegalStateException ex @AT@ 13207 @LENGTH@ 2


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<HazelcastMapComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<HazelcastMapComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5547 @LENGTH@ 345
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 5551 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5551 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  ComponentCustomizer<HazelcastMapComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ ThenBody:{  for (  ComponentCustomizer<HazelcastMapComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5607 @LENGTH@ 285
------UPD EnhancedForStatement@@for (ComponentCustomizer<HazelcastMapComponent> configurer : customizers) {  LOGGER.debug("Configure component {}, with configurer {}",component,configurer);  configurer.customize(component);} @TO@ for (ComponentCustomizer<HazelcastMapComponent> customizer : customizers) {  LOGGER.debug("Configure component {}, with customizer {}",component,customizer);  customizer.customize(component);} @AT@ 5621 @LENGTH@ 261
---------UPD SingleVariableDeclaration@@ComponentCustomizer<HazelcastMapComponent> configurer @TO@ ComponentCustomizer<HazelcastMapComponent> customizer @AT@ 5626 @LENGTH@ 53
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5669 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5713 @LENGTH@ 106
------------UPD MethodInvocation@@LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5713 @LENGTH@ 105
---------------UPD SimpleName@@MethodName:debug:["Configure component {}, with configurer {}", component, configurer] @TO@ MethodName:debug:["Configure component {}, with customizer {}", component, customizer] @AT@ 5720 @LENGTH@ 98
------------------UPD StringLiteral@@"Configure component {}, with configurer {}" @TO@ "Configure component {}, with customizer {}" @AT@ 5726 @LENGTH@ 44
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5807 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(component) @TO@ MethodInvocation:customizer.customize(component) @AT@ 5836 @LENGTH@ 32
------------UPD MethodInvocation@@configurer.customize(component) @TO@ customizer.customize(component) @AT@ 5836 @LENGTH@ 31
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5836 @LENGTH@ 10


MOV ExpressionStatement@@MethodInvocation:endpoint.setHeaderFilterStrategy(getHeaderFilterStrategy()) @TO@ MethodDeclaration@@protected, Endpoint, MethodName:createEndpoint, String uri, String remaining, Map<String,Object> parameters, Exception,  @AT@ 2774 @LENGTH@ 60


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  DataFormatCustomizer<PGPDataFormat> configurer : customizers) {    LOGGER.debug("Configure dataformat {}, with configurer {}",dataformat,configurer);    configurer.customize(dataformat);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  DataFormatCustomizer<PGPDataFormat> customizer : customizers) {    LOGGER.debug("Configure dataformat {}, with customizer {}",dataformat,customizer);    customizer.customize(dataformat);  }} @AT@ 5273 @LENGTH@ 422
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 5277 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5277 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  DataFormatCustomizer<PGPDataFormat> configurer : customizers) {    LOGGER.debug("Configure dataformat {}, with configurer {}",dataformat,configurer);    configurer.customize(dataformat);  }} @TO@ ThenBody:{  for (  DataFormatCustomizer<PGPDataFormat> customizer : customizers) {    LOGGER.debug("Configure dataformat {}, with customizer {}",dataformat,customizer);    customizer.customize(dataformat);  }} @AT@ 5333 @LENGTH@ 362
------UPD EnhancedForStatement@@for (DataFormatCustomizer<PGPDataFormat> configurer : customizers) {  LOGGER.debug("Configure dataformat {}, with configurer {}",dataformat,configurer);  configurer.customize(dataformat);} @TO@ for (DataFormatCustomizer<PGPDataFormat> customizer : customizers) {  LOGGER.debug("Configure dataformat {}, with customizer {}",dataformat,customizer);  customizer.customize(dataformat);} @AT@ 5355 @LENGTH@ 322
---------UPD SingleVariableDeclaration@@DataFormatCustomizer<PGPDataFormat> configurer @TO@ DataFormatCustomizer<PGPDataFormat> customizer @AT@ 5360 @LENGTH@ 46
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5396 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure dataformat {}, with configurer {}",dataformat,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure dataformat {}, with customizer {}",dataformat,customizer) @AT@ 5448 @LENGTH@ 149
------------UPD MethodInvocation@@LOGGER.debug("Configure dataformat {}, with configurer {}",dataformat,configurer) @TO@ LOGGER.debug("Configure dataformat {}, with customizer {}",dataformat,customizer) @AT@ 5448 @LENGTH@ 148
---------------UPD SimpleName@@MethodName:debug:["Configure dataformat {}, with configurer {}", dataformat, configurer] @TO@ MethodName:debug:["Configure dataformat {}, with customizer {}", dataformat, customizer] @AT@ 5455 @LENGTH@ 141
------------------UPD StringLiteral@@"Configure dataformat {}, with configurer {}" @TO@ "Configure dataformat {}, with customizer {}" @AT@ 5494 @LENGTH@ 45
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5585 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(dataformat) @TO@ MethodInvocation:customizer.customize(dataformat) @AT@ 5622 @LENGTH@ 33
------------UPD MethodInvocation@@configurer.customize(dataformat) @TO@ customizer.customize(dataformat) @AT@ 5622 @LENGTH@ 32
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5622 @LENGTH@ 10


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled(); @AT@ 5328 @LENGTH@ 160
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5336 @LENGTH@ 151
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5336 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5353 @LENGTH@ 134
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 5353 @LENGTH@ 64
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5353 @LENGTH@ 35
---------UPD MethodInvocation@@componentConfiguration.getConfigurer().isEnabled() @TO@ componentConfiguration.getCustomizer().isEnabled() @AT@ 5437 @LENGTH@ 50
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5437 @LENGTH@ 38


UPD ExpressionStatement@@MethodInvocation:DeploymentHandlerUtil.replace(context,deploymentModel,runtimeName,name,replacedRuntimeName,vaultReader,contentItem) @TO@ MethodInvocation:DeploymentHandlerUtil.replace(context,originalDeployment,runtimeName,name,replacedRuntimeName,vaultReader,contentItem) @AT@ 9446 @LENGTH@ 122
---UPD MethodInvocation@@DeploymentHandlerUtil.replace(context,deploymentModel,runtimeName,name,replacedRuntimeName,vaultReader,contentItem) @TO@ DeploymentHandlerUtil.replace(context,originalDeployment,runtimeName,name,replacedRuntimeName,vaultReader,contentItem) @AT@ 9446 @LENGTH@ 121
------UPD SimpleName@@MethodName:replace:[context, deploymentModel, runtimeName, name, replacedRuntimeName, vaultReader, contentItem] @TO@ MethodName:replace:[context, originalDeployment, runtimeName, name, replacedRuntimeName, vaultReader, contentItem] @AT@ 9468 @LENGTH@ 99
---------UPD SimpleName@@deploymentModel @TO@ originalDeployment @AT@ 9485 @LENGTH@ 15


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && dataformatConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && dataformatConfiguration.getCustomizer().isEnabled(); @AT@ 5155 @LENGTH@ 177
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && dataformatConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && dataformatConfiguration.getCustomizer().isEnabled() @AT@ 5163 @LENGTH@ 168
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5163 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && dataformatConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && dataformatConfiguration.getCustomizer().isEnabled() @AT@ 5180 @LENGTH@ 151
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 5180 @LENGTH@ 72
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5180 @LENGTH@ 35
---------UPD MethodInvocation@@dataformatConfiguration.getConfigurer().isEnabled() @TO@ dataformatConfiguration.getCustomizer().isEnabled() @AT@ 5280 @LENGTH@ 51
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5280 @LENGTH@ 39


UPD MethodDeclaration@@public, static, void, MethodName:setUpClass, Exception,  @TO@ public, voidMethodName:TestDbTxnManager2, Exception,  @AT@ 3306 @LENGTH@ 332
---DEL Modifier@@static @AT@ 3313 @LENGTH@ 6
---DEL PrimitiveType@@void @AT@ 3320 @LENGTH@ 4
---UPD SimpleName@@MethodName:setUpClass @TO@ MethodName:TestDbTxnManager2 @AT@ 3325 @LENGTH@ 10


UPD TypeDeclaration@@[@ContextConfiguration(locations="/xml-based-configuration-applicationContext.xml"), @WebAppConfiguration, @RunWith(SpringJUnit4ClassRunner.class), public]XmlApplicationContextWebIntegrationIT, MultiDriverTestClass @TO@ [@ContextConfiguration(locations="/xml-based-configuration-applicationContext.xml"), @WebAppConfiguration, @RunWith(SpringJUnit4ClassRunner.class), public]XmlApplicationContextWebIntegrationIT,  @AT@ 2131 @LENGTH@ 4744
---DEL SimpleType@@MultiDriverTestClass @AT@ 2336 @LENGTH@ 20


UPD MethodDeclaration@@public, int, MethodName:tryEvictContiguousData, int allocationSize, int count,  @TO@ public, long, MethodName:tryEvictContiguousData, int allocationSize, int count,  @AT@ 9125 @LENGTH@ 271
---UPD PrimitiveType@@int @TO@ long @AT@ 9132 @LENGTH@ 3
---DEL ExpressionStatement@@Assignment:count-=evicted @AT@ 9256 @LENGTH@ 17
------DEL Assignment@@count-=evicted @AT@ 9256 @LENGTH@ 16
---------DEL SimpleName@@count @AT@ 9256 @LENGTH@ 5
---------DEL Operator@@-= @AT@ 9261 @LENGTH@ 2
---------DEL SimpleName@@evicted @AT@ 9265 @LENGTH@ 7
---INS IfStatement@@if (count <= evicted) return evicted * allocationSize; @TO@ MethodDeclaration@@public, int, MethodName:tryEvictContiguousData, int allocationSize, int count,  @AT@ 9257 @LENGTH@ 54
------INS InfixExpression@@count <= evicted @TO@ IfStatement@@if (count <= evicted) return evicted * allocationSize; @AT@ 9261 @LENGTH@ 16
---------INS SimpleName@@count @TO@ InfixExpression@@count <= evicted @AT@ 9261 @LENGTH@ 5
---------INS Operator@@<= @TO@ InfixExpression@@count <= evicted @AT@ 9266 @LENGTH@ 2
---------INS SimpleName@@evicted @TO@ InfixExpression@@count <= evicted @AT@ 9270 @LENGTH@ 7
------INS Block@@ThenBody:return evicted * allocationSize; @TO@ IfStatement@@if (count <= evicted) return evicted * allocationSize; @AT@ 9279 @LENGTH@ 32
---------INS ReturnStatement@@InfixExpression:evicted * allocationSize @TO@ Block@@ThenBody:return evicted * allocationSize; @AT@ 9279 @LENGTH@ 32
------------INS InfixExpression@@evicted * allocationSize @TO@ ReturnStatement@@InfixExpression:evicted * allocationSize @AT@ 9286 @LENGTH@ 24
---------------MOV SimpleName@@count @TO@ InfixExpression@@evicted * allocationSize @AT@ 9282 @LENGTH@ 5
---------------MOV SimpleName@@count @TO@ InfixExpression@@evicted * allocationSize @AT@ 9282 @LENGTH@ 5
---------------MOV Operator@@> @TO@ InfixExpression@@evicted * allocationSize @AT@ 9287 @LENGTH@ 1
---------------INS SimpleName@@allocationSize @TO@ InfixExpression@@evicted * allocationSize @AT@ 9296 @LENGTH@ 14
---DEL IfStatement@@if (count > 0) {  evicted+=evictDataFromHeap(timer.get(),count,allocationSize);} @AT@ 9278 @LENGTH@ 94
------DEL InfixExpression@@count > 0 @AT@ 9282 @LENGTH@ 9
---------DEL NumberLiteral@@0 @AT@ 9290 @LENGTH@ 1
------DEL Block@@ThenBody:{  evicted+=evictDataFromHeap(timer.get(),count,allocationSize);} @AT@ 9293 @LENGTH@ 79
---------DEL ExpressionStatement@@Assignment:evicted+=evictDataFromHeap(timer.get(),count,allocationSize) @AT@ 9301 @LENGTH@ 65
---INS ExpressionStatement@@Assignment:evicted+=evictDataFromHeap(timer.get(),count - evicted,allocationSize) @TO@ MethodDeclaration@@public, int, MethodName:tryEvictContiguousData, int allocationSize, int count,  @AT@ 9316 @LENGTH@ 75
------MOV Assignment@@evicted+=evictDataFromHeap(timer.get(),count,allocationSize) @TO@ ExpressionStatement@@Assignment:evicted+=evictDataFromHeap(timer.get(),count - evicted,allocationSize) @AT@ 9301 @LENGTH@ 64
---------UPD MethodInvocation@@evictDataFromHeap(timer.get(),count,allocationSize) @TO@ evictDataFromHeap(timer.get(),count - evicted,allocationSize) @AT@ 9312 @LENGTH@ 53
------------UPD SimpleName@@MethodName:evictDataFromHeap:[timer.get(), count, allocationSize] @TO@ MethodName:evictDataFromHeap:[timer.get(), count - evicted, allocationSize] @AT@ 9312 @LENGTH@ 53
---------------DEL SimpleName@@count @AT@ 9343 @LENGTH@ 5
---------------INS InfixExpression@@count - evicted @TO@ SimpleName@@MethodName:evictDataFromHeap:[timer.get(), count, allocationSize] @AT@ 9358 @LENGTH@ 15
------------------INS SimpleName@@count @TO@ InfixExpression@@count - evicted @AT@ 9358 @LENGTH@ 5
------------------INS Operator@@- @TO@ InfixExpression@@count - evicted @AT@ 9363 @LENGTH@ 1
------------------INS SimpleName@@evicted @TO@ InfixExpression@@count - evicted @AT@ 9366 @LENGTH@ 7
---DEL ReturnStatement@@SimpleName:evicted @AT@ 9377 @LENGTH@ 15
---INS VariableDeclarationStatement@@long evictedBytes=evicted * allocationSize; @TO@ MethodDeclaration@@public, int, MethodName:tryEvictContiguousData, int allocationSize, int count,  @AT@ 9396 @LENGTH@ 45
------INS PrimitiveType@@long @TO@ VariableDeclarationStatement@@long evictedBytes=evicted * allocationSize; @AT@ 9396 @LENGTH@ 4
------INS VariableDeclarationFragment@@evictedBytes=evicted * allocationSize @TO@ VariableDeclarationStatement@@long evictedBytes=evicted * allocationSize; @AT@ 9401 @LENGTH@ 39
---------INS SimpleName@@evictedBytes @TO@ VariableDeclarationFragment@@evictedBytes=evicted * allocationSize @AT@ 9401 @LENGTH@ 12
---------INS InfixExpression@@evicted * allocationSize @TO@ VariableDeclarationFragment@@evictedBytes=evicted * allocationSize @AT@ 9416 @LENGTH@ 24
------------INS SimpleName@@evicted @TO@ InfixExpression@@evicted * allocationSize @AT@ 9416 @LENGTH@ 7
------------INS Operator@@* @TO@ InfixExpression@@evicted * allocationSize @AT@ 9423 @LENGTH@ 1
------------INS SimpleName@@allocationSize @TO@ InfixExpression@@evicted * allocationSize @AT@ 9426 @LENGTH@ 14
---INS IfStatement@@if (count <= evicted) return evictedBytes; @TO@ MethodDeclaration@@public, int, MethodName:tryEvictContiguousData, int allocationSize, int count,  @AT@ 9446 @LENGTH@ 42
------INS InfixExpression@@count <= evicted @TO@ IfStatement@@if (count <= evicted) return evictedBytes; @AT@ 9450 @LENGTH@ 16
---------INS SimpleName@@count @TO@ InfixExpression@@count <= evicted @AT@ 9450 @LENGTH@ 5
---------INS Operator@@<= @TO@ InfixExpression@@count <= evicted @AT@ 9455 @LENGTH@ 2
---------INS SimpleName@@evicted @TO@ InfixExpression@@count <= evicted @AT@ 9459 @LENGTH@ 7
------INS Block@@ThenBody:return evictedBytes; @TO@ IfStatement@@if (count <= evicted) return evictedBytes; @AT@ 9468 @LENGTH@ 20
---------INS ReturnStatement@@SimpleName:evictedBytes @TO@ Block@@ThenBody:return evictedBytes; @AT@ 9468 @LENGTH@ 20
------------MOV SimpleName@@evicted @TO@ ReturnStatement@@SimpleName:evictedBytes @AT@ 9384 @LENGTH@ 7
---INS ExpressionStatement@@Assignment:evictedBytes+=evictSomeBlocks(allocationSize * (count - evicted)) @TO@ MethodDeclaration@@public, int, MethodName:tryEvictContiguousData, int allocationSize, int count,  @AT@ 9493 @LENGTH@ 68
------INS Assignment@@evictedBytes+=evictSomeBlocks(allocationSize * (count - evicted)) @TO@ ExpressionStatement@@Assignment:evictedBytes+=evictSomeBlocks(allocationSize * (count - evicted)) @AT@ 9493 @LENGTH@ 67
---------INS SimpleName@@evictedBytes @TO@ Assignment@@evictedBytes+=evictSomeBlocks(allocationSize * (count - evicted)) @AT@ 9493 @LENGTH@ 12
---------INS Operator@@+= @TO@ Assignment@@evictedBytes+=evictSomeBlocks(allocationSize * (count - evicted)) @AT@ 9505 @LENGTH@ 2
---------INS MethodInvocation@@evictSomeBlocks(allocationSize * (count - evicted)) @TO@ Assignment@@evictedBytes+=evictSomeBlocks(allocationSize * (count - evicted)) @AT@ 9509 @LENGTH@ 51
------------INS SimpleName@@MethodName:evictSomeBlocks:[allocationSize * (count - evicted)] @TO@ MethodInvocation@@evictSomeBlocks(allocationSize * (count - evicted)) @AT@ 9509 @LENGTH@ 51
---------------INS InfixExpression@@allocationSize * (count - evicted) @TO@ SimpleName@@MethodName:evictSomeBlocks:[allocationSize * (count - evicted)] @AT@ 9525 @LENGTH@ 34
------------------INS SimpleName@@allocationSize @TO@ InfixExpression@@allocationSize * (count - evicted) @AT@ 9525 @LENGTH@ 14
------------------INS Operator@@* @TO@ InfixExpression@@allocationSize * (count - evicted) @AT@ 9539 @LENGTH@ 1
------------------INS ParenthesizedExpression@@(count - evicted) @TO@ InfixExpression@@allocationSize * (count - evicted) @AT@ 9542 @LENGTH@ 17
---------------------INS InfixExpression@@count - evicted @TO@ ParenthesizedExpression@@(count - evicted) @AT@ 9543 @LENGTH@ 15
------------------------INS SimpleName@@count @TO@ InfixExpression@@count - evicted @AT@ 9543 @LENGTH@ 5
------------------------INS Operator@@- @TO@ InfixExpression@@count - evicted @AT@ 9548 @LENGTH@ 1
------------------------INS SimpleName@@evicted @TO@ InfixExpression@@count - evicted @AT@ 9551 @LENGTH@ 7
---INS ReturnStatement@@SimpleName:evictedBytes @TO@ MethodDeclaration@@public, int, MethodName:tryEvictContiguousData, int allocationSize, int count,  @AT@ 9566 @LENGTH@ 20
------INS SimpleName@@evictedBytes @TO@ ReturnStatement@@SimpleName:evictedBytes @AT@ 9573 @LENGTH@ 12


INS MethodDeclaration@@public, void, MethodName:testSaslMechConfiguration, Exception,  @TO@ TypeDeclaration@@[public]XmlConfigurationTest,  @AT@ 2852 @LENGTH@ 2409
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testSaslMechConfiguration, Exception,  @AT@ 2852 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testSaslMechConfiguration, Exception,  @AT@ 2859 @LENGTH@ 4
---INS SimpleName@@MethodName:testSaslMechConfiguration @TO@ MethodDeclaration@@public, void, MethodName:testSaslMechConfiguration, Exception,  @AT@ 2864 @LENGTH@ 25
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:testSaslMechConfiguration, Exception,  @AT@ 2899 @LENGTH@ 9
---INS VariableDeclarationStatement@@final byte[] xmlBytes=("<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n" + "\n" + "<configuration>"+ "<authentication-client xmlns=\"urn:elytron:1.0\">\n"+ "    <authentication-configurations>\n"+ "        <configuration name=\"test-1\">\n"+ "            <allow-sasl-mechanisms names=\"someName\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-2\">\n"+ "            <sasl-mechanism-selector selector=\"someName\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-3\">\n"+ "            <sasl-mechanism-selector selector=\"someName #ALL\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-4\">\n"+ "            <sasl-mechanism-selector selector=\"someName -JBOSS-LOCAL-USER\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-5\">\n"+ "            <sasl-mechanism-selector selector=\"someName (! JBOSS-LOCAL-USER)\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-6\">\n"+ "            <sasl-mechanism-selector selector=\"!#HASH(MD5)\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-7\">\n"+ "            <sasl-mechanism-selector selector=\"#FAMILY(SCRAM)\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-8\">\n"+ "            <sasl-mechanism-selector selector=\"(DIGEST-SHA-256||SCRAM-SHA-256) #PLUS\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-9\">\n"+ "            <sasl-mechanism-selector selector=\"(((#HASH(SHA-256) &amp;&amp; (#PLUS) ) ) )\"/>\n"+ "        </configuration>\n"+ "    </authentication-configurations>\n"+ "</authentication-client>\n"+ "</configuration>").getBytes(StandardCharsets.UTF_8); @TO@ MethodDeclaration@@public, void, MethodName:testSaslMechConfiguration, Exception,  @AT@ 2919 @LENGTH@ 2141
------INS Modifier@@final @TO@ VariableDeclarationStatement@@final byte[] xmlBytes=("<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n" + "\n" + "<configuration>"+ "<authentication-client xmlns=\"urn:elytron:1.0\">\n"+ "    <authentication-configurations>\n"+ "        <configuration name=\"test-1\">\n"+ "            <allow-sasl-mechanisms names=\"someName\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-2\">\n"+ "            <sasl-mechanism-selector selector=\"someName\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-3\">\n"+ "            <sasl-mechanism-selector selector=\"someName #ALL\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-4\">\n"+ "            <sasl-mechanism-selector selector=\"someName -JBOSS-LOCAL-USER\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-5\">\n"+ "            <sasl-mechanism-selector selector=\"someName (! JBOSS-LOCAL-USER)\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-6\">\n"+ "            <sasl-mechanism-selector selector=\"!#HASH(MD5)\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-7\">\n"+ "            <sasl-mechanism-selector selector=\"#FAMILY(SCRAM)\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-8\">\n"+ "            <sasl-mechanism-selector selector=\"(DIGEST-SHA-256||SCRAM-SHA-256) #PLUS\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-9\">\n"+ "            <sasl-mechanism-selector selector=\"(((#HASH(SHA-256) &amp;&amp; (#PLUS) ) ) )\"/>\n"+ "        </configuration>\n"+ "    </authentication-configurations>\n"+ "</authentication-client>\n"+ "</configuration>").getBytes(StandardCharsets.UTF_8); @AT@ 2919 @LENGTH@ 5
------INS ArrayType@@byte[] @TO@ VariableDeclarationStatement@@final byte[] xmlBytes=("<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n" + "\n" + "<configuration>"+ "<authentication-client xmlns=\"urn:elytron:1.0\">\n"+ "    <authentication-configurations>\n"+ "        <configuration name=\"test-1\">\n"+ "            <allow-sasl-mechanisms names=\"someName\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-2\">\n"+ "            <sasl-mechanism-selector selector=\"someName\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-3\">\n"+ "            <sasl-mechanism-selector selector=\"someName #ALL\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-4\">\n"+ "            <sasl-mechanism-selector selector=\"someName -JBOSS-LOCAL-USER\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-5\">\n"+ "            <sasl-mechanism-selector selector=\"someName (! JBOSS-LOCAL-USER)\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-6\">\n"+ "            <sasl-mechanism-selector selector=\"!#HASH(MD5)\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-7\">\n"+ "            <sasl-mechanism-selector selector=\"#FAMILY(SCRAM)\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-8\">\n"+ "            <sasl-mechanism-selector selector=\"(DIGEST-SHA-256||SCRAM-SHA-256) #PLUS\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-9\">\n"+ "            <sasl-mechanism-selector selector=\"(((#HASH(SHA-256) &amp;&amp; (#PLUS) ) ) )\"/>\n"+ "        </configuration>\n"+ "    </authentication-configurations>\n"+ "</authentication-client>\n"+ "</configuration>").getBytes(StandardCharsets.UTF_8); @AT@ 2925 @LENGTH@ 6
---------INS PrimitiveType@@byte @TO@ ArrayType@@byte[] @AT@ 2925 @LENGTH@ 4
------INS VariableDeclarationFragment@@xmlBytes=("<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n" + "\n" + "<configuration>"+ "<authentication-client xmlns=\"urn:elytron:1.0\">\n"+ "    <authentication-configurations>\n"+ "        <configuration name=\"test-1\">\n"+ "            <allow-sasl-mechanisms names=\"someName\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-2\">\n"+ "            <sasl-mechanism-selector selector=\"someName\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-3\">\n"+ "            <sasl-mechanism-selector selector=\"someName #ALL\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-4\">\n"+ "            <sasl-mechanism-selector selector=\"someName -JBOSS-LOCAL-USER\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-5\">\n"+ "            <sasl-mechanism-selector selector=\"someName (! JBOSS-LOCAL-USER)\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-6\">\n"+ "            <sasl-mechanism-selector selector=\"!#HASH(MD5)\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-7\">\n"+ "            <sasl-mechanism-selector selector=\"#FAMILY(SCRAM)\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-8\">\n"+ "            <sasl-mechanism-selector selector=\"(DIGEST-SHA-256||SCRAM-SHA-256) #PLUS\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-9\">\n"+ "            <sasl-mechanism-selector selector=\"(((#HASH(SHA-256) &amp;&amp; (#PLUS) ) ) )\"/>\n"+ "        </configuration>\n"+ "    </authentication-configurations>\n"+ "</authentication-client>\n"+ "</configuration>").getBytes(StandardCharsets.UTF_8) @TO@ VariableDeclarationStatement@@final byte[] xmlBytes=("<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n" + "\n" + "<configuration>"+ "<authentication-client xmlns=\"urn:elytron:1.0\">\n"+ "    <authentication-configurations>\n"+ "        <configuration name=\"test-1\">\n"+ "            <allow-sasl-mechanisms names=\"someName\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-2\">\n"+ "            <sasl-mechanism-selector selector=\"someName\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-3\">\n"+ "            <sasl-mechanism-selector selector=\"someName #ALL\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-4\">\n"+ "            <sasl-mechanism-selector selector=\"someName -JBOSS-LOCAL-USER\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-5\">\n"+ "            <sasl-mechanism-selector selector=\"someName (! JBOSS-LOCAL-USER)\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-6\">\n"+ "            <sasl-mechanism-selector selector=\"!#HASH(MD5)\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-7\">\n"+ "            <sasl-mechanism-selector selector=\"#FAMILY(SCRAM)\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-8\">\n"+ "            <sasl-mechanism-selector selector=\"(DIGEST-SHA-256||SCRAM-SHA-256) #PLUS\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-9\">\n"+ "            <sasl-mechanism-selector selector=\"(((#HASH(SHA-256) &amp;&amp; (#PLUS) ) ) )\"/>\n"+ "        </configuration>\n"+ "    </authentication-configurations>\n"+ "</authentication-client>\n"+ "</configuration>").getBytes(StandardCharsets.UTF_8); @AT@ 2932 @LENGTH@ 2127
---------INS SimpleName@@xmlBytes @TO@ VariableDeclarationFragment@@xmlBytes=("<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n" + "\n" + "<configuration>"+ "<authentication-client xmlns=\"urn:elytron:1.0\">\n"+ "    <authentication-configurations>\n"+ "        <configuration name=\"test-1\">\n"+ "            <allow-sasl-mechanisms names=\"someName\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-2\">\n"+ "            <sasl-mechanism-selector selector=\"someName\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-3\">\n"+ "            <sasl-mechanism-selector selector=\"someName #ALL\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-4\">\n"+ "            <sasl-mechanism-selector selector=\"someName -JBOSS-LOCAL-USER\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-5\">\n"+ "            <sasl-mechanism-selector selector=\"someName (! JBOSS-LOCAL-USER)\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-6\">\n"+ "            <sasl-mechanism-selector selector=\"!#HASH(MD5)\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-7\">\n"+ "            <sasl-mechanism-selector selector=\"#FAMILY(SCRAM)\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-8\">\n"+ "            <sasl-mechanism-selector selector=\"(DIGEST-SHA-256||SCRAM-SHA-256) #PLUS\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-9\">\n"+ "            <sasl-mechanism-selector selector=\"(((#HASH(SHA-256) &amp;&amp; (#PLUS) ) ) )\"/>\n"+ "        </configuration>\n"+ "    </authentication-configurations>\n"+ "</authentication-client>\n"+ "</configuration>").getBytes(StandardCharsets.UTF_8) @AT@ 2932 @LENGTH@ 8
---------INS MethodInvocation@@("<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n" + "\n" + "<configuration>"+ "<authentication-client xmlns=\"urn:elytron:1.0\">\n"+ "    <authentication-configurations>\n"+ "        <configuration name=\"test-1\">\n"+ "            <allow-sasl-mechanisms names=\"someName\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-2\">\n"+ "            <sasl-mechanism-selector selector=\"someName\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-3\">\n"+ "            <sasl-mechanism-selector selector=\"someName #ALL\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-4\">\n"+ "            <sasl-mechanism-selector selector=\"someName -JBOSS-LOCAL-USER\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-5\">\n"+ "            <sasl-mechanism-selector selector=\"someName (! JBOSS-LOCAL-USER)\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-6\">\n"+ "            <sasl-mechanism-selector selector=\"!#HASH(MD5)\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-7\">\n"+ "            <sasl-mechanism-selector selector=\"#FAMILY(SCRAM)\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-8\">\n"+ "            <sasl-mechanism-selector selector=\"(DIGEST-SHA-256||SCRAM-SHA-256) #PLUS\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-9\">\n"+ "            <sasl-mechanism-selector selector=\"(((#HASH(SHA-256) &amp;&amp; (#PLUS) ) ) )\"/>\n"+ "        </configuration>\n"+ "    </authentication-configurations>\n"+ "</authentication-client>\n"+ "</configuration>").getBytes(StandardCharsets.UTF_8) @TO@ VariableDeclarationFragment@@xmlBytes=("<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n" + "\n" + "<configuration>"+ "<authentication-client xmlns=\"urn:elytron:1.0\">\n"+ "    <authentication-configurations>\n"+ "        <configuration name=\"test-1\">\n"+ "            <allow-sasl-mechanisms names=\"someName\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-2\">\n"+ "            <sasl-mechanism-selector selector=\"someName\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-3\">\n"+ "            <sasl-mechanism-selector selector=\"someName #ALL\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-4\">\n"+ "            <sasl-mechanism-selector selector=\"someName -JBOSS-LOCAL-USER\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-5\">\n"+ "            <sasl-mechanism-selector selector=\"someName (! JBOSS-LOCAL-USER)\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-6\">\n"+ "            <sasl-mechanism-selector selector=\"!#HASH(MD5)\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-7\">\n"+ "            <sasl-mechanism-selector selector=\"#FAMILY(SCRAM)\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-8\">\n"+ "            <sasl-mechanism-selector selector=\"(DIGEST-SHA-256||SCRAM-SHA-256) #PLUS\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-9\">\n"+ "            <sasl-mechanism-selector selector=\"(((#HASH(SHA-256) &amp;&amp; (#PLUS) ) ) )\"/>\n"+ "        </configuration>\n"+ "    </authentication-configurations>\n"+ "</authentication-client>\n"+ "</configuration>").getBytes(StandardCharsets.UTF_8) @AT@ 2943 @LENGTH@ 2116
------------INS ParenthesizedExpression@@("<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n" + "\n" + "<configuration>"+ "<authentication-client xmlns=\"urn:elytron:1.0\">\n"+ "    <authentication-configurations>\n"+ "        <configuration name=\"test-1\">\n"+ "            <allow-sasl-mechanisms names=\"someName\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-2\">\n"+ "            <sasl-mechanism-selector selector=\"someName\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-3\">\n"+ "            <sasl-mechanism-selector selector=\"someName #ALL\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-4\">\n"+ "            <sasl-mechanism-selector selector=\"someName -JBOSS-LOCAL-USER\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-5\">\n"+ "            <sasl-mechanism-selector selector=\"someName (! JBOSS-LOCAL-USER)\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-6\">\n"+ "            <sasl-mechanism-selector selector=\"!#HASH(MD5)\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-7\">\n"+ "            <sasl-mechanism-selector selector=\"#FAMILY(SCRAM)\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-8\">\n"+ "            <sasl-mechanism-selector selector=\"(DIGEST-SHA-256||SCRAM-SHA-256) #PLUS\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-9\">\n"+ "            <sasl-mechanism-selector selector=\"(((#HASH(SHA-256) &amp;&amp; (#PLUS) ) ) )\"/>\n"+ "        </configuration>\n"+ "    </authentication-configurations>\n"+ "</authentication-client>\n"+ "</configuration>") @TO@ MethodInvocation@@("<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n" + "\n" + "<configuration>"+ "<authentication-client xmlns=\"urn:elytron:1.0\">\n"+ "    <authentication-configurations>\n"+ "        <configuration name=\"test-1\">\n"+ "            <allow-sasl-mechanisms names=\"someName\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-2\">\n"+ "            <sasl-mechanism-selector selector=\"someName\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-3\">\n"+ "            <sasl-mechanism-selector selector=\"someName #ALL\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-4\">\n"+ "            <sasl-mechanism-selector selector=\"someName -JBOSS-LOCAL-USER\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-5\">\n"+ "            <sasl-mechanism-selector selector=\"someName (! JBOSS-LOCAL-USER)\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-6\">\n"+ "            <sasl-mechanism-selector selector=\"!#HASH(MD5)\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-7\">\n"+ "            <sasl-mechanism-selector selector=\"#FAMILY(SCRAM)\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-8\">\n"+ "            <sasl-mechanism-selector selector=\"(DIGEST-SHA-256||SCRAM-SHA-256) #PLUS\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-9\">\n"+ "            <sasl-mechanism-selector selector=\"(((#HASH(SHA-256) &amp;&amp; (#PLUS) ) ) )\"/>\n"+ "        </configuration>\n"+ "    </authentication-configurations>\n"+ "</authentication-client>\n"+ "</configuration>").getBytes(StandardCharsets.UTF_8) @AT@ 2943 @LENGTH@ 2083
---------------INS InfixExpression@@"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n" + "\n" + "<configuration>"+ "<authentication-client xmlns=\"urn:elytron:1.0\">\n"+ "    <authentication-configurations>\n"+ "        <configuration name=\"test-1\">\n"+ "            <allow-sasl-mechanisms names=\"someName\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-2\">\n"+ "            <sasl-mechanism-selector selector=\"someName\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-3\">\n"+ "            <sasl-mechanism-selector selector=\"someName #ALL\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-4\">\n"+ "            <sasl-mechanism-selector selector=\"someName -JBOSS-LOCAL-USER\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-5\">\n"+ "            <sasl-mechanism-selector selector=\"someName (! JBOSS-LOCAL-USER)\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-6\">\n"+ "            <sasl-mechanism-selector selector=\"!#HASH(MD5)\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-7\">\n"+ "            <sasl-mechanism-selector selector=\"#FAMILY(SCRAM)\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-8\">\n"+ "            <sasl-mechanism-selector selector=\"(DIGEST-SHA-256||SCRAM-SHA-256) #PLUS\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-9\">\n"+ "            <sasl-mechanism-selector selector=\"(((#HASH(SHA-256) &amp;&amp; (#PLUS) ) ) )\"/>\n"+ "        </configuration>\n"+ "    </authentication-configurations>\n"+ "</authentication-client>\n"+ "</configuration>" @TO@ ParenthesizedExpression@@("<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n" + "\n" + "<configuration>"+ "<authentication-client xmlns=\"urn:elytron:1.0\">\n"+ "    <authentication-configurations>\n"+ "        <configuration name=\"test-1\">\n"+ "            <allow-sasl-mechanisms names=\"someName\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-2\">\n"+ "            <sasl-mechanism-selector selector=\"someName\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-3\">\n"+ "            <sasl-mechanism-selector selector=\"someName #ALL\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-4\">\n"+ "            <sasl-mechanism-selector selector=\"someName -JBOSS-LOCAL-USER\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-5\">\n"+ "            <sasl-mechanism-selector selector=\"someName (! JBOSS-LOCAL-USER)\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-6\">\n"+ "            <sasl-mechanism-selector selector=\"!#HASH(MD5)\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-7\">\n"+ "            <sasl-mechanism-selector selector=\"#FAMILY(SCRAM)\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-8\">\n"+ "            <sasl-mechanism-selector selector=\"(DIGEST-SHA-256||SCRAM-SHA-256) #PLUS\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-9\">\n"+ "            <sasl-mechanism-selector selector=\"(((#HASH(SHA-256) &amp;&amp; (#PLUS) ) ) )\"/>\n"+ "        </configuration>\n"+ "    </authentication-configurations>\n"+ "</authentication-client>\n"+ "</configuration>") @AT@ 2944 @LENGTH@ 2081
------------------INS StringLiteral@@"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n" @TO@ InfixExpression@@"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n" + "\n" + "<configuration>"+ "<authentication-client xmlns=\"urn:elytron:1.0\">\n"+ "    <authentication-configurations>\n"+ "        <configuration name=\"test-1\">\n"+ "            <allow-sasl-mechanisms names=\"someName\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-2\">\n"+ "            <sasl-mechanism-selector selector=\"someName\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-3\">\n"+ "            <sasl-mechanism-selector selector=\"someName #ALL\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-4\">\n"+ "            <sasl-mechanism-selector selector=\"someName -JBOSS-LOCAL-USER\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-5\">\n"+ "            <sasl-mechanism-selector selector=\"someName (! JBOSS-LOCAL-USER)\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-6\">\n"+ "            <sasl-mechanism-selector selector=\"!#HASH(MD5)\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-7\">\n"+ "            <sasl-mechanism-selector selector=\"#FAMILY(SCRAM)\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-8\">\n"+ "            <sasl-mechanism-selector selector=\"(DIGEST-SHA-256||SCRAM-SHA-256) #PLUS\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-9\">\n"+ "            <sasl-mechanism-selector selector=\"(((#HASH(SHA-256) &amp;&amp; (#PLUS) ) ) )\"/>\n"+ "        </configuration>\n"+ "    </authentication-configurations>\n"+ "</authentication-client>\n"+ "</configuration>" @AT@ 2944 @LENGTH@ 46
------------------INS Operator@@+ @TO@ InfixExpression@@"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n" + "\n" + "<configuration>"+ "<authentication-client xmlns=\"urn:elytron:1.0\">\n"+ "    <authentication-configurations>\n"+ "        <configuration name=\"test-1\">\n"+ "            <allow-sasl-mechanisms names=\"someName\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-2\">\n"+ "            <sasl-mechanism-selector selector=\"someName\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-3\">\n"+ "            <sasl-mechanism-selector selector=\"someName #ALL\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-4\">\n"+ "            <sasl-mechanism-selector selector=\"someName -JBOSS-LOCAL-USER\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-5\">\n"+ "            <sasl-mechanism-selector selector=\"someName (! JBOSS-LOCAL-USER)\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-6\">\n"+ "            <sasl-mechanism-selector selector=\"!#HASH(MD5)\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-7\">\n"+ "            <sasl-mechanism-selector selector=\"#FAMILY(SCRAM)\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-8\">\n"+ "            <sasl-mechanism-selector selector=\"(DIGEST-SHA-256||SCRAM-SHA-256) #PLUS\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-9\">\n"+ "            <sasl-mechanism-selector selector=\"(((#HASH(SHA-256) &amp;&amp; (#PLUS) ) ) )\"/>\n"+ "        </configuration>\n"+ "    </authentication-configurations>\n"+ "</authentication-client>\n"+ "</configuration>" @AT@ 2990 @LENGTH@ 1
------------------INS StringLiteral@@"\n" @TO@ InfixExpression@@"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n" + "\n" + "<configuration>"+ "<authentication-client xmlns=\"urn:elytron:1.0\">\n"+ "    <authentication-configurations>\n"+ "        <configuration name=\"test-1\">\n"+ "            <allow-sasl-mechanisms names=\"someName\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-2\">\n"+ "            <sasl-mechanism-selector selector=\"someName\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-3\">\n"+ "            <sasl-mechanism-selector selector=\"someName #ALL\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-4\">\n"+ "            <sasl-mechanism-selector selector=\"someName -JBOSS-LOCAL-USER\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-5\">\n"+ "            <sasl-mechanism-selector selector=\"someName (! JBOSS-LOCAL-USER)\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-6\">\n"+ "            <sasl-mechanism-selector selector=\"!#HASH(MD5)\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-7\">\n"+ "            <sasl-mechanism-selector selector=\"#FAMILY(SCRAM)\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-8\">\n"+ "            <sasl-mechanism-selector selector=\"(DIGEST-SHA-256||SCRAM-SHA-256) #PLUS\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-9\">\n"+ "            <sasl-mechanism-selector selector=\"(((#HASH(SHA-256) &amp;&amp; (#PLUS) ) ) )\"/>\n"+ "        </configuration>\n"+ "    </authentication-configurations>\n"+ "</authentication-client>\n"+ "</configuration>" @AT@ 3005 @LENGTH@ 4
------------------INS StringLiteral@@"<configuration>" @TO@ InfixExpression@@"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n" + "\n" + "<configuration>"+ "<authentication-client xmlns=\"urn:elytron:1.0\">\n"+ "    <authentication-configurations>\n"+ "        <configuration name=\"test-1\">\n"+ "            <allow-sasl-mechanisms names=\"someName\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-2\">\n"+ "            <sasl-mechanism-selector selector=\"someName\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-3\">\n"+ "            <sasl-mechanism-selector selector=\"someName #ALL\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-4\">\n"+ "            <sasl-mechanism-selector selector=\"someName -JBOSS-LOCAL-USER\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-5\">\n"+ "            <sasl-mechanism-selector selector=\"someName (! JBOSS-LOCAL-USER)\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-6\">\n"+ "            <sasl-mechanism-selector selector=\"!#HASH(MD5)\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-7\">\n"+ "            <sasl-mechanism-selector selector=\"#FAMILY(SCRAM)\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-8\">\n"+ "            <sasl-mechanism-selector selector=\"(DIGEST-SHA-256||SCRAM-SHA-256) #PLUS\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-9\">\n"+ "            <sasl-mechanism-selector selector=\"(((#HASH(SHA-256) &amp;&amp; (#PLUS) ) ) )\"/>\n"+ "        </configuration>\n"+ "    </authentication-configurations>\n"+ "</authentication-client>\n"+ "</configuration>" @AT@ 3024 @LENGTH@ 17
------------------INS StringLiteral@@"<authentication-client xmlns=\"urn:elytron:1.0\">\n" @TO@ InfixExpression@@"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n" + "\n" + "<configuration>"+ "<authentication-client xmlns=\"urn:elytron:1.0\">\n"+ "    <authentication-configurations>\n"+ "        <configuration name=\"test-1\">\n"+ "            <allow-sasl-mechanisms names=\"someName\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-2\">\n"+ "            <sasl-mechanism-selector selector=\"someName\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-3\">\n"+ "            <sasl-mechanism-selector selector=\"someName #ALL\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-4\">\n"+ "            <sasl-mechanism-selector selector=\"someName -JBOSS-LOCAL-USER\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-5\">\n"+ "            <sasl-mechanism-selector selector=\"someName (! JBOSS-LOCAL-USER)\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-6\">\n"+ "            <sasl-mechanism-selector selector=\"!#HASH(MD5)\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-7\">\n"+ "            <sasl-mechanism-selector selector=\"#FAMILY(SCRAM)\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-8\">\n"+ "            <sasl-mechanism-selector selector=\"(DIGEST-SHA-256||SCRAM-SHA-256) #PLUS\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-9\">\n"+ "            <sasl-mechanism-selector selector=\"(((#HASH(SHA-256) &amp;&amp; (#PLUS) ) ) )\"/>\n"+ "        </configuration>\n"+ "    </authentication-configurations>\n"+ "</authentication-client>\n"+ "</configuration>" @AT@ 3056 @LENGTH@ 53
------------------INS StringLiteral@@"    <authentication-configurations>\n" @TO@ InfixExpression@@"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n" + "\n" + "<configuration>"+ "<authentication-client xmlns=\"urn:elytron:1.0\">\n"+ "    <authentication-configurations>\n"+ "        <configuration name=\"test-1\">\n"+ "            <allow-sasl-mechanisms names=\"someName\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-2\">\n"+ "            <sasl-mechanism-selector selector=\"someName\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-3\">\n"+ "            <sasl-mechanism-selector selector=\"someName #ALL\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-4\">\n"+ "            <sasl-mechanism-selector selector=\"someName -JBOSS-LOCAL-USER\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-5\">\n"+ "            <sasl-mechanism-selector selector=\"someName (! JBOSS-LOCAL-USER)\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-6\">\n"+ "            <sasl-mechanism-selector selector=\"!#HASH(MD5)\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-7\">\n"+ "            <sasl-mechanism-selector selector=\"#FAMILY(SCRAM)\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-8\">\n"+ "            <sasl-mechanism-selector selector=\"(DIGEST-SHA-256||SCRAM-SHA-256) #PLUS\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-9\">\n"+ "            <sasl-mechanism-selector selector=\"(((#HASH(SHA-256) &amp;&amp; (#PLUS) ) ) )\"/>\n"+ "        </configuration>\n"+ "    </authentication-configurations>\n"+ "</authentication-client>\n"+ "</configuration>" @AT@ 3124 @LENGTH@ 39
------------------INS StringLiteral@@"        <configuration name=\"test-1\">\n" @TO@ InfixExpression@@"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n" + "\n" + "<configuration>"+ "<authentication-client xmlns=\"urn:elytron:1.0\">\n"+ "    <authentication-configurations>\n"+ "        <configuration name=\"test-1\">\n"+ "            <allow-sasl-mechanisms names=\"someName\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-2\">\n"+ "            <sasl-mechanism-selector selector=\"someName\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-3\">\n"+ "            <sasl-mechanism-selector selector=\"someName #ALL\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-4\">\n"+ "            <sasl-mechanism-selector selector=\"someName -JBOSS-LOCAL-USER\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-5\">\n"+ "            <sasl-mechanism-selector selector=\"someName (! JBOSS-LOCAL-USER)\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-6\">\n"+ "            <sasl-mechanism-selector selector=\"!#HASH(MD5)\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-7\">\n"+ "            <sasl-mechanism-selector selector=\"#FAMILY(SCRAM)\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-8\">\n"+ "            <sasl-mechanism-selector selector=\"(DIGEST-SHA-256||SCRAM-SHA-256) #PLUS\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-9\">\n"+ "            <sasl-mechanism-selector selector=\"(((#HASH(SHA-256) &amp;&amp; (#PLUS) ) ) )\"/>\n"+ "        </configuration>\n"+ "    </authentication-configurations>\n"+ "</authentication-client>\n"+ "</configuration>" @AT@ 3178 @LENGTH@ 43
------------------INS StringLiteral@@"            <allow-sasl-mechanisms names=\"someName\"/>\n" @TO@ InfixExpression@@"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n" + "\n" + "<configuration>"+ "<authentication-client xmlns=\"urn:elytron:1.0\">\n"+ "    <authentication-configurations>\n"+ "        <configuration name=\"test-1\">\n"+ "            <allow-sasl-mechanisms names=\"someName\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-2\">\n"+ "            <sasl-mechanism-selector selector=\"someName\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-3\">\n"+ "            <sasl-mechanism-selector selector=\"someName #ALL\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-4\">\n"+ "            <sasl-mechanism-selector selector=\"someName -JBOSS-LOCAL-USER\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-5\">\n"+ "            <sasl-mechanism-selector selector=\"someName (! JBOSS-LOCAL-USER)\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-6\">\n"+ "            <sasl-mechanism-selector selector=\"!#HASH(MD5)\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-7\">\n"+ "            <sasl-mechanism-selector selector=\"#FAMILY(SCRAM)\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-8\">\n"+ "            <sasl-mechanism-selector selector=\"(DIGEST-SHA-256||SCRAM-SHA-256) #PLUS\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-9\">\n"+ "            <sasl-mechanism-selector selector=\"(((#HASH(SHA-256) &amp;&amp; (#PLUS) ) ) )\"/>\n"+ "        </configuration>\n"+ "    </authentication-configurations>\n"+ "</authentication-client>\n"+ "</configuration>" @AT@ 3236 @LENGTH@ 59
------------------INS StringLiteral@@"        </configuration>\n" @TO@ InfixExpression@@"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n" + "\n" + "<configuration>"+ "<authentication-client xmlns=\"urn:elytron:1.0\">\n"+ "    <authentication-configurations>\n"+ "        <configuration name=\"test-1\">\n"+ "            <allow-sasl-mechanisms names=\"someName\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-2\">\n"+ "            <sasl-mechanism-selector selector=\"someName\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-3\">\n"+ "            <sasl-mechanism-selector selector=\"someName #ALL\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-4\">\n"+ "            <sasl-mechanism-selector selector=\"someName -JBOSS-LOCAL-USER\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-5\">\n"+ "            <sasl-mechanism-selector selector=\"someName (! JBOSS-LOCAL-USER)\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-6\">\n"+ "            <sasl-mechanism-selector selector=\"!#HASH(MD5)\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-7\">\n"+ "            <sasl-mechanism-selector selector=\"#FAMILY(SCRAM)\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-8\">\n"+ "            <sasl-mechanism-selector selector=\"(DIGEST-SHA-256||SCRAM-SHA-256) #PLUS\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-9\">\n"+ "            <sasl-mechanism-selector selector=\"(((#HASH(SHA-256) &amp;&amp; (#PLUS) ) ) )\"/>\n"+ "        </configuration>\n"+ "    </authentication-configurations>\n"+ "</authentication-client>\n"+ "</configuration>" @AT@ 3310 @LENGTH@ 28
------------------INS StringLiteral@@"        <configuration name=\"test-2\">\n" @TO@ InfixExpression@@"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n" + "\n" + "<configuration>"+ "<authentication-client xmlns=\"urn:elytron:1.0\">\n"+ "    <authentication-configurations>\n"+ "        <configuration name=\"test-1\">\n"+ "            <allow-sasl-mechanisms names=\"someName\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-2\">\n"+ "            <sasl-mechanism-selector selector=\"someName\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-3\">\n"+ "            <sasl-mechanism-selector selector=\"someName #ALL\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-4\">\n"+ "            <sasl-mechanism-selector selector=\"someName -JBOSS-LOCAL-USER\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-5\">\n"+ "            <sasl-mechanism-selector selector=\"someName (! JBOSS-LOCAL-USER)\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-6\">\n"+ "            <sasl-mechanism-selector selector=\"!#HASH(MD5)\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-7\">\n"+ "            <sasl-mechanism-selector selector=\"#FAMILY(SCRAM)\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-8\">\n"+ "            <sasl-mechanism-selector selector=\"(DIGEST-SHA-256||SCRAM-SHA-256) #PLUS\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-9\">\n"+ "            <sasl-mechanism-selector selector=\"(((#HASH(SHA-256) &amp;&amp; (#PLUS) ) ) )\"/>\n"+ "        </configuration>\n"+ "    </authentication-configurations>\n"+ "</authentication-client>\n"+ "</configuration>" @AT@ 3353 @LENGTH@ 43
------------------INS StringLiteral@@"            <sasl-mechanism-selector selector=\"someName\"/>\n" @TO@ InfixExpression@@"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n" + "\n" + "<configuration>"+ "<authentication-client xmlns=\"urn:elytron:1.0\">\n"+ "    <authentication-configurations>\n"+ "        <configuration name=\"test-1\">\n"+ "            <allow-sasl-mechanisms names=\"someName\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-2\">\n"+ "            <sasl-mechanism-selector selector=\"someName\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-3\">\n"+ "            <sasl-mechanism-selector selector=\"someName #ALL\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-4\">\n"+ "            <sasl-mechanism-selector selector=\"someName -JBOSS-LOCAL-USER\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-5\">\n"+ "            <sasl-mechanism-selector selector=\"someName (! JBOSS-LOCAL-USER)\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-6\">\n"+ "            <sasl-mechanism-selector selector=\"!#HASH(MD5)\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-7\">\n"+ "            <sasl-mechanism-selector selector=\"#FAMILY(SCRAM)\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-8\">\n"+ "            <sasl-mechanism-selector selector=\"(DIGEST-SHA-256||SCRAM-SHA-256) #PLUS\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-9\">\n"+ "            <sasl-mechanism-selector selector=\"(((#HASH(SHA-256) &amp;&amp; (#PLUS) ) ) )\"/>\n"+ "        </configuration>\n"+ "    </authentication-configurations>\n"+ "</authentication-client>\n"+ "</configuration>" @AT@ 3411 @LENGTH@ 64
------------------INS StringLiteral@@"        </configuration>\n" @TO@ InfixExpression@@"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n" + "\n" + "<configuration>"+ "<authentication-client xmlns=\"urn:elytron:1.0\">\n"+ "    <authentication-configurations>\n"+ "        <configuration name=\"test-1\">\n"+ "            <allow-sasl-mechanisms names=\"someName\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-2\">\n"+ "            <sasl-mechanism-selector selector=\"someName\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-3\">\n"+ "            <sasl-mechanism-selector selector=\"someName #ALL\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-4\">\n"+ "            <sasl-mechanism-selector selector=\"someName -JBOSS-LOCAL-USER\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-5\">\n"+ "            <sasl-mechanism-selector selector=\"someName (! JBOSS-LOCAL-USER)\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-6\">\n"+ "            <sasl-mechanism-selector selector=\"!#HASH(MD5)\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-7\">\n"+ "            <sasl-mechanism-selector selector=\"#FAMILY(SCRAM)\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-8\">\n"+ "            <sasl-mechanism-selector selector=\"(DIGEST-SHA-256||SCRAM-SHA-256) #PLUS\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-9\">\n"+ "            <sasl-mechanism-selector selector=\"(((#HASH(SHA-256) &amp;&amp; (#PLUS) ) ) )\"/>\n"+ "        </configuration>\n"+ "    </authentication-configurations>\n"+ "</authentication-client>\n"+ "</configuration>" @AT@ 3490 @LENGTH@ 28
------------------INS StringLiteral@@"        <configuration name=\"test-3\">\n" @TO@ InfixExpression@@"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n" + "\n" + "<configuration>"+ "<authentication-client xmlns=\"urn:elytron:1.0\">\n"+ "    <authentication-configurations>\n"+ "        <configuration name=\"test-1\">\n"+ "            <allow-sasl-mechanisms names=\"someName\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-2\">\n"+ "            <sasl-mechanism-selector selector=\"someName\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-3\">\n"+ "            <sasl-mechanism-selector selector=\"someName #ALL\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-4\">\n"+ "            <sasl-mechanism-selector selector=\"someName -JBOSS-LOCAL-USER\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-5\">\n"+ "            <sasl-mechanism-selector selector=\"someName (! JBOSS-LOCAL-USER)\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-6\">\n"+ "            <sasl-mechanism-selector selector=\"!#HASH(MD5)\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-7\">\n"+ "            <sasl-mechanism-selector selector=\"#FAMILY(SCRAM)\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-8\">\n"+ "            <sasl-mechanism-selector selector=\"(DIGEST-SHA-256||SCRAM-SHA-256) #PLUS\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-9\">\n"+ "            <sasl-mechanism-selector selector=\"(((#HASH(SHA-256) &amp;&amp; (#PLUS) ) ) )\"/>\n"+ "        </configuration>\n"+ "    </authentication-configurations>\n"+ "</authentication-client>\n"+ "</configuration>" @AT@ 3533 @LENGTH@ 43
------------------INS StringLiteral@@"            <sasl-mechanism-selector selector=\"someName #ALL\"/>\n" @TO@ InfixExpression@@"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n" + "\n" + "<configuration>"+ "<authentication-client xmlns=\"urn:elytron:1.0\">\n"+ "    <authentication-configurations>\n"+ "        <configuration name=\"test-1\">\n"+ "            <allow-sasl-mechanisms names=\"someName\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-2\">\n"+ "            <sasl-mechanism-selector selector=\"someName\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-3\">\n"+ "            <sasl-mechanism-selector selector=\"someName #ALL\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-4\">\n"+ "            <sasl-mechanism-selector selector=\"someName -JBOSS-LOCAL-USER\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-5\">\n"+ "            <sasl-mechanism-selector selector=\"someName (! JBOSS-LOCAL-USER)\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-6\">\n"+ "            <sasl-mechanism-selector selector=\"!#HASH(MD5)\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-7\">\n"+ "            <sasl-mechanism-selector selector=\"#FAMILY(SCRAM)\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-8\">\n"+ "            <sasl-mechanism-selector selector=\"(DIGEST-SHA-256||SCRAM-SHA-256) #PLUS\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-9\">\n"+ "            <sasl-mechanism-selector selector=\"(((#HASH(SHA-256) &amp;&amp; (#PLUS) ) ) )\"/>\n"+ "        </configuration>\n"+ "    </authentication-configurations>\n"+ "</authentication-client>\n"+ "</configuration>" @AT@ 3591 @LENGTH@ 69
------------------INS StringLiteral@@"        </configuration>\n" @TO@ InfixExpression@@"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n" + "\n" + "<configuration>"+ "<authentication-client xmlns=\"urn:elytron:1.0\">\n"+ "    <authentication-configurations>\n"+ "        <configuration name=\"test-1\">\n"+ "            <allow-sasl-mechanisms names=\"someName\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-2\">\n"+ "            <sasl-mechanism-selector selector=\"someName\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-3\">\n"+ "            <sasl-mechanism-selector selector=\"someName #ALL\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-4\">\n"+ "            <sasl-mechanism-selector selector=\"someName -JBOSS-LOCAL-USER\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-5\">\n"+ "            <sasl-mechanism-selector selector=\"someName (! JBOSS-LOCAL-USER)\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-6\">\n"+ "            <sasl-mechanism-selector selector=\"!#HASH(MD5)\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-7\">\n"+ "            <sasl-mechanism-selector selector=\"#FAMILY(SCRAM)\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-8\">\n"+ "            <sasl-mechanism-selector selector=\"(DIGEST-SHA-256||SCRAM-SHA-256) #PLUS\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-9\">\n"+ "            <sasl-mechanism-selector selector=\"(((#HASH(SHA-256) &amp;&amp; (#PLUS) ) ) )\"/>\n"+ "        </configuration>\n"+ "    </authentication-configurations>\n"+ "</authentication-client>\n"+ "</configuration>" @AT@ 3675 @LENGTH@ 28
------------------INS StringLiteral@@"        <configuration name=\"test-4\">\n" @TO@ InfixExpression@@"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n" + "\n" + "<configuration>"+ "<authentication-client xmlns=\"urn:elytron:1.0\">\n"+ "    <authentication-configurations>\n"+ "        <configuration name=\"test-1\">\n"+ "            <allow-sasl-mechanisms names=\"someName\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-2\">\n"+ "            <sasl-mechanism-selector selector=\"someName\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-3\">\n"+ "            <sasl-mechanism-selector selector=\"someName #ALL\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-4\">\n"+ "            <sasl-mechanism-selector selector=\"someName -JBOSS-LOCAL-USER\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-5\">\n"+ "            <sasl-mechanism-selector selector=\"someName (! JBOSS-LOCAL-USER)\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-6\">\n"+ "            <sasl-mechanism-selector selector=\"!#HASH(MD5)\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-7\">\n"+ "            <sasl-mechanism-selector selector=\"#FAMILY(SCRAM)\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-8\">\n"+ "            <sasl-mechanism-selector selector=\"(DIGEST-SHA-256||SCRAM-SHA-256) #PLUS\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-9\">\n"+ "            <sasl-mechanism-selector selector=\"(((#HASH(SHA-256) &amp;&amp; (#PLUS) ) ) )\"/>\n"+ "        </configuration>\n"+ "    </authentication-configurations>\n"+ "</authentication-client>\n"+ "</configuration>" @AT@ 3718 @LENGTH@ 43
------------------INS StringLiteral@@"            <sasl-mechanism-selector selector=\"someName -JBOSS-LOCAL-USER\"/>\n" @TO@ InfixExpression@@"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n" + "\n" + "<configuration>"+ "<authentication-client xmlns=\"urn:elytron:1.0\">\n"+ "    <authentication-configurations>\n"+ "        <configuration name=\"test-1\">\n"+ "            <allow-sasl-mechanisms names=\"someName\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-2\">\n"+ "            <sasl-mechanism-selector selector=\"someName\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-3\">\n"+ "            <sasl-mechanism-selector selector=\"someName #ALL\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-4\">\n"+ "            <sasl-mechanism-selector selector=\"someName -JBOSS-LOCAL-USER\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-5\">\n"+ "            <sasl-mechanism-selector selector=\"someName (! JBOSS-LOCAL-USER)\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-6\">\n"+ "            <sasl-mechanism-selector selector=\"!#HASH(MD5)\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-7\">\n"+ "            <sasl-mechanism-selector selector=\"#FAMILY(SCRAM)\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-8\">\n"+ "            <sasl-mechanism-selector selector=\"(DIGEST-SHA-256||SCRAM-SHA-256) #PLUS\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-9\">\n"+ "            <sasl-mechanism-selector selector=\"(((#HASH(SHA-256) &amp;&amp; (#PLUS) ) ) )\"/>\n"+ "        </configuration>\n"+ "    </authentication-configurations>\n"+ "</authentication-client>\n"+ "</configuration>" @AT@ 3776 @LENGTH@ 82
------------------INS StringLiteral@@"        </configuration>\n" @TO@ InfixExpression@@"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n" + "\n" + "<configuration>"+ "<authentication-client xmlns=\"urn:elytron:1.0\">\n"+ "    <authentication-configurations>\n"+ "        <configuration name=\"test-1\">\n"+ "            <allow-sasl-mechanisms names=\"someName\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-2\">\n"+ "            <sasl-mechanism-selector selector=\"someName\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-3\">\n"+ "            <sasl-mechanism-selector selector=\"someName #ALL\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-4\">\n"+ "            <sasl-mechanism-selector selector=\"someName -JBOSS-LOCAL-USER\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-5\">\n"+ "            <sasl-mechanism-selector selector=\"someName (! JBOSS-LOCAL-USER)\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-6\">\n"+ "            <sasl-mechanism-selector selector=\"!#HASH(MD5)\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-7\">\n"+ "            <sasl-mechanism-selector selector=\"#FAMILY(SCRAM)\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-8\">\n"+ "            <sasl-mechanism-selector selector=\"(DIGEST-SHA-256||SCRAM-SHA-256) #PLUS\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-9\">\n"+ "            <sasl-mechanism-selector selector=\"(((#HASH(SHA-256) &amp;&amp; (#PLUS) ) ) )\"/>\n"+ "        </configuration>\n"+ "    </authentication-configurations>\n"+ "</authentication-client>\n"+ "</configuration>" @AT@ 3873 @LENGTH@ 28
------------------INS StringLiteral@@"        <configuration name=\"test-5\">\n" @TO@ InfixExpression@@"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n" + "\n" + "<configuration>"+ "<authentication-client xmlns=\"urn:elytron:1.0\">\n"+ "    <authentication-configurations>\n"+ "        <configuration name=\"test-1\">\n"+ "            <allow-sasl-mechanisms names=\"someName\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-2\">\n"+ "            <sasl-mechanism-selector selector=\"someName\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-3\">\n"+ "            <sasl-mechanism-selector selector=\"someName #ALL\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-4\">\n"+ "            <sasl-mechanism-selector selector=\"someName -JBOSS-LOCAL-USER\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-5\">\n"+ "            <sasl-mechanism-selector selector=\"someName (! JBOSS-LOCAL-USER)\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-6\">\n"+ "            <sasl-mechanism-selector selector=\"!#HASH(MD5)\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-7\">\n"+ "            <sasl-mechanism-selector selector=\"#FAMILY(SCRAM)\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-8\">\n"+ "            <sasl-mechanism-selector selector=\"(DIGEST-SHA-256||SCRAM-SHA-256) #PLUS\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-9\">\n"+ "            <sasl-mechanism-selector selector=\"(((#HASH(SHA-256) &amp;&amp; (#PLUS) ) ) )\"/>\n"+ "        </configuration>\n"+ "    </authentication-configurations>\n"+ "</authentication-client>\n"+ "</configuration>" @AT@ 3916 @LENGTH@ 43
------------------INS StringLiteral@@"            <sasl-mechanism-selector selector=\"someName (! JBOSS-LOCAL-USER)\"/>\n" @TO@ InfixExpression@@"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n" + "\n" + "<configuration>"+ "<authentication-client xmlns=\"urn:elytron:1.0\">\n"+ "    <authentication-configurations>\n"+ "        <configuration name=\"test-1\">\n"+ "            <allow-sasl-mechanisms names=\"someName\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-2\">\n"+ "            <sasl-mechanism-selector selector=\"someName\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-3\">\n"+ "            <sasl-mechanism-selector selector=\"someName #ALL\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-4\">\n"+ "            <sasl-mechanism-selector selector=\"someName -JBOSS-LOCAL-USER\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-5\">\n"+ "            <sasl-mechanism-selector selector=\"someName (! JBOSS-LOCAL-USER)\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-6\">\n"+ "            <sasl-mechanism-selector selector=\"!#HASH(MD5)\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-7\">\n"+ "            <sasl-mechanism-selector selector=\"#FAMILY(SCRAM)\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-8\">\n"+ "            <sasl-mechanism-selector selector=\"(DIGEST-SHA-256||SCRAM-SHA-256) #PLUS\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-9\">\n"+ "            <sasl-mechanism-selector selector=\"(((#HASH(SHA-256) &amp;&amp; (#PLUS) ) ) )\"/>\n"+ "        </configuration>\n"+ "    </authentication-configurations>\n"+ "</authentication-client>\n"+ "</configuration>" @AT@ 3974 @LENGTH@ 85
------------------INS StringLiteral@@"        </configuration>\n" @TO@ InfixExpression@@"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n" + "\n" + "<configuration>"+ "<authentication-client xmlns=\"urn:elytron:1.0\">\n"+ "    <authentication-configurations>\n"+ "        <configuration name=\"test-1\">\n"+ "            <allow-sasl-mechanisms names=\"someName\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-2\">\n"+ "            <sasl-mechanism-selector selector=\"someName\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-3\">\n"+ "            <sasl-mechanism-selector selector=\"someName #ALL\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-4\">\n"+ "            <sasl-mechanism-selector selector=\"someName -JBOSS-LOCAL-USER\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-5\">\n"+ "            <sasl-mechanism-selector selector=\"someName (! JBOSS-LOCAL-USER)\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-6\">\n"+ "            <sasl-mechanism-selector selector=\"!#HASH(MD5)\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-7\">\n"+ "            <sasl-mechanism-selector selector=\"#FAMILY(SCRAM)\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-8\">\n"+ "            <sasl-mechanism-selector selector=\"(DIGEST-SHA-256||SCRAM-SHA-256) #PLUS\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-9\">\n"+ "            <sasl-mechanism-selector selector=\"(((#HASH(SHA-256) &amp;&amp; (#PLUS) ) ) )\"/>\n"+ "        </configuration>\n"+ "    </authentication-configurations>\n"+ "</authentication-client>\n"+ "</configuration>" @AT@ 4074 @LENGTH@ 28
------------------INS StringLiteral@@"        <configuration name=\"test-6\">\n" @TO@ InfixExpression@@"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n" + "\n" + "<configuration>"+ "<authentication-client xmlns=\"urn:elytron:1.0\">\n"+ "    <authentication-configurations>\n"+ "        <configuration name=\"test-1\">\n"+ "            <allow-sasl-mechanisms names=\"someName\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-2\">\n"+ "            <sasl-mechanism-selector selector=\"someName\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-3\">\n"+ "            <sasl-mechanism-selector selector=\"someName #ALL\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-4\">\n"+ "            <sasl-mechanism-selector selector=\"someName -JBOSS-LOCAL-USER\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-5\">\n"+ "            <sasl-mechanism-selector selector=\"someName (! JBOSS-LOCAL-USER)\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-6\">\n"+ "            <sasl-mechanism-selector selector=\"!#HASH(MD5)\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-7\">\n"+ "            <sasl-mechanism-selector selector=\"#FAMILY(SCRAM)\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-8\">\n"+ "            <sasl-mechanism-selector selector=\"(DIGEST-SHA-256||SCRAM-SHA-256) #PLUS\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-9\">\n"+ "            <sasl-mechanism-selector selector=\"(((#HASH(SHA-256) &amp;&amp; (#PLUS) ) ) )\"/>\n"+ "        </configuration>\n"+ "    </authentication-configurations>\n"+ "</authentication-client>\n"+ "</configuration>" @AT@ 4117 @LENGTH@ 43
------------------INS StringLiteral@@"            <sasl-mechanism-selector selector=\"!#HASH(MD5)\"/>\n" @TO@ InfixExpression@@"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n" + "\n" + "<configuration>"+ "<authentication-client xmlns=\"urn:elytron:1.0\">\n"+ "    <authentication-configurations>\n"+ "        <configuration name=\"test-1\">\n"+ "            <allow-sasl-mechanisms names=\"someName\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-2\">\n"+ "            <sasl-mechanism-selector selector=\"someName\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-3\">\n"+ "            <sasl-mechanism-selector selector=\"someName #ALL\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-4\">\n"+ "            <sasl-mechanism-selector selector=\"someName -JBOSS-LOCAL-USER\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-5\">\n"+ "            <sasl-mechanism-selector selector=\"someName (! JBOSS-LOCAL-USER)\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-6\">\n"+ "            <sasl-mechanism-selector selector=\"!#HASH(MD5)\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-7\">\n"+ "            <sasl-mechanism-selector selector=\"#FAMILY(SCRAM)\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-8\">\n"+ "            <sasl-mechanism-selector selector=\"(DIGEST-SHA-256||SCRAM-SHA-256) #PLUS\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-9\">\n"+ "            <sasl-mechanism-selector selector=\"(((#HASH(SHA-256) &amp;&amp; (#PLUS) ) ) )\"/>\n"+ "        </configuration>\n"+ "    </authentication-configurations>\n"+ "</authentication-client>\n"+ "</configuration>" @AT@ 4175 @LENGTH@ 67
------------------INS StringLiteral@@"        </configuration>\n" @TO@ InfixExpression@@"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n" + "\n" + "<configuration>"+ "<authentication-client xmlns=\"urn:elytron:1.0\">\n"+ "    <authentication-configurations>\n"+ "        <configuration name=\"test-1\">\n"+ "            <allow-sasl-mechanisms names=\"someName\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-2\">\n"+ "            <sasl-mechanism-selector selector=\"someName\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-3\">\n"+ "            <sasl-mechanism-selector selector=\"someName #ALL\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-4\">\n"+ "            <sasl-mechanism-selector selector=\"someName -JBOSS-LOCAL-USER\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-5\">\n"+ "            <sasl-mechanism-selector selector=\"someName (! JBOSS-LOCAL-USER)\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-6\">\n"+ "            <sasl-mechanism-selector selector=\"!#HASH(MD5)\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-7\">\n"+ "            <sasl-mechanism-selector selector=\"#FAMILY(SCRAM)\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-8\">\n"+ "            <sasl-mechanism-selector selector=\"(DIGEST-SHA-256||SCRAM-SHA-256) #PLUS\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-9\">\n"+ "            <sasl-mechanism-selector selector=\"(((#HASH(SHA-256) &amp;&amp; (#PLUS) ) ) )\"/>\n"+ "        </configuration>\n"+ "    </authentication-configurations>\n"+ "</authentication-client>\n"+ "</configuration>" @AT@ 4257 @LENGTH@ 28
------------------INS StringLiteral@@"        <configuration name=\"test-7\">\n" @TO@ InfixExpression@@"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n" + "\n" + "<configuration>"+ "<authentication-client xmlns=\"urn:elytron:1.0\">\n"+ "    <authentication-configurations>\n"+ "        <configuration name=\"test-1\">\n"+ "            <allow-sasl-mechanisms names=\"someName\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-2\">\n"+ "            <sasl-mechanism-selector selector=\"someName\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-3\">\n"+ "            <sasl-mechanism-selector selector=\"someName #ALL\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-4\">\n"+ "            <sasl-mechanism-selector selector=\"someName -JBOSS-LOCAL-USER\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-5\">\n"+ "            <sasl-mechanism-selector selector=\"someName (! JBOSS-LOCAL-USER)\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-6\">\n"+ "            <sasl-mechanism-selector selector=\"!#HASH(MD5)\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-7\">\n"+ "            <sasl-mechanism-selector selector=\"#FAMILY(SCRAM)\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-8\">\n"+ "            <sasl-mechanism-selector selector=\"(DIGEST-SHA-256||SCRAM-SHA-256) #PLUS\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-9\">\n"+ "            <sasl-mechanism-selector selector=\"(((#HASH(SHA-256) &amp;&amp; (#PLUS) ) ) )\"/>\n"+ "        </configuration>\n"+ "    </authentication-configurations>\n"+ "</authentication-client>\n"+ "</configuration>" @AT@ 4300 @LENGTH@ 43
------------------INS StringLiteral@@"            <sasl-mechanism-selector selector=\"#FAMILY(SCRAM)\"/>\n" @TO@ InfixExpression@@"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n" + "\n" + "<configuration>"+ "<authentication-client xmlns=\"urn:elytron:1.0\">\n"+ "    <authentication-configurations>\n"+ "        <configuration name=\"test-1\">\n"+ "            <allow-sasl-mechanisms names=\"someName\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-2\">\n"+ "            <sasl-mechanism-selector selector=\"someName\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-3\">\n"+ "            <sasl-mechanism-selector selector=\"someName #ALL\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-4\">\n"+ "            <sasl-mechanism-selector selector=\"someName -JBOSS-LOCAL-USER\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-5\">\n"+ "            <sasl-mechanism-selector selector=\"someName (! JBOSS-LOCAL-USER)\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-6\">\n"+ "            <sasl-mechanism-selector selector=\"!#HASH(MD5)\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-7\">\n"+ "            <sasl-mechanism-selector selector=\"#FAMILY(SCRAM)\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-8\">\n"+ "            <sasl-mechanism-selector selector=\"(DIGEST-SHA-256||SCRAM-SHA-256) #PLUS\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-9\">\n"+ "            <sasl-mechanism-selector selector=\"(((#HASH(SHA-256) &amp;&amp; (#PLUS) ) ) )\"/>\n"+ "        </configuration>\n"+ "    </authentication-configurations>\n"+ "</authentication-client>\n"+ "</configuration>" @AT@ 4358 @LENGTH@ 70
------------------INS StringLiteral@@"        </configuration>\n" @TO@ InfixExpression@@"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n" + "\n" + "<configuration>"+ "<authentication-client xmlns=\"urn:elytron:1.0\">\n"+ "    <authentication-configurations>\n"+ "        <configuration name=\"test-1\">\n"+ "            <allow-sasl-mechanisms names=\"someName\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-2\">\n"+ "            <sasl-mechanism-selector selector=\"someName\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-3\">\n"+ "            <sasl-mechanism-selector selector=\"someName #ALL\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-4\">\n"+ "            <sasl-mechanism-selector selector=\"someName -JBOSS-LOCAL-USER\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-5\">\n"+ "            <sasl-mechanism-selector selector=\"someName (! JBOSS-LOCAL-USER)\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-6\">\n"+ "            <sasl-mechanism-selector selector=\"!#HASH(MD5)\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-7\">\n"+ "            <sasl-mechanism-selector selector=\"#FAMILY(SCRAM)\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-8\">\n"+ "            <sasl-mechanism-selector selector=\"(DIGEST-SHA-256||SCRAM-SHA-256) #PLUS\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-9\">\n"+ "            <sasl-mechanism-selector selector=\"(((#HASH(SHA-256) &amp;&amp; (#PLUS) ) ) )\"/>\n"+ "        </configuration>\n"+ "    </authentication-configurations>\n"+ "</authentication-client>\n"+ "</configuration>" @AT@ 4443 @LENGTH@ 28
------------------INS StringLiteral@@"        <configuration name=\"test-8\">\n" @TO@ InfixExpression@@"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n" + "\n" + "<configuration>"+ "<authentication-client xmlns=\"urn:elytron:1.0\">\n"+ "    <authentication-configurations>\n"+ "        <configuration name=\"test-1\">\n"+ "            <allow-sasl-mechanisms names=\"someName\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-2\">\n"+ "            <sasl-mechanism-selector selector=\"someName\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-3\">\n"+ "            <sasl-mechanism-selector selector=\"someName #ALL\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-4\">\n"+ "            <sasl-mechanism-selector selector=\"someName -JBOSS-LOCAL-USER\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-5\">\n"+ "            <sasl-mechanism-selector selector=\"someName (! JBOSS-LOCAL-USER)\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-6\">\n"+ "            <sasl-mechanism-selector selector=\"!#HASH(MD5)\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-7\">\n"+ "            <sasl-mechanism-selector selector=\"#FAMILY(SCRAM)\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-8\">\n"+ "            <sasl-mechanism-selector selector=\"(DIGEST-SHA-256||SCRAM-SHA-256) #PLUS\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-9\">\n"+ "            <sasl-mechanism-selector selector=\"(((#HASH(SHA-256) &amp;&amp; (#PLUS) ) ) )\"/>\n"+ "        </configuration>\n"+ "    </authentication-configurations>\n"+ "</authentication-client>\n"+ "</configuration>" @AT@ 4486 @LENGTH@ 43
------------------INS StringLiteral@@"            <sasl-mechanism-selector selector=\"(DIGEST-SHA-256||SCRAM-SHA-256) #PLUS\"/>\n" @TO@ InfixExpression@@"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n" + "\n" + "<configuration>"+ "<authentication-client xmlns=\"urn:elytron:1.0\">\n"+ "    <authentication-configurations>\n"+ "        <configuration name=\"test-1\">\n"+ "            <allow-sasl-mechanisms names=\"someName\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-2\">\n"+ "            <sasl-mechanism-selector selector=\"someName\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-3\">\n"+ "            <sasl-mechanism-selector selector=\"someName #ALL\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-4\">\n"+ "            <sasl-mechanism-selector selector=\"someName -JBOSS-LOCAL-USER\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-5\">\n"+ "            <sasl-mechanism-selector selector=\"someName (! JBOSS-LOCAL-USER)\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-6\">\n"+ "            <sasl-mechanism-selector selector=\"!#HASH(MD5)\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-7\">\n"+ "            <sasl-mechanism-selector selector=\"#FAMILY(SCRAM)\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-8\">\n"+ "            <sasl-mechanism-selector selector=\"(DIGEST-SHA-256||SCRAM-SHA-256) #PLUS\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-9\">\n"+ "            <sasl-mechanism-selector selector=\"(((#HASH(SHA-256) &amp;&amp; (#PLUS) ) ) )\"/>\n"+ "        </configuration>\n"+ "    </authentication-configurations>\n"+ "</authentication-client>\n"+ "</configuration>" @AT@ 4544 @LENGTH@ 93
------------------INS StringLiteral@@"        </configuration>\n" @TO@ InfixExpression@@"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n" + "\n" + "<configuration>"+ "<authentication-client xmlns=\"urn:elytron:1.0\">\n"+ "    <authentication-configurations>\n"+ "        <configuration name=\"test-1\">\n"+ "            <allow-sasl-mechanisms names=\"someName\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-2\">\n"+ "            <sasl-mechanism-selector selector=\"someName\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-3\">\n"+ "            <sasl-mechanism-selector selector=\"someName #ALL\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-4\">\n"+ "            <sasl-mechanism-selector selector=\"someName -JBOSS-LOCAL-USER\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-5\">\n"+ "            <sasl-mechanism-selector selector=\"someName (! JBOSS-LOCAL-USER)\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-6\">\n"+ "            <sasl-mechanism-selector selector=\"!#HASH(MD5)\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-7\">\n"+ "            <sasl-mechanism-selector selector=\"#FAMILY(SCRAM)\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-8\">\n"+ "            <sasl-mechanism-selector selector=\"(DIGEST-SHA-256||SCRAM-SHA-256) #PLUS\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-9\">\n"+ "            <sasl-mechanism-selector selector=\"(((#HASH(SHA-256) &amp;&amp; (#PLUS) ) ) )\"/>\n"+ "        </configuration>\n"+ "    </authentication-configurations>\n"+ "</authentication-client>\n"+ "</configuration>" @AT@ 4652 @LENGTH@ 28
------------------INS StringLiteral@@"        <configuration name=\"test-9\">\n" @TO@ InfixExpression@@"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n" + "\n" + "<configuration>"+ "<authentication-client xmlns=\"urn:elytron:1.0\">\n"+ "    <authentication-configurations>\n"+ "        <configuration name=\"test-1\">\n"+ "            <allow-sasl-mechanisms names=\"someName\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-2\">\n"+ "            <sasl-mechanism-selector selector=\"someName\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-3\">\n"+ "            <sasl-mechanism-selector selector=\"someName #ALL\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-4\">\n"+ "            <sasl-mechanism-selector selector=\"someName -JBOSS-LOCAL-USER\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-5\">\n"+ "            <sasl-mechanism-selector selector=\"someName (! JBOSS-LOCAL-USER)\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-6\">\n"+ "            <sasl-mechanism-selector selector=\"!#HASH(MD5)\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-7\">\n"+ "            <sasl-mechanism-selector selector=\"#FAMILY(SCRAM)\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-8\">\n"+ "            <sasl-mechanism-selector selector=\"(DIGEST-SHA-256||SCRAM-SHA-256) #PLUS\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-9\">\n"+ "            <sasl-mechanism-selector selector=\"(((#HASH(SHA-256) &amp;&amp; (#PLUS) ) ) )\"/>\n"+ "        </configuration>\n"+ "    </authentication-configurations>\n"+ "</authentication-client>\n"+ "</configuration>" @AT@ 4695 @LENGTH@ 43
------------------INS StringLiteral@@"            <sasl-mechanism-selector selector=\"(((#HASH(SHA-256) &amp;&amp; (#PLUS) ) ) )\"/>\n" @TO@ InfixExpression@@"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n" + "\n" + "<configuration>"+ "<authentication-client xmlns=\"urn:elytron:1.0\">\n"+ "    <authentication-configurations>\n"+ "        <configuration name=\"test-1\">\n"+ "            <allow-sasl-mechanisms names=\"someName\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-2\">\n"+ "            <sasl-mechanism-selector selector=\"someName\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-3\">\n"+ "            <sasl-mechanism-selector selector=\"someName #ALL\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-4\">\n"+ "            <sasl-mechanism-selector selector=\"someName -JBOSS-LOCAL-USER\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-5\">\n"+ "            <sasl-mechanism-selector selector=\"someName (! JBOSS-LOCAL-USER)\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-6\">\n"+ "            <sasl-mechanism-selector selector=\"!#HASH(MD5)\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-7\">\n"+ "            <sasl-mechanism-selector selector=\"#FAMILY(SCRAM)\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-8\">\n"+ "            <sasl-mechanism-selector selector=\"(DIGEST-SHA-256||SCRAM-SHA-256) #PLUS\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-9\">\n"+ "            <sasl-mechanism-selector selector=\"(((#HASH(SHA-256) &amp;&amp; (#PLUS) ) ) )\"/>\n"+ "        </configuration>\n"+ "    </authentication-configurations>\n"+ "</authentication-client>\n"+ "</configuration>" @AT@ 4753 @LENGTH@ 98
------------------INS StringLiteral@@"        </configuration>\n" @TO@ InfixExpression@@"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n" + "\n" + "<configuration>"+ "<authentication-client xmlns=\"urn:elytron:1.0\">\n"+ "    <authentication-configurations>\n"+ "        <configuration name=\"test-1\">\n"+ "            <allow-sasl-mechanisms names=\"someName\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-2\">\n"+ "            <sasl-mechanism-selector selector=\"someName\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-3\">\n"+ "            <sasl-mechanism-selector selector=\"someName #ALL\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-4\">\n"+ "            <sasl-mechanism-selector selector=\"someName -JBOSS-LOCAL-USER\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-5\">\n"+ "            <sasl-mechanism-selector selector=\"someName (! JBOSS-LOCAL-USER)\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-6\">\n"+ "            <sasl-mechanism-selector selector=\"!#HASH(MD5)\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-7\">\n"+ "            <sasl-mechanism-selector selector=\"#FAMILY(SCRAM)\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-8\">\n"+ "            <sasl-mechanism-selector selector=\"(DIGEST-SHA-256||SCRAM-SHA-256) #PLUS\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-9\">\n"+ "            <sasl-mechanism-selector selector=\"(((#HASH(SHA-256) &amp;&amp; (#PLUS) ) ) )\"/>\n"+ "        </configuration>\n"+ "    </authentication-configurations>\n"+ "</authentication-client>\n"+ "</configuration>" @AT@ 4866 @LENGTH@ 28
------------------INS StringLiteral@@"    </authentication-configurations>\n" @TO@ InfixExpression@@"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n" + "\n" + "<configuration>"+ "<authentication-client xmlns=\"urn:elytron:1.0\">\n"+ "    <authentication-configurations>\n"+ "        <configuration name=\"test-1\">\n"+ "            <allow-sasl-mechanisms names=\"someName\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-2\">\n"+ "            <sasl-mechanism-selector selector=\"someName\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-3\">\n"+ "            <sasl-mechanism-selector selector=\"someName #ALL\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-4\">\n"+ "            <sasl-mechanism-selector selector=\"someName -JBOSS-LOCAL-USER\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-5\">\n"+ "            <sasl-mechanism-selector selector=\"someName (! JBOSS-LOCAL-USER)\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-6\">\n"+ "            <sasl-mechanism-selector selector=\"!#HASH(MD5)\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-7\">\n"+ "            <sasl-mechanism-selector selector=\"#FAMILY(SCRAM)\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-8\">\n"+ "            <sasl-mechanism-selector selector=\"(DIGEST-SHA-256||SCRAM-SHA-256) #PLUS\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-9\">\n"+ "            <sasl-mechanism-selector selector=\"(((#HASH(SHA-256) &amp;&amp; (#PLUS) ) ) )\"/>\n"+ "        </configuration>\n"+ "    </authentication-configurations>\n"+ "</authentication-client>\n"+ "</configuration>" @AT@ 4909 @LENGTH@ 40
------------------INS StringLiteral@@"</authentication-client>\n" @TO@ InfixExpression@@"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n" + "\n" + "<configuration>"+ "<authentication-client xmlns=\"urn:elytron:1.0\">\n"+ "    <authentication-configurations>\n"+ "        <configuration name=\"test-1\">\n"+ "            <allow-sasl-mechanisms names=\"someName\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-2\">\n"+ "            <sasl-mechanism-selector selector=\"someName\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-3\">\n"+ "            <sasl-mechanism-selector selector=\"someName #ALL\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-4\">\n"+ "            <sasl-mechanism-selector selector=\"someName -JBOSS-LOCAL-USER\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-5\">\n"+ "            <sasl-mechanism-selector selector=\"someName (! JBOSS-LOCAL-USER)\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-6\">\n"+ "            <sasl-mechanism-selector selector=\"!#HASH(MD5)\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-7\">\n"+ "            <sasl-mechanism-selector selector=\"#FAMILY(SCRAM)\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-8\">\n"+ "            <sasl-mechanism-selector selector=\"(DIGEST-SHA-256||SCRAM-SHA-256) #PLUS\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-9\">\n"+ "            <sasl-mechanism-selector selector=\"(((#HASH(SHA-256) &amp;&amp; (#PLUS) ) ) )\"/>\n"+ "        </configuration>\n"+ "    </authentication-configurations>\n"+ "</authentication-client>\n"+ "</configuration>" @AT@ 4964 @LENGTH@ 28
------------------INS StringLiteral@@"</configuration>" @TO@ InfixExpression@@"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n" + "\n" + "<configuration>"+ "<authentication-client xmlns=\"urn:elytron:1.0\">\n"+ "    <authentication-configurations>\n"+ "        <configuration name=\"test-1\">\n"+ "            <allow-sasl-mechanisms names=\"someName\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-2\">\n"+ "            <sasl-mechanism-selector selector=\"someName\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-3\">\n"+ "            <sasl-mechanism-selector selector=\"someName #ALL\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-4\">\n"+ "            <sasl-mechanism-selector selector=\"someName -JBOSS-LOCAL-USER\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-5\">\n"+ "            <sasl-mechanism-selector selector=\"someName (! JBOSS-LOCAL-USER)\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-6\">\n"+ "            <sasl-mechanism-selector selector=\"!#HASH(MD5)\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-7\">\n"+ "            <sasl-mechanism-selector selector=\"#FAMILY(SCRAM)\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-8\">\n"+ "            <sasl-mechanism-selector selector=\"(DIGEST-SHA-256||SCRAM-SHA-256) #PLUS\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-9\">\n"+ "            <sasl-mechanism-selector selector=\"(((#HASH(SHA-256) &amp;&amp; (#PLUS) ) ) )\"/>\n"+ "        </configuration>\n"+ "    </authentication-configurations>\n"+ "</authentication-client>\n"+ "</configuration>" @AT@ 5007 @LENGTH@ 18
------------INS SimpleName@@MethodName:getBytes:[StandardCharsets.UTF_8] @TO@ MethodInvocation@@("<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n" + "\n" + "<configuration>"+ "<authentication-client xmlns=\"urn:elytron:1.0\">\n"+ "    <authentication-configurations>\n"+ "        <configuration name=\"test-1\">\n"+ "            <allow-sasl-mechanisms names=\"someName\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-2\">\n"+ "            <sasl-mechanism-selector selector=\"someName\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-3\">\n"+ "            <sasl-mechanism-selector selector=\"someName #ALL\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-4\">\n"+ "            <sasl-mechanism-selector selector=\"someName -JBOSS-LOCAL-USER\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-5\">\n"+ "            <sasl-mechanism-selector selector=\"someName (! JBOSS-LOCAL-USER)\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-6\">\n"+ "            <sasl-mechanism-selector selector=\"!#HASH(MD5)\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-7\">\n"+ "            <sasl-mechanism-selector selector=\"#FAMILY(SCRAM)\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-8\">\n"+ "            <sasl-mechanism-selector selector=\"(DIGEST-SHA-256||SCRAM-SHA-256) #PLUS\"/>\n"+ "        </configuration>\n"+ "        <configuration name=\"test-9\">\n"+ "            <sasl-mechanism-selector selector=\"(((#HASH(SHA-256) &amp;&amp; (#PLUS) ) ) )\"/>\n"+ "        </configuration>\n"+ "    </authentication-configurations>\n"+ "</authentication-client>\n"+ "</configuration>").getBytes(StandardCharsets.UTF_8) @AT@ 5027 @LENGTH@ 32
---------------INS QualifiedName@@StandardCharsets.UTF_8 @TO@ SimpleName@@MethodName:getBytes:[StandardCharsets.UTF_8] @AT@ 5036 @LENGTH@ 22
------------------INS SimpleName@@StandardCharsets @TO@ QualifiedName@@StandardCharsets.UTF_8 @AT@ 5036 @LENGTH@ 16
------------------INS SimpleName@@UTF_8 @TO@ QualifiedName@@StandardCharsets.UTF_8 @AT@ 5053 @LENGTH@ 5
---INS VariableDeclarationStatement@@final SecurityFactory<AuthenticationContext> factory=ElytronXmlParser.parseAuthenticationClientConfiguration(openFile(xmlBytes,"authentication-client.xml")); @TO@ MethodDeclaration@@public, void, MethodName:testSaslMechConfiguration, Exception,  @AT@ 5069 @LENGTH@ 160
------INS Modifier@@final @TO@ VariableDeclarationStatement@@final SecurityFactory<AuthenticationContext> factory=ElytronXmlParser.parseAuthenticationClientConfiguration(openFile(xmlBytes,"authentication-client.xml")); @AT@ 5069 @LENGTH@ 5
------INS ParameterizedType@@SecurityFactory<AuthenticationContext> @TO@ VariableDeclarationStatement@@final SecurityFactory<AuthenticationContext> factory=ElytronXmlParser.parseAuthenticationClientConfiguration(openFile(xmlBytes,"authentication-client.xml")); @AT@ 5075 @LENGTH@ 38
---------INS SimpleType@@SecurityFactory @TO@ ParameterizedType@@SecurityFactory<AuthenticationContext> @AT@ 5075 @LENGTH@ 15
---------INS SimpleType@@AuthenticationContext @TO@ ParameterizedType@@SecurityFactory<AuthenticationContext> @AT@ 5091 @LENGTH@ 21
------INS VariableDeclarationFragment@@factory=ElytronXmlParser.parseAuthenticationClientConfiguration(openFile(xmlBytes,"authentication-client.xml")) @TO@ VariableDeclarationStatement@@final SecurityFactory<AuthenticationContext> factory=ElytronXmlParser.parseAuthenticationClientConfiguration(openFile(xmlBytes,"authentication-client.xml")); @AT@ 5114 @LENGTH@ 114
---------INS SimpleName@@factory @TO@ VariableDeclarationFragment@@factory=ElytronXmlParser.parseAuthenticationClientConfiguration(openFile(xmlBytes,"authentication-client.xml")) @AT@ 5114 @LENGTH@ 7
---------INS MethodInvocation@@ElytronXmlParser.parseAuthenticationClientConfiguration(openFile(xmlBytes,"authentication-client.xml")) @TO@ VariableDeclarationFragment@@factory=ElytronXmlParser.parseAuthenticationClientConfiguration(openFile(xmlBytes,"authentication-client.xml")) @AT@ 5124 @LENGTH@ 104
------------INS SimpleName@@Name:ElytronXmlParser @TO@ MethodInvocation@@ElytronXmlParser.parseAuthenticationClientConfiguration(openFile(xmlBytes,"authentication-client.xml")) @AT@ 5124 @LENGTH@ 16
------------INS SimpleName@@MethodName:parseAuthenticationClientConfiguration:[openFile(xmlBytes,"authentication-client.xml")] @TO@ MethodInvocation@@ElytronXmlParser.parseAuthenticationClientConfiguration(openFile(xmlBytes,"authentication-client.xml")) @AT@ 5141 @LENGTH@ 87
---------------INS MethodInvocation@@openFile(xmlBytes,"authentication-client.xml") @TO@ SimpleName@@MethodName:parseAuthenticationClientConfiguration:[openFile(xmlBytes,"authentication-client.xml")] @AT@ 5180 @LENGTH@ 47
------------------INS SimpleName@@MethodName:openFile:[xmlBytes, "authentication-client.xml"] @TO@ MethodInvocation@@openFile(xmlBytes,"authentication-client.xml") @AT@ 5180 @LENGTH@ 47
---------------------INS SimpleName@@xmlBytes @TO@ SimpleName@@MethodName:openFile:[xmlBytes, "authentication-client.xml"] @AT@ 5189 @LENGTH@ 8
---------------------INS StringLiteral@@"authentication-client.xml" @TO@ SimpleName@@MethodName:openFile:[xmlBytes, "authentication-client.xml"] @AT@ 5199 @LENGTH@ 27
---INS ExpressionStatement@@MethodInvocation:factory.create() @TO@ MethodDeclaration@@public, void, MethodName:testSaslMechConfiguration, Exception,  @AT@ 5238 @LENGTH@ 17
------INS MethodInvocation@@factory.create() @TO@ ExpressionStatement@@MethodInvocation:factory.create() @AT@ 5238 @LENGTH@ 16
---------INS SimpleName@@Name:factory @TO@ MethodInvocation@@factory.create() @AT@ 5238 @LENGTH@ 7
---------INS SimpleName@@MethodName:create:[] @TO@ MethodInvocation@@factory.create() @AT@ 5246 @LENGTH@ 8


UPD ReturnStatement@@MethodInvocation:multiHashOrdered(parentHashCode(),5309,Objects.hashCode(keyManagerFactory)) @TO@ MethodInvocation:multiHashUnordered(parentHashCode(),5309,Objects.hashCode(keyManagerFactory)) @AT@ 6432 @LENGTH@ 85
---UPD MethodInvocation@@multiHashOrdered(parentHashCode(),5309,Objects.hashCode(keyManagerFactory)) @TO@ multiHashUnordered(parentHashCode(),5309,Objects.hashCode(keyManagerFactory)) @AT@ 6439 @LENGTH@ 77
------UPD SimpleName@@MethodName:multiHashOrdered:[parentHashCode(), 5309, Objects.hashCode(keyManagerFactory)] @TO@ MethodName:multiHashUnordered:[parentHashCode(), 5309, Objects.hashCode(keyManagerFactory)] @AT@ 6439 @LENGTH@ 77


INS MethodDeclaration@@public, void, MethodName:toWrapperShouldConvertPublisherToRxJava2Flowable,  @TO@ TypeDeclaration@@[public]ReactiveWrapperConvertersUnitTests,  @AT@ 6632 @LENGTH@ 239
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:toWrapperShouldConvertPublisherToRxJava2Flowable,  @AT@ 6632 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:toWrapperShouldConvertPublisherToRxJava2Flowable,  @AT@ 6639 @LENGTH@ 4
---INS SimpleName@@MethodName:toWrapperShouldConvertPublisherToRxJava2Flowable @TO@ MethodDeclaration@@public, void, MethodName:toWrapperShouldConvertPublisherToRxJava2Flowable,  @AT@ 6644 @LENGTH@ 48
---INS VariableDeclarationStatement@@Flux<String> foo=Flux.just("foo"); @TO@ MethodDeclaration@@public, void, MethodName:toWrapperShouldConvertPublisherToRxJava2Flowable,  @AT@ 6700 @LENGTH@ 36
------INS ParameterizedType@@Flux<String> @TO@ VariableDeclarationStatement@@Flux<String> foo=Flux.just("foo"); @AT@ 6700 @LENGTH@ 12
---------INS SimpleType@@Flux @TO@ ParameterizedType@@Flux<String> @AT@ 6700 @LENGTH@ 4
---------INS SimpleType@@String @TO@ ParameterizedType@@Flux<String> @AT@ 6705 @LENGTH@ 6
------INS VariableDeclarationFragment@@foo=Flux.just("foo") @TO@ VariableDeclarationStatement@@Flux<String> foo=Flux.just("foo"); @AT@ 6713 @LENGTH@ 22
---------INS SimpleName@@foo @TO@ VariableDeclarationFragment@@foo=Flux.just("foo") @AT@ 6713 @LENGTH@ 3
---------INS MethodInvocation@@Flux.just("foo") @TO@ VariableDeclarationFragment@@foo=Flux.just("foo") @AT@ 6719 @LENGTH@ 16
------------INS SimpleName@@Name:Flux @TO@ MethodInvocation@@Flux.just("foo") @AT@ 6719 @LENGTH@ 4
------------INS SimpleName@@MethodName:just:["foo"] @TO@ MethodInvocation@@Flux.just("foo") @AT@ 6724 @LENGTH@ 11
---------------INS StringLiteral@@"foo" @TO@ SimpleName@@MethodName:just:["foo"] @AT@ 6729 @LENGTH@ 5
---INS ExpressionStatement@@MethodInvocation:assertThat(ReactiveWrapperConverters.toWrapper(foo,io.reactivex.Flowable.class)).isInstanceOf(io.reactivex.Flowable.class) @TO@ MethodDeclaration@@public, void, MethodName:toWrapperShouldConvertPublisherToRxJava2Flowable,  @AT@ 6739 @LENGTH@ 129
------INS MethodInvocation@@assertThat(ReactiveWrapperConverters.toWrapper(foo,io.reactivex.Flowable.class)).isInstanceOf(io.reactivex.Flowable.class) @TO@ ExpressionStatement@@MethodInvocation:assertThat(ReactiveWrapperConverters.toWrapper(foo,io.reactivex.Flowable.class)).isInstanceOf(io.reactivex.Flowable.class) @AT@ 6739 @LENGTH@ 128
---------INS MethodInvocation@@MethodName:assertThat:[ReactiveWrapperConverters.toWrapper(foo,io.reactivex.Flowable.class)] @TO@ MethodInvocation@@assertThat(ReactiveWrapperConverters.toWrapper(foo,io.reactivex.Flowable.class)).isInstanceOf(io.reactivex.Flowable.class) @AT@ 6739 @LENGTH@ 81
------------INS MethodInvocation@@ReactiveWrapperConverters.toWrapper(foo,io.reactivex.Flowable.class) @TO@ MethodInvocation@@MethodName:assertThat:[ReactiveWrapperConverters.toWrapper(foo,io.reactivex.Flowable.class)] @AT@ 6750 @LENGTH@ 69
---------------INS SimpleName@@Name:ReactiveWrapperConverters @TO@ MethodInvocation@@ReactiveWrapperConverters.toWrapper(foo,io.reactivex.Flowable.class) @AT@ 6750 @LENGTH@ 25
---------------INS SimpleName@@MethodName:toWrapper:[foo, io.reactivex.Flowable.class] @TO@ MethodInvocation@@ReactiveWrapperConverters.toWrapper(foo,io.reactivex.Flowable.class) @AT@ 6776 @LENGTH@ 43
------------------INS SimpleName@@foo @TO@ SimpleName@@MethodName:toWrapper:[foo, io.reactivex.Flowable.class] @AT@ 6786 @LENGTH@ 3
------------------INS TypeLiteral@@io.reactivex.Flowable.class @TO@ SimpleName@@MethodName:toWrapper:[foo, io.reactivex.Flowable.class] @AT@ 6791 @LENGTH@ 27
---------INS SimpleName@@MethodName:isInstanceOf:[io.reactivex.Flowable.class] @TO@ MethodInvocation@@assertThat(ReactiveWrapperConverters.toWrapper(foo,io.reactivex.Flowable.class)).isInstanceOf(io.reactivex.Flowable.class) @AT@ 6826 @LENGTH@ 41
------------INS TypeLiteral@@io.reactivex.Flowable.class @TO@ SimpleName@@MethodName:isInstanceOf:[io.reactivex.Flowable.class] @AT@ 6839 @LENGTH@ 27


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled(); @AT@ 5277 @LENGTH@ 160
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5285 @LENGTH@ 151
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5285 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5302 @LENGTH@ 134
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 5302 @LENGTH@ 64
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5302 @LENGTH@ 35
---------UPD MethodInvocation@@componentConfiguration.getConfigurer().isEnabled() @TO@ componentConfiguration.getCustomizer().isEnabled() @AT@ 5386 @LENGTH@ 50
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5386 @LENGTH@ 38


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled(); @AT@ 5332 @LENGTH@ 160
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5340 @LENGTH@ 151
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5340 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5357 @LENGTH@ 134
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 5357 @LENGTH@ 64
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5357 @LENGTH@ 35
---------UPD MethodInvocation@@componentConfiguration.getConfigurer().isEnabled() @TO@ componentConfiguration.getCustomizer().isEnabled() @AT@ 5441 @LENGTH@ 50
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5441 @LENGTH@ 38


DEL ExpressionStatement@@MethodInvocation:System.out.println(page) @AT@ 4626 @LENGTH@ 25
---DEL MethodInvocation@@System.out.println(page) @AT@ 4626 @LENGTH@ 24
------DEL QualifiedName@@Name:System.out @AT@ 4626 @LENGTH@ 10
------DEL SimpleName@@MethodName:println:[page] @AT@ 4637 @LENGTH@ 13
---------DEL SimpleName@@page @AT@ 4645 @LENGTH@ 4


UPD FieldDeclaration@@public, static, final, SimpleAttributeDefinition, [ATTRIBUTE=new SimpleAttributeDefinitionBuilder(ModelDescriptionConstants.ATTRIBUTE,ModelType.STRING,false).setValidator(new StringLengthValidator(1,Integer.MAX_VALUE,false,false)).setDefaultValue(new ModelNode("uid")).setAllowExpression(true).setFlags(AttributeAccess.Flag.RESTART_RESOURCE_SERVICES).build()] @TO@ public, static, final, SimpleAttributeDefinition, [ATTRIBUTE=new SimpleAttributeDefinitionBuilder(ModelDescriptionConstants.ATTRIBUTE,ModelType.STRING).setRequired(false).setValidator(new StringLengthValidator(1,Integer.MAX_VALUE,false,false)).setDefaultValue(new ModelNode("uid")).setAllowExpression(true).setFlags(AttributeAccess.Flag.RESTART_RESOURCE_SERVICES).build()] @AT@ 2238 @LENGTH@ 426
---UPD VariableDeclarationFragment@@ATTRIBUTE=new SimpleAttributeDefinitionBuilder(ModelDescriptionConstants.ATTRIBUTE,ModelType.STRING,false).setValidator(new StringLengthValidator(1,Integer.MAX_VALUE,false,false)).setDefaultValue(new ModelNode("uid")).setAllowExpression(true).setFlags(AttributeAccess.Flag.RESTART_RESOURCE_SERVICES).build() @TO@ ATTRIBUTE=new SimpleAttributeDefinitionBuilder(ModelDescriptionConstants.ATTRIBUTE,ModelType.STRING).setRequired(false).setValidator(new StringLengthValidator(1,Integer.MAX_VALUE,false,false)).setDefaultValue(new ModelNode("uid")).setAllowExpression(true).setFlags(AttributeAccess.Flag.RESTART_RESOURCE_SERVICES).build() @AT@ 2284 @LENGTH@ 379
------UPD MethodInvocation@@new SimpleAttributeDefinitionBuilder(ModelDescriptionConstants.ATTRIBUTE,ModelType.STRING,false).setValidator(new StringLengthValidator(1,Integer.MAX_VALUE,false,false)).setDefaultValue(new ModelNode("uid")).setAllowExpression(true).setFlags(AttributeAccess.Flag.RESTART_RESOURCE_SERVICES).build() @TO@ new SimpleAttributeDefinitionBuilder(ModelDescriptionConstants.ATTRIBUTE,ModelType.STRING).setRequired(false).setValidator(new StringLengthValidator(1,Integer.MAX_VALUE,false,false)).setDefaultValue(new ModelNode("uid")).setAllowExpression(true).setFlags(AttributeAccess.Flag.RESTART_RESOURCE_SERVICES).build() @AT@ 2296 @LENGTH@ 367
---------INS MethodInvocation@@MethodName:setRequired:[false] @TO@ MethodInvocation@@new SimpleAttributeDefinitionBuilder(ModelDescriptionConstants.ATTRIBUTE,ModelType.STRING,false).setValidator(new StringLengthValidator(1,Integer.MAX_VALUE,false,false)).setDefaultValue(new ModelNode("uid")).setAllowExpression(true).setFlags(AttributeAccess.Flag.RESTART_RESOURCE_SERVICES).build() @AT@ 2296 @LENGTH@ 123
------------INS BooleanLiteral@@false @TO@ MethodInvocation@@MethodName:setRequired:[false] @AT@ 2413 @LENGTH@ 5
---------DEL ClassInstanceCreation@@SimpleAttributeDefinitionBuilder[ModelDescriptionConstants.ATTRIBUTE, ModelType.STRING, false] @AT@ 2296 @LENGTH@ 98
------------DEL BooleanLiteral@@false @AT@ 2388 @LENGTH@ 5
---------INS ClassInstanceCreation@@SimpleAttributeDefinitionBuilder[ModelDescriptionConstants.ATTRIBUTE, ModelType.STRING] @TO@ MethodInvocation@@new SimpleAttributeDefinitionBuilder(ModelDescriptionConstants.ATTRIBUTE,ModelType.STRING,false).setValidator(new StringLengthValidator(1,Integer.MAX_VALUE,false,false)).setDefaultValue(new ModelNode("uid")).setAllowExpression(true).setFlags(AttributeAccess.Flag.RESTART_RESOURCE_SERVICES).build() @AT@ 2296 @LENGTH@ 91
------------MOV New@@new @TO@ ClassInstanceCreation@@SimpleAttributeDefinitionBuilder[ModelDescriptionConstants.ATTRIBUTE, ModelType.STRING] @AT@ 2296 @LENGTH@ 3
------------MOV SimpleType@@SimpleAttributeDefinitionBuilder @TO@ ClassInstanceCreation@@SimpleAttributeDefinitionBuilder[ModelDescriptionConstants.ATTRIBUTE, ModelType.STRING] @AT@ 2300 @LENGTH@ 32
------------MOV QualifiedName@@ModelDescriptionConstants.ATTRIBUTE @TO@ ClassInstanceCreation@@SimpleAttributeDefinitionBuilder[ModelDescriptionConstants.ATTRIBUTE, ModelType.STRING] @AT@ 2333 @LENGTH@ 35
------------MOV QualifiedName@@ModelType.STRING @TO@ ClassInstanceCreation@@SimpleAttributeDefinitionBuilder[ModelDescriptionConstants.ATTRIBUTE, ModelType.STRING] @AT@ 2370 @LENGTH@ 16


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  DataFormatCustomizer<JacksonDataFormat> configurer : customizers) {    LOGGER.debug("Configure dataformat {}, with configurer {}",dataformat,configurer);    configurer.customize(dataformat);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  DataFormatCustomizer<JacksonDataFormat> customizer : customizers) {    LOGGER.debug("Configure dataformat {}, with customizer {}",dataformat,customizer);    customizer.customize(dataformat);  }} @AT@ 5357 @LENGTH@ 426
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 5361 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5361 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  DataFormatCustomizer<JacksonDataFormat> configurer : customizers) {    LOGGER.debug("Configure dataformat {}, with configurer {}",dataformat,configurer);    configurer.customize(dataformat);  }} @TO@ ThenBody:{  for (  DataFormatCustomizer<JacksonDataFormat> customizer : customizers) {    LOGGER.debug("Configure dataformat {}, with customizer {}",dataformat,customizer);    customizer.customize(dataformat);  }} @AT@ 5417 @LENGTH@ 366
------UPD EnhancedForStatement@@for (DataFormatCustomizer<JacksonDataFormat> configurer : customizers) {  LOGGER.debug("Configure dataformat {}, with configurer {}",dataformat,configurer);  configurer.customize(dataformat);} @TO@ for (DataFormatCustomizer<JacksonDataFormat> customizer : customizers) {  LOGGER.debug("Configure dataformat {}, with customizer {}",dataformat,customizer);  customizer.customize(dataformat);} @AT@ 5439 @LENGTH@ 326
---------UPD SingleVariableDeclaration@@DataFormatCustomizer<JacksonDataFormat> configurer @TO@ DataFormatCustomizer<JacksonDataFormat> customizer @AT@ 5444 @LENGTH@ 50
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5484 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure dataformat {}, with configurer {}",dataformat,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure dataformat {}, with customizer {}",dataformat,customizer) @AT@ 5536 @LENGTH@ 149
------------UPD MethodInvocation@@LOGGER.debug("Configure dataformat {}, with configurer {}",dataformat,configurer) @TO@ LOGGER.debug("Configure dataformat {}, with customizer {}",dataformat,customizer) @AT@ 5536 @LENGTH@ 148
---------------UPD SimpleName@@MethodName:debug:["Configure dataformat {}, with configurer {}", dataformat, configurer] @TO@ MethodName:debug:["Configure dataformat {}, with customizer {}", dataformat, customizer] @AT@ 5543 @LENGTH@ 141
------------------UPD StringLiteral@@"Configure dataformat {}, with configurer {}" @TO@ "Configure dataformat {}, with customizer {}" @AT@ 5582 @LENGTH@ 45
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5673 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(dataformat) @TO@ MethodInvocation:customizer.customize(dataformat) @AT@ 5710 @LENGTH@ 33
------------UPD MethodInvocation@@configurer.customize(dataformat) @TO@ customizer.customize(dataformat) @AT@ 5710 @LENGTH@ 32
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5710 @LENGTH@ 10


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled(); @AT@ 5209 @LENGTH@ 160
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5217 @LENGTH@ 151
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5217 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5234 @LENGTH@ 134
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 5234 @LENGTH@ 64
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5234 @LENGTH@ 35
---------UPD MethodInvocation@@componentConfiguration.getConfigurer().isEnabled() @TO@ componentConfiguration.getCustomizer().isEnabled() @AT@ 5318 @LENGTH@ 50
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5318 @LENGTH@ 38


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  DataFormatCustomizer<JohnzonDataFormat> configurer : customizers) {    LOGGER.debug("Configure dataformat {}, with configurer {}",dataformat,configurer);    configurer.customize(dataformat);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  DataFormatCustomizer<JohnzonDataFormat> customizer : customizers) {    LOGGER.debug("Configure dataformat {}, with customizer {}",dataformat,customizer);    customizer.customize(dataformat);  }} @AT@ 5357 @LENGTH@ 426
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 5361 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5361 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  DataFormatCustomizer<JohnzonDataFormat> configurer : customizers) {    LOGGER.debug("Configure dataformat {}, with configurer {}",dataformat,configurer);    configurer.customize(dataformat);  }} @TO@ ThenBody:{  for (  DataFormatCustomizer<JohnzonDataFormat> customizer : customizers) {    LOGGER.debug("Configure dataformat {}, with customizer {}",dataformat,customizer);    customizer.customize(dataformat);  }} @AT@ 5417 @LENGTH@ 366
------UPD EnhancedForStatement@@for (DataFormatCustomizer<JohnzonDataFormat> configurer : customizers) {  LOGGER.debug("Configure dataformat {}, with configurer {}",dataformat,configurer);  configurer.customize(dataformat);} @TO@ for (DataFormatCustomizer<JohnzonDataFormat> customizer : customizers) {  LOGGER.debug("Configure dataformat {}, with customizer {}",dataformat,customizer);  customizer.customize(dataformat);} @AT@ 5439 @LENGTH@ 326
---------UPD SingleVariableDeclaration@@DataFormatCustomizer<JohnzonDataFormat> configurer @TO@ DataFormatCustomizer<JohnzonDataFormat> customizer @AT@ 5444 @LENGTH@ 50
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5484 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure dataformat {}, with configurer {}",dataformat,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure dataformat {}, with customizer {}",dataformat,customizer) @AT@ 5536 @LENGTH@ 149
------------UPD MethodInvocation@@LOGGER.debug("Configure dataformat {}, with configurer {}",dataformat,configurer) @TO@ LOGGER.debug("Configure dataformat {}, with customizer {}",dataformat,customizer) @AT@ 5536 @LENGTH@ 148
---------------UPD SimpleName@@MethodName:debug:["Configure dataformat {}, with configurer {}", dataformat, configurer] @TO@ MethodName:debug:["Configure dataformat {}, with customizer {}", dataformat, customizer] @AT@ 5543 @LENGTH@ 141
------------------UPD StringLiteral@@"Configure dataformat {}, with configurer {}" @TO@ "Configure dataformat {}, with customizer {}" @AT@ 5582 @LENGTH@ 45
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5673 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(dataformat) @TO@ MethodInvocation:customizer.customize(dataformat) @AT@ 5710 @LENGTH@ 33
------------UPD MethodInvocation@@configurer.customize(dataformat) @TO@ customizer.customize(dataformat) @AT@ 5710 @LENGTH@ 32
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5710 @LENGTH@ 10


UPD MethodDeclaration@@public, Class<?>, MethodName:getDynamicProjection,  @TO@ public, Optional<Class<?>>, MethodName:getDynamicProjection,  @AT@ 4042 @LENGTH@ 58
---DEL ParameterizedType@@Class<?> @AT@ 4049 @LENGTH@ 8
---UPD ReturnStatement@@NullLiteral:null @TO@ MethodInvocation:Optional.empty() @AT@ 4085 @LENGTH@ 12
------DEL NullLiteral@@null @AT@ 4092 @LENGTH@ 4
------INS MethodInvocation@@Optional.empty() @TO@ ReturnStatement@@NullLiteral:null @AT@ 4195 @LENGTH@ 16
---------INS SimpleName@@Name:Optional @TO@ MethodInvocation@@Optional.empty() @AT@ 4195 @LENGTH@ 8
---------INS SimpleName@@MethodName:empty:[] @TO@ MethodInvocation@@Optional.empty() @AT@ 4204 @LENGTH@ 7
---INS ParameterizedType@@Optional<Class<?>> @TO@ MethodDeclaration@@public, Class<?>, MethodName:getDynamicProjection,  @AT@ 4142 @LENGTH@ 18
------INS SimpleType@@Optional @TO@ ParameterizedType@@Optional<Class<?>> @AT@ 4142 @LENGTH@ 8
------INS ParameterizedType@@Class<?> @TO@ ParameterizedType@@Optional<Class<?>> @AT@ 4151 @LENGTH@ 8
---------MOV SimpleType@@Class @TO@ ParameterizedType@@Class<?> @AT@ 4049 @LENGTH@ 5
---------MOV WildcardType@@? @TO@ ParameterizedType@@Class<?> @AT@ 4055 @LENGTH@ 1


UPD MethodDeclaration@@public, int, MethodName:tryEvictContiguousData, int allocationSize, int count,  @TO@ public, long, MethodName:tryEvictContiguousData, int allocationSize, int count,  @AT@ 2070 @LENGTH@ 88
---UPD PrimitiveType@@int @TO@ long @AT@ 2077 @LENGTH@ 3


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled(); @AT@ 5299 @LENGTH@ 160
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5307 @LENGTH@ 151
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5307 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5324 @LENGTH@ 134
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 5324 @LENGTH@ 64
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5324 @LENGTH@ 35
---------UPD MethodInvocation@@componentConfiguration.getConfigurer().isEnabled() @TO@ componentConfiguration.getCustomizer().isEnabled() @AT@ 5408 @LENGTH@ 50
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5408 @LENGTH@ 38


UPD VariableDeclarationStatement@@Exchange exchange=template.request("https4://127.0.0.1:" + localServer.getLocalPort() + "/mail/?x509HostnameVerifier=x509HostnameVerifier&sslContextParametersRef=sslContextParameters",new Processor(){
  public void process(  Exchange exchange) throws Exception {
  }
}
); @TO@ Exchange exchange=template.request("https4://127.0.0.1:" + localServer.getLocalPort() + "/mail/?x509HostnameVerifier=x509HostnameVerifier&sslContextParameters=sslContextParameters",new Processor(){
  public void process(  Exchange exchange) throws Exception {
  }
}
); @AT@ 2482 @LENGTH@ 325
---UPD VariableDeclarationFragment@@exchange=template.request("https4://127.0.0.1:" + localServer.getLocalPort() + "/mail/?x509HostnameVerifier=x509HostnameVerifier&sslContextParametersRef=sslContextParameters",new Processor(){
  public void process(  Exchange exchange) throws Exception {
  }
}
) @TO@ exchange=template.request("https4://127.0.0.1:" + localServer.getLocalPort() + "/mail/?x509HostnameVerifier=x509HostnameVerifier&sslContextParameters=sslContextParameters",new Processor(){
  public void process(  Exchange exchange) throws Exception {
  }
}
) @AT@ 2491 @LENGTH@ 315
------UPD MethodInvocation@@template.request("https4://127.0.0.1:" + localServer.getLocalPort() + "/mail/?x509HostnameVerifier=x509HostnameVerifier&sslContextParametersRef=sslContextParameters",new Processor(){
  public void process(  Exchange exchange) throws Exception {
  }
}
) @TO@ template.request("https4://127.0.0.1:" + localServer.getLocalPort() + "/mail/?x509HostnameVerifier=x509HostnameVerifier&sslContextParameters=sslContextParameters",new Processor(){
  public void process(  Exchange exchange) throws Exception {
  }
}
) @AT@ 2502 @LENGTH@ 304
---------UPD SimpleName@@MethodName:request:["https4://127.0.0.1:" + localServer.getLocalPort() + "/mail/?x509HostnameVerifier=x509HostnameVerifier&sslContextParametersRef=sslContextParameters", new Processor(){
  public void process(  Exchange exchange) throws Exception {
  }
}
] @TO@ MethodName:request:["https4://127.0.0.1:" + localServer.getLocalPort() + "/mail/?x509HostnameVerifier=x509HostnameVerifier&sslContextParameters=sslContextParameters", new Processor(){
  public void process(  Exchange exchange) throws Exception {
  }
}
] @AT@ 2511 @LENGTH@ 295
------------UPD InfixExpression@@"https4://127.0.0.1:" + localServer.getLocalPort() + "/mail/?x509HostnameVerifier=x509HostnameVerifier&sslContextParametersRef=sslContextParameters" @TO@ "https4://127.0.0.1:" + localServer.getLocalPort() + "/mail/?x509HostnameVerifier=x509HostnameVerifier&sslContextParameters=sslContextParameters" @AT@ 2519 @LENGTH@ 161
---------------UPD StringLiteral@@"/mail/?x509HostnameVerifier=x509HostnameVerifier&sslContextParametersRef=sslContextParameters" @TO@ "/mail/?x509HostnameVerifier=x509HostnameVerifier&sslContextParameters=sslContextParameters" @AT@ 2585 @LENGTH@ 95


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled(); @AT@ 5243 @LENGTH@ 160
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5251 @LENGTH@ 151
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5251 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5268 @LENGTH@ 134
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 5268 @LENGTH@ 64
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5268 @LENGTH@ 35
---------UPD MethodInvocation@@componentConfiguration.getConfigurer().isEnabled() @TO@ componentConfiguration.getCustomizer().isEnabled() @AT@ 5352 @LENGTH@ 50
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5352 @LENGTH@ 38


UPD VariableDeclarationStatement@@int arenaSizeVal=(arenaCount == 0) ? MAX_ARENA_SIZE : (int)(maxSizeVal / arenaCount); @TO@ long arenaSizeVal=(arenaCount == 0) ? MAX_ARENA_SIZE : maxSizeVal / arenaCount; @AT@ 5716 @LENGTH@ 87
---UPD PrimitiveType@@int @TO@ long @AT@ 5716 @LENGTH@ 3
---UPD VariableDeclarationFragment@@arenaSizeVal=(arenaCount == 0) ? MAX_ARENA_SIZE : (int)(maxSizeVal / arenaCount) @TO@ arenaSizeVal=(arenaCount == 0) ? MAX_ARENA_SIZE : maxSizeVal / arenaCount @AT@ 5720 @LENGTH@ 82
------UPD ConditionalExpression@@(arenaCount == 0) ? MAX_ARENA_SIZE : (int)(maxSizeVal / arenaCount) @TO@ (arenaCount == 0) ? MAX_ARENA_SIZE : maxSizeVal / arenaCount @AT@ 5735 @LENGTH@ 67
---------DEL CastExpression@@(int)(maxSizeVal / arenaCount) @AT@ 5772 @LENGTH@ 30
------------DEL PrimitiveType@@int @AT@ 5773 @LENGTH@ 3
------------DEL ParenthesizedExpression@@(maxSizeVal / arenaCount) @AT@ 5777 @LENGTH@ 25
---------------DEL InfixExpression@@maxSizeVal / arenaCount @AT@ 5778 @LENGTH@ 23
---------INS InfixExpression@@maxSizeVal / arenaCount @TO@ ConditionalExpression@@(arenaCount == 0) ? MAX_ARENA_SIZE : (int)(maxSizeVal / arenaCount) @AT@ 5773 @LENGTH@ 23
------------MOV SimpleName@@maxSizeVal @TO@ InfixExpression@@maxSizeVal / arenaCount @AT@ 5778 @LENGTH@ 10
------------MOV Operator@@/ @TO@ InfixExpression@@maxSizeVal / arenaCount @AT@ 5788 @LENGTH@ 1
------------MOV SimpleName@@arenaCount @TO@ InfixExpression@@maxSizeVal / arenaCount @AT@ 5791 @LENGTH@ 10


UPD SwitchStatement@@switch (determineOperation(exchange)) {case DigitalOceanOperations.list:  getTags(exchange);break;case DigitalOceanOperations.create:createTag(exchange);break;case DigitalOceanOperations.get:getTag(exchange);break;case DigitalOceanOperations.delete:deleteTag(exchange);break;case DigitalOceanOperations.update:updateTag(exchange);break;default :throw new IllegalArgumentException("Unsupported operation");} @TO@ switch (determineOperation(exchange)) {case list:  getTags(exchange);break;case create:createTag(exchange);break;case get:getTag(exchange);break;case delete:deleteTag(exchange);break;case update:updateTag(exchange);break;default :throw new IllegalArgumentException("Unsupported operation");} @AT@ 1631 @LENGTH@ 677
---UPD SwitchCase@@case DigitalOceanOperations.list: @TO@ case list: @AT@ 1683 @LENGTH@ 33
------DEL QualifiedName@@DigitalOceanOperations.list @AT@ 1688 @LENGTH@ 27
---------DEL SimpleName@@DigitalOceanOperations @AT@ 1688 @LENGTH@ 22
---------DEL SimpleName@@list @AT@ 1711 @LENGTH@ 4
------INS SimpleName@@list @TO@ SwitchCase@@case DigitalOceanOperations.list: @AT@ 1688 @LENGTH@ 4
---UPD SwitchCase@@case DigitalOceanOperations.create: @TO@ case create: @AT@ 1787 @LENGTH@ 35
------INS SimpleName@@create @TO@ SwitchCase@@case DigitalOceanOperations.create: @AT@ 1769 @LENGTH@ 6
------DEL QualifiedName@@DigitalOceanOperations.create @AT@ 1792 @LENGTH@ 29
---------DEL SimpleName@@DigitalOceanOperations @AT@ 1792 @LENGTH@ 22
---------DEL SimpleName@@create @AT@ 1815 @LENGTH@ 6
---UPD SwitchCase@@case DigitalOceanOperations.get: @TO@ case get: @AT@ 1895 @LENGTH@ 32
------INS SimpleName@@get @TO@ SwitchCase@@case DigitalOceanOperations.get: @AT@ 1854 @LENGTH@ 3
------DEL QualifiedName@@DigitalOceanOperations.get @AT@ 1900 @LENGTH@ 26
---------DEL SimpleName@@DigitalOceanOperations @AT@ 1900 @LENGTH@ 22
---------DEL SimpleName@@get @AT@ 1923 @LENGTH@ 3
---UPD SwitchCase@@case DigitalOceanOperations.delete: @TO@ case delete: @AT@ 1997 @LENGTH@ 35
------INS SimpleName@@delete @TO@ SwitchCase@@case DigitalOceanOperations.delete: @AT@ 1933 @LENGTH@ 6
------DEL QualifiedName@@DigitalOceanOperations.delete @AT@ 2002 @LENGTH@ 29
---------DEL SimpleName@@DigitalOceanOperations @AT@ 2002 @LENGTH@ 22
---------DEL SimpleName@@delete @AT@ 2025 @LENGTH@ 6
---UPD SwitchCase@@case DigitalOceanOperations.update: @TO@ case update: @AT@ 2105 @LENGTH@ 35
------INS SimpleName@@update @TO@ SwitchCase@@case DigitalOceanOperations.update: @AT@ 2018 @LENGTH@ 6
------DEL QualifiedName@@DigitalOceanOperations.update @AT@ 2110 @LENGTH@ 29
---------DEL SimpleName@@DigitalOceanOperations @AT@ 2110 @LENGTH@ 22
---------DEL SimpleName@@update @AT@ 2133 @LENGTH@ 6


UPD IfStatement@@if (!channel.isOpen() && !(channel instanceof AutorecoveringChannel)) {  return;} @TO@ if (!channel.isOpen() && !(channel instanceof ChannelProxy && ((ChannelProxy)channel).getTargetChannel() instanceof AutorecoveringChannel) && !(channel instanceof AutorecoveringChannel)) {  return;} @AT@ 3776 @LENGTH@ 86
---UPD InfixExpression@@!channel.isOpen() && !(channel instanceof AutorecoveringChannel) @TO@ !channel.isOpen() && !(channel instanceof ChannelProxy && ((ChannelProxy)channel).getTargetChannel() instanceof AutorecoveringChannel) && !(channel instanceof AutorecoveringChannel) @AT@ 3780 @LENGTH@ 64
------INS PrefixExpression@@!(channel instanceof ChannelProxy && ((ChannelProxy)channel).getTargetChannel() instanceof AutorecoveringChannel) @TO@ InfixExpression@@!channel.isOpen() && !(channel instanceof AutorecoveringChannel) @AT@ 3801 @LENGTH@ 119
---------INS Operator@@! @TO@ PrefixExpression@@!(channel instanceof ChannelProxy && ((ChannelProxy)channel).getTargetChannel() instanceof AutorecoveringChannel) @AT@ 3801 @LENGTH@ 1
---------INS ParenthesizedExpression@@(channel instanceof ChannelProxy && ((ChannelProxy)channel).getTargetChannel() instanceof AutorecoveringChannel) @TO@ PrefixExpression@@!(channel instanceof ChannelProxy && ((ChannelProxy)channel).getTargetChannel() instanceof AutorecoveringChannel) @AT@ 3802 @LENGTH@ 118
------------INS InfixExpression@@channel instanceof ChannelProxy && ((ChannelProxy)channel).getTargetChannel() instanceof AutorecoveringChannel @TO@ ParenthesizedExpression@@(channel instanceof ChannelProxy && ((ChannelProxy)channel).getTargetChannel() instanceof AutorecoveringChannel) @AT@ 3803 @LENGTH@ 116
---------------INS InstanceofExpression@@channel instanceof ChannelProxy @TO@ InfixExpression@@channel instanceof ChannelProxy && ((ChannelProxy)channel).getTargetChannel() instanceof AutorecoveringChannel @AT@ 3803 @LENGTH@ 31
------------------INS SimpleName@@channel @TO@ InstanceofExpression@@channel instanceof ChannelProxy @AT@ 3803 @LENGTH@ 7
------------------INS Instanceof@@instanceof @TO@ InstanceofExpression@@channel instanceof ChannelProxy @AT@ 3811 @LENGTH@ 10
------------------INS SimpleType@@ChannelProxy @TO@ InstanceofExpression@@channel instanceof ChannelProxy @AT@ 3822 @LENGTH@ 12
---------------INS Operator@@&& @TO@ InfixExpression@@channel instanceof ChannelProxy && ((ChannelProxy)channel).getTargetChannel() instanceof AutorecoveringChannel @AT@ 3834 @LENGTH@ 2
---------------INS InstanceofExpression@@((ChannelProxy)channel).getTargetChannel() instanceof AutorecoveringChannel @TO@ InfixExpression@@channel instanceof ChannelProxy && ((ChannelProxy)channel).getTargetChannel() instanceof AutorecoveringChannel @AT@ 3843 @LENGTH@ 76
------------------INS MethodInvocation@@((ChannelProxy)channel).getTargetChannel() @TO@ InstanceofExpression@@((ChannelProxy)channel).getTargetChannel() instanceof AutorecoveringChannel @AT@ 3843 @LENGTH@ 43
---------------------INS ParenthesizedExpression@@((ChannelProxy)channel) @TO@ MethodInvocation@@((ChannelProxy)channel).getTargetChannel() @AT@ 3843 @LENGTH@ 24
------------------------INS CastExpression@@(ChannelProxy)channel @TO@ ParenthesizedExpression@@((ChannelProxy)channel) @AT@ 3844 @LENGTH@ 22
---------------------------INS SimpleType@@ChannelProxy @TO@ CastExpression@@(ChannelProxy)channel @AT@ 3845 @LENGTH@ 12
---------------------------INS SimpleName@@channel @TO@ CastExpression@@(ChannelProxy)channel @AT@ 3859 @LENGTH@ 7
---------------------INS SimpleName@@MethodName:getTargetChannel:[] @TO@ MethodInvocation@@((ChannelProxy)channel).getTargetChannel() @AT@ 3868 @LENGTH@ 18
------------------INS Instanceof@@instanceof @TO@ InstanceofExpression@@((ChannelProxy)channel).getTargetChannel() instanceof AutorecoveringChannel @AT@ 3887 @LENGTH@ 10
------------------INS SimpleType@@AutorecoveringChannel @TO@ InstanceofExpression@@((ChannelProxy)channel).getTargetChannel() instanceof AutorecoveringChannel @AT@ 3898 @LENGTH@ 21


DEL ExpressionStatement@@MethodInvocation:this.addModule("org.jboss.modules") @AT@ 3237 @LENGTH@ 36
---DEL MethodInvocation@@this.addModule("org.jboss.modules") @AT@ 3237 @LENGTH@ 35
------DEL ThisExpression@@this @AT@ 3237 @LENGTH@ 4
------DEL SimpleName@@MethodName:addModule:["org.jboss.modules"] @AT@ 3242 @LENGTH@ 30
---------DEL StringLiteral@@"org.jboss.modules" @AT@ 3252 @LENGTH@ 19


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled(); @AT@ 5294 @LENGTH@ 160
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5302 @LENGTH@ 151
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5302 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5319 @LENGTH@ 134
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 5319 @LENGTH@ 64
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5319 @LENGTH@ 35
---------UPD MethodInvocation@@componentConfiguration.getConfigurer().isEnabled() @TO@ componentConfiguration.getCustomizer().isEnabled() @AT@ 5403 @LENGTH@ 50
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5403 @LENGTH@ 38


UPD IfStatement@@if (!context.authorizeAnonymous(false)) {  throw log.runAsAuthorizationFailed(principal,AnonymousPrincipal.getInstance(),null);} @TO@ if (!context.authorizeAnonymous(authorize)) {  throw log.runAsAuthorizationFailed(principal,AnonymousPrincipal.getInstance(),null);} @AT@ 27276 @LENGTH@ 151
---UPD PrefixExpression@@!context.authorizeAnonymous(false) @TO@ !context.authorizeAnonymous(authorize) @AT@ 27280 @LENGTH@ 35
------UPD MethodInvocation@@context.authorizeAnonymous(false) @TO@ context.authorizeAnonymous(authorize) @AT@ 27282 @LENGTH@ 33
---------UPD SimpleName@@MethodName:authorizeAnonymous:[false] @TO@ MethodName:authorizeAnonymous:[authorize] @AT@ 27290 @LENGTH@ 25
------------INS SimpleName@@authorize @TO@ SimpleName@@MethodName:authorizeAnonymous:[false] @AT@ 27309 @LENGTH@ 9
------------DEL BooleanLiteral@@false @AT@ 27309 @LENGTH@ 5


UPD FieldDeclaration@@private, static, Set<String>, [vectorizableReduceSinkNativeEngines=new LinkedHashSet<String>(Arrays.asList("tez","spark"))] @TO@ private, static, final, Set<String>, [vectorizableReduceSinkNativeEngines=new LinkedHashSet<String>(Arrays.asList("tez","spark"))] @AT@ 14745 @LENGTH@ 128
---INS Modifier@@final @TO@ FieldDeclaration@@private, static, Set<String>, [vectorizableReduceSinkNativeEngines=new LinkedHashSet<String>(Arrays.asList("tez","spark"))] @AT@ 14760 @LENGTH@ 5


UPD CatchClause@@catch (IOException e) {} @TO@ catch (IOException ignored) {} @AT@ 13147 @LENGTH@ 37
---UPD SingleVariableDeclaration@@IOException e @TO@ IOException ignored @AT@ 13154 @LENGTH@ 13
------UPD SimpleName@@e @TO@ ignored @AT@ 13166 @LENGTH@ 1


UPD MethodDeclaration@@public, void, MethodName:ensureConnected, long timeoutMillis, CommandLineException,  @TO@ public, void, MethodName:ensureConnected, long timeoutMillis, CommandLineException, IOException,  @AT@ 6567 @LENGTH@ 408
---INS SimpleType@@IOException @TO@ MethodDeclaration@@public, void, MethodName:ensureConnected, long timeoutMillis, CommandLineException,  @AT@ 6644 @LENGTH@ 11


UPD IfStatement@@if (key == Key.SCHEMES || key == Key.PACKAGES) {  value=((String)value).split(",");} @TO@ if (key == Key.SCHEMES || key == Key.PACKAGES) {  String[] parts=((String)value).split(",");  for (int i=0; i < parts.length; ++i) {    parts[i]=parts[i].trim();  }  value=parts;} else {  value=value.toString().trim();} @AT@ 1469 @LENGTH@ 123
---INS Block@@ThenBody:{  String[] parts=((String)value).split(",");  for (int i=0; i < parts.length; ++i) {    parts[i]=parts[i].trim();  }  value=parts;} @TO@ IfStatement@@if (key == Key.SCHEMES || key == Key.PACKAGES) {  value=((String)value).split(",");} @AT@ 1516 @LENGTH@ 255
------INS VariableDeclarationStatement@@String[] parts=((String)value).split(","); @TO@ Block@@ThenBody:{  String[] parts=((String)value).split(",");  for (int i=0; i < parts.length; ++i) {    parts[i]=parts[i].trim();  }  value=parts;} @AT@ 1538 @LENGTH@ 45
---------INS ArrayType@@String[] @TO@ VariableDeclarationStatement@@String[] parts=((String)value).split(","); @AT@ 1538 @LENGTH@ 8
------------INS SimpleType@@String @TO@ ArrayType@@String[] @AT@ 1538 @LENGTH@ 6
---------INS VariableDeclarationFragment@@parts=((String)value).split(",") @TO@ VariableDeclarationStatement@@String[] parts=((String)value).split(","); @AT@ 1547 @LENGTH@ 35
------------MOV MethodInvocation@@((String)value).split(",") @TO@ VariableDeclarationFragment@@parts=((String)value).split(",") @AT@ 1546 @LENGTH@ 27
------------INS SimpleName@@parts @TO@ VariableDeclarationFragment@@parts=((String)value).split(",") @AT@ 1547 @LENGTH@ 5
------INS ForStatement@@for (int i=0; i < parts.length; ++i) {  parts[i]=parts[i].trim();} @TO@ Block@@ThenBody:{  String[] parts=((String)value).split(",");  for (int i=0; i < parts.length; ++i) {    parts[i]=parts[i].trim();  }  value=parts;} @AT@ 1604 @LENGTH@ 114
---------INS VariableDeclarationExpression@@int i=0 @TO@ ForStatement@@for (int i=0; i < parts.length; ++i) {  parts[i]=parts[i].trim();} @AT@ 1609 @LENGTH@ 9
------------INS PrimitiveType@@int @TO@ VariableDeclarationExpression@@int i=0 @AT@ 1609 @LENGTH@ 3
------------INS VariableDeclarationFragment@@i=0 @TO@ VariableDeclarationExpression@@int i=0 @AT@ 1613 @LENGTH@ 5
---------------INS SimpleName@@i @TO@ VariableDeclarationFragment@@i=0 @AT@ 1613 @LENGTH@ 1
---------------INS NumberLiteral@@0 @TO@ VariableDeclarationFragment@@i=0 @AT@ 1617 @LENGTH@ 1
---------INS InfixExpression@@i < parts.length @TO@ ForStatement@@for (int i=0; i < parts.length; ++i) {  parts[i]=parts[i].trim();} @AT@ 1620 @LENGTH@ 16
------------INS SimpleName@@i @TO@ InfixExpression@@i < parts.length @AT@ 1620 @LENGTH@ 1
------------INS Operator@@< @TO@ InfixExpression@@i < parts.length @AT@ 1621 @LENGTH@ 1
------------INS QualifiedName@@parts.length @TO@ InfixExpression@@i < parts.length @AT@ 1624 @LENGTH@ 12
---------------INS SimpleName@@parts @TO@ QualifiedName@@parts.length @AT@ 1624 @LENGTH@ 5
---------------INS SimpleName@@length @TO@ QualifiedName@@parts.length @AT@ 1630 @LENGTH@ 6
---------INS PrefixExpression@@++i @TO@ ForStatement@@for (int i=0; i < parts.length; ++i) {  parts[i]=parts[i].trim();} @AT@ 1638 @LENGTH@ 3
------------INS Operator@@++ @TO@ PrefixExpression@@++i @AT@ 1638 @LENGTH@ 2
------------INS SimpleName@@i @TO@ PrefixExpression@@++i @AT@ 1640 @LENGTH@ 1
---------INS ExpressionStatement@@Assignment:parts[i]=parts[i].trim() @TO@ ForStatement@@for (int i=0; i < parts.length; ++i) {  parts[i]=parts[i].trim();} @AT@ 1669 @LENGTH@ 27
------------INS Assignment@@parts[i]=parts[i].trim() @TO@ ExpressionStatement@@Assignment:parts[i]=parts[i].trim() @AT@ 1669 @LENGTH@ 26
---------------INS ArrayAccess@@parts[i] @TO@ Assignment@@parts[i]=parts[i].trim() @AT@ 1669 @LENGTH@ 8
------------------INS SimpleName@@parts @TO@ ArrayAccess@@parts[i] @AT@ 1669 @LENGTH@ 5
------------------INS SimpleName@@i @TO@ ArrayAccess@@parts[i] @AT@ 1675 @LENGTH@ 1
---------------INS Operator@@= @TO@ Assignment@@parts[i]=parts[i].trim() @AT@ 1677 @LENGTH@ 1
---------------INS MethodInvocation@@parts[i].trim() @TO@ Assignment@@parts[i]=parts[i].trim() @AT@ 1680 @LENGTH@ 15
------------------INS ArrayAccess@@parts[i] @TO@ MethodInvocation@@parts[i].trim() @AT@ 1680 @LENGTH@ 8
---------------------INS SimpleName@@parts @TO@ ArrayAccess@@parts[i] @AT@ 1680 @LENGTH@ 5
---------------------INS SimpleName@@i @TO@ ArrayAccess@@parts[i] @AT@ 1686 @LENGTH@ 1
------------------INS SimpleName@@MethodName:trim:[] @TO@ MethodInvocation@@parts[i].trim() @AT@ 1689 @LENGTH@ 6
------INS ExpressionStatement@@Assignment:value=parts @TO@ Block@@ThenBody:{  String[] parts=((String)value).split(",");  for (int i=0; i < parts.length; ++i) {    parts[i]=parts[i].trim();  }  value=parts;} @AT@ 1739 @LENGTH@ 14
---------INS Assignment@@value=parts @TO@ ExpressionStatement@@Assignment:value=parts @AT@ 1739 @LENGTH@ 13
------------INS SimpleName@@value @TO@ Assignment@@value=parts @AT@ 1739 @LENGTH@ 5
------------INS Operator@@= @TO@ Assignment@@value=parts @AT@ 1744 @LENGTH@ 1
------------INS SimpleName@@parts @TO@ Assignment@@value=parts @AT@ 1747 @LENGTH@ 5
---UPD Block@@ThenBody:{  value=((String)value).split(",");} @TO@ ElseBody:{  value=value.toString().trim();} @AT@ 1516 @LENGTH@ 76
------UPD ExpressionStatement@@Assignment:value=((String)value).split(",") @TO@ Assignment:value=value.toString().trim() @AT@ 1538 @LENGTH@ 36
---------UPD Assignment@@value=((String)value).split(",") @TO@ value=value.toString().trim() @AT@ 1538 @LENGTH@ 35
------------INS MethodInvocation@@value.toString().trim() @TO@ Assignment@@value=((String)value).split(",") @AT@ 1807 @LENGTH@ 23
---------------INS MethodInvocation@@MethodName:toString:[] @TO@ MethodInvocation@@value.toString().trim() @AT@ 1807 @LENGTH@ 16
---------------INS SimpleName@@Name:value @TO@ MethodInvocation@@value.toString().trim() @AT@ 1807 @LENGTH@ 5
---------------INS SimpleName@@MethodName:trim:[] @TO@ MethodInvocation@@value.toString().trim() @AT@ 1824 @LENGTH@ 6


UPD ExpressionStatement@@MethodInvocation:LOG.info("Asked to die via task heartbeat") @TO@ MethodInvocation:LOG.info("Asked to die via task heartbeat: {}",task.getTaskAttemptID()) @AT@ 9528 @LENGTH@ 44
---UPD MethodInvocation@@LOG.info("Asked to die via task heartbeat") @TO@ LOG.info("Asked to die via task heartbeat: {}",task.getTaskAttemptID()) @AT@ 9528 @LENGTH@ 43
------UPD SimpleName@@MethodName:info:["Asked to die via task heartbeat"] @TO@ MethodName:info:["Asked to die via task heartbeat: {}", task.getTaskAttemptID()] @AT@ 9532 @LENGTH@ 39
---------UPD StringLiteral@@"Asked to die via task heartbeat" @TO@ "Asked to die via task heartbeat: {}" @AT@ 9537 @LENGTH@ 33
---------INS MethodInvocation@@task.getTaskAttemptID() @TO@ SimpleName@@MethodName:info:["Asked to die via task heartbeat"] @AT@ 9576 @LENGTH@ 23
------------INS SimpleName@@Name:task @TO@ MethodInvocation@@task.getTaskAttemptID() @AT@ 9576 @LENGTH@ 4
------------INS SimpleName@@MethodName:getTaskAttemptID:[] @TO@ MethodInvocation@@task.getTaskAttemptID() @AT@ 9581 @LENGTH@ 18


UPD ExpressionStatement@@MethodInvocation:service.process(name,exchange,(data,error) -> {
  if (error != null) {
    data.setException(error);
  }
  if (callback != null) {
    callback.done(false);
  }
}
) @TO@ MethodInvocation:service.process(name,exchange,(data,error) -> {
  if (error != null) {
    data.setException(error);
  }
  callback.done(false);
}
) @AT@ 1576 @LENGTH@ 240
---UPD MethodInvocation@@service.process(name,exchange,(data,error) -> {
  if (error != null) {
    data.setException(error);
  }
  if (callback != null) {
    callback.done(false);
  }
}
) @TO@ service.process(name,exchange,(data,error) -> {
  if (error != null) {
    data.setException(error);
  }
  callback.done(false);
}
) @AT@ 1576 @LENGTH@ 239
------UPD SimpleName@@MethodName:process:[name, exchange, (data,error) -> {
  if (error != null) {
    data.setException(error);
  }
  if (callback != null) {
    callback.done(false);
  }
}
] @TO@ MethodName:process:[name, exchange, (data,error) -> {
  if (error != null) {
    data.setException(error);
  }
  callback.done(false);
}
] @AT@ 1584 @LENGTH@ 231
---------UPD LambdaExpression@@(data,error) -> {
  if (error != null) {
    data.setException(error);
  }
  if (callback != null) {
    callback.done(false);
  }
}
 @TO@ (data,error) -> {
  if (error != null) {
    data.setException(error);
  }
  callback.done(false);
}
 @AT@ 1608 @LENGTH@ 206
------------DEL IfStatement@@if (callback != null) {  callback.done(false);} @AT@ 1729 @LENGTH@ 75
---------------DEL InfixExpression@@callback != null @AT@ 1733 @LENGTH@ 16
------------------DEL SimpleName@@callback @AT@ 1733 @LENGTH@ 8
------------------DEL Operator@@!= @AT@ 1741 @LENGTH@ 2
------------------DEL NullLiteral@@null @AT@ 1745 @LENGTH@ 4
---------------DEL Block@@ThenBody:{  callback.done(false);} @AT@ 1751 @LENGTH@ 53
------------MOV ExpressionStatement@@MethodInvocation:callback.done(false) @TO@ LambdaExpression@@(data,error) -> {
  if (error != null) {
    data.setException(error);
  }
  if (callback != null) {
    callback.done(false);
  }
}
 @AT@ 1769 @LENGTH@ 21


UPD FieldDeclaration@@private, static, final, String, [ALREADY_FILTERED_ATTR_NAME=DebugFilter.class.getName().concat(".FILTERED")] @TO@ static, final, String, [ALREADY_FILTERED_ATTR_NAME=DebugFilter.class.getName().concat(".FILTERED")] @AT@ 1682 @LENGTH@ 109
---DEL Modifier@@private @AT@ 1682 @LENGTH@ 7


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<MongoDbComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<MongoDbComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5446 @LENGTH@ 340
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 5450 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5450 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  ComponentCustomizer<MongoDbComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ ThenBody:{  for (  ComponentCustomizer<MongoDbComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5506 @LENGTH@ 280
------UPD EnhancedForStatement@@for (ComponentCustomizer<MongoDbComponent> configurer : customizers) {  LOGGER.debug("Configure component {}, with configurer {}",component,configurer);  configurer.customize(component);} @TO@ for (ComponentCustomizer<MongoDbComponent> customizer : customizers) {  LOGGER.debug("Configure component {}, with customizer {}",component,customizer);  customizer.customize(component);} @AT@ 5520 @LENGTH@ 256
---------UPD SingleVariableDeclaration@@ComponentCustomizer<MongoDbComponent> configurer @TO@ ComponentCustomizer<MongoDbComponent> customizer @AT@ 5525 @LENGTH@ 48
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5563 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5607 @LENGTH@ 106
------------UPD MethodInvocation@@LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5607 @LENGTH@ 105
---------------UPD SimpleName@@MethodName:debug:["Configure component {}, with configurer {}", component, configurer] @TO@ MethodName:debug:["Configure component {}, with customizer {}", component, customizer] @AT@ 5614 @LENGTH@ 98
------------------UPD StringLiteral@@"Configure component {}, with configurer {}" @TO@ "Configure component {}, with customizer {}" @AT@ 5620 @LENGTH@ 44
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5701 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(component) @TO@ MethodInvocation:customizer.customize(component) @AT@ 5730 @LENGTH@ 32
------------UPD MethodInvocation@@configurer.customize(component) @TO@ customizer.customize(component) @AT@ 5730 @LENGTH@ 31
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5730 @LENGTH@ 10


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<RefComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<RefComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5378 @LENGTH@ 336
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 5382 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5382 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  ComponentCustomizer<RefComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ ThenBody:{  for (  ComponentCustomizer<RefComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5438 @LENGTH@ 276
------UPD EnhancedForStatement@@for (ComponentCustomizer<RefComponent> configurer : customizers) {  LOGGER.debug("Configure component {}, with configurer {}",component,configurer);  configurer.customize(component);} @TO@ for (ComponentCustomizer<RefComponent> customizer : customizers) {  LOGGER.debug("Configure component {}, with customizer {}",component,customizer);  customizer.customize(component);} @AT@ 5452 @LENGTH@ 252
---------UPD SingleVariableDeclaration@@ComponentCustomizer<RefComponent> configurer @TO@ ComponentCustomizer<RefComponent> customizer @AT@ 5457 @LENGTH@ 44
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5491 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5535 @LENGTH@ 106
------------UPD MethodInvocation@@LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5535 @LENGTH@ 105
---------------UPD SimpleName@@MethodName:debug:["Configure component {}, with configurer {}", component, configurer] @TO@ MethodName:debug:["Configure component {}, with customizer {}", component, customizer] @AT@ 5542 @LENGTH@ 98
------------------UPD StringLiteral@@"Configure component {}, with configurer {}" @TO@ "Configure component {}, with customizer {}" @AT@ 5548 @LENGTH@ 44
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5629 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(component) @TO@ MethodInvocation:customizer.customize(component) @AT@ 5658 @LENGTH@ 32
------------UPD MethodInvocation@@configurer.customize(component) @TO@ customizer.customize(component) @AT@ 5658 @LENGTH@ 31
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5658 @LENGTH@ 10


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled(); @AT@ 5328 @LENGTH@ 160
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5336 @LENGTH@ 151
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5336 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5353 @LENGTH@ 134
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 5353 @LENGTH@ 64
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5353 @LENGTH@ 35
---------UPD MethodInvocation@@componentConfiguration.getConfigurer().isEnabled() @TO@ componentConfiguration.getCustomizer().isEnabled() @AT@ 5437 @LENGTH@ 50
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5437 @LENGTH@ 38


UPD ReturnStatement@@MethodInvocation:OrcFile.createWriter(path,createOrcWriterOptions(sourceOi,conf,cacheWriter,allocSize)) @TO@ MethodInvocation:OrcFile.createWriter(path,createOrcWriterOptions(oi,conf,cacheWriter,allocSize)) @AT@ 60723 @LENGTH@ 109
---UPD MethodInvocation@@OrcFile.createWriter(path,createOrcWriterOptions(sourceOi,conf,cacheWriter,allocSize)) @TO@ OrcFile.createWriter(path,createOrcWriterOptions(oi,conf,cacheWriter,allocSize)) @AT@ 60730 @LENGTH@ 101
------UPD SimpleName@@MethodName:createWriter:[path, createOrcWriterOptions(sourceOi,conf,cacheWriter,allocSize)] @TO@ MethodName:createWriter:[path, createOrcWriterOptions(oi,conf,cacheWriter,allocSize)] @AT@ 60738 @LENGTH@ 93
---------UPD MethodInvocation@@createOrcWriterOptions(sourceOi,conf,cacheWriter,allocSize) @TO@ createOrcWriterOptions(oi,conf,cacheWriter,allocSize) @AT@ 60757 @LENGTH@ 73
------------UPD SimpleName@@MethodName:createOrcWriterOptions:[sourceOi, conf, cacheWriter, allocSize] @TO@ MethodName:createOrcWriterOptions:[oi, conf, cacheWriter, allocSize] @AT@ 60757 @LENGTH@ 73
---------------UPD SimpleName@@sourceOi @TO@ oi @AT@ 60791 @LENGTH@ 8


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<KinesisComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<KinesisComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5462 @LENGTH@ 340
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 5466 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5466 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  ComponentCustomizer<KinesisComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ ThenBody:{  for (  ComponentCustomizer<KinesisComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5522 @LENGTH@ 280
------UPD EnhancedForStatement@@for (ComponentCustomizer<KinesisComponent> configurer : customizers) {  LOGGER.debug("Configure component {}, with configurer {}",component,configurer);  configurer.customize(component);} @TO@ for (ComponentCustomizer<KinesisComponent> customizer : customizers) {  LOGGER.debug("Configure component {}, with customizer {}",component,customizer);  customizer.customize(component);} @AT@ 5536 @LENGTH@ 256
---------UPD SingleVariableDeclaration@@ComponentCustomizer<KinesisComponent> configurer @TO@ ComponentCustomizer<KinesisComponent> customizer @AT@ 5541 @LENGTH@ 48
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5579 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5623 @LENGTH@ 106
------------UPD MethodInvocation@@LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5623 @LENGTH@ 105
---------------UPD SimpleName@@MethodName:debug:["Configure component {}, with configurer {}", component, configurer] @TO@ MethodName:debug:["Configure component {}, with customizer {}", component, customizer] @AT@ 5630 @LENGTH@ 98
------------------UPD StringLiteral@@"Configure component {}, with configurer {}" @TO@ "Configure component {}, with customizer {}" @AT@ 5636 @LENGTH@ 44
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5717 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(component) @TO@ MethodInvocation:customizer.customize(component) @AT@ 5746 @LENGTH@ 32
------------UPD MethodInvocation@@configurer.customize(component) @TO@ customizer.customize(component) @AT@ 5746 @LENGTH@ 31
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5746 @LENGTH@ 10


UPD TypeDeclaration@@[public]GitHelper,  @TO@ [public, final]GitHelper,  @AT@ 1037 @LENGTH@ 3197
---INS Modifier@@final @TO@ TypeDeclaration@@[public]GitHelper,  @AT@ 1044 @LENGTH@ 5


UPD VariableDeclarationStatement@@Set<?> consumers=TestUtils.getPropertyValue(container,"consumers",Map.class).keySet(); @TO@ Set<?> consumers=TestUtils.getPropertyValue(container,"consumers",Set.class); @AT@ 19559 @LENGTH@ 90
---UPD VariableDeclarationFragment@@consumers=TestUtils.getPropertyValue(container,"consumers",Map.class).keySet() @TO@ consumers=TestUtils.getPropertyValue(container,"consumers",Set.class) @AT@ 19566 @LENGTH@ 82
------UPD MethodInvocation@@TestUtils.getPropertyValue(container,"consumers",Map.class).keySet() @TO@ TestUtils.getPropertyValue(container,"consumers",Set.class) @AT@ 19578 @LENGTH@ 70
---------DEL MethodInvocation@@MethodName:getPropertyValue:[container, "consumers", Map.class] @AT@ 19578 @LENGTH@ 61
------------DEL SimpleName@@container @AT@ 19605 @LENGTH@ 9
------------DEL StringLiteral@@"consumers" @AT@ 19616 @LENGTH@ 11
------------DEL TypeLiteral@@Map.class @AT@ 19629 @LENGTH@ 9
---------INS SimpleName@@MethodName:getPropertyValue:[container, "consumers", Set.class] @TO@ MethodInvocation@@TestUtils.getPropertyValue(container,"consumers",Map.class).keySet() @AT@ 19588 @LENGTH@ 51
------------INS SimpleName@@container @TO@ SimpleName@@MethodName:getPropertyValue:[container, "consumers", Set.class] @AT@ 19605 @LENGTH@ 9
------------INS StringLiteral@@"consumers" @TO@ SimpleName@@MethodName:getPropertyValue:[container, "consumers", Set.class] @AT@ 19616 @LENGTH@ 11
------------INS TypeLiteral@@Set.class @TO@ SimpleName@@MethodName:getPropertyValue:[container, "consumers", Set.class] @AT@ 19629 @LENGTH@ 9
---------DEL SimpleName@@MethodName:keySet:[] @AT@ 19640 @LENGTH@ 8


UPD IfStatement@@if (items.get(0) instanceof Map) {  updateCounts=namedParameterJdbcTemplate.batchUpdate(sql,items.toArray(new Map[items.size()]));} else {  SqlParameterSource[] batchArgs=new SqlParameterSource[items.size()];  int i=0;  for (  T item : items) {    batchArgs[i++]=itemSqlParameterSourceProvider.createSqlParameterSource(item);  }  updateCounts=namedParameterJdbcTemplate.batchUpdate(sql,batchArgs);} @TO@ if (items.get(0) instanceof Map && this.itemSqlParameterSourceProvider == null) {  updateCounts=namedParameterJdbcTemplate.batchUpdate(sql,items.toArray(new Map[items.size()]));} else {  SqlParameterSource[] batchArgs=new SqlParameterSource[items.size()];  int i=0;  for (  T item : items) {    batchArgs[i++]=itemSqlParameterSourceProvider.createSqlParameterSource(item);  }  updateCounts=namedParameterJdbcTemplate.batchUpdate(sql,batchArgs);} @AT@ 6534 @LENGTH@ 444
---INS InfixExpression@@items.get(0) instanceof Map && this.itemSqlParameterSourceProvider == null @TO@ IfStatement@@if (items.get(0) instanceof Map) {  updateCounts=namedParameterJdbcTemplate.batchUpdate(sql,items.toArray(new Map[items.size()]));} else {  SqlParameterSource[] batchArgs=new SqlParameterSource[items.size()];  int i=0;  for (  T item : items) {    batchArgs[i++]=itemSqlParameterSourceProvider.createSqlParameterSource(item);  }  updateCounts=namedParameterJdbcTemplate.batchUpdate(sql,batchArgs);} @AT@ 6537 @LENGTH@ 74
------MOV InstanceofExpression@@items.get(0) instanceof Map @TO@ InfixExpression@@items.get(0) instanceof Map && this.itemSqlParameterSourceProvider == null @AT@ 6537 @LENGTH@ 27
------INS Operator@@&& @TO@ InfixExpression@@items.get(0) instanceof Map && this.itemSqlParameterSourceProvider == null @AT@ 6564 @LENGTH@ 2
------INS InfixExpression@@this.itemSqlParameterSourceProvider == null @TO@ InfixExpression@@items.get(0) instanceof Map && this.itemSqlParameterSourceProvider == null @AT@ 6568 @LENGTH@ 43
---------INS FieldAccess@@this.itemSqlParameterSourceProvider @TO@ InfixExpression@@this.itemSqlParameterSourceProvider == null @AT@ 6568 @LENGTH@ 35
------------INS ThisExpression@@this @TO@ FieldAccess@@this.itemSqlParameterSourceProvider @AT@ 6568 @LENGTH@ 4
------------INS SimpleName@@itemSqlParameterSourceProvider @TO@ FieldAccess@@this.itemSqlParameterSourceProvider @AT@ 6573 @LENGTH@ 30
---------INS Operator@@== @TO@ InfixExpression@@this.itemSqlParameterSourceProvider == null @AT@ 6603 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@this.itemSqlParameterSourceProvider == null @AT@ 6607 @LENGTH@ 4


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<HipchatComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<HipchatComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5446 @LENGTH@ 340
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 5450 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5450 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  ComponentCustomizer<HipchatComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ ThenBody:{  for (  ComponentCustomizer<HipchatComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5506 @LENGTH@ 280
------UPD EnhancedForStatement@@for (ComponentCustomizer<HipchatComponent> configurer : customizers) {  LOGGER.debug("Configure component {}, with configurer {}",component,configurer);  configurer.customize(component);} @TO@ for (ComponentCustomizer<HipchatComponent> customizer : customizers) {  LOGGER.debug("Configure component {}, with customizer {}",component,customizer);  customizer.customize(component);} @AT@ 5520 @LENGTH@ 256
---------UPD SingleVariableDeclaration@@ComponentCustomizer<HipchatComponent> configurer @TO@ ComponentCustomizer<HipchatComponent> customizer @AT@ 5525 @LENGTH@ 48
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5563 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5607 @LENGTH@ 106
------------UPD MethodInvocation@@LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5607 @LENGTH@ 105
---------------UPD SimpleName@@MethodName:debug:["Configure component {}, with configurer {}", component, configurer] @TO@ MethodName:debug:["Configure component {}, with customizer {}", component, customizer] @AT@ 5614 @LENGTH@ 98
------------------UPD StringLiteral@@"Configure component {}, with configurer {}" @TO@ "Configure component {}, with customizer {}" @AT@ 5620 @LENGTH@ 44
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5701 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(component) @TO@ MethodInvocation:customizer.customize(component) @AT@ 5730 @LENGTH@ 32
------------UPD MethodInvocation@@configurer.customize(component) @TO@ customizer.customize(component) @AT@ 5730 @LENGTH@ 31
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5730 @LENGTH@ 10


UPD VariableDeclarationStatement@@TypeInformation<?> typeInfo=typeMapper.readType(document); @TO@ Optional<TypeInformation<?>> typeInfo=typeMapper.readType(document); @AT@ 6296 @LENGTH@ 60
---DEL ParameterizedType@@TypeInformation<?> @AT@ 6296 @LENGTH@ 18
---INS ParameterizedType@@Optional<TypeInformation<?>> @TO@ VariableDeclarationStatement@@TypeInformation<?> typeInfo=typeMapper.readType(document); @AT@ 6323 @LENGTH@ 28
------INS SimpleType@@Optional @TO@ ParameterizedType@@Optional<TypeInformation<?>> @AT@ 6323 @LENGTH@ 8
------INS ParameterizedType@@TypeInformation<?> @TO@ ParameterizedType@@Optional<TypeInformation<?>> @AT@ 6332 @LENGTH@ 18
---------MOV SimpleType@@TypeInformation @TO@ ParameterizedType@@TypeInformation<?> @AT@ 6296 @LENGTH@ 15
---------MOV WildcardType@@? @TO@ ParameterizedType@@TypeInformation<?> @AT@ 6312 @LENGTH@ 1


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<ZendeskComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<ZendeskComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5446 @LENGTH@ 340
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 5450 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5450 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  ComponentCustomizer<ZendeskComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ ThenBody:{  for (  ComponentCustomizer<ZendeskComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5506 @LENGTH@ 280
------UPD EnhancedForStatement@@for (ComponentCustomizer<ZendeskComponent> configurer : customizers) {  LOGGER.debug("Configure component {}, with configurer {}",component,configurer);  configurer.customize(component);} @TO@ for (ComponentCustomizer<ZendeskComponent> customizer : customizers) {  LOGGER.debug("Configure component {}, with customizer {}",component,customizer);  customizer.customize(component);} @AT@ 5520 @LENGTH@ 256
---------UPD SingleVariableDeclaration@@ComponentCustomizer<ZendeskComponent> configurer @TO@ ComponentCustomizer<ZendeskComponent> customizer @AT@ 5525 @LENGTH@ 48
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5563 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5607 @LENGTH@ 106
------------UPD MethodInvocation@@LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5607 @LENGTH@ 105
---------------UPD SimpleName@@MethodName:debug:["Configure component {}, with configurer {}", component, configurer] @TO@ MethodName:debug:["Configure component {}, with customizer {}", component, customizer] @AT@ 5614 @LENGTH@ 98
------------------UPD StringLiteral@@"Configure component {}, with configurer {}" @TO@ "Configure component {}, with customizer {}" @AT@ 5620 @LENGTH@ 44
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5701 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(component) @TO@ MethodInvocation:customizer.customize(component) @AT@ 5730 @LENGTH@ 32
------------UPD MethodInvocation@@configurer.customize(component) @TO@ customizer.customize(component) @AT@ 5730 @LENGTH@ 31
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5730 @LENGTH@ 10


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled(); @AT@ 5341 @LENGTH@ 160
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5349 @LENGTH@ 151
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5349 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5366 @LENGTH@ 134
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 5366 @LENGTH@ 64
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5366 @LENGTH@ 35
---------UPD MethodInvocation@@componentConfiguration.getConfigurer().isEnabled() @TO@ componentConfiguration.getCustomizer().isEnabled() @AT@ 5450 @LENGTH@ 50
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5450 @LENGTH@ 38


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<RmiComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<RmiComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5378 @LENGTH@ 336
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 5382 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5382 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  ComponentCustomizer<RmiComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ ThenBody:{  for (  ComponentCustomizer<RmiComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5438 @LENGTH@ 276
------UPD EnhancedForStatement@@for (ComponentCustomizer<RmiComponent> configurer : customizers) {  LOGGER.debug("Configure component {}, with configurer {}",component,configurer);  configurer.customize(component);} @TO@ for (ComponentCustomizer<RmiComponent> customizer : customizers) {  LOGGER.debug("Configure component {}, with customizer {}",component,customizer);  customizer.customize(component);} @AT@ 5452 @LENGTH@ 252
---------UPD SingleVariableDeclaration@@ComponentCustomizer<RmiComponent> configurer @TO@ ComponentCustomizer<RmiComponent> customizer @AT@ 5457 @LENGTH@ 44
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5491 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5535 @LENGTH@ 106
------------UPD MethodInvocation@@LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5535 @LENGTH@ 105
---------------UPD SimpleName@@MethodName:debug:["Configure component {}, with configurer {}", component, configurer] @TO@ MethodName:debug:["Configure component {}, with customizer {}", component, customizer] @AT@ 5542 @LENGTH@ 98
------------------UPD StringLiteral@@"Configure component {}, with configurer {}" @TO@ "Configure component {}, with customizer {}" @AT@ 5548 @LENGTH@ 44
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5629 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(component) @TO@ MethodInvocation:customizer.customize(component) @AT@ 5658 @LENGTH@ 32
------------UPD MethodInvocation@@configurer.customize(component) @TO@ customizer.customize(component) @AT@ 5658 @LENGTH@ 31
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5658 @LENGTH@ 10


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && dataformatConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && dataformatConfiguration.getCustomizer().isEnabled(); @AT@ 5138 @LENGTH@ 177
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && dataformatConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && dataformatConfiguration.getCustomizer().isEnabled() @AT@ 5146 @LENGTH@ 168
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5146 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && dataformatConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && dataformatConfiguration.getCustomizer().isEnabled() @AT@ 5163 @LENGTH@ 151
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 5163 @LENGTH@ 72
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5163 @LENGTH@ 35
---------UPD MethodInvocation@@dataformatConfiguration.getConfigurer().isEnabled() @TO@ dataformatConfiguration.getCustomizer().isEnabled() @AT@ 5263 @LENGTH@ 51
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5263 @LENGTH@ 39


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<ReactiveStreamsComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<ReactiveStreamsComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5618 @LENGTH@ 348
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 5622 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5622 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  ComponentCustomizer<ReactiveStreamsComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ ThenBody:{  for (  ComponentCustomizer<ReactiveStreamsComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5678 @LENGTH@ 288
------UPD EnhancedForStatement@@for (ComponentCustomizer<ReactiveStreamsComponent> configurer : customizers) {  LOGGER.debug("Configure component {}, with configurer {}",component,configurer);  configurer.customize(component);} @TO@ for (ComponentCustomizer<ReactiveStreamsComponent> customizer : customizers) {  LOGGER.debug("Configure component {}, with customizer {}",component,customizer);  customizer.customize(component);} @AT@ 5692 @LENGTH@ 264
---------UPD SingleVariableDeclaration@@ComponentCustomizer<ReactiveStreamsComponent> configurer @TO@ ComponentCustomizer<ReactiveStreamsComponent> customizer @AT@ 5697 @LENGTH@ 56
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5743 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5787 @LENGTH@ 106
------------UPD MethodInvocation@@LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5787 @LENGTH@ 105
---------------UPD SimpleName@@MethodName:debug:["Configure component {}, with configurer {}", component, configurer] @TO@ MethodName:debug:["Configure component {}, with customizer {}", component, customizer] @AT@ 5794 @LENGTH@ 98
------------------UPD StringLiteral@@"Configure component {}, with configurer {}" @TO@ "Configure component {}, with customizer {}" @AT@ 5800 @LENGTH@ 44
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5881 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(component) @TO@ MethodInvocation:customizer.customize(component) @AT@ 5910 @LENGTH@ 32
------------UPD MethodInvocation@@configurer.customize(component) @TO@ customizer.customize(component) @AT@ 5910 @LENGTH@ 31
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5910 @LENGTH@ 10


UPD MethodDeclaration@@public, IsQuery<T>, MethodName:skippig, int skip,  @TO@ public, IsQuery<T>, MethodName:skippig, long skip,  @AT@ 2455 @LENGTH@ 79
---UPD SingleVariableDeclaration@@int skip @TO@ long skip @AT@ 2481 @LENGTH@ 8
------UPD PrimitiveType@@int @TO@ long @AT@ 2481 @LENGTH@ 3


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<FacebookComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<FacebookComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5463 @LENGTH@ 341
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 5467 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5467 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  ComponentCustomizer<FacebookComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ ThenBody:{  for (  ComponentCustomizer<FacebookComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5523 @LENGTH@ 281
------UPD EnhancedForStatement@@for (ComponentCustomizer<FacebookComponent> configurer : customizers) {  LOGGER.debug("Configure component {}, with configurer {}",component,configurer);  configurer.customize(component);} @TO@ for (ComponentCustomizer<FacebookComponent> customizer : customizers) {  LOGGER.debug("Configure component {}, with customizer {}",component,customizer);  customizer.customize(component);} @AT@ 5537 @LENGTH@ 257
---------UPD SingleVariableDeclaration@@ComponentCustomizer<FacebookComponent> configurer @TO@ ComponentCustomizer<FacebookComponent> customizer @AT@ 5542 @LENGTH@ 49
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5581 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5625 @LENGTH@ 106
------------UPD MethodInvocation@@LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5625 @LENGTH@ 105
---------------UPD SimpleName@@MethodName:debug:["Configure component {}, with configurer {}", component, configurer] @TO@ MethodName:debug:["Configure component {}, with customizer {}", component, customizer] @AT@ 5632 @LENGTH@ 98
------------------UPD StringLiteral@@"Configure component {}, with configurer {}" @TO@ "Configure component {}, with customizer {}" @AT@ 5638 @LENGTH@ 44
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5719 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(component) @TO@ MethodInvocation:customizer.customize(component) @AT@ 5748 @LENGTH@ 32
------------UPD MethodInvocation@@configurer.customize(component) @TO@ customizer.customize(component) @AT@ 5748 @LENGTH@ 31
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5748 @LENGTH@ 10


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled(); @AT@ 5225 @LENGTH@ 160
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5233 @LENGTH@ 151
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5233 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5250 @LENGTH@ 134
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 5250 @LENGTH@ 64
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5250 @LENGTH@ 35
---------UPD MethodInvocation@@componentConfiguration.getConfigurer().isEnabled() @TO@ componentConfiguration.getCustomizer().isEnabled() @AT@ 5334 @LENGTH@ 50
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5334 @LENGTH@ 38


UPD VariableDeclarationStatement@@ConnectionFactory connectionFactory=new ActiveMQConnectionFactory(broker.getTcpConnectorUri()); @TO@ ConnectionFactory connectionFactory=new MockConnectionFactory(broker.getTcpConnectorUri()); @AT@ 1480 @LENGTH@ 97
---UPD VariableDeclarationFragment@@connectionFactory=new ActiveMQConnectionFactory(broker.getTcpConnectorUri()) @TO@ connectionFactory=new MockConnectionFactory(broker.getTcpConnectorUri()) @AT@ 1498 @LENGTH@ 78
------UPD ClassInstanceCreation@@ActiveMQConnectionFactory[broker.getTcpConnectorUri()] @TO@ MockConnectionFactory[broker.getTcpConnectorUri()] @AT@ 1518 @LENGTH@ 58
---------UPD SimpleType@@ActiveMQConnectionFactory @TO@ MockConnectionFactory @AT@ 1522 @LENGTH@ 25


UPD TypeDeclaration@@CodahaleReporter, [Closeable, Reporter] @TO@ [public]CodahaleReporter, [Closeable, Reporter] @AT@ 939 @LENGTH@ 109
---INS Modifier@@public @TO@ TypeDeclaration@@CodahaleReporter, [Closeable, Reporter] @AT@ 929 @LENGTH@ 6


UPD IfStatement@@if (this.recoveryListener != null && connection instanceof AutorecoveringConnection) {  ((AutorecoveringConnection)connection).addRecoveryListener(this.recoveryListener);} @TO@ if (this.recoveryListener != null && rabbitConnection instanceof AutorecoveringConnection) {  ((AutorecoveringConnection)rabbitConnection).addRecoveryListener(this.recoveryListener);} @AT@ 10690 @LENGTH@ 179
---UPD InfixExpression@@this.recoveryListener != null && connection instanceof AutorecoveringConnection @TO@ this.recoveryListener != null && rabbitConnection instanceof AutorecoveringConnection @AT@ 10694 @LENGTH@ 79
------UPD InstanceofExpression@@connection instanceof AutorecoveringConnection @TO@ rabbitConnection instanceof AutorecoveringConnection @AT@ 10727 @LENGTH@ 46
---------UPD SimpleName@@connection @TO@ rabbitConnection @AT@ 10727 @LENGTH@ 10
---UPD Block@@ThenBody:{  ((AutorecoveringConnection)connection).addRecoveryListener(this.recoveryListener);} @TO@ ThenBody:{  ((AutorecoveringConnection)rabbitConnection).addRecoveryListener(this.recoveryListener);} @AT@ 10775 @LENGTH@ 94
------UPD ExpressionStatement@@MethodInvocation:((AutorecoveringConnection)connection).addRecoveryListener(this.recoveryListener) @TO@ MethodInvocation:((AutorecoveringConnection)rabbitConnection).addRecoveryListener(this.recoveryListener) @AT@ 10781 @LENGTH@ 83
---------UPD MethodInvocation@@((AutorecoveringConnection)connection).addRecoveryListener(this.recoveryListener) @TO@ ((AutorecoveringConnection)rabbitConnection).addRecoveryListener(this.recoveryListener) @AT@ 10781 @LENGTH@ 82
------------UPD ParenthesizedExpression@@((AutorecoveringConnection)connection) @TO@ ((AutorecoveringConnection)rabbitConnection) @AT@ 10781 @LENGTH@ 39
---------------UPD CastExpression@@(AutorecoveringConnection)connection @TO@ (AutorecoveringConnection)rabbitConnection @AT@ 10782 @LENGTH@ 37
------------------UPD SimpleName@@connection @TO@ rabbitConnection @AT@ 10809 @LENGTH@ 10


UPD MethodDeclaration@@void, MethodName:init, Exchange exchange, JettyHttpBinding jettyBinding, final HttpClient client, AsyncCallback callback,  @TO@ void, MethodName:init, Exchange exchange, JettyHttpBinding jettyBinding, HttpClient client, AsyncCallback callback,  @AT@ 1168 @LENGTH@ 104
---UPD SingleVariableDeclaration@@final HttpClient client @TO@ HttpClient client @AT@ 1223 @LENGTH@ 23
------DEL Modifier@@final @AT@ 1223 @LENGTH@ 5


UPD ExpressionStatement@@MethodInvocation:assertSame("Wrong factory",factory,map.get("iOFactory")) @TO@ MethodInvocation:assertSame("Wrong factory",factory,map.get("IOFactory")) @AT@ 10481 @LENGTH@ 59
---UPD MethodInvocation@@assertSame("Wrong factory",factory,map.get("iOFactory")) @TO@ assertSame("Wrong factory",factory,map.get("IOFactory")) @AT@ 10481 @LENGTH@ 58
------UPD SimpleName@@MethodName:assertSame:["Wrong factory", factory, map.get("iOFactory")] @TO@ MethodName:assertSame:["Wrong factory", factory, map.get("IOFactory")] @AT@ 10481 @LENGTH@ 58
---------UPD MethodInvocation@@map.get("iOFactory") @TO@ map.get("IOFactory") @AT@ 10518 @LENGTH@ 20
------------UPD SimpleName@@MethodName:get:["iOFactory"] @TO@ MethodName:get:["IOFactory"] @AT@ 10522 @LENGTH@ 16
---------------UPD StringLiteral@@"iOFactory" @TO@ "IOFactory" @AT@ 10526 @LENGTH@ 11


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<XmlSignatureComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<XmlSignatureComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5539 @LENGTH@ 345
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 5543 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5543 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  ComponentCustomizer<XmlSignatureComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ ThenBody:{  for (  ComponentCustomizer<XmlSignatureComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5599 @LENGTH@ 285
------UPD EnhancedForStatement@@for (ComponentCustomizer<XmlSignatureComponent> configurer : customizers) {  LOGGER.debug("Configure component {}, with configurer {}",component,configurer);  configurer.customize(component);} @TO@ for (ComponentCustomizer<XmlSignatureComponent> customizer : customizers) {  LOGGER.debug("Configure component {}, with customizer {}",component,customizer);  customizer.customize(component);} @AT@ 5613 @LENGTH@ 261
---------UPD SingleVariableDeclaration@@ComponentCustomizer<XmlSignatureComponent> configurer @TO@ ComponentCustomizer<XmlSignatureComponent> customizer @AT@ 5618 @LENGTH@ 53
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5661 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5705 @LENGTH@ 106
------------UPD MethodInvocation@@LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5705 @LENGTH@ 105
---------------UPD SimpleName@@MethodName:debug:["Configure component {}, with configurer {}", component, configurer] @TO@ MethodName:debug:["Configure component {}, with customizer {}", component, customizer] @AT@ 5712 @LENGTH@ 98
------------------UPD StringLiteral@@"Configure component {}, with configurer {}" @TO@ "Configure component {}, with customizer {}" @AT@ 5718 @LENGTH@ 44
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5799 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(component) @TO@ MethodInvocation:customizer.customize(component) @AT@ 5828 @LENGTH@ 32
------------UPD MethodInvocation@@configurer.customize(component) @TO@ customizer.customize(component) @AT@ 5828 @LENGTH@ 31
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5828 @LENGTH@ 10


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<IgniteCacheComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<IgniteCacheComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5530 @LENGTH@ 344
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 5534 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5534 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  ComponentCustomizer<IgniteCacheComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ ThenBody:{  for (  ComponentCustomizer<IgniteCacheComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5590 @LENGTH@ 284
------UPD EnhancedForStatement@@for (ComponentCustomizer<IgniteCacheComponent> configurer : customizers) {  LOGGER.debug("Configure component {}, with configurer {}",component,configurer);  configurer.customize(component);} @TO@ for (ComponentCustomizer<IgniteCacheComponent> customizer : customizers) {  LOGGER.debug("Configure component {}, with customizer {}",component,customizer);  customizer.customize(component);} @AT@ 5604 @LENGTH@ 260
---------UPD SingleVariableDeclaration@@ComponentCustomizer<IgniteCacheComponent> configurer @TO@ ComponentCustomizer<IgniteCacheComponent> customizer @AT@ 5609 @LENGTH@ 52
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5651 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5695 @LENGTH@ 106
------------UPD MethodInvocation@@LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5695 @LENGTH@ 105
---------------UPD SimpleName@@MethodName:debug:["Configure component {}, with configurer {}", component, configurer] @TO@ MethodName:debug:["Configure component {}, with customizer {}", component, customizer] @AT@ 5702 @LENGTH@ 98
------------------UPD StringLiteral@@"Configure component {}, with configurer {}" @TO@ "Configure component {}, with customizer {}" @AT@ 5708 @LENGTH@ 44
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5789 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(component) @TO@ MethodInvocation:customizer.customize(component) @AT@ 5818 @LENGTH@ 32
------------UPD MethodInvocation@@configurer.customize(component) @TO@ customizer.customize(component) @AT@ 5818 @LENGTH@ 31
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5818 @LENGTH@ 10


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled(); @AT@ 5449 @LENGTH@ 160
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5457 @LENGTH@ 151
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5457 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5474 @LENGTH@ 134
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 5474 @LENGTH@ 64
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5474 @LENGTH@ 35
---------UPD MethodInvocation@@componentConfiguration.getConfigurer().isEnabled() @TO@ componentConfiguration.getCustomizer().isEnabled() @AT@ 5558 @LENGTH@ 50
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5558 @LENGTH@ 38


UPD ExpressionStatement@@MethodInvocation:fail("Parse exception exptected") @TO@ MethodInvocation:fail("Parse exception expected") @AT@ 12353 @LENGTH@ 34
---UPD MethodInvocation@@fail("Parse exception exptected") @TO@ fail("Parse exception expected") @AT@ 12353 @LENGTH@ 33
------UPD SimpleName@@MethodName:fail:["Parse exception exptected"] @TO@ MethodName:fail:["Parse exception expected"] @AT@ 12353 @LENGTH@ 33
---------UPD StringLiteral@@"Parse exception exptected" @TO@ "Parse exception expected" @AT@ 12358 @LENGTH@ 27


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled(); @AT@ 5328 @LENGTH@ 160
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5336 @LENGTH@ 151
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5336 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5353 @LENGTH@ 134
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 5353 @LENGTH@ 64
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5353 @LENGTH@ 35
---------UPD MethodInvocation@@componentConfiguration.getConfigurer().isEnabled() @TO@ componentConfiguration.getCustomizer().isEnabled() @AT@ 5437 @LENGTH@ 50
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5437 @LENGTH@ 38


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<ElsqlComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<ElsqlComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5412 @LENGTH@ 338
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 5416 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5416 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  ComponentCustomizer<ElsqlComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ ThenBody:{  for (  ComponentCustomizer<ElsqlComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5472 @LENGTH@ 278
------UPD EnhancedForStatement@@for (ComponentCustomizer<ElsqlComponent> configurer : customizers) {  LOGGER.debug("Configure component {}, with configurer {}",component,configurer);  configurer.customize(component);} @TO@ for (ComponentCustomizer<ElsqlComponent> customizer : customizers) {  LOGGER.debug("Configure component {}, with customizer {}",component,customizer);  customizer.customize(component);} @AT@ 5486 @LENGTH@ 254
---------UPD SingleVariableDeclaration@@ComponentCustomizer<ElsqlComponent> configurer @TO@ ComponentCustomizer<ElsqlComponent> customizer @AT@ 5491 @LENGTH@ 46
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5527 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5571 @LENGTH@ 106
------------UPD MethodInvocation@@LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5571 @LENGTH@ 105
---------------UPD SimpleName@@MethodName:debug:["Configure component {}, with configurer {}", component, configurer] @TO@ MethodName:debug:["Configure component {}, with customizer {}", component, customizer] @AT@ 5578 @LENGTH@ 98
------------------UPD StringLiteral@@"Configure component {}, with configurer {}" @TO@ "Configure component {}, with customizer {}" @AT@ 5584 @LENGTH@ 44
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5665 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(component) @TO@ MethodInvocation:customizer.customize(component) @AT@ 5694 @LENGTH@ 32
------------UPD MethodInvocation@@configurer.customize(component) @TO@ customizer.customize(component) @AT@ 5694 @LENGTH@ 31
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5694 @LENGTH@ 10


INS IfStatement@@if (routingKey.startsWith("amq.rabbitmq.reply-to")) {  message.setHeader(RabbitMQConstants.EXCHANGE_NAME,"");} @TO@ MethodDeclaration@@private, Message, MethodName:resolveMessageFrom, final Exchange camelExchange,  @AT@ 3278 @LENGTH@ 177
---INS MethodInvocation@@routingKey.startsWith("amq.rabbitmq.reply-to") @TO@ IfStatement@@if (routingKey.startsWith("amq.rabbitmq.reply-to")) {  message.setHeader(RabbitMQConstants.EXCHANGE_NAME,"");} @AT@ 3282 @LENGTH@ 46
------INS SimpleName@@Name:routingKey @TO@ MethodInvocation@@routingKey.startsWith("amq.rabbitmq.reply-to") @AT@ 3282 @LENGTH@ 10
------INS SimpleName@@MethodName:startsWith:["amq.rabbitmq.reply-to"] @TO@ MethodInvocation@@routingKey.startsWith("amq.rabbitmq.reply-to") @AT@ 3293 @LENGTH@ 35
---------INS StringLiteral@@"amq.rabbitmq.reply-to" @TO@ SimpleName@@MethodName:startsWith:["amq.rabbitmq.reply-to"] @AT@ 3304 @LENGTH@ 23
---INS Block@@ThenBody:{  message.setHeader(RabbitMQConstants.EXCHANGE_NAME,"");} @TO@ IfStatement@@if (routingKey.startsWith("amq.rabbitmq.reply-to")) {  message.setHeader(RabbitMQConstants.EXCHANGE_NAME,"");} @AT@ 3330 @LENGTH@ 125
------INS ExpressionStatement@@MethodInvocation:message.setHeader(RabbitMQConstants.EXCHANGE_NAME,"") @TO@ Block@@ThenBody:{  message.setHeader(RabbitMQConstants.EXCHANGE_NAME,"");} @AT@ 3344 @LENGTH@ 55
---------INS MethodInvocation@@message.setHeader(RabbitMQConstants.EXCHANGE_NAME,"") @TO@ ExpressionStatement@@MethodInvocation:message.setHeader(RabbitMQConstants.EXCHANGE_NAME,"") @AT@ 3344 @LENGTH@ 54
------------INS SimpleName@@Name:message @TO@ MethodInvocation@@message.setHeader(RabbitMQConstants.EXCHANGE_NAME,"") @AT@ 3344 @LENGTH@ 7
------------INS SimpleName@@MethodName:setHeader:[RabbitMQConstants.EXCHANGE_NAME, ""] @TO@ MethodInvocation@@message.setHeader(RabbitMQConstants.EXCHANGE_NAME,"") @AT@ 3352 @LENGTH@ 46
---------------INS QualifiedName@@RabbitMQConstants.EXCHANGE_NAME @TO@ SimpleName@@MethodName:setHeader:[RabbitMQConstants.EXCHANGE_NAME, ""] @AT@ 3362 @LENGTH@ 31
------------------INS SimpleName@@RabbitMQConstants @TO@ QualifiedName@@RabbitMQConstants.EXCHANGE_NAME @AT@ 3362 @LENGTH@ 17
------------------INS SimpleName@@EXCHANGE_NAME @TO@ QualifiedName@@RabbitMQConstants.EXCHANGE_NAME @AT@ 3380 @LENGTH@ 13
---------------INS StringLiteral@@"" @TO@ SimpleName@@MethodName:setHeader:[RabbitMQConstants.EXCHANGE_NAME, ""] @AT@ 3395 @LENGTH@ 2


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && dataformatConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && dataformatConfiguration.getCustomizer().isEnabled(); @AT@ 5090 @LENGTH@ 177
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && dataformatConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && dataformatConfiguration.getCustomizer().isEnabled() @AT@ 5098 @LENGTH@ 168
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5098 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && dataformatConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && dataformatConfiguration.getCustomizer().isEnabled() @AT@ 5115 @LENGTH@ 151
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 5115 @LENGTH@ 72
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5115 @LENGTH@ 35
---------UPD MethodInvocation@@dataformatConfiguration.getConfigurer().isEnabled() @TO@ dataformatConfiguration.getCustomizer().isEnabled() @AT@ 5215 @LENGTH@ 51
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5215 @LENGTH@ 39


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<SparkComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<SparkComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5412 @LENGTH@ 338
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 5416 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5416 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  ComponentCustomizer<SparkComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ ThenBody:{  for (  ComponentCustomizer<SparkComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5472 @LENGTH@ 278
------UPD EnhancedForStatement@@for (ComponentCustomizer<SparkComponent> configurer : customizers) {  LOGGER.debug("Configure component {}, with configurer {}",component,configurer);  configurer.customize(component);} @TO@ for (ComponentCustomizer<SparkComponent> customizer : customizers) {  LOGGER.debug("Configure component {}, with customizer {}",component,customizer);  customizer.customize(component);} @AT@ 5486 @LENGTH@ 254
---------UPD SingleVariableDeclaration@@ComponentCustomizer<SparkComponent> configurer @TO@ ComponentCustomizer<SparkComponent> customizer @AT@ 5491 @LENGTH@ 46
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5527 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5571 @LENGTH@ 106
------------UPD MethodInvocation@@LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5571 @LENGTH@ 105
---------------UPD SimpleName@@MethodName:debug:["Configure component {}, with configurer {}", component, configurer] @TO@ MethodName:debug:["Configure component {}, with customizer {}", component, customizer] @AT@ 5578 @LENGTH@ 98
------------------UPD StringLiteral@@"Configure component {}, with configurer {}" @TO@ "Configure component {}, with customizer {}" @AT@ 5584 @LENGTH@ 44
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5665 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(component) @TO@ MethodInvocation:customizer.customize(component) @AT@ 5694 @LENGTH@ 32
------------UPD MethodInvocation@@configurer.customize(component) @TO@ customizer.customize(component) @AT@ 5694 @LENGTH@ 31
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5694 @LENGTH@ 10


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  DataFormatCustomizer<SnakeYAMLDataFormat> configurer : customizers) {    LOGGER.debug("Configure dataformat {}, with configurer {}",dataformat,configurer);    configurer.customize(dataformat);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  DataFormatCustomizer<SnakeYAMLDataFormat> customizer : customizers) {    LOGGER.debug("Configure dataformat {}, with customizer {}",dataformat,customizer);    customizer.customize(dataformat);  }} @AT@ 5391 @LENGTH@ 428
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 5395 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5395 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  DataFormatCustomizer<SnakeYAMLDataFormat> configurer : customizers) {    LOGGER.debug("Configure dataformat {}, with configurer {}",dataformat,configurer);    configurer.customize(dataformat);  }} @TO@ ThenBody:{  for (  DataFormatCustomizer<SnakeYAMLDataFormat> customizer : customizers) {    LOGGER.debug("Configure dataformat {}, with customizer {}",dataformat,customizer);    customizer.customize(dataformat);  }} @AT@ 5451 @LENGTH@ 368
------UPD EnhancedForStatement@@for (DataFormatCustomizer<SnakeYAMLDataFormat> configurer : customizers) {  LOGGER.debug("Configure dataformat {}, with configurer {}",dataformat,configurer);  configurer.customize(dataformat);} @TO@ for (DataFormatCustomizer<SnakeYAMLDataFormat> customizer : customizers) {  LOGGER.debug("Configure dataformat {}, with customizer {}",dataformat,customizer);  customizer.customize(dataformat);} @AT@ 5473 @LENGTH@ 328
---------UPD SingleVariableDeclaration@@DataFormatCustomizer<SnakeYAMLDataFormat> configurer @TO@ DataFormatCustomizer<SnakeYAMLDataFormat> customizer @AT@ 5478 @LENGTH@ 52
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5520 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure dataformat {}, with configurer {}",dataformat,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure dataformat {}, with customizer {}",dataformat,customizer) @AT@ 5572 @LENGTH@ 149
------------UPD MethodInvocation@@LOGGER.debug("Configure dataformat {}, with configurer {}",dataformat,configurer) @TO@ LOGGER.debug("Configure dataformat {}, with customizer {}",dataformat,customizer) @AT@ 5572 @LENGTH@ 148
---------------UPD SimpleName@@MethodName:debug:["Configure dataformat {}, with configurer {}", dataformat, configurer] @TO@ MethodName:debug:["Configure dataformat {}, with customizer {}", dataformat, customizer] @AT@ 5579 @LENGTH@ 141
------------------UPD StringLiteral@@"Configure dataformat {}, with configurer {}" @TO@ "Configure dataformat {}, with customizer {}" @AT@ 5618 @LENGTH@ 45
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5709 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(dataformat) @TO@ MethodInvocation:customizer.customize(dataformat) @AT@ 5746 @LENGTH@ 33
------------UPD MethodInvocation@@configurer.customize(dataformat) @TO@ customizer.customize(dataformat) @AT@ 5746 @LENGTH@ 32
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5746 @LENGTH@ 10


UPD MethodDeclaration@@private, Artifact, MethodName:findExecutableArtifact, MojoExecutionException,  @TO@ protected, Artifact, MethodName:findExecutableArtifact, MojoExecutionException,  @AT@ 28671 @LENGTH@ 816
---UPD Modifier@@private @TO@ protected @AT@ 28671 @LENGTH@ 7


UPD ReturnStatement@@MethodInvocation:parent.calcHashCode() @TO@ MethodInvocation:parent.hashCode() @AT@ 45162 @LENGTH@ 29
---UPD MethodInvocation@@parent.calcHashCode() @TO@ parent.hashCode() @AT@ 45169 @LENGTH@ 21
------UPD SimpleName@@MethodName:calcHashCode:[] @TO@ MethodName:hashCode:[] @AT@ 45176 @LENGTH@ 14


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  DataFormatCustomizer<CryptoDataFormat> configurer : customizers) {    LOGGER.debug("Configure dataformat {}, with configurer {}",dataformat,configurer);    configurer.customize(dataformat);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  DataFormatCustomizer<CryptoDataFormat> customizer : customizers) {    LOGGER.debug("Configure dataformat {}, with customizer {}",dataformat,customizer);    customizer.customize(dataformat);  }} @AT@ 5330 @LENGTH@ 425
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 5334 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5334 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  DataFormatCustomizer<CryptoDataFormat> configurer : customizers) {    LOGGER.debug("Configure dataformat {}, with configurer {}",dataformat,configurer);    configurer.customize(dataformat);  }} @TO@ ThenBody:{  for (  DataFormatCustomizer<CryptoDataFormat> customizer : customizers) {    LOGGER.debug("Configure dataformat {}, with customizer {}",dataformat,customizer);    customizer.customize(dataformat);  }} @AT@ 5390 @LENGTH@ 365
------UPD EnhancedForStatement@@for (DataFormatCustomizer<CryptoDataFormat> configurer : customizers) {  LOGGER.debug("Configure dataformat {}, with configurer {}",dataformat,configurer);  configurer.customize(dataformat);} @TO@ for (DataFormatCustomizer<CryptoDataFormat> customizer : customizers) {  LOGGER.debug("Configure dataformat {}, with customizer {}",dataformat,customizer);  customizer.customize(dataformat);} @AT@ 5412 @LENGTH@ 325
---------UPD SingleVariableDeclaration@@DataFormatCustomizer<CryptoDataFormat> configurer @TO@ DataFormatCustomizer<CryptoDataFormat> customizer @AT@ 5417 @LENGTH@ 49
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5456 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure dataformat {}, with configurer {}",dataformat,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure dataformat {}, with customizer {}",dataformat,customizer) @AT@ 5508 @LENGTH@ 149
------------UPD MethodInvocation@@LOGGER.debug("Configure dataformat {}, with configurer {}",dataformat,configurer) @TO@ LOGGER.debug("Configure dataformat {}, with customizer {}",dataformat,customizer) @AT@ 5508 @LENGTH@ 148
---------------UPD SimpleName@@MethodName:debug:["Configure dataformat {}, with configurer {}", dataformat, configurer] @TO@ MethodName:debug:["Configure dataformat {}, with customizer {}", dataformat, customizer] @AT@ 5515 @LENGTH@ 141
------------------UPD StringLiteral@@"Configure dataformat {}, with configurer {}" @TO@ "Configure dataformat {}, with customizer {}" @AT@ 5554 @LENGTH@ 45
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5645 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(dataformat) @TO@ MethodInvocation:customizer.customize(dataformat) @AT@ 5682 @LENGTH@ 33
------------UPD MethodInvocation@@configurer.customize(dataformat) @TO@ customizer.customize(dataformat) @AT@ 5682 @LENGTH@ 32
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5682 @LENGTH@ 10


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<CxfRsComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<CxfRsComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5420 @LENGTH@ 338
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 5424 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5424 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  ComponentCustomizer<CxfRsComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ ThenBody:{  for (  ComponentCustomizer<CxfRsComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5480 @LENGTH@ 278
------UPD EnhancedForStatement@@for (ComponentCustomizer<CxfRsComponent> configurer : customizers) {  LOGGER.debug("Configure component {}, with configurer {}",component,configurer);  configurer.customize(component);} @TO@ for (ComponentCustomizer<CxfRsComponent> customizer : customizers) {  LOGGER.debug("Configure component {}, with customizer {}",component,customizer);  customizer.customize(component);} @AT@ 5494 @LENGTH@ 254
---------UPD SingleVariableDeclaration@@ComponentCustomizer<CxfRsComponent> configurer @TO@ ComponentCustomizer<CxfRsComponent> customizer @AT@ 5499 @LENGTH@ 46
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5535 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5579 @LENGTH@ 106
------------UPD MethodInvocation@@LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5579 @LENGTH@ 105
---------------UPD SimpleName@@MethodName:debug:["Configure component {}, with configurer {}", component, configurer] @TO@ MethodName:debug:["Configure component {}, with customizer {}", component, customizer] @AT@ 5586 @LENGTH@ 98
------------------UPD StringLiteral@@"Configure component {}, with configurer {}" @TO@ "Configure component {}, with customizer {}" @AT@ 5592 @LENGTH@ 44
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5673 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(component) @TO@ MethodInvocation:customizer.customize(component) @AT@ 5702 @LENGTH@ 32
------------UPD MethodInvocation@@configurer.customize(component) @TO@ customizer.customize(component) @AT@ 5702 @LENGTH@ 31
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5702 @LENGTH@ 10


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<EtcdComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<EtcdComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5395 @LENGTH@ 337
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 5399 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5399 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  ComponentCustomizer<EtcdComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ ThenBody:{  for (  ComponentCustomizer<EtcdComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5455 @LENGTH@ 277
------UPD EnhancedForStatement@@for (ComponentCustomizer<EtcdComponent> configurer : customizers) {  LOGGER.debug("Configure component {}, with configurer {}",component,configurer);  configurer.customize(component);} @TO@ for (ComponentCustomizer<EtcdComponent> customizer : customizers) {  LOGGER.debug("Configure component {}, with customizer {}",component,customizer);  customizer.customize(component);} @AT@ 5469 @LENGTH@ 253
---------UPD SingleVariableDeclaration@@ComponentCustomizer<EtcdComponent> configurer @TO@ ComponentCustomizer<EtcdComponent> customizer @AT@ 5474 @LENGTH@ 45
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5509 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5553 @LENGTH@ 106
------------UPD MethodInvocation@@LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5553 @LENGTH@ 105
---------------UPD SimpleName@@MethodName:debug:["Configure component {}, with configurer {}", component, configurer] @TO@ MethodName:debug:["Configure component {}, with customizer {}", component, customizer] @AT@ 5560 @LENGTH@ 98
------------------UPD StringLiteral@@"Configure component {}, with configurer {}" @TO@ "Configure component {}, with customizer {}" @AT@ 5566 @LENGTH@ 44
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5647 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(component) @TO@ MethodInvocation:customizer.customize(component) @AT@ 5676 @LENGTH@ 32
------------UPD MethodInvocation@@configurer.customize(component) @TO@ customizer.customize(component) @AT@ 5676 @LENGTH@ 31
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5676 @LENGTH@ 10


UPD MethodDeclaration@@SingleSignOnManager, MethodName:getSingleSignOnManagerManager,  @TO@ SingleSignOnManager, MethodName:getSingleSignOnManager,  @AT@ 946 @LENGTH@ 32
---UPD SimpleName@@MethodName:getSingleSignOnManagerManager @TO@ MethodName:getSingleSignOnManager @AT@ 946 @LENGTH@ 29


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<HazelcastQueueComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<HazelcastQueueComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5601 @LENGTH@ 347
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 5605 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5605 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  ComponentCustomizer<HazelcastQueueComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ ThenBody:{  for (  ComponentCustomizer<HazelcastQueueComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5661 @LENGTH@ 287
------UPD EnhancedForStatement@@for (ComponentCustomizer<HazelcastQueueComponent> configurer : customizers) {  LOGGER.debug("Configure component {}, with configurer {}",component,configurer);  configurer.customize(component);} @TO@ for (ComponentCustomizer<HazelcastQueueComponent> customizer : customizers) {  LOGGER.debug("Configure component {}, with customizer {}",component,customizer);  customizer.customize(component);} @AT@ 5675 @LENGTH@ 263
---------UPD SingleVariableDeclaration@@ComponentCustomizer<HazelcastQueueComponent> configurer @TO@ ComponentCustomizer<HazelcastQueueComponent> customizer @AT@ 5680 @LENGTH@ 55
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5725 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5769 @LENGTH@ 106
------------UPD MethodInvocation@@LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5769 @LENGTH@ 105
---------------UPD SimpleName@@MethodName:debug:["Configure component {}, with configurer {}", component, configurer] @TO@ MethodName:debug:["Configure component {}, with customizer {}", component, customizer] @AT@ 5776 @LENGTH@ 98
------------------UPD StringLiteral@@"Configure component {}, with configurer {}" @TO@ "Configure component {}, with customizer {}" @AT@ 5782 @LENGTH@ 44
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5863 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(component) @TO@ MethodInvocation:customizer.customize(component) @AT@ 5892 @LENGTH@ 32
------------UPD MethodInvocation@@configurer.customize(component) @TO@ customizer.customize(component) @AT@ 5892 @LENGTH@ 31
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5892 @LENGTH@ 10


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled(); @AT@ 5243 @LENGTH@ 160
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5251 @LENGTH@ 151
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5251 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5268 @LENGTH@ 134
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 5268 @LENGTH@ 64
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5268 @LENGTH@ 35
---------UPD MethodInvocation@@componentConfiguration.getConfigurer().isEnabled() @TO@ componentConfiguration.getCustomizer().isEnabled() @AT@ 5352 @LENGTH@ 50
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5352 @LENGTH@ 38


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled(); @AT@ 5251 @LENGTH@ 160
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5259 @LENGTH@ 151
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5259 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5276 @LENGTH@ 134
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 5276 @LENGTH@ 64
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5276 @LENGTH@ 35
---------UPD MethodInvocation@@componentConfiguration.getConfigurer().isEnabled() @TO@ componentConfiguration.getCustomizer().isEnabled() @AT@ 5360 @LENGTH@ 50
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5360 @LENGTH@ 38


UPD ExpressionStatement@@MethodInvocation:assertThat(repository.findOne(dave.getId().toString()),is(dave)) @TO@ MethodInvocation:assertThat(repository.findOne(dave.getId().toString()),is(Optional.of(dave))) @AT@ 3989 @LENGTH@ 66
---UPD MethodInvocation@@assertThat(repository.findOne(dave.getId().toString()),is(dave)) @TO@ assertThat(repository.findOne(dave.getId().toString()),is(Optional.of(dave))) @AT@ 3989 @LENGTH@ 65
------UPD SimpleName@@MethodName:assertThat:[repository.findOne(dave.getId().toString()), is(dave)] @TO@ MethodName:assertThat:[repository.findOne(dave.getId().toString()), is(Optional.of(dave))] @AT@ 3989 @LENGTH@ 65
---------UPD MethodInvocation@@is(dave) @TO@ is(Optional.of(dave)) @AT@ 4045 @LENGTH@ 8
------------UPD SimpleName@@MethodName:is:[dave] @TO@ MethodName:of:[dave] @AT@ 4045 @LENGTH@ 8
------------UPD SimpleName@@MethodName:is:[dave] @TO@ MethodName:of:[dave] @AT@ 4045 @LENGTH@ 8
------------INS SimpleName@@MethodName:is:[Optional.of(dave)] @TO@ MethodInvocation@@is(dave) @AT@ 4072 @LENGTH@ 21
---------------INS MethodInvocation@@Optional.of(dave) @TO@ SimpleName@@MethodName:is:[Optional.of(dave)] @AT@ 4075 @LENGTH@ 17
------------------MOV SimpleName@@MethodName:is:[dave] @TO@ MethodInvocation@@Optional.of(dave) @AT@ 4045 @LENGTH@ 8
------------------MOV SimpleName@@MethodName:is:[dave] @TO@ MethodInvocation@@Optional.of(dave) @AT@ 4045 @LENGTH@ 8
------------------INS SimpleName@@Name:Optional @TO@ MethodInvocation@@Optional.of(dave) @AT@ 4075 @LENGTH@ 8


INS IfStatement@@if (ObjectHelper.isNotEmpty(remaining)) {  if (remaining.startsWith(JmsConfiguration.QUEUE_PREFIX)) {    pubSubDomain=false;    remaining=removeStartingCharacters(remaining.substring(JmsConfiguration.QUEUE_PREFIX.length()),'/');  } else   if (remaining.startsWith(JmsConfiguration.TOPIC_PREFIX)) {    pubSubDomain=true;    remaining=removeStartingCharacters(remaining.substring(JmsConfiguration.TOPIC_PREFIX.length()),'/');  } else   if (remaining.startsWith(JmsConfiguration.TEMP_QUEUE_PREFIX)) {    pubSubDomain=false;    tempDestination=true;    remaining=removeStartingCharacters(remaining.substring(JmsConfiguration.TEMP_QUEUE_PREFIX.length()),'/');  } else   if (remaining.startsWith(JmsConfiguration.TEMP_TOPIC_PREFIX)) {    pubSubDomain=true;    tempDestination=true;    remaining=removeStartingCharacters(remaining.substring(JmsConfiguration.TEMP_TOPIC_PREFIX.length()),'/');  }} @TO@ MethodDeclaration@@protected, Endpoint, MethodName:createEndpoint, String uri, String remaining, Map<String,Object> parameters, Exception,  @AT@ 67317 @LENGTH@ 1100
---INS MethodInvocation@@ObjectHelper.isNotEmpty(remaining) @TO@ IfStatement@@if (ObjectHelper.isNotEmpty(remaining)) {  if (remaining.startsWith(JmsConfiguration.QUEUE_PREFIX)) {    pubSubDomain=false;    remaining=removeStartingCharacters(remaining.substring(JmsConfiguration.QUEUE_PREFIX.length()),'/');  } else   if (remaining.startsWith(JmsConfiguration.TOPIC_PREFIX)) {    pubSubDomain=true;    remaining=removeStartingCharacters(remaining.substring(JmsConfiguration.TOPIC_PREFIX.length()),'/');  } else   if (remaining.startsWith(JmsConfiguration.TEMP_QUEUE_PREFIX)) {    pubSubDomain=false;    tempDestination=true;    remaining=removeStartingCharacters(remaining.substring(JmsConfiguration.TEMP_QUEUE_PREFIX.length()),'/');  } else   if (remaining.startsWith(JmsConfiguration.TEMP_TOPIC_PREFIX)) {    pubSubDomain=true;    tempDestination=true;    remaining=removeStartingCharacters(remaining.substring(JmsConfiguration.TEMP_TOPIC_PREFIX.length()),'/');  }} @AT@ 67321 @LENGTH@ 34
------INS SimpleName@@Name:ObjectHelper @TO@ MethodInvocation@@ObjectHelper.isNotEmpty(remaining) @AT@ 67321 @LENGTH@ 12
------INS SimpleName@@MethodName:isNotEmpty:[remaining] @TO@ MethodInvocation@@ObjectHelper.isNotEmpty(remaining) @AT@ 67334 @LENGTH@ 21
---------INS SimpleName@@remaining @TO@ SimpleName@@MethodName:isNotEmpty:[remaining] @AT@ 67345 @LENGTH@ 9
---INS Block@@ThenBody:{  if (remaining.startsWith(JmsConfiguration.QUEUE_PREFIX)) {    pubSubDomain=false;    remaining=removeStartingCharacters(remaining.substring(JmsConfiguration.QUEUE_PREFIX.length()),'/');  } else   if (remaining.startsWith(JmsConfiguration.TOPIC_PREFIX)) {    pubSubDomain=true;    remaining=removeStartingCharacters(remaining.substring(JmsConfiguration.TOPIC_PREFIX.length()),'/');  } else   if (remaining.startsWith(JmsConfiguration.TEMP_QUEUE_PREFIX)) {    pubSubDomain=false;    tempDestination=true;    remaining=removeStartingCharacters(remaining.substring(JmsConfiguration.TEMP_QUEUE_PREFIX.length()),'/');  } else   if (remaining.startsWith(JmsConfiguration.TEMP_TOPIC_PREFIX)) {    pubSubDomain=true;    tempDestination=true;    remaining=removeStartingCharacters(remaining.substring(JmsConfiguration.TEMP_TOPIC_PREFIX.length()),'/');  }} @TO@ IfStatement@@if (ObjectHelper.isNotEmpty(remaining)) {  if (remaining.startsWith(JmsConfiguration.QUEUE_PREFIX)) {    pubSubDomain=false;    remaining=removeStartingCharacters(remaining.substring(JmsConfiguration.QUEUE_PREFIX.length()),'/');  } else   if (remaining.startsWith(JmsConfiguration.TOPIC_PREFIX)) {    pubSubDomain=true;    remaining=removeStartingCharacters(remaining.substring(JmsConfiguration.TOPIC_PREFIX.length()),'/');  } else   if (remaining.startsWith(JmsConfiguration.TEMP_QUEUE_PREFIX)) {    pubSubDomain=false;    tempDestination=true;    remaining=removeStartingCharacters(remaining.substring(JmsConfiguration.TEMP_QUEUE_PREFIX.length()),'/');  } else   if (remaining.startsWith(JmsConfiguration.TEMP_TOPIC_PREFIX)) {    pubSubDomain=true;    tempDestination=true;    remaining=removeStartingCharacters(remaining.substring(JmsConfiguration.TEMP_TOPIC_PREFIX.length()),'/');  }} @AT@ 67357 @LENGTH@ 1060
------MOV IfStatement@@if (remaining.startsWith(JmsConfiguration.QUEUE_PREFIX)) {  pubSubDomain=false;  remaining=removeStartingCharacters(remaining.substring(JmsConfiguration.QUEUE_PREFIX.length()),'/');} else if (remaining.startsWith(JmsConfiguration.TOPIC_PREFIX)) {  pubSubDomain=true;  remaining=removeStartingCharacters(remaining.substring(JmsConfiguration.TOPIC_PREFIX.length()),'/');} else if (remaining.startsWith(JmsConfiguration.TEMP_QUEUE_PREFIX)) {  pubSubDomain=false;  tempDestination=true;  remaining=removeStartingCharacters(remaining.substring(JmsConfiguration.TEMP_QUEUE_PREFIX.length()),'/');} else if (remaining.startsWith(JmsConfiguration.TEMP_TOPIC_PREFIX)) {  pubSubDomain=true;  tempDestination=true;  remaining=removeStartingCharacters(remaining.substring(JmsConfiguration.TEMP_TOPIC_PREFIX.length()),'/');} @TO@ Block@@ThenBody:{  if (remaining.startsWith(JmsConfiguration.QUEUE_PREFIX)) {    pubSubDomain=false;    remaining=removeStartingCharacters(remaining.substring(JmsConfiguration.QUEUE_PREFIX.length()),'/');  } else   if (remaining.startsWith(JmsConfiguration.TOPIC_PREFIX)) {    pubSubDomain=true;    remaining=removeStartingCharacters(remaining.substring(JmsConfiguration.TOPIC_PREFIX.length()),'/');  } else   if (remaining.startsWith(JmsConfiguration.TEMP_QUEUE_PREFIX)) {    pubSubDomain=false;    tempDestination=true;    remaining=removeStartingCharacters(remaining.substring(JmsConfiguration.TEMP_QUEUE_PREFIX.length()),'/');  } else   if (remaining.startsWith(JmsConfiguration.TEMP_TOPIC_PREFIX)) {    pubSubDomain=true;    tempDestination=true;    remaining=removeStartingCharacters(remaining.substring(JmsConfiguration.TEMP_TOPIC_PREFIX.length()),'/');  }} @AT@ 67316 @LENGTH@ 980


INS MethodDeclaration@@public, static, boolean, MethodName:isPropertyProducerOnly, List<Map<String,String>> rows, String name,  @TO@ TypeDeclaration@@[public, final]JSonSchemaHelper,  @AT@ 5133 @LENGTH@ 566
---INS Modifier@@public @TO@ MethodDeclaration@@public, static, boolean, MethodName:isPropertyProducerOnly, List<Map<String,String>> rows, String name,  @AT@ 5133 @LENGTH@ 6
---INS Modifier@@static @TO@ MethodDeclaration@@public, static, boolean, MethodName:isPropertyProducerOnly, List<Map<String,String>> rows, String name,  @AT@ 5140 @LENGTH@ 6
---INS PrimitiveType@@boolean @TO@ MethodDeclaration@@public, static, boolean, MethodName:isPropertyProducerOnly, List<Map<String,String>> rows, String name,  @AT@ 5147 @LENGTH@ 7
---INS SimpleName@@MethodName:isPropertyProducerOnly @TO@ MethodDeclaration@@public, static, boolean, MethodName:isPropertyProducerOnly, List<Map<String,String>> rows, String name,  @AT@ 5155 @LENGTH@ 22
---INS SingleVariableDeclaration@@List<Map<String,String>> rows @TO@ MethodDeclaration@@public, static, boolean, MethodName:isPropertyProducerOnly, List<Map<String,String>> rows, String name,  @AT@ 5178 @LENGTH@ 30
------INS ParameterizedType@@List<Map<String,String>> @TO@ SingleVariableDeclaration@@List<Map<String,String>> rows @AT@ 5178 @LENGTH@ 25
---------INS SimpleType@@List @TO@ ParameterizedType@@List<Map<String,String>> @AT@ 5178 @LENGTH@ 4
---------INS ParameterizedType@@Map<String,String> @TO@ ParameterizedType@@List<Map<String,String>> @AT@ 5183 @LENGTH@ 19
------------INS SimpleType@@Map @TO@ ParameterizedType@@Map<String,String> @AT@ 5183 @LENGTH@ 3
------------INS SimpleType@@String @TO@ ParameterizedType@@Map<String,String> @AT@ 5187 @LENGTH@ 6
------------INS SimpleType@@String @TO@ ParameterizedType@@Map<String,String> @AT@ 5195 @LENGTH@ 6
------INS SimpleName@@rows @TO@ SingleVariableDeclaration@@List<Map<String,String>> rows @AT@ 5204 @LENGTH@ 4
---INS SingleVariableDeclaration@@String name @TO@ MethodDeclaration@@public, static, boolean, MethodName:isPropertyProducerOnly, List<Map<String,String>> rows, String name,  @AT@ 5210 @LENGTH@ 11
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String name @AT@ 5210 @LENGTH@ 6
------INS SimpleName@@name @TO@ SingleVariableDeclaration@@String name @AT@ 5217 @LENGTH@ 4
---INS EnhancedForStatement@@for (Map<String,String> row : rows) {  String labels=null;  boolean found=false;  if (row.containsKey("name")) {    found=name.equals(row.get("name"));  }  if (row.containsKey("label")) {    labels=row.get("label");  }  if (found) {    return labels != null && labels.contains("producer");  }} @TO@ MethodDeclaration@@public, static, boolean, MethodName:isPropertyProducerOnly, List<Map<String,String>> rows, String name,  @AT@ 5233 @LENGTH@ 438
------INS SingleVariableDeclaration@@Map<String,String> row @TO@ EnhancedForStatement@@for (Map<String,String> row : rows) {  String labels=null;  boolean found=false;  if (row.containsKey("name")) {    found=name.equals(row.get("name"));  }  if (row.containsKey("label")) {    labels=row.get("label");  }  if (found) {    return labels != null && labels.contains("producer");  }} @AT@ 5238 @LENGTH@ 23
---------INS ParameterizedType@@Map<String,String> @TO@ SingleVariableDeclaration@@Map<String,String> row @AT@ 5238 @LENGTH@ 19
------------INS SimpleType@@Map @TO@ ParameterizedType@@Map<String,String> @AT@ 5238 @LENGTH@ 3
------------INS SimpleType@@String @TO@ ParameterizedType@@Map<String,String> @AT@ 5242 @LENGTH@ 6
------------INS SimpleType@@String @TO@ ParameterizedType@@Map<String,String> @AT@ 5250 @LENGTH@ 6
---------INS SimpleName@@row @TO@ SingleVariableDeclaration@@Map<String,String> row @AT@ 5258 @LENGTH@ 3
------INS SimpleName@@rows @TO@ EnhancedForStatement@@for (Map<String,String> row : rows) {  String labels=null;  boolean found=false;  if (row.containsKey("name")) {    found=name.equals(row.get("name"));  }  if (row.containsKey("label")) {    labels=row.get("label");  }  if (found) {    return labels != null && labels.contains("producer");  }} @AT@ 5264 @LENGTH@ 4
------INS VariableDeclarationStatement@@String labels=null; @TO@ EnhancedForStatement@@for (Map<String,String> row : rows) {  String labels=null;  boolean found=false;  if (row.containsKey("name")) {    found=name.equals(row.get("name"));  }  if (row.containsKey("label")) {    labels=row.get("label");  }  if (found) {    return labels != null && labels.contains("producer");  }} @AT@ 5284 @LENGTH@ 21
---------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String labels=null; @AT@ 5284 @LENGTH@ 6
---------INS VariableDeclarationFragment@@labels=null @TO@ VariableDeclarationStatement@@String labels=null; @AT@ 5291 @LENGTH@ 13
------------INS SimpleName@@labels @TO@ VariableDeclarationFragment@@labels=null @AT@ 5291 @LENGTH@ 6
------------INS NullLiteral@@null @TO@ VariableDeclarationFragment@@labels=null @AT@ 5300 @LENGTH@ 4
------INS VariableDeclarationStatement@@boolean found=false; @TO@ EnhancedForStatement@@for (Map<String,String> row : rows) {  String labels=null;  boolean found=false;  if (row.containsKey("name")) {    found=name.equals(row.get("name"));  }  if (row.containsKey("label")) {    labels=row.get("label");  }  if (found) {    return labels != null && labels.contains("producer");  }} @AT@ 5318 @LENGTH@ 22
---------INS PrimitiveType@@boolean @TO@ VariableDeclarationStatement@@boolean found=false; @AT@ 5318 @LENGTH@ 7
---------INS VariableDeclarationFragment@@found=false @TO@ VariableDeclarationStatement@@boolean found=false; @AT@ 5326 @LENGTH@ 13
------------INS SimpleName@@found @TO@ VariableDeclarationFragment@@found=false @AT@ 5326 @LENGTH@ 5
------------INS BooleanLiteral@@false @TO@ VariableDeclarationFragment@@found=false @AT@ 5334 @LENGTH@ 5
------INS IfStatement@@if (row.containsKey("name")) {  found=name.equals(row.get("name"));} @TO@ EnhancedForStatement@@for (Map<String,String> row : rows) {  String labels=null;  boolean found=false;  if (row.containsKey("name")) {    found=name.equals(row.get("name"));  }  if (row.containsKey("label")) {    labels=row.get("label");  }  if (found) {    return labels != null && labels.contains("producer");  }} @AT@ 5353 @LENGTH@ 98
---------INS MethodInvocation@@row.containsKey("name") @TO@ IfStatement@@if (row.containsKey("name")) {  found=name.equals(row.get("name"));} @AT@ 5357 @LENGTH@ 23
------------INS SimpleName@@Name:row @TO@ MethodInvocation@@row.containsKey("name") @AT@ 5357 @LENGTH@ 3
------------INS SimpleName@@MethodName:containsKey:["name"] @TO@ MethodInvocation@@row.containsKey("name") @AT@ 5361 @LENGTH@ 19
---------------INS StringLiteral@@"name" @TO@ SimpleName@@MethodName:containsKey:["name"] @AT@ 5373 @LENGTH@ 6
---------INS Block@@ThenBody:{  found=name.equals(row.get("name"));} @TO@ IfStatement@@if (row.containsKey("name")) {  found=name.equals(row.get("name"));} @AT@ 5382 @LENGTH@ 69
------------INS ExpressionStatement@@Assignment:found=name.equals(row.get("name")) @TO@ Block@@ThenBody:{  found=name.equals(row.get("name"));} @AT@ 5400 @LENGTH@ 37
---------------INS Assignment@@found=name.equals(row.get("name")) @TO@ ExpressionStatement@@Assignment:found=name.equals(row.get("name")) @AT@ 5400 @LENGTH@ 36
------------------INS SimpleName@@found @TO@ Assignment@@found=name.equals(row.get("name")) @AT@ 5400 @LENGTH@ 5
------------------INS Operator@@= @TO@ Assignment@@found=name.equals(row.get("name")) @AT@ 5405 @LENGTH@ 1
------------------INS MethodInvocation@@name.equals(row.get("name")) @TO@ Assignment@@found=name.equals(row.get("name")) @AT@ 5408 @LENGTH@ 28
---------------------INS SimpleName@@Name:name @TO@ MethodInvocation@@name.equals(row.get("name")) @AT@ 5408 @LENGTH@ 4
---------------------INS SimpleName@@MethodName:equals:[row.get("name")] @TO@ MethodInvocation@@name.equals(row.get("name")) @AT@ 5413 @LENGTH@ 23
------------------------INS MethodInvocation@@row.get("name") @TO@ SimpleName@@MethodName:equals:[row.get("name")] @AT@ 5420 @LENGTH@ 15
---------------------------INS SimpleName@@Name:row @TO@ MethodInvocation@@row.get("name") @AT@ 5420 @LENGTH@ 3
---------------------------INS SimpleName@@MethodName:get:["name"] @TO@ MethodInvocation@@row.get("name") @AT@ 5424 @LENGTH@ 11
------------------------------INS StringLiteral@@"name" @TO@ SimpleName@@MethodName:get:["name"] @AT@ 5428 @LENGTH@ 6
------INS IfStatement@@if (row.containsKey("label")) {  labels=row.get("label");} @TO@ EnhancedForStatement@@for (Map<String,String> row : rows) {  String labels=null;  boolean found=false;  if (row.containsKey("name")) {    found=name.equals(row.get("name"));  }  if (row.containsKey("label")) {    labels=row.get("label");  }  if (found) {    return labels != null && labels.contains("producer");  }} @AT@ 5464 @LENGTH@ 88
---------INS MethodInvocation@@row.containsKey("label") @TO@ IfStatement@@if (row.containsKey("label")) {  labels=row.get("label");} @AT@ 5468 @LENGTH@ 24
------------INS SimpleName@@Name:row @TO@ MethodInvocation@@row.containsKey("label") @AT@ 5468 @LENGTH@ 3
------------INS SimpleName@@MethodName:containsKey:["label"] @TO@ MethodInvocation@@row.containsKey("label") @AT@ 5472 @LENGTH@ 20
---------------INS StringLiteral@@"label" @TO@ SimpleName@@MethodName:containsKey:["label"] @AT@ 5484 @LENGTH@ 7
---------INS Block@@ThenBody:{  labels=row.get("label");} @TO@ IfStatement@@if (row.containsKey("label")) {  labels=row.get("label");} @AT@ 5494 @LENGTH@ 58
------------INS ExpressionStatement@@Assignment:labels=row.get("label") @TO@ Block@@ThenBody:{  labels=row.get("label");} @AT@ 5512 @LENGTH@ 26
---------------INS Assignment@@labels=row.get("label") @TO@ ExpressionStatement@@Assignment:labels=row.get("label") @AT@ 5512 @LENGTH@ 25
------------------INS SimpleName@@labels @TO@ Assignment@@labels=row.get("label") @AT@ 5512 @LENGTH@ 6
------------------INS Operator@@= @TO@ Assignment@@labels=row.get("label") @AT@ 5518 @LENGTH@ 1
------------------INS MethodInvocation@@row.get("label") @TO@ Assignment@@labels=row.get("label") @AT@ 5521 @LENGTH@ 16
---------------------INS SimpleName@@Name:row @TO@ MethodInvocation@@row.get("label") @AT@ 5521 @LENGTH@ 3
---------------------INS SimpleName@@MethodName:get:["label"] @TO@ MethodInvocation@@row.get("label") @AT@ 5525 @LENGTH@ 12
------------------------INS StringLiteral@@"label" @TO@ SimpleName@@MethodName:get:["label"] @AT@ 5529 @LENGTH@ 7
------INS IfStatement@@if (found) {  return labels != null && labels.contains("producer");} @TO@ EnhancedForStatement@@for (Map<String,String> row : rows) {  String labels=null;  boolean found=false;  if (row.containsKey("name")) {    found=name.equals(row.get("name"));  }  if (row.containsKey("label")) {    labels=row.get("label");  }  if (found) {    return labels != null && labels.contains("producer");  }} @AT@ 5565 @LENGTH@ 96
---------INS SimpleName@@found @TO@ IfStatement@@if (found) {  return labels != null && labels.contains("producer");} @AT@ 5569 @LENGTH@ 5
---------INS Block@@ThenBody:{  return labels != null && labels.contains("producer");} @TO@ IfStatement@@if (found) {  return labels != null && labels.contains("producer");} @AT@ 5576 @LENGTH@ 85
------------INS ReturnStatement@@InfixExpression:labels != null && labels.contains("producer") @TO@ Block@@ThenBody:{  return labels != null && labels.contains("producer");} @AT@ 5594 @LENGTH@ 53
---------------INS InfixExpression@@labels != null && labels.contains("producer") @TO@ ReturnStatement@@InfixExpression:labels != null && labels.contains("producer") @AT@ 5601 @LENGTH@ 45
------------------INS InfixExpression@@labels != null @TO@ InfixExpression@@labels != null && labels.contains("producer") @AT@ 5601 @LENGTH@ 14
---------------------INS SimpleName@@labels @TO@ InfixExpression@@labels != null @AT@ 5601 @LENGTH@ 6
---------------------INS Operator@@!= @TO@ InfixExpression@@labels != null @AT@ 5607 @LENGTH@ 2
---------------------INS NullLiteral@@null @TO@ InfixExpression@@labels != null @AT@ 5611 @LENGTH@ 4
------------------INS Operator@@&& @TO@ InfixExpression@@labels != null && labels.contains("producer") @AT@ 5615 @LENGTH@ 2
------------------INS MethodInvocation@@labels.contains("producer") @TO@ InfixExpression@@labels != null && labels.contains("producer") @AT@ 5619 @LENGTH@ 27
---------------------INS SimpleName@@Name:labels @TO@ MethodInvocation@@labels.contains("producer") @AT@ 5619 @LENGTH@ 6
---------------------INS SimpleName@@MethodName:contains:["producer"] @TO@ MethodInvocation@@labels.contains("producer") @AT@ 5626 @LENGTH@ 20
------------------------INS StringLiteral@@"producer" @TO@ SimpleName@@MethodName:contains:["producer"] @AT@ 5635 @LENGTH@ 10
---INS ReturnStatement@@BooleanLiteral:false @TO@ MethodDeclaration@@public, static, boolean, MethodName:isPropertyProducerOnly, List<Map<String,String>> rows, String name,  @AT@ 5680 @LENGTH@ 13
------INS BooleanLiteral@@false @TO@ ReturnStatement@@BooleanLiteral:false @AT@ 5687 @LENGTH@ 5


UPD MethodDeclaration@@public, void, MethodName:forceReservedMemory, int allocationSize, int count,  @TO@ public, long, MethodName:forceReservedMemory, int allocationSize, int count,  @AT@ 2637 @LENGTH@ 70
---UPD PrimitiveType@@void @TO@ long @AT@ 2644 @LENGTH@ 4
---INS ReturnStatement@@InfixExpression:allocationSize * count @TO@ MethodDeclaration@@public, void, MethodName:forceReservedMemory, int allocationSize, int count,  @AT@ 2709 @LENGTH@ 30
------INS InfixExpression@@allocationSize * count @TO@ ReturnStatement@@InfixExpression:allocationSize * count @AT@ 2716 @LENGTH@ 22
---------INS SimpleName@@allocationSize @TO@ InfixExpression@@allocationSize * count @AT@ 2716 @LENGTH@ 14
---------INS Operator@@* @TO@ InfixExpression@@allocationSize * count @AT@ 2730 @LENGTH@ 1
---------INS SimpleName@@count @TO@ InfixExpression@@allocationSize * count @AT@ 2733 @LENGTH@ 5


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<MllpComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<MllpComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5395 @LENGTH@ 337
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 5399 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5399 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  ComponentCustomizer<MllpComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ ThenBody:{  for (  ComponentCustomizer<MllpComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5455 @LENGTH@ 277
------UPD EnhancedForStatement@@for (ComponentCustomizer<MllpComponent> configurer : customizers) {  LOGGER.debug("Configure component {}, with configurer {}",component,configurer);  configurer.customize(component);} @TO@ for (ComponentCustomizer<MllpComponent> customizer : customizers) {  LOGGER.debug("Configure component {}, with customizer {}",component,customizer);  customizer.customize(component);} @AT@ 5469 @LENGTH@ 253
---------UPD SingleVariableDeclaration@@ComponentCustomizer<MllpComponent> configurer @TO@ ComponentCustomizer<MllpComponent> customizer @AT@ 5474 @LENGTH@ 45
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5509 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5553 @LENGTH@ 106
------------UPD MethodInvocation@@LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5553 @LENGTH@ 105
---------------UPD SimpleName@@MethodName:debug:["Configure component {}, with configurer {}", component, configurer] @TO@ MethodName:debug:["Configure component {}, with customizer {}", component, customizer] @AT@ 5560 @LENGTH@ 98
------------------UPD StringLiteral@@"Configure component {}, with configurer {}" @TO@ "Configure component {}, with customizer {}" @AT@ 5566 @LENGTH@ 44
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5647 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(component) @TO@ MethodInvocation:customizer.customize(component) @AT@ 5676 @LENGTH@ 32
------------UPD MethodInvocation@@configurer.customize(component) @TO@ customizer.customize(component) @AT@ 5676 @LENGTH@ 31
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5676 @LENGTH@ 10


UPD FieldDeclaration@@private, static, long, [serialVersionUID=1L] @TO@ private, static, final, long, [serialVersionUID=1L] @AT@ 1326 @LENGTH@ 42
---INS Modifier@@final @TO@ FieldDeclaration@@private, static, long, [serialVersionUID=1L] @AT@ 1341 @LENGTH@ 5


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled(); @AT@ 5247 @LENGTH@ 160
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5255 @LENGTH@ 151
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5255 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5272 @LENGTH@ 134
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 5272 @LENGTH@ 64
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5272 @LENGTH@ 35
---------UPD MethodInvocation@@componentConfiguration.getConfigurer().isEnabled() @TO@ componentConfiguration.getCustomizer().isEnabled() @AT@ 5356 @LENGTH@ 50
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5356 @LENGTH@ 38


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled(); @AT@ 5260 @LENGTH@ 160
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5268 @LENGTH@ 151
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5268 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5285 @LENGTH@ 134
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 5285 @LENGTH@ 64
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5285 @LENGTH@ 35
---------UPD MethodInvocation@@componentConfiguration.getConfigurer().isEnabled() @TO@ componentConfiguration.getCustomizer().isEnabled() @AT@ 5369 @LENGTH@ 50
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5369 @LENGTH@ 38


UPD ExpressionStatement@@MethodInvocation:Assert.notNull(attributesToRetrieve) @TO@ MethodInvocation:Assert.notNull(attributesToRetrieve,"attributesToRetrieve cannot be null") @AT@ 13998 @LENGTH@ 37
---UPD MethodInvocation@@Assert.notNull(attributesToRetrieve) @TO@ Assert.notNull(attributesToRetrieve,"attributesToRetrieve cannot be null") @AT@ 13998 @LENGTH@ 36
------UPD SimpleName@@MethodName:notNull:[attributesToRetrieve] @TO@ MethodName:notNull:[attributesToRetrieve, "attributesToRetrieve cannot be null"] @AT@ 14005 @LENGTH@ 29
---------INS StringLiteral@@"attributesToRetrieve cannot be null" @TO@ SimpleName@@MethodName:notNull:[attributesToRetrieve] @AT@ 14035 @LENGTH@ 37


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && dataformatConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && dataformatConfiguration.getCustomizer().isEnabled(); @AT@ 5172 @LENGTH@ 177
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && dataformatConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && dataformatConfiguration.getCustomizer().isEnabled() @AT@ 5180 @LENGTH@ 168
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5180 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && dataformatConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && dataformatConfiguration.getCustomizer().isEnabled() @AT@ 5197 @LENGTH@ 151
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 5197 @LENGTH@ 72
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5197 @LENGTH@ 35
---------UPD MethodInvocation@@dataformatConfiguration.getConfigurer().isEnabled() @TO@ dataformatConfiguration.getCustomizer().isEnabled() @AT@ 5297 @LENGTH@ 51
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5297 @LENGTH@ 39


INS MethodDeclaration@@public, void, MethodName:exactMatcherUsesExactMatching,  @TO@ TypeDeclaration@@[@SuppressWarnings("unused"), public]ExampleSpecificationAccessorUnitTests,  @AT@ 10325 @LENGTH@ 278
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:exactMatcherUsesExactMatching,  @AT@ 10325 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:exactMatcherUsesExactMatching,  @AT@ 10332 @LENGTH@ 4
---INS SimpleName@@MethodName:exactMatcherUsesExactMatching @TO@ MethodDeclaration@@public, void, MethodName:exactMatcherUsesExactMatching,  @AT@ 10337 @LENGTH@ 29
---INS VariableDeclarationStatement@@ExampleMatcher matcher=ExampleMatcher.matching().withMatcher("firstname",exact()); @TO@ MethodDeclaration@@public, void, MethodName:exactMatcherUsesExactMatching,  @AT@ 10374 @LENGTH@ 92
------INS SimpleType@@ExampleMatcher @TO@ VariableDeclarationStatement@@ExampleMatcher matcher=ExampleMatcher.matching().withMatcher("firstname",exact()); @AT@ 10374 @LENGTH@ 14
------INS VariableDeclarationFragment@@matcher=ExampleMatcher.matching().withMatcher("firstname",exact()) @TO@ VariableDeclarationStatement@@ExampleMatcher matcher=ExampleMatcher.matching().withMatcher("firstname",exact()); @AT@ 10389 @LENGTH@ 76
---------INS SimpleName@@matcher @TO@ VariableDeclarationFragment@@matcher=ExampleMatcher.matching().withMatcher("firstname",exact()) @AT@ 10389 @LENGTH@ 7
---------INS MethodInvocation@@ExampleMatcher.matching().withMatcher("firstname",exact()) @TO@ VariableDeclarationFragment@@matcher=ExampleMatcher.matching().withMatcher("firstname",exact()) @AT@ 10399 @LENGTH@ 66
------------INS MethodInvocation@@MethodName:matching:[] @TO@ MethodInvocation@@ExampleMatcher.matching().withMatcher("firstname",exact()) @AT@ 10399 @LENGTH@ 25
------------INS SimpleName@@Name:ExampleMatcher @TO@ MethodInvocation@@ExampleMatcher.matching().withMatcher("firstname",exact()) @AT@ 10399 @LENGTH@ 14
------------INS SimpleName@@MethodName:withMatcher:["firstname", exact()] @TO@ MethodInvocation@@ExampleMatcher.matching().withMatcher("firstname",exact()) @AT@ 10432 @LENGTH@ 33
---------------INS StringLiteral@@"firstname" @TO@ SimpleName@@MethodName:withMatcher:["firstname", exact()] @AT@ 10444 @LENGTH@ 11
---------------INS MethodInvocation@@MethodName:exact:[] @TO@ SimpleName@@MethodName:withMatcher:["firstname", exact()] @AT@ 10457 @LENGTH@ 7
---INS ExpressionStatement@@MethodInvocation:assertThat(new ExampleMatcherAccessor(matcher).getPropertySpecifier("firstname").getStringMatcher(),is(StringMatcher.EXACT)) @TO@ MethodDeclaration@@public, void, MethodName:exactMatcherUsesExactMatching,  @AT@ 10470 @LENGTH@ 130
------INS MethodInvocation@@assertThat(new ExampleMatcherAccessor(matcher).getPropertySpecifier("firstname").getStringMatcher(),is(StringMatcher.EXACT)) @TO@ ExpressionStatement@@MethodInvocation:assertThat(new ExampleMatcherAccessor(matcher).getPropertySpecifier("firstname").getStringMatcher(),is(StringMatcher.EXACT)) @AT@ 10470 @LENGTH@ 129
---------INS SimpleName@@MethodName:assertThat:[new ExampleMatcherAccessor(matcher).getPropertySpecifier("firstname").getStringMatcher(), is(StringMatcher.EXACT)] @TO@ MethodInvocation@@assertThat(new ExampleMatcherAccessor(matcher).getPropertySpecifier("firstname").getStringMatcher(),is(StringMatcher.EXACT)) @AT@ 10470 @LENGTH@ 129
------------INS MethodInvocation@@new ExampleMatcherAccessor(matcher).getPropertySpecifier("firstname").getStringMatcher() @TO@ SimpleName@@MethodName:assertThat:[new ExampleMatcherAccessor(matcher).getPropertySpecifier("firstname").getStringMatcher(), is(StringMatcher.EXACT)] @AT@ 10481 @LENGTH@ 88
---------------INS MethodInvocation@@MethodName:getPropertySpecifier:["firstname"] @TO@ MethodInvocation@@new ExampleMatcherAccessor(matcher).getPropertySpecifier("firstname").getStringMatcher() @AT@ 10481 @LENGTH@ 69
------------------INS StringLiteral@@"firstname" @TO@ MethodInvocation@@MethodName:getPropertySpecifier:["firstname"] @AT@ 10538 @LENGTH@ 11
---------------INS ClassInstanceCreation@@ExampleMatcherAccessor[matcher] @TO@ MethodInvocation@@new ExampleMatcherAccessor(matcher).getPropertySpecifier("firstname").getStringMatcher() @AT@ 10481 @LENGTH@ 35
------------------INS New@@new @TO@ ClassInstanceCreation@@ExampleMatcherAccessor[matcher] @AT@ 10481 @LENGTH@ 3
------------------INS SimpleType@@ExampleMatcherAccessor @TO@ ClassInstanceCreation@@ExampleMatcherAccessor[matcher] @AT@ 10485 @LENGTH@ 22
------------------INS SimpleName@@matcher @TO@ ClassInstanceCreation@@ExampleMatcherAccessor[matcher] @AT@ 10508 @LENGTH@ 7
---------------INS SimpleName@@MethodName:getStringMatcher:[] @TO@ MethodInvocation@@new ExampleMatcherAccessor(matcher).getPropertySpecifier("firstname").getStringMatcher() @AT@ 10551 @LENGTH@ 18
------------INS MethodInvocation@@is(StringMatcher.EXACT) @TO@ SimpleName@@MethodName:assertThat:[new ExampleMatcherAccessor(matcher).getPropertySpecifier("firstname").getStringMatcher(), is(StringMatcher.EXACT)] @AT@ 10575 @LENGTH@ 23
---------------INS SimpleName@@MethodName:is:[StringMatcher.EXACT] @TO@ MethodInvocation@@is(StringMatcher.EXACT) @AT@ 10575 @LENGTH@ 23
------------------INS QualifiedName@@StringMatcher.EXACT @TO@ SimpleName@@MethodName:is:[StringMatcher.EXACT] @AT@ 10578 @LENGTH@ 19
---------------------INS SimpleName@@StringMatcher @TO@ QualifiedName@@StringMatcher.EXACT @AT@ 10578 @LENGTH@ 13
---------------------INS SimpleName@@EXACT @TO@ QualifiedName@@StringMatcher.EXACT @AT@ 10592 @LENGTH@ 5
---------------INS SimpleName@@MethodName:is:[StringMatcher.EXACT] @TO@ MethodInvocation@@is(StringMatcher.EXACT) @AT@ 10575 @LENGTH@ 23
------------------INS QualifiedName@@StringMatcher.EXACT @TO@ SimpleName@@MethodName:is:[StringMatcher.EXACT] @AT@ 10578 @LENGTH@ 19
---------------------INS SimpleName@@StringMatcher @TO@ QualifiedName@@StringMatcher.EXACT @AT@ 10578 @LENGTH@ 13
---------------------INS SimpleName@@EXACT @TO@ QualifiedName@@StringMatcher.EXACT @AT@ 10592 @LENGTH@ 5


INS ExpressionStatement@@Assignment:value=value instanceof Optional ? ((Optional)value).orElse(null) : value @TO@ MethodDeclaration@@protected, DBObject, MethodName:asDBObject, String key, Object value,  @AT@ 4120 @LENGTH@ 75
---INS Assignment@@value=value instanceof Optional ? ((Optional)value).orElse(null) : value @TO@ ExpressionStatement@@Assignment:value=value instanceof Optional ? ((Optional)value).orElse(null) : value @AT@ 4120 @LENGTH@ 74
------INS SimpleName@@value @TO@ Assignment@@value=value instanceof Optional ? ((Optional)value).orElse(null) : value @AT@ 4120 @LENGTH@ 5
------INS Operator@@= @TO@ Assignment@@value=value instanceof Optional ? ((Optional)value).orElse(null) : value @AT@ 4125 @LENGTH@ 1
------INS ConditionalExpression@@value instanceof Optional ? ((Optional)value).orElse(null) : value @TO@ Assignment@@value=value instanceof Optional ? ((Optional)value).orElse(null) : value @AT@ 4128 @LENGTH@ 66
---------INS InstanceofExpression@@value instanceof Optional @TO@ ConditionalExpression@@value instanceof Optional ? ((Optional)value).orElse(null) : value @AT@ 4128 @LENGTH@ 25
------------INS SimpleName@@value @TO@ InstanceofExpression@@value instanceof Optional @AT@ 4128 @LENGTH@ 5
------------INS Instanceof@@instanceof @TO@ InstanceofExpression@@value instanceof Optional @AT@ 4134 @LENGTH@ 10
------------INS SimpleType@@Optional @TO@ InstanceofExpression@@value instanceof Optional @AT@ 4145 @LENGTH@ 8
---------INS MethodInvocation@@((Optional)value).orElse(null) @TO@ ConditionalExpression@@value instanceof Optional ? ((Optional)value).orElse(null) : value @AT@ 4156 @LENGTH@ 30
------------INS ParenthesizedExpression@@((Optional)value) @TO@ MethodInvocation@@((Optional)value).orElse(null) @AT@ 4156 @LENGTH@ 17
---------------INS CastExpression@@(Optional)value @TO@ ParenthesizedExpression@@((Optional)value) @AT@ 4157 @LENGTH@ 15
------------------INS SimpleType@@Optional @TO@ CastExpression@@(Optional)value @AT@ 4158 @LENGTH@ 8
------------------INS SimpleName@@value @TO@ CastExpression@@(Optional)value @AT@ 4167 @LENGTH@ 5
------------INS SimpleName@@MethodName:orElse:[null] @TO@ MethodInvocation@@((Optional)value).orElse(null) @AT@ 4174 @LENGTH@ 12
---------------INS NullLiteral@@null @TO@ SimpleName@@MethodName:orElse:[null] @AT@ 4181 @LENGTH@ 4
---------INS SimpleName@@value @TO@ ConditionalExpression@@value instanceof Optional ? ((Optional)value).orElse(null) : value @AT@ 4189 @LENGTH@ 5


UPD FieldDeclaration@@static, ThreadLocal<Map<String,String>>, [ctrMapFactory=new ThreadLocal<Map<String,String>>(){
  @Override protected Map<String,String> initialValue(){
    return new HashMap<String,String>();
  }
}
] @TO@ static, final, ThreadLocal<Map<String,String>>, [ctrMapFactory=new ThreadLocal<Map<String,String>>(){
  @Override protected Map<String,String> initialValue(){
    return new HashMap<String,String>();
  }
}
] @AT@ 8773 @LENGTH@ 219
---INS Modifier@@final @TO@ FieldDeclaration@@static, ThreadLocal<Map<String,String>>, [ctrMapFactory=new ThreadLocal<Map<String,String>>(){
  @Override protected Map<String,String> initialValue(){
    return new HashMap<String,String>();
  }
}
] @AT@ 8779 @LENGTH@ 5


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled(); @AT@ 5226 @LENGTH@ 160
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5234 @LENGTH@ 151
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5234 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5251 @LENGTH@ 134
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 5251 @LENGTH@ 64
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5251 @LENGTH@ 35
---------UPD MethodInvocation@@componentConfiguration.getConfigurer().isEnabled() @TO@ componentConfiguration.getCustomizer().isEnabled() @AT@ 5335 @LENGTH@ 50
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5335 @LENGTH@ 38


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<AsteriskComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<AsteriskComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5463 @LENGTH@ 341
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 5467 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5467 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  ComponentCustomizer<AsteriskComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ ThenBody:{  for (  ComponentCustomizer<AsteriskComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5523 @LENGTH@ 281
------UPD EnhancedForStatement@@for (ComponentCustomizer<AsteriskComponent> configurer : customizers) {  LOGGER.debug("Configure component {}, with configurer {}",component,configurer);  configurer.customize(component);} @TO@ for (ComponentCustomizer<AsteriskComponent> customizer : customizers) {  LOGGER.debug("Configure component {}, with customizer {}",component,customizer);  customizer.customize(component);} @AT@ 5537 @LENGTH@ 257
---------UPD SingleVariableDeclaration@@ComponentCustomizer<AsteriskComponent> configurer @TO@ ComponentCustomizer<AsteriskComponent> customizer @AT@ 5542 @LENGTH@ 49
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5581 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5625 @LENGTH@ 106
------------UPD MethodInvocation@@LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5625 @LENGTH@ 105
---------------UPD SimpleName@@MethodName:debug:["Configure component {}, with configurer {}", component, configurer] @TO@ MethodName:debug:["Configure component {}, with customizer {}", component, customizer] @AT@ 5632 @LENGTH@ 98
------------------UPD StringLiteral@@"Configure component {}, with configurer {}" @TO@ "Configure component {}, with customizer {}" @AT@ 5638 @LENGTH@ 44
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5719 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(component) @TO@ MethodInvocation:customizer.customize(component) @AT@ 5748 @LENGTH@ 32
------------UPD MethodInvocation@@configurer.customize(component) @TO@ customizer.customize(component) @AT@ 5748 @LENGTH@ 31
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5748 @LENGTH@ 10


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled(); @AT@ 5243 @LENGTH@ 160
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5251 @LENGTH@ 151
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5251 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5268 @LENGTH@ 134
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 5268 @LENGTH@ 64
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5268 @LENGTH@ 35
---------UPD MethodInvocation@@componentConfiguration.getConfigurer().isEnabled() @TO@ componentConfiguration.getCustomizer().isEnabled() @AT@ 5352 @LENGTH@ 50
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5352 @LENGTH@ 38


UPD ExpressionStatement@@Assignment:this.id=new Long(-1) @TO@ Assignment:this.id=Long.valueOf(-1) @AT@ 1295 @LENGTH@ 23
---UPD Assignment@@this.id=new Long(-1) @TO@ this.id=Long.valueOf(-1) @AT@ 1295 @LENGTH@ 22
------INS MethodInvocation@@Long.valueOf(-1) @TO@ Assignment@@this.id=new Long(-1) @AT@ 1305 @LENGTH@ 16
---------INS SimpleName@@Name:Long @TO@ MethodInvocation@@Long.valueOf(-1) @AT@ 1305 @LENGTH@ 4
---------INS SimpleName@@MethodName:valueOf:[-1] @TO@ MethodInvocation@@Long.valueOf(-1) @AT@ 1310 @LENGTH@ 11
------------INS PrefixExpression@@-1 @TO@ SimpleName@@MethodName:valueOf:[-1] @AT@ 1318 @LENGTH@ 2
---------------MOV Operator@@- @TO@ PrefixExpression@@-1 @AT@ 1314 @LENGTH@ 1
---------------MOV NumberLiteral@@1 @TO@ PrefixExpression@@-1 @AT@ 1315 @LENGTH@ 1
------DEL ClassInstanceCreation@@Long[-1] @AT@ 1305 @LENGTH@ 12
---------DEL New@@new @AT@ 1305 @LENGTH@ 3
---------DEL SimpleType@@Long @AT@ 1309 @LENGTH@ 4
---------DEL PrefixExpression@@-1 @AT@ 1314 @LENGTH@ 2


UPD MethodDeclaration@@public, void, MethodName:removeAccessTokenWhenCalledThenThrowJwkException, Exception,  @TO@ public, void, MethodName:removeAccessTokenWhenCalledThenDelegateCalled, Exception,  @AT@ 3430 @LENGTH@ 166
---INS VariableDeclarationStatement@@JwkTokenStore spy=spy(this.jwkTokenStore); @TO@ MethodDeclaration@@public, void, MethodName:removeAccessTokenWhenCalledThenThrowJwkException, Exception,  @AT@ 3331 @LENGTH@ 44
------INS SimpleType@@JwkTokenStore @TO@ VariableDeclarationStatement@@JwkTokenStore spy=spy(this.jwkTokenStore); @AT@ 3331 @LENGTH@ 13
------INS VariableDeclarationFragment@@spy=spy(this.jwkTokenStore) @TO@ VariableDeclarationStatement@@JwkTokenStore spy=spy(this.jwkTokenStore); @AT@ 3345 @LENGTH@ 29
---------INS SimpleName@@spy @TO@ VariableDeclarationFragment@@spy=spy(this.jwkTokenStore) @AT@ 3345 @LENGTH@ 3
---------INS MethodInvocation@@spy(this.jwkTokenStore) @TO@ VariableDeclarationFragment@@spy=spy(this.jwkTokenStore) @AT@ 3351 @LENGTH@ 23
------------INS SimpleName@@MethodName:spy:[this.jwkTokenStore] @TO@ MethodInvocation@@spy(this.jwkTokenStore) @AT@ 3351 @LENGTH@ 23
---------------INS FieldAccess@@this.jwkTokenStore @TO@ SimpleName@@MethodName:spy:[this.jwkTokenStore] @AT@ 3355 @LENGTH@ 18
------------------INS ThisExpression@@this @TO@ FieldAccess@@this.jwkTokenStore @AT@ 3355 @LENGTH@ 4
------------------INS SimpleName@@jwkTokenStore @TO@ FieldAccess@@this.jwkTokenStore @AT@ 3360 @LENGTH@ 13
------------INS SimpleName@@MethodName:spy:[this.jwkTokenStore] @TO@ MethodInvocation@@spy(this.jwkTokenStore) @AT@ 3351 @LENGTH@ 23
---------------INS FieldAccess@@this.jwkTokenStore @TO@ SimpleName@@MethodName:spy:[this.jwkTokenStore] @AT@ 3355 @LENGTH@ 18
------------------INS ThisExpression@@this @TO@ FieldAccess@@this.jwkTokenStore @AT@ 3355 @LENGTH@ 4
------------------INS SimpleName@@jwkTokenStore @TO@ FieldAccess@@this.jwkTokenStore @AT@ 3360 @LENGTH@ 13
---INS VariableDeclarationStatement@@JwtTokenStore delegate=mock(JwtTokenStore.class); @TO@ MethodDeclaration@@public, void, MethodName:removeAccessTokenWhenCalledThenThrowJwkException, Exception,  @AT@ 3378 @LENGTH@ 51
------INS SimpleType@@JwtTokenStore @TO@ VariableDeclarationStatement@@JwtTokenStore delegate=mock(JwtTokenStore.class); @AT@ 3378 @LENGTH@ 13
------INS VariableDeclarationFragment@@delegate=mock(JwtTokenStore.class) @TO@ VariableDeclarationStatement@@JwtTokenStore delegate=mock(JwtTokenStore.class); @AT@ 3392 @LENGTH@ 36
---------INS SimpleName@@delegate @TO@ VariableDeclarationFragment@@delegate=mock(JwtTokenStore.class) @AT@ 3392 @LENGTH@ 8
---------INS MethodInvocation@@mock(JwtTokenStore.class) @TO@ VariableDeclarationFragment@@delegate=mock(JwtTokenStore.class) @AT@ 3403 @LENGTH@ 25
------------INS SimpleName@@MethodName:mock:[JwtTokenStore.class] @TO@ MethodInvocation@@mock(JwtTokenStore.class) @AT@ 3403 @LENGTH@ 25
---------------INS TypeLiteral@@JwtTokenStore.class @TO@ SimpleName@@MethodName:mock:[JwtTokenStore.class] @AT@ 3408 @LENGTH@ 19
------------INS SimpleName@@MethodName:mock:[JwtTokenStore.class] @TO@ MethodInvocation@@mock(JwtTokenStore.class) @AT@ 3403 @LENGTH@ 25
---------------INS TypeLiteral@@JwtTokenStore.class @TO@ SimpleName@@MethodName:mock:[JwtTokenStore.class] @AT@ 3408 @LENGTH@ 19
---INS ExpressionStatement@@MethodInvocation:doNothing().when(delegate).removeAccessToken(any(OAuth2AccessToken.class)) @TO@ MethodDeclaration@@public, void, MethodName:removeAccessTokenWhenCalledThenThrowJwkException, Exception,  @AT@ 3433 @LENGTH@ 75
------INS MethodInvocation@@doNothing().when(delegate).removeAccessToken(any(OAuth2AccessToken.class)) @TO@ ExpressionStatement@@MethodInvocation:doNothing().when(delegate).removeAccessToken(any(OAuth2AccessToken.class)) @AT@ 3433 @LENGTH@ 74
---------INS MethodInvocation@@MethodName:when:[delegate] @TO@ MethodInvocation@@doNothing().when(delegate).removeAccessToken(any(OAuth2AccessToken.class)) @AT@ 3433 @LENGTH@ 26
------------INS SimpleName@@delegate @TO@ MethodInvocation@@MethodName:when:[delegate] @AT@ 3450 @LENGTH@ 8
---------INS MethodInvocation@@MethodName:doNothing:[] @TO@ MethodInvocation@@doNothing().when(delegate).removeAccessToken(any(OAuth2AccessToken.class)) @AT@ 3433 @LENGTH@ 11
---------INS SimpleName@@MethodName:removeAccessToken:[any(OAuth2AccessToken.class)] @TO@ MethodInvocation@@doNothing().when(delegate).removeAccessToken(any(OAuth2AccessToken.class)) @AT@ 3460 @LENGTH@ 47
------------INS MethodInvocation@@any(OAuth2AccessToken.class) @TO@ SimpleName@@MethodName:removeAccessToken:[any(OAuth2AccessToken.class)] @AT@ 3478 @LENGTH@ 28
---------------INS SimpleName@@MethodName:any:[OAuth2AccessToken.class] @TO@ MethodInvocation@@any(OAuth2AccessToken.class) @AT@ 3478 @LENGTH@ 28
------------------INS TypeLiteral@@OAuth2AccessToken.class @TO@ SimpleName@@MethodName:any:[OAuth2AccessToken.class] @AT@ 3482 @LENGTH@ 23
---UPD SimpleName@@MethodName:removeAccessTokenWhenCalledThenThrowJwkException @TO@ MethodName:removeAccessTokenWhenCalledThenDelegateCalled @AT@ 3442 @LENGTH@ 48
---INS VariableDeclarationStatement@@Field field=ReflectionUtils.findField(spy.getClass(),"delegate"); @TO@ MethodDeclaration@@public, void, MethodName:removeAccessTokenWhenCalledThenThrowJwkException, Exception,  @AT@ 3512 @LENGTH@ 68
------INS SimpleType@@Field @TO@ VariableDeclarationStatement@@Field field=ReflectionUtils.findField(spy.getClass(),"delegate"); @AT@ 3512 @LENGTH@ 5
------INS VariableDeclarationFragment@@field=ReflectionUtils.findField(spy.getClass(),"delegate") @TO@ VariableDeclarationStatement@@Field field=ReflectionUtils.findField(spy.getClass(),"delegate"); @AT@ 3518 @LENGTH@ 61
---------INS SimpleName@@field @TO@ VariableDeclarationFragment@@field=ReflectionUtils.findField(spy.getClass(),"delegate") @AT@ 3518 @LENGTH@ 5
---------INS MethodInvocation@@ReflectionUtils.findField(spy.getClass(),"delegate") @TO@ VariableDeclarationFragment@@field=ReflectionUtils.findField(spy.getClass(),"delegate") @AT@ 3526 @LENGTH@ 53
------------INS SimpleName@@Name:ReflectionUtils @TO@ MethodInvocation@@ReflectionUtils.findField(spy.getClass(),"delegate") @AT@ 3526 @LENGTH@ 15
------------INS SimpleName@@MethodName:findField:[spy.getClass(), "delegate"] @TO@ MethodInvocation@@ReflectionUtils.findField(spy.getClass(),"delegate") @AT@ 3542 @LENGTH@ 37
---------------INS MethodInvocation@@spy.getClass() @TO@ SimpleName@@MethodName:findField:[spy.getClass(), "delegate"] @AT@ 3552 @LENGTH@ 14
------------------INS SimpleName@@Name:spy @TO@ MethodInvocation@@spy.getClass() @AT@ 3552 @LENGTH@ 3
------------------INS SimpleName@@MethodName:getClass:[] @TO@ MethodInvocation@@spy.getClass() @AT@ 3556 @LENGTH@ 10
---------------INS StringLiteral@@"delegate" @TO@ SimpleName@@MethodName:findField:[spy.getClass(), "delegate"] @AT@ 3568 @LENGTH@ 10
---DEL ExpressionStatement@@MethodInvocation:this.setUpExpectedJwkException() @AT@ 3514 @LENGTH@ 33
------DEL MethodInvocation@@this.setUpExpectedJwkException() @AT@ 3514 @LENGTH@ 32
---------DEL ThisExpression@@this @AT@ 3514 @LENGTH@ 4
---------DEL SimpleName@@MethodName:setUpExpectedJwkException:[] @AT@ 3519 @LENGTH@ 27
---UPD ExpressionStatement@@MethodInvocation:this.jwkTokenStore.removeAccessToken(null) @TO@ MethodInvocation:spy.removeAccessToken(any(OAuth2AccessToken.class)) @AT@ 3550 @LENGTH@ 43
------UPD MethodInvocation@@this.jwkTokenStore.removeAccessToken(null) @TO@ spy.removeAccessToken(any(OAuth2AccessToken.class)) @AT@ 3550 @LENGTH@ 42
---------DEL FieldAccess@@this.jwkTokenStore @AT@ 3550 @LENGTH@ 18
------------DEL ThisExpression@@this @AT@ 3550 @LENGTH@ 4
------------DEL SimpleName@@jwkTokenStore @AT@ 3555 @LENGTH@ 13
---------UPD SimpleName@@MethodName:removeAccessToken:[null] @TO@ MethodName:removeAccessToken:[any(OAuth2AccessToken.class)] @AT@ 3569 @LENGTH@ 23
------------DEL NullLiteral@@null @AT@ 3587 @LENGTH@ 4
------------INS MethodInvocation@@any(OAuth2AccessToken.class) @TO@ SimpleName@@MethodName:removeAccessToken:[null] @AT@ 3685 @LENGTH@ 28
---------------INS SimpleName@@MethodName:any:[OAuth2AccessToken.class] @TO@ MethodInvocation@@any(OAuth2AccessToken.class) @AT@ 3685 @LENGTH@ 28
------------------INS TypeLiteral@@OAuth2AccessToken.class @TO@ SimpleName@@MethodName:any:[OAuth2AccessToken.class] @AT@ 3689 @LENGTH@ 23
---------INS SimpleName@@Name:spy @TO@ MethodInvocation@@this.jwkTokenStore.removeAccessToken(null) @AT@ 3663 @LENGTH@ 3
---INS ExpressionStatement@@MethodInvocation:field.setAccessible(true) @TO@ MethodDeclaration@@public, void, MethodName:removeAccessTokenWhenCalledThenThrowJwkException, Exception,  @AT@ 3583 @LENGTH@ 26
------INS MethodInvocation@@field.setAccessible(true) @TO@ ExpressionStatement@@MethodInvocation:field.setAccessible(true) @AT@ 3583 @LENGTH@ 25
---------INS SimpleName@@Name:field @TO@ MethodInvocation@@field.setAccessible(true) @AT@ 3583 @LENGTH@ 5
---------INS SimpleName@@MethodName:setAccessible:[true] @TO@ MethodInvocation@@field.setAccessible(true) @AT@ 3589 @LENGTH@ 19
------------INS BooleanLiteral@@true @TO@ SimpleName@@MethodName:setAccessible:[true] @AT@ 3603 @LENGTH@ 4
---INS ExpressionStatement@@MethodInvocation:ReflectionUtils.setField(field,spy,delegate) @TO@ MethodDeclaration@@public, void, MethodName:removeAccessTokenWhenCalledThenThrowJwkException, Exception,  @AT@ 3612 @LENGTH@ 47
------INS MethodInvocation@@ReflectionUtils.setField(field,spy,delegate) @TO@ ExpressionStatement@@MethodInvocation:ReflectionUtils.setField(field,spy,delegate) @AT@ 3612 @LENGTH@ 46
---------INS SimpleName@@Name:ReflectionUtils @TO@ MethodInvocation@@ReflectionUtils.setField(field,spy,delegate) @AT@ 3612 @LENGTH@ 15
---------INS SimpleName@@MethodName:setField:[field, spy, delegate] @TO@ MethodInvocation@@ReflectionUtils.setField(field,spy,delegate) @AT@ 3628 @LENGTH@ 30
------------INS SimpleName@@field @TO@ SimpleName@@MethodName:setField:[field, spy, delegate] @AT@ 3637 @LENGTH@ 5
------------INS SimpleName@@spy @TO@ SimpleName@@MethodName:setField:[field, spy, delegate] @AT@ 3644 @LENGTH@ 3
------------INS SimpleName@@delegate @TO@ SimpleName@@MethodName:setField:[field, spy, delegate] @AT@ 3649 @LENGTH@ 8
---INS ExpressionStatement@@MethodInvocation:verify(delegate).removeAccessToken(any(OAuth2AccessToken.class)) @TO@ MethodDeclaration@@public, void, MethodName:removeAccessTokenWhenCalledThenThrowJwkException, Exception,  @AT@ 3718 @LENGTH@ 65
------INS MethodInvocation@@verify(delegate).removeAccessToken(any(OAuth2AccessToken.class)) @TO@ ExpressionStatement@@MethodInvocation:verify(delegate).removeAccessToken(any(OAuth2AccessToken.class)) @AT@ 3718 @LENGTH@ 64
---------INS MethodInvocation@@MethodName:verify:[delegate] @TO@ MethodInvocation@@verify(delegate).removeAccessToken(any(OAuth2AccessToken.class)) @AT@ 3718 @LENGTH@ 16
------------INS SimpleName@@delegate @TO@ MethodInvocation@@MethodName:verify:[delegate] @AT@ 3725 @LENGTH@ 8
---------INS SimpleName@@MethodName:removeAccessToken:[any(OAuth2AccessToken.class)] @TO@ MethodInvocation@@verify(delegate).removeAccessToken(any(OAuth2AccessToken.class)) @AT@ 3735 @LENGTH@ 47
------------INS MethodInvocation@@any(OAuth2AccessToken.class) @TO@ SimpleName@@MethodName:removeAccessToken:[any(OAuth2AccessToken.class)] @AT@ 3753 @LENGTH@ 28
---------------INS SimpleName@@MethodName:any:[OAuth2AccessToken.class] @TO@ MethodInvocation@@any(OAuth2AccessToken.class) @AT@ 3753 @LENGTH@ 28
------------------INS TypeLiteral@@OAuth2AccessToken.class @TO@ SimpleName@@MethodName:any:[OAuth2AccessToken.class] @AT@ 3757 @LENGTH@ 23


DEL MethodDeclaration@@public, boolean, MethodName:equals, Object other,  @AT@ 4579 @LENGTH@ 491
---DEL Modifier@@public @AT@ 4579 @LENGTH@ 6
---DEL PrimitiveType@@boolean @AT@ 4586 @LENGTH@ 7
---DEL SimpleName@@MethodName:equals @AT@ 4594 @LENGTH@ 6
---DEL SingleVariableDeclaration@@Object other @AT@ 4601 @LENGTH@ 12
------DEL SimpleType@@Object @AT@ 4601 @LENGTH@ 6
------DEL SimpleName@@other @AT@ 4608 @LENGTH@ 5
---DEL IfStatement@@if (other == null) {  return false;} @AT@ 4625 @LENGTH@ 36
------DEL InfixExpression@@other == null @AT@ 4629 @LENGTH@ 13
---------DEL SimpleName@@other @AT@ 4629 @LENGTH@ 5
---------DEL Operator@@== @AT@ 4634 @LENGTH@ 2
---------DEL NullLiteral@@null @AT@ 4638 @LENGTH@ 4
------DEL Block@@ThenBody:{  return false;} @AT@ 4644 @LENGTH@ 17
---------DEL ReturnStatement@@BooleanLiteral:false @AT@ 4646 @LENGTH@ 13
------------DEL BooleanLiteral@@false @AT@ 4653 @LENGTH@ 5
---DEL IfStatement@@if (other == this) {  return true;} @AT@ 4670 @LENGTH@ 35
------DEL InfixExpression@@other == this @AT@ 4674 @LENGTH@ 13
---------DEL SimpleName@@other @AT@ 4674 @LENGTH@ 5
---------DEL Operator@@== @AT@ 4679 @LENGTH@ 2
---------DEL ThisExpression@@this @AT@ 4683 @LENGTH@ 4
------DEL Block@@ThenBody:{  return true;} @AT@ 4689 @LENGTH@ 16
---------DEL ReturnStatement@@BooleanLiteral:true @AT@ 4691 @LENGTH@ 12
------------DEL BooleanLiteral@@true @AT@ 4698 @LENGTH@ 4
---DEL IfStatement@@if (!(other instanceof MultipleErrorResourceAdapter)) {  return false;} @AT@ 4714 @LENGTH@ 71
------DEL PrefixExpression@@!(other instanceof MultipleErrorResourceAdapter) @AT@ 4718 @LENGTH@ 48
---------DEL Operator@@! @AT@ 4718 @LENGTH@ 1
---------DEL ParenthesizedExpression@@(other instanceof MultipleErrorResourceAdapter) @AT@ 4719 @LENGTH@ 47
------------DEL InstanceofExpression@@other instanceof MultipleErrorResourceAdapter @AT@ 4720 @LENGTH@ 45
---------------DEL SimpleName@@other @AT@ 4720 @LENGTH@ 5
---------------DEL Instanceof@@instanceof @AT@ 4726 @LENGTH@ 10
---------------DEL SimpleType@@MultipleErrorResourceAdapter @AT@ 4737 @LENGTH@ 28
------DEL Block@@ThenBody:{  return false;} @AT@ 4768 @LENGTH@ 17
---------DEL ReturnStatement@@BooleanLiteral:false @AT@ 4770 @LENGTH@ 13
------------DEL BooleanLiteral@@false @AT@ 4777 @LENGTH@ 5
---DEL VariableDeclarationStatement@@MultipleErrorResourceAdapter obj=(MultipleErrorResourceAdapter)other; @AT@ 4794 @LENGTH@ 72
------DEL SimpleType@@MultipleErrorResourceAdapter @AT@ 4794 @LENGTH@ 28
------DEL VariableDeclarationFragment@@obj=(MultipleErrorResourceAdapter)other @AT@ 4823 @LENGTH@ 42
---------DEL SimpleName@@obj @AT@ 4823 @LENGTH@ 3
---------DEL CastExpression@@(MultipleErrorResourceAdapter)other @AT@ 4829 @LENGTH@ 36
------------DEL SimpleType@@MultipleErrorResourceAdapter @AT@ 4830 @LENGTH@ 28
------------DEL SimpleName@@other @AT@ 4860 @LENGTH@ 5
---DEL VariableDeclarationStatement@@boolean result=true; @AT@ 4875 @LENGTH@ 22
------DEL PrimitiveType@@boolean @AT@ 4875 @LENGTH@ 7
------DEL VariableDeclarationFragment@@result=true @AT@ 4883 @LENGTH@ 13
---------DEL SimpleName@@result @AT@ 4883 @LENGTH@ 6
---------DEL BooleanLiteral@@true @AT@ 4892 @LENGTH@ 4
---DEL IfStatement@@if (result) {  if (name == null) {    result=obj.getName() == null;  } else {    result=name.equals(obj.getName());  }} @AT@ 4906 @LENGTH@ 135
------DEL SimpleName@@result @AT@ 4910 @LENGTH@ 6
------DEL Block@@ThenBody:{  if (name == null) {    result=obj.getName() == null;  } else {    result=name.equals(obj.getName());  }} @AT@ 4918 @LENGTH@ 123
---------DEL IfStatement@@if (name == null) {  result=obj.getName() == null;} else {  result=name.equals(obj.getName());} @AT@ 4932 @LENGTH@ 99
------------DEL InfixExpression@@name == null @AT@ 4936 @LENGTH@ 12
---------------DEL SimpleName@@name @AT@ 4936 @LENGTH@ 4
---------------DEL Operator@@== @AT@ 4940 @LENGTH@ 2
---------------DEL NullLiteral@@null @AT@ 4944 @LENGTH@ 4
------------DEL Block@@ThenBody:{  result=obj.getName() == null;} @AT@ 4950 @LENGTH@ 35
---------------DEL ExpressionStatement@@Assignment:result=obj.getName() == null @AT@ 4952 @LENGTH@ 31
------------------DEL Assignment@@result=obj.getName() == null @AT@ 4952 @LENGTH@ 30
---------------------DEL SimpleName@@result @AT@ 4952 @LENGTH@ 6
---------------------DEL Operator@@= @AT@ 4958 @LENGTH@ 1
---------------------DEL InfixExpression@@obj.getName() == null @AT@ 4961 @LENGTH@ 21
------------------------DEL MethodInvocation@@obj.getName() @AT@ 4961 @LENGTH@ 13
---------------------------DEL SimpleName@@Name:obj @AT@ 4961 @LENGTH@ 3
---------------------------DEL SimpleName@@MethodName:getName:[] @AT@ 4965 @LENGTH@ 9
------------------------DEL Operator@@== @AT@ 4974 @LENGTH@ 2
------------------------DEL NullLiteral@@null @AT@ 4978 @LENGTH@ 4
------------DEL Block@@ElseBody:{  result=name.equals(obj.getName());} @AT@ 4991 @LENGTH@ 40
---------------DEL ExpressionStatement@@Assignment:result=name.equals(obj.getName()) @AT@ 4993 @LENGTH@ 36
------------------DEL Assignment@@result=name.equals(obj.getName()) @AT@ 4993 @LENGTH@ 35
---------------------DEL SimpleName@@result @AT@ 4993 @LENGTH@ 6
---------------------DEL Operator@@= @AT@ 4999 @LENGTH@ 1
---------------------DEL MethodInvocation@@name.equals(obj.getName()) @AT@ 5002 @LENGTH@ 26
------------------------DEL SimpleName@@Name:name @AT@ 5002 @LENGTH@ 4
------------------------DEL SimpleName@@MethodName:equals:[obj.getName()] @AT@ 5007 @LENGTH@ 21
---------------------------DEL MethodInvocation@@obj.getName() @AT@ 5014 @LENGTH@ 13
------------------------------DEL SimpleName@@Name:obj @AT@ 5014 @LENGTH@ 3
------------------------------DEL SimpleName@@MethodName:getName:[] @AT@ 5018 @LENGTH@ 9
---DEL ReturnStatement@@SimpleName:result @AT@ 5050 @LENGTH@ 14
------DEL SimpleName@@result @AT@ 5057 @LENGTH@ 6


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && dataformatConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && dataformatConfiguration.getCustomizer().isEnabled(); @AT@ 5070 @LENGTH@ 177
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && dataformatConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && dataformatConfiguration.getCustomizer().isEnabled() @AT@ 5078 @LENGTH@ 168
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5078 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && dataformatConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && dataformatConfiguration.getCustomizer().isEnabled() @AT@ 5095 @LENGTH@ 151
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 5095 @LENGTH@ 72
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5095 @LENGTH@ 35
---------UPD MethodInvocation@@dataformatConfiguration.getConfigurer().isEnabled() @TO@ dataformatConfiguration.getCustomizer().isEnabled() @AT@ 5195 @LENGTH@ 51
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5195 @LENGTH@ 39


UPD FieldDeclaration@@protected, final, static, Logger, [LOG=LoggerFactory.getLogger(StatsSetupConst.class.getName())] @TO@ protected, static, final, Logger, [LOG=LoggerFactory.getLogger(StatsSetupConst.class.getName())] @AT@ 2001 @LENGTH@ 93
---INS Modifier@@static @TO@ FieldDeclaration@@protected, final, static, Logger, [LOG=LoggerFactory.getLogger(StatsSetupConst.class.getName())] @AT@ 2011 @LENGTH@ 6
---DEL Modifier@@static @AT@ 2017 @LENGTH@ 6


UPD VariableDeclarationStatement@@ResultErrorBuilder errorBuilder=ResultErrorBuilder.withHttpCodeAndText(e.getStatusCode(),e.getErrorMessage()).attribute("twitter.error.code",e.getErrorCode()).attribute("twitter.status.code",e.getStatusCode()).attribute("twitter.exception.code",e.getExceptionCode()).attribute("twitter.exception.message",e.getMessage()).attribute("twitter.exception.instance",e); @TO@ ResultErrorBuilder errorBuilder=ResultErrorBuilder.withCodeAndDescription(ComponentVerifier.CODE_AUTHENTICATION,e.getErrorMessage()).attribute("twitter.error.code",e.getErrorCode()).attribute("twitter.status.code",e.getStatusCode()).attribute("twitter.exception.code",e.getExceptionCode()).attribute("twitter.exception.message",e.getMessage()).attribute("twitter.exception.caused-by-network-issue",e.isCausedByNetworkIssue()).attribute(ComponentVerifier.EXCEPTION_CLASS,e.getClass().getName()).attribute(ComponentVerifier.EXCEPTION_INSTANCE,e); @AT@ 3039 @LENGTH@ 456
---UPD VariableDeclarationFragment@@errorBuilder=ResultErrorBuilder.withHttpCodeAndText(e.getStatusCode(),e.getErrorMessage()).attribute("twitter.error.code",e.getErrorCode()).attribute("twitter.status.code",e.getStatusCode()).attribute("twitter.exception.code",e.getExceptionCode()).attribute("twitter.exception.message",e.getMessage()).attribute("twitter.exception.instance",e) @TO@ errorBuilder=ResultErrorBuilder.withCodeAndDescription(ComponentVerifier.CODE_AUTHENTICATION,e.getErrorMessage()).attribute("twitter.error.code",e.getErrorCode()).attribute("twitter.status.code",e.getStatusCode()).attribute("twitter.exception.code",e.getExceptionCode()).attribute("twitter.exception.message",e.getMessage()).attribute("twitter.exception.caused-by-network-issue",e.isCausedByNetworkIssue()).attribute(ComponentVerifier.EXCEPTION_CLASS,e.getClass().getName()).attribute(ComponentVerifier.EXCEPTION_INSTANCE,e) @AT@ 3058 @LENGTH@ 436
------UPD MethodInvocation@@ResultErrorBuilder.withHttpCodeAndText(e.getStatusCode(),e.getErrorMessage()).attribute("twitter.error.code",e.getErrorCode()).attribute("twitter.status.code",e.getStatusCode()).attribute("twitter.exception.code",e.getExceptionCode()).attribute("twitter.exception.message",e.getMessage()).attribute("twitter.exception.instance",e) @TO@ ResultErrorBuilder.withCodeAndDescription(ComponentVerifier.CODE_AUTHENTICATION,e.getErrorMessage()).attribute("twitter.error.code",e.getErrorCode()).attribute("twitter.status.code",e.getStatusCode()).attribute("twitter.exception.code",e.getExceptionCode()).attribute("twitter.exception.message",e.getMessage()).attribute("twitter.exception.caused-by-network-issue",e.isCausedByNetworkIssue()).attribute(ComponentVerifier.EXCEPTION_CLASS,e.getClass().getName()).attribute(ComponentVerifier.EXCEPTION_INSTANCE,e) @AT@ 3073 @LENGTH@ 421
---------DEL MethodInvocation@@MethodName:withHttpCodeAndText:[e.getStatusCode(), e.getErrorMessage()] @AT@ 3073 @LENGTH@ 78
---------INS MethodInvocation@@MethodName:attribute:[ComponentVerifier.EXCEPTION_CLASS, e.getClass().getName()] @TO@ MethodInvocation@@ResultErrorBuilder.withHttpCodeAndText(e.getStatusCode(),e.getErrorMessage()).attribute("twitter.error.code",e.getErrorCode()).attribute("twitter.status.code",e.getStatusCode()).attribute("twitter.exception.code",e.getExceptionCode()).attribute("twitter.exception.message",e.getMessage()).attribute("twitter.exception.instance",e) @AT@ 3116 @LENGTH@ 570
------------MOV MethodInvocation@@e.getErrorMessage() @TO@ MethodInvocation@@MethodName:attribute:[ComponentVerifier.EXCEPTION_CLASS, e.getClass().getName()] @AT@ 3131 @LENGTH@ 19
---------------INS MethodInvocation@@MethodName:getClass:[] @TO@ MethodInvocation@@e.getErrorMessage() @AT@ 3663 @LENGTH@ 12
------------INS QualifiedName@@ComponentVerifier.EXCEPTION_CLASS @TO@ MethodInvocation@@MethodName:attribute:[ComponentVerifier.EXCEPTION_CLASS, e.getClass().getName()] @AT@ 3628 @LENGTH@ 33
---------------INS SimpleName@@ComponentVerifier @TO@ QualifiedName@@ComponentVerifier.EXCEPTION_CLASS @AT@ 3628 @LENGTH@ 17
---------------INS SimpleName@@EXCEPTION_CLASS @TO@ QualifiedName@@ComponentVerifier.EXCEPTION_CLASS @AT@ 3646 @LENGTH@ 15
---------INS MethodInvocation@@MethodName:attribute:["twitter.exception.caused-by-network-issue", e.isCausedByNetworkIssue()] @TO@ MethodInvocation@@ResultErrorBuilder.withHttpCodeAndText(e.getStatusCode(),e.getErrorMessage()).attribute("twitter.error.code",e.getErrorCode()).attribute("twitter.status.code",e.getStatusCode()).attribute("twitter.exception.code",e.getExceptionCode()).attribute("twitter.exception.message",e.getMessage()).attribute("twitter.exception.instance",e) @AT@ 3116 @LENGTH@ 484
------------INS StringLiteral@@"twitter.exception.caused-by-network-issue" @TO@ MethodInvocation@@MethodName:attribute:["twitter.exception.caused-by-network-issue", e.isCausedByNetworkIssue()] @AT@ 3528 @LENGTH@ 43
------------INS MethodInvocation@@e.isCausedByNetworkIssue() @TO@ MethodInvocation@@MethodName:attribute:["twitter.exception.caused-by-network-issue", e.isCausedByNetworkIssue()] @AT@ 3573 @LENGTH@ 26
---------------INS SimpleName@@Name:e @TO@ MethodInvocation@@e.isCausedByNetworkIssue() @AT@ 3573 @LENGTH@ 1
---------------INS SimpleName@@MethodName:isCausedByNetworkIssue:[] @TO@ MethodInvocation@@e.isCausedByNetworkIssue() @AT@ 3575 @LENGTH@ 24
---------INS MethodInvocation@@MethodName:withCodeAndDescription:[ComponentVerifier.CODE_AUTHENTICATION, e.getErrorMessage()] @TO@ MethodInvocation@@ResultErrorBuilder.withHttpCodeAndText(e.getStatusCode(),e.getErrorMessage()).attribute("twitter.error.code",e.getErrorCode()).attribute("twitter.status.code",e.getStatusCode()).attribute("twitter.exception.code",e.getExceptionCode()).attribute("twitter.exception.message",e.getMessage()).attribute("twitter.exception.instance",e) @AT@ 3116 @LENGTH@ 101
------------MOV MethodInvocation@@e.getStatusCode() @TO@ MethodInvocation@@MethodName:withCodeAndDescription:[ComponentVerifier.CODE_AUTHENTICATION, e.getErrorMessage()] @AT@ 3112 @LENGTH@ 17
---------------UPD SimpleName@@MethodName:getStatusCode:[] @TO@ MethodName:getErrorMessage:[] @AT@ 3114 @LENGTH@ 15
------------INS QualifiedName@@ComponentVerifier.CODE_AUTHENTICATION @TO@ MethodInvocation@@MethodName:withCodeAndDescription:[ComponentVerifier.CODE_AUTHENTICATION, e.getErrorMessage()] @AT@ 3158 @LENGTH@ 37
---------------INS SimpleName@@ComponentVerifier @TO@ QualifiedName@@ComponentVerifier.CODE_AUTHENTICATION @AT@ 3158 @LENGTH@ 17
---------------INS SimpleName@@CODE_AUTHENTICATION @TO@ QualifiedName@@ComponentVerifier.CODE_AUTHENTICATION @AT@ 3176 @LENGTH@ 19
---------UPD SimpleName@@MethodName:attribute:["twitter.exception.instance", e] @TO@ MethodName:attribute:[ComponentVerifier.EXCEPTION_INSTANCE, e] @AT@ 3452 @LENGTH@ 42
------------DEL StringLiteral@@"twitter.exception.instance" @AT@ 3462 @LENGTH@ 28
------------INS QualifiedName@@ComponentVerifier.EXCEPTION_INSTANCE @TO@ SimpleName@@MethodName:attribute:["twitter.exception.instance", e] @AT@ 3714 @LENGTH@ 36
---------------INS SimpleName@@ComponentVerifier @TO@ QualifiedName@@ComponentVerifier.EXCEPTION_INSTANCE @AT@ 3714 @LENGTH@ 17
---------------INS SimpleName@@EXCEPTION_INSTANCE @TO@ QualifiedName@@ComponentVerifier.EXCEPTION_INSTANCE @AT@ 3732 @LENGTH@ 18


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<BrowseComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<BrowseComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5429 @LENGTH@ 339
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 5433 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5433 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  ComponentCustomizer<BrowseComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ ThenBody:{  for (  ComponentCustomizer<BrowseComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5489 @LENGTH@ 279
------UPD EnhancedForStatement@@for (ComponentCustomizer<BrowseComponent> configurer : customizers) {  LOGGER.debug("Configure component {}, with configurer {}",component,configurer);  configurer.customize(component);} @TO@ for (ComponentCustomizer<BrowseComponent> customizer : customizers) {  LOGGER.debug("Configure component {}, with customizer {}",component,customizer);  customizer.customize(component);} @AT@ 5503 @LENGTH@ 255
---------UPD SingleVariableDeclaration@@ComponentCustomizer<BrowseComponent> configurer @TO@ ComponentCustomizer<BrowseComponent> customizer @AT@ 5508 @LENGTH@ 47
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5545 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5589 @LENGTH@ 106
------------UPD MethodInvocation@@LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5589 @LENGTH@ 105
---------------UPD SimpleName@@MethodName:debug:["Configure component {}, with configurer {}", component, configurer] @TO@ MethodName:debug:["Configure component {}, with customizer {}", component, customizer] @AT@ 5596 @LENGTH@ 98
------------------UPD StringLiteral@@"Configure component {}, with configurer {}" @TO@ "Configure component {}, with customizer {}" @AT@ 5602 @LENGTH@ 44
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5683 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(component) @TO@ MethodInvocation:customizer.customize(component) @AT@ 5712 @LENGTH@ 32
------------UPD MethodInvocation@@configurer.customize(component) @TO@ customizer.customize(component) @AT@ 5712 @LENGTH@ 31
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5712 @LENGTH@ 10


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled(); @AT@ 5298 @LENGTH@ 160
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5306 @LENGTH@ 151
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5306 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5323 @LENGTH@ 134
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 5323 @LENGTH@ 64
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5323 @LENGTH@ 35
---------UPD MethodInvocation@@componentConfiguration.getConfigurer().isEnabled() @TO@ componentConfiguration.getCustomizer().isEnabled() @AT@ 5407 @LENGTH@ 50
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5407 @LENGTH@ 38


INS TryStatement@@try {  doTest("org/apache/camel/spring/CircularComponentCreationSimpleTest.xml");  Assert.fail("Exception should have been thrown");} catch (Exception e) {  Assert.assertTrue(e instanceof RuntimeCamelException);  Assert.assertTrue(e.getCause() instanceof FailedToCreateRouteException);} @TO@ MethodDeclaration@@public, void, MethodName:testSimple,  @AT@ 1309 @LENGTH@ 349
---MOV ExpressionStatement@@MethodInvocation:doTest("org/apache/camel/spring/CircularComponentCreationSimpleTest.xml") @TO@ TryStatement@@try {  doTest("org/apache/camel/spring/CircularComponentCreationSimpleTest.xml");  Assert.fail("Exception should have been thrown");} catch (Exception e) {  Assert.assertTrue(e instanceof RuntimeCamelException);  Assert.assertTrue(e.getCause() instanceof FailedToCreateRouteException);} @AT@ 1309 @LENGTH@ 74
---INS ExpressionStatement@@MethodInvocation:Assert.fail("Exception should have been thrown") @TO@ TryStatement@@try {  doTest("org/apache/camel/spring/CircularComponentCreationSimpleTest.xml");  Assert.fail("Exception should have been thrown");} catch (Exception e) {  Assert.assertTrue(e instanceof RuntimeCamelException);  Assert.assertTrue(e.getCause() instanceof FailedToCreateRouteException);} @AT@ 1415 @LENGTH@ 49
------INS MethodInvocation@@Assert.fail("Exception should have been thrown") @TO@ ExpressionStatement@@MethodInvocation:Assert.fail("Exception should have been thrown") @AT@ 1415 @LENGTH@ 48
---------INS SimpleName@@Name:Assert @TO@ MethodInvocation@@Assert.fail("Exception should have been thrown") @AT@ 1415 @LENGTH@ 6
---------INS SimpleName@@MethodName:fail:["Exception should have been thrown"] @TO@ MethodInvocation@@Assert.fail("Exception should have been thrown") @AT@ 1422 @LENGTH@ 41
------------INS StringLiteral@@"Exception should have been thrown" @TO@ SimpleName@@MethodName:fail:["Exception should have been thrown"] @AT@ 1427 @LENGTH@ 35
---MOV CatchClause@@catch (Exception e) {  Assert.assertTrue(e instanceof RuntimeCamelException);  Assert.assertTrue(e.getCause() instanceof FailedToCreateRouteException);} @TO@ TryStatement@@try {  doTest("org/apache/camel/spring/CircularComponentCreationSimpleTest.xml");  Assert.fail("Exception should have been thrown");} catch (Exception e) {  Assert.assertTrue(e instanceof RuntimeCamelException);  Assert.assertTrue(e.getCause() instanceof FailedToCreateRouteException);} @AT@ 1946 @LENGTH@ 183


UPD ExpressionStatement@@MethodInvocation:mvc.perform(formLogin().user("user").password("invalid")).andExpect(status().isFound()).andExpect(redirectUrl("/login?error")).andExpect(unauthenticated()) @TO@ MethodInvocation:mvc.perform(formLogin().user("user").password("invalid")).andExpect(status().isFound()).andExpect(redirectedUrl("/login?error")).andExpect(unauthenticated()) @AT@ 3283 @LENGTH@ 171
---UPD MethodInvocation@@mvc.perform(formLogin().user("user").password("invalid")).andExpect(status().isFound()).andExpect(redirectUrl("/login?error")).andExpect(unauthenticated()) @TO@ mvc.perform(formLogin().user("user").password("invalid")).andExpect(status().isFound()).andExpect(redirectedUrl("/login?error")).andExpect(unauthenticated()) @AT@ 3283 @LENGTH@ 170
------UPD MethodInvocation@@MethodName:andExpect:[redirectUrl("/login?error")] @TO@ MethodName:andExpect:[redirectedUrl("/login?error")] @AT@ 3283 @LENGTH@ 136
---------UPD MethodInvocation@@redirectUrl("/login?error") @TO@ redirectedUrl("/login?error") @AT@ 3391 @LENGTH@ 27
------------UPD SimpleName@@MethodName:redirectUrl:["/login?error"] @TO@ MethodName:redirectedUrl:["/login?error"] @AT@ 3391 @LENGTH@ 27


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<LinkedInComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<LinkedInComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5463 @LENGTH@ 341
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 5467 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5467 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  ComponentCustomizer<LinkedInComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ ThenBody:{  for (  ComponentCustomizer<LinkedInComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5523 @LENGTH@ 281
------UPD EnhancedForStatement@@for (ComponentCustomizer<LinkedInComponent> configurer : customizers) {  LOGGER.debug("Configure component {}, with configurer {}",component,configurer);  configurer.customize(component);} @TO@ for (ComponentCustomizer<LinkedInComponent> customizer : customizers) {  LOGGER.debug("Configure component {}, with customizer {}",component,customizer);  customizer.customize(component);} @AT@ 5537 @LENGTH@ 257
---------UPD SingleVariableDeclaration@@ComponentCustomizer<LinkedInComponent> configurer @TO@ ComponentCustomizer<LinkedInComponent> customizer @AT@ 5542 @LENGTH@ 49
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5581 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5625 @LENGTH@ 106
------------UPD MethodInvocation@@LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5625 @LENGTH@ 105
---------------UPD SimpleName@@MethodName:debug:["Configure component {}, with configurer {}", component, configurer] @TO@ MethodName:debug:["Configure component {}, with customizer {}", component, customizer] @AT@ 5632 @LENGTH@ 98
------------------UPD StringLiteral@@"Configure component {}, with configurer {}" @TO@ "Configure component {}, with customizer {}" @AT@ 5638 @LENGTH@ 44
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5719 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(component) @TO@ MethodInvocation:customizer.customize(component) @AT@ 5748 @LENGTH@ 32
------------UPD MethodInvocation@@configurer.customize(component) @TO@ customizer.customize(component) @AT@ 5748 @LENGTH@ 31
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5748 @LENGTH@ 10


UPD VariableDeclarationStatement@@ReturnedType returnedType=processor.withDynamicProjection(accessor).getReturnedType(); @TO@ ReturnedType returnedType=processor.withDynamicProjection(Optional.of(accessor)).getReturnedType(); @AT@ 3476 @LENGTH@ 88
---UPD VariableDeclarationFragment@@returnedType=processor.withDynamicProjection(accessor).getReturnedType() @TO@ returnedType=processor.withDynamicProjection(Optional.of(accessor)).getReturnedType() @AT@ 3489 @LENGTH@ 74
------UPD MethodInvocation@@processor.withDynamicProjection(accessor).getReturnedType() @TO@ processor.withDynamicProjection(Optional.of(accessor)).getReturnedType() @AT@ 3504 @LENGTH@ 59
---------UPD MethodInvocation@@MethodName:withDynamicProjection:[accessor] @TO@ MethodName:withDynamicProjection:[Optional.of(accessor)] @AT@ 3504 @LENGTH@ 41
------------DEL SimpleName@@accessor @AT@ 3536 @LENGTH@ 8
------------INS MethodInvocation@@Optional.of(accessor) @TO@ MethodInvocation@@MethodName:withDynamicProjection:[accessor] @AT@ 3564 @LENGTH@ 21
---------------INS SimpleName@@Name:Optional @TO@ MethodInvocation@@Optional.of(accessor) @AT@ 3564 @LENGTH@ 8
---------------INS SimpleName@@MethodName:of:[accessor] @TO@ MethodInvocation@@Optional.of(accessor) @AT@ 3573 @LENGTH@ 12
------------------INS SimpleName@@accessor @TO@ SimpleName@@MethodName:of:[accessor] @AT@ 3576 @LENGTH@ 8


UPD ReturnStatement@@MethodInvocation:annotations.stream().filter(isAnnotationType(type)).findAny().map(type::cast).orElse(null) @TO@ MethodInvocation:annotations.stream().filter(isAnnotationType(type)).findFirst().map(type::cast).orElse(null) @AT@ 1600 @LENGTH@ 150
---UPD MethodInvocation@@annotations.stream().filter(isAnnotationType(type)).findAny().map(type::cast).orElse(null) @TO@ annotations.stream().filter(isAnnotationType(type)).findFirst().map(type::cast).orElse(null) @AT@ 1607 @LENGTH@ 142
------UPD MethodInvocation@@MethodName:findAny:[] @TO@ MethodName:findFirst:[] @AT@ 1607 @LENGTH@ 87


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<MQTTComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<MQTTComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5395 @LENGTH@ 337
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 5399 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5399 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  ComponentCustomizer<MQTTComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ ThenBody:{  for (  ComponentCustomizer<MQTTComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5455 @LENGTH@ 277
------UPD EnhancedForStatement@@for (ComponentCustomizer<MQTTComponent> configurer : customizers) {  LOGGER.debug("Configure component {}, with configurer {}",component,configurer);  configurer.customize(component);} @TO@ for (ComponentCustomizer<MQTTComponent> customizer : customizers) {  LOGGER.debug("Configure component {}, with customizer {}",component,customizer);  customizer.customize(component);} @AT@ 5469 @LENGTH@ 253
---------UPD SingleVariableDeclaration@@ComponentCustomizer<MQTTComponent> configurer @TO@ ComponentCustomizer<MQTTComponent> customizer @AT@ 5474 @LENGTH@ 45
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5509 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5553 @LENGTH@ 106
------------UPD MethodInvocation@@LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5553 @LENGTH@ 105
---------------UPD SimpleName@@MethodName:debug:["Configure component {}, with configurer {}", component, configurer] @TO@ MethodName:debug:["Configure component {}, with customizer {}", component, customizer] @AT@ 5560 @LENGTH@ 98
------------------UPD StringLiteral@@"Configure component {}, with configurer {}" @TO@ "Configure component {}, with customizer {}" @AT@ 5566 @LENGTH@ 44
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5647 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(component) @TO@ MethodInvocation:customizer.customize(component) @AT@ 5676 @LENGTH@ 32
------------UPD MethodInvocation@@configurer.customize(component) @TO@ customizer.customize(component) @AT@ 5676 @LENGTH@ 31
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5676 @LENGTH@ 10


UPD ReturnStatement@@MethodInvocation:Collections.emptyList() @TO@ ClassInstanceCreation:new ArrayList<Object>() @AT@ 11442 @LENGTH@ 31
---DEL MethodInvocation@@Collections.emptyList() @AT@ 11449 @LENGTH@ 23
------DEL SimpleName@@Name:Collections @AT@ 11449 @LENGTH@ 11
------DEL SimpleName@@MethodName:emptyList:[] @AT@ 11461 @LENGTH@ 11
---INS ClassInstanceCreation@@ArrayList<Object>[] @TO@ ReturnStatement@@MethodInvocation:Collections.emptyList() @AT@ 11449 @LENGTH@ 23
------INS New@@new @TO@ ClassInstanceCreation@@ArrayList<Object>[] @AT@ 11449 @LENGTH@ 3
------INS ParameterizedType@@ArrayList<Object> @TO@ ClassInstanceCreation@@ArrayList<Object>[] @AT@ 11453 @LENGTH@ 17
---------INS SimpleType@@ArrayList @TO@ ParameterizedType@@ArrayList<Object> @AT@ 11453 @LENGTH@ 9
---------INS SimpleType@@Object @TO@ ParameterizedType@@ArrayList<Object> @AT@ 11463 @LENGTH@ 6


UPD ExpressionStatement@@MethodInvocation:cmdRegistry.registerHandler(new GenericTypeOperationHandler(ctx,nodePath,propName),cmdName) @TO@ MethodInvocation:cmdRegistry.registerHandler(new GenericTypeOperationHandler(cmdName,ctx,nodePath,propName),cmdName) @AT@ 7661 @LENGTH@ 95
---UPD MethodInvocation@@cmdRegistry.registerHandler(new GenericTypeOperationHandler(ctx,nodePath,propName),cmdName) @TO@ cmdRegistry.registerHandler(new GenericTypeOperationHandler(cmdName,ctx,nodePath,propName),cmdName) @AT@ 7661 @LENGTH@ 94
------UPD SimpleName@@MethodName:registerHandler:[new GenericTypeOperationHandler(ctx,nodePath,propName), cmdName] @TO@ MethodName:registerHandler:[new GenericTypeOperationHandler(cmdName,ctx,nodePath,propName), cmdName] @AT@ 7673 @LENGTH@ 82
---------UPD ClassInstanceCreation@@GenericTypeOperationHandler[ctx, nodePath, propName] @TO@ GenericTypeOperationHandler[cmdName, ctx, nodePath, propName] @AT@ 7689 @LENGTH@ 56
------------INS SimpleName@@cmdName @TO@ ClassInstanceCreation@@GenericTypeOperationHandler[ctx, nodePath, propName] @AT@ 7721 @LENGTH@ 7


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled(); @AT@ 5226 @LENGTH@ 160
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5234 @LENGTH@ 151
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5234 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5251 @LENGTH@ 134
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 5251 @LENGTH@ 64
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5251 @LENGTH@ 35
---------UPD MethodInvocation@@componentConfiguration.getConfigurer().isEnabled() @TO@ componentConfiguration.getCustomizer().isEnabled() @AT@ 5335 @LENGTH@ 50
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5335 @LENGTH@ 38


UPD MethodDeclaration@@public, void, MethodName:cacheSetup, @CliOption(key="provider",mandatory=false,help="Parameter that indicates the provider to use for managing intermediate memory.") String provider, ShellContext shellContext,  @TO@ public, void, MethodName:cacheSetup, @CliOption(key="provider",mandatory=false,help="Parameter that indicates the provider to use for managing intermediate memory. " + "Possible values are: `GUAVA`.") String provider, ShellContext shellContext,  @AT@ 3461 @LENGTH@ 633
---UPD SingleVariableDeclaration@@@CliOption(key="provider",mandatory=false,help="Parameter that indicates the provider to use for managing intermediate memory.") String provider @TO@ @CliOption(key="provider",mandatory=false,help="Parameter that indicates the provider to use for managing intermediate memory. " + "Possible values are: `GUAVA`.") String provider @AT@ 3491 @LENGTH@ 162


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<StringTemplateComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<StringTemplateComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5599 @LENGTH@ 347
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 5603 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5603 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  ComponentCustomizer<StringTemplateComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ ThenBody:{  for (  ComponentCustomizer<StringTemplateComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5659 @LENGTH@ 287
------UPD EnhancedForStatement@@for (ComponentCustomizer<StringTemplateComponent> configurer : customizers) {  LOGGER.debug("Configure component {}, with configurer {}",component,configurer);  configurer.customize(component);} @TO@ for (ComponentCustomizer<StringTemplateComponent> customizer : customizers) {  LOGGER.debug("Configure component {}, with customizer {}",component,customizer);  customizer.customize(component);} @AT@ 5673 @LENGTH@ 263
---------UPD SingleVariableDeclaration@@ComponentCustomizer<StringTemplateComponent> configurer @TO@ ComponentCustomizer<StringTemplateComponent> customizer @AT@ 5678 @LENGTH@ 55
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5723 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5767 @LENGTH@ 106
------------UPD MethodInvocation@@LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5767 @LENGTH@ 105
---------------UPD SimpleName@@MethodName:debug:["Configure component {}, with configurer {}", component, configurer] @TO@ MethodName:debug:["Configure component {}, with customizer {}", component, customizer] @AT@ 5774 @LENGTH@ 98
------------------UPD StringLiteral@@"Configure component {}, with configurer {}" @TO@ "Configure component {}, with customizer {}" @AT@ 5780 @LENGTH@ 44
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5861 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(component) @TO@ MethodInvocation:customizer.customize(component) @AT@ 5890 @LENGTH@ 32
------------UPD MethodInvocation@@configurer.customize(component) @TO@ customizer.customize(component) @AT@ 5890 @LENGTH@ 31
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5890 @LENGTH@ 10


UPD ReturnStatement@@CastExpression:(T)((Defaultable)value).get() @TO@ MethodInvocation:((Defaultable<T>)value).get() @AT@ 1370 @LENGTH@ 39
---DEL CastExpression@@(T)((Defaultable)value).get() @AT@ 1377 @LENGTH@ 31
------DEL SimpleType@@T @AT@ 1378 @LENGTH@ 1
------DEL MethodInvocation@@((Defaultable)value).get() @AT@ 1381 @LENGTH@ 27
---INS MethodInvocation@@((Defaultable<T>)value).get() @TO@ ReturnStatement@@CastExpression:(T)((Defaultable)value).get() @AT@ 1450 @LENGTH@ 30
------MOV ParenthesizedExpression@@((Defaultable)value) @TO@ MethodInvocation@@((Defaultable<T>)value).get() @AT@ 1381 @LENGTH@ 21
---------UPD CastExpression@@(Defaultable)value @TO@ (Defaultable<T>)value @AT@ 1382 @LENGTH@ 19
------------DEL SimpleType@@Defaultable @AT@ 1383 @LENGTH@ 11
------------INS ParameterizedType@@Defaultable<T> @TO@ CastExpression@@(Defaultable)value @AT@ 1452 @LENGTH@ 14
---------------INS SimpleType@@Defaultable @TO@ ParameterizedType@@Defaultable<T> @AT@ 1452 @LENGTH@ 11
---------------INS SimpleType@@T @TO@ ParameterizedType@@Defaultable<T> @AT@ 1464 @LENGTH@ 1
------MOV SimpleName@@MethodName:get:[] @TO@ MethodInvocation@@((Defaultable<T>)value).get() @AT@ 1403 @LENGTH@ 5


UPD FieldDeclaration@@static, String, [delimiter="\\."] @TO@ static, final, String, [delimiter="\\."] @AT@ 76136 @LENGTH@ 32
---INS Modifier@@final @TO@ FieldDeclaration@@static, String, [delimiter="\\."] @AT@ 76143 @LENGTH@ 5


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<Sjms2Component> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<Sjms2Component> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5412 @LENGTH@ 338
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 5416 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5416 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  ComponentCustomizer<Sjms2Component> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ ThenBody:{  for (  ComponentCustomizer<Sjms2Component> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5472 @LENGTH@ 278
------UPD EnhancedForStatement@@for (ComponentCustomizer<Sjms2Component> configurer : customizers) {  LOGGER.debug("Configure component {}, with configurer {}",component,configurer);  configurer.customize(component);} @TO@ for (ComponentCustomizer<Sjms2Component> customizer : customizers) {  LOGGER.debug("Configure component {}, with customizer {}",component,customizer);  customizer.customize(component);} @AT@ 5486 @LENGTH@ 254
---------UPD SingleVariableDeclaration@@ComponentCustomizer<Sjms2Component> configurer @TO@ ComponentCustomizer<Sjms2Component> customizer @AT@ 5491 @LENGTH@ 46
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5527 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5571 @LENGTH@ 106
------------UPD MethodInvocation@@LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5571 @LENGTH@ 105
---------------UPD SimpleName@@MethodName:debug:["Configure component {}, with configurer {}", component, configurer] @TO@ MethodName:debug:["Configure component {}, with customizer {}", component, customizer] @AT@ 5578 @LENGTH@ 98
------------------UPD StringLiteral@@"Configure component {}, with configurer {}" @TO@ "Configure component {}, with customizer {}" @AT@ 5584 @LENGTH@ 44
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5665 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(component) @TO@ MethodInvocation:customizer.customize(component) @AT@ 5694 @LENGTH@ 32
------------UPD MethodInvocation@@configurer.customize(component) @TO@ customizer.customize(component) @AT@ 5694 @LENGTH@ 31
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5694 @LENGTH@ 10


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled(); @AT@ 5206 @LENGTH@ 160
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5214 @LENGTH@ 151
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5214 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5231 @LENGTH@ 134
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 5231 @LENGTH@ 64
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5231 @LENGTH@ 35
---------UPD MethodInvocation@@componentConfiguration.getConfigurer().isEnabled() @TO@ componentConfiguration.getCustomizer().isEnabled() @AT@ 5315 @LENGTH@ 50
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5315 @LENGTH@ 38


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<JMXComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<JMXComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5378 @LENGTH@ 336
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 5382 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5382 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  ComponentCustomizer<JMXComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ ThenBody:{  for (  ComponentCustomizer<JMXComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5438 @LENGTH@ 276
------UPD EnhancedForStatement@@for (ComponentCustomizer<JMXComponent> configurer : customizers) {  LOGGER.debug("Configure component {}, with configurer {}",component,configurer);  configurer.customize(component);} @TO@ for (ComponentCustomizer<JMXComponent> customizer : customizers) {  LOGGER.debug("Configure component {}, with customizer {}",component,customizer);  customizer.customize(component);} @AT@ 5452 @LENGTH@ 252
---------UPD SingleVariableDeclaration@@ComponentCustomizer<JMXComponent> configurer @TO@ ComponentCustomizer<JMXComponent> customizer @AT@ 5457 @LENGTH@ 44
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5491 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5535 @LENGTH@ 106
------------UPD MethodInvocation@@LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5535 @LENGTH@ 105
---------------UPD SimpleName@@MethodName:debug:["Configure component {}, with configurer {}", component, configurer] @TO@ MethodName:debug:["Configure component {}, with customizer {}", component, customizer] @AT@ 5542 @LENGTH@ 98
------------------UPD StringLiteral@@"Configure component {}, with configurer {}" @TO@ "Configure component {}, with customizer {}" @AT@ 5548 @LENGTH@ 44
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5629 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(component) @TO@ MethodInvocation:customizer.customize(component) @AT@ 5658 @LENGTH@ 32
------------UPD MethodInvocation@@configurer.customize(component) @TO@ customizer.customize(component) @AT@ 5658 @LENGTH@ 31
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5658 @LENGTH@ 10


DEL EnumDeclaration@@[public]QueryStrategy,  @AT@ 1627 @LENGTH@ 183
---DEL Modifier@@public @AT@ 1627 @LENGTH@ 6
---DEL SimpleName@@QueryStrategy @AT@ 1639 @LENGTH@ 13
---DEL EnumConstantDeclaration@@TimeStamp @AT@ 1663 @LENGTH@ 9
------DEL SimpleName@@TimeStamp @AT@ 1663 @LENGTH@ 9
---DEL EnumConstantDeclaration@@PersistentTimestamp @AT@ 1682 @LENGTH@ 19
------DEL SimpleName@@PersistentTimestamp @AT@ 1682 @LENGTH@ 19
---DEL EnumConstantDeclaration@@FileAttribute @AT@ 1711 @LENGTH@ 13
------DEL SimpleName@@FileAttribute @AT@ 1711 @LENGTH@ 13
---DEL EnumConstantDeclaration@@TimeStampAndFileAttribute @AT@ 1734 @LENGTH@ 25
------DEL SimpleName@@TimeStampAndFileAttribute @AT@ 1734 @LENGTH@ 25
---DEL EnumConstantDeclaration@@PersistentTimestampAndFileAttribute @AT@ 1769 @LENGTH@ 35
------DEL SimpleName@@PersistentTimestampAndFileAttribute @AT@ 1769 @LENGTH@ 35


UPD TryStatement@@try {  if (this.channel.isOpen()) {    this.channel.basicCancel(consumerTag);  }} catch (IOException|IllegalStateException e) {  if (logger.isDebugEnabled()) {    logger.debug("Error performing 'basicCancel'",e);  }}catch (AlreadyClosedException e) {  if (logger.isTraceEnabled()) {    logger.trace(this.channel + " is already closed");  }} @TO@ try {  if (this.channel.isOpen()) {    this.channel.basicCancel(consumerTag);  }} catch (IOException|IllegalStateException e) {  if (logger.isDebugEnabled()) {    logger.debug("Error performing 'basicCancel'",e);  }}catch (IllegalStateException e) {  if (logger.isDebugEnabled()) {    logger.debug("Error performing 'basicCancel'",e);  }}catch (AlreadyClosedException e) {  if (logger.isTraceEnabled()) {    logger.trace(this.channel + " is already closed");  }} @AT@ 13001 @LENGTH@ 386
---INS CatchClause@@catch (IllegalStateException e) {  if (logger.isDebugEnabled()) {    logger.debug("Error performing 'basicCancel'",e);  }} @TO@ TryStatement@@try {  if (this.channel.isOpen()) {    this.channel.basicCancel(consumerTag);  }} catch (IOException|IllegalStateException e) {  if (logger.isDebugEnabled()) {    logger.debug("Error performing 'basicCancel'",e);  }}catch (AlreadyClosedException e) {  if (logger.isTraceEnabled()) {    logger.trace(this.channel + " is already closed");  }} @AT@ 13251 @LENGTH@ 135
------INS SingleVariableDeclaration@@IllegalStateException e @TO@ CatchClause@@catch (IllegalStateException e) {  if (logger.isDebugEnabled()) {    logger.debug("Error performing 'basicCancel'",e);  }} @AT@ 13258 @LENGTH@ 23
---------INS SimpleType@@IllegalStateException @TO@ SingleVariableDeclaration@@IllegalStateException e @AT@ 13258 @LENGTH@ 21
---------INS SimpleName@@e @TO@ SingleVariableDeclaration@@IllegalStateException e @AT@ 13280 @LENGTH@ 1
------INS IfStatement@@if (logger.isDebugEnabled()) {  logger.debug("Error performing 'basicCancel'",e);} @TO@ CatchClause@@catch (IllegalStateException e) {  if (logger.isDebugEnabled()) {    logger.debug("Error performing 'basicCancel'",e);  }} @AT@ 13289 @LENGTH@ 92
---------INS MethodInvocation@@logger.isDebugEnabled() @TO@ IfStatement@@if (logger.isDebugEnabled()) {  logger.debug("Error performing 'basicCancel'",e);} @AT@ 13293 @LENGTH@ 23
------------INS SimpleName@@Name:logger @TO@ MethodInvocation@@logger.isDebugEnabled() @AT@ 13293 @LENGTH@ 6
------------INS SimpleName@@MethodName:isDebugEnabled:[] @TO@ MethodInvocation@@logger.isDebugEnabled() @AT@ 13300 @LENGTH@ 16
---------INS Block@@ThenBody:{  logger.debug("Error performing 'basicCancel'",e);} @TO@ IfStatement@@if (logger.isDebugEnabled()) {  logger.debug("Error performing 'basicCancel'",e);} @AT@ 13318 @LENGTH@ 63
------------INS ExpressionStatement@@MethodInvocation:logger.debug("Error performing 'basicCancel'",e) @TO@ Block@@ThenBody:{  logger.debug("Error performing 'basicCancel'",e);} @AT@ 13325 @LENGTH@ 50
---------------INS MethodInvocation@@logger.debug("Error performing 'basicCancel'",e) @TO@ ExpressionStatement@@MethodInvocation:logger.debug("Error performing 'basicCancel'",e) @AT@ 13325 @LENGTH@ 49
------------------INS SimpleName@@Name:logger @TO@ MethodInvocation@@logger.debug("Error performing 'basicCancel'",e) @AT@ 13325 @LENGTH@ 6
------------------INS SimpleName@@MethodName:debug:["Error performing 'basicCancel'", e] @TO@ MethodInvocation@@logger.debug("Error performing 'basicCancel'",e) @AT@ 13332 @LENGTH@ 42
---------------------INS StringLiteral@@"Error performing 'basicCancel'" @TO@ SimpleName@@MethodName:debug:["Error performing 'basicCancel'", e] @AT@ 13338 @LENGTH@ 32
---------------------INS SimpleName@@e @TO@ SimpleName@@MethodName:debug:["Error performing 'basicCancel'", e] @AT@ 13372 @LENGTH@ 1


UPD FieldDeclaration@@public, static, String, [INPUT_SEPERATOR=":"] @TO@ public, static, final, String, [INPUT_SEPERATOR=":"] @AT@ 9581 @LENGTH@ 43
---INS Modifier@@final @TO@ FieldDeclaration@@public, static, String, [INPUT_SEPERATOR=":"] @AT@ 9487 @LENGTH@ 5


UPD VariableDeclarationStatement@@MethodInfo existingMethodInfo=overridesExistingMethod(methodInfo); @TO@ MethodInfo existingMethodInfo=findMostSpecificOverride(methodInfo); @AT@ 18972 @LENGTH@ 68
---UPD VariableDeclarationFragment@@existingMethodInfo=overridesExistingMethod(methodInfo) @TO@ existingMethodInfo=findMostSpecificOverride(methodInfo) @AT@ 18983 @LENGTH@ 56
------UPD MethodInvocation@@overridesExistingMethod(methodInfo) @TO@ findMostSpecificOverride(methodInfo) @AT@ 19004 @LENGTH@ 35
---------UPD SimpleName@@MethodName:overridesExistingMethod:[methodInfo] @TO@ MethodName:findMostSpecificOverride:[methodInfo] @AT@ 19004 @LENGTH@ 35


UPD ReturnStatement@@QualifiedName:Collections.EMPTY_SET @TO@ MethodInvocation:Collections.emptySet() @AT@ 2313 @LENGTH@ 29
---DEL QualifiedName@@Collections.EMPTY_SET @AT@ 2320 @LENGTH@ 21
------DEL SimpleName@@Collections @AT@ 2320 @LENGTH@ 11
------DEL SimpleName@@EMPTY_SET @AT@ 2332 @LENGTH@ 9
---INS MethodInvocation@@Collections.emptySet() @TO@ ReturnStatement@@QualifiedName:Collections.EMPTY_SET @AT@ 2321 @LENGTH@ 22
------INS SimpleName@@Name:Collections @TO@ MethodInvocation@@Collections.emptySet() @AT@ 2321 @LENGTH@ 11
------INS SimpleName@@MethodName:emptySet:[] @TO@ MethodInvocation@@Collections.emptySet() @AT@ 2333 @LENGTH@ 10


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled(); @AT@ 5311 @LENGTH@ 160
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5319 @LENGTH@ 151
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5319 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5336 @LENGTH@ 134
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 5336 @LENGTH@ 64
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5336 @LENGTH@ 35
---------UPD MethodInvocation@@componentConfiguration.getConfigurer().isEnabled() @TO@ componentConfiguration.getCustomizer().isEnabled() @AT@ 5420 @LENGTH@ 50
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5420 @LENGTH@ 38


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<FlinkComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<FlinkComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5412 @LENGTH@ 338
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 5416 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5416 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  ComponentCustomizer<FlinkComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ ThenBody:{  for (  ComponentCustomizer<FlinkComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5472 @LENGTH@ 278
------UPD EnhancedForStatement@@for (ComponentCustomizer<FlinkComponent> configurer : customizers) {  LOGGER.debug("Configure component {}, with configurer {}",component,configurer);  configurer.customize(component);} @TO@ for (ComponentCustomizer<FlinkComponent> customizer : customizers) {  LOGGER.debug("Configure component {}, with customizer {}",component,customizer);  customizer.customize(component);} @AT@ 5486 @LENGTH@ 254
---------UPD SingleVariableDeclaration@@ComponentCustomizer<FlinkComponent> configurer @TO@ ComponentCustomizer<FlinkComponent> customizer @AT@ 5491 @LENGTH@ 46
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5527 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5571 @LENGTH@ 106
------------UPD MethodInvocation@@LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5571 @LENGTH@ 105
---------------UPD SimpleName@@MethodName:debug:["Configure component {}, with configurer {}", component, configurer] @TO@ MethodName:debug:["Configure component {}, with customizer {}", component, customizer] @AT@ 5578 @LENGTH@ 98
------------------UPD StringLiteral@@"Configure component {}, with configurer {}" @TO@ "Configure component {}, with customizer {}" @AT@ 5584 @LENGTH@ 44
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5665 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(component) @TO@ MethodInvocation:customizer.customize(component) @AT@ 5694 @LENGTH@ 32
------------UPD MethodInvocation@@configurer.customize(component) @TO@ customizer.customize(component) @AT@ 5694 @LENGTH@ 31
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5694 @LENGTH@ 10


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled(); @AT@ 5247 @LENGTH@ 160
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5255 @LENGTH@ 151
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5255 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5272 @LENGTH@ 134
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 5272 @LENGTH@ 64
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5272 @LENGTH@ 35
---------UPD MethodInvocation@@componentConfiguration.getConfigurer().isEnabled() @TO@ componentConfiguration.getCustomizer().isEnabled() @AT@ 5356 @LENGTH@ 50
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5356 @LENGTH@ 38


INS MethodDeclaration@@public, Class<?>, MethodName:getOptionType,  @TO@ TypeDeclaration@@[public]OptionAttributeDefinition, SimpleAttributeDefinition @AT@ 2033 @LENGTH@ 66
---INS Modifier@@public @TO@ MethodDeclaration@@public, Class<?>, MethodName:getOptionType,  @AT@ 2033 @LENGTH@ 6
---INS ParameterizedType@@Class<?> @TO@ MethodDeclaration@@public, Class<?>, MethodName:getOptionType,  @AT@ 2040 @LENGTH@ 8
------INS SimpleType@@Class @TO@ ParameterizedType@@Class<?> @AT@ 2040 @LENGTH@ 5
------INS WildcardType@@? @TO@ ParameterizedType@@Class<?> @AT@ 2046 @LENGTH@ 1
---INS SimpleName@@MethodName:getOptionType @TO@ MethodDeclaration@@public, Class<?>, MethodName:getOptionType,  @AT@ 2049 @LENGTH@ 13
---INS ReturnStatement@@SimpleName:optionType @TO@ MethodDeclaration@@public, Class<?>, MethodName:getOptionType,  @AT@ 2075 @LENGTH@ 18
------INS SimpleName@@optionType @TO@ ReturnStatement@@SimpleName:optionType @AT@ 2082 @LENGTH@ 10


INS ExpressionStatement@@MethodInvocation:http.authorizeRequests().anyRequest().authenticated() @TO@ MethodDeclaration@@public, void, MethodName:configure, HttpSecurity http, Exception,  @AT@ 1173 @LENGTH@ 54
---INS MethodInvocation@@http.authorizeRequests().anyRequest().authenticated() @TO@ ExpressionStatement@@MethodInvocation:http.authorizeRequests().anyRequest().authenticated() @AT@ 1173 @LENGTH@ 53
------INS MethodInvocation@@MethodName:anyRequest:[] @TO@ MethodInvocation@@http.authorizeRequests().anyRequest().authenticated() @AT@ 1173 @LENGTH@ 37
------INS MethodInvocation@@MethodName:authorizeRequests:[] @TO@ MethodInvocation@@http.authorizeRequests().anyRequest().authenticated() @AT@ 1173 @LENGTH@ 24
------INS SimpleName@@Name:http @TO@ MethodInvocation@@http.authorizeRequests().anyRequest().authenticated() @AT@ 1173 @LENGTH@ 4
------INS SimpleName@@MethodName:authenticated:[] @TO@ MethodInvocation@@http.authorizeRequests().anyRequest().authenticated() @AT@ 1211 @LENGTH@ 15


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled(); @AT@ 5277 @LENGTH@ 160
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5285 @LENGTH@ 151
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5285 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5302 @LENGTH@ 134
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 5302 @LENGTH@ 64
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5302 @LENGTH@ 35
---------UPD MethodInvocation@@componentConfiguration.getConfigurer().isEnabled() @TO@ componentConfiguration.getCustomizer().isEnabled() @AT@ 5386 @LENGTH@ 50
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5386 @LENGTH@ 38


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && languageConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && languageConfiguration.getCustomizer().isEnabled(); @AT@ 4555 @LENGTH@ 159
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && languageConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && languageConfiguration.getCustomizer().isEnabled() @AT@ 4563 @LENGTH@ 150
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 4563 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && languageConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && languageConfiguration.getCustomizer().isEnabled() @AT@ 4580 @LENGTH@ 133
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 4580 @LENGTH@ 64
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 4580 @LENGTH@ 35
---------UPD MethodInvocation@@languageConfiguration.getConfigurer().isEnabled() @TO@ languageConfiguration.getCustomizer().isEnabled() @AT@ 4664 @LENGTH@ 49
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 4664 @LENGTH@ 37


UPD FieldDeclaration@@private, DefaultTokenServices, [services] @TO@ private, AuthorizationServerTokenServices, [services] @AT@ 906 @LENGTH@ 38
---UPD SimpleType@@DefaultTokenServices @TO@ AuthorizationServerTokenServices @AT@ 914 @LENGTH@ 20


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled(); @AT@ 5225 @LENGTH@ 160
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5233 @LENGTH@ 151
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5233 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5250 @LENGTH@ 134
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 5250 @LENGTH@ 64
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5250 @LENGTH@ 35
---------UPD MethodInvocation@@componentConfiguration.getConfigurer().isEnabled() @TO@ componentConfiguration.getCustomizer().isEnabled() @AT@ 5334 @LENGTH@ 50
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5334 @LENGTH@ 38


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && languageConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && languageConfiguration.getCustomizer().isEnabled(); @AT@ 4521 @LENGTH@ 159
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && languageConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && languageConfiguration.getCustomizer().isEnabled() @AT@ 4529 @LENGTH@ 150
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 4529 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && languageConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && languageConfiguration.getCustomizer().isEnabled() @AT@ 4546 @LENGTH@ 133
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 4546 @LENGTH@ 64
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 4546 @LENGTH@ 35
---------UPD MethodInvocation@@languageConfiguration.getConfigurer().isEnabled() @TO@ languageConfiguration.getCustomizer().isEnabled() @AT@ 4630 @LENGTH@ 49
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 4630 @LENGTH@ 37


UPD VariableDeclarationStatement@@Matcher m=SHARD_ITERATOR_PATTERN.matcher(shardIterator); @TO@ Matcher m=shardIteratorPattern.matcher(shardIterator); @AT@ 9036 @LENGTH@ 58
---UPD VariableDeclarationFragment@@m=SHARD_ITERATOR_PATTERN.matcher(shardIterator) @TO@ m=shardIteratorPattern.matcher(shardIterator) @AT@ 9044 @LENGTH@ 49
------UPD MethodInvocation@@SHARD_ITERATOR_PATTERN.matcher(shardIterator) @TO@ shardIteratorPattern.matcher(shardIterator) @AT@ 9048 @LENGTH@ 45
---------UPD SimpleName@@Name:SHARD_ITERATOR_PATTERN @TO@ Name:shardIteratorPattern @AT@ 9048 @LENGTH@ 22


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled(); @AT@ 5226 @LENGTH@ 160
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5234 @LENGTH@ 151
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5234 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5251 @LENGTH@ 134
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 5251 @LENGTH@ 64
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5251 @LENGTH@ 35
---------UPD MethodInvocation@@componentConfiguration.getConfigurer().isEnabled() @TO@ componentConfiguration.getCustomizer().isEnabled() @AT@ 5335 @LENGTH@ 50
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5335 @LENGTH@ 38


UPD VariableDeclarationStatement@@final ModelNode model=Resource.Tools.readModel(context.readResource(PathAddress.EMPTY_ADDRESS)); @TO@ final ModelNode model=context.readResource(PathAddress.EMPTY_ADDRESS).getModel(); @AT@ 3902 @LENGTH@ 98
---UPD VariableDeclarationFragment@@model=Resource.Tools.readModel(context.readResource(PathAddress.EMPTY_ADDRESS)) @TO@ model=context.readResource(PathAddress.EMPTY_ADDRESS).getModel() @AT@ 3918 @LENGTH@ 81
------INS MethodInvocation@@context.readResource(PathAddress.EMPTY_ADDRESS).getModel() @TO@ VariableDeclarationFragment@@model=Resource.Tools.readModel(context.readResource(PathAddress.EMPTY_ADDRESS)) @AT@ 3876 @LENGTH@ 58
---------INS MethodInvocation@@MethodName:readResource:[PathAddress.EMPTY_ADDRESS] @TO@ MethodInvocation@@context.readResource(PathAddress.EMPTY_ADDRESS).getModel() @AT@ 3876 @LENGTH@ 47
------------INS QualifiedName@@PathAddress.EMPTY_ADDRESS @TO@ MethodInvocation@@MethodName:readResource:[PathAddress.EMPTY_ADDRESS] @AT@ 3897 @LENGTH@ 25
---------------MOV SimpleName@@PathAddress @TO@ QualifiedName@@PathAddress.EMPTY_ADDRESS @AT@ 3972 @LENGTH@ 11
---------------MOV SimpleName@@EMPTY_ADDRESS @TO@ QualifiedName@@PathAddress.EMPTY_ADDRESS @AT@ 3984 @LENGTH@ 13
---------INS SimpleName@@MethodName:getModel:[] @TO@ MethodInvocation@@context.readResource(PathAddress.EMPTY_ADDRESS).getModel() @AT@ 3924 @LENGTH@ 10
---------MOV SimpleName@@Name:context @TO@ MethodInvocation@@context.readResource(PathAddress.EMPTY_ADDRESS).getModel() @AT@ 3951 @LENGTH@ 7
------DEL MethodInvocation@@Resource.Tools.readModel(context.readResource(PathAddress.EMPTY_ADDRESS)) @AT@ 3926 @LENGTH@ 73
---------DEL QualifiedName@@Name:Resource.Tools @AT@ 3926 @LENGTH@ 14
---------DEL SimpleName@@MethodName:readModel:[context.readResource(PathAddress.EMPTY_ADDRESS)] @AT@ 3941 @LENGTH@ 58
------------DEL MethodInvocation@@context.readResource(PathAddress.EMPTY_ADDRESS) @AT@ 3951 @LENGTH@ 47
---------------DEL SimpleName@@MethodName:readResource:[PathAddress.EMPTY_ADDRESS] @AT@ 3959 @LENGTH@ 39
------------------DEL QualifiedName@@PathAddress.EMPTY_ADDRESS @AT@ 3972 @LENGTH@ 25


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<GridFsComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<GridFsComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5461 @LENGTH@ 339
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 5465 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5465 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  ComponentCustomizer<GridFsComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ ThenBody:{  for (  ComponentCustomizer<GridFsComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5521 @LENGTH@ 279
------UPD EnhancedForStatement@@for (ComponentCustomizer<GridFsComponent> configurer : customizers) {  LOGGER.debug("Configure component {}, with configurer {}",component,configurer);  configurer.customize(component);} @TO@ for (ComponentCustomizer<GridFsComponent> customizer : customizers) {  LOGGER.debug("Configure component {}, with customizer {}",component,customizer);  customizer.customize(component);} @AT@ 5535 @LENGTH@ 255
---------UPD SingleVariableDeclaration@@ComponentCustomizer<GridFsComponent> configurer @TO@ ComponentCustomizer<GridFsComponent> customizer @AT@ 5540 @LENGTH@ 47
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5577 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5621 @LENGTH@ 106
------------UPD MethodInvocation@@LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5621 @LENGTH@ 105
---------------UPD SimpleName@@MethodName:debug:["Configure component {}, with configurer {}", component, configurer] @TO@ MethodName:debug:["Configure component {}, with customizer {}", component, customizer] @AT@ 5628 @LENGTH@ 98
------------------UPD StringLiteral@@"Configure component {}, with configurer {}" @TO@ "Configure component {}, with customizer {}" @AT@ 5634 @LENGTH@ 44
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5715 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(component) @TO@ MethodInvocation:customizer.customize(component) @AT@ 5744 @LENGTH@ 32
------------UPD MethodInvocation@@configurer.customize(component) @TO@ customizer.customize(component) @AT@ 5744 @LENGTH@ 31
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5744 @LENGTH@ 10


UPD ExpressionStatement@@MethodInvocation:assertThat(retrieved.someString,is(noid.someString)) @TO@ MethodInvocation:assertThat(retrieved.get().someString,is(noid.someString)) @AT@ 3385 @LENGTH@ 54
---UPD MethodInvocation@@assertThat(retrieved.someString,is(noid.someString)) @TO@ assertThat(retrieved.get().someString,is(noid.someString)) @AT@ 3385 @LENGTH@ 53
------UPD SimpleName@@MethodName:assertThat:[retrieved.someString, is(noid.someString)] @TO@ MethodName:assertThat:[retrieved.get().someString, is(noid.someString)] @AT@ 3385 @LENGTH@ 53
---------DEL QualifiedName@@retrieved.someString @AT@ 3396 @LENGTH@ 20
------------DEL SimpleName@@retrieved @AT@ 3396 @LENGTH@ 9
------------DEL SimpleName@@someString @AT@ 3406 @LENGTH@ 10
---------INS FieldAccess@@retrieved.get().someString @TO@ SimpleName@@MethodName:assertThat:[retrieved.someString, is(noid.someString)] @AT@ 3433 @LENGTH@ 26
------------INS MethodInvocation@@retrieved.get() @TO@ FieldAccess@@retrieved.get().someString @AT@ 3433 @LENGTH@ 15
---------------INS SimpleName@@Name:retrieved @TO@ MethodInvocation@@retrieved.get() @AT@ 3433 @LENGTH@ 9
---------------INS SimpleName@@MethodName:get:[] @TO@ MethodInvocation@@retrieved.get() @AT@ 3443 @LENGTH@ 5
------------INS SimpleName@@someString @TO@ FieldAccess@@retrieved.get().someString @AT@ 3449 @LENGTH@ 10


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled(); @AT@ 5430 @LENGTH@ 160
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5438 @LENGTH@ 151
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5438 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5455 @LENGTH@ 134
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 5455 @LENGTH@ 64
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5455 @LENGTH@ 35
---------UPD MethodInvocation@@componentConfiguration.getConfigurer().isEnabled() @TO@ componentConfiguration.getCustomizer().isEnabled() @AT@ 5539 @LENGTH@ 50
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5539 @LENGTH@ 38


INS EnumDeclaration@@EnumType,  @TO@ TypeDeclaration@@[public]QueryTests,  @AT@ 9185 @LENGTH@ 28
---INS SimpleName@@EnumType @TO@ EnumDeclaration@@EnumType,  @AT@ 9185 @LENGTH@ 8
---INS EnumConstantDeclaration@@VAL_1 @TO@ EnumDeclaration@@EnumType,  @AT@ 9198 @LENGTH@ 5
------INS SimpleName@@VAL_1 @TO@ EnumConstantDeclaration@@VAL_1 @AT@ 9198 @LENGTH@ 5
---INS EnumConstantDeclaration@@VAL_2 @TO@ EnumDeclaration@@EnumType,  @AT@ 9205 @LENGTH@ 5
------INS SimpleName@@VAL_2 @TO@ EnumConstantDeclaration@@VAL_2 @AT@ 9205 @LENGTH@ 5


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<SwiftComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<SwiftComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5452 @LENGTH@ 338
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 5456 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5456 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  ComponentCustomizer<SwiftComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ ThenBody:{  for (  ComponentCustomizer<SwiftComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5512 @LENGTH@ 278
------UPD EnhancedForStatement@@for (ComponentCustomizer<SwiftComponent> configurer : customizers) {  LOGGER.debug("Configure component {}, with configurer {}",component,configurer);  configurer.customize(component);} @TO@ for (ComponentCustomizer<SwiftComponent> customizer : customizers) {  LOGGER.debug("Configure component {}, with customizer {}",component,customizer);  customizer.customize(component);} @AT@ 5526 @LENGTH@ 254
---------UPD SingleVariableDeclaration@@ComponentCustomizer<SwiftComponent> configurer @TO@ ComponentCustomizer<SwiftComponent> customizer @AT@ 5531 @LENGTH@ 46
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5567 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5611 @LENGTH@ 106
------------UPD MethodInvocation@@LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5611 @LENGTH@ 105
---------------UPD SimpleName@@MethodName:debug:["Configure component {}, with configurer {}", component, configurer] @TO@ MethodName:debug:["Configure component {}, with customizer {}", component, customizer] @AT@ 5618 @LENGTH@ 98
------------------UPD StringLiteral@@"Configure component {}, with configurer {}" @TO@ "Configure component {}, with customizer {}" @AT@ 5624 @LENGTH@ 44
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5705 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(component) @TO@ MethodInvocation:customizer.customize(component) @AT@ 5734 @LENGTH@ 32
------------UPD MethodInvocation@@configurer.customize(component) @TO@ customizer.customize(component) @AT@ 5734 @LENGTH@ 31
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5734 @LENGTH@ 10


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && dataformatConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && dataformatConfiguration.getCustomizer().isEnabled(); @AT@ 5073 @LENGTH@ 177
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && dataformatConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && dataformatConfiguration.getCustomizer().isEnabled() @AT@ 5081 @LENGTH@ 168
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5081 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && dataformatConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && dataformatConfiguration.getCustomizer().isEnabled() @AT@ 5098 @LENGTH@ 151
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 5098 @LENGTH@ 72
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5098 @LENGTH@ 35
---------UPD MethodInvocation@@dataformatConfiguration.getConfigurer().isEnabled() @TO@ dataformatConfiguration.getCustomizer().isEnabled() @AT@ 5198 @LENGTH@ 51
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5198 @LENGTH@ 39


UPD MethodDeclaration@@public, static, CharSequence, MethodName:toCharSequence, final Object value,  @TO@ public, static, CharSequence, MethodName:toCharSequence, final URI value,  @AT@ 1155 @LENGTH@ 139
---UPD SingleVariableDeclaration@@final Object value @TO@ final URI value @AT@ 1197 @LENGTH@ 18
------UPD SimpleType@@Object @TO@ URI @AT@ 1203 @LENGTH@ 6
---DEL VariableDeclarationStatement@@final URI uri=toUri(value); @AT@ 1227 @LENGTH@ 29
------DEL Modifier@@final @AT@ 1227 @LENGTH@ 5
------DEL SimpleType@@URI @AT@ 1233 @LENGTH@ 3
------DEL VariableDeclarationFragment@@uri=toUri(value) @AT@ 1237 @LENGTH@ 18
---------DEL SimpleName@@uri @AT@ 1237 @LENGTH@ 3
---------DEL MethodInvocation@@toUri(value) @AT@ 1243 @LENGTH@ 12
------------DEL SimpleName@@MethodName:toUri:[value] @AT@ 1243 @LENGTH@ 12
---------------DEL SimpleName@@value @AT@ 1249 @LENGTH@ 5
---UPD ReturnStatement@@MethodInvocation:uri.toString() @TO@ MethodInvocation:value.toString() @AT@ 1266 @LENGTH@ 22
------UPD MethodInvocation@@uri.toString() @TO@ value.toString() @AT@ 1273 @LENGTH@ 14
---------UPD SimpleName@@Name:uri @TO@ Name:value @AT@ 1273 @LENGTH@ 3


INS MethodDeclaration@@Seq<User>, MethodName:returnsSeq, Pageable pageable,  @TO@ TypeDeclaration@@SampleRepository, [Repository<User,Serializable>] @AT@ 9828 @LENGTH@ 30
---INS ParameterizedType@@Seq<User> @TO@ MethodDeclaration@@Seq<User>, MethodName:returnsSeq, Pageable pageable,  @AT@ 9818 @LENGTH@ 9
------INS SimpleType@@Seq @TO@ ParameterizedType@@Seq<User> @AT@ 9818 @LENGTH@ 3
------INS SimpleType@@User @TO@ ParameterizedType@@Seq<User> @AT@ 9822 @LENGTH@ 4
---INS SimpleName@@MethodName:returnsSeq @TO@ MethodDeclaration@@Seq<User>, MethodName:returnsSeq, Pageable pageable,  @AT@ 9828 @LENGTH@ 10
---INS SingleVariableDeclaration@@Pageable pageable @TO@ MethodDeclaration@@Seq<User>, MethodName:returnsSeq, Pageable pageable,  @AT@ 9839 @LENGTH@ 17
------INS SimpleType@@Pageable @TO@ SingleVariableDeclaration@@Pageable pageable @AT@ 9839 @LENGTH@ 8
------INS SimpleName@@pageable @TO@ SingleVariableDeclaration@@Pageable pageable @AT@ 9848 @LENGTH@ 8


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled(); @AT@ 5310 @LENGTH@ 160
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5318 @LENGTH@ 151
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5318 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5335 @LENGTH@ 134
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 5335 @LENGTH@ 64
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5335 @LENGTH@ 35
---------UPD MethodInvocation@@componentConfiguration.getConfigurer().isEnabled() @TO@ componentConfiguration.getCustomizer().isEnabled() @AT@ 5419 @LENGTH@ 50
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5419 @LENGTH@ 38


UPD VariableDeclarationStatement@@long startTime=(new Date()).getTime(); @TO@ long startTime=new Date().getTime(); @AT@ 2444 @LENGTH@ 40
---UPD VariableDeclarationFragment@@startTime=(new Date()).getTime() @TO@ startTime=new Date().getTime() @AT@ 2449 @LENGTH@ 34
------UPD MethodInvocation@@(new Date()).getTime() @TO@ new Date().getTime() @AT@ 2461 @LENGTH@ 22
---------DEL ParenthesizedExpression@@(new Date()) @AT@ 2461 @LENGTH@ 12
------------DEL ClassInstanceCreation@@Date[] @AT@ 2462 @LENGTH@ 10
---------INS ClassInstanceCreation@@Date[] @TO@ MethodInvocation@@(new Date()).getTime() @AT@ 2461 @LENGTH@ 10
------------MOV New@@new @TO@ ClassInstanceCreation@@Date[] @AT@ 2462 @LENGTH@ 3
------------MOV SimpleType@@Date @TO@ ClassInstanceCreation@@Date[] @AT@ 2466 @LENGTH@ 4


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled(); @AT@ 5226 @LENGTH@ 160
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5234 @LENGTH@ 151
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5234 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5251 @LENGTH@ 134
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 5251 @LENGTH@ 64
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5251 @LENGTH@ 35
---------UPD MethodInvocation@@componentConfiguration.getConfigurer().isEnabled() @TO@ componentConfiguration.getCustomizer().isEnabled() @AT@ 5335 @LENGTH@ 50
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5335 @LENGTH@ 38


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && languageConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && languageConfiguration.getCustomizer().isEnabled(); @AT@ 4639 @LENGTH@ 159
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && languageConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && languageConfiguration.getCustomizer().isEnabled() @AT@ 4647 @LENGTH@ 150
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 4647 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && languageConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && languageConfiguration.getCustomizer().isEnabled() @AT@ 4664 @LENGTH@ 133
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 4664 @LENGTH@ 64
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 4664 @LENGTH@ 35
---------UPD MethodInvocation@@languageConfiguration.getConfigurer().isEnabled() @TO@ languageConfiguration.getCustomizer().isEnabled() @AT@ 4748 @LENGTH@ 49
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 4748 @LENGTH@ 37


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<PahoComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<PahoComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5395 @LENGTH@ 337
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 5399 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5399 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  ComponentCustomizer<PahoComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ ThenBody:{  for (  ComponentCustomizer<PahoComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5455 @LENGTH@ 277
------UPD EnhancedForStatement@@for (ComponentCustomizer<PahoComponent> configurer : customizers) {  LOGGER.debug("Configure component {}, with configurer {}",component,configurer);  configurer.customize(component);} @TO@ for (ComponentCustomizer<PahoComponent> customizer : customizers) {  LOGGER.debug("Configure component {}, with customizer {}",component,customizer);  customizer.customize(component);} @AT@ 5469 @LENGTH@ 253
---------UPD SingleVariableDeclaration@@ComponentCustomizer<PahoComponent> configurer @TO@ ComponentCustomizer<PahoComponent> customizer @AT@ 5474 @LENGTH@ 45
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5509 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5553 @LENGTH@ 106
------------UPD MethodInvocation@@LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5553 @LENGTH@ 105
---------------UPD SimpleName@@MethodName:debug:["Configure component {}, with configurer {}", component, configurer] @TO@ MethodName:debug:["Configure component {}, with customizer {}", component, customizer] @AT@ 5560 @LENGTH@ 98
------------------UPD StringLiteral@@"Configure component {}, with configurer {}" @TO@ "Configure component {}, with customizer {}" @AT@ 5566 @LENGTH@ 44
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5647 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(component) @TO@ MethodInvocation:customizer.customize(component) @AT@ 5676 @LENGTH@ 32
------------UPD MethodInvocation@@configurer.customize(component) @TO@ customizer.customize(component) @AT@ 5676 @LENGTH@ 31
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5676 @LENGTH@ 10


UPD MethodDeclaration@@public, abstract, void, MethodName:sendMessage, Exchange exchange, final AsyncCallback callback, final MessageProducerResources producer, final ReleaseProducerCallback releaseProducerCallback, Exception,  @TO@ public, abstract, void, MethodName:sendMessage, Exchange exchange, AsyncCallback callback, MessageProducerResources producer, ReleaseProducerCallback releaseProducerCallback, Exception,  @AT@ 7723 @LENGTH@ 195
---UPD SingleVariableDeclaration@@final AsyncCallback callback @TO@ AsyncCallback callback @AT@ 7775 @LENGTH@ 28
------DEL Modifier@@final @AT@ 7775 @LENGTH@ 5
---UPD SingleVariableDeclaration@@final MessageProducerResources producer @TO@ MessageProducerResources producer @AT@ 7805 @LENGTH@ 39
------DEL Modifier@@final @AT@ 7805 @LENGTH@ 5
---UPD SingleVariableDeclaration@@final ReleaseProducerCallback releaseProducerCallback @TO@ ReleaseProducerCallback releaseProducerCallback @AT@ 7846 @LENGTH@ 53
------DEL Modifier@@final @AT@ 7846 @LENGTH@ 5


INS ExpressionStatement@@MethodInvocation:init(camelContext) @TO@ MethodDeclaration@@public, RoutePolicy, MethodName:createRoutePolicy, CamelContext camelContext, String routeId, RouteDefinition route,  @AT@ 3586 @LENGTH@ 19
---INS MethodInvocation@@init(camelContext) @TO@ ExpressionStatement@@MethodInvocation:init(camelContext) @AT@ 3586 @LENGTH@ 18
------INS SimpleName@@MethodName:init:[camelContext] @TO@ MethodInvocation@@init(camelContext) @AT@ 3586 @LENGTH@ 18
---------INS SimpleName@@camelContext @TO@ SimpleName@@MethodName:init:[camelContext] @AT@ 3591 @LENGTH@ 12


UPD MethodDeclaration@@private, MethodInfo, MethodName:overridesExistingMethod, MethodInfo methodInfo,  @TO@ private, MethodInfo, MethodName:findMostSpecificOverride, MethodInfo proposedMethodInfo,  @AT@ 42398 @LENGTH@ 492
---UPD SimpleName@@MethodName:overridesExistingMethod @TO@ MethodName:findMostSpecificOverride @AT@ 42417 @LENGTH@ 23
---UPD SingleVariableDeclaration@@MethodInfo methodInfo @TO@ MethodInfo proposedMethodInfo @AT@ 42441 @LENGTH@ 21
------UPD SimpleName@@methodInfo @TO@ proposedMethodInfo @AT@ 42452 @LENGTH@ 10
---UPD EnhancedForStatement@@for (MethodInfo info : methodMap.values()) {  Method source=info.getMethod();  Method target=methodInfo.getMethod();  boolean override=ObjectHelper.isOverridingMethod(source,target);  if (override) {    return info;  }} @TO@ for (MethodInfo alreadyRegisteredMethodInfo : methodMap.values()) {  Method alreadyRegisteredMethod=alreadyRegisteredMethodInfo.getMethod();  Method proposedMethod=proposedMethodInfo.getMethod();  if (ObjectHelper.isOverridingMethod(proposedMethod,alreadyRegisteredMethod,false)) {    return alreadyRegisteredMethodInfo;  } else   if (ObjectHelper.isOverridingMethod(alreadyRegisteredMethod,proposedMethod,false)) {    return proposedMethodInfo;  }} @AT@ 42474 @LENGTH@ 388
------UPD SingleVariableDeclaration@@MethodInfo info @TO@ MethodInfo alreadyRegisteredMethodInfo @AT@ 42479 @LENGTH@ 15
---------UPD SimpleName@@info @TO@ alreadyRegisteredMethodInfo @AT@ 42490 @LENGTH@ 4
------UPD VariableDeclarationStatement@@Method source=info.getMethod(); @TO@ Method alreadyRegisteredMethod=alreadyRegisteredMethodInfo.getMethod(); @AT@ 42531 @LENGTH@ 33
---------UPD VariableDeclarationFragment@@source=info.getMethod() @TO@ alreadyRegisteredMethod=alreadyRegisteredMethodInfo.getMethod() @AT@ 42538 @LENGTH@ 25
------------UPD SimpleName@@source @TO@ alreadyRegisteredMethod @AT@ 42538 @LENGTH@ 6
------------UPD MethodInvocation@@info.getMethod() @TO@ alreadyRegisteredMethodInfo.getMethod() @AT@ 42547 @LENGTH@ 16
---------------UPD SimpleName@@Name:info @TO@ Name:alreadyRegisteredMethodInfo @AT@ 42547 @LENGTH@ 4
------UPD VariableDeclarationStatement@@Method target=methodInfo.getMethod(); @TO@ Method proposedMethod=proposedMethodInfo.getMethod(); @AT@ 42577 @LENGTH@ 39
---------UPD VariableDeclarationFragment@@target=methodInfo.getMethod() @TO@ proposedMethod=proposedMethodInfo.getMethod() @AT@ 42584 @LENGTH@ 31
------------UPD SimpleName@@target @TO@ proposedMethod @AT@ 42584 @LENGTH@ 6
------------UPD MethodInvocation@@methodInfo.getMethod() @TO@ proposedMethodInfo.getMethod() @AT@ 42593 @LENGTH@ 22
---------------UPD SimpleName@@Name:methodInfo @TO@ Name:proposedMethodInfo @AT@ 42593 @LENGTH@ 10
------DEL VariableDeclarationStatement@@boolean override=ObjectHelper.isOverridingMethod(source,target); @AT@ 42630 @LENGTH@ 67
---------DEL PrimitiveType@@boolean @AT@ 42630 @LENGTH@ 7
---------DEL VariableDeclarationFragment@@override=ObjectHelper.isOverridingMethod(source,target) @AT@ 42638 @LENGTH@ 58
------------DEL SimpleName@@override @AT@ 42638 @LENGTH@ 8
------------DEL MethodInvocation@@ObjectHelper.isOverridingMethod(source,target) @AT@ 42649 @LENGTH@ 47
------INS IfStatement@@if (ObjectHelper.isOverridingMethod(proposedMethod,alreadyRegisteredMethod,false)) {  return alreadyRegisteredMethodInfo;} else if (ObjectHelper.isOverridingMethod(alreadyRegisteredMethod,proposedMethod,false)) {  return proposedMethodInfo;} @TO@ EnhancedForStatement@@for (MethodInfo info : methodMap.values()) {  Method source=info.getMethod();  Method target=methodInfo.getMethod();  boolean override=ObjectHelper.isOverridingMethod(source,target);  if (override) {    return info;  }} @AT@ 42707 @LENGTH@ 301
---------INS MethodInvocation@@ObjectHelper.isOverridingMethod(proposedMethod,alreadyRegisteredMethod,false) @TO@ IfStatement@@if (ObjectHelper.isOverridingMethod(proposedMethod,alreadyRegisteredMethod,false)) {  return alreadyRegisteredMethodInfo;} else if (ObjectHelper.isOverridingMethod(alreadyRegisteredMethod,proposedMethod,false)) {  return proposedMethodInfo;} @AT@ 42711 @LENGTH@ 79
------------MOV SimpleName@@Name:ObjectHelper @TO@ MethodInvocation@@ObjectHelper.isOverridingMethod(proposedMethod,alreadyRegisteredMethod,false) @AT@ 42649 @LENGTH@ 12
------------MOV SimpleName@@MethodName:isOverridingMethod:[source, target] @TO@ MethodInvocation@@ObjectHelper.isOverridingMethod(proposedMethod,alreadyRegisteredMethod,false) @AT@ 42662 @LENGTH@ 34
---------------UPD SimpleName@@source @TO@ proposedMethod @AT@ 42681 @LENGTH@ 6
---------------UPD SimpleName@@target @TO@ alreadyRegisteredMethod @AT@ 42689 @LENGTH@ 6
---------------INS BooleanLiteral@@false @TO@ SimpleName@@MethodName:isOverridingMethod:[source, target] @AT@ 42784 @LENGTH@ 5
---------INS Block@@ThenBody:{  return alreadyRegisteredMethodInfo;} @TO@ IfStatement@@if (ObjectHelper.isOverridingMethod(proposedMethod,alreadyRegisteredMethod,false)) {  return alreadyRegisteredMethodInfo;} else if (ObjectHelper.isOverridingMethod(alreadyRegisteredMethod,proposedMethod,false)) {  return proposedMethodInfo;} @AT@ 42792 @LENGTH@ 67
------------INS ReturnStatement@@SimpleName:alreadyRegisteredMethodInfo @TO@ Block@@ThenBody:{  return alreadyRegisteredMethodInfo;} @AT@ 42810 @LENGTH@ 35
---------------INS SimpleName@@alreadyRegisteredMethodInfo @TO@ ReturnStatement@@SimpleName:alreadyRegisteredMethodInfo @AT@ 42817 @LENGTH@ 27
---------INS Block@@ElseBody:if (ObjectHelper.isOverridingMethod(alreadyRegisteredMethod,proposedMethod,false)) {  return proposedMethodInfo;} @TO@ IfStatement@@if (ObjectHelper.isOverridingMethod(proposedMethod,alreadyRegisteredMethod,false)) {  return alreadyRegisteredMethodInfo;} else if (ObjectHelper.isOverridingMethod(alreadyRegisteredMethod,proposedMethod,false)) {  return proposedMethodInfo;} @AT@ 42865 @LENGTH@ 143
------------INS IfStatement@@if (ObjectHelper.isOverridingMethod(alreadyRegisteredMethod,proposedMethod,false)) {  return proposedMethodInfo;} @TO@ Block@@ElseBody:if (ObjectHelper.isOverridingMethod(alreadyRegisteredMethod,proposedMethod,false)) {  return proposedMethodInfo;} @AT@ 42865 @LENGTH@ 143
---------------MOV Block@@ThenBody:{  return info;} @TO@ IfStatement@@if (ObjectHelper.isOverridingMethod(alreadyRegisteredMethod,proposedMethod,false)) {  return proposedMethodInfo;} @AT@ 42724 @LENGTH@ 128
------------------UPD ReturnStatement@@SimpleName:info @TO@ SimpleName:proposedMethodInfo @AT@ 42826 @LENGTH@ 12
---------------------UPD SimpleName@@info @TO@ proposedMethodInfo @AT@ 42833 @LENGTH@ 4
---------------INS MethodInvocation@@ObjectHelper.isOverridingMethod(alreadyRegisteredMethod,proposedMethod,false) @TO@ IfStatement@@if (ObjectHelper.isOverridingMethod(alreadyRegisteredMethod,proposedMethod,false)) {  return proposedMethodInfo;} @AT@ 42869 @LENGTH@ 79
------------------INS SimpleName@@Name:ObjectHelper @TO@ MethodInvocation@@ObjectHelper.isOverridingMethod(alreadyRegisteredMethod,proposedMethod,false) @AT@ 42869 @LENGTH@ 12
------------------INS SimpleName@@MethodName:isOverridingMethod:[alreadyRegisteredMethod, proposedMethod, false] @TO@ MethodInvocation@@ObjectHelper.isOverridingMethod(alreadyRegisteredMethod,proposedMethod,false) @AT@ 42882 @LENGTH@ 66
---------------------INS SimpleName@@alreadyRegisteredMethod @TO@ SimpleName@@MethodName:isOverridingMethod:[alreadyRegisteredMethod, proposedMethod, false] @AT@ 42901 @LENGTH@ 23
---------------------INS SimpleName@@proposedMethod @TO@ SimpleName@@MethodName:isOverridingMethod:[alreadyRegisteredMethod, proposedMethod, false] @AT@ 42926 @LENGTH@ 14
---------------------INS BooleanLiteral@@false @TO@ SimpleName@@MethodName:isOverridingMethod:[alreadyRegisteredMethod, proposedMethod, false] @AT@ 42942 @LENGTH@ 5
------DEL IfStatement@@if (override) {  return info;} @AT@ 42710 @LENGTH@ 142
---------DEL SimpleName@@override @AT@ 42714 @LENGTH@ 8


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  DataFormatCustomizer<XMLSecurityDataFormat> configurer : customizers) {    LOGGER.debug("Configure dataformat {}, with configurer {}",dataformat,configurer);    configurer.customize(dataformat);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  DataFormatCustomizer<XMLSecurityDataFormat> customizer : customizers) {    LOGGER.debug("Configure dataformat {}, with customizer {}",dataformat,customizer);    customizer.customize(dataformat);  }} @AT@ 5413 @LENGTH@ 430
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 5417 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5417 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  DataFormatCustomizer<XMLSecurityDataFormat> configurer : customizers) {    LOGGER.debug("Configure dataformat {}, with configurer {}",dataformat,configurer);    configurer.customize(dataformat);  }} @TO@ ThenBody:{  for (  DataFormatCustomizer<XMLSecurityDataFormat> customizer : customizers) {    LOGGER.debug("Configure dataformat {}, with customizer {}",dataformat,customizer);    customizer.customize(dataformat);  }} @AT@ 5473 @LENGTH@ 370
------UPD EnhancedForStatement@@for (DataFormatCustomizer<XMLSecurityDataFormat> configurer : customizers) {  LOGGER.debug("Configure dataformat {}, with configurer {}",dataformat,configurer);  configurer.customize(dataformat);} @TO@ for (DataFormatCustomizer<XMLSecurityDataFormat> customizer : customizers) {  LOGGER.debug("Configure dataformat {}, with customizer {}",dataformat,customizer);  customizer.customize(dataformat);} @AT@ 5495 @LENGTH@ 330
---------UPD SingleVariableDeclaration@@DataFormatCustomizer<XMLSecurityDataFormat> configurer @TO@ DataFormatCustomizer<XMLSecurityDataFormat> customizer @AT@ 5500 @LENGTH@ 54
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5544 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure dataformat {}, with configurer {}",dataformat,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure dataformat {}, with customizer {}",dataformat,customizer) @AT@ 5596 @LENGTH@ 149
------------UPD MethodInvocation@@LOGGER.debug("Configure dataformat {}, with configurer {}",dataformat,configurer) @TO@ LOGGER.debug("Configure dataformat {}, with customizer {}",dataformat,customizer) @AT@ 5596 @LENGTH@ 148
---------------UPD SimpleName@@MethodName:debug:["Configure dataformat {}, with configurer {}", dataformat, configurer] @TO@ MethodName:debug:["Configure dataformat {}, with customizer {}", dataformat, customizer] @AT@ 5603 @LENGTH@ 141
------------------UPD StringLiteral@@"Configure dataformat {}, with configurer {}" @TO@ "Configure dataformat {}, with customizer {}" @AT@ 5642 @LENGTH@ 45
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5733 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(dataformat) @TO@ MethodInvocation:customizer.customize(dataformat) @AT@ 5770 @LENGTH@ 33
------------UPD MethodInvocation@@configurer.customize(dataformat) @TO@ customizer.customize(dataformat) @AT@ 5770 @LENGTH@ 32
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5770 @LENGTH@ 10


INS TypeDeclaration@@[public]HttpBasicSpec, HttpBasicBuilder @TO@ TypeDeclaration@@[public]HttpSecurity,  @AT@ 3354 @LENGTH@ 144
---INS Modifier@@public @TO@ TypeDeclaration@@[public]HttpBasicSpec, HttpBasicBuilder @AT@ 3354 @LENGTH@ 6
---INS SimpleName@@ClassName:HttpBasicSpec @TO@ TypeDeclaration@@[public]HttpBasicSpec, HttpBasicBuilder @AT@ 3367 @LENGTH@ 13
---INS SimpleType@@HttpBasicBuilder @TO@ TypeDeclaration@@[public]HttpBasicSpec, HttpBasicBuilder @AT@ 3389 @LENGTH@ 16


UPD ExpressionStatement@@MethodInvocation:LOG.debug("Prepairing influxdb enpoint with uri {}",uri) @TO@ MethodInvocation:LOG.debug("Preparing influxdb enpoint with uri {}",uri) @AT@ 2285 @LENGTH@ 58
---UPD MethodInvocation@@LOG.debug("Prepairing influxdb enpoint with uri {}",uri) @TO@ LOG.debug("Preparing influxdb enpoint with uri {}",uri) @AT@ 2285 @LENGTH@ 57
------UPD SimpleName@@MethodName:debug:["Prepairing influxdb enpoint with uri {}", uri] @TO@ MethodName:debug:["Preparing influxdb enpoint with uri {}", uri] @AT@ 2289 @LENGTH@ 53
---------UPD StringLiteral@@"Prepairing influxdb enpoint with uri {}" @TO@ "Preparing influxdb enpoint with uri {}" @AT@ 2295 @LENGTH@ 41


INS ExpressionStatement@@MethodInvocation:pomFile.getParentFile().mkdirs() @TO@ MethodDeclaration@@private, static, File, MethodName:createUserPom, ITestConfig config, List<String> cleanTestProvidedDependencies, Exception,  @AT@ 21867 @LENGTH@ 33
---INS MethodInvocation@@pomFile.getParentFile().mkdirs() @TO@ ExpressionStatement@@MethodInvocation:pomFile.getParentFile().mkdirs() @AT@ 21867 @LENGTH@ 32
------INS MethodInvocation@@MethodName:getParentFile:[] @TO@ MethodInvocation@@pomFile.getParentFile().mkdirs() @AT@ 21867 @LENGTH@ 23
------INS SimpleName@@Name:pomFile @TO@ MethodInvocation@@pomFile.getParentFile().mkdirs() @AT@ 21867 @LENGTH@ 7
------INS SimpleName@@MethodName:mkdirs:[] @TO@ MethodInvocation@@pomFile.getParentFile().mkdirs() @AT@ 21891 @LENGTH@ 8


INS MethodDeclaration@@public, void, MethodName:testCustomSessionAttrName,  @TO@ TypeDeclaration@@[public]HttpSessionRequestCacheTests,  @AT@ 3592 @LENGTH@ 544
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testCustomSessionAttrName,  @AT@ 3592 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testCustomSessionAttrName,  @AT@ 3599 @LENGTH@ 4
---INS SimpleName@@MethodName:testCustomSessionAttrName @TO@ MethodDeclaration@@public, void, MethodName:testCustomSessionAttrName,  @AT@ 3604 @LENGTH@ 25
---INS VariableDeclarationStatement@@HttpSessionRequestCache cache=new HttpSessionRequestCache(); @TO@ MethodDeclaration@@public, void, MethodName:testCustomSessionAttrName,  @AT@ 3636 @LENGTH@ 62
------INS SimpleType@@HttpSessionRequestCache @TO@ VariableDeclarationStatement@@HttpSessionRequestCache cache=new HttpSessionRequestCache(); @AT@ 3636 @LENGTH@ 23
------INS VariableDeclarationFragment@@cache=new HttpSessionRequestCache() @TO@ VariableDeclarationStatement@@HttpSessionRequestCache cache=new HttpSessionRequestCache(); @AT@ 3660 @LENGTH@ 37
---------INS SimpleName@@cache @TO@ VariableDeclarationFragment@@cache=new HttpSessionRequestCache() @AT@ 3660 @LENGTH@ 5
---------INS ClassInstanceCreation@@HttpSessionRequestCache[] @TO@ VariableDeclarationFragment@@cache=new HttpSessionRequestCache() @AT@ 3668 @LENGTH@ 29
------------INS New@@new @TO@ ClassInstanceCreation@@HttpSessionRequestCache[] @AT@ 3668 @LENGTH@ 3
------------INS SimpleType@@HttpSessionRequestCache @TO@ ClassInstanceCreation@@HttpSessionRequestCache[] @AT@ 3672 @LENGTH@ 23
---INS ExpressionStatement@@MethodInvocation:cache.setSessionAttrName("CUSTOM_SAVED_REQUEST") @TO@ MethodDeclaration@@public, void, MethodName:testCustomSessionAttrName,  @AT@ 3701 @LENGTH@ 49
------INS MethodInvocation@@cache.setSessionAttrName("CUSTOM_SAVED_REQUEST") @TO@ ExpressionStatement@@MethodInvocation:cache.setSessionAttrName("CUSTOM_SAVED_REQUEST") @AT@ 3701 @LENGTH@ 48
---------INS SimpleName@@Name:cache @TO@ MethodInvocation@@cache.setSessionAttrName("CUSTOM_SAVED_REQUEST") @AT@ 3701 @LENGTH@ 5
---------INS SimpleName@@MethodName:setSessionAttrName:["CUSTOM_SAVED_REQUEST"] @TO@ MethodInvocation@@cache.setSessionAttrName("CUSTOM_SAVED_REQUEST") @AT@ 3707 @LENGTH@ 42
------------INS StringLiteral@@"CUSTOM_SAVED_REQUEST" @TO@ SimpleName@@MethodName:setSessionAttrName:["CUSTOM_SAVED_REQUEST"] @AT@ 3726 @LENGTH@ 22
---INS VariableDeclarationStatement@@MockHttpServletRequest request=new MockHttpServletRequest("GET","/destination"); @TO@ MethodDeclaration@@public, void, MethodName:testCustomSessionAttrName,  @AT@ 3754 @LENGTH@ 87
------INS SimpleType@@MockHttpServletRequest @TO@ VariableDeclarationStatement@@MockHttpServletRequest request=new MockHttpServletRequest("GET","/destination"); @AT@ 3754 @LENGTH@ 22
------INS VariableDeclarationFragment@@request=new MockHttpServletRequest("GET","/destination") @TO@ VariableDeclarationStatement@@MockHttpServletRequest request=new MockHttpServletRequest("GET","/destination"); @AT@ 3777 @LENGTH@ 63
---------INS SimpleName@@request @TO@ VariableDeclarationFragment@@request=new MockHttpServletRequest("GET","/destination") @AT@ 3777 @LENGTH@ 7
---------INS ClassInstanceCreation@@MockHttpServletRequest["GET", "/destination"] @TO@ VariableDeclarationFragment@@request=new MockHttpServletRequest("GET","/destination") @AT@ 3787 @LENGTH@ 53
------------INS New@@new @TO@ ClassInstanceCreation@@MockHttpServletRequest["GET", "/destination"] @AT@ 3787 @LENGTH@ 3
------------INS SimpleType@@MockHttpServletRequest @TO@ ClassInstanceCreation@@MockHttpServletRequest["GET", "/destination"] @AT@ 3791 @LENGTH@ 22
------------INS StringLiteral@@"GET" @TO@ ClassInstanceCreation@@MockHttpServletRequest["GET", "/destination"] @AT@ 3814 @LENGTH@ 5
------------INS StringLiteral@@"/destination" @TO@ ClassInstanceCreation@@MockHttpServletRequest["GET", "/destination"] @AT@ 3825 @LENGTH@ 14
---INS VariableDeclarationStatement@@MockHttpServletResponse response=new MockHttpServletResponse(); @TO@ MethodDeclaration@@public, void, MethodName:testCustomSessionAttrName,  @AT@ 3844 @LENGTH@ 65
------INS SimpleType@@MockHttpServletResponse @TO@ VariableDeclarationStatement@@MockHttpServletResponse response=new MockHttpServletResponse(); @AT@ 3844 @LENGTH@ 23
------INS VariableDeclarationFragment@@response=new MockHttpServletResponse() @TO@ VariableDeclarationStatement@@MockHttpServletResponse response=new MockHttpServletResponse(); @AT@ 3868 @LENGTH@ 40
---------INS SimpleName@@response @TO@ VariableDeclarationFragment@@response=new MockHttpServletResponse() @AT@ 3868 @LENGTH@ 8
---------INS ClassInstanceCreation@@MockHttpServletResponse[] @TO@ VariableDeclarationFragment@@response=new MockHttpServletResponse() @AT@ 3879 @LENGTH@ 29
------------INS New@@new @TO@ ClassInstanceCreation@@MockHttpServletResponse[] @AT@ 3879 @LENGTH@ 3
------------INS SimpleType@@MockHttpServletResponse @TO@ ClassInstanceCreation@@MockHttpServletResponse[] @AT@ 3883 @LENGTH@ 23
---INS ExpressionStatement@@MethodInvocation:cache.saveRequest(request,response) @TO@ MethodDeclaration@@public, void, MethodName:testCustomSessionAttrName,  @AT@ 3912 @LENGTH@ 37
------INS MethodInvocation@@cache.saveRequest(request,response) @TO@ ExpressionStatement@@MethodInvocation:cache.saveRequest(request,response) @AT@ 3912 @LENGTH@ 36
---------INS SimpleName@@Name:cache @TO@ MethodInvocation@@cache.saveRequest(request,response) @AT@ 3912 @LENGTH@ 5
---------INS SimpleName@@MethodName:saveRequest:[request, response] @TO@ MethodInvocation@@cache.saveRequest(request,response) @AT@ 3918 @LENGTH@ 30
------------INS SimpleName@@request @TO@ SimpleName@@MethodName:saveRequest:[request, response] @AT@ 3930 @LENGTH@ 7
------------INS SimpleName@@response @TO@ SimpleName@@MethodName:saveRequest:[request, response] @AT@ 3939 @LENGTH@ 8
---INS ExpressionStatement@@MethodInvocation:assertThat(request.getSession().getAttribute(HttpSessionRequestCache.SAVED_REQUEST)).isNull() @TO@ MethodDeclaration@@public, void, MethodName:testCustomSessionAttrName,  @AT@ 3953 @LENGTH@ 94
------INS MethodInvocation@@assertThat(request.getSession().getAttribute(HttpSessionRequestCache.SAVED_REQUEST)).isNull() @TO@ ExpressionStatement@@MethodInvocation:assertThat(request.getSession().getAttribute(HttpSessionRequestCache.SAVED_REQUEST)).isNull() @AT@ 3953 @LENGTH@ 93
---------INS MethodInvocation@@MethodName:assertThat:[request.getSession().getAttribute(HttpSessionRequestCache.SAVED_REQUEST)] @TO@ MethodInvocation@@assertThat(request.getSession().getAttribute(HttpSessionRequestCache.SAVED_REQUEST)).isNull() @AT@ 3953 @LENGTH@ 84
------------INS MethodInvocation@@request.getSession().getAttribute(HttpSessionRequestCache.SAVED_REQUEST) @TO@ MethodInvocation@@MethodName:assertThat:[request.getSession().getAttribute(HttpSessionRequestCache.SAVED_REQUEST)] @AT@ 3964 @LENGTH@ 72
---------------INS MethodInvocation@@MethodName:getSession:[] @TO@ MethodInvocation@@request.getSession().getAttribute(HttpSessionRequestCache.SAVED_REQUEST) @AT@ 3964 @LENGTH@ 20
---------------INS SimpleName@@Name:request @TO@ MethodInvocation@@request.getSession().getAttribute(HttpSessionRequestCache.SAVED_REQUEST) @AT@ 3964 @LENGTH@ 7
---------------INS SimpleName@@MethodName:getAttribute:[HttpSessionRequestCache.SAVED_REQUEST] @TO@ MethodInvocation@@request.getSession().getAttribute(HttpSessionRequestCache.SAVED_REQUEST) @AT@ 3985 @LENGTH@ 51
------------------INS QualifiedName@@HttpSessionRequestCache.SAVED_REQUEST @TO@ SimpleName@@MethodName:getAttribute:[HttpSessionRequestCache.SAVED_REQUEST] @AT@ 3998 @LENGTH@ 37
---------------------INS SimpleName@@HttpSessionRequestCache @TO@ QualifiedName@@HttpSessionRequestCache.SAVED_REQUEST @AT@ 3998 @LENGTH@ 23
---------------------INS SimpleName@@SAVED_REQUEST @TO@ QualifiedName@@HttpSessionRequestCache.SAVED_REQUEST @AT@ 4022 @LENGTH@ 13
---------INS SimpleName@@MethodName:isNull:[] @TO@ MethodInvocation@@assertThat(request.getSession().getAttribute(HttpSessionRequestCache.SAVED_REQUEST)).isNull() @AT@ 4038 @LENGTH@ 8
---INS ExpressionStatement@@MethodInvocation:assertThat(request.getSession().getAttribute("CUSTOM_SAVED_REQUEST")).isNotNull() @TO@ MethodDeclaration@@public, void, MethodName:testCustomSessionAttrName,  @AT@ 4050 @LENGTH@ 82
------INS MethodInvocation@@assertThat(request.getSession().getAttribute("CUSTOM_SAVED_REQUEST")).isNotNull() @TO@ ExpressionStatement@@MethodInvocation:assertThat(request.getSession().getAttribute("CUSTOM_SAVED_REQUEST")).isNotNull() @AT@ 4050 @LENGTH@ 81
---------INS MethodInvocation@@MethodName:assertThat:[request.getSession().getAttribute("CUSTOM_SAVED_REQUEST")] @TO@ MethodInvocation@@assertThat(request.getSession().getAttribute("CUSTOM_SAVED_REQUEST")).isNotNull() @AT@ 4050 @LENGTH@ 69
------------INS MethodInvocation@@request.getSession().getAttribute("CUSTOM_SAVED_REQUEST") @TO@ MethodInvocation@@MethodName:assertThat:[request.getSession().getAttribute("CUSTOM_SAVED_REQUEST")] @AT@ 4061 @LENGTH@ 57
---------------INS MethodInvocation@@MethodName:getSession:[] @TO@ MethodInvocation@@request.getSession().getAttribute("CUSTOM_SAVED_REQUEST") @AT@ 4061 @LENGTH@ 20
---------------INS SimpleName@@Name:request @TO@ MethodInvocation@@request.getSession().getAttribute("CUSTOM_SAVED_REQUEST") @AT@ 4061 @LENGTH@ 7
---------------INS SimpleName@@MethodName:getAttribute:["CUSTOM_SAVED_REQUEST"] @TO@ MethodInvocation@@request.getSession().getAttribute("CUSTOM_SAVED_REQUEST") @AT@ 4082 @LENGTH@ 36
------------------INS StringLiteral@@"CUSTOM_SAVED_REQUEST" @TO@ SimpleName@@MethodName:getAttribute:["CUSTOM_SAVED_REQUEST"] @AT@ 4095 @LENGTH@ 22
---------INS SimpleName@@MethodName:isNotNull:[] @TO@ MethodInvocation@@assertThat(request.getSession().getAttribute("CUSTOM_SAVED_REQUEST")).isNotNull() @AT@ 4120 @LENGTH@ 11


UPD TryStatement@@try {  LdapService.builder().setWorkingDir(new File("./target/apache-ds/working1")).createDirectoryService("Test Service").addPartition("Elytron","dc=elytron,dc=wildfly,dc=org",5,"uid").importLdif(TestEnvironment.class.getResourceAsStream("ldap-schemas.ldif")).importLdif(TestEnvironment.class.getResourceAsStream("ldap-data.ldif")).addTcpServer("Default TCP","localhost",LDAPS1_PORT,"localhost.keystore","Elytron").start();  LdapService.builder().setWorkingDir(new File("./target/apache-ds/working2")).createDirectoryService("Test Service").addPartition("Elytron","dc=elytron,dc=wildfly,dc=org",5,"uid").importLdif(TestEnvironment.class.getResourceAsStream("ldap-schemas.ldif")).importLdif(TestEnvironment.class.getResourceAsStream("ldap-referred.ldif")).addTcpServer("Default TCP","localhost",LDAPS2_PORT,"localhost.keystore","Elytron").start();} catch (Exception e) {  throw new RuntimeException("Could not start LDAP embedded server.",e);} @TO@ try {  LdapService.builder().setWorkingDir(new File("./target/apache-ds/working1")).createDirectoryService("TestService1").addPartition("Elytron","dc=elytron,dc=wildfly,dc=org",5,"uid").importLdif(TestEnvironment.class.getResourceAsStream("ldap-schemas.ldif")).importLdif(TestEnvironment.class.getResourceAsStream("ldap-data.ldif")).addTcpServer("Default TCP","localhost",LDAPS1_PORT,"localhost.keystore","Elytron").start();  LdapService.builder().setWorkingDir(new File("./target/apache-ds/working2")).createDirectoryService("TestService2").addPartition("Elytron","dc=elytron,dc=wildfly,dc=org",5,"uid").importLdif(TestEnvironment.class.getResourceAsStream("ldap-schemas.ldif")).importLdif(TestEnvironment.class.getResourceAsStream("ldap-referred.ldif")).addTcpServer("Default TCP","localhost",LDAPS2_PORT,"localhost.keystore","Elytron").start();} catch (Exception e) {  throw new RuntimeException("Could not start LDAP embedded server.",e);} @AT@ 2182 @LENGTH@ 1303
---UPD ExpressionStatement@@MethodInvocation:LdapService.builder().setWorkingDir(new File("./target/apache-ds/working1")).createDirectoryService("Test Service").addPartition("Elytron","dc=elytron,dc=wildfly,dc=org",5,"uid").importLdif(TestEnvironment.class.getResourceAsStream("ldap-schemas.ldif")).importLdif(TestEnvironment.class.getResourceAsStream("ldap-data.ldif")).addTcpServer("Default TCP","localhost",LDAPS1_PORT,"localhost.keystore","Elytron").start() @TO@ MethodInvocation:LdapService.builder().setWorkingDir(new File("./target/apache-ds/working1")).createDirectoryService("TestService1").addPartition("Elytron","dc=elytron,dc=wildfly,dc=org",5,"uid").importLdif(TestEnvironment.class.getResourceAsStream("ldap-schemas.ldif")).importLdif(TestEnvironment.class.getResourceAsStream("ldap-data.ldif")).addTcpServer("Default TCP","localhost",LDAPS1_PORT,"localhost.keystore","Elytron").start() @AT@ 2200 @LENGTH@ 571
------UPD MethodInvocation@@LdapService.builder().setWorkingDir(new File("./target/apache-ds/working1")).createDirectoryService("Test Service").addPartition("Elytron","dc=elytron,dc=wildfly,dc=org",5,"uid").importLdif(TestEnvironment.class.getResourceAsStream("ldap-schemas.ldif")).importLdif(TestEnvironment.class.getResourceAsStream("ldap-data.ldif")).addTcpServer("Default TCP","localhost",LDAPS1_PORT,"localhost.keystore","Elytron").start() @TO@ LdapService.builder().setWorkingDir(new File("./target/apache-ds/working1")).createDirectoryService("TestService1").addPartition("Elytron","dc=elytron,dc=wildfly,dc=org",5,"uid").importLdif(TestEnvironment.class.getResourceAsStream("ldap-schemas.ldif")).importLdif(TestEnvironment.class.getResourceAsStream("ldap-data.ldif")).addTcpServer("Default TCP","localhost",LDAPS1_PORT,"localhost.keystore","Elytron").start() @AT@ 2200 @LENGTH@ 570
---------UPD MethodInvocation@@MethodName:createDirectoryService:["Test Service"] @TO@ MethodName:createDirectoryService:["TestService1"] @AT@ 2200 @LENGTH@ 157
------------UPD StringLiteral@@"Test Service" @TO@ "TestService1" @AT@ 2342 @LENGTH@ 14
---UPD ExpressionStatement@@MethodInvocation:LdapService.builder().setWorkingDir(new File("./target/apache-ds/working2")).createDirectoryService("Test Service").addPartition("Elytron","dc=elytron,dc=wildfly,dc=org",5,"uid").importLdif(TestEnvironment.class.getResourceAsStream("ldap-schemas.ldif")).importLdif(TestEnvironment.class.getResourceAsStream("ldap-referred.ldif")).addTcpServer("Default TCP","localhost",LDAPS2_PORT,"localhost.keystore","Elytron").start() @TO@ MethodInvocation:LdapService.builder().setWorkingDir(new File("./target/apache-ds/working2")).createDirectoryService("TestService2").addPartition("Elytron","dc=elytron,dc=wildfly,dc=org",5,"uid").importLdif(TestEnvironment.class.getResourceAsStream("ldap-schemas.ldif")).importLdif(TestEnvironment.class.getResourceAsStream("ldap-referred.ldif")).addTcpServer("Default TCP","localhost",LDAPS2_PORT,"localhost.keystore","Elytron").start() @AT@ 2784 @LENGTH@ 575
------UPD MethodInvocation@@LdapService.builder().setWorkingDir(new File("./target/apache-ds/working2")).createDirectoryService("Test Service").addPartition("Elytron","dc=elytron,dc=wildfly,dc=org",5,"uid").importLdif(TestEnvironment.class.getResourceAsStream("ldap-schemas.ldif")).importLdif(TestEnvironment.class.getResourceAsStream("ldap-referred.ldif")).addTcpServer("Default TCP","localhost",LDAPS2_PORT,"localhost.keystore","Elytron").start() @TO@ LdapService.builder().setWorkingDir(new File("./target/apache-ds/working2")).createDirectoryService("TestService2").addPartition("Elytron","dc=elytron,dc=wildfly,dc=org",5,"uid").importLdif(TestEnvironment.class.getResourceAsStream("ldap-schemas.ldif")).importLdif(TestEnvironment.class.getResourceAsStream("ldap-referred.ldif")).addTcpServer("Default TCP","localhost",LDAPS2_PORT,"localhost.keystore","Elytron").start() @AT@ 2784 @LENGTH@ 574
---------UPD MethodInvocation@@MethodName:createDirectoryService:["Test Service"] @TO@ MethodName:createDirectoryService:["TestService2"] @AT@ 2784 @LENGTH@ 157
------------UPD StringLiteral@@"Test Service" @TO@ "TestService2" @AT@ 2926 @LENGTH@ 14


UPD MethodDeclaration@@public, void, MethodName:doSomething, String arg1, String arg2, Long arg3,  @TO@ void, MethodName:doSomething, String arg1, String arg2, Long arg3,  @AT@ 903 @LENGTH@ 61
---DEL Modifier@@public @AT@ 903 @LENGTH@ 6


UPD VariableDeclarationStatement@@final StringBuilder sb=new StringBuilder("IncomingAudio{"); @TO@ final StringBuilder sb=new StringBuilder("IncomingDocument{"); @AT@ 2257 @LENGTH@ 61
---UPD VariableDeclarationFragment@@sb=new StringBuilder("IncomingAudio{") @TO@ sb=new StringBuilder("IncomingDocument{") @AT@ 2277 @LENGTH@ 40
------UPD ClassInstanceCreation@@StringBuilder["IncomingAudio{"] @TO@ StringBuilder["IncomingDocument{"] @AT@ 2282 @LENGTH@ 35
---------UPD StringLiteral@@"IncomingAudio{" @TO@ "IncomingDocument{" @AT@ 2300 @LENGTH@ 16


UPD EnhancedForStatement@@for (String path : paths) {  if (path.endsWith(".jar")) {    depContainer.addAsLibrary(new File(path));  } else {    depContainer.merge(ShrinkWrap.create(GenericArchive.class).as(ExplodedImporter.class).importDirectory(path).as(GenericArchive.class),"/WEB-INF/classes",Filters.includeAll());  }} @TO@ for (String path : paths) {  final File pathFile=new File(path);  if (path.endsWith(".jar")) {    depContainer.addAsLibrary(pathFile);  } else   if (pathFile.isDirectory()) {    depContainer.merge(ShrinkWrap.create(GenericArchive.class).as(ExplodedImporter.class).importDirectory(pathFile).as(GenericArchive.class),"/WEB-INF/classes",Filters.includeAll());  }} @AT@ 8024 @LENGTH@ 865
---UPD IfStatement@@if (path.endsWith(".jar")) {  depContainer.addAsLibrary(new File(path));} else {  depContainer.merge(ShrinkWrap.create(GenericArchive.class).as(ExplodedImporter.class).importDirectory(path).as(GenericArchive.class),"/WEB-INF/classes",Filters.includeAll());} @TO@ if (path.endsWith(".jar")) {  depContainer.addAsLibrary(pathFile);} else if (pathFile.isDirectory()) {  depContainer.merge(ShrinkWrap.create(GenericArchive.class).as(ExplodedImporter.class).importDirectory(pathFile).as(GenericArchive.class),"/WEB-INF/classes",Filters.includeAll());} @AT@ 8088 @LENGTH@ 767
------UPD Block@@ThenBody:{  depContainer.addAsLibrary(new File(path));} @TO@ ThenBody:{  depContainer.addAsLibrary(pathFile);} @AT@ 8115 @LENGTH@ 122
---------UPD ExpressionStatement@@MethodInvocation:depContainer.addAsLibrary(new File(path)) @TO@ MethodInvocation:depContainer.addAsLibrary(pathFile) @AT@ 8157 @LENGTH@ 42
------------UPD MethodInvocation@@depContainer.addAsLibrary(new File(path)) @TO@ depContainer.addAsLibrary(pathFile) @AT@ 8157 @LENGTH@ 41
---------------UPD SimpleName@@MethodName:addAsLibrary:[new File(path)] @TO@ MethodName:addAsLibrary:[pathFile] @AT@ 8170 @LENGTH@ 28
------------------DEL ClassInstanceCreation@@File[path] @AT@ 8183 @LENGTH@ 14
---------------------DEL New@@new @AT@ 8183 @LENGTH@ 3
---------------------DEL SimpleType@@File @AT@ 8187 @LENGTH@ 4
---------------------DEL SimpleName@@path @AT@ 8192 @LENGTH@ 4
------------------INS SimpleName@@pathFile @TO@ SimpleName@@MethodName:addAsLibrary:[new File(path)] @AT@ 8257 @LENGTH@ 8
------UPD Block@@ElseBody:{  depContainer.merge(ShrinkWrap.create(GenericArchive.class).as(ExplodedImporter.class).importDirectory(path).as(GenericArchive.class),"/WEB-INF/classes",Filters.includeAll());} @TO@ ThenBody:{  depContainer.merge(ShrinkWrap.create(GenericArchive.class).as(ExplodedImporter.class).importDirectory(pathFile).as(GenericArchive.class),"/WEB-INF/classes",Filters.includeAll());} @AT@ 8243 @LENGTH@ 612
------INS Block@@ElseBody:if (pathFile.isDirectory()) {  depContainer.merge(ShrinkWrap.create(GenericArchive.class).as(ExplodedImporter.class).importDirectory(pathFile).as(GenericArchive.class),"/WEB-INF/classes",Filters.includeAll());} @TO@ IfStatement@@if (path.endsWith(".jar")) {  depContainer.addAsLibrary(new File(path));} else {  depContainer.merge(ShrinkWrap.create(GenericArchive.class).as(ExplodedImporter.class).importDirectory(path).as(GenericArchive.class),"/WEB-INF/classes",Filters.includeAll());} @AT@ 8311 @LENGTH@ 644
---------INS IfStatement@@if (pathFile.isDirectory()) {  depContainer.merge(ShrinkWrap.create(GenericArchive.class).as(ExplodedImporter.class).importDirectory(pathFile).as(GenericArchive.class),"/WEB-INF/classes",Filters.includeAll());} @TO@ Block@@ElseBody:if (pathFile.isDirectory()) {  depContainer.merge(ShrinkWrap.create(GenericArchive.class).as(ExplodedImporter.class).importDirectory(pathFile).as(GenericArchive.class),"/WEB-INF/classes",Filters.includeAll());} @AT@ 8311 @LENGTH@ 644
------------MOV Block@@ElseBody:{  depContainer.merge(ShrinkWrap.create(GenericArchive.class).as(ExplodedImporter.class).importDirectory(path).as(GenericArchive.class),"/WEB-INF/classes",Filters.includeAll());} @TO@ IfStatement@@if (pathFile.isDirectory()) {  depContainer.merge(ShrinkWrap.create(GenericArchive.class).as(ExplodedImporter.class).importDirectory(pathFile).as(GenericArchive.class),"/WEB-INF/classes",Filters.includeAll());} @AT@ 8243 @LENGTH@ 612
---------------UPD ExpressionStatement@@MethodInvocation:depContainer.merge(ShrinkWrap.create(GenericArchive.class).as(ExplodedImporter.class).importDirectory(path).as(GenericArchive.class),"/WEB-INF/classes",Filters.includeAll()) @TO@ MethodInvocation:depContainer.merge(ShrinkWrap.create(GenericArchive.class).as(ExplodedImporter.class).importDirectory(pathFile).as(GenericArchive.class),"/WEB-INF/classes",Filters.includeAll()) @AT@ 8285 @LENGTH@ 532
------------------UPD MethodInvocation@@depContainer.merge(ShrinkWrap.create(GenericArchive.class).as(ExplodedImporter.class).importDirectory(path).as(GenericArchive.class),"/WEB-INF/classes",Filters.includeAll()) @TO@ depContainer.merge(ShrinkWrap.create(GenericArchive.class).as(ExplodedImporter.class).importDirectory(pathFile).as(GenericArchive.class),"/WEB-INF/classes",Filters.includeAll()) @AT@ 8285 @LENGTH@ 531
---------------------UPD SimpleName@@MethodName:merge:[ShrinkWrap.create(GenericArchive.class).as(ExplodedImporter.class).importDirectory(path).as(GenericArchive.class), "/WEB-INF/classes", Filters.includeAll()] @TO@ MethodName:merge:[ShrinkWrap.create(GenericArchive.class).as(ExplodedImporter.class).importDirectory(pathFile).as(GenericArchive.class), "/WEB-INF/classes", Filters.includeAll()] @AT@ 8347 @LENGTH@ 469
------------------------UPD MethodInvocation@@ShrinkWrap.create(GenericArchive.class).as(ExplodedImporter.class).importDirectory(path).as(GenericArchive.class) @TO@ ShrinkWrap.create(GenericArchive.class).as(ExplodedImporter.class).importDirectory(pathFile).as(GenericArchive.class) @AT@ 8353 @LENGTH@ 308
---------------------------UPD MethodInvocation@@MethodName:importDirectory:[path] @TO@ MethodName:importDirectory:[pathFile] @AT@ 8353 @LENGTH@ 218
------------------------------UPD SimpleName@@path @TO@ pathFile @AT@ 8566 @LENGTH@ 4
------------INS MethodInvocation@@pathFile.isDirectory() @TO@ IfStatement@@if (pathFile.isDirectory()) {  depContainer.merge(ShrinkWrap.create(GenericArchive.class).as(ExplodedImporter.class).importDirectory(pathFile).as(GenericArchive.class),"/WEB-INF/classes",Filters.includeAll());} @AT@ 8315 @LENGTH@ 22
---------------INS SimpleName@@Name:pathFile @TO@ MethodInvocation@@pathFile.isDirectory() @AT@ 8315 @LENGTH@ 8
---------------INS SimpleName@@MethodName:isDirectory:[] @TO@ MethodInvocation@@pathFile.isDirectory() @AT@ 8324 @LENGTH@ 13
---INS VariableDeclarationStatement@@final File pathFile=new File(path); @TO@ EnhancedForStatement@@for (String path : paths) {  if (path.endsWith(".jar")) {    depContainer.addAsLibrary(new File(path));  } else {    depContainer.merge(ShrinkWrap.create(GenericArchive.class).as(ExplodedImporter.class).importDirectory(path).as(GenericArchive.class),"/WEB-INF/classes",Filters.includeAll());  }} @AT@ 8088 @LENGTH@ 37
------INS Modifier@@final @TO@ VariableDeclarationStatement@@final File pathFile=new File(path); @AT@ 8088 @LENGTH@ 5
------INS SimpleType@@File @TO@ VariableDeclarationStatement@@final File pathFile=new File(path); @AT@ 8094 @LENGTH@ 4
------INS VariableDeclarationFragment@@pathFile=new File(path) @TO@ VariableDeclarationStatement@@final File pathFile=new File(path); @AT@ 8099 @LENGTH@ 25
---------INS SimpleName@@pathFile @TO@ VariableDeclarationFragment@@pathFile=new File(path) @AT@ 8099 @LENGTH@ 8
---------INS ClassInstanceCreation@@File[path] @TO@ VariableDeclarationFragment@@pathFile=new File(path) @AT@ 8110 @LENGTH@ 14
------------INS New@@new @TO@ ClassInstanceCreation@@File[path] @AT@ 8110 @LENGTH@ 3
------------INS SimpleType@@File @TO@ ClassInstanceCreation@@File[path] @AT@ 8114 @LENGTH@ 4
------------INS SimpleName@@path @TO@ ClassInstanceCreation@@File[path] @AT@ 8119 @LENGTH@ 4


INS MethodDeclaration@@public, void, MethodName:autoSimpleDeclareAnonymousQueue,  @TO@ TypeDeclaration@@[@ContextConfiguration(classes=EnableRabbitIntegrationTests.EnableRabbitConfig.class), @RunWith(SpringJUnit4ClassRunner.class), @DirtiesContext, @TestExecutionListeners(mergeMode=MergeMode.MERGE_WITH_DEFAULTS,listeners=EnableRabbitIntegrationTests.DeleteQueuesExecutionListener.class), public]EnableRabbitIntegrationTests,  @AT@ 9526 @LENGTH@ 361
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:autoSimpleDeclareAnonymousQueue,  @AT@ 9526 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:autoSimpleDeclareAnonymousQueue,  @AT@ 9533 @LENGTH@ 4
---INS SimpleName@@MethodName:autoSimpleDeclareAnonymousQueue @TO@ MethodDeclaration@@public, void, MethodName:autoSimpleDeclareAnonymousQueue,  @AT@ 9538 @LENGTH@ 31
---INS VariableDeclarationStatement@@final SimpleMessageListenerContainer container=(SimpleMessageListenerContainer)registry.getListenerContainer("anonymousQueue575"); @TO@ MethodDeclaration@@public, void, MethodName:autoSimpleDeclareAnonymousQueue,  @AT@ 9576 @LENGTH@ 138
------INS Modifier@@final @TO@ VariableDeclarationStatement@@final SimpleMessageListenerContainer container=(SimpleMessageListenerContainer)registry.getListenerContainer("anonymousQueue575"); @AT@ 9576 @LENGTH@ 5
------INS SimpleType@@SimpleMessageListenerContainer @TO@ VariableDeclarationStatement@@final SimpleMessageListenerContainer container=(SimpleMessageListenerContainer)registry.getListenerContainer("anonymousQueue575"); @AT@ 9582 @LENGTH@ 30
------INS VariableDeclarationFragment@@container=(SimpleMessageListenerContainer)registry.getListenerContainer("anonymousQueue575") @TO@ VariableDeclarationStatement@@final SimpleMessageListenerContainer container=(SimpleMessageListenerContainer)registry.getListenerContainer("anonymousQueue575"); @AT@ 9613 @LENGTH@ 100
---------INS SimpleName@@container @TO@ VariableDeclarationFragment@@container=(SimpleMessageListenerContainer)registry.getListenerContainer("anonymousQueue575") @AT@ 9613 @LENGTH@ 9
---------INS CastExpression@@(SimpleMessageListenerContainer)registry.getListenerContainer("anonymousQueue575") @TO@ VariableDeclarationFragment@@container=(SimpleMessageListenerContainer)registry.getListenerContainer("anonymousQueue575") @AT@ 9625 @LENGTH@ 88
------------INS SimpleType@@SimpleMessageListenerContainer @TO@ CastExpression@@(SimpleMessageListenerContainer)registry.getListenerContainer("anonymousQueue575") @AT@ 9626 @LENGTH@ 30
------------INS MethodInvocation@@registry.getListenerContainer("anonymousQueue575") @TO@ CastExpression@@(SimpleMessageListenerContainer)registry.getListenerContainer("anonymousQueue575") @AT@ 9658 @LENGTH@ 55
---------------INS SimpleName@@Name:registry @TO@ MethodInvocation@@registry.getListenerContainer("anonymousQueue575") @AT@ 9658 @LENGTH@ 8
---------------INS SimpleName@@MethodName:getListenerContainer:["anonymousQueue575"] @TO@ MethodInvocation@@registry.getListenerContainer("anonymousQueue575") @AT@ 9672 @LENGTH@ 41
------------------INS StringLiteral@@"anonymousQueue575" @TO@ SimpleName@@MethodName:getListenerContainer:["anonymousQueue575"] @AT@ 9693 @LENGTH@ 19
---INS ExpressionStatement@@MethodInvocation:assertThat(container.getQueueNames(),arrayWithSize(1)) @TO@ MethodDeclaration@@public, void, MethodName:autoSimpleDeclareAnonymousQueue,  @AT@ 9717 @LENGTH@ 56
------INS MethodInvocation@@assertThat(container.getQueueNames(),arrayWithSize(1)) @TO@ ExpressionStatement@@MethodInvocation:assertThat(container.getQueueNames(),arrayWithSize(1)) @AT@ 9717 @LENGTH@ 55
---------INS SimpleName@@MethodName:assertThat:[container.getQueueNames(), arrayWithSize(1)] @TO@ MethodInvocation@@assertThat(container.getQueueNames(),arrayWithSize(1)) @AT@ 9717 @LENGTH@ 55
------------INS MethodInvocation@@container.getQueueNames() @TO@ SimpleName@@MethodName:assertThat:[container.getQueueNames(), arrayWithSize(1)] @AT@ 9728 @LENGTH@ 25
---------------INS SimpleName@@Name:container @TO@ MethodInvocation@@container.getQueueNames() @AT@ 9728 @LENGTH@ 9
---------------INS SimpleName@@MethodName:getQueueNames:[] @TO@ MethodInvocation@@container.getQueueNames() @AT@ 9738 @LENGTH@ 15
------------INS MethodInvocation@@arrayWithSize(1) @TO@ SimpleName@@MethodName:assertThat:[container.getQueueNames(), arrayWithSize(1)] @AT@ 9755 @LENGTH@ 16
---------------INS SimpleName@@MethodName:arrayWithSize:[1] @TO@ MethodInvocation@@arrayWithSize(1) @AT@ 9755 @LENGTH@ 16
------------------INS NumberLiteral@@1 @TO@ SimpleName@@MethodName:arrayWithSize:[1] @AT@ 9769 @LENGTH@ 1
---------------INS SimpleName@@MethodName:arrayWithSize:[1] @TO@ MethodInvocation@@arrayWithSize(1) @AT@ 9755 @LENGTH@ 16
------------------INS NumberLiteral@@1 @TO@ SimpleName@@MethodName:arrayWithSize:[1] @AT@ 9769 @LENGTH@ 1
---INS ExpressionStatement@@MethodInvocation:assertEquals("viaAnonymous:foo",rabbitTemplate.convertSendAndReceive(container.getQueueNames()[0],"foo")) @TO@ MethodDeclaration@@public, void, MethodName:autoSimpleDeclareAnonymousQueue,  @AT@ 9776 @LENGTH@ 108
------INS MethodInvocation@@assertEquals("viaAnonymous:foo",rabbitTemplate.convertSendAndReceive(container.getQueueNames()[0],"foo")) @TO@ ExpressionStatement@@MethodInvocation:assertEquals("viaAnonymous:foo",rabbitTemplate.convertSendAndReceive(container.getQueueNames()[0],"foo")) @AT@ 9776 @LENGTH@ 107
---------INS SimpleName@@MethodName:assertEquals:["viaAnonymous:foo", rabbitTemplate.convertSendAndReceive(container.getQueueNames()[0],"foo")] @TO@ MethodInvocation@@assertEquals("viaAnonymous:foo",rabbitTemplate.convertSendAndReceive(container.getQueueNames()[0],"foo")) @AT@ 9776 @LENGTH@ 107
------------INS StringLiteral@@"viaAnonymous:foo" @TO@ SimpleName@@MethodName:assertEquals:["viaAnonymous:foo", rabbitTemplate.convertSendAndReceive(container.getQueueNames()[0],"foo")] @AT@ 9789 @LENGTH@ 18
------------INS MethodInvocation@@rabbitTemplate.convertSendAndReceive(container.getQueueNames()[0],"foo") @TO@ SimpleName@@MethodName:assertEquals:["viaAnonymous:foo", rabbitTemplate.convertSendAndReceive(container.getQueueNames()[0],"foo")] @AT@ 9809 @LENGTH@ 73
---------------INS SimpleName@@Name:rabbitTemplate @TO@ MethodInvocation@@rabbitTemplate.convertSendAndReceive(container.getQueueNames()[0],"foo") @AT@ 9809 @LENGTH@ 14
---------------INS SimpleName@@MethodName:convertSendAndReceive:[container.getQueueNames()[0], "foo"] @TO@ MethodInvocation@@rabbitTemplate.convertSendAndReceive(container.getQueueNames()[0],"foo") @AT@ 9824 @LENGTH@ 58
------------------INS ArrayAccess@@container.getQueueNames()[0] @TO@ SimpleName@@MethodName:convertSendAndReceive:[container.getQueueNames()[0], "foo"] @AT@ 9846 @LENGTH@ 28
---------------------INS MethodInvocation@@container.getQueueNames() @TO@ ArrayAccess@@container.getQueueNames()[0] @AT@ 9846 @LENGTH@ 25
------------------------INS SimpleName@@Name:container @TO@ MethodInvocation@@container.getQueueNames() @AT@ 9846 @LENGTH@ 9
------------------------INS SimpleName@@MethodName:getQueueNames:[] @TO@ MethodInvocation@@container.getQueueNames() @AT@ 9856 @LENGTH@ 15
---------------------INS NumberLiteral@@0 @TO@ ArrayAccess@@container.getQueueNames()[0] @AT@ 9872 @LENGTH@ 1
------------------INS StringLiteral@@"foo" @TO@ SimpleName@@MethodName:convertSendAndReceive:[container.getQueueNames()[0], "foo"] @AT@ 9876 @LENGTH@ 5


UPD VariableDeclarationStatement@@ModelNode value=Constants.CREDENTIAL_REFERENCE.resolveValue(context,model); @TO@ ModelNode credentialReference=Constants.CREDENTIAL_REFERENCE.resolveModelAttribute(context,model); @AT@ 14517 @LENGTH@ 78
---UPD VariableDeclarationFragment@@value=Constants.CREDENTIAL_REFERENCE.resolveValue(context,model) @TO@ credentialReference=Constants.CREDENTIAL_REFERENCE.resolveModelAttribute(context,model) @AT@ 14527 @LENGTH@ 67
------UPD SimpleName@@value @TO@ credentialReference @AT@ 14527 @LENGTH@ 5
------UPD MethodInvocation@@Constants.CREDENTIAL_REFERENCE.resolveValue(context,model) @TO@ Constants.CREDENTIAL_REFERENCE.resolveModelAttribute(context,model) @AT@ 14535 @LENGTH@ 59
---------UPD SimpleName@@MethodName:resolveValue:[context, model] @TO@ MethodName:resolveModelAttribute:[context, model] @AT@ 14566 @LENGTH@ 28


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<IronMQComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<IronMQComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5429 @LENGTH@ 339
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 5433 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5433 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  ComponentCustomizer<IronMQComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ ThenBody:{  for (  ComponentCustomizer<IronMQComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5489 @LENGTH@ 279
------UPD EnhancedForStatement@@for (ComponentCustomizer<IronMQComponent> configurer : customizers) {  LOGGER.debug("Configure component {}, with configurer {}",component,configurer);  configurer.customize(component);} @TO@ for (ComponentCustomizer<IronMQComponent> customizer : customizers) {  LOGGER.debug("Configure component {}, with customizer {}",component,customizer);  customizer.customize(component);} @AT@ 5503 @LENGTH@ 255
---------UPD SingleVariableDeclaration@@ComponentCustomizer<IronMQComponent> configurer @TO@ ComponentCustomizer<IronMQComponent> customizer @AT@ 5508 @LENGTH@ 47
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5545 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5589 @LENGTH@ 106
------------UPD MethodInvocation@@LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5589 @LENGTH@ 105
---------------UPD SimpleName@@MethodName:debug:["Configure component {}, with configurer {}", component, configurer] @TO@ MethodName:debug:["Configure component {}, with customizer {}", component, customizer] @AT@ 5596 @LENGTH@ 98
------------------UPD StringLiteral@@"Configure component {}, with configurer {}" @TO@ "Configure component {}, with customizer {}" @AT@ 5602 @LENGTH@ 44
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5683 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(component) @TO@ MethodInvocation:customizer.customize(component) @AT@ 5712 @LENGTH@ 32
------------UPD MethodInvocation@@configurer.customize(component) @TO@ customizer.customize(component) @AT@ 5712 @LENGTH@ 31
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5712 @LENGTH@ 10


UPD VariableDeclarationStatement@@TwitterComponent tc=getContext().getComponent("twitter",TwitterComponent.class); @TO@ TwitterSearchComponent tc=getContext().getComponent("twitter-search",TwitterSearchComponent.class); @AT@ 3059 @LENGTH@ 83
---UPD SimpleType@@TwitterComponent @TO@ TwitterSearchComponent @AT@ 3059 @LENGTH@ 16
---UPD VariableDeclarationFragment@@tc=getContext().getComponent("twitter",TwitterComponent.class) @TO@ tc=getContext().getComponent("twitter-search",TwitterSearchComponent.class) @AT@ 3076 @LENGTH@ 65
------UPD MethodInvocation@@getContext().getComponent("twitter",TwitterComponent.class) @TO@ getContext().getComponent("twitter-search",TwitterSearchComponent.class) @AT@ 3081 @LENGTH@ 60
---------UPD SimpleName@@MethodName:getComponent:["twitter", TwitterComponent.class] @TO@ MethodName:getComponent:["twitter-search", TwitterSearchComponent.class] @AT@ 3094 @LENGTH@ 47
------------UPD StringLiteral@@"twitter" @TO@ "twitter-search" @AT@ 3107 @LENGTH@ 9
------------UPD TypeLiteral@@TwitterComponent.class @TO@ TwitterSearchComponent.class @AT@ 3118 @LENGTH@ 22


UPD VariableDeclarationStatement@@final String request=String.format("http://%s/druid/v2/datasources/%s/candidates?intervals=%s",address,query.getDataSource().getNames().get(0),intervals); @TO@ final String request=String.format("http://%s/druid/v2/datasources/%s/candidates?intervals=%s",address,query.getDataSource().getNames().get(0),URLEncoder.encode(intervals,"UTF-8")); @AT@ 9328 @LENGTH@ 184
---UPD VariableDeclarationFragment@@request=String.format("http://%s/druid/v2/datasources/%s/candidates?intervals=%s",address,query.getDataSource().getNames().get(0),intervals) @TO@ request=String.format("http://%s/druid/v2/datasources/%s/candidates?intervals=%s",address,query.getDataSource().getNames().get(0),URLEncoder.encode(intervals,"UTF-8")) @AT@ 9341 @LENGTH@ 170
------UPD MethodInvocation@@String.format("http://%s/druid/v2/datasources/%s/candidates?intervals=%s",address,query.getDataSource().getNames().get(0),intervals) @TO@ String.format("http://%s/druid/v2/datasources/%s/candidates?intervals=%s",address,query.getDataSource().getNames().get(0),URLEncoder.encode(intervals,"UTF-8")) @AT@ 9351 @LENGTH@ 160
---------UPD SimpleName@@MethodName:format:["http://%s/druid/v2/datasources/%s/candidates?intervals=%s", address, query.getDataSource().getNames().get(0), intervals] @TO@ MethodName:format:["http://%s/druid/v2/datasources/%s/candidates?intervals=%s", address, query.getDataSource().getNames().get(0), URLEncoder.encode(intervals,"UTF-8")] @AT@ 9358 @LENGTH@ 153
------------INS MethodInvocation@@URLEncoder.encode(intervals,"UTF-8") @TO@ SimpleName@@MethodName:format:["http://%s/druid/v2/datasources/%s/candidates?intervals=%s", address, query.getDataSource().getNames().get(0), intervals] @AT@ 9529 @LENGTH@ 37
---------------INS SimpleName@@Name:URLEncoder @TO@ MethodInvocation@@URLEncoder.encode(intervals,"UTF-8") @AT@ 9529 @LENGTH@ 10
---------------INS SimpleName@@MethodName:encode:[intervals, "UTF-8"] @TO@ MethodInvocation@@URLEncoder.encode(intervals,"UTF-8") @AT@ 9540 @LENGTH@ 26
------------------MOV SimpleName@@intervals @TO@ SimpleName@@MethodName:encode:[intervals, "UTF-8"] @AT@ 9501 @LENGTH@ 9
------------------INS StringLiteral@@"UTF-8" @TO@ SimpleName@@MethodName:encode:[intervals, "UTF-8"] @AT@ 9558 @LENGTH@ 7


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled(); @AT@ 5309 @LENGTH@ 160
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5317 @LENGTH@ 151
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5317 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5334 @LENGTH@ 134
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 5334 @LENGTH@ 64
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5334 @LENGTH@ 35
---------UPD MethodInvocation@@componentConfiguration.getConfigurer().isEnabled() @TO@ componentConfiguration.getCustomizer().isEnabled() @AT@ 5418 @LENGTH@ 50
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5418 @LENGTH@ 38


UPD VariableDeclarationStatement@@OperationEntry addOperationEntry=context.getResourceRegistration().getOperationEntry(PathAddress.pathAddress(ProtocolResourceDefinition.WILDCARD_PATH),ModelDescriptionConstants.ADD); @TO@ OperationEntry addOperationEntry=context.getResourceRegistration().getOperationEntry(PathAddress.pathAddress(protocolPath),ModelDescriptionConstants.ADD); @AT@ 14758 @LENGTH@ 185
---UPD VariableDeclarationFragment@@addOperationEntry=context.getResourceRegistration().getOperationEntry(PathAddress.pathAddress(ProtocolResourceDefinition.WILDCARD_PATH),ModelDescriptionConstants.ADD) @TO@ addOperationEntry=context.getResourceRegistration().getOperationEntry(PathAddress.pathAddress(protocolPath),ModelDescriptionConstants.ADD) @AT@ 14773 @LENGTH@ 169
------UPD MethodInvocation@@context.getResourceRegistration().getOperationEntry(PathAddress.pathAddress(ProtocolResourceDefinition.WILDCARD_PATH),ModelDescriptionConstants.ADD) @TO@ context.getResourceRegistration().getOperationEntry(PathAddress.pathAddress(protocolPath),ModelDescriptionConstants.ADD) @AT@ 14793 @LENGTH@ 149
---------UPD SimpleName@@MethodName:getOperationEntry:[PathAddress.pathAddress(ProtocolResourceDefinition.WILDCARD_PATH), ModelDescriptionConstants.ADD] @TO@ MethodName:getOperationEntry:[PathAddress.pathAddress(protocolPath), ModelDescriptionConstants.ADD] @AT@ 14827 @LENGTH@ 115
------------UPD MethodInvocation@@PathAddress.pathAddress(ProtocolResourceDefinition.WILDCARD_PATH) @TO@ PathAddress.pathAddress(protocolPath) @AT@ 14845 @LENGTH@ 65
---------------UPD SimpleName@@MethodName:pathAddress:[ProtocolResourceDefinition.WILDCARD_PATH] @TO@ MethodName:pathAddress:[protocolPath] @AT@ 14857 @LENGTH@ 53
------------------DEL QualifiedName@@ProtocolResourceDefinition.WILDCARD_PATH @AT@ 14869 @LENGTH@ 40
---------------------DEL SimpleName@@ProtocolResourceDefinition @AT@ 14869 @LENGTH@ 26
---------------------DEL SimpleName@@WILDCARD_PATH @AT@ 14896 @LENGTH@ 13
------------------INS SimpleName@@protocolPath @TO@ SimpleName@@MethodName:pathAddress:[ProtocolResourceDefinition.WILDCARD_PATH] @AT@ 14869 @LENGTH@ 12


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<TimerComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<TimerComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5412 @LENGTH@ 338
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 5416 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5416 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  ComponentCustomizer<TimerComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ ThenBody:{  for (  ComponentCustomizer<TimerComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5472 @LENGTH@ 278
------UPD EnhancedForStatement@@for (ComponentCustomizer<TimerComponent> configurer : customizers) {  LOGGER.debug("Configure component {}, with configurer {}",component,configurer);  configurer.customize(component);} @TO@ for (ComponentCustomizer<TimerComponent> customizer : customizers) {  LOGGER.debug("Configure component {}, with customizer {}",component,customizer);  customizer.customize(component);} @AT@ 5486 @LENGTH@ 254
---------UPD SingleVariableDeclaration@@ComponentCustomizer<TimerComponent> configurer @TO@ ComponentCustomizer<TimerComponent> customizer @AT@ 5491 @LENGTH@ 46
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5527 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5571 @LENGTH@ 106
------------UPD MethodInvocation@@LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5571 @LENGTH@ 105
---------------UPD SimpleName@@MethodName:debug:["Configure component {}, with configurer {}", component, configurer] @TO@ MethodName:debug:["Configure component {}, with customizer {}", component, customizer] @AT@ 5578 @LENGTH@ 98
------------------UPD StringLiteral@@"Configure component {}, with configurer {}" @TO@ "Configure component {}, with customizer {}" @AT@ 5584 @LENGTH@ 44
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5665 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(component) @TO@ MethodInvocation:customizer.customize(component) @AT@ 5694 @LENGTH@ 32
------------UPD MethodInvocation@@configurer.customize(component) @TO@ customizer.customize(component) @AT@ 5694 @LENGTH@ 31
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5694 @LENGTH@ 10


UPD TypeDeclaration@@[@XmlRootElement(name="typeFilter"), @XmlAccessorType(XmlAccessType.FIELD), public, final]YAMLTypeFilterDefinition,  @TO@ [@Metadata(label="dataformat,transformation,yaml",title="YAML Type Filter"), @XmlRootElement(name="typeFilter"), @XmlAccessorType(XmlAccessType.FIELD), public, final]YAMLTypeFilterDefinition,  @AT@ 1043 @LENGTH@ 511
---INS NormalAnnotation@@@Metadata(label="dataformat,transformation,yaml",title="YAML Type Filter") @TO@ TypeDeclaration@@[@XmlRootElement(name="typeFilter"), @XmlAccessorType(XmlAccessType.FIELD), public, final]YAMLTypeFilterDefinition,  @AT@ 1082 @LENGTH@ 79


UPD ExpressionStatement@@MethodInvocation:Assert.notNull(account) @TO@ MethodInvocation:Assert.notNull(account,"account cannot be null") @AT@ 1001 @LENGTH@ 24
---UPD MethodInvocation@@Assert.notNull(account) @TO@ Assert.notNull(account,"account cannot be null") @AT@ 1001 @LENGTH@ 23
------UPD SimpleName@@MethodName:notNull:[account] @TO@ MethodName:notNull:[account, "account cannot be null"] @AT@ 1008 @LENGTH@ 16
---------INS StringLiteral@@"account cannot be null" @TO@ SimpleName@@MethodName:notNull:[account] @AT@ 1051 @LENGTH@ 24


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<HdfsComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<HdfsComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5399 @LENGTH@ 337
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 5403 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5403 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  ComponentCustomizer<HdfsComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ ThenBody:{  for (  ComponentCustomizer<HdfsComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5459 @LENGTH@ 277
------UPD EnhancedForStatement@@for (ComponentCustomizer<HdfsComponent> configurer : customizers) {  LOGGER.debug("Configure component {}, with configurer {}",component,configurer);  configurer.customize(component);} @TO@ for (ComponentCustomizer<HdfsComponent> customizer : customizers) {  LOGGER.debug("Configure component {}, with customizer {}",component,customizer);  customizer.customize(component);} @AT@ 5473 @LENGTH@ 253
---------UPD SingleVariableDeclaration@@ComponentCustomizer<HdfsComponent> configurer @TO@ ComponentCustomizer<HdfsComponent> customizer @AT@ 5478 @LENGTH@ 45
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5513 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5557 @LENGTH@ 106
------------UPD MethodInvocation@@LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5557 @LENGTH@ 105
---------------UPD SimpleName@@MethodName:debug:["Configure component {}, with configurer {}", component, configurer] @TO@ MethodName:debug:["Configure component {}, with customizer {}", component, customizer] @AT@ 5564 @LENGTH@ 98
------------------UPD StringLiteral@@"Configure component {}, with configurer {}" @TO@ "Configure component {}, with customizer {}" @AT@ 5570 @LENGTH@ 44
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5651 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(component) @TO@ MethodInvocation:customizer.customize(component) @AT@ 5680 @LENGTH@ 32
------------UPD MethodInvocation@@configurer.customize(component) @TO@ customizer.customize(component) @AT@ 5680 @LENGTH@ 31
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5680 @LENGTH@ 10


INS MethodDeclaration@@public, static, BlockingExecutor, MethodName:extractBlockingExecutor, StatisticsExecutorImpl sei,  @TO@ TypeDeclaration@@[public]JcaTestsUtil,  @AT@ 7463 @LENGTH@ 388
---INS Modifier@@public @TO@ MethodDeclaration@@public, static, BlockingExecutor, MethodName:extractBlockingExecutor, StatisticsExecutorImpl sei,  @AT@ 7463 @LENGTH@ 6
---INS Modifier@@static @TO@ MethodDeclaration@@public, static, BlockingExecutor, MethodName:extractBlockingExecutor, StatisticsExecutorImpl sei,  @AT@ 7470 @LENGTH@ 6
---INS SimpleType@@BlockingExecutor @TO@ MethodDeclaration@@public, static, BlockingExecutor, MethodName:extractBlockingExecutor, StatisticsExecutorImpl sei,  @AT@ 7477 @LENGTH@ 16
---INS SimpleName@@MethodName:extractBlockingExecutor @TO@ MethodDeclaration@@public, static, BlockingExecutor, MethodName:extractBlockingExecutor, StatisticsExecutorImpl sei,  @AT@ 7494 @LENGTH@ 23
---INS SingleVariableDeclaration@@StatisticsExecutorImpl sei @TO@ MethodDeclaration@@public, static, BlockingExecutor, MethodName:extractBlockingExecutor, StatisticsExecutorImpl sei,  @AT@ 7518 @LENGTH@ 26
------INS SimpleType@@StatisticsExecutorImpl @TO@ SingleVariableDeclaration@@StatisticsExecutorImpl sei @AT@ 7518 @LENGTH@ 22
------INS SimpleName@@sei @TO@ SingleVariableDeclaration@@StatisticsExecutorImpl sei @AT@ 7541 @LENGTH@ 3
---INS VariableDeclarationStatement@@Class clazz=sei.getClass(); @TO@ MethodDeclaration@@public, static, BlockingExecutor, MethodName:extractBlockingExecutor, StatisticsExecutorImpl sei,  @AT@ 7556 @LENGTH@ 29
------INS SimpleType@@Class @TO@ VariableDeclarationStatement@@Class clazz=sei.getClass(); @AT@ 7556 @LENGTH@ 5
------INS VariableDeclarationFragment@@clazz=sei.getClass() @TO@ VariableDeclarationStatement@@Class clazz=sei.getClass(); @AT@ 7562 @LENGTH@ 22
---------INS SimpleName@@clazz @TO@ VariableDeclarationFragment@@clazz=sei.getClass() @AT@ 7562 @LENGTH@ 5
---------INS MethodInvocation@@sei.getClass() @TO@ VariableDeclarationFragment@@clazz=sei.getClass() @AT@ 7570 @LENGTH@ 14
------------INS SimpleName@@Name:sei @TO@ MethodInvocation@@sei.getClass() @AT@ 7570 @LENGTH@ 3
------------INS SimpleName@@MethodName:getClass:[] @TO@ MethodInvocation@@sei.getClass() @AT@ 7574 @LENGTH@ 10
---INS TryStatement@@try {  Field delegate=clazz.getDeclaredField("realExecutor");  delegate.setAccessible(true);  return (BlockingExecutor)delegate.get(sei);} catch (Throwable t) {} @TO@ MethodDeclaration@@public, static, BlockingExecutor, MethodName:extractBlockingExecutor, StatisticsExecutorImpl sei,  @AT@ 7594 @LENGTH@ 230
------INS VariableDeclarationStatement@@Field delegate=clazz.getDeclaredField("realExecutor"); @TO@ TryStatement@@try {  Field delegate=clazz.getDeclaredField("realExecutor");  delegate.setAccessible(true);  return (BlockingExecutor)delegate.get(sei);} catch (Throwable t) {} @AT@ 7612 @LENGTH@ 56
---------INS SimpleType@@Field @TO@ VariableDeclarationStatement@@Field delegate=clazz.getDeclaredField("realExecutor"); @AT@ 7612 @LENGTH@ 5
---------INS VariableDeclarationFragment@@delegate=clazz.getDeclaredField("realExecutor") @TO@ VariableDeclarationStatement@@Field delegate=clazz.getDeclaredField("realExecutor"); @AT@ 7618 @LENGTH@ 49
------------INS SimpleName@@delegate @TO@ VariableDeclarationFragment@@delegate=clazz.getDeclaredField("realExecutor") @AT@ 7618 @LENGTH@ 8
------------INS MethodInvocation@@clazz.getDeclaredField("realExecutor") @TO@ VariableDeclarationFragment@@delegate=clazz.getDeclaredField("realExecutor") @AT@ 7629 @LENGTH@ 38
---------------INS SimpleName@@Name:clazz @TO@ MethodInvocation@@clazz.getDeclaredField("realExecutor") @AT@ 7629 @LENGTH@ 5
---------------INS SimpleName@@MethodName:getDeclaredField:["realExecutor"] @TO@ MethodInvocation@@clazz.getDeclaredField("realExecutor") @AT@ 7635 @LENGTH@ 32
------------------INS StringLiteral@@"realExecutor" @TO@ SimpleName@@MethodName:getDeclaredField:["realExecutor"] @AT@ 7652 @LENGTH@ 14
------INS ExpressionStatement@@MethodInvocation:delegate.setAccessible(true) @TO@ TryStatement@@try {  Field delegate=clazz.getDeclaredField("realExecutor");  delegate.setAccessible(true);  return (BlockingExecutor)delegate.get(sei);} catch (Throwable t) {} @AT@ 7681 @LENGTH@ 29
---------INS MethodInvocation@@delegate.setAccessible(true) @TO@ ExpressionStatement@@MethodInvocation:delegate.setAccessible(true) @AT@ 7681 @LENGTH@ 28
------------INS SimpleName@@Name:delegate @TO@ MethodInvocation@@delegate.setAccessible(true) @AT@ 7681 @LENGTH@ 8
------------INS SimpleName@@MethodName:setAccessible:[true] @TO@ MethodInvocation@@delegate.setAccessible(true) @AT@ 7690 @LENGTH@ 19
---------------INS BooleanLiteral@@true @TO@ SimpleName@@MethodName:setAccessible:[true] @AT@ 7704 @LENGTH@ 4
------INS ReturnStatement@@CastExpression:(BlockingExecutor)delegate.get(sei) @TO@ TryStatement@@try {  Field delegate=clazz.getDeclaredField("realExecutor");  delegate.setAccessible(true);  return (BlockingExecutor)delegate.get(sei);} catch (Throwable t) {} @AT@ 7723 @LENGTH@ 44
---------INS CastExpression@@(BlockingExecutor)delegate.get(sei) @TO@ ReturnStatement@@CastExpression:(BlockingExecutor)delegate.get(sei) @AT@ 7730 @LENGTH@ 36
------------INS SimpleType@@BlockingExecutor @TO@ CastExpression@@(BlockingExecutor)delegate.get(sei) @AT@ 7731 @LENGTH@ 16
------------INS MethodInvocation@@delegate.get(sei) @TO@ CastExpression@@(BlockingExecutor)delegate.get(sei) @AT@ 7749 @LENGTH@ 17
---------------INS SimpleName@@Name:delegate @TO@ MethodInvocation@@delegate.get(sei) @AT@ 7749 @LENGTH@ 8
---------------INS SimpleName@@MethodName:get:[sei] @TO@ MethodInvocation@@delegate.get(sei) @AT@ 7758 @LENGTH@ 8
------------------INS SimpleName@@sei @TO@ SimpleName@@MethodName:get:[sei] @AT@ 7762 @LENGTH@ 3
------INS CatchClause@@catch (Throwable t) {} @TO@ TryStatement@@try {  Field delegate=clazz.getDeclaredField("realExecutor");  delegate.setAccessible(true);  return (BlockingExecutor)delegate.get(sei);} catch (Throwable t) {} @AT@ 7778 @LENGTH@ 46
---------INS SingleVariableDeclaration@@Throwable t @TO@ CatchClause@@catch (Throwable t) {} @AT@ 7785 @LENGTH@ 11
------------INS SimpleType@@Throwable @TO@ SingleVariableDeclaration@@Throwable t @AT@ 7785 @LENGTH@ 9
------------INS SimpleName@@t @TO@ SingleVariableDeclaration@@Throwable t @AT@ 7795 @LENGTH@ 1
---INS ReturnStatement@@NullLiteral:null @TO@ MethodDeclaration@@public, static, BlockingExecutor, MethodName:extractBlockingExecutor, StatisticsExecutorImpl sei,  @AT@ 7833 @LENGTH@ 12
------INS NullLiteral@@null @TO@ ReturnStatement@@NullLiteral:null @AT@ 7840 @LENGTH@ 4


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled(); @AT@ 5292 @LENGTH@ 160
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5300 @LENGTH@ 151
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5300 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5317 @LENGTH@ 134
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 5317 @LENGTH@ 64
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5317 @LENGTH@ 35
---------UPD MethodInvocation@@componentConfiguration.getConfigurer().isEnabled() @TO@ componentConfiguration.getCustomizer().isEnabled() @AT@ 5401 @LENGTH@ 50
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5401 @LENGTH@ 38


UPD TypeDeclaration@@[@org.springframework.data.mongodb.core.mapping.Document(collection="fullTextDoc"), static]FullTextDoc,  @TO@ [@org.springframework.data.mongodb.core.mapping.Document(collection="fullTextDoc"), @ToString, static]FullTextDoc,  @AT@ 7923 @LENGTH@ 2499
---INS MarkerAnnotation@@@ToString @TO@ TypeDeclaration@@[@org.springframework.data.mongodb.core.mapping.Document(collection="fullTextDoc"), static]FullTextDoc,  @AT@ 8032 @LENGTH@ 9


UPD ExpressionStatement@@MethodInvocation:Assert.hasLength(oldSessionId) @TO@ MethodInvocation:Assert.hasLength(oldSessionId,"oldSessionId must have length") @AT@ 1854 @LENGTH@ 31
---UPD MethodInvocation@@Assert.hasLength(oldSessionId) @TO@ Assert.hasLength(oldSessionId,"oldSessionId must have length") @AT@ 1854 @LENGTH@ 30
------UPD SimpleName@@MethodName:hasLength:[oldSessionId] @TO@ MethodName:hasLength:[oldSessionId, "oldSessionId must have length"] @AT@ 1861 @LENGTH@ 23
---------INS StringLiteral@@"oldSessionId must have length" @TO@ SimpleName@@MethodName:hasLength:[oldSessionId] @AT@ 1885 @LENGTH@ 31


UPD VariableDeclarationStatement@@SCryptPasswordEncoder oldEncoder=new SCryptPasswordEncoder(512,8,4,64,16); @TO@ SCryptPasswordEncoder oldEncoder=new SCryptPasswordEncoder(16384,8,1,32,64); @AT@ 2200 @LENGTH@ 80
---UPD VariableDeclarationFragment@@oldEncoder=new SCryptPasswordEncoder(512,8,4,64,16) @TO@ oldEncoder=new SCryptPasswordEncoder(16384,8,1,32,64) @AT@ 2222 @LENGTH@ 57
------UPD ClassInstanceCreation@@SCryptPasswordEncoder[512, 8, 4, 64, 16] @TO@ SCryptPasswordEncoder[16384, 8, 1, 32, 64] @AT@ 2235 @LENGTH@ 44
---------UPD NumberLiteral@@512 @TO@ 16384 @AT@ 2261 @LENGTH@ 3
---------UPD NumberLiteral@@4 @TO@ 1 @AT@ 2269 @LENGTH@ 1
---------INS NumberLiteral@@32 @TO@ ClassInstanceCreation@@SCryptPasswordEncoder[512, 8, 4, 64, 16] @AT@ 2274 @LENGTH@ 2
---------DEL NumberLiteral@@16 @AT@ 2276 @LENGTH@ 2


UPD FieldDeclaration@@private, static, final, AttributeDefinition, [STABILITY_TIMEOUT=SimpleAttributeDefinitionBuilder.create("timeout",ModelType.INT,false).setDefaultValue(new ModelNode(15)).setValidator(new IntRangeValidator(0,true)).setMeasurementUnit(MeasurementUnit.SECONDS).build()] @TO@ private, static, final, AttributeDefinition, [STABILITY_TIMEOUT=SimpleAttributeDefinitionBuilder.create("timeout",ModelType.INT).setRequired(false).setDefaultValue(new ModelNode(15)).setValidator(new IntRangeValidator(0,true)).setMeasurementUnit(MeasurementUnit.SECONDS).build()] @AT@ 2961 @LENGTH@ 318
---UPD VariableDeclarationFragment@@STABILITY_TIMEOUT=SimpleAttributeDefinitionBuilder.create("timeout",ModelType.INT,false).setDefaultValue(new ModelNode(15)).setValidator(new IntRangeValidator(0,true)).setMeasurementUnit(MeasurementUnit.SECONDS).build() @TO@ STABILITY_TIMEOUT=SimpleAttributeDefinitionBuilder.create("timeout",ModelType.INT).setRequired(false).setDefaultValue(new ModelNode(15)).setValidator(new IntRangeValidator(0,true)).setMeasurementUnit(MeasurementUnit.SECONDS).build() @AT@ 3002 @LENGTH@ 276
------UPD MethodInvocation@@SimpleAttributeDefinitionBuilder.create("timeout",ModelType.INT,false).setDefaultValue(new ModelNode(15)).setValidator(new IntRangeValidator(0,true)).setMeasurementUnit(MeasurementUnit.SECONDS).build() @TO@ SimpleAttributeDefinitionBuilder.create("timeout",ModelType.INT).setRequired(false).setDefaultValue(new ModelNode(15)).setValidator(new IntRangeValidator(0,true)).setMeasurementUnit(MeasurementUnit.SECONDS).build() @AT@ 3022 @LENGTH@ 256
---------INS MethodInvocation@@MethodName:setRequired:[false] @TO@ MethodInvocation@@SimpleAttributeDefinitionBuilder.create("timeout",ModelType.INT,false).setDefaultValue(new ModelNode(15)).setValidator(new IntRangeValidator(0,true)).setMeasurementUnit(MeasurementUnit.SECONDS).build() @AT@ 3022 @LENGTH@ 97
------------MOV BooleanLiteral@@false @TO@ MethodInvocation@@MethodName:setRequired:[false] @AT@ 3088 @LENGTH@ 5
---------DEL MethodInvocation@@MethodName:create:["timeout", ModelType.INT, false] @AT@ 3022 @LENGTH@ 72
---------INS MethodInvocation@@MethodName:create:["timeout", ModelType.INT] @TO@ MethodInvocation@@SimpleAttributeDefinitionBuilder.create("timeout",ModelType.INT,false).setDefaultValue(new ModelNode(15)).setValidator(new IntRangeValidator(0,true)).setMeasurementUnit(MeasurementUnit.SECONDS).build() @AT@ 3022 @LENGTH@ 65
------------MOV StringLiteral@@"timeout" @TO@ MethodInvocation@@MethodName:create:["timeout", ModelType.INT] @AT@ 3062 @LENGTH@ 9
------------MOV QualifiedName@@ModelType.INT @TO@ MethodInvocation@@MethodName:create:["timeout", ModelType.INT] @AT@ 3073 @LENGTH@ 13


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled(); @AT@ 5209 @LENGTH@ 160
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5217 @LENGTH@ 151
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5217 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5234 @LENGTH@ 134
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 5234 @LENGTH@ 64
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5234 @LENGTH@ 35
---------UPD MethodInvocation@@componentConfiguration.getConfigurer().isEnabled() @TO@ componentConfiguration.getCustomizer().isEnabled() @AT@ 5318 @LENGTH@ 50
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5318 @LENGTH@ 38


UPD ExpressionStatement@@MethodInvocation:mvc.perform(formLogin("/authenticate").user("user","user").password("pass","password")).andExpect(status().isFound()).andExpect(redirectUrl("/")).andExpect(authenticated().withUsername("user")) @TO@ MethodInvocation:mvc.perform(formLogin("/authenticate").user("user","user").password("pass","password")).andExpect(status().isFound()).andExpect(redirectedUrl("/")).andExpect(authenticated().withUsername("user")) @AT@ 3096 @LENGTH@ 217
---UPD MethodInvocation@@mvc.perform(formLogin("/authenticate").user("user","user").password("pass","password")).andExpect(status().isFound()).andExpect(redirectUrl("/")).andExpect(authenticated().withUsername("user")) @TO@ mvc.perform(formLogin("/authenticate").user("user","user").password("pass","password")).andExpect(status().isFound()).andExpect(redirectedUrl("/")).andExpect(authenticated().withUsername("user")) @AT@ 3096 @LENGTH@ 216
------UPD MethodInvocation@@MethodName:andExpect:[redirectUrl("/")] @TO@ MethodName:andExpect:[redirectedUrl("/")] @AT@ 3096 @LENGTH@ 163
---------UPD MethodInvocation@@redirectUrl("/") @TO@ redirectedUrl("/") @AT@ 3242 @LENGTH@ 16
------------UPD SimpleName@@MethodName:redirectUrl:["/"] @TO@ MethodName:redirectedUrl:["/"] @AT@ 3242 @LENGTH@ 16


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled(); @AT@ 5225 @LENGTH@ 160
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5233 @LENGTH@ 151
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5233 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5250 @LENGTH@ 134
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 5250 @LENGTH@ 64
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5250 @LENGTH@ 35
---------UPD MethodInvocation@@componentConfiguration.getConfigurer().isEnabled() @TO@ componentConfiguration.getCustomizer().isEnabled() @AT@ 5334 @LENGTH@ 50
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5334 @LENGTH@ 38


UPD MethodDeclaration@@public, ModelAndView, MethodName:displayAddPermissionPageForContact, @RequestParam("contactId") int contactId,  @TO@ public, ModelAndView, MethodName:displayAddPermissionPageForContact, @RequestParam("contactId") long contactId,  @AT@ 3491 @LENGTH@ 512
---UPD SingleVariableDeclaration@@@RequestParam("contactId") int contactId @TO@ @RequestParam("contactId") long contactId @AT@ 3550 @LENGTH@ 40
------UPD PrimitiveType@@int @TO@ long @AT@ 3577 @LENGTH@ 3
---UPD VariableDeclarationStatement@@Contact contact=contactManager.getById(new Long(contactId)); @TO@ Contact contact=contactManager.getById(contactId); @AT@ 3596 @LENGTH@ 62
------UPD VariableDeclarationFragment@@contact=contactManager.getById(new Long(contactId)) @TO@ contact=contactManager.getById(contactId) @AT@ 3604 @LENGTH@ 53
---------UPD MethodInvocation@@contactManager.getById(new Long(contactId)) @TO@ contactManager.getById(contactId) @AT@ 3614 @LENGTH@ 43
------------UPD SimpleName@@MethodName:getById:[new Long(contactId)] @TO@ MethodName:getById:[contactId] @AT@ 3629 @LENGTH@ 28
---------------DEL ClassInstanceCreation@@Long[contactId] @AT@ 3637 @LENGTH@ 19
------------------DEL New@@new @AT@ 3637 @LENGTH@ 3
------------------DEL SimpleType@@Long @AT@ 3641 @LENGTH@ 4
------------------DEL SimpleName@@contactId @AT@ 3646 @LENGTH@ 9
---------------INS SimpleName@@contactId @TO@ SimpleName@@MethodName:getById:[new Long(contactId)] @AT@ 3638 @LENGTH@ 9


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled(); @AT@ 5330 @LENGTH@ 160
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5338 @LENGTH@ 151
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5338 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5355 @LENGTH@ 134
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 5355 @LENGTH@ 64
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5355 @LENGTH@ 35
---------UPD MethodInvocation@@componentConfiguration.getConfigurer().isEnabled() @TO@ componentConfiguration.getCustomizer().isEnabled() @AT@ 5439 @LENGTH@ 50
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5439 @LENGTH@ 38


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && dataformatConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && dataformatConfiguration.getCustomizer().isEnabled(); @AT@ 5138 @LENGTH@ 177
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && dataformatConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && dataformatConfiguration.getCustomizer().isEnabled() @AT@ 5146 @LENGTH@ 168
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5146 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && dataformatConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && dataformatConfiguration.getCustomizer().isEnabled() @AT@ 5163 @LENGTH@ 151
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 5163 @LENGTH@ 72
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5163 @LENGTH@ 35
---------UPD MethodInvocation@@dataformatConfiguration.getConfigurer().isEnabled() @TO@ dataformatConfiguration.getCustomizer().isEnabled() @AT@ 5263 @LENGTH@ 51
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5263 @LENGTH@ 39


UPD ReturnStatement@@StringLiteral:"RoundRobinServiceCallServiceChooser" @TO@ StringLiteral:"RoundRobinServiceChooser" @AT@ 1357 @LENGTH@ 45
---UPD StringLiteral@@"RoundRobinServiceCallServiceChooser" @TO@ "RoundRobinServiceChooser" @AT@ 1364 @LENGTH@ 37


UPD ReturnStatement@@QualifiedName:Collections.EMPTY_SET @TO@ MethodInvocation:Collections.emptySet() @AT@ 2293 @LENGTH@ 29
---INS MethodInvocation@@Collections.emptySet() @TO@ ReturnStatement@@QualifiedName:Collections.EMPTY_SET @AT@ 2300 @LENGTH@ 22
------INS SimpleName@@Name:Collections @TO@ MethodInvocation@@Collections.emptySet() @AT@ 2300 @LENGTH@ 11
------INS SimpleName@@MethodName:emptySet:[] @TO@ MethodInvocation@@Collections.emptySet() @AT@ 2312 @LENGTH@ 10
---DEL QualifiedName@@Collections.EMPTY_SET @AT@ 2300 @LENGTH@ 21
------DEL SimpleName@@Collections @AT@ 2300 @LENGTH@ 11
------DEL SimpleName@@EMPTY_SET @AT@ 2312 @LENGTH@ 9


UPD ExpressionStatement@@MethodInvocation:assertEquals(2,data.size()) @TO@ MethodInvocation:assertEquals(3,data.size()) @AT@ 2187 @LENGTH@ 29
---UPD MethodInvocation@@assertEquals(2,data.size()) @TO@ assertEquals(3,data.size()) @AT@ 2187 @LENGTH@ 28
------UPD SimpleName@@MethodName:assertEquals:[2, data.size()] @TO@ MethodName:assertEquals:[3, data.size()] @AT@ 2187 @LENGTH@ 28
---------UPD NumberLiteral@@2 @TO@ 3 @AT@ 2200 @LENGTH@ 1


UPD ExpressionStatement@@MethodInvocation:Assert.state(StringUtils.hasText(roles)) @TO@ MethodInvocation:Assert.hasLength(roles,"roles is expected to have length") @AT@ 19695 @LENGTH@ 41
---UPD MethodInvocation@@Assert.state(StringUtils.hasText(roles)) @TO@ Assert.hasLength(roles,"roles is expected to have length") @AT@ 19695 @LENGTH@ 40
------DEL SimpleName@@MethodName:state:[StringUtils.hasText(roles)] @AT@ 19702 @LENGTH@ 33
---------DEL MethodInvocation@@StringUtils.hasText(roles) @AT@ 19708 @LENGTH@ 26
------------DEL SimpleName@@Name:StringUtils @AT@ 19708 @LENGTH@ 11
------MOV SimpleName@@MethodName:hasText:[roles] @TO@ MethodInvocation@@Assert.state(StringUtils.hasText(roles)) @AT@ 19720 @LENGTH@ 14
---------INS StringLiteral@@"roles is expected to have length" @TO@ SimpleName@@MethodName:hasText:[roles] @AT@ 19719 @LENGTH@ 34


UPD FieldDeclaration@@public, static, char, [COLUMN_COMMENTS_DELIMITER='\0'] @TO@ public, static, final, char, [COLUMN_COMMENTS_DELIMITER='\0'] @AT@ 3510 @LENGTH@ 52
---INS Modifier@@final @TO@ FieldDeclaration@@public, static, char, [COLUMN_COMMENTS_DELIMITER='\0'] @AT@ 3524 @LENGTH@ 5


UPD VariableDeclarationStatement@@String partClassFromHeader=(String)exchange.getIn().getHeader(JaxbConstants.JAXB_PART_CLASS); @TO@ String partClassFromHeader=exchange.getIn().getHeader(JaxbConstants.JAXB_PART_CLASS,String.class); @AT@ 7441 @LENGTH@ 95
---UPD VariableDeclarationFragment@@partClassFromHeader=(String)exchange.getIn().getHeader(JaxbConstants.JAXB_PART_CLASS) @TO@ partClassFromHeader=exchange.getIn().getHeader(JaxbConstants.JAXB_PART_CLASS,String.class) @AT@ 7448 @LENGTH@ 87
------INS MethodInvocation@@exchange.getIn().getHeader(JaxbConstants.JAXB_PART_CLASS,String.class) @TO@ VariableDeclarationFragment@@partClassFromHeader=(String)exchange.getIn().getHeader(JaxbConstants.JAXB_PART_CLASS) @AT@ 7469 @LENGTH@ 71
---------MOV MethodInvocation@@MethodName:getIn:[] @TO@ MethodInvocation@@exchange.getIn().getHeader(JaxbConstants.JAXB_PART_CLASS,String.class) @AT@ 7478 @LENGTH@ 16
---------MOV SimpleName@@Name:exchange @TO@ MethodInvocation@@exchange.getIn().getHeader(JaxbConstants.JAXB_PART_CLASS,String.class) @AT@ 7478 @LENGTH@ 8
---------MOV SimpleName@@MethodName:getHeader:[JaxbConstants.JAXB_PART_CLASS] @TO@ MethodInvocation@@exchange.getIn().getHeader(JaxbConstants.JAXB_PART_CLASS,String.class) @AT@ 7495 @LENGTH@ 40
------------INS TypeLiteral@@String.class @TO@ SimpleName@@MethodName:getHeader:[JaxbConstants.JAXB_PART_CLASS] @AT@ 7527 @LENGTH@ 12
------DEL CastExpression@@(String)exchange.getIn().getHeader(JaxbConstants.JAXB_PART_CLASS) @AT@ 7470 @LENGTH@ 65
---------DEL SimpleType@@String @AT@ 7471 @LENGTH@ 6
---------DEL MethodInvocation@@exchange.getIn().getHeader(JaxbConstants.JAXB_PART_CLASS) @AT@ 7478 @LENGTH@ 57


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<CouchbaseComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<CouchbaseComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5480 @LENGTH@ 342
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 5484 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5484 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  ComponentCustomizer<CouchbaseComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ ThenBody:{  for (  ComponentCustomizer<CouchbaseComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5540 @LENGTH@ 282
------UPD EnhancedForStatement@@for (ComponentCustomizer<CouchbaseComponent> configurer : customizers) {  LOGGER.debug("Configure component {}, with configurer {}",component,configurer);  configurer.customize(component);} @TO@ for (ComponentCustomizer<CouchbaseComponent> customizer : customizers) {  LOGGER.debug("Configure component {}, with customizer {}",component,customizer);  customizer.customize(component);} @AT@ 5554 @LENGTH@ 258
---------UPD SingleVariableDeclaration@@ComponentCustomizer<CouchbaseComponent> configurer @TO@ ComponentCustomizer<CouchbaseComponent> customizer @AT@ 5559 @LENGTH@ 50
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5599 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5643 @LENGTH@ 106
------------UPD MethodInvocation@@LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5643 @LENGTH@ 105
---------------UPD SimpleName@@MethodName:debug:["Configure component {}, with configurer {}", component, configurer] @TO@ MethodName:debug:["Configure component {}, with customizer {}", component, customizer] @AT@ 5650 @LENGTH@ 98
------------------UPD StringLiteral@@"Configure component {}, with configurer {}" @TO@ "Configure component {}, with customizer {}" @AT@ 5656 @LENGTH@ 44
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5737 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(component) @TO@ MethodInvocation:customizer.customize(component) @AT@ 5766 @LENGTH@ 32
------------UPD MethodInvocation@@configurer.customize(component) @TO@ customizer.customize(component) @AT@ 5766 @LENGTH@ 31
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5766 @LENGTH@ 10


UPD FieldDeclaration@@public, static, String, [HADOOP23VERSIONNAME="0.23"] @TO@ public, static, final, String, [HADOOP23VERSIONNAME="0.23"] @AT@ 1241 @LENGTH@ 50
---INS Modifier@@final @TO@ FieldDeclaration@@public, static, String, [HADOOP23VERSIONNAME="0.23"] @AT@ 1255 @LENGTH@ 5


UPD VariableDeclarationStatement@@MetaStoreSchemaInfo schemInfo=new MetaStoreSchemaInfo(metaStoreRoot,conf,"derby"); @TO@ MetaStoreSchemaInfo schemInfo=new MetaStoreSchemaInfo(metaStoreRoot,"derby"); @AT@ 8178 @LENGTH@ 86
---UPD VariableDeclarationFragment@@schemInfo=new MetaStoreSchemaInfo(metaStoreRoot,conf,"derby") @TO@ schemInfo=new MetaStoreSchemaInfo(metaStoreRoot,"derby") @AT@ 8198 @LENGTH@ 65
------UPD ClassInstanceCreation@@MetaStoreSchemaInfo[metaStoreRoot, conf, "derby"] @TO@ MetaStoreSchemaInfo[metaStoreRoot, "derby"] @AT@ 8210 @LENGTH@ 53
---------DEL SimpleName@@conf @AT@ 8249 @LENGTH@ 4


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  DataFormatCustomizer<GsonDataFormat> configurer : customizers) {    LOGGER.debug("Configure dataformat {}, with configurer {}",dataformat,configurer);    configurer.customize(dataformat);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  DataFormatCustomizer<GsonDataFormat> customizer : customizers) {    LOGGER.debug("Configure dataformat {}, with customizer {}",dataformat,customizer);    customizer.customize(dataformat);  }} @AT@ 5294 @LENGTH@ 423
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 5298 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5298 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  DataFormatCustomizer<GsonDataFormat> configurer : customizers) {    LOGGER.debug("Configure dataformat {}, with configurer {}",dataformat,configurer);    configurer.customize(dataformat);  }} @TO@ ThenBody:{  for (  DataFormatCustomizer<GsonDataFormat> customizer : customizers) {    LOGGER.debug("Configure dataformat {}, with customizer {}",dataformat,customizer);    customizer.customize(dataformat);  }} @AT@ 5354 @LENGTH@ 363
------UPD EnhancedForStatement@@for (DataFormatCustomizer<GsonDataFormat> configurer : customizers) {  LOGGER.debug("Configure dataformat {}, with configurer {}",dataformat,configurer);  configurer.customize(dataformat);} @TO@ for (DataFormatCustomizer<GsonDataFormat> customizer : customizers) {  LOGGER.debug("Configure dataformat {}, with customizer {}",dataformat,customizer);  customizer.customize(dataformat);} @AT@ 5376 @LENGTH@ 323
---------UPD SingleVariableDeclaration@@DataFormatCustomizer<GsonDataFormat> configurer @TO@ DataFormatCustomizer<GsonDataFormat> customizer @AT@ 5381 @LENGTH@ 47
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5418 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure dataformat {}, with configurer {}",dataformat,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure dataformat {}, with customizer {}",dataformat,customizer) @AT@ 5470 @LENGTH@ 149
------------UPD MethodInvocation@@LOGGER.debug("Configure dataformat {}, with configurer {}",dataformat,configurer) @TO@ LOGGER.debug("Configure dataformat {}, with customizer {}",dataformat,customizer) @AT@ 5470 @LENGTH@ 148
---------------UPD SimpleName@@MethodName:debug:["Configure dataformat {}, with configurer {}", dataformat, configurer] @TO@ MethodName:debug:["Configure dataformat {}, with customizer {}", dataformat, customizer] @AT@ 5477 @LENGTH@ 141
------------------UPD StringLiteral@@"Configure dataformat {}, with configurer {}" @TO@ "Configure dataformat {}, with customizer {}" @AT@ 5516 @LENGTH@ 45
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5607 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(dataformat) @TO@ MethodInvocation:customizer.customize(dataformat) @AT@ 5644 @LENGTH@ 33
------------UPD MethodInvocation@@configurer.customize(dataformat) @TO@ customizer.customize(dataformat) @AT@ 5644 @LENGTH@ 32
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5644 @LENGTH@ 10


UPD VariableDeclarationStatement@@boolean quoted=(source.startsWith("'") && source.endsWith("'")) || (source.startsWith("\"") && source.endsWith("\"")); @TO@ boolean quoted=source.startsWith("'") || source.startsWith("\""); @AT@ 12027 @LENGTH@ 126
---UPD VariableDeclarationFragment@@quoted=(source.startsWith("'") && source.endsWith("'")) || (source.startsWith("\"") && source.endsWith("\"")) @TO@ quoted=source.startsWith("'") || source.startsWith("\"") @AT@ 12035 @LENGTH@ 117
------UPD InfixExpression@@(source.startsWith("'") && source.endsWith("'")) || (source.startsWith("\"") && source.endsWith("\"")) @TO@ source.startsWith("'") || source.startsWith("\"") @AT@ 12044 @LENGTH@ 108
---------DEL ParenthesizedExpression@@(source.startsWith("'") && source.endsWith("'")) @AT@ 12044 @LENGTH@ 48
------------DEL InfixExpression@@source.startsWith("'") && source.endsWith("'") @AT@ 12045 @LENGTH@ 46
---------------DEL Operator@@&& @AT@ 12067 @LENGTH@ 2
---------------DEL MethodInvocation@@source.endsWith("'") @AT@ 12071 @LENGTH@ 20
------------------DEL SimpleName@@Name:source @AT@ 12071 @LENGTH@ 6
------------------DEL SimpleName@@MethodName:endsWith:["'"] @AT@ 12078 @LENGTH@ 13
---------------------DEL StringLiteral@@"'" @AT@ 12087 @LENGTH@ 3
---------MOV MethodInvocation@@source.startsWith("'") @TO@ InfixExpression@@(source.startsWith("'") && source.endsWith("'")) || (source.startsWith("\"") && source.endsWith("\"")) @AT@ 12045 @LENGTH@ 22
---------DEL ParenthesizedExpression@@(source.startsWith("\"") && source.endsWith("\"")) @AT@ 12102 @LENGTH@ 50
------------DEL InfixExpression@@source.startsWith("\"") && source.endsWith("\"") @AT@ 12103 @LENGTH@ 48
---------------DEL Operator@@&& @AT@ 12126 @LENGTH@ 2
---------------DEL MethodInvocation@@source.endsWith("\"") @AT@ 12130 @LENGTH@ 21
------------------DEL SimpleName@@Name:source @AT@ 12130 @LENGTH@ 6
------------------DEL SimpleName@@MethodName:endsWith:["\""] @AT@ 12137 @LENGTH@ 14
---------------------DEL StringLiteral@@"\"" @AT@ 12146 @LENGTH@ 4
---------MOV MethodInvocation@@source.startsWith("\"") @TO@ InfixExpression@@(source.startsWith("'") && source.endsWith("'")) || (source.startsWith("\"") && source.endsWith("\"")) @AT@ 12103 @LENGTH@ 23


UPD FieldDeclaration@@private, static, Map<Class,InputFormat<WritableComparable,Writable>>, [inputFormats=new ConcurrentHashMap<Class,InputFormat<WritableComparable,Writable>>()] @TO@ private, static, final, Map<Class,InputFormat<WritableComparable,Writable>>, [inputFormats=new ConcurrentHashMap<Class,InputFormat<WritableComparable,Writable>>()] @AT@ 3967 @LENGTH@ 162
---INS Modifier@@final @TO@ FieldDeclaration@@private, static, Map<Class,InputFormat<WritableComparable,Writable>>, [inputFormats=new ConcurrentHashMap<Class,InputFormat<WritableComparable,Writable>>()] @AT@ 3981 @LENGTH@ 5


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled(); @AT@ 5277 @LENGTH@ 160
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5285 @LENGTH@ 151
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5285 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5302 @LENGTH@ 134
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 5302 @LENGTH@ 64
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5302 @LENGTH@ 35
---------UPD MethodInvocation@@componentConfiguration.getConfigurer().isEnabled() @TO@ componentConfiguration.getCustomizer().isEnabled() @AT@ 5386 @LENGTH@ 50
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5386 @LENGTH@ 38


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled(); @AT@ 5332 @LENGTH@ 160
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5340 @LENGTH@ 151
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5340 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5357 @LENGTH@ 134
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 5357 @LENGTH@ 64
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5357 @LENGTH@ 35
---------UPD MethodInvocation@@componentConfiguration.getConfigurer().isEnabled() @TO@ componentConfiguration.getCustomizer().isEnabled() @AT@ 5441 @LENGTH@ 50
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5441 @LENGTH@ 38


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  DataFormatCustomizer<BarcodeDataFormat> configurer : customizers) {    LOGGER.debug("Configure dataformat {}, with configurer {}",dataformat,configurer);    configurer.customize(dataformat);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  DataFormatCustomizer<BarcodeDataFormat> customizer : customizers) {    LOGGER.debug("Configure dataformat {}, with customizer {}",dataformat,customizer);    customizer.customize(dataformat);  }} @AT@ 5349 @LENGTH@ 426
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 5353 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5353 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  DataFormatCustomizer<BarcodeDataFormat> configurer : customizers) {    LOGGER.debug("Configure dataformat {}, with configurer {}",dataformat,configurer);    configurer.customize(dataformat);  }} @TO@ ThenBody:{  for (  DataFormatCustomizer<BarcodeDataFormat> customizer : customizers) {    LOGGER.debug("Configure dataformat {}, with customizer {}",dataformat,customizer);    customizer.customize(dataformat);  }} @AT@ 5409 @LENGTH@ 366
------UPD EnhancedForStatement@@for (DataFormatCustomizer<BarcodeDataFormat> configurer : customizers) {  LOGGER.debug("Configure dataformat {}, with configurer {}",dataformat,configurer);  configurer.customize(dataformat);} @TO@ for (DataFormatCustomizer<BarcodeDataFormat> customizer : customizers) {  LOGGER.debug("Configure dataformat {}, with customizer {}",dataformat,customizer);  customizer.customize(dataformat);} @AT@ 5431 @LENGTH@ 326
---------UPD SingleVariableDeclaration@@DataFormatCustomizer<BarcodeDataFormat> configurer @TO@ DataFormatCustomizer<BarcodeDataFormat> customizer @AT@ 5436 @LENGTH@ 50
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5476 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure dataformat {}, with configurer {}",dataformat,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure dataformat {}, with customizer {}",dataformat,customizer) @AT@ 5528 @LENGTH@ 149
------------UPD MethodInvocation@@LOGGER.debug("Configure dataformat {}, with configurer {}",dataformat,configurer) @TO@ LOGGER.debug("Configure dataformat {}, with customizer {}",dataformat,customizer) @AT@ 5528 @LENGTH@ 148
---------------UPD SimpleName@@MethodName:debug:["Configure dataformat {}, with configurer {}", dataformat, configurer] @TO@ MethodName:debug:["Configure dataformat {}, with customizer {}", dataformat, customizer] @AT@ 5535 @LENGTH@ 141
------------------UPD StringLiteral@@"Configure dataformat {}, with configurer {}" @TO@ "Configure dataformat {}, with customizer {}" @AT@ 5574 @LENGTH@ 45
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5665 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(dataformat) @TO@ MethodInvocation:customizer.customize(dataformat) @AT@ 5702 @LENGTH@ 33
------------UPD MethodInvocation@@configurer.customize(dataformat) @TO@ customizer.customize(dataformat) @AT@ 5702 @LENGTH@ 32
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5702 @LENGTH@ 10


UPD IfStatement@@if (cancellationFlag.get()) {  if (!oneWay)   invocationRequest.writeCancelResponse();  return;} @TO@ if (!cancellationFlag.runIfNotCancelled()) {  if (!oneWay)   invocationRequest.writeCancelResponse();  return;} @AT@ 6134 @LENGTH@ 138
---INS PrefixExpression@@!cancellationFlag.runIfNotCancelled() @TO@ IfStatement@@if (cancellationFlag.get()) {  if (!oneWay)   invocationRequest.writeCancelResponse();  return;} @AT@ 6138 @LENGTH@ 38
------INS Operator@@! @TO@ PrefixExpression@@!cancellationFlag.runIfNotCancelled() @AT@ 6138 @LENGTH@ 1
------INS MethodInvocation@@cancellationFlag.runIfNotCancelled() @TO@ PrefixExpression@@!cancellationFlag.runIfNotCancelled() @AT@ 6140 @LENGTH@ 36
---------MOV SimpleName@@Name:cancellationFlag @TO@ MethodInvocation@@cancellationFlag.runIfNotCancelled() @AT@ 6138 @LENGTH@ 16
---------MOV SimpleName@@MethodName:get:[] @TO@ MethodInvocation@@cancellationFlag.runIfNotCancelled() @AT@ 6155 @LENGTH@ 5
---DEL MethodInvocation@@cancellationFlag.get() @AT@ 6138 @LENGTH@ 22


UPD EnhancedForStatement@@for (Class<?> restrictedType : restrictedTypes) {  Object typeAlias=getAliasFor(ClassTypeInformation.from(restrictedType));  if (typeAlias != null) {    restrictedMappedTypes.add(typeAlias);  }} @TO@ for (Class<?> restrictedType : restrictedTypes) {  Alias typeAlias=getAliasFor(ClassTypeInformation.from(restrictedType));  if (typeAlias != null && !ObjectUtils.nullSafeEquals(Alias.NONE,typeAlias) && typeAlias.getValue().isPresent()) {    restrictedMappedTypes.add(typeAlias.getValue().get());  }} @AT@ 3935 @LENGTH@ 208
---UPD VariableDeclarationStatement@@Object typeAlias=getAliasFor(ClassTypeInformation.from(restrictedType)); @TO@ Alias typeAlias=getAliasFor(ClassTypeInformation.from(restrictedType)); @AT@ 3989 @LENGTH@ 74
------UPD SimpleType@@Object @TO@ Alias @AT@ 3989 @LENGTH@ 6
---UPD IfStatement@@if (typeAlias != null) {  restrictedMappedTypes.add(typeAlias);} @TO@ if (typeAlias != null && !ObjectUtils.nullSafeEquals(Alias.NONE,typeAlias) && typeAlias.getValue().isPresent()) {  restrictedMappedTypes.add(typeAlias.getValue().get());} @AT@ 4068 @LENGTH@ 71
------DEL InfixExpression@@typeAlias != null @AT@ 4072 @LENGTH@ 17
------UPD Block@@ThenBody:{  restrictedMappedTypes.add(typeAlias);} @TO@ ThenBody:{  restrictedMappedTypes.add(typeAlias.getValue().get());} @AT@ 4091 @LENGTH@ 48
---------UPD ExpressionStatement@@MethodInvocation:restrictedMappedTypes.add(typeAlias) @TO@ MethodInvocation:restrictedMappedTypes.add(typeAlias.getValue().get()) @AT@ 4097 @LENGTH@ 37
------------UPD MethodInvocation@@restrictedMappedTypes.add(typeAlias) @TO@ restrictedMappedTypes.add(typeAlias.getValue().get()) @AT@ 4097 @LENGTH@ 36
---------------UPD SimpleName@@MethodName:add:[typeAlias] @TO@ MethodName:add:[typeAlias.getValue().get()] @AT@ 4119 @LENGTH@ 14
------------------DEL SimpleName@@typeAlias @AT@ 4123 @LENGTH@ 9
------------------INS MethodInvocation@@typeAlias.getValue().get() @TO@ SimpleName@@MethodName:add:[typeAlias] @AT@ 4257 @LENGTH@ 26
---------------------INS MethodInvocation@@MethodName:getValue:[] @TO@ MethodInvocation@@typeAlias.getValue().get() @AT@ 4257 @LENGTH@ 20
---------------------INS SimpleName@@Name:typeAlias @TO@ MethodInvocation@@typeAlias.getValue().get() @AT@ 4257 @LENGTH@ 9
---------------------INS SimpleName@@MethodName:get:[] @TO@ MethodInvocation@@typeAlias.getValue().get() @AT@ 4278 @LENGTH@ 5
------INS InfixExpression@@typeAlias != null && !ObjectUtils.nullSafeEquals(Alias.NONE,typeAlias) && typeAlias.getValue().isPresent() @TO@ IfStatement@@if (typeAlias != null) {  restrictedMappedTypes.add(typeAlias);} @AT@ 4116 @LENGTH@ 107
---------INS InfixExpression@@typeAlias != null && !ObjectUtils.nullSafeEquals(Alias.NONE,typeAlias) @TO@ InfixExpression@@typeAlias != null && !ObjectUtils.nullSafeEquals(Alias.NONE,typeAlias) && typeAlias.getValue().isPresent() @AT@ 4116 @LENGTH@ 71
------------INS InfixExpression@@typeAlias != null @TO@ InfixExpression@@typeAlias != null && !ObjectUtils.nullSafeEquals(Alias.NONE,typeAlias) @AT@ 4116 @LENGTH@ 17
---------------MOV SimpleName@@typeAlias @TO@ InfixExpression@@typeAlias != null @AT@ 4072 @LENGTH@ 9
---------------MOV Operator@@!= @TO@ InfixExpression@@typeAlias != null @AT@ 4081 @LENGTH@ 2
---------------MOV NullLiteral@@null @TO@ InfixExpression@@typeAlias != null @AT@ 4085 @LENGTH@ 4
------------INS Operator@@&& @TO@ InfixExpression@@typeAlias != null && !ObjectUtils.nullSafeEquals(Alias.NONE,typeAlias) @AT@ 4133 @LENGTH@ 2
------------INS PrefixExpression@@!ObjectUtils.nullSafeEquals(Alias.NONE,typeAlias) @TO@ InfixExpression@@typeAlias != null && !ObjectUtils.nullSafeEquals(Alias.NONE,typeAlias) @AT@ 4137 @LENGTH@ 50
---------------INS Operator@@! @TO@ PrefixExpression@@!ObjectUtils.nullSafeEquals(Alias.NONE,typeAlias) @AT@ 4137 @LENGTH@ 1
---------------INS MethodInvocation@@ObjectUtils.nullSafeEquals(Alias.NONE,typeAlias) @TO@ PrefixExpression@@!ObjectUtils.nullSafeEquals(Alias.NONE,typeAlias) @AT@ 4138 @LENGTH@ 49
------------------INS SimpleName@@Name:ObjectUtils @TO@ MethodInvocation@@ObjectUtils.nullSafeEquals(Alias.NONE,typeAlias) @AT@ 4138 @LENGTH@ 11
------------------INS SimpleName@@MethodName:nullSafeEquals:[Alias.NONE, typeAlias] @TO@ MethodInvocation@@ObjectUtils.nullSafeEquals(Alias.NONE,typeAlias) @AT@ 4150 @LENGTH@ 37
---------------------INS QualifiedName@@Alias.NONE @TO@ SimpleName@@MethodName:nullSafeEquals:[Alias.NONE, typeAlias] @AT@ 4165 @LENGTH@ 10
------------------------INS SimpleName@@Alias @TO@ QualifiedName@@Alias.NONE @AT@ 4165 @LENGTH@ 5
------------------------INS SimpleName@@NONE @TO@ QualifiedName@@Alias.NONE @AT@ 4171 @LENGTH@ 4
---------------------INS SimpleName@@typeAlias @TO@ SimpleName@@MethodName:nullSafeEquals:[Alias.NONE, typeAlias] @AT@ 4177 @LENGTH@ 9
---------INS Operator@@&& @TO@ InfixExpression@@typeAlias != null && !ObjectUtils.nullSafeEquals(Alias.NONE,typeAlias) && typeAlias.getValue().isPresent() @AT@ 4187 @LENGTH@ 2
---------INS MethodInvocation@@typeAlias.getValue().isPresent() @TO@ InfixExpression@@typeAlias != null && !ObjectUtils.nullSafeEquals(Alias.NONE,typeAlias) && typeAlias.getValue().isPresent() @AT@ 4191 @LENGTH@ 32
------------INS MethodInvocation@@MethodName:getValue:[] @TO@ MethodInvocation@@typeAlias.getValue().isPresent() @AT@ 4191 @LENGTH@ 20
------------INS SimpleName@@Name:typeAlias @TO@ MethodInvocation@@typeAlias.getValue().isPresent() @AT@ 4191 @LENGTH@ 9
------------INS SimpleName@@MethodName:isPresent:[] @TO@ MethodInvocation@@typeAlias.getValue().isPresent() @AT@ 4212 @LENGTH@ 11


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  DataFormatCustomizer<JsonDataFormat> configurer : customizers) {    LOGGER.debug("Configure dataformat {}, with configurer {}",dataformat,configurer);    configurer.customize(dataformat);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  DataFormatCustomizer<JsonDataFormat> customizer : customizers) {    LOGGER.debug("Configure dataformat {}, with customizer {}",dataformat,customizer);    customizer.customize(dataformat);  }} @AT@ 5308 @LENGTH@ 423
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 5312 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5312 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  DataFormatCustomizer<JsonDataFormat> configurer : customizers) {    LOGGER.debug("Configure dataformat {}, with configurer {}",dataformat,configurer);    configurer.customize(dataformat);  }} @TO@ ThenBody:{  for (  DataFormatCustomizer<JsonDataFormat> customizer : customizers) {    LOGGER.debug("Configure dataformat {}, with customizer {}",dataformat,customizer);    customizer.customize(dataformat);  }} @AT@ 5368 @LENGTH@ 363
------UPD EnhancedForStatement@@for (DataFormatCustomizer<JsonDataFormat> configurer : customizers) {  LOGGER.debug("Configure dataformat {}, with configurer {}",dataformat,configurer);  configurer.customize(dataformat);} @TO@ for (DataFormatCustomizer<JsonDataFormat> customizer : customizers) {  LOGGER.debug("Configure dataformat {}, with customizer {}",dataformat,customizer);  customizer.customize(dataformat);} @AT@ 5390 @LENGTH@ 323
---------UPD SingleVariableDeclaration@@DataFormatCustomizer<JsonDataFormat> configurer @TO@ DataFormatCustomizer<JsonDataFormat> customizer @AT@ 5395 @LENGTH@ 47
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5432 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure dataformat {}, with configurer {}",dataformat,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure dataformat {}, with customizer {}",dataformat,customizer) @AT@ 5484 @LENGTH@ 149
------------UPD MethodInvocation@@LOGGER.debug("Configure dataformat {}, with configurer {}",dataformat,configurer) @TO@ LOGGER.debug("Configure dataformat {}, with customizer {}",dataformat,customizer) @AT@ 5484 @LENGTH@ 148
---------------UPD SimpleName@@MethodName:debug:["Configure dataformat {}, with configurer {}", dataformat, configurer] @TO@ MethodName:debug:["Configure dataformat {}, with customizer {}", dataformat, customizer] @AT@ 5491 @LENGTH@ 141
------------------UPD StringLiteral@@"Configure dataformat {}, with configurer {}" @TO@ "Configure dataformat {}, with customizer {}" @AT@ 5530 @LENGTH@ 45
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5621 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(dataformat) @TO@ MethodInvocation:customizer.customize(dataformat) @AT@ 5658 @LENGTH@ 33
------------UPD MethodInvocation@@configurer.customize(dataformat) @TO@ customizer.customize(dataformat) @AT@ 5658 @LENGTH@ 32
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5658 @LENGTH@ 10


UPD ExpressionStatement@@MethodInvocation:assertEquals(StringUtils.replace(normalisedXml,"\n",""),StringUtils.replace(actualXml,"\n","")) @TO@ MethodInvocation:assertEquals(StringUtils.replace(normalisedXml,IOUtils.LINE_SEPARATOR,""),StringUtils.replace(actualXml,IOUtils.LINE_SEPARATOR,"")) @AT@ 1677 @LENGTH@ 109
---UPD MethodInvocation@@assertEquals(StringUtils.replace(normalisedXml,"\n",""),StringUtils.replace(actualXml,"\n","")) @TO@ assertEquals(StringUtils.replace(normalisedXml,IOUtils.LINE_SEPARATOR,""),StringUtils.replace(actualXml,IOUtils.LINE_SEPARATOR,"")) @AT@ 1677 @LENGTH@ 108
------UPD SimpleName@@MethodName:assertEquals:[StringUtils.replace(normalisedXml,"\n",""), StringUtils.replace(actualXml,"\n","")] @TO@ MethodName:assertEquals:[StringUtils.replace(normalisedXml,IOUtils.LINE_SEPARATOR,""), StringUtils.replace(actualXml,IOUtils.LINE_SEPARATOR,"")] @AT@ 1677 @LENGTH@ 108
---------UPD MethodInvocation@@StringUtils.replace(normalisedXml,"\n","") @TO@ StringUtils.replace(normalisedXml,IOUtils.LINE_SEPARATOR,"") @AT@ 1690 @LENGTH@ 44
------------UPD SimpleName@@MethodName:replace:[normalisedXml, "\n", ""] @TO@ MethodName:replace:[normalisedXml, IOUtils.LINE_SEPARATOR, ""] @AT@ 1702 @LENGTH@ 32
---------------INS QualifiedName@@IOUtils.LINE_SEPARATOR @TO@ SimpleName@@MethodName:replace:[normalisedXml, "\n", ""] @AT@ 1725 @LENGTH@ 22
------------------INS SimpleName@@IOUtils @TO@ QualifiedName@@IOUtils.LINE_SEPARATOR @AT@ 1725 @LENGTH@ 7
------------------INS SimpleName@@LINE_SEPARATOR @TO@ QualifiedName@@IOUtils.LINE_SEPARATOR @AT@ 1733 @LENGTH@ 14
---------------DEL StringLiteral@@"\n" @AT@ 1725 @LENGTH@ 4
---------UPD MethodInvocation@@StringUtils.replace(actualXml,"\n","") @TO@ StringUtils.replace(actualXml,IOUtils.LINE_SEPARATOR,"") @AT@ 1744 @LENGTH@ 40
------------UPD SimpleName@@MethodName:replace:[actualXml, "\n", ""] @TO@ MethodName:replace:[actualXml, IOUtils.LINE_SEPARATOR, ""] @AT@ 1756 @LENGTH@ 28
---------------DEL StringLiteral@@"\n" @AT@ 1775 @LENGTH@ 4
---------------INS QualifiedName@@IOUtils.LINE_SEPARATOR @TO@ SimpleName@@MethodName:replace:[actualXml, "\n", ""] @AT@ 1793 @LENGTH@ 22
------------------INS SimpleName@@IOUtils @TO@ QualifiedName@@IOUtils.LINE_SEPARATOR @AT@ 1793 @LENGTH@ 7
------------------INS SimpleName@@LINE_SEPARATOR @TO@ QualifiedName@@IOUtils.LINE_SEPARATOR @AT@ 1801 @LENGTH@ 14


UPD FieldDeclaration@@protected, static, final, OptionAttributeDefinition, [ENABLED_PROTOCOLS=OptionAttributeDefinition.builder("enabled-protocols",Options.SSL_ENABLED_PROTOCOLS).setAllowNull(true).setFlags(AttributeAccess.Flag.RESTART_ALL_SERVICES).setAllowExpression(true).build()] @TO@ protected, static, final, OptionAttributeDefinition, [ENABLED_PROTOCOLS=OptionAttributeDefinition.builder("enabled-protocols",Options.SSL_ENABLED_PROTOCOLS).setRequired(false).setFlags(AttributeAccess.Flag.RESTART_ALL_SERVICES).setAllowExpression(true).build()] @AT@ 4238 @LENGTH@ 311
---UPD VariableDeclarationFragment@@ENABLED_PROTOCOLS=OptionAttributeDefinition.builder("enabled-protocols",Options.SSL_ENABLED_PROTOCOLS).setAllowNull(true).setFlags(AttributeAccess.Flag.RESTART_ALL_SERVICES).setAllowExpression(true).build() @TO@ ENABLED_PROTOCOLS=OptionAttributeDefinition.builder("enabled-protocols",Options.SSL_ENABLED_PROTOCOLS).setRequired(false).setFlags(AttributeAccess.Flag.RESTART_ALL_SERVICES).setAllowExpression(true).build() @AT@ 4287 @LENGTH@ 261
------UPD MethodInvocation@@OptionAttributeDefinition.builder("enabled-protocols",Options.SSL_ENABLED_PROTOCOLS).setAllowNull(true).setFlags(AttributeAccess.Flag.RESTART_ALL_SERVICES).setAllowExpression(true).build() @TO@ OptionAttributeDefinition.builder("enabled-protocols",Options.SSL_ENABLED_PROTOCOLS).setRequired(false).setFlags(AttributeAccess.Flag.RESTART_ALL_SERVICES).setAllowExpression(true).build() @AT@ 4307 @LENGTH@ 241
---------UPD MethodInvocation@@MethodName:setAllowNull:[true] @TO@ MethodName:setRequired:[false] @AT@ 4307 @LENGTH@ 117
------------UPD BooleanLiteral@@true @TO@ false @AT@ 4419 @LENGTH@ 4


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled(); @AT@ 5432 @LENGTH@ 160
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5440 @LENGTH@ 151
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5440 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5457 @LENGTH@ 134
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 5457 @LENGTH@ 64
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5457 @LENGTH@ 35
---------UPD MethodInvocation@@componentConfiguration.getConfigurer().isEnabled() @TO@ componentConfiguration.getCustomizer().isEnabled() @AT@ 5541 @LENGTH@ 50
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5541 @LENGTH@ 38


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<InfinispanComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<InfinispanComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5497 @LENGTH@ 343
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 5501 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5501 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  ComponentCustomizer<InfinispanComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ ThenBody:{  for (  ComponentCustomizer<InfinispanComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5557 @LENGTH@ 283
------UPD EnhancedForStatement@@for (ComponentCustomizer<InfinispanComponent> configurer : customizers) {  LOGGER.debug("Configure component {}, with configurer {}",component,configurer);  configurer.customize(component);} @TO@ for (ComponentCustomizer<InfinispanComponent> customizer : customizers) {  LOGGER.debug("Configure component {}, with customizer {}",component,customizer);  customizer.customize(component);} @AT@ 5571 @LENGTH@ 259
---------UPD SingleVariableDeclaration@@ComponentCustomizer<InfinispanComponent> configurer @TO@ ComponentCustomizer<InfinispanComponent> customizer @AT@ 5576 @LENGTH@ 51
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5617 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5661 @LENGTH@ 106
------------UPD MethodInvocation@@LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5661 @LENGTH@ 105
---------------UPD SimpleName@@MethodName:debug:["Configure component {}, with configurer {}", component, configurer] @TO@ MethodName:debug:["Configure component {}, with customizer {}", component, customizer] @AT@ 5668 @LENGTH@ 98
------------------UPD StringLiteral@@"Configure component {}, with configurer {}" @TO@ "Configure component {}, with customizer {}" @AT@ 5674 @LENGTH@ 44
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5755 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(component) @TO@ MethodInvocation:customizer.customize(component) @AT@ 5784 @LENGTH@ 32
------------UPD MethodInvocation@@configurer.customize(component) @TO@ customizer.customize(component) @AT@ 5784 @LENGTH@ 31
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5784 @LENGTH@ 10


UPD EnhancedForStatement@@for (String subpattern : subpatterns) {  subpattern="(?i)" + subpattern.replaceAll("\\?",".{1}").replaceAll("\\*",".*").replaceAll("\\^","\\\\^").replaceAll("\\$","\\\\$");  ;  if (Pattern.matches(subpattern,HiveStringUtils.normalizeIdentifier(name))) {    return true;  }} @TO@ for (String subpattern : subpatterns) {  subpattern="(?i)" + subpattern.replaceAll("\\?",".{1}").replaceAll("\\*",".*").replaceAll("\\^","\\\\^").replaceAll("\\$","\\\\$");  if (Pattern.matches(subpattern,HiveStringUtils.normalizeIdentifier(name))) {    return true;  }} @AT@ 3932 @LENGTH@ 314


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<Jt400Component> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<Jt400Component> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5412 @LENGTH@ 338
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 5416 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5416 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  ComponentCustomizer<Jt400Component> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ ThenBody:{  for (  ComponentCustomizer<Jt400Component> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5472 @LENGTH@ 278
------UPD EnhancedForStatement@@for (ComponentCustomizer<Jt400Component> configurer : customizers) {  LOGGER.debug("Configure component {}, with configurer {}",component,configurer);  configurer.customize(component);} @TO@ for (ComponentCustomizer<Jt400Component> customizer : customizers) {  LOGGER.debug("Configure component {}, with customizer {}",component,customizer);  customizer.customize(component);} @AT@ 5486 @LENGTH@ 254
---------UPD SingleVariableDeclaration@@ComponentCustomizer<Jt400Component> configurer @TO@ ComponentCustomizer<Jt400Component> customizer @AT@ 5491 @LENGTH@ 46
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5527 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5571 @LENGTH@ 106
------------UPD MethodInvocation@@LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5571 @LENGTH@ 105
---------------UPD SimpleName@@MethodName:debug:["Configure component {}, with configurer {}", component, configurer] @TO@ MethodName:debug:["Configure component {}, with customizer {}", component, customizer] @AT@ 5578 @LENGTH@ 98
------------------UPD StringLiteral@@"Configure component {}, with configurer {}" @TO@ "Configure component {}, with customizer {}" @AT@ 5584 @LENGTH@ 44
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5665 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(component) @TO@ MethodInvocation:customizer.customize(component) @AT@ 5694 @LENGTH@ 32
------------UPD MethodInvocation@@configurer.customize(component) @TO@ customizer.customize(component) @AT@ 5694 @LENGTH@ 31
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5694 @LENGTH@ 10


UPD ReturnStatement@@ClassInstanceCreation:new ArrayList<Object>(Arrays.asList(value)) @TO@ ClassInstanceCreation:new ArrayList<Object>(Collections.singletonList(value)) @AT@ 3887 @LENGTH@ 51
---UPD ClassInstanceCreation@@ArrayList<Object>[Arrays.asList(value)] @TO@ ArrayList<Object>[Collections.singletonList(value)] @AT@ 3894 @LENGTH@ 43
------UPD MethodInvocation@@Arrays.asList(value) @TO@ Collections.singletonList(value) @AT@ 3916 @LENGTH@ 20
---------UPD SimpleName@@Name:Arrays @TO@ Name:Collections @AT@ 3916 @LENGTH@ 6
---------UPD SimpleName@@MethodName:asList:[value] @TO@ MethodName:singletonList:[value] @AT@ 3923 @LENGTH@ 13


UPD FieldDeclaration@@public, static, final, SimpleAttributeDefinition, [SOCKET_BINDING=new SimpleAttributeDefinitionBuilder(ModelDescriptionConstants.SOCKET_BINDING,ModelType.STRING,false).setXmlName(Attribute.NATIVE.getLocalName()).setValidator(new StringLengthValidator(1,Integer.MAX_VALUE,true,false)).setFlags(AttributeAccess.Flag.RESTART_RESOURCE_SERVICES).addAccessConstraint(new SensitiveTargetAccessConstraintDefinition(SensitivityClassification.SOCKET_CONFIG)).setCapabilityReference(SOCKET_BINDING_CAPABILITY_NAME,NATIVE_MANAGEMENT_RUNTIME_CAPABILITY).build()] @TO@ public, static, final, SimpleAttributeDefinition, [SOCKET_BINDING=new SimpleAttributeDefinitionBuilder(ModelDescriptionConstants.SOCKET_BINDING,ModelType.STRING,false).setXmlName(Attribute.NATIVE.getLocalName()).setValidator(new StringLengthValidator(1,Integer.MAX_VALUE,true,false)).setRestartAllServices().addAccessConstraint(new SensitiveTargetAccessConstraintDefinition(SensitivityClassification.SOCKET_CONFIG)).setCapabilityReference(SOCKET_BINDING_CAPABILITY_NAME,NATIVE_MANAGEMENT_RUNTIME_CAPABILITY).build()] @AT@ 2755 @LENGTH@ 630
---UPD VariableDeclarationFragment@@SOCKET_BINDING=new SimpleAttributeDefinitionBuilder(ModelDescriptionConstants.SOCKET_BINDING,ModelType.STRING,false).setXmlName(Attribute.NATIVE.getLocalName()).setValidator(new StringLengthValidator(1,Integer.MAX_VALUE,true,false)).setFlags(AttributeAccess.Flag.RESTART_RESOURCE_SERVICES).addAccessConstraint(new SensitiveTargetAccessConstraintDefinition(SensitivityClassification.SOCKET_CONFIG)).setCapabilityReference(SOCKET_BINDING_CAPABILITY_NAME,NATIVE_MANAGEMENT_RUNTIME_CAPABILITY).build() @TO@ SOCKET_BINDING=new SimpleAttributeDefinitionBuilder(ModelDescriptionConstants.SOCKET_BINDING,ModelType.STRING,false).setXmlName(Attribute.NATIVE.getLocalName()).setValidator(new StringLengthValidator(1,Integer.MAX_VALUE,true,false)).setRestartAllServices().addAccessConstraint(new SensitiveTargetAccessConstraintDefinition(SensitivityClassification.SOCKET_CONFIG)).setCapabilityReference(SOCKET_BINDING_CAPABILITY_NAME,NATIVE_MANAGEMENT_RUNTIME_CAPABILITY).build() @AT@ 2801 @LENGTH@ 583
------UPD MethodInvocation@@new SimpleAttributeDefinitionBuilder(ModelDescriptionConstants.SOCKET_BINDING,ModelType.STRING,false).setXmlName(Attribute.NATIVE.getLocalName()).setValidator(new StringLengthValidator(1,Integer.MAX_VALUE,true,false)).setFlags(AttributeAccess.Flag.RESTART_RESOURCE_SERVICES).addAccessConstraint(new SensitiveTargetAccessConstraintDefinition(SensitivityClassification.SOCKET_CONFIG)).setCapabilityReference(SOCKET_BINDING_CAPABILITY_NAME,NATIVE_MANAGEMENT_RUNTIME_CAPABILITY).build() @TO@ new SimpleAttributeDefinitionBuilder(ModelDescriptionConstants.SOCKET_BINDING,ModelType.STRING,false).setXmlName(Attribute.NATIVE.getLocalName()).setValidator(new StringLengthValidator(1,Integer.MAX_VALUE,true,false)).setRestartAllServices().addAccessConstraint(new SensitiveTargetAccessConstraintDefinition(SensitivityClassification.SOCKET_CONFIG)).setCapabilityReference(SOCKET_BINDING_CAPABILITY_NAME,NATIVE_MANAGEMENT_RUNTIME_CAPABILITY).build() @AT@ 2818 @LENGTH@ 566
---------UPD MethodInvocation@@MethodName:setFlags:[AttributeAccess.Flag.RESTART_RESOURCE_SERVICES] @TO@ MethodName:setRestartAllServices:[] @AT@ 2818 @LENGTH@ 318
------------DEL QualifiedName@@AttributeAccess.Flag.RESTART_RESOURCE_SERVICES @AT@ 3089 @LENGTH@ 46
---------------DEL QualifiedName@@AttributeAccess.Flag @AT@ 3089 @LENGTH@ 20
------------------DEL SimpleName@@AttributeAccess @AT@ 3089 @LENGTH@ 15
------------------DEL SimpleName@@Flag @AT@ 3105 @LENGTH@ 4
---------------DEL SimpleName@@RESTART_RESOURCE_SERVICES @AT@ 3110 @LENGTH@ 25


UPD MethodDeclaration@@public, abstract, void, MethodName:handleMessage, final Exchange exchange,  @TO@ public, abstract, void, MethodName:handleMessage, Exchange exchange,  @AT@ 4402 @LENGTH@ 60
---UPD SingleVariableDeclaration@@final Exchange exchange @TO@ Exchange exchange @AT@ 4437 @LENGTH@ 23
------DEL Modifier@@final @AT@ 4437 @LENGTH@ 5


UPD ExpressionStatement@@MethodInvocation:from("beanstalk:tube=A").routeId("foo").process(a).to("mock:result").to("beanstalk:tube=B").process(b) @TO@ MethodInvocation:from("beanstalk:tube=A").routeId("foo").process(a).to("beanstalk:tube=B").process(b).to("mock:result") @AT@ 3932 @LENGTH@ 154
---UPD MethodInvocation@@from("beanstalk:tube=A").routeId("foo").process(a).to("mock:result").to("beanstalk:tube=B").process(b) @TO@ from("beanstalk:tube=A").routeId("foo").process(a).to("beanstalk:tube=B").process(b).to("mock:result") @AT@ 3932 @LENGTH@ 153
------INS MethodInvocation@@MethodName:process:[b] @TO@ MethodInvocation@@from("beanstalk:tube=A").routeId("foo").process(a).to("mock:result").to("beanstalk:tube=B").process(b) @AT@ 3931 @LENGTH@ 147
---------INS SimpleName@@b @TO@ MethodInvocation@@MethodName:process:[b] @AT@ 4076 @LENGTH@ 1
------DEL MethodInvocation@@MethodName:to:["mock:result"] @AT@ 3932 @LENGTH@ 102
---------DEL StringLiteral@@"mock:result" @AT@ 4020 @LENGTH@ 13
------DEL SimpleName@@MethodName:process:[b] @AT@ 4075 @LENGTH@ 10
---------DEL SimpleName@@b @AT@ 4083 @LENGTH@ 1
------INS SimpleName@@MethodName:to:["mock:result"] @TO@ MethodInvocation@@from("beanstalk:tube=A").routeId("foo").process(a).to("mock:result").to("beanstalk:tube=B").process(b) @AT@ 4100 @LENGTH@ 17
---------INS StringLiteral@@"mock:result" @TO@ SimpleName@@MethodName:to:["mock:result"] @AT@ 4103 @LENGTH@ 13


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled(); @AT@ 5260 @LENGTH@ 160
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5268 @LENGTH@ 151
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5268 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5285 @LENGTH@ 134
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 5285 @LENGTH@ 64
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5285 @LENGTH@ 35
---------UPD MethodInvocation@@componentConfiguration.getConfigurer().isEnabled() @TO@ componentConfiguration.getCustomizer().isEnabled() @AT@ 5369 @LENGTH@ 50
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5369 @LENGTH@ 38


UPD VariableDeclarationStatement@@long startTime=(new Date()).getTime(); @TO@ long startTime=new Date().getTime(); @AT@ 2499 @LENGTH@ 40
---UPD VariableDeclarationFragment@@startTime=(new Date()).getTime() @TO@ startTime=new Date().getTime() @AT@ 2504 @LENGTH@ 34
------UPD MethodInvocation@@(new Date()).getTime() @TO@ new Date().getTime() @AT@ 2516 @LENGTH@ 22
---------DEL ParenthesizedExpression@@(new Date()) @AT@ 2516 @LENGTH@ 12
------------DEL ClassInstanceCreation@@Date[] @AT@ 2517 @LENGTH@ 10
---------INS ClassInstanceCreation@@Date[] @TO@ MethodInvocation@@(new Date()).getTime() @AT@ 2516 @LENGTH@ 10
------------MOV New@@new @TO@ ClassInstanceCreation@@Date[] @AT@ 2517 @LENGTH@ 3
------------MOV SimpleType@@Date @TO@ ClassInstanceCreation@@Date[] @AT@ 2521 @LENGTH@ 4


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled(); @AT@ 5422 @LENGTH@ 160
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5430 @LENGTH@ 151
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5430 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5447 @LENGTH@ 134
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 5447 @LENGTH@ 64
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5447 @LENGTH@ 35
---------UPD MethodInvocation@@componentConfiguration.getConfigurer().isEnabled() @TO@ componentConfiguration.getCustomizer().isEnabled() @AT@ 5531 @LENGTH@ 50
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5531 @LENGTH@ 38


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<CwComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<CwComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5377 @LENGTH@ 335
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 5381 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5381 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  ComponentCustomizer<CwComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ ThenBody:{  for (  ComponentCustomizer<CwComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5437 @LENGTH@ 275
------UPD EnhancedForStatement@@for (ComponentCustomizer<CwComponent> configurer : customizers) {  LOGGER.debug("Configure component {}, with configurer {}",component,configurer);  configurer.customize(component);} @TO@ for (ComponentCustomizer<CwComponent> customizer : customizers) {  LOGGER.debug("Configure component {}, with customizer {}",component,customizer);  customizer.customize(component);} @AT@ 5451 @LENGTH@ 251
---------UPD SingleVariableDeclaration@@ComponentCustomizer<CwComponent> configurer @TO@ ComponentCustomizer<CwComponent> customizer @AT@ 5456 @LENGTH@ 43
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5489 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5533 @LENGTH@ 106
------------UPD MethodInvocation@@LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5533 @LENGTH@ 105
---------------UPD SimpleName@@MethodName:debug:["Configure component {}, with configurer {}", component, configurer] @TO@ MethodName:debug:["Configure component {}, with customizer {}", component, customizer] @AT@ 5540 @LENGTH@ 98
------------------UPD StringLiteral@@"Configure component {}, with configurer {}" @TO@ "Configure component {}, with customizer {}" @AT@ 5546 @LENGTH@ 44
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5627 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(component) @TO@ MethodInvocation:customizer.customize(component) @AT@ 5656 @LENGTH@ 32
------------UPD MethodInvocation@@configurer.customize(component) @TO@ customizer.customize(component) @AT@ 5656 @LENGTH@ 31
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5656 @LENGTH@ 10


UPD Block@@ElseBody:{  final NotificationHandlerNodeSubregistry newRegistry=new NotificationHandlerNodeSubregistry(key,this);  final NotificationHandlerNodeSubregistry appearing=childrenUpdater.putAtomic(this,key,newRegistry,snapshot);  if (appearing == null) {    return newRegistry;  } else   if (appearing != newRegistry) {    return appearing;  }} @TO@ ElseBody:{  final NotificationHandlerNodeSubregistry newRegistry=new NotificationHandlerNodeSubregistry(key,this);  if (childrenUpdater.putAtomic(this,key,newRegistry,snapshot)) {    return newRegistry;  }} @AT@ 6260 @LENGTH@ 574
---DEL VariableDeclarationStatement@@final NotificationHandlerNodeSubregistry appearing=childrenUpdater.putAtomic(this,key,newRegistry,snapshot); @AT@ 6400 @LENGTH@ 113
------DEL Modifier@@final @AT@ 6400 @LENGTH@ 5
------DEL SimpleType@@NotificationHandlerNodeSubregistry @AT@ 6406 @LENGTH@ 34
------DEL VariableDeclarationFragment@@appearing=childrenUpdater.putAtomic(this,key,newRegistry,snapshot) @AT@ 6441 @LENGTH@ 71
---------DEL SimpleName@@appearing @AT@ 6441 @LENGTH@ 9
---UPD IfStatement@@if (appearing == null) {  return newRegistry;} else if (appearing != newRegistry) {  return appearing;} @TO@ if (childrenUpdater.putAtomic(this,key,newRegistry,snapshot)) {  return newRegistry;} @AT@ 6530 @LENGTH@ 221
------MOV MethodInvocation@@childrenUpdater.putAtomic(this,key,newRegistry,snapshot) @TO@ IfStatement@@if (appearing == null) {  return newRegistry;} else if (appearing != newRegistry) {  return appearing;} @AT@ 6453 @LENGTH@ 59
------DEL InfixExpression@@appearing == null @AT@ 6534 @LENGTH@ 17
---------DEL SimpleName@@appearing @AT@ 6534 @LENGTH@ 9
---------DEL Operator@@== @AT@ 6543 @LENGTH@ 2
---------DEL NullLiteral@@null @AT@ 6547 @LENGTH@ 4
------DEL Block@@ElseBody:if (appearing != newRegistry) {  return appearing;} @AT@ 6618 @LENGTH@ 133
---------DEL IfStatement@@if (appearing != newRegistry) {  return appearing;} @AT@ 6618 @LENGTH@ 133
------------DEL InfixExpression@@appearing != newRegistry @AT@ 6622 @LENGTH@ 24
---------------DEL SimpleName@@appearing @AT@ 6622 @LENGTH@ 9
---------------DEL Operator@@!= @AT@ 6631 @LENGTH@ 2
---------------DEL SimpleName@@newRegistry @AT@ 6635 @LENGTH@ 11
------------DEL Block@@ThenBody:{  return appearing;} @AT@ 6648 @LENGTH@ 103
---------------DEL ReturnStatement@@SimpleName:appearing @AT@ 6716 @LENGTH@ 17
------------------DEL SimpleName@@appearing @AT@ 6723 @LENGTH@ 9


INS MethodDeclaration@@EndpointValidationResult, MethodName:validateEndpointProperties, String uri, boolean ignoreLenientProperties, boolean consumerOnly, boolean producerOnly,  @TO@ TypeDeclaration@@[@MXBean, public]CamelCatalog,  @AT@ 11161 @LENGTH@ 116
---INS SimpleType@@EndpointValidationResult @TO@ MethodDeclaration@@EndpointValidationResult, MethodName:validateEndpointProperties, String uri, boolean ignoreLenientProperties, boolean consumerOnly, boolean producerOnly,  @AT@ 11136 @LENGTH@ 24
---INS SimpleName@@MethodName:validateEndpointProperties @TO@ MethodDeclaration@@EndpointValidationResult, MethodName:validateEndpointProperties, String uri, boolean ignoreLenientProperties, boolean consumerOnly, boolean producerOnly,  @AT@ 11161 @LENGTH@ 26
---INS SingleVariableDeclaration@@String uri @TO@ MethodDeclaration@@EndpointValidationResult, MethodName:validateEndpointProperties, String uri, boolean ignoreLenientProperties, boolean consumerOnly, boolean producerOnly,  @AT@ 11188 @LENGTH@ 10
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String uri @AT@ 11188 @LENGTH@ 6
------INS SimpleName@@uri @TO@ SingleVariableDeclaration@@String uri @AT@ 11195 @LENGTH@ 3
---INS SingleVariableDeclaration@@boolean ignoreLenientProperties @TO@ MethodDeclaration@@EndpointValidationResult, MethodName:validateEndpointProperties, String uri, boolean ignoreLenientProperties, boolean consumerOnly, boolean producerOnly,  @AT@ 11200 @LENGTH@ 31
------INS PrimitiveType@@boolean @TO@ SingleVariableDeclaration@@boolean ignoreLenientProperties @AT@ 11200 @LENGTH@ 7
------INS SimpleName@@ignoreLenientProperties @TO@ SingleVariableDeclaration@@boolean ignoreLenientProperties @AT@ 11208 @LENGTH@ 23
---INS SingleVariableDeclaration@@boolean consumerOnly @TO@ MethodDeclaration@@EndpointValidationResult, MethodName:validateEndpointProperties, String uri, boolean ignoreLenientProperties, boolean consumerOnly, boolean producerOnly,  @AT@ 11233 @LENGTH@ 20
------INS PrimitiveType@@boolean @TO@ SingleVariableDeclaration@@boolean consumerOnly @AT@ 11233 @LENGTH@ 7
------INS SimpleName@@consumerOnly @TO@ SingleVariableDeclaration@@boolean consumerOnly @AT@ 11241 @LENGTH@ 12
---INS SingleVariableDeclaration@@boolean producerOnly @TO@ MethodDeclaration@@EndpointValidationResult, MethodName:validateEndpointProperties, String uri, boolean ignoreLenientProperties, boolean consumerOnly, boolean producerOnly,  @AT@ 11255 @LENGTH@ 20
------INS PrimitiveType@@boolean @TO@ SingleVariableDeclaration@@boolean producerOnly @AT@ 11255 @LENGTH@ 7
------INS SimpleName@@producerOnly @TO@ SingleVariableDeclaration@@boolean producerOnly @AT@ 11263 @LENGTH@ 12


UPD IfStatement@@if (parameter.getClass().isAssignableFrom(type)) {  return (T)parameter;} @TO@ if (ClassUtils.isAssignable(type,parameter.getClass())) {  return (T)parameter;} @AT@ 12075 @LENGTH@ 79
---UPD MethodInvocation@@parameter.getClass().isAssignableFrom(type) @TO@ ClassUtils.isAssignable(type,parameter.getClass()) @AT@ 12079 @LENGTH@ 43
------DEL MethodInvocation@@MethodName:getClass:[] @AT@ 12079 @LENGTH@ 20
------UPD SimpleName@@Name:parameter @TO@ Name:ClassUtils @AT@ 12079 @LENGTH@ 9
------UPD SimpleName@@MethodName:isAssignableFrom:[type] @TO@ MethodName:isAssignable:[type, parameter.getClass()] @AT@ 12100 @LENGTH@ 22
---------INS MethodInvocation@@parameter.getClass() @TO@ SimpleName@@MethodName:isAssignableFrom:[type] @AT@ 12155 @LENGTH@ 20
------------INS SimpleName@@Name:parameter @TO@ MethodInvocation@@parameter.getClass() @AT@ 12155 @LENGTH@ 9
------------INS SimpleName@@MethodName:getClass:[] @TO@ MethodInvocation@@parameter.getClass() @AT@ 12165 @LENGTH@ 10


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled(); @AT@ 5311 @LENGTH@ 160
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5319 @LENGTH@ 151
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5319 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5336 @LENGTH@ 134
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 5336 @LENGTH@ 64
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5336 @LENGTH@ 35
---------UPD MethodInvocation@@componentConfiguration.getConfigurer().isEnabled() @TO@ componentConfiguration.getCustomizer().isEnabled() @AT@ 5420 @LENGTH@ 50
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5420 @LENGTH@ 38


UPD IfStatement@@if (parameter.isNamedParameter()) {  params.put(parameter.getName(),parameterValue);} else {  params.put("" + i,parameterValue);} @TO@ if (parameter.isExplicitlyNamed()) {  params.put(parameter.getName(),parameterValue);} else {  params.put("" + i,parameterValue);} @AT@ 6677 @LENGTH@ 145
---UPD MethodInvocation@@parameter.isNamedParameter() @TO@ parameter.isExplicitlyNamed() @AT@ 6681 @LENGTH@ 28
------UPD SimpleName@@MethodName:isNamedParameter:[] @TO@ MethodName:isExplicitlyNamed:[] @AT@ 6691 @LENGTH@ 18


UPD IfStatement@@if (sort == null) {  return this;} @TO@ if (sort == null || ObjectUtils.nullSafeEquals(Sort.unsorted(),sort)) {  return this;} @AT@ 4546 @LENGTH@ 39
---DEL InfixExpression@@sort == null @AT@ 4550 @LENGTH@ 12
---INS InfixExpression@@sort == null || ObjectUtils.nullSafeEquals(Sort.unsorted(),sort) @TO@ IfStatement@@if (sort == null) {  return this;} @AT@ 4650 @LENGTH@ 65
------INS InfixExpression@@sort == null @TO@ InfixExpression@@sort == null || ObjectUtils.nullSafeEquals(Sort.unsorted(),sort) @AT@ 4650 @LENGTH@ 12
---------MOV SimpleName@@sort @TO@ InfixExpression@@sort == null @AT@ 4550 @LENGTH@ 4
---------MOV Operator@@== @TO@ InfixExpression@@sort == null @AT@ 4554 @LENGTH@ 2
---------MOV NullLiteral@@null @TO@ InfixExpression@@sort == null @AT@ 4558 @LENGTH@ 4
------INS Operator@@|| @TO@ InfixExpression@@sort == null || ObjectUtils.nullSafeEquals(Sort.unsorted(),sort) @AT@ 4662 @LENGTH@ 2
------INS MethodInvocation@@ObjectUtils.nullSafeEquals(Sort.unsorted(),sort) @TO@ InfixExpression@@sort == null || ObjectUtils.nullSafeEquals(Sort.unsorted(),sort) @AT@ 4666 @LENGTH@ 49
---------INS SimpleName@@Name:ObjectUtils @TO@ MethodInvocation@@ObjectUtils.nullSafeEquals(Sort.unsorted(),sort) @AT@ 4666 @LENGTH@ 11
---------INS SimpleName@@MethodName:nullSafeEquals:[Sort.unsorted(), sort] @TO@ MethodInvocation@@ObjectUtils.nullSafeEquals(Sort.unsorted(),sort) @AT@ 4678 @LENGTH@ 37
------------INS MethodInvocation@@Sort.unsorted() @TO@ SimpleName@@MethodName:nullSafeEquals:[Sort.unsorted(), sort] @AT@ 4693 @LENGTH@ 15
---------------INS SimpleName@@Name:Sort @TO@ MethodInvocation@@Sort.unsorted() @AT@ 4693 @LENGTH@ 4
---------------INS SimpleName@@MethodName:unsorted:[] @TO@ MethodInvocation@@Sort.unsorted() @AT@ 4698 @LENGTH@ 10
------------INS SimpleName@@sort @TO@ SimpleName@@MethodName:nullSafeEquals:[Sort.unsorted(), sort] @AT@ 4710 @LENGTH@ 4


UPD IfStatement@@if ("~".equals(pathNode)) {  spelBuilder.append("[size() - 1]");  continue;} @TO@ if (APPEND_CHARACTERS.contains(pathNode)) {  spelBuilder.append("[size() - 1]");  continue;} @AT@ 2473 @LENGTH@ 86
---UPD MethodInvocation@@"~".equals(pathNode) @TO@ APPEND_CHARACTERS.contains(pathNode) @AT@ 2477 @LENGTH@ 20
------DEL StringLiteral@@"~" @AT@ 2477 @LENGTH@ 3
------UPD SimpleName@@MethodName:equals:[pathNode] @TO@ MethodName:contains:[pathNode] @AT@ 2481 @LENGTH@ 16
------INS SimpleName@@Name:APPEND_CHARACTERS @TO@ MethodInvocation@@"~".equals(pathNode) @AT@ 2573 @LENGTH@ 17


UPD ExpressionStatement@@MethodInvocation:assertTrue(repository.findById(result.getId().toString()).get() instanceof Person) @TO@ MethodInvocation:assertThat(repository.findById(result.getId().toString())).containsInstanceOf(Person.class) @AT@ 1695 @LENGTH@ 83
---UPD MethodInvocation@@assertTrue(repository.findById(result.getId().toString()).get() instanceof Person) @TO@ assertThat(repository.findById(result.getId().toString())).containsInstanceOf(Person.class) @AT@ 1695 @LENGTH@ 82
------INS MethodInvocation@@MethodName:assertThat:[repository.findById(result.getId().toString())] @TO@ MethodInvocation@@assertTrue(repository.findById(result.getId().toString()).get() instanceof Person) @AT@ 1671 @LENGTH@ 58
---------INS MethodInvocation@@repository.findById(result.getId().toString()) @TO@ MethodInvocation@@MethodName:assertThat:[repository.findById(result.getId().toString())] @AT@ 1682 @LENGTH@ 46
------------INS SimpleName@@MethodName:findById:[result.getId().toString()] @TO@ MethodInvocation@@repository.findById(result.getId().toString()) @AT@ 1693 @LENGTH@ 35
---------------INS MethodInvocation@@result.getId().toString() @TO@ SimpleName@@MethodName:findById:[result.getId().toString()] @AT@ 1702 @LENGTH@ 25
------------------MOV MethodInvocation@@MethodName:getId:[] @TO@ MethodInvocation@@result.getId().toString() @AT@ 1726 @LENGTH@ 14
------------------MOV SimpleName@@Name:result @TO@ MethodInvocation@@result.getId().toString() @AT@ 1726 @LENGTH@ 6
------------------MOV SimpleName@@MethodName:toString:[] @TO@ MethodInvocation@@result.getId().toString() @AT@ 1741 @LENGTH@ 10
------------MOV SimpleName@@Name:repository @TO@ MethodInvocation@@repository.findById(result.getId().toString()) @AT@ 1706 @LENGTH@ 10
------DEL SimpleName@@MethodName:assertTrue:[repository.findById(result.getId().toString()).get() instanceof Person] @AT@ 1695 @LENGTH@ 82
---------DEL InstanceofExpression@@repository.findById(result.getId().toString()).get() instanceof Person @AT@ 1706 @LENGTH@ 70
------------DEL MethodInvocation@@repository.findById(result.getId().toString()).get() @AT@ 1706 @LENGTH@ 52
---------------DEL MethodInvocation@@MethodName:findById:[result.getId().toString()] @AT@ 1706 @LENGTH@ 46
------------------DEL MethodInvocation@@result.getId().toString() @AT@ 1726 @LENGTH@ 25
---------------DEL SimpleName@@MethodName:get:[] @AT@ 1753 @LENGTH@ 5
------------DEL Instanceof@@instanceof @AT@ 1759 @LENGTH@ 10
------------DEL SimpleType@@Person @AT@ 1770 @LENGTH@ 6
------INS SimpleName@@MethodName:containsInstanceOf:[Person.class] @TO@ MethodInvocation@@assertTrue(repository.findById(result.getId().toString()).get() instanceof Person) @AT@ 1730 @LENGTH@ 32
---------INS TypeLiteral@@Person.class @TO@ SimpleName@@MethodName:containsInstanceOf:[Person.class] @AT@ 1749 @LENGTH@ 12


DEL VariableDeclarationStatement@@CSVParser parser=CSV_FORMAT.parse(new InputStreamReader(pointsOfReference,"UTF-8")); @AT@ 1540 @LENGTH@ 87
---DEL SimpleType@@CSVParser @AT@ 1540 @LENGTH@ 9


UPD FieldDeclaration@@static, final, String[], [sqlStdAuthSafeVarNameRegexes=new String[]{"hive\\.auto\\..*","hive\\.cbo\\..*","hive\\.convert\\..*","hive\\.exec\\.dynamic\\.partition.*","hive\\.exec\\..*\\.dynamic\\.partitions\\..*","hive\\.exec\\.compress\\..*","hive\\.exec\\.infer\\..*","hive\\.exec\\.mode.local\\..*","hive\\.exec\\.orc\\..*","hive\\.exec\\.parallel.*","hive\\.explain\\..*","hive\\.fetch.task\\..*","hive\\.groupby\\..*","hive\\.hbase\\..*","hive\\.index\\..*","hive\\.index\\..*","hive\\.intermediate\\..*","hive\\.join\\..*","hive\\.limit\\..*","hive\\.log\\..*","hive\\.mapjoin\\..*","hive\\.merge\\..*","hive\\.optimize\\..*","hive\\.orc\\..*","hive\\.outerjoin\\..*","hive\\.parquet\\..*","hive\\.ppd\\..*","hive\\.prewarm\\..*","hive\\.server2\\.proxy\\.user","hive\\.skewjoin\\..*","hive\\.smbjoin\\..*","hive\\.stats\\..*","hive\\.strict\\..*","hive\\.tez\\..*","hive\\.vectorized\\..*","mapred\\.map\\..*","mapred\\.reduce\\..*","mapred\\.output\\.compression\\.codec","mapred\\.job\\.queuename","mapred\\.output\\.compression\\.type","mapred\\.min\\.split\\.size","mapreduce\\.job\\.reduce\\.slowstart\\.completedmaps","mapreduce\\.job\\.queuename","mapreduce\\.job\\.tags","mapreduce\\.input\\.fileinputformat\\.split\\.minsize","mapreduce\\.map\\..*","mapreduce\\.reduce\\..*","mapreduce\\.output\\.fileoutputformat\\.compress\\.codec","mapreduce\\.output\\.fileoutputformat\\.compress\\.type","oozie\\..*","tez\\.am\\..*","tez\\.task\\..*","tez\\.runtime\\..*","tez\\.queue\\.name"}] @TO@ static, final, String[], [sqlStdAuthSafeVarNameRegexes=new String[]{"hive\\.auto\\..*","hive\\.cbo\\..*","hive\\.convert\\..*","hive\\.exec\\.dynamic\\.partition.*","hive\\.exec\\.max\\.dynamic\\.partitions.*","hive\\.exec\\.compress\\..*","hive\\.exec\\.infer\\..*","hive\\.exec\\.mode.local\\..*","hive\\.exec\\.orc\\..*","hive\\.exec\\.parallel.*","hive\\.explain\\..*","hive\\.fetch.task\\..*","hive\\.groupby\\..*","hive\\.hbase\\..*","hive\\.index\\..*","hive\\.index\\..*","hive\\.intermediate\\..*","hive\\.join\\..*","hive\\.limit\\..*","hive\\.log\\..*","hive\\.mapjoin\\..*","hive\\.merge\\..*","hive\\.optimize\\..*","hive\\.orc\\..*","hive\\.outerjoin\\..*","hive\\.parquet\\..*","hive\\.ppd\\..*","hive\\.prewarm\\..*","hive\\.server2\\.proxy\\.user","hive\\.skewjoin\\..*","hive\\.smbjoin\\..*","hive\\.stats\\..*","hive\\.strict\\..*","hive\\.tez\\..*","hive\\.vectorized\\..*","mapred\\.map\\..*","mapred\\.reduce\\..*","mapred\\.output\\.compression\\.codec","mapred\\.job\\.queuename","mapred\\.output\\.compression\\.type","mapred\\.min\\.split\\.size","mapreduce\\.job\\.reduce\\.slowstart\\.completedmaps","mapreduce\\.job\\.queuename","mapreduce\\.job\\.tags","mapreduce\\.input\\.fileinputformat\\.split\\.minsize","mapreduce\\.map\\..*","mapreduce\\.reduce\\..*","mapreduce\\.output\\.fileoutputformat\\.compress\\.codec","mapreduce\\.output\\.fileoutputformat\\.compress\\.type","oozie\\..*","tez\\.am\\..*","tez\\.task\\..*","tez\\.runtime\\..*","tez\\.queue\\.name"}] @AT@ 266652 @LENGTH@ 1773
---UPD VariableDeclarationFragment@@sqlStdAuthSafeVarNameRegexes=new String[]{"hive\\.auto\\..*","hive\\.cbo\\..*","hive\\.convert\\..*","hive\\.exec\\.dynamic\\.partition.*","hive\\.exec\\..*\\.dynamic\\.partitions\\..*","hive\\.exec\\.compress\\..*","hive\\.exec\\.infer\\..*","hive\\.exec\\.mode.local\\..*","hive\\.exec\\.orc\\..*","hive\\.exec\\.parallel.*","hive\\.explain\\..*","hive\\.fetch.task\\..*","hive\\.groupby\\..*","hive\\.hbase\\..*","hive\\.index\\..*","hive\\.index\\..*","hive\\.intermediate\\..*","hive\\.join\\..*","hive\\.limit\\..*","hive\\.log\\..*","hive\\.mapjoin\\..*","hive\\.merge\\..*","hive\\.optimize\\..*","hive\\.orc\\..*","hive\\.outerjoin\\..*","hive\\.parquet\\..*","hive\\.ppd\\..*","hive\\.prewarm\\..*","hive\\.server2\\.proxy\\.user","hive\\.skewjoin\\..*","hive\\.smbjoin\\..*","hive\\.stats\\..*","hive\\.strict\\..*","hive\\.tez\\..*","hive\\.vectorized\\..*","mapred\\.map\\..*","mapred\\.reduce\\..*","mapred\\.output\\.compression\\.codec","mapred\\.job\\.queuename","mapred\\.output\\.compression\\.type","mapred\\.min\\.split\\.size","mapreduce\\.job\\.reduce\\.slowstart\\.completedmaps","mapreduce\\.job\\.queuename","mapreduce\\.job\\.tags","mapreduce\\.input\\.fileinputformat\\.split\\.minsize","mapreduce\\.map\\..*","mapreduce\\.reduce\\..*","mapreduce\\.output\\.fileoutputformat\\.compress\\.codec","mapreduce\\.output\\.fileoutputformat\\.compress\\.type","oozie\\..*","tez\\.am\\..*","tez\\.task\\..*","tez\\.runtime\\..*","tez\\.queue\\.name"} @TO@ sqlStdAuthSafeVarNameRegexes=new String[]{"hive\\.auto\\..*","hive\\.cbo\\..*","hive\\.convert\\..*","hive\\.exec\\.dynamic\\.partition.*","hive\\.exec\\.max\\.dynamic\\.partitions.*","hive\\.exec\\.compress\\..*","hive\\.exec\\.infer\\..*","hive\\.exec\\.mode.local\\..*","hive\\.exec\\.orc\\..*","hive\\.exec\\.parallel.*","hive\\.explain\\..*","hive\\.fetch.task\\..*","hive\\.groupby\\..*","hive\\.hbase\\..*","hive\\.index\\..*","hive\\.index\\..*","hive\\.intermediate\\..*","hive\\.join\\..*","hive\\.limit\\..*","hive\\.log\\..*","hive\\.mapjoin\\..*","hive\\.merge\\..*","hive\\.optimize\\..*","hive\\.orc\\..*","hive\\.outerjoin\\..*","hive\\.parquet\\..*","hive\\.ppd\\..*","hive\\.prewarm\\..*","hive\\.server2\\.proxy\\.user","hive\\.skewjoin\\..*","hive\\.smbjoin\\..*","hive\\.stats\\..*","hive\\.strict\\..*","hive\\.tez\\..*","hive\\.vectorized\\..*","mapred\\.map\\..*","mapred\\.reduce\\..*","mapred\\.output\\.compression\\.codec","mapred\\.job\\.queuename","mapred\\.output\\.compression\\.type","mapred\\.min\\.split\\.size","mapreduce\\.job\\.reduce\\.slowstart\\.completedmaps","mapreduce\\.job\\.queuename","mapreduce\\.job\\.tags","mapreduce\\.input\\.fileinputformat\\.split\\.minsize","mapreduce\\.map\\..*","mapreduce\\.reduce\\..*","mapreduce\\.output\\.fileoutputformat\\.compress\\.codec","mapreduce\\.output\\.fileoutputformat\\.compress\\.type","oozie\\..*","tez\\.am\\..*","tez\\.task\\..*","tez\\.runtime\\..*","tez\\.queue\\.name"} @AT@ 266675 @LENGTH@ 1749
------UPD ArrayCreation@@new String[]{"hive\\.auto\\..*","hive\\.cbo\\..*","hive\\.convert\\..*","hive\\.exec\\.dynamic\\.partition.*","hive\\.exec\\..*\\.dynamic\\.partitions\\..*","hive\\.exec\\.compress\\..*","hive\\.exec\\.infer\\..*","hive\\.exec\\.mode.local\\..*","hive\\.exec\\.orc\\..*","hive\\.exec\\.parallel.*","hive\\.explain\\..*","hive\\.fetch.task\\..*","hive\\.groupby\\..*","hive\\.hbase\\..*","hive\\.index\\..*","hive\\.index\\..*","hive\\.intermediate\\..*","hive\\.join\\..*","hive\\.limit\\..*","hive\\.log\\..*","hive\\.mapjoin\\..*","hive\\.merge\\..*","hive\\.optimize\\..*","hive\\.orc\\..*","hive\\.outerjoin\\..*","hive\\.parquet\\..*","hive\\.ppd\\..*","hive\\.prewarm\\..*","hive\\.server2\\.proxy\\.user","hive\\.skewjoin\\..*","hive\\.smbjoin\\..*","hive\\.stats\\..*","hive\\.strict\\..*","hive\\.tez\\..*","hive\\.vectorized\\..*","mapred\\.map\\..*","mapred\\.reduce\\..*","mapred\\.output\\.compression\\.codec","mapred\\.job\\.queuename","mapred\\.output\\.compression\\.type","mapred\\.min\\.split\\.size","mapreduce\\.job\\.reduce\\.slowstart\\.completedmaps","mapreduce\\.job\\.queuename","mapreduce\\.job\\.tags","mapreduce\\.input\\.fileinputformat\\.split\\.minsize","mapreduce\\.map\\..*","mapreduce\\.reduce\\..*","mapreduce\\.output\\.fileoutputformat\\.compress\\.codec","mapreduce\\.output\\.fileoutputformat\\.compress\\.type","oozie\\..*","tez\\.am\\..*","tez\\.task\\..*","tez\\.runtime\\..*","tez\\.queue\\.name"} @TO@ new String[]{"hive\\.auto\\..*","hive\\.cbo\\..*","hive\\.convert\\..*","hive\\.exec\\.dynamic\\.partition.*","hive\\.exec\\.max\\.dynamic\\.partitions.*","hive\\.exec\\.compress\\..*","hive\\.exec\\.infer\\..*","hive\\.exec\\.mode.local\\..*","hive\\.exec\\.orc\\..*","hive\\.exec\\.parallel.*","hive\\.explain\\..*","hive\\.fetch.task\\..*","hive\\.groupby\\..*","hive\\.hbase\\..*","hive\\.index\\..*","hive\\.index\\..*","hive\\.intermediate\\..*","hive\\.join\\..*","hive\\.limit\\..*","hive\\.log\\..*","hive\\.mapjoin\\..*","hive\\.merge\\..*","hive\\.optimize\\..*","hive\\.orc\\..*","hive\\.outerjoin\\..*","hive\\.parquet\\..*","hive\\.ppd\\..*","hive\\.prewarm\\..*","hive\\.server2\\.proxy\\.user","hive\\.skewjoin\\..*","hive\\.smbjoin\\..*","hive\\.stats\\..*","hive\\.strict\\..*","hive\\.tez\\..*","hive\\.vectorized\\..*","mapred\\.map\\..*","mapred\\.reduce\\..*","mapred\\.output\\.compression\\.codec","mapred\\.job\\.queuename","mapred\\.output\\.compression\\.type","mapred\\.min\\.split\\.size","mapreduce\\.job\\.reduce\\.slowstart\\.completedmaps","mapreduce\\.job\\.queuename","mapreduce\\.job\\.tags","mapreduce\\.input\\.fileinputformat\\.split\\.minsize","mapreduce\\.map\\..*","mapreduce\\.reduce\\..*","mapreduce\\.output\\.fileoutputformat\\.compress\\.codec","mapreduce\\.output\\.fileoutputformat\\.compress\\.type","oozie\\..*","tez\\.am\\..*","tez\\.task\\..*","tez\\.runtime\\..*","tez\\.queue\\.name"} @AT@ 266706 @LENGTH@ 1718
---------UPD ArrayInitializer@@{"hive\\.auto\\..*","hive\\.cbo\\..*","hive\\.convert\\..*","hive\\.exec\\.dynamic\\.partition.*","hive\\.exec\\..*\\.dynamic\\.partitions\\..*","hive\\.exec\\.compress\\..*","hive\\.exec\\.infer\\..*","hive\\.exec\\.mode.local\\..*","hive\\.exec\\.orc\\..*","hive\\.exec\\.parallel.*","hive\\.explain\\..*","hive\\.fetch.task\\..*","hive\\.groupby\\..*","hive\\.hbase\\..*","hive\\.index\\..*","hive\\.index\\..*","hive\\.intermediate\\..*","hive\\.join\\..*","hive\\.limit\\..*","hive\\.log\\..*","hive\\.mapjoin\\..*","hive\\.merge\\..*","hive\\.optimize\\..*","hive\\.orc\\..*","hive\\.outerjoin\\..*","hive\\.parquet\\..*","hive\\.ppd\\..*","hive\\.prewarm\\..*","hive\\.server2\\.proxy\\.user","hive\\.skewjoin\\..*","hive\\.smbjoin\\..*","hive\\.stats\\..*","hive\\.strict\\..*","hive\\.tez\\..*","hive\\.vectorized\\..*","mapred\\.map\\..*","mapred\\.reduce\\..*","mapred\\.output\\.compression\\.codec","mapred\\.job\\.queuename","mapred\\.output\\.compression\\.type","mapred\\.min\\.split\\.size","mapreduce\\.job\\.reduce\\.slowstart\\.completedmaps","mapreduce\\.job\\.queuename","mapreduce\\.job\\.tags","mapreduce\\.input\\.fileinputformat\\.split\\.minsize","mapreduce\\.map\\..*","mapreduce\\.reduce\\..*","mapreduce\\.output\\.fileoutputformat\\.compress\\.codec","mapreduce\\.output\\.fileoutputformat\\.compress\\.type","oozie\\..*","tez\\.am\\..*","tez\\.task\\..*","tez\\.runtime\\..*","tez\\.queue\\.name"} @TO@ {"hive\\.auto\\..*","hive\\.cbo\\..*","hive\\.convert\\..*","hive\\.exec\\.dynamic\\.partition.*","hive\\.exec\\.max\\.dynamic\\.partitions.*","hive\\.exec\\.compress\\..*","hive\\.exec\\.infer\\..*","hive\\.exec\\.mode.local\\..*","hive\\.exec\\.orc\\..*","hive\\.exec\\.parallel.*","hive\\.explain\\..*","hive\\.fetch.task\\..*","hive\\.groupby\\..*","hive\\.hbase\\..*","hive\\.index\\..*","hive\\.index\\..*","hive\\.intermediate\\..*","hive\\.join\\..*","hive\\.limit\\..*","hive\\.log\\..*","hive\\.mapjoin\\..*","hive\\.merge\\..*","hive\\.optimize\\..*","hive\\.orc\\..*","hive\\.outerjoin\\..*","hive\\.parquet\\..*","hive\\.ppd\\..*","hive\\.prewarm\\..*","hive\\.server2\\.proxy\\.user","hive\\.skewjoin\\..*","hive\\.smbjoin\\..*","hive\\.stats\\..*","hive\\.strict\\..*","hive\\.tez\\..*","hive\\.vectorized\\..*","mapred\\.map\\..*","mapred\\.reduce\\..*","mapred\\.output\\.compression\\.codec","mapred\\.job\\.queuename","mapred\\.output\\.compression\\.type","mapred\\.min\\.split\\.size","mapreduce\\.job\\.reduce\\.slowstart\\.completedmaps","mapreduce\\.job\\.queuename","mapreduce\\.job\\.tags","mapreduce\\.input\\.fileinputformat\\.split\\.minsize","mapreduce\\.map\\..*","mapreduce\\.reduce\\..*","mapreduce\\.output\\.fileoutputformat\\.compress\\.codec","mapreduce\\.output\\.fileoutputformat\\.compress\\.type","oozie\\..*","tez\\.am\\..*","tez\\.task\\..*","tez\\.runtime\\..*","tez\\.queue\\.name"} @AT@ 266720 @LENGTH@ 1704
------------UPD StringLiteral@@"hive\\.exec\\..*\\.dynamic\\.partitions\\..*" @TO@ "hive\\.exec\\.max\\.dynamic\\.partitions.*" @AT@ 266843 @LENGTH@ 46


UPD ExpressionStatement@@MethodInvocation:Assert.hasLength(key) @TO@ MethodInvocation:Assert.hasLength(key,"key must have length") @AT@ 3262 @LENGTH@ 22
---UPD MethodInvocation@@Assert.hasLength(key) @TO@ Assert.hasLength(key,"key must have length") @AT@ 3262 @LENGTH@ 21
------UPD SimpleName@@MethodName:hasLength:[key] @TO@ MethodName:hasLength:[key, "key must have length"] @AT@ 3269 @LENGTH@ 14
---------INS StringLiteral@@"key must have length" @TO@ SimpleName@@MethodName:hasLength:[key] @AT@ 3284 @LENGTH@ 22


UPD ExpressionStatement@@MethodInvocation:contact.setId(new Long(rs.getLong("id"))) @TO@ MethodInvocation:contact.setId(rs.getLong("id")) @AT@ 3417 @LENGTH@ 42
---UPD MethodInvocation@@contact.setId(new Long(rs.getLong("id"))) @TO@ contact.setId(rs.getLong("id")) @AT@ 3417 @LENGTH@ 41
------UPD SimpleName@@MethodName:setId:[new Long(rs.getLong("id"))] @TO@ MethodName:setId:[rs.getLong("id")] @AT@ 3425 @LENGTH@ 33
---------DEL ClassInstanceCreation@@Long[rs.getLong("id")] @AT@ 3431 @LENGTH@ 26
------------DEL New@@new @AT@ 3431 @LENGTH@ 3
------------DEL SimpleType@@Long @AT@ 3435 @LENGTH@ 4
---------MOV MethodInvocation@@rs.getLong("id") @TO@ SimpleName@@MethodName:setId:[new Long(rs.getLong("id"))] @AT@ 3440 @LENGTH@ 16


UPD VariableDeclarationStatement@@MongoPersistentEntity<?> entity=context.getPersistentEntity(path.getType()); @TO@ MongoPersistentEntity<?> entity=context.getRequiredPersistentEntity(path.getType()); @AT@ 2050 @LENGTH@ 78
---UPD VariableDeclarationFragment@@entity=context.getPersistentEntity(path.getType()) @TO@ entity=context.getRequiredPersistentEntity(path.getType()) @AT@ 2075 @LENGTH@ 52
------UPD MethodInvocation@@context.getPersistentEntity(path.getType()) @TO@ context.getRequiredPersistentEntity(path.getType()) @AT@ 2084 @LENGTH@ 43
---------UPD SimpleName@@MethodName:getPersistentEntity:[path.getType()] @TO@ MethodName:getRequiredPersistentEntity:[path.getType()] @AT@ 2092 @LENGTH@ 35


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<CassandraComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<CassandraComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5468 @LENGTH@ 342
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 5472 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5472 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  ComponentCustomizer<CassandraComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ ThenBody:{  for (  ComponentCustomizer<CassandraComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5528 @LENGTH@ 282
------UPD EnhancedForStatement@@for (ComponentCustomizer<CassandraComponent> configurer : customizers) {  LOGGER.debug("Configure component {}, with configurer {}",component,configurer);  configurer.customize(component);} @TO@ for (ComponentCustomizer<CassandraComponent> customizer : customizers) {  LOGGER.debug("Configure component {}, with customizer {}",component,customizer);  customizer.customize(component);} @AT@ 5542 @LENGTH@ 258
---------UPD SingleVariableDeclaration@@ComponentCustomizer<CassandraComponent> configurer @TO@ ComponentCustomizer<CassandraComponent> customizer @AT@ 5547 @LENGTH@ 50
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5587 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5631 @LENGTH@ 106
------------UPD MethodInvocation@@LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5631 @LENGTH@ 105
---------------UPD SimpleName@@MethodName:debug:["Configure component {}, with configurer {}", component, configurer] @TO@ MethodName:debug:["Configure component {}, with customizer {}", component, customizer] @AT@ 5638 @LENGTH@ 98
------------------UPD StringLiteral@@"Configure component {}, with configurer {}" @TO@ "Configure component {}, with customizer {}" @AT@ 5644 @LENGTH@ 44
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5725 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(component) @TO@ MethodInvocation:customizer.customize(component) @AT@ 5754 @LENGTH@ 32
------------UPD MethodInvocation@@configurer.customize(component) @TO@ customizer.customize(component) @AT@ 5754 @LENGTH@ 31
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5754 @LENGTH@ 10


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<JettyHttpComponent9> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<JettyHttpComponent9> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5479 @LENGTH@ 343
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 5483 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5483 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  ComponentCustomizer<JettyHttpComponent9> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ ThenBody:{  for (  ComponentCustomizer<JettyHttpComponent9> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5539 @LENGTH@ 283
------UPD EnhancedForStatement@@for (ComponentCustomizer<JettyHttpComponent9> configurer : customizers) {  LOGGER.debug("Configure component {}, with configurer {}",component,configurer);  configurer.customize(component);} @TO@ for (ComponentCustomizer<JettyHttpComponent9> customizer : customizers) {  LOGGER.debug("Configure component {}, with customizer {}",component,customizer);  customizer.customize(component);} @AT@ 5553 @LENGTH@ 259
---------UPD SingleVariableDeclaration@@ComponentCustomizer<JettyHttpComponent9> configurer @TO@ ComponentCustomizer<JettyHttpComponent9> customizer @AT@ 5558 @LENGTH@ 51
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5599 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5643 @LENGTH@ 106
------------UPD MethodInvocation@@LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5643 @LENGTH@ 105
---------------UPD SimpleName@@MethodName:debug:["Configure component {}, with configurer {}", component, configurer] @TO@ MethodName:debug:["Configure component {}, with customizer {}", component, customizer] @AT@ 5650 @LENGTH@ 98
------------------UPD StringLiteral@@"Configure component {}, with configurer {}" @TO@ "Configure component {}, with customizer {}" @AT@ 5656 @LENGTH@ 44
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5737 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(component) @TO@ MethodInvocation:customizer.customize(component) @AT@ 5766 @LENGTH@ 32
------------UPD MethodInvocation@@configurer.customize(component) @TO@ customizer.customize(component) @AT@ 5766 @LENGTH@ 31
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5766 @LENGTH@ 10


UPD ExpressionStatement@@MethodInvocation:this.consumers.stream().filter(c -> !c.getChannel().isOpen()).collect(Collectors.toList()).forEach(c -> {
  this.logger.error("Consumer canceled - channel closed " + c);
  c.cancelConsumer("Consumer " + c + " channel closed");
}
) @TO@ MethodInvocation:this.consumers.stream().filter(c -> !c.getChannel().isOpen()).collect(Collectors.toList()).forEach(c -> {
  try {
    RabbitUtils.closeMessageConsumer(c.getChannel(),Collections.singletonList(c.getConsumerTag()),isChannelTransacted());
  }
 catch (  Exception e) {
    if (logger.isDebugEnabled()) {
      logger.debug("Error closing consumer " + c,e);
    }
  }
  this.logger.error("Consumer canceled - channel closed " + c);
  c.cancelConsumer("Consumer " + c + " channel closed");
}
) @AT@ 11640 @LENGTH@ 332
---UPD MethodInvocation@@this.consumers.stream().filter(c -> !c.getChannel().isOpen()).collect(Collectors.toList()).forEach(c -> {
  this.logger.error("Consumer canceled - channel closed " + c);
  c.cancelConsumer("Consumer " + c + " channel closed");
}
) @TO@ this.consumers.stream().filter(c -> !c.getChannel().isOpen()).collect(Collectors.toList()).forEach(c -> {
  try {
    RabbitUtils.closeMessageConsumer(c.getChannel(),Collections.singletonList(c.getConsumerTag()),isChannelTransacted());
  }
 catch (  Exception e) {
    if (logger.isDebugEnabled()) {
      logger.debug("Error closing consumer " + c,e);
    }
  }
  this.logger.error("Consumer canceled - channel closed " + c);
  c.cancelConsumer("Consumer " + c + " channel closed");
}
) @AT@ 11640 @LENGTH@ 331
------UPD SimpleName@@MethodName:forEach:[c -> {
  this.logger.error("Consumer canceled - channel closed " + c);
  c.cancelConsumer("Consumer " + c + " channel closed");
}
] @TO@ MethodName:forEach:[c -> {
  try {
    RabbitUtils.closeMessageConsumer(c.getChannel(),Collections.singletonList(c.getConsumerTag()),isChannelTransacted());
  }
 catch (  Exception e) {
    if (logger.isDebugEnabled()) {
      logger.debug("Error closing consumer " + c,e);
    }
  }
  this.logger.error("Consumer canceled - channel closed " + c);
  c.cancelConsumer("Consumer " + c + " channel closed");
}
] @AT@ 11820 @LENGTH@ 151
---------UPD LambdaExpression@@c -> {
  this.logger.error("Consumer canceled - channel closed " + c);
  c.cancelConsumer("Consumer " + c + " channel closed");
}
 @TO@ c -> {
  try {
    RabbitUtils.closeMessageConsumer(c.getChannel(),Collections.singletonList(c.getConsumerTag()),isChannelTransacted());
  }
 catch (  Exception e) {
    if (logger.isDebugEnabled()) {
      logger.debug("Error closing consumer " + c,e);
    }
  }
  this.logger.error("Consumer canceled - channel closed " + c);
  c.cancelConsumer("Consumer " + c + " channel closed");
}
 @AT@ 11828 @LENGTH@ 142
------------INS TryStatement@@try {  RabbitUtils.closeMessageConsumer(c.getChannel(),Collections.singletonList(c.getConsumerTag()),isChannelTransacted());} catch (Exception e) {  if (logger.isDebugEnabled()) {    logger.debug("Error closing consumer " + c,e);  }} @TO@ LambdaExpression@@c -> {
  this.logger.error("Consumer canceled - channel closed " + c);
  c.cancelConsumer("Consumer " + c + " channel closed");
}
 @AT@ 11871 @LENGTH@ 288
---------------INS ExpressionStatement@@MethodInvocation:RabbitUtils.closeMessageConsumer(c.getChannel(),Collections.singletonList(c.getConsumerTag()),isChannelTransacted()) @TO@ TryStatement@@try {  RabbitUtils.closeMessageConsumer(c.getChannel(),Collections.singletonList(c.getConsumerTag()),isChannelTransacted());} catch (Exception e) {  if (logger.isDebugEnabled()) {    logger.debug("Error closing consumer " + c,e);  }} @AT@ 11884 @LENGTH@ 128
------------------INS MethodInvocation@@RabbitUtils.closeMessageConsumer(c.getChannel(),Collections.singletonList(c.getConsumerTag()),isChannelTransacted()) @TO@ ExpressionStatement@@MethodInvocation:RabbitUtils.closeMessageConsumer(c.getChannel(),Collections.singletonList(c.getConsumerTag()),isChannelTransacted()) @AT@ 11884 @LENGTH@ 127
---------------------INS SimpleName@@Name:RabbitUtils @TO@ MethodInvocation@@RabbitUtils.closeMessageConsumer(c.getChannel(),Collections.singletonList(c.getConsumerTag()),isChannelTransacted()) @AT@ 11884 @LENGTH@ 11
---------------------INS SimpleName@@MethodName:closeMessageConsumer:[c.getChannel(), Collections.singletonList(c.getConsumerTag()), isChannelTransacted()] @TO@ MethodInvocation@@RabbitUtils.closeMessageConsumer(c.getChannel(),Collections.singletonList(c.getConsumerTag()),isChannelTransacted()) @AT@ 11896 @LENGTH@ 115
------------------------INS MethodInvocation@@c.getChannel() @TO@ SimpleName@@MethodName:closeMessageConsumer:[c.getChannel(), Collections.singletonList(c.getConsumerTag()), isChannelTransacted()] @AT@ 11917 @LENGTH@ 14
---------------------------INS SimpleName@@Name:c @TO@ MethodInvocation@@c.getChannel() @AT@ 11917 @LENGTH@ 1
---------------------------INS SimpleName@@MethodName:getChannel:[] @TO@ MethodInvocation@@c.getChannel() @AT@ 11919 @LENGTH@ 12
------------------------INS MethodInvocation@@Collections.singletonList(c.getConsumerTag()) @TO@ SimpleName@@MethodName:closeMessageConsumer:[c.getChannel(), Collections.singletonList(c.getConsumerTag()), isChannelTransacted()] @AT@ 11942 @LENGTH@ 45
---------------------------INS SimpleName@@Name:Collections @TO@ MethodInvocation@@Collections.singletonList(c.getConsumerTag()) @AT@ 11942 @LENGTH@ 11
---------------------------INS SimpleName@@MethodName:singletonList:[c.getConsumerTag()] @TO@ MethodInvocation@@Collections.singletonList(c.getConsumerTag()) @AT@ 11954 @LENGTH@ 33
------------------------------INS MethodInvocation@@c.getConsumerTag() @TO@ SimpleName@@MethodName:singletonList:[c.getConsumerTag()] @AT@ 11968 @LENGTH@ 18
---------------------------------INS SimpleName@@Name:c @TO@ MethodInvocation@@c.getConsumerTag() @AT@ 11968 @LENGTH@ 1
---------------------------------INS SimpleName@@MethodName:getConsumerTag:[] @TO@ MethodInvocation@@c.getConsumerTag() @AT@ 11970 @LENGTH@ 16
------------------------INS MethodInvocation@@MethodName:isChannelTransacted:[] @TO@ SimpleName@@MethodName:closeMessageConsumer:[c.getChannel(), Collections.singletonList(c.getConsumerTag()), isChannelTransacted()] @AT@ 11989 @LENGTH@ 21
---------------INS CatchClause@@catch (Exception e) {  if (logger.isDebugEnabled()) {    logger.debug("Error closing consumer " + c,e);  }} @TO@ TryStatement@@try {  RabbitUtils.closeMessageConsumer(c.getChannel(),Collections.singletonList(c.getConsumerTag()),isChannelTransacted());} catch (Exception e) {  if (logger.isDebugEnabled()) {    logger.debug("Error closing consumer " + c,e);  }} @AT@ 12027 @LENGTH@ 132
------------------INS SingleVariableDeclaration@@Exception e @TO@ CatchClause@@catch (Exception e) {  if (logger.isDebugEnabled()) {    logger.debug("Error closing consumer " + c,e);  }} @AT@ 12034 @LENGTH@ 11
---------------------INS SimpleType@@Exception @TO@ SingleVariableDeclaration@@Exception e @AT@ 12034 @LENGTH@ 9
---------------------INS SimpleName@@e @TO@ SingleVariableDeclaration@@Exception e @AT@ 12044 @LENGTH@ 1
------------------INS IfStatement@@if (logger.isDebugEnabled()) {  logger.debug("Error closing consumer " + c,e);} @TO@ CatchClause@@catch (Exception e) {  if (logger.isDebugEnabled()) {    logger.debug("Error closing consumer " + c,e);  }} @AT@ 12056 @LENGTH@ 95
---------------------INS MethodInvocation@@logger.isDebugEnabled() @TO@ IfStatement@@if (logger.isDebugEnabled()) {  logger.debug("Error closing consumer " + c,e);} @AT@ 12060 @LENGTH@ 23
------------------------INS SimpleName@@Name:logger @TO@ MethodInvocation@@logger.isDebugEnabled() @AT@ 12060 @LENGTH@ 6
------------------------INS SimpleName@@MethodName:isDebugEnabled:[] @TO@ MethodInvocation@@logger.isDebugEnabled() @AT@ 12067 @LENGTH@ 16
---------------------INS Block@@ThenBody:{  logger.debug("Error closing consumer " + c,e);} @TO@ IfStatement@@if (logger.isDebugEnabled()) {  logger.debug("Error closing consumer " + c,e);} @AT@ 12085 @LENGTH@ 66
------------------------INS ExpressionStatement@@MethodInvocation:logger.debug("Error closing consumer " + c,e) @TO@ Block@@ThenBody:{  logger.debug("Error closing consumer " + c,e);} @AT@ 12095 @LENGTH@ 47
---------------------------INS MethodInvocation@@logger.debug("Error closing consumer " + c,e) @TO@ ExpressionStatement@@MethodInvocation:logger.debug("Error closing consumer " + c,e) @AT@ 12095 @LENGTH@ 46
------------------------------INS SimpleName@@Name:logger @TO@ MethodInvocation@@logger.debug("Error closing consumer " + c,e) @AT@ 12095 @LENGTH@ 6
------------------------------INS SimpleName@@MethodName:debug:["Error closing consumer " + c, e] @TO@ MethodInvocation@@logger.debug("Error closing consumer " + c,e) @AT@ 12102 @LENGTH@ 39
---------------------------------INS InfixExpression@@"Error closing consumer " + c @TO@ SimpleName@@MethodName:debug:["Error closing consumer " + c, e] @AT@ 12108 @LENGTH@ 29
------------------------------------INS StringLiteral@@"Error closing consumer " @TO@ InfixExpression@@"Error closing consumer " + c @AT@ 12108 @LENGTH@ 25
------------------------------------INS Operator@@+ @TO@ InfixExpression@@"Error closing consumer " + c @AT@ 12133 @LENGTH@ 1
------------------------------------INS SimpleName@@c @TO@ InfixExpression@@"Error closing consumer " + c @AT@ 12136 @LENGTH@ 1
---------------------------------INS SimpleName@@e @TO@ SimpleName@@MethodName:debug:["Error closing consumer " + c, e] @AT@ 12139 @LENGTH@ 1


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  DataFormatCustomizer<TidyMarkupDataFormat> configurer : customizers) {    LOGGER.debug("Configure dataformat {}, with configurer {}",dataformat,configurer);    configurer.customize(dataformat);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  DataFormatCustomizer<TidyMarkupDataFormat> customizer : customizers) {    LOGGER.debug("Configure dataformat {}, with customizer {}",dataformat,customizer);    customizer.customize(dataformat);  }} @AT@ 5394 @LENGTH@ 429
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 5398 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5398 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  DataFormatCustomizer<TidyMarkupDataFormat> configurer : customizers) {    LOGGER.debug("Configure dataformat {}, with configurer {}",dataformat,configurer);    configurer.customize(dataformat);  }} @TO@ ThenBody:{  for (  DataFormatCustomizer<TidyMarkupDataFormat> customizer : customizers) {    LOGGER.debug("Configure dataformat {}, with customizer {}",dataformat,customizer);    customizer.customize(dataformat);  }} @AT@ 5454 @LENGTH@ 369
------UPD EnhancedForStatement@@for (DataFormatCustomizer<TidyMarkupDataFormat> configurer : customizers) {  LOGGER.debug("Configure dataformat {}, with configurer {}",dataformat,configurer);  configurer.customize(dataformat);} @TO@ for (DataFormatCustomizer<TidyMarkupDataFormat> customizer : customizers) {  LOGGER.debug("Configure dataformat {}, with customizer {}",dataformat,customizer);  customizer.customize(dataformat);} @AT@ 5476 @LENGTH@ 329
---------UPD SingleVariableDeclaration@@DataFormatCustomizer<TidyMarkupDataFormat> configurer @TO@ DataFormatCustomizer<TidyMarkupDataFormat> customizer @AT@ 5481 @LENGTH@ 53
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5524 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure dataformat {}, with configurer {}",dataformat,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure dataformat {}, with customizer {}",dataformat,customizer) @AT@ 5576 @LENGTH@ 149
------------UPD MethodInvocation@@LOGGER.debug("Configure dataformat {}, with configurer {}",dataformat,configurer) @TO@ LOGGER.debug("Configure dataformat {}, with customizer {}",dataformat,customizer) @AT@ 5576 @LENGTH@ 148
---------------UPD SimpleName@@MethodName:debug:["Configure dataformat {}, with configurer {}", dataformat, configurer] @TO@ MethodName:debug:["Configure dataformat {}, with customizer {}", dataformat, customizer] @AT@ 5583 @LENGTH@ 141
------------------UPD StringLiteral@@"Configure dataformat {}, with configurer {}" @TO@ "Configure dataformat {}, with customizer {}" @AT@ 5622 @LENGTH@ 45
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5713 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(dataformat) @TO@ MethodInvocation:customizer.customize(dataformat) @AT@ 5750 @LENGTH@ 33
------------UPD MethodInvocation@@configurer.customize(dataformat) @TO@ customizer.customize(dataformat) @AT@ 5750 @LENGTH@ 32
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5750 @LENGTH@ 10


UPD FieldDeclaration@@protected, static, final, SimpleAttributeDefinition, [NAME=new SimpleAttributeDefinitionBuilder(CommonAttributes.NAME,ModelType.STRING,false).setXmlName(Attribute.NAME.getLocalName()).setAllowExpression(false).setValidator(new StringLengthValidator(1)).setDefaultValue(new ModelNode().set(DeploymentScannerExtension.DEFAULT_SCANNER_NAME)).build()] @TO@ protected, static, final, SimpleAttributeDefinition, [NAME=new SimpleAttributeDefinitionBuilder(CommonAttributes.NAME,ModelType.STRING,false).setXmlName(Attribute.NAME.getLocalName()).setAllowExpression(false).setValidator(new StringLengthValidator(1)).build()] @AT@ 2227 @LENGTH@ 463
---UPD VariableDeclarationFragment@@NAME=new SimpleAttributeDefinitionBuilder(CommonAttributes.NAME,ModelType.STRING,false).setXmlName(Attribute.NAME.getLocalName()).setAllowExpression(false).setValidator(new StringLengthValidator(1)).setDefaultValue(new ModelNode().set(DeploymentScannerExtension.DEFAULT_SCANNER_NAME)).build() @TO@ NAME=new SimpleAttributeDefinitionBuilder(CommonAttributes.NAME,ModelType.STRING,false).setXmlName(Attribute.NAME.getLocalName()).setAllowExpression(false).setValidator(new StringLengthValidator(1)).build() @AT@ 2276 @LENGTH@ 413
------UPD MethodInvocation@@new SimpleAttributeDefinitionBuilder(CommonAttributes.NAME,ModelType.STRING,false).setXmlName(Attribute.NAME.getLocalName()).setAllowExpression(false).setValidator(new StringLengthValidator(1)).setDefaultValue(new ModelNode().set(DeploymentScannerExtension.DEFAULT_SCANNER_NAME)).build() @TO@ new SimpleAttributeDefinitionBuilder(CommonAttributes.NAME,ModelType.STRING,false).setXmlName(Attribute.NAME.getLocalName()).setAllowExpression(false).setValidator(new StringLengthValidator(1)).build() @AT@ 2295 @LENGTH@ 394
---------DEL MethodInvocation@@MethodName:setDefaultValue:[new ModelNode().set(DeploymentScannerExtension.DEFAULT_SCANNER_NAME)] @AT@ 2295 @LENGTH@ 365
------------DEL MethodInvocation@@new ModelNode().set(DeploymentScannerExtension.DEFAULT_SCANNER_NAME) @AT@ 2591 @LENGTH@ 68
---------------DEL ClassInstanceCreation@@ModelNode[] @AT@ 2591 @LENGTH@ 15
------------------DEL New@@new @AT@ 2591 @LENGTH@ 3
------------------DEL SimpleType@@ModelNode @AT@ 2595 @LENGTH@ 9
---------------DEL SimpleName@@MethodName:set:[DeploymentScannerExtension.DEFAULT_SCANNER_NAME] @AT@ 2607 @LENGTH@ 52
------------------DEL QualifiedName@@DeploymentScannerExtension.DEFAULT_SCANNER_NAME @AT@ 2611 @LENGTH@ 47
---------------------DEL SimpleName@@DeploymentScannerExtension @AT@ 2611 @LENGTH@ 26
---------------------DEL SimpleName@@DEFAULT_SCANNER_NAME @AT@ 2638 @LENGTH@ 20


INS IfStatement@@if (node == null && getArchive().getName().endsWith(".war")) {  node=getArchive().get("WEB-INF/classes/" + SWAGGER_CONFIGURATION_PATH);} @TO@ MethodDeclaration@@private, void, MethodName:loadOrCreateConfigurationAsset, IOException,  @AT@ 4236 @LENGTH@ 158
---INS InfixExpression@@node == null && getArchive().getName().endsWith(".war") @TO@ IfStatement@@if (node == null && getArchive().getName().endsWith(".war")) {  node=getArchive().get("WEB-INF/classes/" + SWAGGER_CONFIGURATION_PATH);} @AT@ 4240 @LENGTH@ 55
------INS InfixExpression@@node == null @TO@ InfixExpression@@node == null && getArchive().getName().endsWith(".war") @AT@ 4240 @LENGTH@ 12
---------INS SimpleName@@node @TO@ InfixExpression@@node == null @AT@ 4240 @LENGTH@ 4
---------INS Operator@@== @TO@ InfixExpression@@node == null @AT@ 4244 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@node == null @AT@ 4248 @LENGTH@ 4
------INS Operator@@&& @TO@ InfixExpression@@node == null && getArchive().getName().endsWith(".war") @AT@ 4252 @LENGTH@ 2
------INS MethodInvocation@@getArchive().getName().endsWith(".war") @TO@ InfixExpression@@node == null && getArchive().getName().endsWith(".war") @AT@ 4256 @LENGTH@ 39
---------INS MethodInvocation@@MethodName:getName:[] @TO@ MethodInvocation@@getArchive().getName().endsWith(".war") @AT@ 4256 @LENGTH@ 22
---------INS MethodInvocation@@MethodName:getArchive:[] @TO@ MethodInvocation@@getArchive().getName().endsWith(".war") @AT@ 4256 @LENGTH@ 12
---------INS SimpleName@@MethodName:endsWith:[".war"] @TO@ MethodInvocation@@getArchive().getName().endsWith(".war") @AT@ 4279 @LENGTH@ 16
------------INS StringLiteral@@".war" @TO@ SimpleName@@MethodName:endsWith:[".war"] @AT@ 4288 @LENGTH@ 6
---INS Block@@ThenBody:{  node=getArchive().get("WEB-INF/classes/" + SWAGGER_CONFIGURATION_PATH);} @TO@ IfStatement@@if (node == null && getArchive().getName().endsWith(".war")) {  node=getArchive().get("WEB-INF/classes/" + SWAGGER_CONFIGURATION_PATH);} @AT@ 4297 @LENGTH@ 97
------INS ExpressionStatement@@Assignment:node=getArchive().get("WEB-INF/classes/" + SWAGGER_CONFIGURATION_PATH) @TO@ Block@@ThenBody:{  node=getArchive().get("WEB-INF/classes/" + SWAGGER_CONFIGURATION_PATH);} @AT@ 4311 @LENGTH@ 73
---------INS Assignment@@node=getArchive().get("WEB-INF/classes/" + SWAGGER_CONFIGURATION_PATH) @TO@ ExpressionStatement@@Assignment:node=getArchive().get("WEB-INF/classes/" + SWAGGER_CONFIGURATION_PATH) @AT@ 4311 @LENGTH@ 72
------------INS SimpleName@@node @TO@ Assignment@@node=getArchive().get("WEB-INF/classes/" + SWAGGER_CONFIGURATION_PATH) @AT@ 4311 @LENGTH@ 4
------------INS Operator@@= @TO@ Assignment@@node=getArchive().get("WEB-INF/classes/" + SWAGGER_CONFIGURATION_PATH) @AT@ 4315 @LENGTH@ 1
------------INS MethodInvocation@@getArchive().get("WEB-INF/classes/" + SWAGGER_CONFIGURATION_PATH) @TO@ Assignment@@node=getArchive().get("WEB-INF/classes/" + SWAGGER_CONFIGURATION_PATH) @AT@ 4318 @LENGTH@ 65
---------------INS MethodInvocation@@MethodName:getArchive:[] @TO@ MethodInvocation@@getArchive().get("WEB-INF/classes/" + SWAGGER_CONFIGURATION_PATH) @AT@ 4318 @LENGTH@ 12
---------------INS SimpleName@@MethodName:get:["WEB-INF/classes/" + SWAGGER_CONFIGURATION_PATH] @TO@ MethodInvocation@@getArchive().get("WEB-INF/classes/" + SWAGGER_CONFIGURATION_PATH) @AT@ 4331 @LENGTH@ 52
------------------INS InfixExpression@@"WEB-INF/classes/" + SWAGGER_CONFIGURATION_PATH @TO@ SimpleName@@MethodName:get:["WEB-INF/classes/" + SWAGGER_CONFIGURATION_PATH] @AT@ 4335 @LENGTH@ 47
---------------------INS StringLiteral@@"WEB-INF/classes/" @TO@ InfixExpression@@"WEB-INF/classes/" + SWAGGER_CONFIGURATION_PATH @AT@ 4335 @LENGTH@ 18
---------------------INS Operator@@+ @TO@ InfixExpression@@"WEB-INF/classes/" + SWAGGER_CONFIGURATION_PATH @AT@ 4353 @LENGTH@ 1
---------------------INS SimpleName@@SWAGGER_CONFIGURATION_PATH @TO@ InfixExpression@@"WEB-INF/classes/" + SWAGGER_CONFIGURATION_PATH @AT@ 4356 @LENGTH@ 26


INS IfStatement@@if (!isReadOnly()) {  ensureGovernorHasField(new FieldMetadataBuilder(getIterableToAddCantBeNullConstant()));  ensureGovernorHasField(new FieldMetadataBuilder(getIterableToRemoveCantBeNullConstant()));} @TO@ MethodDeclaration@@public, voidMethodName:JpaEntityMetadata, final String metadataIdentificationString, final JavaType itdName, final PhysicalTypeMetadata entityPhysicalType, final JpaEntityMetadata parent, final MemberDetails entityMemberDetails, final FieldMetadata identifierField, final MethodMetadata identifierAccessor, final FieldMetadata versionField, final MethodMetadata versionAccessor, final JpaEntityAnnotationValues annotationValues, final ClassOrInterfaceTypeDetails entityDetails, List<FieldMetadata> fieldsRelationAsParent, Map<String,FieldMetadata> fieldsRelationAsChild, FieldMetadata compositionRelationField,  @AT@ 8484 @LENGTH@ 217
---INS PrefixExpression@@!isReadOnly() @TO@ IfStatement@@if (!isReadOnly()) {  ensureGovernorHasField(new FieldMetadataBuilder(getIterableToAddCantBeNullConstant()));  ensureGovernorHasField(new FieldMetadataBuilder(getIterableToRemoveCantBeNullConstant()));} @AT@ 8488 @LENGTH@ 13
------INS Operator@@! @TO@ PrefixExpression@@!isReadOnly() @AT@ 8488 @LENGTH@ 1
------INS MethodInvocation@@MethodName:isReadOnly:[] @TO@ PrefixExpression@@!isReadOnly() @AT@ 8489 @LENGTH@ 12
---INS Block@@ThenBody:{  ensureGovernorHasField(new FieldMetadataBuilder(getIterableToAddCantBeNullConstant()));  ensureGovernorHasField(new FieldMetadataBuilder(getIterableToRemoveCantBeNullConstant()));} @TO@ IfStatement@@if (!isReadOnly()) {  ensureGovernorHasField(new FieldMetadataBuilder(getIterableToAddCantBeNullConstant()));  ensureGovernorHasField(new FieldMetadataBuilder(getIterableToRemoveCantBeNullConstant()));} @AT@ 8503 @LENGTH@ 198
------MOV ExpressionStatement@@MethodInvocation:ensureGovernorHasField(new FieldMetadataBuilder(getIterableToAddCantBeNullConstant())) @TO@ Block@@ThenBody:{  ensureGovernorHasField(new FieldMetadataBuilder(getIterableToAddCantBeNullConstant()));  ensureGovernorHasField(new FieldMetadataBuilder(getIterableToRemoveCantBeNullConstant()));} @AT@ 10506 @LENGTH@ 87
------MOV ExpressionStatement@@MethodInvocation:ensureGovernorHasField(new FieldMetadataBuilder(getIterableToRemoveCantBeNullConstant())) @TO@ Block@@ThenBody:{  ensureGovernorHasField(new FieldMetadataBuilder(getIterableToAddCantBeNullConstant()));  ensureGovernorHasField(new FieldMetadataBuilder(getIterableToRemoveCantBeNullConstant()));} @AT@ 10602 @LENGTH@ 90


UPD EnhancedForStatement@@for (final Path path : basePaths) {  FileStatus[] statuses=fs.listStatus(path,FileUtils.HIDDEN_FILES_PATH_FILTER);  boolean fileFound=false;  for (  FileStatus status : statuses) {    if (status.isDirectory()) {      nextLevel.add(status.getPath());    } else {      fileFound=true;    }  }  if (depth != 0) {    if (fileFound) {      if ("throw".equals(HiveConf.getVar(conf,HiveConf.ConfVars.HIVE_MSCK_PATH_VALIDATION))) {        throw new HiveException("MSCK finds a file rather than a folder when it searches for " + path.toString());      } else {        LOG.warn("MSCK finds a file rather than a folder when it searches for " + path.toString());      }    }    if (!nextLevel.isEmpty()) {      checkPartitionDirsSingleThreaded(nextLevel,allDirs,fs,depth - 1,maxDepth);    } else     if (depth != maxDepth) {      if ("throw".equals(HiveConf.getVar(conf,HiveConf.ConfVars.HIVE_MSCK_PATH_VALIDATION))) {        throw new HiveException("MSCK is missing partition columns under " + path.toString());      } else {        LOG.warn("MSCK is missing partition columns under " + path.toString());      }    }  } else {    allDirs.add(path);  }} @TO@ for (final Path path : basePaths) {  FileStatus[] statuses=fs.listStatus(path,FileUtils.HIDDEN_FILES_PATH_FILTER);  final Queue<Path> nextLevel=new LinkedList<>();  boolean fileFound=false;  for (  FileStatus status : statuses) {    if (status.isDirectory()) {      nextLevel.add(status.getPath());    } else {      fileFound=true;    }  }  if (depth != 0) {    if (fileFound) {      if ("throw".equals(HiveConf.getVar(conf,HiveConf.ConfVars.HIVE_MSCK_PATH_VALIDATION))) {        throw new HiveException("MSCK finds a file rather than a folder when it searches for " + path.toString());      } else {        LOG.warn("MSCK finds a file rather than a folder when it searches for " + path.toString());      }    }    if (!nextLevel.isEmpty()) {      checkPartitionDirsSingleThreaded(nextLevel,allDirs,fs,depth - 1,maxDepth);    } else     if (depth != maxDepth) {      if ("throw".equals(HiveConf.getVar(conf,HiveConf.ConfVars.HIVE_MSCK_PATH_VALIDATION))) {        throw new HiveException("MSCK is missing partition columns under " + path.toString());      } else {        LOG.warn("MSCK is missing partition columns under " + path.toString());      }    }  } else {    allDirs.add(path);  }} @AT@ 21000 @LENGTH@ 1469
---MOV VariableDeclarationStatement@@final Queue<Path> nextLevel=new LinkedList<>(); @TO@ EnhancedForStatement@@for (final Path path : basePaths) {  FileStatus[] statuses=fs.listStatus(path,FileUtils.HIDDEN_FILES_PATH_FILTER);  boolean fileFound=false;  for (  FileStatus status : statuses) {    if (status.isDirectory()) {      nextLevel.add(status.getPath());    } else {      fileFound=true;    }  }  if (depth != 0) {    if (fileFound) {      if ("throw".equals(HiveConf.getVar(conf,HiveConf.ConfVars.HIVE_MSCK_PATH_VALIDATION))) {        throw new HiveException("MSCK finds a file rather than a folder when it searches for " + path.toString());      } else {        LOG.warn("MSCK finds a file rather than a folder when it searches for " + path.toString());      }    }    if (!nextLevel.isEmpty()) {      checkPartitionDirsSingleThreaded(nextLevel,allDirs,fs,depth - 1,maxDepth);    } else     if (depth != maxDepth) {      if ("throw".equals(HiveConf.getVar(conf,HiveConf.ConfVars.HIVE_MSCK_PATH_VALIDATION))) {        throw new HiveException("MSCK is missing partition columns under " + path.toString());      } else {        LOG.warn("MSCK is missing partition columns under " + path.toString());      }    }  } else {    allDirs.add(path);  }} @AT@ 20946 @LENGTH@ 49


UPD IfStatement@@if ("outputs".equals(name)) {  continue;} @TO@ if ("outputs".equals(name) || "transforms".equals(name)) {  continue;} @AT@ 10117 @LENGTH@ 85
---INS InfixExpression@@"outputs".equals(name) || "transforms".equals(name) @TO@ IfStatement@@if ("outputs".equals(name)) {  continue;} @AT@ 10121 @LENGTH@ 51
------MOV MethodInvocation@@"outputs".equals(name) @TO@ InfixExpression@@"outputs".equals(name) || "transforms".equals(name) @AT@ 10121 @LENGTH@ 22
------INS Operator@@|| @TO@ InfixExpression@@"outputs".equals(name) || "transforms".equals(name) @AT@ 10143 @LENGTH@ 2
------INS MethodInvocation@@"transforms".equals(name) @TO@ InfixExpression@@"outputs".equals(name) || "transforms".equals(name) @AT@ 10147 @LENGTH@ 25
---------INS StringLiteral@@"transforms" @TO@ MethodInvocation@@"transforms".equals(name) @AT@ 10147 @LENGTH@ 12
---------INS SimpleName@@MethodName:equals:[name] @TO@ MethodInvocation@@"transforms".equals(name) @AT@ 10160 @LENGTH@ 12
------------INS SimpleName@@name @TO@ SimpleName@@MethodName:equals:[name] @AT@ 10167 @LENGTH@ 4


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && dataformatConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && dataformatConfiguration.getCustomizer().isEnabled(); @AT@ 5204 @LENGTH@ 177
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && dataformatConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && dataformatConfiguration.getCustomizer().isEnabled() @AT@ 5212 @LENGTH@ 168
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5212 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && dataformatConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && dataformatConfiguration.getCustomizer().isEnabled() @AT@ 5229 @LENGTH@ 151
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 5229 @LENGTH@ 72
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5229 @LENGTH@ 35
---------UPD MethodInvocation@@dataformatConfiguration.getConfigurer().isEnabled() @TO@ dataformatConfiguration.getCustomizer().isEnabled() @AT@ 5329 @LENGTH@ 51
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5329 @LENGTH@ 39


UPD IfStatement@@if (value.isDefined()) {  dataSourceService.getCredentialSourceSupplierInjector().inject(CredentialReference.getCredentialSourceSupplier(context,Constants.CREDENTIAL_REFERENCE,model,dataSourceServiceBuilder));} @TO@ if (credentialReference.isDefined()) {  dataSourceService.getCredentialSourceSupplierInjector().inject(CredentialReference.getCredentialSourceSupplier(context,Constants.CREDENTIAL_REFERENCE,model,dataSourceServiceBuilder));} @AT@ 14605 @LENGTH@ 287
---UPD MethodInvocation@@value.isDefined() @TO@ credentialReference.isDefined() @AT@ 14609 @LENGTH@ 17
------UPD SimpleName@@Name:value @TO@ Name:credentialReference @AT@ 14609 @LENGTH@ 5


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<HdfsComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<HdfsComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5395 @LENGTH@ 337
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 5399 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5399 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  ComponentCustomizer<HdfsComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ ThenBody:{  for (  ComponentCustomizer<HdfsComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5455 @LENGTH@ 277
------UPD EnhancedForStatement@@for (ComponentCustomizer<HdfsComponent> configurer : customizers) {  LOGGER.debug("Configure component {}, with configurer {}",component,configurer);  configurer.customize(component);} @TO@ for (ComponentCustomizer<HdfsComponent> customizer : customizers) {  LOGGER.debug("Configure component {}, with customizer {}",component,customizer);  customizer.customize(component);} @AT@ 5469 @LENGTH@ 253
---------UPD SingleVariableDeclaration@@ComponentCustomizer<HdfsComponent> configurer @TO@ ComponentCustomizer<HdfsComponent> customizer @AT@ 5474 @LENGTH@ 45
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5509 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5553 @LENGTH@ 106
------------UPD MethodInvocation@@LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5553 @LENGTH@ 105
---------------UPD SimpleName@@MethodName:debug:["Configure component {}, with configurer {}", component, configurer] @TO@ MethodName:debug:["Configure component {}, with customizer {}", component, customizer] @AT@ 5560 @LENGTH@ 98
------------------UPD StringLiteral@@"Configure component {}, with configurer {}" @TO@ "Configure component {}, with customizer {}" @AT@ 5566 @LENGTH@ 44
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5647 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(component) @TO@ MethodInvocation:customizer.customize(component) @AT@ 5676 @LENGTH@ 32
------------UPD MethodInvocation@@configurer.customize(component) @TO@ customizer.customize(component) @AT@ 5676 @LENGTH@ 31
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5676 @LENGTH@ 10


UPD SuperConstructorInvocation@@super("teiid",ModuleIdentifier.create("org.teiid.jdbc"),"org.teiid.jdbc.TeiidDriver");
 @TO@ super("teiid",ModuleIdentifier.create("org.teiid.jdbc"),"org.teiid.jdbc.TeiidDriver","org.teiid.core.types.JDBCSQLTypeInfo");
 @AT@ 737 @LENGTH@ 88
---INS StringLiteral@@"org.teiid.core.types.JDBCSQLTypeInfo" @TO@ SuperConstructorInvocation@@super("teiid",ModuleIdentifier.create("org.teiid.jdbc"),"org.teiid.jdbc.TeiidDriver");
 @AT@ 825 @LENGTH@ 38


UPD ExpressionStatement@@MethodInvocation:assertEquals(15,rows.size()) @TO@ MethodInvocation:assertEquals(16,rows.size()) @AT@ 5176 @LENGTH@ 30
---UPD MethodInvocation@@assertEquals(15,rows.size()) @TO@ assertEquals(16,rows.size()) @AT@ 5176 @LENGTH@ 29
------UPD SimpleName@@MethodName:assertEquals:[15, rows.size()] @TO@ MethodName:assertEquals:[16, rows.size()] @AT@ 5176 @LENGTH@ 29
---------UPD NumberLiteral@@15 @TO@ 16 @AT@ 5189 @LENGTH@ 2


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && languageConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && languageConfiguration.getCustomizer().isEnabled(); @AT@ 4539 @LENGTH@ 159
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && languageConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && languageConfiguration.getCustomizer().isEnabled() @AT@ 4547 @LENGTH@ 150
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 4547 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && languageConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && languageConfiguration.getCustomizer().isEnabled() @AT@ 4564 @LENGTH@ 133
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 4564 @LENGTH@ 64
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 4564 @LENGTH@ 35
---------UPD MethodInvocation@@languageConfiguration.getConfigurer().isEnabled() @TO@ languageConfiguration.getCustomizer().isEnabled() @AT@ 4648 @LENGTH@ 49
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 4648 @LENGTH@ 37


INS MethodDeclaration@@public, static, boolean, MethodName:isPropertyConsumerOnly, List<Map<String,String>> rows, String name,  @TO@ TypeDeclaration@@[public, final]JSonSchemaHelper,  @AT@ 4561 @LENGTH@ 566
---INS Modifier@@public @TO@ MethodDeclaration@@public, static, boolean, MethodName:isPropertyConsumerOnly, List<Map<String,String>> rows, String name,  @AT@ 4561 @LENGTH@ 6
---INS Modifier@@static @TO@ MethodDeclaration@@public, static, boolean, MethodName:isPropertyConsumerOnly, List<Map<String,String>> rows, String name,  @AT@ 4568 @LENGTH@ 6
---INS PrimitiveType@@boolean @TO@ MethodDeclaration@@public, static, boolean, MethodName:isPropertyConsumerOnly, List<Map<String,String>> rows, String name,  @AT@ 4575 @LENGTH@ 7
---INS SimpleName@@MethodName:isPropertyConsumerOnly @TO@ MethodDeclaration@@public, static, boolean, MethodName:isPropertyConsumerOnly, List<Map<String,String>> rows, String name,  @AT@ 4583 @LENGTH@ 22
---INS SingleVariableDeclaration@@List<Map<String,String>> rows @TO@ MethodDeclaration@@public, static, boolean, MethodName:isPropertyConsumerOnly, List<Map<String,String>> rows, String name,  @AT@ 4606 @LENGTH@ 30
------INS ParameterizedType@@List<Map<String,String>> @TO@ SingleVariableDeclaration@@List<Map<String,String>> rows @AT@ 4606 @LENGTH@ 25
---------INS SimpleType@@List @TO@ ParameterizedType@@List<Map<String,String>> @AT@ 4606 @LENGTH@ 4
---------INS ParameterizedType@@Map<String,String> @TO@ ParameterizedType@@List<Map<String,String>> @AT@ 4611 @LENGTH@ 19
------------INS SimpleType@@Map @TO@ ParameterizedType@@Map<String,String> @AT@ 4611 @LENGTH@ 3
------------INS SimpleType@@String @TO@ ParameterizedType@@Map<String,String> @AT@ 4615 @LENGTH@ 6
------------INS SimpleType@@String @TO@ ParameterizedType@@Map<String,String> @AT@ 4623 @LENGTH@ 6
------INS SimpleName@@rows @TO@ SingleVariableDeclaration@@List<Map<String,String>> rows @AT@ 4632 @LENGTH@ 4
---INS SingleVariableDeclaration@@String name @TO@ MethodDeclaration@@public, static, boolean, MethodName:isPropertyConsumerOnly, List<Map<String,String>> rows, String name,  @AT@ 4638 @LENGTH@ 11
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String name @AT@ 4638 @LENGTH@ 6
------INS SimpleName@@name @TO@ SingleVariableDeclaration@@String name @AT@ 4645 @LENGTH@ 4
---INS EnhancedForStatement@@for (Map<String,String> row : rows) {  String labels=null;  boolean found=false;  if (row.containsKey("name")) {    found=name.equals(row.get("name"));  }  if (row.containsKey("label")) {    labels=row.get("label");  }  if (found) {    return labels != null && labels.contains("consumer");  }} @TO@ MethodDeclaration@@public, static, boolean, MethodName:isPropertyConsumerOnly, List<Map<String,String>> rows, String name,  @AT@ 4661 @LENGTH@ 438
------INS SingleVariableDeclaration@@Map<String,String> row @TO@ EnhancedForStatement@@for (Map<String,String> row : rows) {  String labels=null;  boolean found=false;  if (row.containsKey("name")) {    found=name.equals(row.get("name"));  }  if (row.containsKey("label")) {    labels=row.get("label");  }  if (found) {    return labels != null && labels.contains("consumer");  }} @AT@ 4666 @LENGTH@ 23
---------INS ParameterizedType@@Map<String,String> @TO@ SingleVariableDeclaration@@Map<String,String> row @AT@ 4666 @LENGTH@ 19
------------INS SimpleType@@Map @TO@ ParameterizedType@@Map<String,String> @AT@ 4666 @LENGTH@ 3
------------INS SimpleType@@String @TO@ ParameterizedType@@Map<String,String> @AT@ 4670 @LENGTH@ 6
------------INS SimpleType@@String @TO@ ParameterizedType@@Map<String,String> @AT@ 4678 @LENGTH@ 6
---------INS SimpleName@@row @TO@ SingleVariableDeclaration@@Map<String,String> row @AT@ 4686 @LENGTH@ 3
------INS SimpleName@@rows @TO@ EnhancedForStatement@@for (Map<String,String> row : rows) {  String labels=null;  boolean found=false;  if (row.containsKey("name")) {    found=name.equals(row.get("name"));  }  if (row.containsKey("label")) {    labels=row.get("label");  }  if (found) {    return labels != null && labels.contains("consumer");  }} @AT@ 4692 @LENGTH@ 4
------INS VariableDeclarationStatement@@String labels=null; @TO@ EnhancedForStatement@@for (Map<String,String> row : rows) {  String labels=null;  boolean found=false;  if (row.containsKey("name")) {    found=name.equals(row.get("name"));  }  if (row.containsKey("label")) {    labels=row.get("label");  }  if (found) {    return labels != null && labels.contains("consumer");  }} @AT@ 4712 @LENGTH@ 21
---------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String labels=null; @AT@ 4712 @LENGTH@ 6
---------INS VariableDeclarationFragment@@labels=null @TO@ VariableDeclarationStatement@@String labels=null; @AT@ 4719 @LENGTH@ 13
------------INS SimpleName@@labels @TO@ VariableDeclarationFragment@@labels=null @AT@ 4719 @LENGTH@ 6
------------INS NullLiteral@@null @TO@ VariableDeclarationFragment@@labels=null @AT@ 4728 @LENGTH@ 4
------INS VariableDeclarationStatement@@boolean found=false; @TO@ EnhancedForStatement@@for (Map<String,String> row : rows) {  String labels=null;  boolean found=false;  if (row.containsKey("name")) {    found=name.equals(row.get("name"));  }  if (row.containsKey("label")) {    labels=row.get("label");  }  if (found) {    return labels != null && labels.contains("consumer");  }} @AT@ 4746 @LENGTH@ 22
---------INS PrimitiveType@@boolean @TO@ VariableDeclarationStatement@@boolean found=false; @AT@ 4746 @LENGTH@ 7
---------INS VariableDeclarationFragment@@found=false @TO@ VariableDeclarationStatement@@boolean found=false; @AT@ 4754 @LENGTH@ 13
------------INS SimpleName@@found @TO@ VariableDeclarationFragment@@found=false @AT@ 4754 @LENGTH@ 5
------------INS BooleanLiteral@@false @TO@ VariableDeclarationFragment@@found=false @AT@ 4762 @LENGTH@ 5
------INS IfStatement@@if (row.containsKey("name")) {  found=name.equals(row.get("name"));} @TO@ EnhancedForStatement@@for (Map<String,String> row : rows) {  String labels=null;  boolean found=false;  if (row.containsKey("name")) {    found=name.equals(row.get("name"));  }  if (row.containsKey("label")) {    labels=row.get("label");  }  if (found) {    return labels != null && labels.contains("consumer");  }} @AT@ 4781 @LENGTH@ 98
---------INS MethodInvocation@@row.containsKey("name") @TO@ IfStatement@@if (row.containsKey("name")) {  found=name.equals(row.get("name"));} @AT@ 4785 @LENGTH@ 23
------------INS SimpleName@@Name:row @TO@ MethodInvocation@@row.containsKey("name") @AT@ 4785 @LENGTH@ 3
------------INS SimpleName@@MethodName:containsKey:["name"] @TO@ MethodInvocation@@row.containsKey("name") @AT@ 4789 @LENGTH@ 19
---------------INS StringLiteral@@"name" @TO@ SimpleName@@MethodName:containsKey:["name"] @AT@ 4801 @LENGTH@ 6
---------INS Block@@ThenBody:{  found=name.equals(row.get("name"));} @TO@ IfStatement@@if (row.containsKey("name")) {  found=name.equals(row.get("name"));} @AT@ 4810 @LENGTH@ 69
------------INS ExpressionStatement@@Assignment:found=name.equals(row.get("name")) @TO@ Block@@ThenBody:{  found=name.equals(row.get("name"));} @AT@ 4828 @LENGTH@ 37
---------------INS Assignment@@found=name.equals(row.get("name")) @TO@ ExpressionStatement@@Assignment:found=name.equals(row.get("name")) @AT@ 4828 @LENGTH@ 36
------------------INS SimpleName@@found @TO@ Assignment@@found=name.equals(row.get("name")) @AT@ 4828 @LENGTH@ 5
------------------INS Operator@@= @TO@ Assignment@@found=name.equals(row.get("name")) @AT@ 4833 @LENGTH@ 1
------------------INS MethodInvocation@@name.equals(row.get("name")) @TO@ Assignment@@found=name.equals(row.get("name")) @AT@ 4836 @LENGTH@ 28
---------------------INS SimpleName@@Name:name @TO@ MethodInvocation@@name.equals(row.get("name")) @AT@ 4836 @LENGTH@ 4
---------------------INS SimpleName@@MethodName:equals:[row.get("name")] @TO@ MethodInvocation@@name.equals(row.get("name")) @AT@ 4841 @LENGTH@ 23
------------------------INS MethodInvocation@@row.get("name") @TO@ SimpleName@@MethodName:equals:[row.get("name")] @AT@ 4848 @LENGTH@ 15
---------------------------INS SimpleName@@Name:row @TO@ MethodInvocation@@row.get("name") @AT@ 4848 @LENGTH@ 3
---------------------------INS SimpleName@@MethodName:get:["name"] @TO@ MethodInvocation@@row.get("name") @AT@ 4852 @LENGTH@ 11
------------------------------INS StringLiteral@@"name" @TO@ SimpleName@@MethodName:get:["name"] @AT@ 4856 @LENGTH@ 6
------INS IfStatement@@if (row.containsKey("label")) {  labels=row.get("label");} @TO@ EnhancedForStatement@@for (Map<String,String> row : rows) {  String labels=null;  boolean found=false;  if (row.containsKey("name")) {    found=name.equals(row.get("name"));  }  if (row.containsKey("label")) {    labels=row.get("label");  }  if (found) {    return labels != null && labels.contains("consumer");  }} @AT@ 4892 @LENGTH@ 88
---------INS MethodInvocation@@row.containsKey("label") @TO@ IfStatement@@if (row.containsKey("label")) {  labels=row.get("label");} @AT@ 4896 @LENGTH@ 24
------------INS SimpleName@@Name:row @TO@ MethodInvocation@@row.containsKey("label") @AT@ 4896 @LENGTH@ 3
------------INS SimpleName@@MethodName:containsKey:["label"] @TO@ MethodInvocation@@row.containsKey("label") @AT@ 4900 @LENGTH@ 20
---------------INS StringLiteral@@"label" @TO@ SimpleName@@MethodName:containsKey:["label"] @AT@ 4912 @LENGTH@ 7
---------INS Block@@ThenBody:{  labels=row.get("label");} @TO@ IfStatement@@if (row.containsKey("label")) {  labels=row.get("label");} @AT@ 4922 @LENGTH@ 58
------------INS ExpressionStatement@@Assignment:labels=row.get("label") @TO@ Block@@ThenBody:{  labels=row.get("label");} @AT@ 4940 @LENGTH@ 26
---------------INS Assignment@@labels=row.get("label") @TO@ ExpressionStatement@@Assignment:labels=row.get("label") @AT@ 4940 @LENGTH@ 25
------------------INS SimpleName@@labels @TO@ Assignment@@labels=row.get("label") @AT@ 4940 @LENGTH@ 6
------------------INS Operator@@= @TO@ Assignment@@labels=row.get("label") @AT@ 4946 @LENGTH@ 1
------------------INS MethodInvocation@@row.get("label") @TO@ Assignment@@labels=row.get("label") @AT@ 4949 @LENGTH@ 16
---------------------INS SimpleName@@Name:row @TO@ MethodInvocation@@row.get("label") @AT@ 4949 @LENGTH@ 3
---------------------INS SimpleName@@MethodName:get:["label"] @TO@ MethodInvocation@@row.get("label") @AT@ 4953 @LENGTH@ 12
------------------------INS StringLiteral@@"label" @TO@ SimpleName@@MethodName:get:["label"] @AT@ 4957 @LENGTH@ 7
------INS IfStatement@@if (found) {  return labels != null && labels.contains("consumer");} @TO@ EnhancedForStatement@@for (Map<String,String> row : rows) {  String labels=null;  boolean found=false;  if (row.containsKey("name")) {    found=name.equals(row.get("name"));  }  if (row.containsKey("label")) {    labels=row.get("label");  }  if (found) {    return labels != null && labels.contains("consumer");  }} @AT@ 4993 @LENGTH@ 96
---------INS SimpleName@@found @TO@ IfStatement@@if (found) {  return labels != null && labels.contains("consumer");} @AT@ 4997 @LENGTH@ 5
---------INS Block@@ThenBody:{  return labels != null && labels.contains("consumer");} @TO@ IfStatement@@if (found) {  return labels != null && labels.contains("consumer");} @AT@ 5004 @LENGTH@ 85
------------INS ReturnStatement@@InfixExpression:labels != null && labels.contains("consumer") @TO@ Block@@ThenBody:{  return labels != null && labels.contains("consumer");} @AT@ 5022 @LENGTH@ 53
---------------INS InfixExpression@@labels != null && labels.contains("consumer") @TO@ ReturnStatement@@InfixExpression:labels != null && labels.contains("consumer") @AT@ 5029 @LENGTH@ 45
------------------INS InfixExpression@@labels != null @TO@ InfixExpression@@labels != null && labels.contains("consumer") @AT@ 5029 @LENGTH@ 14
---------------------INS SimpleName@@labels @TO@ InfixExpression@@labels != null @AT@ 5029 @LENGTH@ 6
---------------------INS Operator@@!= @TO@ InfixExpression@@labels != null @AT@ 5035 @LENGTH@ 2
---------------------INS NullLiteral@@null @TO@ InfixExpression@@labels != null @AT@ 5039 @LENGTH@ 4
------------------INS Operator@@&& @TO@ InfixExpression@@labels != null && labels.contains("consumer") @AT@ 5043 @LENGTH@ 2
------------------INS MethodInvocation@@labels.contains("consumer") @TO@ InfixExpression@@labels != null && labels.contains("consumer") @AT@ 5047 @LENGTH@ 27
---------------------INS SimpleName@@Name:labels @TO@ MethodInvocation@@labels.contains("consumer") @AT@ 5047 @LENGTH@ 6
---------------------INS SimpleName@@MethodName:contains:["consumer"] @TO@ MethodInvocation@@labels.contains("consumer") @AT@ 5054 @LENGTH@ 20
------------------------INS StringLiteral@@"consumer" @TO@ SimpleName@@MethodName:contains:["consumer"] @AT@ 5063 @LENGTH@ 10
---INS ReturnStatement@@BooleanLiteral:false @TO@ MethodDeclaration@@public, static, boolean, MethodName:isPropertyConsumerOnly, List<Map<String,String>> rows, String name,  @AT@ 5108 @LENGTH@ 13
------INS BooleanLiteral@@false @TO@ ReturnStatement@@BooleanLiteral:false @AT@ 5115 @LENGTH@ 5


DEL MethodDeclaration@@public, voidMethodName:HiveSessionImpl, TProtocolVersion protocol, String username, String password, HiveConf serverhiveConf, String ipAddress,  @AT@ 6775 @LENGTH@ 209
---DEL Modifier@@public @AT@ 6775 @LENGTH@ 6
---DEL SimpleName@@MethodName:HiveSessionImpl @AT@ 6782 @LENGTH@ 15
---DEL SingleVariableDeclaration@@TProtocolVersion protocol @AT@ 6798 @LENGTH@ 25
------DEL SimpleType@@TProtocolVersion @AT@ 6798 @LENGTH@ 16
------DEL SimpleName@@protocol @AT@ 6815 @LENGTH@ 8
---DEL SingleVariableDeclaration@@String username @AT@ 6825 @LENGTH@ 15
------DEL SimpleType@@String @AT@ 6825 @LENGTH@ 6
------DEL SimpleName@@username @AT@ 6832 @LENGTH@ 8
---DEL SingleVariableDeclaration@@String password @AT@ 6842 @LENGTH@ 15
------DEL SimpleType@@String @AT@ 6842 @LENGTH@ 6
------DEL SimpleName@@password @AT@ 6849 @LENGTH@ 8
---DEL SingleVariableDeclaration@@HiveConf serverhiveConf @AT@ 6863 @LENGTH@ 23
------DEL SimpleType@@HiveConf @AT@ 6863 @LENGTH@ 8
------DEL SimpleName@@serverhiveConf @AT@ 6872 @LENGTH@ 14
---DEL SingleVariableDeclaration@@String ipAddress @AT@ 6888 @LENGTH@ 16
------DEL SimpleType@@String @AT@ 6888 @LENGTH@ 6
------DEL SimpleName@@ipAddress @AT@ 6895 @LENGTH@ 9
---DEL ConstructorInvocation@@this(null,protocol,username,password,serverhiveConf,ipAddress); @AT@ 6912 @LENGTH@ 68
------DEL NullLiteral@@null @AT@ 6917 @LENGTH@ 4
------DEL SimpleName@@protocol @AT@ 6923 @LENGTH@ 8
------DEL SimpleName@@username @AT@ 6933 @LENGTH@ 8
------DEL SimpleName@@password @AT@ 6943 @LENGTH@ 8
------DEL SimpleName@@serverhiveConf @AT@ 6953 @LENGTH@ 14
------DEL SimpleName@@ipAddress @AT@ 6969 @LENGTH@ 9


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<FtpComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<FtpComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5394 @LENGTH@ 336
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 5398 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5398 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  ComponentCustomizer<FtpComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ ThenBody:{  for (  ComponentCustomizer<FtpComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5454 @LENGTH@ 276
------UPD EnhancedForStatement@@for (ComponentCustomizer<FtpComponent> configurer : customizers) {  LOGGER.debug("Configure component {}, with configurer {}",component,configurer);  configurer.customize(component);} @TO@ for (ComponentCustomizer<FtpComponent> customizer : customizers) {  LOGGER.debug("Configure component {}, with customizer {}",component,customizer);  customizer.customize(component);} @AT@ 5468 @LENGTH@ 252
---------UPD SingleVariableDeclaration@@ComponentCustomizer<FtpComponent> configurer @TO@ ComponentCustomizer<FtpComponent> customizer @AT@ 5473 @LENGTH@ 44
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5507 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5551 @LENGTH@ 106
------------UPD MethodInvocation@@LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5551 @LENGTH@ 105
---------------UPD SimpleName@@MethodName:debug:["Configure component {}, with configurer {}", component, configurer] @TO@ MethodName:debug:["Configure component {}, with customizer {}", component, customizer] @AT@ 5558 @LENGTH@ 98
------------------UPD StringLiteral@@"Configure component {}, with configurer {}" @TO@ "Configure component {}, with customizer {}" @AT@ 5564 @LENGTH@ 44
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5645 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(component) @TO@ MethodInvocation:customizer.customize(component) @AT@ 5674 @LENGTH@ 32
------------UPD MethodInvocation@@configurer.customize(component) @TO@ customizer.customize(component) @AT@ 5674 @LENGTH@ 31
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5674 @LENGTH@ 10


UPD FieldDeclaration@@private, static, final, Pattern, [pattern=Pattern.compile("/*?(\\S+)/*?",Pattern.CASE_INSENSITIVE)] @TO@ private, static, final, Pattern, [PATTERN=Pattern.compile("/*?(\\S+)/*?",Pattern.CASE_INSENSITIVE)] @AT@ 1292 @LENGTH@ 97
---UPD VariableDeclarationFragment@@pattern=Pattern.compile("/*?(\\S+)/*?",Pattern.CASE_INSENSITIVE) @TO@ PATTERN=Pattern.compile("/*?(\\S+)/*?",Pattern.CASE_INSENSITIVE) @AT@ 1321 @LENGTH@ 67
------UPD SimpleName@@pattern @TO@ PATTERN @AT@ 1321 @LENGTH@ 7


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled(); @AT@ 5260 @LENGTH@ 160
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5268 @LENGTH@ 151
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5268 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5285 @LENGTH@ 134
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 5285 @LENGTH@ 64
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5285 @LENGTH@ 35
---------UPD MethodInvocation@@componentConfiguration.getConfigurer().isEnabled() @TO@ componentConfiguration.getCustomizer().isEnabled() @AT@ 5369 @LENGTH@ 50
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5369 @LENGTH@ 38


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  LanguageCustomizer<HeaderLanguage> configurer : customizers) {    LOGGER.debug("Configure language {}, with configurer {}",language,configurer);    configurer.customize(language);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  LanguageCustomizer<HeaderLanguage> customizer : customizers) {    LOGGER.debug("Configure language {}, with customizer {}",language,customizer);    customizer.customize(language);  }} @AT@ 4725 @LENGTH@ 334
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 4729 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 4729 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  LanguageCustomizer<HeaderLanguage> configurer : customizers) {    LOGGER.debug("Configure language {}, with configurer {}",language,configurer);    configurer.customize(language);  }} @TO@ ThenBody:{  for (  LanguageCustomizer<HeaderLanguage> customizer : customizers) {    LOGGER.debug("Configure language {}, with customizer {}",language,customizer);    customizer.customize(language);  }} @AT@ 4785 @LENGTH@ 274
------UPD EnhancedForStatement@@for (LanguageCustomizer<HeaderLanguage> configurer : customizers) {  LOGGER.debug("Configure language {}, with configurer {}",language,configurer);  configurer.customize(language);} @TO@ for (LanguageCustomizer<HeaderLanguage> customizer : customizers) {  LOGGER.debug("Configure language {}, with customizer {}",language,customizer);  customizer.customize(language);} @AT@ 4799 @LENGTH@ 250
---------UPD SingleVariableDeclaration@@LanguageCustomizer<HeaderLanguage> configurer @TO@ LanguageCustomizer<HeaderLanguage> customizer @AT@ 4804 @LENGTH@ 45
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 4839 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure language {}, with configurer {}",language,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure language {}, with customizer {}",language,customizer) @AT@ 4883 @LENGTH@ 104
------------UPD MethodInvocation@@LOGGER.debug("Configure language {}, with configurer {}",language,configurer) @TO@ LOGGER.debug("Configure language {}, with customizer {}",language,customizer) @AT@ 4883 @LENGTH@ 103
---------------UPD SimpleName@@MethodName:debug:["Configure language {}, with configurer {}", language, configurer] @TO@ MethodName:debug:["Configure language {}, with customizer {}", language, customizer] @AT@ 4890 @LENGTH@ 96
------------------UPD StringLiteral@@"Configure language {}, with configurer {}" @TO@ "Configure language {}, with customizer {}" @AT@ 4896 @LENGTH@ 43
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 4975 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(language) @TO@ MethodInvocation:customizer.customize(language) @AT@ 5004 @LENGTH@ 31
------------UPD MethodInvocation@@configurer.customize(language) @TO@ customizer.customize(language) @AT@ 5004 @LENGTH@ 30
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5004 @LENGTH@ 10


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled(); @AT@ 5294 @LENGTH@ 160
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5302 @LENGTH@ 151
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5302 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5319 @LENGTH@ 134
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 5319 @LENGTH@ 64
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5319 @LENGTH@ 35
---------UPD MethodInvocation@@componentConfiguration.getConfigurer().isEnabled() @TO@ componentConfiguration.getCustomizer().isEnabled() @AT@ 5403 @LENGTH@ 50
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5403 @LENGTH@ 38


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled(); @AT@ 5353 @LENGTH@ 160
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5361 @LENGTH@ 151
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5361 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5378 @LENGTH@ 134
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 5378 @LENGTH@ 64
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5378 @LENGTH@ 35
---------UPD MethodInvocation@@componentConfiguration.getConfigurer().isEnabled() @TO@ componentConfiguration.getCustomizer().isEnabled() @AT@ 5462 @LENGTH@ 50
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5462 @LENGTH@ 38


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<RestSwaggerComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<RestSwaggerComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5530 @LENGTH@ 344
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 5534 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5534 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  ComponentCustomizer<RestSwaggerComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ ThenBody:{  for (  ComponentCustomizer<RestSwaggerComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5590 @LENGTH@ 284
------UPD EnhancedForStatement@@for (ComponentCustomizer<RestSwaggerComponent> configurer : customizers) {  LOGGER.debug("Configure component {}, with configurer {}",component,configurer);  configurer.customize(component);} @TO@ for (ComponentCustomizer<RestSwaggerComponent> customizer : customizers) {  LOGGER.debug("Configure component {}, with customizer {}",component,customizer);  customizer.customize(component);} @AT@ 5604 @LENGTH@ 260
---------UPD SingleVariableDeclaration@@ComponentCustomizer<RestSwaggerComponent> configurer @TO@ ComponentCustomizer<RestSwaggerComponent> customizer @AT@ 5609 @LENGTH@ 52
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5651 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5695 @LENGTH@ 106
------------UPD MethodInvocation@@LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5695 @LENGTH@ 105
---------------UPD SimpleName@@MethodName:debug:["Configure component {}, with configurer {}", component, configurer] @TO@ MethodName:debug:["Configure component {}, with customizer {}", component, customizer] @AT@ 5702 @LENGTH@ 98
------------------UPD StringLiteral@@"Configure component {}, with configurer {}" @TO@ "Configure component {}, with customizer {}" @AT@ 5708 @LENGTH@ 44
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5789 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(component) @TO@ MethodInvocation:customizer.customize(component) @AT@ 5818 @LENGTH@ 32
------------UPD MethodInvocation@@configurer.customize(component) @TO@ customizer.customize(component) @AT@ 5818 @LENGTH@ 31
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5818 @LENGTH@ 10


INS MethodDeclaration@@public, void, MethodName:registersAllowedPageabletypes,  @TO@ TypeDeclaration@@[public]QueryExecutionConvertersUnitTests,  @AT@ 10689 @LENGTH@ 374
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:registersAllowedPageabletypes,  @AT@ 10689 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:registersAllowedPageabletypes,  @AT@ 10696 @LENGTH@ 4
---INS SimpleName@@MethodName:registersAllowedPageabletypes @TO@ MethodDeclaration@@public, void, MethodName:registersAllowedPageabletypes,  @AT@ 10701 @LENGTH@ 29
---INS VariableDeclarationStatement@@final Set<Class<?>> allowedPageableTypes=QueryExecutionConverters.getAllowedPageableTypes(); @TO@ MethodDeclaration@@public, void, MethodName:registersAllowedPageabletypes,  @AT@ 10738 @LENGTH@ 94
------INS Modifier@@final @TO@ VariableDeclarationStatement@@final Set<Class<?>> allowedPageableTypes=QueryExecutionConverters.getAllowedPageableTypes(); @AT@ 10738 @LENGTH@ 5
------INS ParameterizedType@@Set<Class<?>> @TO@ VariableDeclarationStatement@@final Set<Class<?>> allowedPageableTypes=QueryExecutionConverters.getAllowedPageableTypes(); @AT@ 10744 @LENGTH@ 13
---------INS SimpleType@@Set @TO@ ParameterizedType@@Set<Class<?>> @AT@ 10744 @LENGTH@ 3
---------INS ParameterizedType@@Class<?> @TO@ ParameterizedType@@Set<Class<?>> @AT@ 10748 @LENGTH@ 8
------------INS SimpleType@@Class @TO@ ParameterizedType@@Class<?> @AT@ 10748 @LENGTH@ 5
------------INS WildcardType@@? @TO@ ParameterizedType@@Class<?> @AT@ 10754 @LENGTH@ 1
------INS VariableDeclarationFragment@@allowedPageableTypes=QueryExecutionConverters.getAllowedPageableTypes() @TO@ VariableDeclarationStatement@@final Set<Class<?>> allowedPageableTypes=QueryExecutionConverters.getAllowedPageableTypes(); @AT@ 10758 @LENGTH@ 73
---------INS SimpleName@@allowedPageableTypes @TO@ VariableDeclarationFragment@@allowedPageableTypes=QueryExecutionConverters.getAllowedPageableTypes() @AT@ 10758 @LENGTH@ 20
---------INS MethodInvocation@@QueryExecutionConverters.getAllowedPageableTypes() @TO@ VariableDeclarationFragment@@allowedPageableTypes=QueryExecutionConverters.getAllowedPageableTypes() @AT@ 10781 @LENGTH@ 50
------------INS SimpleName@@Name:QueryExecutionConverters @TO@ MethodInvocation@@QueryExecutionConverters.getAllowedPageableTypes() @AT@ 10781 @LENGTH@ 24
------------INS SimpleName@@MethodName:getAllowedPageableTypes:[] @TO@ MethodInvocation@@QueryExecutionConverters.getAllowedPageableTypes() @AT@ 10806 @LENGTH@ 25
---INS ExpressionStatement@@MethodInvocation:assertThat(allowedPageableTypes,hasItem(Page.class)) @TO@ MethodDeclaration@@public, void, MethodName:registersAllowedPageabletypes,  @AT@ 10835 @LENGTH@ 54
------INS MethodInvocation@@assertThat(allowedPageableTypes,hasItem(Page.class)) @TO@ ExpressionStatement@@MethodInvocation:assertThat(allowedPageableTypes,hasItem(Page.class)) @AT@ 10835 @LENGTH@ 53
---------INS SimpleName@@MethodName:assertThat:[allowedPageableTypes, hasItem(Page.class)] @TO@ MethodInvocation@@assertThat(allowedPageableTypes,hasItem(Page.class)) @AT@ 10835 @LENGTH@ 53
------------INS SimpleName@@allowedPageableTypes @TO@ SimpleName@@MethodName:assertThat:[allowedPageableTypes, hasItem(Page.class)] @AT@ 10846 @LENGTH@ 20
------------INS MethodInvocation@@hasItem(Page.class) @TO@ SimpleName@@MethodName:assertThat:[allowedPageableTypes, hasItem(Page.class)] @AT@ 10868 @LENGTH@ 19
---------------INS SimpleName@@MethodName:hasItem:[Page.class] @TO@ MethodInvocation@@hasItem(Page.class) @AT@ 10868 @LENGTH@ 19
------------------INS TypeLiteral@@Page.class @TO@ SimpleName@@MethodName:hasItem:[Page.class] @AT@ 10876 @LENGTH@ 10
---------------INS SimpleName@@MethodName:hasItem:[Page.class] @TO@ MethodInvocation@@hasItem(Page.class) @AT@ 10868 @LENGTH@ 19
------------------INS TypeLiteral@@Page.class @TO@ SimpleName@@MethodName:hasItem:[Page.class] @AT@ 10876 @LENGTH@ 10
---INS ExpressionStatement@@MethodInvocation:assertThat(allowedPageableTypes,hasItem(Slice.class)) @TO@ MethodDeclaration@@public, void, MethodName:registersAllowedPageabletypes,  @AT@ 10892 @LENGTH@ 55
------INS MethodInvocation@@assertThat(allowedPageableTypes,hasItem(Slice.class)) @TO@ ExpressionStatement@@MethodInvocation:assertThat(allowedPageableTypes,hasItem(Slice.class)) @AT@ 10892 @LENGTH@ 54
---------INS SimpleName@@MethodName:assertThat:[allowedPageableTypes, hasItem(Slice.class)] @TO@ MethodInvocation@@assertThat(allowedPageableTypes,hasItem(Slice.class)) @AT@ 10892 @LENGTH@ 54
------------INS SimpleName@@allowedPageableTypes @TO@ SimpleName@@MethodName:assertThat:[allowedPageableTypes, hasItem(Slice.class)] @AT@ 10903 @LENGTH@ 20
------------INS MethodInvocation@@hasItem(Slice.class) @TO@ SimpleName@@MethodName:assertThat:[allowedPageableTypes, hasItem(Slice.class)] @AT@ 10925 @LENGTH@ 20
---------------INS SimpleName@@MethodName:hasItem:[Slice.class] @TO@ MethodInvocation@@hasItem(Slice.class) @AT@ 10925 @LENGTH@ 20
------------------INS TypeLiteral@@Slice.class @TO@ SimpleName@@MethodName:hasItem:[Slice.class] @AT@ 10933 @LENGTH@ 11
---------------INS SimpleName@@MethodName:hasItem:[Slice.class] @TO@ MethodInvocation@@hasItem(Slice.class) @AT@ 10925 @LENGTH@ 20
------------------INS TypeLiteral@@Slice.class @TO@ SimpleName@@MethodName:hasItem:[Slice.class] @AT@ 10933 @LENGTH@ 11
---INS ExpressionStatement@@MethodInvocation:assertThat(allowedPageableTypes,hasItem(List.class)) @TO@ MethodDeclaration@@public, void, MethodName:registersAllowedPageabletypes,  @AT@ 10950 @LENGTH@ 54
------INS MethodInvocation@@assertThat(allowedPageableTypes,hasItem(List.class)) @TO@ ExpressionStatement@@MethodInvocation:assertThat(allowedPageableTypes,hasItem(List.class)) @AT@ 10950 @LENGTH@ 53
---------INS SimpleName@@MethodName:assertThat:[allowedPageableTypes, hasItem(List.class)] @TO@ MethodInvocation@@assertThat(allowedPageableTypes,hasItem(List.class)) @AT@ 10950 @LENGTH@ 53
------------INS SimpleName@@allowedPageableTypes @TO@ SimpleName@@MethodName:assertThat:[allowedPageableTypes, hasItem(List.class)] @AT@ 10961 @LENGTH@ 20
------------INS MethodInvocation@@hasItem(List.class) @TO@ SimpleName@@MethodName:assertThat:[allowedPageableTypes, hasItem(List.class)] @AT@ 10983 @LENGTH@ 19
---------------INS SimpleName@@MethodName:hasItem:[List.class] @TO@ MethodInvocation@@hasItem(List.class) @AT@ 10983 @LENGTH@ 19
------------------INS TypeLiteral@@List.class @TO@ SimpleName@@MethodName:hasItem:[List.class] @AT@ 10991 @LENGTH@ 10
---------------INS SimpleName@@MethodName:hasItem:[List.class] @TO@ MethodInvocation@@hasItem(List.class) @AT@ 10983 @LENGTH@ 19
------------------INS TypeLiteral@@List.class @TO@ SimpleName@@MethodName:hasItem:[List.class] @AT@ 10991 @LENGTH@ 10
---INS ExpressionStatement@@MethodInvocation:assertThat(allowedPageableTypes,hasItem(Seq.class)) @TO@ MethodDeclaration@@public, void, MethodName:registersAllowedPageabletypes,  @AT@ 11007 @LENGTH@ 53
------INS MethodInvocation@@assertThat(allowedPageableTypes,hasItem(Seq.class)) @TO@ ExpressionStatement@@MethodInvocation:assertThat(allowedPageableTypes,hasItem(Seq.class)) @AT@ 11007 @LENGTH@ 52
---------INS SimpleName@@MethodName:assertThat:[allowedPageableTypes, hasItem(Seq.class)] @TO@ MethodInvocation@@assertThat(allowedPageableTypes,hasItem(Seq.class)) @AT@ 11007 @LENGTH@ 52
------------INS SimpleName@@allowedPageableTypes @TO@ SimpleName@@MethodName:assertThat:[allowedPageableTypes, hasItem(Seq.class)] @AT@ 11018 @LENGTH@ 20
------------INS MethodInvocation@@hasItem(Seq.class) @TO@ SimpleName@@MethodName:assertThat:[allowedPageableTypes, hasItem(Seq.class)] @AT@ 11040 @LENGTH@ 18
---------------INS SimpleName@@MethodName:hasItem:[Seq.class] @TO@ MethodInvocation@@hasItem(Seq.class) @AT@ 11040 @LENGTH@ 18
------------------INS TypeLiteral@@Seq.class @TO@ SimpleName@@MethodName:hasItem:[Seq.class] @AT@ 11048 @LENGTH@ 9


INS MethodDeclaration@@IllegalStateException, MethodName:invalidCredentialSourceSupplier, @Cause Throwable cause,  @TO@ TypeDeclaration@@[@MessageLogger(projectCode="WFLYJCA",length=4), public]ConnectorLogger, [BasicLogger] @AT@ 36525 @LENGTH@ 56
---INS SimpleType@@IllegalStateException @TO@ MethodDeclaration@@IllegalStateException, MethodName:invalidCredentialSourceSupplier, @Cause Throwable cause,  @AT@ 36503 @LENGTH@ 21
---INS SimpleName@@MethodName:invalidCredentialSourceSupplier @TO@ MethodDeclaration@@IllegalStateException, MethodName:invalidCredentialSourceSupplier, @Cause Throwable cause,  @AT@ 36525 @LENGTH@ 31
---INS SingleVariableDeclaration@@@Cause Throwable cause @TO@ MethodDeclaration@@IllegalStateException, MethodName:invalidCredentialSourceSupplier, @Cause Throwable cause,  @AT@ 36557 @LENGTH@ 22
------INS SimpleType@@Throwable @TO@ SingleVariableDeclaration@@@Cause Throwable cause @AT@ 36564 @LENGTH@ 9
------INS SimpleName@@cause @TO@ SingleVariableDeclaration@@@Cause Throwable cause @AT@ 36574 @LENGTH@ 5


UPD MethodDeclaration@@public, void, MethodName:forceReservedMemory, int allocationSize, int count,  @TO@ public, long, MethodName:forceReservedMemory, int allocationSize, int count,  @AT@ 4559 @LENGTH@ 277
---UPD PrimitiveType@@void @TO@ long @AT@ 4566 @LENGTH@ 4
---UPD IfStatement@@if (evictor == null) return; @TO@ if (evictor == null) return 0; @AT@ 4628 @LENGTH@ 28
------UPD Block@@ThenBody:return; @TO@ ThenBody:return 0; @AT@ 4649 @LENGTH@ 7
---------UPD ReturnStatement@@ @TO@ NumberLiteral:0 @AT@ 4649 @LENGTH@ 7
------------INS NumberLiteral@@0 @TO@ ReturnStatement@@ @AT@ 4656 @LENGTH@ 1
---DEL WhileStatement@@while (count > 0) {  int evictedCount=evictor.tryEvictContiguousData(allocationSize,count);  if (evictedCount == 0)   return;  count-=evictedCount;} @AT@ 4661 @LENGTH@ 171
------DEL InfixExpression@@count > 0 @AT@ 4668 @LENGTH@ 9
---------DEL SimpleName@@count @AT@ 4668 @LENGTH@ 5
---------DEL Operator@@> @AT@ 4673 @LENGTH@ 1
---------DEL NumberLiteral@@0 @AT@ 4676 @LENGTH@ 1
------DEL Block@@WhileBody:{  int evictedCount=evictor.tryEvictContiguousData(allocationSize,count);  if (evictedCount == 0)   return;  count-=evictedCount;} @AT@ 4679 @LENGTH@ 153
---------DEL VariableDeclarationStatement@@int evictedCount=evictor.tryEvictContiguousData(allocationSize,count); @AT@ 4687 @LENGTH@ 73
------------DEL PrimitiveType@@int @AT@ 4687 @LENGTH@ 3
------------DEL VariableDeclarationFragment@@evictedCount=evictor.tryEvictContiguousData(allocationSize,count) @AT@ 4691 @LENGTH@ 68
---------------DEL SimpleName@@evictedCount @AT@ 4691 @LENGTH@ 12
---------DEL IfStatement@@if (evictedCount == 0) return; @AT@ 4767 @LENGTH@ 30
------------DEL InfixExpression@@evictedCount == 0 @AT@ 4771 @LENGTH@ 17
---------------DEL SimpleName@@evictedCount @AT@ 4771 @LENGTH@ 12
---------------DEL Operator@@== @AT@ 4783 @LENGTH@ 2
---------------DEL NumberLiteral@@0 @AT@ 4787 @LENGTH@ 1
------------DEL Block@@ThenBody:return; @AT@ 4790 @LENGTH@ 7
---------------DEL ReturnStatement@@ @AT@ 4790 @LENGTH@ 7
---------DEL ExpressionStatement@@Assignment:count-=evictedCount @AT@ 4804 @LENGTH@ 22
------------DEL Assignment@@count-=evictedCount @AT@ 4804 @LENGTH@ 21
---------------DEL SimpleName@@count @AT@ 4804 @LENGTH@ 5
---------------DEL Operator@@-= @AT@ 4809 @LENGTH@ 2
---------------DEL SimpleName@@evictedCount @AT@ 4813 @LENGTH@ 12
---INS ReturnStatement@@MethodInvocation:evictor.tryEvictContiguousData(allocationSize,count) @TO@ MethodDeclaration@@public, void, MethodName:forceReservedMemory, int allocationSize, int count,  @AT@ 4663 @LENGTH@ 61
------MOV MethodInvocation@@evictor.tryEvictContiguousData(allocationSize,count) @TO@ ReturnStatement@@MethodInvocation:evictor.tryEvictContiguousData(allocationSize,count) @AT@ 4706 @LENGTH@ 53


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<HazelcastMultimapComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<HazelcastMultimapComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5652 @LENGTH@ 350
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 5656 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5656 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  ComponentCustomizer<HazelcastMultimapComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ ThenBody:{  for (  ComponentCustomizer<HazelcastMultimapComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5712 @LENGTH@ 290
------UPD EnhancedForStatement@@for (ComponentCustomizer<HazelcastMultimapComponent> configurer : customizers) {  LOGGER.debug("Configure component {}, with configurer {}",component,configurer);  configurer.customize(component);} @TO@ for (ComponentCustomizer<HazelcastMultimapComponent> customizer : customizers) {  LOGGER.debug("Configure component {}, with customizer {}",component,customizer);  customizer.customize(component);} @AT@ 5726 @LENGTH@ 266
---------UPD SingleVariableDeclaration@@ComponentCustomizer<HazelcastMultimapComponent> configurer @TO@ ComponentCustomizer<HazelcastMultimapComponent> customizer @AT@ 5731 @LENGTH@ 58
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5779 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5823 @LENGTH@ 106
------------UPD MethodInvocation@@LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5823 @LENGTH@ 105
---------------UPD SimpleName@@MethodName:debug:["Configure component {}, with configurer {}", component, configurer] @TO@ MethodName:debug:["Configure component {}, with customizer {}", component, customizer] @AT@ 5830 @LENGTH@ 98
------------------UPD StringLiteral@@"Configure component {}, with configurer {}" @TO@ "Configure component {}, with customizer {}" @AT@ 5836 @LENGTH@ 44
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5917 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(component) @TO@ MethodInvocation:customizer.customize(component) @AT@ 5946 @LENGTH@ 32
------------UPD MethodInvocation@@configurer.customize(component) @TO@ customizer.customize(component) @AT@ 5946 @LENGTH@ 31
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5946 @LENGTH@ 10


UPD ReturnStatement@@MethodInvocation:multiHashOrdered(parentHashCode(),8527,trustManagerFactory.hashCode()) @TO@ MethodInvocation:multiHashUnordered(parentHashCode(),8527,trustManagerFactory.hashCode()) @AT@ 3719 @LENGTH@ 80
---UPD MethodInvocation@@multiHashOrdered(parentHashCode(),8527,trustManagerFactory.hashCode()) @TO@ multiHashUnordered(parentHashCode(),8527,trustManagerFactory.hashCode()) @AT@ 3726 @LENGTH@ 72
------UPD SimpleName@@MethodName:multiHashOrdered:[parentHashCode(), 8527, trustManagerFactory.hashCode()] @TO@ MethodName:multiHashUnordered:[parentHashCode(), 8527, trustManagerFactory.hashCode()] @AT@ 3726 @LENGTH@ 72


INS FieldDeclaration@@private, static, final, Logger, [LOG=LoggerFactory.getLogger(BucketingSortingOpProcFactory.class)] @TO@ TypeDeclaration@@[public]BucketingSortingOpProcFactory,  @AT@ 2567 @LENGTH@ 95
---INS Modifier@@private @TO@ FieldDeclaration@@private, static, final, Logger, [LOG=LoggerFactory.getLogger(BucketingSortingOpProcFactory.class)] @AT@ 2567 @LENGTH@ 7
---INS Modifier@@static @TO@ FieldDeclaration@@private, static, final, Logger, [LOG=LoggerFactory.getLogger(BucketingSortingOpProcFactory.class)] @AT@ 2575 @LENGTH@ 6
---INS Modifier@@final @TO@ FieldDeclaration@@private, static, final, Logger, [LOG=LoggerFactory.getLogger(BucketingSortingOpProcFactory.class)] @AT@ 2582 @LENGTH@ 5
---INS SimpleType@@Logger @TO@ FieldDeclaration@@private, static, final, Logger, [LOG=LoggerFactory.getLogger(BucketingSortingOpProcFactory.class)] @AT@ 2588 @LENGTH@ 6
---INS VariableDeclarationFragment@@LOG=LoggerFactory.getLogger(BucketingSortingOpProcFactory.class) @TO@ FieldDeclaration@@private, static, final, Logger, [LOG=LoggerFactory.getLogger(BucketingSortingOpProcFactory.class)] @AT@ 2595 @LENGTH@ 66
------INS SimpleName@@LOG @TO@ VariableDeclarationFragment@@LOG=LoggerFactory.getLogger(BucketingSortingOpProcFactory.class) @AT@ 2595 @LENGTH@ 3
------INS MethodInvocation@@LoggerFactory.getLogger(BucketingSortingOpProcFactory.class) @TO@ VariableDeclarationFragment@@LOG=LoggerFactory.getLogger(BucketingSortingOpProcFactory.class) @AT@ 2601 @LENGTH@ 60
---------INS SimpleName@@Name:LoggerFactory @TO@ MethodInvocation@@LoggerFactory.getLogger(BucketingSortingOpProcFactory.class) @AT@ 2601 @LENGTH@ 13
---------INS SimpleName@@MethodName:getLogger:[BucketingSortingOpProcFactory.class] @TO@ MethodInvocation@@LoggerFactory.getLogger(BucketingSortingOpProcFactory.class) @AT@ 2615 @LENGTH@ 46
------------INS TypeLiteral@@BucketingSortingOpProcFactory.class @TO@ SimpleName@@MethodName:getLogger:[BucketingSortingOpProcFactory.class] @AT@ 2625 @LENGTH@ 35


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  LanguageCustomizer<JXPathLanguage> configurer : customizers) {    LOGGER.debug("Configure language {}, with configurer {}",language,configurer);    configurer.customize(language);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  LanguageCustomizer<JXPathLanguage> customizer : customizers) {    LOGGER.debug("Configure language {}, with customizer {}",language,customizer);    customizer.customize(language);  }} @AT@ 4725 @LENGTH@ 334
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 4729 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 4729 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  LanguageCustomizer<JXPathLanguage> configurer : customizers) {    LOGGER.debug("Configure language {}, with configurer {}",language,configurer);    configurer.customize(language);  }} @TO@ ThenBody:{  for (  LanguageCustomizer<JXPathLanguage> customizer : customizers) {    LOGGER.debug("Configure language {}, with customizer {}",language,customizer);    customizer.customize(language);  }} @AT@ 4785 @LENGTH@ 274
------UPD EnhancedForStatement@@for (LanguageCustomizer<JXPathLanguage> configurer : customizers) {  LOGGER.debug("Configure language {}, with configurer {}",language,configurer);  configurer.customize(language);} @TO@ for (LanguageCustomizer<JXPathLanguage> customizer : customizers) {  LOGGER.debug("Configure language {}, with customizer {}",language,customizer);  customizer.customize(language);} @AT@ 4799 @LENGTH@ 250
---------UPD SingleVariableDeclaration@@LanguageCustomizer<JXPathLanguage> configurer @TO@ LanguageCustomizer<JXPathLanguage> customizer @AT@ 4804 @LENGTH@ 45
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 4839 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure language {}, with configurer {}",language,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure language {}, with customizer {}",language,customizer) @AT@ 4883 @LENGTH@ 104
------------UPD MethodInvocation@@LOGGER.debug("Configure language {}, with configurer {}",language,configurer) @TO@ LOGGER.debug("Configure language {}, with customizer {}",language,customizer) @AT@ 4883 @LENGTH@ 103
---------------UPD SimpleName@@MethodName:debug:["Configure language {}, with configurer {}", language, configurer] @TO@ MethodName:debug:["Configure language {}, with customizer {}", language, customizer] @AT@ 4890 @LENGTH@ 96
------------------UPD StringLiteral@@"Configure language {}, with configurer {}" @TO@ "Configure language {}, with customizer {}" @AT@ 4896 @LENGTH@ 43
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 4975 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(language) @TO@ MethodInvocation:customizer.customize(language) @AT@ 5004 @LENGTH@ 31
------------UPD MethodInvocation@@configurer.customize(language) @TO@ customizer.customize(language) @AT@ 5004 @LENGTH@ 30
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5004 @LENGTH@ 10


UPD FieldDeclaration@@private, boolean, [enabled=false] @TO@ private, boolean, [enabled] @AT@ 1233 @LENGTH@ 32
---UPD VariableDeclarationFragment@@enabled=false @TO@ enabled @AT@ 1249 @LENGTH@ 15
------DEL BooleanLiteral@@false @AT@ 1259 @LENGTH@ 5


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<DataFormatComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<DataFormatComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5497 @LENGTH@ 343
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 5501 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5501 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  ComponentCustomizer<DataFormatComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ ThenBody:{  for (  ComponentCustomizer<DataFormatComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5557 @LENGTH@ 283
------UPD EnhancedForStatement@@for (ComponentCustomizer<DataFormatComponent> configurer : customizers) {  LOGGER.debug("Configure component {}, with configurer {}",component,configurer);  configurer.customize(component);} @TO@ for (ComponentCustomizer<DataFormatComponent> customizer : customizers) {  LOGGER.debug("Configure component {}, with customizer {}",component,customizer);  customizer.customize(component);} @AT@ 5571 @LENGTH@ 259
---------UPD SingleVariableDeclaration@@ComponentCustomizer<DataFormatComponent> configurer @TO@ ComponentCustomizer<DataFormatComponent> customizer @AT@ 5576 @LENGTH@ 51
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5617 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5661 @LENGTH@ 106
------------UPD MethodInvocation@@LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5661 @LENGTH@ 105
---------------UPD SimpleName@@MethodName:debug:["Configure component {}, with configurer {}", component, configurer] @TO@ MethodName:debug:["Configure component {}, with customizer {}", component, customizer] @AT@ 5668 @LENGTH@ 98
------------------UPD StringLiteral@@"Configure component {}, with configurer {}" @TO@ "Configure component {}, with customizer {}" @AT@ 5674 @LENGTH@ 44
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5755 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(component) @TO@ MethodInvocation:customizer.customize(component) @AT@ 5784 @LENGTH@ 32
------------UPD MethodInvocation@@configurer.customize(component) @TO@ customizer.customize(component) @AT@ 5784 @LENGTH@ 31
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5784 @LENGTH@ 10


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<ZooKeeperComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<ZooKeeperComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5480 @LENGTH@ 342
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 5484 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5484 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  ComponentCustomizer<ZooKeeperComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ ThenBody:{  for (  ComponentCustomizer<ZooKeeperComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5540 @LENGTH@ 282
------UPD EnhancedForStatement@@for (ComponentCustomizer<ZooKeeperComponent> configurer : customizers) {  LOGGER.debug("Configure component {}, with configurer {}",component,configurer);  configurer.customize(component);} @TO@ for (ComponentCustomizer<ZooKeeperComponent> customizer : customizers) {  LOGGER.debug("Configure component {}, with customizer {}",component,customizer);  customizer.customize(component);} @AT@ 5554 @LENGTH@ 258
---------UPD SingleVariableDeclaration@@ComponentCustomizer<ZooKeeperComponent> configurer @TO@ ComponentCustomizer<ZooKeeperComponent> customizer @AT@ 5559 @LENGTH@ 50
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5599 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5643 @LENGTH@ 106
------------UPD MethodInvocation@@LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5643 @LENGTH@ 105
---------------UPD SimpleName@@MethodName:debug:["Configure component {}, with configurer {}", component, configurer] @TO@ MethodName:debug:["Configure component {}, with customizer {}", component, customizer] @AT@ 5650 @LENGTH@ 98
------------------UPD StringLiteral@@"Configure component {}, with configurer {}" @TO@ "Configure component {}, with customizer {}" @AT@ 5656 @LENGTH@ 44
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5737 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(component) @TO@ MethodInvocation:customizer.customize(component) @AT@ 5766 @LENGTH@ 32
------------UPD MethodInvocation@@configurer.customize(component) @TO@ customizer.customize(component) @AT@ 5766 @LENGTH@ 31
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5766 @LENGTH@ 10


UPD TypeDeclaration@@[@MarshalDMR, @WildFlyExtension(module="org.wildfly.extension.undertow"), public]UndertowFraction, Undertow<UndertowFraction>[Fraction] @TO@ [@MarshalDMR, @WildFlyExtension(module="org.wildfly.extension.undertow"), @DeploymentModule(name="org.jboss.modules"), public]UndertowFraction, Undertow<UndertowFraction>[Fraction] @AT@ 2227 @LENGTH@ 8291
---INS NormalAnnotation@@@DeploymentModule(name="org.jboss.modules") @TO@ TypeDeclaration@@[@MarshalDMR, @WildFlyExtension(module="org.wildfly.extension.undertow"), public]UndertowFraction, Undertow<UndertowFraction>[Fraction] @AT@ 2363 @LENGTH@ 45


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled(); @AT@ 5415 @LENGTH@ 160
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5423 @LENGTH@ 151
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5423 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5440 @LENGTH@ 134
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 5440 @LENGTH@ 64
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5440 @LENGTH@ 35
---------UPD MethodInvocation@@componentConfiguration.getConfigurer().isEnabled() @TO@ componentConfiguration.getCustomizer().isEnabled() @AT@ 5524 @LENGTH@ 50
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5524 @LENGTH@ 38


UPD TypeDeclaration@@[@DirtiesContext, @RunWith(SpringRunner.class), @SpringBootApplication, @SpringBootTest(classes={CamelAutoConfiguration.class,CamelCloudAutoConfiguration.class,CamelCloudServiceCallConfiguration.class},properties={"camel.cloud.load-balancer.enabled=false","camel.cloud.service-discovery.services[custom-svc-list]=localhost:9090,localhost:9091,localhost:9092","camel.cloud.service-filter.blacklist[custom-svc-list]=localhost:9091","ribbon.enabled=false","debug=false"}), public]CamelCloudServiceCallTest,  @TO@ [@DirtiesContext, @RunWith(SpringRunner.class), @SpringBootApplication, @SpringBootTest(classes={CamelAutoConfiguration.class,CamelCloudAutoConfiguration.class,CamelCloudServiceCallRoutesAutoConfiguration.class},properties={"camel.cloud.load-balancer.enabled=false","camel.cloud.service-discovery.services[custom-svc-list]=localhost:9090,localhost:9091,localhost:9092","camel.cloud.service-filter.blacklist[custom-svc-list]=localhost:9091","ribbon.enabled=false","debug=false"}), public]CamelCloudServiceCallTest,  @AT@ 1342 @LENGTH@ 918
---UPD NormalAnnotation@@@SpringBootTest(classes={CamelAutoConfiguration.class,CamelCloudAutoConfiguration.class,CamelCloudServiceCallConfiguration.class},properties={"camel.cloud.load-balancer.enabled=false","camel.cloud.service-discovery.services[custom-svc-list]=localhost:9090,localhost:9091,localhost:9092","camel.cloud.service-filter.blacklist[custom-svc-list]=localhost:9091","ribbon.enabled=false","debug=false"}) @TO@ @SpringBootTest(classes={CamelAutoConfiguration.class,CamelCloudAutoConfiguration.class,CamelCloudServiceCallRoutesAutoConfiguration.class},properties={"camel.cloud.load-balancer.enabled=false","camel.cloud.service-discovery.services[custom-svc-list]=localhost:9090,localhost:9091,localhost:9092","camel.cloud.service-filter.blacklist[custom-svc-list]=localhost:9091","ribbon.enabled=false","debug=false"}) @AT@ 1410 @LENGTH@ 493


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled(); @AT@ 5361 @LENGTH@ 160
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5369 @LENGTH@ 151
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5369 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5386 @LENGTH@ 134
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 5386 @LENGTH@ 64
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5386 @LENGTH@ 35
---------UPD MethodInvocation@@componentConfiguration.getConfigurer().isEnabled() @TO@ componentConfiguration.getCustomizer().isEnabled() @AT@ 5470 @LENGTH@ 50
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5470 @LENGTH@ 38


DEL ThrowStatement@@ClassInstanceCreation:new UnsupportedOperationException("not implemented yet") @AT@ 11230 @LENGTH@ 63
---DEL ClassInstanceCreation@@UnsupportedOperationException["not implemented yet"] @AT@ 11236 @LENGTH@ 56
------DEL New@@new @AT@ 11236 @LENGTH@ 3
------DEL SimpleType@@UnsupportedOperationException @AT@ 11240 @LENGTH@ 29
------DEL StringLiteral@@"not implemented yet" @AT@ 11270 @LENGTH@ 21


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<NovaComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<NovaComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5435 @LENGTH@ 337
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 5439 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5439 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  ComponentCustomizer<NovaComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ ThenBody:{  for (  ComponentCustomizer<NovaComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5495 @LENGTH@ 277
------UPD EnhancedForStatement@@for (ComponentCustomizer<NovaComponent> configurer : customizers) {  LOGGER.debug("Configure component {}, with configurer {}",component,configurer);  configurer.customize(component);} @TO@ for (ComponentCustomizer<NovaComponent> customizer : customizers) {  LOGGER.debug("Configure component {}, with customizer {}",component,customizer);  customizer.customize(component);} @AT@ 5509 @LENGTH@ 253
---------UPD SingleVariableDeclaration@@ComponentCustomizer<NovaComponent> configurer @TO@ ComponentCustomizer<NovaComponent> customizer @AT@ 5514 @LENGTH@ 45
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5549 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5593 @LENGTH@ 106
------------UPD MethodInvocation@@LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5593 @LENGTH@ 105
---------------UPD SimpleName@@MethodName:debug:["Configure component {}, with configurer {}", component, configurer] @TO@ MethodName:debug:["Configure component {}, with customizer {}", component, customizer] @AT@ 5600 @LENGTH@ 98
------------------UPD StringLiteral@@"Configure component {}, with configurer {}" @TO@ "Configure component {}, with customizer {}" @AT@ 5606 @LENGTH@ 44
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5687 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(component) @TO@ MethodInvocation:customizer.customize(component) @AT@ 5716 @LENGTH@ 32
------------UPD MethodInvocation@@configurer.customize(component) @TO@ customizer.customize(component) @AT@ 5716 @LENGTH@ 31
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5716 @LENGTH@ 10


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<NeutronComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<NeutronComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5486 @LENGTH@ 340
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 5490 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5490 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  ComponentCustomizer<NeutronComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ ThenBody:{  for (  ComponentCustomizer<NeutronComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5546 @LENGTH@ 280
------UPD EnhancedForStatement@@for (ComponentCustomizer<NeutronComponent> configurer : customizers) {  LOGGER.debug("Configure component {}, with configurer {}",component,configurer);  configurer.customize(component);} @TO@ for (ComponentCustomizer<NeutronComponent> customizer : customizers) {  LOGGER.debug("Configure component {}, with customizer {}",component,customizer);  customizer.customize(component);} @AT@ 5560 @LENGTH@ 256
---------UPD SingleVariableDeclaration@@ComponentCustomizer<NeutronComponent> configurer @TO@ ComponentCustomizer<NeutronComponent> customizer @AT@ 5565 @LENGTH@ 48
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5603 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5647 @LENGTH@ 106
------------UPD MethodInvocation@@LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5647 @LENGTH@ 105
---------------UPD SimpleName@@MethodName:debug:["Configure component {}, with configurer {}", component, configurer] @TO@ MethodName:debug:["Configure component {}, with customizer {}", component, customizer] @AT@ 5654 @LENGTH@ 98
------------------UPD StringLiteral@@"Configure component {}, with configurer {}" @TO@ "Configure component {}, with customizer {}" @AT@ 5660 @LENGTH@ 44
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5741 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(component) @TO@ MethodInvocation:customizer.customize(component) @AT@ 5770 @LENGTH@ 32
------------UPD MethodInvocation@@configurer.customize(component) @TO@ customizer.customize(component) @AT@ 5770 @LENGTH@ 31
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5770 @LENGTH@ 10


UPD ReturnStatement@@CastExpression:(Iterator<T>)Collections.emptyList().iterator() @TO@ MethodInvocation:new ArrayList<T>().iterator() @AT@ 1406 @LENGTH@ 56
---DEL CastExpression@@(Iterator<T>)Collections.emptyList().iterator() @AT@ 1413 @LENGTH@ 48
------DEL ParameterizedType@@Iterator<T> @AT@ 1414 @LENGTH@ 11
------DEL MethodInvocation@@Collections.emptyList().iterator() @AT@ 1427 @LENGTH@ 34
---------DEL MethodInvocation@@MethodName:emptyList:[] @AT@ 1427 @LENGTH@ 23
---------DEL SimpleName@@Name:Collections @AT@ 1427 @LENGTH@ 11
---INS MethodInvocation@@new ArrayList<T>().iterator() @TO@ ReturnStatement@@CastExpression:(Iterator<T>)Collections.emptyList().iterator() @AT@ 1464 @LENGTH@ 29
------MOV SimpleName@@MethodName:iterator:[] @TO@ MethodInvocation@@new ArrayList<T>().iterator() @AT@ 1451 @LENGTH@ 10
------INS ClassInstanceCreation@@ArrayList<T>[] @TO@ MethodInvocation@@new ArrayList<T>().iterator() @AT@ 1464 @LENGTH@ 18
---------INS New@@new @TO@ ClassInstanceCreation@@ArrayList<T>[] @AT@ 1464 @LENGTH@ 3
---------INS ParameterizedType@@ArrayList<T> @TO@ ClassInstanceCreation@@ArrayList<T>[] @AT@ 1468 @LENGTH@ 12
------------MOV SimpleType@@Iterator @TO@ ParameterizedType@@ArrayList<T> @AT@ 1414 @LENGTH@ 8
------------MOV SimpleType@@T @TO@ ParameterizedType@@ArrayList<T> @AT@ 1423 @LENGTH@ 1


UPD TypeDeclaration@@[@SuppressWarnings("unused"), public]ExampleSpecificationAccessorUnitTests,  @TO@ [public]ExampleSpecificationAccessorUnitTests,  @AT@ 1764 @LENGTH@ 8596
---DEL SingleMemberAnnotation@@@SuppressWarnings("unused") @AT@ 1764 @LENGTH@ 27


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<BeanstalkComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<BeanstalkComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5480 @LENGTH@ 342
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 5484 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5484 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  ComponentCustomizer<BeanstalkComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ ThenBody:{  for (  ComponentCustomizer<BeanstalkComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5540 @LENGTH@ 282
------UPD EnhancedForStatement@@for (ComponentCustomizer<BeanstalkComponent> configurer : customizers) {  LOGGER.debug("Configure component {}, with configurer {}",component,configurer);  configurer.customize(component);} @TO@ for (ComponentCustomizer<BeanstalkComponent> customizer : customizers) {  LOGGER.debug("Configure component {}, with customizer {}",component,customizer);  customizer.customize(component);} @AT@ 5554 @LENGTH@ 258
---------UPD SingleVariableDeclaration@@ComponentCustomizer<BeanstalkComponent> configurer @TO@ ComponentCustomizer<BeanstalkComponent> customizer @AT@ 5559 @LENGTH@ 50
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5599 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5643 @LENGTH@ 106
------------UPD MethodInvocation@@LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5643 @LENGTH@ 105
---------------UPD SimpleName@@MethodName:debug:["Configure component {}, with configurer {}", component, configurer] @TO@ MethodName:debug:["Configure component {}, with customizer {}", component, customizer] @AT@ 5650 @LENGTH@ 98
------------------UPD StringLiteral@@"Configure component {}, with configurer {}" @TO@ "Configure component {}, with customizer {}" @AT@ 5656 @LENGTH@ 44
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5737 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(component) @TO@ MethodInvocation:customizer.customize(component) @AT@ 5766 @LENGTH@ 32
------------UPD MethodInvocation@@configurer.customize(component) @TO@ customizer.customize(component) @AT@ 5766 @LENGTH@ 31
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5766 @LENGTH@ 10


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  DataFormatCustomizer<TarFileDataFormat> configurer : customizers) {    LOGGER.debug("Configure dataformat {}, with configurer {}",dataformat,configurer);    configurer.customize(dataformat);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  DataFormatCustomizer<TarFileDataFormat> customizer : customizers) {    LOGGER.debug("Configure dataformat {}, with customizer {}",dataformat,customizer);    customizer.customize(dataformat);  }} @AT@ 5349 @LENGTH@ 426
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 5353 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5353 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  DataFormatCustomizer<TarFileDataFormat> configurer : customizers) {    LOGGER.debug("Configure dataformat {}, with configurer {}",dataformat,configurer);    configurer.customize(dataformat);  }} @TO@ ThenBody:{  for (  DataFormatCustomizer<TarFileDataFormat> customizer : customizers) {    LOGGER.debug("Configure dataformat {}, with customizer {}",dataformat,customizer);    customizer.customize(dataformat);  }} @AT@ 5409 @LENGTH@ 366
------UPD EnhancedForStatement@@for (DataFormatCustomizer<TarFileDataFormat> configurer : customizers) {  LOGGER.debug("Configure dataformat {}, with configurer {}",dataformat,configurer);  configurer.customize(dataformat);} @TO@ for (DataFormatCustomizer<TarFileDataFormat> customizer : customizers) {  LOGGER.debug("Configure dataformat {}, with customizer {}",dataformat,customizer);  customizer.customize(dataformat);} @AT@ 5431 @LENGTH@ 326
---------UPD SingleVariableDeclaration@@DataFormatCustomizer<TarFileDataFormat> configurer @TO@ DataFormatCustomizer<TarFileDataFormat> customizer @AT@ 5436 @LENGTH@ 50
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5476 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure dataformat {}, with configurer {}",dataformat,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure dataformat {}, with customizer {}",dataformat,customizer) @AT@ 5528 @LENGTH@ 149
------------UPD MethodInvocation@@LOGGER.debug("Configure dataformat {}, with configurer {}",dataformat,configurer) @TO@ LOGGER.debug("Configure dataformat {}, with customizer {}",dataformat,customizer) @AT@ 5528 @LENGTH@ 148
---------------UPD SimpleName@@MethodName:debug:["Configure dataformat {}, with configurer {}", dataformat, configurer] @TO@ MethodName:debug:["Configure dataformat {}, with customizer {}", dataformat, customizer] @AT@ 5535 @LENGTH@ 141
------------------UPD StringLiteral@@"Configure dataformat {}, with configurer {}" @TO@ "Configure dataformat {}, with customizer {}" @AT@ 5574 @LENGTH@ 45
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5665 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(dataformat) @TO@ MethodInvocation:customizer.customize(dataformat) @AT@ 5702 @LENGTH@ 33
------------UPD MethodInvocation@@configurer.customize(dataformat) @TO@ customizer.customize(dataformat) @AT@ 5702 @LENGTH@ 32
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5702 @LENGTH@ 10


UPD EnhancedForStatement@@for (ConnectionFactory connectionFactory : this.nodeFactories.values()) {  ((DisposableBean)connectionFactory).destroy();} @TO@ for (ConnectionFactory connectionFactory : this.nodeFactories.values()) {  if (connectionFactory instanceof DisposableBean) {    ((DisposableBean)connectionFactory).destroy();  }} @AT@ 13728 @LENGTH@ 128
---INS IfStatement@@if (connectionFactory instanceof DisposableBean) {  ((DisposableBean)connectionFactory).destroy();} @TO@ EnhancedForStatement@@for (ConnectionFactory connectionFactory : this.nodeFactories.values()) {  ((DisposableBean)connectionFactory).destroy();} @AT@ 13805 @LENGTH@ 107
------INS InstanceofExpression@@connectionFactory instanceof DisposableBean @TO@ IfStatement@@if (connectionFactory instanceof DisposableBean) {  ((DisposableBean)connectionFactory).destroy();} @AT@ 13809 @LENGTH@ 43
---------INS SimpleName@@connectionFactory @TO@ InstanceofExpression@@connectionFactory instanceof DisposableBean @AT@ 13809 @LENGTH@ 17
---------INS Instanceof@@instanceof @TO@ InstanceofExpression@@connectionFactory instanceof DisposableBean @AT@ 13827 @LENGTH@ 10
---------INS SimpleType@@DisposableBean @TO@ InstanceofExpression@@connectionFactory instanceof DisposableBean @AT@ 13838 @LENGTH@ 14
------INS Block@@ThenBody:{  ((DisposableBean)connectionFactory).destroy();} @TO@ IfStatement@@if (connectionFactory instanceof DisposableBean) {  ((DisposableBean)connectionFactory).destroy();} @AT@ 13854 @LENGTH@ 58
---------MOV ExpressionStatement@@MethodInvocation:((DisposableBean)connectionFactory).destroy() @TO@ Block@@ThenBody:{  ((DisposableBean)connectionFactory).destroy();} @AT@ 13805 @LENGTH@ 47


UPD ReturnStatement@@MethodInvocation:operations.getConverter().read(type,(BasicDBObject)input) @TO@ MethodInvocation:operations.getConverter().read(type,new Document((BasicDBObject)input)) @AT@ 2137 @LENGTH@ 67
---UPD MethodInvocation@@operations.getConverter().read(type,(BasicDBObject)input) @TO@ operations.getConverter().read(type,new Document((BasicDBObject)input)) @AT@ 2144 @LENGTH@ 59
------UPD SimpleName@@MethodName:read:[type, (BasicDBObject)input] @TO@ MethodName:read:[type, new Document((BasicDBObject)input)] @AT@ 2170 @LENGTH@ 33
---------DEL CastExpression@@(BasicDBObject)input @AT@ 2181 @LENGTH@ 21
---------INS ClassInstanceCreation@@Document[(BasicDBObject)input] @TO@ SimpleName@@MethodName:read:[type, (BasicDBObject)input] @AT@ 2216 @LENGTH@ 35
------------INS New@@new @TO@ ClassInstanceCreation@@Document[(BasicDBObject)input] @AT@ 2216 @LENGTH@ 3
------------INS SimpleType@@Document @TO@ ClassInstanceCreation@@Document[(BasicDBObject)input] @AT@ 2220 @LENGTH@ 8
------------INS CastExpression@@(BasicDBObject)input @TO@ ClassInstanceCreation@@Document[(BasicDBObject)input] @AT@ 2229 @LENGTH@ 21
---------------MOV SimpleType@@BasicDBObject @TO@ CastExpression@@(BasicDBObject)input @AT@ 2182 @LENGTH@ 13
---------------MOV SimpleName@@input @TO@ CastExpression@@(BasicDBObject)input @AT@ 2197 @LENGTH@ 5


UPD Block@@ThenBody:{  spelBuilder.append("[size() - 1]");  continue;} @TO@ ThenBody:{  if (spelBuilder.length() > 0) {    spelBuilder.append(".");  }  spelBuilder.append("$[true]");  continue;} @AT@ 2606 @LENGTH@ 60
---UPD ExpressionStatement@@MethodInvocation:spelBuilder.append("[size() - 1]") @TO@ MethodInvocation:spelBuilder.append(".") @AT@ 2612 @LENGTH@ 35
---INS IfStatement@@if (spelBuilder.length() > 0) {  spelBuilder.append(".");} @TO@ Block@@ThenBody:{  spelBuilder.append("[size() - 1]");  continue;} @AT@ 2613 @LENGTH@ 67
------INS InfixExpression@@spelBuilder.length() > 0 @TO@ IfStatement@@if (spelBuilder.length() > 0) {  spelBuilder.append(".");} @AT@ 2617 @LENGTH@ 24
---------INS MethodInvocation@@spelBuilder.length() @TO@ InfixExpression@@spelBuilder.length() > 0 @AT@ 2617 @LENGTH@ 20
------------INS SimpleName@@Name:spelBuilder @TO@ MethodInvocation@@spelBuilder.length() @AT@ 2617 @LENGTH@ 11
------------INS SimpleName@@MethodName:length:[] @TO@ MethodInvocation@@spelBuilder.length() @AT@ 2629 @LENGTH@ 8
---------INS Operator@@> @TO@ InfixExpression@@spelBuilder.length() > 0 @AT@ 2637 @LENGTH@ 1
---------INS NumberLiteral@@0 @TO@ InfixExpression@@spelBuilder.length() > 0 @AT@ 2640 @LENGTH@ 1
------INS Block@@ThenBody:{  spelBuilder.append(".");} @TO@ IfStatement@@if (spelBuilder.length() > 0) {  spelBuilder.append(".");} @AT@ 2643 @LENGTH@ 37
---------MOV ExpressionStatement@@MethodInvocation:spelBuilder.append("[size() - 1]") @TO@ Block@@ThenBody:{  spelBuilder.append(".");} @AT@ 2612 @LENGTH@ 35
------------UPD MethodInvocation@@spelBuilder.append("[size() - 1]") @TO@ spelBuilder.append(".") @AT@ 2612 @LENGTH@ 34
---------------UPD SimpleName@@MethodName:append:["[size() - 1]"] @TO@ MethodName:append:["."] @AT@ 2624 @LENGTH@ 22
------------------UPD StringLiteral@@"[size() - 1]" @TO@ "." @AT@ 2631 @LENGTH@ 14
---INS ExpressionStatement@@MethodInvocation:spelBuilder.append("$[true]") @TO@ Block@@ThenBody:{  spelBuilder.append("[size() - 1]");  continue;} @AT@ 2686 @LENGTH@ 30
------INS MethodInvocation@@spelBuilder.append("$[true]") @TO@ ExpressionStatement@@MethodInvocation:spelBuilder.append("$[true]") @AT@ 2686 @LENGTH@ 29
---------INS SimpleName@@Name:spelBuilder @TO@ MethodInvocation@@spelBuilder.append("$[true]") @AT@ 2686 @LENGTH@ 11
---------INS SimpleName@@MethodName:append:["$[true]"] @TO@ MethodInvocation@@spelBuilder.append("$[true]") @AT@ 2698 @LENGTH@ 17
------------INS StringLiteral@@"$[true]" @TO@ SimpleName@@MethodName:append:["$[true]"] @AT@ 2705 @LENGTH@ 9


UPD IfStatement@@if (processType == ProcessType.DOMAIN_SERVER) {  expectedRunningLines.add(processType + " normal suspended normal");  expectedRutimeConfigLines.add(processType + " normal starting ok");} else {  expectedRutimeConfigLines.add(processType + " normal starting ok");  expectedRunningLines.add(processType + " normal starting normal");} @TO@ if (processType == ProcessType.DOMAIN_SERVER) {  expectedRunningLines.add(processType + " normal starting suspended");  expectedRunningLines.add(processType + " normal suspended normal");  expectedRutimeConfigLines.add(processType + " normal starting ok");} else {  expectedRutimeConfigLines.add(processType + " normal starting ok");  expectedRunningLines.add(processType + " normal starting normal");} @AT@ 7896 @LENGTH@ 417
---UPD Block@@ThenBody:{  expectedRunningLines.add(processType + " normal suspended normal");  expectedRutimeConfigLines.add(processType + " normal starting ok");} @TO@ ThenBody:{  expectedRunningLines.add(processType + " normal starting suspended");  expectedRunningLines.add(processType + " normal suspended normal");  expectedRutimeConfigLines.add(processType + " normal starting ok");} @AT@ 7942 @LENGTH@ 183
------INS ExpressionStatement@@MethodInvocation:expectedRunningLines.add(processType + " normal starting suspended") @TO@ Block@@ThenBody:{  expectedRunningLines.add(processType + " normal suspended normal");  expectedRutimeConfigLines.add(processType + " normal starting ok");} @AT@ 7960 @LENGTH@ 69
---------INS MethodInvocation@@expectedRunningLines.add(processType + " normal starting suspended") @TO@ ExpressionStatement@@MethodInvocation:expectedRunningLines.add(processType + " normal starting suspended") @AT@ 7960 @LENGTH@ 68
------------INS SimpleName@@Name:expectedRunningLines @TO@ MethodInvocation@@expectedRunningLines.add(processType + " normal starting suspended") @AT@ 7960 @LENGTH@ 20
------------INS SimpleName@@MethodName:add:[processType + " normal starting suspended"] @TO@ MethodInvocation@@expectedRunningLines.add(processType + " normal starting suspended") @AT@ 7981 @LENGTH@ 47
---------------INS InfixExpression@@processType + " normal starting suspended" @TO@ SimpleName@@MethodName:add:[processType + " normal starting suspended"] @AT@ 7985 @LENGTH@ 42
------------------INS SimpleName@@processType @TO@ InfixExpression@@processType + " normal starting suspended" @AT@ 7985 @LENGTH@ 11
------------------INS Operator@@+ @TO@ InfixExpression@@processType + " normal starting suspended" @AT@ 7996 @LENGTH@ 1
------------------INS StringLiteral@@" normal starting suspended" @TO@ InfixExpression@@processType + " normal starting suspended" @AT@ 7999 @LENGTH@ 28


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled(); @AT@ 5226 @LENGTH@ 160
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5234 @LENGTH@ 151
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5234 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5251 @LENGTH@ 134
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 5251 @LENGTH@ 64
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5251 @LENGTH@ 35
---------UPD MethodInvocation@@componentConfiguration.getConfigurer().isEnabled() @TO@ componentConfiguration.getCustomizer().isEnabled() @AT@ 5335 @LENGTH@ 50
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5335 @LENGTH@ 38


UPD IfStatement@@if ("~".equals(lastNode)) {  return -1;} @TO@ if (APPEND_CHARACTERS.contains(lastNode)) {  return -1;} @AT@ 5643 @LENGTH@ 45
---UPD MethodInvocation@@"~".equals(lastNode) @TO@ APPEND_CHARACTERS.contains(lastNode) @AT@ 5647 @LENGTH@ 20
------INS SimpleName@@Name:APPEND_CHARACTERS @TO@ MethodInvocation@@"~".equals(lastNode) @AT@ 5647 @LENGTH@ 17
------DEL StringLiteral@@"~" @AT@ 5647 @LENGTH@ 3
------UPD SimpleName@@MethodName:equals:[lastNode] @TO@ MethodName:contains:[lastNode] @AT@ 5651 @LENGTH@ 16


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled(); @AT@ 5260 @LENGTH@ 160
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5268 @LENGTH@ 151
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5268 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5285 @LENGTH@ 134
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 5285 @LENGTH@ 64
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5285 @LENGTH@ 35
---------UPD MethodInvocation@@componentConfiguration.getConfigurer().isEnabled() @TO@ componentConfiguration.getCustomizer().isEnabled() @AT@ 5369 @LENGTH@ 50
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5369 @LENGTH@ 38


INS IfStatement@@if (!ObjectUtils.nullSafeEquals(Pageable.NONE,pageable)) {  this.num=pageable.getOffset() + pageable.getPageSize();  this.skip=pageable.getOffset();} @TO@ MethodDeclaration@@public, NearQuery, MethodName:with, Pageable pageable,  @AT@ 3941 @LENGTH@ 160
---INS PrefixExpression@@!ObjectUtils.nullSafeEquals(Pageable.NONE,pageable) @TO@ IfStatement@@if (!ObjectUtils.nullSafeEquals(Pageable.NONE,pageable)) {  this.num=pageable.getOffset() + pageable.getPageSize();  this.skip=pageable.getOffset();} @AT@ 3944 @LENGTH@ 52
------INS Operator@@! @TO@ PrefixExpression@@!ObjectUtils.nullSafeEquals(Pageable.NONE,pageable) @AT@ 3944 @LENGTH@ 1
------INS MethodInvocation@@ObjectUtils.nullSafeEquals(Pageable.NONE,pageable) @TO@ PrefixExpression@@!ObjectUtils.nullSafeEquals(Pageable.NONE,pageable) @AT@ 3945 @LENGTH@ 51
---------INS SimpleName@@Name:ObjectUtils @TO@ MethodInvocation@@ObjectUtils.nullSafeEquals(Pageable.NONE,pageable) @AT@ 3945 @LENGTH@ 11
---------INS SimpleName@@MethodName:nullSafeEquals:[Pageable.NONE, pageable] @TO@ MethodInvocation@@ObjectUtils.nullSafeEquals(Pageable.NONE,pageable) @AT@ 3957 @LENGTH@ 39
------------INS QualifiedName@@Pageable.NONE @TO@ SimpleName@@MethodName:nullSafeEquals:[Pageable.NONE, pageable] @AT@ 3972 @LENGTH@ 13
---------------INS SimpleName@@Pageable @TO@ QualifiedName@@Pageable.NONE @AT@ 3972 @LENGTH@ 8
---------------INS SimpleName@@NONE @TO@ QualifiedName@@Pageable.NONE @AT@ 3981 @LENGTH@ 4
------------INS SimpleName@@pageable @TO@ SimpleName@@MethodName:nullSafeEquals:[Pageable.NONE, pageable] @AT@ 3987 @LENGTH@ 8
---INS Block@@ThenBody:{  this.num=pageable.getOffset() + pageable.getPageSize();  this.skip=pageable.getOffset();} @TO@ IfStatement@@if (!ObjectUtils.nullSafeEquals(Pageable.NONE,pageable)) {  this.num=pageable.getOffset() + pageable.getPageSize();  this.skip=pageable.getOffset();} @AT@ 3998 @LENGTH@ 103
------MOV ExpressionStatement@@Assignment:this.num=pageable.getOffset() + pageable.getPageSize() @TO@ Block@@ThenBody:{  this.num=pageable.getOffset() + pageable.getPageSize();  this.skip=pageable.getOffset();} @AT@ 3896 @LENGTH@ 57
------MOV ExpressionStatement@@Assignment:this.skip=pageable.getOffset() @TO@ Block@@ThenBody:{  this.num=pageable.getOffset() + pageable.getPageSize();  this.skip=pageable.getOffset();} @AT@ 3956 @LENGTH@ 33


UPD FieldDeclaration@@private, Connection, [connection] @TO@ private, volatile, Connection, [connection] @AT@ 3260 @LENGTH@ 30
---INS Modifier@@volatile @TO@ FieldDeclaration@@private, Connection, [connection] @AT@ 3268 @LENGTH@ 8


UPD ExpressionStatement@@Assignment:this.metaStoreSchemaInfo=new MetaStoreSchemaInfo(hiveHome,hiveConf,dbType) @TO@ Assignment:this.metaStoreSchemaInfo=new MetaStoreSchemaInfo(hiveHome,dbType) @AT@ 3530 @LENGTH@ 79
---UPD Assignment@@this.metaStoreSchemaInfo=new MetaStoreSchemaInfo(hiveHome,hiveConf,dbType) @TO@ this.metaStoreSchemaInfo=new MetaStoreSchemaInfo(hiveHome,dbType) @AT@ 3530 @LENGTH@ 78
------UPD ClassInstanceCreation@@MetaStoreSchemaInfo[hiveHome, hiveConf, dbType] @TO@ MetaStoreSchemaInfo[hiveHome, dbType] @AT@ 3557 @LENGTH@ 51
---------DEL SimpleName@@hiveConf @AT@ 3591 @LENGTH@ 8


INS MethodDeclaration@@public, static, void, MethodName:beforeClass,  @TO@ TypeDeclaration@@[@RunWith(Arquillian.class), @ServerSetup(value={AbstractTestsuite.TestCaseSetup.class}), public]ConnectionListenerTestCase, AbstractTestsuite @AT@ 1332 @LENGTH@ 100
---INS Modifier@@public @TO@ MethodDeclaration@@public, static, void, MethodName:beforeClass,  @AT@ 1332 @LENGTH@ 6
---INS Modifier@@static @TO@ MethodDeclaration@@public, static, void, MethodName:beforeClass,  @AT@ 1339 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, static, void, MethodName:beforeClass,  @AT@ 1346 @LENGTH@ 4
---INS SimpleName@@MethodName:beforeClass @TO@ MethodDeclaration@@public, static, void, MethodName:beforeClass,  @AT@ 1351 @LENGTH@ 11
---INS ExpressionStatement@@MethodInvocation:AssumeTestGroupUtil.assumeInvocationTestsEnabled() @TO@ MethodDeclaration@@public, static, void, MethodName:beforeClass,  @AT@ 1375 @LENGTH@ 51
------INS MethodInvocation@@AssumeTestGroupUtil.assumeInvocationTestsEnabled() @TO@ ExpressionStatement@@MethodInvocation:AssumeTestGroupUtil.assumeInvocationTestsEnabled() @AT@ 1375 @LENGTH@ 50
---------INS SimpleName@@Name:AssumeTestGroupUtil @TO@ MethodInvocation@@AssumeTestGroupUtil.assumeInvocationTestsEnabled() @AT@ 1375 @LENGTH@ 19
---------INS SimpleName@@MethodName:assumeInvocationTestsEnabled:[] @TO@ MethodInvocation@@AssumeTestGroupUtil.assumeInvocationTestsEnabled() @AT@ 1395 @LENGTH@ 30


UPD VariableDeclarationStatement@@JwkDefinition jwkDefinition=this.jwkDefinitionSource.getDefinitionRefreshIfNecessary(keyIdHeader); @TO@ JwkDefinition jwkDefinition=this.jwkDefinitionSource.getDefinitionLoadIfNecessary(keyIdHeader); @AT@ 4649 @LENGTH@ 100
---UPD VariableDeclarationFragment@@jwkDefinition=this.jwkDefinitionSource.getDefinitionRefreshIfNecessary(keyIdHeader) @TO@ jwkDefinition=this.jwkDefinitionSource.getDefinitionLoadIfNecessary(keyIdHeader) @AT@ 4663 @LENGTH@ 85
------UPD MethodInvocation@@this.jwkDefinitionSource.getDefinitionRefreshIfNecessary(keyIdHeader) @TO@ this.jwkDefinitionSource.getDefinitionLoadIfNecessary(keyIdHeader) @AT@ 4679 @LENGTH@ 69
---------UPD SimpleName@@MethodName:getDefinitionRefreshIfNecessary:[keyIdHeader] @TO@ MethodName:getDefinitionLoadIfNecessary:[keyIdHeader] @AT@ 4704 @LENGTH@ 44


MOV MethodDeclaration@@String, MethodName:couldntConvertWarningLevel, String level,  @TO@ TypeDeclaration@@[@MessageLogger(projectCode="WFLYCTL",length=4), public]ControllerLogger, [BasicLogger] @AT@ 155222 @LENGTH@ 41


UPD IfStatement@@if (!valid && value != null) {  value=value.toString();} else if (value instanceof List<?>) {  List<Object> writableList=new ArrayList<Object>(((List<?>)value).size());  for (  Object listValue : (List<?>)value) {    writableList.add(convertHeaderValueIfNecessary(listValue));  }  value=writableList;} else if (value instanceof Map<?,?>) {  @SuppressWarnings("unchecked") Map<String,Object> originalMap=(Map<String,Object>)value;  Map<String,Object> writableMap=new HashMap<String,Object>(originalMap.size());  for (  Map.Entry<String,Object> entry : originalMap.entrySet()) {    writableMap.put(entry.getKey(),this.convertHeaderValueIfNecessary(entry.getValue()));  }  value=writableMap;} @TO@ if (!valid && value != null) {  value=value.toString();} else if (value instanceof Object[]) {  Object[] array=(Object[])value;  Object[] writableArray=new Object[array.length];  for (int i=0; i < writableArray.length; i++) {    writableArray[i]=convertHeaderValueIfNecessary(array[i]);  }  value=writableArray;} else if (value instanceof List<?>) {  List<Object> writableList=new ArrayList<Object>(((List<?>)value).size());  for (  Object listValue : (List<?>)value) {    writableList.add(convertHeaderValueIfNecessary(listValue));  }  value=writableList;} else if (value instanceof Map<?,?>) {  @SuppressWarnings("unchecked") Map<String,Object> originalMap=(Map<String,Object>)value;  Map<String,Object> writableMap=new HashMap<String,Object>(originalMap.size());  for (  Map.Entry<String,Object> entry : originalMap.entrySet()) {    writableMap.put(entry.getKey(),this.convertHeaderValueIfNecessary(entry.getValue()));  }  value=writableMap;} @AT@ 6878 @LENGTH@ 745
---INS Block@@ElseBody:if (value instanceof Object[]) {  Object[] array=(Object[])value;  Object[] writableArray=new Object[array.length];  for (int i=0; i < writableArray.length; i++) {    writableArray[i]=convertHeaderValueIfNecessary(array[i]);  }  value=writableArray;} else if (value instanceof List<?>) {  List<Object> writableList=new ArrayList<Object>(((List<?>)value).size());  for (  Object listValue : (List<?>)value) {    writableList.add(convertHeaderValueIfNecessary(listValue));  }  value=writableList;} else if (value instanceof Map<?,?>) {  @SuppressWarnings("unchecked") Map<String,Object> originalMap=(Map<String,Object>)value;  Map<String,Object> writableMap=new HashMap<String,Object>(originalMap.size());  for (  Map.Entry<String,Object> entry : originalMap.entrySet()) {    writableMap.put(entry.getKey(),this.convertHeaderValueIfNecessary(entry.getValue()));  }  value=writableMap;} @TO@ IfStatement@@if (!valid && value != null) {  value=value.toString();} else if (value instanceof List<?>) {  List<Object> writableList=new ArrayList<Object>(((List<?>)value).size());  for (  Object listValue : (List<?>)value) {    writableList.add(convertHeaderValueIfNecessary(listValue));  }  value=writableList;} else if (value instanceof Map<?,?>) {  @SuppressWarnings("unchecked") Map<String,Object> originalMap=(Map<String,Object>)value;  Map<String,Object> writableMap=new HashMap<String,Object>(originalMap.size());  for (  Map.Entry<String,Object> entry : originalMap.entrySet()) {    writableMap.put(entry.getKey(),this.convertHeaderValueIfNecessary(entry.getValue()));  }  value=writableMap;} @AT@ 6980 @LENGTH@ 957
------INS IfStatement@@if (value instanceof Object[]) {  Object[] array=(Object[])value;  Object[] writableArray=new Object[array.length];  for (int i=0; i < writableArray.length; i++) {    writableArray[i]=convertHeaderValueIfNecessary(array[i]);  }  value=writableArray;} else if (value instanceof List<?>) {  List<Object> writableList=new ArrayList<Object>(((List<?>)value).size());  for (  Object listValue : (List<?>)value) {    writableList.add(convertHeaderValueIfNecessary(listValue));  }  value=writableList;} else if (value instanceof Map<?,?>) {  @SuppressWarnings("unchecked") Map<String,Object> originalMap=(Map<String,Object>)value;  Map<String,Object> writableMap=new HashMap<String,Object>(originalMap.size());  for (  Map.Entry<String,Object> entry : originalMap.entrySet()) {    writableMap.put(entry.getKey(),this.convertHeaderValueIfNecessary(entry.getValue()));  }  value=writableMap;} @TO@ Block@@ElseBody:if (value instanceof Object[]) {  Object[] array=(Object[])value;  Object[] writableArray=new Object[array.length];  for (int i=0; i < writableArray.length; i++) {    writableArray[i]=convertHeaderValueIfNecessary(array[i]);  }  value=writableArray;} else if (value instanceof List<?>) {  List<Object> writableList=new ArrayList<Object>(((List<?>)value).size());  for (  Object listValue : (List<?>)value) {    writableList.add(convertHeaderValueIfNecessary(listValue));  }  value=writableList;} else if (value instanceof Map<?,?>) {  @SuppressWarnings("unchecked") Map<String,Object> originalMap=(Map<String,Object>)value;  Map<String,Object> writableMap=new HashMap<String,Object>(originalMap.size());  for (  Map.Entry<String,Object> entry : originalMap.entrySet()) {    writableMap.put(entry.getKey(),this.convertHeaderValueIfNecessary(entry.getValue()));  }  value=writableMap;} @AT@ 6980 @LENGTH@ 957
---------MOV Block@@ElseBody:if (value instanceof List<?>) {  List<Object> writableList=new ArrayList<Object>(((List<?>)value).size());  for (  Object listValue : (List<?>)value) {    writableList.add(convertHeaderValueIfNecessary(listValue));  }  value=writableList;} else if (value instanceof Map<?,?>) {  @SuppressWarnings("unchecked") Map<String,Object> originalMap=(Map<String,Object>)value;  Map<String,Object> writableMap=new HashMap<String,Object>(originalMap.size());  for (  Map.Entry<String,Object> entry : originalMap.entrySet()) {    writableMap.put(entry.getKey(),this.convertHeaderValueIfNecessary(entry.getValue()));  }  value=writableMap;} @TO@ IfStatement@@if (value instanceof Object[]) {  Object[] array=(Object[])value;  Object[] writableArray=new Object[array.length];  for (int i=0; i < writableArray.length; i++) {    writableArray[i]=convertHeaderValueIfNecessary(array[i]);  }  value=writableArray;} else if (value instanceof List<?>) {  List<Object> writableList=new ArrayList<Object>(((List<?>)value).size());  for (  Object listValue : (List<?>)value) {    writableList.add(convertHeaderValueIfNecessary(listValue));  }  value=writableList;} else if (value instanceof Map<?,?>) {  @SuppressWarnings("unchecked") Map<String,Object> originalMap=(Map<String,Object>)value;  Map<String,Object> writableMap=new HashMap<String,Object>(originalMap.size());  for (  Map.Entry<String,Object> entry : originalMap.entrySet()) {    writableMap.put(entry.getKey(),this.convertHeaderValueIfNecessary(entry.getValue()));  }  value=writableMap;} @AT@ 6949 @LENGTH@ 674
---------INS InstanceofExpression@@value instanceof Object[] @TO@ IfStatement@@if (value instanceof Object[]) {  Object[] array=(Object[])value;  Object[] writableArray=new Object[array.length];  for (int i=0; i < writableArray.length; i++) {    writableArray[i]=convertHeaderValueIfNecessary(array[i]);  }  value=writableArray;} else if (value instanceof List<?>) {  List<Object> writableList=new ArrayList<Object>(((List<?>)value).size());  for (  Object listValue : (List<?>)value) {    writableList.add(convertHeaderValueIfNecessary(listValue));  }  value=writableList;} else if (value instanceof Map<?,?>) {  @SuppressWarnings("unchecked") Map<String,Object> originalMap=(Map<String,Object>)value;  Map<String,Object> writableMap=new HashMap<String,Object>(originalMap.size());  for (  Map.Entry<String,Object> entry : originalMap.entrySet()) {    writableMap.put(entry.getKey(),this.convertHeaderValueIfNecessary(entry.getValue()));  }  value=writableMap;} @AT@ 6984 @LENGTH@ 25
------------INS SimpleName@@value @TO@ InstanceofExpression@@value instanceof Object[] @AT@ 6984 @LENGTH@ 5
------------INS Instanceof@@instanceof @TO@ InstanceofExpression@@value instanceof Object[] @AT@ 6990 @LENGTH@ 10
------------INS ArrayType@@Object[] @TO@ InstanceofExpression@@value instanceof Object[] @AT@ 7001 @LENGTH@ 8
---------------INS SimpleType@@Object @TO@ ArrayType@@Object[] @AT@ 7001 @LENGTH@ 6
---------INS Block@@ThenBody:{  Object[] array=(Object[])value;  Object[] writableArray=new Object[array.length];  for (int i=0; i < writableArray.length; i++) {    writableArray[i]=convertHeaderValueIfNecessary(array[i]);  }  value=writableArray;} @TO@ IfStatement@@if (value instanceof Object[]) {  Object[] array=(Object[])value;  Object[] writableArray=new Object[array.length];  for (int i=0; i < writableArray.length; i++) {    writableArray[i]=convertHeaderValueIfNecessary(array[i]);  }  value=writableArray;} else if (value instanceof List<?>) {  List<Object> writableList=new ArrayList<Object>(((List<?>)value).size());  for (  Object listValue : (List<?>)value) {    writableList.add(convertHeaderValueIfNecessary(listValue));  }  value=writableList;} else if (value instanceof Map<?,?>) {  @SuppressWarnings("unchecked") Map<String,Object> originalMap=(Map<String,Object>)value;  Map<String,Object> writableMap=new HashMap<String,Object>(originalMap.size());  for (  Map.Entry<String,Object> entry : originalMap.entrySet()) {    writableMap.put(entry.getKey(),this.convertHeaderValueIfNecessary(entry.getValue()));  }  value=writableMap;} @AT@ 7011 @LENGTH@ 244
------------INS VariableDeclarationStatement@@Object[] array=(Object[])value; @TO@ Block@@ThenBody:{  Object[] array=(Object[])value;  Object[] writableArray=new Object[array.length];  for (int i=0; i < writableArray.length; i++) {    writableArray[i]=convertHeaderValueIfNecessary(array[i]);  }  value=writableArray;} @AT@ 7016 @LENGTH@ 34
---------------INS ArrayType@@Object[] @TO@ VariableDeclarationStatement@@Object[] array=(Object[])value; @AT@ 7016 @LENGTH@ 8
------------------INS SimpleType@@Object @TO@ ArrayType@@Object[] @AT@ 7016 @LENGTH@ 6
---------------INS VariableDeclarationFragment@@array=(Object[])value @TO@ VariableDeclarationStatement@@Object[] array=(Object[])value; @AT@ 7025 @LENGTH@ 24
------------------INS SimpleName@@array @TO@ VariableDeclarationFragment@@array=(Object[])value @AT@ 7025 @LENGTH@ 5
------------------INS CastExpression@@(Object[])value @TO@ VariableDeclarationFragment@@array=(Object[])value @AT@ 7033 @LENGTH@ 16
---------------------INS ArrayType@@Object[] @TO@ CastExpression@@(Object[])value @AT@ 7034 @LENGTH@ 8
------------------------INS SimpleType@@Object @TO@ ArrayType@@Object[] @AT@ 7034 @LENGTH@ 6
---------------------INS SimpleName@@value @TO@ CastExpression@@(Object[])value @AT@ 7044 @LENGTH@ 5
------------INS VariableDeclarationStatement@@Object[] writableArray=new Object[array.length]; @TO@ Block@@ThenBody:{  Object[] array=(Object[])value;  Object[] writableArray=new Object[array.length];  for (int i=0; i < writableArray.length; i++) {    writableArray[i]=convertHeaderValueIfNecessary(array[i]);  }  value=writableArray;} @AT@ 7054 @LENGTH@ 50
---------------INS ArrayType@@Object[] @TO@ VariableDeclarationStatement@@Object[] writableArray=new Object[array.length]; @AT@ 7054 @LENGTH@ 8
------------------INS SimpleType@@Object @TO@ ArrayType@@Object[] @AT@ 7054 @LENGTH@ 6
---------------INS VariableDeclarationFragment@@writableArray=new Object[array.length] @TO@ VariableDeclarationStatement@@Object[] writableArray=new Object[array.length]; @AT@ 7063 @LENGTH@ 40
------------------INS SimpleName@@writableArray @TO@ VariableDeclarationFragment@@writableArray=new Object[array.length] @AT@ 7063 @LENGTH@ 13
------------------INS ArrayCreation@@new Object[array.length] @TO@ VariableDeclarationFragment@@writableArray=new Object[array.length] @AT@ 7079 @LENGTH@ 24
---------------------INS ArrayType@@Object[] @TO@ ArrayCreation@@new Object[array.length] @AT@ 7083 @LENGTH@ 20
------------------------INS SimpleType@@Object @TO@ ArrayType@@Object[] @AT@ 7083 @LENGTH@ 6
---------------------INS QualifiedName@@array.length @TO@ ArrayCreation@@new Object[array.length] @AT@ 7090 @LENGTH@ 12
------------------------INS SimpleName@@array @TO@ QualifiedName@@array.length @AT@ 7090 @LENGTH@ 5
------------------------INS SimpleName@@length @TO@ QualifiedName@@array.length @AT@ 7096 @LENGTH@ 6
------------INS ForStatement@@for (int i=0; i < writableArray.length; i++) {  writableArray[i]=convertHeaderValueIfNecessary(array[i]);} @TO@ Block@@ThenBody:{  Object[] array=(Object[])value;  Object[] writableArray=new Object[array.length];  for (int i=0; i < writableArray.length; i++) {    writableArray[i]=convertHeaderValueIfNecessary(array[i]);  }  value=writableArray;} @AT@ 7108 @LENGTH@ 117
---------------INS VariableDeclarationExpression@@int i=0 @TO@ ForStatement@@for (int i=0; i < writableArray.length; i++) {  writableArray[i]=convertHeaderValueIfNecessary(array[i]);} @AT@ 7113 @LENGTH@ 9
------------------INS PrimitiveType@@int @TO@ VariableDeclarationExpression@@int i=0 @AT@ 7113 @LENGTH@ 3
------------------INS VariableDeclarationFragment@@i=0 @TO@ VariableDeclarationExpression@@int i=0 @AT@ 7117 @LENGTH@ 5
---------------------INS SimpleName@@i @TO@ VariableDeclarationFragment@@i=0 @AT@ 7117 @LENGTH@ 1
---------------------INS NumberLiteral@@0 @TO@ VariableDeclarationFragment@@i=0 @AT@ 7121 @LENGTH@ 1
---------------INS InfixExpression@@i < writableArray.length @TO@ ForStatement@@for (int i=0; i < writableArray.length; i++) {  writableArray[i]=convertHeaderValueIfNecessary(array[i]);} @AT@ 7124 @LENGTH@ 24
------------------INS SimpleName@@i @TO@ InfixExpression@@i < writableArray.length @AT@ 7124 @LENGTH@ 1
------------------INS Operator@@< @TO@ InfixExpression@@i < writableArray.length @AT@ 7125 @LENGTH@ 1
------------------INS QualifiedName@@writableArray.length @TO@ InfixExpression@@i < writableArray.length @AT@ 7128 @LENGTH@ 20
---------------------INS SimpleName@@writableArray @TO@ QualifiedName@@writableArray.length @AT@ 7128 @LENGTH@ 13
---------------------INS SimpleName@@length @TO@ QualifiedName@@writableArray.length @AT@ 7142 @LENGTH@ 6
---------------INS PostfixExpression@@i++ @TO@ ForStatement@@for (int i=0; i < writableArray.length; i++) {  writableArray[i]=convertHeaderValueIfNecessary(array[i]);} @AT@ 7150 @LENGTH@ 3
------------------INS SimpleName@@i @TO@ PostfixExpression@@i++ @AT@ 7150 @LENGTH@ 1
------------------INS Operator@@++ @TO@ PostfixExpression@@i++ @AT@ 7152 @LENGTH@ 2
---------------INS ExpressionStatement@@Assignment:writableArray[i]=convertHeaderValueIfNecessary(array[i]) @TO@ ForStatement@@for (int i=0; i < writableArray.length; i++) {  writableArray[i]=convertHeaderValueIfNecessary(array[i]);} @AT@ 7161 @LENGTH@ 59
------------------INS Assignment@@writableArray[i]=convertHeaderValueIfNecessary(array[i]) @TO@ ExpressionStatement@@Assignment:writableArray[i]=convertHeaderValueIfNecessary(array[i]) @AT@ 7161 @LENGTH@ 58
---------------------INS ArrayAccess@@writableArray[i] @TO@ Assignment@@writableArray[i]=convertHeaderValueIfNecessary(array[i]) @AT@ 7161 @LENGTH@ 16
------------------------INS SimpleName@@writableArray @TO@ ArrayAccess@@writableArray[i] @AT@ 7161 @LENGTH@ 13
------------------------INS SimpleName@@i @TO@ ArrayAccess@@writableArray[i] @AT@ 7175 @LENGTH@ 1
---------------------INS Operator@@= @TO@ Assignment@@writableArray[i]=convertHeaderValueIfNecessary(array[i]) @AT@ 7177 @LENGTH@ 1
---------------------INS MethodInvocation@@convertHeaderValueIfNecessary(array[i]) @TO@ Assignment@@writableArray[i]=convertHeaderValueIfNecessary(array[i]) @AT@ 7180 @LENGTH@ 39
------------------------INS SimpleName@@MethodName:convertHeaderValueIfNecessary:[array[i]] @TO@ MethodInvocation@@convertHeaderValueIfNecessary(array[i]) @AT@ 7180 @LENGTH@ 39
---------------------------INS ArrayAccess@@array[i] @TO@ SimpleName@@MethodName:convertHeaderValueIfNecessary:[array[i]] @AT@ 7210 @LENGTH@ 8
------------------------------INS SimpleName@@array @TO@ ArrayAccess@@array[i] @AT@ 7210 @LENGTH@ 5
------------------------------INS SimpleName@@i @TO@ ArrayAccess@@array[i] @AT@ 7216 @LENGTH@ 1
------------------------INS SimpleName@@MethodName:convertHeaderValueIfNecessary:[array[i]] @TO@ MethodInvocation@@convertHeaderValueIfNecessary(array[i]) @AT@ 7180 @LENGTH@ 39
---------------------------INS ArrayAccess@@array[i] @TO@ SimpleName@@MethodName:convertHeaderValueIfNecessary:[array[i]] @AT@ 7210 @LENGTH@ 8
------------------------------INS SimpleName@@array @TO@ ArrayAccess@@array[i] @AT@ 7210 @LENGTH@ 5
------------------------------INS SimpleName@@i @TO@ ArrayAccess@@array[i] @AT@ 7216 @LENGTH@ 1
------------INS ExpressionStatement@@Assignment:value=writableArray @TO@ Block@@ThenBody:{  Object[] array=(Object[])value;  Object[] writableArray=new Object[array.length];  for (int i=0; i < writableArray.length; i++) {    writableArray[i]=convertHeaderValueIfNecessary(array[i]);  }  value=writableArray;} @AT@ 7229 @LENGTH@ 22
---------------INS Assignment@@value=writableArray @TO@ ExpressionStatement@@Assignment:value=writableArray @AT@ 7229 @LENGTH@ 21
------------------INS SimpleName@@value @TO@ Assignment@@value=writableArray @AT@ 7229 @LENGTH@ 5
------------------INS Operator@@= @TO@ Assignment@@value=writableArray @AT@ 7234 @LENGTH@ 1
------------------INS SimpleName@@writableArray @TO@ Assignment@@value=writableArray @AT@ 7237 @LENGTH@ 13


INS ExpressionStatement@@MethodInvocation:cf.addConnectionListener(connection -> {
  cf.onApplicationEvent(new ContextClosedEvent(context));
  cf.stop();
  cf.destroy();
}
) @TO@ MethodDeclaration@@public, void, MethodName:testNonManagedContainerDoesntStartWhenConnectionFactoryDestroyed, Exception,  @AT@ 20431 @LENGTH@ 136
---INS MethodInvocation@@cf.addConnectionListener(connection -> {
  cf.onApplicationEvent(new ContextClosedEvent(context));
  cf.stop();
  cf.destroy();
}
) @TO@ ExpressionStatement@@MethodInvocation:cf.addConnectionListener(connection -> {
  cf.onApplicationEvent(new ContextClosedEvent(context));
  cf.stop();
  cf.destroy();
}
) @AT@ 20431 @LENGTH@ 135
------INS SimpleName@@Name:cf @TO@ MethodInvocation@@cf.addConnectionListener(connection -> {
  cf.onApplicationEvent(new ContextClosedEvent(context));
  cf.stop();
  cf.destroy();
}
) @AT@ 20431 @LENGTH@ 2
------INS SimpleName@@MethodName:addConnectionListener:[connection -> {
  cf.onApplicationEvent(new ContextClosedEvent(context));
  cf.stop();
  cf.destroy();
}
] @TO@ MethodInvocation@@cf.addConnectionListener(connection -> {
  cf.onApplicationEvent(new ContextClosedEvent(context));
  cf.stop();
  cf.destroy();
}
) @AT@ 20434 @LENGTH@ 132
---------INS LambdaExpression@@connection -> {
  cf.onApplicationEvent(new ContextClosedEvent(context));
  cf.stop();
  cf.destroy();
}
 @TO@ SimpleName@@MethodName:addConnectionListener:[connection -> {
  cf.onApplicationEvent(new ContextClosedEvent(context));
  cf.stop();
  cf.destroy();
}
] @AT@ 20456 @LENGTH@ 109
------------INS VariableDeclarationFragment@@connection @TO@ LambdaExpression@@connection -> {
  cf.onApplicationEvent(new ContextClosedEvent(context));
  cf.stop();
  cf.destroy();
}
 @AT@ 20456 @LENGTH@ 10
---------------INS SimpleName@@connection @TO@ VariableDeclarationFragment@@connection @AT@ 20456 @LENGTH@ 10
------------MOV ExpressionStatement@@MethodInvocation:cf.onApplicationEvent(new ContextClosedEvent(context)) @TO@ LambdaExpression@@connection -> {
  cf.onApplicationEvent(new ContextClosedEvent(context));
  cf.stop();
  cf.destroy();
}
 @AT@ 20676 @LENGTH@ 55
------------MOV ExpressionStatement@@MethodInvocation:cf.stop() @TO@ LambdaExpression@@connection -> {
  cf.onApplicationEvent(new ContextClosedEvent(context));
  cf.stop();
  cf.destroy();
}
 @AT@ 20734 @LENGTH@ 10
------------MOV ExpressionStatement@@MethodInvocation:cf.destroy() @TO@ LambdaExpression@@connection -> {
  cf.onApplicationEvent(new ContextClosedEvent(context));
  cf.stop();
  cf.destroy();
}
 @AT@ 20747 @LENGTH@ 13


INS ExpressionStatement@@MethodInvocation:cs.flush() @TO@ MethodDeclaration@@public, void, MethodName:testRecreatingKSTest, NoSuchAlgorithmException, CredentialStoreException, UnsupportedCredentialTypeException,  @AT@ 7700 @LENGTH@ 11
---INS MethodInvocation@@cs.flush() @TO@ ExpressionStatement@@MethodInvocation:cs.flush() @AT@ 7700 @LENGTH@ 10
------INS SimpleName@@Name:cs @TO@ MethodInvocation@@cs.flush() @AT@ 7700 @LENGTH@ 2
------INS SimpleName@@MethodName:flush:[] @TO@ MethodInvocation@@cs.flush() @AT@ 7703 @LENGTH@ 7


UPD TryStatement@@try {  applicationContext=new ClassPathXmlApplicationContext(path);  camelContext=new SpringCamelContext(applicationContext);} catch (Exception e) {  Assert.assertTrue(e instanceof RuntimeCamelException);  Assert.assertTrue(e.getCause() instanceof FailedToCreateRouteException);} finally {  IOHelper.close(applicationContext);} @TO@ try {  applicationContext=new ClassPathXmlApplicationContext(path);  camelContext=new SpringCamelContext(applicationContext);}  finally {  IOHelper.close(applicationContext);} @AT@ 1784 @LENGTH@ 413


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  DataFormatCustomizer<JibxDataFormat> configurer : customizers) {    LOGGER.debug("Configure dataformat {}, with configurer {}",dataformat,configurer);    configurer.customize(dataformat);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  DataFormatCustomizer<JibxDataFormat> customizer : customizers) {    LOGGER.debug("Configure dataformat {}, with customizer {}",dataformat,customizer);    customizer.customize(dataformat);  }} @AT@ 5286 @LENGTH@ 423
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 5290 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5290 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  DataFormatCustomizer<JibxDataFormat> configurer : customizers) {    LOGGER.debug("Configure dataformat {}, with configurer {}",dataformat,configurer);    configurer.customize(dataformat);  }} @TO@ ThenBody:{  for (  DataFormatCustomizer<JibxDataFormat> customizer : customizers) {    LOGGER.debug("Configure dataformat {}, with customizer {}",dataformat,customizer);    customizer.customize(dataformat);  }} @AT@ 5346 @LENGTH@ 363
------UPD EnhancedForStatement@@for (DataFormatCustomizer<JibxDataFormat> configurer : customizers) {  LOGGER.debug("Configure dataformat {}, with configurer {}",dataformat,configurer);  configurer.customize(dataformat);} @TO@ for (DataFormatCustomizer<JibxDataFormat> customizer : customizers) {  LOGGER.debug("Configure dataformat {}, with customizer {}",dataformat,customizer);  customizer.customize(dataformat);} @AT@ 5368 @LENGTH@ 323
---------UPD SingleVariableDeclaration@@DataFormatCustomizer<JibxDataFormat> configurer @TO@ DataFormatCustomizer<JibxDataFormat> customizer @AT@ 5373 @LENGTH@ 47
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5410 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure dataformat {}, with configurer {}",dataformat,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure dataformat {}, with customizer {}",dataformat,customizer) @AT@ 5462 @LENGTH@ 149
------------UPD MethodInvocation@@LOGGER.debug("Configure dataformat {}, with configurer {}",dataformat,configurer) @TO@ LOGGER.debug("Configure dataformat {}, with customizer {}",dataformat,customizer) @AT@ 5462 @LENGTH@ 148
---------------UPD SimpleName@@MethodName:debug:["Configure dataformat {}, with configurer {}", dataformat, configurer] @TO@ MethodName:debug:["Configure dataformat {}, with customizer {}", dataformat, customizer] @AT@ 5469 @LENGTH@ 141
------------------UPD StringLiteral@@"Configure dataformat {}, with configurer {}" @TO@ "Configure dataformat {}, with customizer {}" @AT@ 5508 @LENGTH@ 45
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5599 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(dataformat) @TO@ MethodInvocation:customizer.customize(dataformat) @AT@ 5636 @LENGTH@ 33
------------UPD MethodInvocation@@configurer.customize(dataformat) @TO@ customizer.customize(dataformat) @AT@ 5636 @LENGTH@ 32
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5636 @LENGTH@ 10


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled(); @AT@ 5240 @LENGTH@ 160
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5248 @LENGTH@ 151
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5248 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5265 @LENGTH@ 134
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 5265 @LENGTH@ 64
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5265 @LENGTH@ 35
---------UPD MethodInvocation@@componentConfiguration.getConfigurer().isEnabled() @TO@ componentConfiguration.getCustomizer().isEnabled() @AT@ 5349 @LENGTH@ 50
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5349 @LENGTH@ 38


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<ServletComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<ServletComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5446 @LENGTH@ 340
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 5450 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5450 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  ComponentCustomizer<ServletComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ ThenBody:{  for (  ComponentCustomizer<ServletComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5506 @LENGTH@ 280
------UPD EnhancedForStatement@@for (ComponentCustomizer<ServletComponent> configurer : customizers) {  LOGGER.debug("Configure component {}, with configurer {}",component,configurer);  configurer.customize(component);} @TO@ for (ComponentCustomizer<ServletComponent> customizer : customizers) {  LOGGER.debug("Configure component {}, with customizer {}",component,customizer);  customizer.customize(component);} @AT@ 5520 @LENGTH@ 256
---------UPD SingleVariableDeclaration@@ComponentCustomizer<ServletComponent> configurer @TO@ ComponentCustomizer<ServletComponent> customizer @AT@ 5525 @LENGTH@ 48
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5563 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5607 @LENGTH@ 106
------------UPD MethodInvocation@@LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5607 @LENGTH@ 105
---------------UPD SimpleName@@MethodName:debug:["Configure component {}, with configurer {}", component, configurer] @TO@ MethodName:debug:["Configure component {}, with customizer {}", component, customizer] @AT@ 5614 @LENGTH@ 98
------------------UPD StringLiteral@@"Configure component {}, with configurer {}" @TO@ "Configure component {}, with customizer {}" @AT@ 5620 @LENGTH@ 44
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5701 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(component) @TO@ MethodInvocation:customizer.customize(component) @AT@ 5730 @LENGTH@ 32
------------UPD MethodInvocation@@configurer.customize(component) @TO@ customizer.customize(component) @AT@ 5730 @LENGTH@ 31
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5730 @LENGTH@ 10


UPD ReturnStatement@@MethodInvocation:factory.getRepository(repositoryType,customImplementation) @TO@ ConditionalExpression:customImplementation.isPresent() ? factory.getRepository(repositoryType,customImplementation.get()) : factory.getRepository(repositoryType) @AT@ 2827 @LENGTH@ 67
---INS ConditionalExpression@@customImplementation.isPresent() ? factory.getRepository(repositoryType,customImplementation.get()) : factory.getRepository(repositoryType) @TO@ ReturnStatement@@MethodInvocation:factory.getRepository(repositoryType,customImplementation) @AT@ 2834 @LENGTH@ 140
------INS MethodInvocation@@customImplementation.isPresent() @TO@ ConditionalExpression@@customImplementation.isPresent() ? factory.getRepository(repositoryType,customImplementation.get()) : factory.getRepository(repositoryType) @AT@ 2834 @LENGTH@ 32
---------INS SimpleName@@Name:customImplementation @TO@ MethodInvocation@@customImplementation.isPresent() @AT@ 2834 @LENGTH@ 20
---------INS SimpleName@@MethodName:isPresent:[] @TO@ MethodInvocation@@customImplementation.isPresent() @AT@ 2855 @LENGTH@ 11
------INS MethodInvocation@@factory.getRepository(repositoryType,customImplementation.get()) @TO@ ConditionalExpression@@customImplementation.isPresent() ? factory.getRepository(repositoryType,customImplementation.get()) : factory.getRepository(repositoryType) @AT@ 2869 @LENGTH@ 65
---------MOV SimpleName@@Name:factory @TO@ MethodInvocation@@factory.getRepository(repositoryType,customImplementation.get()) @AT@ 2834 @LENGTH@ 7
---------MOV SimpleName@@MethodName:getRepository:[repositoryType, customImplementation] @TO@ MethodInvocation@@factory.getRepository(repositoryType,customImplementation.get()) @AT@ 2842 @LENGTH@ 51
------------DEL SimpleName@@customImplementation @AT@ 2872 @LENGTH@ 20
------------INS MethodInvocation@@customImplementation.get() @TO@ SimpleName@@MethodName:getRepository:[repositoryType, customImplementation] @AT@ 2907 @LENGTH@ 26
---------------INS SimpleName@@Name:customImplementation @TO@ MethodInvocation@@customImplementation.get() @AT@ 2907 @LENGTH@ 20
---------------INS SimpleName@@MethodName:get:[] @TO@ MethodInvocation@@customImplementation.get() @AT@ 2928 @LENGTH@ 5
------INS MethodInvocation@@factory.getRepository(repositoryType) @TO@ ConditionalExpression@@customImplementation.isPresent() ? factory.getRepository(repositoryType,customImplementation.get()) : factory.getRepository(repositoryType) @AT@ 2937 @LENGTH@ 37
---------INS SimpleName@@Name:factory @TO@ MethodInvocation@@factory.getRepository(repositoryType) @AT@ 2937 @LENGTH@ 7
---------INS SimpleName@@MethodName:getRepository:[repositoryType] @TO@ MethodInvocation@@factory.getRepository(repositoryType) @AT@ 2945 @LENGTH@ 29
------------INS SimpleName@@repositoryType @TO@ SimpleName@@MethodName:getRepository:[repositoryType] @AT@ 2959 @LENGTH@ 14
---DEL MethodInvocation@@factory.getRepository(repositoryType,customImplementation) @AT@ 2834 @LENGTH@ 59


INS MethodDeclaration@@public, void, MethodName:returnsNullCorsConfigurationWithNullRepositories,  @TO@ TypeDeclaration@@[@RunWith(MockitoJUnitRunner.class), public]RepositoryCorsConfigurationAccessorUnitTests,  @AT@ 3608 @LENGTH@ 598
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:returnsNullCorsConfigurationWithNullRepositories,  @AT@ 3608 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:returnsNullCorsConfigurationWithNullRepositories,  @AT@ 3615 @LENGTH@ 4
---INS SimpleName@@MethodName:returnsNullCorsConfigurationWithNullRepositories @TO@ MethodDeclaration@@public, void, MethodName:returnsNullCorsConfigurationWithNullRepositories,  @AT@ 3620 @LENGTH@ 48
---INS ExpressionStatement@@Assignment:accessor=new RepositoryCorsConfigurationAccessor(mappings,NoOpStringValueResolver.INSTANCE,null) @TO@ MethodDeclaration@@public, void, MethodName:returnsNullCorsConfigurationWithNullRepositories,  @AT@ 3676 @LENGTH@ 101
------INS Assignment@@accessor=new RepositoryCorsConfigurationAccessor(mappings,NoOpStringValueResolver.INSTANCE,null) @TO@ ExpressionStatement@@Assignment:accessor=new RepositoryCorsConfigurationAccessor(mappings,NoOpStringValueResolver.INSTANCE,null) @AT@ 3676 @LENGTH@ 100
---------INS SimpleName@@accessor @TO@ Assignment@@accessor=new RepositoryCorsConfigurationAccessor(mappings,NoOpStringValueResolver.INSTANCE,null) @AT@ 3676 @LENGTH@ 8
---------INS Operator@@= @TO@ Assignment@@accessor=new RepositoryCorsConfigurationAccessor(mappings,NoOpStringValueResolver.INSTANCE,null) @AT@ 3684 @LENGTH@ 1
---------INS ClassInstanceCreation@@RepositoryCorsConfigurationAccessor[mappings, NoOpStringValueResolver.INSTANCE, null] @TO@ Assignment@@accessor=new RepositoryCorsConfigurationAccessor(mappings,NoOpStringValueResolver.INSTANCE,null) @AT@ 3687 @LENGTH@ 89
------------INS New@@new @TO@ ClassInstanceCreation@@RepositoryCorsConfigurationAccessor[mappings, NoOpStringValueResolver.INSTANCE, null] @AT@ 3687 @LENGTH@ 3
------------INS SimpleType@@RepositoryCorsConfigurationAccessor @TO@ ClassInstanceCreation@@RepositoryCorsConfigurationAccessor[mappings, NoOpStringValueResolver.INSTANCE, null] @AT@ 3691 @LENGTH@ 35
------------INS SimpleName@@mappings @TO@ ClassInstanceCreation@@RepositoryCorsConfigurationAccessor[mappings, NoOpStringValueResolver.INSTANCE, null] @AT@ 3727 @LENGTH@ 8
------------INS QualifiedName@@NoOpStringValueResolver.INSTANCE @TO@ ClassInstanceCreation@@RepositoryCorsConfigurationAccessor[mappings, NoOpStringValueResolver.INSTANCE, null] @AT@ 3737 @LENGTH@ 32
---------------INS SimpleName@@NoOpStringValueResolver @TO@ QualifiedName@@NoOpStringValueResolver.INSTANCE @AT@ 3737 @LENGTH@ 23
---------------INS SimpleName@@INSTANCE @TO@ QualifiedName@@NoOpStringValueResolver.INSTANCE @AT@ 3761 @LENGTH@ 8
------------INS NullLiteral@@null @TO@ ClassInstanceCreation@@RepositoryCorsConfigurationAccessor[mappings, NoOpStringValueResolver.INSTANCE, null] @AT@ 3771 @LENGTH@ 4
---INS VariableDeclarationStatement@@ResourceMetadata resourceMetadata=mock(ResourceMetadata.class); @TO@ MethodDeclaration@@public, void, MethodName:returnsNullCorsConfigurationWithNullRepositories,  @AT@ 3781 @LENGTH@ 65
------INS SimpleType@@ResourceMetadata @TO@ VariableDeclarationStatement@@ResourceMetadata resourceMetadata=mock(ResourceMetadata.class); @AT@ 3781 @LENGTH@ 16
------INS VariableDeclarationFragment@@resourceMetadata=mock(ResourceMetadata.class) @TO@ VariableDeclarationStatement@@ResourceMetadata resourceMetadata=mock(ResourceMetadata.class); @AT@ 3798 @LENGTH@ 47
---------INS SimpleName@@resourceMetadata @TO@ VariableDeclarationFragment@@resourceMetadata=mock(ResourceMetadata.class) @AT@ 3798 @LENGTH@ 16
---------INS MethodInvocation@@mock(ResourceMetadata.class) @TO@ VariableDeclarationFragment@@resourceMetadata=mock(ResourceMetadata.class) @AT@ 3817 @LENGTH@ 28
------------INS SimpleName@@MethodName:mock:[ResourceMetadata.class] @TO@ MethodInvocation@@mock(ResourceMetadata.class) @AT@ 3817 @LENGTH@ 28
---------------INS TypeLiteral@@ResourceMetadata.class @TO@ SimpleName@@MethodName:mock:[ResourceMetadata.class] @AT@ 3822 @LENGTH@ 22
---INS ExpressionStatement@@MethodInvocation:when(resourceMetadata.getPath()).thenReturn(new Path("/people")) @TO@ MethodDeclaration@@public, void, MethodName:returnsNullCorsConfigurationWithNullRepositories,  @AT@ 3849 @LENGTH@ 65
------INS MethodInvocation@@when(resourceMetadata.getPath()).thenReturn(new Path("/people")) @TO@ ExpressionStatement@@MethodInvocation:when(resourceMetadata.getPath()).thenReturn(new Path("/people")) @AT@ 3849 @LENGTH@ 64
---------INS MethodInvocation@@MethodName:when:[resourceMetadata.getPath()] @TO@ MethodInvocation@@when(resourceMetadata.getPath()).thenReturn(new Path("/people")) @AT@ 3849 @LENGTH@ 32
------------INS MethodInvocation@@resourceMetadata.getPath() @TO@ MethodInvocation@@MethodName:when:[resourceMetadata.getPath()] @AT@ 3854 @LENGTH@ 26
---------------INS SimpleName@@Name:resourceMetadata @TO@ MethodInvocation@@resourceMetadata.getPath() @AT@ 3854 @LENGTH@ 16
---------------INS SimpleName@@MethodName:getPath:[] @TO@ MethodInvocation@@resourceMetadata.getPath() @AT@ 3871 @LENGTH@ 9
---------INS SimpleName@@MethodName:thenReturn:[new Path("/people")] @TO@ MethodInvocation@@when(resourceMetadata.getPath()).thenReturn(new Path("/people")) @AT@ 3882 @LENGTH@ 31
------------INS ClassInstanceCreation@@Path["/people"] @TO@ SimpleName@@MethodName:thenReturn:[new Path("/people")] @AT@ 3893 @LENGTH@ 19
---------------INS New@@new @TO@ ClassInstanceCreation@@Path["/people"] @AT@ 3893 @LENGTH@ 3
---------------INS SimpleType@@Path @TO@ ClassInstanceCreation@@Path["/people"] @AT@ 3897 @LENGTH@ 4
---------------INS StringLiteral@@"/people" @TO@ ClassInstanceCreation@@Path["/people"] @AT@ 3902 @LENGTH@ 9
---INS ExpressionStatement@@MethodInvocation:when(resourceMetadata.isExported()).thenReturn(true) @TO@ MethodDeclaration@@public, void, MethodName:returnsNullCorsConfigurationWithNullRepositories,  @AT@ 3917 @LENGTH@ 53
------INS MethodInvocation@@when(resourceMetadata.isExported()).thenReturn(true) @TO@ ExpressionStatement@@MethodInvocation:when(resourceMetadata.isExported()).thenReturn(true) @AT@ 3917 @LENGTH@ 52
---------INS MethodInvocation@@MethodName:when:[resourceMetadata.isExported()] @TO@ MethodInvocation@@when(resourceMetadata.isExported()).thenReturn(true) @AT@ 3917 @LENGTH@ 35
------------INS MethodInvocation@@resourceMetadata.isExported() @TO@ MethodInvocation@@MethodName:when:[resourceMetadata.isExported()] @AT@ 3922 @LENGTH@ 29
---------------INS SimpleName@@Name:resourceMetadata @TO@ MethodInvocation@@resourceMetadata.isExported() @AT@ 3922 @LENGTH@ 16
---------------INS SimpleName@@MethodName:isExported:[] @TO@ MethodInvocation@@resourceMetadata.isExported() @AT@ 3939 @LENGTH@ 12
---------INS SimpleName@@MethodName:thenReturn:[true] @TO@ MethodInvocation@@when(resourceMetadata.isExported()).thenReturn(true) @AT@ 3953 @LENGTH@ 16
------------INS BooleanLiteral@@true @TO@ SimpleName@@MethodName:thenReturn:[true] @AT@ 3964 @LENGTH@ 4
---INS ExpressionStatement@@MethodInvocation:when(mappings.exportsTopLevelResourceFor("/people")).thenReturn(true) @TO@ MethodDeclaration@@public, void, MethodName:returnsNullCorsConfigurationWithNullRepositories,  @AT@ 3974 @LENGTH@ 70
------INS MethodInvocation@@when(mappings.exportsTopLevelResourceFor("/people")).thenReturn(true) @TO@ ExpressionStatement@@MethodInvocation:when(mappings.exportsTopLevelResourceFor("/people")).thenReturn(true) @AT@ 3974 @LENGTH@ 69
---------INS MethodInvocation@@MethodName:when:[mappings.exportsTopLevelResourceFor("/people")] @TO@ MethodInvocation@@when(mappings.exportsTopLevelResourceFor("/people")).thenReturn(true) @AT@ 3974 @LENGTH@ 52
------------INS MethodInvocation@@mappings.exportsTopLevelResourceFor("/people") @TO@ MethodInvocation@@MethodName:when:[mappings.exportsTopLevelResourceFor("/people")] @AT@ 3979 @LENGTH@ 46
---------------INS SimpleName@@Name:mappings @TO@ MethodInvocation@@mappings.exportsTopLevelResourceFor("/people") @AT@ 3979 @LENGTH@ 8
---------------INS SimpleName@@MethodName:exportsTopLevelResourceFor:["/people"] @TO@ MethodInvocation@@mappings.exportsTopLevelResourceFor("/people") @AT@ 3988 @LENGTH@ 37
------------------INS StringLiteral@@"/people" @TO@ SimpleName@@MethodName:exportsTopLevelResourceFor:["/people"] @AT@ 4015 @LENGTH@ 9
---------INS SimpleName@@MethodName:thenReturn:[true] @TO@ MethodInvocation@@when(mappings.exportsTopLevelResourceFor("/people")).thenReturn(true) @AT@ 4027 @LENGTH@ 16
------------INS BooleanLiteral@@true @TO@ SimpleName@@MethodName:thenReturn:[true] @AT@ 4038 @LENGTH@ 4
---INS ExpressionStatement@@MethodInvocation:when(mappings.iterator()).thenReturn(singletonList(resourceMetadata).iterator()) @TO@ MethodDeclaration@@public, void, MethodName:returnsNullCorsConfigurationWithNullRepositories,  @AT@ 4047 @LENGTH@ 81
------INS MethodInvocation@@when(mappings.iterator()).thenReturn(singletonList(resourceMetadata).iterator()) @TO@ ExpressionStatement@@MethodInvocation:when(mappings.iterator()).thenReturn(singletonList(resourceMetadata).iterator()) @AT@ 4047 @LENGTH@ 80
---------INS MethodInvocation@@MethodName:when:[mappings.iterator()] @TO@ MethodInvocation@@when(mappings.iterator()).thenReturn(singletonList(resourceMetadata).iterator()) @AT@ 4047 @LENGTH@ 25
------------INS MethodInvocation@@mappings.iterator() @TO@ MethodInvocation@@MethodName:when:[mappings.iterator()] @AT@ 4052 @LENGTH@ 19
---------------INS SimpleName@@Name:mappings @TO@ MethodInvocation@@mappings.iterator() @AT@ 4052 @LENGTH@ 8
---------------INS SimpleName@@MethodName:iterator:[] @TO@ MethodInvocation@@mappings.iterator() @AT@ 4061 @LENGTH@ 10
---------INS SimpleName@@MethodName:thenReturn:[singletonList(resourceMetadata).iterator()] @TO@ MethodInvocation@@when(mappings.iterator()).thenReturn(singletonList(resourceMetadata).iterator()) @AT@ 4073 @LENGTH@ 54
------------INS MethodInvocation@@singletonList(resourceMetadata).iterator() @TO@ SimpleName@@MethodName:thenReturn:[singletonList(resourceMetadata).iterator()] @AT@ 4084 @LENGTH@ 42
---------------INS MethodInvocation@@MethodName:singletonList:[resourceMetadata] @TO@ MethodInvocation@@singletonList(resourceMetadata).iterator() @AT@ 4084 @LENGTH@ 31
------------------INS SimpleName@@resourceMetadata @TO@ MethodInvocation@@MethodName:singletonList:[resourceMetadata] @AT@ 4098 @LENGTH@ 16
---------------INS SimpleName@@MethodName:iterator:[] @TO@ MethodInvocation@@singletonList(resourceMetadata).iterator() @AT@ 4116 @LENGTH@ 10
---INS ExpressionStatement@@MethodInvocation:assertThat(accessor.findCorsConfiguration("/people"),is(nullValue())) @TO@ MethodDeclaration@@public, void, MethodName:returnsNullCorsConfigurationWithNullRepositories,  @AT@ 4132 @LENGTH@ 71
------INS MethodInvocation@@assertThat(accessor.findCorsConfiguration("/people"),is(nullValue())) @TO@ ExpressionStatement@@MethodInvocation:assertThat(accessor.findCorsConfiguration("/people"),is(nullValue())) @AT@ 4132 @LENGTH@ 70
---------INS SimpleName@@MethodName:assertThat:[accessor.findCorsConfiguration("/people"), is(nullValue())] @TO@ MethodInvocation@@assertThat(accessor.findCorsConfiguration("/people"),is(nullValue())) @AT@ 4132 @LENGTH@ 70
------------INS MethodInvocation@@accessor.findCorsConfiguration("/people") @TO@ SimpleName@@MethodName:assertThat:[accessor.findCorsConfiguration("/people"), is(nullValue())] @AT@ 4143 @LENGTH@ 41
---------------INS SimpleName@@Name:accessor @TO@ MethodInvocation@@accessor.findCorsConfiguration("/people") @AT@ 4143 @LENGTH@ 8
---------------INS SimpleName@@MethodName:findCorsConfiguration:["/people"] @TO@ MethodInvocation@@accessor.findCorsConfiguration("/people") @AT@ 4152 @LENGTH@ 32
------------------INS StringLiteral@@"/people" @TO@ SimpleName@@MethodName:findCorsConfiguration:["/people"] @AT@ 4174 @LENGTH@ 9
------------INS MethodInvocation@@is(nullValue()) @TO@ SimpleName@@MethodName:assertThat:[accessor.findCorsConfiguration("/people"), is(nullValue())] @AT@ 4186 @LENGTH@ 15
---------------INS SimpleName@@MethodName:is:[nullValue()] @TO@ MethodInvocation@@is(nullValue()) @AT@ 4186 @LENGTH@ 15
------------------INS MethodInvocation@@MethodName:nullValue:[] @TO@ SimpleName@@MethodName:is:[nullValue()] @AT@ 4189 @LENGTH@ 11


UPD ExpressionStatement@@MethodInvocation:connectionFactory(new ConnectionFactory("RemoteConnectionFactory").connectors(Collections.singletonList("http-connector")).entries("java:/RemoteConnectionFactory","java:jboss/exported/jms/RemoteConnectionFactory")) @TO@ MethodInvocation:connectionFactory(new ConnectionFactory<>("RemoteConnectionFactory").connectors(Collections.singletonList("http-connector")).entries("java:/RemoteConnectionFactory","java:jboss/exported/jms/RemoteConnectionFactory")) @AT@ 5718 @LENGTH@ 286
---UPD MethodInvocation@@connectionFactory(new ConnectionFactory("RemoteConnectionFactory").connectors(Collections.singletonList("http-connector")).entries("java:/RemoteConnectionFactory","java:jboss/exported/jms/RemoteConnectionFactory")) @TO@ connectionFactory(new ConnectionFactory<>("RemoteConnectionFactory").connectors(Collections.singletonList("http-connector")).entries("java:/RemoteConnectionFactory","java:jboss/exported/jms/RemoteConnectionFactory")) @AT@ 5718 @LENGTH@ 285
------UPD SimpleName@@MethodName:connectionFactory:[new ConnectionFactory("RemoteConnectionFactory").connectors(Collections.singletonList("http-connector")).entries("java:/RemoteConnectionFactory","java:jboss/exported/jms/RemoteConnectionFactory")] @TO@ MethodName:connectionFactory:[new ConnectionFactory<>("RemoteConnectionFactory").connectors(Collections.singletonList("http-connector")).entries("java:/RemoteConnectionFactory","java:jboss/exported/jms/RemoteConnectionFactory")] @AT@ 5718 @LENGTH@ 285
---------UPD MethodInvocation@@new ConnectionFactory("RemoteConnectionFactory").connectors(Collections.singletonList("http-connector")).entries("java:/RemoteConnectionFactory","java:jboss/exported/jms/RemoteConnectionFactory") @TO@ new ConnectionFactory<>("RemoteConnectionFactory").connectors(Collections.singletonList("http-connector")).entries("java:/RemoteConnectionFactory","java:jboss/exported/jms/RemoteConnectionFactory") @AT@ 5736 @LENGTH@ 266
------------UPD ClassInstanceCreation@@ConnectionFactory["RemoteConnectionFactory"] @TO@ ConnectionFactory<>["RemoteConnectionFactory"] @AT@ 5736 @LENGTH@ 48
---------------INS ParameterizedType@@ConnectionFactory<> @TO@ ClassInstanceCreation@@ConnectionFactory["RemoteConnectionFactory"] @AT@ 5740 @LENGTH@ 19
------------------INS SimpleType@@ConnectionFactory @TO@ ParameterizedType@@ConnectionFactory<> @AT@ 5740 @LENGTH@ 17
---------------DEL SimpleType@@ConnectionFactory @AT@ 5740 @LENGTH@ 17


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<BonitaComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<BonitaComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5429 @LENGTH@ 339
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 5433 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5433 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  ComponentCustomizer<BonitaComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ ThenBody:{  for (  ComponentCustomizer<BonitaComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5489 @LENGTH@ 279
------UPD EnhancedForStatement@@for (ComponentCustomizer<BonitaComponent> configurer : customizers) {  LOGGER.debug("Configure component {}, with configurer {}",component,configurer);  configurer.customize(component);} @TO@ for (ComponentCustomizer<BonitaComponent> customizer : customizers) {  LOGGER.debug("Configure component {}, with customizer {}",component,customizer);  customizer.customize(component);} @AT@ 5503 @LENGTH@ 255
---------UPD SingleVariableDeclaration@@ComponentCustomizer<BonitaComponent> configurer @TO@ ComponentCustomizer<BonitaComponent> customizer @AT@ 5508 @LENGTH@ 47
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5545 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5589 @LENGTH@ 106
------------UPD MethodInvocation@@LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5589 @LENGTH@ 105
---------------UPD SimpleName@@MethodName:debug:["Configure component {}, with configurer {}", component, configurer] @TO@ MethodName:debug:["Configure component {}, with customizer {}", component, customizer] @AT@ 5596 @LENGTH@ 98
------------------UPD StringLiteral@@"Configure component {}, with configurer {}" @TO@ "Configure component {}, with customizer {}" @AT@ 5602 @LENGTH@ 44
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5683 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(component) @TO@ MethodInvocation:customizer.customize(component) @AT@ 5712 @LENGTH@ 32
------------UPD MethodInvocation@@configurer.customize(component) @TO@ customizer.customize(component) @AT@ 5712 @LENGTH@ 31
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5712 @LENGTH@ 10


DEL ExpressionStatement@@MethodInvocation:when(operations.getConverter()).thenReturn(converter) @AT@ 2680 @LENGTH@ 54
---DEL MethodInvocation@@when(operations.getConverter()).thenReturn(converter) @AT@ 2680 @LENGTH@ 53
------DEL MethodInvocation@@MethodName:when:[operations.getConverter()] @AT@ 2680 @LENGTH@ 31
---------DEL MethodInvocation@@operations.getConverter() @AT@ 2685 @LENGTH@ 25
------------DEL SimpleName@@Name:operations @AT@ 2685 @LENGTH@ 10
------------DEL SimpleName@@MethodName:getConverter:[] @AT@ 2696 @LENGTH@ 14
------DEL SimpleName@@MethodName:thenReturn:[converter] @AT@ 2712 @LENGTH@ 21
---------DEL SimpleName@@converter @AT@ 2723 @LENGTH@ 9


UPD TryStatement@@try {  attempt++;  LOG.debug("Attempt #{}. Starting {} consumer(s) for {}:{}",attempt,consumerCount,destinationName,completionSize);  localConnection=connectionFactory.createConnection();  localConnection.start();  final List<AtomicBoolean> triggers=new ArrayList<>();  for (int i=0; i < consumerCount; i++) {    BatchConsumptionLoop loop=new BatchConsumptionLoop();    triggers.add(loop.getCompletionTimeoutTrigger());    jmsConsumerExecutors.execute(loop);  }  connection=localConnection;  if (completionInterval > 0) {    timeoutCheckerExecutorService.scheduleAtFixedRate(new CompletionIntervalTask(triggers),completionInterval,completionInterval,TimeUnit.MILLISECONDS);  }  if (attempt > 1) {    LOG.info("Successfully refreshed connection after {} attempts.",attempt);  }  LOG.info("Started {} consumer(s) for {}:{}",consumerCount,destinationName,completionSize);  running.set(true);  return;} catch (Throwable e) {  try {    if (localConnection != null) {      localConnection.close();    }  } catch (  Throwable t) {  }  if (recoveryEnabled) {    getExceptionHandler().handleException("Error starting consumer after " + attempt + " attempts. Will try again in "+ recoveryInterval+ " millis.",e);  } else {    throw ObjectHelper.wrapRuntimeCamelException(e);  }} @TO@ try {  attempt++;  LOG.debug("Attempt #{}. Starting {} consumer(s) for {}:{}",attempt,consumerCount,destinationName,completionSize);  localConnection=connectionFactory.createConnection();  localConnection.start();  connection=localConnection;  final List<AtomicBoolean> triggers=new ArrayList<>();  for (int i=0; i < consumerCount; i++) {    BatchConsumptionLoop loop=new BatchConsumptionLoop();    triggers.add(loop.getCompletionTimeoutTrigger());    jmsConsumerExecutors.submit(loop);  }  if (completionInterval > 0) {    timeoutCheckerExecutorService.scheduleAtFixedRate(new CompletionIntervalTask(triggers),completionInterval,completionInterval,TimeUnit.MILLISECONDS);  }  if (attempt > 1) {    LOG.info("Successfully refreshed connection after {} attempts.",attempt);  }  LOG.info("Started {} consumer(s) for {}:{}",consumerCount,destinationName,completionSize);  running.set(true);  return;} catch (Throwable e) {  try {    if (localConnection != null) {      localConnection.close();    }  } catch (  Throwable t) {  }  if (recoveryEnabled) {    getExceptionHandler().handleException("Error starting consumer after " + attempt + " attempts. Will try again in "+ recoveryInterval+ " millis.",e);  } else {    throw ObjectHelper.wrapRuntimeCamelException(e);  }} @AT@ 7566 @LENGTH@ 2246
---UPD ForStatement@@for (int i=0; i < consumerCount; i++) {  BatchConsumptionLoop loop=new BatchConsumptionLoop();  triggers.add(loop.getCompletionTimeoutTrigger());  jmsConsumerExecutors.execute(loop);} @TO@ for (int i=0; i < consumerCount; i++) {  BatchConsumptionLoop loop=new BatchConsumptionLoop();  triggers.add(loop.getCompletionTimeoutTrigger());  jmsConsumerExecutors.submit(loop);} @AT@ 8013 @LENGTH@ 277
------UPD ExpressionStatement@@MethodInvocation:jmsConsumerExecutors.execute(loop) @TO@ MethodInvocation:jmsConsumerExecutors.submit(loop) @AT@ 8233 @LENGTH@ 35
---------UPD MethodInvocation@@jmsConsumerExecutors.execute(loop) @TO@ jmsConsumerExecutors.submit(loop) @AT@ 8233 @LENGTH@ 34
------------UPD SimpleName@@MethodName:execute:[loop] @TO@ MethodName:submit:[loop] @AT@ 8254 @LENGTH@ 13
---MOV ExpressionStatement@@Assignment:connection=localConnection @TO@ TryStatement@@try {  attempt++;  LOG.debug("Attempt #{}. Starting {} consumer(s) for {}:{}",attempt,consumerCount,destinationName,completionSize);  localConnection=connectionFactory.createConnection();  localConnection.start();  final List<AtomicBoolean> triggers=new ArrayList<>();  for (int i=0; i < consumerCount; i++) {    BatchConsumptionLoop loop=new BatchConsumptionLoop();    triggers.add(loop.getCompletionTimeoutTrigger());    jmsConsumerExecutors.execute(loop);  }  connection=localConnection;  if (completionInterval > 0) {    timeoutCheckerExecutorService.scheduleAtFixedRate(new CompletionIntervalTask(triggers),completionInterval,completionInterval,TimeUnit.MILLISECONDS);  }  if (attempt > 1) {    LOG.info("Successfully refreshed connection after {} attempts.",attempt);  }  LOG.info("Started {} consumer(s) for {}:{}",consumerCount,destinationName,completionSize);  running.set(true);  return;} catch (Throwable e) {  try {    if (localConnection != null) {      localConnection.close();    }  } catch (  Throwable t) {  }  if (recoveryEnabled) {    getExceptionHandler().handleException("Error starting consumer after " + attempt + " attempts. Will try again in "+ recoveryInterval+ " millis.",e);  } else {    throw ObjectHelper.wrapRuntimeCamelException(e);  }} @AT@ 8367 @LENGTH@ 29


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<CinderComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<CinderComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5469 @LENGTH@ 339
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 5473 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5473 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  ComponentCustomizer<CinderComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ ThenBody:{  for (  ComponentCustomizer<CinderComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5529 @LENGTH@ 279
------UPD EnhancedForStatement@@for (ComponentCustomizer<CinderComponent> configurer : customizers) {  LOGGER.debug("Configure component {}, with configurer {}",component,configurer);  configurer.customize(component);} @TO@ for (ComponentCustomizer<CinderComponent> customizer : customizers) {  LOGGER.debug("Configure component {}, with customizer {}",component,customizer);  customizer.customize(component);} @AT@ 5543 @LENGTH@ 255
---------UPD SingleVariableDeclaration@@ComponentCustomizer<CinderComponent> configurer @TO@ ComponentCustomizer<CinderComponent> customizer @AT@ 5548 @LENGTH@ 47
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5585 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5629 @LENGTH@ 106
------------UPD MethodInvocation@@LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5629 @LENGTH@ 105
---------------UPD SimpleName@@MethodName:debug:["Configure component {}, with configurer {}", component, configurer] @TO@ MethodName:debug:["Configure component {}, with customizer {}", component, customizer] @AT@ 5636 @LENGTH@ 98
------------------UPD StringLiteral@@"Configure component {}, with configurer {}" @TO@ "Configure component {}, with customizer {}" @AT@ 5642 @LENGTH@ 44
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5723 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(component) @TO@ MethodInvocation:customizer.customize(component) @AT@ 5752 @LENGTH@ 32
------------UPD MethodInvocation@@configurer.customize(component) @TO@ customizer.customize(component) @AT@ 5752 @LENGTH@ 31
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5752 @LENGTH@ 10


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<DrillComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<DrillComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5412 @LENGTH@ 338
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 5416 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5416 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  ComponentCustomizer<DrillComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ ThenBody:{  for (  ComponentCustomizer<DrillComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5472 @LENGTH@ 278
------UPD EnhancedForStatement@@for (ComponentCustomizer<DrillComponent> configurer : customizers) {  LOGGER.debug("Configure component {}, with configurer {}",component,configurer);  configurer.customize(component);} @TO@ for (ComponentCustomizer<DrillComponent> customizer : customizers) {  LOGGER.debug("Configure component {}, with customizer {}",component,customizer);  customizer.customize(component);} @AT@ 5486 @LENGTH@ 254
---------UPD SingleVariableDeclaration@@ComponentCustomizer<DrillComponent> configurer @TO@ ComponentCustomizer<DrillComponent> customizer @AT@ 5491 @LENGTH@ 46
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5527 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5571 @LENGTH@ 106
------------UPD MethodInvocation@@LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5571 @LENGTH@ 105
---------------UPD SimpleName@@MethodName:debug:["Configure component {}, with configurer {}", component, configurer] @TO@ MethodName:debug:["Configure component {}, with customizer {}", component, customizer] @AT@ 5578 @LENGTH@ 98
------------------UPD StringLiteral@@"Configure component {}, with configurer {}" @TO@ "Configure component {}, with customizer {}" @AT@ 5584 @LENGTH@ 44
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5665 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(component) @TO@ MethodInvocation:customizer.customize(component) @AT@ 5694 @LENGTH@ 32
------------UPD MethodInvocation@@configurer.customize(component) @TO@ customizer.customize(component) @AT@ 5694 @LENGTH@ 31
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5694 @LENGTH@ 10


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<NettyHttpComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<NettyHttpComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5484 @LENGTH@ 342
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 5488 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5488 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  ComponentCustomizer<NettyHttpComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ ThenBody:{  for (  ComponentCustomizer<NettyHttpComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5544 @LENGTH@ 282
------UPD EnhancedForStatement@@for (ComponentCustomizer<NettyHttpComponent> configurer : customizers) {  LOGGER.debug("Configure component {}, with configurer {}",component,configurer);  configurer.customize(component);} @TO@ for (ComponentCustomizer<NettyHttpComponent> customizer : customizers) {  LOGGER.debug("Configure component {}, with customizer {}",component,customizer);  customizer.customize(component);} @AT@ 5558 @LENGTH@ 258
---------UPD SingleVariableDeclaration@@ComponentCustomizer<NettyHttpComponent> configurer @TO@ ComponentCustomizer<NettyHttpComponent> customizer @AT@ 5563 @LENGTH@ 50
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5603 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5647 @LENGTH@ 106
------------UPD MethodInvocation@@LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5647 @LENGTH@ 105
---------------UPD SimpleName@@MethodName:debug:["Configure component {}, with configurer {}", component, configurer] @TO@ MethodName:debug:["Configure component {}, with customizer {}", component, customizer] @AT@ 5654 @LENGTH@ 98
------------------UPD StringLiteral@@"Configure component {}, with configurer {}" @TO@ "Configure component {}, with customizer {}" @AT@ 5660 @LENGTH@ 44
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5741 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(component) @TO@ MethodInvocation:customizer.customize(component) @AT@ 5770 @LENGTH@ 32
------------UPD MethodInvocation@@configurer.customize(component) @TO@ customizer.customize(component) @AT@ 5770 @LENGTH@ 31
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5770 @LENGTH@ 10


UPD ReturnStatement@@MethodInvocation:multiHashOrdered(parentHashCode(),3323,userSpec.hashCode()) @TO@ MethodInvocation:multiHashUnordered(parentHashCode(),3323,userSpec.hashCode()) @AT@ 1910 @LENGTH@ 69
---UPD MethodInvocation@@multiHashOrdered(parentHashCode(),3323,userSpec.hashCode()) @TO@ multiHashUnordered(parentHashCode(),3323,userSpec.hashCode()) @AT@ 1917 @LENGTH@ 61
------UPD SimpleName@@MethodName:multiHashOrdered:[parentHashCode(), 3323, userSpec.hashCode()] @TO@ MethodName:multiHashUnordered:[parentHashCode(), 3323, userSpec.hashCode()] @AT@ 1917 @LENGTH@ 61


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled(); @AT@ 5333 @LENGTH@ 160
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5341 @LENGTH@ 151
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5341 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5358 @LENGTH@ 134
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 5358 @LENGTH@ 64
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5358 @LENGTH@ 35
---------UPD MethodInvocation@@componentConfiguration.getConfigurer().isEnabled() @TO@ componentConfiguration.getCustomizer().isEnabled() @AT@ 5442 @LENGTH@ 50
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5442 @LENGTH@ 38


UPD TypeDeclaration@@[public, static]Runnable,  @TO@ [public]Runnable,  @AT@ 994 @LENGTH@ 77
---DEL Modifier@@static @AT@ 1001 @LENGTH@ 6


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<ChronicleEngineComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<ChronicleEngineComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5618 @LENGTH@ 348
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 5622 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5622 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  ComponentCustomizer<ChronicleEngineComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ ThenBody:{  for (  ComponentCustomizer<ChronicleEngineComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5678 @LENGTH@ 288
------UPD EnhancedForStatement@@for (ComponentCustomizer<ChronicleEngineComponent> configurer : customizers) {  LOGGER.debug("Configure component {}, with configurer {}",component,configurer);  configurer.customize(component);} @TO@ for (ComponentCustomizer<ChronicleEngineComponent> customizer : customizers) {  LOGGER.debug("Configure component {}, with customizer {}",component,customizer);  customizer.customize(component);} @AT@ 5692 @LENGTH@ 264
---------UPD SingleVariableDeclaration@@ComponentCustomizer<ChronicleEngineComponent> configurer @TO@ ComponentCustomizer<ChronicleEngineComponent> customizer @AT@ 5697 @LENGTH@ 56
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5743 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5787 @LENGTH@ 106
------------UPD MethodInvocation@@LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5787 @LENGTH@ 105
---------------UPD SimpleName@@MethodName:debug:["Configure component {}, with configurer {}", component, configurer] @TO@ MethodName:debug:["Configure component {}, with customizer {}", component, customizer] @AT@ 5794 @LENGTH@ 98
------------------UPD StringLiteral@@"Configure component {}, with configurer {}" @TO@ "Configure component {}, with customizer {}" @AT@ 5800 @LENGTH@ 44
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5881 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(component) @TO@ MethodInvocation:customizer.customize(component) @AT@ 5910 @LENGTH@ 32
------------UPD MethodInvocation@@configurer.customize(component) @TO@ customizer.customize(component) @AT@ 5910 @LENGTH@ 31
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5910 @LENGTH@ 10


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  LanguageCustomizer<SimpleLanguage> configurer : customizers) {    LOGGER.debug("Configure language {}, with configurer {}",language,configurer);    configurer.customize(language);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  LanguageCustomizer<SimpleLanguage> customizer : customizers) {    LOGGER.debug("Configure language {}, with customizer {}",language,customizer);    customizer.customize(language);  }} @AT@ 4725 @LENGTH@ 334
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 4729 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 4729 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  LanguageCustomizer<SimpleLanguage> configurer : customizers) {    LOGGER.debug("Configure language {}, with configurer {}",language,configurer);    configurer.customize(language);  }} @TO@ ThenBody:{  for (  LanguageCustomizer<SimpleLanguage> customizer : customizers) {    LOGGER.debug("Configure language {}, with customizer {}",language,customizer);    customizer.customize(language);  }} @AT@ 4785 @LENGTH@ 274
------UPD EnhancedForStatement@@for (LanguageCustomizer<SimpleLanguage> configurer : customizers) {  LOGGER.debug("Configure language {}, with configurer {}",language,configurer);  configurer.customize(language);} @TO@ for (LanguageCustomizer<SimpleLanguage> customizer : customizers) {  LOGGER.debug("Configure language {}, with customizer {}",language,customizer);  customizer.customize(language);} @AT@ 4799 @LENGTH@ 250
---------UPD SingleVariableDeclaration@@LanguageCustomizer<SimpleLanguage> configurer @TO@ LanguageCustomizer<SimpleLanguage> customizer @AT@ 4804 @LENGTH@ 45
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 4839 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure language {}, with configurer {}",language,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure language {}, with customizer {}",language,customizer) @AT@ 4883 @LENGTH@ 104
------------UPD MethodInvocation@@LOGGER.debug("Configure language {}, with configurer {}",language,configurer) @TO@ LOGGER.debug("Configure language {}, with customizer {}",language,customizer) @AT@ 4883 @LENGTH@ 103
---------------UPD SimpleName@@MethodName:debug:["Configure language {}, with configurer {}", language, configurer] @TO@ MethodName:debug:["Configure language {}, with customizer {}", language, customizer] @AT@ 4890 @LENGTH@ 96
------------------UPD StringLiteral@@"Configure language {}, with configurer {}" @TO@ "Configure language {}, with customizer {}" @AT@ 4896 @LENGTH@ 43
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 4975 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(language) @TO@ MethodInvocation:customizer.customize(language) @AT@ 5004 @LENGTH@ 31
------------UPD MethodInvocation@@configurer.customize(language) @TO@ customizer.customize(language) @AT@ 5004 @LENGTH@ 30
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5004 @LENGTH@ 10


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && dataformatConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && dataformatConfiguration.getCustomizer().isEnabled(); @AT@ 5237 @LENGTH@ 177
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && dataformatConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && dataformatConfiguration.getCustomizer().isEnabled() @AT@ 5245 @LENGTH@ 168
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5245 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && dataformatConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && dataformatConfiguration.getCustomizer().isEnabled() @AT@ 5262 @LENGTH@ 151
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 5262 @LENGTH@ 72
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5262 @LENGTH@ 35
---------UPD MethodInvocation@@dataformatConfiguration.getConfigurer().isEnabled() @TO@ dataformatConfiguration.getCustomizer().isEnabled() @AT@ 5362 @LENGTH@ 51
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5362 @LENGTH@ 39


UPD VariableDeclarationStatement@@byte[] derived=SCrypt.generate(Utf8.encode(rawPassword),salt,cpuCost,memoryCost,parallelization,32); @TO@ byte[] derived=SCrypt.generate(Utf8.encode(rawPassword),salt,cpuCost,memoryCost,parallelization,keyLength); @AT@ 6098 @LENGTH@ 107
---UPD VariableDeclarationFragment@@derived=SCrypt.generate(Utf8.encode(rawPassword),salt,cpuCost,memoryCost,parallelization,32) @TO@ derived=SCrypt.generate(Utf8.encode(rawPassword),salt,cpuCost,memoryCost,parallelization,keyLength) @AT@ 6105 @LENGTH@ 99
------UPD MethodInvocation@@SCrypt.generate(Utf8.encode(rawPassword),salt,cpuCost,memoryCost,parallelization,32) @TO@ SCrypt.generate(Utf8.encode(rawPassword),salt,cpuCost,memoryCost,parallelization,keyLength) @AT@ 6115 @LENGTH@ 89
---------UPD SimpleName@@MethodName:generate:[Utf8.encode(rawPassword), salt, cpuCost, memoryCost, parallelization, 32] @TO@ MethodName:generate:[Utf8.encode(rawPassword), salt, cpuCost, memoryCost, parallelization, keyLength] @AT@ 6122 @LENGTH@ 82
------------INS SimpleName@@keyLength @TO@ SimpleName@@MethodName:generate:[Utf8.encode(rawPassword), salt, cpuCost, memoryCost, parallelization, 32] @AT@ 6201 @LENGTH@ 9
------------DEL NumberLiteral@@32 @AT@ 6201 @LENGTH@ 2


UPD ExpressionStatement@@MethodInvocation:Assert.hasLength(artifactParameterName) @TO@ MethodInvocation:Assert.hasLength(artifactParameterName,"artifactParameterName is expected to have a length") @AT@ 4681 @LENGTH@ 40
---UPD MethodInvocation@@Assert.hasLength(artifactParameterName) @TO@ Assert.hasLength(artifactParameterName,"artifactParameterName is expected to have a length") @AT@ 4681 @LENGTH@ 39
------UPD SimpleName@@MethodName:hasLength:[artifactParameterName] @TO@ MethodName:hasLength:[artifactParameterName, "artifactParameterName is expected to have a length"] @AT@ 4688 @LENGTH@ 32
---------INS StringLiteral@@"artifactParameterName is expected to have a length" @TO@ SimpleName@@MethodName:hasLength:[artifactParameterName] @AT@ 4721 @LENGTH@ 52


UPD SwitchStatement@@switch (type) {case USERNAME_PASSWORD:  ObjectHelper.notNull(userName,"userName (username/password authentication)");ObjectHelper.notNull(password,"password (username/password authentication)");ObjectHelper.notNull(clientSecret,"clientSecret (username/password authentication)");break;case REFRESH_TOKEN:ObjectHelper.notNull(refreshToken,"refreshToken (authentication with refresh token)");ObjectHelper.notNull(clientSecret,"clientSecret (authentication with refresh token)");break;case JWT:ObjectHelper.notNull(userName,"userName (JWT authentication)");ObjectHelper.notNull(keystore,"keystore (JWT authentication)");break;} @TO@ switch (type) {case USERNAME_PASSWORD:  ObjectHelper.notNull(userName,"userName (username/password authentication)");ObjectHelper.notNull(password,"password (username/password authentication)");ObjectHelper.notNull(clientSecret,"clientSecret (username/password authentication)");break;case REFRESH_TOKEN:ObjectHelper.notNull(refreshToken,"refreshToken (authentication with refresh token)");ObjectHelper.notNull(clientSecret,"clientSecret (authentication with refresh token)");break;case JWT:ObjectHelper.notNull(userName,"userName (JWT authentication)");ObjectHelper.notNull(keystore,"keystore (JWT authentication)");break;default :throw new IllegalArgumentException("Unknown authentication type: " + type);} @AT@ 7075 @LENGTH@ 795
---INS SwitchCase@@default @TO@ SwitchStatement@@switch (type) {case USERNAME_PASSWORD:  ObjectHelper.notNull(userName,"userName (username/password authentication)");ObjectHelper.notNull(password,"password (username/password authentication)");ObjectHelper.notNull(clientSecret,"clientSecret (username/password authentication)");break;case REFRESH_TOKEN:ObjectHelper.notNull(refreshToken,"refreshToken (authentication with refresh token)");ObjectHelper.notNull(clientSecret,"clientSecret (authentication with refresh token)");break;case JWT:ObjectHelper.notNull(userName,"userName (JWT authentication)");ObjectHelper.notNull(keystore,"keystore (JWT authentication)");break;} @AT@ 7869 @LENGTH@ 8
---INS ThrowStatement@@ClassInstanceCreation:new IllegalArgumentException("Unknown authentication type: " + type) @TO@ SwitchStatement@@switch (type) {case USERNAME_PASSWORD:  ObjectHelper.notNull(userName,"userName (username/password authentication)");ObjectHelper.notNull(password,"password (username/password authentication)");ObjectHelper.notNull(clientSecret,"clientSecret (username/password authentication)");break;case REFRESH_TOKEN:ObjectHelper.notNull(refreshToken,"refreshToken (authentication with refresh token)");ObjectHelper.notNull(clientSecret,"clientSecret (authentication with refresh token)");break;case JWT:ObjectHelper.notNull(userName,"userName (JWT authentication)");ObjectHelper.notNull(keystore,"keystore (JWT authentication)");break;} @AT@ 7890 @LENGTH@ 75
------INS ClassInstanceCreation@@IllegalArgumentException["Unknown authentication type: " + type] @TO@ ThrowStatement@@ClassInstanceCreation:new IllegalArgumentException("Unknown authentication type: " + type) @AT@ 7896 @LENGTH@ 68
---------INS New@@new @TO@ ClassInstanceCreation@@IllegalArgumentException["Unknown authentication type: " + type] @AT@ 7896 @LENGTH@ 3
---------INS SimpleType@@IllegalArgumentException @TO@ ClassInstanceCreation@@IllegalArgumentException["Unknown authentication type: " + type] @AT@ 7900 @LENGTH@ 24
---------INS InfixExpression@@"Unknown authentication type: " + type @TO@ ClassInstanceCreation@@IllegalArgumentException["Unknown authentication type: " + type] @AT@ 7925 @LENGTH@ 38
------------INS StringLiteral@@"Unknown authentication type: " @TO@ InfixExpression@@"Unknown authentication type: " + type @AT@ 7925 @LENGTH@ 31
------------INS Operator@@+ @TO@ InfixExpression@@"Unknown authentication type: " + type @AT@ 7956 @LENGTH@ 1
------------INS SimpleName@@type @TO@ InfixExpression@@"Unknown authentication type: " + type @AT@ 7959 @LENGTH@ 4


UPD ExpressionStatement@@MethodInvocation:warning(processingEnv,"Cannot load file") @TO@ MethodInvocation:warning(processingEnv,"APT cannot load file: " + packageName + "/"+ fileName) @AT@ 16622 @LENGTH@ 43
---UPD MethodInvocation@@warning(processingEnv,"Cannot load file") @TO@ warning(processingEnv,"APT cannot load file: " + packageName + "/"+ fileName) @AT@ 16622 @LENGTH@ 42
------UPD SimpleName@@MethodName:warning:[processingEnv, "Cannot load file"] @TO@ MethodName:warning:[processingEnv, "APT cannot load file: " + packageName + "/"+ fileName] @AT@ 16622 @LENGTH@ 42
---------INS InfixExpression@@"APT cannot load file: " + packageName + "/"+ fileName @TO@ SimpleName@@MethodName:warning:[processingEnv, "Cannot load file"] @AT@ 16645 @LENGTH@ 55
------------INS StringLiteral@@"APT cannot load file: " @TO@ InfixExpression@@"APT cannot load file: " + packageName + "/"+ fileName @AT@ 16645 @LENGTH@ 24
------------INS Operator@@+ @TO@ InfixExpression@@"APT cannot load file: " + packageName + "/"+ fileName @AT@ 16669 @LENGTH@ 1
------------INS SimpleName@@packageName @TO@ InfixExpression@@"APT cannot load file: " + packageName + "/"+ fileName @AT@ 16672 @LENGTH@ 11
------------INS StringLiteral@@"/" @TO@ InfixExpression@@"APT cannot load file: " + packageName + "/"+ fileName @AT@ 16686 @LENGTH@ 3
------------INS SimpleName@@fileName @TO@ InfixExpression@@"APT cannot load file: " + packageName + "/"+ fileName @AT@ 16692 @LENGTH@ 8
---------DEL StringLiteral@@"Cannot load file" @AT@ 16645 @LENGTH@ 18


UPD IfStatement@@if (exitCode != 0) {  StringBuilder errStr=new StringBuilder();  for (  String s : childErrorLog) {    errStr.append(s);    errStr.append('\n');  }  rpcServer.cancelClient(clientId,"Child process exited before connecting back with error log " + errStr.toString());  LOG.warn("Child process exited with code {}",exitCode);} @TO@ if (exitCode != 0) {  StringBuilder errStr=new StringBuilder();synchronized (childErrorLog) {    Iterator iter=childErrorLog.iterator();    while (iter.hasNext()) {      errStr.append(iter.next());      errStr.append('\n');    }  }  rpcServer.cancelClient(clientId,"Child process exited before connecting back with error log " + errStr.toString());  LOG.warn("Child process exited with code {}",exitCode);} @AT@ 19615 @LENGTH@ 447
---UPD Block@@ThenBody:{  StringBuilder errStr=new StringBuilder();  for (  String s : childErrorLog) {    errStr.append(s);    errStr.append('\n');  }  rpcServer.cancelClient(clientId,"Child process exited before connecting back with error log " + errStr.toString());  LOG.warn("Child process exited with code {}",exitCode);} @TO@ ThenBody:{  StringBuilder errStr=new StringBuilder();synchronized (childErrorLog) {    Iterator iter=childErrorLog.iterator();    while (iter.hasNext()) {      errStr.append(iter.next());      errStr.append('\n');    }  }  rpcServer.cancelClient(clientId,"Child process exited before connecting back with error log " + errStr.toString());  LOG.warn("Child process exited with code {}",exitCode);} @AT@ 19634 @LENGTH@ 428
------DEL EnhancedForStatement@@for (String s : childErrorLog) {  errStr.append(s);  errStr.append('\n');} @AT@ 19708 @LENGTH@ 119
---------DEL SingleVariableDeclaration@@String s @AT@ 19713 @LENGTH@ 8
------------DEL SimpleType@@String @AT@ 19713 @LENGTH@ 6
------------DEL SimpleName@@s @AT@ 19720 @LENGTH@ 1
---------DEL SimpleName@@childErrorLog @AT@ 19724 @LENGTH@ 13
---------DEL ExpressionStatement@@MethodInvocation:errStr.append(s) @AT@ 19757 @LENGTH@ 17
------INS SynchronizedStatement@@synchronized (childErrorLog) {  Iterator iter=childErrorLog.iterator();  while (iter.hasNext()) {    errStr.append(iter.next());    errStr.append('\n');  }} @TO@ Block@@ThenBody:{  StringBuilder errStr=new StringBuilder();  for (  String s : childErrorLog) {    errStr.append(s);    errStr.append('\n');  }  rpcServer.cancelClient(clientId,"Child process exited before connecting back with error log " + errStr.toString());  LOG.warn("Child process exited with code {}",exitCode);} @AT@ 19765 @LENGTH@ 245
---------INS SimpleName@@childErrorLog @TO@ SynchronizedStatement@@synchronized (childErrorLog) {  Iterator iter=childErrorLog.iterator();  while (iter.hasNext()) {    errStr.append(iter.next());    errStr.append('\n');  }} @AT@ 19778 @LENGTH@ 13
---------INS Block@@SyncBody:{  Iterator iter=childErrorLog.iterator();  while (iter.hasNext()) {    errStr.append(iter.next());    errStr.append('\n');  }} @TO@ SynchronizedStatement@@synchronized (childErrorLog) {  Iterator iter=childErrorLog.iterator();  while (iter.hasNext()) {    errStr.append(iter.next());    errStr.append('\n');  }} @AT@ 19793 @LENGTH@ 217
------------INS VariableDeclarationStatement@@Iterator iter=childErrorLog.iterator(); @TO@ Block@@SyncBody:{  Iterator iter=childErrorLog.iterator();  while (iter.hasNext()) {    errStr.append(iter.next());    errStr.append('\n');  }} @AT@ 19811 @LENGTH@ 41
---------------INS SimpleType@@Iterator @TO@ VariableDeclarationStatement@@Iterator iter=childErrorLog.iterator(); @AT@ 19811 @LENGTH@ 8
---------------INS VariableDeclarationFragment@@iter=childErrorLog.iterator() @TO@ VariableDeclarationStatement@@Iterator iter=childErrorLog.iterator(); @AT@ 19820 @LENGTH@ 31
------------------INS SimpleName@@iter @TO@ VariableDeclarationFragment@@iter=childErrorLog.iterator() @AT@ 19820 @LENGTH@ 4
------------------INS MethodInvocation@@childErrorLog.iterator() @TO@ VariableDeclarationFragment@@iter=childErrorLog.iterator() @AT@ 19827 @LENGTH@ 24
---------------------INS SimpleName@@Name:childErrorLog @TO@ MethodInvocation@@childErrorLog.iterator() @AT@ 19827 @LENGTH@ 13
---------------------INS SimpleName@@MethodName:iterator:[] @TO@ MethodInvocation@@childErrorLog.iterator() @AT@ 19841 @LENGTH@ 10
------------INS WhileStatement@@while (iter.hasNext()) {  errStr.append(iter.next());  errStr.append('\n');} @TO@ Block@@SyncBody:{  Iterator iter=childErrorLog.iterator();  while (iter.hasNext()) {    errStr.append(iter.next());    errStr.append('\n');  }} @AT@ 19869 @LENGTH@ 125
---------------INS MethodInvocation@@iter.hasNext() @TO@ WhileStatement@@while (iter.hasNext()) {  errStr.append(iter.next());  errStr.append('\n');} @AT@ 19875 @LENGTH@ 14
------------------INS SimpleName@@Name:iter @TO@ MethodInvocation@@iter.hasNext() @AT@ 19875 @LENGTH@ 4
------------------INS SimpleName@@MethodName:hasNext:[] @TO@ MethodInvocation@@iter.hasNext() @AT@ 19880 @LENGTH@ 9
---------------INS Block@@WhileBody:{  errStr.append(iter.next());  errStr.append('\n');} @TO@ WhileStatement@@while (iter.hasNext()) {  errStr.append(iter.next());  errStr.append('\n');} @AT@ 19890 @LENGTH@ 104
------------------MOV ExpressionStatement@@MethodInvocation:errStr.append('\n') @TO@ Block@@WhileBody:{  errStr.append(iter.next());  errStr.append('\n');} @AT@ 19791 @LENGTH@ 20
------------------INS ExpressionStatement@@MethodInvocation:errStr.append(iter.next()) @TO@ Block@@WhileBody:{  errStr.append(iter.next());  errStr.append('\n');} @AT@ 19910 @LENGTH@ 27
---------------------MOV MethodInvocation@@errStr.append(s) @TO@ ExpressionStatement@@MethodInvocation:errStr.append(iter.next()) @AT@ 19757 @LENGTH@ 16
------------------------UPD SimpleName@@MethodName:append:[s] @TO@ MethodName:append:[iter.next()] @AT@ 19764 @LENGTH@ 9
---------------------------DEL SimpleName@@s @AT@ 19771 @LENGTH@ 1
---------------------------INS MethodInvocation@@iter.next() @TO@ SimpleName@@MethodName:append:[s] @AT@ 19924 @LENGTH@ 11
------------------------------INS SimpleName@@Name:iter @TO@ MethodInvocation@@iter.next() @AT@ 19924 @LENGTH@ 4
------------------------------INS SimpleName@@MethodName:next:[] @TO@ MethodInvocation@@iter.next() @AT@ 19929 @LENGTH@ 6


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && languageConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && languageConfiguration.getCustomizer().isEnabled(); @AT@ 4557 @LENGTH@ 159
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && languageConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && languageConfiguration.getCustomizer().isEnabled() @AT@ 4565 @LENGTH@ 150
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 4565 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && languageConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && languageConfiguration.getCustomizer().isEnabled() @AT@ 4582 @LENGTH@ 133
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 4582 @LENGTH@ 64
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 4582 @LENGTH@ 35
---------UPD MethodInvocation@@languageConfiguration.getConfigurer().isEnabled() @TO@ languageConfiguration.getCustomizer().isEnabled() @AT@ 4666 @LENGTH@ 49
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 4666 @LENGTH@ 37


UPD MethodDeclaration@@public, void, MethodName:newDtoClass, @CliOption(key="class",mandatory=true,optionContext=UPDATELAST_PROJECT,help="The name of the DTO class to create. If you consider it necessary, " + "you can also specify the package (base package can be specified with `~`). " + "Ex.: `--class ~.domain.MyDto`. You can specify module as well, if necessary. "+ "Ex.: `--class model:~.domain.MyDto`. When working with a multi-module project, "+ "if module is not specified the class will be created in the module which has the focus.") final JavaType name, @CliOption(key="immutable",mandatory=false,specifiedDefaultValue="true",unspecifiedDefaultValue="false",help="Whether the DTO should be inmutable. " + "Default if option present: `true`; default if option not present: `false`.") final boolean immutable, @CliOption(key="utilityMethods",mandatory=false,specifiedDefaultValue="true",unspecifiedDefaultValue="false",help="Whether the DTO should implement `toString()`, `hashCode()` and `equals()` methods. " + "Default if option present: `true`; default if option not present: `false`.") final boolean utilityMethods, @CliOption(key="serializable",mandatory=false,specifiedDefaultValue="true",unspecifiedDefaultValue="false",help="Whether the DTO should implement `java.io.Serializable`. " + "Default if option present: `true`; default if option not present: `false`.") final boolean serializable, @CliOption(key="entityFormatExpression",mandatory=false,help="The SpEL expression used to format the entity when showing it in presentation layer e.g. " + "{#fieldA} {#fieldB}. It adds the `value` attribute to `io.springlets.format.EntityFormat` " + "annotation."+ "This option is available only if `--entityFormatMessage` has not been specified.") String formatExpression, @CliOption(key="entityFormatMessage",mandatory=false,help="The message key used to obtain a localized SpEL expression to format the entity when " + "showing it in presentation layer. It adds the `message` attribute to " + "`io.springlets.format.EntityFormat` annotation and creates a message in all message bundles "+ "with the provided key. Message value should be  modified by developer. This kind of format "+ "has more priority that 'expression' format added with `--entityFormatExpression`"+ "This option is available only if `--entityFormatExpression` has not been specified.") String formatMessage, ShellContext shellContext,  @TO@ public, void, MethodName:newDtoClass, @CliOption(key="class",mandatory=true,optionContext=UPDATELAST_PROJECT,help="The name of the DTO class to create. If you consider it necessary, " + "you can also specify the package (base package can be specified with `~`). " + "Ex.: `--class ~.domain.MyDto`. You can specify module as well, if necessary. "+ "Ex.: `--class model:~.domain.MyDto`. When working with a multi-module project, "+ "if module is not specified the class will be created in the module which has the focus.") final JavaType name, @CliOption(key="immutable",mandatory=false,specifiedDefaultValue="true",unspecifiedDefaultValue="false",help="Whether the DTO should be inmutable. " + "Default if option present: `true`; default if option not present: `false`.") final boolean immutable, @CliOption(key="utilityMethods",mandatory=false,specifiedDefaultValue="true",unspecifiedDefaultValue="false",help="Whether the DTO should implement `toString()`, `hashCode()` and `equals()` methods. " + "Default if option present: `true`; default if option not present: `false`.") final boolean utilityMethods, @CliOption(key="serializable",mandatory=false,specifiedDefaultValue="true",unspecifiedDefaultValue="false",help="Whether the DTO should implement `java.io.Serializable`. " + "Default if option present: `true`; default if option not present: `false`.") final boolean serializable, @CliOption(key="entityFormatExpression",mandatory=false,help="The SpEL expression used to format the entity when showing it in presentation layer e.g. " + "`{#fieldA} {#fieldB}`. It adds the `value` attribute to `io.springlets.format.EntityFormat` " + "annotation.") String formatExpression, @CliOption(key="entityFormatMessage",mandatory=false,help="The message key used to obtain a localized SpEL expression to format the entity when " + "showing it in presentation layer. It adds the `message` attribute to " + "`io.springlets.format.EntityFormat` annotation and creates a message in all message bundles "+ "with the provided key. Message value should be  modified by developer. This kind of format "+ "has more priority that 'expression' format added with `--entityFormatExpression`.") String formatMessage, ShellContext shellContext,  @AT@ 3735 @LENGTH@ 3707
---UPD SingleVariableDeclaration@@@CliOption(key="entityFormatExpression",mandatory=false,help="The SpEL expression used to format the entity when showing it in presentation layer e.g. " + "{#fieldA} {#fieldB}. It adds the `value` attribute to `io.springlets.format.EntityFormat` " + "annotation."+ "This option is available only if `--entityFormatMessage` has not been specified.") String formatExpression @TO@ @CliOption(key="entityFormatExpression",mandatory=false,help="The SpEL expression used to format the entity when showing it in presentation layer e.g. " + "`{#fieldA} {#fieldB}`. It adds the `value` attribute to `io.springlets.format.EntityFormat` " + "annotation.") String formatExpression @AT@ 5414 @LENGTH@ 454
---UPD SingleVariableDeclaration@@@CliOption(key="entityFormatMessage",mandatory=false,help="The message key used to obtain a localized SpEL expression to format the entity when " + "showing it in presentation layer. It adds the `message` attribute to " + "`io.springlets.format.EntityFormat` annotation and creates a message in all message bundles "+ "with the provided key. Message value should be  modified by developer. This kind of format "+ "has more priority that 'expression' format added with `--entityFormatExpression`"+ "This option is available only if `--entityFormatExpression` has not been specified.") String formatMessage @TO@ @CliOption(key="entityFormatMessage",mandatory=false,help="The message key used to obtain a localized SpEL expression to format the entity when " + "showing it in presentation layer. It adds the `message` attribute to " + "`io.springlets.format.EntityFormat` annotation and creates a message in all message bundles "+ "with the provided key. Message value should be  modified by developer. This kind of format "+ "has more priority that 'expression' format added with `--entityFormatExpression`.") String formatMessage @AT@ 5876 @LENGTH@ 716


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled(); @AT@ 5226 @LENGTH@ 160
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5234 @LENGTH@ 151
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5234 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5251 @LENGTH@ 134
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 5251 @LENGTH@ 64
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5251 @LENGTH@ 35
---------UPD MethodInvocation@@componentConfiguration.getConfigurer().isEnabled() @TO@ componentConfiguration.getCustomizer().isEnabled() @AT@ 5335 @LENGTH@ 50
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5335 @LENGTH@ 38


UPD MethodDeclaration@@public, ServiceDefinition, MethodName:choose, List<ServiceDefinition> servers,  @TO@ public, synchronized, ServiceDefinition, MethodName:choose, List<ServiceDefinition> definitions,  @AT@ 1077 @LENGTH@ 225
---UPD SingleVariableDeclaration@@List<ServiceDefinition> servers @TO@ List<ServiceDefinition> definitions @AT@ 1109 @LENGTH@ 31
------UPD SimpleName@@servers @TO@ definitions @AT@ 1133 @LENGTH@ 7
---INS Modifier@@synchronized @TO@ MethodDeclaration@@public, ServiceDefinition, MethodName:choose, List<ServiceDefinition> servers,  @AT@ 1127 @LENGTH@ 12
---UPD VariableDeclarationStatement@@int size=servers.size(); @TO@ int size=definitions.size(); @AT@ 1152 @LENGTH@ 26
------UPD VariableDeclarationFragment@@size=servers.size() @TO@ size=definitions.size() @AT@ 1156 @LENGTH@ 21
---------UPD MethodInvocation@@servers.size() @TO@ definitions.size() @AT@ 1163 @LENGTH@ 14
------------UPD SimpleName@@Name:servers @TO@ Name:definitions @AT@ 1163 @LENGTH@ 7
---UPD ReturnStatement@@MethodInvocation:servers.get(counter) @TO@ MethodInvocation:definitions.get(counter) @AT@ 1268 @LENGTH@ 28
------UPD MethodInvocation@@servers.get(counter) @TO@ definitions.get(counter) @AT@ 1275 @LENGTH@ 20
---------UPD SimpleName@@Name:servers @TO@ Name:definitions @AT@ 1275 @LENGTH@ 7
---INS IfStatement@@if (ObjectHelper.isEmpty(definitions)) {  throw new IllegalArgumentException("The ServiceDefinition list should not be empty");} @TO@ MethodDeclaration@@public, ServiceDefinition, MethodName:choose, List<ServiceDefinition> servers,  @AT@ 1276 @LENGTH@ 148
------INS MethodInvocation@@ObjectHelper.isEmpty(definitions) @TO@ IfStatement@@if (ObjectHelper.isEmpty(definitions)) {  throw new IllegalArgumentException("The ServiceDefinition list should not be empty");} @AT@ 1280 @LENGTH@ 33
---------INS SimpleName@@Name:ObjectHelper @TO@ MethodInvocation@@ObjectHelper.isEmpty(definitions) @AT@ 1280 @LENGTH@ 12
---------INS SimpleName@@MethodName:isEmpty:[definitions] @TO@ MethodInvocation@@ObjectHelper.isEmpty(definitions) @AT@ 1293 @LENGTH@ 20
------------INS SimpleName@@definitions @TO@ SimpleName@@MethodName:isEmpty:[definitions] @AT@ 1301 @LENGTH@ 11
------INS Block@@ThenBody:{  throw new IllegalArgumentException("The ServiceDefinition list should not be empty");} @TO@ IfStatement@@if (ObjectHelper.isEmpty(definitions)) {  throw new IllegalArgumentException("The ServiceDefinition list should not be empty");} @AT@ 1315 @LENGTH@ 109
---------INS ThrowStatement@@ClassInstanceCreation:new IllegalArgumentException("The ServiceDefinition list should not be empty") @TO@ Block@@ThenBody:{  throw new IllegalArgumentException("The ServiceDefinition list should not be empty");} @AT@ 1329 @LENGTH@ 85
------------INS ClassInstanceCreation@@IllegalArgumentException["The ServiceDefinition list should not be empty"] @TO@ ThrowStatement@@ClassInstanceCreation:new IllegalArgumentException("The ServiceDefinition list should not be empty") @AT@ 1335 @LENGTH@ 78
---------------INS New@@new @TO@ ClassInstanceCreation@@IllegalArgumentException["The ServiceDefinition list should not be empty"] @AT@ 1335 @LENGTH@ 3
---------------INS SimpleType@@IllegalArgumentException @TO@ ClassInstanceCreation@@IllegalArgumentException["The ServiceDefinition list should not be empty"] @AT@ 1339 @LENGTH@ 24
---------------INS StringLiteral@@"The ServiceDefinition list should not be empty" @TO@ ClassInstanceCreation@@IllegalArgumentException["The ServiceDefinition list should not be empty"] @AT@ 1364 @LENGTH@ 48


UPD FieldDeclaration@@private, static, final, Pattern, [SECRETS=Pattern.compile("([?&][^=]*(?:passphrase|password|secretKey)[^=]*)=([^&]*)",Pattern.CASE_INSENSITIVE)] @TO@ private, static, final, Pattern, [SECRETS=Pattern.compile("([?&][^=]*(?:passphrase|password|secretKey)[^=]*)=(RAW\\(.*\\)|[^&]*)",Pattern.CASE_INSENSITIVE)] @AT@ 1551 @LENGTH@ 154
---UPD VariableDeclarationFragment@@SECRETS=Pattern.compile("([?&][^=]*(?:passphrase|password|secretKey)[^=]*)=([^&]*)",Pattern.CASE_INSENSITIVE) @TO@ SECRETS=Pattern.compile("([?&][^=]*(?:passphrase|password|secretKey)[^=]*)=(RAW\\(.*\\)|[^&]*)",Pattern.CASE_INSENSITIVE) @AT@ 1580 @LENGTH@ 124
------UPD MethodInvocation@@Pattern.compile("([?&][^=]*(?:passphrase|password|secretKey)[^=]*)=([^&]*)",Pattern.CASE_INSENSITIVE) @TO@ Pattern.compile("([?&][^=]*(?:passphrase|password|secretKey)[^=]*)=(RAW\\(.*\\)|[^&]*)",Pattern.CASE_INSENSITIVE) @AT@ 1590 @LENGTH@ 114
---------UPD SimpleName@@MethodName:compile:["([?&][^=]*(?:passphrase|password|secretKey)[^=]*)=([^&]*)", Pattern.CASE_INSENSITIVE] @TO@ MethodName:compile:["([?&][^=]*(?:passphrase|password|secretKey)[^=]*)=(RAW\\(.*\\)|[^&]*)", Pattern.CASE_INSENSITIVE] @AT@ 1598 @LENGTH@ 106
------------UPD StringLiteral@@"([?&][^=]*(?:passphrase|password|secretKey)[^=]*)=([^&]*)" @TO@ "([?&][^=]*(?:passphrase|password|secretKey)[^=]*)=(RAW\\(.*\\)|[^&]*)" @AT@ 1606 @LENGTH@ 59


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<EventComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<EventComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5426 @LENGTH@ 338
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 5430 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5430 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  ComponentCustomizer<EventComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ ThenBody:{  for (  ComponentCustomizer<EventComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5486 @LENGTH@ 278
------UPD EnhancedForStatement@@for (ComponentCustomizer<EventComponent> configurer : customizers) {  LOGGER.debug("Configure component {}, with configurer {}",component,configurer);  configurer.customize(component);} @TO@ for (ComponentCustomizer<EventComponent> customizer : customizers) {  LOGGER.debug("Configure component {}, with customizer {}",component,customizer);  customizer.customize(component);} @AT@ 5500 @LENGTH@ 254
---------UPD SingleVariableDeclaration@@ComponentCustomizer<EventComponent> configurer @TO@ ComponentCustomizer<EventComponent> customizer @AT@ 5505 @LENGTH@ 46
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5541 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5585 @LENGTH@ 106
------------UPD MethodInvocation@@LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5585 @LENGTH@ 105
---------------UPD SimpleName@@MethodName:debug:["Configure component {}, with configurer {}", component, configurer] @TO@ MethodName:debug:["Configure component {}, with customizer {}", component, customizer] @AT@ 5592 @LENGTH@ 98
------------------UPD StringLiteral@@"Configure component {}, with configurer {}" @TO@ "Configure component {}, with customizer {}" @AT@ 5598 @LENGTH@ 44
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5679 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(component) @TO@ MethodInvocation:customizer.customize(component) @AT@ 5708 @LENGTH@ 32
------------UPD MethodInvocation@@configurer.customize(component) @TO@ customizer.customize(component) @AT@ 5708 @LENGTH@ 31
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5708 @LENGTH@ 10


INS MethodDeclaration@@public, void, MethodName:toWrapperShouldConvertPublisherToRxJava2Observable,  @TO@ TypeDeclaration@@[public]ReactiveWrapperConvertersUnitTests,  @AT@ 6361 @LENGTH@ 245
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:toWrapperShouldConvertPublisherToRxJava2Observable,  @AT@ 6361 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:toWrapperShouldConvertPublisherToRxJava2Observable,  @AT@ 6368 @LENGTH@ 4
---INS SimpleName@@MethodName:toWrapperShouldConvertPublisherToRxJava2Observable @TO@ MethodDeclaration@@public, void, MethodName:toWrapperShouldConvertPublisherToRxJava2Observable,  @AT@ 6373 @LENGTH@ 50
---INS VariableDeclarationStatement@@Flux<String> foo=Flux.just("foo"); @TO@ MethodDeclaration@@public, void, MethodName:toWrapperShouldConvertPublisherToRxJava2Observable,  @AT@ 6431 @LENGTH@ 36
------INS ParameterizedType@@Flux<String> @TO@ VariableDeclarationStatement@@Flux<String> foo=Flux.just("foo"); @AT@ 6431 @LENGTH@ 12
---------INS SimpleType@@Flux @TO@ ParameterizedType@@Flux<String> @AT@ 6431 @LENGTH@ 4
---------INS SimpleType@@String @TO@ ParameterizedType@@Flux<String> @AT@ 6436 @LENGTH@ 6
------INS VariableDeclarationFragment@@foo=Flux.just("foo") @TO@ VariableDeclarationStatement@@Flux<String> foo=Flux.just("foo"); @AT@ 6444 @LENGTH@ 22
---------INS SimpleName@@foo @TO@ VariableDeclarationFragment@@foo=Flux.just("foo") @AT@ 6444 @LENGTH@ 3
---------INS MethodInvocation@@Flux.just("foo") @TO@ VariableDeclarationFragment@@foo=Flux.just("foo") @AT@ 6450 @LENGTH@ 16
------------INS SimpleName@@Name:Flux @TO@ MethodInvocation@@Flux.just("foo") @AT@ 6450 @LENGTH@ 4
------------INS SimpleName@@MethodName:just:["foo"] @TO@ MethodInvocation@@Flux.just("foo") @AT@ 6455 @LENGTH@ 11
---------------INS StringLiteral@@"foo" @TO@ SimpleName@@MethodName:just:["foo"] @AT@ 6460 @LENGTH@ 5
---INS ExpressionStatement@@MethodInvocation:assertThat(ReactiveWrapperConverters.toWrapper(foo,io.reactivex.Observable.class)).isInstanceOf(io.reactivex.Observable.class) @TO@ MethodDeclaration@@public, void, MethodName:toWrapperShouldConvertPublisherToRxJava2Observable,  @AT@ 6470 @LENGTH@ 133
------INS MethodInvocation@@assertThat(ReactiveWrapperConverters.toWrapper(foo,io.reactivex.Observable.class)).isInstanceOf(io.reactivex.Observable.class) @TO@ ExpressionStatement@@MethodInvocation:assertThat(ReactiveWrapperConverters.toWrapper(foo,io.reactivex.Observable.class)).isInstanceOf(io.reactivex.Observable.class) @AT@ 6470 @LENGTH@ 132
---------INS MethodInvocation@@MethodName:assertThat:[ReactiveWrapperConverters.toWrapper(foo,io.reactivex.Observable.class)] @TO@ MethodInvocation@@assertThat(ReactiveWrapperConverters.toWrapper(foo,io.reactivex.Observable.class)).isInstanceOf(io.reactivex.Observable.class) @AT@ 6470 @LENGTH@ 83
------------INS MethodInvocation@@ReactiveWrapperConverters.toWrapper(foo,io.reactivex.Observable.class) @TO@ MethodInvocation@@MethodName:assertThat:[ReactiveWrapperConverters.toWrapper(foo,io.reactivex.Observable.class)] @AT@ 6481 @LENGTH@ 71
---------------INS SimpleName@@Name:ReactiveWrapperConverters @TO@ MethodInvocation@@ReactiveWrapperConverters.toWrapper(foo,io.reactivex.Observable.class) @AT@ 6481 @LENGTH@ 25
---------------INS SimpleName@@MethodName:toWrapper:[foo, io.reactivex.Observable.class] @TO@ MethodInvocation@@ReactiveWrapperConverters.toWrapper(foo,io.reactivex.Observable.class) @AT@ 6507 @LENGTH@ 45
------------------INS SimpleName@@foo @TO@ SimpleName@@MethodName:toWrapper:[foo, io.reactivex.Observable.class] @AT@ 6517 @LENGTH@ 3
------------------INS TypeLiteral@@io.reactivex.Observable.class @TO@ SimpleName@@MethodName:toWrapper:[foo, io.reactivex.Observable.class] @AT@ 6522 @LENGTH@ 29
---------INS SimpleName@@MethodName:isInstanceOf:[io.reactivex.Observable.class] @TO@ MethodInvocation@@assertThat(ReactiveWrapperConverters.toWrapper(foo,io.reactivex.Observable.class)).isInstanceOf(io.reactivex.Observable.class) @AT@ 6559 @LENGTH@ 43
------------INS TypeLiteral@@io.reactivex.Observable.class @TO@ SimpleName@@MethodName:isInstanceOf:[io.reactivex.Observable.class] @AT@ 6572 @LENGTH@ 29


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled(); @AT@ 5294 @LENGTH@ 160
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5302 @LENGTH@ 151
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5302 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5319 @LENGTH@ 134
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 5319 @LENGTH@ 64
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5319 @LENGTH@ 35
---------UPD MethodInvocation@@componentConfiguration.getConfigurer().isEnabled() @TO@ componentConfiguration.getCustomizer().isEnabled() @AT@ 5403 @LENGTH@ 50
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5403 @LENGTH@ 38


UPD TryStatement@@try {  while (running.get() || isStarting()) {    final Session session=connection.createSession(TRANSACTED,Session.CLIENT_ACKNOWLEDGE);    try {      Queue queue=session.createQueue(destinationName);      MessageConsumer consumer=session.createConsumer(queue);      try {        task.consumeBatchesOnLoop(session,consumer);      }  finally {        closeJmsConsumer(consumer);      }    } catch (    javax.jms.IllegalStateException ex) {      if (keepAliveDelay < 0)       throw ex;      getExceptionHandler().handleException("Exception caught consuming from " + destinationName,ex);      if (keepAliveDelay > 0)       Thread.sleep(keepAliveDelay);    } finally {      closeJmsSession(session);    }  }} catch (Throwable ex) {  getExceptionHandler().handleException("Exception caught consuming from " + destinationName,ex);} finally {  CountDownLatch consumersShutdownLatch=consumersShutdownLatchRef.get();  consumersShutdownLatch.countDown();} @TO@ try {  do {    final Session session=connection.createSession(TRANSACTED,Session.CLIENT_ACKNOWLEDGE);    try {      Queue queue=session.createQueue(destinationName);      MessageConsumer consumer=session.createConsumer(queue);      try {        task.consumeBatchesOnLoop(session,consumer);      }  finally {        closeJmsConsumer(consumer);      }    } catch (    javax.jms.IllegalStateException ex) {      if (keepAliveDelay < 0)       throw ex;      getExceptionHandler().handleException("Exception caught consuming from " + destinationName,ex);      if (keepAliveDelay > 0)       Thread.sleep(keepAliveDelay);    } finally {      closeJmsSession(session);    }  } while (running.get() || isStarting());} catch (Throwable ex) {  getExceptionHandler().handleException("Exception caught consuming from " + destinationName,ex);} finally {  CountDownLatch consumersShutdownLatch=consumersShutdownLatchRef.get();  consumersShutdownLatch.countDown();} @AT@ 13093 @LENGTH@ 2414
---DEL WhileStatement@@while (running.get() || isStarting()) {  final Session session=connection.createSession(TRANSACTED,Session.CLIENT_ACKNOWLEDGE);  try {    Queue queue=session.createQueue(destinationName);    MessageConsumer consumer=session.createConsumer(queue);    try {      task.consumeBatchesOnLoop(session,consumer);    }  finally {      closeJmsConsumer(consumer);    }  } catch (  javax.jms.IllegalStateException ex) {    if (keepAliveDelay < 0)     throw ex;    getExceptionHandler().handleException("Exception caught consuming from " + destinationName,ex);    if (keepAliveDelay > 0)     Thread.sleep(keepAliveDelay);  } finally {    closeJmsSession(session);  }} @AT@ 13257 @LENGTH@ 1732
------DEL Block@@WhileBody:{  final Session session=connection.createSession(TRANSACTED,Session.CLIENT_ACKNOWLEDGE);  try {    Queue queue=session.createQueue(destinationName);    MessageConsumer consumer=session.createConsumer(queue);    try {      task.consumeBatchesOnLoop(session,consumer);    }  finally {      closeJmsConsumer(consumer);    }  } catch (  javax.jms.IllegalStateException ex) {    if (keepAliveDelay < 0)     throw ex;    getExceptionHandler().handleException("Exception caught consuming from " + destinationName,ex);    if (keepAliveDelay > 0)     Thread.sleep(keepAliveDelay);  } finally {    closeJmsSession(session);  }} @AT@ 13295 @LENGTH@ 1694
---INS DoStatement@@do {  final Session session=connection.createSession(TRANSACTED,Session.CLIENT_ACKNOWLEDGE);  try {    Queue queue=session.createQueue(destinationName);    MessageConsumer consumer=session.createConsumer(queue);    try {      task.consumeBatchesOnLoop(session,consumer);    }  finally {      closeJmsConsumer(consumer);    }  } catch (  javax.jms.IllegalStateException ex) {    if (keepAliveDelay < 0)     throw ex;    getExceptionHandler().handleException("Exception caught consuming from " + destinationName,ex);    if (keepAliveDelay > 0)     Thread.sleep(keepAliveDelay);  } finally {    closeJmsSession(session);  }} while (running.get() || isStarting()); @TO@ TryStatement@@try {  while (running.get() || isStarting()) {    final Session session=connection.createSession(TRANSACTED,Session.CLIENT_ACKNOWLEDGE);    try {      Queue queue=session.createQueue(destinationName);      MessageConsumer consumer=session.createConsumer(queue);      try {        task.consumeBatchesOnLoop(session,consumer);      }  finally {        closeJmsConsumer(consumer);      }    } catch (    javax.jms.IllegalStateException ex) {      if (keepAliveDelay < 0)       throw ex;      getExceptionHandler().handleException("Exception caught consuming from " + destinationName,ex);      if (keepAliveDelay > 0)       Thread.sleep(keepAliveDelay);    } finally {      closeJmsSession(session);    }  }} catch (Throwable ex) {  getExceptionHandler().handleException("Exception caught consuming from " + destinationName,ex);} finally {  CountDownLatch consumersShutdownLatch=consumersShutdownLatchRef.get();  consumersShutdownLatch.countDown();} @AT@ 13464 @LENGTH@ 1735
------MOV InfixExpression@@running.get() || isStarting() @TO@ DoStatement@@do {  final Session session=connection.createSession(TRANSACTED,Session.CLIENT_ACKNOWLEDGE);  try {    Queue queue=session.createQueue(destinationName);    MessageConsumer consumer=session.createConsumer(queue);    try {      task.consumeBatchesOnLoop(session,consumer);    }  finally {      closeJmsConsumer(consumer);    }  } catch (  javax.jms.IllegalStateException ex) {    if (keepAliveDelay < 0)     throw ex;    getExceptionHandler().handleException("Exception caught consuming from " + destinationName,ex);    if (keepAliveDelay > 0)     Thread.sleep(keepAliveDelay);  } finally {    closeJmsSession(session);  }} while (running.get() || isStarting()); @AT@ 13264 @LENGTH@ 29
------MOV VariableDeclarationStatement@@final Session session=connection.createSession(TRANSACTED,Session.CLIENT_ACKNOWLEDGE); @TO@ DoStatement@@do {  final Session session=connection.createSession(TRANSACTED,Session.CLIENT_ACKNOWLEDGE);  try {    Queue queue=session.createQueue(destinationName);    MessageConsumer consumer=session.createConsumer(queue);    try {      task.consumeBatchesOnLoop(session,consumer);    }  finally {      closeJmsConsumer(consumer);    }  } catch (  javax.jms.IllegalStateException ex) {    if (keepAliveDelay < 0)     throw ex;    getExceptionHandler().handleException("Exception caught consuming from " + destinationName,ex);    if (keepAliveDelay > 0)     Thread.sleep(keepAliveDelay);  } finally {    closeJmsSession(session);  }} while (running.get() || isStarting()); @AT@ 13441 @LENGTH@ 89
------MOV TryStatement@@try {  Queue queue=session.createQueue(destinationName);  MessageConsumer consumer=session.createConsumer(queue);  try {    task.consumeBatchesOnLoop(session,consumer);  }  finally {    closeJmsConsumer(consumer);  }} catch (javax.jms.IllegalStateException ex) {  if (keepAliveDelay < 0)   throw ex;  getExceptionHandler().handleException("Exception caught consuming from " + destinationName,ex);  if (keepAliveDelay > 0)   Thread.sleep(keepAliveDelay);} finally {  closeJmsSession(session);} @TO@ DoStatement@@do {  final Session session=connection.createSession(TRANSACTED,Session.CLIENT_ACKNOWLEDGE);  try {    Queue queue=session.createQueue(destinationName);    MessageConsumer consumer=session.createConsumer(queue);    try {      task.consumeBatchesOnLoop(session,consumer);    }  finally {      closeJmsConsumer(consumer);    }  } catch (  javax.jms.IllegalStateException ex) {    if (keepAliveDelay < 0)     throw ex;    getExceptionHandler().handleException("Exception caught consuming from " + destinationName,ex);    if (keepAliveDelay > 0)     Thread.sleep(keepAliveDelay);  } finally {    closeJmsSession(session);  }} while (running.get() || isStarting()); @AT@ 13551 @LENGTH@ 1420


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<SqsComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<SqsComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5394 @LENGTH@ 336
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 5398 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5398 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  ComponentCustomizer<SqsComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ ThenBody:{  for (  ComponentCustomizer<SqsComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5454 @LENGTH@ 276
------UPD EnhancedForStatement@@for (ComponentCustomizer<SqsComponent> configurer : customizers) {  LOGGER.debug("Configure component {}, with configurer {}",component,configurer);  configurer.customize(component);} @TO@ for (ComponentCustomizer<SqsComponent> customizer : customizers) {  LOGGER.debug("Configure component {}, with customizer {}",component,customizer);  customizer.customize(component);} @AT@ 5468 @LENGTH@ 252
---------UPD SingleVariableDeclaration@@ComponentCustomizer<SqsComponent> configurer @TO@ ComponentCustomizer<SqsComponent> customizer @AT@ 5473 @LENGTH@ 44
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5507 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5551 @LENGTH@ 106
------------UPD MethodInvocation@@LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5551 @LENGTH@ 105
---------------UPD SimpleName@@MethodName:debug:["Configure component {}, with configurer {}", component, configurer] @TO@ MethodName:debug:["Configure component {}, with customizer {}", component, customizer] @AT@ 5558 @LENGTH@ 98
------------------UPD StringLiteral@@"Configure component {}, with configurer {}" @TO@ "Configure component {}, with customizer {}" @AT@ 5564 @LENGTH@ 44
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5645 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(component) @TO@ MethodInvocation:customizer.customize(component) @AT@ 5674 @LENGTH@ 32
------------UPD MethodInvocation@@configurer.customize(component) @TO@ customizer.customize(component) @AT@ 5674 @LENGTH@ 31
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5674 @LENGTH@ 10


INS ExpressionStatement@@MethodInvocation:ignore.add("org.opensaml") @TO@ MethodDeclaration@@private, static, void, MethodName:lookForVersionMismatch, ITestConfig config, List<MavenResolvedArtifact> dependencyArtifacts,  @AT@ 14966 @LENGTH@ 27
---INS MethodInvocation@@ignore.add("org.opensaml") @TO@ ExpressionStatement@@MethodInvocation:ignore.add("org.opensaml") @AT@ 14966 @LENGTH@ 26
------INS SimpleName@@Name:ignore @TO@ MethodInvocation@@ignore.add("org.opensaml") @AT@ 14966 @LENGTH@ 6
------INS SimpleName@@MethodName:add:["org.opensaml"] @TO@ MethodInvocation@@ignore.add("org.opensaml") @AT@ 14973 @LENGTH@ 19
---------INS StringLiteral@@"org.opensaml" @TO@ SimpleName@@MethodName:add:["org.opensaml"] @AT@ 14977 @LENGTH@ 14


UPD EnhancedForStatement@@for (String methodName : methods) {  BeanHolder holder;  if (beanToCall != null) {    holder=new ConstantBeanHolder(beanToCall,exchange.getContext());  } else   if (beanType != null) {    holder=new ConstantTypeBeanHolder(beanType,exchange.getContext());  } else {    holder=null;  }  boolean nullSafe=OgnlHelper.isNullSafeOperator(methodName);  if (holder == null) {    String name=getBeanName(null,beanHolder);    throw new RuntimeBeanExpressionException(exchange,name,ognl,"last method returned null and therefore cannot continue to invoke method " + methodName + " on a null instance");  }  ognlPath+=methodName;  methodName=OgnlHelper.removeLeadingOperators(methodName);  String key=null;  KeyValueHolder<String,String> index=OgnlHelper.isOgnlIndex(methodName);  if (index != null) {    methodName=index.getKey();    key=index.getValue();  }  if (methodName != null) {    InvokeProcessor invoke=new InvokeProcessor(holder,methodName);    invoke.process(resultExchange);    if (resultExchange.getException() != null) {      throw new RuntimeBeanExpressionException(exchange,beanName,methodName,resultExchange.getException());    }    result=invoke.getResult();  }  if (key != null) {    result=lookupResult(resultExchange,key,result,nullSafe,ognlPath,holder.getBean());  }  if (result == null && nullSafe) {    return;  }  beanToCall=result;  beanType=null;} @TO@ for (String methodName : methods) {  BeanHolder holder;  if (beanToCall != null) {    holder=new ConstantBeanHolder(beanToCall,exchange.getContext());  } else   if (beanType != null) {    holder=new ConstantTypeBeanHolder(beanType,exchange.getContext());  } else {    holder=null;  }  boolean nullSafe=OgnlHelper.isNullSafeOperator(methodName);  if (holder == null) {    String name=getBeanName(null,beanHolder);    throw new RuntimeBeanExpressionException(exchange,name,ognl,"last method returned null and therefore cannot continue to invoke method " + methodName + " on a null instance");  }  ognlPath+=methodName;  methodName=OgnlHelper.removeLeadingOperators(methodName);  String key=null;  KeyValueHolder<String,String> index=OgnlHelper.isOgnlIndex(methodName);  if (index != null) {    methodName=index.getKey();    key=index.getValue();  }  if (methodName != null) {    InvokeProcessor invoke=new InvokeProcessor(holder,methodName);    invoke.process(resultExchange);    if (resultExchange.getException() != null) {      throw new RuntimeBeanExpressionException(exchange,beanName,methodName,resultExchange.getException());    }    result=invoke.getResult();  }  if (key != null) {    if (SimpleLanguage.hasSimpleFunction(key)) {      key=SimpleLanguage.expression(key).evaluate(exchange,String.class);    }    if (key != null) {      result=lookupResult(resultExchange,key,result,nullSafe,ognlPath,holder.getBean());    }  }  if (result == null && nullSafe) {    return;  }  beanToCall=result;  beanType=null;} @AT@ 11325 @LENGTH@ 2631
---INS IfStatement@@if (key != null) {  if (SimpleLanguage.hasSimpleFunction(key)) {    key=SimpleLanguage.expression(key).evaluate(exchange,String.class);  }  if (key != null) {    result=lookupResult(resultExchange,key,result,nullSafe,ognlPath,holder.getBean());  }} @TO@ EnhancedForStatement@@for (String methodName : methods) {  BeanHolder holder;  if (beanToCall != null) {    holder=new ConstantBeanHolder(beanToCall,exchange.getContext());  } else   if (beanType != null) {    holder=new ConstantTypeBeanHolder(beanType,exchange.getContext());  } else {    holder=null;  }  boolean nullSafe=OgnlHelper.isNullSafeOperator(methodName);  if (holder == null) {    String name=getBeanName(null,beanHolder);    throw new RuntimeBeanExpressionException(exchange,name,ognl,"last method returned null and therefore cannot continue to invoke method " + methodName + " on a null instance");  }  ognlPath+=methodName;  methodName=OgnlHelper.removeLeadingOperators(methodName);  String key=null;  KeyValueHolder<String,String> index=OgnlHelper.isOgnlIndex(methodName);  if (index != null) {    methodName=index.getKey();    key=index.getValue();  }  if (methodName != null) {    InvokeProcessor invoke=new InvokeProcessor(holder,methodName);    invoke.process(resultExchange);    if (resultExchange.getException() != null) {      throw new RuntimeBeanExpressionException(exchange,beanName,methodName,resultExchange.getException());    }    result=invoke.getResult();  }  if (key != null) {    result=lookupResult(resultExchange,key,result,nullSafe,ognlPath,holder.getBean());  }  if (result == null && nullSafe) {    return;  }  beanToCall=result;  beanType=null;} @AT@ 13581 @LENGTH@ 481
------INS InfixExpression@@key != null @TO@ IfStatement@@if (key != null) {  if (SimpleLanguage.hasSimpleFunction(key)) {    key=SimpleLanguage.expression(key).evaluate(exchange,String.class);  }  if (key != null) {    result=lookupResult(resultExchange,key,result,nullSafe,ognlPath,holder.getBean());  }} @AT@ 13585 @LENGTH@ 11
---------INS SimpleName@@key @TO@ InfixExpression@@key != null @AT@ 13585 @LENGTH@ 3
---------INS Operator@@!= @TO@ InfixExpression@@key != null @AT@ 13588 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@key != null @AT@ 13592 @LENGTH@ 4
------INS Block@@ThenBody:{  if (SimpleLanguage.hasSimpleFunction(key)) {    key=SimpleLanguage.expression(key).evaluate(exchange,String.class);  }  if (key != null) {    result=lookupResult(resultExchange,key,result,nullSafe,ognlPath,holder.getBean());  }} @TO@ IfStatement@@if (key != null) {  if (SimpleLanguage.hasSimpleFunction(key)) {    key=SimpleLanguage.expression(key).evaluate(exchange,String.class);  }  if (key != null) {    result=lookupResult(resultExchange,key,result,nullSafe,ognlPath,holder.getBean());  }} @AT@ 13598 @LENGTH@ 464
---------MOV IfStatement@@if (key != null) {  result=lookupResult(resultExchange,key,result,nullSafe,ognlPath,holder.getBean());} @TO@ Block@@ThenBody:{  if (SimpleLanguage.hasSimpleFunction(key)) {    key=SimpleLanguage.expression(key).evaluate(exchange,String.class);  }  if (key != null) {    result=lookupResult(resultExchange,key,result,nullSafe,ognlPath,holder.getBean());  }} @AT@ 13525 @LENGTH@ 146
---------INS IfStatement@@if (SimpleLanguage.hasSimpleFunction(key)) {  key=SimpleLanguage.expression(key).evaluate(exchange,String.class);} @TO@ Block@@ThenBody:{  if (SimpleLanguage.hasSimpleFunction(key)) {    key=SimpleLanguage.expression(key).evaluate(exchange,String.class);  }  if (key != null) {    result=lookupResult(resultExchange,key,result,nullSafe,ognlPath,holder.getBean());  }} @AT@ 13708 @LENGTH@ 161
------------INS MethodInvocation@@SimpleLanguage.hasSimpleFunction(key) @TO@ IfStatement@@if (SimpleLanguage.hasSimpleFunction(key)) {  key=SimpleLanguage.expression(key).evaluate(exchange,String.class);} @AT@ 13712 @LENGTH@ 37
---------------INS SimpleName@@Name:SimpleLanguage @TO@ MethodInvocation@@SimpleLanguage.hasSimpleFunction(key) @AT@ 13712 @LENGTH@ 14
---------------INS SimpleName@@MethodName:hasSimpleFunction:[key] @TO@ MethodInvocation@@SimpleLanguage.hasSimpleFunction(key) @AT@ 13727 @LENGTH@ 22
------------------INS SimpleName@@key @TO@ SimpleName@@MethodName:hasSimpleFunction:[key] @AT@ 13745 @LENGTH@ 3
------------INS Block@@ThenBody:{  key=SimpleLanguage.expression(key).evaluate(exchange,String.class);} @TO@ IfStatement@@if (SimpleLanguage.hasSimpleFunction(key)) {  key=SimpleLanguage.expression(key).evaluate(exchange,String.class);} @AT@ 13751 @LENGTH@ 118
---------------INS ExpressionStatement@@Assignment:key=SimpleLanguage.expression(key).evaluate(exchange,String.class) @TO@ Block@@ThenBody:{  key=SimpleLanguage.expression(key).evaluate(exchange,String.class);} @AT@ 13777 @LENGTH@ 70
------------------INS Assignment@@key=SimpleLanguage.expression(key).evaluate(exchange,String.class) @TO@ ExpressionStatement@@Assignment:key=SimpleLanguage.expression(key).evaluate(exchange,String.class) @AT@ 13777 @LENGTH@ 69
---------------------INS SimpleName@@key @TO@ Assignment@@key=SimpleLanguage.expression(key).evaluate(exchange,String.class) @AT@ 13777 @LENGTH@ 3
---------------------INS Operator@@= @TO@ Assignment@@key=SimpleLanguage.expression(key).evaluate(exchange,String.class) @AT@ 13780 @LENGTH@ 1
---------------------INS MethodInvocation@@SimpleLanguage.expression(key).evaluate(exchange,String.class) @TO@ Assignment@@key=SimpleLanguage.expression(key).evaluate(exchange,String.class) @AT@ 13783 @LENGTH@ 63
------------------------INS MethodInvocation@@MethodName:expression:[key] @TO@ MethodInvocation@@SimpleLanguage.expression(key).evaluate(exchange,String.class) @AT@ 13783 @LENGTH@ 30
---------------------------INS SimpleName@@key @TO@ MethodInvocation@@MethodName:expression:[key] @AT@ 13809 @LENGTH@ 3
------------------------INS SimpleName@@Name:SimpleLanguage @TO@ MethodInvocation@@SimpleLanguage.expression(key).evaluate(exchange,String.class) @AT@ 13783 @LENGTH@ 14
------------------------INS SimpleName@@MethodName:evaluate:[exchange, String.class] @TO@ MethodInvocation@@SimpleLanguage.expression(key).evaluate(exchange,String.class) @AT@ 13814 @LENGTH@ 32
---------------------------INS SimpleName@@exchange @TO@ SimpleName@@MethodName:evaluate:[exchange, String.class] @AT@ 13823 @LENGTH@ 8
---------------------------INS TypeLiteral@@String.class @TO@ SimpleName@@MethodName:evaluate:[exchange, String.class] @AT@ 13833 @LENGTH@ 12


INS ExpressionStatement@@MethodInvocation:template.stop() @TO@ MethodDeclaration@@public, void, MethodName:testSendAndReceiveFromVolatileQueue, Exception,  @AT@ 11657 @LENGTH@ 16
---INS MethodInvocation@@template.stop() @TO@ ExpressionStatement@@MethodInvocation:template.stop() @AT@ 11657 @LENGTH@ 15
------INS SimpleName@@Name:template @TO@ MethodInvocation@@template.stop() @AT@ 11657 @LENGTH@ 8
------INS SimpleName@@MethodName:stop:[] @TO@ MethodInvocation@@template.stop() @AT@ 11666 @LENGTH@ 6


UPD MethodDeclaration@@protected, void, MethodName:setupProperties,  @TO@ private, void, MethodName:setupProperties,  @AT@ 3502 @LENGTH@ 836
---UPD Modifier@@protected @TO@ private @AT@ 3502 @LENGTH@ 9


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled(); @AT@ 5243 @LENGTH@ 160
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5251 @LENGTH@ 151
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5251 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5268 @LENGTH@ 134
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 5268 @LENGTH@ 64
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5268 @LENGTH@ 35
---------UPD MethodInvocation@@componentConfiguration.getConfigurer().isEnabled() @TO@ componentConfiguration.getCustomizer().isEnabled() @AT@ 5352 @LENGTH@ 50
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5352 @LENGTH@ 38


UPD MethodDeclaration@@private, voidMethodName:ExchangeBuilder, String name, String type,  @TO@ public, voidMethodName:ExchangeBuilder, String name, String type,  @AT@ 1031 @LENGTH@ 94
---UPD Modifier@@private @TO@ public @AT@ 1031 @LENGTH@ 7


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled(); @AT@ 5226 @LENGTH@ 160
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5234 @LENGTH@ 151
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5234 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5251 @LENGTH@ 134
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 5251 @LENGTH@ 64
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5251 @LENGTH@ 35
---------UPD MethodInvocation@@componentConfiguration.getConfigurer().isEnabled() @TO@ componentConfiguration.getCustomizer().isEnabled() @AT@ 5335 @LENGTH@ 50
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5335 @LENGTH@ 38


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  DataFormatCustomizer<BoonDataFormat> configurer : customizers) {    LOGGER.debug("Configure dataformat {}, with configurer {}",dataformat,configurer);    configurer.customize(dataformat);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  DataFormatCustomizer<BoonDataFormat> customizer : customizers) {    LOGGER.debug("Configure dataformat {}, with customizer {}",dataformat,customizer);    customizer.customize(dataformat);  }} @AT@ 5284 @LENGTH@ 423
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 5288 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5288 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  DataFormatCustomizer<BoonDataFormat> configurer : customizers) {    LOGGER.debug("Configure dataformat {}, with configurer {}",dataformat,configurer);    configurer.customize(dataformat);  }} @TO@ ThenBody:{  for (  DataFormatCustomizer<BoonDataFormat> customizer : customizers) {    LOGGER.debug("Configure dataformat {}, with customizer {}",dataformat,customizer);    customizer.customize(dataformat);  }} @AT@ 5344 @LENGTH@ 363
------UPD EnhancedForStatement@@for (DataFormatCustomizer<BoonDataFormat> configurer : customizers) {  LOGGER.debug("Configure dataformat {}, with configurer {}",dataformat,configurer);  configurer.customize(dataformat);} @TO@ for (DataFormatCustomizer<BoonDataFormat> customizer : customizers) {  LOGGER.debug("Configure dataformat {}, with customizer {}",dataformat,customizer);  customizer.customize(dataformat);} @AT@ 5366 @LENGTH@ 323
---------UPD SingleVariableDeclaration@@DataFormatCustomizer<BoonDataFormat> configurer @TO@ DataFormatCustomizer<BoonDataFormat> customizer @AT@ 5371 @LENGTH@ 47
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5408 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure dataformat {}, with configurer {}",dataformat,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure dataformat {}, with customizer {}",dataformat,customizer) @AT@ 5460 @LENGTH@ 149
------------UPD MethodInvocation@@LOGGER.debug("Configure dataformat {}, with configurer {}",dataformat,configurer) @TO@ LOGGER.debug("Configure dataformat {}, with customizer {}",dataformat,customizer) @AT@ 5460 @LENGTH@ 148
---------------UPD SimpleName@@MethodName:debug:["Configure dataformat {}, with configurer {}", dataformat, configurer] @TO@ MethodName:debug:["Configure dataformat {}, with customizer {}", dataformat, customizer] @AT@ 5467 @LENGTH@ 141
------------------UPD StringLiteral@@"Configure dataformat {}, with configurer {}" @TO@ "Configure dataformat {}, with customizer {}" @AT@ 5506 @LENGTH@ 45
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5597 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(dataformat) @TO@ MethodInvocation:customizer.customize(dataformat) @AT@ 5634 @LENGTH@ 33
------------UPD MethodInvocation@@configurer.customize(dataformat) @TO@ customizer.customize(dataformat) @AT@ 5634 @LENGTH@ 32
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5634 @LENGTH@ 10


UPD FieldDeclaration@@private, static, long, [serialVersionUID=1L] @TO@ private, static, final, long, [serialVersionUID=1L] @AT@ 1209 @LENGTH@ 42
---INS Modifier@@final @TO@ FieldDeclaration@@private, static, long, [serialVersionUID=1L] @AT@ 1224 @LENGTH@ 5


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  LanguageCustomizer<XPathLanguage> configurer : customizers) {    LOGGER.debug("Configure language {}, with configurer {}",language,configurer);    configurer.customize(language);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  LanguageCustomizer<XPathLanguage> customizer : customizers) {    LOGGER.debug("Configure language {}, with customizer {}",language,customizer);    customizer.customize(language);  }} @AT@ 4707 @LENGTH@ 333
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 4711 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 4711 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  LanguageCustomizer<XPathLanguage> configurer : customizers) {    LOGGER.debug("Configure language {}, with configurer {}",language,configurer);    configurer.customize(language);  }} @TO@ ThenBody:{  for (  LanguageCustomizer<XPathLanguage> customizer : customizers) {    LOGGER.debug("Configure language {}, with customizer {}",language,customizer);    customizer.customize(language);  }} @AT@ 4767 @LENGTH@ 273
------UPD EnhancedForStatement@@for (LanguageCustomizer<XPathLanguage> configurer : customizers) {  LOGGER.debug("Configure language {}, with configurer {}",language,configurer);  configurer.customize(language);} @TO@ for (LanguageCustomizer<XPathLanguage> customizer : customizers) {  LOGGER.debug("Configure language {}, with customizer {}",language,customizer);  customizer.customize(language);} @AT@ 4781 @LENGTH@ 249
---------UPD SingleVariableDeclaration@@LanguageCustomizer<XPathLanguage> configurer @TO@ LanguageCustomizer<XPathLanguage> customizer @AT@ 4786 @LENGTH@ 44
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 4820 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure language {}, with configurer {}",language,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure language {}, with customizer {}",language,customizer) @AT@ 4864 @LENGTH@ 104
------------UPD MethodInvocation@@LOGGER.debug("Configure language {}, with configurer {}",language,configurer) @TO@ LOGGER.debug("Configure language {}, with customizer {}",language,customizer) @AT@ 4864 @LENGTH@ 103
---------------UPD SimpleName@@MethodName:debug:["Configure language {}, with configurer {}", language, configurer] @TO@ MethodName:debug:["Configure language {}, with customizer {}", language, customizer] @AT@ 4871 @LENGTH@ 96
------------------UPD StringLiteral@@"Configure language {}, with configurer {}" @TO@ "Configure language {}, with customizer {}" @AT@ 4877 @LENGTH@ 43
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 4956 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(language) @TO@ MethodInvocation:customizer.customize(language) @AT@ 4985 @LENGTH@ 31
------------UPD MethodInvocation@@configurer.customize(language) @TO@ customizer.customize(language) @AT@ 4985 @LENGTH@ 30
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 4985 @LENGTH@ 10


UPD FieldDeclaration@@private, static, final, String, [CLIENT_REALM_CONFIG_PREFIX="realm."] @TO@ private, static, final, String, [CLIENT_REALM_CONFIG_PREFIX="clientConfig.realm."] @AT@ 1834 @LENGTH@ 66
---UPD VariableDeclarationFragment@@CLIENT_REALM_CONFIG_PREFIX="realm." @TO@ CLIENT_REALM_CONFIG_PREFIX="clientConfig.realm." @AT@ 1862 @LENGTH@ 37
------UPD StringLiteral@@"realm." @TO@ "clientConfig.realm." @AT@ 1891 @LENGTH@ 8


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled(); @AT@ 5361 @LENGTH@ 160
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5369 @LENGTH@ 151
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5369 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5386 @LENGTH@ 134
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 5386 @LENGTH@ 64
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5386 @LENGTH@ 35
---------UPD MethodInvocation@@componentConfiguration.getConfigurer().isEnabled() @TO@ componentConfiguration.getCustomizer().isEnabled() @AT@ 5470 @LENGTH@ 50
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5470 @LENGTH@ 38


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  DataFormatCustomizer<XStreamDataFormat> configurer : customizers) {    LOGGER.debug("Configure dataformat {}, with configurer {}",dataformat,configurer);    configurer.customize(dataformat);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  DataFormatCustomizer<XStreamDataFormat> customizer : customizers) {    LOGGER.debug("Configure dataformat {}, with customizer {}",dataformat,customizer);    customizer.customize(dataformat);  }} @AT@ 5349 @LENGTH@ 426
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 5353 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5353 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  DataFormatCustomizer<XStreamDataFormat> configurer : customizers) {    LOGGER.debug("Configure dataformat {}, with configurer {}",dataformat,configurer);    configurer.customize(dataformat);  }} @TO@ ThenBody:{  for (  DataFormatCustomizer<XStreamDataFormat> customizer : customizers) {    LOGGER.debug("Configure dataformat {}, with customizer {}",dataformat,customizer);    customizer.customize(dataformat);  }} @AT@ 5409 @LENGTH@ 366
------UPD EnhancedForStatement@@for (DataFormatCustomizer<XStreamDataFormat> configurer : customizers) {  LOGGER.debug("Configure dataformat {}, with configurer {}",dataformat,configurer);  configurer.customize(dataformat);} @TO@ for (DataFormatCustomizer<XStreamDataFormat> customizer : customizers) {  LOGGER.debug("Configure dataformat {}, with customizer {}",dataformat,customizer);  customizer.customize(dataformat);} @AT@ 5431 @LENGTH@ 326
---------UPD SingleVariableDeclaration@@DataFormatCustomizer<XStreamDataFormat> configurer @TO@ DataFormatCustomizer<XStreamDataFormat> customizer @AT@ 5436 @LENGTH@ 50
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5476 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure dataformat {}, with configurer {}",dataformat,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure dataformat {}, with customizer {}",dataformat,customizer) @AT@ 5528 @LENGTH@ 149
------------UPD MethodInvocation@@LOGGER.debug("Configure dataformat {}, with configurer {}",dataformat,configurer) @TO@ LOGGER.debug("Configure dataformat {}, with customizer {}",dataformat,customizer) @AT@ 5528 @LENGTH@ 148
---------------UPD SimpleName@@MethodName:debug:["Configure dataformat {}, with configurer {}", dataformat, configurer] @TO@ MethodName:debug:["Configure dataformat {}, with customizer {}", dataformat, customizer] @AT@ 5535 @LENGTH@ 141
------------------UPD StringLiteral@@"Configure dataformat {}, with configurer {}" @TO@ "Configure dataformat {}, with customizer {}" @AT@ 5574 @LENGTH@ 45
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5665 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(dataformat) @TO@ MethodInvocation:customizer.customize(dataformat) @AT@ 5702 @LENGTH@ 33
------------UPD MethodInvocation@@configurer.customize(dataformat) @TO@ customizer.customize(dataformat) @AT@ 5702 @LENGTH@ 32
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5702 @LENGTH@ 10


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<IgniteSetComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<IgniteSetComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5484 @LENGTH@ 342
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 5488 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5488 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  ComponentCustomizer<IgniteSetComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ ThenBody:{  for (  ComponentCustomizer<IgniteSetComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5544 @LENGTH@ 282
------UPD EnhancedForStatement@@for (ComponentCustomizer<IgniteSetComponent> configurer : customizers) {  LOGGER.debug("Configure component {}, with configurer {}",component,configurer);  configurer.customize(component);} @TO@ for (ComponentCustomizer<IgniteSetComponent> customizer : customizers) {  LOGGER.debug("Configure component {}, with customizer {}",component,customizer);  customizer.customize(component);} @AT@ 5558 @LENGTH@ 258
---------UPD SingleVariableDeclaration@@ComponentCustomizer<IgniteSetComponent> configurer @TO@ ComponentCustomizer<IgniteSetComponent> customizer @AT@ 5563 @LENGTH@ 50
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5603 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5647 @LENGTH@ 106
------------UPD MethodInvocation@@LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5647 @LENGTH@ 105
---------------UPD SimpleName@@MethodName:debug:["Configure component {}, with configurer {}", component, configurer] @TO@ MethodName:debug:["Configure component {}, with customizer {}", component, customizer] @AT@ 5654 @LENGTH@ 98
------------------UPD StringLiteral@@"Configure component {}, with configurer {}" @TO@ "Configure component {}, with customizer {}" @AT@ 5660 @LENGTH@ 44
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5741 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(component) @TO@ MethodInvocation:customizer.customize(component) @AT@ 5770 @LENGTH@ 32
------------UPD MethodInvocation@@configurer.customize(component) @TO@ customizer.customize(component) @AT@ 5770 @LENGTH@ 31
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5770 @LENGTH@ 10


DEL ExpressionStatement@@MethodInvocation:http.httpBasic() @AT@ 1374 @LENGTH@ 17
---DEL MethodInvocation@@http.httpBasic() @AT@ 1374 @LENGTH@ 16
------DEL SimpleName@@Name:http @AT@ 1374 @LENGTH@ 4
------DEL SimpleName@@MethodName:httpBasic:[] @AT@ 1379 @LENGTH@ 11


UPD MethodDeclaration@@public, BlacklistServiceCallServiceFilterConfiguration, MethodName:blacklistFilet,  @TO@ public, BlacklistServiceCallServiceFilterConfiguration, MethodName:blacklistFilter,  @AT@ 20289 @LENGTH@ 261
---UPD SimpleName@@MethodName:blacklistFilet @TO@ MethodName:blacklistFilter @AT@ 20343 @LENGTH@ 14


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<ConsulComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<ConsulComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5429 @LENGTH@ 339
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 5433 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5433 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  ComponentCustomizer<ConsulComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ ThenBody:{  for (  ComponentCustomizer<ConsulComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5489 @LENGTH@ 279
------UPD EnhancedForStatement@@for (ComponentCustomizer<ConsulComponent> configurer : customizers) {  LOGGER.debug("Configure component {}, with configurer {}",component,configurer);  configurer.customize(component);} @TO@ for (ComponentCustomizer<ConsulComponent> customizer : customizers) {  LOGGER.debug("Configure component {}, with customizer {}",component,customizer);  customizer.customize(component);} @AT@ 5503 @LENGTH@ 255
---------UPD SingleVariableDeclaration@@ComponentCustomizer<ConsulComponent> configurer @TO@ ComponentCustomizer<ConsulComponent> customizer @AT@ 5508 @LENGTH@ 47
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5545 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5589 @LENGTH@ 106
------------UPD MethodInvocation@@LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5589 @LENGTH@ 105
---------------UPD SimpleName@@MethodName:debug:["Configure component {}, with configurer {}", component, configurer] @TO@ MethodName:debug:["Configure component {}, with customizer {}", component, customizer] @AT@ 5596 @LENGTH@ 98
------------------UPD StringLiteral@@"Configure component {}, with configurer {}" @TO@ "Configure component {}, with customizer {}" @AT@ 5602 @LENGTH@ 44
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5683 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(component) @TO@ MethodInvocation:customizer.customize(component) @AT@ 5712 @LENGTH@ 32
------------UPD MethodInvocation@@configurer.customize(component) @TO@ customizer.customize(component) @AT@ 5712 @LENGTH@ 31
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5712 @LENGTH@ 10


UPD SwitchStatement@@switch (state) {case EOF:  return -1;case NO_BLOCK:readSizes();case IN_LITERAL:int litLen=readLiteral(b,off,len);if (!hasMoreDataInBlock()) {state=State.LOOKING_FOR_BACK_REFERENCE;}return litLen;case LOOKING_FOR_BACK_REFERENCE:if (!initializeBackReference()) {state=State.EOF;return -1;}case IN_BACK_REFERENCE:int backReferenceLen=readBackReference(b,off,len);if (!hasMoreDataInBlock()) {state=State.NO_BLOCK;}return backReferenceLen;default :throw new IOException("Unknown stream state " + state);} @TO@ switch (state) {case EOF:  return -1;case NO_BLOCK:readSizes();case IN_LITERAL:int litLen=readLiteral(b,off,len);if (!hasMoreDataInBlock()) {state=State.LOOKING_FOR_BACK_REFERENCE;}return litLen > 0 ? litLen : read(b,off,len);case LOOKING_FOR_BACK_REFERENCE:if (!initializeBackReference()) {state=State.EOF;return -1;}case IN_BACK_REFERENCE:int backReferenceLen=readBackReference(b,off,len);if (!hasMoreDataInBlock()) {state=State.NO_BLOCK;}return backReferenceLen > 0 ? backReferenceLen : read(b,off,len);default :throw new IOException("Unknown stream state " + state);} @AT@ 2223 @LENGTH@ 866
---UPD ReturnStatement@@SimpleName:litLen @TO@ ConditionalExpression:litLen > 0 ? litLen : read(b,off,len) @AT@ 2558 @LENGTH@ 14
------INS ConditionalExpression@@litLen > 0 ? litLen : read(b,off,len) @TO@ ReturnStatement@@SimpleName:litLen @AT@ 2565 @LENGTH@ 39
---------INS InfixExpression@@litLen > 0 @TO@ ConditionalExpression@@litLen > 0 ? litLen : read(b,off,len) @AT@ 2565 @LENGTH@ 10
------------INS SimpleName@@litLen @TO@ InfixExpression@@litLen > 0 @AT@ 2565 @LENGTH@ 6
------------INS Operator@@> @TO@ InfixExpression@@litLen > 0 @AT@ 2571 @LENGTH@ 1
------------INS NumberLiteral@@0 @TO@ InfixExpression@@litLen > 0 @AT@ 2574 @LENGTH@ 1
---------INS SimpleName@@litLen @TO@ ConditionalExpression@@litLen > 0 ? litLen : read(b,off,len) @AT@ 2578 @LENGTH@ 6
---------INS MethodInvocation@@read(b,off,len) @TO@ ConditionalExpression@@litLen > 0 ? litLen : read(b,off,len) @AT@ 2587 @LENGTH@ 17
------------INS SimpleName@@MethodName:read:[b, off, len] @TO@ MethodInvocation@@read(b,off,len) @AT@ 2587 @LENGTH@ 17
---------------INS SimpleName@@b @TO@ SimpleName@@MethodName:read:[b, off, len] @AT@ 2592 @LENGTH@ 1
---------------INS SimpleName@@off @TO@ SimpleName@@MethodName:read:[b, off, len] @AT@ 2595 @LENGTH@ 3
---------------INS SimpleName@@len @TO@ SimpleName@@MethodName:read:[b, off, len] @AT@ 2600 @LENGTH@ 3
------DEL SimpleName@@litLen @AT@ 2565 @LENGTH@ 6
---UPD ReturnStatement@@SimpleName:backReferenceLen @TO@ ConditionalExpression:backReferenceLen > 0 ? backReferenceLen : read(b,off,len) @AT@ 2970 @LENGTH@ 24
------DEL SimpleName@@backReferenceLen @AT@ 2977 @LENGTH@ 16
------INS ConditionalExpression@@backReferenceLen > 0 ? backReferenceLen : read(b,off,len) @TO@ ReturnStatement@@SimpleName:backReferenceLen @AT@ 3010 @LENGTH@ 59
---------INS InfixExpression@@backReferenceLen > 0 @TO@ ConditionalExpression@@backReferenceLen > 0 ? backReferenceLen : read(b,off,len) @AT@ 3010 @LENGTH@ 20
------------INS SimpleName@@backReferenceLen @TO@ InfixExpression@@backReferenceLen > 0 @AT@ 3010 @LENGTH@ 16
------------INS Operator@@> @TO@ InfixExpression@@backReferenceLen > 0 @AT@ 3026 @LENGTH@ 1
------------INS NumberLiteral@@0 @TO@ InfixExpression@@backReferenceLen > 0 @AT@ 3029 @LENGTH@ 1
---------INS SimpleName@@backReferenceLen @TO@ ConditionalExpression@@backReferenceLen > 0 ? backReferenceLen : read(b,off,len) @AT@ 3033 @LENGTH@ 16
---------INS MethodInvocation@@read(b,off,len) @TO@ ConditionalExpression@@backReferenceLen > 0 ? backReferenceLen : read(b,off,len) @AT@ 3052 @LENGTH@ 17
------------INS SimpleName@@MethodName:read:[b, off, len] @TO@ MethodInvocation@@read(b,off,len) @AT@ 3052 @LENGTH@ 17
---------------INS SimpleName@@b @TO@ SimpleName@@MethodName:read:[b, off, len] @AT@ 3057 @LENGTH@ 1
---------------INS SimpleName@@off @TO@ SimpleName@@MethodName:read:[b, off, len] @AT@ 3060 @LENGTH@ 3
---------------INS SimpleName@@len @TO@ SimpleName@@MethodName:read:[b, off, len] @AT@ 3065 @LENGTH@ 3


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<SqlStoredComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<SqlStoredComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5484 @LENGTH@ 342
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 5488 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5488 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  ComponentCustomizer<SqlStoredComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ ThenBody:{  for (  ComponentCustomizer<SqlStoredComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5544 @LENGTH@ 282
------UPD EnhancedForStatement@@for (ComponentCustomizer<SqlStoredComponent> configurer : customizers) {  LOGGER.debug("Configure component {}, with configurer {}",component,configurer);  configurer.customize(component);} @TO@ for (ComponentCustomizer<SqlStoredComponent> customizer : customizers) {  LOGGER.debug("Configure component {}, with customizer {}",component,customizer);  customizer.customize(component);} @AT@ 5558 @LENGTH@ 258
---------UPD SingleVariableDeclaration@@ComponentCustomizer<SqlStoredComponent> configurer @TO@ ComponentCustomizer<SqlStoredComponent> customizer @AT@ 5563 @LENGTH@ 50
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5603 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5647 @LENGTH@ 106
------------UPD MethodInvocation@@LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5647 @LENGTH@ 105
---------------UPD SimpleName@@MethodName:debug:["Configure component {}, with configurer {}", component, configurer] @TO@ MethodName:debug:["Configure component {}, with customizer {}", component, customizer] @AT@ 5654 @LENGTH@ 98
------------------UPD StringLiteral@@"Configure component {}, with configurer {}" @TO@ "Configure component {}, with customizer {}" @AT@ 5660 @LENGTH@ 44
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5741 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(component) @TO@ MethodInvocation:customizer.customize(component) @AT@ 5770 @LENGTH@ 32
------------UPD MethodInvocation@@configurer.customize(component) @TO@ customizer.customize(component) @AT@ 5770 @LENGTH@ 31
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5770 @LENGTH@ 10


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<SalesforceComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<SalesforceComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5497 @LENGTH@ 343
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 5501 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5501 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  ComponentCustomizer<SalesforceComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ ThenBody:{  for (  ComponentCustomizer<SalesforceComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5557 @LENGTH@ 283
------UPD EnhancedForStatement@@for (ComponentCustomizer<SalesforceComponent> configurer : customizers) {  LOGGER.debug("Configure component {}, with configurer {}",component,configurer);  configurer.customize(component);} @TO@ for (ComponentCustomizer<SalesforceComponent> customizer : customizers) {  LOGGER.debug("Configure component {}, with customizer {}",component,customizer);  customizer.customize(component);} @AT@ 5571 @LENGTH@ 259
---------UPD SingleVariableDeclaration@@ComponentCustomizer<SalesforceComponent> configurer @TO@ ComponentCustomizer<SalesforceComponent> customizer @AT@ 5576 @LENGTH@ 51
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5617 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5661 @LENGTH@ 106
------------UPD MethodInvocation@@LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5661 @LENGTH@ 105
---------------UPD SimpleName@@MethodName:debug:["Configure component {}, with configurer {}", component, configurer] @TO@ MethodName:debug:["Configure component {}, with customizer {}", component, customizer] @AT@ 5668 @LENGTH@ 98
------------------UPD StringLiteral@@"Configure component {}, with configurer {}" @TO@ "Configure component {}, with customizer {}" @AT@ 5674 @LENGTH@ 44
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5755 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(component) @TO@ MethodInvocation:customizer.customize(component) @AT@ 5784 @LENGTH@ 32
------------UPD MethodInvocation@@configurer.customize(component) @TO@ customizer.customize(component) @AT@ 5784 @LENGTH@ 31
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5784 @LENGTH@ 10


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<MailComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<MailComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5502 @LENGTH@ 337
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 5506 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5506 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  ComponentCustomizer<MailComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ ThenBody:{  for (  ComponentCustomizer<MailComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5562 @LENGTH@ 277
------UPD EnhancedForStatement@@for (ComponentCustomizer<MailComponent> configurer : customizers) {  LOGGER.debug("Configure component {}, with configurer {}",component,configurer);  configurer.customize(component);} @TO@ for (ComponentCustomizer<MailComponent> customizer : customizers) {  LOGGER.debug("Configure component {}, with customizer {}",component,customizer);  customizer.customize(component);} @AT@ 5576 @LENGTH@ 253
---------UPD SingleVariableDeclaration@@ComponentCustomizer<MailComponent> configurer @TO@ ComponentCustomizer<MailComponent> customizer @AT@ 5581 @LENGTH@ 45
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5616 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5660 @LENGTH@ 106
------------UPD MethodInvocation@@LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5660 @LENGTH@ 105
---------------UPD SimpleName@@MethodName:debug:["Configure component {}, with configurer {}", component, configurer] @TO@ MethodName:debug:["Configure component {}, with customizer {}", component, customizer] @AT@ 5667 @LENGTH@ 98
------------------UPD StringLiteral@@"Configure component {}, with configurer {}" @TO@ "Configure component {}, with customizer {}" @AT@ 5673 @LENGTH@ 44
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5754 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(component) @TO@ MethodInvocation:customizer.customize(component) @AT@ 5783 @LENGTH@ 32
------------UPD MethodInvocation@@configurer.customize(component) @TO@ customizer.customize(component) @AT@ 5783 @LENGTH@ 31
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5783 @LENGTH@ 10


UPD ExpressionStatement@@MethodInvocation:assertTrue(json.contains("\"minDepth\": { \"kind\": \"parameter\", \"displayName\": \"Min Depth\", \"group\": \"filter\", \"label\": \"consumer,filter\", \"type\": \"integer\", \"javaType\": \"int\"")) @TO@ MethodInvocation:assertTrue(json.contains("\"minDepth\": { \"kind\": \"parameter\", \"displayName\": \"Min Depth\", \"group\": \"filter\"" + ", \"label\": \"consumer,filter\", \"type\": \"integer\", \"javaType\": \"int\"")) @AT@ 1883 @LENGTH@ 202
---UPD MethodInvocation@@assertTrue(json.contains("\"minDepth\": { \"kind\": \"parameter\", \"displayName\": \"Min Depth\", \"group\": \"filter\", \"label\": \"consumer,filter\", \"type\": \"integer\", \"javaType\": \"int\"")) @TO@ assertTrue(json.contains("\"minDepth\": { \"kind\": \"parameter\", \"displayName\": \"Min Depth\", \"group\": \"filter\"" + ", \"label\": \"consumer,filter\", \"type\": \"integer\", \"javaType\": \"int\"")) @AT@ 1883 @LENGTH@ 201
------UPD SimpleName@@MethodName:assertTrue:[json.contains("\"minDepth\": { \"kind\": \"parameter\", \"displayName\": \"Min Depth\", \"group\": \"filter\", \"label\": \"consumer,filter\", \"type\": \"integer\", \"javaType\": \"int\"")] @TO@ MethodName:assertTrue:[json.contains("\"minDepth\": { \"kind\": \"parameter\", \"displayName\": \"Min Depth\", \"group\": \"filter\"" + ", \"label\": \"consumer,filter\", \"type\": \"integer\", \"javaType\": \"int\"")] @AT@ 1883 @LENGTH@ 201
---------UPD MethodInvocation@@json.contains("\"minDepth\": { \"kind\": \"parameter\", \"displayName\": \"Min Depth\", \"group\": \"filter\", \"label\": \"consumer,filter\", \"type\": \"integer\", \"javaType\": \"int\"") @TO@ json.contains("\"minDepth\": { \"kind\": \"parameter\", \"displayName\": \"Min Depth\", \"group\": \"filter\"" + ", \"label\": \"consumer,filter\", \"type\": \"integer\", \"javaType\": \"int\"") @AT@ 1894 @LENGTH@ 189
------------UPD SimpleName@@MethodName:contains:["\"minDepth\": { \"kind\": \"parameter\", \"displayName\": \"Min Depth\", \"group\": \"filter\", \"label\": \"consumer,filter\", \"type\": \"integer\", \"javaType\": \"int\""] @TO@ MethodName:contains:["\"minDepth\": { \"kind\": \"parameter\", \"displayName\": \"Min Depth\", \"group\": \"filter\"" + ", \"label\": \"consumer,filter\", \"type\": \"integer\", \"javaType\": \"int\""] @AT@ 1899 @LENGTH@ 184
---------------INS InfixExpression@@"\"minDepth\": { \"kind\": \"parameter\", \"displayName\": \"Min Depth\", \"group\": \"filter\"" + ", \"label\": \"consumer,filter\", \"type\": \"integer\", \"javaType\": \"int\"" @TO@ SimpleName@@MethodName:contains:["\"minDepth\": { \"kind\": \"parameter\", \"displayName\": \"Min Depth\", \"group\": \"filter\", \"label\": \"consumer,filter\", \"type\": \"integer\", \"javaType\": \"int\""] @AT@ 1908 @LENGTH@ 191
------------------INS StringLiteral@@"\"minDepth\": { \"kind\": \"parameter\", \"displayName\": \"Min Depth\", \"group\": \"filter\"" @TO@ InfixExpression@@"\"minDepth\": { \"kind\": \"parameter\", \"displayName\": \"Min Depth\", \"group\": \"filter\"" + ", \"label\": \"consumer,filter\", \"type\": \"integer\", \"javaType\": \"int\"" @AT@ 1908 @LENGTH@ 96
------------------INS Operator@@+ @TO@ InfixExpression@@"\"minDepth\": { \"kind\": \"parameter\", \"displayName\": \"Min Depth\", \"group\": \"filter\"" + ", \"label\": \"consumer,filter\", \"type\": \"integer\", \"javaType\": \"int\"" @AT@ 2004 @LENGTH@ 1
------------------INS StringLiteral@@", \"label\": \"consumer,filter\", \"type\": \"integer\", \"javaType\": \"int\"" @TO@ InfixExpression@@"\"minDepth\": { \"kind\": \"parameter\", \"displayName\": \"Min Depth\", \"group\": \"filter\"" + ", \"label\": \"consumer,filter\", \"type\": \"integer\", \"javaType\": \"int\"" @AT@ 2019 @LENGTH@ 80
---------------DEL StringLiteral@@"\"minDepth\": { \"kind\": \"parameter\", \"displayName\": \"Min Depth\", \"group\": \"filter\", \"label\": \"consumer,filter\", \"type\": \"integer\", \"javaType\": \"int\"" @AT@ 1908 @LENGTH@ 174


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && dataformatConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && dataformatConfiguration.getCustomizer().isEnabled(); @AT@ 5055 @LENGTH@ 177
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && dataformatConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && dataformatConfiguration.getCustomizer().isEnabled() @AT@ 5063 @LENGTH@ 168
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5063 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && dataformatConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && dataformatConfiguration.getCustomizer().isEnabled() @AT@ 5080 @LENGTH@ 151
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 5080 @LENGTH@ 72
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5080 @LENGTH@ 35
---------UPD MethodInvocation@@dataformatConfiguration.getConfigurer().isEnabled() @TO@ dataformatConfiguration.getCustomizer().isEnabled() @AT@ 5180 @LENGTH@ 51
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5180 @LENGTH@ 39


UPD FieldDeclaration@@private, final, static, int, [NUM_QUERY_ITERATIONS=80000] @TO@ private, static, final, int, [NUM_QUERY_ITERATIONS=80000] @AT@ 1149 @LENGTH@ 54
---DEL Modifier@@static @AT@ 1163 @LENGTH@ 6
---INS Modifier@@static @TO@ FieldDeclaration@@private, final, static, int, [NUM_QUERY_ITERATIONS=80000] @AT@ 1163 @LENGTH@ 6


UPD ExpressionStatement@@MethodInvocation:assertEquals(3,row.getLiteralMap().iterator().next().get("stars")) @TO@ MethodInvocation:assertEquals(3L,row.getLiteralMap().iterator().next().get("stars")) @AT@ 23110 @LENGTH@ 68
---UPD MethodInvocation@@assertEquals(3,row.getLiteralMap().iterator().next().get("stars")) @TO@ assertEquals(3L,row.getLiteralMap().iterator().next().get("stars")) @AT@ 23110 @LENGTH@ 67
------UPD SimpleName@@MethodName:assertEquals:[3, row.getLiteralMap().iterator().next().get("stars")] @TO@ MethodName:assertEquals:[3L, row.getLiteralMap().iterator().next().get("stars")] @AT@ 23110 @LENGTH@ 67
---------UPD NumberLiteral@@3 @TO@ 3L @AT@ 23123 @LENGTH@ 1


DEL ExpressionStatement@@MethodInvocation:EJBClientTransactionContext.setGlobalContext(localUserTxContext) @AT@ 4218 @LENGTH@ 65
---DEL MethodInvocation@@EJBClientTransactionContext.setGlobalContext(localUserTxContext) @AT@ 4218 @LENGTH@ 64
------DEL SimpleName@@Name:EJBClientTransactionContext @AT@ 4218 @LENGTH@ 27
------DEL SimpleName@@MethodName:setGlobalContext:[localUserTxContext] @AT@ 4246 @LENGTH@ 36
---------DEL SimpleName@@localUserTxContext @AT@ 4263 @LENGTH@ 18


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<XsltComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<XsltComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5395 @LENGTH@ 337
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 5399 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5399 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  ComponentCustomizer<XsltComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ ThenBody:{  for (  ComponentCustomizer<XsltComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5455 @LENGTH@ 277
------UPD EnhancedForStatement@@for (ComponentCustomizer<XsltComponent> configurer : customizers) {  LOGGER.debug("Configure component {}, with configurer {}",component,configurer);  configurer.customize(component);} @TO@ for (ComponentCustomizer<XsltComponent> customizer : customizers) {  LOGGER.debug("Configure component {}, with customizer {}",component,customizer);  customizer.customize(component);} @AT@ 5469 @LENGTH@ 253
---------UPD SingleVariableDeclaration@@ComponentCustomizer<XsltComponent> configurer @TO@ ComponentCustomizer<XsltComponent> customizer @AT@ 5474 @LENGTH@ 45
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5509 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5553 @LENGTH@ 106
------------UPD MethodInvocation@@LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5553 @LENGTH@ 105
---------------UPD SimpleName@@MethodName:debug:["Configure component {}, with configurer {}", component, configurer] @TO@ MethodName:debug:["Configure component {}, with customizer {}", component, customizer] @AT@ 5560 @LENGTH@ 98
------------------UPD StringLiteral@@"Configure component {}, with configurer {}" @TO@ "Configure component {}, with customizer {}" @AT@ 5566 @LENGTH@ 44
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5647 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(component) @TO@ MethodInvocation:customizer.customize(component) @AT@ 5676 @LENGTH@ 32
------------UPD MethodInvocation@@configurer.customize(component) @TO@ customizer.customize(component) @AT@ 5676 @LENGTH@ 31
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5676 @LENGTH@ 10


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  LanguageCustomizer<JuelLanguage> configurer : customizers) {    LOGGER.debug("Configure language {}, with configurer {}",language,configurer);    configurer.customize(language);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  LanguageCustomizer<JuelLanguage> customizer : customizers) {    LOGGER.debug("Configure language {}, with customizer {}",language,customizer);    customizer.customize(language);  }} @AT@ 4685 @LENGTH@ 332
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 4689 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 4689 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  LanguageCustomizer<JuelLanguage> configurer : customizers) {    LOGGER.debug("Configure language {}, with configurer {}",language,configurer);    configurer.customize(language);  }} @TO@ ThenBody:{  for (  LanguageCustomizer<JuelLanguage> customizer : customizers) {    LOGGER.debug("Configure language {}, with customizer {}",language,customizer);    customizer.customize(language);  }} @AT@ 4745 @LENGTH@ 272
------UPD EnhancedForStatement@@for (LanguageCustomizer<JuelLanguage> configurer : customizers) {  LOGGER.debug("Configure language {}, with configurer {}",language,configurer);  configurer.customize(language);} @TO@ for (LanguageCustomizer<JuelLanguage> customizer : customizers) {  LOGGER.debug("Configure language {}, with customizer {}",language,customizer);  customizer.customize(language);} @AT@ 4759 @LENGTH@ 248
---------UPD SingleVariableDeclaration@@LanguageCustomizer<JuelLanguage> configurer @TO@ LanguageCustomizer<JuelLanguage> customizer @AT@ 4764 @LENGTH@ 43
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 4797 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure language {}, with configurer {}",language,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure language {}, with customizer {}",language,customizer) @AT@ 4841 @LENGTH@ 104
------------UPD MethodInvocation@@LOGGER.debug("Configure language {}, with configurer {}",language,configurer) @TO@ LOGGER.debug("Configure language {}, with customizer {}",language,customizer) @AT@ 4841 @LENGTH@ 103
---------------UPD SimpleName@@MethodName:debug:["Configure language {}, with configurer {}", language, configurer] @TO@ MethodName:debug:["Configure language {}, with customizer {}", language, customizer] @AT@ 4848 @LENGTH@ 96
------------------UPD StringLiteral@@"Configure language {}, with configurer {}" @TO@ "Configure language {}, with customizer {}" @AT@ 4854 @LENGTH@ 43
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 4933 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(language) @TO@ MethodInvocation:customizer.customize(language) @AT@ 4962 @LENGTH@ 31
------------UPD MethodInvocation@@configurer.customize(language) @TO@ customizer.customize(language) @AT@ 4962 @LENGTH@ 30
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 4962 @LENGTH@ 10


UPD ExpressionStatement@@Assignment:val^=(long)Math.pow(2.0,(length - 1) * 8) - 1 @TO@ Assignment:val^=(long)Math.pow(2.0,(length - 1) * 8.0) - 1 @AT@ 7395 @LENGTH@ 50
---UPD Assignment@@val^=(long)Math.pow(2.0,(length - 1) * 8) - 1 @TO@ val^=(long)Math.pow(2.0,(length - 1) * 8.0) - 1 @AT@ 7395 @LENGTH@ 49
------UPD InfixExpression@@(long)Math.pow(2.0,(length - 1) * 8) - 1 @TO@ (long)Math.pow(2.0,(length - 1) * 8.0) - 1 @AT@ 7402 @LENGTH@ 42
---------UPD CastExpression@@(long)Math.pow(2.0,(length - 1) * 8) @TO@ (long)Math.pow(2.0,(length - 1) * 8.0) @AT@ 7402 @LENGTH@ 38
------------UPD MethodInvocation@@Math.pow(2.0,(length - 1) * 8) @TO@ Math.pow(2.0,(length - 1) * 8.0) @AT@ 7409 @LENGTH@ 31
---------------UPD SimpleName@@MethodName:pow:[2.0, (length - 1) * 8] @TO@ MethodName:pow:[2.0, (length - 1) * 8.0] @AT@ 7414 @LENGTH@ 26
------------------UPD InfixExpression@@(length - 1) * 8 @TO@ (length - 1) * 8.0 @AT@ 7423 @LENGTH@ 16
---------------------UPD NumberLiteral@@8 @TO@ 8.0 @AT@ 7438 @LENGTH@ 1


UPD EnhancedForStatement@@for (ModuleIdentifier module : modules) {  final String appName=module.getAppName();  final String moduleName=module.getModuleName();  final String distinctName=module.getDistinctName();  final ServiceURL.Builder builder=new ServiceURL.Builder();  builder.setUri(Affinity.LOCAL.getUri());  builder.setAbstractType("ejb");  builder.setAbstractTypeAuthority("jboss");  if (!appName.isEmpty()) {    builder.addAttribute("ejb-app",AttributeValue.fromString(appName));  }  builder.addAttribute("ejb-module",AttributeValue.fromString(appName + "/" + moduleName));  if (!distinctName.isEmpty()) {    builder.addAttribute("ejb-distinct",AttributeValue.fromString(distinctName));    if (!appName.isEmpty()) {      builder.addAttribute("ejb-app-distinct",AttributeValue.fromString(appName + "/" + distinctName));    }    builder.addAttribute("ejb-module-distinct",AttributeValue.fromString(appName + "/" + moduleName+ "/"+ distinctName));  }  final ServiceRegistration serviceRegistration=localRegistry.registerService(builder.create());  map.putIfAbsent(module,serviceRegistration);} @TO@ for (ModuleIdentifier module : modules) {  final String appName=module.getAppName();  final String moduleName=module.getModuleName();  final String distinctName=module.getDistinctName();  final ServiceURL.Builder builder=new ServiceURL.Builder();  builder.setUri(Affinity.LOCAL.getUri());  builder.setAbstractType("ejb");  builder.setAbstractTypeAuthority("jboss");  if (distinctName.isEmpty()) {    if (appName.isEmpty()) {      builder.addAttribute(EJBClientContext.FILTER_ATTR_EJB_MODULE,AttributeValue.fromString('"' + moduleName + '"'));    } else {      builder.addAttribute(EJBClientContext.FILTER_ATTR_EJB_MODULE,AttributeValue.fromString('"' + appName + "/"+ moduleName+ '"'));    }  } else {    if (appName.isEmpty()) {      builder.addAttribute(EJBClientContext.FILTER_ATTR_EJB_MODULE_DISTINCT,AttributeValue.fromString('"' + moduleName + "/"+ distinctName+ '"'));    } else {      builder.addAttribute(EJBClientContext.FILTER_ATTR_EJB_MODULE_DISTINCT,AttributeValue.fromString('"' + appName + "/"+ moduleName+ "/"+ distinctName+ '"'));    }  }  final ServiceRegistration serviceRegistration=localRegistry.registerService(builder.create());  map.putIfAbsent(module,serviceRegistration);} @AT@ 3471 @LENGTH@ 1561
---DEL IfStatement@@if (!appName.isEmpty()) {  builder.addAttribute("ejb-app",AttributeValue.fromString(appName));} @AT@ 3998 @LENGTH@ 141
------DEL PrefixExpression@@!appName.isEmpty() @AT@ 4002 @LENGTH@ 19
---------DEL Operator@@! @AT@ 4002 @LENGTH@ 1
---------DEL MethodInvocation@@appName.isEmpty() @AT@ 4004 @LENGTH@ 17
---INS IfStatement@@if (distinctName.isEmpty()) {  if (appName.isEmpty()) {    builder.addAttribute(EJBClientContext.FILTER_ATTR_EJB_MODULE,AttributeValue.fromString('"' + moduleName + '"'));  } else {    builder.addAttribute(EJBClientContext.FILTER_ATTR_EJB_MODULE,AttributeValue.fromString('"' + appName + "/"+ moduleName+ '"'));  }} else {  if (appName.isEmpty()) {    builder.addAttribute(EJBClientContext.FILTER_ATTR_EJB_MODULE_DISTINCT,AttributeValue.fromString('"' + moduleName + "/"+ distinctName+ '"'));  } else {    builder.addAttribute(EJBClientContext.FILTER_ATTR_EJB_MODULE_DISTINCT,AttributeValue.fromString('"' + appName + "/"+ moduleName+ "/"+ distinctName+ '"'));  }} @TO@ EnhancedForStatement@@for (ModuleIdentifier module : modules) {  final String appName=module.getAppName();  final String moduleName=module.getModuleName();  final String distinctName=module.getDistinctName();  final ServiceURL.Builder builder=new ServiceURL.Builder();  builder.setUri(Affinity.LOCAL.getUri());  builder.setAbstractType("ejb");  builder.setAbstractTypeAuthority("jboss");  if (!appName.isEmpty()) {    builder.addAttribute("ejb-app",AttributeValue.fromString(appName));  }  builder.addAttribute("ejb-module",AttributeValue.fromString(appName + "/" + moduleName));  if (!distinctName.isEmpty()) {    builder.addAttribute("ejb-distinct",AttributeValue.fromString(distinctName));    if (!appName.isEmpty()) {      builder.addAttribute("ejb-app-distinct",AttributeValue.fromString(appName + "/" + distinctName));    }    builder.addAttribute("ejb-module-distinct",AttributeValue.fromString(appName + "/" + moduleName+ "/"+ distinctName));  }  final ServiceRegistration serviceRegistration=localRegistry.registerService(builder.create());  map.putIfAbsent(module,serviceRegistration);} @AT@ 4044 @LENGTH@ 956
------INS MethodInvocation@@distinctName.isEmpty() @TO@ IfStatement@@if (distinctName.isEmpty()) {  if (appName.isEmpty()) {    builder.addAttribute(EJBClientContext.FILTER_ATTR_EJB_MODULE,AttributeValue.fromString('"' + moduleName + '"'));  } else {    builder.addAttribute(EJBClientContext.FILTER_ATTR_EJB_MODULE,AttributeValue.fromString('"' + appName + "/"+ moduleName+ '"'));  }} else {  if (appName.isEmpty()) {    builder.addAttribute(EJBClientContext.FILTER_ATTR_EJB_MODULE_DISTINCT,AttributeValue.fromString('"' + moduleName + "/"+ distinctName+ '"'));  } else {    builder.addAttribute(EJBClientContext.FILTER_ATTR_EJB_MODULE_DISTINCT,AttributeValue.fromString('"' + appName + "/"+ moduleName+ "/"+ distinctName+ '"'));  }} @AT@ 4048 @LENGTH@ 22
---------INS SimpleName@@Name:distinctName @TO@ MethodInvocation@@distinctName.isEmpty() @AT@ 4048 @LENGTH@ 12
---------INS SimpleName@@MethodName:isEmpty:[] @TO@ MethodInvocation@@distinctName.isEmpty() @AT@ 4061 @LENGTH@ 9
------INS Block@@ThenBody:{  if (appName.isEmpty()) {    builder.addAttribute(EJBClientContext.FILTER_ATTR_EJB_MODULE,AttributeValue.fromString('"' + moduleName + '"'));  } else {    builder.addAttribute(EJBClientContext.FILTER_ATTR_EJB_MODULE,AttributeValue.fromString('"' + appName + "/"+ moduleName+ '"'));  }} @TO@ IfStatement@@if (distinctName.isEmpty()) {  if (appName.isEmpty()) {    builder.addAttribute(EJBClientContext.FILTER_ATTR_EJB_MODULE,AttributeValue.fromString('"' + moduleName + '"'));  } else {    builder.addAttribute(EJBClientContext.FILTER_ATTR_EJB_MODULE,AttributeValue.fromString('"' + appName + "/"+ moduleName+ '"'));  }} else {  if (appName.isEmpty()) {    builder.addAttribute(EJBClientContext.FILTER_ATTR_EJB_MODULE_DISTINCT,AttributeValue.fromString('"' + moduleName + "/"+ distinctName+ '"'));  } else {    builder.addAttribute(EJBClientContext.FILTER_ATTR_EJB_MODULE_DISTINCT,AttributeValue.fromString('"' + appName + "/"+ moduleName+ "/"+ distinctName+ '"'));  }} @AT@ 4072 @LENGTH@ 431
---------INS IfStatement@@if (appName.isEmpty()) {  builder.addAttribute(EJBClientContext.FILTER_ATTR_EJB_MODULE,AttributeValue.fromString('"' + moduleName + '"'));} else {  builder.addAttribute(EJBClientContext.FILTER_ATTR_EJB_MODULE,AttributeValue.fromString('"' + appName + "/"+ moduleName+ '"'));} @TO@ Block@@ThenBody:{  if (appName.isEmpty()) {    builder.addAttribute(EJBClientContext.FILTER_ATTR_EJB_MODULE,AttributeValue.fromString('"' + moduleName + '"'));  } else {    builder.addAttribute(EJBClientContext.FILTER_ATTR_EJB_MODULE,AttributeValue.fromString('"' + appName + "/"+ moduleName+ '"'));  }} @AT@ 4098 @LENGTH@ 383
------------MOV Block@@ThenBody:{  builder.addAttribute("ejb-app",AttributeValue.fromString(appName));} @TO@ IfStatement@@if (appName.isEmpty()) {  builder.addAttribute(EJBClientContext.FILTER_ATTR_EJB_MODULE,AttributeValue.fromString('"' + moduleName + '"'));} else {  builder.addAttribute(EJBClientContext.FILTER_ATTR_EJB_MODULE,AttributeValue.fromString('"' + appName + "/"+ moduleName+ '"'));} @AT@ 4023 @LENGTH@ 116
---------------UPD ExpressionStatement@@MethodInvocation:builder.addAttribute("ejb-app",AttributeValue.fromString(appName)) @TO@ MethodInvocation:builder.addAttribute(EJBClientContext.FILTER_ATTR_EJB_MODULE,AttributeValue.fromString('"' + moduleName + '"')) @AT@ 4049 @LENGTH@ 68
------------------UPD MethodInvocation@@builder.addAttribute("ejb-app",AttributeValue.fromString(appName)) @TO@ builder.addAttribute(EJBClientContext.FILTER_ATTR_EJB_MODULE,AttributeValue.fromString('"' + moduleName + '"')) @AT@ 4049 @LENGTH@ 67
---------------------UPD SimpleName@@MethodName:addAttribute:["ejb-app", AttributeValue.fromString(appName)] @TO@ MethodName:addAttribute:[EJBClientContext.FILTER_ATTR_EJB_MODULE, AttributeValue.fromString('"' + moduleName + '"')] @AT@ 4057 @LENGTH@ 59
------------------------DEL StringLiteral@@"ejb-app" @AT@ 4070 @LENGTH@ 9
------------------------UPD MethodInvocation@@AttributeValue.fromString(appName) @TO@ AttributeValue.fromString('"' + moduleName + '"') @AT@ 4081 @LENGTH@ 34
---------------------------UPD SimpleName@@MethodName:fromString:[appName] @TO@ MethodName:fromString:['"' + moduleName + '"'] @AT@ 4096 @LENGTH@ 19
------------------------------DEL SimpleName@@appName @AT@ 4107 @LENGTH@ 7
------------------------------INS InfixExpression@@'"' + moduleName + '"' @TO@ SimpleName@@MethodName:fromString:[appName] @AT@ 4239 @LENGTH@ 22
---------------------------------INS CharacterLiteral@@'"' @TO@ InfixExpression@@'"' + moduleName + '"' @AT@ 4239 @LENGTH@ 3
---------------------------------INS Operator@@+ @TO@ InfixExpression@@'"' + moduleName + '"' @AT@ 4242 @LENGTH@ 1
---------------------------------INS SimpleName@@moduleName @TO@ InfixExpression@@'"' + moduleName + '"' @AT@ 4245 @LENGTH@ 10
---------------------------------INS CharacterLiteral@@'"' @TO@ InfixExpression@@'"' + moduleName + '"' @AT@ 4258 @LENGTH@ 3
------------------------INS QualifiedName@@EJBClientContext.FILTER_ATTR_EJB_MODULE @TO@ SimpleName@@MethodName:addAttribute:["ejb-app", AttributeValue.fromString(appName)] @AT@ 4172 @LENGTH@ 39
---------------------------INS SimpleName@@EJBClientContext @TO@ QualifiedName@@EJBClientContext.FILTER_ATTR_EJB_MODULE @AT@ 4172 @LENGTH@ 16
---------------------------INS SimpleName@@FILTER_ATTR_EJB_MODULE @TO@ QualifiedName@@EJBClientContext.FILTER_ATTR_EJB_MODULE @AT@ 4189 @LENGTH@ 22
------------INS MethodInvocation@@appName.isEmpty() @TO@ IfStatement@@if (appName.isEmpty()) {  builder.addAttribute(EJBClientContext.FILTER_ATTR_EJB_MODULE,AttributeValue.fromString('"' + moduleName + '"'));} else {  builder.addAttribute(EJBClientContext.FILTER_ATTR_EJB_MODULE,AttributeValue.fromString('"' + appName + "/"+ moduleName+ '"'));} @AT@ 4102 @LENGTH@ 17
---------------MOV SimpleName@@Name:appName @TO@ MethodInvocation@@appName.isEmpty() @AT@ 4004 @LENGTH@ 7
---------------MOV SimpleName@@MethodName:isEmpty:[] @TO@ MethodInvocation@@appName.isEmpty() @AT@ 4012 @LENGTH@ 9
------------INS Block@@ElseBody:{  builder.addAttribute(EJBClientContext.FILTER_ATTR_EJB_MODULE,AttributeValue.fromString('"' + appName + "/"+ moduleName+ '"'));} @TO@ IfStatement@@if (appName.isEmpty()) {  builder.addAttribute(EJBClientContext.FILTER_ATTR_EJB_MODULE,AttributeValue.fromString('"' + moduleName + '"'));} else {  builder.addAttribute(EJBClientContext.FILTER_ATTR_EJB_MODULE,AttributeValue.fromString('"' + appName + "/"+ moduleName+ '"'));} @AT@ 4296 @LENGTH@ 185
---------------INS ExpressionStatement@@MethodInvocation:builder.addAttribute(EJBClientContext.FILTER_ATTR_EJB_MODULE,AttributeValue.fromString('"' + appName + "/"+ moduleName+ '"')) @TO@ Block@@ElseBody:{  builder.addAttribute(EJBClientContext.FILTER_ATTR_EJB_MODULE,AttributeValue.fromString('"' + appName + "/"+ moduleName+ '"'));} @AT@ 4326 @LENGTH@ 129
------------------MOV MethodInvocation@@builder.addAttribute("ejb-module",AttributeValue.fromString(appName + "/" + moduleName)) @TO@ ExpressionStatement@@MethodInvocation:builder.addAttribute(EJBClientContext.FILTER_ATTR_EJB_MODULE,AttributeValue.fromString('"' + appName + "/"+ moduleName+ '"')) @AT@ 4160 @LENGTH@ 89
---------------------UPD SimpleName@@MethodName:addAttribute:["ejb-module", AttributeValue.fromString(appName + "/" + moduleName)] @TO@ MethodName:addAttribute:[EJBClientContext.FILTER_ATTR_EJB_MODULE, AttributeValue.fromString('"' + appName + "/"+ moduleName+ '"')] @AT@ 4168 @LENGTH@ 81
------------------------DEL StringLiteral@@"ejb-module" @AT@ 4181 @LENGTH@ 12
------------------------UPD MethodInvocation@@AttributeValue.fromString(appName + "/" + moduleName) @TO@ AttributeValue.fromString('"' + appName + "/"+ moduleName+ '"') @AT@ 4195 @LENGTH@ 53
---------------------------UPD SimpleName@@MethodName:fromString:[appName + "/" + moduleName] @TO@ MethodName:fromString:['"' + appName + "/"+ moduleName+ '"'] @AT@ 4210 @LENGTH@ 38
------------------------------UPD InfixExpression@@appName + "/" + moduleName @TO@ '"' + appName + "/"+ moduleName+ '"' @AT@ 4221 @LENGTH@ 26
---------------------------------DEL Operator@@+ @AT@ 4228 @LENGTH@ 1
---------------------------------INS CharacterLiteral@@'"' @TO@ InfixExpression@@appName + "/" + moduleName @AT@ 4414 @LENGTH@ 3
---------------------------------INS Operator@@+ @TO@ InfixExpression@@appName + "/" + moduleName @AT@ 4417 @LENGTH@ 1
---------------------------------INS CharacterLiteral@@'"' @TO@ InfixExpression@@appName + "/" + moduleName @AT@ 4449 @LENGTH@ 3
------------------------INS QualifiedName@@EJBClientContext.FILTER_ATTR_EJB_MODULE @TO@ SimpleName@@MethodName:addAttribute:["ejb-module", AttributeValue.fromString(appName + "/" + moduleName)] @AT@ 4347 @LENGTH@ 39
---------------------------INS SimpleName@@EJBClientContext @TO@ QualifiedName@@EJBClientContext.FILTER_ATTR_EJB_MODULE @AT@ 4347 @LENGTH@ 16
---------------------------INS SimpleName@@FILTER_ATTR_EJB_MODULE @TO@ QualifiedName@@EJBClientContext.FILTER_ATTR_EJB_MODULE @AT@ 4364 @LENGTH@ 22
------MOV Block@@ThenBody:{  builder.addAttribute("ejb-distinct",AttributeValue.fromString(distinctName));  if (!appName.isEmpty()) {    builder.addAttribute("ejb-app-distinct",AttributeValue.fromString(appName + "/" + distinctName));  }  builder.addAttribute("ejb-module-distinct",AttributeValue.fromString(appName + "/" + moduleName+ "/"+ distinctName));} @TO@ IfStatement@@if (distinctName.isEmpty()) {  if (appName.isEmpty()) {    builder.addAttribute(EJBClientContext.FILTER_ATTR_EJB_MODULE,AttributeValue.fromString('"' + moduleName + '"'));  } else {    builder.addAttribute(EJBClientContext.FILTER_ATTR_EJB_MODULE,AttributeValue.fromString('"' + appName + "/"+ moduleName+ '"'));  }} else {  if (appName.isEmpty()) {    builder.addAttribute(EJBClientContext.FILTER_ATTR_EJB_MODULE_DISTINCT,AttributeValue.fromString('"' + moduleName + "/"+ distinctName+ '"'));  } else {    builder.addAttribute(EJBClientContext.FILTER_ATTR_EJB_MODULE_DISTINCT,AttributeValue.fromString('"' + appName + "/"+ moduleName+ "/"+ distinctName+ '"'));  }} @AT@ 4301 @LENGTH@ 475
---------INS IfStatement@@if (appName.isEmpty()) {  builder.addAttribute(EJBClientContext.FILTER_ATTR_EJB_MODULE_DISTINCT,AttributeValue.fromString('"' + moduleName + "/"+ distinctName+ '"'));} else {  builder.addAttribute(EJBClientContext.FILTER_ATTR_EJB_MODULE_DISTINCT,AttributeValue.fromString('"' + appName + "/"+ moduleName+ "/"+ distinctName+ '"'));} @TO@ Block@@ThenBody:{  builder.addAttribute("ejb-distinct",AttributeValue.fromString(distinctName));  if (!appName.isEmpty()) {    builder.addAttribute("ejb-app-distinct",AttributeValue.fromString(appName + "/" + distinctName));  }  builder.addAttribute("ejb-module-distinct",AttributeValue.fromString(appName + "/" + moduleName+ "/"+ distinctName));} @AT@ 4535 @LENGTH@ 443
------------MOV Block@@ThenBody:{  builder.addAttribute("ejb-app-distinct",AttributeValue.fromString(appName + "/" + distinctName));} @TO@ IfStatement@@if (appName.isEmpty()) {  builder.addAttribute(EJBClientContext.FILTER_ATTR_EJB_MODULE_DISTINCT,AttributeValue.fromString('"' + moduleName + "/"+ distinctName+ '"'));} else {  builder.addAttribute(EJBClientContext.FILTER_ATTR_EJB_MODULE_DISTINCT,AttributeValue.fromString('"' + appName + "/"+ moduleName+ "/"+ distinctName+ '"'));} @AT@ 4455 @LENGTH@ 154
---------------UPD ExpressionStatement@@MethodInvocation:builder.addAttribute("ejb-app-distinct",AttributeValue.fromString(appName + "/" + distinctName)) @TO@ MethodInvocation:builder.addAttribute(EJBClientContext.FILTER_ATTR_EJB_MODULE_DISTINCT,AttributeValue.fromString('"' + moduleName + "/"+ distinctName+ '"')) @AT@ 4485 @LENGTH@ 98
------------------UPD MethodInvocation@@builder.addAttribute("ejb-app-distinct",AttributeValue.fromString(appName + "/" + distinctName)) @TO@ builder.addAttribute(EJBClientContext.FILTER_ATTR_EJB_MODULE_DISTINCT,AttributeValue.fromString('"' + moduleName + "/"+ distinctName+ '"')) @AT@ 4485 @LENGTH@ 97
---------------------UPD SimpleName@@MethodName:addAttribute:["ejb-app-distinct", AttributeValue.fromString(appName + "/" + distinctName)] @TO@ MethodName:addAttribute:[EJBClientContext.FILTER_ATTR_EJB_MODULE_DISTINCT, AttributeValue.fromString('"' + moduleName + "/"+ distinctName+ '"')] @AT@ 4493 @LENGTH@ 89
------------------------DEL StringLiteral@@"ejb-app-distinct" @AT@ 4506 @LENGTH@ 18
------------------------UPD MethodInvocation@@AttributeValue.fromString(appName + "/" + distinctName) @TO@ AttributeValue.fromString('"' + moduleName + "/"+ distinctName+ '"') @AT@ 4526 @LENGTH@ 55
---------------------------UPD SimpleName@@MethodName:fromString:[appName + "/" + distinctName] @TO@ MethodName:fromString:['"' + moduleName + "/"+ distinctName+ '"'] @AT@ 4541 @LENGTH@ 40
------------------------------UPD InfixExpression@@appName + "/" + distinctName @TO@ '"' + moduleName + "/"+ distinctName+ '"' @AT@ 4552 @LENGTH@ 28
---------------------------------DEL SimpleName@@appName @AT@ 4552 @LENGTH@ 7
---------------------------------INS CharacterLiteral@@'"' @TO@ InfixExpression@@appName + "/" + distinctName @AT@ 4685 @LENGTH@ 3
---------------------------------INS SimpleName@@moduleName @TO@ InfixExpression@@appName + "/" + distinctName @AT@ 4691 @LENGTH@ 10
---------------------------------INS CharacterLiteral@@'"' @TO@ InfixExpression@@appName + "/" + distinctName @AT@ 4725 @LENGTH@ 3
------------------------INS QualifiedName@@EJBClientContext.FILTER_ATTR_EJB_MODULE_DISTINCT @TO@ SimpleName@@MethodName:addAttribute:["ejb-app-distinct", AttributeValue.fromString(appName + "/" + distinctName)] @AT@ 4609 @LENGTH@ 48
---------------------------INS SimpleName@@EJBClientContext @TO@ QualifiedName@@EJBClientContext.FILTER_ATTR_EJB_MODULE_DISTINCT @AT@ 4609 @LENGTH@ 16
---------------------------INS SimpleName@@FILTER_ATTR_EJB_MODULE_DISTINCT @TO@ QualifiedName@@EJBClientContext.FILTER_ATTR_EJB_MODULE_DISTINCT @AT@ 4626 @LENGTH@ 31
------------INS MethodInvocation@@appName.isEmpty() @TO@ IfStatement@@if (appName.isEmpty()) {  builder.addAttribute(EJBClientContext.FILTER_ATTR_EJB_MODULE_DISTINCT,AttributeValue.fromString('"' + moduleName + "/"+ distinctName+ '"'));} else {  builder.addAttribute(EJBClientContext.FILTER_ATTR_EJB_MODULE_DISTINCT,AttributeValue.fromString('"' + appName + "/"+ moduleName+ "/"+ distinctName+ '"'));} @AT@ 4539 @LENGTH@ 17
---------------MOV SimpleName@@Name:appName @TO@ MethodInvocation@@appName.isEmpty() @AT@ 4436 @LENGTH@ 7
---------------MOV SimpleName@@MethodName:isEmpty:[] @TO@ MethodInvocation@@appName.isEmpty() @AT@ 4444 @LENGTH@ 9
------------INS Block@@ElseBody:{  builder.addAttribute(EJBClientContext.FILTER_ATTR_EJB_MODULE_DISTINCT,AttributeValue.fromString('"' + appName + "/"+ moduleName+ "/"+ distinctName+ '"'));} @TO@ IfStatement@@if (appName.isEmpty()) {  builder.addAttribute(EJBClientContext.FILTER_ATTR_EJB_MODULE_DISTINCT,AttributeValue.fromString('"' + moduleName + "/"+ distinctName+ '"'));} else {  builder.addAttribute(EJBClientContext.FILTER_ATTR_EJB_MODULE_DISTINCT,AttributeValue.fromString('"' + appName + "/"+ moduleName+ "/"+ distinctName+ '"'));} @AT@ 4763 @LENGTH@ 215
---------------MOV ExpressionStatement@@MethodInvocation:builder.addAttribute("ejb-module-distinct",AttributeValue.fromString(appName + "/" + moduleName+ "/"+ distinctName)) @TO@ Block@@ElseBody:{  builder.addAttribute(EJBClientContext.FILTER_ATTR_EJB_MODULE_DISTINCT,AttributeValue.fromString('"' + appName + "/"+ moduleName+ "/"+ distinctName+ '"'));} @AT@ 4634 @LENGTH@ 120
------------------UPD MethodInvocation@@builder.addAttribute("ejb-module-distinct",AttributeValue.fromString(appName + "/" + moduleName+ "/"+ distinctName)) @TO@ builder.addAttribute(EJBClientContext.FILTER_ATTR_EJB_MODULE_DISTINCT,AttributeValue.fromString('"' + appName + "/"+ moduleName+ "/"+ distinctName+ '"')) @AT@ 4634 @LENGTH@ 119
---------------------UPD SimpleName@@MethodName:addAttribute:["ejb-module-distinct", AttributeValue.fromString(appName + "/" + moduleName+ "/"+ distinctName)] @TO@ MethodName:addAttribute:[EJBClientContext.FILTER_ATTR_EJB_MODULE_DISTINCT, AttributeValue.fromString('"' + appName + "/"+ moduleName+ "/"+ distinctName+ '"')] @AT@ 4642 @LENGTH@ 111
------------------------DEL StringLiteral@@"ejb-module-distinct" @AT@ 4655 @LENGTH@ 21
------------------------UPD MethodInvocation@@AttributeValue.fromString(appName + "/" + moduleName+ "/"+ distinctName) @TO@ AttributeValue.fromString('"' + appName + "/"+ moduleName+ "/"+ distinctName+ '"') @AT@ 4678 @LENGTH@ 74
---------------------------UPD SimpleName@@MethodName:fromString:[appName + "/" + moduleName+ "/"+ distinctName] @TO@ MethodName:fromString:['"' + appName + "/"+ moduleName+ "/"+ distinctName+ '"'] @AT@ 4693 @LENGTH@ 59
------------------------------UPD InfixExpression@@appName + "/" + moduleName+ "/"+ distinctName @TO@ '"' + appName + "/"+ moduleName+ "/"+ distinctName+ '"' @AT@ 4704 @LENGTH@ 47
---------------------------------DEL Operator@@+ @AT@ 4711 @LENGTH@ 1
---------------------------------INS CharacterLiteral@@'"' @TO@ InfixExpression@@appName + "/" + moduleName+ "/"+ distinctName @AT@ 4890 @LENGTH@ 3
---------------------------------INS Operator@@+ @TO@ InfixExpression@@appName + "/" + moduleName+ "/"+ distinctName @AT@ 4893 @LENGTH@ 1
---------------------------------INS CharacterLiteral@@'"' @TO@ InfixExpression@@appName + "/" + moduleName+ "/"+ distinctName @AT@ 4946 @LENGTH@ 3
------------------------INS QualifiedName@@EJBClientContext.FILTER_ATTR_EJB_MODULE_DISTINCT @TO@ SimpleName@@MethodName:addAttribute:["ejb-module-distinct", AttributeValue.fromString(appName + "/" + moduleName+ "/"+ distinctName)] @AT@ 4814 @LENGTH@ 48
---------------------------INS SimpleName@@EJBClientContext @TO@ QualifiedName@@EJBClientContext.FILTER_ATTR_EJB_MODULE_DISTINCT @AT@ 4814 @LENGTH@ 16
---------------------------INS SimpleName@@FILTER_ATTR_EJB_MODULE_DISTINCT @TO@ QualifiedName@@EJBClientContext.FILTER_ATTR_EJB_MODULE_DISTINCT @AT@ 4831 @LENGTH@ 31
---DEL ExpressionStatement@@MethodInvocation:builder.addAttribute("ejb-module",AttributeValue.fromString(appName + "/" + moduleName)) @AT@ 4160 @LENGTH@ 90
---DEL IfStatement@@if (!distinctName.isEmpty()) {  builder.addAttribute("ejb-distinct",AttributeValue.fromString(distinctName));  if (!appName.isEmpty()) {    builder.addAttribute("ejb-app-distinct",AttributeValue.fromString(appName + "/" + distinctName));  }  builder.addAttribute("ejb-module-distinct",AttributeValue.fromString(appName + "/" + moduleName+ "/"+ distinctName));} @AT@ 4271 @LENGTH@ 505
------DEL PrefixExpression@@!distinctName.isEmpty() @AT@ 4275 @LENGTH@ 24
---------DEL Operator@@! @AT@ 4275 @LENGTH@ 1
---------DEL MethodInvocation@@distinctName.isEmpty() @AT@ 4277 @LENGTH@ 22
------------DEL SimpleName@@Name:distinctName @AT@ 4277 @LENGTH@ 12
------------DEL SimpleName@@MethodName:isEmpty:[] @AT@ 4290 @LENGTH@ 9


UPD VariableDeclarationStatement@@ResultProcessor processor=method.getResultProcessor().withDynamicProjection(parameterAccessor); @TO@ ResultProcessor processor=method.getResultProcessor().withDynamicProjection(Optional.of(parameterAccessor)); @AT@ 4187 @LENGTH@ 97
---UPD VariableDeclarationFragment@@processor=method.getResultProcessor().withDynamicProjection(parameterAccessor) @TO@ processor=method.getResultProcessor().withDynamicProjection(Optional.of(parameterAccessor)) @AT@ 4203 @LENGTH@ 80
------UPD MethodInvocation@@method.getResultProcessor().withDynamicProjection(parameterAccessor) @TO@ method.getResultProcessor().withDynamicProjection(Optional.of(parameterAccessor)) @AT@ 4215 @LENGTH@ 68
---------UPD SimpleName@@MethodName:withDynamicProjection:[parameterAccessor] @TO@ MethodName:withDynamicProjection:[Optional.of(parameterAccessor)] @AT@ 4243 @LENGTH@ 40
------------INS MethodInvocation@@Optional.of(parameterAccessor) @TO@ SimpleName@@MethodName:withDynamicProjection:[parameterAccessor] @AT@ 4293 @LENGTH@ 30
---------------INS SimpleName@@Name:Optional @TO@ MethodInvocation@@Optional.of(parameterAccessor) @AT@ 4293 @LENGTH@ 8
---------------INS SimpleName@@MethodName:of:[parameterAccessor] @TO@ MethodInvocation@@Optional.of(parameterAccessor) @AT@ 4302 @LENGTH@ 21
------------------MOV SimpleName@@parameterAccessor @TO@ SimpleName@@MethodName:of:[parameterAccessor] @AT@ 4265 @LENGTH@ 17


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled(); @AT@ 5243 @LENGTH@ 160
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5251 @LENGTH@ 151
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5251 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5268 @LENGTH@ 134
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 5268 @LENGTH@ 64
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5268 @LENGTH@ 35
---------UPD MethodInvocation@@componentConfiguration.getConfigurer().isEnabled() @TO@ componentConfiguration.getCustomizer().isEnabled() @AT@ 5352 @LENGTH@ 50
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5352 @LENGTH@ 38


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<NettyHttpComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<NettyHttpComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5488 @LENGTH@ 342
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 5492 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5492 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  ComponentCustomizer<NettyHttpComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ ThenBody:{  for (  ComponentCustomizer<NettyHttpComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5548 @LENGTH@ 282
------UPD EnhancedForStatement@@for (ComponentCustomizer<NettyHttpComponent> configurer : customizers) {  LOGGER.debug("Configure component {}, with configurer {}",component,configurer);  configurer.customize(component);} @TO@ for (ComponentCustomizer<NettyHttpComponent> customizer : customizers) {  LOGGER.debug("Configure component {}, with customizer {}",component,customizer);  customizer.customize(component);} @AT@ 5562 @LENGTH@ 258
---------UPD SingleVariableDeclaration@@ComponentCustomizer<NettyHttpComponent> configurer @TO@ ComponentCustomizer<NettyHttpComponent> customizer @AT@ 5567 @LENGTH@ 50
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5607 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5651 @LENGTH@ 106
------------UPD MethodInvocation@@LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5651 @LENGTH@ 105
---------------UPD SimpleName@@MethodName:debug:["Configure component {}, with configurer {}", component, configurer] @TO@ MethodName:debug:["Configure component {}, with customizer {}", component, customizer] @AT@ 5658 @LENGTH@ 98
------------------UPD StringLiteral@@"Configure component {}, with configurer {}" @TO@ "Configure component {}, with customizer {}" @AT@ 5664 @LENGTH@ 44
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5745 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(component) @TO@ MethodInvocation:customizer.customize(component) @AT@ 5774 @LENGTH@ 32
------------UPD MethodInvocation@@configurer.customize(component) @TO@ customizer.customize(component) @AT@ 5774 @LENGTH@ 31
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5774 @LENGTH@ 10


UPD FieldDeclaration@@private, static, final, Logger, [logger=Logger.getLogger(NestedJtaTransactionPolicy.class.getCanonicalName())] @TO@ private, final, Logger, [logger=Logger.getLogger(NestedJtaTransactionPolicy.class.getCanonicalName())] @AT@ 293 @LENGTH@ 107
---DEL Modifier@@static @AT@ 301 @LENGTH@ 6


UPD VariableDeclarationStatement@@MongoPersistentEntity<?> entity=personMappingContext.getPersistentEntity(Person.class); @TO@ MongoPersistentEntity<?> entity=personMappingContext.getRequiredPersistentEntity(Person.class); @AT@ 4357 @LENGTH@ 89
---UPD VariableDeclarationFragment@@entity=personMappingContext.getPersistentEntity(Person.class) @TO@ entity=personMappingContext.getRequiredPersistentEntity(Person.class) @AT@ 4382 @LENGTH@ 63
------UPD MethodInvocation@@personMappingContext.getPersistentEntity(Person.class) @TO@ personMappingContext.getRequiredPersistentEntity(Person.class) @AT@ 4391 @LENGTH@ 54
---------UPD SimpleName@@MethodName:getPersistentEntity:[Person.class] @TO@ MethodName:getRequiredPersistentEntity:[Person.class] @AT@ 4412 @LENGTH@ 33


UPD ExpressionStatement@@MethodInvocation:Assert.notNull(source) @TO@ MethodInvocation:Assert.notNull(source,"source cannot be null") @AT@ 1683 @LENGTH@ 23
---UPD MethodInvocation@@Assert.notNull(source) @TO@ Assert.notNull(source,"source cannot be null") @AT@ 1683 @LENGTH@ 22
------UPD SimpleName@@MethodName:notNull:[source] @TO@ MethodName:notNull:[source, "source cannot be null"] @AT@ 1690 @LENGTH@ 15
---------INS StringLiteral@@"source cannot be null" @TO@ SimpleName@@MethodName:notNull:[source] @AT@ 1706 @LENGTH@ 23


UPD MethodDeclaration@@private, static, Map<Integer,IntervalProcessor>, MethodName:getProcessorMap,  @TO@ private, Map<Integer,IntervalProcessor>, MethodName:getProcessorMap,  @AT@ 10176 @LENGTH@ 731
---DEL Modifier@@static @AT@ 10184 @LENGTH@ 6


UPD EnhancedForStatement@@for (String beanName : contactServices.keySet()) {  Object object=this.beanFactory.getBean("&" + beanName);  try {    System.out.println("Trying to find setUsername(String) method on: " + object.getClass().getName());    Method method=object.getClass().getMethod("setUsername",new Class[]{String.class});    System.out.println("Found; Trying to setUsername(String) to " + authentication.getPrincipal());    method.invoke(object,authentication.getPrincipal());  } catch (  NoSuchMethodException ignored) {    System.out.println("This client proxy factory does not have a setUsername(String) method");  }catch (  IllegalAccessException ignored) {    ignored.printStackTrace();  }catch (  InvocationTargetException ignored) {    ignored.printStackTrace();  }  try {    System.out.println("Trying to find setPassword(String) method on: " + object.getClass().getName());    Method method=object.getClass().getMethod("setPassword",new Class[]{String.class});    method.invoke(object,authentication.getCredentials());    System.out.println("Found; Trying to setPassword(String) to " + authentication.getCredentials());  } catch (  NoSuchMethodException ignored) {    System.out.println("This client proxy factory does not have a setPassword(String) method");  }catch (  IllegalAccessException ignored) {  }catch (  InvocationTargetException ignored) {  }  ContactManager remoteContactManager=contactServices.get(beanName);  System.out.println("Calling ContactManager '" + beanName + "'");  stopWatch.start(beanName);  List<Contact> contacts=null;  for (int i=0; i < nrOfCalls; i++) {    contacts=remoteContactManager.getAll();  }  stopWatch.stop();  if (contacts.size() != 0) {    for (    Contact contact : contacts) {      System.out.println("Contact: " + contact);    }  } else {    System.out.println("No contacts found which this user has permission to");  }  System.out.println();  System.out.println(stopWatch.prettyPrint());} @TO@ for (Map.Entry<String,ContactManager> entry : contactServices.entrySet()) {  String beanName=entry.getKey();  ContactManager remoteContactManager=entry.getValue();  Object object=this.beanFactory.getBean("&" + beanName);  try {    System.out.println("Trying to find setUsername(String) method on: " + object.getClass().getName());    Method method=object.getClass().getMethod("setUsername",new Class[]{String.class});    System.out.println("Found; Trying to setUsername(String) to " + authentication.getPrincipal());    method.invoke(object,authentication.getPrincipal());  } catch (  NoSuchMethodException ignored) {    System.out.println("This client proxy factory does not have a setUsername(String) method");  }catch (  IllegalAccessException ignored) {    ignored.printStackTrace();  }catch (  InvocationTargetException ignored) {    ignored.printStackTrace();  }  try {    System.out.println("Trying to find setPassword(String) method on: " + object.getClass().getName());    Method method=object.getClass().getMethod("setPassword",new Class[]{String.class});    method.invoke(object,authentication.getCredentials());    System.out.println("Found; Trying to setPassword(String) to " + authentication.getCredentials());  } catch (  NoSuchMethodException ignored) {    System.out.println("This client proxy factory does not have a setPassword(String) method");  }catch (  IllegalAccessException ignored) {  }catch (  InvocationTargetException ignored) {  }  System.out.println("Calling ContactManager '" + beanName + "'");  stopWatch.start(beanName);  List<Contact> contacts=null;  for (int i=0; i < nrOfCalls; i++) {    contacts=remoteContactManager.getAll();  }  stopWatch.stop();  if (contacts.size() != 0) {    for (    Contact contact : contacts) {      System.out.println("Contact: " + contact);    }  } else {    System.out.println("No contacts found which this user has permission to");  }  System.out.println();  System.out.println(stopWatch.prettyPrint());} @AT@ 2272 @LENGTH@ 2085
---UPD SingleVariableDeclaration@@String beanName @TO@ Map.Entry<String,ContactManager> entry @AT@ 2277 @LENGTH@ 15
------DEL SimpleType@@String @AT@ 2277 @LENGTH@ 6
------INS ParameterizedType@@Map.Entry<String,ContactManager> @TO@ SingleVariableDeclaration@@String beanName @AT@ 2277 @LENGTH@ 32
---------INS SimpleType@@Map.Entry @TO@ ParameterizedType@@Map.Entry<String,ContactManager> @AT@ 2277 @LENGTH@ 9
---------INS SimpleType@@String @TO@ ParameterizedType@@Map.Entry<String,ContactManager> @AT@ 2287 @LENGTH@ 6
---------INS SimpleType@@ContactManager @TO@ ParameterizedType@@Map.Entry<String,ContactManager> @AT@ 2294 @LENGTH@ 14
------UPD SimpleName@@beanName @TO@ entry @AT@ 2284 @LENGTH@ 8
---UPD MethodInvocation@@contactServices.keySet() @TO@ contactServices.entrySet() @AT@ 2295 @LENGTH@ 24
------UPD SimpleName@@MethodName:keySet:[] @TO@ MethodName:entrySet:[] @AT@ 2311 @LENGTH@ 8
---INS VariableDeclarationStatement@@String beanName=entry.getKey(); @TO@ EnhancedForStatement@@for (String beanName : contactServices.keySet()) {  Object object=this.beanFactory.getBean("&" + beanName);  try {    System.out.println("Trying to find setUsername(String) method on: " + object.getClass().getName());    Method method=object.getClass().getMethod("setUsername",new Class[]{String.class});    System.out.println("Found; Trying to setUsername(String) to " + authentication.getPrincipal());    method.invoke(object,authentication.getPrincipal());  } catch (  NoSuchMethodException ignored) {    System.out.println("This client proxy factory does not have a setUsername(String) method");  }catch (  IllegalAccessException ignored) {    ignored.printStackTrace();  }catch (  InvocationTargetException ignored) {    ignored.printStackTrace();  }  try {    System.out.println("Trying to find setPassword(String) method on: " + object.getClass().getName());    Method method=object.getClass().getMethod("setPassword",new Class[]{String.class});    method.invoke(object,authentication.getCredentials());    System.out.println("Found; Trying to setPassword(String) to " + authentication.getCredentials());  } catch (  NoSuchMethodException ignored) {    System.out.println("This client proxy factory does not have a setPassword(String) method");  }catch (  IllegalAccessException ignored) {  }catch (  InvocationTargetException ignored) {  }  ContactManager remoteContactManager=contactServices.get(beanName);  System.out.println("Calling ContactManager '" + beanName + "'");  stopWatch.start(beanName);  List<Contact> contacts=null;  for (int i=0; i < nrOfCalls; i++) {    contacts=remoteContactManager.getAll();  }  stopWatch.stop();  if (contacts.size() != 0) {    for (    Contact contact : contacts) {      System.out.println("Contact: " + contact);    }  } else {    System.out.println("No contacts found which this user has permission to");  }  System.out.println();  System.out.println(stopWatch.prettyPrint());} @AT@ 2351 @LENGTH@ 33
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String beanName=entry.getKey(); @AT@ 2351 @LENGTH@ 6
------INS VariableDeclarationFragment@@beanName=entry.getKey() @TO@ VariableDeclarationStatement@@String beanName=entry.getKey(); @AT@ 2358 @LENGTH@ 25
---------INS SimpleName@@beanName @TO@ VariableDeclarationFragment@@beanName=entry.getKey() @AT@ 2358 @LENGTH@ 8
---------INS MethodInvocation@@entry.getKey() @TO@ VariableDeclarationFragment@@beanName=entry.getKey() @AT@ 2369 @LENGTH@ 14
------------INS SimpleName@@Name:entry @TO@ MethodInvocation@@entry.getKey() @AT@ 2369 @LENGTH@ 5
------------INS SimpleName@@MethodName:getKey:[] @TO@ MethodInvocation@@entry.getKey() @AT@ 2375 @LENGTH@ 8
---UPD VariableDeclarationStatement@@ContactManager remoteContactManager=contactServices.get(beanName); @TO@ ContactManager remoteContactManager=entry.getValue(); @AT@ 3738 @LENGTH@ 68
------UPD VariableDeclarationFragment@@remoteContactManager=contactServices.get(beanName) @TO@ remoteContactManager=entry.getValue() @AT@ 3753 @LENGTH@ 52
---------UPD MethodInvocation@@contactServices.get(beanName) @TO@ entry.getValue() @AT@ 3776 @LENGTH@ 29
------------UPD SimpleName@@Name:contactServices @TO@ Name:entry @AT@ 3776 @LENGTH@ 15
------------UPD SimpleName@@MethodName:get:[beanName] @TO@ MethodName:getValue:[] @AT@ 3792 @LENGTH@ 13
---------------DEL SimpleName@@beanName @AT@ 3796 @LENGTH@ 8
---MOV VariableDeclarationStatement@@ContactManager remoteContactManager=contactServices.get(beanName); @TO@ EnhancedForStatement@@for (String beanName : contactServices.keySet()) {  Object object=this.beanFactory.getBean("&" + beanName);  try {    System.out.println("Trying to find setUsername(String) method on: " + object.getClass().getName());    Method method=object.getClass().getMethod("setUsername",new Class[]{String.class});    System.out.println("Found; Trying to setUsername(String) to " + authentication.getPrincipal());    method.invoke(object,authentication.getPrincipal());  } catch (  NoSuchMethodException ignored) {    System.out.println("This client proxy factory does not have a setUsername(String) method");  }catch (  IllegalAccessException ignored) {    ignored.printStackTrace();  }catch (  InvocationTargetException ignored) {    ignored.printStackTrace();  }  try {    System.out.println("Trying to find setPassword(String) method on: " + object.getClass().getName());    Method method=object.getClass().getMethod("setPassword",new Class[]{String.class});    method.invoke(object,authentication.getCredentials());    System.out.println("Found; Trying to setPassword(String) to " + authentication.getCredentials());  } catch (  NoSuchMethodException ignored) {    System.out.println("This client proxy factory does not have a setPassword(String) method");  }catch (  IllegalAccessException ignored) {  }catch (  InvocationTargetException ignored) {  }  ContactManager remoteContactManager=contactServices.get(beanName);  System.out.println("Calling ContactManager '" + beanName + "'");  stopWatch.start(beanName);  List<Contact> contacts=null;  for (int i=0; i < nrOfCalls; i++) {    contacts=remoteContactManager.getAll();  }  stopWatch.stop();  if (contacts.size() != 0) {    for (    Contact contact : contacts) {      System.out.println("Contact: " + contact);    }  } else {    System.out.println("No contacts found which this user has permission to");  }  System.out.println();  System.out.println(stopWatch.prettyPrint());} @AT@ 3738 @LENGTH@ 68


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<SqlComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<SqlComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5378 @LENGTH@ 336
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 5382 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5382 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  ComponentCustomizer<SqlComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ ThenBody:{  for (  ComponentCustomizer<SqlComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5438 @LENGTH@ 276
------UPD EnhancedForStatement@@for (ComponentCustomizer<SqlComponent> configurer : customizers) {  LOGGER.debug("Configure component {}, with configurer {}",component,configurer);  configurer.customize(component);} @TO@ for (ComponentCustomizer<SqlComponent> customizer : customizers) {  LOGGER.debug("Configure component {}, with customizer {}",component,customizer);  customizer.customize(component);} @AT@ 5452 @LENGTH@ 252
---------UPD SingleVariableDeclaration@@ComponentCustomizer<SqlComponent> configurer @TO@ ComponentCustomizer<SqlComponent> customizer @AT@ 5457 @LENGTH@ 44
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5491 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5535 @LENGTH@ 106
------------UPD MethodInvocation@@LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5535 @LENGTH@ 105
---------------UPD SimpleName@@MethodName:debug:["Configure component {}, with configurer {}", component, configurer] @TO@ MethodName:debug:["Configure component {}, with customizer {}", component, customizer] @AT@ 5542 @LENGTH@ 98
------------------UPD StringLiteral@@"Configure component {}, with configurer {}" @TO@ "Configure component {}, with customizer {}" @AT@ 5548 @LENGTH@ 44
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5629 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(component) @TO@ MethodInvocation:customizer.customize(component) @AT@ 5658 @LENGTH@ 32
------------UPD MethodInvocation@@configurer.customize(component) @TO@ customizer.customize(component) @AT@ 5658 @LENGTH@ 31
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5658 @LENGTH@ 10


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  LanguageCustomizer<RefLanguage> configurer : customizers) {    LOGGER.debug("Configure language {}, with configurer {}",language,configurer);    configurer.customize(language);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  LanguageCustomizer<RefLanguage> customizer : customizers) {    LOGGER.debug("Configure language {}, with customizer {}",language,customizer);    customizer.customize(language);  }} @AT@ 4671 @LENGTH@ 331
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 4675 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 4675 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  LanguageCustomizer<RefLanguage> configurer : customizers) {    LOGGER.debug("Configure language {}, with configurer {}",language,configurer);    configurer.customize(language);  }} @TO@ ThenBody:{  for (  LanguageCustomizer<RefLanguage> customizer : customizers) {    LOGGER.debug("Configure language {}, with customizer {}",language,customizer);    customizer.customize(language);  }} @AT@ 4731 @LENGTH@ 271
------UPD EnhancedForStatement@@for (LanguageCustomizer<RefLanguage> configurer : customizers) {  LOGGER.debug("Configure language {}, with configurer {}",language,configurer);  configurer.customize(language);} @TO@ for (LanguageCustomizer<RefLanguage> customizer : customizers) {  LOGGER.debug("Configure language {}, with customizer {}",language,customizer);  customizer.customize(language);} @AT@ 4745 @LENGTH@ 247
---------UPD SingleVariableDeclaration@@LanguageCustomizer<RefLanguage> configurer @TO@ LanguageCustomizer<RefLanguage> customizer @AT@ 4750 @LENGTH@ 42
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 4782 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure language {}, with configurer {}",language,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure language {}, with customizer {}",language,customizer) @AT@ 4826 @LENGTH@ 104
------------UPD MethodInvocation@@LOGGER.debug("Configure language {}, with configurer {}",language,configurer) @TO@ LOGGER.debug("Configure language {}, with customizer {}",language,customizer) @AT@ 4826 @LENGTH@ 103
---------------UPD SimpleName@@MethodName:debug:["Configure language {}, with configurer {}", language, configurer] @TO@ MethodName:debug:["Configure language {}, with customizer {}", language, customizer] @AT@ 4833 @LENGTH@ 96
------------------UPD StringLiteral@@"Configure language {}, with configurer {}" @TO@ "Configure language {}, with customizer {}" @AT@ 4839 @LENGTH@ 43
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 4918 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(language) @TO@ MethodInvocation:customizer.customize(language) @AT@ 4947 @LENGTH@ 31
------------UPD MethodInvocation@@configurer.customize(language) @TO@ customizer.customize(language) @AT@ 4947 @LENGTH@ 30
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 4947 @LENGTH@ 10


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<RabbitMQComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<RabbitMQComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5463 @LENGTH@ 341
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 5467 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5467 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  ComponentCustomizer<RabbitMQComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ ThenBody:{  for (  ComponentCustomizer<RabbitMQComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5523 @LENGTH@ 281
------UPD EnhancedForStatement@@for (ComponentCustomizer<RabbitMQComponent> configurer : customizers) {  LOGGER.debug("Configure component {}, with configurer {}",component,configurer);  configurer.customize(component);} @TO@ for (ComponentCustomizer<RabbitMQComponent> customizer : customizers) {  LOGGER.debug("Configure component {}, with customizer {}",component,customizer);  customizer.customize(component);} @AT@ 5537 @LENGTH@ 257
---------UPD SingleVariableDeclaration@@ComponentCustomizer<RabbitMQComponent> configurer @TO@ ComponentCustomizer<RabbitMQComponent> customizer @AT@ 5542 @LENGTH@ 49
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5581 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5625 @LENGTH@ 106
------------UPD MethodInvocation@@LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5625 @LENGTH@ 105
---------------UPD SimpleName@@MethodName:debug:["Configure component {}, with configurer {}", component, configurer] @TO@ MethodName:debug:["Configure component {}, with customizer {}", component, customizer] @AT@ 5632 @LENGTH@ 98
------------------UPD StringLiteral@@"Configure component {}, with configurer {}" @TO@ "Configure component {}, with customizer {}" @AT@ 5638 @LENGTH@ 44
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5719 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(component) @TO@ MethodInvocation:customizer.customize(component) @AT@ 5748 @LENGTH@ 32
------------UPD MethodInvocation@@configurer.customize(component) @TO@ customizer.customize(component) @AT@ 5748 @LENGTH@ 31
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5748 @LENGTH@ 10


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled(); @AT@ 5361 @LENGTH@ 160
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5369 @LENGTH@ 151
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5369 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5386 @LENGTH@ 134
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 5386 @LENGTH@ 64
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5386 @LENGTH@ 35
---------UPD MethodInvocation@@componentConfiguration.getConfigurer().isEnabled() @TO@ componentConfiguration.getCustomizer().isEnabled() @AT@ 5470 @LENGTH@ 50
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5470 @LENGTH@ 38


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && languageConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && languageConfiguration.getCustomizer().isEnabled(); @AT@ 4525 @LENGTH@ 159
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && languageConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && languageConfiguration.getCustomizer().isEnabled() @AT@ 4533 @LENGTH@ 150
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 4533 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && languageConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && languageConfiguration.getCustomizer().isEnabled() @AT@ 4550 @LENGTH@ 133
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 4550 @LENGTH@ 64
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 4550 @LENGTH@ 35
---------UPD MethodInvocation@@languageConfiguration.getConfigurer().isEnabled() @TO@ languageConfiguration.getCustomizer().isEnabled() @AT@ 4634 @LENGTH@ 49
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 4634 @LENGTH@ 37


UPD ExpressionStatement@@MethodInvocation:getIdPropertyFor(savedObject.getClass()).ifPresent(idProp -> {
  ConversionService conversionService=mongoConverter.getConversionService();
  MongoPersistentEntity<?> entity=mappingContext.getRequiredPersistentEntity(savedObject.getClass());
  PersistentPropertyAccessor accessor=entity.getPropertyAccessor(savedObject);
  Optional<Object> value=accessor.getProperty(idProp);
  value.ifPresent(it -> new ConvertingPropertyAccessor(accessor,conversionService).setProperty(idProp,value));
}
) @TO@ MethodInvocation:getIdPropertyFor(savedObject.getClass()).ifPresent(idProp -> {
  ConversionService conversionService=mongoConverter.getConversionService();
  MongoPersistentEntity<?> entity=mappingContext.getRequiredPersistentEntity(savedObject.getClass());
  PersistentPropertyAccessor accessor=entity.getPropertyAccessor(savedObject);
  Optional<Object> value=accessor.getProperty(idProp);
  if (!value.isPresent()) {
    new ConvertingPropertyAccessor(accessor,conversionService).setProperty(idProp,Optional.of(id));
  }
}
) @AT@ 77712 @LENGTH@ 509
---UPD MethodInvocation@@getIdPropertyFor(savedObject.getClass()).ifPresent(idProp -> {
  ConversionService conversionService=mongoConverter.getConversionService();
  MongoPersistentEntity<?> entity=mappingContext.getRequiredPersistentEntity(savedObject.getClass());
  PersistentPropertyAccessor accessor=entity.getPropertyAccessor(savedObject);
  Optional<Object> value=accessor.getProperty(idProp);
  value.ifPresent(it -> new ConvertingPropertyAccessor(accessor,conversionService).setProperty(idProp,value));
}
) @TO@ getIdPropertyFor(savedObject.getClass()).ifPresent(idProp -> {
  ConversionService conversionService=mongoConverter.getConversionService();
  MongoPersistentEntity<?> entity=mappingContext.getRequiredPersistentEntity(savedObject.getClass());
  PersistentPropertyAccessor accessor=entity.getPropertyAccessor(savedObject);
  Optional<Object> value=accessor.getProperty(idProp);
  if (!value.isPresent()) {
    new ConvertingPropertyAccessor(accessor,conversionService).setProperty(idProp,Optional.of(id));
  }
}
) @AT@ 77712 @LENGTH@ 508
------UPD SimpleName@@MethodName:ifPresent:[idProp -> {
  ConversionService conversionService=mongoConverter.getConversionService();
  MongoPersistentEntity<?> entity=mappingContext.getRequiredPersistentEntity(savedObject.getClass());
  PersistentPropertyAccessor accessor=entity.getPropertyAccessor(savedObject);
  Optional<Object> value=accessor.getProperty(idProp);
  value.ifPresent(it -> new ConvertingPropertyAccessor(accessor,conversionService).setProperty(idProp,value));
}
] @TO@ MethodName:ifPresent:[idProp -> {
  ConversionService conversionService=mongoConverter.getConversionService();
  MongoPersistentEntity<?> entity=mappingContext.getRequiredPersistentEntity(savedObject.getClass());
  PersistentPropertyAccessor accessor=entity.getPropertyAccessor(savedObject);
  Optional<Object> value=accessor.getProperty(idProp);
  if (!value.isPresent()) {
    new ConvertingPropertyAccessor(accessor,conversionService).setProperty(idProp,Optional.of(id));
  }
}
] @AT@ 77753 @LENGTH@ 467
---------UPD LambdaExpression@@idProp -> {
  ConversionService conversionService=mongoConverter.getConversionService();
  MongoPersistentEntity<?> entity=mappingContext.getRequiredPersistentEntity(savedObject.getClass());
  PersistentPropertyAccessor accessor=entity.getPropertyAccessor(savedObject);
  Optional<Object> value=accessor.getProperty(idProp);
  value.ifPresent(it -> new ConvertingPropertyAccessor(accessor,conversionService).setProperty(idProp,value));
}
 @TO@ idProp -> {
  ConversionService conversionService=mongoConverter.getConversionService();
  MongoPersistentEntity<?> entity=mappingContext.getRequiredPersistentEntity(savedObject.getClass());
  PersistentPropertyAccessor accessor=entity.getPropertyAccessor(savedObject);
  Optional<Object> value=accessor.getProperty(idProp);
  if (!value.isPresent()) {
    new ConvertingPropertyAccessor(accessor,conversionService).setProperty(idProp,Optional.of(id));
  }
}
 @AT@ 77763 @LENGTH@ 456
------------DEL ExpressionStatement@@MethodInvocation:value.ifPresent(it -> new ConvertingPropertyAccessor(accessor,conversionService).setProperty(idProp,value)) @AT@ 78105 @LENGTH@ 110
---------------DEL MethodInvocation@@value.ifPresent(it -> new ConvertingPropertyAccessor(accessor,conversionService).setProperty(idProp,value)) @AT@ 78105 @LENGTH@ 109
------------------DEL SimpleName@@MethodName:ifPresent:[it -> new ConvertingPropertyAccessor(accessor,conversionService).setProperty(idProp,value)] @AT@ 78111 @LENGTH@ 103
---------------------DEL LambdaExpression@@it -> new ConvertingPropertyAccessor(accessor,conversionService).setProperty(idProp,value) @AT@ 78121 @LENGTH@ 92
------------------------DEL VariableDeclarationFragment@@it @AT@ 78121 @LENGTH@ 2
---------------------------DEL SimpleName@@it @AT@ 78121 @LENGTH@ 2
------------------------DEL MethodInvocation@@new ConvertingPropertyAccessor(accessor,conversionService).setProperty(idProp,value) @AT@ 78127 @LENGTH@ 86
------------INS IfStatement@@if (!value.isPresent()) {  new ConvertingPropertyAccessor(accessor,conversionService).setProperty(idProp,Optional.of(id));} @TO@ LambdaExpression@@idProp -> {
  ConversionService conversionService=mongoConverter.getConversionService();
  MongoPersistentEntity<?> entity=mappingContext.getRequiredPersistentEntity(savedObject.getClass());
  PersistentPropertyAccessor accessor=entity.getPropertyAccessor(savedObject);
  Optional<Object> value=accessor.getProperty(idProp);
  value.ifPresent(it -> new ConvertingPropertyAccessor(accessor,conversionService).setProperty(idProp,value));
}
 @AT@ 78117 @LENGTH@ 131
---------------INS PrefixExpression@@!value.isPresent() @TO@ IfStatement@@if (!value.isPresent()) {  new ConvertingPropertyAccessor(accessor,conversionService).setProperty(idProp,Optional.of(id));} @AT@ 78120 @LENGTH@ 18
------------------INS Operator@@! @TO@ PrefixExpression@@!value.isPresent() @AT@ 78120 @LENGTH@ 1
------------------INS MethodInvocation@@value.isPresent() @TO@ PrefixExpression@@!value.isPresent() @AT@ 78121 @LENGTH@ 17
---------------------MOV SimpleName@@Name:value @TO@ MethodInvocation@@value.isPresent() @AT@ 78105 @LENGTH@ 5
---------------------INS SimpleName@@MethodName:isPresent:[] @TO@ MethodInvocation@@value.isPresent() @AT@ 78127 @LENGTH@ 11
---------------INS Block@@ThenBody:{  new ConvertingPropertyAccessor(accessor,conversionService).setProperty(idProp,Optional.of(id));} @TO@ IfStatement@@if (!value.isPresent()) {  new ConvertingPropertyAccessor(accessor,conversionService).setProperty(idProp,Optional.of(id));} @AT@ 78140 @LENGTH@ 108
------------------INS ExpressionStatement@@MethodInvocation:new ConvertingPropertyAccessor(accessor,conversionService).setProperty(idProp,Optional.of(id)) @TO@ Block@@ThenBody:{  new ConvertingPropertyAccessor(accessor,conversionService).setProperty(idProp,Optional.of(id));} @AT@ 78146 @LENGTH@ 97
---------------------INS MethodInvocation@@new ConvertingPropertyAccessor(accessor,conversionService).setProperty(idProp,Optional.of(id)) @TO@ ExpressionStatement@@MethodInvocation:new ConvertingPropertyAccessor(accessor,conversionService).setProperty(idProp,Optional.of(id)) @AT@ 78146 @LENGTH@ 96
------------------------MOV ClassInstanceCreation@@ConvertingPropertyAccessor[accessor, conversionService] @TO@ MethodInvocation@@new ConvertingPropertyAccessor(accessor,conversionService).setProperty(idProp,Optional.of(id)) @AT@ 78127 @LENGTH@ 59
------------------------MOV SimpleName@@MethodName:setProperty:[idProp, value] @TO@ MethodInvocation@@new ConvertingPropertyAccessor(accessor,conversionService).setProperty(idProp,Optional.of(id)) @AT@ 78187 @LENGTH@ 26
---------------------------INS MethodInvocation@@Optional.of(id) @TO@ SimpleName@@MethodName:setProperty:[idProp, value] @AT@ 78226 @LENGTH@ 15
------------------------------INS SimpleName@@Name:Optional @TO@ MethodInvocation@@Optional.of(id) @AT@ 78226 @LENGTH@ 8
------------------------------INS SimpleName@@MethodName:of:[id] @TO@ MethodInvocation@@Optional.of(id) @AT@ 78235 @LENGTH@ 6
---------------------------------INS SimpleName@@id @TO@ SimpleName@@MethodName:of:[id] @AT@ 78238 @LENGTH@ 2


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<BeanComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<BeanComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5395 @LENGTH@ 337
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 5399 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5399 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  ComponentCustomizer<BeanComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ ThenBody:{  for (  ComponentCustomizer<BeanComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5455 @LENGTH@ 277
------UPD EnhancedForStatement@@for (ComponentCustomizer<BeanComponent> configurer : customizers) {  LOGGER.debug("Configure component {}, with configurer {}",component,configurer);  configurer.customize(component);} @TO@ for (ComponentCustomizer<BeanComponent> customizer : customizers) {  LOGGER.debug("Configure component {}, with customizer {}",component,customizer);  customizer.customize(component);} @AT@ 5469 @LENGTH@ 253
---------UPD SingleVariableDeclaration@@ComponentCustomizer<BeanComponent> configurer @TO@ ComponentCustomizer<BeanComponent> customizer @AT@ 5474 @LENGTH@ 45
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5509 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5553 @LENGTH@ 106
------------UPD MethodInvocation@@LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5553 @LENGTH@ 105
---------------UPD SimpleName@@MethodName:debug:["Configure component {}, with configurer {}", component, configurer] @TO@ MethodName:debug:["Configure component {}, with customizer {}", component, customizer] @AT@ 5560 @LENGTH@ 98
------------------UPD StringLiteral@@"Configure component {}, with configurer {}" @TO@ "Configure component {}, with customizer {}" @AT@ 5566 @LENGTH@ 44
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5647 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(component) @TO@ MethodInvocation:customizer.customize(component) @AT@ 5676 @LENGTH@ 32
------------UPD MethodInvocation@@configurer.customize(component) @TO@ customizer.customize(component) @AT@ 5676 @LENGTH@ 31
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5676 @LENGTH@ 10


UPD IfStatement@@if (service instanceof SuspendableService) {  SuspendableService ss=(SuspendableService)service;  if (ss.isSuspended()) {    LOG.debug("Resuming service {}",service);    ss.resume();    return true;  } else {    return false;  }} else {  startService(service);  return true;} @TO@ if (service instanceof Suspendable && service instanceof SuspendableService) {  SuspendableService ss=(SuspendableService)service;  if (ss.isSuspended()) {    LOG.debug("Resuming service {}",service);    ss.resume();    return true;  } else {    return false;  }} else {  startService(service);  return true;} @AT@ 10962 @LENGTH@ 415
---DEL InstanceofExpression@@service instanceof SuspendableService @AT@ 10966 @LENGTH@ 37
---INS InfixExpression@@service instanceof Suspendable && service instanceof SuspendableService @TO@ IfStatement@@if (service instanceof SuspendableService) {  SuspendableService ss=(SuspendableService)service;  if (ss.isSuspended()) {    LOG.debug("Resuming service {}",service);    ss.resume();    return true;  } else {    return false;  }} else {  startService(service);  return true;} @AT@ 11049 @LENGTH@ 71
------INS InstanceofExpression@@service instanceof Suspendable @TO@ InfixExpression@@service instanceof Suspendable && service instanceof SuspendableService @AT@ 11049 @LENGTH@ 30
---------INS SimpleName@@service @TO@ InstanceofExpression@@service instanceof Suspendable @AT@ 11049 @LENGTH@ 7
---------INS Instanceof@@instanceof @TO@ InstanceofExpression@@service instanceof Suspendable @AT@ 11057 @LENGTH@ 10
---------INS SimpleType@@Suspendable @TO@ InstanceofExpression@@service instanceof Suspendable @AT@ 11068 @LENGTH@ 11
------INS Operator@@&& @TO@ InfixExpression@@service instanceof Suspendable && service instanceof SuspendableService @AT@ 11079 @LENGTH@ 2
------INS InstanceofExpression@@service instanceof SuspendableService @TO@ InfixExpression@@service instanceof Suspendable && service instanceof SuspendableService @AT@ 11083 @LENGTH@ 37
---------MOV SimpleName@@service @TO@ InstanceofExpression@@service instanceof SuspendableService @AT@ 10966 @LENGTH@ 7
---------MOV Instanceof@@instanceof @TO@ InstanceofExpression@@service instanceof SuspendableService @AT@ 10974 @LENGTH@ 10
---------MOV SimpleType@@SuspendableService @TO@ InstanceofExpression@@service instanceof SuspendableService @AT@ 10985 @LENGTH@ 18


UPD EnhancedForStatement@@for (Entry<String,FieldMetadata> fieldEntry : relations.entrySet()) {  parentType=fieldEntry.getValue().getFieldType().getBaseType();  parent=getJpaEntityMetadata(parentType);  Validate.notNull(parent,"Can't get information about Entity %s which is declared as parent in %s.%s field",parentType,domainType,fieldEntry.getKey());  info=parent.getRelationInfosByMappedBy(domainType,fieldEntry.getKey());  Validate.notNull(info,"Can't get information about relation on Entity %s which is declared as parent in %s.%s field",parentType,domainType,fieldEntry.getKey());  childRelations.add(Pair.of(fieldEntry.getValue(),info));} @TO@ for (Entry<String,FieldMetadata> fieldEntry : relations.entrySet()) {  parentType=fieldEntry.getValue().getFieldType().getBaseType();  parent=getJpaEntityMetadata(parentType);  Validate.notNull(parent,"Can't get information about Entity %s which is declared as parent in %s.%s field",parentType,domainType,fieldEntry.getKey());  info=parent.getRelationInfosByMappedBy(domainType,fieldEntry.getKey());  if (info != null) {    childRelations.add(Pair.of(fieldEntry.getValue(),info));  }} @AT@ 35675 @LENGTH@ 747
---DEL ExpressionStatement@@MethodInvocation:Validate.notNull(info,"Can't get information about relation on Entity %s which is declared as parent in %s.%s field",parentType,domainType,fieldEntry.getKey()) @AT@ 36134 @LENGTH@ 218
------DEL MethodInvocation@@Validate.notNull(info,"Can't get information about relation on Entity %s which is declared as parent in %s.%s field",parentType,domainType,fieldEntry.getKey()) @AT@ 36134 @LENGTH@ 217
---------DEL SimpleName@@Name:Validate @AT@ 36134 @LENGTH@ 8
---------DEL SimpleName@@MethodName:notNull:[info, "Can't get information about relation on Entity %s which is declared as parent in %s.%s field", parentType, domainType, fieldEntry.getKey()] @AT@ 36154 @LENGTH@ 197
------------DEL SimpleName@@info @AT@ 36177 @LENGTH@ 4
------------DEL StringLiteral@@"Can't get information about relation on Entity %s which is declared as parent in %s.%s field" @AT@ 36197 @LENGTH@ 94
------------DEL SimpleName@@parentType @AT@ 36307 @LENGTH@ 10
------------DEL SimpleName@@domainType @AT@ 36319 @LENGTH@ 10
------------DEL MethodInvocation@@fieldEntry.getKey() @AT@ 36331 @LENGTH@ 19
---------------DEL SimpleName@@Name:fieldEntry @AT@ 36331 @LENGTH@ 10
---------------DEL SimpleName@@MethodName:getKey:[] @AT@ 36342 @LENGTH@ 8
---INS IfStatement@@if (info != null) {  childRelations.add(Pair.of(fieldEntry.getValue(),info));} @TO@ EnhancedForStatement@@for (Entry<String,FieldMetadata> fieldEntry : relations.entrySet()) {  parentType=fieldEntry.getValue().getFieldType().getBaseType();  parent=getJpaEntityMetadata(parentType);  Validate.notNull(parent,"Can't get information about Entity %s which is declared as parent in %s.%s field",parentType,domainType,fieldEntry.getKey());  info=parent.getRelationInfosByMappedBy(domainType,fieldEntry.getKey());  Validate.notNull(info,"Can't get information about relation on Entity %s which is declared as parent in %s.%s field",parentType,domainType,fieldEntry.getKey());  childRelations.add(Pair.of(fieldEntry.getValue(),info));} @AT@ 36134 @LENGTH@ 93
------INS InfixExpression@@info != null @TO@ IfStatement@@if (info != null) {  childRelations.add(Pair.of(fieldEntry.getValue(),info));} @AT@ 36138 @LENGTH@ 12
---------INS SimpleName@@info @TO@ InfixExpression@@info != null @AT@ 36138 @LENGTH@ 4
---------INS Operator@@!= @TO@ InfixExpression@@info != null @AT@ 36142 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@info != null @AT@ 36146 @LENGTH@ 4
------INS Block@@ThenBody:{  childRelations.add(Pair.of(fieldEntry.getValue(),info));} @TO@ IfStatement@@if (info != null) {  childRelations.add(Pair.of(fieldEntry.getValue(),info));} @AT@ 36152 @LENGTH@ 75
---------MOV ExpressionStatement@@MethodInvocation:childRelations.add(Pair.of(fieldEntry.getValue(),info)) @TO@ Block@@ThenBody:{  childRelations.add(Pair.of(fieldEntry.getValue(),info));} @AT@ 36359 @LENGTH@ 57


UPD MethodDeclaration@@public, voidMethodName:MongoRepositoryBean, Bean<MongoOperations> operations, Set<Annotation> qualifiers, Class<T> repositoryType, BeanManager beanManager, CustomRepositoryImplementationDetector detector,  @TO@ public, voidMethodName:MongoRepositoryBean, Bean<MongoOperations> operations, Set<Annotation> qualifiers, Class<T> repositoryType, BeanManager beanManager, Optional<CustomRepositoryImplementationDetector> detector,  @AT@ 1946 @LENGTH@ 361
---UPD SingleVariableDeclaration@@CustomRepositoryImplementationDetector detector @TO@ Optional<CustomRepositoryImplementationDetector> detector @AT@ 2088 @LENGTH@ 47
------DEL SimpleType@@CustomRepositoryImplementationDetector @AT@ 2088 @LENGTH@ 38
------INS ParameterizedType@@Optional<CustomRepositoryImplementationDetector> @TO@ SingleVariableDeclaration@@CustomRepositoryImplementationDetector detector @AT@ 2115 @LENGTH@ 48
---------INS SimpleType@@Optional @TO@ ParameterizedType@@Optional<CustomRepositoryImplementationDetector> @AT@ 2115 @LENGTH@ 8
---------INS SimpleType@@CustomRepositoryImplementationDetector @TO@ ParameterizedType@@Optional<CustomRepositoryImplementationDetector> @AT@ 2124 @LENGTH@ 38


UPD MethodDeclaration@@public, ID, MethodName:getId, T t,  @TO@ public, Optional<ID>, MethodName:getId, T t,  @AT@ 2379 @LENGTH@ 139
---DEL SimpleType@@ID @AT@ 2386 @LENGTH@ 2
---UPD IfStatement@@if (t instanceof Persistable) {  return (ID)((Persistable<ID>)t).getId();} @TO@ if (t instanceof Persistable) {  return Optional.ofNullable(((Persistable<ID>)t).getId());} @AT@ 2405 @LENGTH@ 81
------UPD Block@@ThenBody:{  return (ID)((Persistable<ID>)t).getId();} @TO@ ThenBody:{  return Optional.ofNullable(((Persistable<ID>)t).getId());} @AT@ 2435 @LENGTH@ 51
---------UPD ReturnStatement@@CastExpression:(ID)((Persistable<ID>)t).getId() @TO@ MethodInvocation:Optional.ofNullable(((Persistable<ID>)t).getId()) @AT@ 2440 @LENGTH@ 42
------------DEL CastExpression@@(ID)((Persistable<ID>)t).getId() @AT@ 2447 @LENGTH@ 34
---------------DEL SimpleType@@ID @AT@ 2448 @LENGTH@ 2
------------INS MethodInvocation@@Optional.ofNullable(((Persistable<ID>)t).getId()) @TO@ ReturnStatement@@CastExpression:(ID)((Persistable<ID>)t).getId() @AT@ 2484 @LENGTH@ 50
---------------INS SimpleName@@Name:Optional @TO@ MethodInvocation@@Optional.ofNullable(((Persistable<ID>)t).getId()) @AT@ 2484 @LENGTH@ 8
---------------INS SimpleName@@MethodName:ofNullable:[((Persistable<ID>)t).getId()] @TO@ MethodInvocation@@Optional.ofNullable(((Persistable<ID>)t).getId()) @AT@ 2493 @LENGTH@ 41
------------------MOV MethodInvocation@@((Persistable<ID>)t).getId() @TO@ SimpleName@@MethodName:ofNullable:[((Persistable<ID>)t).getId()] @AT@ 2452 @LENGTH@ 29
---INS ParameterizedType@@Optional<ID> @TO@ MethodDeclaration@@public, ID, MethodName:getId, T t,  @AT@ 2413 @LENGTH@ 12
------INS SimpleType@@Optional @TO@ ParameterizedType@@Optional<ID> @AT@ 2413 @LENGTH@ 8
------INS SimpleType@@ID @TO@ ParameterizedType@@Optional<ID> @AT@ 2422 @LENGTH@ 2


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && dataformatConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && dataformatConfiguration.getCustomizer().isEnabled(); @AT@ 5100 @LENGTH@ 177
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && dataformatConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && dataformatConfiguration.getCustomizer().isEnabled() @AT@ 5108 @LENGTH@ 168
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5108 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && dataformatConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && dataformatConfiguration.getCustomizer().isEnabled() @AT@ 5125 @LENGTH@ 151
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 5125 @LENGTH@ 72
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5125 @LENGTH@ 35
---------UPD MethodInvocation@@dataformatConfiguration.getConfigurer().isEnabled() @TO@ dataformatConfiguration.getCustomizer().isEnabled() @AT@ 5225 @LENGTH@ 51
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5225 @LENGTH@ 39


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled(); @AT@ 5243 @LENGTH@ 160
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5251 @LENGTH@ 151
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5251 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5268 @LENGTH@ 134
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 5268 @LENGTH@ 64
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5268 @LENGTH@ 35
---------UPD MethodInvocation@@componentConfiguration.getConfigurer().isEnabled() @TO@ componentConfiguration.getCustomizer().isEnabled() @AT@ 5352 @LENGTH@ 50
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5352 @LENGTH@ 38


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && languageConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && languageConfiguration.getCustomizer().isEnabled(); @AT@ 4507 @LENGTH@ 159
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && languageConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && languageConfiguration.getCustomizer().isEnabled() @AT@ 4515 @LENGTH@ 150
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 4515 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && languageConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && languageConfiguration.getCustomizer().isEnabled() @AT@ 4532 @LENGTH@ 133
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 4532 @LENGTH@ 64
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 4532 @LENGTH@ 35
---------UPD MethodInvocation@@languageConfiguration.getConfigurer().isEnabled() @TO@ languageConfiguration.getCustomizer().isEnabled() @AT@ 4616 @LENGTH@ 49
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 4616 @LENGTH@ 37


UPD FieldDeclaration@@private, boolean, [useGlobalSslContextParameters=false] @TO@ private, boolean, [useGlobalSslContextParameters] @AT@ 2052 @LENGTH@ 54
---UPD VariableDeclarationFragment@@useGlobalSslContextParameters=false @TO@ useGlobalSslContextParameters @AT@ 2068 @LENGTH@ 37
------DEL BooleanLiteral@@false @AT@ 2100 @LENGTH@ 5


UPD FieldDeclaration@@protected, static, int, [MAX_KEY_LENGTH=100] @TO@ protected, static, final, int, [MAX_KEY_LENGTH=100] @AT@ 1380 @LENGTH@ 42
---INS Modifier@@final @TO@ FieldDeclaration@@protected, static, int, [MAX_KEY_LENGTH=100] @AT@ 1397 @LENGTH@ 5


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<FopComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<FopComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5378 @LENGTH@ 336
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 5382 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5382 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  ComponentCustomizer<FopComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ ThenBody:{  for (  ComponentCustomizer<FopComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5438 @LENGTH@ 276
------UPD EnhancedForStatement@@for (ComponentCustomizer<FopComponent> configurer : customizers) {  LOGGER.debug("Configure component {}, with configurer {}",component,configurer);  configurer.customize(component);} @TO@ for (ComponentCustomizer<FopComponent> customizer : customizers) {  LOGGER.debug("Configure component {}, with customizer {}",component,customizer);  customizer.customize(component);} @AT@ 5452 @LENGTH@ 252
---------UPD SingleVariableDeclaration@@ComponentCustomizer<FopComponent> configurer @TO@ ComponentCustomizer<FopComponent> customizer @AT@ 5457 @LENGTH@ 44
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5491 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5535 @LENGTH@ 106
------------UPD MethodInvocation@@LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5535 @LENGTH@ 105
---------------UPD SimpleName@@MethodName:debug:["Configure component {}, with configurer {}", component, configurer] @TO@ MethodName:debug:["Configure component {}, with customizer {}", component, customizer] @AT@ 5542 @LENGTH@ 98
------------------UPD StringLiteral@@"Configure component {}, with configurer {}" @TO@ "Configure component {}, with customizer {}" @AT@ 5548 @LENGTH@ 44
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5629 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(component) @TO@ MethodInvocation:customizer.customize(component) @AT@ 5658 @LENGTH@ 32
------------UPD MethodInvocation@@configurer.customize(component) @TO@ customizer.customize(component) @AT@ 5658 @LENGTH@ 31
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5658 @LENGTH@ 10


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<KestrelComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<KestrelComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5446 @LENGTH@ 340
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 5450 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5450 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  ComponentCustomizer<KestrelComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ ThenBody:{  for (  ComponentCustomizer<KestrelComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5506 @LENGTH@ 280
------UPD EnhancedForStatement@@for (ComponentCustomizer<KestrelComponent> configurer : customizers) {  LOGGER.debug("Configure component {}, with configurer {}",component,configurer);  configurer.customize(component);} @TO@ for (ComponentCustomizer<KestrelComponent> customizer : customizers) {  LOGGER.debug("Configure component {}, with customizer {}",component,customizer);  customizer.customize(component);} @AT@ 5520 @LENGTH@ 256
---------UPD SingleVariableDeclaration@@ComponentCustomizer<KestrelComponent> configurer @TO@ ComponentCustomizer<KestrelComponent> customizer @AT@ 5525 @LENGTH@ 48
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5563 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5607 @LENGTH@ 106
------------UPD MethodInvocation@@LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5607 @LENGTH@ 105
---------------UPD SimpleName@@MethodName:debug:["Configure component {}, with configurer {}", component, configurer] @TO@ MethodName:debug:["Configure component {}, with customizer {}", component, customizer] @AT@ 5614 @LENGTH@ 98
------------------UPD StringLiteral@@"Configure component {}, with configurer {}" @TO@ "Configure component {}, with customizer {}" @AT@ 5620 @LENGTH@ 44
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5701 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(component) @TO@ MethodInvocation:customizer.customize(component) @AT@ 5730 @LENGTH@ 32
------------UPD MethodInvocation@@configurer.customize(component) @TO@ customizer.customize(component) @AT@ 5730 @LENGTH@ 31
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5730 @LENGTH@ 10


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled(); @AT@ 5226 @LENGTH@ 160
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5234 @LENGTH@ 151
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5234 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5251 @LENGTH@ 134
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 5251 @LENGTH@ 64
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5251 @LENGTH@ 35
---------UPD MethodInvocation@@componentConfiguration.getConfigurer().isEnabled() @TO@ componentConfiguration.getCustomizer().isEnabled() @AT@ 5335 @LENGTH@ 50
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5335 @LENGTH@ 38


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<GoogleDriveComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<GoogleDriveComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5530 @LENGTH@ 344
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 5534 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5534 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  ComponentCustomizer<GoogleDriveComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ ThenBody:{  for (  ComponentCustomizer<GoogleDriveComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5590 @LENGTH@ 284
------UPD EnhancedForStatement@@for (ComponentCustomizer<GoogleDriveComponent> configurer : customizers) {  LOGGER.debug("Configure component {}, with configurer {}",component,configurer);  configurer.customize(component);} @TO@ for (ComponentCustomizer<GoogleDriveComponent> customizer : customizers) {  LOGGER.debug("Configure component {}, with customizer {}",component,customizer);  customizer.customize(component);} @AT@ 5604 @LENGTH@ 260
---------UPD SingleVariableDeclaration@@ComponentCustomizer<GoogleDriveComponent> configurer @TO@ ComponentCustomizer<GoogleDriveComponent> customizer @AT@ 5609 @LENGTH@ 52
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5651 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5695 @LENGTH@ 106
------------UPD MethodInvocation@@LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5695 @LENGTH@ 105
---------------UPD SimpleName@@MethodName:debug:["Configure component {}, with configurer {}", component, configurer] @TO@ MethodName:debug:["Configure component {}, with customizer {}", component, customizer] @AT@ 5702 @LENGTH@ 98
------------------UPD StringLiteral@@"Configure component {}, with configurer {}" @TO@ "Configure component {}, with customizer {}" @AT@ 5708 @LENGTH@ 44
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5789 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(component) @TO@ MethodInvocation:customizer.customize(component) @AT@ 5818 @LENGTH@ 32
------------UPD MethodInvocation@@configurer.customize(component) @TO@ customizer.customize(component) @AT@ 5818 @LENGTH@ 31
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5818 @LENGTH@ 10


INS MethodDeclaration@@public, Object, MethodName:getReturnType, Object payload,  @TO@ TypeDeclaration@@[public]HandlerAdapter,  @AT@ 2233 @LENGTH@ 296
---INS Modifier@@public @TO@ MethodDeclaration@@public, Object, MethodName:getReturnType, Object payload,  @AT@ 2233 @LENGTH@ 6
---INS SimpleType@@Object @TO@ MethodDeclaration@@public, Object, MethodName:getReturnType, Object payload,  @AT@ 2240 @LENGTH@ 6
---INS SimpleName@@MethodName:getReturnType @TO@ MethodDeclaration@@public, Object, MethodName:getReturnType, Object payload,  @AT@ 2247 @LENGTH@ 13
---INS SingleVariableDeclaration@@Object payload @TO@ MethodDeclaration@@public, Object, MethodName:getReturnType, Object payload,  @AT@ 2261 @LENGTH@ 14
------INS SimpleType@@Object @TO@ SingleVariableDeclaration@@Object payload @AT@ 2261 @LENGTH@ 6
------INS SimpleName@@payload @TO@ SingleVariableDeclaration@@Object payload @AT@ 2268 @LENGTH@ 7
---INS IfStatement@@if (this.invokerHandlerMethod != null) {  return this.invokerHandlerMethod.getMethod().getReturnType();} else {  Method method=this.delegatingHandler.getMethodFor(payload);  return method == null ? null : method.getReturnType();} @TO@ MethodDeclaration@@public, Object, MethodName:getReturnType, Object payload,  @AT@ 2281 @LENGTH@ 245
------INS InfixExpression@@this.invokerHandlerMethod != null @TO@ IfStatement@@if (this.invokerHandlerMethod != null) {  return this.invokerHandlerMethod.getMethod().getReturnType();} else {  Method method=this.delegatingHandler.getMethodFor(payload);  return method == null ? null : method.getReturnType();} @AT@ 2285 @LENGTH@ 33
---------INS FieldAccess@@this.invokerHandlerMethod @TO@ InfixExpression@@this.invokerHandlerMethod != null @AT@ 2285 @LENGTH@ 25
------------INS ThisExpression@@this @TO@ FieldAccess@@this.invokerHandlerMethod @AT@ 2285 @LENGTH@ 4
------------INS SimpleName@@invokerHandlerMethod @TO@ FieldAccess@@this.invokerHandlerMethod @AT@ 2290 @LENGTH@ 20
---------INS Operator@@!= @TO@ InfixExpression@@this.invokerHandlerMethod != null @AT@ 2310 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@this.invokerHandlerMethod != null @AT@ 2314 @LENGTH@ 4
------INS Block@@ThenBody:{  return this.invokerHandlerMethod.getMethod().getReturnType();} @TO@ IfStatement@@if (this.invokerHandlerMethod != null) {  return this.invokerHandlerMethod.getMethod().getReturnType();} else {  Method method=this.delegatingHandler.getMethodFor(payload);  return method == null ? null : method.getReturnType();} @AT@ 2320 @LENGTH@ 70
---------INS ReturnStatement@@MethodInvocation:this.invokerHandlerMethod.getMethod().getReturnType() @TO@ Block@@ThenBody:{  return this.invokerHandlerMethod.getMethod().getReturnType();} @AT@ 2325 @LENGTH@ 61
------------INS MethodInvocation@@this.invokerHandlerMethod.getMethod().getReturnType() @TO@ ReturnStatement@@MethodInvocation:this.invokerHandlerMethod.getMethod().getReturnType() @AT@ 2332 @LENGTH@ 53
---------------INS MethodInvocation@@MethodName:getMethod:[] @TO@ MethodInvocation@@this.invokerHandlerMethod.getMethod().getReturnType() @AT@ 2332 @LENGTH@ 37
---------------INS FieldAccess@@this.invokerHandlerMethod @TO@ MethodInvocation@@this.invokerHandlerMethod.getMethod().getReturnType() @AT@ 2332 @LENGTH@ 25
------------------INS ThisExpression@@this @TO@ FieldAccess@@this.invokerHandlerMethod @AT@ 2332 @LENGTH@ 4
------------------INS SimpleName@@invokerHandlerMethod @TO@ FieldAccess@@this.invokerHandlerMethod @AT@ 2337 @LENGTH@ 20
---------------INS SimpleName@@MethodName:getReturnType:[] @TO@ MethodInvocation@@this.invokerHandlerMethod.getMethod().getReturnType() @AT@ 2370 @LENGTH@ 15
------INS Block@@ElseBody:{  Method method=this.delegatingHandler.getMethodFor(payload);  return method == null ? null : method.getReturnType();} @TO@ IfStatement@@if (this.invokerHandlerMethod != null) {  return this.invokerHandlerMethod.getMethod().getReturnType();} else {  Method method=this.delegatingHandler.getMethodFor(payload);  return method == null ? null : method.getReturnType();} @AT@ 2398 @LENGTH@ 128
---------INS VariableDeclarationStatement@@Method method=this.delegatingHandler.getMethodFor(payload); @TO@ Block@@ElseBody:{  Method method=this.delegatingHandler.getMethodFor(payload);  return method == null ? null : method.getReturnType();} @AT@ 2403 @LENGTH@ 61
------------INS SimpleType@@Method @TO@ VariableDeclarationStatement@@Method method=this.delegatingHandler.getMethodFor(payload); @AT@ 2403 @LENGTH@ 6
------------INS VariableDeclarationFragment@@method=this.delegatingHandler.getMethodFor(payload) @TO@ VariableDeclarationStatement@@Method method=this.delegatingHandler.getMethodFor(payload); @AT@ 2410 @LENGTH@ 53
---------------INS SimpleName@@method @TO@ VariableDeclarationFragment@@method=this.delegatingHandler.getMethodFor(payload) @AT@ 2410 @LENGTH@ 6
---------------INS MethodInvocation@@this.delegatingHandler.getMethodFor(payload) @TO@ VariableDeclarationFragment@@method=this.delegatingHandler.getMethodFor(payload) @AT@ 2419 @LENGTH@ 44
------------------INS FieldAccess@@this.delegatingHandler @TO@ MethodInvocation@@this.delegatingHandler.getMethodFor(payload) @AT@ 2419 @LENGTH@ 22
---------------------INS ThisExpression@@this @TO@ FieldAccess@@this.delegatingHandler @AT@ 2419 @LENGTH@ 4
---------------------INS SimpleName@@delegatingHandler @TO@ FieldAccess@@this.delegatingHandler @AT@ 2424 @LENGTH@ 17
------------------INS SimpleName@@MethodName:getMethodFor:[payload] @TO@ MethodInvocation@@this.delegatingHandler.getMethodFor(payload) @AT@ 2442 @LENGTH@ 21
---------------------INS SimpleName@@payload @TO@ SimpleName@@MethodName:getMethodFor:[payload] @AT@ 2455 @LENGTH@ 7
---------INS ReturnStatement@@ConditionalExpression:method == null ? null : method.getReturnType() @TO@ Block@@ElseBody:{  Method method=this.delegatingHandler.getMethodFor(payload);  return method == null ? null : method.getReturnType();} @AT@ 2468 @LENGTH@ 54
------------INS ConditionalExpression@@method == null ? null : method.getReturnType() @TO@ ReturnStatement@@ConditionalExpression:method == null ? null : method.getReturnType() @AT@ 2475 @LENGTH@ 46
---------------INS InfixExpression@@method == null @TO@ ConditionalExpression@@method == null ? null : method.getReturnType() @AT@ 2475 @LENGTH@ 14
------------------INS SimpleName@@method @TO@ InfixExpression@@method == null @AT@ 2475 @LENGTH@ 6
------------------INS Operator@@== @TO@ InfixExpression@@method == null @AT@ 2481 @LENGTH@ 2
------------------INS NullLiteral@@null @TO@ InfixExpression@@method == null @AT@ 2485 @LENGTH@ 4
---------------INS NullLiteral@@null @TO@ ConditionalExpression@@method == null ? null : method.getReturnType() @AT@ 2492 @LENGTH@ 4
---------------INS MethodInvocation@@method.getReturnType() @TO@ ConditionalExpression@@method == null ? null : method.getReturnType() @AT@ 2499 @LENGTH@ 22
------------------INS SimpleName@@Name:method @TO@ MethodInvocation@@method.getReturnType() @AT@ 2499 @LENGTH@ 6
------------------INS SimpleName@@MethodName:getReturnType:[] @TO@ MethodInvocation@@method.getReturnType() @AT@ 2506 @LENGTH@ 15


UPD VariableDeclarationStatement@@TypeWithoutIdProperty retrieved=repo.findOne(map.get("_id").toString()); @TO@ Optional<TypeWithoutIdProperty> retrieved=repo.findOne(map.get("_id").toString()); @AT@ 3308 @LENGTH@ 74
---DEL SimpleType@@TypeWithoutIdProperty @AT@ 3308 @LENGTH@ 21
---INS ParameterizedType@@Optional<TypeWithoutIdProperty> @TO@ VariableDeclarationStatement@@TypeWithoutIdProperty retrieved=repo.findOne(map.get("_id").toString()); @AT@ 3335 @LENGTH@ 31
------INS SimpleType@@Optional @TO@ ParameterizedType@@Optional<TypeWithoutIdProperty> @AT@ 3335 @LENGTH@ 8
------INS SimpleType@@TypeWithoutIdProperty @TO@ ParameterizedType@@Optional<TypeWithoutIdProperty> @AT@ 3344 @LENGTH@ 21


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<FileComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<FileComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5395 @LENGTH@ 337
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 5399 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5399 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  ComponentCustomizer<FileComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ ThenBody:{  for (  ComponentCustomizer<FileComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5455 @LENGTH@ 277
------UPD EnhancedForStatement@@for (ComponentCustomizer<FileComponent> configurer : customizers) {  LOGGER.debug("Configure component {}, with configurer {}",component,configurer);  configurer.customize(component);} @TO@ for (ComponentCustomizer<FileComponent> customizer : customizers) {  LOGGER.debug("Configure component {}, with customizer {}",component,customizer);  customizer.customize(component);} @AT@ 5469 @LENGTH@ 253
---------UPD SingleVariableDeclaration@@ComponentCustomizer<FileComponent> configurer @TO@ ComponentCustomizer<FileComponent> customizer @AT@ 5474 @LENGTH@ 45
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5509 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5553 @LENGTH@ 106
------------UPD MethodInvocation@@LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5553 @LENGTH@ 105
---------------UPD SimpleName@@MethodName:debug:["Configure component {}, with configurer {}", component, configurer] @TO@ MethodName:debug:["Configure component {}, with customizer {}", component, customizer] @AT@ 5560 @LENGTH@ 98
------------------UPD StringLiteral@@"Configure component {}, with configurer {}" @TO@ "Configure component {}, with customizer {}" @AT@ 5566 @LENGTH@ 44
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5647 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(component) @TO@ MethodInvocation:customizer.customize(component) @AT@ 5676 @LENGTH@ 32
------------UPD MethodInvocation@@configurer.customize(component) @TO@ customizer.customize(component) @AT@ 5676 @LENGTH@ 31
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5676 @LENGTH@ 10


INS MethodDeclaration@@private, void, MethodName:returnOrThrow, org.springframework.amqp.core.Message amqpMessage, Channel channel, Message<?> message, Throwable throwableToReturn, Exception exceptionToThrow, Exception,  @TO@ TypeDeclaration@@[public]MessagingMessageListenerAdapter, AbstractAdaptableMessageListener @AT@ 5367 @LENGTH@ 555
---INS Modifier@@private @TO@ MethodDeclaration@@private, void, MethodName:returnOrThrow, org.springframework.amqp.core.Message amqpMessage, Channel channel, Message<?> message, Throwable throwableToReturn, Exception exceptionToThrow, Exception,  @AT@ 5367 @LENGTH@ 7
---MOV IfStatement@@if (!this.returnExceptions) {  throw e;} @TO@ MethodDeclaration@@private, void, MethodName:returnOrThrow, org.springframework.amqp.core.Message amqpMessage, Channel channel, Message<?> message, Throwable throwableToReturn, Exception exceptionToThrow, Exception,  @AT@ 5371 @LENGTH@ 49
---INS PrimitiveType@@void @TO@ MethodDeclaration@@private, void, MethodName:returnOrThrow, org.springframework.amqp.core.Message amqpMessage, Channel channel, Message<?> message, Throwable throwableToReturn, Exception exceptionToThrow, Exception,  @AT@ 5375 @LENGTH@ 4
---INS SimpleName@@MethodName:returnOrThrow @TO@ MethodDeclaration@@private, void, MethodName:returnOrThrow, org.springframework.amqp.core.Message amqpMessage, Channel channel, Message<?> message, Throwable throwableToReturn, Exception exceptionToThrow, Exception,  @AT@ 5380 @LENGTH@ 13
---INS SingleVariableDeclaration@@org.springframework.amqp.core.Message amqpMessage @TO@ MethodDeclaration@@private, void, MethodName:returnOrThrow, org.springframework.amqp.core.Message amqpMessage, Channel channel, Message<?> message, Throwable throwableToReturn, Exception exceptionToThrow, Exception,  @AT@ 5394 @LENGTH@ 49
------INS SimpleType@@org.springframework.amqp.core.Message @TO@ SingleVariableDeclaration@@org.springframework.amqp.core.Message amqpMessage @AT@ 5394 @LENGTH@ 37
------INS SimpleName@@amqpMessage @TO@ SingleVariableDeclaration@@org.springframework.amqp.core.Message amqpMessage @AT@ 5432 @LENGTH@ 11
---INS SingleVariableDeclaration@@Channel channel @TO@ MethodDeclaration@@private, void, MethodName:returnOrThrow, org.springframework.amqp.core.Message amqpMessage, Channel channel, Message<?> message, Throwable throwableToReturn, Exception exceptionToThrow, Exception,  @AT@ 5445 @LENGTH@ 15
------INS SimpleType@@Channel @TO@ SingleVariableDeclaration@@Channel channel @AT@ 5445 @LENGTH@ 7
------INS SimpleName@@channel @TO@ SingleVariableDeclaration@@Channel channel @AT@ 5453 @LENGTH@ 7
---INS SingleVariableDeclaration@@Message<?> message @TO@ MethodDeclaration@@private, void, MethodName:returnOrThrow, org.springframework.amqp.core.Message amqpMessage, Channel channel, Message<?> message, Throwable throwableToReturn, Exception exceptionToThrow, Exception,  @AT@ 5462 @LENGTH@ 18
------INS ParameterizedType@@Message<?> @TO@ SingleVariableDeclaration@@Message<?> message @AT@ 5462 @LENGTH@ 10
---------INS SimpleType@@Message @TO@ ParameterizedType@@Message<?> @AT@ 5462 @LENGTH@ 7
---------INS WildcardType@@? @TO@ ParameterizedType@@Message<?> @AT@ 5470 @LENGTH@ 1
------INS SimpleName@@message @TO@ SingleVariableDeclaration@@Message<?> message @AT@ 5473 @LENGTH@ 7
---INS SingleVariableDeclaration@@Throwable throwableToReturn @TO@ MethodDeclaration@@private, void, MethodName:returnOrThrow, org.springframework.amqp.core.Message amqpMessage, Channel channel, Message<?> message, Throwable throwableToReturn, Exception exceptionToThrow, Exception,  @AT@ 5485 @LENGTH@ 27
------INS SimpleType@@Throwable @TO@ SingleVariableDeclaration@@Throwable throwableToReturn @AT@ 5485 @LENGTH@ 9
------INS SimpleName@@throwableToReturn @TO@ SingleVariableDeclaration@@Throwable throwableToReturn @AT@ 5495 @LENGTH@ 17
---INS SingleVariableDeclaration@@Exception exceptionToThrow @TO@ MethodDeclaration@@private, void, MethodName:returnOrThrow, org.springframework.amqp.core.Message amqpMessage, Channel channel, Message<?> message, Throwable throwableToReturn, Exception exceptionToThrow, Exception,  @AT@ 5514 @LENGTH@ 26
------INS SimpleType@@Exception @TO@ SingleVariableDeclaration@@Exception exceptionToThrow @AT@ 5514 @LENGTH@ 9
------INS SimpleName@@exceptionToThrow @TO@ SingleVariableDeclaration@@Exception exceptionToThrow @AT@ 5524 @LENGTH@ 16
---INS SimpleType@@Exception @TO@ MethodDeclaration@@private, void, MethodName:returnOrThrow, org.springframework.amqp.core.Message amqpMessage, Channel channel, Message<?> message, Throwable throwableToReturn, Exception exceptionToThrow, Exception,  @AT@ 5549 @LENGTH@ 9
---INS TryStatement@@try {  handleResult(new RemoteInvocationResult(throwableToReturn),amqpMessage,channel,message);} catch (ReplyFailureException rfe) {  if (void.class.equals(this.handlerMethod.getReturnType(message.getPayload()))) {    throw exceptionToThrow;  } else {    throw rfe;  }} @TO@ MethodDeclaration@@private, void, MethodName:returnOrThrow, org.springframework.amqp.core.Message amqpMessage, Channel channel, Message<?> message, Throwable throwableToReturn, Exception exceptionToThrow, Exception,  @AT@ 5626 @LENGTH@ 293
------INS ExpressionStatement@@MethodInvocation:handleResult(new RemoteInvocationResult(throwableToReturn),amqpMessage,channel,message) @TO@ TryStatement@@try {  handleResult(new RemoteInvocationResult(throwableToReturn),amqpMessage,channel,message);} catch (ReplyFailureException rfe) {  if (void.class.equals(this.handlerMethod.getReturnType(message.getPayload()))) {    throw exceptionToThrow;  } else {    throw rfe;  }} @AT@ 5635 @LENGTH@ 91
---------INS MethodInvocation@@handleResult(new RemoteInvocationResult(throwableToReturn),amqpMessage,channel,message) @TO@ ExpressionStatement@@MethodInvocation:handleResult(new RemoteInvocationResult(throwableToReturn),amqpMessage,channel,message) @AT@ 5635 @LENGTH@ 90
------------INS SimpleName@@MethodName:handleResult:[new RemoteInvocationResult(throwableToReturn), amqpMessage, channel, message] @TO@ MethodInvocation@@handleResult(new RemoteInvocationResult(throwableToReturn),amqpMessage,channel,message) @AT@ 5635 @LENGTH@ 90
---------------INS ClassInstanceCreation@@RemoteInvocationResult[throwableToReturn] @TO@ SimpleName@@MethodName:handleResult:[new RemoteInvocationResult(throwableToReturn), amqpMessage, channel, message] @AT@ 5648 @LENGTH@ 45
------------------INS New@@new @TO@ ClassInstanceCreation@@RemoteInvocationResult[throwableToReturn] @AT@ 5648 @LENGTH@ 3
------------------INS SimpleType@@RemoteInvocationResult @TO@ ClassInstanceCreation@@RemoteInvocationResult[throwableToReturn] @AT@ 5652 @LENGTH@ 22
------------------INS SimpleName@@throwableToReturn @TO@ ClassInstanceCreation@@RemoteInvocationResult[throwableToReturn] @AT@ 5675 @LENGTH@ 17
---------------INS SimpleName@@amqpMessage @TO@ SimpleName@@MethodName:handleResult:[new RemoteInvocationResult(throwableToReturn), amqpMessage, channel, message] @AT@ 5695 @LENGTH@ 11
---------------INS SimpleName@@channel @TO@ SimpleName@@MethodName:handleResult:[new RemoteInvocationResult(throwableToReturn), amqpMessage, channel, message] @AT@ 5708 @LENGTH@ 7
---------------INS SimpleName@@message @TO@ SimpleName@@MethodName:handleResult:[new RemoteInvocationResult(throwableToReturn), amqpMessage, channel, message] @AT@ 5717 @LENGTH@ 7
------INS CatchClause@@catch (ReplyFailureException rfe) {  if (void.class.equals(this.handlerMethod.getReturnType(message.getPayload()))) {    throw exceptionToThrow;  } else {    throw rfe;  }} @TO@ TryStatement@@try {  handleResult(new RemoteInvocationResult(throwableToReturn),amqpMessage,channel,message);} catch (ReplyFailureException rfe) {  if (void.class.equals(this.handlerMethod.getReturnType(message.getPayload()))) {    throw exceptionToThrow;  } else {    throw rfe;  }} @AT@ 5733 @LENGTH@ 186
---------INS SingleVariableDeclaration@@ReplyFailureException rfe @TO@ CatchClause@@catch (ReplyFailureException rfe) {  if (void.class.equals(this.handlerMethod.getReturnType(message.getPayload()))) {    throw exceptionToThrow;  } else {    throw rfe;  }} @AT@ 5740 @LENGTH@ 25
------------INS SimpleType@@ReplyFailureException @TO@ SingleVariableDeclaration@@ReplyFailureException rfe @AT@ 5740 @LENGTH@ 21
------------INS SimpleName@@rfe @TO@ SingleVariableDeclaration@@ReplyFailureException rfe @AT@ 5762 @LENGTH@ 3
---------INS IfStatement@@if (void.class.equals(this.handlerMethod.getReturnType(message.getPayload()))) {  throw exceptionToThrow;} else {  throw rfe;} @TO@ CatchClause@@catch (ReplyFailureException rfe) {  if (void.class.equals(this.handlerMethod.getReturnType(message.getPayload()))) {    throw exceptionToThrow;  } else {    throw rfe;  }} @AT@ 5772 @LENGTH@ 143
------------INS MethodInvocation@@void.class.equals(this.handlerMethod.getReturnType(message.getPayload())) @TO@ IfStatement@@if (void.class.equals(this.handlerMethod.getReturnType(message.getPayload()))) {  throw exceptionToThrow;} else {  throw rfe;} @AT@ 5776 @LENGTH@ 73
---------------INS TypeLiteral@@void.class @TO@ MethodInvocation@@void.class.equals(this.handlerMethod.getReturnType(message.getPayload())) @AT@ 5776 @LENGTH@ 10
---------------INS SimpleName@@MethodName:equals:[this.handlerMethod.getReturnType(message.getPayload())] @TO@ MethodInvocation@@void.class.equals(this.handlerMethod.getReturnType(message.getPayload())) @AT@ 5787 @LENGTH@ 62
------------------INS MethodInvocation@@this.handlerMethod.getReturnType(message.getPayload()) @TO@ SimpleName@@MethodName:equals:[this.handlerMethod.getReturnType(message.getPayload())] @AT@ 5794 @LENGTH@ 54
---------------------INS FieldAccess@@this.handlerMethod @TO@ MethodInvocation@@this.handlerMethod.getReturnType(message.getPayload()) @AT@ 5794 @LENGTH@ 18
------------------------INS ThisExpression@@this @TO@ FieldAccess@@this.handlerMethod @AT@ 5794 @LENGTH@ 4
------------------------INS SimpleName@@handlerMethod @TO@ FieldAccess@@this.handlerMethod @AT@ 5799 @LENGTH@ 13
---------------------INS SimpleName@@MethodName:getReturnType:[message.getPayload()] @TO@ MethodInvocation@@this.handlerMethod.getReturnType(message.getPayload()) @AT@ 5813 @LENGTH@ 35
------------------------INS MethodInvocation@@message.getPayload() @TO@ SimpleName@@MethodName:getReturnType:[message.getPayload()] @AT@ 5827 @LENGTH@ 20
---------------------------INS SimpleName@@Name:message @TO@ MethodInvocation@@message.getPayload() @AT@ 5827 @LENGTH@ 7
---------------------------INS SimpleName@@MethodName:getPayload:[] @TO@ MethodInvocation@@message.getPayload() @AT@ 5835 @LENGTH@ 12
------------INS Block@@ThenBody:{  throw exceptionToThrow;} @TO@ IfStatement@@if (void.class.equals(this.handlerMethod.getReturnType(message.getPayload()))) {  throw exceptionToThrow;} else {  throw rfe;} @AT@ 5851 @LENGTH@ 34
---------------INS ThrowStatement@@SimpleName:exceptionToThrow @TO@ Block@@ThenBody:{  throw exceptionToThrow;} @AT@ 5857 @LENGTH@ 23
------------------INS SimpleName@@exceptionToThrow @TO@ ThrowStatement@@SimpleName:exceptionToThrow @AT@ 5863 @LENGTH@ 16
------------INS Block@@ElseBody:{  throw rfe;} @TO@ IfStatement@@if (void.class.equals(this.handlerMethod.getReturnType(message.getPayload()))) {  throw exceptionToThrow;} else {  throw rfe;} @AT@ 5894 @LENGTH@ 21
---------------INS ThrowStatement@@SimpleName:rfe @TO@ Block@@ElseBody:{  throw rfe;} @AT@ 5900 @LENGTH@ 10
------------------INS SimpleName@@rfe @TO@ ThrowStatement@@SimpleName:rfe @AT@ 5906 @LENGTH@ 3


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  DataFormatCustomizer<HessianDataFormat> configurer : customizers) {    LOGGER.debug("Configure dataformat {}, with configurer {}",dataformat,configurer);    configurer.customize(dataformat);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  DataFormatCustomizer<HessianDataFormat> customizer : customizers) {    LOGGER.debug("Configure dataformat {}, with customizer {}",dataformat,customizer);    customizer.customize(dataformat);  }} @AT@ 5349 @LENGTH@ 426
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 5353 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5353 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  DataFormatCustomizer<HessianDataFormat> configurer : customizers) {    LOGGER.debug("Configure dataformat {}, with configurer {}",dataformat,configurer);    configurer.customize(dataformat);  }} @TO@ ThenBody:{  for (  DataFormatCustomizer<HessianDataFormat> customizer : customizers) {    LOGGER.debug("Configure dataformat {}, with customizer {}",dataformat,customizer);    customizer.customize(dataformat);  }} @AT@ 5409 @LENGTH@ 366
------UPD EnhancedForStatement@@for (DataFormatCustomizer<HessianDataFormat> configurer : customizers) {  LOGGER.debug("Configure dataformat {}, with configurer {}",dataformat,configurer);  configurer.customize(dataformat);} @TO@ for (DataFormatCustomizer<HessianDataFormat> customizer : customizers) {  LOGGER.debug("Configure dataformat {}, with customizer {}",dataformat,customizer);  customizer.customize(dataformat);} @AT@ 5431 @LENGTH@ 326
---------UPD SingleVariableDeclaration@@DataFormatCustomizer<HessianDataFormat> configurer @TO@ DataFormatCustomizer<HessianDataFormat> customizer @AT@ 5436 @LENGTH@ 50
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5476 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure dataformat {}, with configurer {}",dataformat,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure dataformat {}, with customizer {}",dataformat,customizer) @AT@ 5528 @LENGTH@ 149
------------UPD MethodInvocation@@LOGGER.debug("Configure dataformat {}, with configurer {}",dataformat,configurer) @TO@ LOGGER.debug("Configure dataformat {}, with customizer {}",dataformat,customizer) @AT@ 5528 @LENGTH@ 148
---------------UPD SimpleName@@MethodName:debug:["Configure dataformat {}, with configurer {}", dataformat, configurer] @TO@ MethodName:debug:["Configure dataformat {}, with customizer {}", dataformat, customizer] @AT@ 5535 @LENGTH@ 141
------------------UPD StringLiteral@@"Configure dataformat {}, with configurer {}" @TO@ "Configure dataformat {}, with customizer {}" @AT@ 5574 @LENGTH@ 45
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5665 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(dataformat) @TO@ MethodInvocation:customizer.customize(dataformat) @AT@ 5702 @LENGTH@ 33
------------UPD MethodInvocation@@configurer.customize(dataformat) @TO@ customizer.customize(dataformat) @AT@ 5702 @LENGTH@ 32
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5702 @LENGTH@ 10


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<ClassComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<ClassComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5420 @LENGTH@ 338
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 5424 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5424 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  ComponentCustomizer<ClassComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ ThenBody:{  for (  ComponentCustomizer<ClassComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5480 @LENGTH@ 278
------UPD EnhancedForStatement@@for (ComponentCustomizer<ClassComponent> configurer : customizers) {  LOGGER.debug("Configure component {}, with configurer {}",component,configurer);  configurer.customize(component);} @TO@ for (ComponentCustomizer<ClassComponent> customizer : customizers) {  LOGGER.debug("Configure component {}, with customizer {}",component,customizer);  customizer.customize(component);} @AT@ 5494 @LENGTH@ 254
---------UPD SingleVariableDeclaration@@ComponentCustomizer<ClassComponent> configurer @TO@ ComponentCustomizer<ClassComponent> customizer @AT@ 5499 @LENGTH@ 46
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5535 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5579 @LENGTH@ 106
------------UPD MethodInvocation@@LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5579 @LENGTH@ 105
---------------UPD SimpleName@@MethodName:debug:["Configure component {}, with configurer {}", component, configurer] @TO@ MethodName:debug:["Configure component {}, with customizer {}", component, customizer] @AT@ 5586 @LENGTH@ 98
------------------UPD StringLiteral@@"Configure component {}, with configurer {}" @TO@ "Configure component {}, with customizer {}" @AT@ 5592 @LENGTH@ 44
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5673 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(component) @TO@ MethodInvocation:customizer.customize(component) @AT@ 5702 @LENGTH@ 32
------------UPD MethodInvocation@@configurer.customize(component) @TO@ customizer.customize(component) @AT@ 5702 @LENGTH@ 31
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5702 @LENGTH@ 10


UPD ExpressionStatement@@MethodInvocation:Assert.assertEquals("authentication failure",result.getErrors().get(1).getDescription()) @TO@ MethodInvocation:Assert.assertEquals("invalid_grant",result.getErrors().get(1).getDetail("salesforce_code")) @AT@ 6599 @LENGTH@ 90
---UPD MethodInvocation@@Assert.assertEquals("authentication failure",result.getErrors().get(1).getDescription()) @TO@ Assert.assertEquals("invalid_grant",result.getErrors().get(1).getDetail("salesforce_code")) @AT@ 6599 @LENGTH@ 89
------UPD SimpleName@@MethodName:assertEquals:["authentication failure", result.getErrors().get(1).getDescription()] @TO@ MethodName:assertEquals:["invalid_grant", result.getErrors().get(1).getDetail("salesforce_code")] @AT@ 6606 @LENGTH@ 82
---------UPD StringLiteral@@"authentication failure" @TO@ "invalid_grant" @AT@ 6619 @LENGTH@ 24
---------UPD MethodInvocation@@result.getErrors().get(1).getDescription() @TO@ result.getErrors().get(1).getDetail("salesforce_code") @AT@ 6645 @LENGTH@ 42
------------UPD SimpleName@@MethodName:getDescription:[] @TO@ MethodName:getDetail:["salesforce_code"] @AT@ 6671 @LENGTH@ 16
---------------INS StringLiteral@@"salesforce_code" @TO@ SimpleName@@MethodName:getDescription:[] @AT@ 6672 @LENGTH@ 17


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<LanguageComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<LanguageComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5463 @LENGTH@ 341
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 5467 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5467 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  ComponentCustomizer<LanguageComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ ThenBody:{  for (  ComponentCustomizer<LanguageComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5523 @LENGTH@ 281
------UPD EnhancedForStatement@@for (ComponentCustomizer<LanguageComponent> configurer : customizers) {  LOGGER.debug("Configure component {}, with configurer {}",component,configurer);  configurer.customize(component);} @TO@ for (ComponentCustomizer<LanguageComponent> customizer : customizers) {  LOGGER.debug("Configure component {}, with customizer {}",component,customizer);  customizer.customize(component);} @AT@ 5537 @LENGTH@ 257
---------UPD SingleVariableDeclaration@@ComponentCustomizer<LanguageComponent> configurer @TO@ ComponentCustomizer<LanguageComponent> customizer @AT@ 5542 @LENGTH@ 49
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5581 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5625 @LENGTH@ 106
------------UPD MethodInvocation@@LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5625 @LENGTH@ 105
---------------UPD SimpleName@@MethodName:debug:["Configure component {}, with configurer {}", component, configurer] @TO@ MethodName:debug:["Configure component {}, with customizer {}", component, customizer] @AT@ 5632 @LENGTH@ 98
------------------UPD StringLiteral@@"Configure component {}, with configurer {}" @TO@ "Configure component {}, with customizer {}" @AT@ 5638 @LENGTH@ 44
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5719 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(component) @TO@ MethodInvocation:customizer.customize(component) @AT@ 5748 @LENGTH@ 32
------------UPD MethodInvocation@@configurer.customize(component) @TO@ customizer.customize(component) @AT@ 5748 @LENGTH@ 31
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5748 @LENGTH@ 10


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled(); @AT@ 5226 @LENGTH@ 160
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5234 @LENGTH@ 151
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5234 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5251 @LENGTH@ 134
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 5251 @LENGTH@ 64
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5251 @LENGTH@ 35
---------UPD MethodInvocation@@componentConfiguration.getConfigurer().isEnabled() @TO@ componentConfiguration.getCustomizer().isEnabled() @AT@ 5335 @LENGTH@ 50
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5335 @LENGTH@ 38


UPD ExpressionStatement@@MethodInvocation:accounts.put(new Long(account.getId()),account) @TO@ MethodInvocation:accounts.put(account.getId(),account) @AT@ 954 @LENGTH@ 49
---UPD MethodInvocation@@accounts.put(new Long(account.getId()),account) @TO@ accounts.put(account.getId(),account) @AT@ 954 @LENGTH@ 48
------UPD SimpleName@@MethodName:put:[new Long(account.getId()), account] @TO@ MethodName:put:[account.getId(), account] @AT@ 963 @LENGTH@ 39
---------DEL ClassInstanceCreation@@Long[account.getId()] @AT@ 967 @LENGTH@ 25
------------DEL New@@new @AT@ 967 @LENGTH@ 3
------------DEL SimpleType@@Long @AT@ 971 @LENGTH@ 4
------------DEL MethodInvocation@@account.getId() @AT@ 976 @LENGTH@ 15
---------INS MethodInvocation@@account.getId() @TO@ SimpleName@@MethodName:put:[new Long(account.getId()), account] @AT@ 967 @LENGTH@ 15
------------MOV SimpleName@@Name:account @TO@ MethodInvocation@@account.getId() @AT@ 976 @LENGTH@ 7
------------MOV SimpleName@@MethodName:getId:[] @TO@ MethodInvocation@@account.getId() @AT@ 984 @LENGTH@ 7


UPD ExpressionStatement@@MethodInvocation:pc.getReaderContext().fatal("You cannot use a spring-security-2.0.xsd or spring-security-3.0.xsd or spring-security-3.1.xsd schema or spring-security-3.2.xsd schema or spring-security-4.0.xsd schema " + "with Spring Security 4.1. Please update your schema declarations to the 4.1 schema.",element) @TO@ MethodInvocation:pc.getReaderContext().fatal("You cannot use a spring-security-2.0.xsd or spring-security-3.0.xsd or spring-security-3.1.xsd schema or spring-security-3.2.xsd schema or spring-security-4.0.xsd schema " + "with Spring Security 4.2. Please update your schema declarations to the 4.2 schema.",element) @AT@ 4294 @LENGTH@ 319
---UPD MethodInvocation@@pc.getReaderContext().fatal("You cannot use a spring-security-2.0.xsd or spring-security-3.0.xsd or spring-security-3.1.xsd schema or spring-security-3.2.xsd schema or spring-security-4.0.xsd schema " + "with Spring Security 4.1. Please update your schema declarations to the 4.1 schema.",element) @TO@ pc.getReaderContext().fatal("You cannot use a spring-security-2.0.xsd or spring-security-3.0.xsd or spring-security-3.1.xsd schema or spring-security-3.2.xsd schema or spring-security-4.0.xsd schema " + "with Spring Security 4.2. Please update your schema declarations to the 4.2 schema.",element) @AT@ 4294 @LENGTH@ 318
------UPD SimpleName@@MethodName:fatal:["You cannot use a spring-security-2.0.xsd or spring-security-3.0.xsd or spring-security-3.1.xsd schema or spring-security-3.2.xsd schema or spring-security-4.0.xsd schema " + "with Spring Security 4.1. Please update your schema declarations to the 4.1 schema.", element] @TO@ MethodName:fatal:["You cannot use a spring-security-2.0.xsd or spring-security-3.0.xsd or spring-security-3.1.xsd schema or spring-security-3.2.xsd schema or spring-security-4.0.xsd schema " + "with Spring Security 4.2. Please update your schema declarations to the 4.2 schema.", element] @AT@ 4322 @LENGTH@ 290
---------UPD InfixExpression@@"You cannot use a spring-security-2.0.xsd or spring-security-3.0.xsd or spring-security-3.1.xsd schema or spring-security-3.2.xsd schema or spring-security-4.0.xsd schema " + "with Spring Security 4.1. Please update your schema declarations to the 4.1 schema." @TO@ "You cannot use a spring-security-2.0.xsd or spring-security-3.0.xsd or spring-security-3.1.xsd schema or spring-security-3.2.xsd schema or spring-security-4.0.xsd schema " + "with Spring Security 4.2. Please update your schema declarations to the 4.2 schema." @AT@ 4328 @LENGTH@ 267
------------UPD StringLiteral@@"with Spring Security 4.1. Please update your schema declarations to the 4.1 schema." @TO@ "with Spring Security 4.2. Please update your schema declarations to the 4.2 schema." @AT@ 4510 @LENGTH@ 85


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled(); @AT@ 5277 @LENGTH@ 160
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5285 @LENGTH@ 151
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5285 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5302 @LENGTH@ 134
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 5302 @LENGTH@ 64
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5302 @LENGTH@ 35
---------UPD MethodInvocation@@componentConfiguration.getConfigurer().isEnabled() @TO@ componentConfiguration.getCustomizer().isEnabled() @AT@ 5386 @LENGTH@ 50
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5386 @LENGTH@ 38


INS VariableDeclarationStatement@@String entryName=entry.getName(); @TO@ MethodDeclaration@@protected, InputStream, MethodName:getDecompressorStream, InputStream zipped, IOException,  @AT@ 1391 @LENGTH@ 35
---INS SimpleType@@String @TO@ VariableDeclarationStatement@@String entryName=entry.getName(); @AT@ 1391 @LENGTH@ 6
---INS VariableDeclarationFragment@@entryName=entry.getName() @TO@ VariableDeclarationStatement@@String entryName=entry.getName(); @AT@ 1398 @LENGTH@ 27
------INS SimpleName@@entryName @TO@ VariableDeclarationFragment@@entryName=entry.getName() @AT@ 1398 @LENGTH@ 9
------INS MethodInvocation@@entry.getName() @TO@ VariableDeclarationFragment@@entryName=entry.getName() @AT@ 1410 @LENGTH@ 15
---------INS SimpleName@@Name:entry @TO@ MethodInvocation@@entry.getName() @AT@ 1410 @LENGTH@ 5
---------INS SimpleName@@MethodName:getName:[] @TO@ MethodInvocation@@entry.getName() @AT@ 1416 @LENGTH@ 9


UPD VariableDeclarationStatement@@@SuppressWarnings("unchecked") Map<BlockingQueueConsumer,Boolean> consumers=(Map<BlockingQueueConsumer,Boolean>)TestUtils.getPropertyValue(container,"consumers"); @TO@ @SuppressWarnings("unchecked") Set<BlockingQueueConsumer> consumers=(Set<BlockingQueueConsumer>)TestUtils.getPropertyValue(container,"consumers"); @AT@ 13099 @LENGTH@ 175
---UPD ParameterizedType@@Map<BlockingQueueConsumer,Boolean> @TO@ Set<BlockingQueueConsumer> @AT@ 13132 @LENGTH@ 35
------UPD SimpleType@@Map @TO@ Set @AT@ 13132 @LENGTH@ 3
------DEL SimpleType@@Boolean @AT@ 13159 @LENGTH@ 7
---UPD VariableDeclarationFragment@@consumers=(Map<BlockingQueueConsumer,Boolean>)TestUtils.getPropertyValue(container,"consumers") @TO@ consumers=(Set<BlockingQueueConsumer>)TestUtils.getPropertyValue(container,"consumers") @AT@ 13168 @LENGTH@ 105
------UPD CastExpression@@(Map<BlockingQueueConsumer,Boolean>)TestUtils.getPropertyValue(container,"consumers") @TO@ (Set<BlockingQueueConsumer>)TestUtils.getPropertyValue(container,"consumers") @AT@ 13180 @LENGTH@ 93
---------UPD ParameterizedType@@Map<BlockingQueueConsumer,Boolean> @TO@ Set<BlockingQueueConsumer> @AT@ 13181 @LENGTH@ 35
------------UPD SimpleType@@Map @TO@ Set @AT@ 13181 @LENGTH@ 3
------------DEL SimpleType@@Boolean @AT@ 13208 @LENGTH@ 7


UPD ExpressionStatement@@MethodInvocation:Assert.hasLength(key) @TO@ MethodInvocation:Assert.hasLength(key,"key must have a length") @AT@ 1814 @LENGTH@ 22
---UPD MethodInvocation@@Assert.hasLength(key) @TO@ Assert.hasLength(key,"key must have a length") @AT@ 1814 @LENGTH@ 21
------UPD SimpleName@@MethodName:hasLength:[key] @TO@ MethodName:hasLength:[key, "key must have a length"] @AT@ 1821 @LENGTH@ 14
---------INS StringLiteral@@"key must have a length" @TO@ SimpleName@@MethodName:hasLength:[key] @AT@ 1836 @LENGTH@ 24


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<ServiceNowComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<ServiceNowComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5497 @LENGTH@ 343
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 5501 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5501 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  ComponentCustomizer<ServiceNowComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ ThenBody:{  for (  ComponentCustomizer<ServiceNowComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5557 @LENGTH@ 283
------UPD EnhancedForStatement@@for (ComponentCustomizer<ServiceNowComponent> configurer : customizers) {  LOGGER.debug("Configure component {}, with configurer {}",component,configurer);  configurer.customize(component);} @TO@ for (ComponentCustomizer<ServiceNowComponent> customizer : customizers) {  LOGGER.debug("Configure component {}, with customizer {}",component,customizer);  customizer.customize(component);} @AT@ 5571 @LENGTH@ 259
---------UPD SingleVariableDeclaration@@ComponentCustomizer<ServiceNowComponent> configurer @TO@ ComponentCustomizer<ServiceNowComponent> customizer @AT@ 5576 @LENGTH@ 51
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5617 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5661 @LENGTH@ 106
------------UPD MethodInvocation@@LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5661 @LENGTH@ 105
---------------UPD SimpleName@@MethodName:debug:["Configure component {}, with configurer {}", component, configurer] @TO@ MethodName:debug:["Configure component {}, with customizer {}", component, customizer] @AT@ 5668 @LENGTH@ 98
------------------UPD StringLiteral@@"Configure component {}, with configurer {}" @TO@ "Configure component {}, with customizer {}" @AT@ 5674 @LENGTH@ 44
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5755 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(component) @TO@ MethodInvocation:customizer.customize(component) @AT@ 5784 @LENGTH@ 32
------------UPD MethodInvocation@@configurer.customize(component) @TO@ customizer.customize(component) @AT@ 5784 @LENGTH@ 31
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5784 @LENGTH@ 10


UPD VariableDeclarationStatement@@CommonBean<String[]> stringBean=CommonBeanBuilder.newBuilder().beanClass(CommandLineArgsExtension.class).scope(Dependent.class).createSupplier(() -> args).addQualifier(CommandLineArgs.Literal.INSTANCE).addType(String[].class).addType(Object.class).build(); @TO@ CommonBean<String[]> stringBean=CommonBeanBuilder.newBuilder(String[].class).beanClass(CommandLineArgsExtension.class).scope(Dependent.class).createSupplier(() -> args).addQualifier(CommandLineArgs.Literal.INSTANCE).addType(String[].class).addType(Object.class).build(); @AT@ 1549 @LENGTH@ 360
---UPD VariableDeclarationFragment@@stringBean=CommonBeanBuilder.newBuilder().beanClass(CommandLineArgsExtension.class).scope(Dependent.class).createSupplier(() -> args).addQualifier(CommandLineArgs.Literal.INSTANCE).addType(String[].class).addType(Object.class).build() @TO@ stringBean=CommonBeanBuilder.newBuilder(String[].class).beanClass(CommandLineArgsExtension.class).scope(Dependent.class).createSupplier(() -> args).addQualifier(CommandLineArgs.Literal.INSTANCE).addType(String[].class).addType(Object.class).build() @AT@ 1570 @LENGTH@ 338
------UPD MethodInvocation@@CommonBeanBuilder.newBuilder().beanClass(CommandLineArgsExtension.class).scope(Dependent.class).createSupplier(() -> args).addQualifier(CommandLineArgs.Literal.INSTANCE).addType(String[].class).addType(Object.class).build() @TO@ CommonBeanBuilder.newBuilder(String[].class).beanClass(CommandLineArgsExtension.class).scope(Dependent.class).createSupplier(() -> args).addQualifier(CommandLineArgs.Literal.INSTANCE).addType(String[].class).addType(Object.class).build() @AT@ 1583 @LENGTH@ 325
---------UPD MethodInvocation@@MethodName:newBuilder:[] @TO@ MethodName:newBuilder:[String[].class] @AT@ 1583 @LENGTH@ 30
------------INS TypeLiteral@@String[].class @TO@ MethodInvocation@@MethodName:newBuilder:[] @AT@ 1612 @LENGTH@ 14


UPD FieldDeclaration@@public, static, int, [UNBOUNDED_AMOUNT=Integer.MAX_VALUE] @TO@ public, static, final, int, [UNBOUNDED_AMOUNT=Integer.MAX_VALUE] @AT@ 20469 @LENGTH@ 55
---INS Modifier@@final @TO@ FieldDeclaration@@public, static, int, [UNBOUNDED_AMOUNT=Integer.MAX_VALUE] @AT@ 20483 @LENGTH@ 5


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled(); @AT@ 5230 @LENGTH@ 160
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5238 @LENGTH@ 151
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5238 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5255 @LENGTH@ 134
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 5255 @LENGTH@ 64
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5255 @LENGTH@ 35
---------UPD MethodInvocation@@componentConfiguration.getConfigurer().isEnabled() @TO@ componentConfiguration.getCustomizer().isEnabled() @AT@ 5339 @LENGTH@ 50
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5339 @LENGTH@ 38


INS MethodDeclaration@@private, void, MethodName:awaitContainerTermination,  @TO@ TypeDeclaration@@[@Singleton, public]RuntimeServer, [Server] @AT@ 7800 @LENGTH@ 466
---INS Modifier@@private @TO@ MethodDeclaration@@private, void, MethodName:awaitContainerTermination,  @AT@ 7800 @LENGTH@ 7
---INS PrimitiveType@@void @TO@ MethodDeclaration@@private, void, MethodName:awaitContainerTermination,  @AT@ 7808 @LENGTH@ 4
---INS SimpleName@@MethodName:awaitContainerTermination @TO@ MethodDeclaration@@private, void, MethodName:awaitContainerTermination,  @AT@ 7813 @LENGTH@ 25
---INS TryStatement@@try {  Field field=this.container.getClass().getDeclaredField("executor");  field.setAccessible(true);  ExecutorService executor=(ExecutorService)field.get(this.container);  executor.awaitTermination(10,TimeUnit.SECONDS);} catch (NoSuchFieldException|IllegalAccessException|InterruptedException e) {  e.printStackTrace();} @TO@ MethodDeclaration@@private, void, MethodName:awaitContainerTermination,  @AT@ 7851 @LENGTH@ 409
------INS VariableDeclarationStatement@@Field field=this.container.getClass().getDeclaredField("executor"); @TO@ TryStatement@@try {  Field field=this.container.getClass().getDeclaredField("executor");  field.setAccessible(true);  ExecutorService executor=(ExecutorService)field.get(this.container);  executor.awaitTermination(10,TimeUnit.SECONDS);} catch (NoSuchFieldException|IllegalAccessException|InterruptedException e) {  e.printStackTrace();} @AT@ 7869 @LENGTH@ 69
---------INS SimpleType@@Field @TO@ VariableDeclarationStatement@@Field field=this.container.getClass().getDeclaredField("executor"); @AT@ 7869 @LENGTH@ 5
---------INS VariableDeclarationFragment@@field=this.container.getClass().getDeclaredField("executor") @TO@ VariableDeclarationStatement@@Field field=this.container.getClass().getDeclaredField("executor"); @AT@ 7875 @LENGTH@ 62
------------INS SimpleName@@field @TO@ VariableDeclarationFragment@@field=this.container.getClass().getDeclaredField("executor") @AT@ 7875 @LENGTH@ 5
------------INS MethodInvocation@@this.container.getClass().getDeclaredField("executor") @TO@ VariableDeclarationFragment@@field=this.container.getClass().getDeclaredField("executor") @AT@ 7883 @LENGTH@ 54
---------------INS MethodInvocation@@MethodName:getClass:[] @TO@ MethodInvocation@@this.container.getClass().getDeclaredField("executor") @AT@ 7883 @LENGTH@ 25
---------------INS FieldAccess@@this.container @TO@ MethodInvocation@@this.container.getClass().getDeclaredField("executor") @AT@ 7883 @LENGTH@ 14
------------------INS ThisExpression@@this @TO@ FieldAccess@@this.container @AT@ 7883 @LENGTH@ 4
------------------INS SimpleName@@container @TO@ FieldAccess@@this.container @AT@ 7888 @LENGTH@ 9
---------------INS SimpleName@@MethodName:getDeclaredField:["executor"] @TO@ MethodInvocation@@this.container.getClass().getDeclaredField("executor") @AT@ 7909 @LENGTH@ 28
------------------INS StringLiteral@@"executor" @TO@ SimpleName@@MethodName:getDeclaredField:["executor"] @AT@ 7926 @LENGTH@ 10
------INS ExpressionStatement@@MethodInvocation:field.setAccessible(true) @TO@ TryStatement@@try {  Field field=this.container.getClass().getDeclaredField("executor");  field.setAccessible(true);  ExecutorService executor=(ExecutorService)field.get(this.container);  executor.awaitTermination(10,TimeUnit.SECONDS);} catch (NoSuchFieldException|IllegalAccessException|InterruptedException e) {  e.printStackTrace();} @AT@ 7951 @LENGTH@ 26
---------INS MethodInvocation@@field.setAccessible(true) @TO@ ExpressionStatement@@MethodInvocation:field.setAccessible(true) @AT@ 7951 @LENGTH@ 25
------------INS SimpleName@@Name:field @TO@ MethodInvocation@@field.setAccessible(true) @AT@ 7951 @LENGTH@ 5
------------INS SimpleName@@MethodName:setAccessible:[true] @TO@ MethodInvocation@@field.setAccessible(true) @AT@ 7957 @LENGTH@ 19
---------------INS BooleanLiteral@@true @TO@ SimpleName@@MethodName:setAccessible:[true] @AT@ 7971 @LENGTH@ 4
------INS VariableDeclarationStatement@@ExecutorService executor=(ExecutorService)field.get(this.container); @TO@ TryStatement@@try {  Field field=this.container.getClass().getDeclaredField("executor");  field.setAccessible(true);  ExecutorService executor=(ExecutorService)field.get(this.container);  executor.awaitTermination(10,TimeUnit.SECONDS);} catch (NoSuchFieldException|IllegalAccessException|InterruptedException e) {  e.printStackTrace();} @AT@ 7990 @LENGTH@ 73
---------INS SimpleType@@ExecutorService @TO@ VariableDeclarationStatement@@ExecutorService executor=(ExecutorService)field.get(this.container); @AT@ 7990 @LENGTH@ 15
---------INS VariableDeclarationFragment@@executor=(ExecutorService)field.get(this.container) @TO@ VariableDeclarationStatement@@ExecutorService executor=(ExecutorService)field.get(this.container); @AT@ 8006 @LENGTH@ 56
------------INS SimpleName@@executor @TO@ VariableDeclarationFragment@@executor=(ExecutorService)field.get(this.container) @AT@ 8006 @LENGTH@ 8
------------INS CastExpression@@(ExecutorService)field.get(this.container) @TO@ VariableDeclarationFragment@@executor=(ExecutorService)field.get(this.container) @AT@ 8017 @LENGTH@ 45
---------------INS SimpleType@@ExecutorService @TO@ CastExpression@@(ExecutorService)field.get(this.container) @AT@ 8018 @LENGTH@ 15
---------------INS MethodInvocation@@field.get(this.container) @TO@ CastExpression@@(ExecutorService)field.get(this.container) @AT@ 8035 @LENGTH@ 27
------------------INS SimpleName@@Name:field @TO@ MethodInvocation@@field.get(this.container) @AT@ 8035 @LENGTH@ 5
------------------INS SimpleName@@MethodName:get:[this.container] @TO@ MethodInvocation@@field.get(this.container) @AT@ 8041 @LENGTH@ 21
---------------------INS FieldAccess@@this.container @TO@ SimpleName@@MethodName:get:[this.container] @AT@ 8046 @LENGTH@ 14
------------------------INS ThisExpression@@this @TO@ FieldAccess@@this.container @AT@ 8046 @LENGTH@ 4
------------------------INS SimpleName@@container @TO@ FieldAccess@@this.container @AT@ 8051 @LENGTH@ 9
------INS ExpressionStatement@@MethodInvocation:executor.awaitTermination(10,TimeUnit.SECONDS) @TO@ TryStatement@@try {  Field field=this.container.getClass().getDeclaredField("executor");  field.setAccessible(true);  ExecutorService executor=(ExecutorService)field.get(this.container);  executor.awaitTermination(10,TimeUnit.SECONDS);} catch (NoSuchFieldException|IllegalAccessException|InterruptedException e) {  e.printStackTrace();} @AT@ 8076 @LENGTH@ 50
---------INS MethodInvocation@@executor.awaitTermination(10,TimeUnit.SECONDS) @TO@ ExpressionStatement@@MethodInvocation:executor.awaitTermination(10,TimeUnit.SECONDS) @AT@ 8076 @LENGTH@ 49
------------INS SimpleName@@Name:executor @TO@ MethodInvocation@@executor.awaitTermination(10,TimeUnit.SECONDS) @AT@ 8076 @LENGTH@ 8
------------INS SimpleName@@MethodName:awaitTermination:[10, TimeUnit.SECONDS] @TO@ MethodInvocation@@executor.awaitTermination(10,TimeUnit.SECONDS) @AT@ 8085 @LENGTH@ 40
---------------INS NumberLiteral@@10 @TO@ SimpleName@@MethodName:awaitTermination:[10, TimeUnit.SECONDS] @AT@ 8103 @LENGTH@ 2
---------------INS QualifiedName@@TimeUnit.SECONDS @TO@ SimpleName@@MethodName:awaitTermination:[10, TimeUnit.SECONDS] @AT@ 8107 @LENGTH@ 16
------------------INS SimpleName@@TimeUnit @TO@ QualifiedName@@TimeUnit.SECONDS @AT@ 8107 @LENGTH@ 8
------------------INS SimpleName@@SECONDS @TO@ QualifiedName@@TimeUnit.SECONDS @AT@ 8116 @LENGTH@ 7
------INS CatchClause@@catch (NoSuchFieldException|IllegalAccessException|InterruptedException e) {  e.printStackTrace();} @TO@ TryStatement@@try {  Field field=this.container.getClass().getDeclaredField("executor");  field.setAccessible(true);  ExecutorService executor=(ExecutorService)field.get(this.container);  executor.awaitTermination(10,TimeUnit.SECONDS);} catch (NoSuchFieldException|IllegalAccessException|InterruptedException e) {  e.printStackTrace();} @AT@ 8137 @LENGTH@ 123
---------INS SingleVariableDeclaration@@NoSuchFieldException|IllegalAccessException|InterruptedException e @TO@ CatchClause@@catch (NoSuchFieldException|IllegalAccessException|InterruptedException e) {  e.printStackTrace();} @AT@ 8144 @LENGTH@ 70
------------INS UnionType@@NoSuchFieldException|IllegalAccessException|InterruptedException @TO@ SingleVariableDeclaration@@NoSuchFieldException|IllegalAccessException|InterruptedException e @AT@ 8144 @LENGTH@ 68
---------------INS SimpleType@@NoSuchFieldException @TO@ UnionType@@NoSuchFieldException|IllegalAccessException|InterruptedException @AT@ 8144 @LENGTH@ 20
---------------INS SimpleType@@IllegalAccessException @TO@ UnionType@@NoSuchFieldException|IllegalAccessException|InterruptedException @AT@ 8167 @LENGTH@ 22
---------------INS SimpleType@@InterruptedException @TO@ UnionType@@NoSuchFieldException|IllegalAccessException|InterruptedException @AT@ 8192 @LENGTH@ 20
------------INS SimpleName@@e @TO@ SingleVariableDeclaration@@NoSuchFieldException|IllegalAccessException|InterruptedException e @AT@ 8213 @LENGTH@ 1
---------INS ExpressionStatement@@MethodInvocation:e.printStackTrace() @TO@ CatchClause@@catch (NoSuchFieldException|IllegalAccessException|InterruptedException e) {  e.printStackTrace();} @AT@ 8230 @LENGTH@ 20
------------INS MethodInvocation@@e.printStackTrace() @TO@ ExpressionStatement@@MethodInvocation:e.printStackTrace() @AT@ 8230 @LENGTH@ 19
---------------INS SimpleName@@Name:e @TO@ MethodInvocation@@e.printStackTrace() @AT@ 8230 @LENGTH@ 1
---------------INS SimpleName@@MethodName:printStackTrace:[] @TO@ MethodInvocation@@e.printStackTrace() @AT@ 8232 @LENGTH@ 17


UPD ExpressionStatement@@MethodInvocation:unwrapped.get("wfs-version").set("fixme") @TO@ MethodInvocation:unwrapped.get("swarm-version").set(System.getProperty(SwarmInternalProperties.VERSION)) @AT@ 3973 @LENGTH@ 42
---UPD MethodInvocation@@unwrapped.get("wfs-version").set("fixme") @TO@ unwrapped.get("swarm-version").set(System.getProperty(SwarmInternalProperties.VERSION)) @AT@ 3973 @LENGTH@ 41
------UPD MethodInvocation@@MethodName:get:["wfs-version"] @TO@ MethodName:get:["swarm-version"] @AT@ 3973 @LENGTH@ 28
---------UPD StringLiteral@@"wfs-version" @TO@ "swarm-version" @AT@ 3987 @LENGTH@ 13
------UPD SimpleName@@MethodName:set:["fixme"] @TO@ MethodName:set:[System.getProperty(SwarmInternalProperties.VERSION)] @AT@ 4002 @LENGTH@ 12
---------INS MethodInvocation@@System.getProperty(SwarmInternalProperties.VERSION) @TO@ SimpleName@@MethodName:set:["fixme"] @AT@ 3950 @LENGTH@ 51
------------INS SimpleName@@Name:System @TO@ MethodInvocation@@System.getProperty(SwarmInternalProperties.VERSION) @AT@ 3950 @LENGTH@ 6
------------INS SimpleName@@MethodName:getProperty:[SwarmInternalProperties.VERSION] @TO@ MethodInvocation@@System.getProperty(SwarmInternalProperties.VERSION) @AT@ 3957 @LENGTH@ 44
---------------INS QualifiedName@@SwarmInternalProperties.VERSION @TO@ SimpleName@@MethodName:getProperty:[SwarmInternalProperties.VERSION] @AT@ 3969 @LENGTH@ 31
------------------INS SimpleName@@SwarmInternalProperties @TO@ QualifiedName@@SwarmInternalProperties.VERSION @AT@ 3969 @LENGTH@ 23
------------------INS SimpleName@@VERSION @TO@ QualifiedName@@SwarmInternalProperties.VERSION @AT@ 3993 @LENGTH@ 7
---------DEL StringLiteral@@"fixme" @AT@ 4006 @LENGTH@ 7


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled(); @AT@ 5226 @LENGTH@ 160
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5234 @LENGTH@ 151
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5234 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5251 @LENGTH@ 134
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 5251 @LENGTH@ 64
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5251 @LENGTH@ 35
---------UPD MethodInvocation@@componentConfiguration.getConfigurer().isEnabled() @TO@ componentConfiguration.getCustomizer().isEnabled() @AT@ 5335 @LENGTH@ 50
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5335 @LENGTH@ 38


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled(); @AT@ 5208 @LENGTH@ 160
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5216 @LENGTH@ 151
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5216 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5233 @LENGTH@ 134
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 5233 @LENGTH@ 64
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5233 @LENGTH@ 35
---------UPD MethodInvocation@@componentConfiguration.getConfigurer().isEnabled() @TO@ componentConfiguration.getCustomizer().isEnabled() @AT@ 5317 @LENGTH@ 50
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5317 @LENGTH@ 38


INS TryStatement@@try (@SuppressWarnings("resource") CSVParser parser=CSV_FORMAT.parse(new InputStreamReader(pointsOfReference,"UTF-8"))){  for (  CSVRecord record : parser) {    String locationType=record.get("location_type");    Assert.assertNotNull(locationType);  }}  @TO@ MethodDeclaration@@public, void, MethodName:test, UnsupportedEncodingException, IOException,  @AT@ 1536 @LENGTH@ 321
---INS VariableDeclarationExpression@@@SuppressWarnings("resource") CSVParser parser=CSV_FORMAT.parse(new InputStreamReader(pointsOfReference,"UTF-8")) @TO@ TryStatement@@try (@SuppressWarnings("resource") CSVParser parser=CSV_FORMAT.parse(new InputStreamReader(pointsOfReference,"UTF-8"))){  for (  CSVRecord record : parser) {    String locationType=record.get("location_type");    Assert.assertNotNull(locationType);  }}  @AT@ 1541 @LENGTH@ 124
------MOV VariableDeclarationFragment@@parser=CSV_FORMAT.parse(new InputStreamReader(pointsOfReference,"UTF-8")) @TO@ VariableDeclarationExpression@@@SuppressWarnings("resource") CSVParser parser=CSV_FORMAT.parse(new InputStreamReader(pointsOfReference,"UTF-8")) @AT@ 1550 @LENGTH@ 76
------INS SimpleType@@CSVParser @TO@ VariableDeclarationExpression@@@SuppressWarnings("resource") CSVParser parser=CSV_FORMAT.parse(new InputStreamReader(pointsOfReference,"UTF-8")) @AT@ 1579 @LENGTH@ 9
---MOV EnhancedForStatement@@for (CSVRecord record : parser) {  String locationType=record.get("location_type");  Assert.assertNotNull(locationType);} @TO@ TryStatement@@try (@SuppressWarnings("resource") CSVParser parser=CSV_FORMAT.parse(new InputStreamReader(pointsOfReference,"UTF-8"))){  for (  CSVRecord record : parser) {    String locationType=record.get("location_type");    Assert.assertNotNull(locationType);  }}  @AT@ 1636 @LENGTH@ 154


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  DataFormatCustomizer<Base64DataFormat> configurer : customizers) {    LOGGER.debug("Configure dataformat {}, with configurer {}",dataformat,configurer);    configurer.customize(dataformat);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  DataFormatCustomizer<Base64DataFormat> customizer : customizers) {    LOGGER.debug("Configure dataformat {}, with customizer {}",dataformat,customizer);    customizer.customize(dataformat);  }} @AT@ 5332 @LENGTH@ 425
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 5336 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5336 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  DataFormatCustomizer<Base64DataFormat> configurer : customizers) {    LOGGER.debug("Configure dataformat {}, with configurer {}",dataformat,configurer);    configurer.customize(dataformat);  }} @TO@ ThenBody:{  for (  DataFormatCustomizer<Base64DataFormat> customizer : customizers) {    LOGGER.debug("Configure dataformat {}, with customizer {}",dataformat,customizer);    customizer.customize(dataformat);  }} @AT@ 5392 @LENGTH@ 365
------UPD EnhancedForStatement@@for (DataFormatCustomizer<Base64DataFormat> configurer : customizers) {  LOGGER.debug("Configure dataformat {}, with configurer {}",dataformat,configurer);  configurer.customize(dataformat);} @TO@ for (DataFormatCustomizer<Base64DataFormat> customizer : customizers) {  LOGGER.debug("Configure dataformat {}, with customizer {}",dataformat,customizer);  customizer.customize(dataformat);} @AT@ 5414 @LENGTH@ 325
---------UPD SingleVariableDeclaration@@DataFormatCustomizer<Base64DataFormat> configurer @TO@ DataFormatCustomizer<Base64DataFormat> customizer @AT@ 5419 @LENGTH@ 49
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5458 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure dataformat {}, with configurer {}",dataformat,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure dataformat {}, with customizer {}",dataformat,customizer) @AT@ 5510 @LENGTH@ 149
------------UPD MethodInvocation@@LOGGER.debug("Configure dataformat {}, with configurer {}",dataformat,configurer) @TO@ LOGGER.debug("Configure dataformat {}, with customizer {}",dataformat,customizer) @AT@ 5510 @LENGTH@ 148
---------------UPD SimpleName@@MethodName:debug:["Configure dataformat {}, with configurer {}", dataformat, configurer] @TO@ MethodName:debug:["Configure dataformat {}, with customizer {}", dataformat, customizer] @AT@ 5517 @LENGTH@ 141
------------------UPD StringLiteral@@"Configure dataformat {}, with configurer {}" @TO@ "Configure dataformat {}, with customizer {}" @AT@ 5556 @LENGTH@ 45
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5647 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(dataformat) @TO@ MethodInvocation:customizer.customize(dataformat) @AT@ 5684 @LENGTH@ 33
------------UPD MethodInvocation@@configurer.customize(dataformat) @TO@ customizer.customize(dataformat) @AT@ 5684 @LENGTH@ 32
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5684 @LENGTH@ 10


UPD MethodDeclaration@@protected, T, MethodName:create, CreationalContext<T> creationalContext, Class<T> repositoryType, Object customImplementation,  @TO@ protected, T, MethodName:create, CreationalContext<T> creationalContext, Class<T> repositoryType, Optional<Object> customImplementation,  @AT@ 2487 @LENGTH@ 363
---UPD SingleVariableDeclaration@@Object customImplementation @TO@ Optional<Object> customImplementation @AT@ 2571 @LENGTH@ 27
------DEL SimpleType@@Object @AT@ 2571 @LENGTH@ 6
------INS ParameterizedType@@Optional<Object> @TO@ SingleVariableDeclaration@@Object customImplementation @AT@ 2608 @LENGTH@ 16
---------INS SimpleType@@Optional @TO@ ParameterizedType@@Optional<Object> @AT@ 2608 @LENGTH@ 8
---------INS SimpleType@@Object @TO@ ParameterizedType@@Optional<Object> @AT@ 2617 @LENGTH@ 6


UPD FieldDeclaration@@private, static, final, int, [DEFAULT_SEED=104729] @TO@ public, static, final, int, [DEFAULT_SEED=104729] @AT@ 2204 @LENGTH@ 47
---UPD Modifier@@private @TO@ public @AT@ 2204 @LENGTH@ 7


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled(); @AT@ 5327 @LENGTH@ 160
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5335 @LENGTH@ 151
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5335 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5352 @LENGTH@ 134
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 5352 @LENGTH@ 64
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5352 @LENGTH@ 35
---------UPD MethodInvocation@@componentConfiguration.getConfigurer().isEnabled() @TO@ componentConfiguration.getCustomizer().isEnabled() @AT@ 5436 @LENGTH@ 50
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5436 @LENGTH@ 38


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<JcrComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<JcrComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5378 @LENGTH@ 336
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 5382 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5382 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  ComponentCustomizer<JcrComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ ThenBody:{  for (  ComponentCustomizer<JcrComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5438 @LENGTH@ 276
------UPD EnhancedForStatement@@for (ComponentCustomizer<JcrComponent> configurer : customizers) {  LOGGER.debug("Configure component {}, with configurer {}",component,configurer);  configurer.customize(component);} @TO@ for (ComponentCustomizer<JcrComponent> customizer : customizers) {  LOGGER.debug("Configure component {}, with customizer {}",component,customizer);  customizer.customize(component);} @AT@ 5452 @LENGTH@ 252
---------UPD SingleVariableDeclaration@@ComponentCustomizer<JcrComponent> configurer @TO@ ComponentCustomizer<JcrComponent> customizer @AT@ 5457 @LENGTH@ 44
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5491 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5535 @LENGTH@ 106
------------UPD MethodInvocation@@LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5535 @LENGTH@ 105
---------------UPD SimpleName@@MethodName:debug:["Configure component {}, with configurer {}", component, configurer] @TO@ MethodName:debug:["Configure component {}, with customizer {}", component, customizer] @AT@ 5542 @LENGTH@ 98
------------------UPD StringLiteral@@"Configure component {}, with configurer {}" @TO@ "Configure component {}, with customizer {}" @AT@ 5548 @LENGTH@ 44
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5629 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(component) @TO@ MethodInvocation:customizer.customize(component) @AT@ 5658 @LENGTH@ 32
------------UPD MethodInvocation@@configurer.customize(component) @TO@ customizer.customize(component) @AT@ 5658 @LENGTH@ 31
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5658 @LENGTH@ 10


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<DisruptorComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<DisruptorComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5480 @LENGTH@ 342
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 5484 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5484 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  ComponentCustomizer<DisruptorComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ ThenBody:{  for (  ComponentCustomizer<DisruptorComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5540 @LENGTH@ 282
------UPD EnhancedForStatement@@for (ComponentCustomizer<DisruptorComponent> configurer : customizers) {  LOGGER.debug("Configure component {}, with configurer {}",component,configurer);  configurer.customize(component);} @TO@ for (ComponentCustomizer<DisruptorComponent> customizer : customizers) {  LOGGER.debug("Configure component {}, with customizer {}",component,customizer);  customizer.customize(component);} @AT@ 5554 @LENGTH@ 258
---------UPD SingleVariableDeclaration@@ComponentCustomizer<DisruptorComponent> configurer @TO@ ComponentCustomizer<DisruptorComponent> customizer @AT@ 5559 @LENGTH@ 50
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5599 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5643 @LENGTH@ 106
------------UPD MethodInvocation@@LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5643 @LENGTH@ 105
---------------UPD SimpleName@@MethodName:debug:["Configure component {}, with configurer {}", component, configurer] @TO@ MethodName:debug:["Configure component {}, with customizer {}", component, customizer] @AT@ 5650 @LENGTH@ 98
------------------UPD StringLiteral@@"Configure component {}, with configurer {}" @TO@ "Configure component {}, with customizer {}" @AT@ 5656 @LENGTH@ 44
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5737 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(component) @TO@ MethodInvocation:customizer.customize(component) @AT@ 5766 @LENGTH@ 32
------------UPD MethodInvocation@@configurer.customize(component) @TO@ customizer.customize(component) @AT@ 5766 @LENGTH@ 31
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5766 @LENGTH@ 10


UPD Block@@ThenBody:{  assertReturnTypeAssignable(method,Slice.class,Page.class,List.class);} @TO@ ThenBody:{  final Set<Class<?>> allowedPageableTypes=QueryExecutionConverters.getAllowedPageableTypes();  assertReturnTypeAssignable(method,allowedPageableTypes.toArray(new Class<?>[allowedPageableTypes.size()]));} @AT@ 3071 @LENGTH@ 83
---UPD ExpressionStatement@@MethodInvocation:assertReturnTypeAssignable(method,Slice.class,Page.class,List.class) @TO@ MethodInvocation:assertReturnTypeAssignable(method,allowedPageableTypes.toArray(new Class<?>[allowedPageableTypes.size()])) @AT@ 3077 @LENGTH@ 72
------UPD MethodInvocation@@assertReturnTypeAssignable(method,Slice.class,Page.class,List.class) @TO@ assertReturnTypeAssignable(method,allowedPageableTypes.toArray(new Class<?>[allowedPageableTypes.size()])) @AT@ 3077 @LENGTH@ 71
---------UPD SimpleName@@MethodName:assertReturnTypeAssignable:[method, Slice.class, Page.class, List.class] @TO@ MethodName:assertReturnTypeAssignable:[method, allowedPageableTypes.toArray(new Class<?>[allowedPageableTypes.size()])] @AT@ 3077 @LENGTH@ 71
------------DEL TypeLiteral@@Slice.class @AT@ 3112 @LENGTH@ 11
------------DEL TypeLiteral@@Page.class @AT@ 3125 @LENGTH@ 10
------------DEL TypeLiteral@@List.class @AT@ 3137 @LENGTH@ 10
------------INS MethodInvocation@@allowedPageableTypes.toArray(new Class<?>[allowedPageableTypes.size()]) @TO@ SimpleName@@MethodName:assertReturnTypeAssignable:[method, Slice.class, Page.class, List.class] @AT@ 3289 @LENGTH@ 71
---------------INS SimpleName@@Name:allowedPageableTypes @TO@ MethodInvocation@@allowedPageableTypes.toArray(new Class<?>[allowedPageableTypes.size()]) @AT@ 3289 @LENGTH@ 20
---------------INS SimpleName@@MethodName:toArray:[new Class<?>[allowedPageableTypes.size()]] @TO@ MethodInvocation@@allowedPageableTypes.toArray(new Class<?>[allowedPageableTypes.size()]) @AT@ 3310 @LENGTH@ 50
------------------INS ArrayCreation@@new Class<?>[allowedPageableTypes.size()] @TO@ SimpleName@@MethodName:toArray:[new Class<?>[allowedPageableTypes.size()]] @AT@ 3318 @LENGTH@ 41
---------------------INS ArrayType@@Class<?>[] @TO@ ArrayCreation@@new Class<?>[allowedPageableTypes.size()] @AT@ 3322 @LENGTH@ 37
------------------------INS ParameterizedType@@Class<?> @TO@ ArrayType@@Class<?>[] @AT@ 3322 @LENGTH@ 8
---------------------------INS SimpleType@@Class @TO@ ParameterizedType@@Class<?> @AT@ 3322 @LENGTH@ 5
---------------------------INS WildcardType@@? @TO@ ParameterizedType@@Class<?> @AT@ 3328 @LENGTH@ 1
---------------------INS MethodInvocation@@allowedPageableTypes.size() @TO@ ArrayCreation@@new Class<?>[allowedPageableTypes.size()] @AT@ 3331 @LENGTH@ 27
------------------------INS SimpleName@@Name:allowedPageableTypes @TO@ MethodInvocation@@allowedPageableTypes.size() @AT@ 3331 @LENGTH@ 20
------------------------INS SimpleName@@MethodName:size:[] @TO@ MethodInvocation@@allowedPageableTypes.size() @AT@ 3352 @LENGTH@ 6
---INS VariableDeclarationStatement@@final Set<Class<?>> allowedPageableTypes=QueryExecutionConverters.getAllowedPageableTypes(); @TO@ Block@@ThenBody:{  assertReturnTypeAssignable(method,Slice.class,Page.class,List.class);} @AT@ 3155 @LENGTH@ 94
------INS Modifier@@final @TO@ VariableDeclarationStatement@@final Set<Class<?>> allowedPageableTypes=QueryExecutionConverters.getAllowedPageableTypes(); @AT@ 3155 @LENGTH@ 5
------INS ParameterizedType@@Set<Class<?>> @TO@ VariableDeclarationStatement@@final Set<Class<?>> allowedPageableTypes=QueryExecutionConverters.getAllowedPageableTypes(); @AT@ 3161 @LENGTH@ 13
---------INS SimpleType@@Set @TO@ ParameterizedType@@Set<Class<?>> @AT@ 3161 @LENGTH@ 3
---------INS ParameterizedType@@Class<?> @TO@ ParameterizedType@@Set<Class<?>> @AT@ 3165 @LENGTH@ 8
------------INS SimpleType@@Class @TO@ ParameterizedType@@Class<?> @AT@ 3165 @LENGTH@ 5
------------INS WildcardType@@? @TO@ ParameterizedType@@Class<?> @AT@ 3171 @LENGTH@ 1
------INS VariableDeclarationFragment@@allowedPageableTypes=QueryExecutionConverters.getAllowedPageableTypes() @TO@ VariableDeclarationStatement@@final Set<Class<?>> allowedPageableTypes=QueryExecutionConverters.getAllowedPageableTypes(); @AT@ 3175 @LENGTH@ 73
---------INS SimpleName@@allowedPageableTypes @TO@ VariableDeclarationFragment@@allowedPageableTypes=QueryExecutionConverters.getAllowedPageableTypes() @AT@ 3175 @LENGTH@ 20
---------INS MethodInvocation@@QueryExecutionConverters.getAllowedPageableTypes() @TO@ VariableDeclarationFragment@@allowedPageableTypes=QueryExecutionConverters.getAllowedPageableTypes() @AT@ 3198 @LENGTH@ 50
------------INS SimpleName@@Name:QueryExecutionConverters @TO@ MethodInvocation@@QueryExecutionConverters.getAllowedPageableTypes() @AT@ 3198 @LENGTH@ 24
------------INS SimpleName@@MethodName:getAllowedPageableTypes:[] @TO@ MethodInvocation@@QueryExecutionConverters.getAllowedPageableTypes() @AT@ 3223 @LENGTH@ 25


UPD VariableDeclarationStatement@@Object consumer=TestUtils.getPropertyValue(container,"consumers",Map.class).keySet().iterator().next(); @TO@ Object consumer=TestUtils.getPropertyValue(container,"consumers",Set.class).iterator().next(); @AT@ 5049 @LENGTH@ 112
---UPD VariableDeclarationFragment@@consumer=TestUtils.getPropertyValue(container,"consumers",Map.class).keySet().iterator().next() @TO@ consumer=TestUtils.getPropertyValue(container,"consumers",Set.class).iterator().next() @AT@ 5056 @LENGTH@ 104
------UPD MethodInvocation@@TestUtils.getPropertyValue(container,"consumers",Map.class).keySet().iterator().next() @TO@ TestUtils.getPropertyValue(container,"consumers",Set.class).iterator().next() @AT@ 5067 @LENGTH@ 93
---------DEL MethodInvocation@@MethodName:keySet:[] @AT@ 5067 @LENGTH@ 75
---------UPD MethodInvocation@@MethodName:getPropertyValue:[container, "consumers", Map.class] @TO@ MethodName:getPropertyValue:[container, "consumers", Set.class] @AT@ 5067 @LENGTH@ 61
------------UPD TypeLiteral@@Map.class @TO@ Set.class @AT@ 5118 @LENGTH@ 9


UPD ReturnStatement@@InfixExpression:componentType != null && GeoResult.class.equals(componentType.getType()) @TO@ InfixExpression:componentType.isPresent() && GeoResult.class.equals(componentType.get().getType()) @AT@ 5467 @LENGTH@ 80
---UPD InfixExpression@@componentType != null && GeoResult.class.equals(componentType.getType()) @TO@ componentType.isPresent() && GeoResult.class.equals(componentType.get().getType()) @AT@ 5474 @LENGTH@ 72
------DEL InfixExpression@@componentType != null @AT@ 5474 @LENGTH@ 21
---------DEL SimpleName@@componentType @AT@ 5474 @LENGTH@ 13
---------DEL Operator@@!= @AT@ 5487 @LENGTH@ 2
---------DEL NullLiteral@@null @AT@ 5491 @LENGTH@ 4
------UPD MethodInvocation@@GeoResult.class.equals(componentType.getType()) @TO@ GeoResult.class.equals(componentType.get().getType()) @AT@ 5499 @LENGTH@ 47
---------UPD SimpleName@@MethodName:equals:[componentType.getType()] @TO@ MethodName:equals:[componentType.get().getType()] @AT@ 5515 @LENGTH@ 31
------------UPD MethodInvocation@@componentType.getType() @TO@ componentType.get().getType() @AT@ 5522 @LENGTH@ 23
---------------INS MethodInvocation@@MethodName:get:[] @TO@ MethodInvocation@@componentType.getType() @AT@ 5564 @LENGTH@ 19
------INS MethodInvocation@@componentType.isPresent() @TO@ InfixExpression@@componentType != null && GeoResult.class.equals(componentType.getType()) @AT@ 5512 @LENGTH@ 25
---------INS SimpleName@@Name:componentType @TO@ MethodInvocation@@componentType.isPresent() @AT@ 5512 @LENGTH@ 13
---------INS SimpleName@@MethodName:isPresent:[] @TO@ MethodInvocation@@componentType.isPresent() @AT@ 5526 @LENGTH@ 11


UPD ReturnStatement@@ClassInstanceCreation:new DsSecurityImpl(userName,password,elytronEnabled ? authenticationContext : securityDomain,elytronEnabled,reauthPlugin) @TO@ ClassInstanceCreation:new DsSecurityImpl(userName,password,elytronEnabled ? authenticationContext : securityDomain,elytronEnabled,reauthPlugin,null) @AT@ 3390 @LENGTH@ 162
---UPD ClassInstanceCreation@@DsSecurityImpl[userName, password, elytronEnabled ? authenticationContext : securityDomain, elytronEnabled, reauthPlugin] @TO@ DsSecurityImpl[userName, password, elytronEnabled ? authenticationContext : securityDomain, elytronEnabled, reauthPlugin, null] @AT@ 3397 @LENGTH@ 154
------INS NullLiteral@@null @TO@ ClassInstanceCreation@@DsSecurityImpl[userName, password, elytronEnabled ? authenticationContext : securityDomain, elytronEnabled, reauthPlugin] @AT@ 3552 @LENGTH@ 4


MOV FieldDeclaration@@public, static, final, String, [ROLLBACK_LOGGING_LEVEL_PROPERTY=JtaTransactionErrorHandlerBuilder.class.getName() + "#rollbackLoggingLevel"] @TO@ TypeDeclaration@@[public]JtaTransactionErrorHandlerBuilder, DefaultErrorHandlerBuilder @AT@ 1020 @LENGTH@ 149


UPD SwitchStatement@@switch (determineOperation(exchange)) {case DigitalOceanOperations.list:  getFloatingIPs(exchange);break;case DigitalOceanOperations.create:createFloatingIp(exchange);break;case DigitalOceanOperations.get:getFloatingIP(exchange);break;case DigitalOceanOperations.delete:deleteFloatingIP(exchange);break;case DigitalOceanOperations.assign:assignFloatingIPToDroplet(exchange);break;case DigitalOceanOperations.unassign:unassignFloatingIP(exchange);break;case DigitalOceanOperations.listActions:getFloatingIPActions(exchange);break;default :throw new IllegalArgumentException("Unsupported operation");} @TO@ switch (determineOperation(exchange)) {case list:  getFloatingIPs(exchange);break;case create:createFloatingIp(exchange);break;case get:getFloatingIP(exchange);break;case delete:deleteFloatingIP(exchange);break;case assign:assignFloatingIPToDroplet(exchange);break;case unassign:unassignFloatingIP(exchange);break;case listActions:getFloatingIPActions(exchange);break;default :throw new IllegalArgumentException("Unsupported operation");} @AT@ 1652 @LENGTH@ 964
---UPD SwitchCase@@case DigitalOceanOperations.list: @TO@ case list: @AT@ 1704 @LENGTH@ 33
------DEL QualifiedName@@DigitalOceanOperations.list @AT@ 1709 @LENGTH@ 27
---------DEL SimpleName@@DigitalOceanOperations @AT@ 1709 @LENGTH@ 22
---------DEL SimpleName@@list @AT@ 1732 @LENGTH@ 4
------INS SimpleName@@list @TO@ SwitchCase@@case DigitalOceanOperations.list: @AT@ 1709 @LENGTH@ 4
---UPD SwitchCase@@case DigitalOceanOperations.create: @TO@ case create: @AT@ 1815 @LENGTH@ 35
------INS SimpleName@@create @TO@ SwitchCase@@case DigitalOceanOperations.create: @AT@ 1797 @LENGTH@ 6
------DEL QualifiedName@@DigitalOceanOperations.create @AT@ 1820 @LENGTH@ 29
---------DEL SimpleName@@DigitalOceanOperations @AT@ 1820 @LENGTH@ 22
---------DEL SimpleName@@create @AT@ 1843 @LENGTH@ 6
---UPD SwitchCase@@case DigitalOceanOperations.get: @TO@ case get: @AT@ 1930 @LENGTH@ 32
------INS SimpleName@@get @TO@ SwitchCase@@case DigitalOceanOperations.get: @AT@ 1889 @LENGTH@ 3
------DEL QualifiedName@@DigitalOceanOperations.get @AT@ 1935 @LENGTH@ 26
---------DEL SimpleName@@DigitalOceanOperations @AT@ 1935 @LENGTH@ 22
---------DEL SimpleName@@get @AT@ 1958 @LENGTH@ 3
---UPD SwitchCase@@case DigitalOceanOperations.delete: @TO@ case delete: @AT@ 2039 @LENGTH@ 35
------INS SimpleName@@delete @TO@ SwitchCase@@case DigitalOceanOperations.delete: @AT@ 1975 @LENGTH@ 6
------DEL QualifiedName@@DigitalOceanOperations.delete @AT@ 2044 @LENGTH@ 29
---------DEL SimpleName@@DigitalOceanOperations @AT@ 2044 @LENGTH@ 22
---------DEL SimpleName@@delete @AT@ 2067 @LENGTH@ 6
---UPD SwitchCase@@case DigitalOceanOperations.assign: @TO@ case assign: @AT@ 2154 @LENGTH@ 35
------INS SimpleName@@assign @TO@ SwitchCase@@case DigitalOceanOperations.assign: @AT@ 2067 @LENGTH@ 6
------DEL QualifiedName@@DigitalOceanOperations.assign @AT@ 2159 @LENGTH@ 29
---------DEL SimpleName@@DigitalOceanOperations @AT@ 2159 @LENGTH@ 22
---------DEL SimpleName@@assign @AT@ 2182 @LENGTH@ 6
---UPD SwitchCase@@case DigitalOceanOperations.unassign: @TO@ case unassign: @AT@ 2278 @LENGTH@ 37
------INS SimpleName@@unassign @TO@ SwitchCase@@case DigitalOceanOperations.unassign: @AT@ 2168 @LENGTH@ 8
------DEL QualifiedName@@DigitalOceanOperations.unassign @AT@ 2283 @LENGTH@ 31
---------DEL SimpleName@@DigitalOceanOperations @AT@ 2283 @LENGTH@ 22
---------DEL SimpleName@@unassign @AT@ 2306 @LENGTH@ 8
---UPD SwitchCase@@case DigitalOceanOperations.listActions: @TO@ case listActions: @AT@ 2397 @LENGTH@ 40
------INS SimpleName@@listActions @TO@ SwitchCase@@case DigitalOceanOperations.listActions: @AT@ 2264 @LENGTH@ 11
------DEL QualifiedName@@DigitalOceanOperations.listActions @AT@ 2402 @LENGTH@ 34
---------DEL SimpleName@@DigitalOceanOperations @AT@ 2402 @LENGTH@ 22
---------DEL SimpleName@@listActions @AT@ 2425 @LENGTH@ 11


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<ElasticsearchComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<ElasticsearchComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5580 @LENGTH@ 346
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 5584 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5584 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  ComponentCustomizer<ElasticsearchComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ ThenBody:{  for (  ComponentCustomizer<ElasticsearchComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5640 @LENGTH@ 286
------UPD EnhancedForStatement@@for (ComponentCustomizer<ElasticsearchComponent> configurer : customizers) {  LOGGER.debug("Configure component {}, with configurer {}",component,configurer);  configurer.customize(component);} @TO@ for (ComponentCustomizer<ElasticsearchComponent> customizer : customizers) {  LOGGER.debug("Configure component {}, with customizer {}",component,customizer);  customizer.customize(component);} @AT@ 5654 @LENGTH@ 262
---------UPD SingleVariableDeclaration@@ComponentCustomizer<ElasticsearchComponent> configurer @TO@ ComponentCustomizer<ElasticsearchComponent> customizer @AT@ 5659 @LENGTH@ 54
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5703 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5747 @LENGTH@ 106
------------UPD MethodInvocation@@LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5747 @LENGTH@ 105
---------------UPD SimpleName@@MethodName:debug:["Configure component {}, with configurer {}", component, configurer] @TO@ MethodName:debug:["Configure component {}, with customizer {}", component, customizer] @AT@ 5754 @LENGTH@ 98
------------------UPD StringLiteral@@"Configure component {}, with configurer {}" @TO@ "Configure component {}, with customizer {}" @AT@ 5760 @LENGTH@ 44
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5841 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(component) @TO@ MethodInvocation:customizer.customize(component) @AT@ 5870 @LENGTH@ 32
------------UPD MethodInvocation@@configurer.customize(component) @TO@ customizer.customize(component) @AT@ 5870 @LENGTH@ 31
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5870 @LENGTH@ 10


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<StompComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<StompComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5412 @LENGTH@ 338
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 5416 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5416 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  ComponentCustomizer<StompComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ ThenBody:{  for (  ComponentCustomizer<StompComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5472 @LENGTH@ 278
------UPD EnhancedForStatement@@for (ComponentCustomizer<StompComponent> configurer : customizers) {  LOGGER.debug("Configure component {}, with configurer {}",component,configurer);  configurer.customize(component);} @TO@ for (ComponentCustomizer<StompComponent> customizer : customizers) {  LOGGER.debug("Configure component {}, with customizer {}",component,customizer);  customizer.customize(component);} @AT@ 5486 @LENGTH@ 254
---------UPD SingleVariableDeclaration@@ComponentCustomizer<StompComponent> configurer @TO@ ComponentCustomizer<StompComponent> customizer @AT@ 5491 @LENGTH@ 46
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5527 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5571 @LENGTH@ 106
------------UPD MethodInvocation@@LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5571 @LENGTH@ 105
---------------UPD SimpleName@@MethodName:debug:["Configure component {}, with configurer {}", component, configurer] @TO@ MethodName:debug:["Configure component {}, with customizer {}", component, customizer] @AT@ 5578 @LENGTH@ 98
------------------UPD StringLiteral@@"Configure component {}, with configurer {}" @TO@ "Configure component {}, with customizer {}" @AT@ 5584 @LENGTH@ 44
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5665 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(component) @TO@ MethodInvocation:customizer.customize(component) @AT@ 5694 @LENGTH@ 32
------------UPD MethodInvocation@@configurer.customize(component) @TO@ customizer.customize(component) @AT@ 5694 @LENGTH@ 31
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5694 @LENGTH@ 10


UPD ThrowStatement@@ClassInstanceCreation:new InvalidMongoDbApiUsageException("Due to limitations of the com.mongodb.BasicDocument, " + "you can't add a second '" + key + "' criteria. "+ "Query already contains '"+ existing.getCriteriaObject()+ "'.") @TO@ ClassInstanceCreation:new InvalidMongoDbApiUsageException("Due to limitations of the com.mongodb.BasicDocument, " + "you can't add a second '" + key + "' criteria. "+ "Query already contains '"+ serializeToJsonSafely(existing.getCriteriaObject())+ "'.") @AT@ 2920 @LENGTH@ 231
---UPD ClassInstanceCreation@@InvalidMongoDbApiUsageException["Due to limitations of the com.mongodb.BasicDocument, " + "you can't add a second '" + key + "' criteria. "+ "Query already contains '"+ existing.getCriteriaObject()+ "'."] @TO@ InvalidMongoDbApiUsageException["Due to limitations of the com.mongodb.BasicDocument, " + "you can't add a second '" + key + "' criteria. "+ "Query already contains '"+ serializeToJsonSafely(existing.getCriteriaObject())+ "'."] @AT@ 2926 @LENGTH@ 224
------UPD InfixExpression@@"Due to limitations of the com.mongodb.BasicDocument, " + "you can't add a second '" + key + "' criteria. "+ "Query already contains '"+ existing.getCriteriaObject()+ "'." @TO@ "Due to limitations of the com.mongodb.BasicDocument, " + "you can't add a second '" + key + "' criteria. "+ "Query already contains '"+ serializeToJsonSafely(existing.getCriteriaObject())+ "'." @AT@ 2968 @LENGTH@ 181
---------INS MethodInvocation@@serializeToJsonSafely(existing.getCriteriaObject()) @TO@ InfixExpression@@"Due to limitations of the com.mongodb.BasicDocument, " + "you can't add a second '" + key + "' criteria. "+ "Query already contains '"+ existing.getCriteriaObject()+ "'." @AT@ 3111 @LENGTH@ 51
------------INS SimpleName@@MethodName:serializeToJsonSafely:[existing.getCriteriaObject()] @TO@ MethodInvocation@@serializeToJsonSafely(existing.getCriteriaObject()) @AT@ 3111 @LENGTH@ 51
---------------INS MethodInvocation@@existing.getCriteriaObject() @TO@ SimpleName@@MethodName:serializeToJsonSafely:[existing.getCriteriaObject()] @AT@ 3133 @LENGTH@ 28
------------------MOV SimpleName@@Name:existing @TO@ MethodInvocation@@existing.getCriteriaObject() @AT@ 3114 @LENGTH@ 8
------------------MOV SimpleName@@Name:existing @TO@ MethodInvocation@@existing.getCriteriaObject() @AT@ 3114 @LENGTH@ 8
------------------MOV SimpleName@@MethodName:getCriteriaObject:[] @TO@ MethodInvocation@@existing.getCriteriaObject() @AT@ 3123 @LENGTH@ 19
------------------MOV SimpleName@@MethodName:getCriteriaObject:[] @TO@ MethodInvocation@@existing.getCriteriaObject() @AT@ 3123 @LENGTH@ 19
---------DEL MethodInvocation@@existing.getCriteriaObject() @AT@ 3114 @LENGTH@ 28


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  DataFormatCustomizer<XmlJsonDataFormat> configurer : customizers) {    LOGGER.debug("Configure dataformat {}, with configurer {}",dataformat,configurer);    configurer.customize(dataformat);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  DataFormatCustomizer<XmlJsonDataFormat> customizer : customizers) {    LOGGER.debug("Configure dataformat {}, with customizer {}",dataformat,customizer);    customizer.customize(dataformat);  }} @AT@ 5349 @LENGTH@ 426
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 5353 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5353 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  DataFormatCustomizer<XmlJsonDataFormat> configurer : customizers) {    LOGGER.debug("Configure dataformat {}, with configurer {}",dataformat,configurer);    configurer.customize(dataformat);  }} @TO@ ThenBody:{  for (  DataFormatCustomizer<XmlJsonDataFormat> customizer : customizers) {    LOGGER.debug("Configure dataformat {}, with customizer {}",dataformat,customizer);    customizer.customize(dataformat);  }} @AT@ 5409 @LENGTH@ 366
------UPD EnhancedForStatement@@for (DataFormatCustomizer<XmlJsonDataFormat> configurer : customizers) {  LOGGER.debug("Configure dataformat {}, with configurer {}",dataformat,configurer);  configurer.customize(dataformat);} @TO@ for (DataFormatCustomizer<XmlJsonDataFormat> customizer : customizers) {  LOGGER.debug("Configure dataformat {}, with customizer {}",dataformat,customizer);  customizer.customize(dataformat);} @AT@ 5431 @LENGTH@ 326
---------UPD SingleVariableDeclaration@@DataFormatCustomizer<XmlJsonDataFormat> configurer @TO@ DataFormatCustomizer<XmlJsonDataFormat> customizer @AT@ 5436 @LENGTH@ 50
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5476 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure dataformat {}, with configurer {}",dataformat,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure dataformat {}, with customizer {}",dataformat,customizer) @AT@ 5528 @LENGTH@ 149
------------UPD MethodInvocation@@LOGGER.debug("Configure dataformat {}, with configurer {}",dataformat,configurer) @TO@ LOGGER.debug("Configure dataformat {}, with customizer {}",dataformat,customizer) @AT@ 5528 @LENGTH@ 148
---------------UPD SimpleName@@MethodName:debug:["Configure dataformat {}, with configurer {}", dataformat, configurer] @TO@ MethodName:debug:["Configure dataformat {}, with customizer {}", dataformat, customizer] @AT@ 5535 @LENGTH@ 141
------------------UPD StringLiteral@@"Configure dataformat {}, with configurer {}" @TO@ "Configure dataformat {}, with customizer {}" @AT@ 5574 @LENGTH@ 45
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5665 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(dataformat) @TO@ MethodInvocation:customizer.customize(dataformat) @AT@ 5702 @LENGTH@ 33
------------UPD MethodInvocation@@configurer.customize(dataformat) @TO@ customizer.customize(dataformat) @AT@ 5702 @LENGTH@ 32
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5702 @LENGTH@ 10


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled(); @AT@ 5209 @LENGTH@ 160
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5217 @LENGTH@ 151
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5217 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5234 @LENGTH@ 134
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 5234 @LENGTH@ 64
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5234 @LENGTH@ 35
---------UPD MethodInvocation@@componentConfiguration.getConfigurer().isEnabled() @TO@ componentConfiguration.getCustomizer().isEnabled() @AT@ 5318 @LENGTH@ 50
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5318 @LENGTH@ 38


UPD ReturnStatement@@MethodInvocation:multiHashOrdered(parentHashCode(),1553,hostName.hashCode()) @TO@ MethodInvocation:multiHashUnordered(parentHashCode(),1553,hostName.hashCode()) @AT@ 1617 @LENGTH@ 69
---UPD MethodInvocation@@multiHashOrdered(parentHashCode(),1553,hostName.hashCode()) @TO@ multiHashUnordered(parentHashCode(),1553,hostName.hashCode()) @AT@ 1624 @LENGTH@ 61
------UPD SimpleName@@MethodName:multiHashOrdered:[parentHashCode(), 1553, hostName.hashCode()] @TO@ MethodName:multiHashUnordered:[parentHashCode(), 1553, hostName.hashCode()] @AT@ 1624 @LENGTH@ 61


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<RssComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<RssComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5378 @LENGTH@ 336
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 5382 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5382 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  ComponentCustomizer<RssComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ ThenBody:{  for (  ComponentCustomizer<RssComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5438 @LENGTH@ 276
------UPD EnhancedForStatement@@for (ComponentCustomizer<RssComponent> configurer : customizers) {  LOGGER.debug("Configure component {}, with configurer {}",component,configurer);  configurer.customize(component);} @TO@ for (ComponentCustomizer<RssComponent> customizer : customizers) {  LOGGER.debug("Configure component {}, with customizer {}",component,customizer);  customizer.customize(component);} @AT@ 5452 @LENGTH@ 252
---------UPD SingleVariableDeclaration@@ComponentCustomizer<RssComponent> configurer @TO@ ComponentCustomizer<RssComponent> customizer @AT@ 5457 @LENGTH@ 44
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5491 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5535 @LENGTH@ 106
------------UPD MethodInvocation@@LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5535 @LENGTH@ 105
---------------UPD SimpleName@@MethodName:debug:["Configure component {}, with configurer {}", component, configurer] @TO@ MethodName:debug:["Configure component {}, with customizer {}", component, customizer] @AT@ 5542 @LENGTH@ 98
------------------UPD StringLiteral@@"Configure component {}, with configurer {}" @TO@ "Configure component {}, with customizer {}" @AT@ 5548 @LENGTH@ 44
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5629 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(component) @TO@ MethodInvocation:customizer.customize(component) @AT@ 5658 @LENGTH@ 32
------------UPD MethodInvocation@@configurer.customize(component) @TO@ customizer.customize(component) @AT@ 5658 @LENGTH@ 31
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5658 @LENGTH@ 10


UPD MethodDeclaration@@public, void, MethodName:command, @CliOption(key={"","command"},mandatory=false,specifiedDefaultValue="",unspecifiedDefaultValue="",help="The OS command to execute." + "Default: ''") final String command,  @TO@ public, void, MethodName:command, @CliOption(key={"","command"},mandatory=false,specifiedDefaultValue="",unspecifiedDefaultValue="",help="The OS command to execute. " + "Default: ''") final String command,  @AT@ 1058 @LENGTH@ 474
---UPD SingleVariableDeclaration@@@CliOption(key={"","command"},mandatory=false,specifiedDefaultValue="",unspecifiedDefaultValue="",help="The OS command to execute." + "Default: ''") final String command @TO@ @CliOption(key={"","command"},mandatory=false,specifiedDefaultValue="",unspecifiedDefaultValue="",help="The OS command to execute. " + "Default: ''") final String command @AT@ 1078 @LENGTH@ 200


UPD SwitchStatement@@switch (state) {case NO_BLOCK:  fill();return read(b,off,len);case IN_LITERAL:int litLen=readLiteral(b,off,len);if (!hasMoreDataInBlock()) {state=State.NO_BLOCK;}return litLen;case IN_BACK_REFERENCE:int backReferenceLen=readBackReference(b,off,len);if (!hasMoreDataInBlock()) {state=State.NO_BLOCK;}return backReferenceLen;default :throw new IOException("Unknown stream state " + state);} @TO@ switch (state) {case NO_BLOCK:  fill();return read(b,off,len);case IN_LITERAL:int litLen=readLiteral(b,off,len);if (!hasMoreDataInBlock()) {state=State.NO_BLOCK;}return litLen > 0 ? litLen : read(b,off,len);case IN_BACK_REFERENCE:int backReferenceLen=readBackReference(b,off,len);if (!hasMoreDataInBlock()) {state=State.NO_BLOCK;}return backReferenceLen > 0 ? backReferenceLen : read(b,off,len);default :throw new IOException("Unknown stream state " + state);} @AT@ 3346 @LENGTH@ 621
---UPD ReturnStatement@@SimpleName:litLen @TO@ ConditionalExpression:litLen > 0 ? litLen : read(b,off,len) @AT@ 3627 @LENGTH@ 14
------INS ConditionalExpression@@litLen > 0 ? litLen : read(b,off,len) @TO@ ReturnStatement@@SimpleName:litLen @AT@ 3634 @LENGTH@ 39
---------INS InfixExpression@@litLen > 0 @TO@ ConditionalExpression@@litLen > 0 ? litLen : read(b,off,len) @AT@ 3634 @LENGTH@ 10
------------INS SimpleName@@litLen @TO@ InfixExpression@@litLen > 0 @AT@ 3634 @LENGTH@ 6
------------INS Operator@@> @TO@ InfixExpression@@litLen > 0 @AT@ 3640 @LENGTH@ 1
------------INS NumberLiteral@@0 @TO@ InfixExpression@@litLen > 0 @AT@ 3643 @LENGTH@ 1
---------INS SimpleName@@litLen @TO@ ConditionalExpression@@litLen > 0 ? litLen : read(b,off,len) @AT@ 3647 @LENGTH@ 6
---------INS MethodInvocation@@read(b,off,len) @TO@ ConditionalExpression@@litLen > 0 ? litLen : read(b,off,len) @AT@ 3656 @LENGTH@ 17
------------INS SimpleName@@MethodName:read:[b, off, len] @TO@ MethodInvocation@@read(b,off,len) @AT@ 3656 @LENGTH@ 17
---------------INS SimpleName@@b @TO@ SimpleName@@MethodName:read:[b, off, len] @AT@ 3661 @LENGTH@ 1
---------------INS SimpleName@@off @TO@ SimpleName@@MethodName:read:[b, off, len] @AT@ 3664 @LENGTH@ 3
---------------INS SimpleName@@len @TO@ SimpleName@@MethodName:read:[b, off, len] @AT@ 3669 @LENGTH@ 3
------DEL SimpleName@@litLen @AT@ 3634 @LENGTH@ 6
---UPD ReturnStatement@@SimpleName:backReferenceLen @TO@ ConditionalExpression:backReferenceLen > 0 ? backReferenceLen : read(b,off,len) @AT@ 3848 @LENGTH@ 24
------DEL SimpleName@@backReferenceLen @AT@ 3855 @LENGTH@ 16
------INS ConditionalExpression@@backReferenceLen > 0 ? backReferenceLen : read(b,off,len) @TO@ ReturnStatement@@SimpleName:backReferenceLen @AT@ 3888 @LENGTH@ 59
---------INS InfixExpression@@backReferenceLen > 0 @TO@ ConditionalExpression@@backReferenceLen > 0 ? backReferenceLen : read(b,off,len) @AT@ 3888 @LENGTH@ 20
------------INS SimpleName@@backReferenceLen @TO@ InfixExpression@@backReferenceLen > 0 @AT@ 3888 @LENGTH@ 16
------------INS Operator@@> @TO@ InfixExpression@@backReferenceLen > 0 @AT@ 3904 @LENGTH@ 1
------------INS NumberLiteral@@0 @TO@ InfixExpression@@backReferenceLen > 0 @AT@ 3907 @LENGTH@ 1
---------INS SimpleName@@backReferenceLen @TO@ ConditionalExpression@@backReferenceLen > 0 ? backReferenceLen : read(b,off,len) @AT@ 3911 @LENGTH@ 16
---------INS MethodInvocation@@read(b,off,len) @TO@ ConditionalExpression@@backReferenceLen > 0 ? backReferenceLen : read(b,off,len) @AT@ 3930 @LENGTH@ 17
------------INS SimpleName@@MethodName:read:[b, off, len] @TO@ MethodInvocation@@read(b,off,len) @AT@ 3930 @LENGTH@ 17
---------------INS SimpleName@@b @TO@ SimpleName@@MethodName:read:[b, off, len] @AT@ 3935 @LENGTH@ 1
---------------INS SimpleName@@off @TO@ SimpleName@@MethodName:read:[b, off, len] @AT@ 3938 @LENGTH@ 3
---------------INS SimpleName@@len @TO@ SimpleName@@MethodName:read:[b, off, len] @AT@ 3943 @LENGTH@ 3


UPD EnhancedForStatement@@for (Map.Entry<String,Object> entry : requestModels.entrySet()) {  configuration.addResponseModel(entry.getKey(),EndpointHelper.resolveParameter(context,(String)entry.getValue(),Class.class));} @TO@ for (Map.Entry<String,Object> entry : responseModels.entrySet()) {  configuration.addResponseModel(entry.getKey(),EndpointHelper.resolveParameter(context,(String)entry.getValue(),Class.class));} @AT@ 2543 @LENGTH@ 250
---UPD MethodInvocation@@requestModels.entrySet() @TO@ responseModels.entrySet() @AT@ 2582 @LENGTH@ 24
------UPD SimpleName@@Name:requestModels @TO@ Name:responseModels @AT@ 2582 @LENGTH@ 13


UPD ExpressionStatement@@MethodInvocation:Assert.assertEquals(400,result.getErrors().get(0).getDetails().get(VerificationError.ExceptionAttribute.EXCEPTION_INSTANCE)) @TO@ MethodInvocation:Assert.assertEquals(400,result.getErrors().get(0).getDetails().get(VerificationError.HttpAttribute.HTTP_CODE)) @AT@ 5652 @LENGTH@ 126
---UPD MethodInvocation@@Assert.assertEquals(400,result.getErrors().get(0).getDetails().get(VerificationError.ExceptionAttribute.EXCEPTION_INSTANCE)) @TO@ Assert.assertEquals(400,result.getErrors().get(0).getDetails().get(VerificationError.HttpAttribute.HTTP_CODE)) @AT@ 5652 @LENGTH@ 125
------UPD SimpleName@@MethodName:assertEquals:[400, result.getErrors().get(0).getDetails().get(VerificationError.ExceptionAttribute.EXCEPTION_INSTANCE)] @TO@ MethodName:assertEquals:[400, result.getErrors().get(0).getDetails().get(VerificationError.HttpAttribute.HTTP_CODE)] @AT@ 5659 @LENGTH@ 118
---------UPD MethodInvocation@@result.getErrors().get(0).getDetails().get(VerificationError.ExceptionAttribute.EXCEPTION_INSTANCE) @TO@ result.getErrors().get(0).getDetails().get(VerificationError.HttpAttribute.HTTP_CODE) @AT@ 5677 @LENGTH@ 99
------------UPD SimpleName@@MethodName:get:[VerificationError.ExceptionAttribute.EXCEPTION_INSTANCE] @TO@ MethodName:get:[VerificationError.HttpAttribute.HTTP_CODE] @AT@ 5716 @LENGTH@ 60
---------------UPD QualifiedName@@VerificationError.ExceptionAttribute.EXCEPTION_INSTANCE @TO@ VerificationError.HttpAttribute.HTTP_CODE @AT@ 5720 @LENGTH@ 55
------------------UPD QualifiedName@@VerificationError.ExceptionAttribute @TO@ VerificationError.HttpAttribute @AT@ 5720 @LENGTH@ 36
---------------------UPD SimpleName@@ExceptionAttribute @TO@ HttpAttribute @AT@ 5738 @LENGTH@ 18
------------------UPD SimpleName@@EXCEPTION_INSTANCE @TO@ HTTP_CODE @AT@ 5757 @LENGTH@ 18


UPD ExpressionStatement@@MethodInvocation:logger.debug("Error closing consumer",e) @TO@ MethodInvocation:logger.debug("Error closing consumer " + this,e) @AT@ 22186 @LENGTH@ 42
---UPD MethodInvocation@@logger.debug("Error closing consumer",e) @TO@ logger.debug("Error closing consumer " + this,e) @AT@ 22186 @LENGTH@ 41
------UPD SimpleName@@MethodName:debug:["Error closing consumer", e] @TO@ MethodName:debug:["Error closing consumer " + this, e] @AT@ 22193 @LENGTH@ 34
---------INS InfixExpression@@"Error closing consumer " + this @TO@ SimpleName@@MethodName:debug:["Error closing consumer", e] @AT@ 22199 @LENGTH@ 32
------------INS StringLiteral@@"Error closing consumer " @TO@ InfixExpression@@"Error closing consumer " + this @AT@ 22199 @LENGTH@ 25
------------INS Operator@@+ @TO@ InfixExpression@@"Error closing consumer " + this @AT@ 22224 @LENGTH@ 1
------------INS ThisExpression@@this @TO@ InfixExpression@@"Error closing consumer " + this @AT@ 22227 @LENGTH@ 4
---------DEL StringLiteral@@"Error closing consumer" @AT@ 22199 @LENGTH@ 24


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<QualifiedContextComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<QualifiedContextComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5595 @LENGTH@ 349
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 5599 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5599 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  ComponentCustomizer<QualifiedContextComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ ThenBody:{  for (  ComponentCustomizer<QualifiedContextComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5655 @LENGTH@ 289
------UPD EnhancedForStatement@@for (ComponentCustomizer<QualifiedContextComponent> configurer : customizers) {  LOGGER.debug("Configure component {}, with configurer {}",component,configurer);  configurer.customize(component);} @TO@ for (ComponentCustomizer<QualifiedContextComponent> customizer : customizers) {  LOGGER.debug("Configure component {}, with customizer {}",component,customizer);  customizer.customize(component);} @AT@ 5669 @LENGTH@ 265
---------UPD SingleVariableDeclaration@@ComponentCustomizer<QualifiedContextComponent> configurer @TO@ ComponentCustomizer<QualifiedContextComponent> customizer @AT@ 5674 @LENGTH@ 57
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5721 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5765 @LENGTH@ 106
------------UPD MethodInvocation@@LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5765 @LENGTH@ 105
---------------UPD SimpleName@@MethodName:debug:["Configure component {}, with configurer {}", component, configurer] @TO@ MethodName:debug:["Configure component {}, with customizer {}", component, customizer] @AT@ 5772 @LENGTH@ 98
------------------UPD StringLiteral@@"Configure component {}, with configurer {}" @TO@ "Configure component {}, with customizer {}" @AT@ 5778 @LENGTH@ 44
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5859 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(component) @TO@ MethodInvocation:customizer.customize(component) @AT@ 5888 @LENGTH@ 32
------------UPD MethodInvocation@@configurer.customize(component) @TO@ customizer.customize(component) @AT@ 5888 @LENGTH@ 31
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5888 @LENGTH@ 10


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<SchedulerComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<SchedulerComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5480 @LENGTH@ 342
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 5484 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5484 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  ComponentCustomizer<SchedulerComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ ThenBody:{  for (  ComponentCustomizer<SchedulerComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5540 @LENGTH@ 282
------UPD EnhancedForStatement@@for (ComponentCustomizer<SchedulerComponent> configurer : customizers) {  LOGGER.debug("Configure component {}, with configurer {}",component,configurer);  configurer.customize(component);} @TO@ for (ComponentCustomizer<SchedulerComponent> customizer : customizers) {  LOGGER.debug("Configure component {}, with customizer {}",component,customizer);  customizer.customize(component);} @AT@ 5554 @LENGTH@ 258
---------UPD SingleVariableDeclaration@@ComponentCustomizer<SchedulerComponent> configurer @TO@ ComponentCustomizer<SchedulerComponent> customizer @AT@ 5559 @LENGTH@ 50
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5599 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5643 @LENGTH@ 106
------------UPD MethodInvocation@@LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5643 @LENGTH@ 105
---------------UPD SimpleName@@MethodName:debug:["Configure component {}, with configurer {}", component, configurer] @TO@ MethodName:debug:["Configure component {}, with customizer {}", component, customizer] @AT@ 5650 @LENGTH@ 98
------------------UPD StringLiteral@@"Configure component {}, with configurer {}" @TO@ "Configure component {}, with customizer {}" @AT@ 5656 @LENGTH@ 44
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5737 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(component) @TO@ MethodInvocation:customizer.customize(component) @AT@ 5766 @LENGTH@ 32
------------UPD MethodInvocation@@configurer.customize(component) @TO@ customizer.customize(component) @AT@ 5766 @LENGTH@ 31
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5766 @LENGTH@ 10


INS MethodDeclaration@@public, void, MethodName:doesNotRejectSeqForPagination, Exception,  @TO@ TypeDeclaration@@[public]QueryMethodUnitTests,  @AT@ 8572 @LENGTH@ 344
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:doesNotRejectSeqForPagination, Exception,  @AT@ 8572 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:doesNotRejectSeqForPagination, Exception,  @AT@ 8579 @LENGTH@ 4
---INS SimpleName@@MethodName:doesNotRejectSeqForPagination @TO@ MethodDeclaration@@public, void, MethodName:doesNotRejectSeqForPagination, Exception,  @AT@ 8584 @LENGTH@ 29
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:doesNotRejectSeqForPagination, Exception,  @AT@ 8623 @LENGTH@ 9
---INS VariableDeclarationStatement@@RepositoryMetadata repositoryMetadata=new DefaultRepositoryMetadata(SampleRepository.class); @TO@ MethodDeclaration@@public, void, MethodName:doesNotRejectSeqForPagination, Exception,  @AT@ 8638 @LENGTH@ 94
------INS SimpleType@@RepositoryMetadata @TO@ VariableDeclarationStatement@@RepositoryMetadata repositoryMetadata=new DefaultRepositoryMetadata(SampleRepository.class); @AT@ 8638 @LENGTH@ 18
------INS VariableDeclarationFragment@@repositoryMetadata=new DefaultRepositoryMetadata(SampleRepository.class) @TO@ VariableDeclarationStatement@@RepositoryMetadata repositoryMetadata=new DefaultRepositoryMetadata(SampleRepository.class); @AT@ 8657 @LENGTH@ 74
---------INS SimpleName@@repositoryMetadata @TO@ VariableDeclarationFragment@@repositoryMetadata=new DefaultRepositoryMetadata(SampleRepository.class) @AT@ 8657 @LENGTH@ 18
---------INS ClassInstanceCreation@@DefaultRepositoryMetadata[SampleRepository.class] @TO@ VariableDeclarationFragment@@repositoryMetadata=new DefaultRepositoryMetadata(SampleRepository.class) @AT@ 8678 @LENGTH@ 53
------------INS New@@new @TO@ ClassInstanceCreation@@DefaultRepositoryMetadata[SampleRepository.class] @AT@ 8678 @LENGTH@ 3
------------INS SimpleType@@DefaultRepositoryMetadata @TO@ ClassInstanceCreation@@DefaultRepositoryMetadata[SampleRepository.class] @AT@ 8682 @LENGTH@ 25
------------INS TypeLiteral@@SampleRepository.class @TO@ ClassInstanceCreation@@DefaultRepositoryMetadata[SampleRepository.class] @AT@ 8708 @LENGTH@ 22
---INS VariableDeclarationStatement@@Method method=SampleRepository.class.getMethod("returnsSeq",Pageable.class); @TO@ MethodDeclaration@@public, void, MethodName:doesNotRejectSeqForPagination, Exception,  @AT@ 8735 @LENGTH@ 79
------INS SimpleType@@Method @TO@ VariableDeclarationStatement@@Method method=SampleRepository.class.getMethod("returnsSeq",Pageable.class); @AT@ 8735 @LENGTH@ 6
------INS VariableDeclarationFragment@@method=SampleRepository.class.getMethod("returnsSeq",Pageable.class) @TO@ VariableDeclarationStatement@@Method method=SampleRepository.class.getMethod("returnsSeq",Pageable.class); @AT@ 8742 @LENGTH@ 71
---------INS SimpleName@@method @TO@ VariableDeclarationFragment@@method=SampleRepository.class.getMethod("returnsSeq",Pageable.class) @AT@ 8742 @LENGTH@ 6
---------INS MethodInvocation@@SampleRepository.class.getMethod("returnsSeq",Pageable.class) @TO@ VariableDeclarationFragment@@method=SampleRepository.class.getMethod("returnsSeq",Pageable.class) @AT@ 8751 @LENGTH@ 62
------------INS TypeLiteral@@SampleRepository.class @TO@ MethodInvocation@@SampleRepository.class.getMethod("returnsSeq",Pageable.class) @AT@ 8751 @LENGTH@ 22
------------INS SimpleName@@MethodName:getMethod:["returnsSeq", Pageable.class] @TO@ MethodInvocation@@SampleRepository.class.getMethod("returnsSeq",Pageable.class) @AT@ 8774 @LENGTH@ 39
---------------INS StringLiteral@@"returnsSeq" @TO@ SimpleName@@MethodName:getMethod:["returnsSeq", Pageable.class] @AT@ 8784 @LENGTH@ 12
---------------INS TypeLiteral@@Pageable.class @TO@ SimpleName@@MethodName:getMethod:["returnsSeq", Pageable.class] @AT@ 8798 @LENGTH@ 14
---INS ExpressionStatement@@MethodInvocation:assertThat(new QueryMethod(method,repositoryMetadata,factory).isCollectionQuery(),is(true)) @TO@ MethodDeclaration@@public, void, MethodName:doesNotRejectSeqForPagination, Exception,  @AT@ 8818 @LENGTH@ 95
------INS MethodInvocation@@assertThat(new QueryMethod(method,repositoryMetadata,factory).isCollectionQuery(),is(true)) @TO@ ExpressionStatement@@MethodInvocation:assertThat(new QueryMethod(method,repositoryMetadata,factory).isCollectionQuery(),is(true)) @AT@ 8818 @LENGTH@ 94
---------INS SimpleName@@MethodName:assertThat:[new QueryMethod(method,repositoryMetadata,factory).isCollectionQuery(), is(true)] @TO@ MethodInvocation@@assertThat(new QueryMethod(method,repositoryMetadata,factory).isCollectionQuery(),is(true)) @AT@ 8818 @LENGTH@ 94
------------INS MethodInvocation@@new QueryMethod(method,repositoryMetadata,factory).isCollectionQuery() @TO@ SimpleName@@MethodName:assertThat:[new QueryMethod(method,repositoryMetadata,factory).isCollectionQuery(), is(true)] @AT@ 8829 @LENGTH@ 72
---------------INS ClassInstanceCreation@@QueryMethod[method, repositoryMetadata, factory] @TO@ MethodInvocation@@new QueryMethod(method,repositoryMetadata,factory).isCollectionQuery() @AT@ 8829 @LENGTH@ 52
------------------INS New@@new @TO@ ClassInstanceCreation@@QueryMethod[method, repositoryMetadata, factory] @AT@ 8829 @LENGTH@ 3
------------------INS SimpleType@@QueryMethod @TO@ ClassInstanceCreation@@QueryMethod[method, repositoryMetadata, factory] @AT@ 8833 @LENGTH@ 11
------------------INS SimpleName@@method @TO@ ClassInstanceCreation@@QueryMethod[method, repositoryMetadata, factory] @AT@ 8845 @LENGTH@ 6
------------------INS SimpleName@@repositoryMetadata @TO@ ClassInstanceCreation@@QueryMethod[method, repositoryMetadata, factory] @AT@ 8853 @LENGTH@ 18
------------------INS SimpleName@@factory @TO@ ClassInstanceCreation@@QueryMethod[method, repositoryMetadata, factory] @AT@ 8873 @LENGTH@ 7
---------------INS SimpleName@@MethodName:isCollectionQuery:[] @TO@ MethodInvocation@@new QueryMethod(method,repositoryMetadata,factory).isCollectionQuery() @AT@ 8882 @LENGTH@ 19
------------INS MethodInvocation@@is(true) @TO@ SimpleName@@MethodName:assertThat:[new QueryMethod(method,repositoryMetadata,factory).isCollectionQuery(), is(true)] @AT@ 8903 @LENGTH@ 8
---------------INS SimpleName@@MethodName:is:[true] @TO@ MethodInvocation@@is(true) @AT@ 8903 @LENGTH@ 8
------------------INS BooleanLiteral@@true @TO@ SimpleName@@MethodName:is:[true] @AT@ 8906 @LENGTH@ 4
---------------INS SimpleName@@MethodName:is:[true] @TO@ MethodInvocation@@is(true) @AT@ 8903 @LENGTH@ 8
------------------INS BooleanLiteral@@true @TO@ SimpleName@@MethodName:is:[true] @AT@ 8906 @LENGTH@ 4


UPD VariableDeclarationStatement@@BasicMongoPersistentEntity<?> entity=mappingContext.getPersistentEntity(Entity.class); @TO@ BasicMongoPersistentEntity<?> entity=mappingContext.getRequiredPersistentEntity(Entity.class); @AT@ 4167 @LENGTH@ 88
---UPD VariableDeclarationFragment@@entity=mappingContext.getPersistentEntity(Entity.class) @TO@ entity=mappingContext.getRequiredPersistentEntity(Entity.class) @AT@ 4197 @LENGTH@ 57
------UPD MethodInvocation@@mappingContext.getPersistentEntity(Entity.class) @TO@ mappingContext.getRequiredPersistentEntity(Entity.class) @AT@ 4206 @LENGTH@ 48
---------UPD SimpleName@@MethodName:getPersistentEntity:[Entity.class] @TO@ MethodName:getRequiredPersistentEntity:[Entity.class] @AT@ 4221 @LENGTH@ 33


MOV FieldDeclaration@@protected, Logger, [logger] @TO@ TypeDeclaration@@[public, abstract]PubsubAcknowledgement,  @AT@ 1371 @LENGTH@ 24


UPD ReturnStatement@@MethodInvocation:multiHashOrdered(parentHashCode(),7817,parameterSpecs.hashCode()) @TO@ MethodInvocation:multiHashUnordered(parentHashCode(),7817,parameterSpecs.hashCode()) @AT@ 3500 @LENGTH@ 75
---UPD MethodInvocation@@multiHashOrdered(parentHashCode(),7817,parameterSpecs.hashCode()) @TO@ multiHashUnordered(parentHashCode(),7817,parameterSpecs.hashCode()) @AT@ 3507 @LENGTH@ 67
------UPD SimpleName@@MethodName:multiHashOrdered:[parentHashCode(), 7817, parameterSpecs.hashCode()] @TO@ MethodName:multiHashUnordered:[parentHashCode(), 7817, parameterSpecs.hashCode()] @AT@ 3507 @LENGTH@ 67


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled(); @AT@ 5251 @LENGTH@ 160
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5259 @LENGTH@ 151
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5259 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5276 @LENGTH@ 134
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 5276 @LENGTH@ 64
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5276 @LENGTH@ 35
---------UPD MethodInvocation@@componentConfiguration.getConfigurer().isEnabled() @TO@ componentConfiguration.getCustomizer().isEnabled() @AT@ 5360 @LENGTH@ 50
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5360 @LENGTH@ 38


UPD ExpressionStatement@@Assignment:cursorToUse=cursorToUse.skip(query.getSkip()) @TO@ Assignment:cursorToUse=cursorToUse.skip((int)query.getSkip()) @AT@ 93597 @LENGTH@ 48
---UPD Assignment@@cursorToUse=cursorToUse.skip(query.getSkip()) @TO@ cursorToUse=cursorToUse.skip((int)query.getSkip()) @AT@ 93597 @LENGTH@ 47
------UPD MethodInvocation@@cursorToUse.skip(query.getSkip()) @TO@ cursorToUse.skip((int)query.getSkip()) @AT@ 93611 @LENGTH@ 33
---------UPD SimpleName@@MethodName:skip:[query.getSkip()] @TO@ MethodName:skip:[(int)query.getSkip()] @AT@ 93623 @LENGTH@ 21
------------DEL MethodInvocation@@query.getSkip() @AT@ 93628 @LENGTH@ 15
------------INS CastExpression@@(int)query.getSkip() @TO@ SimpleName@@MethodName:skip:[query.getSkip()] @AT@ 93629 @LENGTH@ 20
---------------INS PrimitiveType@@int @TO@ CastExpression@@(int)query.getSkip() @AT@ 93630 @LENGTH@ 3
---------------INS MethodInvocation@@query.getSkip() @TO@ CastExpression@@(int)query.getSkip() @AT@ 93634 @LENGTH@ 15
------------------MOV SimpleName@@Name:query @TO@ MethodInvocation@@query.getSkip() @AT@ 93628 @LENGTH@ 5
------------------MOV SimpleName@@MethodName:getSkip:[] @TO@ MethodInvocation@@query.getSkip() @AT@ 93634 @LENGTH@ 9


UPD ExpressionStatement@@MethodInvocation:Assert.notNull(workingDir) @TO@ MethodInvocation:Assert.notNull(workingDir,"workingDir cannot be null") @AT@ 6395 @LENGTH@ 27
---UPD MethodInvocation@@Assert.notNull(workingDir) @TO@ Assert.notNull(workingDir,"workingDir cannot be null") @AT@ 6395 @LENGTH@ 26
------UPD SimpleName@@MethodName:notNull:[workingDir] @TO@ MethodName:notNull:[workingDir, "workingDir cannot be null"] @AT@ 6402 @LENGTH@ 19
---------INS StringLiteral@@"workingDir cannot be null" @TO@ SimpleName@@MethodName:notNull:[workingDir] @AT@ 6422 @LENGTH@ 27


INS MethodDeclaration@@public, static, Defaultable<Float>, MethodName:floating, Supplier<Float> defaultValueSupplier,  @TO@ TypeDeclaration@@[public]Defaultable, [Supplier<T>] @AT@ 1079 @LENGTH@ 156
---INS Modifier@@public @TO@ MethodDeclaration@@public, static, Defaultable<Float>, MethodName:floating, Supplier<Float> defaultValueSupplier,  @AT@ 1079 @LENGTH@ 6
---INS Modifier@@static @TO@ MethodDeclaration@@public, static, Defaultable<Float>, MethodName:floating, Supplier<Float> defaultValueSupplier,  @AT@ 1086 @LENGTH@ 6
---INS ParameterizedType@@Defaultable<Float> @TO@ MethodDeclaration@@public, static, Defaultable<Float>, MethodName:floating, Supplier<Float> defaultValueSupplier,  @AT@ 1093 @LENGTH@ 18
------INS SimpleType@@Defaultable @TO@ ParameterizedType@@Defaultable<Float> @AT@ 1093 @LENGTH@ 11
------INS SimpleType@@Float @TO@ ParameterizedType@@Defaultable<Float> @AT@ 1105 @LENGTH@ 5
---INS SimpleName@@MethodName:floating @TO@ MethodDeclaration@@public, static, Defaultable<Float>, MethodName:floating, Supplier<Float> defaultValueSupplier,  @AT@ 1112 @LENGTH@ 8
---INS SingleVariableDeclaration@@Supplier<Float> defaultValueSupplier @TO@ MethodDeclaration@@public, static, Defaultable<Float>, MethodName:floating, Supplier<Float> defaultValueSupplier,  @AT@ 1121 @LENGTH@ 36
------INS ParameterizedType@@Supplier<Float> @TO@ SingleVariableDeclaration@@Supplier<Float> defaultValueSupplier @AT@ 1121 @LENGTH@ 15
---------INS SimpleType@@Supplier @TO@ ParameterizedType@@Supplier<Float> @AT@ 1121 @LENGTH@ 8
---------INS SimpleType@@Float @TO@ ParameterizedType@@Supplier<Float> @AT@ 1130 @LENGTH@ 5
------INS SimpleName@@defaultValueSupplier @TO@ SingleVariableDeclaration@@Supplier<Float> defaultValueSupplier @AT@ 1137 @LENGTH@ 20
---INS ReturnStatement@@ClassInstanceCreation:new Defaultable<>(Float.class,defaultValueSupplier) @TO@ MethodDeclaration@@public, static, Defaultable<Float>, MethodName:floating, Supplier<Float> defaultValueSupplier,  @AT@ 1169 @LENGTH@ 60
------INS ClassInstanceCreation@@Defaultable<>[Float.class, defaultValueSupplier] @TO@ ReturnStatement@@ClassInstanceCreation:new Defaultable<>(Float.class,defaultValueSupplier) @AT@ 1176 @LENGTH@ 52
---------INS New@@new @TO@ ClassInstanceCreation@@Defaultable<>[Float.class, defaultValueSupplier] @AT@ 1176 @LENGTH@ 3
---------INS ParameterizedType@@Defaultable<> @TO@ ClassInstanceCreation@@Defaultable<>[Float.class, defaultValueSupplier] @AT@ 1180 @LENGTH@ 13
------------INS SimpleType@@Defaultable @TO@ ParameterizedType@@Defaultable<> @AT@ 1180 @LENGTH@ 11
---------INS TypeLiteral@@Float.class @TO@ ClassInstanceCreation@@Defaultable<>[Float.class, defaultValueSupplier] @AT@ 1194 @LENGTH@ 11
---------INS SimpleName@@defaultValueSupplier @TO@ ClassInstanceCreation@@Defaultable<>[Float.class, defaultValueSupplier] @AT@ 1207 @LENGTH@ 20


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled(); @AT@ 5449 @LENGTH@ 160
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5457 @LENGTH@ 151
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5457 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5474 @LENGTH@ 134
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 5474 @LENGTH@ 64
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5474 @LENGTH@ 35
---------UPD MethodInvocation@@componentConfiguration.getConfigurer().isEnabled() @TO@ componentConfiguration.getCustomizer().isEnabled() @AT@ 5558 @LENGTH@ 50
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5558 @LENGTH@ 38


UPD TypeDeclaration@@[@RunWith(SpringRunner.class), @SpringBootApplication, @ContextConfiguration(classes={ServletMappingAutoConfiguration.class,CamelAutoConfiguration.class}), @SpringBootTest(webEnvironment=SpringBootTest.WebEnvironment.RANDOM_PORT), public]ServletMappingAutoConfigurationTest,  @TO@ [@RunWith(SpringRunner.class), @SpringBootApplication, @DirtiesContext, @ContextConfiguration(classes={ServletMappingAutoConfiguration.class,CamelAutoConfiguration.class}), @SpringBootTest(webEnvironment=SpringBootTest.WebEnvironment.RANDOM_PORT), public]ServletMappingAutoConfigurationTest,  @AT@ 1557 @LENGTH@ 945
---INS MarkerAnnotation@@@DirtiesContext @TO@ TypeDeclaration@@[@RunWith(SpringRunner.class), @SpringBootApplication, @ContextConfiguration(classes={ServletMappingAutoConfiguration.class,CamelAutoConfiguration.class}), @SpringBootTest(webEnvironment=SpringBootTest.WebEnvironment.RANDOM_PORT), public]ServletMappingAutoConfigurationTest,  @AT@ 1668 @LENGTH@ 15


UPD TryStatement@@try {  cliClient.ensureConnected(ctx.getConfig().getConnectionTimeout() + 1000);} catch (CommandLineException e) {  ctx.disconnectController();  throw e;} @TO@ try {  cliClient.ensureConnected(ctx.getConfig().getConnectionTimeout() + 1000);} catch (CommandLineException e) {  ctx.disconnectController();  throw e;}catch (IOException ex) {  if (ex instanceof RedirectException) {    try {      ctx.connectController();    } catch (    CommandLineException ce) {      ctx.disconnectController();      throw ce;    }  } else {    throw new CommandLineException(ex);  }} @AT@ 6125 @LENGTH@ 224
---INS CatchClause@@catch (IOException ex) {  if (ex instanceof RedirectException) {    try {      ctx.connectController();    } catch (    CommandLineException ce) {      ctx.disconnectController();      throw ce;    }  } else {    throw new CommandLineException(ex);  }} @TO@ TryStatement@@try {  cliClient.ensureConnected(ctx.getConfig().getConnectionTimeout() + 1000);} catch (CommandLineException e) {  ctx.disconnectController();  throw e;} @AT@ 6390 @LENGTH@ 490
------INS SingleVariableDeclaration@@IOException ex @TO@ CatchClause@@catch (IOException ex) {  if (ex instanceof RedirectException) {    try {      ctx.connectController();    } catch (    CommandLineException ce) {      ctx.disconnectController();      throw ce;    }  } else {    throw new CommandLineException(ex);  }} @AT@ 6397 @LENGTH@ 14
---------INS SimpleType@@IOException @TO@ SingleVariableDeclaration@@IOException ex @AT@ 6397 @LENGTH@ 11
---------INS SimpleName@@ex @TO@ SingleVariableDeclaration@@IOException ex @AT@ 6409 @LENGTH@ 2
------INS IfStatement@@if (ex instanceof RedirectException) {  try {    ctx.connectController();  } catch (  CommandLineException ce) {    ctx.disconnectController();    throw ce;  }} else {  throw new CommandLineException(ex);} @TO@ CatchClause@@catch (IOException ex) {  if (ex instanceof RedirectException) {    try {      ctx.connectController();    } catch (    CommandLineException ce) {      ctx.disconnectController();      throw ce;    }  } else {    throw new CommandLineException(ex);  }} @AT@ 6431 @LENGTH@ 435
---------INS InstanceofExpression@@ex instanceof RedirectException @TO@ IfStatement@@if (ex instanceof RedirectException) {  try {    ctx.connectController();  } catch (  CommandLineException ce) {    ctx.disconnectController();    throw ce;  }} else {  throw new CommandLineException(ex);} @AT@ 6435 @LENGTH@ 31
------------INS SimpleName@@ex @TO@ InstanceofExpression@@ex instanceof RedirectException @AT@ 6435 @LENGTH@ 2
------------INS Instanceof@@instanceof @TO@ InstanceofExpression@@ex instanceof RedirectException @AT@ 6438 @LENGTH@ 10
------------INS SimpleType@@RedirectException @TO@ InstanceofExpression@@ex instanceof RedirectException @AT@ 6449 @LENGTH@ 17
---------INS Block@@ThenBody:{  try {    ctx.connectController();  } catch (  CommandLineException ce) {    ctx.disconnectController();    throw ce;  }} @TO@ IfStatement@@if (ex instanceof RedirectException) {  try {    ctx.connectController();  } catch (  CommandLineException ce) {    ctx.disconnectController();    throw ce;  }} else {  throw new CommandLineException(ex);} @AT@ 6468 @LENGTH@ 317
------------INS TryStatement@@try {  ctx.connectController();} catch (CommandLineException ce) {  ctx.disconnectController();  throw ce;} @TO@ Block@@ThenBody:{  try {    ctx.connectController();  } catch (  CommandLineException ce) {    ctx.disconnectController();    throw ce;  }} @AT@ 6490 @LENGTH@ 277
---------------INS ExpressionStatement@@MethodInvocation:ctx.connectController() @TO@ TryStatement@@try {  ctx.connectController();} catch (CommandLineException ce) {  ctx.disconnectController();  throw ce;} @AT@ 6520 @LENGTH@ 24
------------------INS MethodInvocation@@ctx.connectController() @TO@ ExpressionStatement@@MethodInvocation:ctx.connectController() @AT@ 6520 @LENGTH@ 23
---------------------INS SimpleName@@Name:ctx @TO@ MethodInvocation@@ctx.connectController() @AT@ 6520 @LENGTH@ 3
---------------------INS SimpleName@@MethodName:connectController:[] @TO@ MethodInvocation@@ctx.connectController() @AT@ 6524 @LENGTH@ 19
---------------INS CatchClause@@catch (CommandLineException ce) {  ctx.disconnectController();  throw ce;} @TO@ TryStatement@@try {  ctx.connectController();} catch (CommandLineException ce) {  ctx.disconnectController();  throw ce;} @AT@ 6567 @LENGTH@ 200
------------------INS SingleVariableDeclaration@@CommandLineException ce @TO@ CatchClause@@catch (CommandLineException ce) {  ctx.disconnectController();  throw ce;} @AT@ 6574 @LENGTH@ 23
---------------------INS SimpleType@@CommandLineException @TO@ SingleVariableDeclaration@@CommandLineException ce @AT@ 6574 @LENGTH@ 20
---------------------INS SimpleName@@ce @TO@ SingleVariableDeclaration@@CommandLineException ce @AT@ 6595 @LENGTH@ 2
------------------INS ExpressionStatement@@MethodInvocation:ctx.disconnectController() @TO@ CatchClause@@catch (CommandLineException ce) {  ctx.disconnectController();  throw ce;} @AT@ 6684 @LENGTH@ 27
---------------------INS MethodInvocation@@ctx.disconnectController() @TO@ ExpressionStatement@@MethodInvocation:ctx.disconnectController() @AT@ 6684 @LENGTH@ 26
------------------------INS SimpleName@@Name:ctx @TO@ MethodInvocation@@ctx.disconnectController() @AT@ 6684 @LENGTH@ 3
------------------------INS SimpleName@@MethodName:disconnectController:[] @TO@ MethodInvocation@@ctx.disconnectController() @AT@ 6688 @LENGTH@ 22
------------------INS ThrowStatement@@SimpleName:ce @TO@ CatchClause@@catch (CommandLineException ce) {  ctx.disconnectController();  throw ce;} @AT@ 6736 @LENGTH@ 9
---------------------INS SimpleName@@ce @TO@ ThrowStatement@@SimpleName:ce @AT@ 6742 @LENGTH@ 2
---------INS Block@@ElseBody:{  throw new CommandLineException(ex);} @TO@ IfStatement@@if (ex instanceof RedirectException) {  try {    ctx.connectController();  } catch (  CommandLineException ce) {    ctx.disconnectController();    throw ce;  }} else {  throw new CommandLineException(ex);} @AT@ 6791 @LENGTH@ 75
------------INS ThrowStatement@@ClassInstanceCreation:new CommandLineException(ex) @TO@ Block@@ElseBody:{  throw new CommandLineException(ex);} @AT@ 6813 @LENGTH@ 35
---------------INS ClassInstanceCreation@@CommandLineException[ex] @TO@ ThrowStatement@@ClassInstanceCreation:new CommandLineException(ex) @AT@ 6819 @LENGTH@ 28
------------------INS New@@new @TO@ ClassInstanceCreation@@CommandLineException[ex] @AT@ 6819 @LENGTH@ 3
------------------INS SimpleType@@CommandLineException @TO@ ClassInstanceCreation@@CommandLineException[ex] @AT@ 6823 @LENGTH@ 20
------------------INS SimpleName@@ex @TO@ ClassInstanceCreation@@CommandLineException[ex] @AT@ 6844 @LENGTH@ 2


DEL FieldDeclaration@@private, static, boolean, [SCHEMA_TYPES_IS_ORIGINAL=true] @AT@ 77619 @LENGTH@ 55
---DEL Modifier@@private @AT@ 77619 @LENGTH@ 7
---DEL Modifier@@static @AT@ 77627 @LENGTH@ 6
---DEL PrimitiveType@@boolean @AT@ 77634 @LENGTH@ 7
---DEL VariableDeclarationFragment@@SCHEMA_TYPES_IS_ORIGINAL=true @AT@ 77642 @LENGTH@ 31
------DEL SimpleName@@SCHEMA_TYPES_IS_ORIGINAL @AT@ 77642 @LENGTH@ 24
------DEL BooleanLiteral@@true @AT@ 77669 @LENGTH@ 4


UPD ExpressionStatement@@MethodInvocation:contact.setId(new Long(counter++)) @TO@ MethodInvocation:contact.setId(Long.valueOf(counter++)) @AT@ 3130 @LENGTH@ 35
---UPD MethodInvocation@@contact.setId(new Long(counter++)) @TO@ contact.setId(Long.valueOf(counter++)) @AT@ 3130 @LENGTH@ 34
------UPD SimpleName@@MethodName:setId:[new Long(counter++)] @TO@ MethodName:setId:[Long.valueOf(counter++)] @AT@ 3138 @LENGTH@ 26
---------INS MethodInvocation@@Long.valueOf(counter++) @TO@ SimpleName@@MethodName:setId:[new Long(counter++)] @AT@ 3144 @LENGTH@ 23
------------INS SimpleName@@Name:Long @TO@ MethodInvocation@@Long.valueOf(counter++) @AT@ 3144 @LENGTH@ 4
------------INS SimpleName@@MethodName:valueOf:[counter++] @TO@ MethodInvocation@@Long.valueOf(counter++) @AT@ 3149 @LENGTH@ 18
---------------INS PostfixExpression@@counter++ @TO@ SimpleName@@MethodName:valueOf:[counter++] @AT@ 3157 @LENGTH@ 9
------------------MOV SimpleName@@counter @TO@ PostfixExpression@@counter++ @AT@ 3153 @LENGTH@ 7
------------------MOV Operator@@++ @TO@ PostfixExpression@@counter++ @AT@ 3161 @LENGTH@ 2
---------DEL ClassInstanceCreation@@Long[counter++] @AT@ 3144 @LENGTH@ 19
------------DEL New@@new @AT@ 3144 @LENGTH@ 3
------------DEL SimpleType@@Long @AT@ 3148 @LENGTH@ 4
------------DEL PostfixExpression@@counter++ @AT@ 3153 @LENGTH@ 9


UPD FieldDeclaration@@public, static, final, long, [SERIAL_VERSION_UID=420L] @TO@ public, static, final, long, [SERIAL_VERSION_UID=500L] @AT@ 1401 @LENGTH@ 51
---UPD VariableDeclarationFragment@@SERIAL_VERSION_UID=420L @TO@ SERIAL_VERSION_UID=500L @AT@ 1426 @LENGTH@ 25
------UPD NumberLiteral@@420L @TO@ 500L @AT@ 1447 @LENGTH@ 4


UPD TryStatement@@try {  channel.close();} catch (IOException ex) {  logger.debug("Could not close RabbitMQ Channel",ex);}catch (ShutdownSignalException sig) {  if (!isNormalShutdown(sig)) {    logger.debug("Unexpected exception on closing RabbitMQ Channel",sig);  }}catch (Exception ex) {  logger.debug("Unexpected exception on closing RabbitMQ Channel",ex);} @TO@ try {  channel.close();} catch (AlreadyClosedException ace) {}catch (IOException ex) {  logger.debug("Could not close RabbitMQ Channel",ex);}catch (ShutdownSignalException sig) {  if (!isNormalShutdown(sig)) {    logger.debug("Unexpected exception on closing RabbitMQ Channel",sig);  }}catch (Exception ex) {  logger.debug("Unexpected exception on closing RabbitMQ Channel",ex);} @AT@ 2477 @LENGTH@ 389
---INS CatchClause@@catch (AlreadyClosedException ace) {} @TO@ TryStatement@@try {  channel.close();} catch (IOException ex) {  logger.debug("Could not close RabbitMQ Channel",ex);}catch (ShutdownSignalException sig) {  if (!isNormalShutdown(sig)) {    logger.debug("Unexpected exception on closing RabbitMQ Channel",sig);  }}catch (Exception ex) {  logger.debug("Unexpected exception on closing RabbitMQ Channel",ex);} @AT@ 2621 @LENGTH@ 54
------INS SingleVariableDeclaration@@AlreadyClosedException ace @TO@ CatchClause@@catch (AlreadyClosedException ace) {} @AT@ 2628 @LENGTH@ 26
---------INS SimpleType@@AlreadyClosedException @TO@ SingleVariableDeclaration@@AlreadyClosedException ace @AT@ 2628 @LENGTH@ 22
---------INS SimpleName@@ace @TO@ SingleVariableDeclaration@@AlreadyClosedException ace @AT@ 2651 @LENGTH@ 3


UPD MethodDeclaration@@public, static, TypeInfo, MethodName:getCommonClassForComparison, TypeInfo a, TypeInfo b,  @TO@ public, static, synchronized, TypeInfo, MethodName:getCommonClassForComparison, TypeInfo a, TypeInfo b,  @AT@ 38354 @LENGTH@ 2445
---INS Modifier@@synchronized @TO@ MethodDeclaration@@public, static, TypeInfo, MethodName:getCommonClassForComparison, TypeInfo a, TypeInfo b,  @AT@ 38368 @LENGTH@ 12


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled(); @AT@ 5549 @LENGTH@ 160
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5557 @LENGTH@ 151
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5557 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5574 @LENGTH@ 134
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 5574 @LENGTH@ 64
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5574 @LENGTH@ 35
---------UPD MethodInvocation@@componentConfiguration.getConfigurer().isEnabled() @TO@ componentConfiguration.getCustomizer().isEnabled() @AT@ 5658 @LENGTH@ 50
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5658 @LENGTH@ 38


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled(); @AT@ 5243 @LENGTH@ 160
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5251 @LENGTH@ 151
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5251 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5268 @LENGTH@ 134
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 5268 @LENGTH@ 64
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5268 @LENGTH@ 35
---------UPD MethodInvocation@@componentConfiguration.getConfigurer().isEnabled() @TO@ componentConfiguration.getCustomizer().isEnabled() @AT@ 5352 @LENGTH@ 50
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5352 @LENGTH@ 38


UPD ExpressionStatement@@MethodInvocation:when(mappingContext.getPersistentEntity(Person.class)).thenReturn(Optional.of(entity)) @TO@ MethodInvocation:when(mappingContext.getRequiredPersistentEntity(Person.class)).thenReturn(entity) @AT@ 2662 @LENGTH@ 87
---UPD MethodInvocation@@when(mappingContext.getPersistentEntity(Person.class)).thenReturn(Optional.of(entity)) @TO@ when(mappingContext.getRequiredPersistentEntity(Person.class)).thenReturn(entity) @AT@ 2662 @LENGTH@ 86
------UPD MethodInvocation@@MethodName:when:[mappingContext.getPersistentEntity(Person.class)] @TO@ MethodName:when:[mappingContext.getRequiredPersistentEntity(Person.class)] @AT@ 2662 @LENGTH@ 54
---------UPD MethodInvocation@@mappingContext.getPersistentEntity(Person.class) @TO@ mappingContext.getRequiredPersistentEntity(Person.class) @AT@ 2667 @LENGTH@ 48
------------UPD SimpleName@@MethodName:getPersistentEntity:[Person.class] @TO@ MethodName:getRequiredPersistentEntity:[Person.class] @AT@ 2682 @LENGTH@ 33
------UPD SimpleName@@MethodName:thenReturn:[Optional.of(entity)] @TO@ MethodName:thenReturn:[entity] @AT@ 2717 @LENGTH@ 31
---------DEL MethodInvocation@@Optional.of(entity) @AT@ 2728 @LENGTH@ 19
------------DEL SimpleName@@Name:Optional @AT@ 2728 @LENGTH@ 8
------------DEL SimpleName@@MethodName:of:[entity] @AT@ 2737 @LENGTH@ 10
---------MOV SimpleName@@entity @TO@ SimpleName@@MethodName:thenReturn:[Optional.of(entity)] @AT@ 2740 @LENGTH@ 6


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && languageConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && languageConfiguration.getCustomizer().isEnabled(); @AT@ 4521 @LENGTH@ 159
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && languageConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && languageConfiguration.getCustomizer().isEnabled() @AT@ 4529 @LENGTH@ 150
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 4529 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && languageConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && languageConfiguration.getCustomizer().isEnabled() @AT@ 4546 @LENGTH@ 133
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 4546 @LENGTH@ 64
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 4546 @LENGTH@ 35
---------UPD MethodInvocation@@languageConfiguration.getConfigurer().isEnabled() @TO@ languageConfiguration.getCustomizer().isEnabled() @AT@ 4630 @LENGTH@ 49
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 4630 @LENGTH@ 37


INS MethodDeclaration@@public, String, MethodName:handleWithAnonymousQueueToDeclare, String data, Exception,  @TO@ TypeDeclaration@@[public, static]MyService,  @AT@ 27596 @LENGTH@ 117
---INS Modifier@@public @TO@ MethodDeclaration@@public, String, MethodName:handleWithAnonymousQueueToDeclare, String data, Exception,  @AT@ 27596 @LENGTH@ 6
---INS SimpleType@@String @TO@ MethodDeclaration@@public, String, MethodName:handleWithAnonymousQueueToDeclare, String data, Exception,  @AT@ 27603 @LENGTH@ 6
---INS SimpleName@@MethodName:handleWithAnonymousQueueToDeclare @TO@ MethodDeclaration@@public, String, MethodName:handleWithAnonymousQueueToDeclare, String data, Exception,  @AT@ 27610 @LENGTH@ 33
---INS SingleVariableDeclaration@@String data @TO@ MethodDeclaration@@public, String, MethodName:handleWithAnonymousQueueToDeclare, String data, Exception,  @AT@ 27644 @LENGTH@ 11
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String data @AT@ 27644 @LENGTH@ 6
------INS SimpleName@@data @TO@ SingleVariableDeclaration@@String data @AT@ 27651 @LENGTH@ 4
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, String, MethodName:handleWithAnonymousQueueToDeclare, String data, Exception,  @AT@ 27664 @LENGTH@ 9
---INS ReturnStatement@@InfixExpression:"viaAnonymous:" + data @TO@ MethodDeclaration@@public, String, MethodName:handleWithAnonymousQueueToDeclare, String data, Exception,  @AT@ 27679 @LENGTH@ 30
------INS InfixExpression@@"viaAnonymous:" + data @TO@ ReturnStatement@@InfixExpression:"viaAnonymous:" + data @AT@ 27686 @LENGTH@ 22
---------INS StringLiteral@@"viaAnonymous:" @TO@ InfixExpression@@"viaAnonymous:" + data @AT@ 27686 @LENGTH@ 15
---------INS Operator@@+ @TO@ InfixExpression@@"viaAnonymous:" + data @AT@ 27701 @LENGTH@ 1
---------INS SimpleName@@data @TO@ InfixExpression@@"viaAnonymous:" + data @AT@ 27704 @LENGTH@ 4


DEL ExpressionStatement@@MethodInvocation:System.out.println("all threads joined") @AT@ 9952 @LENGTH@ 41
---DEL MethodInvocation@@System.out.println("all threads joined") @AT@ 9952 @LENGTH@ 40
------DEL QualifiedName@@Name:System.out @AT@ 9952 @LENGTH@ 10
------DEL SimpleName@@MethodName:println:["all threads joined"] @AT@ 9963 @LENGTH@ 29
---------DEL StringLiteral@@"all threads joined" @AT@ 9971 @LENGTH@ 20


UPD FieldDeclaration@@private, static, long, [serialVersionUID=1L] @TO@ private, static, final, long, [serialVersionUID=1L] @AT@ 1160 @LENGTH@ 42
---INS Modifier@@final @TO@ FieldDeclaration@@private, static, long, [serialVersionUID=1L] @AT@ 1175 @LENGTH@ 5


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<TikaComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<TikaComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5395 @LENGTH@ 337
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 5399 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5399 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  ComponentCustomizer<TikaComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ ThenBody:{  for (  ComponentCustomizer<TikaComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5455 @LENGTH@ 277
------UPD EnhancedForStatement@@for (ComponentCustomizer<TikaComponent> configurer : customizers) {  LOGGER.debug("Configure component {}, with configurer {}",component,configurer);  configurer.customize(component);} @TO@ for (ComponentCustomizer<TikaComponent> customizer : customizers) {  LOGGER.debug("Configure component {}, with customizer {}",component,customizer);  customizer.customize(component);} @AT@ 5469 @LENGTH@ 253
---------UPD SingleVariableDeclaration@@ComponentCustomizer<TikaComponent> configurer @TO@ ComponentCustomizer<TikaComponent> customizer @AT@ 5474 @LENGTH@ 45
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5509 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5553 @LENGTH@ 106
------------UPD MethodInvocation@@LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5553 @LENGTH@ 105
---------------UPD SimpleName@@MethodName:debug:["Configure component {}, with configurer {}", component, configurer] @TO@ MethodName:debug:["Configure component {}, with customizer {}", component, customizer] @AT@ 5560 @LENGTH@ 98
------------------UPD StringLiteral@@"Configure component {}, with configurer {}" @TO@ "Configure component {}, with customizer {}" @AT@ 5566 @LENGTH@ 44
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5647 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(component) @TO@ MethodInvocation:customizer.customize(component) @AT@ 5676 @LENGTH@ 32
------------UPD MethodInvocation@@configurer.customize(component) @TO@ customizer.customize(component) @AT@ 5676 @LENGTH@ 31
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5676 @LENGTH@ 10


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<StAXComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<StAXComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5395 @LENGTH@ 337
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 5399 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5399 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  ComponentCustomizer<StAXComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ ThenBody:{  for (  ComponentCustomizer<StAXComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5455 @LENGTH@ 277
------UPD EnhancedForStatement@@for (ComponentCustomizer<StAXComponent> configurer : customizers) {  LOGGER.debug("Configure component {}, with configurer {}",component,configurer);  configurer.customize(component);} @TO@ for (ComponentCustomizer<StAXComponent> customizer : customizers) {  LOGGER.debug("Configure component {}, with customizer {}",component,customizer);  customizer.customize(component);} @AT@ 5469 @LENGTH@ 253
---------UPD SingleVariableDeclaration@@ComponentCustomizer<StAXComponent> configurer @TO@ ComponentCustomizer<StAXComponent> customizer @AT@ 5474 @LENGTH@ 45
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5509 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5553 @LENGTH@ 106
------------UPD MethodInvocation@@LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5553 @LENGTH@ 105
---------------UPD SimpleName@@MethodName:debug:["Configure component {}, with configurer {}", component, configurer] @TO@ MethodName:debug:["Configure component {}, with customizer {}", component, customizer] @AT@ 5560 @LENGTH@ 98
------------------UPD StringLiteral@@"Configure component {}, with configurer {}" @TO@ "Configure component {}, with customizer {}" @AT@ 5566 @LENGTH@ 44
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5647 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(component) @TO@ MethodInvocation:customizer.customize(component) @AT@ 5676 @LENGTH@ 32
------------UPD MethodInvocation@@configurer.customize(component) @TO@ customizer.customize(component) @AT@ 5676 @LENGTH@ 31
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5676 @LENGTH@ 10


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<XmlRpcComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<XmlRpcComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5429 @LENGTH@ 339
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 5433 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5433 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  ComponentCustomizer<XmlRpcComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ ThenBody:{  for (  ComponentCustomizer<XmlRpcComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5489 @LENGTH@ 279
------UPD EnhancedForStatement@@for (ComponentCustomizer<XmlRpcComponent> configurer : customizers) {  LOGGER.debug("Configure component {}, with configurer {}",component,configurer);  configurer.customize(component);} @TO@ for (ComponentCustomizer<XmlRpcComponent> customizer : customizers) {  LOGGER.debug("Configure component {}, with customizer {}",component,customizer);  customizer.customize(component);} @AT@ 5503 @LENGTH@ 255
---------UPD SingleVariableDeclaration@@ComponentCustomizer<XmlRpcComponent> configurer @TO@ ComponentCustomizer<XmlRpcComponent> customizer @AT@ 5508 @LENGTH@ 47
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5545 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5589 @LENGTH@ 106
------------UPD MethodInvocation@@LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5589 @LENGTH@ 105
---------------UPD SimpleName@@MethodName:debug:["Configure component {}, with configurer {}", component, configurer] @TO@ MethodName:debug:["Configure component {}, with customizer {}", component, customizer] @AT@ 5596 @LENGTH@ 98
------------------UPD StringLiteral@@"Configure component {}, with configurer {}" @TO@ "Configure component {}, with customizer {}" @AT@ 5602 @LENGTH@ 44
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5683 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(component) @TO@ MethodInvocation:customizer.customize(component) @AT@ 5712 @LENGTH@ 32
------------UPD MethodInvocation@@configurer.customize(component) @TO@ customizer.customize(component) @AT@ 5712 @LENGTH@ 31
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5712 @LENGTH@ 10


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<JingComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<JingComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5415 @LENGTH@ 337
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 5419 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5419 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  ComponentCustomizer<JingComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ ThenBody:{  for (  ComponentCustomizer<JingComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5475 @LENGTH@ 277
------UPD EnhancedForStatement@@for (ComponentCustomizer<JingComponent> configurer : customizers) {  LOGGER.debug("Configure component {}, with configurer {}",component,configurer);  configurer.customize(component);} @TO@ for (ComponentCustomizer<JingComponent> customizer : customizers) {  LOGGER.debug("Configure component {}, with customizer {}",component,customizer);  customizer.customize(component);} @AT@ 5489 @LENGTH@ 253
---------UPD SingleVariableDeclaration@@ComponentCustomizer<JingComponent> configurer @TO@ ComponentCustomizer<JingComponent> customizer @AT@ 5494 @LENGTH@ 45
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5529 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5573 @LENGTH@ 106
------------UPD MethodInvocation@@LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5573 @LENGTH@ 105
---------------UPD SimpleName@@MethodName:debug:["Configure component {}, with configurer {}", component, configurer] @TO@ MethodName:debug:["Configure component {}, with customizer {}", component, customizer] @AT@ 5580 @LENGTH@ 98
------------------UPD StringLiteral@@"Configure component {}, with configurer {}" @TO@ "Configure component {}, with customizer {}" @AT@ 5586 @LENGTH@ 44
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5667 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(component) @TO@ MethodInvocation:customizer.customize(component) @AT@ 5696 @LENGTH@ 32
------------UPD MethodInvocation@@configurer.customize(component) @TO@ customizer.customize(component) @AT@ 5696 @LENGTH@ 31
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5696 @LENGTH@ 10


UPD FieldDeclaration@@private, static, long, [serialVersionUID=1L] @TO@ private, static, final, long, [serialVersionUID=1L] @AT@ 1165 @LENGTH@ 42
---INS Modifier@@final @TO@ FieldDeclaration@@private, static, long, [serialVersionUID=1L] @AT@ 1180 @LENGTH@ 5


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled(); @AT@ 5209 @LENGTH@ 160
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5217 @LENGTH@ 151
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5217 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5234 @LENGTH@ 134
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 5234 @LENGTH@ 64
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5234 @LENGTH@ 35
---------UPD MethodInvocation@@componentConfiguration.getConfigurer().isEnabled() @TO@ componentConfiguration.getCustomizer().isEnabled() @AT@ 5318 @LENGTH@ 50
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5318 @LENGTH@ 38


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && languageConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && languageConfiguration.getCustomizer().isEnabled(); @AT@ 4503 @LENGTH@ 159
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && languageConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && languageConfiguration.getCustomizer().isEnabled() @AT@ 4511 @LENGTH@ 150
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 4511 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && languageConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && languageConfiguration.getCustomizer().isEnabled() @AT@ 4528 @LENGTH@ 133
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 4528 @LENGTH@ 64
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 4528 @LENGTH@ 35
---------UPD MethodInvocation@@languageConfiguration.getConfigurer().isEnabled() @TO@ languageConfiguration.getCustomizer().isEnabled() @AT@ 4612 @LENGTH@ 49
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 4612 @LENGTH@ 37


UPD ExpressionStatement@@MethodInvocation:assertTrue(repository.findOne(result.getId().toString()) instanceof Person) @TO@ MethodInvocation:assertTrue(repository.findOne(result.getId().toString()).get() instanceof Person) @AT@ 1667 @LENGTH@ 76
---UPD MethodInvocation@@assertTrue(repository.findOne(result.getId().toString()) instanceof Person) @TO@ assertTrue(repository.findOne(result.getId().toString()).get() instanceof Person) @AT@ 1667 @LENGTH@ 75
------UPD SimpleName@@MethodName:assertTrue:[repository.findOne(result.getId().toString()) instanceof Person] @TO@ MethodName:assertTrue:[repository.findOne(result.getId().toString()).get() instanceof Person] @AT@ 1667 @LENGTH@ 75
---------UPD InstanceofExpression@@repository.findOne(result.getId().toString()) instanceof Person @TO@ repository.findOne(result.getId().toString()).get() instanceof Person @AT@ 1678 @LENGTH@ 63
------------UPD MethodInvocation@@repository.findOne(result.getId().toString()) @TO@ repository.findOne(result.getId().toString()).get() @AT@ 1678 @LENGTH@ 45
---------------INS MethodInvocation@@MethodName:findOne:[result.getId().toString()] @TO@ MethodInvocation@@repository.findOne(result.getId().toString()) @AT@ 1678 @LENGTH@ 45
------------------INS MethodInvocation@@result.getId().toString() @TO@ MethodInvocation@@MethodName:findOne:[result.getId().toString()] @AT@ 1697 @LENGTH@ 25
---------------------MOV MethodInvocation@@MethodName:getId:[] @TO@ MethodInvocation@@result.getId().toString() @AT@ 1697 @LENGTH@ 14
---------------------MOV SimpleName@@Name:result @TO@ MethodInvocation@@result.getId().toString() @AT@ 1697 @LENGTH@ 6
---------------------MOV SimpleName@@MethodName:toString:[] @TO@ MethodInvocation@@result.getId().toString() @AT@ 1712 @LENGTH@ 10
---------------INS MethodInvocation@@MethodName:findOne:[result.getId().toString()] @TO@ MethodInvocation@@repository.findOne(result.getId().toString()) @AT@ 1678 @LENGTH@ 45
------------------INS MethodInvocation@@result.getId().toString() @TO@ MethodInvocation@@MethodName:findOne:[result.getId().toString()] @AT@ 1697 @LENGTH@ 25
---------------------MOV MethodInvocation@@MethodName:getId:[] @TO@ MethodInvocation@@result.getId().toString() @AT@ 1697 @LENGTH@ 14
---------------------MOV SimpleName@@Name:result @TO@ MethodInvocation@@result.getId().toString() @AT@ 1697 @LENGTH@ 6
---------------------MOV SimpleName@@MethodName:toString:[] @TO@ MethodInvocation@@result.getId().toString() @AT@ 1712 @LENGTH@ 10
---------------DEL SimpleName@@MethodName:findOne:[result.getId().toString()] @AT@ 1689 @LENGTH@ 34
------------------DEL MethodInvocation@@result.getId().toString() @AT@ 1697 @LENGTH@ 25
---------------INS SimpleName@@MethodName:get:[] @TO@ MethodInvocation@@repository.findOne(result.getId().toString()) @AT@ 1724 @LENGTH@ 5


INS ExpressionStatement@@MethodInvocation:assertNull(TestUtils.getPropertyValue(this.asyncTemplate,"taskScheduler")) @TO@ MethodDeclaration@@public, void, MethodName:testStopCancelled, Exception,  @AT@ 14199 @LENGTH@ 76
---INS MethodInvocation@@assertNull(TestUtils.getPropertyValue(this.asyncTemplate,"taskScheduler")) @TO@ ExpressionStatement@@MethodInvocation:assertNull(TestUtils.getPropertyValue(this.asyncTemplate,"taskScheduler")) @AT@ 14199 @LENGTH@ 75
------INS SimpleName@@MethodName:assertNull:[TestUtils.getPropertyValue(this.asyncTemplate,"taskScheduler")] @TO@ MethodInvocation@@assertNull(TestUtils.getPropertyValue(this.asyncTemplate,"taskScheduler")) @AT@ 14199 @LENGTH@ 75
---------INS MethodInvocation@@TestUtils.getPropertyValue(this.asyncTemplate,"taskScheduler") @TO@ SimpleName@@MethodName:assertNull:[TestUtils.getPropertyValue(this.asyncTemplate,"taskScheduler")] @AT@ 14210 @LENGTH@ 63
------------INS SimpleName@@Name:TestUtils @TO@ MethodInvocation@@TestUtils.getPropertyValue(this.asyncTemplate,"taskScheduler") @AT@ 14210 @LENGTH@ 9
------------INS SimpleName@@MethodName:getPropertyValue:[this.asyncTemplate, "taskScheduler"] @TO@ MethodInvocation@@TestUtils.getPropertyValue(this.asyncTemplate,"taskScheduler") @AT@ 14220 @LENGTH@ 53
---------------INS FieldAccess@@this.asyncTemplate @TO@ SimpleName@@MethodName:getPropertyValue:[this.asyncTemplate, "taskScheduler"] @AT@ 14237 @LENGTH@ 18
------------------INS ThisExpression@@this @TO@ FieldAccess@@this.asyncTemplate @AT@ 14237 @LENGTH@ 4
------------------INS SimpleName@@asyncTemplate @TO@ FieldAccess@@this.asyncTemplate @AT@ 14242 @LENGTH@ 13
---------------INS StringLiteral@@"taskScheduler" @TO@ SimpleName@@MethodName:getPropertyValue:[this.asyncTemplate, "taskScheduler"] @AT@ 14257 @LENGTH@ 15


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled(); @AT@ 5328 @LENGTH@ 160
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5336 @LENGTH@ 151
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5336 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5353 @LENGTH@ 134
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 5353 @LENGTH@ 64
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5353 @LENGTH@ 35
---------UPD MethodInvocation@@componentConfiguration.getConfigurer().isEnabled() @TO@ componentConfiguration.getCustomizer().isEnabled() @AT@ 5437 @LENGTH@ 50
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5437 @LENGTH@ 38


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled(); @AT@ 5315 @LENGTH@ 160
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5323 @LENGTH@ 151
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5323 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5340 @LENGTH@ 134
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 5340 @LENGTH@ 64
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5340 @LENGTH@ 35
---------UPD MethodInvocation@@componentConfiguration.getConfigurer().isEnabled() @TO@ componentConfiguration.getCustomizer().isEnabled() @AT@ 5424 @LENGTH@ 50
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5424 @LENGTH@ 38


UPD MethodDeclaration@@public, static, URI, MethodName:toUri, final Object value,  @TO@ public, static, URI, MethodName:toUri, final CharSequence value,  @AT@ 1315 @LENGTH@ 368
---UPD SingleVariableDeclaration@@final Object value @TO@ final CharSequence value @AT@ 1339 @LENGTH@ 18
------UPD SimpleType@@Object @TO@ CharSequence @AT@ 1345 @LENGTH@ 6
---DEL IfStatement@@if (value instanceof URI) {  return (URI)value;} @AT@ 1369 @LENGTH@ 68
------DEL InstanceofExpression@@value instanceof URI @AT@ 1373 @LENGTH@ 20
---------DEL SimpleName@@value @AT@ 1373 @LENGTH@ 5
---------DEL Instanceof@@instanceof @AT@ 1379 @LENGTH@ 10
---------DEL SimpleType@@URI @AT@ 1390 @LENGTH@ 3
------DEL Block@@ThenBody:{  return (URI)value;} @AT@ 1395 @LENGTH@ 42
---------DEL ReturnStatement@@CastExpression:(URI)value @AT@ 1409 @LENGTH@ 18
------------DEL CastExpression@@(URI)value @AT@ 1416 @LENGTH@ 10
---------------DEL SimpleType@@URI @AT@ 1417 @LENGTH@ 3
---------------DEL SimpleName@@value @AT@ 1421 @LENGTH@ 5


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<OpenShiftComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<OpenShiftComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5480 @LENGTH@ 342
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 5484 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5484 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  ComponentCustomizer<OpenShiftComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ ThenBody:{  for (  ComponentCustomizer<OpenShiftComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5540 @LENGTH@ 282
------UPD EnhancedForStatement@@for (ComponentCustomizer<OpenShiftComponent> configurer : customizers) {  LOGGER.debug("Configure component {}, with configurer {}",component,configurer);  configurer.customize(component);} @TO@ for (ComponentCustomizer<OpenShiftComponent> customizer : customizers) {  LOGGER.debug("Configure component {}, with customizer {}",component,customizer);  customizer.customize(component);} @AT@ 5554 @LENGTH@ 258
---------UPD SingleVariableDeclaration@@ComponentCustomizer<OpenShiftComponent> configurer @TO@ ComponentCustomizer<OpenShiftComponent> customizer @AT@ 5559 @LENGTH@ 50
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5599 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5643 @LENGTH@ 106
------------UPD MethodInvocation@@LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5643 @LENGTH@ 105
---------------UPD SimpleName@@MethodName:debug:["Configure component {}, with configurer {}", component, configurer] @TO@ MethodName:debug:["Configure component {}, with customizer {}", component, customizer] @AT@ 5650 @LENGTH@ 98
------------------UPD StringLiteral@@"Configure component {}, with configurer {}" @TO@ "Configure component {}, with customizer {}" @AT@ 5656 @LENGTH@ 44
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5737 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(component) @TO@ MethodInvocation:customizer.customize(component) @AT@ 5766 @LENGTH@ 32
------------UPD MethodInvocation@@configurer.customize(component) @TO@ customizer.customize(component) @AT@ 5766 @LENGTH@ 31
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5766 @LENGTH@ 10


UPD ExpressionStatement@@MethodInvocation:assertThat(context.getPersistentEntity(AbstractMap.class),is(nullValue())) @TO@ MethodInvocation:assertThat(context.getPersistentEntity(AbstractMap.class),is(Optional.empty())) @AT@ 2312 @LENGTH@ 76
---UPD MethodInvocation@@assertThat(context.getPersistentEntity(AbstractMap.class),is(nullValue())) @TO@ assertThat(context.getPersistentEntity(AbstractMap.class),is(Optional.empty())) @AT@ 2312 @LENGTH@ 75
------UPD SimpleName@@MethodName:assertThat:[context.getPersistentEntity(AbstractMap.class), is(nullValue())] @TO@ MethodName:assertThat:[context.getPersistentEntity(AbstractMap.class), is(Optional.empty())] @AT@ 2312 @LENGTH@ 75
---------UPD MethodInvocation@@is(nullValue()) @TO@ is(Optional.empty()) @AT@ 2371 @LENGTH@ 15
------------UPD SimpleName@@MethodName:is:[nullValue()] @TO@ MethodName:is:[Optional.empty()] @AT@ 2371 @LENGTH@ 15
---------------UPD MethodInvocation@@MethodName:nullValue:[] @TO@ Optional.empty() @AT@ 2374 @LENGTH@ 11
------------------INS SimpleName@@Name:Optional @TO@ MethodInvocation@@MethodName:nullValue:[] @AT@ 2406 @LENGTH@ 8
------------------INS SimpleName@@MethodName:empty:[] @TO@ MethodInvocation@@MethodName:nullValue:[] @AT@ 2415 @LENGTH@ 7
------------UPD SimpleName@@MethodName:is:[nullValue()] @TO@ MethodName:is:[Optional.empty()] @AT@ 2371 @LENGTH@ 15
---------------UPD MethodInvocation@@MethodName:nullValue:[] @TO@ Optional.empty() @AT@ 2374 @LENGTH@ 11
------------------INS SimpleName@@Name:Optional @TO@ MethodInvocation@@MethodName:nullValue:[] @AT@ 2406 @LENGTH@ 8
------------------INS SimpleName@@MethodName:empty:[] @TO@ MethodInvocation@@MethodName:nullValue:[] @AT@ 2415 @LENGTH@ 7


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled(); @AT@ 5226 @LENGTH@ 160
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5234 @LENGTH@ 151
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5234 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5251 @LENGTH@ 134
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 5251 @LENGTH@ 64
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5251 @LENGTH@ 35
---------UPD MethodInvocation@@componentConfiguration.getConfigurer().isEnabled() @TO@ componentConfiguration.getCustomizer().isEnabled() @AT@ 5335 @LENGTH@ 50
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5335 @LENGTH@ 38


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled(); @AT@ 5483 @LENGTH@ 160
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5491 @LENGTH@ 151
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5491 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5508 @LENGTH@ 134
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 5508 @LENGTH@ 64
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5508 @LENGTH@ 35
---------UPD MethodInvocation@@componentConfiguration.getConfigurer().isEnabled() @TO@ componentConfiguration.getCustomizer().isEnabled() @AT@ 5592 @LENGTH@ 50
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5592 @LENGTH@ 38


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  DataFormatCustomizer<AvroDataFormat> configurer : customizers) {    LOGGER.debug("Configure dataformat {}, with configurer {}",dataformat,configurer);    configurer.customize(dataformat);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  DataFormatCustomizer<AvroDataFormat> customizer : customizers) {    LOGGER.debug("Configure dataformat {}, with customizer {}",dataformat,customizer);    customizer.customize(dataformat);  }} @AT@ 5286 @LENGTH@ 423
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 5290 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5290 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  DataFormatCustomizer<AvroDataFormat> configurer : customizers) {    LOGGER.debug("Configure dataformat {}, with configurer {}",dataformat,configurer);    configurer.customize(dataformat);  }} @TO@ ThenBody:{  for (  DataFormatCustomizer<AvroDataFormat> customizer : customizers) {    LOGGER.debug("Configure dataformat {}, with customizer {}",dataformat,customizer);    customizer.customize(dataformat);  }} @AT@ 5346 @LENGTH@ 363
------UPD EnhancedForStatement@@for (DataFormatCustomizer<AvroDataFormat> configurer : customizers) {  LOGGER.debug("Configure dataformat {}, with configurer {}",dataformat,configurer);  configurer.customize(dataformat);} @TO@ for (DataFormatCustomizer<AvroDataFormat> customizer : customizers) {  LOGGER.debug("Configure dataformat {}, with customizer {}",dataformat,customizer);  customizer.customize(dataformat);} @AT@ 5368 @LENGTH@ 323
---------UPD SingleVariableDeclaration@@DataFormatCustomizer<AvroDataFormat> configurer @TO@ DataFormatCustomizer<AvroDataFormat> customizer @AT@ 5373 @LENGTH@ 47
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5410 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure dataformat {}, with configurer {}",dataformat,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure dataformat {}, with customizer {}",dataformat,customizer) @AT@ 5462 @LENGTH@ 149
------------UPD MethodInvocation@@LOGGER.debug("Configure dataformat {}, with configurer {}",dataformat,configurer) @TO@ LOGGER.debug("Configure dataformat {}, with customizer {}",dataformat,customizer) @AT@ 5462 @LENGTH@ 148
---------------UPD SimpleName@@MethodName:debug:["Configure dataformat {}, with configurer {}", dataformat, configurer] @TO@ MethodName:debug:["Configure dataformat {}, with customizer {}", dataformat, customizer] @AT@ 5469 @LENGTH@ 141
------------------UPD StringLiteral@@"Configure dataformat {}, with configurer {}" @TO@ "Configure dataformat {}, with customizer {}" @AT@ 5508 @LENGTH@ 45
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5599 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(dataformat) @TO@ MethodInvocation:customizer.customize(dataformat) @AT@ 5636 @LENGTH@ 33
------------UPD MethodInvocation@@configurer.customize(dataformat) @TO@ customizer.customize(dataformat) @AT@ 5636 @LENGTH@ 32
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5636 @LENGTH@ 10


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  LanguageCustomizer<XMLTokenizeLanguage> configurer : customizers) {    LOGGER.debug("Configure language {}, with configurer {}",language,configurer);    configurer.customize(language);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  LanguageCustomizer<XMLTokenizeLanguage> customizer : customizers) {    LOGGER.debug("Configure language {}, with customizer {}",language,customizer);    customizer.customize(language);  }} @AT@ 4807 @LENGTH@ 339
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 4811 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 4811 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  LanguageCustomizer<XMLTokenizeLanguage> configurer : customizers) {    LOGGER.debug("Configure language {}, with configurer {}",language,configurer);    configurer.customize(language);  }} @TO@ ThenBody:{  for (  LanguageCustomizer<XMLTokenizeLanguage> customizer : customizers) {    LOGGER.debug("Configure language {}, with customizer {}",language,customizer);    customizer.customize(language);  }} @AT@ 4867 @LENGTH@ 279
------UPD EnhancedForStatement@@for (LanguageCustomizer<XMLTokenizeLanguage> configurer : customizers) {  LOGGER.debug("Configure language {}, with configurer {}",language,configurer);  configurer.customize(language);} @TO@ for (LanguageCustomizer<XMLTokenizeLanguage> customizer : customizers) {  LOGGER.debug("Configure language {}, with customizer {}",language,customizer);  customizer.customize(language);} @AT@ 4881 @LENGTH@ 255
---------UPD SingleVariableDeclaration@@LanguageCustomizer<XMLTokenizeLanguage> configurer @TO@ LanguageCustomizer<XMLTokenizeLanguage> customizer @AT@ 4886 @LENGTH@ 50
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 4926 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure language {}, with configurer {}",language,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure language {}, with customizer {}",language,customizer) @AT@ 4970 @LENGTH@ 104
------------UPD MethodInvocation@@LOGGER.debug("Configure language {}, with configurer {}",language,configurer) @TO@ LOGGER.debug("Configure language {}, with customizer {}",language,customizer) @AT@ 4970 @LENGTH@ 103
---------------UPD SimpleName@@MethodName:debug:["Configure language {}, with configurer {}", language, configurer] @TO@ MethodName:debug:["Configure language {}, with customizer {}", language, customizer] @AT@ 4977 @LENGTH@ 96
------------------UPD StringLiteral@@"Configure language {}, with configurer {}" @TO@ "Configure language {}, with customizer {}" @AT@ 4983 @LENGTH@ 43
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5062 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(language) @TO@ MethodInvocation:customizer.customize(language) @AT@ 5091 @LENGTH@ 31
------------UPD MethodInvocation@@configurer.customize(language) @TO@ customizer.customize(language) @AT@ 5091 @LENGTH@ 30
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5091 @LENGTH@ 10


UPD ExpressionStatement@@MethodInvocation:pushFeed(FeedType.DYNAMIC_PARTITIONS,dps) @TO@ MethodInvocation:pushFeed(FeedType.DYNAMIC_PARTITIONS,dp.values()) @AT@ 20094 @LENGTH@ 43
---UPD MethodInvocation@@pushFeed(FeedType.DYNAMIC_PARTITIONS,dps) @TO@ pushFeed(FeedType.DYNAMIC_PARTITIONS,dp.values()) @AT@ 20094 @LENGTH@ 42
------UPD SimpleName@@MethodName:pushFeed:[FeedType.DYNAMIC_PARTITIONS, dps] @TO@ MethodName:pushFeed:[FeedType.DYNAMIC_PARTITIONS, dp.values()] @AT@ 20094 @LENGTH@ 42
---------INS MethodInvocation@@dp.values() @TO@ SimpleName@@MethodName:pushFeed:[FeedType.DYNAMIC_PARTITIONS, dps] @AT@ 20132 @LENGTH@ 11
------------INS SimpleName@@Name:dp @TO@ MethodInvocation@@dp.values() @AT@ 20132 @LENGTH@ 2
------------INS SimpleName@@MethodName:values:[] @TO@ MethodInvocation@@dp.values() @AT@ 20135 @LENGTH@ 8
---------DEL SimpleName@@dps @AT@ 20132 @LENGTH@ 3


UPD MethodDeclaration@@public, void, MethodName:createsMongoClinetWithServerSelectionTimeoutCorrectly,  @TO@ public, void, MethodName:createsMongoClientWithServerSelectionTimeoutCorrectly,  @AT@ 3901 @LENGTH@ 570
---UPD SimpleName@@MethodName:createsMongoClinetWithServerSelectionTimeoutCorrectly @TO@ MethodName:createsMongoClientWithServerSelectionTimeoutCorrectly @AT@ 3913 @LENGTH@ 53


UPD ReturnStatement@@MethodInvocation:multiHashOrdered(parentHashCode(),4397,name.hashCode()) @TO@ MethodInvocation:multiHashUnordered(parentHashCode(),4397,name.hashCode()) @AT@ 1582 @LENGTH@ 65
---UPD MethodInvocation@@multiHashOrdered(parentHashCode(),4397,name.hashCode()) @TO@ multiHashUnordered(parentHashCode(),4397,name.hashCode()) @AT@ 1589 @LENGTH@ 57
------UPD SimpleName@@MethodName:multiHashOrdered:[parentHashCode(), 4397, name.hashCode()] @TO@ MethodName:multiHashUnordered:[parentHashCode(), 4397, name.hashCode()] @AT@ 1589 @LENGTH@ 57


UPD TypeDeclaration@@[public]JwkDefinitionSourceTest,  @TO@ [@RunWith(PowerMockRunner.class), @PrepareForTest(JwkDefinitionSource.class), public]JwkDefinitionSourceTest,  @AT@ 782 @LENGTH@ 754
---INS SingleMemberAnnotation@@@RunWith(PowerMockRunner.class) @TO@ TypeDeclaration@@[public]JwkDefinitionSourceTest,  @AT@ 1089 @LENGTH@ 31
---INS SingleMemberAnnotation@@@PrepareForTest(JwkDefinitionSource.class) @TO@ TypeDeclaration@@[public]JwkDefinitionSourceTest,  @AT@ 1121 @LENGTH@ 42


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled(); @AT@ 5483 @LENGTH@ 160
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5491 @LENGTH@ 151
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5491 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5508 @LENGTH@ 134
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 5508 @LENGTH@ 64
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5508 @LENGTH@ 35
---------UPD MethodInvocation@@componentConfiguration.getConfigurer().isEnabled() @TO@ componentConfiguration.getCustomizer().isEnabled() @AT@ 5592 @LENGTH@ 50
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5592 @LENGTH@ 38


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled(); @AT@ 5277 @LENGTH@ 160
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5285 @LENGTH@ 151
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5285 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5302 @LENGTH@ 134
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 5302 @LENGTH@ 64
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5302 @LENGTH@ 35
---------UPD MethodInvocation@@componentConfiguration.getConfigurer().isEnabled() @TO@ componentConfiguration.getCustomizer().isEnabled() @AT@ 5386 @LENGTH@ 50
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5386 @LENGTH@ 38


UPD ExpressionStatement@@MethodInvocation:restConfiguration().producerComponent("dummy").producerApiDoc("hello-api.json") @TO@ MethodInvocation:restConfiguration().host("camelhost").producerComponent("dummy").producerApiDoc("hello-api.json") @AT@ 1824 @LENGTH@ 80
---UPD MethodInvocation@@restConfiguration().producerComponent("dummy").producerApiDoc("hello-api.json") @TO@ restConfiguration().host("camelhost").producerComponent("dummy").producerApiDoc("hello-api.json") @AT@ 1824 @LENGTH@ 79
------INS MethodInvocation@@MethodName:host:["camelhost"] @TO@ MethodInvocation@@restConfiguration().producerComponent("dummy").producerApiDoc("hello-api.json") @AT@ 1824 @LENGTH@ 37
---------INS StringLiteral@@"camelhost" @TO@ MethodInvocation@@MethodName:host:["camelhost"] @AT@ 1849 @LENGTH@ 11


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<AtmosComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<AtmosComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5412 @LENGTH@ 338
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 5416 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5416 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  ComponentCustomizer<AtmosComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ ThenBody:{  for (  ComponentCustomizer<AtmosComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5472 @LENGTH@ 278
------UPD EnhancedForStatement@@for (ComponentCustomizer<AtmosComponent> configurer : customizers) {  LOGGER.debug("Configure component {}, with configurer {}",component,configurer);  configurer.customize(component);} @TO@ for (ComponentCustomizer<AtmosComponent> customizer : customizers) {  LOGGER.debug("Configure component {}, with customizer {}",component,customizer);  customizer.customize(component);} @AT@ 5486 @LENGTH@ 254
---------UPD SingleVariableDeclaration@@ComponentCustomizer<AtmosComponent> configurer @TO@ ComponentCustomizer<AtmosComponent> customizer @AT@ 5491 @LENGTH@ 46
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5527 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5571 @LENGTH@ 106
------------UPD MethodInvocation@@LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5571 @LENGTH@ 105
---------------UPD SimpleName@@MethodName:debug:["Configure component {}, with configurer {}", component, configurer] @TO@ MethodName:debug:["Configure component {}, with customizer {}", component, customizer] @AT@ 5578 @LENGTH@ 98
------------------UPD StringLiteral@@"Configure component {}, with configurer {}" @TO@ "Configure component {}, with customizer {}" @AT@ 5584 @LENGTH@ 44
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5665 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(component) @TO@ MethodInvocation:customizer.customize(component) @AT@ 5694 @LENGTH@ 32
------------UPD MethodInvocation@@configurer.customize(component) @TO@ customizer.customize(component) @AT@ 5694 @LENGTH@ 31
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5694 @LENGTH@ 10


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && languageConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && languageConfiguration.getCustomizer().isEnabled(); @AT@ 4557 @LENGTH@ 159
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && languageConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && languageConfiguration.getCustomizer().isEnabled() @AT@ 4565 @LENGTH@ 150
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 4565 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && languageConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && languageConfiguration.getCustomizer().isEnabled() @AT@ 4582 @LENGTH@ 133
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 4582 @LENGTH@ 64
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 4582 @LENGTH@ 35
---------UPD MethodInvocation@@languageConfiguration.getConfigurer().isEnabled() @TO@ languageConfiguration.getCustomizer().isEnabled() @AT@ 4666 @LENGTH@ 49
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 4666 @LENGTH@ 37


UPD FieldDeclaration@@private, final, Pattern, [SHARD_ITERATOR_PATTERN=Pattern.compile("shard_iterator_d_0*(\\d+)")] @TO@ private, final, Pattern, [shardIteratorPattern=Pattern.compile("shard_iterator_d_0*(\\d+)")] @AT@ 8222 @LENGTH@ 92
---UPD VariableDeclarationFragment@@SHARD_ITERATOR_PATTERN=Pattern.compile("shard_iterator_d_0*(\\d+)") @TO@ shardIteratorPattern=Pattern.compile("shard_iterator_d_0*(\\d+)") @AT@ 8244 @LENGTH@ 69
------UPD SimpleName@@SHARD_ITERATOR_PATTERN @TO@ shardIteratorPattern @AT@ 8244 @LENGTH@ 22


UPD TypeDeclaration@@[@RunWith(Arquillian.class), @RunAsClient, @ServerSetup(ArchiveValidationDeploymentTestCase.ArchiveValidationDeploymentTestCaseSetup.class), @Ignore("AS7-4188"), public]ArchiveValidationDeploymentTestCase, JcaMgmtBase @TO@ [@RunWith(Arquillian.class), @RunAsClient, @ServerSetup(ArchiveValidationDeploymentTestCase.ArchiveValidationDeploymentTestCaseSetup.class), public]ArchiveValidationDeploymentTestCase, JcaMgmtBase @AT@ 2409 @LENGTH@ 5712
---DEL SingleMemberAnnotation@@@Ignore("AS7-4188") @AT@ 2546 @LENGTH@ 19


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled(); @AT@ 5357 @LENGTH@ 160
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5365 @LENGTH@ 151
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5365 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5382 @LENGTH@ 134
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 5382 @LENGTH@ 64
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5382 @LENGTH@ 35
---------UPD MethodInvocation@@componentConfiguration.getConfigurer().isEnabled() @TO@ componentConfiguration.getCustomizer().isEnabled() @AT@ 5466 @LENGTH@ 50
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5466 @LENGTH@ 38


UPD ReturnStatement@@MethodInvocation:multiHashOrdered(parentHashCode(),28493,realm.hashCode()) @TO@ MethodInvocation:multiHashUnordered(parentHashCode(),28493,realm.hashCode()) @AT@ 3092 @LENGTH@ 67
---UPD MethodInvocation@@multiHashOrdered(parentHashCode(),28493,realm.hashCode()) @TO@ multiHashUnordered(parentHashCode(),28493,realm.hashCode()) @AT@ 3099 @LENGTH@ 59
------UPD SimpleName@@MethodName:multiHashOrdered:[parentHashCode(), 28493, realm.hashCode()] @TO@ MethodName:multiHashUnordered:[parentHashCode(), 28493, realm.hashCode()] @AT@ 3099 @LENGTH@ 59


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled(); @AT@ 5328 @LENGTH@ 160
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5336 @LENGTH@ 151
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5336 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5353 @LENGTH@ 134
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 5353 @LENGTH@ 64
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5353 @LENGTH@ 35
---------UPD MethodInvocation@@componentConfiguration.getConfigurer().isEnabled() @TO@ componentConfiguration.getCustomizer().isEnabled() @AT@ 5437 @LENGTH@ 50
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5437 @LENGTH@ 38


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled(); @AT@ 5260 @LENGTH@ 160
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5268 @LENGTH@ 151
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5268 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5285 @LENGTH@ 134
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 5285 @LENGTH@ 64
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5285 @LENGTH@ 35
---------UPD MethodInvocation@@componentConfiguration.getConfigurer().isEnabled() @TO@ componentConfiguration.getCustomizer().isEnabled() @AT@ 5369 @LENGTH@ 50
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5369 @LENGTH@ 38


UPD IfStatement@@if (message.isPresent()) {  sb.append(ESCAPED_QUOTE).append(DATA).append("\": {");  Map<String,Object> atts=message.get();  int i=0;  for (  String key : atts.keySet()) {    sb.append(ESCAPED_QUOTE).append(key).append("\":").append(encode(atts.get(key)));    if (i < atts.keySet().size() - 1) {      sb.append(",");    }    i++;  }  sb.append("}");} @TO@ if (message.isPresent()) {  sb.append(",");  sb.append(ESCAPED_QUOTE).append(DATA).append("\": {");  Map<String,Object> atts=message.get();  int i=0;  for (  String key : atts.keySet()) {    sb.append(ESCAPED_QUOTE).append(key).append("\":").append(encode(atts.get(key)));    if (i < atts.keySet().size() - 1) {      sb.append(",");    }    i++;  }  sb.append("}");} @AT@ 2955 @LENGTH@ 494
---UPD Block@@ThenBody:{  sb.append(ESCAPED_QUOTE).append(DATA).append("\": {");  Map<String,Object> atts=message.get();  int i=0;  for (  String key : atts.keySet()) {    sb.append(ESCAPED_QUOTE).append(key).append("\":").append(encode(atts.get(key)));    if (i < atts.keySet().size() - 1) {      sb.append(",");    }    i++;  }  sb.append("}");} @TO@ ThenBody:{  sb.append(",");  sb.append(ESCAPED_QUOTE).append(DATA).append("\": {");  Map<String,Object> atts=message.get();  int i=0;  for (  String key : atts.keySet()) {    sb.append(ESCAPED_QUOTE).append(key).append("\":").append(encode(atts.get(key)));    if (i < atts.keySet().size() - 1) {      sb.append(",");    }    i++;  }  sb.append("}");} @AT@ 2980 @LENGTH@ 469
------INS ExpressionStatement@@MethodInvocation:sb.append(",") @TO@ Block@@ThenBody:{  sb.append(ESCAPED_QUOTE).append(DATA).append("\": {");  Map<String,Object> atts=message.get();  int i=0;  for (  String key : atts.keySet()) {    sb.append(ESCAPED_QUOTE).append(key).append("\":").append(encode(atts.get(key)));    if (i < atts.keySet().size() - 1) {      sb.append(",");    }    i++;  }  sb.append("}");} @AT@ 2993 @LENGTH@ 15
---------INS MethodInvocation@@sb.append(",") @TO@ ExpressionStatement@@MethodInvocation:sb.append(",") @AT@ 2993 @LENGTH@ 14
------------INS SimpleName@@Name:sb @TO@ MethodInvocation@@sb.append(",") @AT@ 2993 @LENGTH@ 2
------------INS SimpleName@@MethodName:append:[","] @TO@ MethodInvocation@@sb.append(",") @AT@ 2996 @LENGTH@ 11
---------------INS StringLiteral@@"," @TO@ SimpleName@@MethodName:append:[","] @AT@ 3003 @LENGTH@ 3


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled(); @AT@ 5246 @LENGTH@ 160
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5254 @LENGTH@ 151
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5254 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5271 @LENGTH@ 134
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 5271 @LENGTH@ 64
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5271 @LENGTH@ 35
---------UPD MethodInvocation@@componentConfiguration.getConfigurer().isEnabled() @TO@ componentConfiguration.getCustomizer().isEnabled() @AT@ 5355 @LENGTH@ 50
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5355 @LENGTH@ 38


UPD MethodDeclaration@@protected, void, MethodName:runWork, ExecutionContext ctx, WorkCompletedException,  @TO@ protected, void, MethodName:runWork, WorkCompletedException,  @AT@ 2249 @LENGTH@ 827
---DEL SingleVariableDeclaration@@ExecutionContext ctx @AT@ 2272 @LENGTH@ 20
------DEL SimpleType@@ExecutionContext @AT@ 2272 @LENGTH@ 16
------DEL SimpleName@@ctx @AT@ 2289 @LENGTH@ 3
---UPD IfStatement@@if (securityIntegration.getSecurityContext() != null && ((CallbackImpl)workManager.getCallbackSecurity()).isElytronEnabled()) ((ElytronSecurityContext)securityIntegration.getSecurityContext()).runWork(() -> {  try {    WildflyWorkWrapper.super.runWork(ctx);  } catch (  WorkCompletedException e) {    e.printStackTrace();  }}); else super.runWork(ctx); @TO@ if (securityIntegration.getSecurityContext() != null && ((CallbackImpl)workManager.getCallbackSecurity()).isElytronEnabled()) ((ElytronSecurityContext)securityIntegration.getSecurityContext()).runWork(() -> {  try {    WildflyWorkWrapper.super.runWork();  } catch (  WorkCompletedException e) {    e.printStackTrace();  }}); else super.runWork(); @AT@ 2524 @LENGTH@ 546
------UPD Block@@ThenBody:((ElytronSecurityContext)securityIntegration.getSecurityContext()).runWork(() -> {  try {    WildflyWorkWrapper.super.runWork(ctx);  } catch (  WorkCompletedException e) {    e.printStackTrace();  }}); @TO@ ThenBody:((ElytronSecurityContext)securityIntegration.getSecurityContext()).runWork(() -> {  try {    WildflyWorkWrapper.super.runWork();  } catch (  WorkCompletedException e) {    e.printStackTrace();  }}); @AT@ 2679 @LENGTH@ 292
---------UPD ExpressionStatement@@MethodInvocation:((ElytronSecurityContext)securityIntegration.getSecurityContext()).runWork(() -> {
  try {
    WildflyWorkWrapper.super.runWork(ctx);
  }
 catch (  WorkCompletedException e) {
    e.printStackTrace();
  }
}
) @TO@ MethodInvocation:((ElytronSecurityContext)securityIntegration.getSecurityContext()).runWork(() -> {
  try {
    WildflyWorkWrapper.super.runWork();
  }
 catch (  WorkCompletedException e) {
    e.printStackTrace();
  }
}
) @AT@ 2679 @LENGTH@ 292
------------UPD MethodInvocation@@((ElytronSecurityContext)securityIntegration.getSecurityContext()).runWork(() -> {
  try {
    WildflyWorkWrapper.super.runWork(ctx);
  }
 catch (  WorkCompletedException e) {
    e.printStackTrace();
  }
}
) @TO@ ((ElytronSecurityContext)securityIntegration.getSecurityContext()).runWork(() -> {
  try {
    WildflyWorkWrapper.super.runWork();
  }
 catch (  WorkCompletedException e) {
    e.printStackTrace();
  }
}
) @AT@ 2679 @LENGTH@ 291
---------------UPD SimpleName@@MethodName:runWork:[() -> {
  try {
    WildflyWorkWrapper.super.runWork(ctx);
  }
 catch (  WorkCompletedException e) {
    e.printStackTrace();
  }
}
] @TO@ MethodName:runWork:[() -> {
  try {
    WildflyWorkWrapper.super.runWork();
  }
 catch (  WorkCompletedException e) {
    e.printStackTrace();
  }
}
] @AT@ 2747 @LENGTH@ 223
------------------UPD LambdaExpression@@() -> {
  try {
    WildflyWorkWrapper.super.runWork(ctx);
  }
 catch (  WorkCompletedException e) {
    e.printStackTrace();
  }
}
 @TO@ () -> {
  try {
    WildflyWorkWrapper.super.runWork();
  }
 catch (  WorkCompletedException e) {
    e.printStackTrace();
  }
}
 @AT@ 2755 @LENGTH@ 214
---------------------UPD TryStatement@@try {  WildflyWorkWrapper.super.runWork(ctx);} catch (WorkCompletedException e) {  e.printStackTrace();} @TO@ try {  WildflyWorkWrapper.super.runWork();} catch (WorkCompletedException e) {  e.printStackTrace();} @AT@ 2779 @LENGTH@ 176
------------------------UPD ExpressionStatement@@SuperMethodInvocation:WildflyWorkWrapper.super.runWork(ctx) @TO@ SuperMethodInvocation:WildflyWorkWrapper.super.runWork() @AT@ 2805 @LENGTH@ 38
---------------------------UPD SuperMethodInvocation@@WildflyWorkWrapper.super.runWork(ctx) @TO@ WildflyWorkWrapper.super.runWork() @AT@ 2805 @LENGTH@ 37
------------------------------UPD SimpleName@@MethodName:runWork:[ctx] @TO@ MethodName:runWork:[] @AT@ 2830 @LENGTH@ 7
------------------------------DEL SimpleName@@ctx @AT@ 2838 @LENGTH@ 3
------UPD Block@@ElseBody:super.runWork(ctx); @TO@ ElseBody:super.runWork(); @AT@ 3051 @LENGTH@ 19
---------UPD ExpressionStatement@@SuperMethodInvocation:super.runWork(ctx) @TO@ SuperMethodInvocation:super.runWork() @AT@ 3051 @LENGTH@ 19
------------UPD SuperMethodInvocation@@super.runWork(ctx) @TO@ super.runWork() @AT@ 3051 @LENGTH@ 18
---------------UPD SimpleName@@MethodName:runWork:[ctx] @TO@ MethodName:runWork:[] @AT@ 3057 @LENGTH@ 7
---------------DEL SimpleName@@ctx @AT@ 3065 @LENGTH@ 3


UPD VariableDeclarationStatement@@File base=new File("."); @TO@ File base=new File(""); @AT@ 3636 @LENGTH@ 26
---UPD VariableDeclarationFragment@@base=new File(".") @TO@ base=new File("") @AT@ 3641 @LENGTH@ 20
------UPD ClassInstanceCreation@@File["."] @TO@ File[""] @AT@ 3648 @LENGTH@ 13
---------UPD StringLiteral@@"." @TO@ "" @AT@ 3657 @LENGTH@ 3


UPD FieldDeclaration@@private, boolean, [logMask=false] @TO@ private, boolean, [logMask] @AT@ 9140 @LENGTH@ 32
---UPD VariableDeclarationFragment@@logMask=false @TO@ logMask @AT@ 9156 @LENGTH@ 15
------DEL BooleanLiteral@@false @AT@ 9166 @LENGTH@ 5


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled(); @AT@ 5361 @LENGTH@ 160
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5369 @LENGTH@ 151
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5369 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5386 @LENGTH@ 134
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 5386 @LENGTH@ 64
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5386 @LENGTH@ 35
---------UPD MethodInvocation@@componentConfiguration.getConfigurer().isEnabled() @TO@ componentConfiguration.getCustomizer().isEnabled() @AT@ 5470 @LENGTH@ 50
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5470 @LENGTH@ 38


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<SchematronComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<SchematronComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5497 @LENGTH@ 343
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 5501 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5501 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  ComponentCustomizer<SchematronComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ ThenBody:{  for (  ComponentCustomizer<SchematronComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5557 @LENGTH@ 283
------UPD EnhancedForStatement@@for (ComponentCustomizer<SchematronComponent> configurer : customizers) {  LOGGER.debug("Configure component {}, with configurer {}",component,configurer);  configurer.customize(component);} @TO@ for (ComponentCustomizer<SchematronComponent> customizer : customizers) {  LOGGER.debug("Configure component {}, with customizer {}",component,customizer);  customizer.customize(component);} @AT@ 5571 @LENGTH@ 259
---------UPD SingleVariableDeclaration@@ComponentCustomizer<SchematronComponent> configurer @TO@ ComponentCustomizer<SchematronComponent> customizer @AT@ 5576 @LENGTH@ 51
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5617 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5661 @LENGTH@ 106
------------UPD MethodInvocation@@LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5661 @LENGTH@ 105
---------------UPD SimpleName@@MethodName:debug:["Configure component {}, with configurer {}", component, configurer] @TO@ MethodName:debug:["Configure component {}, with customizer {}", component, customizer] @AT@ 5668 @LENGTH@ 98
------------------UPD StringLiteral@@"Configure component {}, with configurer {}" @TO@ "Configure component {}, with customizer {}" @AT@ 5674 @LENGTH@ 44
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5755 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(component) @TO@ MethodInvocation:customizer.customize(component) @AT@ 5784 @LENGTH@ 32
------------UPD MethodInvocation@@configurer.customize(component) @TO@ customizer.customize(component) @AT@ 5784 @LENGTH@ 31
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5784 @LENGTH@ 10


UPD VariableDeclarationStatement@@Matcher matcher=pattern.matcher(value); @TO@ Matcher matcher=PATTERN.matcher(value); @AT@ 2270 @LENGTH@ 41
---UPD VariableDeclarationFragment@@matcher=pattern.matcher(value) @TO@ matcher=PATTERN.matcher(value) @AT@ 2278 @LENGTH@ 32
------UPD MethodInvocation@@pattern.matcher(value) @TO@ PATTERN.matcher(value) @AT@ 2288 @LENGTH@ 22
---------UPD SimpleName@@Name:pattern @TO@ Name:PATTERN @AT@ 2288 @LENGTH@ 7


UPD ExpressionStatement@@MethodInvocation:Whitebox.setInternalState(validator,"logger",logger) @TO@ MethodInvocation:ReflectionTestUtils.setField(validator,"logger",logger) @AT@ 3192 @LENGTH@ 55
---UPD MethodInvocation@@Whitebox.setInternalState(validator,"logger",logger) @TO@ ReflectionTestUtils.setField(validator,"logger",logger) @AT@ 3192 @LENGTH@ 54
------UPD SimpleName@@Name:Whitebox @TO@ Name:ReflectionTestUtils @AT@ 3192 @LENGTH@ 8
------UPD SimpleName@@MethodName:setInternalState:[validator, "logger", logger] @TO@ MethodName:setField:[validator, "logger", logger] @AT@ 3201 @LENGTH@ 45


INS MethodDeclaration@@User, MethodName:findOneWithDeepGraphById, Integer id,  @TO@ TypeDeclaration@@[public]RepositoryMethodsWithEntityGraphConfigRepository, [CrudRepository<User,Integer>, QuerydslPredicateExecutor<User>] @AT@ 2644 @LENGTH@ 37
---INS SimpleType@@User @TO@ MethodDeclaration@@User, MethodName:findOneWithDeepGraphById, Integer id,  @AT@ 2639 @LENGTH@ 4
---INS SimpleName@@MethodName:findOneWithDeepGraphById @TO@ MethodDeclaration@@User, MethodName:findOneWithDeepGraphById, Integer id,  @AT@ 2644 @LENGTH@ 24
---INS SingleVariableDeclaration@@Integer id @TO@ MethodDeclaration@@User, MethodName:findOneWithDeepGraphById, Integer id,  @AT@ 2669 @LENGTH@ 10
------INS SimpleType@@Integer @TO@ SingleVariableDeclaration@@Integer id @AT@ 2669 @LENGTH@ 7
------INS SimpleName@@id @TO@ SingleVariableDeclaration@@Integer id @AT@ 2677 @LENGTH@ 2


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<RedisComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<RedisComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5426 @LENGTH@ 338
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 5430 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5430 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  ComponentCustomizer<RedisComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ ThenBody:{  for (  ComponentCustomizer<RedisComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5486 @LENGTH@ 278
------UPD EnhancedForStatement@@for (ComponentCustomizer<RedisComponent> configurer : customizers) {  LOGGER.debug("Configure component {}, with configurer {}",component,configurer);  configurer.customize(component);} @TO@ for (ComponentCustomizer<RedisComponent> customizer : customizers) {  LOGGER.debug("Configure component {}, with customizer {}",component,customizer);  customizer.customize(component);} @AT@ 5500 @LENGTH@ 254
---------UPD SingleVariableDeclaration@@ComponentCustomizer<RedisComponent> configurer @TO@ ComponentCustomizer<RedisComponent> customizer @AT@ 5505 @LENGTH@ 46
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5541 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5585 @LENGTH@ 106
------------UPD MethodInvocation@@LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5585 @LENGTH@ 105
---------------UPD SimpleName@@MethodName:debug:["Configure component {}, with configurer {}", component, configurer] @TO@ MethodName:debug:["Configure component {}, with customizer {}", component, customizer] @AT@ 5592 @LENGTH@ 98
------------------UPD StringLiteral@@"Configure component {}, with configurer {}" @TO@ "Configure component {}, with customizer {}" @AT@ 5598 @LENGTH@ 44
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5679 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(component) @TO@ MethodInvocation:customizer.customize(component) @AT@ 5708 @LENGTH@ 32
------------UPD MethodInvocation@@configurer.customize(component) @TO@ customizer.customize(component) @AT@ 5708 @LENGTH@ 31
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5708 @LENGTH@ 10


UPD VariableDeclarationStatement@@BasicMongoPersistentEntity<?> entity=mappingContext.getPersistentEntity(Entity.class); @TO@ BasicMongoPersistentEntity<?> entity=mappingContext.getRequiredPersistentEntity(Entity.class); @AT@ 4041 @LENGTH@ 88
---UPD VariableDeclarationFragment@@entity=mappingContext.getPersistentEntity(Entity.class) @TO@ entity=mappingContext.getRequiredPersistentEntity(Entity.class) @AT@ 4071 @LENGTH@ 57
------UPD MethodInvocation@@mappingContext.getPersistentEntity(Entity.class) @TO@ mappingContext.getRequiredPersistentEntity(Entity.class) @AT@ 4080 @LENGTH@ 48
---------UPD SimpleName@@MethodName:getPersistentEntity:[Entity.class] @TO@ MethodName:getRequiredPersistentEntity:[Entity.class] @AT@ 4095 @LENGTH@ 33


INS IfStatement@@if ("test-jar".equals(typeCode)) {  return TESTJAR;} @TO@ MethodDeclaration@@public, static, DependencyType, MethodName:valueOfTypeCode, final String typeCode,  @AT@ 1664 @LENGTH@ 62
---INS MethodInvocation@@"test-jar".equals(typeCode) @TO@ IfStatement@@if ("test-jar".equals(typeCode)) {  return TESTJAR;} @AT@ 1668 @LENGTH@ 27
------INS StringLiteral@@"test-jar" @TO@ MethodInvocation@@"test-jar".equals(typeCode) @AT@ 1668 @LENGTH@ 10
------INS SimpleName@@MethodName:equals:[typeCode] @TO@ MethodInvocation@@"test-jar".equals(typeCode) @AT@ 1679 @LENGTH@ 16
---------INS SimpleName@@typeCode @TO@ SimpleName@@MethodName:equals:[typeCode] @AT@ 1686 @LENGTH@ 8
---INS Block@@ThenBody:{  return TESTJAR;} @TO@ IfStatement@@if ("test-jar".equals(typeCode)) {  return TESTJAR;} @AT@ 1697 @LENGTH@ 29
------INS ReturnStatement@@SimpleName:TESTJAR @TO@ Block@@ThenBody:{  return TESTJAR;} @AT@ 1705 @LENGTH@ 15
---------INS SimpleName@@TESTJAR @TO@ ReturnStatement@@SimpleName:TESTJAR @AT@ 1712 @LENGTH@ 7


UPD IfStatement@@if (type != null) {  assertThat(typeInfo,is(notNullValue()));  assertThat(typeInfo.getType(),is(typeCompatibleWith(type)));} else {  assertThat(typeInfo,is(nullValue()));} @TO@ if (type != null) {  assertThat(typeInfo,is(notNullValue()));  assertThat(typeInfo.get().getType(),is(typeCompatibleWith(type)));} else {  assertThat(typeInfo,is(Optional.empty()));} @AT@ 6360 @LENGTH@ 186
---UPD Block@@ThenBody:{  assertThat(typeInfo,is(notNullValue()));  assertThat(typeInfo.getType(),is(typeCompatibleWith(type)));} @TO@ ThenBody:{  assertThat(typeInfo,is(notNullValue()));  assertThat(typeInfo.get().getType(),is(typeCompatibleWith(type)));} @AT@ 6378 @LENGTH@ 115
------UPD ExpressionStatement@@MethodInvocation:assertThat(typeInfo.getType(),is(typeCompatibleWith(type))) @TO@ MethodInvocation:assertThat(typeInfo.get().getType(),is(typeCompatibleWith(type))) @AT@ 6428 @LENGTH@ 61
---------UPD MethodInvocation@@assertThat(typeInfo.getType(),is(typeCompatibleWith(type))) @TO@ assertThat(typeInfo.get().getType(),is(typeCompatibleWith(type))) @AT@ 6428 @LENGTH@ 60
------------UPD SimpleName@@MethodName:assertThat:[typeInfo.getType(), is(typeCompatibleWith(type))] @TO@ MethodName:assertThat:[typeInfo.get().getType(), is(typeCompatibleWith(type))] @AT@ 6428 @LENGTH@ 60
---------------UPD MethodInvocation@@typeInfo.getType() @TO@ typeInfo.get().getType() @AT@ 6439 @LENGTH@ 18
------------------INS MethodInvocation@@MethodName:get:[] @TO@ MethodInvocation@@typeInfo.getType() @AT@ 6476 @LENGTH@ 14
---UPD Block@@ElseBody:{  assertThat(typeInfo,is(nullValue()));} @TO@ ElseBody:{  assertThat(typeInfo,is(Optional.empty()));} @AT@ 6499 @LENGTH@ 47
------UPD ExpressionStatement@@MethodInvocation:assertThat(typeInfo,is(nullValue())) @TO@ MethodInvocation:assertThat(typeInfo,is(Optional.empty())) @AT@ 6504 @LENGTH@ 38
---------UPD MethodInvocation@@assertThat(typeInfo,is(nullValue())) @TO@ assertThat(typeInfo,is(Optional.empty())) @AT@ 6504 @LENGTH@ 37
------------UPD SimpleName@@MethodName:assertThat:[typeInfo, is(nullValue())] @TO@ MethodName:assertThat:[typeInfo, is(Optional.empty())] @AT@ 6504 @LENGTH@ 37
---------------UPD MethodInvocation@@is(nullValue()) @TO@ is(Optional.empty()) @AT@ 6525 @LENGTH@ 15
------------------UPD SimpleName@@MethodName:is:[nullValue()] @TO@ MethodName:is:[Optional.empty()] @AT@ 6525 @LENGTH@ 15
---------------------UPD MethodInvocation@@MethodName:nullValue:[] @TO@ Optional.empty() @AT@ 6528 @LENGTH@ 11
------------------------INS SimpleName@@Name:Optional @TO@ MethodInvocation@@MethodName:nullValue:[] @AT@ 6571 @LENGTH@ 8
------------------------INS SimpleName@@MethodName:empty:[] @TO@ MethodInvocation@@MethodName:nullValue:[] @AT@ 6580 @LENGTH@ 7
------------------UPD SimpleName@@MethodName:is:[nullValue()] @TO@ MethodName:is:[Optional.empty()] @AT@ 6525 @LENGTH@ 15
---------------------UPD MethodInvocation@@MethodName:nullValue:[] @TO@ Optional.empty() @AT@ 6528 @LENGTH@ 11
------------------------INS SimpleName@@Name:Optional @TO@ MethodInvocation@@MethodName:nullValue:[] @AT@ 6571 @LENGTH@ 8
------------------------INS SimpleName@@MethodName:empty:[] @TO@ MethodInvocation@@MethodName:nullValue:[] @AT@ 6580 @LENGTH@ 7


UPD FieldDeclaration@@public, static, int, [VLONG_BYTES_LEN=9] @TO@ public, static, final, int, [VLONG_BYTES_LEN=9] @AT@ 12516 @LENGTH@ 38
---INS Modifier@@final @TO@ FieldDeclaration@@public, static, int, [VLONG_BYTES_LEN=9] @AT@ 12530 @LENGTH@ 5


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled(); @AT@ 5415 @LENGTH@ 160
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5423 @LENGTH@ 151
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5423 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5440 @LENGTH@ 134
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 5440 @LENGTH@ 64
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5440 @LENGTH@ 35
---------UPD MethodInvocation@@componentConfiguration.getConfigurer().isEnabled() @TO@ componentConfiguration.getCustomizer().isEnabled() @AT@ 5524 @LENGTH@ 50
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5524 @LENGTH@ 38


UPD IfStatement@@if (this.deploymentContext.get() != null) {  if (this.deploymentContext.get().getObjectStore().get(ContextRoot.class) != null) {    contextPath=this.deploymentContext.get().getObjectStore().get(ContextRoot.class).context();  }} @TO@ if (deploymentContext != null && deploymentContext.isActive()) {  if (deploymentContext.getObjectStore().get(ContextRoot.class) != null) {    contextPath=deploymentContext.getObjectStore().get(ContextRoot.class).context();  }} @AT@ 3843 @LENGTH@ 275
---DEL InfixExpression@@this.deploymentContext.get() != null @AT@ 3848 @LENGTH@ 36
---UPD Block@@ThenBody:{  if (this.deploymentContext.get().getObjectStore().get(ContextRoot.class) != null) {    contextPath=this.deploymentContext.get().getObjectStore().get(ContextRoot.class).context();  }} @TO@ ThenBody:{  if (deploymentContext.getObjectStore().get(ContextRoot.class) != null) {    contextPath=deploymentContext.getObjectStore().get(ContextRoot.class).context();  }} @AT@ 3887 @LENGTH@ 231
------UPD IfStatement@@if (this.deploymentContext.get().getObjectStore().get(ContextRoot.class) != null) {  contextPath=this.deploymentContext.get().getObjectStore().get(ContextRoot.class).context();} @TO@ if (deploymentContext.getObjectStore().get(ContextRoot.class) != null) {  contextPath=deploymentContext.getObjectStore().get(ContextRoot.class).context();} @AT@ 3901 @LENGTH@ 207
---------UPD InfixExpression@@this.deploymentContext.get().getObjectStore().get(ContextRoot.class) != null @TO@ deploymentContext.getObjectStore().get(ContextRoot.class) != null @AT@ 3905 @LENGTH@ 76
------------UPD MethodInvocation@@this.deploymentContext.get().getObjectStore().get(ContextRoot.class) @TO@ deploymentContext.getObjectStore().get(ContextRoot.class) @AT@ 3905 @LENGTH@ 68
---------------DEL MethodInvocation@@MethodName:get:[] @AT@ 3905 @LENGTH@ 28
---------------DEL FieldAccess@@this.deploymentContext @AT@ 3905 @LENGTH@ 22
------------------DEL ThisExpression@@this @AT@ 3905 @LENGTH@ 4
------------------DEL SimpleName@@deploymentContext @AT@ 3910 @LENGTH@ 17
---------------INS SimpleName@@Name:deploymentContext @TO@ MethodInvocation@@this.deploymentContext.get().getObjectStore().get(ContextRoot.class) @AT@ 4002 @LENGTH@ 17
---------UPD Block@@ThenBody:{  contextPath=this.deploymentContext.get().getObjectStore().get(ContextRoot.class).context();} @TO@ ThenBody:{  contextPath=deploymentContext.getObjectStore().get(ContextRoot.class).context();} @AT@ 3983 @LENGTH@ 125
------------UPD ExpressionStatement@@Assignment:contextPath=this.deploymentContext.get().getObjectStore().get(ContextRoot.class).context() @TO@ Assignment:contextPath=deploymentContext.getObjectStore().get(ContextRoot.class).context() @AT@ 4001 @LENGTH@ 93
---------------UPD Assignment@@contextPath=this.deploymentContext.get().getObjectStore().get(ContextRoot.class).context() @TO@ contextPath=deploymentContext.getObjectStore().get(ContextRoot.class).context() @AT@ 4001 @LENGTH@ 92
------------------UPD MethodInvocation@@this.deploymentContext.get().getObjectStore().get(ContextRoot.class).context() @TO@ deploymentContext.getObjectStore().get(ContextRoot.class).context() @AT@ 4015 @LENGTH@ 78
---------------------DEL MethodInvocation@@MethodName:get:[] @AT@ 4015 @LENGTH@ 28
---------------------DEL FieldAccess@@this.deploymentContext @AT@ 4015 @LENGTH@ 22
------------------------DEL ThisExpression@@this @AT@ 4015 @LENGTH@ 4
------------------------DEL SimpleName@@deploymentContext @AT@ 4020 @LENGTH@ 17
---------------------INS SimpleName@@Name:deploymentContext @TO@ MethodInvocation@@this.deploymentContext.get().getObjectStore().get(ContextRoot.class).context() @AT@ 4101 @LENGTH@ 17
---INS InfixExpression@@deploymentContext != null && deploymentContext.isActive() @TO@ IfStatement@@if (this.deploymentContext.get() != null) {  if (this.deploymentContext.get().getObjectStore().get(ContextRoot.class) != null) {    contextPath=this.deploymentContext.get().getObjectStore().get(ContextRoot.class).context();  }} @AT@ 3924 @LENGTH@ 57
------INS InfixExpression@@deploymentContext != null @TO@ InfixExpression@@deploymentContext != null && deploymentContext.isActive() @AT@ 3924 @LENGTH@ 25
---------MOV Operator@@!= @TO@ InfixExpression@@deploymentContext != null @AT@ 3876 @LENGTH@ 2
---------MOV NullLiteral@@null @TO@ InfixExpression@@deploymentContext != null @AT@ 3880 @LENGTH@ 4
---------INS SimpleName@@deploymentContext @TO@ InfixExpression@@deploymentContext != null @AT@ 3924 @LENGTH@ 17
------INS Operator@@&& @TO@ InfixExpression@@deploymentContext != null && deploymentContext.isActive() @AT@ 3949 @LENGTH@ 2
------INS MethodInvocation@@deploymentContext.isActive() @TO@ InfixExpression@@deploymentContext != null && deploymentContext.isActive() @AT@ 3953 @LENGTH@ 28
---------INS SimpleName@@Name:deploymentContext @TO@ MethodInvocation@@deploymentContext.isActive() @AT@ 3953 @LENGTH@ 17
---------INS SimpleName@@MethodName:isActive:[] @TO@ MethodInvocation@@deploymentContext.isActive() @AT@ 3971 @LENGTH@ 10


UPD ExpressionStatement@@MethodInvocation:from("direct:start").routeId("myRoute").to("log:input").choice().when().header("gold").to("mock:gold").filter().header("extra-gold").to("mock:extra-gold").endChoice().when().simple("${body} contains Camel").to("mock:camel").otherwise().to("mock:other").end().to("mock:result") @TO@ MethodInvocation:from("direct:start").routeId("myRoute").to("log:input").choice().when().header("gold").to("mock:gold").filter().header("extra-gold").to("mock:extra-gold").endChoice().when().simple("${body} contains 'Camel'").to("mock:camel").otherwise().to("mock:other").end().to("mock:result") @AT@ 2059 @LENGTH@ 614
---UPD MethodInvocation@@from("direct:start").routeId("myRoute").to("log:input").choice().when().header("gold").to("mock:gold").filter().header("extra-gold").to("mock:extra-gold").endChoice().when().simple("${body} contains Camel").to("mock:camel").otherwise().to("mock:other").end().to("mock:result") @TO@ from("direct:start").routeId("myRoute").to("log:input").choice().when().header("gold").to("mock:gold").filter().header("extra-gold").to("mock:extra-gold").endChoice().when().simple("${body} contains 'Camel'").to("mock:camel").otherwise().to("mock:other").end().to("mock:result") @AT@ 2059 @LENGTH@ 613
------UPD MethodInvocation@@MethodName:simple:["${body} contains Camel"] @TO@ MethodName:simple:["${body} contains 'Camel'"] @AT@ 2059 @LENGTH@ 418
---------UPD StringLiteral@@"${body} contains Camel" @TO@ "${body} contains 'Camel'" @AT@ 2452 @LENGTH@ 24


UPD IfStatement@@if (!found && consumerClassName != null) {  warning(processingEnv,"APT could not find consumer class " + consumerClassName);} @TO@ if (!found && consumerClassName != null) {  warning(processingEnv,"APT cannot find consumer class " + consumerClassName);} @AT@ 10579 @LENGTH@ 146


UPD MethodDeclaration@@public, int, MethodName:tryEvictContiguousData, int allocationSize, int count,  @TO@ public, long, MethodName:tryEvictContiguousData, int allocationSize, int count,  @AT@ 3579 @LENGTH@ 273
---UPD PrimitiveType@@int @TO@ long @AT@ 3586 @LENGTH@ 3
---INS VariableDeclarationStatement@@int remainingCount=count - (int)(evicted / allocationSize); @TO@ MethodDeclaration@@public, int, MethodName:tryEvictContiguousData, int allocationSize, int count,  @AT@ 3725 @LENGTH@ 61
------INS PrimitiveType@@int @TO@ VariableDeclarationStatement@@int remainingCount=count - (int)(evicted / allocationSize); @AT@ 3725 @LENGTH@ 3
------INS VariableDeclarationFragment@@remainingCount=count - (int)(evicted / allocationSize) @TO@ VariableDeclarationStatement@@int remainingCount=count - (int)(evicted / allocationSize); @AT@ 3729 @LENGTH@ 56
---------INS SimpleName@@remainingCount @TO@ VariableDeclarationFragment@@remainingCount=count - (int)(evicted / allocationSize) @AT@ 3729 @LENGTH@ 14
---------INS InfixExpression@@count - (int)(evicted / allocationSize) @TO@ VariableDeclarationFragment@@remainingCount=count - (int)(evicted / allocationSize) @AT@ 3746 @LENGTH@ 39
------------INS SimpleName@@count @TO@ InfixExpression@@count - (int)(evicted / allocationSize) @AT@ 3746 @LENGTH@ 5
------------INS Operator@@- @TO@ InfixExpression@@count - (int)(evicted / allocationSize) @AT@ 3751 @LENGTH@ 1
------------MOV CastExpression@@(int)(evicted / allocationSize) @TO@ InfixExpression@@count - (int)(evicted / allocationSize) @AT@ 3816 @LENGTH@ 31
---DEL AssertStatement@@InfixExpression:evicted % allocationSize == 0 @AT@ 3767 @LENGTH@ 37
------DEL InfixExpression@@evicted % allocationSize == 0 @AT@ 3774 @LENGTH@ 29
---------DEL InfixExpression@@evicted % allocationSize @AT@ 3774 @LENGTH@ 24
------------DEL SimpleName@@evicted @AT@ 3774 @LENGTH@ 7
------------DEL Operator@@% @AT@ 3781 @LENGTH@ 1
---------DEL NumberLiteral@@0 @AT@ 3802 @LENGTH@ 1
---INS IfStatement@@if (remainingCount > 0) {  evicted+=evictInternal(allocationSize * remainingCount,-1);} @TO@ MethodDeclaration@@public, int, MethodName:tryEvictContiguousData, int allocationSize, int count,  @AT@ 3791 @LENGTH@ 100
------INS InfixExpression@@remainingCount > 0 @TO@ IfStatement@@if (remainingCount > 0) {  evicted+=evictInternal(allocationSize * remainingCount,-1);} @AT@ 3795 @LENGTH@ 18
---------INS SimpleName@@remainingCount @TO@ InfixExpression@@remainingCount > 0 @AT@ 3795 @LENGTH@ 14
---------INS Operator@@> @TO@ InfixExpression@@remainingCount > 0 @AT@ 3809 @LENGTH@ 1
---------INS NumberLiteral@@0 @TO@ InfixExpression@@remainingCount > 0 @AT@ 3812 @LENGTH@ 1
------INS Block@@ThenBody:{  evicted+=evictInternal(allocationSize * remainingCount,-1);} @TO@ IfStatement@@if (remainingCount > 0) {  evicted+=evictInternal(allocationSize * remainingCount,-1);} @AT@ 3815 @LENGTH@ 76
---------INS ExpressionStatement@@Assignment:evicted+=evictInternal(allocationSize * remainingCount,-1) @TO@ Block@@ThenBody:{  evicted+=evictInternal(allocationSize * remainingCount,-1);} @AT@ 3823 @LENGTH@ 62
------------INS Assignment@@evicted+=evictInternal(allocationSize * remainingCount,-1) @TO@ ExpressionStatement@@Assignment:evicted+=evictInternal(allocationSize * remainingCount,-1) @AT@ 3823 @LENGTH@ 61
---------------INS SimpleName@@evicted @TO@ Assignment@@evicted+=evictInternal(allocationSize * remainingCount,-1) @AT@ 3823 @LENGTH@ 7
---------------INS Operator@@+= @TO@ Assignment@@evicted+=evictInternal(allocationSize * remainingCount,-1) @AT@ 3830 @LENGTH@ 2
---------------INS MethodInvocation@@evictInternal(allocationSize * remainingCount,-1) @TO@ Assignment@@evicted+=evictInternal(allocationSize * remainingCount,-1) @AT@ 3834 @LENGTH@ 50
------------------INS SimpleName@@MethodName:evictInternal:[allocationSize * remainingCount, -1] @TO@ MethodInvocation@@evictInternal(allocationSize * remainingCount,-1) @AT@ 3834 @LENGTH@ 50
---------------------INS InfixExpression@@allocationSize * remainingCount @TO@ SimpleName@@MethodName:evictInternal:[allocationSize * remainingCount, -1] @AT@ 3848 @LENGTH@ 31
------------------------MOV SimpleName@@allocationSize @TO@ InfixExpression@@allocationSize * remainingCount @AT@ 3784 @LENGTH@ 14
------------------------MOV Operator@@== @TO@ InfixExpression@@allocationSize * remainingCount @AT@ 3798 @LENGTH@ 2
------------------------INS SimpleName@@remainingCount @TO@ InfixExpression@@allocationSize * remainingCount @AT@ 3865 @LENGTH@ 14
---------------------INS PrefixExpression@@-1 @TO@ SimpleName@@MethodName:evictInternal:[allocationSize * remainingCount, -1] @AT@ 3881 @LENGTH@ 2
------------------------INS Operator@@- @TO@ PrefixExpression@@-1 @AT@ 3881 @LENGTH@ 1
------------------------INS NumberLiteral@@1 @TO@ PrefixExpression@@-1 @AT@ 3882 @LENGTH@ 1
---UPD ReturnStatement@@CastExpression:(int)(evicted / allocationSize) @TO@ SimpleName:evicted @AT@ 3809 @LENGTH@ 39
------INS SimpleName@@evicted @TO@ ReturnStatement@@CastExpression:(int)(evicted / allocationSize) @AT@ 3903 @LENGTH@ 7


UPD FieldDeclaration@@private, static, int, [MAX_CACHE_SIZE=16] @TO@ private, static, final, int, [MAX_CACHE_SIZE=16] @AT@ 3673 @LENGTH@ 39
---INS Modifier@@final @TO@ FieldDeclaration@@private, static, int, [MAX_CACHE_SIZE=16] @AT@ 3688 @LENGTH@ 5


UPD MethodDeclaration@@public, void, MethodName:newPersistenceClassJpa, @CliOption(key="class",optionContext=UPDATELAST_PROJECT,mandatory=true,help="The name of the entity to create. If you consider it necessary, you can also " + "specify the package (base package can be specified with `~`). " + "Ex.: `--class ~.domain.MyEntity`. You can specify module as well, if necessary. "+ "Ex.: `--class model:~.domain.MyEntity`. When working with a multi-module project, "+ "if module is not specified the entity will be created in the module which has the focus.") final JavaType name, @CliOption(key="table",mandatory=true,help="The JPA table name to use for this entity. " + "This option is mandatory if `spring.roo.jpa.require.schema-object-name` configuration setting it’s `true`.") final String table, @CliOption(key="identifierColumn",mandatory=true,help="The JPA identifier field column to use for this entity. " + "This option is mandatory if `spring.roo.jpa.require.schema-object-name` configuration setting it’s `true`.") final String identifierColumn, @CliOption(key="versionField",mandatory=true,help="The JPA version field name to use for this entity. " + "This option is mandatory if `spring.roo.jpa.require.schema-object-name` configuration setting it’s `true`.") final String versionField, @CliOption(key="versionColumn",mandatory=true,help="The JPA version field column to use for this entity. " + "This option is available if 'versionField' option is set." + " This option is mandatory if `spring.roo.jpa.require.schema-object-name` configuration setting it’s `true`.") final String versionColumn, @CliOption(key="versionType",mandatory=true,optionContext="java-lang,project",unspecifiedDefaultValue=VERSION_DEFAULT_TYPE,help="The data type that will be used for the JPA version field. " + "This option is available if 'versionField' option is set." + " This option is mandatory if `spring.roo.jpa.require.schema-object-name` configuration setting it’s `true`.") final JavaType versionType, @CliOption(key="sequenceName",mandatory=true,help="The name of the sequence for incrementing sequence-driven primary keys." + " This option is mandatory if `spring.roo.jpa.require.schema-object-name` configuration setting it’s `true`.") final String sequenceName, @CliOption(key="identifierStrategy",mandatory=true,specifiedDefaultValue="AUTO",help="The generation value strategy to be used." + " This option is mandatory if `spring.roo.jpa.require.schema-object-name` configuration setting it’s `true`." + "Default if option present: `AUTO`.") final IdentifierStrategy identifierStrategy, @CliOption(key="extends",mandatory=false,unspecifiedDefaultValue="java.lang.Object",optionContext=SUPERCLASS,help="The fully qualified name of the superclass. " + "Default if option not present: `java.lang.Object`.") final JavaType superclass, @CliOption(key="implements",mandatory=false,optionContext=INTERFACE,help="The fully qualified name of the interface to implement") final JavaType implementsType, @CliOption(key="abstract",mandatory=false,specifiedDefaultValue="true",unspecifiedDefaultValue="false",help="Whether the generated class should be marked as abstract. " + "Default if option present: `true`; default if option not present: `false`.") final boolean createAbstract, @CliOption(key="schema",mandatory=false,help="The JPA table schema name to use for this entity") final String schema, @CliOption(key="catalog",mandatory=false,help="The JPA table catalog name to use for this entity") final String catalog, @CliOption(key="identifierField",mandatory=false,help="The JPA identifier field name to use for this entity") final String identifierField, @CliOption(key="identifierType",mandatory=false,optionContext="java-lang,project",unspecifiedDefaultValue=IDENTIFIER_DEFAULT_TYPE,specifiedDefaultValue="java.lang.Long",help="The data type that will be used for the JPA identifier field." + "Default: `java.lang.Long`.") final JavaType identifierType, @CliOption(key="inheritanceType",mandatory=false,help="The JPA @Inheritance value (apply to base class)") final InheritanceType inheritanceType, @CliOption(key="mappedSuperclass",mandatory=false,specifiedDefaultValue="true",unspecifiedDefaultValue="false",help="Apply @MappedSuperclass for this entity." + "Default if option present: `true`; default if option not present: `false`.") final boolean mappedSuperclass, @CliOption(key="serializable",mandatory=false,unspecifiedDefaultValue="false",specifiedDefaultValue="true",help="Whether the generated class should implement `java.io.Serializable`." + "Default if option present: `true`; default if option not present: `false`.") final boolean serializable, @CliOption(key="permitReservedWords",mandatory=false,unspecifiedDefaultValue="false",specifiedDefaultValue="true",help="Indicates whether reserved words are ignored by Roo." + "Default if option present: `true`; default if option not present: `false`.") final boolean permitReservedWords, @CliOption(key="entityName",mandatory=false,help="The name used to refer to the entity in queries") final String entityName, @CliOption(key="readOnly",mandatory=false,unspecifiedDefaultValue="false",specifiedDefaultValue="true",help="Whether the generated entity should be used for read operations only." + "Default if option present: `true`; default if option not present `false`.") final boolean readOnly, @CliOption(key="plural",mandatory=false,help="Specify the plural of this new entity. If not provided, a calculated plural will be used by default") String plural, @CliOption(key="entityFormatExpression",mandatory=false,help="The SpEL expression used to format the entity when showing it in presentation layer e.g. " + "{#fieldA} {#fieldB}. It adds the `value` attribute to `io.springlets.format.EntityFormat` " + "annotation."+ "This option is available only if `--entityFormatMessage` has not been specified.") String formatExpression, @CliOption(key="entityFormatMessage",mandatory=false,help="The message key used to obtain a localized SpEL expression to format the entity when " + "showing it in presentation layer. It adds the `message` attribute to " + "`io.springlets.format.EntityFormat` annotation and creates a message in all message bundles "+ "with the provided key. Message value should be  modified by developer. This kind of format "+ "has more priority that 'expression' format added with `--entityFormatExpression`"+ "This option is available only if `--entityFormatExpression` has not been specified.") String formatMessage, ShellContext shellContext,  @TO@ public, void, MethodName:newPersistenceClassJpa, @CliOption(key="class",optionContext=UPDATELAST_PROJECT,mandatory=true,help="The name of the entity to create. If you consider it necessary, you can also " + "specify the package (base package can be specified with `~`). " + "Ex.: `--class ~.domain.MyEntity`. You can specify module as well, if necessary. "+ "Ex.: `--class model:~.domain.MyEntity`. When working with a multi-module project, "+ "if module is not specified the entity will be created in the module which has the focus.") final JavaType name, @CliOption(key="table",mandatory=true,help="The JPA table name to use for this entity. " + "This option is mandatory if `spring.roo.jpa.require.schema-object-name` configuration setting it’s `true`.") final String table, @CliOption(key="identifierColumn",mandatory=true,help="The JPA identifier field column to use for this entity. " + "This option is mandatory if `spring.roo.jpa.require.schema-object-name` configuration setting it’s `true`.") final String identifierColumn, @CliOption(key="versionField",mandatory=true,help="The JPA version field name to use for this entity. " + "This option is mandatory if `spring.roo.jpa.require.schema-object-name` configuration setting it’s `true`.") final String versionField, @CliOption(key="versionColumn",mandatory=true,help="The JPA version field column to use for this entity. " + "This option is available if 'versionField' option is set." + " This option is mandatory if `spring.roo.jpa.require.schema-object-name` configuration setting it’s `true`.") final String versionColumn, @CliOption(key="versionType",mandatory=true,optionContext="java-lang,project",unspecifiedDefaultValue=VERSION_DEFAULT_TYPE,help="The data type that will be used for the JPA version field. " + "This option is available if 'versionField' option is set." + " This option is mandatory if `spring.roo.jpa.require.schema-object-name` configuration setting it’s `true`.") final JavaType versionType, @CliOption(key="sequenceName",mandatory=true,help="The name of the sequence for incrementing sequence-driven primary keys." + " This option is mandatory if `spring.roo.jpa.require.schema-object-name` configuration setting it’s `true`.") final String sequenceName, @CliOption(key="identifierStrategy",mandatory=true,specifiedDefaultValue="AUTO",help="The generation value strategy to be used." + " This option is mandatory if `spring.roo.jpa.require.schema-object-name` configuration setting it’s `true`. " + "Default if option present: `AUTO`.") final IdentifierStrategy identifierStrategy, @CliOption(key="extends",mandatory=false,unspecifiedDefaultValue="java.lang.Object",optionContext=SUPERCLASS,help="The fully qualified name of the superclass. " + "Default if option not present: `java.lang.Object`.") final JavaType superclass, @CliOption(key="implements",mandatory=false,optionContext=INTERFACE,help="The fully qualified name of the interface to implement.") final JavaType implementsType, @CliOption(key="abstract",mandatory=false,specifiedDefaultValue="true",unspecifiedDefaultValue="false",help="Whether the generated class should be marked as abstract. " + "Default if option present: `true`; default if option not present: `false`.") final boolean createAbstract, @CliOption(key="schema",mandatory=false,help="The JPA table schema name to use for this entity.") final String schema, @CliOption(key="catalog",mandatory=false,help="The JPA table catalog name to use for this entity.") final String catalog, @CliOption(key="identifierField",mandatory=false,help="The JPA identifier field name to use for this entity.") final String identifierField, @CliOption(key="identifierType",mandatory=false,optionContext="java-lang,project",unspecifiedDefaultValue=IDENTIFIER_DEFAULT_TYPE,specifiedDefaultValue="java.lang.Long",help="The data type that will be used for the JPA identifier field. " + "Default: `java.lang.Long`.") final JavaType identifierType, @CliOption(key="inheritanceType",mandatory=false,help="The JPA @Inheritance value (apply to base class)") final InheritanceType inheritanceType, @CliOption(key="mappedSuperclass",mandatory=false,specifiedDefaultValue="true",unspecifiedDefaultValue="false",help="Apply @MappedSuperclass for this entity. " + "Default if option present: `true`; default if option not present: `false`.") final boolean mappedSuperclass, @CliOption(key="serializable",mandatory=false,unspecifiedDefaultValue="false",specifiedDefaultValue="true",help="Whether the generated class should implement `java.io.Serializable`." + "Default if option present: `true`; default if option not present: `false`.") final boolean serializable, @CliOption(key="permitReservedWords",mandatory=false,unspecifiedDefaultValue="false",specifiedDefaultValue="true",help="Indicates whether reserved words are ignored by Roo. " + "Default if option present: `true`; default if option not present: `false`.") final boolean permitReservedWords, @CliOption(key="entityName",mandatory=false,help="The name used to refer to the entity in queries.") final String entityName, @CliOption(key="readOnly",mandatory=false,unspecifiedDefaultValue="false",specifiedDefaultValue="true",help="Whether the generated entity should be used for read operations only. " + "Default if option present: `true`; default if option not present `false`.") final boolean readOnly, @CliOption(key="plural",mandatory=false,help="Specify the plural of this new entity. If not provided, a calculated plural will be used by default.") String plural, @CliOption(key="entityFormatExpression",mandatory=false,help="The SpEL expression used to format the entity when showing it in presentation layer e.g. " + "`{#fieldA} {#fieldB}`. It adds the `value` attribute to `io.springlets.format.EntityFormat` " + "annotation.") String formatExpression, @CliOption(key="entityFormatMessage",mandatory=false,help="The message key used to obtain a localized SpEL expression to format the entity when " + "showing it in presentation layer. It adds the `message` attribute to " + "`io.springlets.format.EntityFormat` annotation and creates a message in all message bundles "+ "with the provided key. Message value should be  modified by developer. This kind of format "+ "has more priority that 'expression' format added with `--entityFormatExpression`.") String formatMessage, ShellContext shellContext,  @AT@ 21617 @LENGTH@ 14232
---UPD SingleVariableDeclaration@@@CliOption(key="identifierStrategy",mandatory=true,specifiedDefaultValue="AUTO",help="The generation value strategy to be used." + " This option is mandatory if `spring.roo.jpa.require.schema-object-name` configuration setting it’s `true`." + "Default if option present: `AUTO`.") final IdentifierStrategy identifierStrategy @TO@ @CliOption(key="identifierStrategy",mandatory=true,specifiedDefaultValue="AUTO",help="The generation value strategy to be used." + " This option is mandatory if `spring.roo.jpa.require.schema-object-name` configuration setting it’s `true`. " + "Default if option present: `AUTO`.") final IdentifierStrategy identifierStrategy @AT@ 24378 @LENGTH@ 404
---UPD SingleVariableDeclaration@@@CliOption(key="implements",mandatory=false,optionContext=INTERFACE,help="The fully qualified name of the interface to implement") final JavaType implementsType @TO@ @CliOption(key="implements",mandatory=false,optionContext=INTERFACE,help="The fully qualified name of the interface to implement.") final JavaType implementsType @AT@ 25078 @LENGTH@ 181
---UPD SingleVariableDeclaration@@@CliOption(key="schema",mandatory=false,help="The JPA table schema name to use for this entity") final String schema @TO@ @CliOption(key="schema",mandatory=false,help="The JPA table schema name to use for this entity.") final String schema @AT@ 25600 @LENGTH@ 134
---UPD SingleVariableDeclaration@@@CliOption(key="catalog",mandatory=false,help="The JPA table catalog name to use for this entity") final String catalog @TO@ @CliOption(key="catalog",mandatory=false,help="The JPA table catalog name to use for this entity.") final String catalog @AT@ 25742 @LENGTH@ 137
---UPD SingleVariableDeclaration@@@CliOption(key="identifierField",mandatory=false,help="The JPA identifier field name to use for this entity") final String identifierField @TO@ @CliOption(key="identifierField",mandatory=false,help="The JPA identifier field name to use for this entity.") final String identifierField @AT@ 25887 @LENGTH@ 156
---UPD SingleVariableDeclaration@@@CliOption(key="identifierType",mandatory=false,optionContext="java-lang,project",unspecifiedDefaultValue=IDENTIFIER_DEFAULT_TYPE,specifiedDefaultValue="java.lang.Long",help="The data type that will be used for the JPA identifier field." + "Default: `java.lang.Long`.") final JavaType identifierType @TO@ @CliOption(key="identifierType",mandatory=false,optionContext="java-lang,project",unspecifiedDefaultValue=IDENTIFIER_DEFAULT_TYPE,specifiedDefaultValue="java.lang.Long",help="The data type that will be used for the JPA identifier field. " + "Default: `java.lang.Long`.") final JavaType identifierType @AT@ 26051 @LENGTH@ 360
---UPD SingleVariableDeclaration@@@CliOption(key="mappedSuperclass",mandatory=false,specifiedDefaultValue="true",unspecifiedDefaultValue="false",help="Apply @MappedSuperclass for this entity." + "Default if option present: `true`; default if option not present: `false`.") final boolean mappedSuperclass @TO@ @CliOption(key="mappedSuperclass",mandatory=false,specifiedDefaultValue="true",unspecifiedDefaultValue="false",help="Apply @MappedSuperclass for this entity. " + "Default if option present: `true`; default if option not present: `false`.") final boolean mappedSuperclass @AT@ 26588 @LENGTH@ 307
---UPD SingleVariableDeclaration@@@CliOption(key="permitReservedWords",mandatory=false,unspecifiedDefaultValue="false",specifiedDefaultValue="true",help="Indicates whether reserved words are ignored by Roo." + "Default if option present: `true`; default if option not present: `false`.") final boolean permitReservedWords @TO@ @CliOption(key="permitReservedWords",mandatory=false,unspecifiedDefaultValue="false",specifiedDefaultValue="true",help="Indicates whether reserved words are ignored by Roo. " + "Default if option present: `true`; default if option not present: `false`.") final boolean permitReservedWords @AT@ 27248 @LENGTH@ 335
---UPD SingleVariableDeclaration@@@CliOption(key="entityName",mandatory=false,help="The name used to refer to the entity in queries") final String entityName @TO@ @CliOption(key="entityName",mandatory=false,help="The name used to refer to the entity in queries.") final String entityName @AT@ 27591 @LENGTH@ 141
---UPD SingleVariableDeclaration@@@CliOption(key="readOnly",mandatory=false,unspecifiedDefaultValue="false",specifiedDefaultValue="true",help="Whether the generated entity should be used for read operations only." + "Default if option present: `true`; default if option not present `false`.") final boolean readOnly @TO@ @CliOption(key="readOnly",mandatory=false,unspecifiedDefaultValue="false",specifiedDefaultValue="true",help="Whether the generated entity should be used for read operations only. " + "Default if option present: `true`; default if option not present `false`.") final boolean readOnly @AT@ 27740 @LENGTH@ 329
---UPD SingleVariableDeclaration@@@CliOption(key="plural",mandatory=false,help="Specify the plural of this new entity. If not provided, a calculated plural will be used by default") String plural @TO@ @CliOption(key="plural",mandatory=false,help="Specify the plural of this new entity. If not provided, a calculated plural will be used by default.") String plural @AT@ 28077 @LENGTH@ 200
---UPD SingleVariableDeclaration@@@CliOption(key="entityFormatExpression",mandatory=false,help="The SpEL expression used to format the entity when showing it in presentation layer e.g. " + "{#fieldA} {#fieldB}. It adds the `value` attribute to `io.springlets.format.EntityFormat` " + "annotation."+ "This option is available only if `--entityFormatMessage` has not been specified.") String formatExpression @TO@ @CliOption(key="entityFormatExpression",mandatory=false,help="The SpEL expression used to format the entity when showing it in presentation layer e.g. " + "`{#fieldA} {#fieldB}`. It adds the `value` attribute to `io.springlets.format.EntityFormat` " + "annotation.") String formatExpression @AT@ 28285 @LENGTH@ 454
---UPD SingleVariableDeclaration@@@CliOption(key="entityFormatMessage",mandatory=false,help="The message key used to obtain a localized SpEL expression to format the entity when " + "showing it in presentation layer. It adds the `message` attribute to " + "`io.springlets.format.EntityFormat` annotation and creates a message in all message bundles "+ "with the provided key. Message value should be  modified by developer. This kind of format "+ "has more priority that 'expression' format added with `--entityFormatExpression`"+ "This option is available only if `--entityFormatExpression` has not been specified.") String formatMessage @TO@ @CliOption(key="entityFormatMessage",mandatory=false,help="The message key used to obtain a localized SpEL expression to format the entity when " + "showing it in presentation layer. It adds the `message` attribute to " + "`io.springlets.format.EntityFormat` annotation and creates a message in all message bundles "+ "with the provided key. Message value should be  modified by developer. This kind of format "+ "has more priority that 'expression' format added with `--entityFormatExpression`.") String formatMessage @AT@ 28747 @LENGTH@ 716


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<GooglePubsubComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<GooglePubsubComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5547 @LENGTH@ 345
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 5551 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5551 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  ComponentCustomizer<GooglePubsubComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ ThenBody:{  for (  ComponentCustomizer<GooglePubsubComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5607 @LENGTH@ 285
------UPD EnhancedForStatement@@for (ComponentCustomizer<GooglePubsubComponent> configurer : customizers) {  LOGGER.debug("Configure component {}, with configurer {}",component,configurer);  configurer.customize(component);} @TO@ for (ComponentCustomizer<GooglePubsubComponent> customizer : customizers) {  LOGGER.debug("Configure component {}, with customizer {}",component,customizer);  customizer.customize(component);} @AT@ 5621 @LENGTH@ 261
---------UPD SingleVariableDeclaration@@ComponentCustomizer<GooglePubsubComponent> configurer @TO@ ComponentCustomizer<GooglePubsubComponent> customizer @AT@ 5626 @LENGTH@ 53
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5669 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5713 @LENGTH@ 106
------------UPD MethodInvocation@@LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5713 @LENGTH@ 105
---------------UPD SimpleName@@MethodName:debug:["Configure component {}, with configurer {}", component, configurer] @TO@ MethodName:debug:["Configure component {}, with customizer {}", component, customizer] @AT@ 5720 @LENGTH@ 98
------------------UPD StringLiteral@@"Configure component {}, with configurer {}" @TO@ "Configure component {}, with customizer {}" @AT@ 5726 @LENGTH@ 44
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5807 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(component) @TO@ MethodInvocation:customizer.customize(component) @AT@ 5836 @LENGTH@ 32
------------UPD MethodInvocation@@configurer.customize(component) @TO@ customizer.customize(component) @AT@ 5836 @LENGTH@ 31
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5836 @LENGTH@ 10


DEL ExpressionStatement@@MethodInvocation:builder.addDependency(EJBSuspendHandlerService.DEPLOYMENT_CONTROLLER) @AT@ 7572 @LENGTH@ 70
---DEL MethodInvocation@@builder.addDependency(EJBSuspendHandlerService.DEPLOYMENT_CONTROLLER) @AT@ 7572 @LENGTH@ 69
------DEL SimpleName@@Name:builder @AT@ 7572 @LENGTH@ 7
------DEL SimpleName@@MethodName:addDependency:[EJBSuspendHandlerService.DEPLOYMENT_CONTROLLER] @AT@ 7580 @LENGTH@ 61
---------DEL QualifiedName@@EJBSuspendHandlerService.DEPLOYMENT_CONTROLLER @AT@ 7594 @LENGTH@ 46
------------DEL SimpleName@@EJBSuspendHandlerService @AT@ 7594 @LENGTH@ 24
------------DEL SimpleName@@DEPLOYMENT_CONTROLLER @AT@ 7619 @LENGTH@ 21


UPD FieldDeclaration@@private, int, [services=8] @TO@ private, int, [services=9] @AT@ 1282 @LENGTH@ 25
---UPD VariableDeclarationFragment@@services=8 @TO@ services=9 @AT@ 1294 @LENGTH@ 12
------UPD NumberLiteral@@8 @TO@ 9 @AT@ 1305 @LENGTH@ 1


UPD ReturnStatement@@MethodInvocation:multiHashOrdered(parentHashCode(),3547,protoName.hashCode()) @TO@ MethodInvocation:multiHashUnordered(parentHashCode(),3547,protoName.hashCode()) @AT@ 1760 @LENGTH@ 70
---UPD MethodInvocation@@multiHashOrdered(parentHashCode(),3547,protoName.hashCode()) @TO@ multiHashUnordered(parentHashCode(),3547,protoName.hashCode()) @AT@ 1767 @LENGTH@ 62
------UPD SimpleName@@MethodName:multiHashOrdered:[parentHashCode(), 3547, protoName.hashCode()] @TO@ MethodName:multiHashUnordered:[parentHashCode(), 3547, protoName.hashCode()] @AT@ 1767 @LENGTH@ 62


UPD MethodDeclaration@@public, void, MethodName:start,  @TO@ public, void, MethodName:doStart,  @AT@ 3173 @LENGTH@ 24
---UPD SimpleName@@MethodName:start @TO@ MethodName:doStart @AT@ 3185 @LENGTH@ 5


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<InfluxDbComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<InfluxDbComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5463 @LENGTH@ 341
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 5467 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5467 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  ComponentCustomizer<InfluxDbComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ ThenBody:{  for (  ComponentCustomizer<InfluxDbComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5523 @LENGTH@ 281
------UPD EnhancedForStatement@@for (ComponentCustomizer<InfluxDbComponent> configurer : customizers) {  LOGGER.debug("Configure component {}, with configurer {}",component,configurer);  configurer.customize(component);} @TO@ for (ComponentCustomizer<InfluxDbComponent> customizer : customizers) {  LOGGER.debug("Configure component {}, with customizer {}",component,customizer);  customizer.customize(component);} @AT@ 5537 @LENGTH@ 257
---------UPD SingleVariableDeclaration@@ComponentCustomizer<InfluxDbComponent> configurer @TO@ ComponentCustomizer<InfluxDbComponent> customizer @AT@ 5542 @LENGTH@ 49
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5581 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5625 @LENGTH@ 106
------------UPD MethodInvocation@@LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5625 @LENGTH@ 105
---------------UPD SimpleName@@MethodName:debug:["Configure component {}, with configurer {}", component, configurer] @TO@ MethodName:debug:["Configure component {}, with customizer {}", component, customizer] @AT@ 5632 @LENGTH@ 98
------------------UPD StringLiteral@@"Configure component {}, with configurer {}" @TO@ "Configure component {}, with customizer {}" @AT@ 5638 @LENGTH@ 44
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5719 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(component) @TO@ MethodInvocation:customizer.customize(component) @AT@ 5748 @LENGTH@ 32
------------UPD MethodInvocation@@configurer.customize(component) @TO@ customizer.customize(component) @AT@ 5748 @LENGTH@ 31
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5748 @LENGTH@ 10


UPD FieldDeclaration@@public, static, boolean, [ONLY_FOR_TESTING=true] @TO@ public, static, final, boolean, [ONLY_FOR_TESTING=true] @AT@ 1130 @LENGTH@ 46
---INS Modifier@@final @TO@ FieldDeclaration@@public, static, boolean, [ONLY_FOR_TESTING=true] @AT@ 1144 @LENGTH@ 5


INS VariableDeclarationStatement@@DeploymentContext deploymentContext=this.deploymentContext.get(); @TO@ MethodDeclaration@@public, Object, MethodName:doLookup, ArquillianResource resource, Annotation... __,  @AT@ 3843 @LENGTH@ 67
---INS SimpleType@@DeploymentContext @TO@ VariableDeclarationStatement@@DeploymentContext deploymentContext=this.deploymentContext.get(); @AT@ 3843 @LENGTH@ 17
---INS VariableDeclarationFragment@@deploymentContext=this.deploymentContext.get() @TO@ VariableDeclarationStatement@@DeploymentContext deploymentContext=this.deploymentContext.get(); @AT@ 3861 @LENGTH@ 48
------MOV MethodInvocation@@this.deploymentContext.get() @TO@ VariableDeclarationFragment@@deploymentContext=this.deploymentContext.get() @AT@ 3848 @LENGTH@ 28
------INS SimpleName@@deploymentContext @TO@ VariableDeclarationFragment@@deploymentContext=this.deploymentContext.get() @AT@ 3861 @LENGTH@ 17


UPD ReturnStatement@@InfixExpression:calcHashCode() == other.calcHashCode() && halfEqual(other) && other.halfEqual(this) @TO@ InfixExpression:hashCode() == other.hashCode() && halfEqual(other) && other.halfEqual(this) @AT@ 44347 @LENGTH@ 91
---UPD InfixExpression@@calcHashCode() == other.calcHashCode() && halfEqual(other) && other.halfEqual(this) @TO@ hashCode() == other.hashCode() && halfEqual(other) && other.halfEqual(this) @AT@ 44354 @LENGTH@ 83
------UPD InfixExpression@@calcHashCode() == other.calcHashCode() && halfEqual(other) @TO@ hashCode() == other.hashCode() && halfEqual(other) @AT@ 44354 @LENGTH@ 58
---------UPD InfixExpression@@calcHashCode() == other.calcHashCode() @TO@ hashCode() == other.hashCode() @AT@ 44354 @LENGTH@ 38
------------UPD MethodInvocation@@MethodName:calcHashCode:[] @TO@ MethodName:hashCode:[] @AT@ 44354 @LENGTH@ 14
------------UPD MethodInvocation@@other.calcHashCode() @TO@ other.hashCode() @AT@ 44372 @LENGTH@ 20
---------------UPD SimpleName@@MethodName:calcHashCode:[] @TO@ MethodName:hashCode:[] @AT@ 44378 @LENGTH@ 14


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled(); @AT@ 5260 @LENGTH@ 160
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5268 @LENGTH@ 151
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5268 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5285 @LENGTH@ 134
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 5285 @LENGTH@ 64
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5285 @LENGTH@ 35
---------UPD MethodInvocation@@componentConfiguration.getConfigurer().isEnabled() @TO@ componentConfiguration.getCustomizer().isEnabled() @AT@ 5369 @LENGTH@ 50
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5369 @LENGTH@ 38


INS MethodDeclaration@@public, void, MethodName:findsPeopleByLocationNearUsingGeoJsonType,  @TO@ TypeDeclaration@@[@RunWith(SpringJUnit4ClassRunner.class), public, abstract]AbstractPersonRepositoryIntegrationTests,  @AT@ 8753 @LENGTH@ 312
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:findsPeopleByLocationNearUsingGeoJsonType,  @AT@ 8753 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:findsPeopleByLocationNearUsingGeoJsonType,  @AT@ 8760 @LENGTH@ 4
---INS SimpleName@@MethodName:findsPeopleByLocationNearUsingGeoJsonType @TO@ MethodDeclaration@@public, void, MethodName:findsPeopleByLocationNearUsingGeoJsonType,  @AT@ 8765 @LENGTH@ 41
---INS VariableDeclarationStatement@@GeoJsonPoint point=new GeoJsonPoint(-73.99171,40.738868); @TO@ MethodDeclaration@@public, void, MethodName:findsPeopleByLocationNearUsingGeoJsonType,  @AT@ 8814 @LENGTH@ 60
------INS SimpleType@@GeoJsonPoint @TO@ VariableDeclarationStatement@@GeoJsonPoint point=new GeoJsonPoint(-73.99171,40.738868); @AT@ 8814 @LENGTH@ 12
------INS VariableDeclarationFragment@@point=new GeoJsonPoint(-73.99171,40.738868) @TO@ VariableDeclarationStatement@@GeoJsonPoint point=new GeoJsonPoint(-73.99171,40.738868); @AT@ 8827 @LENGTH@ 46
---------INS SimpleName@@point @TO@ VariableDeclarationFragment@@point=new GeoJsonPoint(-73.99171,40.738868) @AT@ 8827 @LENGTH@ 5
---------INS ClassInstanceCreation@@GeoJsonPoint[-73.99171, 40.738868] @TO@ VariableDeclarationFragment@@point=new GeoJsonPoint(-73.99171,40.738868) @AT@ 8835 @LENGTH@ 38
------------INS New@@new @TO@ ClassInstanceCreation@@GeoJsonPoint[-73.99171, 40.738868] @AT@ 8835 @LENGTH@ 3
------------INS SimpleType@@GeoJsonPoint @TO@ ClassInstanceCreation@@GeoJsonPoint[-73.99171, 40.738868] @AT@ 8839 @LENGTH@ 12
------------INS PrefixExpression@@-73.99171 @TO@ ClassInstanceCreation@@GeoJsonPoint[-73.99171, 40.738868] @AT@ 8852 @LENGTH@ 9
---------------INS Operator@@- @TO@ PrefixExpression@@-73.99171 @AT@ 8852 @LENGTH@ 1
---------------INS NumberLiteral@@73.99171 @TO@ PrefixExpression@@-73.99171 @AT@ 8853 @LENGTH@ 8
------------INS NumberLiteral@@40.738868 @TO@ ClassInstanceCreation@@GeoJsonPoint[-73.99171, 40.738868] @AT@ 8863 @LENGTH@ 9
---INS ExpressionStatement@@MethodInvocation:dave.setLocation(point) @TO@ MethodDeclaration@@public, void, MethodName:findsPeopleByLocationNearUsingGeoJsonType,  @AT@ 8877 @LENGTH@ 24
------INS MethodInvocation@@dave.setLocation(point) @TO@ ExpressionStatement@@MethodInvocation:dave.setLocation(point) @AT@ 8877 @LENGTH@ 23
---------INS SimpleName@@Name:dave @TO@ MethodInvocation@@dave.setLocation(point) @AT@ 8877 @LENGTH@ 4
---------INS SimpleName@@MethodName:setLocation:[point] @TO@ MethodInvocation@@dave.setLocation(point) @AT@ 8882 @LENGTH@ 18
------------INS SimpleName@@point @TO@ SimpleName@@MethodName:setLocation:[point] @AT@ 8894 @LENGTH@ 5
---INS ExpressionStatement@@MethodInvocation:repository.save(dave) @TO@ MethodDeclaration@@public, void, MethodName:findsPeopleByLocationNearUsingGeoJsonType,  @AT@ 8904 @LENGTH@ 22
------INS MethodInvocation@@repository.save(dave) @TO@ ExpressionStatement@@MethodInvocation:repository.save(dave) @AT@ 8904 @LENGTH@ 21
---------INS SimpleName@@Name:repository @TO@ MethodInvocation@@repository.save(dave) @AT@ 8904 @LENGTH@ 10
---------INS SimpleName@@MethodName:save:[dave] @TO@ MethodInvocation@@repository.save(dave) @AT@ 8915 @LENGTH@ 10
------------INS SimpleName@@dave @TO@ SimpleName@@MethodName:save:[dave] @AT@ 8920 @LENGTH@ 4
---INS VariableDeclarationStatement@@List<Person> result=repository.findByLocationNear(point); @TO@ MethodDeclaration@@public, void, MethodName:findsPeopleByLocationNearUsingGeoJsonType,  @AT@ 8930 @LENGTH@ 59
------INS ParameterizedType@@List<Person> @TO@ VariableDeclarationStatement@@List<Person> result=repository.findByLocationNear(point); @AT@ 8930 @LENGTH@ 12
---------INS SimpleType@@List @TO@ ParameterizedType@@List<Person> @AT@ 8930 @LENGTH@ 4
---------INS SimpleType@@Person @TO@ ParameterizedType@@List<Person> @AT@ 8935 @LENGTH@ 6
------INS VariableDeclarationFragment@@result=repository.findByLocationNear(point) @TO@ VariableDeclarationStatement@@List<Person> result=repository.findByLocationNear(point); @AT@ 8943 @LENGTH@ 45
---------INS SimpleName@@result @TO@ VariableDeclarationFragment@@result=repository.findByLocationNear(point) @AT@ 8943 @LENGTH@ 6
---------INS MethodInvocation@@repository.findByLocationNear(point) @TO@ VariableDeclarationFragment@@result=repository.findByLocationNear(point) @AT@ 8952 @LENGTH@ 36
------------INS SimpleName@@Name:repository @TO@ MethodInvocation@@repository.findByLocationNear(point) @AT@ 8952 @LENGTH@ 10
------------INS SimpleName@@MethodName:findByLocationNear:[point] @TO@ MethodInvocation@@repository.findByLocationNear(point) @AT@ 8963 @LENGTH@ 25
---------------INS SimpleName@@point @TO@ SimpleName@@MethodName:findByLocationNear:[point] @AT@ 8982 @LENGTH@ 5
---INS ExpressionStatement@@MethodInvocation:assertThat(result.size(),is(1)) @TO@ MethodDeclaration@@public, void, MethodName:findsPeopleByLocationNearUsingGeoJsonType,  @AT@ 8992 @LENGTH@ 33
------INS MethodInvocation@@assertThat(result.size(),is(1)) @TO@ ExpressionStatement@@MethodInvocation:assertThat(result.size(),is(1)) @AT@ 8992 @LENGTH@ 32
---------INS SimpleName@@MethodName:assertThat:[result.size(), is(1)] @TO@ MethodInvocation@@assertThat(result.size(),is(1)) @AT@ 8992 @LENGTH@ 32
------------INS MethodInvocation@@result.size() @TO@ SimpleName@@MethodName:assertThat:[result.size(), is(1)] @AT@ 9003 @LENGTH@ 13
---------------INS SimpleName@@Name:result @TO@ MethodInvocation@@result.size() @AT@ 9003 @LENGTH@ 6
---------------INS SimpleName@@MethodName:size:[] @TO@ MethodInvocation@@result.size() @AT@ 9010 @LENGTH@ 6
------------INS MethodInvocation@@is(1) @TO@ SimpleName@@MethodName:assertThat:[result.size(), is(1)] @AT@ 9018 @LENGTH@ 5
---------------INS SimpleName@@MethodName:is:[1] @TO@ MethodInvocation@@is(1) @AT@ 9018 @LENGTH@ 5
------------------INS NumberLiteral@@1 @TO@ SimpleName@@MethodName:is:[1] @AT@ 9021 @LENGTH@ 1
---------------INS SimpleName@@MethodName:is:[1] @TO@ MethodInvocation@@is(1) @AT@ 9018 @LENGTH@ 5
------------------INS NumberLiteral@@1 @TO@ SimpleName@@MethodName:is:[1] @AT@ 9021 @LENGTH@ 1
---INS ExpressionStatement@@MethodInvocation:assertThat(result,hasItem(dave)) @TO@ MethodDeclaration@@public, void, MethodName:findsPeopleByLocationNearUsingGeoJsonType,  @AT@ 9028 @LENGTH@ 34
------INS MethodInvocation@@assertThat(result,hasItem(dave)) @TO@ ExpressionStatement@@MethodInvocation:assertThat(result,hasItem(dave)) @AT@ 9028 @LENGTH@ 33
---------INS SimpleName@@MethodName:assertThat:[result, hasItem(dave)] @TO@ MethodInvocation@@assertThat(result,hasItem(dave)) @AT@ 9028 @LENGTH@ 33
------------INS SimpleName@@result @TO@ SimpleName@@MethodName:assertThat:[result, hasItem(dave)] @AT@ 9039 @LENGTH@ 6
------------INS MethodInvocation@@hasItem(dave) @TO@ SimpleName@@MethodName:assertThat:[result, hasItem(dave)] @AT@ 9047 @LENGTH@ 13
---------------INS SimpleName@@MethodName:hasItem:[dave] @TO@ MethodInvocation@@hasItem(dave) @AT@ 9047 @LENGTH@ 13
------------------INS SimpleName@@dave @TO@ SimpleName@@MethodName:hasItem:[dave] @AT@ 9055 @LENGTH@ 4


UPD FieldDeclaration@@private, static, long, [serialVersionUID=1L] @TO@ private, static, final, long, [serialVersionUID=1L] @AT@ 957 @LENGTH@ 42
---INS Modifier@@final @TO@ FieldDeclaration@@private, static, long, [serialVersionUID=1L] @AT@ 923 @LENGTH@ 5


UPD VariableDeclarationStatement@@ReverseProxy proxy=new ReverseProxy(proxyHandlerName(serviceName)).hosts(Collections.emptyList()); @TO@ ReverseProxy<?> proxy=new ReverseProxy<>(proxyHandlerName(serviceName)).hosts(Collections.emptyList()); @AT@ 2019 @LENGTH@ 100
---DEL SimpleType@@ReverseProxy @AT@ 2019 @LENGTH@ 12
---UPD VariableDeclarationFragment@@proxy=new ReverseProxy(proxyHandlerName(serviceName)).hosts(Collections.emptyList()) @TO@ proxy=new ReverseProxy<>(proxyHandlerName(serviceName)).hosts(Collections.emptyList()) @AT@ 2032 @LENGTH@ 86
------UPD MethodInvocation@@new ReverseProxy(proxyHandlerName(serviceName)).hosts(Collections.emptyList()) @TO@ new ReverseProxy<>(proxyHandlerName(serviceName)).hosts(Collections.emptyList()) @AT@ 2040 @LENGTH@ 78
---------UPD ClassInstanceCreation@@ReverseProxy[proxyHandlerName(serviceName)] @TO@ ReverseProxy<>[proxyHandlerName(serviceName)] @AT@ 2040 @LENGTH@ 47
------------DEL SimpleType@@ReverseProxy @AT@ 2044 @LENGTH@ 12
------------INS ParameterizedType@@ReverseProxy<> @TO@ ClassInstanceCreation@@ReverseProxy[proxyHandlerName(serviceName)] @AT@ 2111 @LENGTH@ 14
---------------INS SimpleType@@ReverseProxy @TO@ ParameterizedType@@ReverseProxy<> @AT@ 2111 @LENGTH@ 12
---INS ParameterizedType@@ReverseProxy<?> @TO@ VariableDeclarationStatement@@ReverseProxy proxy=new ReverseProxy(proxyHandlerName(serviceName)).hosts(Collections.emptyList()); @AT@ 2083 @LENGTH@ 15
------INS SimpleType@@ReverseProxy @TO@ ParameterizedType@@ReverseProxy<?> @AT@ 2083 @LENGTH@ 12
------INS WildcardType@@? @TO@ ParameterizedType@@ReverseProxy<?> @AT@ 2096 @LENGTH@ 1


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  DataFormatCustomizer<CastorDataFormat> configurer : customizers) {    LOGGER.debug("Configure dataformat {}, with configurer {}",dataformat,configurer);    configurer.customize(dataformat);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  DataFormatCustomizer<CastorDataFormat> customizer : customizers) {    LOGGER.debug("Configure dataformat {}, with customizer {}",dataformat,customizer);    customizer.customize(dataformat);  }} @AT@ 5332 @LENGTH@ 425
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 5336 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5336 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  DataFormatCustomizer<CastorDataFormat> configurer : customizers) {    LOGGER.debug("Configure dataformat {}, with configurer {}",dataformat,configurer);    configurer.customize(dataformat);  }} @TO@ ThenBody:{  for (  DataFormatCustomizer<CastorDataFormat> customizer : customizers) {    LOGGER.debug("Configure dataformat {}, with customizer {}",dataformat,customizer);    customizer.customize(dataformat);  }} @AT@ 5392 @LENGTH@ 365
------UPD EnhancedForStatement@@for (DataFormatCustomizer<CastorDataFormat> configurer : customizers) {  LOGGER.debug("Configure dataformat {}, with configurer {}",dataformat,configurer);  configurer.customize(dataformat);} @TO@ for (DataFormatCustomizer<CastorDataFormat> customizer : customizers) {  LOGGER.debug("Configure dataformat {}, with customizer {}",dataformat,customizer);  customizer.customize(dataformat);} @AT@ 5414 @LENGTH@ 325
---------UPD SingleVariableDeclaration@@DataFormatCustomizer<CastorDataFormat> configurer @TO@ DataFormatCustomizer<CastorDataFormat> customizer @AT@ 5419 @LENGTH@ 49
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5458 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure dataformat {}, with configurer {}",dataformat,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure dataformat {}, with customizer {}",dataformat,customizer) @AT@ 5510 @LENGTH@ 149
------------UPD MethodInvocation@@LOGGER.debug("Configure dataformat {}, with configurer {}",dataformat,configurer) @TO@ LOGGER.debug("Configure dataformat {}, with customizer {}",dataformat,customizer) @AT@ 5510 @LENGTH@ 148
---------------UPD SimpleName@@MethodName:debug:["Configure dataformat {}, with configurer {}", dataformat, configurer] @TO@ MethodName:debug:["Configure dataformat {}, with customizer {}", dataformat, customizer] @AT@ 5517 @LENGTH@ 141
------------------UPD StringLiteral@@"Configure dataformat {}, with configurer {}" @TO@ "Configure dataformat {}, with customizer {}" @AT@ 5556 @LENGTH@ 45
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5647 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(dataformat) @TO@ MethodInvocation:customizer.customize(dataformat) @AT@ 5684 @LENGTH@ 33
------------UPD MethodInvocation@@configurer.customize(dataformat) @TO@ customizer.customize(dataformat) @AT@ 5684 @LENGTH@ 32
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5684 @LENGTH@ 10


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<RestApiComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<RestApiComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5442 @LENGTH@ 340
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 5446 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5446 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  ComponentCustomizer<RestApiComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ ThenBody:{  for (  ComponentCustomizer<RestApiComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5502 @LENGTH@ 280
------UPD EnhancedForStatement@@for (ComponentCustomizer<RestApiComponent> configurer : customizers) {  LOGGER.debug("Configure component {}, with configurer {}",component,configurer);  configurer.customize(component);} @TO@ for (ComponentCustomizer<RestApiComponent> customizer : customizers) {  LOGGER.debug("Configure component {}, with customizer {}",component,customizer);  customizer.customize(component);} @AT@ 5516 @LENGTH@ 256
---------UPD SingleVariableDeclaration@@ComponentCustomizer<RestApiComponent> configurer @TO@ ComponentCustomizer<RestApiComponent> customizer @AT@ 5521 @LENGTH@ 48
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5559 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5603 @LENGTH@ 106
------------UPD MethodInvocation@@LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5603 @LENGTH@ 105
---------------UPD SimpleName@@MethodName:debug:["Configure component {}, with configurer {}", component, configurer] @TO@ MethodName:debug:["Configure component {}, with customizer {}", component, customizer] @AT@ 5610 @LENGTH@ 98
------------------UPD StringLiteral@@"Configure component {}, with configurer {}" @TO@ "Configure component {}, with customizer {}" @AT@ 5616 @LENGTH@ 44
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5697 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(component) @TO@ MethodInvocation:customizer.customize(component) @AT@ 5726 @LENGTH@ 32
------------UPD MethodInvocation@@configurer.customize(component) @TO@ customizer.customize(component) @AT@ 5726 @LENGTH@ 31
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5726 @LENGTH@ 10


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<NagiosComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<NagiosComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5429 @LENGTH@ 339
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 5433 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5433 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  ComponentCustomizer<NagiosComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ ThenBody:{  for (  ComponentCustomizer<NagiosComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5489 @LENGTH@ 279
------UPD EnhancedForStatement@@for (ComponentCustomizer<NagiosComponent> configurer : customizers) {  LOGGER.debug("Configure component {}, with configurer {}",component,configurer);  configurer.customize(component);} @TO@ for (ComponentCustomizer<NagiosComponent> customizer : customizers) {  LOGGER.debug("Configure component {}, with customizer {}",component,customizer);  customizer.customize(component);} @AT@ 5503 @LENGTH@ 255
---------UPD SingleVariableDeclaration@@ComponentCustomizer<NagiosComponent> configurer @TO@ ComponentCustomizer<NagiosComponent> customizer @AT@ 5508 @LENGTH@ 47
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5545 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5589 @LENGTH@ 106
------------UPD MethodInvocation@@LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5589 @LENGTH@ 105
---------------UPD SimpleName@@MethodName:debug:["Configure component {}, with configurer {}", component, configurer] @TO@ MethodName:debug:["Configure component {}, with customizer {}", component, customizer] @AT@ 5596 @LENGTH@ 98
------------------UPD StringLiteral@@"Configure component {}, with configurer {}" @TO@ "Configure component {}, with customizer {}" @AT@ 5602 @LENGTH@ 44
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5683 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(component) @TO@ MethodInvocation:customizer.customize(component) @AT@ 5712 @LENGTH@ 32
------------UPD MethodInvocation@@configurer.customize(component) @TO@ customizer.customize(component) @AT@ 5712 @LENGTH@ 31
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5712 @LENGTH@ 10


INS MethodDeclaration@@public, void, MethodName:addsLazilyEvaluatedObjectToList, Exception,  @TO@ TypeDeclaration@@[public]AddOperationTests,  @AT@ 2750 @LENGTH@ 430
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:addsLazilyEvaluatedObjectToList, Exception,  @AT@ 2750 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:addsLazilyEvaluatedObjectToList, Exception,  @AT@ 2757 @LENGTH@ 4
---INS SimpleName@@MethodName:addsLazilyEvaluatedObjectToList @TO@ MethodDeclaration@@public, void, MethodName:addsLazilyEvaluatedObjectToList, Exception,  @AT@ 2762 @LENGTH@ 31
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:addsLazilyEvaluatedObjectToList, Exception,  @AT@ 2803 @LENGTH@ 9
---INS VariableDeclarationStatement@@Todo todo=new Todo(1L,"description",false); @TO@ MethodDeclaration@@public, void, MethodName:addsLazilyEvaluatedObjectToList, Exception,  @AT@ 2818 @LENGTH@ 47
------INS SimpleType@@Todo @TO@ VariableDeclarationStatement@@Todo todo=new Todo(1L,"description",false); @AT@ 2818 @LENGTH@ 4
------INS VariableDeclarationFragment@@todo=new Todo(1L,"description",false) @TO@ VariableDeclarationStatement@@Todo todo=new Todo(1L,"description",false); @AT@ 2823 @LENGTH@ 41
---------INS SimpleName@@todo @TO@ VariableDeclarationFragment@@todo=new Todo(1L,"description",false) @AT@ 2823 @LENGTH@ 4
---------INS ClassInstanceCreation@@Todo[1L, "description", false] @TO@ VariableDeclarationFragment@@todo=new Todo(1L,"description",false) @AT@ 2830 @LENGTH@ 34
------------INS New@@new @TO@ ClassInstanceCreation@@Todo[1L, "description", false] @AT@ 2830 @LENGTH@ 3
------------INS SimpleType@@Todo @TO@ ClassInstanceCreation@@Todo[1L, "description", false] @AT@ 2834 @LENGTH@ 4
------------INS NumberLiteral@@1L @TO@ ClassInstanceCreation@@Todo[1L, "description", false] @AT@ 2839 @LENGTH@ 2
------------INS StringLiteral@@"description" @TO@ ClassInstanceCreation@@Todo[1L, "description", false] @AT@ 2843 @LENGTH@ 13
------------INS BooleanLiteral@@false @TO@ ClassInstanceCreation@@Todo[1L, "description", false] @AT@ 2858 @LENGTH@ 5
---INS VariableDeclarationStatement@@ObjectMapper mapper=new ObjectMapper(); @TO@ MethodDeclaration@@public, void, MethodName:addsLazilyEvaluatedObjectToList, Exception,  @AT@ 2869 @LENGTH@ 41
------INS SimpleType@@ObjectMapper @TO@ VariableDeclarationStatement@@ObjectMapper mapper=new ObjectMapper(); @AT@ 2869 @LENGTH@ 12
------INS VariableDeclarationFragment@@mapper=new ObjectMapper() @TO@ VariableDeclarationStatement@@ObjectMapper mapper=new ObjectMapper(); @AT@ 2882 @LENGTH@ 27
---------INS SimpleName@@mapper @TO@ VariableDeclarationFragment@@mapper=new ObjectMapper() @AT@ 2882 @LENGTH@ 6
---------INS ClassInstanceCreation@@ObjectMapper[] @TO@ VariableDeclarationFragment@@mapper=new ObjectMapper() @AT@ 2891 @LENGTH@ 18
------------INS New@@new @TO@ ClassInstanceCreation@@ObjectMapper[] @AT@ 2891 @LENGTH@ 3
------------INS SimpleType@@ObjectMapper @TO@ ClassInstanceCreation@@ObjectMapper[] @AT@ 2895 @LENGTH@ 12
---INS VariableDeclarationStatement@@JsonNode node=mapper.readTree("\"Some text.\""); @TO@ MethodDeclaration@@public, void, MethodName:addsLazilyEvaluatedObjectToList, Exception,  @AT@ 2913 @LENGTH@ 50
------INS SimpleType@@JsonNode @TO@ VariableDeclarationStatement@@JsonNode node=mapper.readTree("\"Some text.\""); @AT@ 2913 @LENGTH@ 8
------INS VariableDeclarationFragment@@node=mapper.readTree("\"Some text.\"") @TO@ VariableDeclarationStatement@@JsonNode node=mapper.readTree("\"Some text.\""); @AT@ 2922 @LENGTH@ 40
---------INS SimpleName@@node @TO@ VariableDeclarationFragment@@node=mapper.readTree("\"Some text.\"") @AT@ 2922 @LENGTH@ 4
---------INS MethodInvocation@@mapper.readTree("\"Some text.\"") @TO@ VariableDeclarationFragment@@node=mapper.readTree("\"Some text.\"") @AT@ 2929 @LENGTH@ 33
------------INS SimpleName@@Name:mapper @TO@ MethodInvocation@@mapper.readTree("\"Some text.\"") @AT@ 2929 @LENGTH@ 6
------------INS SimpleName@@MethodName:readTree:["\"Some text.\""] @TO@ MethodInvocation@@mapper.readTree("\"Some text.\"") @AT@ 2936 @LENGTH@ 26
---------------INS StringLiteral@@"\"Some text.\"" @TO@ SimpleName@@MethodName:readTree:["\"Some text.\""] @AT@ 2945 @LENGTH@ 16
---INS VariableDeclarationStatement@@JsonLateObjectEvaluator evaluator=new JsonLateObjectEvaluator(mapper,node); @TO@ MethodDeclaration@@public, void, MethodName:addsLazilyEvaluatedObjectToList, Exception,  @AT@ 2966 @LENGTH@ 78
------INS SimpleType@@JsonLateObjectEvaluator @TO@ VariableDeclarationStatement@@JsonLateObjectEvaluator evaluator=new JsonLateObjectEvaluator(mapper,node); @AT@ 2966 @LENGTH@ 23
------INS VariableDeclarationFragment@@evaluator=new JsonLateObjectEvaluator(mapper,node) @TO@ VariableDeclarationStatement@@JsonLateObjectEvaluator evaluator=new JsonLateObjectEvaluator(mapper,node); @AT@ 2990 @LENGTH@ 53
---------INS SimpleName@@evaluator @TO@ VariableDeclarationFragment@@evaluator=new JsonLateObjectEvaluator(mapper,node) @AT@ 2990 @LENGTH@ 9
---------INS ClassInstanceCreation@@JsonLateObjectEvaluator[mapper, node] @TO@ VariableDeclarationFragment@@evaluator=new JsonLateObjectEvaluator(mapper,node) @AT@ 3002 @LENGTH@ 41
------------INS New@@new @TO@ ClassInstanceCreation@@JsonLateObjectEvaluator[mapper, node] @AT@ 3002 @LENGTH@ 3
------------INS SimpleType@@JsonLateObjectEvaluator @TO@ ClassInstanceCreation@@JsonLateObjectEvaluator[mapper, node] @AT@ 3006 @LENGTH@ 23
------------INS SimpleName@@mapper @TO@ ClassInstanceCreation@@JsonLateObjectEvaluator[mapper, node] @AT@ 3030 @LENGTH@ 6
------------INS SimpleName@@node @TO@ ClassInstanceCreation@@JsonLateObjectEvaluator[mapper, node] @AT@ 3038 @LENGTH@ 4
---INS ExpressionStatement@@MethodInvocation:new AddOperation("/items/-",evaluator).perform(todo,Todo.class) @TO@ MethodDeclaration@@public, void, MethodName:addsLazilyEvaluatedObjectToList, Exception,  @AT@ 3048 @LENGTH@ 66
------INS MethodInvocation@@new AddOperation("/items/-",evaluator).perform(todo,Todo.class) @TO@ ExpressionStatement@@MethodInvocation:new AddOperation("/items/-",evaluator).perform(todo,Todo.class) @AT@ 3048 @LENGTH@ 65
---------INS ClassInstanceCreation@@AddOperation["/items/-", evaluator] @TO@ MethodInvocation@@new AddOperation("/items/-",evaluator).perform(todo,Todo.class) @AT@ 3048 @LENGTH@ 39
------------INS New@@new @TO@ ClassInstanceCreation@@AddOperation["/items/-", evaluator] @AT@ 3048 @LENGTH@ 3
------------INS SimpleType@@AddOperation @TO@ ClassInstanceCreation@@AddOperation["/items/-", evaluator] @AT@ 3052 @LENGTH@ 12
------------INS StringLiteral@@"/items/-" @TO@ ClassInstanceCreation@@AddOperation["/items/-", evaluator] @AT@ 3065 @LENGTH@ 10
------------INS SimpleName@@evaluator @TO@ ClassInstanceCreation@@AddOperation["/items/-", evaluator] @AT@ 3077 @LENGTH@ 9
---------INS SimpleName@@MethodName:perform:[todo, Todo.class] @TO@ MethodInvocation@@new AddOperation("/items/-",evaluator).perform(todo,Todo.class) @AT@ 3088 @LENGTH@ 25
------------INS SimpleName@@todo @TO@ SimpleName@@MethodName:perform:[todo, Todo.class] @AT@ 3096 @LENGTH@ 4
------------INS TypeLiteral@@Todo.class @TO@ SimpleName@@MethodName:perform:[todo, Todo.class] @AT@ 3102 @LENGTH@ 10
---INS ExpressionStatement@@MethodInvocation:assertThat(todo.getItems().get(0)).isEqualTo("Some text.") @TO@ MethodDeclaration@@public, void, MethodName:addsLazilyEvaluatedObjectToList, Exception,  @AT@ 3118 @LENGTH@ 59
------INS MethodInvocation@@assertThat(todo.getItems().get(0)).isEqualTo("Some text.") @TO@ ExpressionStatement@@MethodInvocation:assertThat(todo.getItems().get(0)).isEqualTo("Some text.") @AT@ 3118 @LENGTH@ 58
---------INS MethodInvocation@@MethodName:assertThat:[todo.getItems().get(0)] @TO@ MethodInvocation@@assertThat(todo.getItems().get(0)).isEqualTo("Some text.") @AT@ 3118 @LENGTH@ 34
------------INS MethodInvocation@@todo.getItems().get(0) @TO@ MethodInvocation@@MethodName:assertThat:[todo.getItems().get(0)] @AT@ 3129 @LENGTH@ 22
---------------INS MethodInvocation@@MethodName:getItems:[] @TO@ MethodInvocation@@todo.getItems().get(0) @AT@ 3129 @LENGTH@ 15
---------------INS SimpleName@@Name:todo @TO@ MethodInvocation@@todo.getItems().get(0) @AT@ 3129 @LENGTH@ 4
---------------INS SimpleName@@MethodName:get:[0] @TO@ MethodInvocation@@todo.getItems().get(0) @AT@ 3145 @LENGTH@ 6
------------------INS NumberLiteral@@0 @TO@ SimpleName@@MethodName:get:[0] @AT@ 3149 @LENGTH@ 1
---------INS SimpleName@@MethodName:isEqualTo:["Some text."] @TO@ MethodInvocation@@assertThat(todo.getItems().get(0)).isEqualTo("Some text.") @AT@ 3153 @LENGTH@ 23
------------INS StringLiteral@@"Some text." @TO@ SimpleName@@MethodName:isEqualTo:["Some text."] @AT@ 3163 @LENGTH@ 12


UPD VariableDeclarationStatement@@AclImpl acl=(AclImpl)mutableAclService.readAclById(new ObjectIdentityImpl(Contact.class,new Long(contactNumber))); @TO@ AclImpl acl=(AclImpl)mutableAclService.readAclById(new ObjectIdentityImpl(Contact.class,Long.valueOf(contactNumber))); @AT@ 12640 @LENGTH@ 123
---UPD VariableDeclarationFragment@@acl=(AclImpl)mutableAclService.readAclById(new ObjectIdentityImpl(Contact.class,new Long(contactNumber))) @TO@ acl=(AclImpl)mutableAclService.readAclById(new ObjectIdentityImpl(Contact.class,Long.valueOf(contactNumber))) @AT@ 12648 @LENGTH@ 114
------UPD CastExpression@@(AclImpl)mutableAclService.readAclById(new ObjectIdentityImpl(Contact.class,new Long(contactNumber))) @TO@ (AclImpl)mutableAclService.readAclById(new ObjectIdentityImpl(Contact.class,Long.valueOf(contactNumber))) @AT@ 12654 @LENGTH@ 108
---------UPD MethodInvocation@@mutableAclService.readAclById(new ObjectIdentityImpl(Contact.class,new Long(contactNumber))) @TO@ mutableAclService.readAclById(new ObjectIdentityImpl(Contact.class,Long.valueOf(contactNumber))) @AT@ 12664 @LENGTH@ 98
------------UPD SimpleName@@MethodName:readAclById:[new ObjectIdentityImpl(Contact.class,new Long(contactNumber))] @TO@ MethodName:readAclById:[new ObjectIdentityImpl(Contact.class,Long.valueOf(contactNumber))] @AT@ 12682 @LENGTH@ 80
---------------UPD ClassInstanceCreation@@ObjectIdentityImpl[Contact.class, new Long(contactNumber)] @TO@ ObjectIdentityImpl[Contact.class, Long.valueOf(contactNumber)] @AT@ 12694 @LENGTH@ 67
------------------DEL ClassInstanceCreation@@Long[contactNumber] @AT@ 12737 @LENGTH@ 23
---------------------DEL New@@new @AT@ 12737 @LENGTH@ 3
---------------------DEL SimpleType@@Long @AT@ 12741 @LENGTH@ 4
---------------------DEL SimpleName@@contactNumber @AT@ 12746 @LENGTH@ 13
------------------INS MethodInvocation@@Long.valueOf(contactNumber) @TO@ ClassInstanceCreation@@ObjectIdentityImpl[Contact.class, new Long(contactNumber)] @AT@ 12741 @LENGTH@ 27
---------------------INS SimpleName@@Name:Long @TO@ MethodInvocation@@Long.valueOf(contactNumber) @AT@ 12741 @LENGTH@ 4
---------------------INS SimpleName@@MethodName:valueOf:[contactNumber] @TO@ MethodInvocation@@Long.valueOf(contactNumber) @AT@ 12746 @LENGTH@ 22
------------------------INS SimpleName@@contactNumber @TO@ SimpleName@@MethodName:valueOf:[contactNumber] @AT@ 12754 @LENGTH@ 13


MOV FieldDeclaration@@private, ProducerTemplate, [producerTemplate] @TO@ TypeDeclaration@@[@RunWith(SpringRunner.class), @SpringBootApplication, @DirtiesContext, @ContextConfiguration(classes={JettyHttpComponentAutoConfiguration9.class,CamelAutoConfiguration.class}), @SpringBootTest(properties={"camel.ssl.enabled=true","camel.ssl.config.cert-alias=web","camel.ssl.config.key-managers.key-password=changeit","camel.ssl.config.key-managers.key-store.resource=/keystore.p12","camel.ssl.config.key-managers.key-store.password=changeit","camel.ssl.config.key-managers.key-store.type=PKCS12","camel.ssl.config.trust-managers.key-store.resource=/cacerts","camel.ssl.config.trust-managers.key-store.password=changeit","camel.ssl.config.trust-managers.key-store.type=jks"}), public]Jetty9SSLTest,  @AT@ 2542 @LENGTH@ 42


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<JBPMComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<JBPMComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5395 @LENGTH@ 337
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 5399 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5399 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  ComponentCustomizer<JBPMComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ ThenBody:{  for (  ComponentCustomizer<JBPMComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5455 @LENGTH@ 277
------UPD EnhancedForStatement@@for (ComponentCustomizer<JBPMComponent> configurer : customizers) {  LOGGER.debug("Configure component {}, with configurer {}",component,configurer);  configurer.customize(component);} @TO@ for (ComponentCustomizer<JBPMComponent> customizer : customizers) {  LOGGER.debug("Configure component {}, with customizer {}",component,customizer);  customizer.customize(component);} @AT@ 5469 @LENGTH@ 253
---------UPD SingleVariableDeclaration@@ComponentCustomizer<JBPMComponent> configurer @TO@ ComponentCustomizer<JBPMComponent> customizer @AT@ 5474 @LENGTH@ 45
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5509 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5553 @LENGTH@ 106
------------UPD MethodInvocation@@LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5553 @LENGTH@ 105
---------------UPD SimpleName@@MethodName:debug:["Configure component {}, with configurer {}", component, configurer] @TO@ MethodName:debug:["Configure component {}, with customizer {}", component, customizer] @AT@ 5560 @LENGTH@ 98
------------------UPD StringLiteral@@"Configure component {}, with configurer {}" @TO@ "Configure component {}, with customizer {}" @AT@ 5566 @LENGTH@ 44
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5647 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(component) @TO@ MethodInvocation:customizer.customize(component) @AT@ 5676 @LENGTH@ 32
------------UPD MethodInvocation@@configurer.customize(component) @TO@ customizer.customize(component) @AT@ 5676 @LENGTH@ 31
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5676 @LENGTH@ 10


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<HazelcastInstanceComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<HazelcastInstanceComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5652 @LENGTH@ 350
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 5656 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5656 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  ComponentCustomizer<HazelcastInstanceComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ ThenBody:{  for (  ComponentCustomizer<HazelcastInstanceComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5712 @LENGTH@ 290
------UPD EnhancedForStatement@@for (ComponentCustomizer<HazelcastInstanceComponent> configurer : customizers) {  LOGGER.debug("Configure component {}, with configurer {}",component,configurer);  configurer.customize(component);} @TO@ for (ComponentCustomizer<HazelcastInstanceComponent> customizer : customizers) {  LOGGER.debug("Configure component {}, with customizer {}",component,customizer);  customizer.customize(component);} @AT@ 5726 @LENGTH@ 266
---------UPD SingleVariableDeclaration@@ComponentCustomizer<HazelcastInstanceComponent> configurer @TO@ ComponentCustomizer<HazelcastInstanceComponent> customizer @AT@ 5731 @LENGTH@ 58
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5779 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5823 @LENGTH@ 106
------------UPD MethodInvocation@@LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5823 @LENGTH@ 105
---------------UPD SimpleName@@MethodName:debug:["Configure component {}, with configurer {}", component, configurer] @TO@ MethodName:debug:["Configure component {}, with customizer {}", component, customizer] @AT@ 5830 @LENGTH@ 98
------------------UPD StringLiteral@@"Configure component {}, with configurer {}" @TO@ "Configure component {}, with customizer {}" @AT@ 5836 @LENGTH@ 44
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5917 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(component) @TO@ MethodInvocation:customizer.customize(component) @AT@ 5946 @LENGTH@ 32
------------UPD MethodInvocation@@configurer.customize(component) @TO@ customizer.customize(component) @AT@ 5946 @LENGTH@ 31
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5946 @LENGTH@ 10


UPD TryStatement@@try {  if (this.pendingAcks > 0) {    sendAck(System.currentTimeMillis());  }  getChannel().basicNack(deliveryTag,true,RabbitUtils.shouldRequeue(isDefaultRequeueRejected(),e,this.logger));} catch (IOException e1) {  this.logger.error("Failed to nack message",e1);} @TO@ try {  if (this.messagesPerAck > 1) {synchronized (this) {      if (this.pendingAcks > 0) {        sendAck(System.currentTimeMillis());      }    }  }  getChannel().basicNack(deliveryTag,true,RabbitUtils.shouldRequeue(isDefaultRequeueRejected(),e,this.logger));} catch (IOException e1) {  this.logger.error("Failed to nack message",e1);} @AT@ 29832 @LENGTH@ 309
---INS IfStatement@@if (this.messagesPerAck > 1) {synchronized (this) {    if (this.pendingAcks > 0) {      sendAck(System.currentTimeMillis());    }  }} @TO@ TryStatement@@try {  if (this.pendingAcks > 0) {    sendAck(System.currentTimeMillis());  }  getChannel().basicNack(deliveryTag,true,RabbitUtils.shouldRequeue(isDefaultRequeueRejected(),e,this.logger));} catch (IOException e1) {  this.logger.error("Failed to nack message",e1);} @AT@ 29843 @LENGTH@ 162
------INS InfixExpression@@this.messagesPerAck > 1 @TO@ IfStatement@@if (this.messagesPerAck > 1) {synchronized (this) {    if (this.pendingAcks > 0) {      sendAck(System.currentTimeMillis());    }  }} @AT@ 29847 @LENGTH@ 23
---------INS FieldAccess@@this.messagesPerAck @TO@ InfixExpression@@this.messagesPerAck > 1 @AT@ 29847 @LENGTH@ 19
------------INS ThisExpression@@this @TO@ FieldAccess@@this.messagesPerAck @AT@ 29847 @LENGTH@ 4
------------INS SimpleName@@messagesPerAck @TO@ FieldAccess@@this.messagesPerAck @AT@ 29852 @LENGTH@ 14
---------INS Operator@@> @TO@ InfixExpression@@this.messagesPerAck > 1 @AT@ 29866 @LENGTH@ 1
---------INS NumberLiteral@@1 @TO@ InfixExpression@@this.messagesPerAck > 1 @AT@ 29869 @LENGTH@ 1
------INS Block@@ThenBody:{synchronized (this) {    if (this.pendingAcks > 0) {      sendAck(System.currentTimeMillis());    }  }} @TO@ IfStatement@@if (this.messagesPerAck > 1) {synchronized (this) {    if (this.pendingAcks > 0) {      sendAck(System.currentTimeMillis());    }  }} @AT@ 29872 @LENGTH@ 133
---------INS SynchronizedStatement@@synchronized (this) {  if (this.pendingAcks > 0) {    sendAck(System.currentTimeMillis());  }} @TO@ Block@@ThenBody:{synchronized (this) {    if (this.pendingAcks > 0) {      sendAck(System.currentTimeMillis());    }  }} @AT@ 29880 @LENGTH@ 118
------------INS ThisExpression@@this @TO@ SynchronizedStatement@@synchronized (this) {  if (this.pendingAcks > 0) {    sendAck(System.currentTimeMillis());  }} @AT@ 29894 @LENGTH@ 4
------------INS Block@@SyncBody:{  if (this.pendingAcks > 0) {    sendAck(System.currentTimeMillis());  }} @TO@ SynchronizedStatement@@synchronized (this) {  if (this.pendingAcks > 0) {    sendAck(System.currentTimeMillis());  }} @AT@ 29900 @LENGTH@ 98
---------------MOV IfStatement@@if (this.pendingAcks > 0) {  sendAck(System.currentTimeMillis());} @TO@ Block@@SyncBody:{  if (this.pendingAcks > 0) {    sendAck(System.currentTimeMillis());  }} @AT@ 29843 @LENGTH@ 77


UPD FieldDeclaration@@private, boolean, [contentTypeHeader=false] @TO@ private, boolean, [contentTypeHeader] @AT@ 2100 @LENGTH@ 42
---UPD VariableDeclarationFragment@@contentTypeHeader=false @TO@ contentTypeHeader @AT@ 2116 @LENGTH@ 25
------DEL BooleanLiteral@@false @AT@ 2136 @LENGTH@ 5


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<LuceneComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<LuceneComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5429 @LENGTH@ 339
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 5433 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5433 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  ComponentCustomizer<LuceneComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ ThenBody:{  for (  ComponentCustomizer<LuceneComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5489 @LENGTH@ 279
------UPD EnhancedForStatement@@for (ComponentCustomizer<LuceneComponent> configurer : customizers) {  LOGGER.debug("Configure component {}, with configurer {}",component,configurer);  configurer.customize(component);} @TO@ for (ComponentCustomizer<LuceneComponent> customizer : customizers) {  LOGGER.debug("Configure component {}, with customizer {}",component,customizer);  customizer.customize(component);} @AT@ 5503 @LENGTH@ 255
---------UPD SingleVariableDeclaration@@ComponentCustomizer<LuceneComponent> configurer @TO@ ComponentCustomizer<LuceneComponent> customizer @AT@ 5508 @LENGTH@ 47
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5545 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5589 @LENGTH@ 106
------------UPD MethodInvocation@@LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5589 @LENGTH@ 105
---------------UPD SimpleName@@MethodName:debug:["Configure component {}, with configurer {}", component, configurer] @TO@ MethodName:debug:["Configure component {}, with customizer {}", component, customizer] @AT@ 5596 @LENGTH@ 98
------------------UPD StringLiteral@@"Configure component {}, with configurer {}" @TO@ "Configure component {}, with customizer {}" @AT@ 5602 @LENGTH@ 44
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5683 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(component) @TO@ MethodInvocation:customizer.customize(component) @AT@ 5712 @LENGTH@ 32
------------UPD MethodInvocation@@configurer.customize(component) @TO@ customizer.customize(component) @AT@ 5712 @LENGTH@ 31
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5712 @LENGTH@ 10


UPD Block@@ThenBody:{  Map<Object,Object> m=(Map<Object,Object>)prop.propertyValue;  Iterator<Object> itr=m.keySet().iterator();  while (itr.hasNext()) {    Object key=itr.next();    IdentifierAccessor accessor=prop.entity.getIdentifierAccessor(m.get(key));    String s=accessor.getIdentifier().toString();    if (propertyId.equals(s)) {      itr.remove();    }  }} @TO@ ThenBody:{  Map<Object,Object> m=(Map<Object,Object>)prop.propertyValue;  Iterator<Entry<Object,Object>> itr=m.entrySet().iterator();  while (itr.hasNext()) {    Object key=itr.next().getKey();    IdentifierAccessor accessor=prop.entity.getIdentifierAccessor(m.get(key));    String s=accessor.getIdentifier().toString();    if (propertyId.equals(s)) {      itr.remove();    }  }} @AT@ 15198 @LENGTH@ 398
---UPD VariableDeclarationStatement@@Iterator<Object> itr=m.keySet().iterator(); @TO@ Iterator<Entry<Object,Object>> itr=m.entrySet().iterator(); @AT@ 15276 @LENGTH@ 45
------UPD ParameterizedType@@Iterator<Object> @TO@ Iterator<Entry<Object,Object>> @AT@ 15276 @LENGTH@ 16
---------INS ParameterizedType@@Entry<Object,Object> @TO@ ParameterizedType@@Iterator<Object> @AT@ 15286 @LENGTH@ 21
------------MOV SimpleType@@Object @TO@ ParameterizedType@@Entry<Object,Object> @AT@ 15285 @LENGTH@ 6
------------MOV SimpleType@@Object @TO@ ParameterizedType@@Entry<Object,Object> @AT@ 15285 @LENGTH@ 6
------------INS SimpleType@@Entry @TO@ ParameterizedType@@Entry<Object,Object> @AT@ 15286 @LENGTH@ 5
------------INS SimpleType@@Object @TO@ ParameterizedType@@Entry<Object,Object> @AT@ 15300 @LENGTH@ 6
------UPD VariableDeclarationFragment@@itr=m.keySet().iterator() @TO@ itr=m.entrySet().iterator() @AT@ 15293 @LENGTH@ 27
---------UPD MethodInvocation@@m.keySet().iterator() @TO@ m.entrySet().iterator() @AT@ 15299 @LENGTH@ 21
------------UPD MethodInvocation@@MethodName:keySet:[] @TO@ MethodName:entrySet:[] @AT@ 15299 @LENGTH@ 10
---UPD WhileStatement@@while (itr.hasNext()) {  Object key=itr.next();  IdentifierAccessor accessor=prop.entity.getIdentifierAccessor(m.get(key));  String s=accessor.getIdentifier().toString();  if (propertyId.equals(s)) {    itr.remove();  }} @TO@ while (itr.hasNext()) {  Object key=itr.next().getKey();  IdentifierAccessor accessor=prop.entity.getIdentifierAccessor(m.get(key));  String s=accessor.getIdentifier().toString();  if (propertyId.equals(s)) {    itr.remove();  }} @AT@ 15327 @LENGTH@ 263
------UPD Block@@WhileBody:{  Object key=itr.next();  IdentifierAccessor accessor=prop.entity.getIdentifierAccessor(m.get(key));  String s=accessor.getIdentifier().toString();  if (propertyId.equals(s)) {    itr.remove();  }} @TO@ WhileBody:{  Object key=itr.next().getKey();  IdentifierAccessor accessor=prop.entity.getIdentifierAccessor(m.get(key));  String s=accessor.getIdentifier().toString();  if (propertyId.equals(s)) {    itr.remove();  }} @AT@ 15349 @LENGTH@ 241
---------UPD VariableDeclarationStatement@@Object key=itr.next(); @TO@ Object key=itr.next().getKey(); @AT@ 15357 @LENGTH@ 24
------------UPD VariableDeclarationFragment@@key=itr.next() @TO@ key=itr.next().getKey() @AT@ 15364 @LENGTH@ 16
---------------UPD MethodInvocation@@itr.next() @TO@ itr.next().getKey() @AT@ 15370 @LENGTH@ 10
------------------UPD SimpleName@@MethodName:next:[] @TO@ MethodName:getKey:[] @AT@ 15374 @LENGTH@ 6
------------------INS MethodInvocation@@MethodName:next:[] @TO@ MethodInvocation@@itr.next() @AT@ 15390 @LENGTH@ 10


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled(); @AT@ 5277 @LENGTH@ 160
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5285 @LENGTH@ 151
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5285 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5302 @LENGTH@ 134
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 5302 @LENGTH@ 64
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5302 @LENGTH@ 35
---------UPD MethodInvocation@@componentConfiguration.getConfigurer().isEnabled() @TO@ componentConfiguration.getCustomizer().isEnabled() @AT@ 5386 @LENGTH@ 50
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5386 @LENGTH@ 38


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled(); @AT@ 5378 @LENGTH@ 160
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5386 @LENGTH@ 151
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5386 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5403 @LENGTH@ 134
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 5403 @LENGTH@ 64
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5403 @LENGTH@ 35
---------UPD MethodInvocation@@componentConfiguration.getConfigurer().isEnabled() @TO@ componentConfiguration.getCustomizer().isEnabled() @AT@ 5487 @LENGTH@ 50
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5487 @LENGTH@ 38


UPD FieldDeclaration@@private, static, long, [serialVersionUID=1L] @TO@ private, static, final, long, [serialVersionUID=1L] @AT@ 1190 @LENGTH@ 42
---INS Modifier@@final @TO@ FieldDeclaration@@private, static, long, [serialVersionUID=1L] @AT@ 1205 @LENGTH@ 5


DEL ExpressionStatement@@MethodInvocation:when(operations.getConverter()).thenReturn(converter) @AT@ 2809 @LENGTH@ 54
---DEL MethodInvocation@@when(operations.getConverter()).thenReturn(converter) @AT@ 2809 @LENGTH@ 53
------DEL MethodInvocation@@MethodName:when:[operations.getConverter()] @AT@ 2809 @LENGTH@ 31
---------DEL MethodInvocation@@operations.getConverter() @AT@ 2814 @LENGTH@ 25
------------DEL SimpleName@@Name:operations @AT@ 2814 @LENGTH@ 10
------------DEL SimpleName@@MethodName:getConverter:[] @AT@ 2825 @LENGTH@ 14
------DEL SimpleName@@MethodName:thenReturn:[converter] @AT@ 2841 @LENGTH@ 21
---------DEL SimpleName@@converter @AT@ 2852 @LENGTH@ 9


UPD ExpressionStatement@@MethodInvocation:Assert.notNull(bankService) @TO@ MethodInvocation:Assert.notNull(bankService,"bankService cannot be null") @AT@ 1138 @LENGTH@ 28
---UPD MethodInvocation@@Assert.notNull(bankService) @TO@ Assert.notNull(bankService,"bankService cannot be null") @AT@ 1138 @LENGTH@ 27
------UPD SimpleName@@MethodName:notNull:[bankService] @TO@ MethodName:notNull:[bankService, "bankService cannot be null"] @AT@ 1145 @LENGTH@ 20
---------INS StringLiteral@@"bankService cannot be null" @TO@ SimpleName@@MethodName:notNull:[bankService] @AT@ 1166 @LENGTH@ 28


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled(); @AT@ 5311 @LENGTH@ 160
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5319 @LENGTH@ 151
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5319 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5336 @LENGTH@ 134
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 5336 @LENGTH@ 64
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5336 @LENGTH@ 35
---------UPD MethodInvocation@@componentConfiguration.getConfigurer().isEnabled() @TO@ componentConfiguration.getCustomizer().isEnabled() @AT@ 5420 @LENGTH@ 50
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5420 @LENGTH@ 38


UPD VariableDeclarationStatement@@final Component component=getCamelContext().getComponent(scheme); @TO@ final Component component=getCamelContext().getComponent(scheme,true,false); @AT@ 4602 @LENGTH@ 67
---UPD VariableDeclarationFragment@@component=getCamelContext().getComponent(scheme) @TO@ component=getCamelContext().getComponent(scheme,true,false) @AT@ 4618 @LENGTH@ 50
------UPD MethodInvocation@@getCamelContext().getComponent(scheme) @TO@ getCamelContext().getComponent(scheme,true,false) @AT@ 4630 @LENGTH@ 38
---------UPD SimpleName@@MethodName:getComponent:[scheme] @TO@ MethodName:getComponent:[scheme, true, false] @AT@ 4648 @LENGTH@ 20
------------INS BooleanLiteral@@true @TO@ SimpleName@@MethodName:getComponent:[scheme] @AT@ 4742 @LENGTH@ 4
------------INS BooleanLiteral@@false @TO@ SimpleName@@MethodName:getComponent:[scheme] @AT@ 4748 @LENGTH@ 5


UPD ReturnStatement@@LambdaExpression:aggressive -> cancellationFlag.set(true) @TO@ ExpressionMethodReference:cancellationFlag::cancel @AT@ 10419 @LENGTH@ 48
---DEL LambdaExpression@@aggressive -> cancellationFlag.set(true) @AT@ 10426 @LENGTH@ 40
------DEL VariableDeclarationFragment@@aggressive @AT@ 10426 @LENGTH@ 10
---------DEL SimpleName@@aggressive @AT@ 10426 @LENGTH@ 10
------DEL MethodInvocation@@cancellationFlag.set(true) @AT@ 10440 @LENGTH@ 26
---------DEL SimpleName@@Name:cancellationFlag @AT@ 10440 @LENGTH@ 16
---------DEL SimpleName@@MethodName:set:[true] @AT@ 10457 @LENGTH@ 9
------------DEL BooleanLiteral@@true @AT@ 10461 @LENGTH@ 4


INS MethodDeclaration@@public, Dependency, MethodName:asDependency, final DependencyScope scope, final DependencyType type,  @TO@ TypeDeclaration@@[public]Pom,  @AT@ 7691 @LENGTH@ 137
---INS Modifier@@public @TO@ MethodDeclaration@@public, Dependency, MethodName:asDependency, final DependencyScope scope, final DependencyType type,  @AT@ 7691 @LENGTH@ 6
---INS SimpleType@@Dependency @TO@ MethodDeclaration@@public, Dependency, MethodName:asDependency, final DependencyScope scope, final DependencyType type,  @AT@ 7698 @LENGTH@ 10
---INS SimpleName@@MethodName:asDependency @TO@ MethodDeclaration@@public, Dependency, MethodName:asDependency, final DependencyScope scope, final DependencyType type,  @AT@ 7709 @LENGTH@ 12
---INS SingleVariableDeclaration@@final DependencyScope scope @TO@ MethodDeclaration@@public, Dependency, MethodName:asDependency, final DependencyScope scope, final DependencyType type,  @AT@ 7722 @LENGTH@ 27
------INS Modifier@@final @TO@ SingleVariableDeclaration@@final DependencyScope scope @AT@ 7722 @LENGTH@ 5
------INS SimpleType@@DependencyScope @TO@ SingleVariableDeclaration@@final DependencyScope scope @AT@ 7728 @LENGTH@ 15
------INS SimpleName@@scope @TO@ SingleVariableDeclaration@@final DependencyScope scope @AT@ 7744 @LENGTH@ 5
---INS SingleVariableDeclaration@@final DependencyType type @TO@ MethodDeclaration@@public, Dependency, MethodName:asDependency, final DependencyScope scope, final DependencyType type,  @AT@ 7751 @LENGTH@ 25
------INS Modifier@@final @TO@ SingleVariableDeclaration@@final DependencyType type @AT@ 7751 @LENGTH@ 5
------INS SimpleType@@DependencyType @TO@ SingleVariableDeclaration@@final DependencyType type @AT@ 7757 @LENGTH@ 14
------INS SimpleName@@type @TO@ SingleVariableDeclaration@@final DependencyType type @AT@ 7772 @LENGTH@ 4
---INS ReturnStatement@@ClassInstanceCreation:new Dependency(gav,type,scope) @TO@ MethodDeclaration@@public, Dependency, MethodName:asDependency, final DependencyScope scope, final DependencyType type,  @AT@ 7784 @LENGTH@ 40
------INS ClassInstanceCreation@@Dependency[gav, type, scope] @TO@ ReturnStatement@@ClassInstanceCreation:new Dependency(gav,type,scope) @AT@ 7791 @LENGTH@ 32
---------INS New@@new @TO@ ClassInstanceCreation@@Dependency[gav, type, scope] @AT@ 7791 @LENGTH@ 3
---------INS SimpleType@@Dependency @TO@ ClassInstanceCreation@@Dependency[gav, type, scope] @AT@ 7795 @LENGTH@ 10
---------INS SimpleName@@gav @TO@ ClassInstanceCreation@@Dependency[gav, type, scope] @AT@ 7806 @LENGTH@ 3
---------INS SimpleName@@type @TO@ ClassInstanceCreation@@Dependency[gav, type, scope] @AT@ 7811 @LENGTH@ 4
---------INS SimpleName@@scope @TO@ ClassInstanceCreation@@Dependency[gav, type, scope] @AT@ 7817 @LENGTH@ 5


UPD Block@@ThenBody:{  finished=true;  final Pack200.Packer p=Pack200.newPacker();  if (properties != null) {    p.properties().putAll(properties);  }  JarInputStream ji=null;  boolean success=false;  try {    ji=new JarInputStream(streamBridge.getInput());    p.pack(ji,originalOutput);    success=true;  }  finally {    if (!success) {      IOUtils.closeQuietly(ji);    }  }} @TO@ ThenBody:{  finished=true;  final Pack200.Packer p=Pack200.newPacker();  if (properties != null) {    p.properties().putAll(properties);  }  try (JarInputStream ji=new JarInputStream(streamBridge.getInput())){    p.pack(ji,originalOutput);  } } @AT@ 4066 @LENGTH@ 570
---DEL VariableDeclarationStatement@@JarInputStream ji=null; @AT@ 4270 @LENGTH@ 25
------DEL SimpleType@@JarInputStream @AT@ 4270 @LENGTH@ 14
------DEL VariableDeclarationFragment@@ji=null @AT@ 4285 @LENGTH@ 9
---------DEL SimpleName@@ji @AT@ 4285 @LENGTH@ 2
---------DEL NullLiteral@@null @AT@ 4290 @LENGTH@ 4
---DEL VariableDeclarationStatement@@boolean success=false; @AT@ 4308 @LENGTH@ 24
------DEL PrimitiveType@@boolean @AT@ 4308 @LENGTH@ 7
------DEL VariableDeclarationFragment@@success=false @AT@ 4316 @LENGTH@ 15
---------DEL SimpleName@@success @AT@ 4316 @LENGTH@ 7
---------DEL BooleanLiteral@@false @AT@ 4326 @LENGTH@ 5
---UPD TryStatement@@try {  ji=new JarInputStream(streamBridge.getInput());  p.pack(ji,originalOutput);  success=true;}  finally {  if (!success) {    IOUtils.closeQuietly(ji);  }} @TO@ try (JarInputStream ji=new JarInputStream(streamBridge.getInput())){  p.pack(ji,originalOutput);}  @AT@ 4345 @LENGTH@ 281
------INS VariableDeclarationExpression@@JarInputStream ji=new JarInputStream(streamBridge.getInput()) @TO@ TryStatement@@try {  ji=new JarInputStream(streamBridge.getInput());  p.pack(ji,originalOutput);  success=true;}  finally {  if (!success) {    IOUtils.closeQuietly(ji);  }} @AT@ 4275 @LENGTH@ 63
---------INS SimpleType@@JarInputStream @TO@ VariableDeclarationExpression@@JarInputStream ji=new JarInputStream(streamBridge.getInput()) @AT@ 4275 @LENGTH@ 14
---------INS VariableDeclarationFragment@@ji=new JarInputStream(streamBridge.getInput()) @TO@ VariableDeclarationExpression@@JarInputStream ji=new JarInputStream(streamBridge.getInput()) @AT@ 4290 @LENGTH@ 48
------------INS SimpleName@@ji @TO@ VariableDeclarationFragment@@ji=new JarInputStream(streamBridge.getInput()) @AT@ 4290 @LENGTH@ 2
------------MOV ClassInstanceCreation@@JarInputStream[streamBridge.getInput()] @TO@ VariableDeclarationFragment@@ji=new JarInputStream(streamBridge.getInput()) @AT@ 4372 @LENGTH@ 43
------DEL ExpressionStatement@@Assignment:ji=new JarInputStream(streamBridge.getInput()) @AT@ 4367 @LENGTH@ 49
---------DEL Assignment@@ji=new JarInputStream(streamBridge.getInput()) @AT@ 4367 @LENGTH@ 48
------------DEL SimpleName@@ji @AT@ 4367 @LENGTH@ 2
------------DEL Operator@@= @AT@ 4369 @LENGTH@ 1
------DEL ExpressionStatement@@Assignment:success=true @AT@ 4477 @LENGTH@ 15
---------DEL Assignment@@success=true @AT@ 4477 @LENGTH@ 14
------------DEL SimpleName@@success @AT@ 4477 @LENGTH@ 7
------------DEL Operator@@= @AT@ 4484 @LENGTH@ 1
------------DEL BooleanLiteral@@true @AT@ 4487 @LENGTH@ 4
------DEL Block@@FinallyBody:{  if (!success) {    IOUtils.closeQuietly(ji);  }} @AT@ 4515 @LENGTH@ 111
---------DEL IfStatement@@if (!success) {  IOUtils.closeQuietly(ji);} @AT@ 4533 @LENGTH@ 79
------------DEL PrefixExpression@@!success @AT@ 4537 @LENGTH@ 8
---------------DEL Operator@@! @AT@ 4537 @LENGTH@ 1
---------------DEL SimpleName@@success @AT@ 4538 @LENGTH@ 7
------------DEL Block@@ThenBody:{  IOUtils.closeQuietly(ji);} @AT@ 4547 @LENGTH@ 65
---------------DEL ExpressionStatement@@MethodInvocation:IOUtils.closeQuietly(ji) @AT@ 4569 @LENGTH@ 25
------------------DEL MethodInvocation@@IOUtils.closeQuietly(ji) @AT@ 4569 @LENGTH@ 24
---------------------DEL SimpleName@@Name:IOUtils @AT@ 4569 @LENGTH@ 7
---------------------DEL SimpleName@@MethodName:closeQuietly:[ji] @AT@ 4577 @LENGTH@ 16
------------------------DEL SimpleName@@ji @AT@ 4590 @LENGTH@ 2


UPD VariableDeclarationStatement@@HiveSessionImpl session=new HiveSessionImpl(protocol,username,password,serverhiveConf,ipAddress){
  @Override protected synchronized void acquire(  boolean userAccess,  boolean isOperation){
  }
  @Override protected synchronized void release(  boolean userAccess,  boolean isOperation){
  }
}
; @TO@ HiveSessionImpl session=new HiveSessionImpl(null,protocol,username,password,serverhiveConf,ipAddress){
  @Override protected synchronized void acquire(  boolean userAccess,  boolean isOperation){
  }
  @Override protected synchronized void release(  boolean userAccess,  boolean isOperation){
  }
}
; @AT@ 1879 @LENGTH@ 336
---UPD VariableDeclarationFragment@@session=new HiveSessionImpl(protocol,username,password,serverhiveConf,ipAddress){
  @Override protected synchronized void acquire(  boolean userAccess,  boolean isOperation){
  }
  @Override protected synchronized void release(  boolean userAccess,  boolean isOperation){
  }
}
 @TO@ session=new HiveSessionImpl(null,protocol,username,password,serverhiveConf,ipAddress){
  @Override protected synchronized void acquire(  boolean userAccess,  boolean isOperation){
  }
  @Override protected synchronized void release(  boolean userAccess,  boolean isOperation){
  }
}
 @AT@ 1895 @LENGTH@ 319
------UPD ClassInstanceCreation@@HiveSessionImpl[protocol, username, password, serverhiveConf, ipAddress] @TO@ HiveSessionImpl[null, protocol, username, password, serverhiveConf, ipAddress] @AT@ 1905 @LENGTH@ 309
---------INS NullLiteral@@null @TO@ ClassInstanceCreation@@HiveSessionImpl[protocol, username, password, serverhiveConf, ipAddress] @AT@ 1925 @LENGTH@ 4


UPD FieldDeclaration@@public, static, String, [URL_ENV_PREFIX="BEELINE_URL_"] @TO@ public, static, final, String, [URL_ENV_PREFIX="BEELINE_URL_"] @AT@ 2405 @LENGTH@ 53
---INS Modifier@@final @TO@ FieldDeclaration@@public, static, String, [URL_ENV_PREFIX="BEELINE_URL_"] @AT@ 2419 @LENGTH@ 5


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled(); @AT@ 5229 @LENGTH@ 160
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5237 @LENGTH@ 151
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5237 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5254 @LENGTH@ 134
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 5254 @LENGTH@ 64
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5254 @LENGTH@ 35
---------UPD MethodInvocation@@componentConfiguration.getConfigurer().isEnabled() @TO@ componentConfiguration.getCustomizer().isEnabled() @AT@ 5338 @LENGTH@ 50
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5338 @LENGTH@ 38


INS MethodDeclaration@@public, void, MethodName:addCriteriaForSamePropertyMultipleTimesShouldThrowAndSafelySerializeErrorMessage,  @TO@ TypeDeclaration@@[public]QueryTests,  @AT@ 8739 @LENGTH@ 438
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:addCriteriaForSamePropertyMultipleTimesShouldThrowAndSafelySerializeErrorMessage,  @AT@ 8739 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:addCriteriaForSamePropertyMultipleTimesShouldThrowAndSafelySerializeErrorMessage,  @AT@ 8746 @LENGTH@ 4
---INS SimpleName@@MethodName:addCriteriaForSamePropertyMultipleTimesShouldThrowAndSafelySerializeErrorMessage @TO@ MethodDeclaration@@public, void, MethodName:addCriteriaForSamePropertyMultipleTimesShouldThrowAndSafelySerializeErrorMessage,  @AT@ 8751 @LENGTH@ 80
---INS ExpressionStatement@@MethodInvocation:exception.expect(InvalidMongoDbApiUsageException.class) @TO@ MethodDeclaration@@public, void, MethodName:addCriteriaForSamePropertyMultipleTimesShouldThrowAndSafelySerializeErrorMessage,  @AT@ 8839 @LENGTH@ 56
------INS MethodInvocation@@exception.expect(InvalidMongoDbApiUsageException.class) @TO@ ExpressionStatement@@MethodInvocation:exception.expect(InvalidMongoDbApiUsageException.class) @AT@ 8839 @LENGTH@ 55
---------INS SimpleName@@Name:exception @TO@ MethodInvocation@@exception.expect(InvalidMongoDbApiUsageException.class) @AT@ 8839 @LENGTH@ 9
---------INS SimpleName@@MethodName:expect:[InvalidMongoDbApiUsageException.class] @TO@ MethodInvocation@@exception.expect(InvalidMongoDbApiUsageException.class) @AT@ 8849 @LENGTH@ 45
------------INS TypeLiteral@@InvalidMongoDbApiUsageException.class @TO@ SimpleName@@MethodName:expect:[InvalidMongoDbApiUsageException.class] @AT@ 8856 @LENGTH@ 37
---INS ExpressionStatement@@MethodInvocation:exception.expectMessage("second 'value' criteria") @TO@ MethodDeclaration@@public, void, MethodName:addCriteriaForSamePropertyMultipleTimesShouldThrowAndSafelySerializeErrorMessage,  @AT@ 8898 @LENGTH@ 51
------INS MethodInvocation@@exception.expectMessage("second 'value' criteria") @TO@ ExpressionStatement@@MethodInvocation:exception.expectMessage("second 'value' criteria") @AT@ 8898 @LENGTH@ 50
---------INS SimpleName@@Name:exception @TO@ MethodInvocation@@exception.expectMessage("second 'value' criteria") @AT@ 8898 @LENGTH@ 9
---------INS SimpleName@@MethodName:expectMessage:["second 'value' criteria"] @TO@ MethodInvocation@@exception.expectMessage("second 'value' criteria") @AT@ 8908 @LENGTH@ 40
------------INS StringLiteral@@"second 'value' criteria" @TO@ SimpleName@@MethodName:expectMessage:["second 'value' criteria"] @AT@ 8922 @LENGTH@ 25
---INS ExpressionStatement@@MethodInvocation:exception.expectMessage("already contains '{ \"value\" : { $java : VAL_1 } }'") @TO@ MethodDeclaration@@public, void, MethodName:addCriteriaForSamePropertyMultipleTimesShouldThrowAndSafelySerializeErrorMessage,  @AT@ 8952 @LENGTH@ 80
------INS MethodInvocation@@exception.expectMessage("already contains '{ \"value\" : { $java : VAL_1 } }'") @TO@ ExpressionStatement@@MethodInvocation:exception.expectMessage("already contains '{ \"value\" : { $java : VAL_1 } }'") @AT@ 8952 @LENGTH@ 79
---------INS SimpleName@@Name:exception @TO@ MethodInvocation@@exception.expectMessage("already contains '{ \"value\" : { $java : VAL_1 } }'") @AT@ 8952 @LENGTH@ 9
---------INS SimpleName@@MethodName:expectMessage:["already contains '{ \"value\" : { $java : VAL_1 } }'"] @TO@ MethodInvocation@@exception.expectMessage("already contains '{ \"value\" : { $java : VAL_1 } }'") @AT@ 8962 @LENGTH@ 69
------------INS StringLiteral@@"already contains '{ \"value\" : { $java : VAL_1 } }'" @TO@ SimpleName@@MethodName:expectMessage:["already contains '{ \"value\" : { $java : VAL_1 } }'"] @AT@ 8976 @LENGTH@ 54
---INS VariableDeclarationStatement@@Query query=new Query(); @TO@ MethodDeclaration@@public, void, MethodName:addCriteriaForSamePropertyMultipleTimesShouldThrowAndSafelySerializeErrorMessage,  @AT@ 9036 @LENGTH@ 26
------INS SimpleType@@Query @TO@ VariableDeclarationStatement@@Query query=new Query(); @AT@ 9036 @LENGTH@ 5
------INS VariableDeclarationFragment@@query=new Query() @TO@ VariableDeclarationStatement@@Query query=new Query(); @AT@ 9042 @LENGTH@ 19
---------INS SimpleName@@query @TO@ VariableDeclarationFragment@@query=new Query() @AT@ 9042 @LENGTH@ 5
---------INS ClassInstanceCreation@@Query[] @TO@ VariableDeclarationFragment@@query=new Query() @AT@ 9050 @LENGTH@ 11
------------INS New@@new @TO@ ClassInstanceCreation@@Query[] @AT@ 9050 @LENGTH@ 3
------------INS SimpleType@@Query @TO@ ClassInstanceCreation@@Query[] @AT@ 9054 @LENGTH@ 5
---INS ExpressionStatement@@MethodInvocation:query.addCriteria(where("value").is(EnumType.VAL_1)) @TO@ MethodDeclaration@@public, void, MethodName:addCriteriaForSamePropertyMultipleTimesShouldThrowAndSafelySerializeErrorMessage,  @AT@ 9065 @LENGTH@ 53
------INS MethodInvocation@@query.addCriteria(where("value").is(EnumType.VAL_1)) @TO@ ExpressionStatement@@MethodInvocation:query.addCriteria(where("value").is(EnumType.VAL_1)) @AT@ 9065 @LENGTH@ 52
---------INS SimpleName@@Name:query @TO@ MethodInvocation@@query.addCriteria(where("value").is(EnumType.VAL_1)) @AT@ 9065 @LENGTH@ 5
---------INS SimpleName@@MethodName:addCriteria:[where("value").is(EnumType.VAL_1)] @TO@ MethodInvocation@@query.addCriteria(where("value").is(EnumType.VAL_1)) @AT@ 9071 @LENGTH@ 46
------------INS MethodInvocation@@where("value").is(EnumType.VAL_1) @TO@ SimpleName@@MethodName:addCriteria:[where("value").is(EnumType.VAL_1)] @AT@ 9083 @LENGTH@ 33
---------------INS MethodInvocation@@MethodName:where:["value"] @TO@ MethodInvocation@@where("value").is(EnumType.VAL_1) @AT@ 9083 @LENGTH@ 14
------------------INS StringLiteral@@"value" @TO@ MethodInvocation@@MethodName:where:["value"] @AT@ 9089 @LENGTH@ 7
---------------INS SimpleName@@MethodName:is:[EnumType.VAL_1] @TO@ MethodInvocation@@where("value").is(EnumType.VAL_1) @AT@ 9098 @LENGTH@ 18
------------------INS QualifiedName@@EnumType.VAL_1 @TO@ SimpleName@@MethodName:is:[EnumType.VAL_1] @AT@ 9101 @LENGTH@ 14
---------------------INS SimpleName@@EnumType @TO@ QualifiedName@@EnumType.VAL_1 @AT@ 9101 @LENGTH@ 8
---------------------INS SimpleName@@VAL_1 @TO@ QualifiedName@@EnumType.VAL_1 @AT@ 9110 @LENGTH@ 5
---INS ExpressionStatement@@MethodInvocation:query.addCriteria(where("value").is(EnumType.VAL_2)) @TO@ MethodDeclaration@@public, void, MethodName:addCriteriaForSamePropertyMultipleTimesShouldThrowAndSafelySerializeErrorMessage,  @AT@ 9121 @LENGTH@ 53
------INS MethodInvocation@@query.addCriteria(where("value").is(EnumType.VAL_2)) @TO@ ExpressionStatement@@MethodInvocation:query.addCriteria(where("value").is(EnumType.VAL_2)) @AT@ 9121 @LENGTH@ 52
---------INS SimpleName@@Name:query @TO@ MethodInvocation@@query.addCriteria(where("value").is(EnumType.VAL_2)) @AT@ 9121 @LENGTH@ 5
---------INS SimpleName@@MethodName:addCriteria:[where("value").is(EnumType.VAL_2)] @TO@ MethodInvocation@@query.addCriteria(where("value").is(EnumType.VAL_2)) @AT@ 9127 @LENGTH@ 46
------------INS MethodInvocation@@where("value").is(EnumType.VAL_2) @TO@ SimpleName@@MethodName:addCriteria:[where("value").is(EnumType.VAL_2)] @AT@ 9139 @LENGTH@ 33
---------------INS MethodInvocation@@MethodName:where:["value"] @TO@ MethodInvocation@@where("value").is(EnumType.VAL_2) @AT@ 9139 @LENGTH@ 14
------------------INS StringLiteral@@"value" @TO@ MethodInvocation@@MethodName:where:["value"] @AT@ 9145 @LENGTH@ 7
---------------INS SimpleName@@MethodName:is:[EnumType.VAL_2] @TO@ MethodInvocation@@where("value").is(EnumType.VAL_2) @AT@ 9154 @LENGTH@ 18
------------------INS QualifiedName@@EnumType.VAL_2 @TO@ SimpleName@@MethodName:is:[EnumType.VAL_2] @AT@ 9157 @LENGTH@ 14
---------------------INS SimpleName@@EnumType @TO@ QualifiedName@@EnumType.VAL_2 @AT@ 9157 @LENGTH@ 8
---------------------INS SimpleName@@VAL_2 @TO@ QualifiedName@@EnumType.VAL_2 @AT@ 9166 @LENGTH@ 5


UPD VariableDeclarationStatement@@PropertyExpression sum=PropertyExpression.property("sum").definedAs(ArithmeticOperators.valueOf(Variable.VALUE.referingTo("sum").getName()).add(Variable.THIS.getName())); @TO@ PropertyExpression sum=PropertyExpression.property("sum").definedAs(ArithmeticOperators.valueOf(Variable.VALUE.referringTo("sum").getName()).add(Variable.THIS.getName())); @AT@ 63162 @LENGTH@ 177
---UPD VariableDeclarationFragment@@sum=PropertyExpression.property("sum").definedAs(ArithmeticOperators.valueOf(Variable.VALUE.referingTo("sum").getName()).add(Variable.THIS.getName())) @TO@ sum=PropertyExpression.property("sum").definedAs(ArithmeticOperators.valueOf(Variable.VALUE.referringTo("sum").getName()).add(Variable.THIS.getName())) @AT@ 63181 @LENGTH@ 157
------UPD MethodInvocation@@PropertyExpression.property("sum").definedAs(ArithmeticOperators.valueOf(Variable.VALUE.referingTo("sum").getName()).add(Variable.THIS.getName())) @TO@ PropertyExpression.property("sum").definedAs(ArithmeticOperators.valueOf(Variable.VALUE.referringTo("sum").getName()).add(Variable.THIS.getName())) @AT@ 63187 @LENGTH@ 151
---------UPD SimpleName@@MethodName:definedAs:[ArithmeticOperators.valueOf(Variable.VALUE.referingTo("sum").getName()).add(Variable.THIS.getName())] @TO@ MethodName:definedAs:[ArithmeticOperators.valueOf(Variable.VALUE.referringTo("sum").getName()).add(Variable.THIS.getName())] @AT@ 63222 @LENGTH@ 116
------------UPD MethodInvocation@@ArithmeticOperators.valueOf(Variable.VALUE.referingTo("sum").getName()).add(Variable.THIS.getName()) @TO@ ArithmeticOperators.valueOf(Variable.VALUE.referringTo("sum").getName()).add(Variable.THIS.getName()) @AT@ 63237 @LENGTH@ 100
---------------UPD MethodInvocation@@MethodName:valueOf:[Variable.VALUE.referingTo("sum").getName()] @TO@ MethodName:valueOf:[Variable.VALUE.referringTo("sum").getName()] @AT@ 63237 @LENGTH@ 71
------------------UPD MethodInvocation@@Variable.VALUE.referingTo("sum").getName() @TO@ Variable.VALUE.referringTo("sum").getName() @AT@ 63265 @LENGTH@ 42
---------------------UPD MethodInvocation@@MethodName:referingTo:["sum"] @TO@ MethodName:referringTo:["sum"] @AT@ 63265 @LENGTH@ 32


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<MetricsComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<MetricsComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5446 @LENGTH@ 340
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 5450 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5450 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  ComponentCustomizer<MetricsComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ ThenBody:{  for (  ComponentCustomizer<MetricsComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5506 @LENGTH@ 280
------UPD EnhancedForStatement@@for (ComponentCustomizer<MetricsComponent> configurer : customizers) {  LOGGER.debug("Configure component {}, with configurer {}",component,configurer);  configurer.customize(component);} @TO@ for (ComponentCustomizer<MetricsComponent> customizer : customizers) {  LOGGER.debug("Configure component {}, with customizer {}",component,customizer);  customizer.customize(component);} @AT@ 5520 @LENGTH@ 256
---------UPD SingleVariableDeclaration@@ComponentCustomizer<MetricsComponent> configurer @TO@ ComponentCustomizer<MetricsComponent> customizer @AT@ 5525 @LENGTH@ 48
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5563 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5607 @LENGTH@ 106
------------UPD MethodInvocation@@LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5607 @LENGTH@ 105
---------------UPD SimpleName@@MethodName:debug:["Configure component {}, with configurer {}", component, configurer] @TO@ MethodName:debug:["Configure component {}, with customizer {}", component, customizer] @AT@ 5614 @LENGTH@ 98
------------------UPD StringLiteral@@"Configure component {}, with configurer {}" @TO@ "Configure component {}, with customizer {}" @AT@ 5620 @LENGTH@ 44
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5701 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(component) @TO@ MethodInvocation:customizer.customize(component) @AT@ 5730 @LENGTH@ 32
------------UPD MethodInvocation@@configurer.customize(component) @TO@ customizer.customize(component) @AT@ 5730 @LENGTH@ 31
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5730 @LENGTH@ 10


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled(); @AT@ 5209 @LENGTH@ 160
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5217 @LENGTH@ 151
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5217 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5234 @LENGTH@ 134
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 5234 @LENGTH@ 64
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5234 @LENGTH@ 35
---------UPD MethodInvocation@@componentConfiguration.getConfigurer().isEnabled() @TO@ componentConfiguration.getCustomizer().isEnabled() @AT@ 5318 @LENGTH@ 50
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5318 @LENGTH@ 38


UPD FieldDeclaration@@public, static, String, [INDEX_TABLE_CREATETIME="hive.index.basetbl.dfs.lastModifiedTime"] @TO@ public, static, final, String, [INDEX_TABLE_CREATETIME="hive.index.basetbl.dfs.lastModifiedTime"] @AT@ 1184 @LENGTH@ 88
---INS Modifier@@final @TO@ FieldDeclaration@@public, static, String, [INDEX_TABLE_CREATETIME="hive.index.basetbl.dfs.lastModifiedTime"] @AT@ 1196 @LENGTH@ 5


UPD FieldDeclaration@@private, DefaultTokenServices, [tokenServices] @TO@ private, AuthorizationServerTokenServices, [tokenServices] @AT@ 1231 @LENGTH@ 43
---UPD SimpleType@@DefaultTokenServices @TO@ AuthorizationServerTokenServices @AT@ 1239 @LENGTH@ 20


UPD MethodDeclaration@@public, boolean, MethodName:isUnorted,  @TO@ public, boolean, MethodName:isUnsorted,  @AT@ 5570 @LENGTH@ 53
---UPD SimpleName@@MethodName:isUnorted @TO@ MethodName:isUnsorted @AT@ 5585 @LENGTH@ 9


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  LanguageCustomizer<SpelLanguage> configurer : customizers) {    LOGGER.debug("Configure language {}, with configurer {}",language,configurer);    configurer.customize(language);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  LanguageCustomizer<SpelLanguage> customizer : customizers) {    LOGGER.debug("Configure language {}, with customizer {}",language,customizer);    customizer.customize(language);  }} @AT@ 4689 @LENGTH@ 332
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 4693 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 4693 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  LanguageCustomizer<SpelLanguage> configurer : customizers) {    LOGGER.debug("Configure language {}, with configurer {}",language,configurer);    configurer.customize(language);  }} @TO@ ThenBody:{  for (  LanguageCustomizer<SpelLanguage> customizer : customizers) {    LOGGER.debug("Configure language {}, with customizer {}",language,customizer);    customizer.customize(language);  }} @AT@ 4749 @LENGTH@ 272
------UPD EnhancedForStatement@@for (LanguageCustomizer<SpelLanguage> configurer : customizers) {  LOGGER.debug("Configure language {}, with configurer {}",language,configurer);  configurer.customize(language);} @TO@ for (LanguageCustomizer<SpelLanguage> customizer : customizers) {  LOGGER.debug("Configure language {}, with customizer {}",language,customizer);  customizer.customize(language);} @AT@ 4763 @LENGTH@ 248
---------UPD SingleVariableDeclaration@@LanguageCustomizer<SpelLanguage> configurer @TO@ LanguageCustomizer<SpelLanguage> customizer @AT@ 4768 @LENGTH@ 43
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 4801 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure language {}, with configurer {}",language,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure language {}, with customizer {}",language,customizer) @AT@ 4845 @LENGTH@ 104
------------UPD MethodInvocation@@LOGGER.debug("Configure language {}, with configurer {}",language,configurer) @TO@ LOGGER.debug("Configure language {}, with customizer {}",language,customizer) @AT@ 4845 @LENGTH@ 103
---------------UPD SimpleName@@MethodName:debug:["Configure language {}, with configurer {}", language, configurer] @TO@ MethodName:debug:["Configure language {}, with customizer {}", language, customizer] @AT@ 4852 @LENGTH@ 96
------------------UPD StringLiteral@@"Configure language {}, with configurer {}" @TO@ "Configure language {}, with customizer {}" @AT@ 4858 @LENGTH@ 43
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 4937 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(language) @TO@ MethodInvocation:customizer.customize(language) @AT@ 4966 @LENGTH@ 31
------------UPD MethodInvocation@@configurer.customize(language) @TO@ customizer.customize(language) @AT@ 4966 @LENGTH@ 30
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 4966 @LENGTH@ 10


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && languageConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && languageConfiguration.getCustomizer().isEnabled(); @AT@ 4557 @LENGTH@ 159
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && languageConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && languageConfiguration.getCustomizer().isEnabled() @AT@ 4565 @LENGTH@ 150
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 4565 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && languageConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && languageConfiguration.getCustomizer().isEnabled() @AT@ 4582 @LENGTH@ 133
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 4582 @LENGTH@ 64
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 4582 @LENGTH@ 35
---------UPD MethodInvocation@@languageConfiguration.getConfigurer().isEnabled() @TO@ languageConfiguration.getCustomizer().isEnabled() @AT@ 4666 @LENGTH@ 49
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 4666 @LENGTH@ 37


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<HazelcastReplicatedmapComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<HazelcastReplicatedmapComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5737 @LENGTH@ 355
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 5741 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5741 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  ComponentCustomizer<HazelcastReplicatedmapComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ ThenBody:{  for (  ComponentCustomizer<HazelcastReplicatedmapComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5797 @LENGTH@ 295
------UPD EnhancedForStatement@@for (ComponentCustomizer<HazelcastReplicatedmapComponent> configurer : customizers) {  LOGGER.debug("Configure component {}, with configurer {}",component,configurer);  configurer.customize(component);} @TO@ for (ComponentCustomizer<HazelcastReplicatedmapComponent> customizer : customizers) {  LOGGER.debug("Configure component {}, with customizer {}",component,customizer);  customizer.customize(component);} @AT@ 5811 @LENGTH@ 271
---------UPD SingleVariableDeclaration@@ComponentCustomizer<HazelcastReplicatedmapComponent> configurer @TO@ ComponentCustomizer<HazelcastReplicatedmapComponent> customizer @AT@ 5816 @LENGTH@ 63
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5869 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5913 @LENGTH@ 106
------------UPD MethodInvocation@@LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5913 @LENGTH@ 105
---------------UPD SimpleName@@MethodName:debug:["Configure component {}, with configurer {}", component, configurer] @TO@ MethodName:debug:["Configure component {}, with customizer {}", component, customizer] @AT@ 5920 @LENGTH@ 98
------------------UPD StringLiteral@@"Configure component {}, with configurer {}" @TO@ "Configure component {}, with customizer {}" @AT@ 5926 @LENGTH@ 44
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 6007 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(component) @TO@ MethodInvocation:customizer.customize(component) @AT@ 6036 @LENGTH@ 32
------------UPD MethodInvocation@@configurer.customize(component) @TO@ customizer.customize(component) @AT@ 6036 @LENGTH@ 31
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 6036 @LENGTH@ 10


INS IfStatement@@if (uriEndpoint.consumerOnly() || !uriEndpoint.producerOnly()) {  TypeMirror consumerType=null;  try {    uriEndpoint.consumerClass();  } catch (  MirroredTypeException mte) {    consumerType=mte.getTypeMirror();  }  boolean found=false;  String consumerClassName=null;  String consumerPrefix=getOrElse(uriEndpoint.consumerPrefix(),"");  if (consumerType != null) {    consumerClassName=consumerType.toString();    TypeElement consumerElement=findTypeElement(processingEnv,roundEnv,consumerClassName);    if (consumerElement != null) {      writer.println("<h2>" + scheme + " consumer"+ "</h2>");      writeHtmlDocumentationAndFieldInjections(writer,roundEnv,componentModel,consumerElement,consumerPrefix,uriEndpoint.excludeProperties());      found=true;    }  }  if (!found && consumerClassName != null) {    warning(processingEnv,"APT cannot find consumer class " + consumerClassName);  }} @TO@ MethodDeclaration@@protected, void, MethodName:writeHtmlDocumentation, PrintWriter writer, RoundEnvironment roundEnv, TypeElement classElement, UriEndpoint uriEndpoint, String title, String scheme, String extendsScheme, String label, String[] schemes,  @AT@ 9651 @LENGTH@ 1294
---INS InfixExpression@@uriEndpoint.consumerOnly() || !uriEndpoint.producerOnly() @TO@ IfStatement@@if (uriEndpoint.consumerOnly() || !uriEndpoint.producerOnly()) {  TypeMirror consumerType=null;  try {    uriEndpoint.consumerClass();  } catch (  MirroredTypeException mte) {    consumerType=mte.getTypeMirror();  }  boolean found=false;  String consumerClassName=null;  String consumerPrefix=getOrElse(uriEndpoint.consumerPrefix(),"");  if (consumerType != null) {    consumerClassName=consumerType.toString();    TypeElement consumerElement=findTypeElement(processingEnv,roundEnv,consumerClassName);    if (consumerElement != null) {      writer.println("<h2>" + scheme + " consumer"+ "</h2>");      writeHtmlDocumentationAndFieldInjections(writer,roundEnv,componentModel,consumerElement,consumerPrefix,uriEndpoint.excludeProperties());      found=true;    }  }  if (!found && consumerClassName != null) {    warning(processingEnv,"APT cannot find consumer class " + consumerClassName);  }} @AT@ 9655 @LENGTH@ 57
------INS MethodInvocation@@uriEndpoint.consumerOnly() @TO@ InfixExpression@@uriEndpoint.consumerOnly() || !uriEndpoint.producerOnly() @AT@ 9655 @LENGTH@ 26
---------INS SimpleName@@Name:uriEndpoint @TO@ MethodInvocation@@uriEndpoint.consumerOnly() @AT@ 9655 @LENGTH@ 11
---------INS SimpleName@@MethodName:consumerOnly:[] @TO@ MethodInvocation@@uriEndpoint.consumerOnly() @AT@ 9667 @LENGTH@ 14
------INS Operator@@|| @TO@ InfixExpression@@uriEndpoint.consumerOnly() || !uriEndpoint.producerOnly() @AT@ 9681 @LENGTH@ 2
------INS PrefixExpression@@!uriEndpoint.producerOnly() @TO@ InfixExpression@@uriEndpoint.consumerOnly() || !uriEndpoint.producerOnly() @AT@ 9685 @LENGTH@ 27
---------INS Operator@@! @TO@ PrefixExpression@@!uriEndpoint.producerOnly() @AT@ 9685 @LENGTH@ 1
---------INS MethodInvocation@@uriEndpoint.producerOnly() @TO@ PrefixExpression@@!uriEndpoint.producerOnly() @AT@ 9686 @LENGTH@ 26
------------INS SimpleName@@Name:uriEndpoint @TO@ MethodInvocation@@uriEndpoint.producerOnly() @AT@ 9686 @LENGTH@ 11
------------INS SimpleName@@MethodName:producerOnly:[] @TO@ MethodInvocation@@uriEndpoint.producerOnly() @AT@ 9698 @LENGTH@ 14
---INS Block@@ThenBody:{  TypeMirror consumerType=null;  try {    uriEndpoint.consumerClass();  } catch (  MirroredTypeException mte) {    consumerType=mte.getTypeMirror();  }  boolean found=false;  String consumerClassName=null;  String consumerPrefix=getOrElse(uriEndpoint.consumerPrefix(),"");  if (consumerType != null) {    consumerClassName=consumerType.toString();    TypeElement consumerElement=findTypeElement(processingEnv,roundEnv,consumerClassName);    if (consumerElement != null) {      writer.println("<h2>" + scheme + " consumer"+ "</h2>");      writeHtmlDocumentationAndFieldInjections(writer,roundEnv,componentModel,consumerElement,consumerPrefix,uriEndpoint.excludeProperties());      found=true;    }  }  if (!found && consumerClassName != null) {    warning(processingEnv,"APT cannot find consumer class " + consumerClassName);  }} @TO@ IfStatement@@if (uriEndpoint.consumerOnly() || !uriEndpoint.producerOnly()) {  TypeMirror consumerType=null;  try {    uriEndpoint.consumerClass();  } catch (  MirroredTypeException mte) {    consumerType=mte.getTypeMirror();  }  boolean found=false;  String consumerClassName=null;  String consumerPrefix=getOrElse(uriEndpoint.consumerPrefix(),"");  if (consumerType != null) {    consumerClassName=consumerType.toString();    TypeElement consumerElement=findTypeElement(processingEnv,roundEnv,consumerClassName);    if (consumerElement != null) {      writer.println("<h2>" + scheme + " consumer"+ "</h2>");      writeHtmlDocumentationAndFieldInjections(writer,roundEnv,componentModel,consumerElement,consumerPrefix,uriEndpoint.excludeProperties());      found=true;    }  }  if (!found && consumerClassName != null) {    warning(processingEnv,"APT cannot find consumer class " + consumerClassName);  }} @AT@ 9714 @LENGTH@ 1231
------MOV VariableDeclarationStatement@@TypeMirror consumerType=null; @TO@ Block@@ThenBody:{  TypeMirror consumerType=null;  try {    uriEndpoint.consumerClass();  } catch (  MirroredTypeException mte) {    consumerType=mte.getTypeMirror();  }  boolean found=false;  String consumerClassName=null;  String consumerPrefix=getOrElse(uriEndpoint.consumerPrefix(),"");  if (consumerType != null) {    consumerClassName=consumerType.toString();    TypeElement consumerElement=findTypeElement(processingEnv,roundEnv,consumerClassName);    if (consumerElement != null) {      writer.println("<h2>" + scheme + " consumer"+ "</h2>");      writeHtmlDocumentationAndFieldInjections(writer,roundEnv,componentModel,consumerElement,consumerPrefix,uriEndpoint.excludeProperties());      found=true;    }  }  if (!found && consumerClassName != null) {    warning(processingEnv,"APT cannot find consumer class " + consumerClassName);  }} @AT@ 9706 @LENGTH@ 31
------MOV TryStatement@@try {  uriEndpoint.consumerClass();} catch (MirroredTypeException mte) {  consumerType=mte.getTypeMirror();} @TO@ Block@@ThenBody:{  TypeMirror consumerType=null;  try {    uriEndpoint.consumerClass();  } catch (  MirroredTypeException mte) {    consumerType=mte.getTypeMirror();  }  boolean found=false;  String consumerClassName=null;  String consumerPrefix=getOrElse(uriEndpoint.consumerPrefix(),"");  if (consumerType != null) {    consumerClassName=consumerType.toString();    TypeElement consumerElement=findTypeElement(processingEnv,roundEnv,consumerClassName);    if (consumerElement != null) {      writer.println("<h2>" + scheme + " consumer"+ "</h2>");      writeHtmlDocumentationAndFieldInjections(writer,roundEnv,componentModel,consumerElement,consumerPrefix,uriEndpoint.excludeProperties());      found=true;    }  }  if (!found && consumerClassName != null) {    warning(processingEnv,"APT cannot find consumer class " + consumerClassName);  }} @AT@ 9746 @LENGTH@ 150
------MOV VariableDeclarationStatement@@boolean found=false; @TO@ Block@@ThenBody:{  TypeMirror consumerType=null;  try {    uriEndpoint.consumerClass();  } catch (  MirroredTypeException mte) {    consumerType=mte.getTypeMirror();  }  boolean found=false;  String consumerClassName=null;  String consumerPrefix=getOrElse(uriEndpoint.consumerPrefix(),"");  if (consumerType != null) {    consumerClassName=consumerType.toString();    TypeElement consumerElement=findTypeElement(processingEnv,roundEnv,consumerClassName);    if (consumerElement != null) {      writer.println("<h2>" + scheme + " consumer"+ "</h2>");      writeHtmlDocumentationAndFieldInjections(writer,roundEnv,componentModel,consumerElement,consumerPrefix,uriEndpoint.excludeProperties());      found=true;    }  }  if (!found && consumerClassName != null) {    warning(processingEnv,"APT cannot find consumer class " + consumerClassName);  }} @AT@ 9906 @LENGTH@ 22
------MOV VariableDeclarationStatement@@String consumerClassName=null; @TO@ Block@@ThenBody:{  TypeMirror consumerType=null;  try {    uriEndpoint.consumerClass();  } catch (  MirroredTypeException mte) {    consumerType=mte.getTypeMirror();  }  boolean found=false;  String consumerClassName=null;  String consumerPrefix=getOrElse(uriEndpoint.consumerPrefix(),"");  if (consumerType != null) {    consumerClassName=consumerType.toString();    TypeElement consumerElement=findTypeElement(processingEnv,roundEnv,consumerClassName);    if (consumerElement != null) {      writer.println("<h2>" + scheme + " consumer"+ "</h2>");      writeHtmlDocumentationAndFieldInjections(writer,roundEnv,componentModel,consumerElement,consumerPrefix,uriEndpoint.excludeProperties());      found=true;    }  }  if (!found && consumerClassName != null) {    warning(processingEnv,"APT cannot find consumer class " + consumerClassName);  }} @AT@ 9937 @LENGTH@ 32
------MOV VariableDeclarationStatement@@String consumerPrefix=getOrElse(uriEndpoint.consumerPrefix(),""); @TO@ Block@@ThenBody:{  TypeMirror consumerType=null;  try {    uriEndpoint.consumerClass();  } catch (  MirroredTypeException mte) {    consumerType=mte.getTypeMirror();  }  boolean found=false;  String consumerClassName=null;  String consumerPrefix=getOrElse(uriEndpoint.consumerPrefix(),"");  if (consumerType != null) {    consumerClassName=consumerType.toString();    TypeElement consumerElement=findTypeElement(processingEnv,roundEnv,consumerClassName);    if (consumerElement != null) {      writer.println("<h2>" + scheme + " consumer"+ "</h2>");      writeHtmlDocumentationAndFieldInjections(writer,roundEnv,componentModel,consumerElement,consumerPrefix,uriEndpoint.excludeProperties());      found=true;    }  }  if (!found && consumerClassName != null) {    warning(processingEnv,"APT cannot find consumer class " + consumerClassName);  }} @AT@ 9978 @LENGTH@ 68
------MOV IfStatement@@if (consumerType != null) {  consumerClassName=consumerType.toString();  TypeElement consumerElement=findTypeElement(processingEnv,roundEnv,consumerClassName);  if (consumerElement != null) {    writer.println("<h2>" + scheme + " consumer"+ "</h2>");    writeHtmlDocumentationAndFieldInjections(writer,roundEnv,componentModel,consumerElement,consumerPrefix,uriEndpoint.excludeProperties());    found=true;  }} @TO@ Block@@ThenBody:{  TypeMirror consumerType=null;  try {    uriEndpoint.consumerClass();  } catch (  MirroredTypeException mte) {    consumerType=mte.getTypeMirror();  }  boolean found=false;  String consumerClassName=null;  String consumerPrefix=getOrElse(uriEndpoint.consumerPrefix(),"");  if (consumerType != null) {    consumerClassName=consumerType.toString();    TypeElement consumerElement=findTypeElement(processingEnv,roundEnv,consumerClassName);    if (consumerElement != null) {      writer.println("<h2>" + scheme + " consumer"+ "</h2>");      writeHtmlDocumentationAndFieldInjections(writer,roundEnv,componentModel,consumerElement,consumerPrefix,uriEndpoint.excludeProperties());      found=true;    }  }  if (!found && consumerClassName != null) {    warning(processingEnv,"APT cannot find consumer class " + consumerClassName);  }} @AT@ 10055 @LENGTH@ 515
------MOV IfStatement@@if (!found && consumerClassName != null) {  warning(processingEnv,"APT could not find consumer class " + consumerClassName);} @TO@ Block@@ThenBody:{  TypeMirror consumerType=null;  try {    uriEndpoint.consumerClass();  } catch (  MirroredTypeException mte) {    consumerType=mte.getTypeMirror();  }  boolean found=false;  String consumerClassName=null;  String consumerPrefix=getOrElse(uriEndpoint.consumerPrefix(),"");  if (consumerType != null) {    consumerClassName=consumerType.toString();    TypeElement consumerElement=findTypeElement(processingEnv,roundEnv,consumerClassName);    if (consumerElement != null) {      writer.println("<h2>" + scheme + " consumer"+ "</h2>");      writeHtmlDocumentationAndFieldInjections(writer,roundEnv,componentModel,consumerElement,consumerPrefix,uriEndpoint.excludeProperties());      found=true;    }  }  if (!found && consumerClassName != null) {    warning(processingEnv,"APT cannot find consumer class " + consumerClassName);  }} @AT@ 10579 @LENGTH@ 146


UPD IfStatement@@if (supportSSL && !sslConfigured) {  throw IIOPLogger.ROOT_LOGGER.noSecurityDomainOrSSLContextsSpecified();} else if (serverRequiresSsl || clientRequiresSsl) {  throw IIOPLogger.ROOT_LOGGER.sslNotConfigured();} @TO@ if (supportSSL) {  if (!sslConfigured) {    throw IIOPLogger.ROOT_LOGGER.noSecurityDomainOrSSLContextsSpecified();  }} else if (serverRequiresSsl || clientRequiresSsl) {  throw IIOPLogger.ROOT_LOGGER.sslNotConfigured();} @AT@ 3378 @LENGTH@ 355
---INS SimpleName@@supportSSL @TO@ IfStatement@@if (supportSSL && !sslConfigured) {  throw IIOPLogger.ROOT_LOGGER.noSecurityDomainOrSSLContextsSpecified();} else if (serverRequiresSsl || clientRequiresSsl) {  throw IIOPLogger.ROOT_LOGGER.sslNotConfigured();} @AT@ 3381 @LENGTH@ 10
---DEL InfixExpression@@supportSSL && !sslConfigured @AT@ 3382 @LENGTH@ 28
------DEL SimpleName@@supportSSL @AT@ 3382 @LENGTH@ 10
------DEL Operator@@&& @AT@ 3392 @LENGTH@ 2
------DEL PrefixExpression@@!sslConfigured @AT@ 3396 @LENGTH@ 14
---INS Block@@ThenBody:{  if (!sslConfigured) {    throw IIOPLogger.ROOT_LOGGER.noSecurityDomainOrSSLContextsSpecified();  }} @TO@ IfStatement@@if (supportSSL && !sslConfigured) {  throw IIOPLogger.ROOT_LOGGER.noSecurityDomainOrSSLContextsSpecified();} else if (serverRequiresSsl || clientRequiresSsl) {  throw IIOPLogger.ROOT_LOGGER.sslNotConfigured();} @AT@ 3393 @LENGTH@ 146
------INS IfStatement@@if (!sslConfigured) {  throw IIOPLogger.ROOT_LOGGER.noSecurityDomainOrSSLContextsSpecified();} @TO@ Block@@ThenBody:{  if (!sslConfigured) {    throw IIOPLogger.ROOT_LOGGER.noSecurityDomainOrSSLContextsSpecified();  }} @AT@ 3407 @LENGTH@ 122
---------INS PrefixExpression@@!sslConfigured @TO@ IfStatement@@if (!sslConfigured) {  throw IIOPLogger.ROOT_LOGGER.noSecurityDomainOrSSLContextsSpecified();} @AT@ 3411 @LENGTH@ 14
------------MOV Operator@@! @TO@ PrefixExpression@@!sslConfigured @AT@ 3396 @LENGTH@ 1
------------MOV SimpleName@@sslConfigured @TO@ PrefixExpression@@!sslConfigured @AT@ 3397 @LENGTH@ 13
---------MOV Block@@ThenBody:{  throw IIOPLogger.ROOT_LOGGER.noSecurityDomainOrSSLContextsSpecified();} @TO@ IfStatement@@if (!sslConfigured) {  throw IIOPLogger.ROOT_LOGGER.noSecurityDomainOrSSLContextsSpecified();} @AT@ 3412 @LENGTH@ 94


UPD MethodDeclaration@@public, void, MethodName:testMarshallMultipleNamespaces, Exception,  @TO@ public, void, MethodName:testMarshallIfPartClassSetInHeaders, Exception,  @AT@ 1311 @LENGTH@ 1318
---UPD SimpleName@@MethodName:testMarshallMultipleNamespaces @TO@ MethodName:testMarshallIfPartClassSetInHeaders @AT@ 1323 @LENGTH@ 30


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<Olingo4Component> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<Olingo4Component> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5446 @LENGTH@ 340
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 5450 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5450 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  ComponentCustomizer<Olingo4Component> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ ThenBody:{  for (  ComponentCustomizer<Olingo4Component> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5506 @LENGTH@ 280
------UPD EnhancedForStatement@@for (ComponentCustomizer<Olingo4Component> configurer : customizers) {  LOGGER.debug("Configure component {}, with configurer {}",component,configurer);  configurer.customize(component);} @TO@ for (ComponentCustomizer<Olingo4Component> customizer : customizers) {  LOGGER.debug("Configure component {}, with customizer {}",component,customizer);  customizer.customize(component);} @AT@ 5520 @LENGTH@ 256
---------UPD SingleVariableDeclaration@@ComponentCustomizer<Olingo4Component> configurer @TO@ ComponentCustomizer<Olingo4Component> customizer @AT@ 5525 @LENGTH@ 48
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5563 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5607 @LENGTH@ 106
------------UPD MethodInvocation@@LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5607 @LENGTH@ 105
---------------UPD SimpleName@@MethodName:debug:["Configure component {}, with configurer {}", component, configurer] @TO@ MethodName:debug:["Configure component {}, with customizer {}", component, customizer] @AT@ 5614 @LENGTH@ 98
------------------UPD StringLiteral@@"Configure component {}, with configurer {}" @TO@ "Configure component {}, with customizer {}" @AT@ 5620 @LENGTH@ 44
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5701 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(component) @TO@ MethodInvocation:customizer.customize(component) @AT@ 5730 @LENGTH@ 32
------------UPD MethodInvocation@@configurer.customize(component) @TO@ customizer.customize(component) @AT@ 5730 @LENGTH@ 31
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5730 @LENGTH@ 10


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  LanguageCustomizer<XQueryLanguage> configurer : customizers) {    LOGGER.debug("Configure language {}, with configurer {}",language,configurer);    configurer.customize(language);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  LanguageCustomizer<XQueryLanguage> customizer : customizers) {    LOGGER.debug("Configure language {}, with customizer {}",language,customizer);    customizer.customize(language);  }} @AT@ 4725 @LENGTH@ 334
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 4729 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 4729 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  LanguageCustomizer<XQueryLanguage> configurer : customizers) {    LOGGER.debug("Configure language {}, with configurer {}",language,configurer);    configurer.customize(language);  }} @TO@ ThenBody:{  for (  LanguageCustomizer<XQueryLanguage> customizer : customizers) {    LOGGER.debug("Configure language {}, with customizer {}",language,customizer);    customizer.customize(language);  }} @AT@ 4785 @LENGTH@ 274
------UPD EnhancedForStatement@@for (LanguageCustomizer<XQueryLanguage> configurer : customizers) {  LOGGER.debug("Configure language {}, with configurer {}",language,configurer);  configurer.customize(language);} @TO@ for (LanguageCustomizer<XQueryLanguage> customizer : customizers) {  LOGGER.debug("Configure language {}, with customizer {}",language,customizer);  customizer.customize(language);} @AT@ 4799 @LENGTH@ 250
---------UPD SingleVariableDeclaration@@LanguageCustomizer<XQueryLanguage> configurer @TO@ LanguageCustomizer<XQueryLanguage> customizer @AT@ 4804 @LENGTH@ 45
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 4839 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure language {}, with configurer {}",language,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure language {}, with customizer {}",language,customizer) @AT@ 4883 @LENGTH@ 104
------------UPD MethodInvocation@@LOGGER.debug("Configure language {}, with configurer {}",language,configurer) @TO@ LOGGER.debug("Configure language {}, with customizer {}",language,customizer) @AT@ 4883 @LENGTH@ 103
---------------UPD SimpleName@@MethodName:debug:["Configure language {}, with configurer {}", language, configurer] @TO@ MethodName:debug:["Configure language {}, with customizer {}", language, customizer] @AT@ 4890 @LENGTH@ 96
------------------UPD StringLiteral@@"Configure language {}, with configurer {}" @TO@ "Configure language {}, with customizer {}" @AT@ 4896 @LENGTH@ 43
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 4975 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(language) @TO@ MethodInvocation:customizer.customize(language) @AT@ 5004 @LENGTH@ 31
------------UPD MethodInvocation@@configurer.customize(language) @TO@ customizer.customize(language) @AT@ 5004 @LENGTH@ 30
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5004 @LENGTH@ 10


UPD ExpressionStatement@@MethodInvocation:assertThat(repository.findOne(person.getId()).getId(),is(result.getId())) @TO@ MethodInvocation:assertThat(repository.findOne(person.getId()).get().getId(),is(result.getId())) @AT@ 1864 @LENGTH@ 75
---UPD MethodInvocation@@assertThat(repository.findOne(person.getId()).getId(),is(result.getId())) @TO@ assertThat(repository.findOne(person.getId()).get().getId(),is(result.getId())) @AT@ 1864 @LENGTH@ 74
------UPD SimpleName@@MethodName:assertThat:[repository.findOne(person.getId()).getId(), is(result.getId())] @TO@ MethodName:assertThat:[repository.findOne(person.getId()).get().getId(), is(result.getId())] @AT@ 1864 @LENGTH@ 74
---------UPD MethodInvocation@@repository.findOne(person.getId()).getId() @TO@ repository.findOne(person.getId()).get().getId() @AT@ 1875 @LENGTH@ 42
------------INS MethodInvocation@@MethodName:get:[] @TO@ MethodInvocation@@repository.findOne(person.getId()).getId() @AT@ 1875 @LENGTH@ 40


UPD ExpressionStatement@@MethodInvocation:from("direct:start").routeId("route").to("mock:a").id("task-a").choice().id("choice").when(simple("${body} contains Camel")).id("when").to("mock:b").id("task-b").to("mock:c").id("task-c").when(simple("${body} contains Donkey")).id("when2").to("mock:d").id("task-d").otherwise().id("otherwise").to("mock:e").id("task-e").end().to("mock:done").id("task-done") @TO@ MethodInvocation:from("direct:start").routeId("route").to("mock:a").id("task-a").choice().id("choice").when(simple("${body} contains 'Camel'")).id("when").to("mock:b").id("task-b").to("mock:c").id("task-c").when(simple("${body} contains 'Donkey'")).id("when2").to("mock:d").id("task-d").otherwise().id("otherwise").to("mock:e").id("task-e").end().to("mock:done").id("task-done") @AT@ 3112 @LENGTH@ 633
---UPD MethodInvocation@@from("direct:start").routeId("route").to("mock:a").id("task-a").choice().id("choice").when(simple("${body} contains Camel")).id("when").to("mock:b").id("task-b").to("mock:c").id("task-c").when(simple("${body} contains Donkey")).id("when2").to("mock:d").id("task-d").otherwise().id("otherwise").to("mock:e").id("task-e").end().to("mock:done").id("task-done") @TO@ from("direct:start").routeId("route").to("mock:a").id("task-a").choice().id("choice").when(simple("${body} contains 'Camel'")).id("when").to("mock:b").id("task-b").to("mock:c").id("task-c").when(simple("${body} contains 'Donkey'")).id("when2").to("mock:d").id("task-d").otherwise().id("otherwise").to("mock:e").id("task-e").end().to("mock:done").id("task-done") @AT@ 3112 @LENGTH@ 632
------UPD MethodInvocation@@MethodName:when:[simple("${body} contains Donkey")] @TO@ MethodName:when:[simple("${body} contains 'Donkey'")] @AT@ 3112 @LENGTH@ 377
---------UPD MethodInvocation@@simple("${body} contains Donkey") @TO@ simple("${body} contains 'Donkey'") @AT@ 3455 @LENGTH@ 33
------------UPD SimpleName@@MethodName:simple:["${body} contains Donkey"] @TO@ MethodName:simple:["${body} contains 'Donkey'"] @AT@ 3455 @LENGTH@ 33
---------------UPD StringLiteral@@"${body} contains Donkey" @TO@ "${body} contains 'Donkey'" @AT@ 3462 @LENGTH@ 25
------UPD MethodInvocation@@MethodName:when:[simple("${body} contains Camel")] @TO@ MethodName:when:[simple("${body} contains 'Camel'")] @AT@ 3112 @LENGTH@ 191
---------UPD MethodInvocation@@simple("${body} contains Camel") @TO@ simple("${body} contains 'Camel'") @AT@ 3270 @LENGTH@ 32
------------UPD SimpleName@@MethodName:simple:["${body} contains Camel"] @TO@ MethodName:simple:["${body} contains 'Camel'"] @AT@ 3270 @LENGTH@ 32
---------------UPD StringLiteral@@"${body} contains Camel" @TO@ "${body} contains 'Camel'" @AT@ 3277 @LENGTH@ 24


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<CouchDbComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<CouchDbComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5446 @LENGTH@ 340
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 5450 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5450 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  ComponentCustomizer<CouchDbComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ ThenBody:{  for (  ComponentCustomizer<CouchDbComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5506 @LENGTH@ 280
------UPD EnhancedForStatement@@for (ComponentCustomizer<CouchDbComponent> configurer : customizers) {  LOGGER.debug("Configure component {}, with configurer {}",component,configurer);  configurer.customize(component);} @TO@ for (ComponentCustomizer<CouchDbComponent> customizer : customizers) {  LOGGER.debug("Configure component {}, with customizer {}",component,customizer);  customizer.customize(component);} @AT@ 5520 @LENGTH@ 256
---------UPD SingleVariableDeclaration@@ComponentCustomizer<CouchDbComponent> configurer @TO@ ComponentCustomizer<CouchDbComponent> customizer @AT@ 5525 @LENGTH@ 48
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5563 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5607 @LENGTH@ 106
------------UPD MethodInvocation@@LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5607 @LENGTH@ 105
---------------UPD SimpleName@@MethodName:debug:["Configure component {}, with configurer {}", component, configurer] @TO@ MethodName:debug:["Configure component {}, with customizer {}", component, customizer] @AT@ 5614 @LENGTH@ 98
------------------UPD StringLiteral@@"Configure component {}, with configurer {}" @TO@ "Configure component {}, with customizer {}" @AT@ 5620 @LENGTH@ 44
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5701 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(component) @TO@ MethodInvocation:customizer.customize(component) @AT@ 5730 @LENGTH@ 32
------------UPD MethodInvocation@@configurer.customize(component) @TO@ customizer.customize(component) @AT@ 5730 @LENGTH@ 31
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5730 @LENGTH@ 10


UPD ExpressionStatement@@MethodInvocation:System.err.println(String.format("Building %s/%s-%s.jar",outDir,jarName,suffix)) @TO@ MethodInvocation:System.err.println(String.format("Building %s/%s%s.jar",outDir,jarName,suffix)) @AT@ 10709 @LENGTH@ 84
---UPD MethodInvocation@@System.err.println(String.format("Building %s/%s-%s.jar",outDir,jarName,suffix)) @TO@ System.err.println(String.format("Building %s/%s%s.jar",outDir,jarName,suffix)) @AT@ 10709 @LENGTH@ 83
------UPD SimpleName@@MethodName:println:[String.format("Building %s/%s-%s.jar",outDir,jarName,suffix)] @TO@ MethodName:println:[String.format("Building %s/%s%s.jar",outDir,jarName,suffix)] @AT@ 10720 @LENGTH@ 72
---------UPD MethodInvocation@@String.format("Building %s/%s-%s.jar",outDir,jarName,suffix) @TO@ String.format("Building %s/%s%s.jar",outDir,jarName,suffix) @AT@ 10728 @LENGTH@ 63
------------UPD SimpleName@@MethodName:format:["Building %s/%s-%s.jar", outDir, jarName, suffix] @TO@ MethodName:format:["Building %s/%s%s.jar", outDir, jarName, suffix] @AT@ 10735 @LENGTH@ 56
---------------UPD StringLiteral@@"Building %s/%s-%s.jar" @TO@ "Building %s/%s%s.jar" @AT@ 10742 @LENGTH@ 23


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled(); @AT@ 5294 @LENGTH@ 160
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5302 @LENGTH@ 151
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5302 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5319 @LENGTH@ 134
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 5319 @LENGTH@ 64
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5319 @LENGTH@ 35
---------UPD MethodInvocation@@componentConfiguration.getConfigurer().isEnabled() @TO@ componentConfiguration.getCustomizer().isEnabled() @AT@ 5403 @LENGTH@ 50
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5403 @LENGTH@ 38


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<SnmpComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<SnmpComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5395 @LENGTH@ 337
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 5399 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5399 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  ComponentCustomizer<SnmpComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ ThenBody:{  for (  ComponentCustomizer<SnmpComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5455 @LENGTH@ 277
------UPD EnhancedForStatement@@for (ComponentCustomizer<SnmpComponent> configurer : customizers) {  LOGGER.debug("Configure component {}, with configurer {}",component,configurer);  configurer.customize(component);} @TO@ for (ComponentCustomizer<SnmpComponent> customizer : customizers) {  LOGGER.debug("Configure component {}, with customizer {}",component,customizer);  customizer.customize(component);} @AT@ 5469 @LENGTH@ 253
---------UPD SingleVariableDeclaration@@ComponentCustomizer<SnmpComponent> configurer @TO@ ComponentCustomizer<SnmpComponent> customizer @AT@ 5474 @LENGTH@ 45
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5509 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5553 @LENGTH@ 106
------------UPD MethodInvocation@@LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5553 @LENGTH@ 105
---------------UPD SimpleName@@MethodName:debug:["Configure component {}, with configurer {}", component, configurer] @TO@ MethodName:debug:["Configure component {}, with customizer {}", component, customizer] @AT@ 5560 @LENGTH@ 98
------------------UPD StringLiteral@@"Configure component {}, with configurer {}" @TO@ "Configure component {}, with customizer {}" @AT@ 5566 @LENGTH@ 44
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5647 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(component) @TO@ MethodInvocation:customizer.customize(component) @AT@ 5676 @LENGTH@ 32
------------UPD MethodInvocation@@configurer.customize(component) @TO@ customizer.customize(component) @AT@ 5676 @LENGTH@ 31
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5676 @LENGTH@ 10


UPD IfStatement@@if (values[i] != null) {  Optional.of(values[i]);} @TO@ if (values[i] != null) {  return Optional.of(values[i]);} @AT@ 14666 @LENGTH@ 78
---UPD Block@@ThenBody:{  Optional.of(values[i]);} @TO@ ThenBody:{  return Optional.of(values[i]);} @AT@ 14689 @LENGTH@ 55
------INS ReturnStatement@@MethodInvocation:Optional.of(values[i]) @TO@ Block@@ThenBody:{  Optional.of(values[i]);} @AT@ 14707 @LENGTH@ 30
---------MOV MethodInvocation@@Optional.of(values[i]) @TO@ ReturnStatement@@MethodInvocation:Optional.of(values[i]) @AT@ 14707 @LENGTH@ 22
------DEL ExpressionStatement@@MethodInvocation:Optional.of(values[i]) @AT@ 14707 @LENGTH@ 23


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled(); @AT@ 5415 @LENGTH@ 160
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5423 @LENGTH@ 151
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5423 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5440 @LENGTH@ 134
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 5440 @LENGTH@ 64
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5440 @LENGTH@ 35
---------UPD MethodInvocation@@componentConfiguration.getConfigurer().isEnabled() @TO@ componentConfiguration.getCustomizer().isEnabled() @AT@ 5524 @LENGTH@ 50
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5524 @LENGTH@ 38


UPD VariableDeclarationStatement@@Matcher matcher=pattern.matcher(path); @TO@ Matcher matcher=PATTERN.matcher(path); @AT@ 5336 @LENGTH@ 40
---UPD VariableDeclarationFragment@@matcher=pattern.matcher(path) @TO@ matcher=PATTERN.matcher(path) @AT@ 5344 @LENGTH@ 31
------UPD MethodInvocation@@pattern.matcher(path) @TO@ PATTERN.matcher(path) @AT@ 5354 @LENGTH@ 21
---------UPD SimpleName@@Name:pattern @TO@ Name:PATTERN @AT@ 5354 @LENGTH@ 7


UPD FieldDeclaration@@private, static, String, [KEY_TO_MASK_WITH="password"] @TO@ private, static, final, String, [KEY_TO_MASK_WITH="password"] @AT@ 1710 @LENGTH@ 52
---INS Modifier@@final @TO@ FieldDeclaration@@private, static, String, [KEY_TO_MASK_WITH="password"] @AT@ 1673 @LENGTH@ 5


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled(); @AT@ 5226 @LENGTH@ 160
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5234 @LENGTH@ 151
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5234 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5251 @LENGTH@ 134
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 5251 @LENGTH@ 64
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5251 @LENGTH@ 35
---------UPD MethodInvocation@@componentConfiguration.getConfigurer().isEnabled() @TO@ componentConfiguration.getCustomizer().isEnabled() @AT@ 5335 @LENGTH@ 50
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5335 @LENGTH@ 38


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && dataformatConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && dataformatConfiguration.getCustomizer().isEnabled(); @AT@ 5155 @LENGTH@ 177
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && dataformatConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && dataformatConfiguration.getCustomizer().isEnabled() @AT@ 5163 @LENGTH@ 168
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5163 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && dataformatConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && dataformatConfiguration.getCustomizer().isEnabled() @AT@ 5180 @LENGTH@ 151
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 5180 @LENGTH@ 72
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5180 @LENGTH@ 35
---------UPD MethodInvocation@@dataformatConfiguration.getConfigurer().isEnabled() @TO@ dataformatConfiguration.getCustomizer().isEnabled() @AT@ 5280 @LENGTH@ 51
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5280 @LENGTH@ 39


INS ExpressionStatement@@MethodInvocation:from("jetty:http://localhost:" + port2 + "/endpoint2?handlers=#statisticsHandler2,#statisticsHandler3").process(new Processor(){
  public void process(  Exchange exchange) throws Exception {
    exchange.getOut().setBody(htmlResponse);
  }
}
) @TO@ MethodDeclaration@@public, void, MethodName:configure, Exception,  @AT@ 5481 @LENGTH@ 329
---INS MethodInvocation@@from("jetty:http://localhost:" + port2 + "/endpoint2?handlers=#statisticsHandler2,#statisticsHandler3").process(new Processor(){
  public void process(  Exchange exchange) throws Exception {
    exchange.getOut().setBody(htmlResponse);
  }
}
) @TO@ ExpressionStatement@@MethodInvocation:from("jetty:http://localhost:" + port2 + "/endpoint2?handlers=#statisticsHandler2,#statisticsHandler3").process(new Processor(){
  public void process(  Exchange exchange) throws Exception {
    exchange.getOut().setBody(htmlResponse);
  }
}
) @AT@ 5481 @LENGTH@ 328
------INS MethodInvocation@@MethodName:from:["jetty:http://localhost:" + port2 + "/endpoint2?handlers=#statisticsHandler2,#statisticsHandler3"] @TO@ MethodInvocation@@from("jetty:http://localhost:" + port2 + "/endpoint2?handlers=#statisticsHandler2,#statisticsHandler3").process(new Processor(){
  public void process(  Exchange exchange) throws Exception {
    exchange.getOut().setBody(htmlResponse);
  }
}
) @AT@ 5481 @LENGTH@ 103
---------INS InfixExpression@@"jetty:http://localhost:" + port2 + "/endpoint2?handlers=#statisticsHandler2,#statisticsHandler3" @TO@ MethodInvocation@@MethodName:from:["jetty:http://localhost:" + port2 + "/endpoint2?handlers=#statisticsHandler2,#statisticsHandler3"] @AT@ 5486 @LENGTH@ 97
------------INS StringLiteral@@"jetty:http://localhost:" @TO@ InfixExpression@@"jetty:http://localhost:" + port2 + "/endpoint2?handlers=#statisticsHandler2,#statisticsHandler3" @AT@ 5486 @LENGTH@ 25
------------INS Operator@@+ @TO@ InfixExpression@@"jetty:http://localhost:" + port2 + "/endpoint2?handlers=#statisticsHandler2,#statisticsHandler3" @AT@ 5511 @LENGTH@ 1
------------INS SimpleName@@port2 @TO@ InfixExpression@@"jetty:http://localhost:" + port2 + "/endpoint2?handlers=#statisticsHandler2,#statisticsHandler3" @AT@ 5514 @LENGTH@ 5
------------INS StringLiteral@@"/endpoint2?handlers=#statisticsHandler2,#statisticsHandler3" @TO@ InfixExpression@@"jetty:http://localhost:" + port2 + "/endpoint2?handlers=#statisticsHandler2,#statisticsHandler3" @AT@ 5522 @LENGTH@ 61
------INS SimpleName@@MethodName:process:[new Processor(){
  public void process(  Exchange exchange) throws Exception {
    exchange.getOut().setBody(htmlResponse);
  }
}
] @TO@ MethodInvocation@@from("jetty:http://localhost:" + port2 + "/endpoint2?handlers=#statisticsHandler2,#statisticsHandler3").process(new Processor(){
  public void process(  Exchange exchange) throws Exception {
    exchange.getOut().setBody(htmlResponse);
  }
}
) @AT@ 5604 @LENGTH@ 205
---------INS ClassInstanceCreation@@Processor[] @TO@ SimpleName@@MethodName:process:[new Processor(){
  public void process(  Exchange exchange) throws Exception {
    exchange.getOut().setBody(htmlResponse);
  }
}
] @AT@ 5612 @LENGTH@ 196
------------INS New@@new @TO@ ClassInstanceCreation@@Processor[] @AT@ 5612 @LENGTH@ 3
------------INS SimpleType@@Processor @TO@ ClassInstanceCreation@@Processor[] @AT@ 5616 @LENGTH@ 9
------------INS AnonymousClassDeclaration@@AnonymousClass @TO@ ClassInstanceCreation@@Processor[] @AT@ 5628 @LENGTH@ 180
---------------INS MethodDeclaration@@public, void, MethodName:process, Exchange exchange, Exception,  @TO@ AnonymousClassDeclaration@@AnonymousClass @AT@ 5649 @LENGTH@ 139
------------------INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:process, Exchange exchange, Exception,  @AT@ 5649 @LENGTH@ 6
------------------INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:process, Exchange exchange, Exception,  @AT@ 5656 @LENGTH@ 4
------------------INS SimpleName@@MethodName:process @TO@ MethodDeclaration@@public, void, MethodName:process, Exchange exchange, Exception,  @AT@ 5661 @LENGTH@ 7
------------------INS SingleVariableDeclaration@@Exchange exchange @TO@ MethodDeclaration@@public, void, MethodName:process, Exchange exchange, Exception,  @AT@ 5669 @LENGTH@ 17
---------------------INS SimpleType@@Exchange @TO@ SingleVariableDeclaration@@Exchange exchange @AT@ 5669 @LENGTH@ 8
---------------------INS SimpleName@@exchange @TO@ SingleVariableDeclaration@@Exchange exchange @AT@ 5678 @LENGTH@ 8
------------------INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:process, Exchange exchange, Exception,  @AT@ 5695 @LENGTH@ 9
------------------INS ExpressionStatement@@MethodInvocation:exchange.getOut().setBody(htmlResponse) @TO@ MethodDeclaration@@public, void, MethodName:process, Exchange exchange, Exception,  @AT@ 5727 @LENGTH@ 40
---------------------INS MethodInvocation@@exchange.getOut().setBody(htmlResponse) @TO@ ExpressionStatement@@MethodInvocation:exchange.getOut().setBody(htmlResponse) @AT@ 5727 @LENGTH@ 39
------------------------INS MethodInvocation@@MethodName:getOut:[] @TO@ MethodInvocation@@exchange.getOut().setBody(htmlResponse) @AT@ 5727 @LENGTH@ 17
------------------------INS SimpleName@@Name:exchange @TO@ MethodInvocation@@exchange.getOut().setBody(htmlResponse) @AT@ 5727 @LENGTH@ 8
------------------------INS SimpleName@@MethodName:setBody:[htmlResponse] @TO@ MethodInvocation@@exchange.getOut().setBody(htmlResponse) @AT@ 5745 @LENGTH@ 21
---------------------------INS SimpleName@@htmlResponse @TO@ SimpleName@@MethodName:setBody:[htmlResponse] @AT@ 5753 @LENGTH@ 12


UPD MethodDeclaration@@public, void, MethodName:ensureConnected, long timeoutMillis, CommandLineException,  @TO@ public, void, MethodName:ensureConnected, long timeoutMillis, CommandLineException, IOException,  @AT@ 10744 @LENGTH@ 1525
---INS SimpleType@@IOException @TO@ MethodDeclaration@@public, void, MethodName:ensureConnected, long timeoutMillis, CommandLineException,  @AT@ 10873 @LENGTH@ 11
---UPD WhileStatement@@while (doTry) {  try {    getOrCreateChannel().getConnection();    doTry=false;  } catch (  IOException e) {    ioe=e;synchronized (lock) {      if (strategy != null) {        StreamUtils.safeClose(strategy);        strategy=null;      }      lock.notifyAll();    }  }  if (ioe != null) {    if (ioe.getCause() != null && ioe.getCause() instanceof SaslException) {      throw new CommandLineException("Failed to establish connection",ioe);    }    if (System.currentTimeMillis() - start > timeoutMillis) {      throw new CommandLineException("Failed to establish connection in " + (System.currentTimeMillis() - start) + "ms",ioe);    }    ioe=null;    try {      Thread.sleep(500);    } catch (    InterruptedException e) {      throw new CommandLineException("Interrupted while pausing before reconnecting.",e);    }  }} @TO@ while (doTry) {  try {    getOrCreateChannel().getConnection();    doTry=false;  } catch (  IOException e) {    ioe=e;synchronized (lock) {      if (strategy != null) {        StreamUtils.safeClose(strategy);        strategy=null;      }      lock.notifyAll();    }  }  if (ioe != null) {    if (ioe.getCause() != null && ioe.getCause() instanceof SaslException) {      throw new CommandLineException("Failed to establish connection",ioe);    }    if (System.currentTimeMillis() - start > timeoutMillis) {      if (timeoutOccured) {        throw new CommandLineException("Failed to establish connection in " + (System.currentTimeMillis() - start) + "ms",ioe);      } else {        timeoutOccured=true;      }    }    if (timeoutOccured) {      Throwable ex=ioe;      while (ex != null) {        if (ex instanceof RedirectException) {          throw (RedirectException)ex;        }        ex=ex.getCause();      }    }    ioe=null;    try {      Thread.sleep(500);    } catch (    InterruptedException e) {      throw new CommandLineException("Interrupted while pausing before reconnecting.",e);    }  }} @AT@ 10947 @LENGTH@ 1316
------UPD Block@@WhileBody:{  try {    getOrCreateChannel().getConnection();    doTry=false;  } catch (  IOException e) {    ioe=e;synchronized (lock) {      if (strategy != null) {        StreamUtils.safeClose(strategy);        strategy=null;      }      lock.notifyAll();    }  }  if (ioe != null) {    if (ioe.getCause() != null && ioe.getCause() instanceof SaslException) {      throw new CommandLineException("Failed to establish connection",ioe);    }    if (System.currentTimeMillis() - start > timeoutMillis) {      throw new CommandLineException("Failed to establish connection in " + (System.currentTimeMillis() - start) + "ms",ioe);    }    ioe=null;    try {      Thread.sleep(500);    } catch (    InterruptedException e) {      throw new CommandLineException("Interrupted while pausing before reconnecting.",e);    }  }} @TO@ WhileBody:{  try {    getOrCreateChannel().getConnection();    doTry=false;  } catch (  IOException e) {    ioe=e;synchronized (lock) {      if (strategy != null) {        StreamUtils.safeClose(strategy);        strategy=null;      }      lock.notifyAll();    }  }  if (ioe != null) {    if (ioe.getCause() != null && ioe.getCause() instanceof SaslException) {      throw new CommandLineException("Failed to establish connection",ioe);    }    if (System.currentTimeMillis() - start > timeoutMillis) {      if (timeoutOccured) {        throw new CommandLineException("Failed to establish connection in " + (System.currentTimeMillis() - start) + "ms",ioe);      } else {        timeoutOccured=true;      }    }    if (timeoutOccured) {      Throwable ex=ioe;      while (ex != null) {        if (ex instanceof RedirectException) {          throw (RedirectException)ex;        }        ex=ex.getCause();      }    }    ioe=null;    try {      Thread.sleep(500);    } catch (    InterruptedException e) {      throw new CommandLineException("Interrupted while pausing before reconnecting.",e);    }  }} @AT@ 10961 @LENGTH@ 1302
---------UPD IfStatement@@if (ioe != null) {  if (ioe.getCause() != null && ioe.getCause() instanceof SaslException) {    throw new CommandLineException("Failed to establish connection",ioe);  }  if (System.currentTimeMillis() - start > timeoutMillis) {    throw new CommandLineException("Failed to establish connection in " + (System.currentTimeMillis() - start) + "ms",ioe);  }  ioe=null;  try {    Thread.sleep(500);  } catch (  InterruptedException e) {    throw new CommandLineException("Interrupted while pausing before reconnecting.",e);  }} @TO@ if (ioe != null) {  if (ioe.getCause() != null && ioe.getCause() instanceof SaslException) {    throw new CommandLineException("Failed to establish connection",ioe);  }  if (System.currentTimeMillis() - start > timeoutMillis) {    if (timeoutOccured) {      throw new CommandLineException("Failed to establish connection in " + (System.currentTimeMillis() - start) + "ms",ioe);    } else {      timeoutOccured=true;    }  }  if (timeoutOccured) {    Throwable ex=ioe;    while (ex != null) {      if (ex instanceof RedirectException) {        throw (RedirectException)ex;      }      ex=ex.getCause();    }  }  ioe=null;  try {    Thread.sleep(500);  } catch (  InterruptedException e) {    throw new CommandLineException("Interrupted while pausing before reconnecting.",e);  }} @AT@ 11498 @LENGTH@ 755
------------UPD Block@@ThenBody:{  if (ioe.getCause() != null && ioe.getCause() instanceof SaslException) {    throw new CommandLineException("Failed to establish connection",ioe);  }  if (System.currentTimeMillis() - start > timeoutMillis) {    throw new CommandLineException("Failed to establish connection in " + (System.currentTimeMillis() - start) + "ms",ioe);  }  ioe=null;  try {    Thread.sleep(500);  } catch (  InterruptedException e) {    throw new CommandLineException("Interrupted while pausing before reconnecting.",e);  }} @TO@ ThenBody:{  if (ioe.getCause() != null && ioe.getCause() instanceof SaslException) {    throw new CommandLineException("Failed to establish connection",ioe);  }  if (System.currentTimeMillis() - start > timeoutMillis) {    if (timeoutOccured) {      throw new CommandLineException("Failed to establish connection in " + (System.currentTimeMillis() - start) + "ms",ioe);    } else {      timeoutOccured=true;    }  }  if (timeoutOccured) {    Throwable ex=ioe;    while (ex != null) {      if (ex instanceof RedirectException) {        throw (RedirectException)ex;      }      ex=ex.getCause();    }  }  ioe=null;  try {    Thread.sleep(500);  } catch (  InterruptedException e) {    throw new CommandLineException("Interrupted while pausing before reconnecting.",e);  }} @AT@ 11515 @LENGTH@ 738
---------------UPD IfStatement@@if (System.currentTimeMillis() - start > timeoutMillis) {  throw new CommandLineException("Failed to establish connection in " + (System.currentTimeMillis() - start) + "ms",ioe);} @TO@ if (System.currentTimeMillis() - start > timeoutMillis) {  if (timeoutOccured) {    throw new CommandLineException("Failed to establish connection in " + (System.currentTimeMillis() - start) + "ms",ioe);  } else {    timeoutOccured=true;  }} @AT@ 11732 @LENGTH@ 244
------------------INS Block@@ThenBody:{  if (timeoutOccured) {    throw new CommandLineException("Failed to establish connection in " + (System.currentTimeMillis() - start) + "ms",ioe);  } else {    timeoutOccured=true;  }} @TO@ IfStatement@@if (System.currentTimeMillis() - start > timeoutMillis) {  throw new CommandLineException("Failed to establish connection in " + (System.currentTimeMillis() - start) + "ms",ioe);} @AT@ 11894 @LENGTH@ 336
---------------------INS IfStatement@@if (timeoutOccured) {  throw new CommandLineException("Failed to establish connection in " + (System.currentTimeMillis() - start) + "ms",ioe);} else {  timeoutOccured=true;} @TO@ Block@@ThenBody:{  if (timeoutOccured) {    throw new CommandLineException("Failed to establish connection in " + (System.currentTimeMillis() - start) + "ms",ioe);  } else {    timeoutOccured=true;  }} @AT@ 11916 @LENGTH@ 296
------------------------MOV Block@@ThenBody:{  throw new CommandLineException("Failed to establish connection in " + (System.currentTimeMillis() - start) + "ms",ioe);} @TO@ IfStatement@@if (timeoutOccured) {  throw new CommandLineException("Failed to establish connection in " + (System.currentTimeMillis() - start) + "ms",ioe);} else {  timeoutOccured=true;} @AT@ 11788 @LENGTH@ 188
------------------------INS SimpleName@@timeoutOccured @TO@ IfStatement@@if (timeoutOccured) {  throw new CommandLineException("Failed to establish connection in " + (System.currentTimeMillis() - start) + "ms",ioe);} else {  timeoutOccured=true;} @AT@ 11920 @LENGTH@ 14
------------------------INS Block@@ElseBody:{  timeoutOccured=true;} @TO@ IfStatement@@if (timeoutOccured) {  throw new CommandLineException("Failed to establish connection in " + (System.currentTimeMillis() - start) + "ms",ioe);} else {  timeoutOccured=true;} @AT@ 12142 @LENGTH@ 70
---------------------------INS ExpressionStatement@@Assignment:timeoutOccured=true @TO@ Block@@ElseBody:{  timeoutOccured=true;} @AT@ 12168 @LENGTH@ 22
------------------------------INS Assignment@@timeoutOccured=true @TO@ ExpressionStatement@@Assignment:timeoutOccured=true @AT@ 12168 @LENGTH@ 21
---------------------------------INS SimpleName@@timeoutOccured @TO@ Assignment@@timeoutOccured=true @AT@ 12168 @LENGTH@ 14
---------------------------------INS Operator@@= @TO@ Assignment@@timeoutOccured=true @AT@ 12182 @LENGTH@ 1
---------------------------------INS BooleanLiteral@@true @TO@ Assignment@@timeoutOccured=true @AT@ 12185 @LENGTH@ 4
---------------INS IfStatement@@if (timeoutOccured) {  Throwable ex=ioe;  while (ex != null) {    if (ex instanceof RedirectException) {      throw (RedirectException)ex;    }    ex=ex.getCause();  }} @TO@ Block@@ThenBody:{  if (ioe.getCause() != null && ioe.getCause() instanceof SaslException) {    throw new CommandLineException("Failed to establish connection",ioe);  }  if (System.currentTimeMillis() - start > timeoutMillis) {    throw new CommandLineException("Failed to establish connection in " + (System.currentTimeMillis() - start) + "ms",ioe);  }  ioe=null;  try {    Thread.sleep(500);  } catch (  InterruptedException e) {    throw new CommandLineException("Interrupted while pausing before reconnecting.",e);  }} @AT@ 12322 @LENGTH@ 333
------------------INS SimpleName@@timeoutOccured @TO@ IfStatement@@if (timeoutOccured) {  Throwable ex=ioe;  while (ex != null) {    if (ex instanceof RedirectException) {      throw (RedirectException)ex;    }    ex=ex.getCause();  }} @AT@ 12326 @LENGTH@ 14
------------------INS Block@@ThenBody:{  Throwable ex=ioe;  while (ex != null) {    if (ex instanceof RedirectException) {      throw (RedirectException)ex;    }    ex=ex.getCause();  }} @TO@ IfStatement@@if (timeoutOccured) {  Throwable ex=ioe;  while (ex != null) {    if (ex instanceof RedirectException) {      throw (RedirectException)ex;    }    ex=ex.getCause();  }} @AT@ 12342 @LENGTH@ 313
---------------------INS VariableDeclarationStatement@@Throwable ex=ioe; @TO@ Block@@ThenBody:{  Throwable ex=ioe;  while (ex != null) {    if (ex instanceof RedirectException) {      throw (RedirectException)ex;    }    ex=ex.getCause();  }} @AT@ 12364 @LENGTH@ 19
------------------------INS SimpleType@@Throwable @TO@ VariableDeclarationStatement@@Throwable ex=ioe; @AT@ 12364 @LENGTH@ 9
------------------------INS VariableDeclarationFragment@@ex=ioe @TO@ VariableDeclarationStatement@@Throwable ex=ioe; @AT@ 12374 @LENGTH@ 8
---------------------------INS SimpleName@@ex @TO@ VariableDeclarationFragment@@ex=ioe @AT@ 12374 @LENGTH@ 2
---------------------------INS SimpleName@@ioe @TO@ VariableDeclarationFragment@@ex=ioe @AT@ 12379 @LENGTH@ 3
---------------------INS WhileStatement@@while (ex != null) {  if (ex instanceof RedirectException) {    throw (RedirectException)ex;  }  ex=ex.getCause();} @TO@ Block@@ThenBody:{  Throwable ex=ioe;  while (ex != null) {    if (ex instanceof RedirectException) {      throw (RedirectException)ex;    }    ex=ex.getCause();  }} @AT@ 12404 @LENGTH@ 233
------------------------INS InfixExpression@@ex != null @TO@ WhileStatement@@while (ex != null) {  if (ex instanceof RedirectException) {    throw (RedirectException)ex;  }  ex=ex.getCause();} @AT@ 12411 @LENGTH@ 10
---------------------------INS SimpleName@@ex @TO@ InfixExpression@@ex != null @AT@ 12411 @LENGTH@ 2
---------------------------INS Operator@@!= @TO@ InfixExpression@@ex != null @AT@ 12413 @LENGTH@ 2
---------------------------INS NullLiteral@@null @TO@ InfixExpression@@ex != null @AT@ 12417 @LENGTH@ 4
------------------------INS Block@@WhileBody:{  if (ex instanceof RedirectException) {    throw (RedirectException)ex;  }  ex=ex.getCause();} @TO@ WhileStatement@@while (ex != null) {  if (ex instanceof RedirectException) {    throw (RedirectException)ex;  }  ex=ex.getCause();} @AT@ 12423 @LENGTH@ 214
---------------------------INS IfStatement@@if (ex instanceof RedirectException) {  throw (RedirectException)ex;} @TO@ Block@@WhileBody:{  if (ex instanceof RedirectException) {    throw (RedirectException)ex;  }  ex=ex.getCause();} @AT@ 12449 @LENGTH@ 122
------------------------------INS InstanceofExpression@@ex instanceof RedirectException @TO@ IfStatement@@if (ex instanceof RedirectException) {  throw (RedirectException)ex;} @AT@ 12453 @LENGTH@ 31
---------------------------------INS SimpleName@@ex @TO@ InstanceofExpression@@ex instanceof RedirectException @AT@ 12453 @LENGTH@ 2
---------------------------------INS Instanceof@@instanceof @TO@ InstanceofExpression@@ex instanceof RedirectException @AT@ 12456 @LENGTH@ 10
---------------------------------INS SimpleType@@RedirectException @TO@ InstanceofExpression@@ex instanceof RedirectException @AT@ 12467 @LENGTH@ 17
------------------------------INS Block@@ThenBody:{  throw (RedirectException)ex;} @TO@ IfStatement@@if (ex instanceof RedirectException) {  throw (RedirectException)ex;} @AT@ 12486 @LENGTH@ 85
---------------------------------INS ThrowStatement@@CastExpression:(RedirectException)ex @TO@ Block@@ThenBody:{  throw (RedirectException)ex;} @AT@ 12516 @LENGTH@ 29
------------------------------------INS CastExpression@@(RedirectException)ex @TO@ ThrowStatement@@CastExpression:(RedirectException)ex @AT@ 12522 @LENGTH@ 22
---------------------------------------INS SimpleType@@RedirectException @TO@ CastExpression@@(RedirectException)ex @AT@ 12523 @LENGTH@ 17
---------------------------------------INS SimpleName@@ex @TO@ CastExpression@@(RedirectException)ex @AT@ 12542 @LENGTH@ 2
---------------------------INS ExpressionStatement@@Assignment:ex=ex.getCause() @TO@ Block@@WhileBody:{  if (ex instanceof RedirectException) {    throw (RedirectException)ex;  }  ex=ex.getCause();} @AT@ 12596 @LENGTH@ 19
------------------------------INS Assignment@@ex=ex.getCause() @TO@ ExpressionStatement@@Assignment:ex=ex.getCause() @AT@ 12596 @LENGTH@ 18
---------------------------------INS SimpleName@@ex @TO@ Assignment@@ex=ex.getCause() @AT@ 12596 @LENGTH@ 2
---------------------------------INS Operator@@= @TO@ Assignment@@ex=ex.getCause() @AT@ 12598 @LENGTH@ 1
---------------------------------INS MethodInvocation@@ex.getCause() @TO@ Assignment@@ex=ex.getCause() @AT@ 12601 @LENGTH@ 13
------------------------------------INS SimpleName@@Name:ex @TO@ MethodInvocation@@ex.getCause() @AT@ 12601 @LENGTH@ 2
------------------------------------INS SimpleName@@MethodName:getCause:[] @TO@ MethodInvocation@@ex.getCause() @AT@ 12604 @LENGTH@ 10
---INS VariableDeclarationStatement@@boolean timeoutOccured=false; @TO@ MethodDeclaration@@public, void, MethodName:ensureConnected, long timeoutMillis, CommandLineException,  @AT@ 11013 @LENGTH@ 31
------INS PrimitiveType@@boolean @TO@ VariableDeclarationStatement@@boolean timeoutOccured=false; @AT@ 11013 @LENGTH@ 7
------INS VariableDeclarationFragment@@timeoutOccured=false @TO@ VariableDeclarationStatement@@boolean timeoutOccured=false; @AT@ 11021 @LENGTH@ 22
---------INS SimpleName@@timeoutOccured @TO@ VariableDeclarationFragment@@timeoutOccured=false @AT@ 11021 @LENGTH@ 14
---------INS BooleanLiteral@@false @TO@ VariableDeclarationFragment@@timeoutOccured=false @AT@ 11038 @LENGTH@ 5


UPD VariableDeclarationStatement@@boolean singleWrapperWithWrappedPageableResult=ReactiveWrappers.isSingleValueType(returnType.getType()) && (PAGE_TYPE.isAssignableFrom(returnType.getComponentType()) || SLICE_TYPE.isAssignableFrom(returnType.getComponentType())); @TO@ boolean singleWrapperWithWrappedPageableResult=ReactiveWrappers.isSingleValueType(returnType.getType()) && (PAGE_TYPE.isAssignableFrom(returnType.getComponentType().get()) || SLICE_TYPE.isAssignableFrom(returnType.getComponentType().get())); @AT@ 3059 @LENGTH@ 243
---UPD VariableDeclarationFragment@@singleWrapperWithWrappedPageableResult=ReactiveWrappers.isSingleValueType(returnType.getType()) && (PAGE_TYPE.isAssignableFrom(returnType.getComponentType()) || SLICE_TYPE.isAssignableFrom(returnType.getComponentType())) @TO@ singleWrapperWithWrappedPageableResult=ReactiveWrappers.isSingleValueType(returnType.getType()) && (PAGE_TYPE.isAssignableFrom(returnType.getComponentType().get()) || SLICE_TYPE.isAssignableFrom(returnType.getComponentType().get())) @AT@ 3067 @LENGTH@ 234
------UPD InfixExpression@@ReactiveWrappers.isSingleValueType(returnType.getType()) && (PAGE_TYPE.isAssignableFrom(returnType.getComponentType()) || SLICE_TYPE.isAssignableFrom(returnType.getComponentType())) @TO@ ReactiveWrappers.isSingleValueType(returnType.getType()) && (PAGE_TYPE.isAssignableFrom(returnType.getComponentType().get()) || SLICE_TYPE.isAssignableFrom(returnType.getComponentType().get())) @AT@ 3108 @LENGTH@ 193
---------UPD ParenthesizedExpression@@(PAGE_TYPE.isAssignableFrom(returnType.getComponentType()) || SLICE_TYPE.isAssignableFrom(returnType.getComponentType())) @TO@ (PAGE_TYPE.isAssignableFrom(returnType.getComponentType().get()) || SLICE_TYPE.isAssignableFrom(returnType.getComponentType().get())) @AT@ 3173 @LENGTH@ 128
------------UPD InfixExpression@@PAGE_TYPE.isAssignableFrom(returnType.getComponentType()) || SLICE_TYPE.isAssignableFrom(returnType.getComponentType()) @TO@ PAGE_TYPE.isAssignableFrom(returnType.getComponentType().get()) || SLICE_TYPE.isAssignableFrom(returnType.getComponentType().get()) @AT@ 3174 @LENGTH@ 126
---------------UPD MethodInvocation@@PAGE_TYPE.isAssignableFrom(returnType.getComponentType()) @TO@ PAGE_TYPE.isAssignableFrom(returnType.getComponentType().get()) @AT@ 3174 @LENGTH@ 57
------------------UPD SimpleName@@MethodName:isAssignableFrom:[returnType.getComponentType()] @TO@ MethodName:isAssignableFrom:[returnType.getComponentType().get()] @AT@ 3184 @LENGTH@ 47
---------------------UPD MethodInvocation@@returnType.getComponentType() @TO@ returnType.getComponentType().get() @AT@ 3201 @LENGTH@ 29
------------------------INS MethodInvocation@@MethodName:getComponentType:[] @TO@ MethodInvocation@@returnType.getComponentType() @AT@ 3201 @LENGTH@ 29
------------------------UPD SimpleName@@MethodName:getComponentType:[] @TO@ MethodName:get:[] @AT@ 3212 @LENGTH@ 18
---------------UPD MethodInvocation@@SLICE_TYPE.isAssignableFrom(returnType.getComponentType()) @TO@ SLICE_TYPE.isAssignableFrom(returnType.getComponentType().get()) @AT@ 3242 @LENGTH@ 58
------------------UPD SimpleName@@MethodName:isAssignableFrom:[returnType.getComponentType()] @TO@ MethodName:isAssignableFrom:[returnType.getComponentType().get()] @AT@ 3253 @LENGTH@ 47
---------------------UPD MethodInvocation@@returnType.getComponentType() @TO@ returnType.getComponentType().get() @AT@ 3270 @LENGTH@ 29
------------------------INS MethodInvocation@@MethodName:getComponentType:[] @TO@ MethodInvocation@@returnType.getComponentType() @AT@ 3276 @LENGTH@ 29
------------------------UPD SimpleName@@MethodName:getComponentType:[] @TO@ MethodName:get:[] @AT@ 3281 @LENGTH@ 18


UPD ExpressionStatement@@MethodInvocation:assertThat(nearQuery.getSkip(),is(0)) @TO@ MethodInvocation:assertThat(nearQuery.getSkip(),is(0L)) @AT@ 3986 @LENGTH@ 39
---UPD MethodInvocation@@assertThat(nearQuery.getSkip(),is(0)) @TO@ assertThat(nearQuery.getSkip(),is(0L)) @AT@ 3986 @LENGTH@ 38
------UPD SimpleName@@MethodName:assertThat:[nearQuery.getSkip(), is(0)] @TO@ MethodName:assertThat:[nearQuery.getSkip(), is(0L)] @AT@ 3986 @LENGTH@ 38
---------UPD MethodInvocation@@is(0) @TO@ is(0L) @AT@ 4018 @LENGTH@ 5
------------UPD SimpleName@@MethodName:is:[0] @TO@ MethodName:is:[0L] @AT@ 4018 @LENGTH@ 5
---------------UPD NumberLiteral@@0 @TO@ 0L @AT@ 4021 @LENGTH@ 1
------------UPD SimpleName@@MethodName:is:[0] @TO@ MethodName:is:[0L] @AT@ 4018 @LENGTH@ 5
---------------UPD NumberLiteral@@0 @TO@ 0L @AT@ 4021 @LENGTH@ 1


UPD ReturnStatement@@MethodInvocation:multiHashOrdered(parentHashCode(),6733,Arrays.hashCode(purposes)) @TO@ MethodInvocation:multiHashUnordered(parentHashCode(),6733,Arrays.hashCode(purposes)) @AT@ 1784 @LENGTH@ 75
---UPD MethodInvocation@@multiHashOrdered(parentHashCode(),6733,Arrays.hashCode(purposes)) @TO@ multiHashUnordered(parentHashCode(),6733,Arrays.hashCode(purposes)) @AT@ 1791 @LENGTH@ 67
------UPD SimpleName@@MethodName:multiHashOrdered:[parentHashCode(), 6733, Arrays.hashCode(purposes)] @TO@ MethodName:multiHashUnordered:[parentHashCode(), 6733, Arrays.hashCode(purposes)] @AT@ 1791 @LENGTH@ 67


UPD FieldDeclaration@@private, static, long, [serialVersionUID=1L] @TO@ private, static, final, long, [serialVersionUID=1L] @AT@ 1448 @LENGTH@ 42
---INS Modifier@@final @TO@ FieldDeclaration@@private, static, long, [serialVersionUID=1L] @AT@ 1463 @LENGTH@ 5


UPD IfStatement@@if (cur.charAt(this.longArg.length() + 3) == '=') {  value=cur.substring(this.longArg.length() + 3);} else {  value=cur.substring(this.longArg.length() + 2);} @TO@ if (cur.charAt(this.longArg.length() + 2) == '=') {  value=cur.substring(this.longArg.length() + 3);} else {  value=cur.substring(this.longArg.length() + 2);} @AT@ 9443 @LENGTH@ 234
---UPD InfixExpression@@cur.charAt(this.longArg.length() + 3) == '=' @TO@ cur.charAt(this.longArg.length() + 2) == '=' @AT@ 9447 @LENGTH@ 44
------UPD MethodInvocation@@cur.charAt(this.longArg.length() + 3) @TO@ cur.charAt(this.longArg.length() + 2) @AT@ 9447 @LENGTH@ 37
---------UPD SimpleName@@MethodName:charAt:[this.longArg.length() + 3] @TO@ MethodName:charAt:[this.longArg.length() + 2] @AT@ 9451 @LENGTH@ 33
------------UPD InfixExpression@@this.longArg.length() + 3 @TO@ this.longArg.length() + 2 @AT@ 9458 @LENGTH@ 25
---------------UPD NumberLiteral@@3 @TO@ 2 @AT@ 9482 @LENGTH@ 1


UPD FieldDeclaration@@static, int, [maxExponent=511] @TO@ static, final, int, [maxExponent=511] @AT@ 640 @LENGTH@ 29
---INS Modifier@@final @TO@ FieldDeclaration@@static, int, [maxExponent=511] @AT@ 647 @LENGTH@ 5


UPD TypeDeclaration@@[public]JwkTokenStore, [TokenStore] @TO@ [public, final]JwkTokenStore, [TokenStore] @AT@ 4340 @LENGTH@ 5091
---INS Modifier@@final @TO@ TypeDeclaration@@[public]JwkTokenStore, [TokenStore] @AT@ 3948 @LENGTH@ 5


INS IfStatement@@if (BLUEPRINT_NS.equals(namespace)) {  return getClass().getClassLoader().getResource("camel-blueprint.xsd");} @TO@ MethodDeclaration@@public, URL, MethodName:getSchemaLocation, String namespace,  @AT@ 8386 @LENGTH@ 130
---INS MethodInvocation@@BLUEPRINT_NS.equals(namespace) @TO@ IfStatement@@if (BLUEPRINT_NS.equals(namespace)) {  return getClass().getClassLoader().getResource("camel-blueprint.xsd");} @AT@ 8390 @LENGTH@ 30
------INS SimpleName@@Name:BLUEPRINT_NS @TO@ MethodInvocation@@BLUEPRINT_NS.equals(namespace) @AT@ 8390 @LENGTH@ 12
------INS SimpleName@@MethodName:equals:[namespace] @TO@ MethodInvocation@@BLUEPRINT_NS.equals(namespace) @AT@ 8403 @LENGTH@ 17
---------INS SimpleName@@namespace @TO@ SimpleName@@MethodName:equals:[namespace] @AT@ 8410 @LENGTH@ 9
---INS Block@@ThenBody:{  return getClass().getClassLoader().getResource("camel-blueprint.xsd");} @TO@ IfStatement@@if (BLUEPRINT_NS.equals(namespace)) {  return getClass().getClassLoader().getResource("camel-blueprint.xsd");} @AT@ 8422 @LENGTH@ 94
------MOV ReturnStatement@@MethodInvocation:getClass().getClassLoader().getResource("camel-blueprint.xsd") @TO@ Block@@ThenBody:{  return getClass().getClassLoader().getResource("camel-blueprint.xsd");} @AT@ 8386 @LENGTH@ 70


UPD ExpressionStatement@@MethodInvocation:getMockEndpoint("mock:result").expectedBodiesReceived("Total 2 of wine ordered") @TO@ MethodInvocation:getMockEndpoint("mock:result").expectedBodiesReceived("total 2 of wine ordered") @AT@ 1112 @LENGTH@ 81
---UPD MethodInvocation@@getMockEndpoint("mock:result").expectedBodiesReceived("Total 2 of wine ordered") @TO@ getMockEndpoint("mock:result").expectedBodiesReceived("total 2 of wine ordered") @AT@ 1112 @LENGTH@ 80
------UPD SimpleName@@MethodName:expectedBodiesReceived:["Total 2 of wine ordered"] @TO@ MethodName:expectedBodiesReceived:["total 2 of wine ordered"] @AT@ 1143 @LENGTH@ 49
---------UPD StringLiteral@@"Total 2 of wine ordered" @TO@ "total 2 of wine ordered" @AT@ 1166 @LENGTH@ 25


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<DdbComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<DdbComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5394 @LENGTH@ 336
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 5398 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5398 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  ComponentCustomizer<DdbComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ ThenBody:{  for (  ComponentCustomizer<DdbComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5454 @LENGTH@ 276
------UPD EnhancedForStatement@@for (ComponentCustomizer<DdbComponent> configurer : customizers) {  LOGGER.debug("Configure component {}, with configurer {}",component,configurer);  configurer.customize(component);} @TO@ for (ComponentCustomizer<DdbComponent> customizer : customizers) {  LOGGER.debug("Configure component {}, with customizer {}",component,customizer);  customizer.customize(component);} @AT@ 5468 @LENGTH@ 252
---------UPD SingleVariableDeclaration@@ComponentCustomizer<DdbComponent> configurer @TO@ ComponentCustomizer<DdbComponent> customizer @AT@ 5473 @LENGTH@ 44
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5507 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5551 @LENGTH@ 106
------------UPD MethodInvocation@@LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5551 @LENGTH@ 105
---------------UPD SimpleName@@MethodName:debug:["Configure component {}, with configurer {}", component, configurer] @TO@ MethodName:debug:["Configure component {}, with customizer {}", component, customizer] @AT@ 5558 @LENGTH@ 98
------------------UPD StringLiteral@@"Configure component {}, with configurer {}" @TO@ "Configure component {}, with customizer {}" @AT@ 5564 @LENGTH@ 44
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5645 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(component) @TO@ MethodInvocation:customizer.customize(component) @AT@ 5674 @LENGTH@ 32
------------UPD MethodInvocation@@configurer.customize(component) @TO@ customizer.customize(component) @AT@ 5674 @LENGTH@ 31
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5674 @LENGTH@ 10


UPD ExpressionStatement@@MethodInvocation:exception.getCause().printStackTrace(pw) @TO@ MethodInvocation:exception.printStackTrace(pw) @AT@ 15037 @LENGTH@ 41
---UPD MethodInvocation@@exception.getCause().printStackTrace(pw) @TO@ exception.printStackTrace(pw) @AT@ 15037 @LENGTH@ 40
------DEL MethodInvocation@@MethodName:getCause:[] @AT@ 15037 @LENGTH@ 20


INS FieldDeclaration@@private, List<String>, [uninitialized] @TO@ TypeDeclaration@@[@Data, @NoArgsConstructor]Todo,  @AT@ 1135 @LENGTH@ 35
---INS Modifier@@private @TO@ FieldDeclaration@@private, List<String>, [uninitialized] @AT@ 1135 @LENGTH@ 7
---INS ParameterizedType@@List<String> @TO@ FieldDeclaration@@private, List<String>, [uninitialized] @AT@ 1143 @LENGTH@ 12
------INS SimpleType@@List @TO@ ParameterizedType@@List<String> @AT@ 1143 @LENGTH@ 4
------INS SimpleType@@String @TO@ ParameterizedType@@List<String> @AT@ 1148 @LENGTH@ 6
---INS VariableDeclarationFragment@@uninitialized @TO@ FieldDeclaration@@private, List<String>, [uninitialized] @AT@ 1156 @LENGTH@ 13
------INS SimpleName@@uninitialized @TO@ VariableDeclarationFragment@@uninitialized @AT@ 1156 @LENGTH@ 13


UPD ReturnStatement@@MethodInvocation:multiHashOrdered(multiHashOrdered(parentHashCode(),2551,Objects.hashCode(sourceDomain)),2113,Objects.hashCode(context)) @TO@ MethodInvocation:multiHashUnordered(multiHashUnordered(parentHashCode(),2551,Objects.hashCode(sourceDomain)),2113,Objects.hashCode(context)) @AT@ 5926 @LENGTH@ 131
---UPD MethodInvocation@@multiHashOrdered(multiHashOrdered(parentHashCode(),2551,Objects.hashCode(sourceDomain)),2113,Objects.hashCode(context)) @TO@ multiHashUnordered(multiHashUnordered(parentHashCode(),2551,Objects.hashCode(sourceDomain)),2113,Objects.hashCode(context)) @AT@ 5933 @LENGTH@ 123
------UPD SimpleName@@MethodName:multiHashOrdered:[multiHashOrdered(parentHashCode(),2551,Objects.hashCode(sourceDomain)), 2113, Objects.hashCode(context)] @TO@ MethodName:multiHashUnordered:[multiHashUnordered(parentHashCode(),2551,Objects.hashCode(sourceDomain)), 2113, Objects.hashCode(context)] @AT@ 5933 @LENGTH@ 123
---------UPD MethodInvocation@@multiHashOrdered(parentHashCode(),2551,Objects.hashCode(sourceDomain)) @TO@ multiHashUnordered(parentHashCode(),2551,Objects.hashCode(sourceDomain)) @AT@ 5950 @LENGTH@ 72
------------UPD SimpleName@@MethodName:multiHashOrdered:[parentHashCode(), 2551, Objects.hashCode(sourceDomain)] @TO@ MethodName:multiHashUnordered:[parentHashCode(), 2551, Objects.hashCode(sourceDomain)] @AT@ 5950 @LENGTH@ 72
------------UPD SimpleName@@MethodName:multiHashOrdered:[parentHashCode(), 2551, Objects.hashCode(sourceDomain)] @TO@ MethodName:multiHashUnordered:[parentHashCode(), 2551, Objects.hashCode(sourceDomain)] @AT@ 5950 @LENGTH@ 72


UPD ReturnStatement@@MethodInvocation:annotations.stream().filter(isAnnotationType(type)).findAny().map(type::cast).orElse(null) @TO@ MethodInvocation:annotations.stream().filter(isAnnotationType(type)).findFirst().map(type::cast).orElse(null) @AT@ 2201 @LENGTH@ 150
---UPD MethodInvocation@@annotations.stream().filter(isAnnotationType(type)).findAny().map(type::cast).orElse(null) @TO@ annotations.stream().filter(isAnnotationType(type)).findFirst().map(type::cast).orElse(null) @AT@ 2208 @LENGTH@ 142
------UPD MethodInvocation@@MethodName:findAny:[] @TO@ MethodName:findFirst:[] @AT@ 2208 @LENGTH@ 87


INS ExpressionStatement@@MethodInvocation:when(nameMock.getAll()).thenReturn(Collections.<String>enumeration(Collections.<String>emptyList())) @TO@ MethodDeclaration@@public, void, MethodName:testFindByDn, NamingException,  @AT@ 6765 @LENGTH@ 103
---INS MethodInvocation@@when(nameMock.getAll()).thenReturn(Collections.<String>enumeration(Collections.<String>emptyList())) @TO@ ExpressionStatement@@MethodInvocation:when(nameMock.getAll()).thenReturn(Collections.<String>enumeration(Collections.<String>emptyList())) @AT@ 6765 @LENGTH@ 102
------INS MethodInvocation@@MethodName:when:[nameMock.getAll()] @TO@ MethodInvocation@@when(nameMock.getAll()).thenReturn(Collections.<String>enumeration(Collections.<String>emptyList())) @AT@ 6765 @LENGTH@ 23
---------INS MethodInvocation@@nameMock.getAll() @TO@ MethodInvocation@@MethodName:when:[nameMock.getAll()] @AT@ 6770 @LENGTH@ 17
------------INS SimpleName@@Name:nameMock @TO@ MethodInvocation@@nameMock.getAll() @AT@ 6770 @LENGTH@ 8
------------INS SimpleName@@MethodName:getAll:[] @TO@ MethodInvocation@@nameMock.getAll() @AT@ 6779 @LENGTH@ 8
------INS SimpleName@@MethodName:thenReturn:[Collections.<String>enumeration(Collections.<String>emptyList())] @TO@ MethodInvocation@@when(nameMock.getAll()).thenReturn(Collections.<String>enumeration(Collections.<String>emptyList())) @AT@ 6789 @LENGTH@ 78
---------INS MethodInvocation@@Collections.<String>enumeration(Collections.<String>emptyList()) @TO@ SimpleName@@MethodName:thenReturn:[Collections.<String>enumeration(Collections.<String>emptyList())] @AT@ 6800 @LENGTH@ 66
------------INS SimpleName@@Name:Collections @TO@ MethodInvocation@@Collections.<String>enumeration(Collections.<String>emptyList()) @AT@ 6800 @LENGTH@ 11
------------INS SimpleName@@MethodName:enumeration:[Collections.<String>emptyList()] @TO@ MethodInvocation@@Collections.<String>enumeration(Collections.<String>emptyList()) @AT@ 6821 @LENGTH@ 45
---------------INS MethodInvocation@@Collections.<String>emptyList() @TO@ SimpleName@@MethodName:enumeration:[Collections.<String>emptyList()] @AT@ 6833 @LENGTH@ 32
------------------INS SimpleName@@Name:Collections @TO@ MethodInvocation@@Collections.<String>emptyList() @AT@ 6833 @LENGTH@ 11
------------------INS SimpleName@@MethodName:emptyList:[] @TO@ MethodInvocation@@Collections.<String>emptyList() @AT@ 6854 @LENGTH@ 11


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<VertxComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<VertxComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5412 @LENGTH@ 338
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 5416 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5416 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  ComponentCustomizer<VertxComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ ThenBody:{  for (  ComponentCustomizer<VertxComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5472 @LENGTH@ 278
------UPD EnhancedForStatement@@for (ComponentCustomizer<VertxComponent> configurer : customizers) {  LOGGER.debug("Configure component {}, with configurer {}",component,configurer);  configurer.customize(component);} @TO@ for (ComponentCustomizer<VertxComponent> customizer : customizers) {  LOGGER.debug("Configure component {}, with customizer {}",component,customizer);  customizer.customize(component);} @AT@ 5486 @LENGTH@ 254
---------UPD SingleVariableDeclaration@@ComponentCustomizer<VertxComponent> configurer @TO@ ComponentCustomizer<VertxComponent> customizer @AT@ 5491 @LENGTH@ 46
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5527 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5571 @LENGTH@ 106
------------UPD MethodInvocation@@LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5571 @LENGTH@ 105
---------------UPD SimpleName@@MethodName:debug:["Configure component {}, with configurer {}", component, configurer] @TO@ MethodName:debug:["Configure component {}, with customizer {}", component, customizer] @AT@ 5578 @LENGTH@ 98
------------------UPD StringLiteral@@"Configure component {}, with configurer {}" @TO@ "Configure component {}, with customizer {}" @AT@ 5584 @LENGTH@ 44
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5665 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(component) @TO@ MethodInvocation:customizer.customize(component) @AT@ 5694 @LENGTH@ 32
------------UPD MethodInvocation@@configurer.customize(component) @TO@ customizer.customize(component) @AT@ 5694 @LENGTH@ 31
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5694 @LENGTH@ 10


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled(); @AT@ 5294 @LENGTH@ 160
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5302 @LENGTH@ 151
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5302 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5319 @LENGTH@ 134
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 5319 @LENGTH@ 64
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5319 @LENGTH@ 35
---------UPD MethodInvocation@@componentConfiguration.getConfigurer().isEnabled() @TO@ componentConfiguration.getCustomizer().isEnabled() @AT@ 5403 @LENGTH@ 50
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5403 @LENGTH@ 38


UPD FieldDeclaration@@private, static, long, [serialVersionUID=1L] @TO@ private, static, final, long, [serialVersionUID=1L] @AT@ 1044 @LENGTH@ 42
---INS Modifier@@final @TO@ FieldDeclaration@@private, static, long, [serialVersionUID=1L] @AT@ 1059 @LENGTH@ 5


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  LanguageCustomizer<PhpLanguage> configurer : customizers) {    LOGGER.debug("Configure language {}, with configurer {}",language,configurer);    configurer.customize(language);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  LanguageCustomizer<PhpLanguage> customizer : customizers) {    LOGGER.debug("Configure language {}, with customizer {}",language,customizer);    customizer.customize(language);  }} @AT@ 4675 @LENGTH@ 331
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 4679 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 4679 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  LanguageCustomizer<PhpLanguage> configurer : customizers) {    LOGGER.debug("Configure language {}, with configurer {}",language,configurer);    configurer.customize(language);  }} @TO@ ThenBody:{  for (  LanguageCustomizer<PhpLanguage> customizer : customizers) {    LOGGER.debug("Configure language {}, with customizer {}",language,customizer);    customizer.customize(language);  }} @AT@ 4735 @LENGTH@ 271
------UPD EnhancedForStatement@@for (LanguageCustomizer<PhpLanguage> configurer : customizers) {  LOGGER.debug("Configure language {}, with configurer {}",language,configurer);  configurer.customize(language);} @TO@ for (LanguageCustomizer<PhpLanguage> customizer : customizers) {  LOGGER.debug("Configure language {}, with customizer {}",language,customizer);  customizer.customize(language);} @AT@ 4749 @LENGTH@ 247
---------UPD SingleVariableDeclaration@@LanguageCustomizer<PhpLanguage> configurer @TO@ LanguageCustomizer<PhpLanguage> customizer @AT@ 4754 @LENGTH@ 42
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 4786 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure language {}, with configurer {}",language,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure language {}, with customizer {}",language,customizer) @AT@ 4830 @LENGTH@ 104
------------UPD MethodInvocation@@LOGGER.debug("Configure language {}, with configurer {}",language,configurer) @TO@ LOGGER.debug("Configure language {}, with customizer {}",language,customizer) @AT@ 4830 @LENGTH@ 103
---------------UPD SimpleName@@MethodName:debug:["Configure language {}, with configurer {}", language, configurer] @TO@ MethodName:debug:["Configure language {}, with customizer {}", language, customizer] @AT@ 4837 @LENGTH@ 96
------------------UPD StringLiteral@@"Configure language {}, with configurer {}" @TO@ "Configure language {}, with customizer {}" @AT@ 4843 @LENGTH@ 43
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 4922 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(language) @TO@ MethodInvocation:customizer.customize(language) @AT@ 4951 @LENGTH@ 31
------------UPD MethodInvocation@@configurer.customize(language) @TO@ customizer.customize(language) @AT@ 4951 @LENGTH@ 30
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 4951 @LENGTH@ 10


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled(); @AT@ 5415 @LENGTH@ 160
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5423 @LENGTH@ 151
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5423 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5440 @LENGTH@ 134
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 5440 @LENGTH@ 64
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5440 @LENGTH@ 35
---------UPD MethodInvocation@@componentConfiguration.getConfigurer().isEnabled() @TO@ componentConfiguration.getCustomizer().isEnabled() @AT@ 5524 @LENGTH@ 50
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5524 @LENGTH@ 38


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && dataformatConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && dataformatConfiguration.getCustomizer().isEnabled(); @AT@ 5281 @LENGTH@ 177
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && dataformatConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && dataformatConfiguration.getCustomizer().isEnabled() @AT@ 5289 @LENGTH@ 168
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5289 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && dataformatConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && dataformatConfiguration.getCustomizer().isEnabled() @AT@ 5306 @LENGTH@ 151
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 5306 @LENGTH@ 72
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5306 @LENGTH@ 35
---------UPD MethodInvocation@@dataformatConfiguration.getConfigurer().isEnabled() @TO@ dataformatConfiguration.getCustomizer().isEnabled() @AT@ 5406 @LENGTH@ 51
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5406 @LENGTH@ 39


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<ControlBusComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<ControlBusComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5497 @LENGTH@ 343
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 5501 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5501 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  ComponentCustomizer<ControlBusComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ ThenBody:{  for (  ComponentCustomizer<ControlBusComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5557 @LENGTH@ 283
------UPD EnhancedForStatement@@for (ComponentCustomizer<ControlBusComponent> configurer : customizers) {  LOGGER.debug("Configure component {}, with configurer {}",component,configurer);  configurer.customize(component);} @TO@ for (ComponentCustomizer<ControlBusComponent> customizer : customizers) {  LOGGER.debug("Configure component {}, with customizer {}",component,customizer);  customizer.customize(component);} @AT@ 5571 @LENGTH@ 259
---------UPD SingleVariableDeclaration@@ComponentCustomizer<ControlBusComponent> configurer @TO@ ComponentCustomizer<ControlBusComponent> customizer @AT@ 5576 @LENGTH@ 51
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5617 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5661 @LENGTH@ 106
------------UPD MethodInvocation@@LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5661 @LENGTH@ 105
---------------UPD SimpleName@@MethodName:debug:["Configure component {}, with configurer {}", component, configurer] @TO@ MethodName:debug:["Configure component {}, with customizer {}", component, customizer] @AT@ 5668 @LENGTH@ 98
------------------UPD StringLiteral@@"Configure component {}, with configurer {}" @TO@ "Configure component {}, with customizer {}" @AT@ 5674 @LENGTH@ 44
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5755 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(component) @TO@ MethodInvocation:customizer.customize(component) @AT@ 5784 @LENGTH@ 32
------------UPD MethodInvocation@@configurer.customize(component) @TO@ customizer.customize(component) @AT@ 5784 @LENGTH@ 31
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5784 @LENGTH@ 10


UPD FieldDeclaration@@private, static, final, AttributeDefinition, [STABILITY_TIMEOUT=SimpleAttributeDefinitionBuilder.create("timeout",ModelType.INT,false).setDefaultValue(new ModelNode(15)).setValidator(new IntRangeValidator(0,true)).setMeasurementUnit(MeasurementUnit.SECONDS).build()] @TO@ private, static, final, AttributeDefinition, [STABILITY_TIMEOUT=SimpleAttributeDefinitionBuilder.create("timeout",ModelType.INT).setRequired(false).setDefaultValue(new ModelNode(15)).setValidator(new IntRangeValidator(0,true)).setMeasurementUnit(MeasurementUnit.SECONDS).build()] @AT@ 3373 @LENGTH@ 318
---UPD VariableDeclarationFragment@@STABILITY_TIMEOUT=SimpleAttributeDefinitionBuilder.create("timeout",ModelType.INT,false).setDefaultValue(new ModelNode(15)).setValidator(new IntRangeValidator(0,true)).setMeasurementUnit(MeasurementUnit.SECONDS).build() @TO@ STABILITY_TIMEOUT=SimpleAttributeDefinitionBuilder.create("timeout",ModelType.INT).setRequired(false).setDefaultValue(new ModelNode(15)).setValidator(new IntRangeValidator(0,true)).setMeasurementUnit(MeasurementUnit.SECONDS).build() @AT@ 3414 @LENGTH@ 276
------UPD MethodInvocation@@SimpleAttributeDefinitionBuilder.create("timeout",ModelType.INT,false).setDefaultValue(new ModelNode(15)).setValidator(new IntRangeValidator(0,true)).setMeasurementUnit(MeasurementUnit.SECONDS).build() @TO@ SimpleAttributeDefinitionBuilder.create("timeout",ModelType.INT).setRequired(false).setDefaultValue(new ModelNode(15)).setValidator(new IntRangeValidator(0,true)).setMeasurementUnit(MeasurementUnit.SECONDS).build() @AT@ 3434 @LENGTH@ 256
---------INS MethodInvocation@@MethodName:setRequired:[false] @TO@ MethodInvocation@@SimpleAttributeDefinitionBuilder.create("timeout",ModelType.INT,false).setDefaultValue(new ModelNode(15)).setValidator(new IntRangeValidator(0,true)).setMeasurementUnit(MeasurementUnit.SECONDS).build() @AT@ 3434 @LENGTH@ 97
------------MOV BooleanLiteral@@false @TO@ MethodInvocation@@MethodName:setRequired:[false] @AT@ 3500 @LENGTH@ 5
---------DEL MethodInvocation@@MethodName:create:["timeout", ModelType.INT, false] @AT@ 3434 @LENGTH@ 72
---------INS MethodInvocation@@MethodName:create:["timeout", ModelType.INT] @TO@ MethodInvocation@@SimpleAttributeDefinitionBuilder.create("timeout",ModelType.INT,false).setDefaultValue(new ModelNode(15)).setValidator(new IntRangeValidator(0,true)).setMeasurementUnit(MeasurementUnit.SECONDS).build() @AT@ 3434 @LENGTH@ 65
------------MOV StringLiteral@@"timeout" @TO@ MethodInvocation@@MethodName:create:["timeout", ModelType.INT] @AT@ 3474 @LENGTH@ 9
------------MOV QualifiedName@@ModelType.INT @TO@ MethodInvocation@@MethodName:create:["timeout", ModelType.INT] @AT@ 3485 @LENGTH@ 13


UPD ExpressionStatement@@Assignment:n=len - bytes @TO@ Assignment:n=(long)len - bytes @AT@ 5855 @LENGTH@ 16
---UPD Assignment@@n=len - bytes @TO@ n=(long)len - bytes @AT@ 5855 @LENGTH@ 15
------UPD InfixExpression@@len - bytes @TO@ (long)len - bytes @AT@ 5859 @LENGTH@ 11
---------INS CastExpression@@(long)len @TO@ InfixExpression@@len - bytes @AT@ 5859 @LENGTH@ 10
------------INS PrimitiveType@@long @TO@ CastExpression@@(long)len @AT@ 5860 @LENGTH@ 4
------------INS SimpleName@@len @TO@ CastExpression@@(long)len @AT@ 5866 @LENGTH@ 3
---------DEL SimpleName@@len @AT@ 5859 @LENGTH@ 3


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<IgniteComputeComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<IgniteComputeComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5584 @LENGTH@ 346
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 5588 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5588 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  ComponentCustomizer<IgniteComputeComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ ThenBody:{  for (  ComponentCustomizer<IgniteComputeComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5644 @LENGTH@ 286
------UPD EnhancedForStatement@@for (ComponentCustomizer<IgniteComputeComponent> configurer : customizers) {  LOGGER.debug("Configure component {}, with configurer {}",component,configurer);  configurer.customize(component);} @TO@ for (ComponentCustomizer<IgniteComputeComponent> customizer : customizers) {  LOGGER.debug("Configure component {}, with customizer {}",component,customizer);  customizer.customize(component);} @AT@ 5658 @LENGTH@ 262
---------UPD SingleVariableDeclaration@@ComponentCustomizer<IgniteComputeComponent> configurer @TO@ ComponentCustomizer<IgniteComputeComponent> customizer @AT@ 5663 @LENGTH@ 54
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5707 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5751 @LENGTH@ 106
------------UPD MethodInvocation@@LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5751 @LENGTH@ 105
---------------UPD SimpleName@@MethodName:debug:["Configure component {}, with configurer {}", component, configurer] @TO@ MethodName:debug:["Configure component {}, with customizer {}", component, customizer] @AT@ 5758 @LENGTH@ 98
------------------UPD StringLiteral@@"Configure component {}, with configurer {}" @TO@ "Configure component {}, with customizer {}" @AT@ 5764 @LENGTH@ 44
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5845 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(component) @TO@ MethodInvocation:customizer.customize(component) @AT@ 5874 @LENGTH@ 32
------------UPD MethodInvocation@@configurer.customize(component) @TO@ customizer.customize(component) @AT@ 5874 @LENGTH@ 31
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5874 @LENGTH@ 10


UPD ReturnStatement@@MethodInvocation:new ResultErrorBuilder().code(VerificationError.StandardCode.UNSUPPORTED_SCOPE).description("Unsupported component: " + component) @TO@ MethodInvocation:new ResultErrorBuilder().code(VerificationError.StandardCode.UNSUPPORTED_COMPONENT).description("Unsupported component: " + component) @AT@ 5299 @LENGTH@ 164
---UPD MethodInvocation@@new ResultErrorBuilder().code(VerificationError.StandardCode.UNSUPPORTED_SCOPE).description("Unsupported component: " + component) @TO@ new ResultErrorBuilder().code(VerificationError.StandardCode.UNSUPPORTED_COMPONENT).description("Unsupported component: " + component) @AT@ 5306 @LENGTH@ 156
------UPD MethodInvocation@@MethodName:code:[VerificationError.StandardCode.UNSUPPORTED_SCOPE] @TO@ MethodName:code:[VerificationError.StandardCode.UNSUPPORTED_COMPONENT] @AT@ 5306 @LENGTH@ 92
---------UPD QualifiedName@@VerificationError.StandardCode.UNSUPPORTED_SCOPE @TO@ VerificationError.StandardCode.UNSUPPORTED_COMPONENT @AT@ 5349 @LENGTH@ 48
------------UPD SimpleName@@UNSUPPORTED_SCOPE @TO@ UNSUPPORTED_COMPONENT @AT@ 5380 @LENGTH@ 17


UPD ExpressionStatement@@Assignment:oldExt=oldModel.getVendorExtensions().get("x-className") == null @TO@ Assignment:oldExt=oldModel.getVendorExtensions().get("x-className") != null @AT@ 23585 @LENGTH@ 67
---UPD Assignment@@oldExt=oldModel.getVendorExtensions().get("x-className") == null @TO@ oldExt=oldModel.getVendorExtensions().get("x-className") != null @AT@ 23585 @LENGTH@ 66
------UPD InfixExpression@@oldModel.getVendorExtensions().get("x-className") == null @TO@ oldModel.getVendorExtensions().get("x-className") != null @AT@ 23594 @LENGTH@ 57
---------UPD Operator@@== @TO@ != @AT@ 23643 @LENGTH@ 2


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && dataformatConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && dataformatConfiguration.getCustomizer().isEnabled(); @AT@ 5092 @LENGTH@ 177
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && dataformatConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && dataformatConfiguration.getCustomizer().isEnabled() @AT@ 5100 @LENGTH@ 168
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5100 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && dataformatConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && dataformatConfiguration.getCustomizer().isEnabled() @AT@ 5117 @LENGTH@ 151
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 5117 @LENGTH@ 72
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5117 @LENGTH@ 35
---------UPD MethodInvocation@@dataformatConfiguration.getConfigurer().isEnabled() @TO@ dataformatConfiguration.getCustomizer().isEnabled() @AT@ 5217 @LENGTH@ 51
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5217 @LENGTH@ 39


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<JoltComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<JoltComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5395 @LENGTH@ 337
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 5399 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5399 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  ComponentCustomizer<JoltComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ ThenBody:{  for (  ComponentCustomizer<JoltComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5455 @LENGTH@ 277
------UPD EnhancedForStatement@@for (ComponentCustomizer<JoltComponent> configurer : customizers) {  LOGGER.debug("Configure component {}, with configurer {}",component,configurer);  configurer.customize(component);} @TO@ for (ComponentCustomizer<JoltComponent> customizer : customizers) {  LOGGER.debug("Configure component {}, with customizer {}",component,customizer);  customizer.customize(component);} @AT@ 5469 @LENGTH@ 253
---------UPD SingleVariableDeclaration@@ComponentCustomizer<JoltComponent> configurer @TO@ ComponentCustomizer<JoltComponent> customizer @AT@ 5474 @LENGTH@ 45
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5509 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5553 @LENGTH@ 106
------------UPD MethodInvocation@@LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5553 @LENGTH@ 105
---------------UPD SimpleName@@MethodName:debug:["Configure component {}, with configurer {}", component, configurer] @TO@ MethodName:debug:["Configure component {}, with customizer {}", component, customizer] @AT@ 5560 @LENGTH@ 98
------------------UPD StringLiteral@@"Configure component {}, with configurer {}" @TO@ "Configure component {}, with customizer {}" @AT@ 5566 @LENGTH@ 44
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5647 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(component) @TO@ MethodInvocation:customizer.customize(component) @AT@ 5676 @LENGTH@ 32
------------UPD MethodInvocation@@configurer.customize(component) @TO@ customizer.customize(component) @AT@ 5676 @LENGTH@ 31
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5676 @LENGTH@ 10


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<HazelcastAtomicnumberComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<HazelcastAtomicnumberComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5718 @LENGTH@ 354
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 5722 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5722 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  ComponentCustomizer<HazelcastAtomicnumberComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ ThenBody:{  for (  ComponentCustomizer<HazelcastAtomicnumberComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5778 @LENGTH@ 294
------UPD EnhancedForStatement@@for (ComponentCustomizer<HazelcastAtomicnumberComponent> configurer : customizers) {  LOGGER.debug("Configure component {}, with configurer {}",component,configurer);  configurer.customize(component);} @TO@ for (ComponentCustomizer<HazelcastAtomicnumberComponent> customizer : customizers) {  LOGGER.debug("Configure component {}, with customizer {}",component,customizer);  customizer.customize(component);} @AT@ 5792 @LENGTH@ 270
---------UPD SingleVariableDeclaration@@ComponentCustomizer<HazelcastAtomicnumberComponent> configurer @TO@ ComponentCustomizer<HazelcastAtomicnumberComponent> customizer @AT@ 5797 @LENGTH@ 62
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5849 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5893 @LENGTH@ 106
------------UPD MethodInvocation@@LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5893 @LENGTH@ 105
---------------UPD SimpleName@@MethodName:debug:["Configure component {}, with configurer {}", component, configurer] @TO@ MethodName:debug:["Configure component {}, with customizer {}", component, customizer] @AT@ 5900 @LENGTH@ 98
------------------UPD StringLiteral@@"Configure component {}, with configurer {}" @TO@ "Configure component {}, with customizer {}" @AT@ 5906 @LENGTH@ 44
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5987 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(component) @TO@ MethodInvocation:customizer.customize(component) @AT@ 6016 @LENGTH@ 32
------------UPD MethodInvocation@@configurer.customize(component) @TO@ customizer.customize(component) @AT@ 6016 @LENGTH@ 31
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 6016 @LENGTH@ 10


MOV MethodDeclaration@@public, void, MethodName:storeAccessTokenWhenCalledThenThrowJwkException, Exception,  @TO@ TypeDeclaration@@[@RunWith(PowerMockRunner.class), @PrepareForTest(JwkTokenStore.class), public]JwkTokenStoreTest,  @AT@ 3250 @LENGTH@ 170


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled(); @AT@ 5294 @LENGTH@ 160
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5302 @LENGTH@ 151
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5302 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5319 @LENGTH@ 134
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 5319 @LENGTH@ 64
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5319 @LENGTH@ 35
---------UPD MethodInvocation@@componentConfiguration.getConfigurer().isEnabled() @TO@ componentConfiguration.getCustomizer().isEnabled() @AT@ 5403 @LENGTH@ 50
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5403 @LENGTH@ 38


UPD ForStatement@@for (int i=0; i < numCoders - 1; i++) {  writeUint64(header,i + 1);  writeUint64(header,i);} @TO@ for (long i=0; i < numCoders - 1; i++) {  writeUint64(header,i + 1);  writeUint64(header,i);} @AT@ 15575 @LENGTH@ 127
---UPD VariableDeclarationExpression@@int i=0 @TO@ long i=0 @AT@ 15580 @LENGTH@ 9
------UPD PrimitiveType@@int @TO@ long @AT@ 15580 @LENGTH@ 3


UPD ExpressionStatement@@MethodInvocation:LOG.trace("Added property name: {} value: {}",name,value.toString()) @TO@ MethodInvocation:LOG.trace("Added property name: {} value: {}",name,value) @AT@ 3414 @LENGTH@ 71
---UPD MethodInvocation@@LOG.trace("Added property name: {} value: {}",name,value.toString()) @TO@ LOG.trace("Added property name: {} value: {}",name,value) @AT@ 3414 @LENGTH@ 70
------UPD SimpleName@@MethodName:trace:["Added property name: {} value: {}", name, value.toString()] @TO@ MethodName:trace:["Added property name: {} value: {}", name, value] @AT@ 3418 @LENGTH@ 66
---------DEL MethodInvocation@@value.toString() @AT@ 3467 @LENGTH@ 16
------------DEL SimpleName@@Name:value @AT@ 3467 @LENGTH@ 5
------------DEL SimpleName@@MethodName:toString:[] @AT@ 3473 @LENGTH@ 10
---------INS SimpleName@@value @TO@ SimpleName@@MethodName:trace:["Added property name: {} value: {}", name, value.toString()] @AT@ 3467 @LENGTH@ 5


UPD ReturnStatement@@MethodInvocation:GeoResult.class.equals(from.getComponentType().getType()) @TO@ MethodInvocation:GeoResult.class.equals(from.getComponentType().get().getType()) @AT@ 5112 @LENGTH@ 65
---UPD MethodInvocation@@GeoResult.class.equals(from.getComponentType().getType()) @TO@ GeoResult.class.equals(from.getComponentType().get().getType()) @AT@ 5119 @LENGTH@ 57
------UPD SimpleName@@MethodName:equals:[from.getComponentType().getType()] @TO@ MethodName:equals:[from.getComponentType().get().getType()] @AT@ 5135 @LENGTH@ 41
---------UPD MethodInvocation@@from.getComponentType().getType() @TO@ from.getComponentType().get().getType() @AT@ 5142 @LENGTH@ 33
------------INS MethodInvocation@@MethodName:get:[] @TO@ MethodInvocation@@from.getComponentType().getType() @AT@ 5154 @LENGTH@ 29


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<QuickfixjComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<QuickfixjComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5478 @LENGTH@ 342
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 5482 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5482 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  ComponentCustomizer<QuickfixjComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ ThenBody:{  for (  ComponentCustomizer<QuickfixjComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5538 @LENGTH@ 282
------UPD EnhancedForStatement@@for (ComponentCustomizer<QuickfixjComponent> configurer : customizers) {  LOGGER.debug("Configure component {}, with configurer {}",component,configurer);  configurer.customize(component);} @TO@ for (ComponentCustomizer<QuickfixjComponent> customizer : customizers) {  LOGGER.debug("Configure component {}, with customizer {}",component,customizer);  customizer.customize(component);} @AT@ 5552 @LENGTH@ 258
---------UPD SingleVariableDeclaration@@ComponentCustomizer<QuickfixjComponent> configurer @TO@ ComponentCustomizer<QuickfixjComponent> customizer @AT@ 5557 @LENGTH@ 50
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5597 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5641 @LENGTH@ 106
------------UPD MethodInvocation@@LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5641 @LENGTH@ 105
---------------UPD SimpleName@@MethodName:debug:["Configure component {}, with configurer {}", component, configurer] @TO@ MethodName:debug:["Configure component {}, with customizer {}", component, customizer] @AT@ 5648 @LENGTH@ 98
------------------UPD StringLiteral@@"Configure component {}, with configurer {}" @TO@ "Configure component {}, with customizer {}" @AT@ 5654 @LENGTH@ 44
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5735 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(component) @TO@ MethodInvocation:customizer.customize(component) @AT@ 5764 @LENGTH@ 32
------------UPD MethodInvocation@@configurer.customize(component) @TO@ customizer.customize(component) @AT@ 5764 @LENGTH@ 31
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5764 @LENGTH@ 10


UPD ExpressionStatement@@MethodInvocation:Assert.isTrue(xsdResource.exists(),xsdResource + " does not exit") @TO@ MethodInvocation:Assert.isTrue(xsdResource.exists(),xsdResource + " does not exist") @AT@ 4725 @LENGTH@ 68
---UPD MethodInvocation@@Assert.isTrue(xsdResource.exists(),xsdResource + " does not exit") @TO@ Assert.isTrue(xsdResource.exists(),xsdResource + " does not exist") @AT@ 4725 @LENGTH@ 67
------UPD SimpleName@@MethodName:isTrue:[xsdResource.exists(), xsdResource + " does not exit"] @TO@ MethodName:isTrue:[xsdResource.exists(), xsdResource + " does not exist"] @AT@ 4732 @LENGTH@ 60
---------UPD InfixExpression@@xsdResource + " does not exit" @TO@ xsdResource + " does not exist" @AT@ 4761 @LENGTH@ 30
------------UPD StringLiteral@@" does not exit" @TO@ " does not exist" @AT@ 4775 @LENGTH@ 16


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<HttpComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<HttpComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5416 @LENGTH@ 337
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 5420 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5420 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  ComponentCustomizer<HttpComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ ThenBody:{  for (  ComponentCustomizer<HttpComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5476 @LENGTH@ 277
------UPD EnhancedForStatement@@for (ComponentCustomizer<HttpComponent> configurer : customizers) {  LOGGER.debug("Configure component {}, with configurer {}",component,configurer);  configurer.customize(component);} @TO@ for (ComponentCustomizer<HttpComponent> customizer : customizers) {  LOGGER.debug("Configure component {}, with customizer {}",component,customizer);  customizer.customize(component);} @AT@ 5490 @LENGTH@ 253
---------UPD SingleVariableDeclaration@@ComponentCustomizer<HttpComponent> configurer @TO@ ComponentCustomizer<HttpComponent> customizer @AT@ 5495 @LENGTH@ 45
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5530 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5574 @LENGTH@ 106
------------UPD MethodInvocation@@LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5574 @LENGTH@ 105
---------------UPD SimpleName@@MethodName:debug:["Configure component {}, with configurer {}", component, configurer] @TO@ MethodName:debug:["Configure component {}, with customizer {}", component, customizer] @AT@ 5581 @LENGTH@ 98
------------------UPD StringLiteral@@"Configure component {}, with configurer {}" @TO@ "Configure component {}, with customizer {}" @AT@ 5587 @LENGTH@ 44
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5668 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(component) @TO@ MethodInvocation:customizer.customize(component) @AT@ 5697 @LENGTH@ 32
------------UPD MethodInvocation@@configurer.customize(component) @TO@ customizer.customize(component) @AT@ 5697 @LENGTH@ 31
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5697 @LENGTH@ 10


INS MethodDeclaration@@public, void, MethodName:testListIndexByNestedFunction, Exception,  @TO@ TypeDeclaration@@[public]SimpleTest, LanguageTestSupport @AT@ 72367 @LENGTH@ 541
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testListIndexByNestedFunction, Exception,  @AT@ 72367 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testListIndexByNestedFunction, Exception,  @AT@ 72374 @LENGTH@ 4
---INS SimpleName@@MethodName:testListIndexByNestedFunction @TO@ MethodDeclaration@@public, void, MethodName:testListIndexByNestedFunction, Exception,  @AT@ 72379 @LENGTH@ 29
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:testListIndexByNestedFunction, Exception,  @AT@ 72418 @LENGTH@ 9
---INS VariableDeclarationStatement@@List<String> alist=new ArrayList<>(); @TO@ MethodDeclaration@@public, void, MethodName:testListIndexByNestedFunction, Exception,  @AT@ 72438 @LENGTH@ 39
------INS ParameterizedType@@List<String> @TO@ VariableDeclarationStatement@@List<String> alist=new ArrayList<>(); @AT@ 72438 @LENGTH@ 12
---------INS SimpleType@@List @TO@ ParameterizedType@@List<String> @AT@ 72438 @LENGTH@ 4
---------INS SimpleType@@String @TO@ ParameterizedType@@List<String> @AT@ 72443 @LENGTH@ 6
------INS VariableDeclarationFragment@@alist=new ArrayList<>() @TO@ VariableDeclarationStatement@@List<String> alist=new ArrayList<>(); @AT@ 72451 @LENGTH@ 25
---------INS SimpleName@@alist @TO@ VariableDeclarationFragment@@alist=new ArrayList<>() @AT@ 72451 @LENGTH@ 5
---------INS ClassInstanceCreation@@ArrayList<>[] @TO@ VariableDeclarationFragment@@alist=new ArrayList<>() @AT@ 72459 @LENGTH@ 17
------------INS New@@new @TO@ ClassInstanceCreation@@ArrayList<>[] @AT@ 72459 @LENGTH@ 3
------------INS ParameterizedType@@ArrayList<> @TO@ ClassInstanceCreation@@ArrayList<>[] @AT@ 72463 @LENGTH@ 11
---------------INS SimpleType@@ArrayList @TO@ ParameterizedType@@ArrayList<> @AT@ 72463 @LENGTH@ 9
---INS ExpressionStatement@@MethodInvocation:alist.add("1") @TO@ MethodDeclaration@@public, void, MethodName:testListIndexByNestedFunction, Exception,  @AT@ 72486 @LENGTH@ 15
------INS MethodInvocation@@alist.add("1") @TO@ ExpressionStatement@@MethodInvocation:alist.add("1") @AT@ 72486 @LENGTH@ 14
---------INS SimpleName@@Name:alist @TO@ MethodInvocation@@alist.add("1") @AT@ 72486 @LENGTH@ 5
---------INS SimpleName@@MethodName:add:["1"] @TO@ MethodInvocation@@alist.add("1") @AT@ 72492 @LENGTH@ 8
------------INS StringLiteral@@"1" @TO@ SimpleName@@MethodName:add:["1"] @AT@ 72496 @LENGTH@ 3
---INS ExpressionStatement@@MethodInvocation:alist.add("99") @TO@ MethodDeclaration@@public, void, MethodName:testListIndexByNestedFunction, Exception,  @AT@ 72510 @LENGTH@ 16
------INS MethodInvocation@@alist.add("99") @TO@ ExpressionStatement@@MethodInvocation:alist.add("99") @AT@ 72510 @LENGTH@ 15
---------INS SimpleName@@Name:alist @TO@ MethodInvocation@@alist.add("99") @AT@ 72510 @LENGTH@ 5
---------INS SimpleName@@MethodName:add:["99"] @TO@ MethodInvocation@@alist.add("99") @AT@ 72516 @LENGTH@ 9
------------INS StringLiteral@@"99" @TO@ SimpleName@@MethodName:add:["99"] @AT@ 72520 @LENGTH@ 4
---INS ExpressionStatement@@MethodInvocation:exchange.getIn().setHeader("ITEMS",alist) @TO@ MethodDeclaration@@public, void, MethodName:testListIndexByNestedFunction, Exception,  @AT@ 72535 @LENGTH@ 43
------INS MethodInvocation@@exchange.getIn().setHeader("ITEMS",alist) @TO@ ExpressionStatement@@MethodInvocation:exchange.getIn().setHeader("ITEMS",alist) @AT@ 72535 @LENGTH@ 42
---------INS MethodInvocation@@MethodName:getIn:[] @TO@ MethodInvocation@@exchange.getIn().setHeader("ITEMS",alist) @AT@ 72535 @LENGTH@ 16
---------INS SimpleName@@Name:exchange @TO@ MethodInvocation@@exchange.getIn().setHeader("ITEMS",alist) @AT@ 72535 @LENGTH@ 8
---------INS SimpleName@@MethodName:setHeader:["ITEMS", alist] @TO@ MethodInvocation@@exchange.getIn().setHeader("ITEMS",alist) @AT@ 72552 @LENGTH@ 25
------------INS StringLiteral@@"ITEMS" @TO@ SimpleName@@MethodName:setHeader:["ITEMS", alist] @AT@ 72562 @LENGTH@ 7
------------INS SimpleName@@alist @TO@ SimpleName@@MethodName:setHeader:["ITEMS", alist] @AT@ 72571 @LENGTH@ 5
---INS ExpressionStatement@@MethodInvocation:exchange.getIn().setHeader("TOTAL_LOOPS",alist.size()) @TO@ MethodDeclaration@@public, void, MethodName:testListIndexByNestedFunction, Exception,  @AT@ 72587 @LENGTH@ 56
------INS MethodInvocation@@exchange.getIn().setHeader("TOTAL_LOOPS",alist.size()) @TO@ ExpressionStatement@@MethodInvocation:exchange.getIn().setHeader("TOTAL_LOOPS",alist.size()) @AT@ 72587 @LENGTH@ 55
---------INS MethodInvocation@@MethodName:getIn:[] @TO@ MethodInvocation@@exchange.getIn().setHeader("TOTAL_LOOPS",alist.size()) @AT@ 72587 @LENGTH@ 16
---------INS SimpleName@@Name:exchange @TO@ MethodInvocation@@exchange.getIn().setHeader("TOTAL_LOOPS",alist.size()) @AT@ 72587 @LENGTH@ 8
---------INS SimpleName@@MethodName:setHeader:["TOTAL_LOOPS", alist.size()] @TO@ MethodInvocation@@exchange.getIn().setHeader("TOTAL_LOOPS",alist.size()) @AT@ 72604 @LENGTH@ 38
------------INS StringLiteral@@"TOTAL_LOOPS" @TO@ SimpleName@@MethodName:setHeader:["TOTAL_LOOPS", alist.size()] @AT@ 72614 @LENGTH@ 13
------------INS MethodInvocation@@alist.size() @TO@ SimpleName@@MethodName:setHeader:["TOTAL_LOOPS", alist.size()] @AT@ 72629 @LENGTH@ 12
---------------INS SimpleName@@Name:alist @TO@ MethodInvocation@@alist.size() @AT@ 72629 @LENGTH@ 5
---------------INS SimpleName@@MethodName:size:[] @TO@ MethodInvocation@@alist.size() @AT@ 72635 @LENGTH@ 6
---INS VariableDeclarationStatement@@String exp="${header.ITEMS[${exchangeProperty.CamelLoopIndex}]}"; @TO@ MethodDeclaration@@public, void, MethodName:testListIndexByNestedFunction, Exception,  @AT@ 72653 @LENGTH@ 67
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String exp="${header.ITEMS[${exchangeProperty.CamelLoopIndex}]}"; @AT@ 72653 @LENGTH@ 6
------INS VariableDeclarationFragment@@exp="${header.ITEMS[${exchangeProperty.CamelLoopIndex}]}" @TO@ VariableDeclarationStatement@@String exp="${header.ITEMS[${exchangeProperty.CamelLoopIndex}]}"; @AT@ 72660 @LENGTH@ 59
---------INS SimpleName@@exp @TO@ VariableDeclarationFragment@@exp="${header.ITEMS[${exchangeProperty.CamelLoopIndex}]}" @AT@ 72660 @LENGTH@ 3
---------INS StringLiteral@@"${header.ITEMS[${exchangeProperty.CamelLoopIndex}]}" @TO@ VariableDeclarationFragment@@exp="${header.ITEMS[${exchangeProperty.CamelLoopIndex}]}" @AT@ 72666 @LENGTH@ 53
---INS ExpressionStatement@@MethodInvocation:exchange.setProperty(Exchange.LOOP_INDEX,0) @TO@ MethodDeclaration@@public, void, MethodName:testListIndexByNestedFunction, Exception,  @AT@ 72730 @LENGTH@ 45
------INS MethodInvocation@@exchange.setProperty(Exchange.LOOP_INDEX,0) @TO@ ExpressionStatement@@MethodInvocation:exchange.setProperty(Exchange.LOOP_INDEX,0) @AT@ 72730 @LENGTH@ 44
---------INS SimpleName@@Name:exchange @TO@ MethodInvocation@@exchange.setProperty(Exchange.LOOP_INDEX,0) @AT@ 72730 @LENGTH@ 8
---------INS SimpleName@@MethodName:setProperty:[Exchange.LOOP_INDEX, 0] @TO@ MethodInvocation@@exchange.setProperty(Exchange.LOOP_INDEX,0) @AT@ 72739 @LENGTH@ 35
------------INS QualifiedName@@Exchange.LOOP_INDEX @TO@ SimpleName@@MethodName:setProperty:[Exchange.LOOP_INDEX, 0] @AT@ 72751 @LENGTH@ 19
---------------INS SimpleName@@Exchange @TO@ QualifiedName@@Exchange.LOOP_INDEX @AT@ 72751 @LENGTH@ 8
---------------INS SimpleName@@LOOP_INDEX @TO@ QualifiedName@@Exchange.LOOP_INDEX @AT@ 72760 @LENGTH@ 10
------------INS NumberLiteral@@0 @TO@ SimpleName@@MethodName:setProperty:[Exchange.LOOP_INDEX, 0] @AT@ 72772 @LENGTH@ 1
---INS ExpressionStatement@@MethodInvocation:assertExpression(exp,"1") @TO@ MethodDeclaration@@public, void, MethodName:testListIndexByNestedFunction, Exception,  @AT@ 72784 @LENGTH@ 27
------INS MethodInvocation@@assertExpression(exp,"1") @TO@ ExpressionStatement@@MethodInvocation:assertExpression(exp,"1") @AT@ 72784 @LENGTH@ 26
---------INS SimpleName@@MethodName:assertExpression:[exp, "1"] @TO@ MethodInvocation@@assertExpression(exp,"1") @AT@ 72784 @LENGTH@ 26
------------INS SimpleName@@exp @TO@ SimpleName@@MethodName:assertExpression:[exp, "1"] @AT@ 72801 @LENGTH@ 3
------------INS StringLiteral@@"1" @TO@ SimpleName@@MethodName:assertExpression:[exp, "1"] @AT@ 72806 @LENGTH@ 3
---INS ExpressionStatement@@MethodInvocation:exchange.setProperty(Exchange.LOOP_INDEX,1) @TO@ MethodDeclaration@@public, void, MethodName:testListIndexByNestedFunction, Exception,  @AT@ 72820 @LENGTH@ 45
------INS MethodInvocation@@exchange.setProperty(Exchange.LOOP_INDEX,1) @TO@ ExpressionStatement@@MethodInvocation:exchange.setProperty(Exchange.LOOP_INDEX,1) @AT@ 72820 @LENGTH@ 44
---------INS SimpleName@@Name:exchange @TO@ MethodInvocation@@exchange.setProperty(Exchange.LOOP_INDEX,1) @AT@ 72820 @LENGTH@ 8
---------INS SimpleName@@MethodName:setProperty:[Exchange.LOOP_INDEX, 1] @TO@ MethodInvocation@@exchange.setProperty(Exchange.LOOP_INDEX,1) @AT@ 72829 @LENGTH@ 35
------------INS QualifiedName@@Exchange.LOOP_INDEX @TO@ SimpleName@@MethodName:setProperty:[Exchange.LOOP_INDEX, 1] @AT@ 72841 @LENGTH@ 19
---------------INS SimpleName@@Exchange @TO@ QualifiedName@@Exchange.LOOP_INDEX @AT@ 72841 @LENGTH@ 8
---------------INS SimpleName@@LOOP_INDEX @TO@ QualifiedName@@Exchange.LOOP_INDEX @AT@ 72850 @LENGTH@ 10
------------INS NumberLiteral@@1 @TO@ SimpleName@@MethodName:setProperty:[Exchange.LOOP_INDEX, 1] @AT@ 72862 @LENGTH@ 1
---INS ExpressionStatement@@MethodInvocation:assertExpression(exp,"99") @TO@ MethodDeclaration@@public, void, MethodName:testListIndexByNestedFunction, Exception,  @AT@ 72874 @LENGTH@ 28
------INS MethodInvocation@@assertExpression(exp,"99") @TO@ ExpressionStatement@@MethodInvocation:assertExpression(exp,"99") @AT@ 72874 @LENGTH@ 27
---------INS SimpleName@@MethodName:assertExpression:[exp, "99"] @TO@ MethodInvocation@@assertExpression(exp,"99") @AT@ 72874 @LENGTH@ 27
------------INS SimpleName@@exp @TO@ SimpleName@@MethodName:assertExpression:[exp, "99"] @AT@ 72891 @LENGTH@ 3
------------INS StringLiteral@@"99" @TO@ SimpleName@@MethodName:assertExpression:[exp, "99"] @AT@ 72896 @LENGTH@ 4


UPD FieldDeclaration@@private, static, String[], [PETS=new String[]{"Snoopy","Fido","Tony the Tiger"}] @TO@ private, static, final, String[], [PETS=new String[]{"Snoopy","Fido","Tony the Tiger"}] @AT@ 1158 @LENGTH@ 80
---INS Modifier@@final @TO@ FieldDeclaration@@private, static, String[], [PETS=new String[]{"Snoopy","Fido","Tony the Tiger"}] @AT@ 1170 @LENGTH@ 5


DEL FieldDeclaration@@private, HiveConf, [hiveConf] @AT@ 2435 @LENGTH@ 26
---DEL Modifier@@private @AT@ 2435 @LENGTH@ 7
---DEL SimpleType@@HiveConf @AT@ 2443 @LENGTH@ 8
---DEL VariableDeclarationFragment@@hiveConf @AT@ 2452 @LENGTH@ 8
------DEL SimpleName@@hiveConf @AT@ 2452 @LENGTH@ 8


UPD ExpressionStatement@@MethodInvocation:realSkip(ZipFile.MIN_EOCD_SIZE - WORD - SHORT) @TO@ MethodInvocation:realSkip((long)ZipFile.MIN_EOCD_SIZE - WORD - SHORT) @AT@ 35194 @LENGTH@ 81
---UPD MethodInvocation@@realSkip(ZipFile.MIN_EOCD_SIZE - WORD - SHORT) @TO@ realSkip((long)ZipFile.MIN_EOCD_SIZE - WORD - SHORT) @AT@ 35194 @LENGTH@ 80
------UPD SimpleName@@MethodName:realSkip:[ZipFile.MIN_EOCD_SIZE - WORD - SHORT] @TO@ MethodName:realSkip:[(long)ZipFile.MIN_EOCD_SIZE - WORD - SHORT] @AT@ 35194 @LENGTH@ 80
---------UPD InfixExpression@@ZipFile.MIN_EOCD_SIZE - WORD - SHORT @TO@ (long)ZipFile.MIN_EOCD_SIZE - WORD - SHORT @AT@ 35203 @LENGTH@ 52
------------DEL QualifiedName@@ZipFile.MIN_EOCD_SIZE @AT@ 35203 @LENGTH@ 21
------------INS CastExpression@@(long)ZipFile.MIN_EOCD_SIZE @TO@ InfixExpression@@ZipFile.MIN_EOCD_SIZE - WORD - SHORT @AT@ 35210 @LENGTH@ 28
---------------INS PrimitiveType@@long @TO@ CastExpression@@(long)ZipFile.MIN_EOCD_SIZE @AT@ 35211 @LENGTH@ 4
---------------INS QualifiedName@@ZipFile.MIN_EOCD_SIZE @TO@ CastExpression@@(long)ZipFile.MIN_EOCD_SIZE @AT@ 35217 @LENGTH@ 21
------------------MOV SimpleName@@ZipFile @TO@ QualifiedName@@ZipFile.MIN_EOCD_SIZE @AT@ 35203 @LENGTH@ 7
------------------MOV SimpleName@@ZipFile @TO@ QualifiedName@@ZipFile.MIN_EOCD_SIZE @AT@ 35203 @LENGTH@ 7
------------------MOV SimpleName@@MIN_EOCD_SIZE @TO@ QualifiedName@@ZipFile.MIN_EOCD_SIZE @AT@ 35211 @LENGTH@ 13
------------------MOV SimpleName@@MIN_EOCD_SIZE @TO@ QualifiedName@@ZipFile.MIN_EOCD_SIZE @AT@ 35211 @LENGTH@ 13


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled(); @AT@ 5260 @LENGTH@ 160
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5268 @LENGTH@ 151
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5268 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5285 @LENGTH@ 134
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 5285 @LENGTH@ 64
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5285 @LENGTH@ 35
---------UPD MethodInvocation@@componentConfiguration.getConfigurer().isEnabled() @TO@ componentConfiguration.getCustomizer().isEnabled() @AT@ 5369 @LENGTH@ 50
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5369 @LENGTH@ 38


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<MongoDbComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<MongoDbComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5450 @LENGTH@ 340
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 5454 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5454 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  ComponentCustomizer<MongoDbComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ ThenBody:{  for (  ComponentCustomizer<MongoDbComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5510 @LENGTH@ 280
------UPD EnhancedForStatement@@for (ComponentCustomizer<MongoDbComponent> configurer : customizers) {  LOGGER.debug("Configure component {}, with configurer {}",component,configurer);  configurer.customize(component);} @TO@ for (ComponentCustomizer<MongoDbComponent> customizer : customizers) {  LOGGER.debug("Configure component {}, with customizer {}",component,customizer);  customizer.customize(component);} @AT@ 5524 @LENGTH@ 256
---------UPD SingleVariableDeclaration@@ComponentCustomizer<MongoDbComponent> configurer @TO@ ComponentCustomizer<MongoDbComponent> customizer @AT@ 5529 @LENGTH@ 48
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5567 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5611 @LENGTH@ 106
------------UPD MethodInvocation@@LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5611 @LENGTH@ 105
---------------UPD SimpleName@@MethodName:debug:["Configure component {}, with configurer {}", component, configurer] @TO@ MethodName:debug:["Configure component {}, with customizer {}", component, customizer] @AT@ 5618 @LENGTH@ 98
------------------UPD StringLiteral@@"Configure component {}, with configurer {}" @TO@ "Configure component {}, with customizer {}" @AT@ 5624 @LENGTH@ 44
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5705 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(component) @TO@ MethodInvocation:customizer.customize(component) @AT@ 5734 @LENGTH@ 32
------------UPD MethodInvocation@@configurer.customize(component) @TO@ customizer.customize(component) @AT@ 5734 @LENGTH@ 31
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5734 @LENGTH@ 10


UPD IfStatement@@if (AccessToken.TokenType.BEARER.value().equals(accessTokenResponse.getTokens().getAccessToken().getType().getValue())) {  accessTokenType=AccessToken.TokenType.BEARER;} @TO@ if (AccessToken.TokenType.BEARER.getValue().equalsIgnoreCase(accessTokenResponse.getTokens().getAccessToken().getType().getValue())) {  accessTokenType=AccessToken.TokenType.BEARER;} @AT@ 5936 @LENGTH@ 176
---UPD MethodInvocation@@AccessToken.TokenType.BEARER.value().equals(accessTokenResponse.getTokens().getAccessToken().getType().getValue()) @TO@ AccessToken.TokenType.BEARER.getValue().equalsIgnoreCase(accessTokenResponse.getTokens().getAccessToken().getType().getValue()) @AT@ 5940 @LENGTH@ 114
------UPD MethodInvocation@@MethodName:value:[] @TO@ MethodName:getValue:[] @AT@ 5940 @LENGTH@ 36
------UPD SimpleName@@MethodName:equals:[accessTokenResponse.getTokens().getAccessToken().getType().getValue()] @TO@ MethodName:equalsIgnoreCase:[accessTokenResponse.getTokens().getAccessToken().getType().getValue()] @AT@ 5977 @LENGTH@ 77


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<AtomComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<AtomComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5395 @LENGTH@ 337
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 5399 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5399 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  ComponentCustomizer<AtomComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ ThenBody:{  for (  ComponentCustomizer<AtomComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5455 @LENGTH@ 277
------UPD EnhancedForStatement@@for (ComponentCustomizer<AtomComponent> configurer : customizers) {  LOGGER.debug("Configure component {}, with configurer {}",component,configurer);  configurer.customize(component);} @TO@ for (ComponentCustomizer<AtomComponent> customizer : customizers) {  LOGGER.debug("Configure component {}, with customizer {}",component,customizer);  customizer.customize(component);} @AT@ 5469 @LENGTH@ 253
---------UPD SingleVariableDeclaration@@ComponentCustomizer<AtomComponent> configurer @TO@ ComponentCustomizer<AtomComponent> customizer @AT@ 5474 @LENGTH@ 45
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5509 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5553 @LENGTH@ 106
------------UPD MethodInvocation@@LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5553 @LENGTH@ 105
---------------UPD SimpleName@@MethodName:debug:["Configure component {}, with configurer {}", component, configurer] @TO@ MethodName:debug:["Configure component {}, with customizer {}", component, customizer] @AT@ 5560 @LENGTH@ 98
------------------UPD StringLiteral@@"Configure component {}, with configurer {}" @TO@ "Configure component {}, with customizer {}" @AT@ 5566 @LENGTH@ 44
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5647 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(component) @TO@ MethodInvocation:customizer.customize(component) @AT@ 5676 @LENGTH@ 32
------------UPD MethodInvocation@@configurer.customize(component) @TO@ customizer.customize(component) @AT@ 5676 @LENGTH@ 31
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5676 @LENGTH@ 10


UPD IfStatement@@if (RunningState.NORMAL != runningState && RunningState.ADMIN_ONLY != runningState && !isServer) {  if (getRunningMode() == RunningMode.NORMAL) {    setRunningState(runningState,RunningState.NORMAL);  } else {    setRunningState(runningState,RunningState.ADMIN_ONLY);  }} @TO@ if (RunningState.NORMAL != runningState && RunningState.ADMIN_ONLY != runningState) {  if (!isServer) {    if (getRunningMode() == RunningMode.NORMAL) {      setRunningState(runningState,RunningState.NORMAL);    } else {      setRunningState(runningState,RunningState.ADMIN_ONLY);    }  } else   if (runningState == RunningState.STARTING) {    setRunningState(runningState,RunningState.SUSPENDED);  }} @AT@ 4932 @LENGTH@ 389
---DEL InfixExpression@@RunningState.NORMAL != runningState && RunningState.ADMIN_ONLY != runningState && !isServer @AT@ 4936 @LENGTH@ 91
------DEL Operator@@&& @AT@ 5014 @LENGTH@ 2
------DEL PrefixExpression@@!isServer @AT@ 5018 @LENGTH@ 9
---MOV InfixExpression@@RunningState.NORMAL != runningState && RunningState.ADMIN_ONLY != runningState @TO@ IfStatement@@if (RunningState.NORMAL != runningState && RunningState.ADMIN_ONLY != runningState && !isServer) {  if (getRunningMode() == RunningMode.NORMAL) {    setRunningState(runningState,RunningState.NORMAL);  } else {    setRunningState(runningState,RunningState.ADMIN_ONLY);  }} @AT@ 4936 @LENGTH@ 78
---INS Block@@ThenBody:{  if (!isServer) {    if (getRunningMode() == RunningMode.NORMAL) {      setRunningState(runningState,RunningState.NORMAL);    } else {      setRunningState(runningState,RunningState.ADMIN_ONLY);    }  } else   if (runningState == RunningState.STARTING) {    setRunningState(runningState,RunningState.SUSPENDED);  }} @TO@ IfStatement@@if (RunningState.NORMAL != runningState && RunningState.ADMIN_ONLY != runningState && !isServer) {  if (getRunningMode() == RunningMode.NORMAL) {    setRunningState(runningState,RunningState.NORMAL);  } else {    setRunningState(runningState,RunningState.ADMIN_ONLY);  }} @AT@ 5016 @LENGTH@ 522
------INS IfStatement@@if (!isServer) {  if (getRunningMode() == RunningMode.NORMAL) {    setRunningState(runningState,RunningState.NORMAL);  } else {    setRunningState(runningState,RunningState.ADMIN_ONLY);  }} else if (runningState == RunningState.STARTING) {  setRunningState(runningState,RunningState.SUSPENDED);} @TO@ Block@@ThenBody:{  if (!isServer) {    if (getRunningMode() == RunningMode.NORMAL) {      setRunningState(runningState,RunningState.NORMAL);    } else {      setRunningState(runningState,RunningState.ADMIN_ONLY);    }  } else   if (runningState == RunningState.STARTING) {    setRunningState(runningState,RunningState.SUSPENDED);  }} @AT@ 5038 @LENGTH@ 482
---------MOV Block@@ThenBody:{  if (getRunningMode() == RunningMode.NORMAL) {    setRunningState(runningState,RunningState.NORMAL);  } else {    setRunningState(runningState,RunningState.ADMIN_ONLY);  }} @TO@ IfStatement@@if (!isServer) {  if (getRunningMode() == RunningMode.NORMAL) {    setRunningState(runningState,RunningState.NORMAL);  } else {    setRunningState(runningState,RunningState.ADMIN_ONLY);  }} else if (runningState == RunningState.STARTING) {  setRunningState(runningState,RunningState.SUSPENDED);} @AT@ 5029 @LENGTH@ 292
---------INS PrefixExpression@@!isServer @TO@ IfStatement@@if (!isServer) {  if (getRunningMode() == RunningMode.NORMAL) {    setRunningState(runningState,RunningState.NORMAL);  } else {    setRunningState(runningState,RunningState.ADMIN_ONLY);  }} else if (runningState == RunningState.STARTING) {  setRunningState(runningState,RunningState.SUSPENDED);} @AT@ 5042 @LENGTH@ 9
------------MOV Operator@@! @TO@ PrefixExpression@@!isServer @AT@ 5018 @LENGTH@ 1
------------MOV SimpleName@@isServer @TO@ PrefixExpression@@!isServer @AT@ 5019 @LENGTH@ 8
---------INS Block@@ElseBody:if (runningState == RunningState.STARTING) {  setRunningState(runningState,RunningState.SUSPENDED);} @TO@ IfStatement@@if (!isServer) {  if (getRunningMode() == RunningMode.NORMAL) {    setRunningState(runningState,RunningState.NORMAL);  } else {    setRunningState(runningState,RunningState.ADMIN_ONLY);  }} else if (runningState == RunningState.STARTING) {  setRunningState(runningState,RunningState.SUSPENDED);} @AT@ 5375 @LENGTH@ 145
------------INS IfStatement@@if (runningState == RunningState.STARTING) {  setRunningState(runningState,RunningState.SUSPENDED);} @TO@ Block@@ElseBody:if (runningState == RunningState.STARTING) {  setRunningState(runningState,RunningState.SUSPENDED);} @AT@ 5375 @LENGTH@ 145
---------------INS InfixExpression@@runningState == RunningState.STARTING @TO@ IfStatement@@if (runningState == RunningState.STARTING) {  setRunningState(runningState,RunningState.SUSPENDED);} @AT@ 5379 @LENGTH@ 37
------------------INS SimpleName@@runningState @TO@ InfixExpression@@runningState == RunningState.STARTING @AT@ 5379 @LENGTH@ 12
------------------INS Operator@@== @TO@ InfixExpression@@runningState == RunningState.STARTING @AT@ 5391 @LENGTH@ 2
------------------INS QualifiedName@@RunningState.STARTING @TO@ InfixExpression@@runningState == RunningState.STARTING @AT@ 5395 @LENGTH@ 21
---------------------INS SimpleName@@RunningState @TO@ QualifiedName@@RunningState.STARTING @AT@ 5395 @LENGTH@ 12
---------------------INS SimpleName@@STARTING @TO@ QualifiedName@@RunningState.STARTING @AT@ 5408 @LENGTH@ 8
---------------INS Block@@ThenBody:{  setRunningState(runningState,RunningState.SUSPENDED);} @TO@ IfStatement@@if (runningState == RunningState.STARTING) {  setRunningState(runningState,RunningState.SUSPENDED);} @AT@ 5418 @LENGTH@ 102
------------------INS ExpressionStatement@@MethodInvocation:setRunningState(runningState,RunningState.SUSPENDED) @TO@ Block@@ThenBody:{  setRunningState(runningState,RunningState.SUSPENDED);} @AT@ 5444 @LENGTH@ 54
---------------------INS MethodInvocation@@setRunningState(runningState,RunningState.SUSPENDED) @TO@ ExpressionStatement@@MethodInvocation:setRunningState(runningState,RunningState.SUSPENDED) @AT@ 5444 @LENGTH@ 53
------------------------INS SimpleName@@MethodName:setRunningState:[runningState, RunningState.SUSPENDED] @TO@ MethodInvocation@@setRunningState(runningState,RunningState.SUSPENDED) @AT@ 5444 @LENGTH@ 53
---------------------------INS SimpleName@@runningState @TO@ SimpleName@@MethodName:setRunningState:[runningState, RunningState.SUSPENDED] @AT@ 5460 @LENGTH@ 12
---------------------------INS QualifiedName@@RunningState.SUSPENDED @TO@ SimpleName@@MethodName:setRunningState:[runningState, RunningState.SUSPENDED] @AT@ 5474 @LENGTH@ 22
------------------------------INS SimpleName@@RunningState @TO@ QualifiedName@@RunningState.SUSPENDED @AT@ 5474 @LENGTH@ 12
------------------------------INS SimpleName@@SUSPENDED @TO@ QualifiedName@@RunningState.SUSPENDED @AT@ 5487 @LENGTH@ 9
------------------------INS SimpleName@@MethodName:setRunningState:[runningState, RunningState.SUSPENDED] @TO@ MethodInvocation@@setRunningState(runningState,RunningState.SUSPENDED) @AT@ 5444 @LENGTH@ 53
---------------------------INS SimpleName@@runningState @TO@ SimpleName@@MethodName:setRunningState:[runningState, RunningState.SUSPENDED] @AT@ 5460 @LENGTH@ 12
---------------------------INS QualifiedName@@RunningState.SUSPENDED @TO@ SimpleName@@MethodName:setRunningState:[runningState, RunningState.SUSPENDED] @AT@ 5474 @LENGTH@ 22
------------------------------INS SimpleName@@RunningState @TO@ QualifiedName@@RunningState.SUSPENDED @AT@ 5474 @LENGTH@ 12
------------------------------INS SimpleName@@SUSPENDED @TO@ QualifiedName@@RunningState.SUSPENDED @AT@ 5487 @LENGTH@ 9


UPD VariableDeclarationStatement@@boolean valid=(value instanceof String) || (value instanceof byte[]) || (value instanceof Boolean)|| (value instanceof LongString)|| (value instanceof Integer)|| (value instanceof Long)|| (value instanceof Float)|| (value instanceof Double)|| (value instanceof BigDecimal)|| (value instanceof Short)|| (value instanceof Byte)|| (value instanceof Date)|| (value instanceof List)|| (value instanceof Map); @TO@ boolean valid=(value instanceof String) || (value instanceof byte[]) || (value instanceof Boolean)|| (value instanceof LongString)|| (value instanceof Integer)|| (value instanceof Long)|| (value instanceof Float)|| (value instanceof Double)|| (value instanceof BigDecimal)|| (value instanceof Short)|| (value instanceof Byte)|| (value instanceof Date)|| (value instanceof List)|| (value instanceof Map)|| (value instanceof Object[]); @AT@ 6443 @LENGTH@ 432
---UPD VariableDeclarationFragment@@valid=(value instanceof String) || (value instanceof byte[]) || (value instanceof Boolean)|| (value instanceof LongString)|| (value instanceof Integer)|| (value instanceof Long)|| (value instanceof Float)|| (value instanceof Double)|| (value instanceof BigDecimal)|| (value instanceof Short)|| (value instanceof Byte)|| (value instanceof Date)|| (value instanceof List)|| (value instanceof Map) @TO@ valid=(value instanceof String) || (value instanceof byte[]) || (value instanceof Boolean)|| (value instanceof LongString)|| (value instanceof Integer)|| (value instanceof Long)|| (value instanceof Float)|| (value instanceof Double)|| (value instanceof BigDecimal)|| (value instanceof Short)|| (value instanceof Byte)|| (value instanceof Date)|| (value instanceof List)|| (value instanceof Map)|| (value instanceof Object[]) @AT@ 6451 @LENGTH@ 423
------UPD InfixExpression@@(value instanceof String) || (value instanceof byte[]) || (value instanceof Boolean)|| (value instanceof LongString)|| (value instanceof Integer)|| (value instanceof Long)|| (value instanceof Float)|| (value instanceof Double)|| (value instanceof BigDecimal)|| (value instanceof Short)|| (value instanceof Byte)|| (value instanceof Date)|| (value instanceof List)|| (value instanceof Map) @TO@ (value instanceof String) || (value instanceof byte[]) || (value instanceof Boolean)|| (value instanceof LongString)|| (value instanceof Integer)|| (value instanceof Long)|| (value instanceof Float)|| (value instanceof Double)|| (value instanceof BigDecimal)|| (value instanceof Short)|| (value instanceof Byte)|| (value instanceof Date)|| (value instanceof List)|| (value instanceof Map)|| (value instanceof Object[]) @AT@ 6459 @LENGTH@ 415
---------INS ParenthesizedExpression@@(value instanceof Object[]) @TO@ InfixExpression@@(value instanceof String) || (value instanceof byte[]) || (value instanceof Boolean)|| (value instanceof LongString)|| (value instanceof Integer)|| (value instanceof Long)|| (value instanceof Float)|| (value instanceof Double)|| (value instanceof BigDecimal)|| (value instanceof Short)|| (value instanceof Byte)|| (value instanceof Date)|| (value instanceof List)|| (value instanceof Map) @AT@ 6878 @LENGTH@ 27
------------INS InstanceofExpression@@value instanceof Object[] @TO@ ParenthesizedExpression@@(value instanceof Object[]) @AT@ 6879 @LENGTH@ 25
---------------INS SimpleName@@value @TO@ InstanceofExpression@@value instanceof Object[] @AT@ 6879 @LENGTH@ 5
---------------INS Instanceof@@instanceof @TO@ InstanceofExpression@@value instanceof Object[] @AT@ 6885 @LENGTH@ 10
---------------INS ArrayType@@Object[] @TO@ InstanceofExpression@@value instanceof Object[] @AT@ 6896 @LENGTH@ 8
------------------INS SimpleType@@Object @TO@ ArrayType@@Object[] @AT@ 6896 @LENGTH@ 6


UPD IfStatement@@if (camelContext != null && !Boolean.parseBoolean(camelContext.getGlobalOptions().get(ACCESS_EXTERNAL_DTD))) {  try {    factory.setProperty(XMLConstants.ACCESS_EXTERNAL_DTD,"");  } catch (  SAXException e) {    LOG.error(e.getMessage(),e);    throw new IllegalStateException(e);  }} @TO@ if (camelContext == null || !Boolean.parseBoolean(camelContext.getGlobalOptions().get(ACCESS_EXTERNAL_DTD))) {  try {    factory.setProperty(XMLConstants.ACCESS_EXTERNAL_DTD,"");  } catch (  SAXException e) {    LOG.error(e.getMessage(),e);    throw new IllegalStateException(e);  }} @AT@ 5854 @LENGTH@ 365
---UPD InfixExpression@@camelContext != null && !Boolean.parseBoolean(camelContext.getGlobalOptions().get(ACCESS_EXTERNAL_DTD)) @TO@ camelContext == null || !Boolean.parseBoolean(camelContext.getGlobalOptions().get(ACCESS_EXTERNAL_DTD)) @AT@ 5858 @LENGTH@ 103
------UPD InfixExpression@@camelContext != null @TO@ camelContext == null @AT@ 5858 @LENGTH@ 20
---------UPD Operator@@!= @TO@ == @AT@ 5870 @LENGTH@ 2
------UPD Operator@@&& @TO@ || @AT@ 5878 @LENGTH@ 2


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled(); @AT@ 5243 @LENGTH@ 160
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5251 @LENGTH@ 151
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5251 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5268 @LENGTH@ 134
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 5268 @LENGTH@ 64
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5268 @LENGTH@ 35
---------UPD MethodInvocation@@componentConfiguration.getConfigurer().isEnabled() @TO@ componentConfiguration.getCustomizer().isEnabled() @AT@ 5352 @LENGTH@ 50
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5352 @LENGTH@ 38


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled(); @AT@ 5415 @LENGTH@ 160
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5423 @LENGTH@ 151
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5423 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5440 @LENGTH@ 134
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 5440 @LENGTH@ 64
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5440 @LENGTH@ 35
---------UPD MethodInvocation@@componentConfiguration.getConfigurer().isEnabled() @TO@ componentConfiguration.getCustomizer().isEnabled() @AT@ 5524 @LENGTH@ 50
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5524 @LENGTH@ 38


UPD Block@@ElseBody:{  String sparkHome=Strings.emptyToNull(conf.get(SPARK_HOME_KEY));  if (sparkHome == null) {    sparkHome=Strings.emptyToNull(System.getenv(SPARK_HOME_ENV));  }  if (sparkHome == null) {    sparkHome=Strings.emptyToNull(System.getProperty(SPARK_HOME_KEY));  }  String sparkLogDir=conf.get("hive.spark.log.dir");  if (sparkLogDir == null) {    if (sparkHome == null) {      sparkLogDir="./target/";    } else {      sparkLogDir=sparkHome + "/logs/";    }  }  String osxTestOpts="";  if (Strings.nullToEmpty(System.getProperty("os.name")).toLowerCase().contains("mac")) {    osxTestOpts=Strings.nullToEmpty(System.getenv(OSX_TEST_OPTS));  }  String driverJavaOpts=Joiner.on(" ").skipNulls().join("-Dhive.spark.log.dir=" + sparkLogDir,osxTestOpts,conf.get(DRIVER_OPTS_KEY));  String executorJavaOpts=Joiner.on(" ").skipNulls().join("-Dhive.spark.log.dir=" + sparkLogDir,osxTestOpts,conf.get(EXECUTOR_OPTS_KEY));  File properties=File.createTempFile("spark-submit.",".properties");  if (!properties.setReadable(false) || !properties.setReadable(true,true)) {    throw new IOException("Cannot change permissions of job properties file.");  }  properties.deleteOnExit();  Properties allProps=new Properties();  try {    URL sparkDefaultsUrl=Thread.currentThread().getContextClassLoader().getResource("spark-defaults.conf");    if (sparkDefaultsUrl != null) {      LOG.info("Loading spark defaults: " + sparkDefaultsUrl);      allProps.load(new ByteArrayInputStream(Resources.toByteArray(sparkDefaultsUrl)));    }  } catch (  Exception e) {    String msg="Exception trying to load spark-defaults.conf: " + e;    throw new IOException(msg,e);  }  for (  Map.Entry<String,String> e : conf.entrySet()) {    allProps.put(e.getKey(),conf.get(e.getKey()));  }  allProps.put(SparkClientFactory.CONF_CLIENT_ID,clientId);  allProps.put(SparkClientFactory.CONF_KEY_SECRET,secret);  allProps.put(DRIVER_OPTS_KEY,driverJavaOpts);  allProps.put(EXECUTOR_OPTS_KEY,executorJavaOpts);  String isTesting=conf.get("spark.testing");  if (isTesting != null && isTesting.equalsIgnoreCase("true")) {    String hiveHadoopTestClasspath=Strings.nullToEmpty(System.getenv("HIVE_HADOOP_TEST_CLASSPATH"));    if (!hiveHadoopTestClasspath.isEmpty()) {      String extraDriverClasspath=Strings.nullToEmpty((String)allProps.get(DRIVER_EXTRA_CLASSPATH));      if (extraDriverClasspath.isEmpty()) {        allProps.put(DRIVER_EXTRA_CLASSPATH,hiveHadoopTestClasspath);      } else {        extraDriverClasspath=extraDriverClasspath.endsWith(File.pathSeparator) ? extraDriverClasspath : extraDriverClasspath + File.pathSeparator;        allProps.put(DRIVER_EXTRA_CLASSPATH,extraDriverClasspath + hiveHadoopTestClasspath);      }      String extraExecutorClasspath=Strings.nullToEmpty((String)allProps.get(EXECUTOR_EXTRA_CLASSPATH));      if (extraExecutorClasspath.isEmpty()) {        allProps.put(EXECUTOR_EXTRA_CLASSPATH,hiveHadoopTestClasspath);      } else {        extraExecutorClasspath=extraExecutorClasspath.endsWith(File.pathSeparator) ? extraExecutorClasspath : extraExecutorClasspath + File.pathSeparator;        allProps.put(EXECUTOR_EXTRA_CLASSPATH,extraExecutorClasspath + hiveHadoopTestClasspath);      }    }  }  Writer writer=new OutputStreamWriter(new FileOutputStream(properties),Charsets.UTF_8);  try {    allProps.store(writer,"Spark Context configuration");  }  finally {    writer.close();  }  String master=conf.get("spark.master");  Preconditions.checkArgument(master != null,"spark.master is not defined.");  String deployMode=conf.get("spark.submit.deployMode");  List<String> argv=Lists.newLinkedList();  if (sparkHome != null) {    argv.add(new File(sparkHome,"bin/spark-submit").getAbsolutePath());  } else {    LOG.info("No spark.home provided, calling SparkSubmit directly.");    argv.add(new File(System.getProperty("java.home"),"bin/java").getAbsolutePath());    if (master.startsWith("local") || master.startsWith("mesos") || SparkClientUtilities.isYarnClientMode(master,deployMode)|| master.startsWith("spark")) {      String mem=conf.get("spark.driver.memory");      if (mem != null) {        argv.add("-Xms" + mem);        argv.add("-Xmx" + mem);      }      String cp=conf.get("spark.driver.extraClassPath");      if (cp != null) {        argv.add("-classpath");        argv.add(cp);      }      String libPath=conf.get("spark.driver.extraLibPath");      if (libPath != null) {        argv.add("-Djava.library.path=" + libPath);      }      String extra=conf.get(DRIVER_OPTS_KEY);      if (extra != null) {        for (        String opt : extra.split("[ ]")) {          if (!opt.trim().isEmpty()) {            argv.add(opt.trim());          }        }      }    }    argv.add("org.apache.spark.deploy.SparkSubmit");  }  if (SparkClientUtilities.isYarnClusterMode(master,deployMode)) {    String executorCores=conf.get("spark.executor.cores");    if (executorCores != null) {      argv.add("--executor-cores");      argv.add(executorCores);    }    String executorMemory=conf.get("spark.executor.memory");    if (executorMemory != null) {      argv.add("--executor-memory");      argv.add(executorMemory);    }    String numOfExecutors=conf.get("spark.executor.instances");    if (numOfExecutors != null) {      argv.add("--num-executors");      argv.add(numOfExecutors);    }  }  if ("kerberos".equals(hiveConf.get(HADOOP_SECURITY_AUTHENTICATION))) {    String principal=SecurityUtil.getServerPrincipal(hiveConf.getVar(ConfVars.HIVE_SERVER2_KERBEROS_PRINCIPAL),"0.0.0.0");    String keyTabFile=hiveConf.getVar(ConfVars.HIVE_SERVER2_KERBEROS_KEYTAB);    if (hiveConf.getBoolVar(HiveConf.ConfVars.HIVE_SERVER2_ENABLE_DOAS)) {      List<String> kinitArgv=Lists.newLinkedList();      kinitArgv.add("kinit");      kinitArgv.add(principal);      kinitArgv.add("-k");      kinitArgv.add("-t");      kinitArgv.add(keyTabFile + ";");      kinitArgv.addAll(argv);      argv=kinitArgv;    } else {      argv.add("--principal");      argv.add(principal);      argv.add("--keytab");      argv.add(keyTabFile);    }  }  if (hiveConf.getBoolVar(HiveConf.ConfVars.HIVE_SERVER2_ENABLE_DOAS)) {    try {      String currentUser=Utils.getUGI().getShortUserName();      if (!currentUser.equals(System.getProperty("user.name"))) {        LOG.info("Attempting impersonation of " + currentUser);        argv.add("--proxy-user");        argv.add(currentUser);      }    } catch (    Exception e) {      String msg="Cannot obtain username: " + e;      throw new IllegalStateException(msg,e);    }  }  argv.add("--properties-file");  argv.add(properties.getAbsolutePath());  argv.add("--class");  argv.add(RemoteDriver.class.getName());  String jar="spark-internal";  if (SparkContext.jarOfClass(this.getClass()).isDefined()) {    jar=SparkContext.jarOfClass(this.getClass()).get();  }  argv.add(jar);  argv.add("--remote-host");  argv.add(serverAddress);  argv.add("--remote-port");  argv.add(serverPort);  for (  String hiveSparkConfKey : RpcConfiguration.HIVE_SPARK_RSC_CONFIGS) {    String value=RpcConfiguration.getValue(hiveConf,hiveSparkConfKey);    argv.add("--conf");    argv.add(String.format("%s=%s",hiveSparkConfKey,value));  }  String cmd=Joiner.on(" ").join(argv);  LOG.info("Running client driver with argv: {}",cmd);  ProcessBuilder pb=new ProcessBuilder("sh","-c",cmd);  pb.environment().remove("HIVE_HOME");  pb.environment().remove("HIVE_CONF_DIR");  String password=getSparkJobCredentialProviderPassword();  if (password != null) {    pb.environment().put(Constants.HADOOP_CREDENTIAL_PASSWORD_ENVVAR,password);  }  if (isTesting != null) {    pb.environment().put("SPARK_TESTING",isTesting);  }  final Process child=pb.start();  int childId=childIdGenerator.incrementAndGet();  final List<String> childErrorLog=new ArrayList<String>();  redirect("stdout-redir-" + childId,new Redirector(child.getInputStream()));  redirect("stderr-redir-" + childId,new Redirector(child.getErrorStream(),childErrorLog));  runnable=new Runnable(){    @Override public void run(){      try {        int exitCode=child.waitFor();        if (exitCode != 0) {          StringBuilder errStr=new StringBuilder();          for (          String s : childErrorLog) {            errStr.append(s);            errStr.append('\n');          }          rpcServer.cancelClient(clientId,"Child process exited before connecting back with error log " + errStr.toString());          LOG.warn("Child process exited with code {}",exitCode);        }      } catch (      InterruptedException ie) {        LOG.warn("Waiting thread interrupted, killing child process.");        Thread.interrupted();        child.destroy();      }catch (      Exception e) {        LOG.warn("Exception while waiting for child process.",e);      }    }  };} @TO@ ElseBody:{  String sparkHome=Strings.emptyToNull(conf.get(SPARK_HOME_KEY));  if (sparkHome == null) {    sparkHome=Strings.emptyToNull(System.getenv(SPARK_HOME_ENV));  }  if (sparkHome == null) {    sparkHome=Strings.emptyToNull(System.getProperty(SPARK_HOME_KEY));  }  String sparkLogDir=conf.get("hive.spark.log.dir");  if (sparkLogDir == null) {    if (sparkHome == null) {      sparkLogDir="./target/";    } else {      sparkLogDir=sparkHome + "/logs/";    }  }  String osxTestOpts="";  if (Strings.nullToEmpty(System.getProperty("os.name")).toLowerCase().contains("mac")) {    osxTestOpts=Strings.nullToEmpty(System.getenv(OSX_TEST_OPTS));  }  String driverJavaOpts=Joiner.on(" ").skipNulls().join("-Dhive.spark.log.dir=" + sparkLogDir,osxTestOpts,conf.get(DRIVER_OPTS_KEY));  String executorJavaOpts=Joiner.on(" ").skipNulls().join("-Dhive.spark.log.dir=" + sparkLogDir,osxTestOpts,conf.get(EXECUTOR_OPTS_KEY));  File properties=File.createTempFile("spark-submit.",".properties");  if (!properties.setReadable(false) || !properties.setReadable(true,true)) {    throw new IOException("Cannot change permissions of job properties file.");  }  properties.deleteOnExit();  Properties allProps=new Properties();  try {    URL sparkDefaultsUrl=Thread.currentThread().getContextClassLoader().getResource("spark-defaults.conf");    if (sparkDefaultsUrl != null) {      LOG.info("Loading spark defaults: " + sparkDefaultsUrl);      allProps.load(new ByteArrayInputStream(Resources.toByteArray(sparkDefaultsUrl)));    }  } catch (  Exception e) {    String msg="Exception trying to load spark-defaults.conf: " + e;    throw new IOException(msg,e);  }  for (  Map.Entry<String,String> e : conf.entrySet()) {    allProps.put(e.getKey(),conf.get(e.getKey()));  }  allProps.put(SparkClientFactory.CONF_CLIENT_ID,clientId);  allProps.put(SparkClientFactory.CONF_KEY_SECRET,secret);  allProps.put(DRIVER_OPTS_KEY,driverJavaOpts);  allProps.put(EXECUTOR_OPTS_KEY,executorJavaOpts);  String isTesting=conf.get("spark.testing");  if (isTesting != null && isTesting.equalsIgnoreCase("true")) {    String hiveHadoopTestClasspath=Strings.nullToEmpty(System.getenv("HIVE_HADOOP_TEST_CLASSPATH"));    if (!hiveHadoopTestClasspath.isEmpty()) {      String extraDriverClasspath=Strings.nullToEmpty((String)allProps.get(DRIVER_EXTRA_CLASSPATH));      if (extraDriverClasspath.isEmpty()) {        allProps.put(DRIVER_EXTRA_CLASSPATH,hiveHadoopTestClasspath);      } else {        extraDriverClasspath=extraDriverClasspath.endsWith(File.pathSeparator) ? extraDriverClasspath : extraDriverClasspath + File.pathSeparator;        allProps.put(DRIVER_EXTRA_CLASSPATH,extraDriverClasspath + hiveHadoopTestClasspath);      }      String extraExecutorClasspath=Strings.nullToEmpty((String)allProps.get(EXECUTOR_EXTRA_CLASSPATH));      if (extraExecutorClasspath.isEmpty()) {        allProps.put(EXECUTOR_EXTRA_CLASSPATH,hiveHadoopTestClasspath);      } else {        extraExecutorClasspath=extraExecutorClasspath.endsWith(File.pathSeparator) ? extraExecutorClasspath : extraExecutorClasspath + File.pathSeparator;        allProps.put(EXECUTOR_EXTRA_CLASSPATH,extraExecutorClasspath + hiveHadoopTestClasspath);      }    }  }  Writer writer=new OutputStreamWriter(new FileOutputStream(properties),Charsets.UTF_8);  try {    allProps.store(writer,"Spark Context configuration");  }  finally {    writer.close();  }  String master=conf.get("spark.master");  Preconditions.checkArgument(master != null,"spark.master is not defined.");  String deployMode=conf.get("spark.submit.deployMode");  List<String> argv=Lists.newLinkedList();  if (sparkHome != null) {    argv.add(new File(sparkHome,"bin/spark-submit").getAbsolutePath());  } else {    LOG.info("No spark.home provided, calling SparkSubmit directly.");    argv.add(new File(System.getProperty("java.home"),"bin/java").getAbsolutePath());    if (master.startsWith("local") || master.startsWith("mesos") || SparkClientUtilities.isYarnClientMode(master,deployMode)|| master.startsWith("spark")) {      String mem=conf.get("spark.driver.memory");      if (mem != null) {        argv.add("-Xms" + mem);        argv.add("-Xmx" + mem);      }      String cp=conf.get("spark.driver.extraClassPath");      if (cp != null) {        argv.add("-classpath");        argv.add(cp);      }      String libPath=conf.get("spark.driver.extraLibPath");      if (libPath != null) {        argv.add("-Djava.library.path=" + libPath);      }      String extra=conf.get(DRIVER_OPTS_KEY);      if (extra != null) {        for (        String opt : extra.split("[ ]")) {          if (!opt.trim().isEmpty()) {            argv.add(opt.trim());          }        }      }    }    argv.add("org.apache.spark.deploy.SparkSubmit");  }  if (SparkClientUtilities.isYarnClusterMode(master,deployMode)) {    String executorCores=conf.get("spark.executor.cores");    if (executorCores != null) {      argv.add("--executor-cores");      argv.add(executorCores);    }    String executorMemory=conf.get("spark.executor.memory");    if (executorMemory != null) {      argv.add("--executor-memory");      argv.add(executorMemory);    }    String numOfExecutors=conf.get("spark.executor.instances");    if (numOfExecutors != null) {      argv.add("--num-executors");      argv.add(numOfExecutors);    }  }  if ("kerberos".equals(hiveConf.get(HADOOP_SECURITY_AUTHENTICATION))) {    String principal=SecurityUtil.getServerPrincipal(hiveConf.getVar(ConfVars.HIVE_SERVER2_KERBEROS_PRINCIPAL),"0.0.0.0");    String keyTabFile=hiveConf.getVar(ConfVars.HIVE_SERVER2_KERBEROS_KEYTAB);    if (hiveConf.getBoolVar(HiveConf.ConfVars.HIVE_SERVER2_ENABLE_DOAS)) {      List<String> kinitArgv=Lists.newLinkedList();      kinitArgv.add("kinit");      kinitArgv.add(principal);      kinitArgv.add("-k");      kinitArgv.add("-t");      kinitArgv.add(keyTabFile + ";");      kinitArgv.addAll(argv);      argv=kinitArgv;    } else {      argv.add("--principal");      argv.add(principal);      argv.add("--keytab");      argv.add(keyTabFile);    }  }  if (hiveConf.getBoolVar(HiveConf.ConfVars.HIVE_SERVER2_ENABLE_DOAS)) {    try {      String currentUser=Utils.getUGI().getShortUserName();      if (!currentUser.equals(System.getProperty("user.name"))) {        LOG.info("Attempting impersonation of " + currentUser);        argv.add("--proxy-user");        argv.add(currentUser);      }    } catch (    Exception e) {      String msg="Cannot obtain username: " + e;      throw new IllegalStateException(msg,e);    }  }  argv.add("--properties-file");  argv.add(properties.getAbsolutePath());  argv.add("--class");  argv.add(RemoteDriver.class.getName());  String jar="spark-internal";  if (SparkContext.jarOfClass(this.getClass()).isDefined()) {    jar=SparkContext.jarOfClass(this.getClass()).get();  }  argv.add(jar);  argv.add("--remote-host");  argv.add(serverAddress);  argv.add("--remote-port");  argv.add(serverPort);  for (  String hiveSparkConfKey : RpcConfiguration.HIVE_SPARK_RSC_CONFIGS) {    String value=RpcConfiguration.getValue(hiveConf,hiveSparkConfKey);    argv.add("--conf");    argv.add(String.format("%s=%s",hiveSparkConfKey,value));  }  String cmd=Joiner.on(" ").join(argv);  LOG.info("Running client driver with argv: {}",cmd);  ProcessBuilder pb=new ProcessBuilder("sh","-c",cmd);  pb.environment().remove("HIVE_HOME");  pb.environment().remove("HIVE_CONF_DIR");  String password=getSparkJobCredentialProviderPassword();  if (password != null) {    pb.environment().put(Constants.HADOOP_CREDENTIAL_PASSWORD_ENVVAR,password);  }  if (isTesting != null) {    pb.environment().put("SPARK_TESTING",isTesting);  }  final Process child=pb.start();  int childId=childIdGenerator.incrementAndGet();  final List<String> childErrorLog=Collections.synchronizedList(new ArrayList<String>());  redirect("stdout-redir-" + childId,new Redirector(child.getInputStream()));  redirect("stderr-redir-" + childId,new Redirector(child.getErrorStream(),childErrorLog));  runnable=new Runnable(){    @Override public void run(){      try {        int exitCode=child.waitFor();        if (exitCode != 0) {          StringBuilder errStr=new StringBuilder();synchronized (childErrorLog) {            Iterator iter=childErrorLog.iterator();            while (iter.hasNext()) {              errStr.append(iter.next());              errStr.append('\n');            }          }          rpcServer.cancelClient(clientId,"Child process exited before connecting back with error log " + errStr.toString());          LOG.warn("Child process exited with code {}",exitCode);        }      } catch (      InterruptedException ie) {        LOG.warn("Waiting thread interrupted, killing child process.");        Thread.interrupted();        child.destroy();      }catch (      Exception e) {        LOG.warn("Exception while waiting for child process.",e);      }    }  };} @AT@ 8444 @LENGTH@ 11945
---UPD VariableDeclarationStatement@@final List<String> childErrorLog=new ArrayList<String>(); @TO@ final List<String> childErrorLog=Collections.synchronizedList(new ArrayList<String>()); @AT@ 19221 @LENGTH@ 59
------UPD VariableDeclarationFragment@@childErrorLog=new ArrayList<String>() @TO@ childErrorLog=Collections.synchronizedList(new ArrayList<String>()) @AT@ 19240 @LENGTH@ 39
---------INS MethodInvocation@@Collections.synchronizedList(new ArrayList<String>()) @TO@ VariableDeclarationFragment@@childErrorLog=new ArrayList<String>() @AT@ 19283 @LENGTH@ 53
------------INS SimpleName@@Name:Collections @TO@ MethodInvocation@@Collections.synchronizedList(new ArrayList<String>()) @AT@ 19283 @LENGTH@ 11
------------INS SimpleName@@MethodName:synchronizedList:[new ArrayList<String>()] @TO@ MethodInvocation@@Collections.synchronizedList(new ArrayList<String>()) @AT@ 19295 @LENGTH@ 41
---------------MOV ClassInstanceCreation@@ArrayList<String>[] @TO@ SimpleName@@MethodName:synchronizedList:[new ArrayList<String>()] @AT@ 19256 @LENGTH@ 23
---UPD ExpressionStatement@@Assignment:runnable=new Runnable(){
  @Override public void run(){
    try {
      int exitCode=child.waitFor();
      if (exitCode != 0) {
        StringBuilder errStr=new StringBuilder();
        for (        String s : childErrorLog) {
          errStr.append(s);
          errStr.append('\n');
        }
        rpcServer.cancelClient(clientId,"Child process exited before connecting back with error log " + errStr.toString());
        LOG.warn("Child process exited with code {}",exitCode);
      }
    }
 catch (    InterruptedException ie) {
      LOG.warn("Waiting thread interrupted, killing child process.");
      Thread.interrupted();
      child.destroy();
    }
catch (    Exception e) {
      LOG.warn("Exception while waiting for child process.",e);
    }
  }
}
 @TO@ Assignment:runnable=new Runnable(){
  @Override public void run(){
    try {
      int exitCode=child.waitFor();
      if (exitCode != 0) {
        StringBuilder errStr=new StringBuilder();
synchronized (childErrorLog) {
          Iterator iter=childErrorLog.iterator();
          while (iter.hasNext()) {
            errStr.append(iter.next());
            errStr.append('\n');
          }
        }
        rpcServer.cancelClient(clientId,"Child process exited before connecting back with error log " + errStr.toString());
        LOG.warn("Child process exited with code {}",exitCode);
      }
    }
 catch (    InterruptedException ie) {
      LOG.warn("Waiting thread interrupted, killing child process.");
      Thread.interrupted();
      child.destroy();
    }
catch (    Exception e) {
      LOG.warn("Exception while waiting for child process.",e);
    }
  }
}
 @AT@ 19469 @LENGTH@ 914
------UPD Assignment@@runnable=new Runnable(){
  @Override public void run(){
    try {
      int exitCode=child.waitFor();
      if (exitCode != 0) {
        StringBuilder errStr=new StringBuilder();
        for (        String s : childErrorLog) {
          errStr.append(s);
          errStr.append('\n');
        }
        rpcServer.cancelClient(clientId,"Child process exited before connecting back with error log " + errStr.toString());
        LOG.warn("Child process exited with code {}",exitCode);
      }
    }
 catch (    InterruptedException ie) {
      LOG.warn("Waiting thread interrupted, killing child process.");
      Thread.interrupted();
      child.destroy();
    }
catch (    Exception e) {
      LOG.warn("Exception while waiting for child process.",e);
    }
  }
}
 @TO@ runnable=new Runnable(){
  @Override public void run(){
    try {
      int exitCode=child.waitFor();
      if (exitCode != 0) {
        StringBuilder errStr=new StringBuilder();
synchronized (childErrorLog) {
          Iterator iter=childErrorLog.iterator();
          while (iter.hasNext()) {
            errStr.append(iter.next());
            errStr.append('\n');
          }
        }
        rpcServer.cancelClient(clientId,"Child process exited before connecting back with error log " + errStr.toString());
        LOG.warn("Child process exited with code {}",exitCode);
      }
    }
 catch (    InterruptedException ie) {
      LOG.warn("Waiting thread interrupted, killing child process.");
      Thread.interrupted();
      child.destroy();
    }
catch (    Exception e) {
      LOG.warn("Exception while waiting for child process.",e);
    }
  }
}
 @AT@ 19469 @LENGTH@ 913


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled(); @AT@ 5315 @LENGTH@ 160
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5323 @LENGTH@ 151
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5323 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5340 @LENGTH@ 134
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 5340 @LENGTH@ 64
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5340 @LENGTH@ 35
---------UPD MethodInvocation@@componentConfiguration.getConfigurer().isEnabled() @TO@ componentConfiguration.getCustomizer().isEnabled() @AT@ 5424 @LENGTH@ 50
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5424 @LENGTH@ 38


UPD ReturnStatement@@MethodInvocation:getMasterConfiguration(domainConfigPath,hostConfigPath,testName,baseConfig,readOnlyDomain,readOnlyHost,false) @TO@ MethodInvocation:getMasterConfiguration(domainConfigPath,hostConfigPath,testName,baseConfig,readOnlyDomain,readOnlyHost,Boolean.getBoolean("wildfly.master.debug")) @AT@ 5848 @LENGTH@ 123
---UPD MethodInvocation@@getMasterConfiguration(domainConfigPath,hostConfigPath,testName,baseConfig,readOnlyDomain,readOnlyHost,false) @TO@ getMasterConfiguration(domainConfigPath,hostConfigPath,testName,baseConfig,readOnlyDomain,readOnlyHost,Boolean.getBoolean("wildfly.master.debug")) @AT@ 5855 @LENGTH@ 115
------UPD SimpleName@@MethodName:getMasterConfiguration:[domainConfigPath, hostConfigPath, testName, baseConfig, readOnlyDomain, readOnlyHost, false] @TO@ MethodName:getMasterConfiguration:[domainConfigPath, hostConfigPath, testName, baseConfig, readOnlyDomain, readOnlyHost, Boolean.getBoolean("wildfly.master.debug")] @AT@ 5855 @LENGTH@ 115
---------INS MethodInvocation@@Boolean.getBoolean("wildfly.master.debug") @TO@ SimpleName@@MethodName:getMasterConfiguration:[domainConfigPath, hostConfigPath, testName, baseConfig, readOnlyDomain, readOnlyHost, false] @AT@ 5964 @LENGTH@ 42
------------INS SimpleName@@Name:Boolean @TO@ MethodInvocation@@Boolean.getBoolean("wildfly.master.debug") @AT@ 5964 @LENGTH@ 7
------------INS SimpleName@@MethodName:getBoolean:["wildfly.master.debug"] @TO@ MethodInvocation@@Boolean.getBoolean("wildfly.master.debug") @AT@ 5972 @LENGTH@ 34
---------------INS StringLiteral@@"wildfly.master.debug" @TO@ SimpleName@@MethodName:getBoolean:["wildfly.master.debug"] @AT@ 5983 @LENGTH@ 22
---------DEL BooleanLiteral@@false @AT@ 5964 @LENGTH@ 5


UPD ExpressionStatement@@MethodInvocation:mvc.perform(formLogin()).andExpect(status().isFound()).andExpect(redirectUrl("/")).andExpect(authenticated().withUsername("user")) @TO@ MethodInvocation:mvc.perform(formLogin()).andExpect(status().isFound()).andExpect(redirectedUrl("/")).andExpect(authenticated().withUsername("user")) @AT@ 3073 @LENGTH@ 141
---UPD MethodInvocation@@mvc.perform(formLogin()).andExpect(status().isFound()).andExpect(redirectUrl("/")).andExpect(authenticated().withUsername("user")) @TO@ mvc.perform(formLogin()).andExpect(status().isFound()).andExpect(redirectedUrl("/")).andExpect(authenticated().withUsername("user")) @AT@ 3073 @LENGTH@ 140
------UPD MethodInvocation@@MethodName:andExpect:[redirectUrl("/")] @TO@ MethodName:andExpect:[redirectedUrl("/")] @AT@ 3073 @LENGTH@ 87
---------UPD MethodInvocation@@redirectUrl("/") @TO@ redirectedUrl("/") @AT@ 3143 @LENGTH@ 16
------------UPD SimpleName@@MethodName:redirectUrl:["/"] @TO@ MethodName:redirectedUrl:["/"] @AT@ 3143 @LENGTH@ 16


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<SWFComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<SWFComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5394 @LENGTH@ 336
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 5398 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5398 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  ComponentCustomizer<SWFComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ ThenBody:{  for (  ComponentCustomizer<SWFComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5454 @LENGTH@ 276
------UPD EnhancedForStatement@@for (ComponentCustomizer<SWFComponent> configurer : customizers) {  LOGGER.debug("Configure component {}, with configurer {}",component,configurer);  configurer.customize(component);} @TO@ for (ComponentCustomizer<SWFComponent> customizer : customizers) {  LOGGER.debug("Configure component {}, with customizer {}",component,customizer);  customizer.customize(component);} @AT@ 5468 @LENGTH@ 252
---------UPD SingleVariableDeclaration@@ComponentCustomizer<SWFComponent> configurer @TO@ ComponentCustomizer<SWFComponent> customizer @AT@ 5473 @LENGTH@ 44
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5507 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5551 @LENGTH@ 106
------------UPD MethodInvocation@@LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5551 @LENGTH@ 105
---------------UPD SimpleName@@MethodName:debug:["Configure component {}, with configurer {}", component, configurer] @TO@ MethodName:debug:["Configure component {}, with customizer {}", component, customizer] @AT@ 5558 @LENGTH@ 98
------------------UPD StringLiteral@@"Configure component {}, with configurer {}" @TO@ "Configure component {}, with customizer {}" @AT@ 5564 @LENGTH@ 44
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5645 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(component) @TO@ MethodInvocation:customizer.customize(component) @AT@ 5674 @LENGTH@ 32
------------UPD MethodInvocation@@configurer.customize(component) @TO@ customizer.customize(component) @AT@ 5674 @LENGTH@ 31
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5674 @LENGTH@ 10


UPD ReturnStatement@@MethodInvocation:multiHashOrdered(parentHashCode(),13597,port) @TO@ MethodInvocation:multiHashUnordered(parentHashCode(),13597,port) @AT@ 1545 @LENGTH@ 55
---UPD MethodInvocation@@multiHashOrdered(parentHashCode(),13597,port) @TO@ multiHashUnordered(parentHashCode(),13597,port) @AT@ 1552 @LENGTH@ 47
------UPD SimpleName@@MethodName:multiHashOrdered:[parentHashCode(), 13597, port] @TO@ MethodName:multiHashUnordered:[parentHashCode(), 13597, port] @AT@ 1552 @LENGTH@ 47


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled(); @AT@ 5231 @LENGTH@ 160
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5239 @LENGTH@ 151
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5239 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5256 @LENGTH@ 134
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 5256 @LENGTH@ 64
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5256 @LENGTH@ 35
---------UPD MethodInvocation@@componentConfiguration.getConfigurer().isEnabled() @TO@ componentConfiguration.getCustomizer().isEnabled() @AT@ 5340 @LENGTH@ 50
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5340 @LENGTH@ 38


INS MethodDeclaration@@public, void, MethodName:testLongArgWithEqual, Exception,  @TO@ TypeDeclaration@@[public]CommandLineTest,  @AT@ 3123 @LENGTH@ 358
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testLongArgWithEqual, Exception,  @AT@ 3123 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testLongArgWithEqual, Exception,  @AT@ 3130 @LENGTH@ 4
---INS SimpleName@@MethodName:testLongArgWithEqual @TO@ MethodDeclaration@@public, void, MethodName:testLongArgWithEqual, Exception,  @AT@ 3135 @LENGTH@ 20
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:testLongArgWithEqual, Exception,  @AT@ 3165 @LENGTH@ 9
---INS VariableDeclarationStatement@@String fileName="my.properties"; @TO@ MethodDeclaration@@public, void, MethodName:testLongArgWithEqual, Exception,  @AT@ 3185 @LENGTH@ 34
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String fileName="my.properties"; @AT@ 3185 @LENGTH@ 6
------INS VariableDeclarationFragment@@fileName="my.properties" @TO@ VariableDeclarationStatement@@String fileName="my.properties"; @AT@ 3192 @LENGTH@ 26
---------INS SimpleName@@fileName @TO@ VariableDeclarationFragment@@fileName="my.properties" @AT@ 3192 @LENGTH@ 8
---------INS StringLiteral@@"my.properties" @TO@ VariableDeclarationFragment@@fileName="my.properties" @AT@ 3203 @LENGTH@ 15
---INS VariableDeclarationStatement@@String expectedPath=new File(System.getProperty("user.dir"),fileName).toURL().toString(); @TO@ MethodDeclaration@@public, void, MethodName:testLongArgWithEqual, Exception,  @AT@ 3228 @LENGTH@ 92
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String expectedPath=new File(System.getProperty("user.dir"),fileName).toURL().toString(); @AT@ 3228 @LENGTH@ 6
------INS VariableDeclarationFragment@@expectedPath=new File(System.getProperty("user.dir"),fileName).toURL().toString() @TO@ VariableDeclarationStatement@@String expectedPath=new File(System.getProperty("user.dir"),fileName).toURL().toString(); @AT@ 3235 @LENGTH@ 84
---------INS SimpleName@@expectedPath @TO@ VariableDeclarationFragment@@expectedPath=new File(System.getProperty("user.dir"),fileName).toURL().toString() @AT@ 3235 @LENGTH@ 12
---------INS MethodInvocation@@new File(System.getProperty("user.dir"),fileName).toURL().toString() @TO@ VariableDeclarationFragment@@expectedPath=new File(System.getProperty("user.dir"),fileName).toURL().toString() @AT@ 3250 @LENGTH@ 69
------------INS MethodInvocation@@MethodName:toURL:[] @TO@ MethodInvocation@@new File(System.getProperty("user.dir"),fileName).toURL().toString() @AT@ 3250 @LENGTH@ 58
------------INS ClassInstanceCreation@@File[System.getProperty("user.dir"), fileName] @TO@ MethodInvocation@@new File(System.getProperty("user.dir"),fileName).toURL().toString() @AT@ 3250 @LENGTH@ 50
---------------INS New@@new @TO@ ClassInstanceCreation@@File[System.getProperty("user.dir"), fileName] @AT@ 3250 @LENGTH@ 3
---------------INS SimpleType@@File @TO@ ClassInstanceCreation@@File[System.getProperty("user.dir"), fileName] @AT@ 3254 @LENGTH@ 4
---------------INS MethodInvocation@@System.getProperty("user.dir") @TO@ ClassInstanceCreation@@File[System.getProperty("user.dir"), fileName] @AT@ 3259 @LENGTH@ 30
------------------INS SimpleName@@Name:System @TO@ MethodInvocation@@System.getProperty("user.dir") @AT@ 3259 @LENGTH@ 6
------------------INS SimpleName@@MethodName:getProperty:["user.dir"] @TO@ MethodInvocation@@System.getProperty("user.dir") @AT@ 3266 @LENGTH@ 23
---------------------INS StringLiteral@@"user.dir" @TO@ SimpleName@@MethodName:getProperty:["user.dir"] @AT@ 3278 @LENGTH@ 10
---------------INS SimpleName@@fileName @TO@ ClassInstanceCreation@@File[System.getProperty("user.dir"), fileName] @AT@ 3291 @LENGTH@ 8
------------INS SimpleName@@MethodName:toString:[] @TO@ MethodInvocation@@new File(System.getProperty("user.dir"),fileName).toURL().toString() @AT@ 3309 @LENGTH@ 10
---INS VariableDeclarationStatement@@CommandLine cmd=CommandLine.parse("--properties=" + fileName); @TO@ MethodDeclaration@@public, void, MethodName:testLongArgWithEqual, Exception,  @AT@ 3330 @LENGTH@ 64
------INS SimpleType@@CommandLine @TO@ VariableDeclarationStatement@@CommandLine cmd=CommandLine.parse("--properties=" + fileName); @AT@ 3330 @LENGTH@ 11
------INS VariableDeclarationFragment@@cmd=CommandLine.parse("--properties=" + fileName) @TO@ VariableDeclarationStatement@@CommandLine cmd=CommandLine.parse("--properties=" + fileName); @AT@ 3342 @LENGTH@ 51
---------INS SimpleName@@cmd @TO@ VariableDeclarationFragment@@cmd=CommandLine.parse("--properties=" + fileName) @AT@ 3342 @LENGTH@ 3
---------INS MethodInvocation@@CommandLine.parse("--properties=" + fileName) @TO@ VariableDeclarationFragment@@cmd=CommandLine.parse("--properties=" + fileName) @AT@ 3348 @LENGTH@ 45
------------INS SimpleName@@Name:CommandLine @TO@ MethodInvocation@@CommandLine.parse("--properties=" + fileName) @AT@ 3348 @LENGTH@ 11
------------INS SimpleName@@MethodName:parse:["--properties=" + fileName] @TO@ MethodInvocation@@CommandLine.parse("--properties=" + fileName) @AT@ 3360 @LENGTH@ 33
---------------INS InfixExpression@@"--properties=" + fileName @TO@ SimpleName@@MethodName:parse:["--properties=" + fileName] @AT@ 3366 @LENGTH@ 26
------------------INS StringLiteral@@"--properties=" @TO@ InfixExpression@@"--properties=" + fileName @AT@ 3366 @LENGTH@ 15
------------------INS Operator@@+ @TO@ InfixExpression@@"--properties=" + fileName @AT@ 3381 @LENGTH@ 1
------------------INS SimpleName@@fileName @TO@ InfixExpression@@"--properties=" + fileName @AT@ 3384 @LENGTH@ 8
---INS ExpressionStatement@@MethodInvocation:assertThat(cmd.get(PROPERTIES_URL).toString()).isEqualTo(expectedPath) @TO@ MethodDeclaration@@public, void, MethodName:testLongArgWithEqual, Exception,  @AT@ 3404 @LENGTH@ 71
------INS MethodInvocation@@assertThat(cmd.get(PROPERTIES_URL).toString()).isEqualTo(expectedPath) @TO@ ExpressionStatement@@MethodInvocation:assertThat(cmd.get(PROPERTIES_URL).toString()).isEqualTo(expectedPath) @AT@ 3404 @LENGTH@ 70
---------INS MethodInvocation@@MethodName:assertThat:[cmd.get(PROPERTIES_URL).toString()] @TO@ MethodInvocation@@assertThat(cmd.get(PROPERTIES_URL).toString()).isEqualTo(expectedPath) @AT@ 3404 @LENGTH@ 46
------------INS MethodInvocation@@cmd.get(PROPERTIES_URL).toString() @TO@ MethodInvocation@@MethodName:assertThat:[cmd.get(PROPERTIES_URL).toString()] @AT@ 3415 @LENGTH@ 34
---------------INS MethodInvocation@@MethodName:get:[PROPERTIES_URL] @TO@ MethodInvocation@@cmd.get(PROPERTIES_URL).toString() @AT@ 3415 @LENGTH@ 23
------------------INS SimpleName@@PROPERTIES_URL @TO@ MethodInvocation@@MethodName:get:[PROPERTIES_URL] @AT@ 3423 @LENGTH@ 14
---------------INS SimpleName@@Name:cmd @TO@ MethodInvocation@@cmd.get(PROPERTIES_URL).toString() @AT@ 3415 @LENGTH@ 3
---------------INS SimpleName@@MethodName:toString:[] @TO@ MethodInvocation@@cmd.get(PROPERTIES_URL).toString() @AT@ 3439 @LENGTH@ 10
---------INS SimpleName@@MethodName:isEqualTo:[expectedPath] @TO@ MethodInvocation@@assertThat(cmd.get(PROPERTIES_URL).toString()).isEqualTo(expectedPath) @AT@ 3451 @LENGTH@ 23
------------INS SimpleName@@expectedPath @TO@ SimpleName@@MethodName:isEqualTo:[expectedPath] @AT@ 3461 @LENGTH@ 12


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && dataformatConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && dataformatConfiguration.getCustomizer().isEnabled(); @AT@ 5075 @LENGTH@ 177
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && dataformatConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && dataformatConfiguration.getCustomizer().isEnabled() @AT@ 5083 @LENGTH@ 168
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5083 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && dataformatConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && dataformatConfiguration.getCustomizer().isEnabled() @AT@ 5100 @LENGTH@ 151
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 5100 @LENGTH@ 72
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5100 @LENGTH@ 35
---------UPD MethodInvocation@@dataformatConfiguration.getConfigurer().isEnabled() @TO@ dataformatConfiguration.getCustomizer().isEnabled() @AT@ 5200 @LENGTH@ 51
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5200 @LENGTH@ 39


UPD FieldDeclaration@@public, static, ImmutableSet<String>, [VIRTUAL_COLUMN_NAMES=ImmutableSet.of(FILENAME.getName(),BLOCKOFFSET.getName(),ROWOFFSET.getName(),RAWDATASIZE.getName(),GROUPINGID.getName(),ROWID.getName())] @TO@ public, static, final, ImmutableSet<String>, [VIRTUAL_COLUMN_NAMES=ImmutableSet.of(FILENAME.getName(),BLOCKOFFSET.getName(),ROWOFFSET.getName(),RAWDATASIZE.getName(),GROUPINGID.getName(),ROWID.getName())] @AT@ 2757 @LENGTH@ 216
---INS Modifier@@final @TO@ FieldDeclaration@@public, static, ImmutableSet<String>, [VIRTUAL_COLUMN_NAMES=ImmutableSet.of(FILENAME.getName(),BLOCKOFFSET.getName(),ROWOFFSET.getName(),RAWDATASIZE.getName(),GROUPINGID.getName(),ROWID.getName())] @AT@ 2771 @LENGTH@ 5


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && dataformatConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && dataformatConfiguration.getCustomizer().isEnabled(); @AT@ 5138 @LENGTH@ 177
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && dataformatConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && dataformatConfiguration.getCustomizer().isEnabled() @AT@ 5146 @LENGTH@ 168
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5146 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && dataformatConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && dataformatConfiguration.getCustomizer().isEnabled() @AT@ 5163 @LENGTH@ 151
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 5163 @LENGTH@ 72
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5163 @LENGTH@ 35
---------UPD MethodInvocation@@dataformatConfiguration.getConfigurer().isEnabled() @TO@ dataformatConfiguration.getCustomizer().isEnabled() @AT@ 5263 @LENGTH@ 51
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5263 @LENGTH@ 39


UPD TypeDeclaration@@[@Entity, @NamedEntityGraphs({@NamedEntityGraph(name="User.overview",attributeNodes={@NamedAttributeNode("roles")}),@NamedEntityGraph(name="User.detail",attributeNodes={@NamedAttributeNode("roles"),@NamedAttributeNode("manager"),@NamedAttributeNode("colleagues")}),@NamedEntityGraph(name="User.getOneWithDefinedEntityGraphById",attributeNodes={@NamedAttributeNode("roles"),@NamedAttributeNode("manager"),@NamedAttributeNode("colleagues")}),@NamedEntityGraph(name="User.withSubGraph",attributeNodes={@NamedAttributeNode("roles"),@NamedAttributeNode(value="colleagues",subgraph="User.colleagues")},subgraphs={@NamedSubgraph(name="User.colleagues",attributeNodes={@NamedAttributeNode("colleagues"),@NamedAttributeNode("roles")})})}), @NamedQuery(name="User.findByEmailAddress",query="SELECT u FROM User u WHERE u.emailAddress = ?1"), @NamedStoredProcedureQueries({@NamedStoredProcedureQuery(name="User.plus1",procedureName="plus1inout",parameters={@StoredProcedureParameter(mode=ParameterMode.IN,name="arg",type=Integer.class),@StoredProcedureParameter(mode=ParameterMode.OUT,name="res",type=Integer.class)})}), @NamedStoredProcedureQuery(name="User.plus1IO",procedureName="plus1inout",parameters={@StoredProcedureParameter(mode=ParameterMode.IN,name="arg",type=Integer.class),@StoredProcedureParameter(mode=ParameterMode.OUT,name="res",type=Integer.class)}), @Table(name="SD_User"), public]User,  @TO@ [@Entity, @NamedEntityGraphs({@NamedEntityGraph(name="User.overview",attributeNodes={@NamedAttributeNode("roles")}),@NamedEntityGraph(name="User.detail",attributeNodes={@NamedAttributeNode("roles"),@NamedAttributeNode("manager"),@NamedAttributeNode("colleagues")}),@NamedEntityGraph(name="User.getOneWithDefinedEntityGraphById",attributeNodes={@NamedAttributeNode("roles"),@NamedAttributeNode("manager"),@NamedAttributeNode("colleagues")}),@NamedEntityGraph(name="User.withSubGraph",attributeNodes={@NamedAttributeNode("roles"),@NamedAttributeNode(value="colleagues",subgraph="User.colleagues")},subgraphs={@NamedSubgraph(name="User.colleagues",attributeNodes={@NamedAttributeNode("colleagues"),@NamedAttributeNode("roles")})}),@NamedEntityGraph(name="User.deepGraph",attributeNodes={@NamedAttributeNode("roles"),@NamedAttributeNode(value="colleagues",subgraph="User.colleagues")},subgraphs={@NamedSubgraph(name="User.colleagues",attributeNodes={@NamedAttributeNode("roles"),@NamedAttributeNode(value="colleagues",subgraph="User.colleaguesOfColleagues")}),@NamedSubgraph(name="User.colleaguesOfColleagues",attributeNodes={@NamedAttributeNode("roles")})})}), @NamedQuery(name="User.findByEmailAddress",query="SELECT u FROM User u WHERE u.emailAddress = ?1"), @NamedStoredProcedureQueries({@NamedStoredProcedureQuery(name="User.plus1",procedureName="plus1inout",parameters={@StoredProcedureParameter(mode=ParameterMode.IN,name="arg",type=Integer.class),@StoredProcedureParameter(mode=ParameterMode.OUT,name="res",type=Integer.class)})}), @NamedStoredProcedureQuery(name="User.plus1IO",procedureName="plus1inout",parameters={@StoredProcedureParameter(mode=ParameterMode.IN,name="arg",type=Integer.class),@StoredProcedureParameter(mode=ParameterMode.OUT,name="res",type=Integer.class)}), @Table(name="SD_User"), public]User,  @AT@ 1949 @LENGTH@ 7197
---UPD SingleMemberAnnotation@@@NamedEntityGraphs({@NamedEntityGraph(name="User.overview",attributeNodes={@NamedAttributeNode("roles")}),@NamedEntityGraph(name="User.detail",attributeNodes={@NamedAttributeNode("roles"),@NamedAttributeNode("manager"),@NamedAttributeNode("colleagues")}),@NamedEntityGraph(name="User.getOneWithDefinedEntityGraphById",attributeNodes={@NamedAttributeNode("roles"),@NamedAttributeNode("manager"),@NamedAttributeNode("colleagues")}),@NamedEntityGraph(name="User.withSubGraph",attributeNodes={@NamedAttributeNode("roles"),@NamedAttributeNode(value="colleagues",subgraph="User.colleagues")},subgraphs={@NamedSubgraph(name="User.colleagues",attributeNodes={@NamedAttributeNode("colleagues"),@NamedAttributeNode("roles")})})}) @TO@ @NamedEntityGraphs({@NamedEntityGraph(name="User.overview",attributeNodes={@NamedAttributeNode("roles")}),@NamedEntityGraph(name="User.detail",attributeNodes={@NamedAttributeNode("roles"),@NamedAttributeNode("manager"),@NamedAttributeNode("colleagues")}),@NamedEntityGraph(name="User.getOneWithDefinedEntityGraphById",attributeNodes={@NamedAttributeNode("roles"),@NamedAttributeNode("manager"),@NamedAttributeNode("colleagues")}),@NamedEntityGraph(name="User.withSubGraph",attributeNodes={@NamedAttributeNode("roles"),@NamedAttributeNode(value="colleagues",subgraph="User.colleagues")},subgraphs={@NamedSubgraph(name="User.colleagues",attributeNodes={@NamedAttributeNode("colleagues"),@NamedAttributeNode("roles")})}),@NamedEntityGraph(name="User.deepGraph",attributeNodes={@NamedAttributeNode("roles"),@NamedAttributeNode(value="colleagues",subgraph="User.colleagues")},subgraphs={@NamedSubgraph(name="User.colleagues",attributeNodes={@NamedAttributeNode("roles"),@NamedAttributeNode(value="colleagues",subgraph="User.colleaguesOfColleagues")}),@NamedSubgraph(name="User.colleaguesOfColleagues",attributeNodes={@NamedAttributeNode("roles")})})}) @AT@ 1957 @LENGTH@ 821


INS IfStatement@@if (source.equals(target)) {  return true;} else if (source.getDeclaringClass() == target.getDeclaringClass()) {  return false;} else if (!source.getDeclaringClass().isAssignableFrom(target.getDeclaringClass())) {  return false;} @TO@ MethodDeclaration@@public, static, boolean, MethodName:isOverridingMethod, Method source, Method target, boolean exact,  @AT@ 52151 @LENGTH@ 289
---INS MethodInvocation@@source.equals(target) @TO@ IfStatement@@if (source.equals(target)) {  return true;} else if (source.getDeclaringClass() == target.getDeclaringClass()) {  return false;} else if (!source.getDeclaringClass().isAssignableFrom(target.getDeclaringClass())) {  return false;} @AT@ 52155 @LENGTH@ 21
------INS SimpleName@@Name:source @TO@ MethodInvocation@@source.equals(target) @AT@ 52155 @LENGTH@ 6
------INS SimpleName@@MethodName:equals:[target] @TO@ MethodInvocation@@source.equals(target) @AT@ 52162 @LENGTH@ 14
---------INS SimpleName@@target @TO@ SimpleName@@MethodName:equals:[target] @AT@ 52169 @LENGTH@ 6
---INS Block@@ThenBody:{  return true;} @TO@ IfStatement@@if (source.equals(target)) {  return true;} else if (source.getDeclaringClass() == target.getDeclaringClass()) {  return false;} else if (!source.getDeclaringClass().isAssignableFrom(target.getDeclaringClass())) {  return false;} @AT@ 52178 @LENGTH@ 36
------INS ReturnStatement@@BooleanLiteral:true @TO@ Block@@ThenBody:{  return true;} @AT@ 52192 @LENGTH@ 12
---------MOV BooleanLiteral@@true @TO@ ReturnStatement@@BooleanLiteral:true @AT@ 53717 @LENGTH@ 4
---INS Block@@ElseBody:if (source.getDeclaringClass() == target.getDeclaringClass()) {  return false;} else if (!source.getDeclaringClass().isAssignableFrom(target.getDeclaringClass())) {  return false;} @TO@ IfStatement@@if (source.equals(target)) {  return true;} else if (source.getDeclaringClass() == target.getDeclaringClass()) {  return false;} else if (!source.getDeclaringClass().isAssignableFrom(target.getDeclaringClass())) {  return false;} @AT@ 52220 @LENGTH@ 220
------INS IfStatement@@if (source.getDeclaringClass() == target.getDeclaringClass()) {  return false;} else if (!source.getDeclaringClass().isAssignableFrom(target.getDeclaringClass())) {  return false;} @TO@ Block@@ElseBody:if (source.getDeclaringClass() == target.getDeclaringClass()) {  return false;} else if (!source.getDeclaringClass().isAssignableFrom(target.getDeclaringClass())) {  return false;} @AT@ 52220 @LENGTH@ 220
---------INS InfixExpression@@source.getDeclaringClass() == target.getDeclaringClass() @TO@ IfStatement@@if (source.getDeclaringClass() == target.getDeclaringClass()) {  return false;} else if (!source.getDeclaringClass().isAssignableFrom(target.getDeclaringClass())) {  return false;} @AT@ 52224 @LENGTH@ 56
------------INS MethodInvocation@@source.getDeclaringClass() @TO@ InfixExpression@@source.getDeclaringClass() == target.getDeclaringClass() @AT@ 52224 @LENGTH@ 26
---------------INS SimpleName@@Name:source @TO@ MethodInvocation@@source.getDeclaringClass() @AT@ 52224 @LENGTH@ 6
---------------INS SimpleName@@MethodName:getDeclaringClass:[] @TO@ MethodInvocation@@source.getDeclaringClass() @AT@ 52231 @LENGTH@ 19
------------INS Operator@@== @TO@ InfixExpression@@source.getDeclaringClass() == target.getDeclaringClass() @AT@ 52250 @LENGTH@ 2
------------INS MethodInvocation@@target.getDeclaringClass() @TO@ InfixExpression@@source.getDeclaringClass() == target.getDeclaringClass() @AT@ 52254 @LENGTH@ 26
---------------INS SimpleName@@Name:target @TO@ MethodInvocation@@target.getDeclaringClass() @AT@ 52254 @LENGTH@ 6
---------------INS SimpleName@@MethodName:getDeclaringClass:[] @TO@ MethodInvocation@@target.getDeclaringClass() @AT@ 52261 @LENGTH@ 19
---------INS Block@@ThenBody:{  return false;} @TO@ IfStatement@@if (source.getDeclaringClass() == target.getDeclaringClass()) {  return false;} else if (!source.getDeclaringClass().isAssignableFrom(target.getDeclaringClass())) {  return false;} @AT@ 52282 @LENGTH@ 37
------------INS ReturnStatement@@BooleanLiteral:false @TO@ Block@@ThenBody:{  return false;} @AT@ 52296 @LENGTH@ 13
---------------INS BooleanLiteral@@false @TO@ ReturnStatement@@BooleanLiteral:false @AT@ 52303 @LENGTH@ 5
---------INS Block@@ElseBody:if (!source.getDeclaringClass().isAssignableFrom(target.getDeclaringClass())) {  return false;} @TO@ IfStatement@@if (source.getDeclaringClass() == target.getDeclaringClass()) {  return false;} else if (!source.getDeclaringClass().isAssignableFrom(target.getDeclaringClass())) {  return false;} @AT@ 52325 @LENGTH@ 115
------------INS IfStatement@@if (!source.getDeclaringClass().isAssignableFrom(target.getDeclaringClass())) {  return false;} @TO@ Block@@ElseBody:if (!source.getDeclaringClass().isAssignableFrom(target.getDeclaringClass())) {  return false;} @AT@ 52325 @LENGTH@ 115
---------------INS PrefixExpression@@!source.getDeclaringClass().isAssignableFrom(target.getDeclaringClass()) @TO@ IfStatement@@if (!source.getDeclaringClass().isAssignableFrom(target.getDeclaringClass())) {  return false;} @AT@ 52329 @LENGTH@ 72
------------------INS Operator@@! @TO@ PrefixExpression@@!source.getDeclaringClass().isAssignableFrom(target.getDeclaringClass()) @AT@ 52329 @LENGTH@ 1
------------------INS MethodInvocation@@source.getDeclaringClass().isAssignableFrom(target.getDeclaringClass()) @TO@ PrefixExpression@@!source.getDeclaringClass().isAssignableFrom(target.getDeclaringClass()) @AT@ 52330 @LENGTH@ 71
---------------------INS MethodInvocation@@MethodName:getDeclaringClass:[] @TO@ MethodInvocation@@source.getDeclaringClass().isAssignableFrom(target.getDeclaringClass()) @AT@ 52330 @LENGTH@ 26
---------------------INS SimpleName@@Name:source @TO@ MethodInvocation@@source.getDeclaringClass().isAssignableFrom(target.getDeclaringClass()) @AT@ 52330 @LENGTH@ 6
---------------------INS SimpleName@@MethodName:isAssignableFrom:[target.getDeclaringClass()] @TO@ MethodInvocation@@source.getDeclaringClass().isAssignableFrom(target.getDeclaringClass()) @AT@ 52357 @LENGTH@ 44
------------------------INS MethodInvocation@@target.getDeclaringClass() @TO@ SimpleName@@MethodName:isAssignableFrom:[target.getDeclaringClass()] @AT@ 52374 @LENGTH@ 26
---------------------------INS SimpleName@@Name:target @TO@ MethodInvocation@@target.getDeclaringClass() @AT@ 52374 @LENGTH@ 6
---------------------------INS SimpleName@@MethodName:getDeclaringClass:[] @TO@ MethodInvocation@@target.getDeclaringClass() @AT@ 52381 @LENGTH@ 19
---------------INS Block@@ThenBody:{  return false;} @TO@ IfStatement@@if (!source.getDeclaringClass().isAssignableFrom(target.getDeclaringClass())) {  return false;} @AT@ 52403 @LENGTH@ 37
------------------INS ReturnStatement@@BooleanLiteral:false @TO@ Block@@ThenBody:{  return false;} @AT@ 52417 @LENGTH@ 13
---------------------INS BooleanLiteral@@false @TO@ ReturnStatement@@BooleanLiteral:false @AT@ 52424 @LENGTH@ 5
------------INS IfStatement@@if (!source.getDeclaringClass().isAssignableFrom(target.getDeclaringClass())) {  return false;} @TO@ Block@@ElseBody:if (!source.getDeclaringClass().isAssignableFrom(target.getDeclaringClass())) {  return false;} @AT@ 52325 @LENGTH@ 115
---------------INS PrefixExpression@@!source.getDeclaringClass().isAssignableFrom(target.getDeclaringClass()) @TO@ IfStatement@@if (!source.getDeclaringClass().isAssignableFrom(target.getDeclaringClass())) {  return false;} @AT@ 52329 @LENGTH@ 72
------------------INS Operator@@! @TO@ PrefixExpression@@!source.getDeclaringClass().isAssignableFrom(target.getDeclaringClass()) @AT@ 52329 @LENGTH@ 1
------------------INS MethodInvocation@@source.getDeclaringClass().isAssignableFrom(target.getDeclaringClass()) @TO@ PrefixExpression@@!source.getDeclaringClass().isAssignableFrom(target.getDeclaringClass()) @AT@ 52330 @LENGTH@ 71
---------------------INS MethodInvocation@@MethodName:getDeclaringClass:[] @TO@ MethodInvocation@@source.getDeclaringClass().isAssignableFrom(target.getDeclaringClass()) @AT@ 52330 @LENGTH@ 26
---------------------INS SimpleName@@Name:source @TO@ MethodInvocation@@source.getDeclaringClass().isAssignableFrom(target.getDeclaringClass()) @AT@ 52330 @LENGTH@ 6
---------------------INS SimpleName@@MethodName:isAssignableFrom:[target.getDeclaringClass()] @TO@ MethodInvocation@@source.getDeclaringClass().isAssignableFrom(target.getDeclaringClass()) @AT@ 52357 @LENGTH@ 44
------------------------INS MethodInvocation@@target.getDeclaringClass() @TO@ SimpleName@@MethodName:isAssignableFrom:[target.getDeclaringClass()] @AT@ 52374 @LENGTH@ 26
---------------------------INS SimpleName@@Name:target @TO@ MethodInvocation@@target.getDeclaringClass() @AT@ 52374 @LENGTH@ 6
---------------------------INS SimpleName@@MethodName:getDeclaringClass:[] @TO@ MethodInvocation@@target.getDeclaringClass() @AT@ 52381 @LENGTH@ 19
---------------INS Block@@ThenBody:{  return false;} @TO@ IfStatement@@if (!source.getDeclaringClass().isAssignableFrom(target.getDeclaringClass())) {  return false;} @AT@ 52403 @LENGTH@ 37
------------------INS ReturnStatement@@BooleanLiteral:false @TO@ Block@@ThenBody:{  return false;} @AT@ 52417 @LENGTH@ 13
---------------------INS BooleanLiteral@@false @TO@ ReturnStatement@@BooleanLiteral:false @AT@ 52424 @LENGTH@ 5


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled(); @AT@ 5334 @LENGTH@ 160
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5342 @LENGTH@ 151
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5342 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5359 @LENGTH@ 134
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 5359 @LENGTH@ 64
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5359 @LENGTH@ 35
---------UPD MethodInvocation@@componentConfiguration.getConfigurer().isEnabled() @TO@ componentConfiguration.getCustomizer().isEnabled() @AT@ 5443 @LENGTH@ 50
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5443 @LENGTH@ 38


UPD IfStatement@@if (this.errorHandler != null) {  try {    Object result=this.errorHandler.handleError(amqpMessage,message,e);    if (result != null) {      handleResult(result,amqpMessage,channel,message);    } else {      logger.trace("Error handler returned no result");    }  } catch (  Exception ex) {    if (!this.returnExceptions) {      throw ex;    }    handleResult(new RemoteInvocationResult(ex),amqpMessage,channel,message);  }} else {  if (!this.returnExceptions) {    throw e;  }  handleResult(new RemoteInvocationResult(e.getCause()),amqpMessage,channel,message);} @TO@ if (this.errorHandler != null) {  try {    Object result=this.errorHandler.handleError(amqpMessage,message,e);    if (result != null) {      handleResult(result,amqpMessage,channel,message);    } else {      logger.trace("Error handler returned no result");    }  } catch (  Exception ex) {    returnOrThrow(amqpMessage,channel,message,ex,ex);  }} else {  returnOrThrow(amqpMessage,channel,message,e.getCause(),e);} @AT@ 4885 @LENGTH@ 631
---UPD Block@@ThenBody:{  try {    Object result=this.errorHandler.handleError(amqpMessage,message,e);    if (result != null) {      handleResult(result,amqpMessage,channel,message);    } else {      logger.trace("Error handler returned no result");    }  } catch (  Exception ex) {    if (!this.returnExceptions) {      throw ex;    }    handleResult(new RemoteInvocationResult(ex),amqpMessage,channel,message);  }} @TO@ ThenBody:{  try {    Object result=this.errorHandler.handleError(amqpMessage,message,e);    if (result != null) {      handleResult(result,amqpMessage,channel,message);    } else {      logger.trace("Error handler returned no result");    }  } catch (  Exception ex) {    returnOrThrow(amqpMessage,channel,message,ex,ex);  }} @AT@ 4916 @LENGTH@ 440
------UPD TryStatement@@try {  Object result=this.errorHandler.handleError(amqpMessage,message,e);  if (result != null) {    handleResult(result,amqpMessage,channel,message);  } else {    logger.trace("Error handler returned no result");  }} catch (Exception ex) {  if (!this.returnExceptions) {    throw ex;  }  handleResult(new RemoteInvocationResult(ex),amqpMessage,channel,message);} @TO@ try {  Object result=this.errorHandler.handleError(amqpMessage,message,e);  if (result != null) {    handleResult(result,amqpMessage,channel,message);  } else {    logger.trace("Error handler returned no result");  }} catch (Exception ex) {  returnOrThrow(amqpMessage,channel,message,ex,ex);} @AT@ 4922 @LENGTH@ 429
---------UPD CatchClause@@catch (Exception ex) {  if (!this.returnExceptions) {    throw ex;  }  handleResult(new RemoteInvocationResult(ex),amqpMessage,channel,message);} @TO@ catch (Exception ex) {  returnOrThrow(amqpMessage,channel,message,ex,ex);} @AT@ 5183 @LENGTH@ 168
------------DEL IfStatement@@if (!this.returnExceptions) {  throw ex;} @AT@ 5211 @LENGTH@ 52
---------------DEL PrefixExpression@@!this.returnExceptions @AT@ 5215 @LENGTH@ 22
------------------DEL Operator@@! @AT@ 5215 @LENGTH@ 1
------------------DEL FieldAccess@@this.returnExceptions @AT@ 5216 @LENGTH@ 21
---------------------DEL ThisExpression@@this @AT@ 5216 @LENGTH@ 4
---------------------DEL SimpleName@@returnExceptions @AT@ 5221 @LENGTH@ 16
---------------DEL Block@@ThenBody:{  throw ex;} @AT@ 5239 @LENGTH@ 24
------------------DEL ThrowStatement@@SimpleName:ex @AT@ 5247 @LENGTH@ 9
---------------------DEL SimpleName@@ex @AT@ 5253 @LENGTH@ 2
------------UPD ExpressionStatement@@MethodInvocation:handleResult(new RemoteInvocationResult(ex),amqpMessage,channel,message) @TO@ MethodInvocation:returnOrThrow(amqpMessage,channel,message,ex,ex) @AT@ 5269 @LENGTH@ 76
---------------UPD MethodInvocation@@handleResult(new RemoteInvocationResult(ex),amqpMessage,channel,message) @TO@ returnOrThrow(amqpMessage,channel,message,ex,ex) @AT@ 5269 @LENGTH@ 75
------------------UPD SimpleName@@MethodName:handleResult:[new RemoteInvocationResult(ex), amqpMessage, channel, message] @TO@ MethodName:returnOrThrow:[amqpMessage, channel, message, ex, ex] @AT@ 5269 @LENGTH@ 75
---------------------INS SimpleName@@ex @TO@ SimpleName@@MethodName:handleResult:[new RemoteInvocationResult(ex), amqpMessage, channel, message] @AT@ 5256 @LENGTH@ 2
---------------------INS SimpleName@@ex @TO@ SimpleName@@MethodName:handleResult:[new RemoteInvocationResult(ex), amqpMessage, channel, message] @AT@ 5260 @LENGTH@ 2
---------------------DEL ClassInstanceCreation@@RemoteInvocationResult[ex] @AT@ 5282 @LENGTH@ 30
------------------------DEL New@@new @AT@ 5282 @LENGTH@ 3
------------------------DEL SimpleType@@RemoteInvocationResult @AT@ 5286 @LENGTH@ 22
------------------------DEL SimpleName@@ex @AT@ 5309 @LENGTH@ 2
---UPD Block@@ElseBody:{  if (!this.returnExceptions) {    throw e;  }  handleResult(new RemoteInvocationResult(e.getCause()),amqpMessage,channel,message);} @TO@ ElseBody:{  returnOrThrow(amqpMessage,channel,message,e.getCause(),e);} @AT@ 5365 @LENGTH@ 151
------UPD IfStatement@@if (!this.returnExceptions) {  throw e;} @TO@ if (!this.returnExceptions) {  throw exceptionToThrow;} @AT@ 5371 @LENGTH@ 49
------UPD ExpressionStatement@@MethodInvocation:handleResult(new RemoteInvocationResult(e.getCause()),amqpMessage,channel,message) @TO@ MethodInvocation:returnOrThrow(amqpMessage,channel,message,e.getCause(),e) @AT@ 5425 @LENGTH@ 86
---------UPD MethodInvocation@@handleResult(new RemoteInvocationResult(e.getCause()),amqpMessage,channel,message) @TO@ returnOrThrow(amqpMessage,channel,message,e.getCause(),e) @AT@ 5425 @LENGTH@ 85
------------UPD SimpleName@@MethodName:handleResult:[new RemoteInvocationResult(e.getCause()), amqpMessage, channel, message] @TO@ MethodName:returnOrThrow:[amqpMessage, channel, message, e.getCause(), e] @AT@ 5425 @LENGTH@ 85
---------------INS SimpleName@@amqpMessage @TO@ SimpleName@@MethodName:handleResult:[new RemoteInvocationResult(e.getCause()), amqpMessage, channel, message] @AT@ 5304 @LENGTH@ 11
---------------INS SimpleName@@channel @TO@ SimpleName@@MethodName:handleResult:[new RemoteInvocationResult(e.getCause()), amqpMessage, channel, message] @AT@ 5317 @LENGTH@ 7
---------------INS SimpleName@@message @TO@ SimpleName@@MethodName:handleResult:[new RemoteInvocationResult(e.getCause()), amqpMessage, channel, message] @AT@ 5326 @LENGTH@ 7
---------------INS MethodInvocation@@e.getCause() @TO@ SimpleName@@MethodName:handleResult:[new RemoteInvocationResult(e.getCause()), amqpMessage, channel, message] @AT@ 5335 @LENGTH@ 12
------------------MOV SimpleName@@Name:e @TO@ MethodInvocation@@e.getCause() @AT@ 5465 @LENGTH@ 1
------------------MOV SimpleName@@MethodName:getCause:[] @TO@ MethodInvocation@@e.getCause() @AT@ 5467 @LENGTH@ 10
---------------DEL ClassInstanceCreation@@RemoteInvocationResult[e.getCause()] @AT@ 5438 @LENGTH@ 40
------------------DEL New@@new @AT@ 5438 @LENGTH@ 3
------------------DEL SimpleType@@RemoteInvocationResult @AT@ 5442 @LENGTH@ 22
------------------DEL MethodInvocation@@e.getCause() @AT@ 5465 @LENGTH@ 12
---------------DEL SimpleName@@amqpMessage @AT@ 5480 @LENGTH@ 11
---------------DEL SimpleName@@channel @AT@ 5493 @LENGTH@ 7
---------------UPD SimpleName@@message @TO@ e @AT@ 5502 @LENGTH@ 7


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled(); @AT@ 5243 @LENGTH@ 160
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5251 @LENGTH@ 151
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5251 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5268 @LENGTH@ 134
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 5268 @LENGTH@ 64
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5268 @LENGTH@ 35
---------UPD MethodInvocation@@componentConfiguration.getConfigurer().isEnabled() @TO@ componentConfiguration.getCustomizer().isEnabled() @AT@ 5352 @LENGTH@ 50
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5352 @LENGTH@ 38


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled(); @AT@ 5209 @LENGTH@ 160
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5217 @LENGTH@ 151
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5217 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5234 @LENGTH@ 134
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 5234 @LENGTH@ 64
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5234 @LENGTH@ 35
---------UPD MethodInvocation@@componentConfiguration.getConfigurer().isEnabled() @TO@ componentConfiguration.getCustomizer().isEnabled() @AT@ 5318 @LENGTH@ 50
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5318 @LENGTH@ 38


UPD ExpressionStatement@@MethodInvocation:Assert.isTrue(StringUtils.hasText(this.switchUserUrl) && UrlUtils.isValidRedirectUrl(switchFailureUrl),"switchFailureUrl cannot be empty and must be a valid redirect URL") @TO@ MethodInvocation:Assert.isTrue(UrlUtils.isValidRedirectUrl(switchFailureUrl),"switchFailureUrl must be a valid redirect URL") @AT@ 19279 @LENGTH@ 188
---UPD MethodInvocation@@Assert.isTrue(StringUtils.hasText(this.switchUserUrl) && UrlUtils.isValidRedirectUrl(switchFailureUrl),"switchFailureUrl cannot be empty and must be a valid redirect URL") @TO@ Assert.isTrue(UrlUtils.isValidRedirectUrl(switchFailureUrl),"switchFailureUrl must be a valid redirect URL") @AT@ 19279 @LENGTH@ 187
------UPD SimpleName@@MethodName:isTrue:[StringUtils.hasText(this.switchUserUrl) && UrlUtils.isValidRedirectUrl(switchFailureUrl), "switchFailureUrl cannot be empty and must be a valid redirect URL"] @TO@ MethodName:isTrue:[UrlUtils.isValidRedirectUrl(switchFailureUrl), "switchFailureUrl must be a valid redirect URL"] @AT@ 19286 @LENGTH@ 180
---------DEL InfixExpression@@StringUtils.hasText(this.switchUserUrl) && UrlUtils.isValidRedirectUrl(switchFailureUrl) @AT@ 19298 @LENGTH@ 94
------------DEL MethodInvocation@@StringUtils.hasText(this.switchUserUrl) @AT@ 19298 @LENGTH@ 39
---------------DEL SimpleName@@Name:StringUtils @AT@ 19298 @LENGTH@ 11
---------------DEL SimpleName@@MethodName:hasText:[this.switchUserUrl] @AT@ 19310 @LENGTH@ 27
------------------DEL FieldAccess@@this.switchUserUrl @AT@ 19318 @LENGTH@ 18
---------------------DEL ThisExpression@@this @AT@ 19318 @LENGTH@ 4
---------------------DEL SimpleName@@switchUserUrl @AT@ 19323 @LENGTH@ 13
------------DEL Operator@@&& @AT@ 19337 @LENGTH@ 2
---------MOV MethodInvocation@@UrlUtils.isValidRedirectUrl(switchFailureUrl) @TO@ SimpleName@@MethodName:isTrue:[StringUtils.hasText(this.switchUserUrl) && UrlUtils.isValidRedirectUrl(switchFailureUrl), "switchFailureUrl cannot be empty and must be a valid redirect URL"] @AT@ 19347 @LENGTH@ 45
---------UPD StringLiteral@@"switchFailureUrl cannot be empty and must be a valid redirect URL" @TO@ "switchFailureUrl must be a valid redirect URL" @AT@ 19398 @LENGTH@ 67


UPD IfStatement@@if (ObjectHelper.isNotEmpty(runInstancesRequest.getSecurityGroups()) && ObjectHelper.isNotEmpty(runInstancesRequest.getSecurityGroups())) {  if (runInstancesRequest.getSecurityGroups().contains("secgroup-1") && runInstancesRequest.getSecurityGroups().contains("secgroup-2")) {    GroupIdentifier id1=new GroupIdentifier();    id1.setGroupId("id-1");    id1.setGroupName("secgroup-1");    GroupIdentifier id2=new GroupIdentifier();    id2.setGroupId("id-2");    id2.setGroupName("secgroup-2");    Collection secGroups=new ArrayList<GroupIdentifier>();    secGroups.add(id1);    secGroups.add(id2);    ins.setSecurityGroups(secGroups);  } else   if (ObjectHelper.isNotEmpty(runInstancesRequest.getKeyName())) {    if (ObjectHelper.isNotEmpty(runInstancesRequest.getKeyName().contains("keypair-1"))) {      GroupIdentifier id1=new GroupIdentifier();      id1.setGroupId("id-3");      id1.setGroupName("secgroup-3");      GroupIdentifier id2=new GroupIdentifier();      id2.setGroupId("id-4");      id2.setGroupName("secgroup-4");      Collection secGroups=new ArrayList<GroupIdentifier>();      secGroups.add(id1);      secGroups.add(id2);      ins.setSecurityGroups(secGroups);    }  }} @TO@ if (runInstancesRequest.getSecurityGroups() != null) {  if (runInstancesRequest.getSecurityGroups().contains("secgroup-1") && runInstancesRequest.getSecurityGroups().contains("secgroup-2")) {    GroupIdentifier id1=new GroupIdentifier();    id1.setGroupId("id-1");    id1.setGroupName("secgroup-1");    GroupIdentifier id2=new GroupIdentifier();    id2.setGroupId("id-2");    id2.setGroupName("secgroup-2");    Collection secGroups=new ArrayList<GroupIdentifier>();    secGroups.add(id1);    secGroups.add(id2);    ins.setSecurityGroups(secGroups);  } else   if (ObjectHelper.isNotEmpty(runInstancesRequest.getKeyName())) {    if (ObjectHelper.isNotEmpty(runInstancesRequest.getKeyName().contains("keypair-1"))) {      GroupIdentifier id1=new GroupIdentifier();      id1.setGroupId("id-3");      id1.setGroupName("secgroup-3");      GroupIdentifier id2=new GroupIdentifier();      id2.setGroupId("id-4");      id2.setGroupName("secgroup-4");      Collection secGroups=new ArrayList<GroupIdentifier>();      secGroups.add(id1);      secGroups.add(id2);      ins.setSecurityGroups(secGroups);    }  }} @AT@ 3990 @LENGTH@ 1646
---UPD InfixExpression@@ObjectHelper.isNotEmpty(runInstancesRequest.getSecurityGroups()) && ObjectHelper.isNotEmpty(runInstancesRequest.getSecurityGroups()) @TO@ runInstancesRequest.getSecurityGroups() != null @AT@ 3994 @LENGTH@ 132
------DEL MethodInvocation@@ObjectHelper.isNotEmpty(runInstancesRequest.getSecurityGroups()) @AT@ 3994 @LENGTH@ 64
---------DEL SimpleName@@Name:ObjectHelper @AT@ 3994 @LENGTH@ 12
---------DEL SimpleName@@MethodName:isNotEmpty:[runInstancesRequest.getSecurityGroups()] @AT@ 4007 @LENGTH@ 51
------------DEL MethodInvocation@@runInstancesRequest.getSecurityGroups() @AT@ 4018 @LENGTH@ 39
------INS MethodInvocation@@runInstancesRequest.getSecurityGroups() @TO@ InfixExpression@@ObjectHelper.isNotEmpty(runInstancesRequest.getSecurityGroups()) && ObjectHelper.isNotEmpty(runInstancesRequest.getSecurityGroups()) @AT@ 3994 @LENGTH@ 39
---------MOV SimpleName@@Name:runInstancesRequest @TO@ MethodInvocation@@runInstancesRequest.getSecurityGroups() @AT@ 4018 @LENGTH@ 19
---------MOV SimpleName@@MethodName:getSecurityGroups:[] @TO@ MethodInvocation@@runInstancesRequest.getSecurityGroups() @AT@ 4038 @LENGTH@ 19
------INS NullLiteral@@null @TO@ InfixExpression@@ObjectHelper.isNotEmpty(runInstancesRequest.getSecurityGroups()) && ObjectHelper.isNotEmpty(runInstancesRequest.getSecurityGroups()) @AT@ 4037 @LENGTH@ 4
------UPD Operator@@&& @TO@ != @AT@ 4058 @LENGTH@ 2
------DEL MethodInvocation@@ObjectHelper.isNotEmpty(runInstancesRequest.getSecurityGroups()) @AT@ 4062 @LENGTH@ 64
---------DEL SimpleName@@Name:ObjectHelper @AT@ 4062 @LENGTH@ 12
---------DEL SimpleName@@MethodName:isNotEmpty:[runInstancesRequest.getSecurityGroups()] @AT@ 4075 @LENGTH@ 51
------------DEL MethodInvocation@@runInstancesRequest.getSecurityGroups() @AT@ 4086 @LENGTH@ 39
---------------DEL SimpleName@@Name:runInstancesRequest @AT@ 4086 @LENGTH@ 19
---------------DEL SimpleName@@MethodName:getSecurityGroups:[] @AT@ 4106 @LENGTH@ 19


UPD ExpressionStatement@@MethodInvocation:exchange.setException(new ThrottleException(msg)) @TO@ MethodInvocation:exchange.setException(new ThrottlingException(msg)) @AT@ 2733 @LENGTH@ 50
---UPD MethodInvocation@@exchange.setException(new ThrottleException(msg)) @TO@ exchange.setException(new ThrottlingException(msg)) @AT@ 2733 @LENGTH@ 49
------UPD SimpleName@@MethodName:setException:[new ThrottleException(msg)] @TO@ MethodName:setException:[new ThrottlingException(msg)] @AT@ 2742 @LENGTH@ 40
---------UPD ClassInstanceCreation@@ThrottleException[msg] @TO@ ThrottlingException[msg] @AT@ 2755 @LENGTH@ 26
------------UPD SimpleType@@ThrottleException @TO@ ThrottlingException @AT@ 2759 @LENGTH@ 17


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<YammerComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<YammerComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5429 @LENGTH@ 339
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 5433 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5433 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  ComponentCustomizer<YammerComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ ThenBody:{  for (  ComponentCustomizer<YammerComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5489 @LENGTH@ 279
------UPD EnhancedForStatement@@for (ComponentCustomizer<YammerComponent> configurer : customizers) {  LOGGER.debug("Configure component {}, with configurer {}",component,configurer);  configurer.customize(component);} @TO@ for (ComponentCustomizer<YammerComponent> customizer : customizers) {  LOGGER.debug("Configure component {}, with customizer {}",component,customizer);  customizer.customize(component);} @AT@ 5503 @LENGTH@ 255
---------UPD SingleVariableDeclaration@@ComponentCustomizer<YammerComponent> configurer @TO@ ComponentCustomizer<YammerComponent> customizer @AT@ 5508 @LENGTH@ 47
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5545 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5589 @LENGTH@ 106
------------UPD MethodInvocation@@LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5589 @LENGTH@ 105
---------------UPD SimpleName@@MethodName:debug:["Configure component {}, with configurer {}", component, configurer] @TO@ MethodName:debug:["Configure component {}, with customizer {}", component, customizer] @AT@ 5596 @LENGTH@ 98
------------------UPD StringLiteral@@"Configure component {}, with configurer {}" @TO@ "Configure component {}, with customizer {}" @AT@ 5602 @LENGTH@ 44
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5683 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(component) @TO@ MethodInvocation:customizer.customize(component) @AT@ 5712 @LENGTH@ 32
------------UPD MethodInvocation@@configurer.customize(component) @TO@ customizer.customize(component) @AT@ 5712 @LENGTH@ 31
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5712 @LENGTH@ 10


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled(); @AT@ 5226 @LENGTH@ 160
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5234 @LENGTH@ 151
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5234 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5251 @LENGTH@ 134
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 5251 @LENGTH@ 64
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5251 @LENGTH@ 35
---------UPD MethodInvocation@@componentConfiguration.getConfigurer().isEnabled() @TO@ componentConfiguration.getCustomizer().isEnabled() @AT@ 5335 @LENGTH@ 50
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5335 @LENGTH@ 38


UPD FieldDeclaration@@private, int, [services=8] @TO@ private, int, [services=9] @AT@ 1194 @LENGTH@ 25
---UPD VariableDeclarationFragment@@services=8 @TO@ services=9 @AT@ 1206 @LENGTH@ 12
------UPD NumberLiteral@@8 @TO@ 9 @AT@ 1217 @LENGTH@ 1


UPD ReturnStatement@@MethodInvocation:new GenericPropertyMatcher().startsWith() @TO@ MethodInvocation:new GenericPropertyMatcher().exact() @AT@ 18521 @LENGTH@ 49
---UPD MethodInvocation@@new GenericPropertyMatcher().startsWith() @TO@ new GenericPropertyMatcher().exact() @AT@ 18528 @LENGTH@ 41
------UPD SimpleName@@MethodName:startsWith:[] @TO@ MethodName:exact:[] @AT@ 18557 @LENGTH@ 12


DEL FieldDeclaration@@Method, [findByFirstname, findByFirstnameAndFriend, findByFirstnameNotNull] @AT@ 3233 @LENGTH@ 73
---DEL SimpleType@@Method @AT@ 3233 @LENGTH@ 6
---DEL VariableDeclarationFragment@@findByFirstname @AT@ 3240 @LENGTH@ 15
------DEL SimpleName@@findByFirstname @AT@ 3240 @LENGTH@ 15
---DEL VariableDeclarationFragment@@findByFirstnameAndFriend @AT@ 3257 @LENGTH@ 24
------DEL SimpleName@@findByFirstnameAndFriend @AT@ 3257 @LENGTH@ 24
---DEL VariableDeclarationFragment@@findByFirstnameNotNull @AT@ 3283 @LENGTH@ 22
------DEL SimpleName@@findByFirstnameNotNull @AT@ 3283 @LENGTH@ 22


INS FieldDeclaration@@static, final, Consumer<ServiceBuilder>, [COMMON_DEPENDENCIES=new Consumer<ServiceBuilder>(){
  @SuppressWarnings("unchecked") public void accept(  final ServiceBuilder serviceBuilder){
    ElytronDefinition.commonDependencies(serviceBuilder);
  }
}
] @TO@ TypeDeclaration@@Capabilities,  @AT@ 4012 @LENGTH@ 338
---INS Modifier@@static @TO@ FieldDeclaration@@static, final, Consumer<ServiceBuilder>, [COMMON_DEPENDENCIES=new Consumer<ServiceBuilder>(){
  @SuppressWarnings("unchecked") public void accept(  final ServiceBuilder serviceBuilder){
    ElytronDefinition.commonDependencies(serviceBuilder);
  }
}
] @AT@ 4012 @LENGTH@ 6
---INS Modifier@@final @TO@ FieldDeclaration@@static, final, Consumer<ServiceBuilder>, [COMMON_DEPENDENCIES=new Consumer<ServiceBuilder>(){
  @SuppressWarnings("unchecked") public void accept(  final ServiceBuilder serviceBuilder){
    ElytronDefinition.commonDependencies(serviceBuilder);
  }
}
] @AT@ 4019 @LENGTH@ 5
---INS ParameterizedType@@Consumer<ServiceBuilder> @TO@ FieldDeclaration@@static, final, Consumer<ServiceBuilder>, [COMMON_DEPENDENCIES=new Consumer<ServiceBuilder>(){
  @SuppressWarnings("unchecked") public void accept(  final ServiceBuilder serviceBuilder){
    ElytronDefinition.commonDependencies(serviceBuilder);
  }
}
] @AT@ 4025 @LENGTH@ 24
------INS SimpleType@@Consumer @TO@ ParameterizedType@@Consumer<ServiceBuilder> @AT@ 4025 @LENGTH@ 8
------INS SimpleType@@ServiceBuilder @TO@ ParameterizedType@@Consumer<ServiceBuilder> @AT@ 4034 @LENGTH@ 14
---INS VariableDeclarationFragment@@COMMON_DEPENDENCIES=new Consumer<ServiceBuilder>(){
  @SuppressWarnings("unchecked") public void accept(  final ServiceBuilder serviceBuilder){
    ElytronDefinition.commonDependencies(serviceBuilder);
  }
}
 @TO@ FieldDeclaration@@static, final, Consumer<ServiceBuilder>, [COMMON_DEPENDENCIES=new Consumer<ServiceBuilder>(){
  @SuppressWarnings("unchecked") public void accept(  final ServiceBuilder serviceBuilder){
    ElytronDefinition.commonDependencies(serviceBuilder);
  }
}
] @AT@ 4050 @LENGTH@ 299
------INS SimpleName@@COMMON_DEPENDENCIES @TO@ VariableDeclarationFragment@@COMMON_DEPENDENCIES=new Consumer<ServiceBuilder>(){
  @SuppressWarnings("unchecked") public void accept(  final ServiceBuilder serviceBuilder){
    ElytronDefinition.commonDependencies(serviceBuilder);
  }
}
 @AT@ 4050 @LENGTH@ 19
------INS ClassInstanceCreation@@Consumer<ServiceBuilder>[] @TO@ VariableDeclarationFragment@@COMMON_DEPENDENCIES=new Consumer<ServiceBuilder>(){
  @SuppressWarnings("unchecked") public void accept(  final ServiceBuilder serviceBuilder){
    ElytronDefinition.commonDependencies(serviceBuilder);
  }
}
 @AT@ 4072 @LENGTH@ 277
---------INS New@@new @TO@ ClassInstanceCreation@@Consumer<ServiceBuilder>[] @AT@ 4072 @LENGTH@ 3
---------INS ParameterizedType@@Consumer<ServiceBuilder> @TO@ ClassInstanceCreation@@Consumer<ServiceBuilder>[] @AT@ 4076 @LENGTH@ 24
------------INS SimpleType@@Consumer @TO@ ParameterizedType@@Consumer<ServiceBuilder> @AT@ 4076 @LENGTH@ 8
------------INS SimpleType@@ServiceBuilder @TO@ ParameterizedType@@Consumer<ServiceBuilder> @AT@ 4085 @LENGTH@ 14
---------INS AnonymousClassDeclaration@@AnonymousClass @TO@ ClassInstanceCreation@@Consumer<ServiceBuilder>[] @AT@ 4103 @LENGTH@ 246
------------INS MethodDeclaration@@public, void, MethodName:accept, final ServiceBuilder serviceBuilder,  @TO@ AnonymousClassDeclaration@@AnonymousClass @AT@ 4210 @LENGTH@ 133
---------------INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:accept, final ServiceBuilder serviceBuilder,  @AT@ 4210 @LENGTH@ 6
---------------INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:accept, final ServiceBuilder serviceBuilder,  @AT@ 4217 @LENGTH@ 4
---------------INS SimpleName@@MethodName:accept @TO@ MethodDeclaration@@public, void, MethodName:accept, final ServiceBuilder serviceBuilder,  @AT@ 4222 @LENGTH@ 6
---------------INS SingleVariableDeclaration@@final ServiceBuilder serviceBuilder @TO@ MethodDeclaration@@public, void, MethodName:accept, final ServiceBuilder serviceBuilder,  @AT@ 4229 @LENGTH@ 35
------------------INS Modifier@@final @TO@ SingleVariableDeclaration@@final ServiceBuilder serviceBuilder @AT@ 4229 @LENGTH@ 5
------------------INS SimpleType@@ServiceBuilder @TO@ SingleVariableDeclaration@@final ServiceBuilder serviceBuilder @AT@ 4235 @LENGTH@ 14
------------------INS SimpleName@@serviceBuilder @TO@ SingleVariableDeclaration@@final ServiceBuilder serviceBuilder @AT@ 4250 @LENGTH@ 14
---------------INS ExpressionStatement@@MethodInvocation:ElytronDefinition.commonDependencies(serviceBuilder) @TO@ MethodDeclaration@@public, void, MethodName:accept, final ServiceBuilder serviceBuilder,  @AT@ 4280 @LENGTH@ 53
------------------INS MethodInvocation@@ElytronDefinition.commonDependencies(serviceBuilder) @TO@ ExpressionStatement@@MethodInvocation:ElytronDefinition.commonDependencies(serviceBuilder) @AT@ 4280 @LENGTH@ 52
---------------------INS SimpleName@@Name:ElytronDefinition @TO@ MethodInvocation@@ElytronDefinition.commonDependencies(serviceBuilder) @AT@ 4280 @LENGTH@ 17
---------------------INS SimpleName@@MethodName:commonDependencies:[serviceBuilder] @TO@ MethodInvocation@@ElytronDefinition.commonDependencies(serviceBuilder) @AT@ 4298 @LENGTH@ 34
------------------------INS SimpleName@@serviceBuilder @TO@ SimpleName@@MethodName:commonDependencies:[serviceBuilder] @AT@ 4317 @LENGTH@ 14


UPD ReturnStatement@@Assignment:current=nestedEnum.nextElement() @TO@ SimpleName:current @AT@ 10070 @LENGTH@ 42
---INS SimpleName@@current @TO@ ReturnStatement@@Assignment:current=nestedEnum.nextElement() @AT@ 10125 @LENGTH@ 7


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled(); @AT@ 5226 @LENGTH@ 160
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5234 @LENGTH@ 151
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5234 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5251 @LENGTH@ 134
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 5251 @LENGTH@ 64
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5251 @LENGTH@ 35
---------UPD MethodInvocation@@componentConfiguration.getConfigurer().isEnabled() @TO@ componentConfiguration.getCustomizer().isEnabled() @AT@ 5335 @LENGTH@ 50
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5335 @LENGTH@ 38


UPD FieldDeclaration@@private, static, long, [serialVersionUID=1L] @TO@ private, static, final, long, [serialVersionUID=1L] @AT@ 1194 @LENGTH@ 42
---INS Modifier@@final @TO@ FieldDeclaration@@private, static, long, [serialVersionUID=1L] @AT@ 1209 @LENGTH@ 5


UPD ExpressionStatement@@Assignment:this.ssoFactory=identity -> context.getSingleSignOnManagerManager().create(mechanismName,identity) @TO@ Assignment:this.ssoFactory=identity -> context.getSingleSignOnManager().create(mechanismName,identity) @AT@ 3135 @LENGTH@ 102
---UPD Assignment@@this.ssoFactory=identity -> context.getSingleSignOnManagerManager().create(mechanismName,identity) @TO@ this.ssoFactory=identity -> context.getSingleSignOnManager().create(mechanismName,identity) @AT@ 3135 @LENGTH@ 101
------UPD LambdaExpression@@identity -> context.getSingleSignOnManagerManager().create(mechanismName,identity) @TO@ identity -> context.getSingleSignOnManager().create(mechanismName,identity) @AT@ 3153 @LENGTH@ 83
---------UPD MethodInvocation@@context.getSingleSignOnManagerManager().create(mechanismName,identity) @TO@ context.getSingleSignOnManager().create(mechanismName,identity) @AT@ 3165 @LENGTH@ 71
------------UPD MethodInvocation@@MethodName:getSingleSignOnManagerManager:[] @TO@ MethodName:getSingleSignOnManager:[] @AT@ 3165 @LENGTH@ 39


UPD IfStatement@@if (addresses.hasMoreElements()) {  InetAddress nextAddress=addresses.nextElement();  if (nextAddress.isLoopbackAddress() || !nextAddress.isReachable(2000)) {    continue;  }  if (nextAddress instanceof Inet6Address) {    continue;  } else {    remoteInterfaceAddress=nextAddress.getHostAddress();  }} @TO@ if (addresses.hasMoreElements()) {  InetAddress nextAddress=addresses.nextElement();  try {    if (nextAddress.isLoopbackAddress() || !nextAddress.isReachable(2000)) {      continue;    }  } catch (  Exception e) {    continue;  }  if (nextAddress instanceof Inet6Address) {    continue;  } else {    remoteInterfaceAddress=nextAddress.getHostAddress();  }} @AT@ 1820 @LENGTH@ 459
---UPD Block@@ThenBody:{  InetAddress nextAddress=addresses.nextElement();  if (nextAddress.isLoopbackAddress() || !nextAddress.isReachable(2000)) {    continue;  }  if (nextAddress instanceof Inet6Address) {    continue;  } else {    remoteInterfaceAddress=nextAddress.getHostAddress();  }} @TO@ ThenBody:{  InetAddress nextAddress=addresses.nextElement();  try {    if (nextAddress.isLoopbackAddress() || !nextAddress.isReachable(2000)) {      continue;    }  } catch (  Exception e) {    continue;  }  if (nextAddress instanceof Inet6Address) {    continue;  } else {    remoteInterfaceAddress=nextAddress.getHostAddress();  }} @AT@ 1853 @LENGTH@ 426
------INS TryStatement@@try {  if (nextAddress.isLoopbackAddress() || !nextAddress.isReachable(2000)) {    continue;  }} catch (Exception e) {  continue;} @TO@ Block@@ThenBody:{  InetAddress nextAddress=addresses.nextElement();  if (nextAddress.isLoopbackAddress() || !nextAddress.isReachable(2000)) {    continue;  }  if (nextAddress instanceof Inet6Address) {    continue;  } else {    remoteInterfaceAddress=nextAddress.getHostAddress();  }} @AT@ 1938 @LENGTH@ 242
---------MOV IfStatement@@if (nextAddress.isLoopbackAddress() || !nextAddress.isReachable(2000)) {  continue;} @TO@ TryStatement@@try {  if (nextAddress.isLoopbackAddress() || !nextAddress.isReachable(2000)) {    continue;  }} catch (Exception e) {  continue;} @AT@ 1938 @LENGTH@ 120
---------INS CatchClause@@catch (Exception e) {  continue;} @TO@ TryStatement@@try {  if (nextAddress.isLoopbackAddress() || !nextAddress.isReachable(2000)) {    continue;  }} catch (Exception e) {  continue;} @AT@ 2111 @LENGTH@ 69
------------INS SingleVariableDeclaration@@Exception e @TO@ CatchClause@@catch (Exception e) {  continue;} @AT@ 2118 @LENGTH@ 11
---------------INS SimpleType@@Exception @TO@ SingleVariableDeclaration@@Exception e @AT@ 2118 @LENGTH@ 9
---------------INS SimpleName@@e @TO@ SingleVariableDeclaration@@Exception e @AT@ 2128 @LENGTH@ 1
------------INS ContinueStatement@@ @TO@ CatchClause@@catch (Exception e) {  continue;} @AT@ 2153 @LENGTH@ 9


UPD TryStatement@@try {  if (channel.isOpen()) {    channel.close();  }} catch (IOException e3) {}catch (AlreadyClosedException e4) {}catch (TimeoutException e5) {} @TO@ try {  channel.close();} catch (IOException e3) {}catch (AlreadyClosedException e4) {}catch (TimeoutException e5) {} @AT@ 37209 @LENGTH@ 186
---DEL IfStatement@@if (channel.isOpen()) {  channel.close();} @AT@ 37221 @LENGTH@ 55
------DEL MethodInvocation@@channel.isOpen() @AT@ 37225 @LENGTH@ 16
---------DEL SimpleName@@Name:channel @AT@ 37225 @LENGTH@ 7
---------DEL SimpleName@@MethodName:isOpen:[] @AT@ 37233 @LENGTH@ 8
------DEL Block@@ThenBody:{  channel.close();} @AT@ 37243 @LENGTH@ 33
---MOV ExpressionStatement@@MethodInvocation:channel.close() @TO@ TryStatement@@try {  if (channel.isOpen()) {    channel.close();  }} catch (IOException e3) {}catch (AlreadyClosedException e4) {}catch (TimeoutException e5) {} @AT@ 37252 @LENGTH@ 16


UPD MethodDeclaration@@public, SingleSignOnManager, MethodName:getSingleSignOnManagerManager,  @TO@ public, SingleSignOnManager, MethodName:getSingleSignOnManager,  @AT@ 3080 @LENGTH@ 95
---UPD SimpleName@@MethodName:getSingleSignOnManagerManager @TO@ MethodName:getSingleSignOnManager @AT@ 3107 @LENGTH@ 29


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  LanguageCustomizer<BeanLanguage> configurer : customizers) {    LOGGER.debug("Configure language {}, with configurer {}",language,configurer);    configurer.customize(language);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  LanguageCustomizer<BeanLanguage> customizer : customizers) {    LOGGER.debug("Configure language {}, with customizer {}",language,customizer);    customizer.customize(language);  }} @AT@ 4689 @LENGTH@ 332
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 4693 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 4693 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  LanguageCustomizer<BeanLanguage> configurer : customizers) {    LOGGER.debug("Configure language {}, with configurer {}",language,configurer);    configurer.customize(language);  }} @TO@ ThenBody:{  for (  LanguageCustomizer<BeanLanguage> customizer : customizers) {    LOGGER.debug("Configure language {}, with customizer {}",language,customizer);    customizer.customize(language);  }} @AT@ 4749 @LENGTH@ 272
------UPD EnhancedForStatement@@for (LanguageCustomizer<BeanLanguage> configurer : customizers) {  LOGGER.debug("Configure language {}, with configurer {}",language,configurer);  configurer.customize(language);} @TO@ for (LanguageCustomizer<BeanLanguage> customizer : customizers) {  LOGGER.debug("Configure language {}, with customizer {}",language,customizer);  customizer.customize(language);} @AT@ 4763 @LENGTH@ 248
---------UPD SingleVariableDeclaration@@LanguageCustomizer<BeanLanguage> configurer @TO@ LanguageCustomizer<BeanLanguage> customizer @AT@ 4768 @LENGTH@ 43
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 4801 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure language {}, with configurer {}",language,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure language {}, with customizer {}",language,customizer) @AT@ 4845 @LENGTH@ 104
------------UPD MethodInvocation@@LOGGER.debug("Configure language {}, with configurer {}",language,configurer) @TO@ LOGGER.debug("Configure language {}, with customizer {}",language,customizer) @AT@ 4845 @LENGTH@ 103
---------------UPD SimpleName@@MethodName:debug:["Configure language {}, with configurer {}", language, configurer] @TO@ MethodName:debug:["Configure language {}, with customizer {}", language, customizer] @AT@ 4852 @LENGTH@ 96
------------------UPD StringLiteral@@"Configure language {}, with configurer {}" @TO@ "Configure language {}, with customizer {}" @AT@ 4858 @LENGTH@ 43
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 4937 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(language) @TO@ MethodInvocation:customizer.customize(language) @AT@ 4966 @LENGTH@ 31
------------UPD MethodInvocation@@configurer.customize(language) @TO@ customizer.customize(language) @AT@ 4966 @LENGTH@ 30
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 4966 @LENGTH@ 10


UPD ExpressionStatement@@MethodInvocation:LOG.info("Remoting installed but Undertnow not available. Enabled legacy connector on port 4777.") @TO@ MethodInvocation:LOG.info("Remoting installed but Undertow not available. Enabled legacy connector on port 4447.") @AT@ 1597 @LENGTH@ 99
---UPD MethodInvocation@@LOG.info("Remoting installed but Undertnow not available. Enabled legacy connector on port 4777.") @TO@ LOG.info("Remoting installed but Undertow not available. Enabled legacy connector on port 4447.") @AT@ 1597 @LENGTH@ 98
------UPD SimpleName@@MethodName:info:["Remoting installed but Undertnow not available. Enabled legacy connector on port 4777."] @TO@ MethodName:info:["Remoting installed but Undertow not available. Enabled legacy connector on port 4447."] @AT@ 1601 @LENGTH@ 94
---------UPD StringLiteral@@"Remoting installed but Undertnow not available. Enabled legacy connector on port 4777." @TO@ "Remoting installed but Undertow not available. Enabled legacy connector on port 4447." @AT@ 1606 @LENGTH@ 88


UPD FieldDeclaration@@private, static, long, [serialVersionUID=1L] @TO@ private, static, final, long, [serialVersionUID=1L] @AT@ 1207 @LENGTH@ 42
---INS Modifier@@final @TO@ FieldDeclaration@@private, static, long, [serialVersionUID=1L] @AT@ 1222 @LENGTH@ 5


UPD MethodDeclaration@@public, abstract, void, MethodName:run, final Runnable runnable, Throwable,  @TO@ public, abstract, void, MethodName:run, Runnable runnable, Throwable,  @AT@ 2373 @LENGTH@ 67
---UPD SingleVariableDeclaration@@final Runnable runnable @TO@ Runnable runnable @AT@ 2398 @LENGTH@ 23
------DEL Modifier@@final @AT@ 2398 @LENGTH@ 5


UPD VariableDeclarationStatement@@Map map=new HashMap(); @TO@ Map<String,Object> map=new HashMap<>(); @AT@ 6067 @LENGTH@ 24
---DEL SimpleType@@Map @AT@ 6067 @LENGTH@ 3
---UPD VariableDeclarationFragment@@map=new HashMap() @TO@ map=new HashMap<>() @AT@ 6071 @LENGTH@ 19
------UPD ClassInstanceCreation@@HashMap[] @TO@ HashMap<>[] @AT@ 6077 @LENGTH@ 13
---------DEL SimpleType@@HashMap @AT@ 6081 @LENGTH@ 7
---------INS ParameterizedType@@HashMap<> @TO@ ClassInstanceCreation@@HashMap[] @AT@ 6131 @LENGTH@ 9
------------INS SimpleType@@HashMap @TO@ ParameterizedType@@HashMap<> @AT@ 6131 @LENGTH@ 7
---INS ParameterizedType@@Map<String,Object> @TO@ VariableDeclarationStatement@@Map map=new HashMap(); @AT@ 6102 @LENGTH@ 18
------INS SimpleType@@Map @TO@ ParameterizedType@@Map<String,Object> @AT@ 6102 @LENGTH@ 3
------INS SimpleType@@String @TO@ ParameterizedType@@Map<String,Object> @AT@ 6106 @LENGTH@ 6
------INS SimpleType@@Object @TO@ ParameterizedType@@Map<String,Object> @AT@ 6113 @LENGTH@ 6


UPD MethodDeclaration@@private, void, MethodName:initialVectorizedRowBatchCtx, Configuration conf, HiveException,  @TO@ protected, void, MethodName:initialVectorizedRowBatchCtx, Configuration conf, HiveException,  @AT@ 11028 @LENGTH@ 373
---UPD Modifier@@private @TO@ protected @AT@ 11028 @LENGTH@ 7


UPD VariableDeclarationStatement@@Query query=query(where("id").is(document.id).and("models._id").exists(true)); @TO@ Query query=query(where("id").is(document.id).and("models.value").exists(true)); @AT@ 88732 @LENGTH@ 80
---UPD VariableDeclarationFragment@@query=query(where("id").is(document.id).and("models._id").exists(true)) @TO@ query=query(where("id").is(document.id).and("models.value").exists(true)) @AT@ 88738 @LENGTH@ 73
------UPD MethodInvocation@@query(where("id").is(document.id).and("models._id").exists(true)) @TO@ query(where("id").is(document.id).and("models.value").exists(true)) @AT@ 88746 @LENGTH@ 65
---------UPD SimpleName@@MethodName:query:[where("id").is(document.id).and("models._id").exists(true)] @TO@ MethodName:query:[where("id").is(document.id).and("models.value").exists(true)] @AT@ 88746 @LENGTH@ 65
------------UPD MethodInvocation@@where("id").is(document.id).and("models._id").exists(true) @TO@ where("id").is(document.id).and("models.value").exists(true) @AT@ 88752 @LENGTH@ 58
---------------UPD MethodInvocation@@MethodName:and:["models._id"] @TO@ MethodName:and:["models.value"] @AT@ 88752 @LENGTH@ 45
------------------UPD StringLiteral@@"models._id" @TO@ "models.value" @AT@ 88784 @LENGTH@ 12


DEL SuperConstructorInvocation@@super();
 @AT@ 881 @LENGTH@ 8


UPD FieldDeclaration@@private, static, final, long, [LFH_OFFSET_FOR_FILENAME_LENGTH=WORD + SHORT + SHORT+ SHORT+ SHORT+ SHORT+ WORD+ WORD+ WORD] @TO@ private, static, final, long, [LFH_OFFSET_FOR_FILENAME_LENGTH=WORD + SHORT + SHORT+ SHORT+ SHORT+ SHORT+ WORD+ WORD+ (long)WORD] @AT@ 38237 @LENGTH@ 539
---UPD VariableDeclarationFragment@@LFH_OFFSET_FOR_FILENAME_LENGTH=WORD + SHORT + SHORT+ SHORT+ SHORT+ SHORT+ WORD+ WORD+ WORD @TO@ LFH_OFFSET_FOR_FILENAME_LENGTH=WORD + SHORT + SHORT+ SHORT+ SHORT+ SHORT+ WORD+ WORD+ (long)WORD @AT@ 38263 @LENGTH@ 512
------UPD InfixExpression@@WORD + SHORT + SHORT+ SHORT+ SHORT+ SHORT+ WORD+ WORD+ WORD @TO@ WORD + SHORT + SHORT+ SHORT+ SHORT+ SHORT+ WORD+ WORD+ (long)WORD @AT@ 38342 @LENGTH@ 433
---------INS CastExpression@@(long)WORD @TO@ InfixExpression@@WORD + SHORT + SHORT+ SHORT+ SHORT+ SHORT+ WORD+ WORD+ WORD @AT@ 38771 @LENGTH@ 11
------------INS PrimitiveType@@long @TO@ CastExpression@@(long)WORD @AT@ 38772 @LENGTH@ 4
------------INS SimpleName@@WORD @TO@ CastExpression@@(long)WORD @AT@ 38778 @LENGTH@ 4
---------DEL SimpleName@@WORD @AT@ 38771 @LENGTH@ 4


UPD ReturnStatement@@MethodInvocation:resolver.resolveIndexForEntity(mappingContext.getPersistentEntity(type)) @TO@ MethodInvocation:resolver.resolveIndexForEntity(mappingContext.getRequiredPersistentEntity(type)) @AT@ 41144 @LENGTH@ 80
---UPD MethodInvocation@@resolver.resolveIndexForEntity(mappingContext.getPersistentEntity(type)) @TO@ resolver.resolveIndexForEntity(mappingContext.getRequiredPersistentEntity(type)) @AT@ 41151 @LENGTH@ 72
------UPD SimpleName@@MethodName:resolveIndexForEntity:[mappingContext.getPersistentEntity(type)] @TO@ MethodName:resolveIndexForEntity:[mappingContext.getRequiredPersistentEntity(type)] @AT@ 41160 @LENGTH@ 63
---------UPD MethodInvocation@@mappingContext.getPersistentEntity(type) @TO@ mappingContext.getRequiredPersistentEntity(type) @AT@ 41182 @LENGTH@ 40
------------UPD SimpleName@@MethodName:getPersistentEntity:[type] @TO@ MethodName:getRequiredPersistentEntity:[type] @AT@ 41197 @LENGTH@ 25


UPD FieldDeclaration@@private, static, final, Pattern, [pattern=Pattern.compile("\\{(.*?)\\}")] @TO@ private, static, final, Pattern, [PATTERN=Pattern.compile("\\{(.*?)\\}")] @AT@ 1587 @LENGTH@ 70
---UPD VariableDeclarationFragment@@pattern=Pattern.compile("\\{(.*?)\\}") @TO@ PATTERN=Pattern.compile("\\{(.*?)\\}") @AT@ 1616 @LENGTH@ 40
------UPD SimpleName@@pattern @TO@ PATTERN @AT@ 1616 @LENGTH@ 7


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<HazelcastSetComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<HazelcastSetComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5547 @LENGTH@ 345
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 5551 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5551 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  ComponentCustomizer<HazelcastSetComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ ThenBody:{  for (  ComponentCustomizer<HazelcastSetComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5607 @LENGTH@ 285
------UPD EnhancedForStatement@@for (ComponentCustomizer<HazelcastSetComponent> configurer : customizers) {  LOGGER.debug("Configure component {}, with configurer {}",component,configurer);  configurer.customize(component);} @TO@ for (ComponentCustomizer<HazelcastSetComponent> customizer : customizers) {  LOGGER.debug("Configure component {}, with customizer {}",component,customizer);  customizer.customize(component);} @AT@ 5621 @LENGTH@ 261
---------UPD SingleVariableDeclaration@@ComponentCustomizer<HazelcastSetComponent> configurer @TO@ ComponentCustomizer<HazelcastSetComponent> customizer @AT@ 5626 @LENGTH@ 53
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5669 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5713 @LENGTH@ 106
------------UPD MethodInvocation@@LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5713 @LENGTH@ 105
---------------UPD SimpleName@@MethodName:debug:["Configure component {}, with configurer {}", component, configurer] @TO@ MethodName:debug:["Configure component {}, with customizer {}", component, customizer] @AT@ 5720 @LENGTH@ 98
------------------UPD StringLiteral@@"Configure component {}, with configurer {}" @TO@ "Configure component {}, with customizer {}" @AT@ 5726 @LENGTH@ 44
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5807 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(component) @TO@ MethodInvocation:customizer.customize(component) @AT@ 5836 @LENGTH@ 32
------------UPD MethodInvocation@@configurer.customize(component) @TO@ customizer.customize(component) @AT@ 5836 @LENGTH@ 31
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5836 @LENGTH@ 10


INS MethodDeclaration@@public, void, MethodName:initializesNullCollectionsOnAppend,  @TO@ TypeDeclaration@@[public]AddOperationTests,  @AT@ 3207 @LENGTH@ 243
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:initializesNullCollectionsOnAppend,  @AT@ 3207 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:initializesNullCollectionsOnAppend,  @AT@ 3214 @LENGTH@ 4
---INS SimpleName@@MethodName:initializesNullCollectionsOnAppend @TO@ MethodDeclaration@@public, void, MethodName:initializesNullCollectionsOnAppend,  @AT@ 3219 @LENGTH@ 34
---INS VariableDeclarationStatement@@Todo todo=new Todo(1L,"description",false); @TO@ MethodDeclaration@@public, void, MethodName:initializesNullCollectionsOnAppend,  @AT@ 3261 @LENGTH@ 47
------INS SimpleType@@Todo @TO@ VariableDeclarationStatement@@Todo todo=new Todo(1L,"description",false); @AT@ 3261 @LENGTH@ 4
------INS VariableDeclarationFragment@@todo=new Todo(1L,"description",false) @TO@ VariableDeclarationStatement@@Todo todo=new Todo(1L,"description",false); @AT@ 3266 @LENGTH@ 41
---------INS SimpleName@@todo @TO@ VariableDeclarationFragment@@todo=new Todo(1L,"description",false) @AT@ 3266 @LENGTH@ 4
---------INS ClassInstanceCreation@@Todo[1L, "description", false] @TO@ VariableDeclarationFragment@@todo=new Todo(1L,"description",false) @AT@ 3273 @LENGTH@ 34
------------INS New@@new @TO@ ClassInstanceCreation@@Todo[1L, "description", false] @AT@ 3273 @LENGTH@ 3
------------INS SimpleType@@Todo @TO@ ClassInstanceCreation@@Todo[1L, "description", false] @AT@ 3277 @LENGTH@ 4
------------INS NumberLiteral@@1L @TO@ ClassInstanceCreation@@Todo[1L, "description", false] @AT@ 3282 @LENGTH@ 2
------------INS StringLiteral@@"description" @TO@ ClassInstanceCreation@@Todo[1L, "description", false] @AT@ 3286 @LENGTH@ 13
------------INS BooleanLiteral@@false @TO@ ClassInstanceCreation@@Todo[1L, "description", false] @AT@ 3301 @LENGTH@ 5
---INS ExpressionStatement@@MethodInvocation:new AddOperation("/uninitialized/-","Text").perform(todo,Todo.class) @TO@ MethodDeclaration@@public, void, MethodName:initializesNullCollectionsOnAppend,  @AT@ 3312 @LENGTH@ 71
------INS MethodInvocation@@new AddOperation("/uninitialized/-","Text").perform(todo,Todo.class) @TO@ ExpressionStatement@@MethodInvocation:new AddOperation("/uninitialized/-","Text").perform(todo,Todo.class) @AT@ 3312 @LENGTH@ 70
---------INS ClassInstanceCreation@@AddOperation["/uninitialized/-", "Text"] @TO@ MethodInvocation@@new AddOperation("/uninitialized/-","Text").perform(todo,Todo.class) @AT@ 3312 @LENGTH@ 44
------------INS New@@new @TO@ ClassInstanceCreation@@AddOperation["/uninitialized/-", "Text"] @AT@ 3312 @LENGTH@ 3
------------INS SimpleType@@AddOperation @TO@ ClassInstanceCreation@@AddOperation["/uninitialized/-", "Text"] @AT@ 3316 @LENGTH@ 12
------------INS StringLiteral@@"/uninitialized/-" @TO@ ClassInstanceCreation@@AddOperation["/uninitialized/-", "Text"] @AT@ 3329 @LENGTH@ 18
------------INS StringLiteral@@"Text" @TO@ ClassInstanceCreation@@AddOperation["/uninitialized/-", "Text"] @AT@ 3349 @LENGTH@ 6
---------INS SimpleName@@MethodName:perform:[todo, Todo.class] @TO@ MethodInvocation@@new AddOperation("/uninitialized/-","Text").perform(todo,Todo.class) @AT@ 3357 @LENGTH@ 25
------------INS SimpleName@@todo @TO@ SimpleName@@MethodName:perform:[todo, Todo.class] @AT@ 3365 @LENGTH@ 4
------------INS TypeLiteral@@Todo.class @TO@ SimpleName@@MethodName:perform:[todo, Todo.class] @AT@ 3371 @LENGTH@ 10
---INS ExpressionStatement@@MethodInvocation:assertThat(todo.getUninitialized()).containsExactly("Text") @TO@ MethodDeclaration@@public, void, MethodName:initializesNullCollectionsOnAppend,  @AT@ 3387 @LENGTH@ 60
------INS MethodInvocation@@assertThat(todo.getUninitialized()).containsExactly("Text") @TO@ ExpressionStatement@@MethodInvocation:assertThat(todo.getUninitialized()).containsExactly("Text") @AT@ 3387 @LENGTH@ 59
---------INS MethodInvocation@@MethodName:assertThat:[todo.getUninitialized()] @TO@ MethodInvocation@@assertThat(todo.getUninitialized()).containsExactly("Text") @AT@ 3387 @LENGTH@ 35
------------INS MethodInvocation@@todo.getUninitialized() @TO@ MethodInvocation@@MethodName:assertThat:[todo.getUninitialized()] @AT@ 3398 @LENGTH@ 23
---------------INS SimpleName@@Name:todo @TO@ MethodInvocation@@todo.getUninitialized() @AT@ 3398 @LENGTH@ 4
---------------INS SimpleName@@MethodName:getUninitialized:[] @TO@ MethodInvocation@@todo.getUninitialized() @AT@ 3403 @LENGTH@ 18
---------INS SimpleName@@MethodName:containsExactly:["Text"] @TO@ MethodInvocation@@assertThat(todo.getUninitialized()).containsExactly("Text") @AT@ 3423 @LENGTH@ 23
------------INS StringLiteral@@"Text" @TO@ SimpleName@@MethodName:containsExactly:["Text"] @AT@ 3439 @LENGTH@ 6


UPD VariableDeclarationStatement@@ReturnedType returnedType=processor.withDynamicProjection(accessor).getReturnedType(); @TO@ ReturnedType returnedType=processor.withDynamicProjection(Optional.of(accessor)).getReturnedType(); @AT@ 3604 @LENGTH@ 88
---UPD VariableDeclarationFragment@@returnedType=processor.withDynamicProjection(accessor).getReturnedType() @TO@ returnedType=processor.withDynamicProjection(Optional.of(accessor)).getReturnedType() @AT@ 3617 @LENGTH@ 74
------UPD MethodInvocation@@processor.withDynamicProjection(accessor).getReturnedType() @TO@ processor.withDynamicProjection(Optional.of(accessor)).getReturnedType() @AT@ 3632 @LENGTH@ 59
---------UPD MethodInvocation@@MethodName:withDynamicProjection:[accessor] @TO@ MethodName:withDynamicProjection:[Optional.of(accessor)] @AT@ 3632 @LENGTH@ 41
------------DEL SimpleName@@accessor @AT@ 3664 @LENGTH@ 8
------------INS MethodInvocation@@Optional.of(accessor) @TO@ MethodInvocation@@MethodName:withDynamicProjection:[accessor] @AT@ 3692 @LENGTH@ 21
---------------INS SimpleName@@Name:Optional @TO@ MethodInvocation@@Optional.of(accessor) @AT@ 3692 @LENGTH@ 8
---------------INS SimpleName@@MethodName:of:[accessor] @TO@ MethodInvocation@@Optional.of(accessor) @AT@ 3701 @LENGTH@ 12
------------------INS SimpleName@@accessor @TO@ SimpleName@@MethodName:of:[accessor] @AT@ 3704 @LENGTH@ 8


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled(); @AT@ 5260 @LENGTH@ 160
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5268 @LENGTH@ 151
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5268 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5285 @LENGTH@ 134
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 5285 @LENGTH@ 64
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5285 @LENGTH@ 35
---------UPD MethodInvocation@@componentConfiguration.getConfigurer().isEnabled() @TO@ componentConfiguration.getCustomizer().isEnabled() @AT@ 5369 @LENGTH@ 50
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5369 @LENGTH@ 38


DEL FieldDeclaration@@private, static, final, Random, [RANDOM=new Random()] @AT@ 1118 @LENGTH@ 50
---DEL Modifier@@private @AT@ 1118 @LENGTH@ 7
---DEL Modifier@@static @AT@ 1126 @LENGTH@ 6
---DEL Modifier@@final @AT@ 1133 @LENGTH@ 5
---DEL SimpleType@@Random @AT@ 1139 @LENGTH@ 6
---DEL VariableDeclarationFragment@@RANDOM=new Random() @AT@ 1146 @LENGTH@ 21
------DEL SimpleName@@RANDOM @AT@ 1146 @LENGTH@ 6
------DEL ClassInstanceCreation@@Random[] @AT@ 1155 @LENGTH@ 12
---------DEL New@@new @AT@ 1155 @LENGTH@ 3
---------DEL SimpleType@@Random @AT@ 1159 @LENGTH@ 6


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  DataFormatCustomizer<MimeMultipartDataFormat> configurer : customizers) {    LOGGER.debug("Configure dataformat {}, with configurer {}",dataformat,configurer);    configurer.customize(dataformat);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  DataFormatCustomizer<MimeMultipartDataFormat> customizer : customizers) {    LOGGER.debug("Configure dataformat {}, with customizer {}",dataformat,customizer);    customizer.customize(dataformat);  }} @AT@ 5475 @LENGTH@ 432
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 5479 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5479 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  DataFormatCustomizer<MimeMultipartDataFormat> configurer : customizers) {    LOGGER.debug("Configure dataformat {}, with configurer {}",dataformat,configurer);    configurer.customize(dataformat);  }} @TO@ ThenBody:{  for (  DataFormatCustomizer<MimeMultipartDataFormat> customizer : customizers) {    LOGGER.debug("Configure dataformat {}, with customizer {}",dataformat,customizer);    customizer.customize(dataformat);  }} @AT@ 5535 @LENGTH@ 372
------UPD EnhancedForStatement@@for (DataFormatCustomizer<MimeMultipartDataFormat> configurer : customizers) {  LOGGER.debug("Configure dataformat {}, with configurer {}",dataformat,configurer);  configurer.customize(dataformat);} @TO@ for (DataFormatCustomizer<MimeMultipartDataFormat> customizer : customizers) {  LOGGER.debug("Configure dataformat {}, with customizer {}",dataformat,customizer);  customizer.customize(dataformat);} @AT@ 5557 @LENGTH@ 332
---------UPD SingleVariableDeclaration@@DataFormatCustomizer<MimeMultipartDataFormat> configurer @TO@ DataFormatCustomizer<MimeMultipartDataFormat> customizer @AT@ 5562 @LENGTH@ 56
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5608 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure dataformat {}, with configurer {}",dataformat,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure dataformat {}, with customizer {}",dataformat,customizer) @AT@ 5660 @LENGTH@ 149
------------UPD MethodInvocation@@LOGGER.debug("Configure dataformat {}, with configurer {}",dataformat,configurer) @TO@ LOGGER.debug("Configure dataformat {}, with customizer {}",dataformat,customizer) @AT@ 5660 @LENGTH@ 148
---------------UPD SimpleName@@MethodName:debug:["Configure dataformat {}, with configurer {}", dataformat, configurer] @TO@ MethodName:debug:["Configure dataformat {}, with customizer {}", dataformat, customizer] @AT@ 5667 @LENGTH@ 141
------------------UPD StringLiteral@@"Configure dataformat {}, with configurer {}" @TO@ "Configure dataformat {}, with customizer {}" @AT@ 5706 @LENGTH@ 45
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5797 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(dataformat) @TO@ MethodInvocation:customizer.customize(dataformat) @AT@ 5834 @LENGTH@ 33
------------UPD MethodInvocation@@configurer.customize(dataformat) @TO@ customizer.customize(dataformat) @AT@ 5834 @LENGTH@ 32
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5834 @LENGTH@ 10


UPD FieldDeclaration@@protected, static, int, [MAX_VALUE_LENGTH=1000] @TO@ protected, static, final, int, [MAX_VALUE_LENGTH=1000] @AT@ 1426 @LENGTH@ 45
---INS Modifier@@final @TO@ FieldDeclaration@@protected, static, int, [MAX_VALUE_LENGTH=1000] @AT@ 1449 @LENGTH@ 5


UPD VariableDeclarationStatement@@Map map=new HashMap(); @TO@ Map<String,Object> map=new HashMap<>(); @AT@ 5891 @LENGTH@ 24
---INS ParameterizedType@@Map<String,Object> @TO@ VariableDeclarationStatement@@Map map=new HashMap(); @AT@ 5891 @LENGTH@ 18
------INS SimpleType@@Map @TO@ ParameterizedType@@Map<String,Object> @AT@ 5891 @LENGTH@ 3
------INS SimpleType@@String @TO@ ParameterizedType@@Map<String,Object> @AT@ 5895 @LENGTH@ 6
------INS SimpleType@@Object @TO@ ParameterizedType@@Map<String,Object> @AT@ 5902 @LENGTH@ 6
---DEL SimpleType@@Map @AT@ 5891 @LENGTH@ 3
---UPD VariableDeclarationFragment@@map=new HashMap() @TO@ map=new HashMap<>() @AT@ 5895 @LENGTH@ 19
------UPD ClassInstanceCreation@@HashMap[] @TO@ HashMap<>[] @AT@ 5901 @LENGTH@ 13
---------DEL SimpleType@@HashMap @AT@ 5905 @LENGTH@ 7
---------INS ParameterizedType@@HashMap<> @TO@ ClassInstanceCreation@@HashMap[] @AT@ 5920 @LENGTH@ 9
------------INS SimpleType@@HashMap @TO@ ParameterizedType@@HashMap<> @AT@ 5920 @LENGTH@ 7


UPD ExpressionStatement@@MethodInvocation:when(mappingContext.getPersistentEntity(Person.class)).thenReturn(entity) @TO@ MethodInvocation:when(mappingContext.getPersistentEntity(Person.class)).thenReturn(Optional.of(entity)) @AT@ 2622 @LENGTH@ 74
---UPD MethodInvocation@@when(mappingContext.getPersistentEntity(Person.class)).thenReturn(entity) @TO@ when(mappingContext.getPersistentEntity(Person.class)).thenReturn(Optional.of(entity)) @AT@ 2622 @LENGTH@ 73
------UPD SimpleName@@MethodName:thenReturn:[entity] @TO@ MethodName:thenReturn:[Optional.of(entity)] @AT@ 2677 @LENGTH@ 18
---------INS MethodInvocation@@Optional.of(entity) @TO@ SimpleName@@MethodName:thenReturn:[entity] @AT@ 2728 @LENGTH@ 19
------------INS SimpleName@@Name:Optional @TO@ MethodInvocation@@Optional.of(entity) @AT@ 2728 @LENGTH@ 8
------------INS SimpleName@@MethodName:of:[entity] @TO@ MethodInvocation@@Optional.of(entity) @AT@ 2737 @LENGTH@ 10
---------------MOV SimpleName@@entity @TO@ SimpleName@@MethodName:of:[entity] @AT@ 2688 @LENGTH@ 6


UPD ExpressionStatement@@MethodInvocation:sb.append(ESCAPED_QUOTE).append(RESULT).append("\":\"").append(state.name()).append("\",") @TO@ MethodInvocation:sb.append(ESCAPED_QUOTE).append(RESULT).append("\":\"").append(state.name()).append("\"") @AT@ 2855 @LENGTH@ 91
---UPD MethodInvocation@@sb.append(ESCAPED_QUOTE).append(RESULT).append("\":\"").append(state.name()).append("\",") @TO@ sb.append(ESCAPED_QUOTE).append(RESULT).append("\":\"").append(state.name()).append("\"") @AT@ 2855 @LENGTH@ 90
------UPD SimpleName@@MethodName:append:["\","] @TO@ MethodName:append:["\""] @AT@ 2932 @LENGTH@ 13
---------UPD StringLiteral@@"\"," @TO@ "\"" @AT@ 2939 @LENGTH@ 5


DEL MethodDeclaration@@public, void, MethodName:shouldComplainOnInvalidStringUrisConvertingToStrings,  @AT@ 1238 @LENGTH@ 124
---DEL Modifier@@public @AT@ 1238 @LENGTH@ 6
---DEL PrimitiveType@@void @AT@ 1245 @LENGTH@ 4
---DEL SimpleName@@MethodName:shouldComplainOnInvalidStringUrisConvertingToStrings @AT@ 1250 @LENGTH@ 52
---DEL ExpressionStatement@@MethodInvocation:UriTypeConverter.toCharSequence(INVALID) @AT@ 1315 @LENGTH@ 41
------DEL MethodInvocation@@UriTypeConverter.toCharSequence(INVALID) @AT@ 1315 @LENGTH@ 40
---------DEL SimpleName@@Name:UriTypeConverter @AT@ 1315 @LENGTH@ 16
---------DEL SimpleName@@MethodName:toCharSequence:[INVALID] @AT@ 1332 @LENGTH@ 23
------------DEL SimpleName@@INVALID @AT@ 1347 @LENGTH@ 7


INS MethodDeclaration@@public, void, MethodName:addsItemsToNestedList,  @TO@ TypeDeclaration@@[public]AddOperationTests,  @AT@ 2380 @LENGTH@ 221
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:addsItemsToNestedList,  @AT@ 2380 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:addsItemsToNestedList,  @AT@ 2387 @LENGTH@ 4
---INS SimpleName@@MethodName:addsItemsToNestedList @TO@ MethodDeclaration@@public, void, MethodName:addsItemsToNestedList,  @AT@ 2392 @LENGTH@ 21
---INS VariableDeclarationStatement@@Todo todo=new Todo(1L,"description",false); @TO@ MethodDeclaration@@public, void, MethodName:addsItemsToNestedList,  @AT@ 2421 @LENGTH@ 47
------INS SimpleType@@Todo @TO@ VariableDeclarationStatement@@Todo todo=new Todo(1L,"description",false); @AT@ 2421 @LENGTH@ 4
------INS VariableDeclarationFragment@@todo=new Todo(1L,"description",false) @TO@ VariableDeclarationStatement@@Todo todo=new Todo(1L,"description",false); @AT@ 2426 @LENGTH@ 41
---------INS SimpleName@@todo @TO@ VariableDeclarationFragment@@todo=new Todo(1L,"description",false) @AT@ 2426 @LENGTH@ 4
---------INS ClassInstanceCreation@@Todo[1L, "description", false] @TO@ VariableDeclarationFragment@@todo=new Todo(1L,"description",false) @AT@ 2433 @LENGTH@ 34
------------INS New@@new @TO@ ClassInstanceCreation@@Todo[1L, "description", false] @AT@ 2433 @LENGTH@ 3
------------INS SimpleType@@Todo @TO@ ClassInstanceCreation@@Todo[1L, "description", false] @AT@ 2437 @LENGTH@ 4
------------INS NumberLiteral@@1L @TO@ ClassInstanceCreation@@Todo[1L, "description", false] @AT@ 2442 @LENGTH@ 2
------------INS StringLiteral@@"description" @TO@ ClassInstanceCreation@@Todo[1L, "description", false] @AT@ 2446 @LENGTH@ 13
------------INS BooleanLiteral@@false @TO@ ClassInstanceCreation@@Todo[1L, "description", false] @AT@ 2461 @LENGTH@ 5
---INS ExpressionStatement@@MethodInvocation:new AddOperation("/items/-","Some text.").perform(todo,Todo.class) @TO@ MethodDeclaration@@public, void, MethodName:addsItemsToNestedList,  @AT@ 2472 @LENGTH@ 69
------INS MethodInvocation@@new AddOperation("/items/-","Some text.").perform(todo,Todo.class) @TO@ ExpressionStatement@@MethodInvocation:new AddOperation("/items/-","Some text.").perform(todo,Todo.class) @AT@ 2472 @LENGTH@ 68
---------INS ClassInstanceCreation@@AddOperation["/items/-", "Some text."] @TO@ MethodInvocation@@new AddOperation("/items/-","Some text.").perform(todo,Todo.class) @AT@ 2472 @LENGTH@ 42
------------INS New@@new @TO@ ClassInstanceCreation@@AddOperation["/items/-", "Some text."] @AT@ 2472 @LENGTH@ 3
------------INS SimpleType@@AddOperation @TO@ ClassInstanceCreation@@AddOperation["/items/-", "Some text."] @AT@ 2476 @LENGTH@ 12
------------INS StringLiteral@@"/items/-" @TO@ ClassInstanceCreation@@AddOperation["/items/-", "Some text."] @AT@ 2489 @LENGTH@ 10
------------INS StringLiteral@@"Some text." @TO@ ClassInstanceCreation@@AddOperation["/items/-", "Some text."] @AT@ 2501 @LENGTH@ 12
---------INS SimpleName@@MethodName:perform:[todo, Todo.class] @TO@ MethodInvocation@@new AddOperation("/items/-","Some text.").perform(todo,Todo.class) @AT@ 2515 @LENGTH@ 25
------------INS SimpleName@@todo @TO@ SimpleName@@MethodName:perform:[todo, Todo.class] @AT@ 2523 @LENGTH@ 4
------------INS TypeLiteral@@Todo.class @TO@ SimpleName@@MethodName:perform:[todo, Todo.class] @AT@ 2529 @LENGTH@ 10
---INS ExpressionStatement@@MethodInvocation:assertThat(todo.getItems().get(0),is("Some text.")) @TO@ MethodDeclaration@@public, void, MethodName:addsItemsToNestedList,  @AT@ 2545 @LENGTH@ 53
------INS MethodInvocation@@assertThat(todo.getItems().get(0),is("Some text.")) @TO@ ExpressionStatement@@MethodInvocation:assertThat(todo.getItems().get(0),is("Some text.")) @AT@ 2545 @LENGTH@ 52
---------INS SimpleName@@MethodName:assertThat:[todo.getItems().get(0), is("Some text.")] @TO@ MethodInvocation@@assertThat(todo.getItems().get(0),is("Some text.")) @AT@ 2545 @LENGTH@ 52
------------INS MethodInvocation@@todo.getItems().get(0) @TO@ SimpleName@@MethodName:assertThat:[todo.getItems().get(0), is("Some text.")] @AT@ 2556 @LENGTH@ 22
---------------INS MethodInvocation@@MethodName:getItems:[] @TO@ MethodInvocation@@todo.getItems().get(0) @AT@ 2556 @LENGTH@ 15
---------------INS SimpleName@@Name:todo @TO@ MethodInvocation@@todo.getItems().get(0) @AT@ 2556 @LENGTH@ 4
---------------INS SimpleName@@MethodName:get:[0] @TO@ MethodInvocation@@todo.getItems().get(0) @AT@ 2572 @LENGTH@ 6
------------------INS NumberLiteral@@0 @TO@ SimpleName@@MethodName:get:[0] @AT@ 2576 @LENGTH@ 1
------------INS MethodInvocation@@is("Some text.") @TO@ SimpleName@@MethodName:assertThat:[todo.getItems().get(0), is("Some text.")] @AT@ 2580 @LENGTH@ 16
---------------INS SimpleName@@MethodName:is:["Some text."] @TO@ MethodInvocation@@is("Some text.") @AT@ 2580 @LENGTH@ 16
------------------INS StringLiteral@@"Some text." @TO@ SimpleName@@MethodName:is:["Some text."] @AT@ 2583 @LENGTH@ 12
---------------INS SimpleName@@MethodName:is:["Some text."] @TO@ MethodInvocation@@is("Some text.") @AT@ 2580 @LENGTH@ 16
------------------INS StringLiteral@@"Some text." @TO@ SimpleName@@MethodName:is:["Some text."] @AT@ 2583 @LENGTH@ 12


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<RestletComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<RestletComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5446 @LENGTH@ 340
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 5450 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5450 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  ComponentCustomizer<RestletComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ ThenBody:{  for (  ComponentCustomizer<RestletComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5506 @LENGTH@ 280
------UPD EnhancedForStatement@@for (ComponentCustomizer<RestletComponent> configurer : customizers) {  LOGGER.debug("Configure component {}, with configurer {}",component,configurer);  configurer.customize(component);} @TO@ for (ComponentCustomizer<RestletComponent> customizer : customizers) {  LOGGER.debug("Configure component {}, with customizer {}",component,customizer);  customizer.customize(component);} @AT@ 5520 @LENGTH@ 256
---------UPD SingleVariableDeclaration@@ComponentCustomizer<RestletComponent> configurer @TO@ ComponentCustomizer<RestletComponent> customizer @AT@ 5525 @LENGTH@ 48
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5563 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5607 @LENGTH@ 106
------------UPD MethodInvocation@@LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5607 @LENGTH@ 105
---------------UPD SimpleName@@MethodName:debug:["Configure component {}, with configurer {}", component, configurer] @TO@ MethodName:debug:["Configure component {}, with customizer {}", component, customizer] @AT@ 5614 @LENGTH@ 98
------------------UPD StringLiteral@@"Configure component {}, with configurer {}" @TO@ "Configure component {}, with customizer {}" @AT@ 5620 @LENGTH@ 44
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5701 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(component) @TO@ MethodInvocation:customizer.customize(component) @AT@ 5730 @LENGTH@ 32
------------UPD MethodInvocation@@configurer.customize(component) @TO@ customizer.customize(component) @AT@ 5730 @LENGTH@ 31
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5730 @LENGTH@ 10


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled(); @AT@ 5226 @LENGTH@ 160
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5234 @LENGTH@ 151
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5234 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5251 @LENGTH@ 134
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 5251 @LENGTH@ 64
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5251 @LENGTH@ 35
---------UPD MethodInvocation@@componentConfiguration.getConfigurer().isEnabled() @TO@ componentConfiguration.getCustomizer().isEnabled() @AT@ 5335 @LENGTH@ 50
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5335 @LENGTH@ 38


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && dataformatConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && dataformatConfiguration.getCustomizer().isEnabled(); @AT@ 5075 @LENGTH@ 177
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && dataformatConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && dataformatConfiguration.getCustomizer().isEnabled() @AT@ 5083 @LENGTH@ 168
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5083 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && dataformatConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && dataformatConfiguration.getCustomizer().isEnabled() @AT@ 5100 @LENGTH@ 151
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 5100 @LENGTH@ 72
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5100 @LENGTH@ 35
---------UPD MethodInvocation@@dataformatConfiguration.getConfigurer().isEnabled() @TO@ dataformatConfiguration.getCustomizer().isEnabled() @AT@ 5200 @LENGTH@ 51
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5200 @LENGTH@ 39


DEL MethodDeclaration@@public, voidMethodName:ListenerExecutionFailedException, String msg, Throwable cause,  @AT@ 1323 @LENGTH@ 99
---DEL Modifier@@public @AT@ 1323 @LENGTH@ 6
---DEL SimpleName@@MethodName:ListenerExecutionFailedException @AT@ 1330 @LENGTH@ 32
---DEL SingleVariableDeclaration@@String msg @AT@ 1363 @LENGTH@ 10
------DEL SimpleType@@String @AT@ 1363 @LENGTH@ 6
------DEL SimpleName@@msg @AT@ 1370 @LENGTH@ 3
---DEL SingleVariableDeclaration@@Throwable cause @AT@ 1375 @LENGTH@ 15
------DEL SimpleType@@Throwable @AT@ 1375 @LENGTH@ 9
------DEL SimpleName@@cause @AT@ 1385 @LENGTH@ 5
---DEL ConstructorInvocation@@this(msg,cause,null); @AT@ 1396 @LENGTH@ 23
------DEL SimpleName@@msg @AT@ 1401 @LENGTH@ 3
------DEL SimpleName@@cause @AT@ 1406 @LENGTH@ 5
------DEL NullLiteral@@null @AT@ 1413 @LENGTH@ 4


INS ExpressionStatement@@MethodInvocation:template.stop() @TO@ MethodDeclaration@@public, void, MethodName:testSendAndReceiveFromVolatileQueueAfterImplicitRemoval, Exception,  @AT@ 12721 @LENGTH@ 16
---INS MethodInvocation@@template.stop() @TO@ ExpressionStatement@@MethodInvocation:template.stop() @AT@ 12721 @LENGTH@ 15
------INS SimpleName@@Name:template @TO@ MethodInvocation@@template.stop() @AT@ 12721 @LENGTH@ 8
------INS SimpleName@@MethodName:stop:[] @TO@ MethodInvocation@@template.stop() @AT@ 12730 @LENGTH@ 6


UPD VariableDeclarationStatement@@Map<String,?> response=accessTokenConverter.convertAccessToken(token,authentication); @TO@ Map<String,Object> response=(Map<String,Object>)accessTokenConverter.convertAccessToken(token,authentication); @AT@ 3562 @LENGTH@ 89
---UPD ParameterizedType@@Map<String,?> @TO@ Map<String,Object> @AT@ 3562 @LENGTH@ 14
------INS SimpleType@@Object @TO@ ParameterizedType@@Map<String,?> @AT@ 3574 @LENGTH@ 6
------DEL WildcardType@@? @AT@ 3574 @LENGTH@ 1
---UPD VariableDeclarationFragment@@response=accessTokenConverter.convertAccessToken(token,authentication) @TO@ response=(Map<String,Object>)accessTokenConverter.convertAccessToken(token,authentication) @AT@ 3577 @LENGTH@ 73
------INS CastExpression@@(Map<String,Object>)accessTokenConverter.convertAccessToken(token,authentication) @TO@ VariableDeclarationFragment@@response=accessTokenConverter.convertAccessToken(token,authentication) @AT@ 3593 @LENGTH@ 83
---------MOV MethodInvocation@@accessTokenConverter.convertAccessToken(token,authentication) @TO@ CastExpression@@(Map<String,Object>)accessTokenConverter.convertAccessToken(token,authentication) @AT@ 3588 @LENGTH@ 62
---------INS ParameterizedType@@Map<String,Object> @TO@ CastExpression@@(Map<String,Object>)accessTokenConverter.convertAccessToken(token,authentication) @AT@ 3594 @LENGTH@ 19
------------INS SimpleType@@Map @TO@ ParameterizedType@@Map<String,Object> @AT@ 3594 @LENGTH@ 3
------------INS SimpleType@@String @TO@ ParameterizedType@@Map<String,Object> @AT@ 3598 @LENGTH@ 6
------------INS SimpleType@@Object @TO@ ParameterizedType@@Map<String,Object> @AT@ 3606 @LENGTH@ 6


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && languageConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && languageConfiguration.getCustomizer().isEnabled(); @AT@ 4595 @LENGTH@ 159
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && languageConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && languageConfiguration.getCustomizer().isEnabled() @AT@ 4603 @LENGTH@ 150
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 4603 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && languageConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && languageConfiguration.getCustomizer().isEnabled() @AT@ 4620 @LENGTH@ 133
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 4620 @LENGTH@ 64
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 4620 @LENGTH@ 35
---------UPD MethodInvocation@@languageConfiguration.getConfigurer().isEnabled() @TO@ languageConfiguration.getCustomizer().isEnabled() @AT@ 4704 @LENGTH@ 49
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 4704 @LENGTH@ 37


UPD ExpressionStatement@@MethodInvocation:assertThat(repo.findOne(id),is(userWithId)) @TO@ MethodInvocation:assertThat(repo.findOne(id),is(Optional.of(userWithId))) @AT@ 2865 @LENGTH@ 45
---UPD MethodInvocation@@assertThat(repo.findOne(id),is(userWithId)) @TO@ assertThat(repo.findOne(id),is(Optional.of(userWithId))) @AT@ 2865 @LENGTH@ 44
------UPD SimpleName@@MethodName:assertThat:[repo.findOne(id), is(userWithId)] @TO@ MethodName:assertThat:[repo.findOne(id), is(Optional.of(userWithId))] @AT@ 2865 @LENGTH@ 44
---------UPD MethodInvocation@@is(userWithId) @TO@ is(Optional.of(userWithId)) @AT@ 2894 @LENGTH@ 14
------------UPD SimpleName@@MethodName:is:[userWithId] @TO@ MethodName:of:[userWithId] @AT@ 2894 @LENGTH@ 14
------------UPD SimpleName@@MethodName:is:[userWithId] @TO@ MethodName:of:[userWithId] @AT@ 2894 @LENGTH@ 14
------------INS SimpleName@@MethodName:is:[Optional.of(userWithId)] @TO@ MethodInvocation@@is(userWithId) @AT@ 2921 @LENGTH@ 27
---------------INS MethodInvocation@@Optional.of(userWithId) @TO@ SimpleName@@MethodName:is:[Optional.of(userWithId)] @AT@ 2924 @LENGTH@ 23
------------------MOV SimpleName@@MethodName:is:[userWithId] @TO@ MethodInvocation@@Optional.of(userWithId) @AT@ 2894 @LENGTH@ 14
------------------MOV SimpleName@@MethodName:is:[userWithId] @TO@ MethodInvocation@@Optional.of(userWithId) @AT@ 2894 @LENGTH@ 14
------------------INS SimpleName@@Name:Optional @TO@ MethodInvocation@@Optional.of(userWithId) @AT@ 2924 @LENGTH@ 8


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<LogComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<LogComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5378 @LENGTH@ 336
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 5382 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5382 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  ComponentCustomizer<LogComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ ThenBody:{  for (  ComponentCustomizer<LogComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5438 @LENGTH@ 276
------UPD EnhancedForStatement@@for (ComponentCustomizer<LogComponent> configurer : customizers) {  LOGGER.debug("Configure component {}, with configurer {}",component,configurer);  configurer.customize(component);} @TO@ for (ComponentCustomizer<LogComponent> customizer : customizers) {  LOGGER.debug("Configure component {}, with customizer {}",component,customizer);  customizer.customize(component);} @AT@ 5452 @LENGTH@ 252
---------UPD SingleVariableDeclaration@@ComponentCustomizer<LogComponent> configurer @TO@ ComponentCustomizer<LogComponent> customizer @AT@ 5457 @LENGTH@ 44
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5491 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5535 @LENGTH@ 106
------------UPD MethodInvocation@@LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5535 @LENGTH@ 105
---------------UPD SimpleName@@MethodName:debug:["Configure component {}, with configurer {}", component, configurer] @TO@ MethodName:debug:["Configure component {}, with customizer {}", component, customizer] @AT@ 5542 @LENGTH@ 98
------------------UPD StringLiteral@@"Configure component {}, with configurer {}" @TO@ "Configure component {}, with customizer {}" @AT@ 5548 @LENGTH@ 44
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5629 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(component) @TO@ MethodInvocation:customizer.customize(component) @AT@ 5658 @LENGTH@ 32
------------UPD MethodInvocation@@configurer.customize(component) @TO@ customizer.customize(component) @AT@ 5658 @LENGTH@ 31
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5658 @LENGTH@ 10


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<MvelComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<MvelComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5395 @LENGTH@ 337
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 5399 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5399 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  ComponentCustomizer<MvelComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ ThenBody:{  for (  ComponentCustomizer<MvelComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5455 @LENGTH@ 277
------UPD EnhancedForStatement@@for (ComponentCustomizer<MvelComponent> configurer : customizers) {  LOGGER.debug("Configure component {}, with configurer {}",component,configurer);  configurer.customize(component);} @TO@ for (ComponentCustomizer<MvelComponent> customizer : customizers) {  LOGGER.debug("Configure component {}, with customizer {}",component,customizer);  customizer.customize(component);} @AT@ 5469 @LENGTH@ 253
---------UPD SingleVariableDeclaration@@ComponentCustomizer<MvelComponent> configurer @TO@ ComponentCustomizer<MvelComponent> customizer @AT@ 5474 @LENGTH@ 45
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5509 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5553 @LENGTH@ 106
------------UPD MethodInvocation@@LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5553 @LENGTH@ 105
---------------UPD SimpleName@@MethodName:debug:["Configure component {}, with configurer {}", component, configurer] @TO@ MethodName:debug:["Configure component {}, with customizer {}", component, customizer] @AT@ 5560 @LENGTH@ 98
------------------UPD StringLiteral@@"Configure component {}, with configurer {}" @TO@ "Configure component {}, with customizer {}" @AT@ 5566 @LENGTH@ 44
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5647 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(component) @TO@ MethodInvocation:customizer.customize(component) @AT@ 5676 @LENGTH@ 32
------------UPD MethodInvocation@@configurer.customize(component) @TO@ customizer.customize(component) @AT@ 5676 @LENGTH@ 31
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5676 @LENGTH@ 10


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && dataformatConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && dataformatConfiguration.getCustomizer().isEnabled(); @AT@ 5197 @LENGTH@ 177
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && dataformatConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && dataformatConfiguration.getCustomizer().isEnabled() @AT@ 5205 @LENGTH@ 168
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5205 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && dataformatConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && dataformatConfiguration.getCustomizer().isEnabled() @AT@ 5222 @LENGTH@ 151
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 5222 @LENGTH@ 72
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5222 @LENGTH@ 35
---------UPD MethodInvocation@@dataformatConfiguration.getConfigurer().isEnabled() @TO@ dataformatConfiguration.getCustomizer().isEnabled() @AT@ 5322 @LENGTH@ 51
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5322 @LENGTH@ 39


UPD ExpressionStatement@@MethodInvocation:Assert.notNull(token.getDetails()) @TO@ MethodInvocation:Assert.notNull(token.getDetails(),"token.getDetails() cannot be null") @AT@ 2528 @LENGTH@ 35
---UPD MethodInvocation@@Assert.notNull(token.getDetails()) @TO@ Assert.notNull(token.getDetails(),"token.getDetails() cannot be null") @AT@ 2528 @LENGTH@ 34
------UPD SimpleName@@MethodName:notNull:[token.getDetails()] @TO@ MethodName:notNull:[token.getDetails(), "token.getDetails() cannot be null"] @AT@ 2535 @LENGTH@ 27
---------INS StringLiteral@@"token.getDetails() cannot be null" @TO@ SimpleName@@MethodName:notNull:[token.getDetails()] @AT@ 2563 @LENGTH@ 35


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && dataformatConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && dataformatConfiguration.getCustomizer().isEnabled(); @AT@ 5136 @LENGTH@ 177
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && dataformatConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && dataformatConfiguration.getCustomizer().isEnabled() @AT@ 5144 @LENGTH@ 168
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5144 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && dataformatConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && dataformatConfiguration.getCustomizer().isEnabled() @AT@ 5161 @LENGTH@ 151
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 5161 @LENGTH@ 72
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5161 @LENGTH@ 35
---------UPD MethodInvocation@@dataformatConfiguration.getConfigurer().isEnabled() @TO@ dataformatConfiguration.getCustomizer().isEnabled() @AT@ 5261 @LENGTH@ 51
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5261 @LENGTH@ 39


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled(); @AT@ 5226 @LENGTH@ 160
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5234 @LENGTH@ 151
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5234 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5251 @LENGTH@ 134
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 5251 @LENGTH@ 64
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5251 @LENGTH@ 35
---------UPD MethodInvocation@@componentConfiguration.getConfigurer().isEnabled() @TO@ componentConfiguration.getCustomizer().isEnabled() @AT@ 5335 @LENGTH@ 50
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5335 @LENGTH@ 38


UPD ExpressionStatement@@MethodInvocation:LOG.warn("Error processing the exchange " + exchange + " from reactive-streams",exchange.getException()) @TO@ MethodInvocation:getExceptionHandler().handleException("Error processing exchange",exchange,exchange.getException()) @AT@ 2852 @LENGTH@ 106
---UPD MethodInvocation@@LOG.warn("Error processing the exchange " + exchange + " from reactive-streams",exchange.getException()) @TO@ getExceptionHandler().handleException("Error processing exchange",exchange,exchange.getException()) @AT@ 2852 @LENGTH@ 105
------INS MethodInvocation@@MethodName:getExceptionHandler:[] @TO@ MethodInvocation@@LOG.warn("Error processing the exchange " + exchange + " from reactive-streams",exchange.getException()) @AT@ 2852 @LENGTH@ 21
------DEL SimpleName@@Name:LOG @AT@ 2852 @LENGTH@ 3
------UPD SimpleName@@MethodName:warn:["Error processing the exchange " + exchange + " from reactive-streams", exchange.getException()] @TO@ MethodName:handleException:["Error processing exchange", exchange, exchange.getException()] @AT@ 2856 @LENGTH@ 101
---------DEL InfixExpression@@"Error processing the exchange " + exchange + " from reactive-streams" @AT@ 2861 @LENGTH@ 70
------------DEL StringLiteral@@"Error processing the exchange " @AT@ 2861 @LENGTH@ 32
------------DEL Operator@@+ @AT@ 2893 @LENGTH@ 1
------------DEL SimpleName@@exchange @AT@ 2896 @LENGTH@ 8
------------DEL StringLiteral@@" from reactive-streams" @AT@ 2907 @LENGTH@ 24
---------INS StringLiteral@@"Error processing exchange" @TO@ SimpleName@@MethodName:warn:["Error processing the exchange " + exchange + " from reactive-streams", exchange.getException()] @AT@ 2890 @LENGTH@ 27
---------INS SimpleName@@exchange @TO@ SimpleName@@MethodName:warn:["Error processing the exchange " + exchange + " from reactive-streams", exchange.getException()] @AT@ 2919 @LENGTH@ 8


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<SolrComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<SolrComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5439 @LENGTH@ 337
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 5443 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5443 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  ComponentCustomizer<SolrComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ ThenBody:{  for (  ComponentCustomizer<SolrComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5499 @LENGTH@ 277
------UPD EnhancedForStatement@@for (ComponentCustomizer<SolrComponent> configurer : customizers) {  LOGGER.debug("Configure component {}, with configurer {}",component,configurer);  configurer.customize(component);} @TO@ for (ComponentCustomizer<SolrComponent> customizer : customizers) {  LOGGER.debug("Configure component {}, with customizer {}",component,customizer);  customizer.customize(component);} @AT@ 5513 @LENGTH@ 253
---------UPD SingleVariableDeclaration@@ComponentCustomizer<SolrComponent> configurer @TO@ ComponentCustomizer<SolrComponent> customizer @AT@ 5518 @LENGTH@ 45
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5553 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5597 @LENGTH@ 106
------------UPD MethodInvocation@@LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5597 @LENGTH@ 105
---------------UPD SimpleName@@MethodName:debug:["Configure component {}, with configurer {}", component, configurer] @TO@ MethodName:debug:["Configure component {}, with customizer {}", component, customizer] @AT@ 5604 @LENGTH@ 98
------------------UPD StringLiteral@@"Configure component {}, with configurer {}" @TO@ "Configure component {}, with customizer {}" @AT@ 5610 @LENGTH@ 44
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5691 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(component) @TO@ MethodInvocation:customizer.customize(component) @AT@ 5720 @LENGTH@ 32
------------UPD MethodInvocation@@configurer.customize(component) @TO@ customizer.customize(component) @AT@ 5720 @LENGTH@ 31
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5720 @LENGTH@ 10


INS IfStatement@@if (watch != null) {  long timeTaken=watch.taken();  EventHelper.notifyExchangeSent(resourceExchange.getContext(),resourceExchange,destination,timeTaken);} @TO@ MethodDeclaration@@public, boolean, MethodName:process, final Exchange exchange, final AsyncCallback callback,  @AT@ 9908 @LENGTH@ 260
---INS InfixExpression@@watch != null @TO@ IfStatement@@if (watch != null) {  long timeTaken=watch.taken();  EventHelper.notifyExchangeSent(resourceExchange.getContext(),resourceExchange,destination,timeTaken);} @AT@ 9912 @LENGTH@ 13
------INS SimpleName@@watch @TO@ InfixExpression@@watch != null @AT@ 9912 @LENGTH@ 5
------INS Operator@@!= @TO@ InfixExpression@@watch != null @AT@ 9917 @LENGTH@ 2
------INS NullLiteral@@null @TO@ InfixExpression@@watch != null @AT@ 9921 @LENGTH@ 4
---INS Block@@ThenBody:{  long timeTaken=watch.taken();  EventHelper.notifyExchangeSent(resourceExchange.getContext(),resourceExchange,destination,timeTaken);} @TO@ IfStatement@@if (watch != null) {  long timeTaken=watch.taken();  EventHelper.notifyExchangeSent(resourceExchange.getContext(),resourceExchange,destination,timeTaken);} @AT@ 9927 @LENGTH@ 241
------MOV VariableDeclarationStatement@@long timeTaken=watch.taken(); @TO@ Block@@ThenBody:{  long timeTaken=watch.taken();  EventHelper.notifyExchangeSent(resourceExchange.getContext(),resourceExchange,destination,timeTaken);} @AT@ 9973 @LENGTH@ 31
------MOV ExpressionStatement@@MethodInvocation:EventHelper.notifyExchangeSent(resourceExchange.getContext(),resourceExchange,destination,timeTaken) @TO@ Block@@ThenBody:{  long timeTaken=watch.taken();  EventHelper.notifyExchangeSent(resourceExchange.getContext(),resourceExchange,destination,timeTaken);} @AT@ 10013 @LENGTH@ 104


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<BoxComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<BoxComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5378 @LENGTH@ 336
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 5382 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5382 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  ComponentCustomizer<BoxComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ ThenBody:{  for (  ComponentCustomizer<BoxComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5438 @LENGTH@ 276
------UPD EnhancedForStatement@@for (ComponentCustomizer<BoxComponent> configurer : customizers) {  LOGGER.debug("Configure component {}, with configurer {}",component,configurer);  configurer.customize(component);} @TO@ for (ComponentCustomizer<BoxComponent> customizer : customizers) {  LOGGER.debug("Configure component {}, with customizer {}",component,customizer);  customizer.customize(component);} @AT@ 5452 @LENGTH@ 252
---------UPD SingleVariableDeclaration@@ComponentCustomizer<BoxComponent> configurer @TO@ ComponentCustomizer<BoxComponent> customizer @AT@ 5457 @LENGTH@ 44
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5491 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5535 @LENGTH@ 106
------------UPD MethodInvocation@@LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5535 @LENGTH@ 105
---------------UPD SimpleName@@MethodName:debug:["Configure component {}, with configurer {}", component, configurer] @TO@ MethodName:debug:["Configure component {}, with customizer {}", component, customizer] @AT@ 5542 @LENGTH@ 98
------------------UPD StringLiteral@@"Configure component {}, with configurer {}" @TO@ "Configure component {}, with customizer {}" @AT@ 5548 @LENGTH@ 44
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5629 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(component) @TO@ MethodInvocation:customizer.customize(component) @AT@ 5658 @LENGTH@ 32
------------UPD MethodInvocation@@configurer.customize(component) @TO@ customizer.customize(component) @AT@ 5658 @LENGTH@ 31
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5658 @LENGTH@ 10


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<BeanValidatorComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<BeanValidatorComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5584 @LENGTH@ 346
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 5588 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5588 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  ComponentCustomizer<BeanValidatorComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ ThenBody:{  for (  ComponentCustomizer<BeanValidatorComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5644 @LENGTH@ 286
------UPD EnhancedForStatement@@for (ComponentCustomizer<BeanValidatorComponent> configurer : customizers) {  LOGGER.debug("Configure component {}, with configurer {}",component,configurer);  configurer.customize(component);} @TO@ for (ComponentCustomizer<BeanValidatorComponent> customizer : customizers) {  LOGGER.debug("Configure component {}, with customizer {}",component,customizer);  customizer.customize(component);} @AT@ 5658 @LENGTH@ 262
---------UPD SingleVariableDeclaration@@ComponentCustomizer<BeanValidatorComponent> configurer @TO@ ComponentCustomizer<BeanValidatorComponent> customizer @AT@ 5663 @LENGTH@ 54
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5707 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5751 @LENGTH@ 106
------------UPD MethodInvocation@@LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5751 @LENGTH@ 105
---------------UPD SimpleName@@MethodName:debug:["Configure component {}, with configurer {}", component, configurer] @TO@ MethodName:debug:["Configure component {}, with customizer {}", component, customizer] @AT@ 5758 @LENGTH@ 98
------------------UPD StringLiteral@@"Configure component {}, with configurer {}" @TO@ "Configure component {}, with customizer {}" @AT@ 5764 @LENGTH@ 44
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5845 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(component) @TO@ MethodInvocation:customizer.customize(component) @AT@ 5874 @LENGTH@ 32
------------UPD MethodInvocation@@configurer.customize(component) @TO@ customizer.customize(component) @AT@ 5874 @LENGTH@ 31
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5874 @LENGTH@ 10


UPD VariableDeclarationStatement@@Class<?> rawType=ResolvableType.forType(type).getRawClass(); @TO@ Class<?> rawType=ResolvableType.forType(type,owner).resolve(Object.class); @AT@ 4361 @LENGTH@ 62
---UPD VariableDeclarationFragment@@rawType=ResolvableType.forType(type).getRawClass() @TO@ rawType=ResolvableType.forType(type,owner).resolve(Object.class) @AT@ 4370 @LENGTH@ 52
------UPD MethodInvocation@@ResolvableType.forType(type).getRawClass() @TO@ ResolvableType.forType(type,owner).resolve(Object.class) @AT@ 4380 @LENGTH@ 42
---------UPD MethodInvocation@@MethodName:forType:[type] @TO@ MethodName:forType:[type, owner] @AT@ 4380 @LENGTH@ 28
------------INS SimpleName@@owner @TO@ MethodInvocation@@MethodName:forType:[type] @AT@ 4503 @LENGTH@ 5
---------UPD SimpleName@@MethodName:getRawClass:[] @TO@ MethodName:resolve:[Object.class] @AT@ 4409 @LENGTH@ 13
------------INS TypeLiteral@@Object.class @TO@ SimpleName@@MethodName:getRawClass:[] @AT@ 4518 @LENGTH@ 12


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<Mina2Component> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<Mina2Component> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5412 @LENGTH@ 338
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 5416 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5416 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  ComponentCustomizer<Mina2Component> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ ThenBody:{  for (  ComponentCustomizer<Mina2Component> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5472 @LENGTH@ 278
------UPD EnhancedForStatement@@for (ComponentCustomizer<Mina2Component> configurer : customizers) {  LOGGER.debug("Configure component {}, with configurer {}",component,configurer);  configurer.customize(component);} @TO@ for (ComponentCustomizer<Mina2Component> customizer : customizers) {  LOGGER.debug("Configure component {}, with customizer {}",component,customizer);  customizer.customize(component);} @AT@ 5486 @LENGTH@ 254
---------UPD SingleVariableDeclaration@@ComponentCustomizer<Mina2Component> configurer @TO@ ComponentCustomizer<Mina2Component> customizer @AT@ 5491 @LENGTH@ 46
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5527 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5571 @LENGTH@ 106
------------UPD MethodInvocation@@LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5571 @LENGTH@ 105
---------------UPD SimpleName@@MethodName:debug:["Configure component {}, with configurer {}", component, configurer] @TO@ MethodName:debug:["Configure component {}, with customizer {}", component, customizer] @AT@ 5578 @LENGTH@ 98
------------------UPD StringLiteral@@"Configure component {}, with configurer {}" @TO@ "Configure component {}, with customizer {}" @AT@ 5584 @LENGTH@ 44
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5665 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(component) @TO@ MethodInvocation:customizer.customize(component) @AT@ 5694 @LENGTH@ 32
------------UPD MethodInvocation@@configurer.customize(component) @TO@ customizer.customize(component) @AT@ 5694 @LENGTH@ 31
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5694 @LENGTH@ 10


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  DataFormatCustomizer<BindyFixedLengthDataFormat> configurer : customizers) {    LOGGER.debug("Configure dataformat {}, with configurer {}",dataformat,configurer);    configurer.customize(dataformat);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  DataFormatCustomizer<BindyFixedLengthDataFormat> customizer : customizers) {    LOGGER.debug("Configure dataformat {}, with customizer {}",dataformat,customizer);    customizer.customize(dataformat);  }} @AT@ 5502 @LENGTH@ 435
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 5506 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5506 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  DataFormatCustomizer<BindyFixedLengthDataFormat> configurer : customizers) {    LOGGER.debug("Configure dataformat {}, with configurer {}",dataformat,configurer);    configurer.customize(dataformat);  }} @TO@ ThenBody:{  for (  DataFormatCustomizer<BindyFixedLengthDataFormat> customizer : customizers) {    LOGGER.debug("Configure dataformat {}, with customizer {}",dataformat,customizer);    customizer.customize(dataformat);  }} @AT@ 5562 @LENGTH@ 375
------UPD EnhancedForStatement@@for (DataFormatCustomizer<BindyFixedLengthDataFormat> configurer : customizers) {  LOGGER.debug("Configure dataformat {}, with configurer {}",dataformat,configurer);  configurer.customize(dataformat);} @TO@ for (DataFormatCustomizer<BindyFixedLengthDataFormat> customizer : customizers) {  LOGGER.debug("Configure dataformat {}, with customizer {}",dataformat,customizer);  customizer.customize(dataformat);} @AT@ 5584 @LENGTH@ 335
---------UPD SingleVariableDeclaration@@DataFormatCustomizer<BindyFixedLengthDataFormat> configurer @TO@ DataFormatCustomizer<BindyFixedLengthDataFormat> customizer @AT@ 5589 @LENGTH@ 59
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5638 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure dataformat {}, with configurer {}",dataformat,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure dataformat {}, with customizer {}",dataformat,customizer) @AT@ 5690 @LENGTH@ 149
------------UPD MethodInvocation@@LOGGER.debug("Configure dataformat {}, with configurer {}",dataformat,configurer) @TO@ LOGGER.debug("Configure dataformat {}, with customizer {}",dataformat,customizer) @AT@ 5690 @LENGTH@ 148
---------------UPD SimpleName@@MethodName:debug:["Configure dataformat {}, with configurer {}", dataformat, configurer] @TO@ MethodName:debug:["Configure dataformat {}, with customizer {}", dataformat, customizer] @AT@ 5697 @LENGTH@ 141
------------------UPD StringLiteral@@"Configure dataformat {}, with configurer {}" @TO@ "Configure dataformat {}, with customizer {}" @AT@ 5736 @LENGTH@ 45
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5827 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(dataformat) @TO@ MethodInvocation:customizer.customize(dataformat) @AT@ 5864 @LENGTH@ 33
------------UPD MethodInvocation@@configurer.customize(dataformat) @TO@ customizer.customize(dataformat) @AT@ 5864 @LENGTH@ 32
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5864 @LENGTH@ 10


UPD MethodDeclaration@@public, static, void, MethodName:registerNumericType, PrimitiveCategory primitiveCategory, int level,  @TO@ public, static, synchronized, void, MethodName:registerNumericType, PrimitiveCategory primitiveCategory, int level,  @AT@ 32217 @LENGTH@ 184
---INS Modifier@@synchronized @TO@ MethodDeclaration@@public, static, void, MethodName:registerNumericType, PrimitiveCategory primitiveCategory, int level,  @AT@ 32231 @LENGTH@ 12


UPD ExpressionStatement@@MethodInvocation:Assert.notNull(bankDao) @TO@ MethodInvocation:Assert.notNull(bankDao,"bankDao cannot be null") @AT@ 812 @LENGTH@ 24
---UPD MethodInvocation@@Assert.notNull(bankDao) @TO@ Assert.notNull(bankDao,"bankDao cannot be null") @AT@ 812 @LENGTH@ 23
------UPD SimpleName@@MethodName:notNull:[bankDao] @TO@ MethodName:notNull:[bankDao, "bankDao cannot be null"] @AT@ 819 @LENGTH@ 16
---------INS StringLiteral@@"bankDao cannot be null" @TO@ SimpleName@@MethodName:notNull:[bankDao] @AT@ 836 @LENGTH@ 24


UPD FieldDeclaration@@private, static, final, Pattern, [pattern=Pattern.compile(JASYPT_REGEX)] @TO@ private, static, final, Pattern, [PATTERN=Pattern.compile(JASYPT_REGEX)] @AT@ 1821 @LENGTH@ 69
---UPD VariableDeclarationFragment@@pattern=Pattern.compile(JASYPT_REGEX) @TO@ PATTERN=Pattern.compile(JASYPT_REGEX) @AT@ 1850 @LENGTH@ 39
------UPD SimpleName@@pattern @TO@ PATTERN @AT@ 1850 @LENGTH@ 7


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<KubernetesComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<KubernetesComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5497 @LENGTH@ 343
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 5501 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5501 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  ComponentCustomizer<KubernetesComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ ThenBody:{  for (  ComponentCustomizer<KubernetesComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5557 @LENGTH@ 283
------UPD EnhancedForStatement@@for (ComponentCustomizer<KubernetesComponent> configurer : customizers) {  LOGGER.debug("Configure component {}, with configurer {}",component,configurer);  configurer.customize(component);} @TO@ for (ComponentCustomizer<KubernetesComponent> customizer : customizers) {  LOGGER.debug("Configure component {}, with customizer {}",component,customizer);  customizer.customize(component);} @AT@ 5571 @LENGTH@ 259
---------UPD SingleVariableDeclaration@@ComponentCustomizer<KubernetesComponent> configurer @TO@ ComponentCustomizer<KubernetesComponent> customizer @AT@ 5576 @LENGTH@ 51
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5617 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5661 @LENGTH@ 106
------------UPD MethodInvocation@@LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5661 @LENGTH@ 105
---------------UPD SimpleName@@MethodName:debug:["Configure component {}, with configurer {}", component, configurer] @TO@ MethodName:debug:["Configure component {}, with customizer {}", component, customizer] @AT@ 5668 @LENGTH@ 98
------------------UPD StringLiteral@@"Configure component {}, with configurer {}" @TO@ "Configure component {}, with customizer {}" @AT@ 5674 @LENGTH@ 44
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5755 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(component) @TO@ MethodInvocation:customizer.customize(component) @AT@ 5784 @LENGTH@ 32
------------UPD MethodInvocation@@configurer.customize(component) @TO@ customizer.customize(component) @AT@ 5784 @LENGTH@ 31
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5784 @LENGTH@ 10


UPD TypeDeclaration@@[public]UriTypeConverter,  @TO@ [public, final]UriTypeConverter,  @AT@ 1103 @LENGTH@ 471
---INS Modifier@@final @TO@ TypeDeclaration@@[public]UriTypeConverter,  @AT@ 1110 @LENGTH@ 5


UPD ExpressionStatement@@MethodInvocation:Assert.notNull("X509Certificate cannot be null") @TO@ MethodInvocation:Assert.notNull(certificates,"X509Certificate cannot be null") @AT@ 11510 @LENGTH@ 49
---UPD MethodInvocation@@Assert.notNull("X509Certificate cannot be null") @TO@ Assert.notNull(certificates,"X509Certificate cannot be null") @AT@ 11510 @LENGTH@ 48
------UPD SimpleName@@MethodName:notNull:["X509Certificate cannot be null"] @TO@ MethodName:notNull:[certificates, "X509Certificate cannot be null"] @AT@ 11517 @LENGTH@ 41
---------INS SimpleName@@certificates @TO@ SimpleName@@MethodName:notNull:["X509Certificate cannot be null"] @AT@ 11525 @LENGTH@ 12


UPD IfStatement@@if (!Boolean.parseBoolean(camelContext.getGlobalOptions().get(ACCESS_EXTERNAL_DTD))) {  try {    factory.setProperty(XMLConstants.ACCESS_EXTERNAL_DTD,"");  } catch (  SAXException e) {    LOG.error(e.getMessage(),e);    throw new IllegalStateException(e);  }} @TO@ if (camelContext != null && !Boolean.parseBoolean(camelContext.getGlobalOptions().get(ACCESS_EXTERNAL_DTD))) {  try {    factory.setProperty(XMLConstants.ACCESS_EXTERNAL_DTD,"");  } catch (  SAXException e) {    LOG.error(e.getMessage(),e);    throw new IllegalStateException(e);  }} @AT@ 5854 @LENGTH@ 341
---INS InfixExpression@@camelContext != null && !Boolean.parseBoolean(camelContext.getGlobalOptions().get(ACCESS_EXTERNAL_DTD)) @TO@ IfStatement@@if (!Boolean.parseBoolean(camelContext.getGlobalOptions().get(ACCESS_EXTERNAL_DTD))) {  try {    factory.setProperty(XMLConstants.ACCESS_EXTERNAL_DTD,"");  } catch (  SAXException e) {    LOG.error(e.getMessage(),e);    throw new IllegalStateException(e);  }} @AT@ 5858 @LENGTH@ 103
------MOV PrefixExpression@@!Boolean.parseBoolean(camelContext.getGlobalOptions().get(ACCESS_EXTERNAL_DTD)) @TO@ InfixExpression@@camelContext != null && !Boolean.parseBoolean(camelContext.getGlobalOptions().get(ACCESS_EXTERNAL_DTD)) @AT@ 5858 @LENGTH@ 79
------INS InfixExpression@@camelContext != null @TO@ InfixExpression@@camelContext != null && !Boolean.parseBoolean(camelContext.getGlobalOptions().get(ACCESS_EXTERNAL_DTD)) @AT@ 5858 @LENGTH@ 20
---------INS SimpleName@@camelContext @TO@ InfixExpression@@camelContext != null @AT@ 5858 @LENGTH@ 12
---------INS Operator@@!= @TO@ InfixExpression@@camelContext != null @AT@ 5870 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@camelContext != null @AT@ 5874 @LENGTH@ 4
------INS Operator@@&& @TO@ InfixExpression@@camelContext != null && !Boolean.parseBoolean(camelContext.getGlobalOptions().get(ACCESS_EXTERNAL_DTD)) @AT@ 5878 @LENGTH@ 2


UPD IfStatement@@if (httpResponse.getStatusCode() != HTTPResponse.SC_OK) {  UserInfoErrorResponse userInfoErrorResponse=UserInfoErrorResponse.parse(httpResponse);  ErrorObject errorObject=userInfoErrorResponse.getErrorObject();  OAuth2Error oauth2Error=new OAuth2Error(errorObject.getCode(),errorObject.getDescription(),(errorObject.getURI() != null ? errorObject.getURI().toString() : null));  throw new OAuth2AuthenticationException(oauth2Error,oauth2Error.toString());} @TO@ if (httpResponse.getStatusCode() != HTTPResponse.SC_OK) {  UserInfoErrorResponse userInfoErrorResponse=UserInfoErrorResponse.parse(httpResponse);  ErrorObject errorObject=userInfoErrorResponse.getErrorObject();  StringBuilder errorDescription=new StringBuilder();  errorDescription.append("An error occurred while attempting to access the UserInfo Endpoint -> ");  errorDescription.append("Error details: [");  errorDescription.append("UserInfo Uri: ").append(userInfoUri.toString());  errorDescription.append(", Http Status: ").append(errorObject.getHTTPStatusCode());  if (errorObject.getCode() != null) {    errorDescription.append(", Error Code: ").append(errorObject.getCode());  }  if (errorObject.getDescription() != null) {    errorDescription.append(", Error Description: ").append(errorObject.getDescription());  }  errorDescription.append("]");  OAuth2Error oauth2Error=new OAuth2Error(INVALID_USER_INFO_RESPONSE_ERROR_CODE,errorDescription.toString(),null);  throw new OAuth2AuthenticationException(oauth2Error,oauth2Error.toString());} @AT@ 4596 @LENGTH@ 485
---UPD Block@@ThenBody:{  UserInfoErrorResponse userInfoErrorResponse=UserInfoErrorResponse.parse(httpResponse);  ErrorObject errorObject=userInfoErrorResponse.getErrorObject();  OAuth2Error oauth2Error=new OAuth2Error(errorObject.getCode(),errorObject.getDescription(),(errorObject.getURI() != null ? errorObject.getURI().toString() : null));  throw new OAuth2AuthenticationException(oauth2Error,oauth2Error.toString());} @TO@ ThenBody:{  UserInfoErrorResponse userInfoErrorResponse=UserInfoErrorResponse.parse(httpResponse);  ErrorObject errorObject=userInfoErrorResponse.getErrorObject();  StringBuilder errorDescription=new StringBuilder();  errorDescription.append("An error occurred while attempting to access the UserInfo Endpoint -> ");  errorDescription.append("Error details: [");  errorDescription.append("UserInfo Uri: ").append(userInfoUri.toString());  errorDescription.append(", Http Status: ").append(errorObject.getHTTPStatusCode());  if (errorObject.getCode() != null) {    errorDescription.append(", Error Code: ").append(errorObject.getCode());  }  if (errorObject.getDescription() != null) {    errorDescription.append(", Error Description: ").append(errorObject.getDescription());  }  errorDescription.append("]");  OAuth2Error oauth2Error=new OAuth2Error(INVALID_USER_INFO_RESPONSE_ERROR_CODE,errorDescription.toString(),null);  throw new OAuth2AuthenticationException(oauth2Error,oauth2Error.toString());} @AT@ 4652 @LENGTH@ 429
------DEL VariableDeclarationStatement@@OAuth2Error oauth2Error=new OAuth2Error(errorObject.getCode(),errorObject.getDescription(),(errorObject.getURI() != null ? errorObject.getURI().toString() : null)); @AT@ 4821 @LENGTH@ 173
---------DEL VariableDeclarationFragment@@oauth2Error=new OAuth2Error(errorObject.getCode(),errorObject.getDescription(),(errorObject.getURI() != null ? errorObject.getURI().toString() : null)) @AT@ 4833 @LENGTH@ 160
------------DEL ClassInstanceCreation@@OAuth2Error[errorObject.getCode(), errorObject.getDescription(), (errorObject.getURI() != null ? errorObject.getURI().toString() : null)] @AT@ 4847 @LENGTH@ 146
---------------DEL MethodInvocation@@errorObject.getCode() @AT@ 4863 @LENGTH@ 21
---------------DEL MethodInvocation@@errorObject.getDescription() @AT@ 4886 @LENGTH@ 28
---------------DEL ParenthesizedExpression@@(errorObject.getURI() != null ? errorObject.getURI().toString() : null) @AT@ 4921 @LENGTH@ 71
------------------DEL ConditionalExpression@@errorObject.getURI() != null ? errorObject.getURI().toString() : null @AT@ 4922 @LENGTH@ 69
---------------------DEL InfixExpression@@errorObject.getURI() != null @AT@ 4922 @LENGTH@ 28
---------------------DEL MethodInvocation@@errorObject.getURI().toString() @AT@ 4953 @LENGTH@ 31
---------------------DEL NullLiteral@@null @AT@ 4987 @LENGTH@ 4
------INS VariableDeclarationStatement@@StringBuilder errorDescription=new StringBuilder(); @TO@ Block@@ThenBody:{  UserInfoErrorResponse userInfoErrorResponse=UserInfoErrorResponse.parse(httpResponse);  ErrorObject errorObject=userInfoErrorResponse.getErrorObject();  OAuth2Error oauth2Error=new OAuth2Error(errorObject.getCode(),errorObject.getDescription(),(errorObject.getURI() != null ? errorObject.getURI().toString() : null));  throw new OAuth2AuthenticationException(oauth2Error,oauth2Error.toString());} @AT@ 4822 @LENGTH@ 53
---------MOV SimpleType@@OAuth2Error @TO@ VariableDeclarationStatement@@StringBuilder errorDescription=new StringBuilder(); @AT@ 4821 @LENGTH@ 11
---------INS VariableDeclarationFragment@@errorDescription=new StringBuilder() @TO@ VariableDeclarationStatement@@StringBuilder errorDescription=new StringBuilder(); @AT@ 4836 @LENGTH@ 38
------------MOV SimpleName@@oauth2Error @TO@ VariableDeclarationFragment@@errorDescription=new StringBuilder() @AT@ 4833 @LENGTH@ 11
------------INS ClassInstanceCreation@@StringBuilder[] @TO@ VariableDeclarationFragment@@errorDescription=new StringBuilder() @AT@ 4855 @LENGTH@ 19
---------------MOV New@@new @TO@ ClassInstanceCreation@@StringBuilder[] @AT@ 4847 @LENGTH@ 3
---------------MOV SimpleType@@OAuth2Error @TO@ ClassInstanceCreation@@StringBuilder[] @AT@ 4851 @LENGTH@ 11
------INS ExpressionStatement@@MethodInvocation:errorDescription.append("An error occurred while attempting to access the UserInfo Endpoint -> ") @TO@ Block@@ThenBody:{  UserInfoErrorResponse userInfoErrorResponse=UserInfoErrorResponse.parse(httpResponse);  ErrorObject errorObject=userInfoErrorResponse.getErrorObject();  OAuth2Error oauth2Error=new OAuth2Error(errorObject.getCode(),errorObject.getDescription(),(errorObject.getURI() != null ? errorObject.getURI().toString() : null));  throw new OAuth2AuthenticationException(oauth2Error,oauth2Error.toString());} @AT@ 4880 @LENGTH@ 98
---------INS MethodInvocation@@errorDescription.append("An error occurred while attempting to access the UserInfo Endpoint -> ") @TO@ ExpressionStatement@@MethodInvocation:errorDescription.append("An error occurred while attempting to access the UserInfo Endpoint -> ") @AT@ 4880 @LENGTH@ 97
------------INS SimpleName@@Name:errorDescription @TO@ MethodInvocation@@errorDescription.append("An error occurred while attempting to access the UserInfo Endpoint -> ") @AT@ 4880 @LENGTH@ 16
------------INS SimpleName@@MethodName:append:["An error occurred while attempting to access the UserInfo Endpoint -> "] @TO@ MethodInvocation@@errorDescription.append("An error occurred while attempting to access the UserInfo Endpoint -> ") @AT@ 4897 @LENGTH@ 80
---------------INS StringLiteral@@"An error occurred while attempting to access the UserInfo Endpoint -> " @TO@ SimpleName@@MethodName:append:["An error occurred while attempting to access the UserInfo Endpoint -> "] @AT@ 4904 @LENGTH@ 72
------INS ExpressionStatement@@MethodInvocation:errorDescription.append("Error details: [") @TO@ Block@@ThenBody:{  UserInfoErrorResponse userInfoErrorResponse=UserInfoErrorResponse.parse(httpResponse);  ErrorObject errorObject=userInfoErrorResponse.getErrorObject();  OAuth2Error oauth2Error=new OAuth2Error(errorObject.getCode(),errorObject.getDescription(),(errorObject.getURI() != null ? errorObject.getURI().toString() : null));  throw new OAuth2AuthenticationException(oauth2Error,oauth2Error.toString());} @AT@ 4983 @LENGTH@ 44
---------INS MethodInvocation@@errorDescription.append("Error details: [") @TO@ ExpressionStatement@@MethodInvocation:errorDescription.append("Error details: [") @AT@ 4983 @LENGTH@ 43
------------INS SimpleName@@Name:errorDescription @TO@ MethodInvocation@@errorDescription.append("Error details: [") @AT@ 4983 @LENGTH@ 16
------------INS SimpleName@@MethodName:append:["Error details: ["] @TO@ MethodInvocation@@errorDescription.append("Error details: [") @AT@ 5000 @LENGTH@ 26
---------------INS StringLiteral@@"Error details: [" @TO@ SimpleName@@MethodName:append:["Error details: ["] @AT@ 5007 @LENGTH@ 18
------INS ExpressionStatement@@MethodInvocation:errorDescription.append("UserInfo Uri: ").append(userInfoUri.toString()) @TO@ Block@@ThenBody:{  UserInfoErrorResponse userInfoErrorResponse=UserInfoErrorResponse.parse(httpResponse);  ErrorObject errorObject=userInfoErrorResponse.getErrorObject();  OAuth2Error oauth2Error=new OAuth2Error(errorObject.getCode(),errorObject.getDescription(),(errorObject.getURI() != null ? errorObject.getURI().toString() : null));  throw new OAuth2AuthenticationException(oauth2Error,oauth2Error.toString());} @AT@ 5032 @LENGTH@ 73
---------INS MethodInvocation@@errorDescription.append("UserInfo Uri: ").append(userInfoUri.toString()) @TO@ ExpressionStatement@@MethodInvocation:errorDescription.append("UserInfo Uri: ").append(userInfoUri.toString()) @AT@ 5032 @LENGTH@ 72
------------INS MethodInvocation@@MethodName:append:["UserInfo Uri: "] @TO@ MethodInvocation@@errorDescription.append("UserInfo Uri: ").append(userInfoUri.toString()) @AT@ 5032 @LENGTH@ 41
---------------INS StringLiteral@@"UserInfo Uri: " @TO@ MethodInvocation@@MethodName:append:["UserInfo Uri: "] @AT@ 5056 @LENGTH@ 16
------------INS SimpleName@@Name:errorDescription @TO@ MethodInvocation@@errorDescription.append("UserInfo Uri: ").append(userInfoUri.toString()) @AT@ 5032 @LENGTH@ 16
------------INS SimpleName@@MethodName:append:[userInfoUri.toString()] @TO@ MethodInvocation@@errorDescription.append("UserInfo Uri: ").append(userInfoUri.toString()) @AT@ 5074 @LENGTH@ 30
---------------INS MethodInvocation@@userInfoUri.toString() @TO@ SimpleName@@MethodName:append:[userInfoUri.toString()] @AT@ 5081 @LENGTH@ 22
------------------INS SimpleName@@Name:userInfoUri @TO@ MethodInvocation@@userInfoUri.toString() @AT@ 5081 @LENGTH@ 11
------------------INS SimpleName@@MethodName:toString:[] @TO@ MethodInvocation@@userInfoUri.toString() @AT@ 5093 @LENGTH@ 10
------INS ExpressionStatement@@MethodInvocation:errorDescription.append(", Http Status: ").append(errorObject.getHTTPStatusCode()) @TO@ Block@@ThenBody:{  UserInfoErrorResponse userInfoErrorResponse=UserInfoErrorResponse.parse(httpResponse);  ErrorObject errorObject=userInfoErrorResponse.getErrorObject();  OAuth2Error oauth2Error=new OAuth2Error(errorObject.getCode(),errorObject.getDescription(),(errorObject.getURI() != null ? errorObject.getURI().toString() : null));  throw new OAuth2AuthenticationException(oauth2Error,oauth2Error.toString());} @AT@ 5110 @LENGTH@ 83
---------INS MethodInvocation@@errorDescription.append(", Http Status: ").append(errorObject.getHTTPStatusCode()) @TO@ ExpressionStatement@@MethodInvocation:errorDescription.append(", Http Status: ").append(errorObject.getHTTPStatusCode()) @AT@ 5110 @LENGTH@ 82
------------INS MethodInvocation@@MethodName:append:[", Http Status: "] @TO@ MethodInvocation@@errorDescription.append(", Http Status: ").append(errorObject.getHTTPStatusCode()) @AT@ 5110 @LENGTH@ 42
---------------INS StringLiteral@@", Http Status: " @TO@ MethodInvocation@@MethodName:append:[", Http Status: "] @AT@ 5134 @LENGTH@ 17
------------INS SimpleName@@Name:errorDescription @TO@ MethodInvocation@@errorDescription.append(", Http Status: ").append(errorObject.getHTTPStatusCode()) @AT@ 5110 @LENGTH@ 16
------------INS SimpleName@@MethodName:append:[errorObject.getHTTPStatusCode()] @TO@ MethodInvocation@@errorDescription.append(", Http Status: ").append(errorObject.getHTTPStatusCode()) @AT@ 5153 @LENGTH@ 39
---------------INS MethodInvocation@@errorObject.getHTTPStatusCode() @TO@ SimpleName@@MethodName:append:[errorObject.getHTTPStatusCode()] @AT@ 5160 @LENGTH@ 31
------------------INS SimpleName@@Name:errorObject @TO@ MethodInvocation@@errorObject.getHTTPStatusCode() @AT@ 5160 @LENGTH@ 11
------------------INS SimpleName@@MethodName:getHTTPStatusCode:[] @TO@ MethodInvocation@@errorObject.getHTTPStatusCode() @AT@ 5172 @LENGTH@ 19
------INS IfStatement@@if (errorObject.getCode() != null) {  errorDescription.append(", Error Code: ").append(errorObject.getCode());} @TO@ Block@@ThenBody:{  UserInfoErrorResponse userInfoErrorResponse=UserInfoErrorResponse.parse(httpResponse);  ErrorObject errorObject=userInfoErrorResponse.getErrorObject();  OAuth2Error oauth2Error=new OAuth2Error(errorObject.getCode(),errorObject.getDescription(),(errorObject.getURI() != null ? errorObject.getURI().toString() : null));  throw new OAuth2AuthenticationException(oauth2Error,oauth2Error.toString());} @AT@ 5198 @LENGTH@ 120
---------INS InfixExpression@@errorObject.getCode() != null @TO@ IfStatement@@if (errorObject.getCode() != null) {  errorDescription.append(", Error Code: ").append(errorObject.getCode());} @AT@ 5202 @LENGTH@ 29
------------INS MethodInvocation@@errorObject.getCode() @TO@ InfixExpression@@errorObject.getCode() != null @AT@ 5202 @LENGTH@ 21
---------------MOV SimpleName@@Name:errorObject @TO@ MethodInvocation@@errorObject.getCode() @AT@ 4863 @LENGTH@ 11
---------------MOV SimpleName@@MethodName:getCode:[] @TO@ MethodInvocation@@errorObject.getCode() @AT@ 4875 @LENGTH@ 9
------------INS Operator@@!= @TO@ InfixExpression@@errorObject.getCode() != null @AT@ 5223 @LENGTH@ 2
------------INS NullLiteral@@null @TO@ InfixExpression@@errorObject.getCode() != null @AT@ 5227 @LENGTH@ 4
---------INS Block@@ThenBody:{  errorDescription.append(", Error Code: ").append(errorObject.getCode());} @TO@ IfStatement@@if (errorObject.getCode() != null) {  errorDescription.append(", Error Code: ").append(errorObject.getCode());} @AT@ 5233 @LENGTH@ 85
------------INS ExpressionStatement@@MethodInvocation:errorDescription.append(", Error Code: ").append(errorObject.getCode()) @TO@ Block@@ThenBody:{  errorDescription.append(", Error Code: ").append(errorObject.getCode());} @AT@ 5240 @LENGTH@ 72
---------------INS MethodInvocation@@errorDescription.append(", Error Code: ").append(errorObject.getCode()) @TO@ ExpressionStatement@@MethodInvocation:errorDescription.append(", Error Code: ").append(errorObject.getCode()) @AT@ 5240 @LENGTH@ 71
------------------INS MethodInvocation@@MethodName:append:[", Error Code: "] @TO@ MethodInvocation@@errorDescription.append(", Error Code: ").append(errorObject.getCode()) @AT@ 5240 @LENGTH@ 41
---------------------INS StringLiteral@@", Error Code: " @TO@ MethodInvocation@@MethodName:append:[", Error Code: "] @AT@ 5264 @LENGTH@ 16
------------------INS SimpleName@@Name:errorDescription @TO@ MethodInvocation@@errorDescription.append(", Error Code: ").append(errorObject.getCode()) @AT@ 5240 @LENGTH@ 16
------------------INS SimpleName@@MethodName:append:[errorObject.getCode()] @TO@ MethodInvocation@@errorDescription.append(", Error Code: ").append(errorObject.getCode()) @AT@ 5282 @LENGTH@ 29
---------------------INS MethodInvocation@@errorObject.getCode() @TO@ SimpleName@@MethodName:append:[errorObject.getCode()] @AT@ 5289 @LENGTH@ 21
------------------------MOV SimpleName@@Name:errorObject @TO@ MethodInvocation@@errorObject.getCode() @AT@ 4886 @LENGTH@ 11
------------------------MOV SimpleName@@MethodName:getDescription:[] @TO@ MethodInvocation@@errorObject.getCode() @AT@ 4898 @LENGTH@ 16
------INS IfStatement@@if (errorObject.getDescription() != null) {  errorDescription.append(", Error Description: ").append(errorObject.getDescription());} @TO@ Block@@ThenBody:{  UserInfoErrorResponse userInfoErrorResponse=UserInfoErrorResponse.parse(httpResponse);  ErrorObject errorObject=userInfoErrorResponse.getErrorObject();  OAuth2Error oauth2Error=new OAuth2Error(errorObject.getCode(),errorObject.getDescription(),(errorObject.getURI() != null ? errorObject.getURI().toString() : null));  throw new OAuth2AuthenticationException(oauth2Error,oauth2Error.toString());} @AT@ 5323 @LENGTH@ 141
---------INS InfixExpression@@errorObject.getDescription() != null @TO@ IfStatement@@if (errorObject.getDescription() != null) {  errorDescription.append(", Error Description: ").append(errorObject.getDescription());} @AT@ 5327 @LENGTH@ 36
------------MOV MethodInvocation@@errorObject.getURI() @TO@ InfixExpression@@errorObject.getDescription() != null @AT@ 4922 @LENGTH@ 20
---------------UPD SimpleName@@MethodName:getURI:[] @TO@ MethodName:getDescription:[] @AT@ 4934 @LENGTH@ 8
------------MOV Operator@@!= @TO@ InfixExpression@@errorObject.getDescription() != null @AT@ 4942 @LENGTH@ 2
------------MOV NullLiteral@@null @TO@ InfixExpression@@errorObject.getDescription() != null @AT@ 4946 @LENGTH@ 4
---------INS Block@@ThenBody:{  errorDescription.append(", Error Description: ").append(errorObject.getDescription());} @TO@ IfStatement@@if (errorObject.getDescription() != null) {  errorDescription.append(", Error Description: ").append(errorObject.getDescription());} @AT@ 5365 @LENGTH@ 99
------------INS ExpressionStatement@@MethodInvocation:errorDescription.append(", Error Description: ").append(errorObject.getDescription()) @TO@ Block@@ThenBody:{  errorDescription.append(", Error Description: ").append(errorObject.getDescription());} @AT@ 5372 @LENGTH@ 86
---------------INS MethodInvocation@@errorDescription.append(", Error Description: ").append(errorObject.getDescription()) @TO@ ExpressionStatement@@MethodInvocation:errorDescription.append(", Error Description: ").append(errorObject.getDescription()) @AT@ 5372 @LENGTH@ 85
------------------MOV MethodInvocation@@MethodName:getURI:[] @TO@ MethodInvocation@@errorDescription.append(", Error Description: ").append(errorObject.getDescription()) @AT@ 4953 @LENGTH@ 20
---------------------INS StringLiteral@@", Error Description: " @TO@ MethodInvocation@@MethodName:getURI:[] @AT@ 5396 @LENGTH@ 23
------------------MOV SimpleName@@Name:errorObject @TO@ MethodInvocation@@errorDescription.append(", Error Description: ").append(errorObject.getDescription()) @AT@ 4953 @LENGTH@ 11
------------------INS SimpleName@@MethodName:append:[errorObject.getDescription()] @TO@ MethodInvocation@@errorDescription.append(", Error Description: ").append(errorObject.getDescription()) @AT@ 5421 @LENGTH@ 36
---------------------INS MethodInvocation@@errorObject.getDescription() @TO@ SimpleName@@MethodName:append:[errorObject.getDescription()] @AT@ 5428 @LENGTH@ 28
------------------------MOV SimpleName@@MethodName:toString:[] @TO@ MethodInvocation@@errorObject.getDescription() @AT@ 4974 @LENGTH@ 10
------------------------INS SimpleName@@Name:errorObject @TO@ MethodInvocation@@errorObject.getDescription() @AT@ 5428 @LENGTH@ 11
------INS ExpressionStatement@@MethodInvocation:errorDescription.append("]") @TO@ Block@@ThenBody:{  UserInfoErrorResponse userInfoErrorResponse=UserInfoErrorResponse.parse(httpResponse);  ErrorObject errorObject=userInfoErrorResponse.getErrorObject();  OAuth2Error oauth2Error=new OAuth2Error(errorObject.getCode(),errorObject.getDescription(),(errorObject.getURI() != null ? errorObject.getURI().toString() : null));  throw new OAuth2AuthenticationException(oauth2Error,oauth2Error.toString());} @AT@ 5469 @LENGTH@ 29
---------INS MethodInvocation@@errorDescription.append("]") @TO@ ExpressionStatement@@MethodInvocation:errorDescription.append("]") @AT@ 5469 @LENGTH@ 28
------------INS SimpleName@@Name:errorDescription @TO@ MethodInvocation@@errorDescription.append("]") @AT@ 5469 @LENGTH@ 16
------------INS SimpleName@@MethodName:append:["]"] @TO@ MethodInvocation@@errorDescription.append("]") @AT@ 5486 @LENGTH@ 11
---------------INS StringLiteral@@"]" @TO@ SimpleName@@MethodName:append:["]"] @AT@ 5493 @LENGTH@ 3
------INS VariableDeclarationStatement@@OAuth2Error oauth2Error=new OAuth2Error(INVALID_USER_INFO_RESPONSE_ERROR_CODE,errorDescription.toString(),null); @TO@ Block@@ThenBody:{  UserInfoErrorResponse userInfoErrorResponse=UserInfoErrorResponse.parse(httpResponse);  ErrorObject errorObject=userInfoErrorResponse.getErrorObject();  OAuth2Error oauth2Error=new OAuth2Error(errorObject.getCode(),errorObject.getDescription(),(errorObject.getURI() != null ? errorObject.getURI().toString() : null));  throw new OAuth2AuthenticationException(oauth2Error,oauth2Error.toString());} @AT@ 5504 @LENGTH@ 116
---------INS SimpleType@@OAuth2Error @TO@ VariableDeclarationStatement@@OAuth2Error oauth2Error=new OAuth2Error(INVALID_USER_INFO_RESPONSE_ERROR_CODE,errorDescription.toString(),null); @AT@ 5504 @LENGTH@ 11
---------INS VariableDeclarationFragment@@oauth2Error=new OAuth2Error(INVALID_USER_INFO_RESPONSE_ERROR_CODE,errorDescription.toString(),null) @TO@ VariableDeclarationStatement@@OAuth2Error oauth2Error=new OAuth2Error(INVALID_USER_INFO_RESPONSE_ERROR_CODE,errorDescription.toString(),null); @AT@ 5516 @LENGTH@ 103
------------INS SimpleName@@oauth2Error @TO@ VariableDeclarationFragment@@oauth2Error=new OAuth2Error(INVALID_USER_INFO_RESPONSE_ERROR_CODE,errorDescription.toString(),null) @AT@ 5516 @LENGTH@ 11
------------INS ClassInstanceCreation@@OAuth2Error[INVALID_USER_INFO_RESPONSE_ERROR_CODE, errorDescription.toString(), null] @TO@ VariableDeclarationFragment@@oauth2Error=new OAuth2Error(INVALID_USER_INFO_RESPONSE_ERROR_CODE,errorDescription.toString(),null) @AT@ 5530 @LENGTH@ 89
---------------INS New@@new @TO@ ClassInstanceCreation@@OAuth2Error[INVALID_USER_INFO_RESPONSE_ERROR_CODE, errorDescription.toString(), null] @AT@ 5530 @LENGTH@ 3
---------------INS SimpleType@@OAuth2Error @TO@ ClassInstanceCreation@@OAuth2Error[INVALID_USER_INFO_RESPONSE_ERROR_CODE, errorDescription.toString(), null] @AT@ 5534 @LENGTH@ 11
---------------INS SimpleName@@INVALID_USER_INFO_RESPONSE_ERROR_CODE @TO@ ClassInstanceCreation@@OAuth2Error[INVALID_USER_INFO_RESPONSE_ERROR_CODE, errorDescription.toString(), null] @AT@ 5546 @LENGTH@ 37
---------------INS MethodInvocation@@errorDescription.toString() @TO@ ClassInstanceCreation@@OAuth2Error[INVALID_USER_INFO_RESPONSE_ERROR_CODE, errorDescription.toString(), null] @AT@ 5585 @LENGTH@ 27
------------------INS SimpleName@@Name:errorDescription @TO@ MethodInvocation@@errorDescription.toString() @AT@ 5585 @LENGTH@ 16
------------------INS SimpleName@@MethodName:toString:[] @TO@ MethodInvocation@@errorDescription.toString() @AT@ 5602 @LENGTH@ 10
---------------INS NullLiteral@@null @TO@ ClassInstanceCreation@@OAuth2Error[INVALID_USER_INFO_RESPONSE_ERROR_CODE, errorDescription.toString(), null] @AT@ 5614 @LENGTH@ 4


DEL ExpressionStatement@@MethodInvocation:assertTrue(json.contains("\"defaultQueueFactory\": { \"kind\": \"property\", \"label\": \"advanced\", \"required\": \"false\"," + " \"type\": \"object\", \"javaType\": \"org.apache.camel.component.seda.BlockingQueueFactory<org.apache.camel.Exchange>\",")) @AT@ 17796 @LENGTH@ 280
---DEL MethodInvocation@@assertTrue(json.contains("\"defaultQueueFactory\": { \"kind\": \"property\", \"label\": \"advanced\", \"required\": \"false\"," + " \"type\": \"object\", \"javaType\": \"org.apache.camel.component.seda.BlockingQueueFactory<org.apache.camel.Exchange>\",")) @AT@ 17796 @LENGTH@ 279
------DEL SimpleName@@MethodName:assertTrue:[json.contains("\"defaultQueueFactory\": { \"kind\": \"property\", \"label\": \"advanced\", \"required\": \"false\"," + " \"type\": \"object\", \"javaType\": \"org.apache.camel.component.seda.BlockingQueueFactory<org.apache.camel.Exchange>\",")] @AT@ 17796 @LENGTH@ 279
---------DEL MethodInvocation@@json.contains("\"defaultQueueFactory\": { \"kind\": \"property\", \"label\": \"advanced\", \"required\": \"false\"," + " \"type\": \"object\", \"javaType\": \"org.apache.camel.component.seda.BlockingQueueFactory<org.apache.camel.Exchange>\",") @AT@ 17807 @LENGTH@ 267
------------DEL SimpleName@@Name:json @AT@ 17807 @LENGTH@ 4
------------DEL SimpleName@@MethodName:contains:["\"defaultQueueFactory\": { \"kind\": \"property\", \"label\": \"advanced\", \"required\": \"false\"," + " \"type\": \"object\", \"javaType\": \"org.apache.camel.component.seda.BlockingQueueFactory<org.apache.camel.Exchange>\","] @AT@ 17812 @LENGTH@ 262
---------------DEL InfixExpression@@"\"defaultQueueFactory\": { \"kind\": \"property\", \"label\": \"advanced\", \"required\": \"false\"," + " \"type\": \"object\", \"javaType\": \"org.apache.camel.component.seda.BlockingQueueFactory<org.apache.camel.Exchange>\"," @AT@ 17821 @LENGTH@ 252
------------------DEL StringLiteral@@"\"defaultQueueFactory\": { \"kind\": \"property\", \"label\": \"advanced\", \"required\": \"false\"," @AT@ 17821 @LENGTH@ 102
------------------DEL Operator@@+ @AT@ 17923 @LENGTH@ 1
------------------DEL StringLiteral@@" \"type\": \"object\", \"javaType\": \"org.apache.camel.component.seda.BlockingQueueFactory<org.apache.camel.Exchange>\"," @AT@ 17950 @LENGTH@ 123


UPD ExpressionStatement@@MethodInvocation:exchangeMutator.filterClient(mockRest,withUser()).get().uri("/principal").exchange().expectStatus().isOk() @TO@ MethodInvocation:mockRest.filter(exchangeMutator.perClient(withUser())).get().uri("/principal").exchange().expectStatus().isOk() @AT@ 4762 @LENGTH@ 124
---UPD MethodInvocation@@exchangeMutator.filterClient(mockRest,withUser()).get().uri("/principal").exchange().expectStatus().isOk() @TO@ mockRest.filter(exchangeMutator.perClient(withUser())).get().uri("/principal").exchange().expectStatus().isOk() @AT@ 4762 @LENGTH@ 123
------UPD MethodInvocation@@MethodName:filterClient:[mockRest, withUser()] @TO@ MethodName:filter:[exchangeMutator.perClient(withUser())] @AT@ 4762 @LENGTH@ 50
---------INS MethodInvocation@@exchangeMutator.perClient(withUser()) @TO@ MethodInvocation@@MethodName:filterClient:[mockRest, withUser()] @AT@ 4779 @LENGTH@ 37
------------MOV SimpleName@@mockRest @TO@ MethodInvocation@@exchangeMutator.perClient(withUser()) @AT@ 4791 @LENGTH@ 8
------------INS SimpleName@@MethodName:perClient:[withUser()] @TO@ MethodInvocation@@exchangeMutator.perClient(withUser()) @AT@ 4795 @LENGTH@ 21
---------------INS MethodInvocation@@MethodName:withUser:[] @TO@ SimpleName@@MethodName:perClient:[withUser()] @AT@ 4805 @LENGTH@ 10
---------UPD SimpleName@@mockRest @TO@ Name:exchangeMutator @AT@ 4791 @LENGTH@ 8
---------DEL MethodInvocation@@MethodName:withUser:[] @AT@ 4801 @LENGTH@ 10
------UPD SimpleName@@Name:exchangeMutator @TO@ Name:mockRest @AT@ 4762 @LENGTH@ 15


DEL ExpressionStatement@@MethodInvocation:Assert.state(map.containsKey("client_id"),"Client id must be present in response from auth server") @AT@ 4070 @LENGTH@ 101


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<AhcComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<AhcComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5378 @LENGTH@ 336
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 5382 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5382 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  ComponentCustomizer<AhcComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ ThenBody:{  for (  ComponentCustomizer<AhcComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5438 @LENGTH@ 276
------UPD EnhancedForStatement@@for (ComponentCustomizer<AhcComponent> configurer : customizers) {  LOGGER.debug("Configure component {}, with configurer {}",component,configurer);  configurer.customize(component);} @TO@ for (ComponentCustomizer<AhcComponent> customizer : customizers) {  LOGGER.debug("Configure component {}, with customizer {}",component,customizer);  customizer.customize(component);} @AT@ 5452 @LENGTH@ 252
---------UPD SingleVariableDeclaration@@ComponentCustomizer<AhcComponent> configurer @TO@ ComponentCustomizer<AhcComponent> customizer @AT@ 5457 @LENGTH@ 44
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5491 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5535 @LENGTH@ 106
------------UPD MethodInvocation@@LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5535 @LENGTH@ 105
---------------UPD SimpleName@@MethodName:debug:["Configure component {}, with configurer {}", component, configurer] @TO@ MethodName:debug:["Configure component {}, with customizer {}", component, customizer] @AT@ 5542 @LENGTH@ 98
------------------UPD StringLiteral@@"Configure component {}, with configurer {}" @TO@ "Configure component {}, with customizer {}" @AT@ 5548 @LENGTH@ 44
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5629 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(component) @TO@ MethodInvocation:customizer.customize(component) @AT@ 5658 @LENGTH@ 32
------------UPD MethodInvocation@@configurer.customize(component) @TO@ customizer.customize(component) @AT@ 5658 @LENGTH@ 31
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5658 @LENGTH@ 10


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<DozerComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<DozerComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5412 @LENGTH@ 338
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 5416 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5416 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  ComponentCustomizer<DozerComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ ThenBody:{  for (  ComponentCustomizer<DozerComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5472 @LENGTH@ 278
------UPD EnhancedForStatement@@for (ComponentCustomizer<DozerComponent> configurer : customizers) {  LOGGER.debug("Configure component {}, with configurer {}",component,configurer);  configurer.customize(component);} @TO@ for (ComponentCustomizer<DozerComponent> customizer : customizers) {  LOGGER.debug("Configure component {}, with customizer {}",component,customizer);  customizer.customize(component);} @AT@ 5486 @LENGTH@ 254
---------UPD SingleVariableDeclaration@@ComponentCustomizer<DozerComponent> configurer @TO@ ComponentCustomizer<DozerComponent> customizer @AT@ 5491 @LENGTH@ 46
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5527 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5571 @LENGTH@ 106
------------UPD MethodInvocation@@LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5571 @LENGTH@ 105
---------------UPD SimpleName@@MethodName:debug:["Configure component {}, with configurer {}", component, configurer] @TO@ MethodName:debug:["Configure component {}, with customizer {}", component, customizer] @AT@ 5578 @LENGTH@ 98
------------------UPD StringLiteral@@"Configure component {}, with configurer {}" @TO@ "Configure component {}, with customizer {}" @AT@ 5584 @LENGTH@ 44
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5665 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(component) @TO@ MethodInvocation:customizer.customize(component) @AT@ 5694 @LENGTH@ 32
------------UPD MethodInvocation@@configurer.customize(component) @TO@ customizer.customize(component) @AT@ 5694 @LENGTH@ 31
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5694 @LENGTH@ 10


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<SpringIntegrationComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<SpringIntegrationComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5652 @LENGTH@ 350
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 5656 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5656 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  ComponentCustomizer<SpringIntegrationComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ ThenBody:{  for (  ComponentCustomizer<SpringIntegrationComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5712 @LENGTH@ 290
------UPD EnhancedForStatement@@for (ComponentCustomizer<SpringIntegrationComponent> configurer : customizers) {  LOGGER.debug("Configure component {}, with configurer {}",component,configurer);  configurer.customize(component);} @TO@ for (ComponentCustomizer<SpringIntegrationComponent> customizer : customizers) {  LOGGER.debug("Configure component {}, with customizer {}",component,customizer);  customizer.customize(component);} @AT@ 5726 @LENGTH@ 266
---------UPD SingleVariableDeclaration@@ComponentCustomizer<SpringIntegrationComponent> configurer @TO@ ComponentCustomizer<SpringIntegrationComponent> customizer @AT@ 5731 @LENGTH@ 58
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5779 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5823 @LENGTH@ 106
------------UPD MethodInvocation@@LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5823 @LENGTH@ 105
---------------UPD SimpleName@@MethodName:debug:["Configure component {}, with configurer {}", component, configurer] @TO@ MethodName:debug:["Configure component {}, with customizer {}", component, customizer] @AT@ 5830 @LENGTH@ 98
------------------UPD StringLiteral@@"Configure component {}, with configurer {}" @TO@ "Configure component {}, with customizer {}" @AT@ 5836 @LENGTH@ 44
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5917 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(component) @TO@ MethodInvocation:customizer.customize(component) @AT@ 5946 @LENGTH@ 32
------------UPD MethodInvocation@@configurer.customize(component) @TO@ customizer.customize(component) @AT@ 5946 @LENGTH@ 31
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5946 @LENGTH@ 10


UPD MethodDeclaration@@public, void, MethodName:onSubscribe, Subscription subscription,  @TO@ public, void, MethodName:onSubscribe, Subscription newSubscription,  @AT@ 1842 @LENGTH@ 452
---UPD SingleVariableDeclaration@@Subscription subscription @TO@ Subscription newSubscription @AT@ 1866 @LENGTH@ 25
------UPD SimpleName@@subscription @TO@ newSubscription @AT@ 1879 @LENGTH@ 12
---UPD IfStatement@@if (subscription == null) {  throw new NullPointerException("subscription is null");} @TO@ if (newSubscription == null) {  throw new NullPointerException("subscription is null");} else if (newSubscription == this.subscription) {  throw new IllegalArgumentException("already subscribed to the subscription: " + newSubscription);} @AT@ 1911 @LENGTH@ 121
------UPD InfixExpression@@subscription == null @TO@ newSubscription == null @AT@ 1915 @LENGTH@ 20
---------UPD SimpleName@@subscription @TO@ newSubscription @AT@ 1915 @LENGTH@ 12
------INS Block@@ElseBody:if (newSubscription == this.subscription) {  throw new IllegalArgumentException("already subscribed to the subscription: " + newSubscription);} @TO@ IfStatement@@if (subscription == null) {  throw new NullPointerException("subscription is null");} @AT@ 2044 @LENGTH@ 179
---------INS IfStatement@@if (newSubscription == this.subscription) {  throw new IllegalArgumentException("already subscribed to the subscription: " + newSubscription);} @TO@ Block@@ElseBody:if (newSubscription == this.subscription) {  throw new IllegalArgumentException("already subscribed to the subscription: " + newSubscription);} @AT@ 2044 @LENGTH@ 179
------------INS InfixExpression@@newSubscription == this.subscription @TO@ IfStatement@@if (newSubscription == this.subscription) {  throw new IllegalArgumentException("already subscribed to the subscription: " + newSubscription);} @AT@ 2048 @LENGTH@ 36
---------------INS SimpleName@@newSubscription @TO@ InfixExpression@@newSubscription == this.subscription @AT@ 2048 @LENGTH@ 15
---------------INS Operator@@== @TO@ InfixExpression@@newSubscription == this.subscription @AT@ 2063 @LENGTH@ 2
---------------INS FieldAccess@@this.subscription @TO@ InfixExpression@@newSubscription == this.subscription @AT@ 2067 @LENGTH@ 17
------------------INS ThisExpression@@this @TO@ FieldAccess@@this.subscription @AT@ 2067 @LENGTH@ 4
------------------INS SimpleName@@subscription @TO@ FieldAccess@@this.subscription @AT@ 2072 @LENGTH@ 12
------------INS Block@@ThenBody:{  throw new IllegalArgumentException("already subscribed to the subscription: " + newSubscription);} @TO@ IfStatement@@if (newSubscription == this.subscription) {  throw new IllegalArgumentException("already subscribed to the subscription: " + newSubscription);} @AT@ 2086 @LENGTH@ 137
---------------INS ThrowStatement@@ClassInstanceCreation:new IllegalArgumentException("already subscribed to the subscription: " + newSubscription) @TO@ Block@@ThenBody:{  throw new IllegalArgumentException("already subscribed to the subscription: " + newSubscription);} @AT@ 2108 @LENGTH@ 97
------------------INS ClassInstanceCreation@@IllegalArgumentException["already subscribed to the subscription: " + newSubscription] @TO@ ThrowStatement@@ClassInstanceCreation:new IllegalArgumentException("already subscribed to the subscription: " + newSubscription) @AT@ 2114 @LENGTH@ 90
---------------------INS New@@new @TO@ ClassInstanceCreation@@IllegalArgumentException["already subscribed to the subscription: " + newSubscription] @AT@ 2114 @LENGTH@ 3
---------------------INS SimpleType@@IllegalArgumentException @TO@ ClassInstanceCreation@@IllegalArgumentException["already subscribed to the subscription: " + newSubscription] @AT@ 2118 @LENGTH@ 24
---------------------INS InfixExpression@@"already subscribed to the subscription: " + newSubscription @TO@ ClassInstanceCreation@@IllegalArgumentException["already subscribed to the subscription: " + newSubscription] @AT@ 2143 @LENGTH@ 60
------------------------INS StringLiteral@@"already subscribed to the subscription: " @TO@ InfixExpression@@"already subscribed to the subscription: " + newSubscription @AT@ 2143 @LENGTH@ 42
------------------------INS Operator@@+ @TO@ InfixExpression@@"already subscribed to the subscription: " + newSubscription @AT@ 2185 @LENGTH@ 1
------------------------INS SimpleName@@newSubscription @TO@ InfixExpression@@"already subscribed to the subscription: " + newSubscription @AT@ 2188 @LENGTH@ 15
---UPD IfStatement@@if (this.subscription != null) {  subscription.cancel();} else {  this.subscription=subscription;  subscriber.onSubscribe(subscription);} @TO@ if (this.subscription != null) {  newSubscription.cancel();} else {  this.subscription=newSubscription;  subscriber.onSubscribe(newSubscription);} @AT@ 2050 @LENGTH@ 230
------UPD Block@@ThenBody:{  subscription.cancel();} @TO@ ThenBody:{  newSubscription.cancel();} @AT@ 2081 @LENGTH@ 62
---------UPD ExpressionStatement@@MethodInvocation:subscription.cancel() @TO@ MethodInvocation:newSubscription.cancel() @AT@ 2103 @LENGTH@ 22
------------UPD MethodInvocation@@subscription.cancel() @TO@ newSubscription.cancel() @AT@ 2103 @LENGTH@ 21
---------------UPD SimpleName@@Name:subscription @TO@ Name:newSubscription @AT@ 2103 @LENGTH@ 12
------UPD Block@@ElseBody:{  this.subscription=subscription;  subscriber.onSubscribe(subscription);} @TO@ ElseBody:{  this.subscription=newSubscription;  subscriber.onSubscribe(newSubscription);} @AT@ 2149 @LENGTH@ 131
---------UPD ExpressionStatement@@Assignment:this.subscription=subscription @TO@ Assignment:this.subscription=newSubscription @AT@ 2171 @LENGTH@ 33
------------UPD Assignment@@this.subscription=subscription @TO@ this.subscription=newSubscription @AT@ 2171 @LENGTH@ 32
---------------UPD SimpleName@@subscription @TO@ newSubscription @AT@ 2191 @LENGTH@ 12
---------UPD ExpressionStatement@@MethodInvocation:subscriber.onSubscribe(subscription) @TO@ MethodInvocation:subscriber.onSubscribe(newSubscription) @AT@ 2225 @LENGTH@ 37
------------UPD MethodInvocation@@subscriber.onSubscribe(subscription) @TO@ subscriber.onSubscribe(newSubscription) @AT@ 2225 @LENGTH@ 36
---------------UPD SimpleName@@MethodName:onSubscribe:[subscription] @TO@ MethodName:onSubscribe:[newSubscription] @AT@ 2236 @LENGTH@ 25
------------------UPD SimpleName@@subscription @TO@ newSubscription @AT@ 2248 @LENGTH@ 12


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled(); @AT@ 5568 @LENGTH@ 160
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5576 @LENGTH@ 151
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5576 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5593 @LENGTH@ 134
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 5593 @LENGTH@ 64
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5593 @LENGTH@ 35
---------UPD MethodInvocation@@componentConfiguration.getConfigurer().isEnabled() @TO@ componentConfiguration.getCustomizer().isEnabled() @AT@ 5677 @LENGTH@ 50
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5677 @LENGTH@ 38


UPD ExpressionStatement@@MethodInvocation:Assert.notNull(scheme) @TO@ MethodInvocation:Assert.notNull(scheme,"scheme cannot be null") @AT@ 1826 @LENGTH@ 23
---UPD MethodInvocation@@Assert.notNull(scheme) @TO@ Assert.notNull(scheme,"scheme cannot be null") @AT@ 1826 @LENGTH@ 22
------UPD SimpleName@@MethodName:notNull:[scheme] @TO@ MethodName:notNull:[scheme, "scheme cannot be null"] @AT@ 1833 @LENGTH@ 15
---------INS StringLiteral@@"scheme cannot be null" @TO@ SimpleName@@MethodName:notNull:[scheme] @AT@ 1849 @LENGTH@ 23


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<PubNubComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<PubNubComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5429 @LENGTH@ 339
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 5433 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5433 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  ComponentCustomizer<PubNubComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ ThenBody:{  for (  ComponentCustomizer<PubNubComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5489 @LENGTH@ 279
------UPD EnhancedForStatement@@for (ComponentCustomizer<PubNubComponent> configurer : customizers) {  LOGGER.debug("Configure component {}, with configurer {}",component,configurer);  configurer.customize(component);} @TO@ for (ComponentCustomizer<PubNubComponent> customizer : customizers) {  LOGGER.debug("Configure component {}, with customizer {}",component,customizer);  customizer.customize(component);} @AT@ 5503 @LENGTH@ 255
---------UPD SingleVariableDeclaration@@ComponentCustomizer<PubNubComponent> configurer @TO@ ComponentCustomizer<PubNubComponent> customizer @AT@ 5508 @LENGTH@ 47
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5545 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5589 @LENGTH@ 106
------------UPD MethodInvocation@@LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5589 @LENGTH@ 105
---------------UPD SimpleName@@MethodName:debug:["Configure component {}, with configurer {}", component, configurer] @TO@ MethodName:debug:["Configure component {}, with customizer {}", component, customizer] @AT@ 5596 @LENGTH@ 98
------------------UPD StringLiteral@@"Configure component {}, with configurer {}" @TO@ "Configure component {}, with customizer {}" @AT@ 5602 @LENGTH@ 44
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5683 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(component) @TO@ MethodInvocation:customizer.customize(component) @AT@ 5712 @LENGTH@ 32
------------UPD MethodInvocation@@configurer.customize(component) @TO@ customizer.customize(component) @AT@ 5712 @LENGTH@ 31
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5712 @LENGTH@ 10


UPD ThrowStatement@@ClassInstanceCreation:new JwkException("An I/O error occurred while reading the JWT: " + ex.getMessage(),ex) @TO@ ClassInstanceCreation:new InvalidTokenException("An I/O error occurred while reading the JWT: " + ex.getMessage(),ex) @AT@ 1969 @LENGTH@ 94
---UPD ClassInstanceCreation@@JwkException["An I/O error occurred while reading the JWT: " + ex.getMessage(), ex] @TO@ InvalidTokenException["An I/O error occurred while reading the JWT: " + ex.getMessage(), ex] @AT@ 1975 @LENGTH@ 87
------UPD SimpleType@@JwkException @TO@ InvalidTokenException @AT@ 1979 @LENGTH@ 12


UPD ReturnStatement@@MethodInvocation:mapper.getMappingContext().getPersistentEntity(entityType) @TO@ MethodInvocation:mapper.getMappingContext().getRequiredPersistentEntity(entityType) @AT@ 4242 @LENGTH@ 66
---UPD MethodInvocation@@mapper.getMappingContext().getPersistentEntity(entityType) @TO@ mapper.getMappingContext().getRequiredPersistentEntity(entityType) @AT@ 4249 @LENGTH@ 58
------UPD SimpleName@@MethodName:getPersistentEntity:[entityType] @TO@ MethodName:getRequiredPersistentEntity:[entityType] @AT@ 4276 @LENGTH@ 31


UPD ReturnStatement@@InfixExpression:index != null && index.type().equals(GeoSpatialIndexType.GEO_2DSPHERE) @TO@ InfixExpression:index.isPresent() && index.get().type().equals(GeoSpatialIndexType.GEO_2DSPHERE) @AT@ 13182 @LENGTH@ 78
---UPD InfixExpression@@index != null && index.type().equals(GeoSpatialIndexType.GEO_2DSPHERE) @TO@ index.isPresent() && index.get().type().equals(GeoSpatialIndexType.GEO_2DSPHERE) @AT@ 13189 @LENGTH@ 70
------DEL InfixExpression@@index != null @AT@ 13189 @LENGTH@ 13
---------DEL SimpleName@@index @AT@ 13189 @LENGTH@ 5
---------DEL Operator@@!= @AT@ 13194 @LENGTH@ 2
---------DEL NullLiteral@@null @AT@ 13198 @LENGTH@ 4
------UPD MethodInvocation@@index.type().equals(GeoSpatialIndexType.GEO_2DSPHERE) @TO@ index.get().type().equals(GeoSpatialIndexType.GEO_2DSPHERE) @AT@ 13206 @LENGTH@ 53
---------INS MethodInvocation@@MethodName:get:[] @TO@ MethodInvocation@@index.type().equals(GeoSpatialIndexType.GEO_2DSPHERE) @AT@ 13247 @LENGTH@ 11
------INS MethodInvocation@@index.isPresent() @TO@ InfixExpression@@index != null && index.type().equals(GeoSpatialIndexType.GEO_2DSPHERE) @AT@ 13226 @LENGTH@ 17
---------INS SimpleName@@Name:index @TO@ MethodInvocation@@index.isPresent() @AT@ 13226 @LENGTH@ 5
---------INS SimpleName@@MethodName:isPresent:[] @TO@ MethodInvocation@@index.isPresent() @AT@ 13232 @LENGTH@ 11


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled(); @AT@ 5225 @LENGTH@ 160
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5233 @LENGTH@ 151
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5233 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5250 @LENGTH@ 134
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 5250 @LENGTH@ 64
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5250 @LENGTH@ 35
---------UPD MethodInvocation@@componentConfiguration.getConfigurer().isEnabled() @TO@ componentConfiguration.getCustomizer().isEnabled() @AT@ 5334 @LENGTH@ 50
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5334 @LENGTH@ 38


UPD ExpressionStatement@@MethodInvocation:mapper.setPropertyNamingStrategy(PropertyNamingStrategy.CAMEL_CASE_TO_LOWER_CASE_WITH_UNDERSCORES) @TO@ MethodInvocation:mapper.setPropertyNamingStrategy(PropertyNamingStrategy.SNAKE_CASE) @AT@ 1525 @LENGTH@ 99
---UPD MethodInvocation@@mapper.setPropertyNamingStrategy(PropertyNamingStrategy.CAMEL_CASE_TO_LOWER_CASE_WITH_UNDERSCORES) @TO@ mapper.setPropertyNamingStrategy(PropertyNamingStrategy.SNAKE_CASE) @AT@ 1525 @LENGTH@ 98
------UPD SimpleName@@MethodName:setPropertyNamingStrategy:[PropertyNamingStrategy.CAMEL_CASE_TO_LOWER_CASE_WITH_UNDERSCORES] @TO@ MethodName:setPropertyNamingStrategy:[PropertyNamingStrategy.SNAKE_CASE] @AT@ 1532 @LENGTH@ 91
---------UPD QualifiedName@@PropertyNamingStrategy.CAMEL_CASE_TO_LOWER_CASE_WITH_UNDERSCORES @TO@ PropertyNamingStrategy.SNAKE_CASE @AT@ 1558 @LENGTH@ 64
------------UPD SimpleName@@CAMEL_CASE_TO_LOWER_CASE_WITH_UNDERSCORES @TO@ SNAKE_CASE @AT@ 1581 @LENGTH@ 41


UPD VariableDeclarationStatement@@ServiceBuilder<TopologyProxyService> serviceBuilder=target.addService(TopologyProxyService.SERVICE_NAME,proxyService).addDependency(DefaultNamespaceContextSelectorService.SERVICE_NAME).addDependency(TopologyManagerActivator.CONNECTOR_SERVICE_NAME); @TO@ ServiceBuilder<TopologyProxyService> serviceBuilder=target.addService(TopologyProxyService.SERVICE_NAME,proxyService).addDependency(DefaultNamespaceContextSelectorService.SERVICE_NAME).addDependency(TopologyManagerActivator.CONNECTOR_SERVICE_NAME).addDependency(NamingService.SERVICE_NAME); @AT@ 2000 @LENGTH@ 302
---UPD VariableDeclarationFragment@@serviceBuilder=target.addService(TopologyProxyService.SERVICE_NAME,proxyService).addDependency(DefaultNamespaceContextSelectorService.SERVICE_NAME).addDependency(TopologyManagerActivator.CONNECTOR_SERVICE_NAME) @TO@ serviceBuilder=target.addService(TopologyProxyService.SERVICE_NAME,proxyService).addDependency(DefaultNamespaceContextSelectorService.SERVICE_NAME).addDependency(TopologyManagerActivator.CONNECTOR_SERVICE_NAME).addDependency(NamingService.SERVICE_NAME) @AT@ 2037 @LENGTH@ 264
------UPD MethodInvocation@@target.addService(TopologyProxyService.SERVICE_NAME,proxyService).addDependency(DefaultNamespaceContextSelectorService.SERVICE_NAME).addDependency(TopologyManagerActivator.CONNECTOR_SERVICE_NAME) @TO@ target.addService(TopologyProxyService.SERVICE_NAME,proxyService).addDependency(DefaultNamespaceContextSelectorService.SERVICE_NAME).addDependency(TopologyManagerActivator.CONNECTOR_SERVICE_NAME).addDependency(NamingService.SERVICE_NAME) @AT@ 2054 @LENGTH@ 247
---------INS MethodInvocation@@MethodName:addDependency:[TopologyManagerActivator.CONNECTOR_SERVICE_NAME] @TO@ MethodInvocation@@target.addService(TopologyProxyService.SERVICE_NAME,proxyService).addDependency(DefaultNamespaceContextSelectorService.SERVICE_NAME).addDependency(TopologyManagerActivator.CONNECTOR_SERVICE_NAME) @AT@ 2104 @LENGTH@ 247
------------INS QualifiedName@@TopologyManagerActivator.CONNECTOR_SERVICE_NAME @TO@ MethodInvocation@@MethodName:addDependency:[TopologyManagerActivator.CONNECTOR_SERVICE_NAME] @AT@ 2303 @LENGTH@ 47
---------------MOV SimpleName@@TopologyManagerActivator @TO@ QualifiedName@@TopologyManagerActivator.CONNECTOR_SERVICE_NAME @AT@ 2253 @LENGTH@ 24
---------------MOV SimpleName@@CONNECTOR_SERVICE_NAME @TO@ QualifiedName@@TopologyManagerActivator.CONNECTOR_SERVICE_NAME @AT@ 2278 @LENGTH@ 22
---------DEL SimpleName@@MethodName:addDependency:[TopologyManagerActivator.CONNECTOR_SERVICE_NAME] @AT@ 2239 @LENGTH@ 62
------------DEL QualifiedName@@TopologyManagerActivator.CONNECTOR_SERVICE_NAME @AT@ 2253 @LENGTH@ 47
---------INS SimpleName@@MethodName:addDependency:[NamingService.SERVICE_NAME] @TO@ MethodInvocation@@target.addService(TopologyProxyService.SERVICE_NAME,proxyService).addDependency(DefaultNamespaceContextSelectorService.SERVICE_NAME).addDependency(TopologyManagerActivator.CONNECTOR_SERVICE_NAME) @AT@ 2369 @LENGTH@ 41
------------INS QualifiedName@@NamingService.SERVICE_NAME @TO@ SimpleName@@MethodName:addDependency:[NamingService.SERVICE_NAME] @AT@ 2383 @LENGTH@ 26
---------------INS SimpleName@@NamingService @TO@ QualifiedName@@NamingService.SERVICE_NAME @AT@ 2383 @LENGTH@ 13
---------------INS SimpleName@@SERVICE_NAME @TO@ QualifiedName@@NamingService.SERVICE_NAME @AT@ 2397 @LENGTH@ 12


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<SesComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<SesComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5394 @LENGTH@ 336
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 5398 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5398 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  ComponentCustomizer<SesComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ ThenBody:{  for (  ComponentCustomizer<SesComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5454 @LENGTH@ 276
------UPD EnhancedForStatement@@for (ComponentCustomizer<SesComponent> configurer : customizers) {  LOGGER.debug("Configure component {}, with configurer {}",component,configurer);  configurer.customize(component);} @TO@ for (ComponentCustomizer<SesComponent> customizer : customizers) {  LOGGER.debug("Configure component {}, with customizer {}",component,customizer);  customizer.customize(component);} @AT@ 5468 @LENGTH@ 252
---------UPD SingleVariableDeclaration@@ComponentCustomizer<SesComponent> configurer @TO@ ComponentCustomizer<SesComponent> customizer @AT@ 5473 @LENGTH@ 44
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5507 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5551 @LENGTH@ 106
------------UPD MethodInvocation@@LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5551 @LENGTH@ 105
---------------UPD SimpleName@@MethodName:debug:["Configure component {}, with configurer {}", component, configurer] @TO@ MethodName:debug:["Configure component {}, with customizer {}", component, customizer] @AT@ 5558 @LENGTH@ 98
------------------UPD StringLiteral@@"Configure component {}, with configurer {}" @TO@ "Configure component {}, with customizer {}" @AT@ 5564 @LENGTH@ 44
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5645 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(component) @TO@ MethodInvocation:customizer.customize(component) @AT@ 5674 @LENGTH@ 32
------------UPD MethodInvocation@@configurer.customize(component) @TO@ customizer.customize(component) @AT@ 5674 @LENGTH@ 31
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5674 @LENGTH@ 10


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && dataformatConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && dataformatConfiguration.getCustomizer().isEnabled(); @AT@ 5313 @LENGTH@ 177
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && dataformatConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && dataformatConfiguration.getCustomizer().isEnabled() @AT@ 5321 @LENGTH@ 168
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5321 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && dataformatConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && dataformatConfiguration.getCustomizer().isEnabled() @AT@ 5338 @LENGTH@ 151
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 5338 @LENGTH@ 72
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5338 @LENGTH@ 35
---------UPD MethodInvocation@@dataformatConfiguration.getConfigurer().isEnabled() @TO@ dataformatConfiguration.getCustomizer().isEnabled() @AT@ 5438 @LENGTH@ 51
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5438 @LENGTH@ 39


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled(); @AT@ 5209 @LENGTH@ 160
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5217 @LENGTH@ 151
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5217 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5234 @LENGTH@ 134
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 5234 @LENGTH@ 64
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5234 @LENGTH@ 35
---------UPD MethodInvocation@@componentConfiguration.getConfigurer().isEnabled() @TO@ componentConfiguration.getCustomizer().isEnabled() @AT@ 5318 @LENGTH@ 50
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5318 @LENGTH@ 38


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && languageConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && languageConfiguration.getCustomizer().isEnabled(); @AT@ 4557 @LENGTH@ 159
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && languageConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && languageConfiguration.getCustomizer().isEnabled() @AT@ 4565 @LENGTH@ 150
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 4565 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && languageConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && languageConfiguration.getCustomizer().isEnabled() @AT@ 4582 @LENGTH@ 133
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 4582 @LENGTH@ 64
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 4582 @LENGTH@ 35
---------UPD MethodInvocation@@languageConfiguration.getConfigurer().isEnabled() @TO@ languageConfiguration.getCustomizer().isEnabled() @AT@ 4666 @LENGTH@ 49
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 4666 @LENGTH@ 37


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled(); @AT@ 5300 @LENGTH@ 160
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5308 @LENGTH@ 151
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5308 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5325 @LENGTH@ 134
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 5325 @LENGTH@ 64
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5325 @LENGTH@ 35
---------UPD MethodInvocation@@componentConfiguration.getConfigurer().isEnabled() @TO@ componentConfiguration.getCustomizer().isEnabled() @AT@ 5409 @LENGTH@ 50
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5409 @LENGTH@ 38


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  DataFormatCustomizer<SoapJaxbDataFormat> configurer : customizers) {    LOGGER.debug("Configure dataformat {}, with configurer {}",dataformat,configurer);    configurer.customize(dataformat);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  DataFormatCustomizer<SoapJaxbDataFormat> customizer : customizers) {    LOGGER.debug("Configure dataformat {}, with customizer {}",dataformat,customizer);    customizer.customize(dataformat);  }} @AT@ 5358 @LENGTH@ 427
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 5362 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5362 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  DataFormatCustomizer<SoapJaxbDataFormat> configurer : customizers) {    LOGGER.debug("Configure dataformat {}, with configurer {}",dataformat,configurer);    configurer.customize(dataformat);  }} @TO@ ThenBody:{  for (  DataFormatCustomizer<SoapJaxbDataFormat> customizer : customizers) {    LOGGER.debug("Configure dataformat {}, with customizer {}",dataformat,customizer);    customizer.customize(dataformat);  }} @AT@ 5418 @LENGTH@ 367
------UPD EnhancedForStatement@@for (DataFormatCustomizer<SoapJaxbDataFormat> configurer : customizers) {  LOGGER.debug("Configure dataformat {}, with configurer {}",dataformat,configurer);  configurer.customize(dataformat);} @TO@ for (DataFormatCustomizer<SoapJaxbDataFormat> customizer : customizers) {  LOGGER.debug("Configure dataformat {}, with customizer {}",dataformat,customizer);  customizer.customize(dataformat);} @AT@ 5440 @LENGTH@ 327
---------UPD SingleVariableDeclaration@@DataFormatCustomizer<SoapJaxbDataFormat> configurer @TO@ DataFormatCustomizer<SoapJaxbDataFormat> customizer @AT@ 5445 @LENGTH@ 51
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5486 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure dataformat {}, with configurer {}",dataformat,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure dataformat {}, with customizer {}",dataformat,customizer) @AT@ 5538 @LENGTH@ 149
------------UPD MethodInvocation@@LOGGER.debug("Configure dataformat {}, with configurer {}",dataformat,configurer) @TO@ LOGGER.debug("Configure dataformat {}, with customizer {}",dataformat,customizer) @AT@ 5538 @LENGTH@ 148
---------------UPD SimpleName@@MethodName:debug:["Configure dataformat {}, with configurer {}", dataformat, configurer] @TO@ MethodName:debug:["Configure dataformat {}, with customizer {}", dataformat, customizer] @AT@ 5545 @LENGTH@ 141
------------------UPD StringLiteral@@"Configure dataformat {}, with configurer {}" @TO@ "Configure dataformat {}, with customizer {}" @AT@ 5584 @LENGTH@ 45
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5675 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(dataformat) @TO@ MethodInvocation:customizer.customize(dataformat) @AT@ 5712 @LENGTH@ 33
------------UPD MethodInvocation@@configurer.customize(dataformat) @TO@ customizer.customize(dataformat) @AT@ 5712 @LENGTH@ 32
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5712 @LENGTH@ 10


UPD IfStatement@@if (vertex.mergeJoinDummyVertexs.size() == 0) {  if (vertex.tagToInput.size() != vertex.parentConnections.size()) {    throw new Exception("tagToInput size " + vertex.tagToInput.size() + " is different from parentConnections size "+ vertex.parentConnections.size());  }  for (  Entry<String,String> entry : vertex.tagToInput.entrySet()) {    Connection c=null;    for (    Connection connection : vertex.parentConnections) {      if (connection.from.name.equals(entry.getValue())) {        Vertex v=connection.from;        if (v.outputOps.size() == 1) {          posToOpId.put(entry.getKey(),v.outputOps.get(0).operatorId);        } else         if ((v.outputOps.size() == 0 && v.vertexType == VertexType.UNION)) {          posToOpId.put(entry.getKey(),v.name);        } else {          Op joinRSOp=v.getJoinRSOp(vertex);          if (joinRSOp != null) {            posToOpId.put(entry.getKey(),joinRSOp.operatorId);          } else {            throw new Exception("Can not find join reduceSinkOp for " + v.name + " to join "+ vertex.name+ " when hive explain user is trying to identify the operator id.");          }        }        c=connection;        break;      }    }    if (c == null) {      throw new Exception("Can not find " + entry.getValue() + " while parsing keys of merge join operator");    }  }} else {  posToOpId.put(vertex.tag,this.parent.operatorId);  for (  Vertex v : vertex.mergeJoinDummyVertexs) {    if (v.outputOps.size() != 1) {      throw new Exception("Can not find a single root operators in a single vertex " + v.name + " when hive explain user is trying to identify the operator id.");    }    posToOpId.put(v.tag,v.outputOps.get(0).operatorId);  }} @TO@ if (vertex.mergeJoinDummyVertexs.size() == 0) {  for (  Entry<String,String> entry : vertex.tagToInput.entrySet()) {    Connection c=null;    for (    Connection connection : vertex.parentConnections) {      if (connection.from.name.equals(entry.getValue())) {        Vertex v=connection.from;        if (v.outputOps.size() == 1) {          posToOpId.put(entry.getKey(),v.outputOps.get(0).operatorId);        } else         if ((v.outputOps.size() == 0 && v.vertexType == VertexType.UNION)) {          posToOpId.put(entry.getKey(),v.name);        } else {          Op joinRSOp=v.getJoinRSOp(vertex);          if (joinRSOp != null) {            posToOpId.put(entry.getKey(),joinRSOp.operatorId);          } else {            throw new Exception("Can not find join reduceSinkOp for " + v.name + " to join "+ vertex.name+ " when hive explain user is trying to identify the operator id.");          }        }        c=connection;        break;      }    }    if (c == null) {      throw new Exception("Can not find " + entry.getValue() + " while parsing keys of merge join operator");    }  }} else {  posToOpId.put(vertex.tag,this.parent.operatorId);  for (  Vertex v : vertex.mergeJoinDummyVertexs) {    if (v.outputOps.size() != 1) {      throw new Exception("Can not find a single root operators in a single vertex " + v.name + " when hive explain user is trying to identify the operator id.");    }    posToOpId.put(v.tag,v.outputOps.get(0).operatorId);  }} @AT@ 7423 @LENGTH@ 2036
---UPD Block@@ThenBody:{  if (vertex.tagToInput.size() != vertex.parentConnections.size()) {    throw new Exception("tagToInput size " + vertex.tagToInput.size() + " is different from parentConnections size "+ vertex.parentConnections.size());  }  for (  Entry<String,String> entry : vertex.tagToInput.entrySet()) {    Connection c=null;    for (    Connection connection : vertex.parentConnections) {      if (connection.from.name.equals(entry.getValue())) {        Vertex v=connection.from;        if (v.outputOps.size() == 1) {          posToOpId.put(entry.getKey(),v.outputOps.get(0).operatorId);        } else         if ((v.outputOps.size() == 0 && v.vertexType == VertexType.UNION)) {          posToOpId.put(entry.getKey(),v.name);        } else {          Op joinRSOp=v.getJoinRSOp(vertex);          if (joinRSOp != null) {            posToOpId.put(entry.getKey(),joinRSOp.operatorId);          } else {            throw new Exception("Can not find join reduceSinkOp for " + v.name + " to join "+ vertex.name+ " when hive explain user is trying to identify the operator id.");          }        }        c=connection;        break;      }    }    if (c == null) {      throw new Exception("Can not find " + entry.getValue() + " while parsing keys of merge join operator");    }  }} @TO@ ThenBody:{  for (  Entry<String,String> entry : vertex.tagToInput.entrySet()) {    Connection c=null;    for (    Connection connection : vertex.parentConnections) {      if (connection.from.name.equals(entry.getValue())) {        Vertex v=connection.from;        if (v.outputOps.size() == 1) {          posToOpId.put(entry.getKey(),v.outputOps.get(0).operatorId);        } else         if ((v.outputOps.size() == 0 && v.vertexType == VertexType.UNION)) {          posToOpId.put(entry.getKey(),v.name);        } else {          Op joinRSOp=v.getJoinRSOp(vertex);          if (joinRSOp != null) {            posToOpId.put(entry.getKey(),joinRSOp.operatorId);          } else {            throw new Exception("Can not find join reduceSinkOp for " + v.name + " to join "+ vertex.name+ " when hive explain user is trying to identify the operator id.");          }        }        c=connection;        break;      }    }    if (c == null) {      throw new Exception("Can not find " + entry.getValue() + " while parsing keys of merge join operator");    }  }} @AT@ 7469 @LENGTH@ 1549
------DEL IfStatement@@if (vertex.tagToInput.size() != vertex.parentConnections.size()) {  throw new Exception("tagToInput size " + vertex.tagToInput.size() + " is different from parentConnections size "+ vertex.parentConnections.size());} @AT@ 7479 @LENGTH@ 249
---------DEL InfixExpression@@vertex.tagToInput.size() != vertex.parentConnections.size() @AT@ 7483 @LENGTH@ 59
------------DEL MethodInvocation@@vertex.tagToInput.size() @AT@ 7483 @LENGTH@ 24
---------------DEL QualifiedName@@Name:vertex.tagToInput @AT@ 7483 @LENGTH@ 17
---------------DEL SimpleName@@MethodName:size:[] @AT@ 7501 @LENGTH@ 6
------------DEL Operator@@!= @AT@ 7507 @LENGTH@ 2
------------DEL MethodInvocation@@vertex.parentConnections.size() @AT@ 7511 @LENGTH@ 31
---------------DEL QualifiedName@@Name:vertex.parentConnections @AT@ 7511 @LENGTH@ 24
---------------DEL SimpleName@@MethodName:size:[] @AT@ 7536 @LENGTH@ 6
---------DEL Block@@ThenBody:{  throw new Exception("tagToInput size " + vertex.tagToInput.size() + " is different from parentConnections size "+ vertex.parentConnections.size());} @AT@ 7544 @LENGTH@ 184
------------DEL ThrowStatement@@ClassInstanceCreation:new Exception("tagToInput size " + vertex.tagToInput.size() + " is different from parentConnections size "+ vertex.parentConnections.size()) @AT@ 7556 @LENGTH@ 162
---------------DEL ClassInstanceCreation@@Exception["tagToInput size " + vertex.tagToInput.size() + " is different from parentConnections size "+ vertex.parentConnections.size()] @AT@ 7562 @LENGTH@ 155
------------------DEL New@@new @AT@ 7562 @LENGTH@ 3
------------------DEL SimpleType@@Exception @AT@ 7566 @LENGTH@ 9
------------------DEL InfixExpression@@"tagToInput size " + vertex.tagToInput.size() + " is different from parentConnections size "+ vertex.parentConnections.size() @AT@ 7576 @LENGTH@ 140
---------------------DEL StringLiteral@@"tagToInput size " @AT@ 7576 @LENGTH@ 18
---------------------DEL Operator@@+ @AT@ 7594 @LENGTH@ 1
---------------------DEL MethodInvocation@@vertex.tagToInput.size() @AT@ 7597 @LENGTH@ 24
------------------------DEL QualifiedName@@Name:vertex.tagToInput @AT@ 7597 @LENGTH@ 17
------------------------DEL SimpleName@@MethodName:size:[] @AT@ 7615 @LENGTH@ 6
---------------------DEL StringLiteral@@" is different from parentConnections size " @AT@ 7638 @LENGTH@ 44
---------------------DEL MethodInvocation@@vertex.parentConnections.size() @AT@ 7685 @LENGTH@ 31
------------------------DEL QualifiedName@@Name:vertex.parentConnections @AT@ 7685 @LENGTH@ 24
------------------------DEL SimpleName@@MethodName:size:[] @AT@ 7710 @LENGTH@ 6


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<WebsocketComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<WebsocketComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5524 @LENGTH@ 342
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 5528 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5528 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  ComponentCustomizer<WebsocketComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ ThenBody:{  for (  ComponentCustomizer<WebsocketComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5584 @LENGTH@ 282
------UPD EnhancedForStatement@@for (ComponentCustomizer<WebsocketComponent> configurer : customizers) {  LOGGER.debug("Configure component {}, with configurer {}",component,configurer);  configurer.customize(component);} @TO@ for (ComponentCustomizer<WebsocketComponent> customizer : customizers) {  LOGGER.debug("Configure component {}, with customizer {}",component,customizer);  customizer.customize(component);} @AT@ 5598 @LENGTH@ 258
---------UPD SingleVariableDeclaration@@ComponentCustomizer<WebsocketComponent> configurer @TO@ ComponentCustomizer<WebsocketComponent> customizer @AT@ 5603 @LENGTH@ 50
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5643 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5687 @LENGTH@ 106
------------UPD MethodInvocation@@LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5687 @LENGTH@ 105
---------------UPD SimpleName@@MethodName:debug:["Configure component {}, with configurer {}", component, configurer] @TO@ MethodName:debug:["Configure component {}, with customizer {}", component, customizer] @AT@ 5694 @LENGTH@ 98
------------------UPD StringLiteral@@"Configure component {}, with configurer {}" @TO@ "Configure component {}, with customizer {}" @AT@ 5700 @LENGTH@ 44
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5781 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(component) @TO@ MethodInvocation:customizer.customize(component) @AT@ 5810 @LENGTH@ 32
------------UPD MethodInvocation@@configurer.customize(component) @TO@ customizer.customize(component) @AT@ 5810 @LENGTH@ 31
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5810 @LENGTH@ 10


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled(); @AT@ 5209 @LENGTH@ 160
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5217 @LENGTH@ 151
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5217 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5234 @LENGTH@ 134
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 5234 @LENGTH@ 64
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5234 @LENGTH@ 35
---------UPD MethodInvocation@@componentConfiguration.getConfigurer().isEnabled() @TO@ componentConfiguration.getCustomizer().isEnabled() @AT@ 5318 @LENGTH@ 50
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5318 @LENGTH@ 38


UPD FieldDeclaration@@public, static, String, [ARCHIVING_LEVEL="archiving_level"] @TO@ public, static, final, String, [ARCHIVING_LEVEL="archiving_level"] @AT@ 1891 @LENGTH@ 57
---INS Modifier@@final @TO@ FieldDeclaration@@public, static, String, [ARCHIVING_LEVEL="archiving_level"] @AT@ 1707 @LENGTH@ 5


UPD MethodDeclaration@@public, void, MethodName:forceReservedMemory, int allocationSize, int count,  @TO@ public, long, MethodName:forceReservedMemory, int allocationSize, int count,  @AT@ 2630 @LENGTH@ 70
---UPD PrimitiveType@@void @TO@ long @AT@ 2637 @LENGTH@ 4
---INS ReturnStatement@@InfixExpression:allocationSize * count @TO@ MethodDeclaration@@public, void, MethodName:forceReservedMemory, int allocationSize, int count,  @AT@ 2701 @LENGTH@ 30
------INS InfixExpression@@allocationSize * count @TO@ ReturnStatement@@InfixExpression:allocationSize * count @AT@ 2708 @LENGTH@ 22
---------INS SimpleName@@allocationSize @TO@ InfixExpression@@allocationSize * count @AT@ 2708 @LENGTH@ 14
---------INS Operator@@* @TO@ InfixExpression@@allocationSize * count @AT@ 2722 @LENGTH@ 1
---------INS SimpleName@@count @TO@ InfixExpression@@allocationSize * count @AT@ 2725 @LENGTH@ 5


UPD ExpressionStatement@@MethodInvocation:assertThat(resolver.isFallbackPageable(PageRequest.of(0,10))).isTrue() @TO@ MethodInvocation:assertThat(resolver.isFallbackPageable(PageRequest.of(0,10))).isFalse() @AT@ 8381 @LENGTH@ 72
---UPD MethodInvocation@@assertThat(resolver.isFallbackPageable(PageRequest.of(0,10))).isTrue() @TO@ assertThat(resolver.isFallbackPageable(PageRequest.of(0,10))).isFalse() @AT@ 8381 @LENGTH@ 71
------UPD SimpleName@@MethodName:isTrue:[] @TO@ MethodName:isFalse:[] @AT@ 8444 @LENGTH@ 8


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<EC2Component> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<EC2Component> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5394 @LENGTH@ 336
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 5398 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5398 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  ComponentCustomizer<EC2Component> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ ThenBody:{  for (  ComponentCustomizer<EC2Component> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5454 @LENGTH@ 276
------UPD EnhancedForStatement@@for (ComponentCustomizer<EC2Component> configurer : customizers) {  LOGGER.debug("Configure component {}, with configurer {}",component,configurer);  configurer.customize(component);} @TO@ for (ComponentCustomizer<EC2Component> customizer : customizers) {  LOGGER.debug("Configure component {}, with customizer {}",component,customizer);  customizer.customize(component);} @AT@ 5468 @LENGTH@ 252
---------UPD SingleVariableDeclaration@@ComponentCustomizer<EC2Component> configurer @TO@ ComponentCustomizer<EC2Component> customizer @AT@ 5473 @LENGTH@ 44
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5507 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5551 @LENGTH@ 106
------------UPD MethodInvocation@@LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5551 @LENGTH@ 105
---------------UPD SimpleName@@MethodName:debug:["Configure component {}, with configurer {}", component, configurer] @TO@ MethodName:debug:["Configure component {}, with customizer {}", component, customizer] @AT@ 5558 @LENGTH@ 98
------------------UPD StringLiteral@@"Configure component {}, with configurer {}" @TO@ "Configure component {}, with customizer {}" @AT@ 5564 @LENGTH@ 44
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5645 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(component) @TO@ MethodInvocation:customizer.customize(component) @AT@ 5674 @LENGTH@ 32
------------UPD MethodInvocation@@configurer.customize(component) @TO@ customizer.customize(component) @AT@ 5674 @LENGTH@ 31
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5674 @LENGTH@ 10


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<KafkaComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<KafkaComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5412 @LENGTH@ 338
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 5416 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5416 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  ComponentCustomizer<KafkaComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ ThenBody:{  for (  ComponentCustomizer<KafkaComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5472 @LENGTH@ 278
------UPD EnhancedForStatement@@for (ComponentCustomizer<KafkaComponent> configurer : customizers) {  LOGGER.debug("Configure component {}, with configurer {}",component,configurer);  configurer.customize(component);} @TO@ for (ComponentCustomizer<KafkaComponent> customizer : customizers) {  LOGGER.debug("Configure component {}, with customizer {}",component,customizer);  customizer.customize(component);} @AT@ 5486 @LENGTH@ 254
---------UPD SingleVariableDeclaration@@ComponentCustomizer<KafkaComponent> configurer @TO@ ComponentCustomizer<KafkaComponent> customizer @AT@ 5491 @LENGTH@ 46
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5527 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5571 @LENGTH@ 106
------------UPD MethodInvocation@@LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5571 @LENGTH@ 105
---------------UPD SimpleName@@MethodName:debug:["Configure component {}, with configurer {}", component, configurer] @TO@ MethodName:debug:["Configure component {}, with customizer {}", component, customizer] @AT@ 5578 @LENGTH@ 98
------------------UPD StringLiteral@@"Configure component {}, with configurer {}" @TO@ "Configure component {}, with customizer {}" @AT@ 5584 @LENGTH@ 44
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5665 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(component) @TO@ MethodInvocation:customizer.customize(component) @AT@ 5694 @LENGTH@ 32
------------UPD MethodInvocation@@configurer.customize(component) @TO@ customizer.customize(component) @AT@ 5694 @LENGTH@ 31
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5694 @LENGTH@ 10


UPD ExpressionStatement@@MethodInvocation:Assert.isTrue(root.startsWith("dc=")) @TO@ MethodInvocation:Assert.isTrue(root.startsWith("dc="),"root must start with dc=") @AT@ 8661 @LENGTH@ 38
---UPD MethodInvocation@@Assert.isTrue(root.startsWith("dc=")) @TO@ Assert.isTrue(root.startsWith("dc="),"root must start with dc=") @AT@ 8661 @LENGTH@ 37
------UPD SimpleName@@MethodName:isTrue:[root.startsWith("dc=")] @TO@ MethodName:isTrue:[root.startsWith("dc="), "root must start with dc="] @AT@ 8668 @LENGTH@ 30
---------INS StringLiteral@@"root must start with dc=" @TO@ SimpleName@@MethodName:isTrue:[root.startsWith("dc=")] @AT@ 8728 @LENGTH@ 26


UPD ExpressionStatement@@MethodInvocation:assertEquals(503,cause.getStatusCode()) @TO@ MethodInvocation:assertEquals(504,cause.getStatusCode()) @AT@ 1826 @LENGTH@ 41
---UPD MethodInvocation@@assertEquals(503,cause.getStatusCode()) @TO@ assertEquals(504,cause.getStatusCode()) @AT@ 1826 @LENGTH@ 40
------UPD SimpleName@@MethodName:assertEquals:[503, cause.getStatusCode()] @TO@ MethodName:assertEquals:[504, cause.getStatusCode()] @AT@ 1826 @LENGTH@ 40
---------UPD NumberLiteral@@503 @TO@ 504 @AT@ 1839 @LENGTH@ 3


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<WeatherComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<WeatherComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5446 @LENGTH@ 340
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 5450 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5450 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  ComponentCustomizer<WeatherComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ ThenBody:{  for (  ComponentCustomizer<WeatherComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5506 @LENGTH@ 280
------UPD EnhancedForStatement@@for (ComponentCustomizer<WeatherComponent> configurer : customizers) {  LOGGER.debug("Configure component {}, with configurer {}",component,configurer);  configurer.customize(component);} @TO@ for (ComponentCustomizer<WeatherComponent> customizer : customizers) {  LOGGER.debug("Configure component {}, with customizer {}",component,customizer);  customizer.customize(component);} @AT@ 5520 @LENGTH@ 256
---------UPD SingleVariableDeclaration@@ComponentCustomizer<WeatherComponent> configurer @TO@ ComponentCustomizer<WeatherComponent> customizer @AT@ 5525 @LENGTH@ 48
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5563 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5607 @LENGTH@ 106
------------UPD MethodInvocation@@LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5607 @LENGTH@ 105
---------------UPD SimpleName@@MethodName:debug:["Configure component {}, with configurer {}", component, configurer] @TO@ MethodName:debug:["Configure component {}, with customizer {}", component, customizer] @AT@ 5614 @LENGTH@ 98
------------------UPD StringLiteral@@"Configure component {}, with configurer {}" @TO@ "Configure component {}, with customizer {}" @AT@ 5620 @LENGTH@ 44
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5701 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(component) @TO@ MethodInvocation:customizer.customize(component) @AT@ 5730 @LENGTH@ 32
------------UPD MethodInvocation@@configurer.customize(component) @TO@ customizer.customize(component) @AT@ 5730 @LENGTH@ 31
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5730 @LENGTH@ 10


UPD VariableDeclarationStatement@@Optional<? extends MongoPersistentEntity<?>> entity=entityClass == null ? null : getPersistentEntity(entityClass); @TO@ Optional<? extends MongoPersistentEntity<?>> entity=entityClass == null ? Optional.empty() : getPersistentEntity(entityClass); @AT@ 45628 @LENGTH@ 122
---UPD VariableDeclarationFragment@@entity=entityClass == null ? null : getPersistentEntity(entityClass) @TO@ entity=entityClass == null ? Optional.empty() : getPersistentEntity(entityClass) @AT@ 45673 @LENGTH@ 76
------UPD ConditionalExpression@@entityClass == null ? null : getPersistentEntity(entityClass) @TO@ entityClass == null ? Optional.empty() : getPersistentEntity(entityClass) @AT@ 45682 @LENGTH@ 67
---------INS MethodInvocation@@Optional.empty() @TO@ ConditionalExpression@@entityClass == null ? null : getPersistentEntity(entityClass) @AT@ 45704 @LENGTH@ 16
------------INS SimpleName@@Name:Optional @TO@ MethodInvocation@@Optional.empty() @AT@ 45704 @LENGTH@ 8
------------INS SimpleName@@MethodName:empty:[] @TO@ MethodInvocation@@Optional.empty() @AT@ 45713 @LENGTH@ 7
---------DEL NullLiteral@@null @AT@ 45704 @LENGTH@ 4


UPD TypeDeclaration@@[public]ConfigView, [StageConfig] @TO@ [@SuppressWarnings("deprecation"), public]ConfigView, [StageConfig] @AT@ 207 @LENGTH@ 420
---INS SingleMemberAnnotation@@@SuppressWarnings("deprecation") @TO@ TypeDeclaration@@[public]ConfigView, [StageConfig] @AT@ 207 @LENGTH@ 32


UPD FieldDeclaration@@private, static, Logger, [log=Logger.getLogger("MultipleResourceAdapter2")] @TO@ private, static, Logger, [log=Logger.getLogger("MultipleResourceAdapter3")] @AT@ 1699 @LENGTH@ 73
---UPD VariableDeclarationFragment@@log=Logger.getLogger("MultipleResourceAdapter2") @TO@ log=Logger.getLogger("MultipleResourceAdapter3") @AT@ 1721 @LENGTH@ 50
------UPD MethodInvocation@@Logger.getLogger("MultipleResourceAdapter2") @TO@ Logger.getLogger("MultipleResourceAdapter3") @AT@ 1727 @LENGTH@ 44
---------UPD SimpleName@@MethodName:getLogger:["MultipleResourceAdapter2"] @TO@ MethodName:getLogger:["MultipleResourceAdapter3"] @AT@ 1734 @LENGTH@ 37
------------UPD StringLiteral@@"MultipleResourceAdapter2" @TO@ "MultipleResourceAdapter3" @AT@ 1744 @LENGTH@ 26


UPD FieldDeclaration@@static, double, [powersOf10[]={10.,100.,1.0e4,1.0e8,1.0e16,1.0e32,1.0e64,1.0e128,1.0e256}] @TO@ static, final, double, [powersOf10[]={10.,100.,1.0e4,1.0e8,1.0e16,1.0e32,1.0e64,1.0e128,1.0e256}] @AT@ 867 @LENGTH@ 293
---INS Modifier@@final @TO@ FieldDeclaration@@static, double, [powersOf10[]={10.,100.,1.0e4,1.0e8,1.0e16,1.0e32,1.0e64,1.0e128,1.0e256}] @AT@ 880 @LENGTH@ 5


UPD ExpressionStatement@@MethodInvocation:LOG.info("Received should die response from AM") @TO@ MethodInvocation:LOG.info("Received should die response from AM: {}",task.getTaskAttemptID()) @AT@ 12749 @LENGTH@ 49
---UPD MethodInvocation@@LOG.info("Received should die response from AM") @TO@ LOG.info("Received should die response from AM: {}",task.getTaskAttemptID()) @AT@ 12749 @LENGTH@ 48
------UPD SimpleName@@MethodName:info:["Received should die response from AM"] @TO@ MethodName:info:["Received should die response from AM: {}", task.getTaskAttemptID()] @AT@ 12753 @LENGTH@ 44
---------UPD StringLiteral@@"Received should die response from AM" @TO@ "Received should die response from AM: {}" @AT@ 12758 @LENGTH@ 38
---------INS MethodInvocation@@task.getTaskAttemptID() @TO@ SimpleName@@MethodName:info:["Received should die response from AM"] @AT@ 12831 @LENGTH@ 23
------------INS SimpleName@@Name:task @TO@ MethodInvocation@@task.getTaskAttemptID() @AT@ 12831 @LENGTH@ 4
------------INS SimpleName@@MethodName:getTaskAttemptID:[] @TO@ MethodInvocation@@task.getTaskAttemptID() @AT@ 12836 @LENGTH@ 18


UPD FieldDeclaration@@public, static, final, SimpleAttributeDefinition, [SUMMARY_DEFINITION=new ObjectTypeAttributeDefinition.Builder(SUMMARY,SimpleAttributeDefinitionBuilder.create(NODE_NAME,ModelType.STRING,true).build(),SimpleAttributeDefinitionBuilder.create(HOSTNAME,ModelType.STRING,true).build(),SimpleAttributeDefinitionBuilder.create(INSTANCE_ID,ModelType.STRING,true).build(),SimpleAttributeDefinitionBuilder.create(PRODUCT_NAME,ModelType.STRING,true).build(),SimpleAttributeDefinitionBuilder.create(PRODUCT_COMMUNITY_IDENTIFIER,ModelType.STRING,false).setDefaultValue(new ModelNode(PROJECT_TYPE)).setAllowedValues(PRODUCT_TYPE,PROJECT_TYPE).build(),SimpleAttributeDefinitionBuilder.create(PRODUCT_VERSION,ModelType.STRING,true).build(),SimpleAttributeDefinitionBuilder.create(PRODUCT_HOME,ModelType.STRING,true).build(),SimpleAttributeDefinitionBuilder.create(PRODUCT_INSTALLATION_DATE,ModelType.STRING,true).build(),SimpleAttributeDefinitionBuilder.create(PRODUCT_LAST_UPDATE,ModelType.STRING,true).build(),SimpleAttributeDefinitionBuilder.create(OS,ModelType.STRING,false).build(),JVM_DEFINITION,CPU_DEFINITION).setAttributeMarshaller(AttributeMarshaller.ELEMENT_ONLY_OBJECT).build()] @TO@ public, static, final, SimpleAttributeDefinition, [SUMMARY_DEFINITION=new ObjectTypeAttributeDefinition.Builder(SUMMARY,SimpleAttributeDefinitionBuilder.create(NODE_NAME,ModelType.STRING,true).build(),SimpleAttributeDefinitionBuilder.create(HOSTNAME,ModelType.STRING,true).build(),SimpleAttributeDefinitionBuilder.create(INSTANCE_ID,ModelType.STRING,true).build(),SimpleAttributeDefinitionBuilder.create(PRODUCT_NAME,ModelType.STRING,true).build(),SimpleAttributeDefinitionBuilder.create(PRODUCT_COMMUNITY_IDENTIFIER,ModelType.STRING).setAllowedValues(PRODUCT_TYPE,PROJECT_TYPE).build(),SimpleAttributeDefinitionBuilder.create(PRODUCT_VERSION,ModelType.STRING,true).build(),SimpleAttributeDefinitionBuilder.create(PRODUCT_HOME,ModelType.STRING,true).build(),SimpleAttributeDefinitionBuilder.create(PRODUCT_INSTALLATION_DATE,ModelType.STRING,true).build(),SimpleAttributeDefinitionBuilder.create(PRODUCT_LAST_UPDATE,ModelType.STRING,true).build(),SimpleAttributeDefinitionBuilder.create(OS,ModelType.STRING,false).build(),JVM_DEFINITION,CPU_DEFINITION).setAttributeMarshaller(AttributeMarshaller.ELEMENT_ONLY_OBJECT).build()] @AT@ 5968 @LENGTH@ 1391
---UPD VariableDeclarationFragment@@SUMMARY_DEFINITION=new ObjectTypeAttributeDefinition.Builder(SUMMARY,SimpleAttributeDefinitionBuilder.create(NODE_NAME,ModelType.STRING,true).build(),SimpleAttributeDefinitionBuilder.create(HOSTNAME,ModelType.STRING,true).build(),SimpleAttributeDefinitionBuilder.create(INSTANCE_ID,ModelType.STRING,true).build(),SimpleAttributeDefinitionBuilder.create(PRODUCT_NAME,ModelType.STRING,true).build(),SimpleAttributeDefinitionBuilder.create(PRODUCT_COMMUNITY_IDENTIFIER,ModelType.STRING,false).setDefaultValue(new ModelNode(PROJECT_TYPE)).setAllowedValues(PRODUCT_TYPE,PROJECT_TYPE).build(),SimpleAttributeDefinitionBuilder.create(PRODUCT_VERSION,ModelType.STRING,true).build(),SimpleAttributeDefinitionBuilder.create(PRODUCT_HOME,ModelType.STRING,true).build(),SimpleAttributeDefinitionBuilder.create(PRODUCT_INSTALLATION_DATE,ModelType.STRING,true).build(),SimpleAttributeDefinitionBuilder.create(PRODUCT_LAST_UPDATE,ModelType.STRING,true).build(),SimpleAttributeDefinitionBuilder.create(OS,ModelType.STRING,false).build(),JVM_DEFINITION,CPU_DEFINITION).setAttributeMarshaller(AttributeMarshaller.ELEMENT_ONLY_OBJECT).build() @TO@ SUMMARY_DEFINITION=new ObjectTypeAttributeDefinition.Builder(SUMMARY,SimpleAttributeDefinitionBuilder.create(NODE_NAME,ModelType.STRING,true).build(),SimpleAttributeDefinitionBuilder.create(HOSTNAME,ModelType.STRING,true).build(),SimpleAttributeDefinitionBuilder.create(INSTANCE_ID,ModelType.STRING,true).build(),SimpleAttributeDefinitionBuilder.create(PRODUCT_NAME,ModelType.STRING,true).build(),SimpleAttributeDefinitionBuilder.create(PRODUCT_COMMUNITY_IDENTIFIER,ModelType.STRING).setAllowedValues(PRODUCT_TYPE,PROJECT_TYPE).build(),SimpleAttributeDefinitionBuilder.create(PRODUCT_VERSION,ModelType.STRING,true).build(),SimpleAttributeDefinitionBuilder.create(PRODUCT_HOME,ModelType.STRING,true).build(),SimpleAttributeDefinitionBuilder.create(PRODUCT_INSTALLATION_DATE,ModelType.STRING,true).build(),SimpleAttributeDefinitionBuilder.create(PRODUCT_LAST_UPDATE,ModelType.STRING,true).build(),SimpleAttributeDefinitionBuilder.create(OS,ModelType.STRING,false).build(),JVM_DEFINITION,CPU_DEFINITION).setAttributeMarshaller(AttributeMarshaller.ELEMENT_ONLY_OBJECT).build() @AT@ 6014 @LENGTH@ 1344
------UPD MethodInvocation@@new ObjectTypeAttributeDefinition.Builder(SUMMARY,SimpleAttributeDefinitionBuilder.create(NODE_NAME,ModelType.STRING,true).build(),SimpleAttributeDefinitionBuilder.create(HOSTNAME,ModelType.STRING,true).build(),SimpleAttributeDefinitionBuilder.create(INSTANCE_ID,ModelType.STRING,true).build(),SimpleAttributeDefinitionBuilder.create(PRODUCT_NAME,ModelType.STRING,true).build(),SimpleAttributeDefinitionBuilder.create(PRODUCT_COMMUNITY_IDENTIFIER,ModelType.STRING,false).setDefaultValue(new ModelNode(PROJECT_TYPE)).setAllowedValues(PRODUCT_TYPE,PROJECT_TYPE).build(),SimpleAttributeDefinitionBuilder.create(PRODUCT_VERSION,ModelType.STRING,true).build(),SimpleAttributeDefinitionBuilder.create(PRODUCT_HOME,ModelType.STRING,true).build(),SimpleAttributeDefinitionBuilder.create(PRODUCT_INSTALLATION_DATE,ModelType.STRING,true).build(),SimpleAttributeDefinitionBuilder.create(PRODUCT_LAST_UPDATE,ModelType.STRING,true).build(),SimpleAttributeDefinitionBuilder.create(OS,ModelType.STRING,false).build(),JVM_DEFINITION,CPU_DEFINITION).setAttributeMarshaller(AttributeMarshaller.ELEMENT_ONLY_OBJECT).build() @TO@ new ObjectTypeAttributeDefinition.Builder(SUMMARY,SimpleAttributeDefinitionBuilder.create(NODE_NAME,ModelType.STRING,true).build(),SimpleAttributeDefinitionBuilder.create(HOSTNAME,ModelType.STRING,true).build(),SimpleAttributeDefinitionBuilder.create(INSTANCE_ID,ModelType.STRING,true).build(),SimpleAttributeDefinitionBuilder.create(PRODUCT_NAME,ModelType.STRING,true).build(),SimpleAttributeDefinitionBuilder.create(PRODUCT_COMMUNITY_IDENTIFIER,ModelType.STRING).setAllowedValues(PRODUCT_TYPE,PROJECT_TYPE).build(),SimpleAttributeDefinitionBuilder.create(PRODUCT_VERSION,ModelType.STRING,true).build(),SimpleAttributeDefinitionBuilder.create(PRODUCT_HOME,ModelType.STRING,true).build(),SimpleAttributeDefinitionBuilder.create(PRODUCT_INSTALLATION_DATE,ModelType.STRING,true).build(),SimpleAttributeDefinitionBuilder.create(PRODUCT_LAST_UPDATE,ModelType.STRING,true).build(),SimpleAttributeDefinitionBuilder.create(OS,ModelType.STRING,false).build(),JVM_DEFINITION,CPU_DEFINITION).setAttributeMarshaller(AttributeMarshaller.ELEMENT_ONLY_OBJECT).build() @AT@ 6035 @LENGTH@ 1323
---------UPD ClassInstanceCreation@@ObjectTypeAttributeDefinition.Builder[SUMMARY, SimpleAttributeDefinitionBuilder.create(NODE_NAME,ModelType.STRING,true).build(), SimpleAttributeDefinitionBuilder.create(HOSTNAME,ModelType.STRING,true).build(), SimpleAttributeDefinitionBuilder.create(INSTANCE_ID,ModelType.STRING,true).build(), SimpleAttributeDefinitionBuilder.create(PRODUCT_NAME,ModelType.STRING,true).build(), SimpleAttributeDefinitionBuilder.create(PRODUCT_COMMUNITY_IDENTIFIER,ModelType.STRING,false).setDefaultValue(new ModelNode(PROJECT_TYPE)).setAllowedValues(PRODUCT_TYPE,PROJECT_TYPE).build(), SimpleAttributeDefinitionBuilder.create(PRODUCT_VERSION,ModelType.STRING,true).build(), SimpleAttributeDefinitionBuilder.create(PRODUCT_HOME,ModelType.STRING,true).build(), SimpleAttributeDefinitionBuilder.create(PRODUCT_INSTALLATION_DATE,ModelType.STRING,true).build(), SimpleAttributeDefinitionBuilder.create(PRODUCT_LAST_UPDATE,ModelType.STRING,true).build(), SimpleAttributeDefinitionBuilder.create(OS,ModelType.STRING,false).build(), JVM_DEFINITION, CPU_DEFINITION] @TO@ ObjectTypeAttributeDefinition.Builder[SUMMARY, SimpleAttributeDefinitionBuilder.create(NODE_NAME,ModelType.STRING,true).build(), SimpleAttributeDefinitionBuilder.create(HOSTNAME,ModelType.STRING,true).build(), SimpleAttributeDefinitionBuilder.create(INSTANCE_ID,ModelType.STRING,true).build(), SimpleAttributeDefinitionBuilder.create(PRODUCT_NAME,ModelType.STRING,true).build(), SimpleAttributeDefinitionBuilder.create(PRODUCT_COMMUNITY_IDENTIFIER,ModelType.STRING).setAllowedValues(PRODUCT_TYPE,PROJECT_TYPE).build(), SimpleAttributeDefinitionBuilder.create(PRODUCT_VERSION,ModelType.STRING,true).build(), SimpleAttributeDefinitionBuilder.create(PRODUCT_HOME,ModelType.STRING,true).build(), SimpleAttributeDefinitionBuilder.create(PRODUCT_INSTALLATION_DATE,ModelType.STRING,true).build(), SimpleAttributeDefinitionBuilder.create(PRODUCT_LAST_UPDATE,ModelType.STRING,true).build(), SimpleAttributeDefinitionBuilder.create(OS,ModelType.STRING,false).build(), JVM_DEFINITION, CPU_DEFINITION] @AT@ 6035 @LENGTH@ 1251
------------UPD MethodInvocation@@SimpleAttributeDefinitionBuilder.create(PRODUCT_COMMUNITY_IDENTIFIER,ModelType.STRING,false).setDefaultValue(new ModelNode(PROJECT_TYPE)).setAllowedValues(PRODUCT_TYPE,PROJECT_TYPE).build() @TO@ SimpleAttributeDefinitionBuilder.create(PRODUCT_COMMUNITY_IDENTIFIER,ModelType.STRING).setAllowedValues(PRODUCT_TYPE,PROJECT_TYPE).build() @AT@ 6486 @LENGTH@ 234
---------------DEL MethodInvocation@@MethodName:setDefaultValue:[new ModelNode(PROJECT_TYPE)] @AT@ 6486 @LENGTH@ 160
------------------DEL ClassInstanceCreation@@ModelNode[PROJECT_TYPE] @AT@ 6618 @LENGTH@ 27
---------------------DEL New@@new @AT@ 6618 @LENGTH@ 3
---------------------DEL SimpleType@@ModelNode @AT@ 6622 @LENGTH@ 9
---------------------DEL SimpleName@@PROJECT_TYPE @AT@ 6632 @LENGTH@ 12
---------------UPD MethodInvocation@@MethodName:create:[PRODUCT_COMMUNITY_IDENTIFIER, ModelType.STRING, false] @TO@ MethodName:create:[PRODUCT_COMMUNITY_IDENTIFIER, ModelType.STRING] @AT@ 6486 @LENGTH@ 94
------------------DEL BooleanLiteral@@false @AT@ 6574 @LENGTH@ 5


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled(); @AT@ 5209 @LENGTH@ 160
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5217 @LENGTH@ 151
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5217 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5234 @LENGTH@ 134
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 5234 @LENGTH@ 64
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5234 @LENGTH@ 35
---------UPD MethodInvocation@@componentConfiguration.getConfigurer().isEnabled() @TO@ componentConfiguration.getCustomizer().isEnabled() @AT@ 5318 @LENGTH@ 50
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5318 @LENGTH@ 38


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<GoogleCalendarComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  ComponentCustomizer<GoogleCalendarComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5601 @LENGTH@ 347
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 5605 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5605 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  ComponentCustomizer<GoogleCalendarComponent> configurer : customizers) {    LOGGER.debug("Configure component {}, with configurer {}",component,configurer);    configurer.customize(component);  }} @TO@ ThenBody:{  for (  ComponentCustomizer<GoogleCalendarComponent> customizer : customizers) {    LOGGER.debug("Configure component {}, with customizer {}",component,customizer);    customizer.customize(component);  }} @AT@ 5661 @LENGTH@ 287
------UPD EnhancedForStatement@@for (ComponentCustomizer<GoogleCalendarComponent> configurer : customizers) {  LOGGER.debug("Configure component {}, with configurer {}",component,configurer);  configurer.customize(component);} @TO@ for (ComponentCustomizer<GoogleCalendarComponent> customizer : customizers) {  LOGGER.debug("Configure component {}, with customizer {}",component,customizer);  customizer.customize(component);} @AT@ 5675 @LENGTH@ 263
---------UPD SingleVariableDeclaration@@ComponentCustomizer<GoogleCalendarComponent> configurer @TO@ ComponentCustomizer<GoogleCalendarComponent> customizer @AT@ 5680 @LENGTH@ 55
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5725 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5769 @LENGTH@ 106
------------UPD MethodInvocation@@LOGGER.debug("Configure component {}, with configurer {}",component,configurer) @TO@ LOGGER.debug("Configure component {}, with customizer {}",component,customizer) @AT@ 5769 @LENGTH@ 105
---------------UPD SimpleName@@MethodName:debug:["Configure component {}, with configurer {}", component, configurer] @TO@ MethodName:debug:["Configure component {}, with customizer {}", component, customizer] @AT@ 5776 @LENGTH@ 98
------------------UPD StringLiteral@@"Configure component {}, with configurer {}" @TO@ "Configure component {}, with customizer {}" @AT@ 5782 @LENGTH@ 44
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5863 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(component) @TO@ MethodInvocation:customizer.customize(component) @AT@ 5892 @LENGTH@ 32
------------UPD MethodInvocation@@configurer.customize(component) @TO@ customizer.customize(component) @AT@ 5892 @LENGTH@ 31
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5892 @LENGTH@ 10


UPD ExpressionStatement@@MethodInvocation:bodyBuilder.append("if (%s.get%s() != null || %s.get%s() != null",entityItemName,entityMetadata.getCurrentIndentifierField().getFieldName().getSymbolNameCapitalisedFirstLetter(),entityItemName,entityMetadata.getCurrentVersionField().getFieldName().getSymbolNameCapitalisedFirstLetter()) @TO@ MethodInvocation:bodyBuilder.append("if (%s || %s",createNullExpression(entityMetadata.getCurrentIndentifierField()),createNullExpression(entityMetadata.getCurrentVersionField())) @AT@ 50624 @LENGTH@ 325
---UPD MethodInvocation@@bodyBuilder.append("if (%s.get%s() != null || %s.get%s() != null",entityItemName,entityMetadata.getCurrentIndentifierField().getFieldName().getSymbolNameCapitalisedFirstLetter(),entityItemName,entityMetadata.getCurrentVersionField().getFieldName().getSymbolNameCapitalisedFirstLetter()) @TO@ bodyBuilder.append("if (%s || %s",createNullExpression(entityMetadata.getCurrentIndentifierField()),createNullExpression(entityMetadata.getCurrentVersionField())) @AT@ 50624 @LENGTH@ 324
------UPD SimpleName@@MethodName:append:["if (%s.get%s() != null || %s.get%s() != null", entityItemName, entityMetadata.getCurrentIndentifierField().getFieldName().getSymbolNameCapitalisedFirstLetter(), entityItemName, entityMetadata.getCurrentVersionField().getFieldName().getSymbolNameCapitalisedFirstLetter()] @TO@ MethodName:append:["if (%s || %s", createNullExpression(entityMetadata.getCurrentIndentifierField()), createNullExpression(entityMetadata.getCurrentVersionField())] @AT@ 50636 @LENGTH@ 312
---------UPD StringLiteral@@"if (%s.get%s() != null || %s.get%s() != null" @TO@ "if (%s || %s" @AT@ 50643 @LENGTH@ 46
---------INS MethodInvocation@@createNullExpression(entityMetadata.getCurrentIndentifierField()) @TO@ SimpleName@@MethodName:append:["if (%s.get%s() != null || %s.get%s() != null", entityItemName, entityMetadata.getCurrentIndentifierField().getFieldName().getSymbolNameCapitalisedFirstLetter(), entityItemName, entityMetadata.getCurrentVersionField().getFieldName().getSymbolNameCapitalisedFirstLetter()] @AT@ 50667 @LENGTH@ 65
------------INS SimpleName@@MethodName:createNullExpression:[entityMetadata.getCurrentIndentifierField()] @TO@ MethodInvocation@@createNullExpression(entityMetadata.getCurrentIndentifierField()) @AT@ 50667 @LENGTH@ 65
---------------MOV MethodInvocation@@entityMetadata.getCurrentIndentifierField().getFieldName().getSymbolNameCapitalisedFirstLetter() @TO@ SimpleName@@MethodName:createNullExpression:[entityMetadata.getCurrentIndentifierField()] @AT@ 50715 @LENGTH@ 109
---------DEL SimpleName@@entityItemName @AT@ 50691 @LENGTH@ 14
---------UPD MethodInvocation@@entityMetadata.getCurrentIndentifierField().getFieldName().getSymbolNameCapitalisedFirstLetter() @TO@ entityMetadata.getCurrentIndentifierField() @AT@ 50715 @LENGTH@ 109
---------INS MethodInvocation@@createNullExpression(entityMetadata.getCurrentVersionField()) @TO@ SimpleName@@MethodName:append:["if (%s.get%s() != null || %s.get%s() != null", entityItemName, entityMetadata.getCurrentIndentifierField().getFieldName().getSymbolNameCapitalisedFirstLetter(), entityItemName, entityMetadata.getCurrentVersionField().getFieldName().getSymbolNameCapitalisedFirstLetter()] @AT@ 50742 @LENGTH@ 61
------------INS SimpleName@@MethodName:createNullExpression:[entityMetadata.getCurrentVersionField()] @TO@ MethodInvocation@@createNullExpression(entityMetadata.getCurrentVersionField()) @AT@ 50742 @LENGTH@ 61
---------------MOV MethodInvocation@@entityMetadata.getCurrentVersionField().getFieldName().getSymbolNameCapitalisedFirstLetter() @TO@ SimpleName@@MethodName:createNullExpression:[entityMetadata.getCurrentVersionField()] @AT@ 50842 @LENGTH@ 105
---------DEL SimpleName@@entityItemName @AT@ 50826 @LENGTH@ 14
---------UPD MethodInvocation@@entityMetadata.getCurrentVersionField().getFieldName().getSymbolNameCapitalisedFirstLetter() @TO@ entityMetadata.getCurrentVersionField() @AT@ 50842 @LENGTH@ 105


INS ExpressionStatement@@MethodInvocation:doPostSetup() @TO@ MethodDeclaration@@protected, void, MethodName:setUp, Exception,  @AT@ 1438 @LENGTH@ 14
---INS MethodInvocation@@MethodName:doPostSetup:[] @TO@ ExpressionStatement@@MethodInvocation:doPostSetup() @AT@ 1438 @LENGTH@ 13


UPD TypeDeclaration@@[@RunWith(Suite.class), @Suite.SuiteClasses({AuditLogTestCase.class,IgnoredResourcesProfileCloneTestCase.class,CapabilityReloadRequiredUnitTestCase.class,CompositeOperationTestCase.class,CoreResourceManagementTestCase.class,CustomManagementContextTestCase.class,DeploymentRolloutFailureTestCase.class,ExplodedDeploymentTestCase.class,DirectoryGroupingByTypeTestCase.class,ExtensionManagementTestCase.class,FullReplaceUndeployTestCase.class,HcExtensionAndSubsystemManagementTestCase.class,IgnoreUnusedConfigurationTestCase.class,IgnoredResourcesTestCase.class,JMXHostSubsystemTestCase.class,ManagementAccessTestCase.class,ManagementClientContentTestCase.class,ManagementReadsTestCase.class,ManagementVersionTestCase.class,ModuleLoadingManagementTestCase.class,OperationCancellationTestCase.class,OperationErrorTestCase.class,OperationTransformationTestCase.class,ResponseStreamTestCase.class,ServerRestartRequiredTestCase.class,ValidateAddressOperationTestCase.class,ValidateOperationOperationTestCase.class,WildcardOperationsTestCase.class}), public]DomainTestSuite,  @TO@ [@RunWith(Suite.class), @Suite.SuiteClasses({AuditLogTestCase.class,IgnoredResourcesProfileCloneTestCase.class,CapabilityReloadRequiredUnitTestCase.class,CompositeOperationTestCase.class,CoreResourceManagementTestCase.class,CustomManagementContextTestCase.class,DeploymentRolloutFailureTestCase.class,ExplodedDeploymentTestCase.class,DirectoryGroupingByTypeTestCase.class,ExtensionManagementTestCase.class,FullReplaceUndeployTestCase.class,HcExtensionAndSubsystemManagementTestCase.class,IgnoreUnusedConfigurationTestCase.class,IgnoredResourcesTestCase.class,JMXHostSubsystemTestCase.class,ManagementAccessTestCase.class,ManagementClientContentTestCase.class,ManagementReadsTestCase.class,ManagementVersionTestCase.class,ModuleLoadingManagementTestCase.class,OperationCancellationTestCase.class,OperationErrorTestCase.class,OperationTransformationTestCase.class,OperationWarningTestsCase.class,ResponseStreamTestCase.class,ServerRestartRequiredTestCase.class,ValidateAddressOperationTestCase.class,ValidateOperationOperationTestCase.class,WildcardOperationsTestCase.class}), public]DomainTestSuite,  @AT@ 1455 @LENGTH@ 2564
---UPD SingleMemberAnnotation@@@Suite.SuiteClasses({AuditLogTestCase.class,IgnoredResourcesProfileCloneTestCase.class,CapabilityReloadRequiredUnitTestCase.class,CompositeOperationTestCase.class,CoreResourceManagementTestCase.class,CustomManagementContextTestCase.class,DeploymentRolloutFailureTestCase.class,ExplodedDeploymentTestCase.class,DirectoryGroupingByTypeTestCase.class,ExtensionManagementTestCase.class,FullReplaceUndeployTestCase.class,HcExtensionAndSubsystemManagementTestCase.class,IgnoreUnusedConfigurationTestCase.class,IgnoredResourcesTestCase.class,JMXHostSubsystemTestCase.class,ManagementAccessTestCase.class,ManagementClientContentTestCase.class,ManagementReadsTestCase.class,ManagementVersionTestCase.class,ModuleLoadingManagementTestCase.class,OperationCancellationTestCase.class,OperationErrorTestCase.class,OperationTransformationTestCase.class,ResponseStreamTestCase.class,ServerRestartRequiredTestCase.class,ValidateAddressOperationTestCase.class,ValidateOperationOperationTestCase.class,WildcardOperationsTestCase.class}) @TO@ @Suite.SuiteClasses({AuditLogTestCase.class,IgnoredResourcesProfileCloneTestCase.class,CapabilityReloadRequiredUnitTestCase.class,CompositeOperationTestCase.class,CoreResourceManagementTestCase.class,CustomManagementContextTestCase.class,DeploymentRolloutFailureTestCase.class,ExplodedDeploymentTestCase.class,DirectoryGroupingByTypeTestCase.class,ExtensionManagementTestCase.class,FullReplaceUndeployTestCase.class,HcExtensionAndSubsystemManagementTestCase.class,IgnoreUnusedConfigurationTestCase.class,IgnoredResourcesTestCase.class,JMXHostSubsystemTestCase.class,ManagementAccessTestCase.class,ManagementClientContentTestCase.class,ManagementReadsTestCase.class,ManagementVersionTestCase.class,ModuleLoadingManagementTestCase.class,OperationCancellationTestCase.class,OperationErrorTestCase.class,OperationTransformationTestCase.class,OperationWarningTestsCase.class,ResponseStreamTestCase.class,ServerRestartRequiredTestCase.class,ValidateAddressOperationTestCase.class,ValidateOperationOperationTestCase.class,WildcardOperationsTestCase.class}) @AT@ 1477 @LENGTH@ 1271


UPD MethodDeclaration@@public, SecurityExpressionHandler<Message<Object>>, MethodName:messageSecurityExpressionHandler,  @TO@ public, static, SecurityExpressionHandler<Message<Object>>, MethodName:messageSecurityExpressionHandler,  @AT@ 14390 @LENGTH@ 564
---INS Modifier@@static @TO@ MethodDeclaration@@public, SecurityExpressionHandler<Message<Object>>, MethodName:messageSecurityExpressionHandler,  @AT@ 14397 @LENGTH@ 6


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled(); @AT@ 5327 @LENGTH@ 160
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5335 @LENGTH@ 151
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5335 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5352 @LENGTH@ 134
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 5352 @LENGTH@ 64
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5352 @LENGTH@ 35
---------UPD MethodInvocation@@componentConfiguration.getConfigurer().isEnabled() @TO@ componentConfiguration.getCustomizer().isEnabled() @AT@ 5436 @LENGTH@ 50
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5436 @LENGTH@ 38


UPD IfStatement@@if (exchange.getException() != null) {  throw exchange.getException();} else {  Message responseMessage=exchange.hasOut() ? exchange.getOut(Message.class) : exchange.getIn(Message.class);  if (responseMessage != null) {    Source responseBody=responseMessage.getBody(Source.class);    WebServiceMessage response=messageContext.getResponse();    configuration.getMessageFilter().filterConsumer(exchange,response);    XmlConverter xmlConverter=configuration.getXmlConverter();    xmlConverter.toResult(responseBody,response.getPayloadResult());  }} @TO@ if (exchange.getException() != null) {  throw exchange.getException();} else if (exchange.getPattern().isOutCapable()) {  Message responseMessage=exchange.hasOut() ? exchange.getOut(Message.class) : exchange.getIn(Message.class);  if (responseMessage != null) {    Source responseBody=responseMessage.getBody(Source.class);    WebServiceMessage response=messageContext.getResponse();    configuration.getMessageFilter().filterConsumer(exchange,response);    XmlConverter xmlConverter=configuration.getXmlConverter();    xmlConverter.toResult(responseBody,response.getPayloadResult());  }} @AT@ 2507 @LENGTH@ 685
---INS Block@@ElseBody:if (exchange.getPattern().isOutCapable()) {  Message responseMessage=exchange.hasOut() ? exchange.getOut(Message.class) : exchange.getIn(Message.class);  if (responseMessage != null) {    Source responseBody=responseMessage.getBody(Source.class);    WebServiceMessage response=messageContext.getResponse();    configuration.getMessageFilter().filterConsumer(exchange,response);    XmlConverter xmlConverter=configuration.getXmlConverter();    xmlConverter.toResult(responseBody,response.getPayloadResult());  }} @TO@ IfStatement@@if (exchange.getException() != null) {  throw exchange.getException();} else {  Message responseMessage=exchange.hasOut() ? exchange.getOut(Message.class) : exchange.getIn(Message.class);  if (responseMessage != null) {    Source responseBody=responseMessage.getBody(Source.class);    WebServiceMessage response=messageContext.getResponse();    configuration.getMessageFilter().filterConsumer(exchange,response);    XmlConverter xmlConverter=configuration.getXmlConverter();    xmlConverter.toResult(responseBody,response.getPayloadResult());  }} @AT@ 2604 @LENGTH@ 630
------INS IfStatement@@if (exchange.getPattern().isOutCapable()) {  Message responseMessage=exchange.hasOut() ? exchange.getOut(Message.class) : exchange.getIn(Message.class);  if (responseMessage != null) {    Source responseBody=responseMessage.getBody(Source.class);    WebServiceMessage response=messageContext.getResponse();    configuration.getMessageFilter().filterConsumer(exchange,response);    XmlConverter xmlConverter=configuration.getXmlConverter();    xmlConverter.toResult(responseBody,response.getPayloadResult());  }} @TO@ Block@@ElseBody:if (exchange.getPattern().isOutCapable()) {  Message responseMessage=exchange.hasOut() ? exchange.getOut(Message.class) : exchange.getIn(Message.class);  if (responseMessage != null) {    Source responseBody=responseMessage.getBody(Source.class);    WebServiceMessage response=messageContext.getResponse();    configuration.getMessageFilter().filterConsumer(exchange,response);    XmlConverter xmlConverter=configuration.getXmlConverter();    xmlConverter.toResult(responseBody,response.getPayloadResult());  }} @AT@ 2604 @LENGTH@ 630
---------MOV Block@@ElseBody:{  Message responseMessage=exchange.hasOut() ? exchange.getOut(Message.class) : exchange.getIn(Message.class);  if (responseMessage != null) {    Source responseBody=responseMessage.getBody(Source.class);    WebServiceMessage response=messageContext.getResponse();    configuration.getMessageFilter().filterConsumer(exchange,response);    XmlConverter xmlConverter=configuration.getXmlConverter();    xmlConverter.toResult(responseBody,response.getPayloadResult());  }} @TO@ IfStatement@@if (exchange.getPattern().isOutCapable()) {  Message responseMessage=exchange.hasOut() ? exchange.getOut(Message.class) : exchange.getIn(Message.class);  if (responseMessage != null) {    Source responseBody=responseMessage.getBody(Source.class);    WebServiceMessage response=messageContext.getResponse();    configuration.getMessageFilter().filterConsumer(exchange,response);    XmlConverter xmlConverter=configuration.getXmlConverter();    xmlConverter.toResult(responseBody,response.getPayloadResult());  }} @AT@ 2604 @LENGTH@ 588
---------INS MethodInvocation@@exchange.getPattern().isOutCapable() @TO@ IfStatement@@if (exchange.getPattern().isOutCapable()) {  Message responseMessage=exchange.hasOut() ? exchange.getOut(Message.class) : exchange.getIn(Message.class);  if (responseMessage != null) {    Source responseBody=responseMessage.getBody(Source.class);    WebServiceMessage response=messageContext.getResponse();    configuration.getMessageFilter().filterConsumer(exchange,response);    XmlConverter xmlConverter=configuration.getXmlConverter();    xmlConverter.toResult(responseBody,response.getPayloadResult());  }} @AT@ 2608 @LENGTH@ 36
------------INS MethodInvocation@@MethodName:getPattern:[] @TO@ MethodInvocation@@exchange.getPattern().isOutCapable() @AT@ 2608 @LENGTH@ 21
------------INS SimpleName@@Name:exchange @TO@ MethodInvocation@@exchange.getPattern().isOutCapable() @AT@ 2608 @LENGTH@ 8
------------INS SimpleName@@MethodName:isOutCapable:[] @TO@ MethodInvocation@@exchange.getPattern().isOutCapable() @AT@ 2630 @LENGTH@ 14
---UPD Block@@ElseBody:{  Message responseMessage=exchange.hasOut() ? exchange.getOut(Message.class) : exchange.getIn(Message.class);  if (responseMessage != null) {    Source responseBody=responseMessage.getBody(Source.class);    WebServiceMessage response=messageContext.getResponse();    configuration.getMessageFilter().filterConsumer(exchange,response);    XmlConverter xmlConverter=configuration.getXmlConverter();    xmlConverter.toResult(responseBody,response.getPayloadResult());  }} @TO@ ThenBody:{  Message responseMessage=exchange.hasOut() ? exchange.getOut(Message.class) : exchange.getIn(Message.class);  if (responseMessage != null) {    Source responseBody=responseMessage.getBody(Source.class);    WebServiceMessage response=messageContext.getResponse();    configuration.getMessageFilter().filterConsumer(exchange,response);    XmlConverter xmlConverter=configuration.getXmlConverter();    xmlConverter.toResult(responseBody,response.getPayloadResult());  }} @AT@ 2604 @LENGTH@ 588


UPD EnhancedForStatement@@for (Map.Entry<String,Object> entry : propertyEntries) {  dynamicQueryContext.setParameter(StructuredQName.fromClarkName(parameterPrefix + entry.getKey()),new ObjectValue(entry.getValue()));} @TO@ for (Map.Entry<String,Object> entry : propertyEntries) {  if (entry.getValue() != null) {    dynamicQueryContext.setParameter(StructuredQName.fromClarkName(parameterPrefix + entry.getKey()),new ObjectValue(entry.getValue()));  }} @AT@ 22296 @LENGTH@ 259
---INS IfStatement@@if (entry.getValue() != null) {  dynamicQueryContext.setParameter(StructuredQName.fromClarkName(parameterPrefix + entry.getKey()),new ObjectValue(entry.getValue()));} @TO@ EnhancedForStatement@@for (Map.Entry<String,Object> entry : propertyEntries) {  dynamicQueryContext.setParameter(StructuredQName.fromClarkName(parameterPrefix + entry.getKey()),new ObjectValue(entry.getValue()));} @AT@ 22411 @LENGTH@ 261
------INS InfixExpression@@entry.getValue() != null @TO@ IfStatement@@if (entry.getValue() != null) {  dynamicQueryContext.setParameter(StructuredQName.fromClarkName(parameterPrefix + entry.getKey()),new ObjectValue(entry.getValue()));} @AT@ 22415 @LENGTH@ 24
---------INS MethodInvocation@@entry.getValue() @TO@ InfixExpression@@entry.getValue() != null @AT@ 22415 @LENGTH@ 16
------------INS SimpleName@@Name:entry @TO@ MethodInvocation@@entry.getValue() @AT@ 22415 @LENGTH@ 5
------------INS SimpleName@@MethodName:getValue:[] @TO@ MethodInvocation@@entry.getValue() @AT@ 22421 @LENGTH@ 10
---------INS Operator@@!= @TO@ InfixExpression@@entry.getValue() != null @AT@ 22431 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@entry.getValue() != null @AT@ 22435 @LENGTH@ 4
------INS Block@@ThenBody:{  dynamicQueryContext.setParameter(StructuredQName.fromClarkName(parameterPrefix + entry.getKey()),new ObjectValue(entry.getValue()));} @TO@ IfStatement@@if (entry.getValue() != null) {  dynamicQueryContext.setParameter(StructuredQName.fromClarkName(parameterPrefix + entry.getKey()),new ObjectValue(entry.getValue()));} @AT@ 22441 @LENGTH@ 231
---------MOV ExpressionStatement@@MethodInvocation:dynamicQueryContext.setParameter(StructuredQName.fromClarkName(parameterPrefix + entry.getKey()),new ObjectValue(entry.getValue())) @TO@ Block@@ThenBody:{  dynamicQueryContext.setParameter(StructuredQName.fromClarkName(parameterPrefix + entry.getKey()),new ObjectValue(entry.getValue()));} @AT@ 22366 @LENGTH@ 179


INS MethodDeclaration@@public, String, MethodName:toString, String input,  @TO@ TypeDeclaration@@[public]MyOtherFooBean,  @AT@ 1129 @LENGTH@ 90
---INS Modifier@@public @TO@ MethodDeclaration@@public, String, MethodName:toString, String input,  @AT@ 1129 @LENGTH@ 6
---INS SimpleType@@String @TO@ MethodDeclaration@@public, String, MethodName:toString, String input,  @AT@ 1136 @LENGTH@ 6
---INS SimpleName@@MethodName:toString @TO@ MethodDeclaration@@public, String, MethodName:toString, String input,  @AT@ 1143 @LENGTH@ 8
---INS SingleVariableDeclaration@@String input @TO@ MethodDeclaration@@public, String, MethodName:toString, String input,  @AT@ 1152 @LENGTH@ 12
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String input @AT@ 1152 @LENGTH@ 6
------INS SimpleName@@input @TO@ SingleVariableDeclaration@@String input @AT@ 1159 @LENGTH@ 5
---INS ReturnStatement@@StringLiteral:"toString(String) was called" @TO@ MethodDeclaration@@public, String, MethodName:toString, String input,  @AT@ 1176 @LENGTH@ 37
------INS StringLiteral@@"toString(String) was called" @TO@ ReturnStatement@@StringLiteral:"toString(String) was called" @AT@ 1183 @LENGTH@ 29


UPD CatchClause@@catch (final FileNotFoundException e) {  listener.fileNotFound();} @TO@ catch (final FileNotFoundException e) {  listener.fileNotFound();  Thread.sleep(delayMillis);} @AT@ 16984 @LENGTH@ 209
---INS ExpressionStatement@@MethodInvocation:Thread.sleep(delayMillis) @TO@ CatchClause@@catch (final FileNotFoundException e) {  listener.fileNotFound();} @AT@ 17196 @LENGTH@ 26
------INS MethodInvocation@@Thread.sleep(delayMillis) @TO@ ExpressionStatement@@MethodInvocation:Thread.sleep(delayMillis) @AT@ 17196 @LENGTH@ 25
---------INS SimpleName@@Name:Thread @TO@ MethodInvocation@@Thread.sleep(delayMillis) @AT@ 17196 @LENGTH@ 6
---------INS SimpleName@@MethodName:sleep:[delayMillis] @TO@ MethodInvocation@@Thread.sleep(delayMillis) @AT@ 17203 @LENGTH@ 18
------------INS SimpleName@@delayMillis @TO@ SimpleName@@MethodName:sleep:[delayMillis] @AT@ 17209 @LENGTH@ 11


UPD IfStatement@@if (hasRefreshToken && keystore == null) {  ObjectHelper.notNull(userName,"userName (username/password authentication)");  ObjectHelper.notNull(password,"password (username/password authentication)");  ObjectHelper.notNull(clientSecret,"clientSecret (username/password authentication)");  type=Type.USERNAME_PASSWORD;} else if (hasRefreshToken && keystore == null) {  ObjectHelper.notNull(refreshToken,"refreshToken (authentication with refresh token)");  ObjectHelper.notNull(clientSecret,"clientSecret (authentication with refresh token)");  type=Type.REFRESH_TOKEN;} else if (keystore != null) {  ObjectHelper.notNull(userName,"userName (JWT authentication)");  ObjectHelper.notNull(keystore,"keystore (JWT authentication)");  type=Type.JWT;} else {  throw new IllegalArgumentException("You must specify parameters aligned with one of the supported authentication methods:" + " for username and password authentication: userName, password, clientSecret;" + " for refresh token authentication: refreshToken, clientSecret;"+ " for JWT: userName, keystore. And for every one of those loginUrl and clientId must be specified also.");} @TO@ if (!hasRefreshToken && keystore == null) {  ObjectHelper.notNull(userName,"userName (username/password authentication)");  ObjectHelper.notNull(password,"password (username/password authentication)");  ObjectHelper.notNull(clientSecret,"clientSecret (username/password authentication)");  type=Type.USERNAME_PASSWORD;} else if (hasRefreshToken && keystore == null) {  ObjectHelper.notNull(refreshToken,"refreshToken (authentication with refresh token)");  ObjectHelper.notNull(clientSecret,"clientSecret (authentication with refresh token)");  type=Type.REFRESH_TOKEN;} else if (keystore != null) {  ObjectHelper.notNull(userName,"userName (JWT authentication)");  ObjectHelper.notNull(keystore,"keystore (JWT authentication)");  type=Type.JWT;} else {  throw new IllegalArgumentException("You must specify parameters aligned with one of the supported authentication methods:" + " for username and password authentication: userName, password, clientSecret;" + " for refresh token authentication: refreshToken, clientSecret;"+ " for JWT: userName, keystore. And for every one of those loginUrl and clientId must be specified also.");} @AT@ 5446 @LENGTH@ 1381
---UPD InfixExpression@@hasRefreshToken && keystore == null @TO@ !hasRefreshToken && keystore == null @AT@ 5450 @LENGTH@ 35
------DEL SimpleName@@hasRefreshToken @AT@ 5450 @LENGTH@ 15
------INS PrefixExpression@@!hasRefreshToken @TO@ InfixExpression@@hasRefreshToken && keystore == null @AT@ 5453 @LENGTH@ 16
---------INS Operator@@! @TO@ PrefixExpression@@!hasRefreshToken @AT@ 5453 @LENGTH@ 1
---------INS SimpleName@@hasRefreshToken @TO@ PrefixExpression@@!hasRefreshToken @AT@ 5454 @LENGTH@ 15


UPD ExpressionStatement@@MethodInvocation:assertThat(repository.findOne(Example.of(person)).get(),instanceOf(Person.class)) @TO@ MethodInvocation:assertThat(repository.findOne(Example.of(person))).containsInstanceOf(Person.class) @AT@ 1923 @LENGTH@ 83
---UPD MethodInvocation@@assertThat(repository.findOne(Example.of(person)).get(),instanceOf(Person.class)) @TO@ assertThat(repository.findOne(Example.of(person))).containsInstanceOf(Person.class) @AT@ 1923 @LENGTH@ 82
------DEL SimpleName@@MethodName:assertThat:[repository.findOne(Example.of(person)).get(), instanceOf(Person.class)] @AT@ 1923 @LENGTH@ 82
---------DEL MethodInvocation@@instanceOf(Person.class) @AT@ 1980 @LENGTH@ 24
------MOV MethodInvocation@@repository.findOne(Example.of(person)).get() @TO@ MethodInvocation@@assertThat(repository.findOne(Example.of(person)).get(),instanceOf(Person.class)) @AT@ 1934 @LENGTH@ 44
---------UPD MethodInvocation@@MethodName:findOne:[Example.of(person)] @TO@ repository.findOne(Example.of(person)) @AT@ 1934 @LENGTH@ 38
------------INS SimpleName@@Name:repository @TO@ MethodInvocation@@MethodName:findOne:[Example.of(person)] @AT@ 1919 @LENGTH@ 10
------------INS SimpleName@@MethodName:findOne:[Example.of(person)] @TO@ MethodInvocation@@MethodName:findOne:[Example.of(person)] @AT@ 1930 @LENGTH@ 27
---------------MOV MethodInvocation@@Example.of(person) @TO@ SimpleName@@MethodName:findOne:[Example.of(person)] @AT@ 1953 @LENGTH@ 18
---------DEL SimpleName@@Name:repository @AT@ 1934 @LENGTH@ 10
---------DEL SimpleName@@MethodName:get:[] @AT@ 1973 @LENGTH@ 5
------MOV SimpleName@@MethodName:instanceOf:[Person.class] @TO@ MethodInvocation@@assertThat(repository.findOne(Example.of(person)).get(),instanceOf(Person.class)) @AT@ 1980 @LENGTH@ 24


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled(); @AT@ 5226 @LENGTH@ 160
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5234 @LENGTH@ 151
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5234 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5251 @LENGTH@ 134
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 5251 @LENGTH@ 64
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5251 @LENGTH@ 35
---------UPD MethodInvocation@@componentConfiguration.getConfigurer().isEnabled() @TO@ componentConfiguration.getCustomizer().isEnabled() @AT@ 5335 @LENGTH@ 50
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5335 @LENGTH@ 38


UPD MethodDeclaration@@public, void, MethodName:newIntegrationTest, @CliOption(key="class",mandatory=false,unspecifiedDefaultValue="*",help="The name of the repository to create an integration test. If you consider it necessary, you can " + "also specify the package. Ex.: `--class ~.repository.MyRepository` (where `~` is the " + "base package). When working with multiple modules, you should specify the name of the "+ "class and the module where it is. Ex.: `--class repository:~.MyRepository`. If the "+ "module is not specified, it is assumed that the repository is in the module which has the "+ "focus. "+ "Possible values are: any of the repositories in the project.") final JavaType klass, @CliOption(key="module",mandatory=true,help="The application module where generate the integration test." + "This option is mandatory if the focus is not set in an application module, that is, a " + "module containing an `@SpringBootApplication` class. "+ "This option is available only if there are more than one application module and none of"+ " them is focused. "+ "Default if option not present: the unique 'application' module, or focused 'application'"+ " module.",unspecifiedDefaultValue=".",optionContext=APPLICATION_FEATURE_INCLUDE_CURRENT_MODULE) Pom module, @CliOption(key="permitReservedWords",mandatory=false,unspecifiedDefaultValue="false",specifiedDefaultValue="true",help="Indicates whether reserved words are ignored by Roo. " + "Default if option present: `true`; default if option not present: `false`.") final boolean permitReservedWords,  @TO@ public, void, MethodName:newIntegrationTest, @CliOption(key="class",mandatory=false,unspecifiedDefaultValue="*",help="The name of the repository to create an integration test. If you consider it necessary, you can " + "also specify the package. Ex.: `--class ~.repository.MyRepository` (where `~` is the " + "base package). When working with multiple modules, you should specify the name of the "+ "class and the module where it is. Ex.: `--class repository:~.MyRepository`. If the "+ "module is not specified, it is assumed that the repository is in the module which has the "+ "focus. "+ "Possible values are: any of the repositories in the project.") final JavaType klass, @CliOption(key="module",mandatory=true,help="The application module where generate the integration test." + "This option is mandatory if the focus is not set in an 'application' module and there " + "are more than one 'application' modules, that is, a module containing an "+ "`@SpringBootApplication` class. "+ "This option is available only if there are more than one application module and none of"+ " them is focused. "+ "Default if option not present: the unique 'application' module, or focused 'application'"+ " module.",unspecifiedDefaultValue=".",optionContext=APPLICATION_FEATURE_INCLUDE_CURRENT_MODULE) Pom module, @CliOption(key="permitReservedWords",mandatory=false,unspecifiedDefaultValue="false",specifiedDefaultValue="true",help="Indicates whether reserved words are ignored by Roo. " + "Default if option present: `true`; default if option not present: `false`.") final boolean permitReservedWords,  @AT@ 8645 @LENGTH@ 2222
---UPD SingleVariableDeclaration@@@CliOption(key="module",mandatory=true,help="The application module where generate the integration test." + "This option is mandatory if the focus is not set in an application module, that is, a " + "module containing an `@SpringBootApplication` class. "+ "This option is available only if there are more than one application module and none of"+ " them is focused. "+ "Default if option not present: the unique 'application' module, or focused 'application'"+ " module.",unspecifiedDefaultValue=".",optionContext=APPLICATION_FEATURE_INCLUDE_CURRENT_MODULE) Pom module @TO@ @CliOption(key="module",mandatory=true,help="The application module where generate the integration test." + "This option is mandatory if the focus is not set in an 'application' module and there " + "are more than one 'application' modules, that is, a module containing an "+ "`@SpringBootApplication` class. "+ "This option is available only if there are more than one application module and none of"+ " them is focused. "+ "Default if option not present: the unique 'application' module, or focused 'application'"+ " module.",unspecifiedDefaultValue=".",optionContext=APPLICATION_FEATURE_INCLUDE_CURRENT_MODULE) Pom module @AT@ 9446 @LENGTH@ 711


UPD IfStatement@@if (useConfigurers && ObjectHelper.isNotEmpty(customizers)) {  for (  DataFormatCustomizer<SyslogDataFormat> configurer : customizers) {    LOGGER.debug("Configure dataformat {}, with configurer {}",dataformat,configurer);    configurer.customize(dataformat);  }} @TO@ if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {  for (  DataFormatCustomizer<SyslogDataFormat> customizer : customizers) {    LOGGER.debug("Configure dataformat {}, with customizer {}",dataformat,customizer);    customizer.customize(dataformat);  }} @AT@ 5330 @LENGTH@ 425
---UPD InfixExpression@@useConfigurers && ObjectHelper.isNotEmpty(customizers) @TO@ useCustomizers && ObjectHelper.isNotEmpty(customizers) @AT@ 5334 @LENGTH@ 54
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5334 @LENGTH@ 14
---UPD Block@@ThenBody:{  for (  DataFormatCustomizer<SyslogDataFormat> configurer : customizers) {    LOGGER.debug("Configure dataformat {}, with configurer {}",dataformat,configurer);    configurer.customize(dataformat);  }} @TO@ ThenBody:{  for (  DataFormatCustomizer<SyslogDataFormat> customizer : customizers) {    LOGGER.debug("Configure dataformat {}, with customizer {}",dataformat,customizer);    customizer.customize(dataformat);  }} @AT@ 5390 @LENGTH@ 365
------UPD EnhancedForStatement@@for (DataFormatCustomizer<SyslogDataFormat> configurer : customizers) {  LOGGER.debug("Configure dataformat {}, with configurer {}",dataformat,configurer);  configurer.customize(dataformat);} @TO@ for (DataFormatCustomizer<SyslogDataFormat> customizer : customizers) {  LOGGER.debug("Configure dataformat {}, with customizer {}",dataformat,customizer);  customizer.customize(dataformat);} @AT@ 5412 @LENGTH@ 325
---------UPD SingleVariableDeclaration@@DataFormatCustomizer<SyslogDataFormat> configurer @TO@ DataFormatCustomizer<SyslogDataFormat> customizer @AT@ 5417 @LENGTH@ 49
------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5456 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Configure dataformat {}, with configurer {}",dataformat,configurer) @TO@ MethodInvocation:LOGGER.debug("Configure dataformat {}, with customizer {}",dataformat,customizer) @AT@ 5508 @LENGTH@ 149
------------UPD MethodInvocation@@LOGGER.debug("Configure dataformat {}, with configurer {}",dataformat,configurer) @TO@ LOGGER.debug("Configure dataformat {}, with customizer {}",dataformat,customizer) @AT@ 5508 @LENGTH@ 148
---------------UPD SimpleName@@MethodName:debug:["Configure dataformat {}, with configurer {}", dataformat, configurer] @TO@ MethodName:debug:["Configure dataformat {}, with customizer {}", dataformat, customizer] @AT@ 5515 @LENGTH@ 141
------------------UPD StringLiteral@@"Configure dataformat {}, with configurer {}" @TO@ "Configure dataformat {}, with customizer {}" @AT@ 5554 @LENGTH@ 45
------------------UPD SimpleName@@configurer @TO@ customizer @AT@ 5645 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:configurer.customize(dataformat) @TO@ MethodInvocation:customizer.customize(dataformat) @AT@ 5682 @LENGTH@ 33
------------UPD MethodInvocation@@configurer.customize(dataformat) @TO@ customizer.customize(dataformat) @AT@ 5682 @LENGTH@ 32
---------------UPD SimpleName@@Name:configurer @TO@ Name:customizer @AT@ 5682 @LENGTH@ 10


INS MethodDeclaration@@private, String, MethodName:createNullExpression, FieldMetadata field,  @TO@ TypeDeclaration@@[public]JSONMetadata, AbstractItdTypeDetailsProvidingMetadataItem @AT@ 78367 @LENGTH@ 531
---INS Modifier@@private @TO@ MethodDeclaration@@private, String, MethodName:createNullExpression, FieldMetadata field,  @AT@ 78367 @LENGTH@ 7
---INS SimpleType@@String @TO@ MethodDeclaration@@private, String, MethodName:createNullExpression, FieldMetadata field,  @AT@ 78375 @LENGTH@ 6
---INS SimpleName@@MethodName:createNullExpression @TO@ MethodDeclaration@@private, String, MethodName:createNullExpression, FieldMetadata field,  @AT@ 78382 @LENGTH@ 20
---INS SingleVariableDeclaration@@FieldMetadata field @TO@ MethodDeclaration@@private, String, MethodName:createNullExpression, FieldMetadata field,  @AT@ 78403 @LENGTH@ 19
------INS SimpleType@@FieldMetadata @TO@ SingleVariableDeclaration@@FieldMetadata field @AT@ 78403 @LENGTH@ 13
------INS SimpleName@@field @TO@ SingleVariableDeclaration@@FieldMetadata field @AT@ 78417 @LENGTH@ 5
---INS VariableDeclarationStatement@@String expression=""; @TO@ MethodDeclaration@@private, String, MethodName:createNullExpression, FieldMetadata field,  @AT@ 78430 @LENGTH@ 23
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String expression=""; @AT@ 78430 @LENGTH@ 6
------INS VariableDeclarationFragment@@expression="" @TO@ VariableDeclarationStatement@@String expression=""; @AT@ 78437 @LENGTH@ 15
---------INS SimpleName@@expression @TO@ VariableDeclarationFragment@@expression="" @AT@ 78437 @LENGTH@ 10
---------INS StringLiteral@@"" @TO@ VariableDeclarationFragment@@expression="" @AT@ 78450 @LENGTH@ 2
---INS VariableDeclarationStatement@@JavaType versionType=field.getFieldType(); @TO@ MethodDeclaration@@private, String, MethodName:createNullExpression, FieldMetadata field,  @AT@ 78458 @LENGTH@ 44
------INS SimpleType@@JavaType @TO@ VariableDeclarationStatement@@JavaType versionType=field.getFieldType(); @AT@ 78458 @LENGTH@ 8
------INS VariableDeclarationFragment@@versionType=field.getFieldType() @TO@ VariableDeclarationStatement@@JavaType versionType=field.getFieldType(); @AT@ 78467 @LENGTH@ 34
---------INS SimpleName@@versionType @TO@ VariableDeclarationFragment@@versionType=field.getFieldType() @AT@ 78467 @LENGTH@ 11
---------INS MethodInvocation@@field.getFieldType() @TO@ VariableDeclarationFragment@@versionType=field.getFieldType() @AT@ 78481 @LENGTH@ 20
------------INS SimpleName@@Name:field @TO@ MethodInvocation@@field.getFieldType() @AT@ 78481 @LENGTH@ 5
------------INS SimpleName@@MethodName:getFieldType:[] @TO@ MethodInvocation@@field.getFieldType() @AT@ 78487 @LENGTH@ 14
---INS IfStatement@@if (versionType.isPrimitive()) {  expression=String.format("%s.get%s() != 0",entityItemName,field.getFieldName().getSymbolNameCapitalisedFirstLetter());} else {  expression=String.format("%s.get%s() != null",entityItemName,field.getFieldName().getSymbolNameCapitalisedFirstLetter());} @TO@ MethodDeclaration@@private, String, MethodName:createNullExpression, FieldMetadata field,  @AT@ 78508 @LENGTH@ 362
------INS MethodInvocation@@versionType.isPrimitive() @TO@ IfStatement@@if (versionType.isPrimitive()) {  expression=String.format("%s.get%s() != 0",entityItemName,field.getFieldName().getSymbolNameCapitalisedFirstLetter());} else {  expression=String.format("%s.get%s() != null",entityItemName,field.getFieldName().getSymbolNameCapitalisedFirstLetter());} @AT@ 78512 @LENGTH@ 25
---------INS SimpleName@@Name:versionType @TO@ MethodInvocation@@versionType.isPrimitive() @AT@ 78512 @LENGTH@ 11
---------INS SimpleName@@MethodName:isPrimitive:[] @TO@ MethodInvocation@@versionType.isPrimitive() @AT@ 78524 @LENGTH@ 13
------INS Block@@ThenBody:{  expression=String.format("%s.get%s() != 0",entityItemName,field.getFieldName().getSymbolNameCapitalisedFirstLetter());} @TO@ IfStatement@@if (versionType.isPrimitive()) {  expression=String.format("%s.get%s() != 0",entityItemName,field.getFieldName().getSymbolNameCapitalisedFirstLetter());} else {  expression=String.format("%s.get%s() != null",entityItemName,field.getFieldName().getSymbolNameCapitalisedFirstLetter());} @AT@ 78539 @LENGTH@ 161
---------INS ExpressionStatement@@Assignment:expression=String.format("%s.get%s() != 0",entityItemName,field.getFieldName().getSymbolNameCapitalisedFirstLetter()) @TO@ Block@@ThenBody:{  expression=String.format("%s.get%s() != 0",entityItemName,field.getFieldName().getSymbolNameCapitalisedFirstLetter());} @AT@ 78547 @LENGTH@ 147
------------INS Assignment@@expression=String.format("%s.get%s() != 0",entityItemName,field.getFieldName().getSymbolNameCapitalisedFirstLetter()) @TO@ ExpressionStatement@@Assignment:expression=String.format("%s.get%s() != 0",entityItemName,field.getFieldName().getSymbolNameCapitalisedFirstLetter()) @AT@ 78547 @LENGTH@ 146
---------------INS SimpleName@@expression @TO@ Assignment@@expression=String.format("%s.get%s() != 0",entityItemName,field.getFieldName().getSymbolNameCapitalisedFirstLetter()) @AT@ 78547 @LENGTH@ 10
---------------INS Operator@@= @TO@ Assignment@@expression=String.format("%s.get%s() != 0",entityItemName,field.getFieldName().getSymbolNameCapitalisedFirstLetter()) @AT@ 78557 @LENGTH@ 1
---------------INS MethodInvocation@@String.format("%s.get%s() != 0",entityItemName,field.getFieldName().getSymbolNameCapitalisedFirstLetter()) @TO@ Assignment@@expression=String.format("%s.get%s() != 0",entityItemName,field.getFieldName().getSymbolNameCapitalisedFirstLetter()) @AT@ 78570 @LENGTH@ 123
------------------INS SimpleName@@Name:String @TO@ MethodInvocation@@String.format("%s.get%s() != 0",entityItemName,field.getFieldName().getSymbolNameCapitalisedFirstLetter()) @AT@ 78570 @LENGTH@ 6
------------------INS SimpleName@@MethodName:format:["%s.get%s() != 0", entityItemName, field.getFieldName().getSymbolNameCapitalisedFirstLetter()] @TO@ MethodInvocation@@String.format("%s.get%s() != 0",entityItemName,field.getFieldName().getSymbolNameCapitalisedFirstLetter()) @AT@ 78577 @LENGTH@ 116
---------------------INS StringLiteral@@"%s.get%s() != 0" @TO@ SimpleName@@MethodName:format:["%s.get%s() != 0", entityItemName, field.getFieldName().getSymbolNameCapitalisedFirstLetter()] @AT@ 78584 @LENGTH@ 17
---------------------INS SimpleName@@entityItemName @TO@ SimpleName@@MethodName:format:["%s.get%s() != 0", entityItemName, field.getFieldName().getSymbolNameCapitalisedFirstLetter()] @AT@ 78603 @LENGTH@ 14
---------------------INS MethodInvocation@@field.getFieldName().getSymbolNameCapitalisedFirstLetter() @TO@ SimpleName@@MethodName:format:["%s.get%s() != 0", entityItemName, field.getFieldName().getSymbolNameCapitalisedFirstLetter()] @AT@ 78619 @LENGTH@ 73
------------------------INS MethodInvocation@@MethodName:getFieldName:[] @TO@ MethodInvocation@@field.getFieldName().getSymbolNameCapitalisedFirstLetter() @AT@ 78619 @LENGTH@ 20
------------------------INS SimpleName@@Name:field @TO@ MethodInvocation@@field.getFieldName().getSymbolNameCapitalisedFirstLetter() @AT@ 78619 @LENGTH@ 5
------------------------INS SimpleName@@MethodName:getSymbolNameCapitalisedFirstLetter:[] @TO@ MethodInvocation@@field.getFieldName().getSymbolNameCapitalisedFirstLetter() @AT@ 78655 @LENGTH@ 37
------INS Block@@ElseBody:{  expression=String.format("%s.get%s() != null",entityItemName,field.getFieldName().getSymbolNameCapitalisedFirstLetter());} @TO@ IfStatement@@if (versionType.isPrimitive()) {  expression=String.format("%s.get%s() != 0",entityItemName,field.getFieldName().getSymbolNameCapitalisedFirstLetter());} else {  expression=String.format("%s.get%s() != null",entityItemName,field.getFieldName().getSymbolNameCapitalisedFirstLetter());} @AT@ 78706 @LENGTH@ 164
---------INS ExpressionStatement@@Assignment:expression=String.format("%s.get%s() != null",entityItemName,field.getFieldName().getSymbolNameCapitalisedFirstLetter()) @TO@ Block@@ElseBody:{  expression=String.format("%s.get%s() != null",entityItemName,field.getFieldName().getSymbolNameCapitalisedFirstLetter());} @AT@ 78714 @LENGTH@ 150
------------INS Assignment@@expression=String.format("%s.get%s() != null",entityItemName,field.getFieldName().getSymbolNameCapitalisedFirstLetter()) @TO@ ExpressionStatement@@Assignment:expression=String.format("%s.get%s() != null",entityItemName,field.getFieldName().getSymbolNameCapitalisedFirstLetter()) @AT@ 78714 @LENGTH@ 149
---------------INS SimpleName@@expression @TO@ Assignment@@expression=String.format("%s.get%s() != null",entityItemName,field.getFieldName().getSymbolNameCapitalisedFirstLetter()) @AT@ 78714 @LENGTH@ 10
---------------INS Operator@@= @TO@ Assignment@@expression=String.format("%s.get%s() != null",entityItemName,field.getFieldName().getSymbolNameCapitalisedFirstLetter()) @AT@ 78724 @LENGTH@ 1
---------------INS MethodInvocation@@String.format("%s.get%s() != null",entityItemName,field.getFieldName().getSymbolNameCapitalisedFirstLetter()) @TO@ Assignment@@expression=String.format("%s.get%s() != null",entityItemName,field.getFieldName().getSymbolNameCapitalisedFirstLetter()) @AT@ 78737 @LENGTH@ 126
------------------INS SimpleName@@Name:String @TO@ MethodInvocation@@String.format("%s.get%s() != null",entityItemName,field.getFieldName().getSymbolNameCapitalisedFirstLetter()) @AT@ 78737 @LENGTH@ 6
------------------INS SimpleName@@MethodName:format:["%s.get%s() != null", entityItemName, field.getFieldName().getSymbolNameCapitalisedFirstLetter()] @TO@ MethodInvocation@@String.format("%s.get%s() != null",entityItemName,field.getFieldName().getSymbolNameCapitalisedFirstLetter()) @AT@ 78744 @LENGTH@ 119
---------------------INS StringLiteral@@"%s.get%s() != null" @TO@ SimpleName@@MethodName:format:["%s.get%s() != null", entityItemName, field.getFieldName().getSymbolNameCapitalisedFirstLetter()] @AT@ 78751 @LENGTH@ 20
---------------------INS SimpleName@@entityItemName @TO@ SimpleName@@MethodName:format:["%s.get%s() != null", entityItemName, field.getFieldName().getSymbolNameCapitalisedFirstLetter()] @AT@ 78773 @LENGTH@ 14
---------------------INS MethodInvocation@@field.getFieldName().getSymbolNameCapitalisedFirstLetter() @TO@ SimpleName@@MethodName:format:["%s.get%s() != null", entityItemName, field.getFieldName().getSymbolNameCapitalisedFirstLetter()] @AT@ 78789 @LENGTH@ 73
------------------------INS MethodInvocation@@MethodName:getFieldName:[] @TO@ MethodInvocation@@field.getFieldName().getSymbolNameCapitalisedFirstLetter() @AT@ 78789 @LENGTH@ 20
------------------------INS SimpleName@@Name:field @TO@ MethodInvocation@@field.getFieldName().getSymbolNameCapitalisedFirstLetter() @AT@ 78789 @LENGTH@ 5
------------------------INS SimpleName@@MethodName:getSymbolNameCapitalisedFirstLetter:[] @TO@ MethodInvocation@@field.getFieldName().getSymbolNameCapitalisedFirstLetter() @AT@ 78825 @LENGTH@ 37
---INS ReturnStatement@@SimpleName:expression @TO@ MethodDeclaration@@private, String, MethodName:createNullExpression, FieldMetadata field,  @AT@ 78876 @LENGTH@ 18
------INS SimpleName@@expression @TO@ ReturnStatement@@SimpleName:expression @AT@ 78883 @LENGTH@ 10


UPD MethodDeclaration@@public, Class<?>, MethodName:getDynamicProjection,  @TO@ public, Optional<Class<?>>, MethodName:getDynamicProjection,  @AT@ 3046 @LENGTH@ 85
---DEL ParameterizedType@@Class<?> @AT@ 3053 @LENGTH@ 8
---INS ParameterizedType@@Optional<Class<?>> @TO@ MethodDeclaration@@public, Class<?>, MethodName:getDynamicProjection,  @AT@ 3080 @LENGTH@ 18
------INS SimpleType@@Optional @TO@ ParameterizedType@@Optional<Class<?>> @AT@ 3080 @LENGTH@ 8
------INS ParameterizedType@@Class<?> @TO@ ParameterizedType@@Optional<Class<?>> @AT@ 3089 @LENGTH@ 8
---------MOV SimpleType@@Class @TO@ ParameterizedType@@Class<?> @AT@ 3053 @LENGTH@ 5
---------MOV WildcardType@@? @TO@ ParameterizedType@@Class<?> @AT@ 3059 @LENGTH@ 1


UPD ReturnStatement@@QualifiedName:Collections.EMPTY_SET @TO@ MethodInvocation:Collections.emptySet() @AT@ 1597 @LENGTH@ 29
---INS MethodInvocation@@Collections.emptySet() @TO@ ReturnStatement@@QualifiedName:Collections.EMPTY_SET @AT@ 1604 @LENGTH@ 22
------INS SimpleName@@Name:Collections @TO@ MethodInvocation@@Collections.emptySet() @AT@ 1604 @LENGTH@ 11
------INS SimpleName@@MethodName:emptySet:[] @TO@ MethodInvocation@@Collections.emptySet() @AT@ 1616 @LENGTH@ 10
---DEL QualifiedName@@Collections.EMPTY_SET @AT@ 1604 @LENGTH@ 21
------DEL SimpleName@@Collections @AT@ 1604 @LENGTH@ 11
------DEL SimpleName@@EMPTY_SET @AT@ 1616 @LENGTH@ 9


UPD ReturnStatement@@MethodInvocation:multiHashOrdered(parentHashCode(),3121,0) @TO@ MethodInvocation:multiHashUnordered(parentHashCode(),3121,0) @AT@ 1667 @LENGTH@ 51
---UPD MethodInvocation@@multiHashOrdered(parentHashCode(),3121,0) @TO@ multiHashUnordered(parentHashCode(),3121,0) @AT@ 1674 @LENGTH@ 43
------UPD SimpleName@@MethodName:multiHashOrdered:[parentHashCode(), 3121, 0] @TO@ MethodName:multiHashUnordered:[parentHashCode(), 3121, 0] @AT@ 1674 @LENGTH@ 43


UPD IfStatement@@if (recoveryCredentialSourceSupplier != null) cs=recoveryCredentialSourceSupplier.get(); @TO@ if (recoveryCredentialSourceSupplier != null) {  cs=recoveryCredentialSourceSupplier.get();} @AT@ 20142 @LENGTH@ 106
---UPD Block@@ThenBody:cs=recoveryCredentialSourceSupplier.get(); @TO@ ThenBody:{  cs=recoveryCredentialSourceSupplier.get();} @AT@ 20204 @LENGTH@ 44


UPD FieldDeclaration@@private, HiveConf, [hiveConf] @TO@ protected, HiveConf, [hiveConf] @AT@ 1534 @LENGTH@ 26
---UPD Modifier@@private @TO@ protected @AT@ 1534 @LENGTH@ 7


UPD ExpressionStatement@@MethodInvocation:Assert.hasLength(url) @TO@ MethodInvocation:Assert.hasLength(url,"url must have length") @AT@ 4961 @LENGTH@ 22
---UPD MethodInvocation@@Assert.hasLength(url) @TO@ Assert.hasLength(url,"url must have length") @AT@ 4961 @LENGTH@ 21
------UPD SimpleName@@MethodName:hasLength:[url] @TO@ MethodName:hasLength:[url, "url must have length"] @AT@ 4968 @LENGTH@ 14
---------INS StringLiteral@@"url must have length" @TO@ SimpleName@@MethodName:hasLength:[url] @AT@ 5007 @LENGTH@ 22


UPD FieldDeclaration@@private, static, long, [serialVersionUID=1L] @TO@ private, static, final, long, [serialVersionUID=1L] @AT@ 1170 @LENGTH@ 42
---INS Modifier@@final @TO@ FieldDeclaration@@private, static, long, [serialVersionUID=1L] @AT@ 1185 @LENGTH@ 5


INS IfStatement@@if (this.defaultConnectionFactory instanceof DisposableBean) {  ((DisposableBean)this.defaultConnectionFactory).destroy();} @TO@ MethodDeclaration@@public, void, MethodName:destroy, Exception,  @AT@ 13919 @LENGTH@ 129
---INS InstanceofExpression@@this.defaultConnectionFactory instanceof DisposableBean @TO@ IfStatement@@if (this.defaultConnectionFactory instanceof DisposableBean) {  ((DisposableBean)this.defaultConnectionFactory).destroy();} @AT@ 13923 @LENGTH@ 55
------INS FieldAccess@@this.defaultConnectionFactory @TO@ InstanceofExpression@@this.defaultConnectionFactory instanceof DisposableBean @AT@ 13923 @LENGTH@ 29
---------INS ThisExpression@@this @TO@ FieldAccess@@this.defaultConnectionFactory @AT@ 13923 @LENGTH@ 4
---------INS SimpleName@@defaultConnectionFactory @TO@ FieldAccess@@this.defaultConnectionFactory @AT@ 13928 @LENGTH@ 24
------INS Instanceof@@instanceof @TO@ InstanceofExpression@@this.defaultConnectionFactory instanceof DisposableBean @AT@ 13953 @LENGTH@ 10
------INS SimpleType@@DisposableBean @TO@ InstanceofExpression@@this.defaultConnectionFactory instanceof DisposableBean @AT@ 13964 @LENGTH@ 14
---INS Block@@ThenBody:{  ((DisposableBean)this.defaultConnectionFactory).destroy();} @TO@ IfStatement@@if (this.defaultConnectionFactory instanceof DisposableBean) {  ((DisposableBean)this.defaultConnectionFactory).destroy();} @AT@ 13980 @LENGTH@ 68
------INS ExpressionStatement@@MethodInvocation:((DisposableBean)this.defaultConnectionFactory).destroy() @TO@ Block@@ThenBody:{  ((DisposableBean)this.defaultConnectionFactory).destroy();} @AT@ 13985 @LENGTH@ 59
---------INS MethodInvocation@@((DisposableBean)this.defaultConnectionFactory).destroy() @TO@ ExpressionStatement@@MethodInvocation:((DisposableBean)this.defaultConnectionFactory).destroy() @AT@ 13985 @LENGTH@ 58
------------INS ParenthesizedExpression@@((DisposableBean)this.defaultConnectionFactory) @TO@ MethodInvocation@@((DisposableBean)this.defaultConnectionFactory).destroy() @AT@ 13985 @LENGTH@ 48
---------------INS CastExpression@@(DisposableBean)this.defaultConnectionFactory @TO@ ParenthesizedExpression@@((DisposableBean)this.defaultConnectionFactory) @AT@ 13986 @LENGTH@ 46
------------------INS SimpleType@@DisposableBean @TO@ CastExpression@@(DisposableBean)this.defaultConnectionFactory @AT@ 13987 @LENGTH@ 14
------------------INS FieldAccess@@this.defaultConnectionFactory @TO@ CastExpression@@(DisposableBean)this.defaultConnectionFactory @AT@ 14003 @LENGTH@ 29
---------------------INS ThisExpression@@this @TO@ FieldAccess@@this.defaultConnectionFactory @AT@ 14003 @LENGTH@ 4
---------------------INS SimpleName@@defaultConnectionFactory @TO@ FieldAccess@@this.defaultConnectionFactory @AT@ 14008 @LENGTH@ 24
------------INS SimpleName@@MethodName:destroy:[] @TO@ MethodInvocation@@((DisposableBean)this.defaultConnectionFactory).destroy() @AT@ 14034 @LENGTH@ 9


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && languageConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && languageConfiguration.getCustomizer().isEnabled(); @AT@ 4503 @LENGTH@ 159
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && languageConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && languageConfiguration.getCustomizer().isEnabled() @AT@ 4511 @LENGTH@ 150
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 4511 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && languageConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && languageConfiguration.getCustomizer().isEnabled() @AT@ 4528 @LENGTH@ 133
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 4528 @LENGTH@ 64
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 4528 @LENGTH@ 35
---------UPD MethodInvocation@@languageConfiguration.getConfigurer().isEnabled() @TO@ languageConfiguration.getCustomizer().isEnabled() @AT@ 4612 @LENGTH@ 49
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 4612 @LENGTH@ 37


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled(); @AT@ 5378 @LENGTH@ 160
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5386 @LENGTH@ 151
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5386 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5403 @LENGTH@ 134
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 5403 @LENGTH@ 64
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5403 @LENGTH@ 35
---------UPD MethodInvocation@@componentConfiguration.getConfigurer().isEnabled() @TO@ componentConfiguration.getCustomizer().isEnabled() @AT@ 5487 @LENGTH@ 50
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5487 @LENGTH@ 38


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled(); @AT@ 5247 @LENGTH@ 160
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5255 @LENGTH@ 151
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5255 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5272 @LENGTH@ 134
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 5272 @LENGTH@ 64
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5272 @LENGTH@ 35
---------UPD MethodInvocation@@componentConfiguration.getConfigurer().isEnabled() @TO@ componentConfiguration.getCustomizer().isEnabled() @AT@ 5356 @LENGTH@ 50
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5356 @LENGTH@ 38


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled(); @AT@ 5260 @LENGTH@ 160
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5268 @LENGTH@ 151
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5268 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5285 @LENGTH@ 134
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 5285 @LENGTH@ 64
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5285 @LENGTH@ 35
---------UPD MethodInvocation@@componentConfiguration.getConfigurer().isEnabled() @TO@ componentConfiguration.getCustomizer().isEnabled() @AT@ 5369 @LENGTH@ 50
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5369 @LENGTH@ 38


UPD FieldDeclaration@@static, final, SimpleOperationDefinition, [DUMP_QUEUED_THREADS=new SimpleOperationDefinitionBuilder("dump-queued-threads-in-pool",RESOLVER).setRuntimeOnly().build()] @TO@ private, static, final, SimpleOperationDefinition, [DUMP_QUEUED_THREADS=new SimpleOperationDefinitionBuilder("dump-queued-threads-in-pool",RESOLVER).setRuntimeOnly().build()] @AT@ 3507 @LENGTH@ 177
---INS Modifier@@private @TO@ FieldDeclaration@@static, final, SimpleOperationDefinition, [DUMP_QUEUED_THREADS=new SimpleOperationDefinitionBuilder("dump-queued-threads-in-pool",RESOLVER).setRuntimeOnly().build()] @AT@ 3589 @LENGTH@ 7


UPD FieldDeclaration@@private, static, boolean, [isDebugEnabled=LOG.isDebugEnabled()] @TO@ private, static, final, boolean, [isDebugEnabled=LOG.isDebugEnabled()] @AT@ 7246 @LENGTH@ 61
---INS Modifier@@final @TO@ FieldDeclaration@@private, static, boolean, [isDebugEnabled=LOG.isDebugEnabled()] @AT@ 7261 @LENGTH@ 5


UPD VariableDeclarationStatement@@boolean useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled(); @TO@ boolean useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled(); @AT@ 5243 @LENGTH@ 160
---UPD VariableDeclarationFragment@@useConfigurers=globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ useCustomizers=globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5251 @LENGTH@ 151
------UPD SimpleName@@useConfigurers @TO@ useCustomizers @AT@ 5251 @LENGTH@ 14
------UPD InfixExpression@@globalConfiguration.getConfigurer().isEnabled() && componentConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled() @AT@ 5268 @LENGTH@ 134
---------UPD MethodInvocation@@globalConfiguration.getConfigurer().isEnabled() @TO@ globalConfiguration.getCustomizer().isEnabled() @AT@ 5268 @LENGTH@ 64
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5268 @LENGTH@ 35
---------UPD MethodInvocation@@componentConfiguration.getConfigurer().isEnabled() @TO@ componentConfiguration.getCustomizer().isEnabled() @AT@ 5352 @LENGTH@ 50
------------UPD MethodInvocation@@MethodName:getConfigurer:[] @TO@ MethodName:getCustomizer:[] @AT@ 5352 @LENGTH@ 38


UPD ExpressionStatement@@MethodInvocation:contextResult.get(RESPONSE_HEADERS).get(WARNINGS).set(responseHeaders.get(WARNINGS)) @TO@ MethodInvocation:context.getResponseHeaders().get(WARNINGS).set(responseHeaders.get(WARNINGS)) @AT@ 7107 @LENGTH@ 85
---UPD MethodInvocation@@contextResult.get(RESPONSE_HEADERS).get(WARNINGS).set(responseHeaders.get(WARNINGS)) @TO@ context.getResponseHeaders().get(WARNINGS).set(responseHeaders.get(WARNINGS)) @AT@ 7107 @LENGTH@ 84
------UPD MethodInvocation@@MethodName:get:[RESPONSE_HEADERS] @TO@ MethodName:getResponseHeaders:[] @AT@ 7107 @LENGTH@ 35
---------DEL SimpleName@@RESPONSE_HEADERS @AT@ 7125 @LENGTH@ 16
------UPD SimpleName@@Name:contextResult @TO@ Name:context @AT@ 7107 @LENGTH@ 13

INS MethodDeclaration@@public, void, MethodName:testHeaderCommentWithBlancsAndPresetHeaderComment, ConfigurationException,  @TO@ TypeDeclaration@@[public]TestPropertiesConfigurationLayout,  @AT@ 9063 @LENGTH@ 715
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testHeaderCommentWithBlancsAndPresetHeaderComment, ConfigurationException,  @AT@ 9063 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testHeaderCommentWithBlancsAndPresetHeaderComment, ConfigurationException,  @AT@ 9070 @LENGTH@ 4
---INS SimpleName@@MethodName:testHeaderCommentWithBlancsAndPresetHeaderComment @TO@ MethodDeclaration@@public, void, MethodName:testHeaderCommentWithBlancsAndPresetHeaderComment, ConfigurationException,  @AT@ 9075 @LENGTH@ 49
---INS SimpleType@@ConfigurationException @TO@ MethodDeclaration@@public, void, MethodName:testHeaderCommentWithBlancsAndPresetHeaderComment, ConfigurationException,  @AT@ 9134 @LENGTH@ 22
---INS VariableDeclarationStatement@@String presetHeaderComment="preset" + TEST_COMMENT + CRNORM+ CRNORM+ TEST_COMMENT; @TO@ MethodDeclaration@@public, void, MethodName:testHeaderCommentWithBlancsAndPresetHeaderComment, ConfigurationException,  @AT@ 9171 @LENGTH@ 86
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String presetHeaderComment="preset" + TEST_COMMENT + CRNORM+ CRNORM+ TEST_COMMENT; @AT@ 9171 @LENGTH@ 6
------INS VariableDeclarationFragment@@presetHeaderComment="preset" + TEST_COMMENT + CRNORM+ CRNORM+ TEST_COMMENT @TO@ VariableDeclarationStatement@@String presetHeaderComment="preset" + TEST_COMMENT + CRNORM+ CRNORM+ TEST_COMMENT; @AT@ 9178 @LENGTH@ 78
---------INS SimpleName@@presetHeaderComment @TO@ VariableDeclarationFragment@@presetHeaderComment="preset" + TEST_COMMENT + CRNORM+ CRNORM+ TEST_COMMENT @AT@ 9178 @LENGTH@ 19
---------INS InfixExpression@@"preset" + TEST_COMMENT + CRNORM+ CRNORM+ TEST_COMMENT @TO@ VariableDeclarationFragment@@presetHeaderComment="preset" + TEST_COMMENT + CRNORM+ CRNORM+ TEST_COMMENT @AT@ 9200 @LENGTH@ 56
------------INS StringLiteral@@"preset" @TO@ InfixExpression@@"preset" + TEST_COMMENT + CRNORM+ CRNORM+ TEST_COMMENT @AT@ 9200 @LENGTH@ 8
------------INS Operator@@+ @TO@ InfixExpression@@"preset" + TEST_COMMENT + CRNORM+ CRNORM+ TEST_COMMENT @AT@ 9208 @LENGTH@ 1
------------INS SimpleName@@TEST_COMMENT @TO@ InfixExpression@@"preset" + TEST_COMMENT + CRNORM+ CRNORM+ TEST_COMMENT @AT@ 9211 @LENGTH@ 12
------------INS SimpleName@@CRNORM @TO@ InfixExpression@@"preset" + TEST_COMMENT + CRNORM+ CRNORM+ TEST_COMMENT @AT@ 9226 @LENGTH@ 6
------------INS SimpleName@@CRNORM @TO@ InfixExpression@@"preset" + TEST_COMMENT + CRNORM+ CRNORM+ TEST_COMMENT @AT@ 9235 @LENGTH@ 6
------------INS SimpleName@@TEST_COMMENT @TO@ InfixExpression@@"preset" + TEST_COMMENT + CRNORM+ CRNORM+ TEST_COMMENT @AT@ 9244 @LENGTH@ 12
---INS ExpressionStatement@@MethodInvocation:builder.addComment(TEST_COMMENT) @TO@ MethodDeclaration@@public, void, MethodName:testHeaderCommentWithBlancsAndPresetHeaderComment, ConfigurationException,  @AT@ 9266 @LENGTH@ 33
------INS MethodInvocation@@builder.addComment(TEST_COMMENT) @TO@ ExpressionStatement@@MethodInvocation:builder.addComment(TEST_COMMENT) @AT@ 9266 @LENGTH@ 32
---------INS SimpleName@@Name:builder @TO@ MethodInvocation@@builder.addComment(TEST_COMMENT) @AT@ 9266 @LENGTH@ 7
---------INS SimpleName@@MethodName:addComment:[TEST_COMMENT] @TO@ MethodInvocation@@builder.addComment(TEST_COMMENT) @AT@ 9274 @LENGTH@ 24
------------INS SimpleName@@TEST_COMMENT @TO@ SimpleName@@MethodName:addComment:[TEST_COMMENT] @AT@ 9285 @LENGTH@ 12
---INS ExpressionStatement@@MethodInvocation:builder.addComment(null) @TO@ MethodDeclaration@@public, void, MethodName:testHeaderCommentWithBlancsAndPresetHeaderComment, ConfigurationException,  @AT@ 9308 @LENGTH@ 25
------INS MethodInvocation@@builder.addComment(null) @TO@ ExpressionStatement@@MethodInvocation:builder.addComment(null) @AT@ 9308 @LENGTH@ 24
---------INS SimpleName@@Name:builder @TO@ MethodInvocation@@builder.addComment(null) @AT@ 9308 @LENGTH@ 7
---------INS SimpleName@@MethodName:addComment:[null] @TO@ MethodInvocation@@builder.addComment(null) @AT@ 9316 @LENGTH@ 16
------------INS NullLiteral@@null @TO@ SimpleName@@MethodName:addComment:[null] @AT@ 9327 @LENGTH@ 4
---INS ExpressionStatement@@MethodInvocation:builder.addComment(TEST_COMMENT) @TO@ MethodDeclaration@@public, void, MethodName:testHeaderCommentWithBlancsAndPresetHeaderComment, ConfigurationException,  @AT@ 9342 @LENGTH@ 33
------INS MethodInvocation@@builder.addComment(TEST_COMMENT) @TO@ ExpressionStatement@@MethodInvocation:builder.addComment(TEST_COMMENT) @AT@ 9342 @LENGTH@ 32
---------INS SimpleName@@Name:builder @TO@ MethodInvocation@@builder.addComment(TEST_COMMENT) @AT@ 9342 @LENGTH@ 7
---------INS SimpleName@@MethodName:addComment:[TEST_COMMENT] @TO@ MethodInvocation@@builder.addComment(TEST_COMMENT) @AT@ 9350 @LENGTH@ 24
------------INS SimpleName@@TEST_COMMENT @TO@ SimpleName@@MethodName:addComment:[TEST_COMMENT] @AT@ 9361 @LENGTH@ 12
---INS ExpressionStatement@@MethodInvocation:builder.addComment(null) @TO@ MethodDeclaration@@public, void, MethodName:testHeaderCommentWithBlancsAndPresetHeaderComment, ConfigurationException,  @AT@ 9384 @LENGTH@ 25
------INS MethodInvocation@@builder.addComment(null) @TO@ ExpressionStatement@@MethodInvocation:builder.addComment(null) @AT@ 9384 @LENGTH@ 24
---------INS SimpleName@@Name:builder @TO@ MethodInvocation@@builder.addComment(null) @AT@ 9384 @LENGTH@ 7
---------INS SimpleName@@MethodName:addComment:[null] @TO@ MethodInvocation@@builder.addComment(null) @AT@ 9392 @LENGTH@ 16
------------INS NullLiteral@@null @TO@ SimpleName@@MethodName:addComment:[null] @AT@ 9403 @LENGTH@ 4
---INS ExpressionStatement@@MethodInvocation:builder.addProperty(TEST_KEY,TEST_VALUE) @TO@ MethodDeclaration@@public, void, MethodName:testHeaderCommentWithBlancsAndPresetHeaderComment, ConfigurationException,  @AT@ 9418 @LENGTH@ 42
------INS MethodInvocation@@builder.addProperty(TEST_KEY,TEST_VALUE) @TO@ ExpressionStatement@@MethodInvocation:builder.addProperty(TEST_KEY,TEST_VALUE) @AT@ 9418 @LENGTH@ 41
---------INS SimpleName@@Name:builder @TO@ MethodInvocation@@builder.addProperty(TEST_KEY,TEST_VALUE) @AT@ 9418 @LENGTH@ 7
---------INS SimpleName@@MethodName:addProperty:[TEST_KEY, TEST_VALUE] @TO@ MethodInvocation@@builder.addProperty(TEST_KEY,TEST_VALUE) @AT@ 9426 @LENGTH@ 33
------------INS SimpleName@@TEST_KEY @TO@ SimpleName@@MethodName:addProperty:[TEST_KEY, TEST_VALUE] @AT@ 9438 @LENGTH@ 8
------------INS SimpleName@@TEST_VALUE @TO@ SimpleName@@MethodName:addProperty:[TEST_KEY, TEST_VALUE] @AT@ 9448 @LENGTH@ 10
---INS ExpressionStatement@@MethodInvocation:layout.setHeaderComment(presetHeaderComment) @TO@ MethodDeclaration@@public, void, MethodName:testHeaderCommentWithBlancsAndPresetHeaderComment, ConfigurationException,  @AT@ 9469 @LENGTH@ 45
------INS MethodInvocation@@layout.setHeaderComment(presetHeaderComment) @TO@ ExpressionStatement@@MethodInvocation:layout.setHeaderComment(presetHeaderComment) @AT@ 9469 @LENGTH@ 44
---------INS SimpleName@@Name:layout @TO@ MethodInvocation@@layout.setHeaderComment(presetHeaderComment) @AT@ 9469 @LENGTH@ 6
---------INS SimpleName@@MethodName:setHeaderComment:[presetHeaderComment] @TO@ MethodInvocation@@layout.setHeaderComment(presetHeaderComment) @AT@ 9476 @LENGTH@ 37
------------INS SimpleName@@presetHeaderComment @TO@ SimpleName@@MethodName:setHeaderComment:[presetHeaderComment] @AT@ 9493 @LENGTH@ 19
---INS ExpressionStatement@@MethodInvocation:layout.load(config,builder.getReader()) @TO@ MethodDeclaration@@public, void, MethodName:testHeaderCommentWithBlancsAndPresetHeaderComment, ConfigurationException,  @AT@ 9523 @LENGTH@ 41
------INS MethodInvocation@@layout.load(config,builder.getReader()) @TO@ ExpressionStatement@@MethodInvocation:layout.load(config,builder.getReader()) @AT@ 9523 @LENGTH@ 40
---------INS SimpleName@@Name:layout @TO@ MethodInvocation@@layout.load(config,builder.getReader()) @AT@ 9523 @LENGTH@ 6
---------INS SimpleName@@MethodName:load:[config, builder.getReader()] @TO@ MethodInvocation@@layout.load(config,builder.getReader()) @AT@ 9530 @LENGTH@ 33
------------INS SimpleName@@config @TO@ SimpleName@@MethodName:load:[config, builder.getReader()] @AT@ 9535 @LENGTH@ 6
------------INS MethodInvocation@@builder.getReader() @TO@ SimpleName@@MethodName:load:[config, builder.getReader()] @AT@ 9543 @LENGTH@ 19
---------------INS SimpleName@@Name:builder @TO@ MethodInvocation@@builder.getReader() @AT@ 9543 @LENGTH@ 7
---------------INS SimpleName@@MethodName:getReader:[] @TO@ MethodInvocation@@builder.getReader() @AT@ 9551 @LENGTH@ 11
---INS ExpressionStatement@@MethodInvocation:assertEquals("Wrong header comment",presetHeaderComment,layout.getCanonicalHeaderComment(false)) @TO@ MethodDeclaration@@public, void, MethodName:testHeaderCommentWithBlancsAndPresetHeaderComment, ConfigurationException,  @AT@ 9573 @LENGTH@ 120
------INS MethodInvocation@@assertEquals("Wrong header comment",presetHeaderComment,layout.getCanonicalHeaderComment(false)) @TO@ ExpressionStatement@@MethodInvocation:assertEquals("Wrong header comment",presetHeaderComment,layout.getCanonicalHeaderComment(false)) @AT@ 9573 @LENGTH@ 119
---------INS SimpleName@@MethodName:assertEquals:["Wrong header comment", presetHeaderComment, layout.getCanonicalHeaderComment(false)] @TO@ MethodInvocation@@assertEquals("Wrong header comment",presetHeaderComment,layout.getCanonicalHeaderComment(false)) @AT@ 9573 @LENGTH@ 119
------------INS StringLiteral@@"Wrong header comment" @TO@ SimpleName@@MethodName:assertEquals:["Wrong header comment", presetHeaderComment, layout.getCanonicalHeaderComment(false)] @AT@ 9586 @LENGTH@ 22
------------INS SimpleName@@presetHeaderComment @TO@ SimpleName@@MethodName:assertEquals:["Wrong header comment", presetHeaderComment, layout.getCanonicalHeaderComment(false)] @AT@ 9610 @LENGTH@ 19
------------INS MethodInvocation@@layout.getCanonicalHeaderComment(false) @TO@ SimpleName@@MethodName:assertEquals:["Wrong header comment", presetHeaderComment, layout.getCanonicalHeaderComment(false)] @AT@ 9652 @LENGTH@ 39
---------------INS SimpleName@@Name:layout @TO@ MethodInvocation@@layout.getCanonicalHeaderComment(false) @AT@ 9652 @LENGTH@ 6
---------------INS SimpleName@@MethodName:getCanonicalHeaderComment:[false] @TO@ MethodInvocation@@layout.getCanonicalHeaderComment(false) @AT@ 9659 @LENGTH@ 32
------------------INS BooleanLiteral@@false @TO@ SimpleName@@MethodName:getCanonicalHeaderComment:[false] @AT@ 9685 @LENGTH@ 5
---INS ExpressionStatement@@MethodInvocation:assertNull("Wrong comment for property",layout.getComment(TEST_KEY)) @TO@ MethodDeclaration@@public, void, MethodName:testHeaderCommentWithBlancsAndPresetHeaderComment, ConfigurationException,  @AT@ 9702 @LENGTH@ 70
------INS MethodInvocation@@assertNull("Wrong comment for property",layout.getComment(TEST_KEY)) @TO@ ExpressionStatement@@MethodInvocation:assertNull("Wrong comment for property",layout.getComment(TEST_KEY)) @AT@ 9702 @LENGTH@ 69
---------INS SimpleName@@MethodName:assertNull:["Wrong comment for property", layout.getComment(TEST_KEY)] @TO@ MethodInvocation@@assertNull("Wrong comment for property",layout.getComment(TEST_KEY)) @AT@ 9702 @LENGTH@ 69
------------INS StringLiteral@@"Wrong comment for property" @TO@ SimpleName@@MethodName:assertNull:["Wrong comment for property", layout.getComment(TEST_KEY)] @AT@ 9713 @LENGTH@ 28
------------INS MethodInvocation@@layout.getComment(TEST_KEY) @TO@ SimpleName@@MethodName:assertNull:["Wrong comment for property", layout.getComment(TEST_KEY)] @AT@ 9743 @LENGTH@ 27
---------------INS SimpleName@@Name:layout @TO@ MethodInvocation@@layout.getComment(TEST_KEY) @AT@ 9743 @LENGTH@ 6
---------------INS SimpleName@@MethodName:getComment:[TEST_KEY] @TO@ MethodInvocation@@layout.getComment(TEST_KEY) @AT@ 9750 @LENGTH@ 20
------------------INS SimpleName@@TEST_KEY @TO@ SimpleName@@MethodName:getComment:[TEST_KEY] @AT@ 9761 @LENGTH@ 8


UPD ExpressionStatement@@MethodInvocation:route.setDelay(5000) @TO@ MethodInvocation:route.setDelay(6000) @AT@ 2856 @LENGTH@ 21
---UPD MethodInvocation@@route.setDelay(5000) @TO@ route.setDelay(6000) @AT@ 2856 @LENGTH@ 20
------UPD SimpleName@@MethodName:setDelay:[5000] @TO@ MethodName:setDelay:[6000] @AT@ 2862 @LENGTH@ 14
---------UPD NumberLiteral@@5000 @TO@ 6000 @AT@ 2871 @LENGTH@ 4


INS MethodDeclaration@@public, void, MethodName:cachePutWithNullShouldNotAddStuffToRedis,  @TO@ TypeDeclaration@@[@SuppressWarnings("rawtypes"), @RunWith(Parameterized.class), public]RedisCacheTest, AbstractNativeCacheTest<RedisTemplate> @AT@ 7773 @LENGTH@ 187
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:cachePutWithNullShouldNotAddStuffToRedis,  @AT@ 7773 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:cachePutWithNullShouldNotAddStuffToRedis,  @AT@ 7780 @LENGTH@ 4
---INS SimpleName@@MethodName:cachePutWithNullShouldNotAddStuffToRedis @TO@ MethodDeclaration@@public, void, MethodName:cachePutWithNullShouldNotAddStuffToRedis,  @AT@ 7785 @LENGTH@ 40
---INS VariableDeclarationStatement@@Object key=getKey(); @TO@ MethodDeclaration@@public, void, MethodName:cachePutWithNullShouldNotAddStuffToRedis,  @AT@ 7833 @LENGTH@ 22
------INS SimpleType@@Object @TO@ VariableDeclarationStatement@@Object key=getKey(); @AT@ 7833 @LENGTH@ 6
------INS VariableDeclarationFragment@@key=getKey() @TO@ VariableDeclarationStatement@@Object key=getKey(); @AT@ 7840 @LENGTH@ 14
---------INS SimpleName@@key @TO@ VariableDeclarationFragment@@key=getKey() @AT@ 7840 @LENGTH@ 3
---------INS MethodInvocation@@MethodName:getKey:[] @TO@ VariableDeclarationFragment@@key=getKey() @AT@ 7846 @LENGTH@ 8
---INS VariableDeclarationStatement@@Object value=getValue(); @TO@ MethodDeclaration@@public, void, MethodName:cachePutWithNullShouldNotAddStuffToRedis,  @AT@ 7858 @LENGTH@ 26
------INS SimpleType@@Object @TO@ VariableDeclarationStatement@@Object value=getValue(); @AT@ 7858 @LENGTH@ 6
------INS VariableDeclarationFragment@@value=getValue() @TO@ VariableDeclarationStatement@@Object value=getValue(); @AT@ 7865 @LENGTH@ 18
---------INS SimpleName@@value @TO@ VariableDeclarationFragment@@value=getValue() @AT@ 7865 @LENGTH@ 5
---------INS MethodInvocation@@MethodName:getValue:[] @TO@ VariableDeclarationFragment@@value=getValue() @AT@ 7873 @LENGTH@ 10
---INS ExpressionStatement@@MethodInvocation:cache.put(key,null) @TO@ MethodDeclaration@@public, void, MethodName:cachePutWithNullShouldNotAddStuffToRedis,  @AT@ 7888 @LENGTH@ 21
------INS MethodInvocation@@cache.put(key,null) @TO@ ExpressionStatement@@MethodInvocation:cache.put(key,null) @AT@ 7888 @LENGTH@ 20
---------INS SimpleName@@Name:cache @TO@ MethodInvocation@@cache.put(key,null) @AT@ 7888 @LENGTH@ 5
---------INS SimpleName@@MethodName:put:[key, null] @TO@ MethodInvocation@@cache.put(key,null) @AT@ 7894 @LENGTH@ 14
------------INS SimpleName@@key @TO@ SimpleName@@MethodName:put:[key, null] @AT@ 7898 @LENGTH@ 3
------------INS NullLiteral@@null @TO@ SimpleName@@MethodName:put:[key, null] @AT@ 7903 @LENGTH@ 4
---INS ExpressionStatement@@MethodInvocation:assertThat(cache.get(key),is(nullValue())) @TO@ MethodDeclaration@@public, void, MethodName:cachePutWithNullShouldNotAddStuffToRedis,  @AT@ 7913 @LENGTH@ 44
------INS MethodInvocation@@assertThat(cache.get(key),is(nullValue())) @TO@ ExpressionStatement@@MethodInvocation:assertThat(cache.get(key),is(nullValue())) @AT@ 7913 @LENGTH@ 43
---------INS SimpleName@@MethodName:assertThat:[cache.get(key), is(nullValue())] @TO@ MethodInvocation@@assertThat(cache.get(key),is(nullValue())) @AT@ 7913 @LENGTH@ 43
------------INS MethodInvocation@@cache.get(key) @TO@ SimpleName@@MethodName:assertThat:[cache.get(key), is(nullValue())] @AT@ 7924 @LENGTH@ 14
---------------INS SimpleName@@Name:cache @TO@ MethodInvocation@@cache.get(key) @AT@ 7924 @LENGTH@ 5
---------------INS SimpleName@@MethodName:get:[key] @TO@ MethodInvocation@@cache.get(key) @AT@ 7930 @LENGTH@ 8
------------------INS SimpleName@@key @TO@ SimpleName@@MethodName:get:[key] @AT@ 7934 @LENGTH@ 3
------------INS MethodInvocation@@is(nullValue()) @TO@ SimpleName@@MethodName:assertThat:[cache.get(key), is(nullValue())] @AT@ 7940 @LENGTH@ 15
---------------INS SimpleName@@MethodName:is:[nullValue()] @TO@ MethodInvocation@@is(nullValue()) @AT@ 7940 @LENGTH@ 15
------------------INS MethodInvocation@@MethodName:nullValue:[] @TO@ SimpleName@@MethodName:is:[nullValue()] @AT@ 7943 @LENGTH@ 11


UPD WhileStatement@@while ((n=read(oneByteBuf,0,1)) == 0) {} @TO@ while ((n=read(oneByteBuf,0,1)) == 0) {  ;} @AT@ 7074 @LENGTH@ 77
---UPD Block@@WhileBody:{} @TO@ WhileBody:{  ;} @AT@ 7116 @LENGTH@ 35


UPD FieldDeclaration@@private, static, final, String, [dbName="hive3252"] @TO@ private, static, final, String, [dbName="hive3253"] @AT@ 3038 @LENGTH@ 48
---UPD VariableDeclarationFragment@@dbName="hive3252" @TO@ dbName="hive3253" @AT@ 3066 @LENGTH@ 19
------UPD StringLiteral@@"hive3252" @TO@ "hive3253" @AT@ 3075 @LENGTH@ 10


UPD TypeDeclaration@@[@Configuration, @ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration"), @EnableConfigurationProperties(SalesforceComponentConfiguration.class), public]SalesforceComponentAutoConfiguration,  @TO@ [@Configuration, @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration"), @EnableConfigurationProperties(SalesforceComponentConfiguration.class), public]SalesforceComponentAutoConfiguration,  @AT@ 1637 @LENGTH@ 2106
---UPD NormalAnnotation@@@ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1652 @LENGTH@ 79
---UPD NormalAnnotation@@@AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1732 @LENGTH@ 80


UPD ExpressionStatement@@MethodInvocation:props.setProperty(JdbcConnectionParams.PROPERTY_URL,url) @TO@ MethodInvocation:props.setProperty(JdbcConnectionParams.PROPERTY_URL,saveUrl) @AT@ 38847 @LENGTH@ 58
---UPD MethodInvocation@@props.setProperty(JdbcConnectionParams.PROPERTY_URL,url) @TO@ props.setProperty(JdbcConnectionParams.PROPERTY_URL,saveUrl) @AT@ 38847 @LENGTH@ 57
------UPD SimpleName@@MethodName:setProperty:[JdbcConnectionParams.PROPERTY_URL, url] @TO@ MethodName:setProperty:[JdbcConnectionParams.PROPERTY_URL, saveUrl] @AT@ 38853 @LENGTH@ 51
---------UPD SimpleName@@url @TO@ saveUrl @AT@ 38900 @LENGTH@ 3


INS MethodDeclaration@@void, MethodName:addField, FieldMetadata field, boolean evict,  @TO@ TypeDeclaration@@[public]TypeManagementService,  @AT@ 1314 @LENGTH@ 45
---INS PrimitiveType@@void @TO@ MethodDeclaration@@void, MethodName:addField, FieldMetadata field, boolean evict,  @AT@ 1309 @LENGTH@ 4
---INS SimpleName@@MethodName:addField @TO@ MethodDeclaration@@void, MethodName:addField, FieldMetadata field, boolean evict,  @AT@ 1314 @LENGTH@ 8
---INS SingleVariableDeclaration@@FieldMetadata field @TO@ MethodDeclaration@@void, MethodName:addField, FieldMetadata field, boolean evict,  @AT@ 1323 @LENGTH@ 19
------INS SimpleType@@FieldMetadata @TO@ SingleVariableDeclaration@@FieldMetadata field @AT@ 1323 @LENGTH@ 13
------INS SimpleName@@field @TO@ SingleVariableDeclaration@@FieldMetadata field @AT@ 1337 @LENGTH@ 5
---INS SingleVariableDeclaration@@boolean evict @TO@ MethodDeclaration@@void, MethodName:addField, FieldMetadata field, boolean evict,  @AT@ 1344 @LENGTH@ 13
------INS PrimitiveType@@boolean @TO@ SingleVariableDeclaration@@boolean evict @AT@ 1344 @LENGTH@ 7
------INS SimpleName@@evict @TO@ SingleVariableDeclaration@@boolean evict @AT@ 1352 @LENGTH@ 5


UPD TypeDeclaration@@[@Configuration, @ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration"), @EnableConfigurationProperties(FlatpackDataFormatConfiguration.class), public]FlatpackDataFormatAutoConfiguration,  @TO@ [@Configuration, @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration"), @EnableConfigurationProperties(FlatpackDataFormatConfiguration.class), public]FlatpackDataFormatAutoConfiguration,  @AT@ 1677 @LENGTH@ 1144
---UPD NormalAnnotation@@@ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1692 @LENGTH@ 79
---UPD NormalAnnotation@@@AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1772 @LENGTH@ 80


UPD VariableDeclarationStatement@@Class<?> targetModel=endpoint.getCamelContext().getClassResolver().resolveClass(endpoint.getConfiguration().getTargetModel()); @TO@ Class<?> targetModel=endpoint.getCamelContext().getClassResolver().resolveMandatoryClass(endpoint.getConfiguration().getTargetModel()); @AT@ 2370 @LENGTH@ 145
---UPD VariableDeclarationFragment@@targetModel=endpoint.getCamelContext().getClassResolver().resolveClass(endpoint.getConfiguration().getTargetModel()) @TO@ targetModel=endpoint.getCamelContext().getClassResolver().resolveMandatoryClass(endpoint.getConfiguration().getTargetModel()) @AT@ 2379 @LENGTH@ 135
------UPD MethodInvocation@@endpoint.getCamelContext().getClassResolver().resolveClass(endpoint.getConfiguration().getTargetModel()) @TO@ endpoint.getCamelContext().getClassResolver().resolveMandatoryClass(endpoint.getConfiguration().getTargetModel()) @AT@ 2393 @LENGTH@ 121
---------UPD SimpleName@@MethodName:resolveClass:[endpoint.getConfiguration().getTargetModel()] @TO@ MethodName:resolveMandatoryClass:[endpoint.getConfiguration().getTargetModel()] @AT@ 2439 @LENGTH@ 75


UPD TypeDeclaration@@[@Configuration, @ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration"), public]CwComponentAutoConfiguration,  @TO@ [@Configuration, @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration"), public]CwComponentAutoConfiguration,  @AT@ 1440 @LENGTH@ 586
---UPD NormalAnnotation@@@ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1455 @LENGTH@ 79
---UPD NormalAnnotation@@@AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1535 @LENGTH@ 80


UPD IfStatement@@if (value instanceof WrappedFile) {  WrappedFile<?> gf=(WrappedFile<?>)value;  return getScanner(exchange,gf.getFile());} @TO@ if (value instanceof WrappedFile) {  WrappedFile<?> gf=(WrappedFile<?>)value;  Object body=gf.getBody();  if (body != null) {    value=body;  } else {    return getScanner(exchange,gf.getFile());  }} @AT@ 67125 @LENGTH@ 253
---UPD Block@@ThenBody:{  WrappedFile<?> gf=(WrappedFile<?>)value;  return getScanner(exchange,gf.getFile());} @TO@ ThenBody:{  WrappedFile<?> gf=(WrappedFile<?>)value;  Object body=gf.getBody();  if (body != null) {    value=body;  } else {    return getScanner(exchange,gf.getFile());  }} @AT@ 67159 @LENGTH@ 219
------INS VariableDeclarationStatement@@Object body=gf.getBody(); @TO@ Block@@ThenBody:{  WrappedFile<?> gf=(WrappedFile<?>)value;  return getScanner(exchange,gf.getFile());} @AT@ 67229 @LENGTH@ 27
---------INS SimpleType@@Object @TO@ VariableDeclarationStatement@@Object body=gf.getBody(); @AT@ 67229 @LENGTH@ 6
---------INS VariableDeclarationFragment@@body=gf.getBody() @TO@ VariableDeclarationStatement@@Object body=gf.getBody(); @AT@ 67236 @LENGTH@ 19
------------INS SimpleName@@body @TO@ VariableDeclarationFragment@@body=gf.getBody() @AT@ 67236 @LENGTH@ 4
------------INS MethodInvocation@@gf.getBody() @TO@ VariableDeclarationFragment@@body=gf.getBody() @AT@ 67243 @LENGTH@ 12
---------------INS SimpleName@@Name:gf @TO@ MethodInvocation@@gf.getBody() @AT@ 67243 @LENGTH@ 2
---------------INS SimpleName@@MethodName:getBody:[] @TO@ MethodInvocation@@gf.getBody() @AT@ 67246 @LENGTH@ 9
------INS IfStatement@@if (body != null) {  value=body;} else {  return getScanner(exchange,gf.getFile());} @TO@ Block@@ThenBody:{  WrappedFile<?> gf=(WrappedFile<?>)value;  return getScanner(exchange,gf.getFile());} @AT@ 67269 @LENGTH@ 321
---------INS InfixExpression@@body != null @TO@ IfStatement@@if (body != null) {  value=body;} else {  return getScanner(exchange,gf.getFile());} @AT@ 67273 @LENGTH@ 12
------------INS SimpleName@@body @TO@ InfixExpression@@body != null @AT@ 67273 @LENGTH@ 4
------------INS Operator@@!= @TO@ InfixExpression@@body != null @AT@ 67277 @LENGTH@ 2
------------INS NullLiteral@@null @TO@ InfixExpression@@body != null @AT@ 67281 @LENGTH@ 4
---------INS Block@@ThenBody:{  value=body;} @TO@ IfStatement@@if (body != null) {  value=body;} else {  return getScanner(exchange,gf.getFile());} @AT@ 67287 @LENGTH@ 122
------------INS ExpressionStatement@@Assignment:value=body @TO@ Block@@ThenBody:{  value=body;} @AT@ 67382 @LENGTH@ 13
---------------INS Assignment@@value=body @TO@ ExpressionStatement@@Assignment:value=body @AT@ 67382 @LENGTH@ 12
------------------INS SimpleName@@value @TO@ Assignment@@value=body @AT@ 67382 @LENGTH@ 5
------------------INS Operator@@= @TO@ Assignment@@value=body @AT@ 67387 @LENGTH@ 1
------------------INS SimpleName@@body @TO@ Assignment@@value=body @AT@ 67390 @LENGTH@ 4
---------INS Block@@ElseBody:{  return getScanner(exchange,gf.getFile());} @TO@ IfStatement@@if (body != null) {  value=body;} else {  return getScanner(exchange,gf.getFile());} @AT@ 67415 @LENGTH@ 175
------------MOV ReturnStatement@@MethodInvocation:getScanner(exchange,gf.getFile()) @TO@ Block@@ElseBody:{  return getScanner(exchange,gf.getFile());} @AT@ 67326 @LENGTH@ 42


UPD TypeDeclaration@@[@Configuration, @ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration"), @EnableConfigurationProperties(AvroDataFormatConfiguration.class), public]AvroDataFormatAutoConfiguration,  @TO@ [@Configuration, @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration"), @EnableConfigurationProperties(AvroDataFormatConfiguration.class), public]AvroDataFormatAutoConfiguration,  @AT@ 1665 @LENGTH@ 1095
---UPD NormalAnnotation@@@ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1680 @LENGTH@ 79
---UPD NormalAnnotation@@@AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1760 @LENGTH@ 80


MOV ExpressionStatement@@MethodInvocation:dynamicWorkflowClientExternal.startWorkflowExecution(toArray(arguments)) @TO@ MethodDeclaration@@public, String[], MethodName:startWorkflowExecution, String workflowId, String runId, String eventName, String version, Object arguments,  @AT@ 4062 @LENGTH@ 73


UPD IfStatement@@if (include == null) {  include=new boolean[types.size()];  Arrays.fill(include,true);  options.include(include);} @TO@ if (include == null) {  options=options.clone();  include=new boolean[types.size()];  Arrays.fill(include,true);  options.include(include);} @AT@ 2708 @LENGTH@ 137
---UPD Block@@ThenBody:{  include=new boolean[types.size()];  Arrays.fill(include,true);  options.include(include);} @TO@ ThenBody:{  options=options.clone();  include=new boolean[types.size()];  Arrays.fill(include,true);  options.include(include);} @AT@ 2729 @LENGTH@ 116
------INS ExpressionStatement@@Assignment:options=options.clone() @TO@ Block@@ThenBody:{  include=new boolean[types.size()];  Arrays.fill(include,true);  options.include(include);} @AT@ 2737 @LENGTH@ 26
---------INS Assignment@@options=options.clone() @TO@ ExpressionStatement@@Assignment:options=options.clone() @AT@ 2737 @LENGTH@ 25
------------INS SimpleName@@options @TO@ Assignment@@options=options.clone() @AT@ 2737 @LENGTH@ 7
------------INS Operator@@= @TO@ Assignment@@options=options.clone() @AT@ 2744 @LENGTH@ 1
------------INS MethodInvocation@@options.clone() @TO@ Assignment@@options=options.clone() @AT@ 2747 @LENGTH@ 15
---------------INS SimpleName@@Name:options @TO@ MethodInvocation@@options.clone() @AT@ 2747 @LENGTH@ 7
---------------INS SimpleName@@MethodName:clone:[] @TO@ MethodInvocation@@options.clone() @AT@ 2755 @LENGTH@ 7


INS ExpressionStatement@@MethodInvocation:when(em.getMetamodel()).thenReturn(metamodel) @TO@ MethodDeclaration@@public, void, MethodName:setUp, SecurityException, NoSuchMethodException,  @AT@ 3299 @LENGTH@ 46
---INS MethodInvocation@@when(em.getMetamodel()).thenReturn(metamodel) @TO@ ExpressionStatement@@MethodInvocation:when(em.getMetamodel()).thenReturn(metamodel) @AT@ 3299 @LENGTH@ 45
------INS MethodInvocation@@MethodName:when:[em.getMetamodel()] @TO@ MethodInvocation@@when(em.getMetamodel()).thenReturn(metamodel) @AT@ 3299 @LENGTH@ 23
---------INS MethodInvocation@@em.getMetamodel() @TO@ MethodInvocation@@MethodName:when:[em.getMetamodel()] @AT@ 3304 @LENGTH@ 17
------------INS SimpleName@@Name:em @TO@ MethodInvocation@@em.getMetamodel() @AT@ 3304 @LENGTH@ 2
------------INS SimpleName@@MethodName:getMetamodel:[] @TO@ MethodInvocation@@em.getMetamodel() @AT@ 3307 @LENGTH@ 14
------INS SimpleName@@MethodName:thenReturn:[metamodel] @TO@ MethodInvocation@@when(em.getMetamodel()).thenReturn(metamodel) @AT@ 3323 @LENGTH@ 21
---------INS SimpleName@@metamodel @TO@ SimpleName@@MethodName:thenReturn:[metamodel] @AT@ 3334 @LENGTH@ 9


UPD TypeDeclaration@@[@ContextConfiguration, public]CamelGreeterTest, AbstractJUnit4SpringContextTests @TO@ [@Ignore("TODO: ActiveMQ 5.14.1 or better, due AMQ-6402"), @ContextConfiguration, public]CamelGreeterTest, AbstractJUnit4SpringContextTests @AT@ 1662 @LENGTH@ 2109
---INS SingleMemberAnnotation@@@Ignore("TODO: ActiveMQ 5.14.1 or better, due AMQ-6402") @TO@ TypeDeclaration@@[@ContextConfiguration, public]CamelGreeterTest, AbstractJUnit4SpringContextTests @AT@ 1687 @LENGTH@ 56


UPD ExpressionStatement@@MethodInvocation:serviceBuilder.addDependency(context.getCapabilityServiceName(buildDynamicCapabilityName(SECURITY_DOMAIN_CAPABILITY,securityDomain),SecurityDomain.class),SecurityDomain.class,applicationSecurityDomainService.getSecurityDomainInjector()) @TO@ MethodInvocation:serviceBuilder.addDependency(context.getCapabilityServiceName(SECURITY_DOMAIN_CAPABILITY,securityDomain,SecurityDomain.class),SecurityDomain.class,applicationSecurityDomainService.getSecurityDomainInjector()) @AT@ 7089 @LENGTH@ 282
---UPD MethodInvocation@@serviceBuilder.addDependency(context.getCapabilityServiceName(buildDynamicCapabilityName(SECURITY_DOMAIN_CAPABILITY,securityDomain),SecurityDomain.class),SecurityDomain.class,applicationSecurityDomainService.getSecurityDomainInjector()) @TO@ serviceBuilder.addDependency(context.getCapabilityServiceName(SECURITY_DOMAIN_CAPABILITY,securityDomain,SecurityDomain.class),SecurityDomain.class,applicationSecurityDomainService.getSecurityDomainInjector()) @AT@ 7089 @LENGTH@ 281
------UPD SimpleName@@MethodName:addDependency:[context.getCapabilityServiceName(buildDynamicCapabilityName(SECURITY_DOMAIN_CAPABILITY,securityDomain),SecurityDomain.class), SecurityDomain.class, applicationSecurityDomainService.getSecurityDomainInjector()] @TO@ MethodName:addDependency:[context.getCapabilityServiceName(SECURITY_DOMAIN_CAPABILITY,securityDomain,SecurityDomain.class), SecurityDomain.class, applicationSecurityDomainService.getSecurityDomainInjector()] @AT@ 7104 @LENGTH@ 266
---------UPD MethodInvocation@@context.getCapabilityServiceName(buildDynamicCapabilityName(SECURITY_DOMAIN_CAPABILITY,securityDomain),SecurityDomain.class) @TO@ context.getCapabilityServiceName(SECURITY_DOMAIN_CAPABILITY,securityDomain,SecurityDomain.class) @AT@ 7118 @LENGTH@ 147
------------UPD SimpleName@@MethodName:getCapabilityServiceName:[buildDynamicCapabilityName(SECURITY_DOMAIN_CAPABILITY,securityDomain), SecurityDomain.class] @TO@ MethodName:getCapabilityServiceName:[SECURITY_DOMAIN_CAPABILITY, securityDomain, SecurityDomain.class] @AT@ 7126 @LENGTH@ 139
---------------DEL MethodInvocation@@buildDynamicCapabilityName(SECURITY_DOMAIN_CAPABILITY,securityDomain) @AT@ 7172 @LENGTH@ 70
------------------DEL SimpleName@@MethodName:buildDynamicCapabilityName:[SECURITY_DOMAIN_CAPABILITY, securityDomain] @AT@ 7172 @LENGTH@ 70
---------------MOV SimpleName@@SECURITY_DOMAIN_CAPABILITY @TO@ SimpleName@@MethodName:getCapabilityServiceName:[buildDynamicCapabilityName(SECURITY_DOMAIN_CAPABILITY,securityDomain), SecurityDomain.class] @AT@ 7199 @LENGTH@ 26
---------------MOV SimpleName@@securityDomain @TO@ SimpleName@@MethodName:getCapabilityServiceName:[buildDynamicCapabilityName(SECURITY_DOMAIN_CAPABILITY,securityDomain), SecurityDomain.class] @AT@ 7227 @LENGTH@ 14


UPD ExpressionStatement@@MethodInvocation:((TableScanOperator)ts).setTableDesc(tableDescList.get((byte)k)) @TO@ MethodInvocation:((TableScanOperator)ts).setTableDescSkewJoin(tableDescList.get((byte)k)) @AT@ 10890 @LENGTH@ 65
---UPD MethodInvocation@@((TableScanOperator)ts).setTableDesc(tableDescList.get((byte)k)) @TO@ ((TableScanOperator)ts).setTableDescSkewJoin(tableDescList.get((byte)k)) @AT@ 10890 @LENGTH@ 64
------UPD SimpleName@@MethodName:setTableDesc:[tableDescList.get((byte)k)] @TO@ MethodName:setTableDescSkewJoin:[tableDescList.get((byte)k)] @AT@ 10914 @LENGTH@ 40


UPD TypeDeclaration@@[@Configuration, @ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration"), @EnableConfigurationProperties(TwitterComponentConfiguration.class), public]TwitterComponentAutoConfiguration,  @TO@ [@Configuration, @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration"), @EnableConfigurationProperties(TwitterComponentConfiguration.class), public]TwitterComponentAutoConfiguration,  @AT@ 1628 @LENGTH@ 2079
---UPD NormalAnnotation@@@ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1643 @LENGTH@ 79
---UPD NormalAnnotation@@@AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1723 @LENGTH@ 80


UPD VariableDeclarationStatement@@List<ObjectId> ids=insertDBObjectList(collectionName,dbObjectList); @TO@ List<Object> ids=consolidateIdentifiers(insertDBObjectList(collectionName,dbObjectList),dbObjectList); @AT@ 36083 @LENGTH@ 70
---UPD ParameterizedType@@List<ObjectId> @TO@ List<Object> @AT@ 36083 @LENGTH@ 14
------UPD SimpleType@@ObjectId @TO@ Object @AT@ 36088 @LENGTH@ 8
---UPD VariableDeclarationFragment@@ids=insertDBObjectList(collectionName,dbObjectList) @TO@ ids=consolidateIdentifiers(insertDBObjectList(collectionName,dbObjectList),dbObjectList) @AT@ 36098 @LENGTH@ 54
------INS MethodInvocation@@consolidateIdentifiers(insertDBObjectList(collectionName,dbObjectList),dbObjectList) @TO@ VariableDeclarationFragment@@ids=insertDBObjectList(collectionName,dbObjectList) @AT@ 36103 @LENGTH@ 86
---------INS SimpleName@@MethodName:consolidateIdentifiers:[insertDBObjectList(collectionName,dbObjectList), dbObjectList] @TO@ MethodInvocation@@consolidateIdentifiers(insertDBObjectList(collectionName,dbObjectList),dbObjectList) @AT@ 36103 @LENGTH@ 86
------------MOV MethodInvocation@@insertDBObjectList(collectionName,dbObjectList) @TO@ SimpleName@@MethodName:consolidateIdentifiers:[insertDBObjectList(collectionName,dbObjectList), dbObjectList] @AT@ 36104 @LENGTH@ 48
------------INS SimpleName@@dbObjectList @TO@ SimpleName@@MethodName:consolidateIdentifiers:[insertDBObjectList(collectionName,dbObjectList), dbObjectList] @AT@ 36176 @LENGTH@ 12


UPD TypeDeclaration@@[@Configuration, @ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration"), public]EtcdComponentAutoConfiguration,  @TO@ [@Configuration, @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration"), public]EtcdComponentAutoConfiguration,  @AT@ 1438 @LENGTH@ 596
---UPD NormalAnnotation@@@ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1453 @LENGTH@ 79
---UPD NormalAnnotation@@@AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1533 @LENGTH@ 80


INS MethodDeclaration@@protected, void, MethodName:setupController, ControllerInitializer controllerInitializer,  @TO@ TypeDeclaration@@[private, static]NewSubsystemAdditionalInitialization, AdditionalInitialization @AT@ 17577 @LENGTH@ 203
---INS Modifier@@protected @TO@ MethodDeclaration@@protected, void, MethodName:setupController, ControllerInitializer controllerInitializer,  @AT@ 17577 @LENGTH@ 9
---INS PrimitiveType@@void @TO@ MethodDeclaration@@protected, void, MethodName:setupController, ControllerInitializer controllerInitializer,  @AT@ 17587 @LENGTH@ 4
---INS SimpleName@@MethodName:setupController @TO@ MethodDeclaration@@protected, void, MethodName:setupController, ControllerInitializer controllerInitializer,  @AT@ 17592 @LENGTH@ 15
---INS SingleVariableDeclaration@@ControllerInitializer controllerInitializer @TO@ MethodDeclaration@@protected, void, MethodName:setupController, ControllerInitializer controllerInitializer,  @AT@ 17608 @LENGTH@ 43
------INS SimpleType@@ControllerInitializer @TO@ SingleVariableDeclaration@@ControllerInitializer controllerInitializer @AT@ 17608 @LENGTH@ 21
------INS SimpleName@@controllerInitializer @TO@ SingleVariableDeclaration@@ControllerInitializer controllerInitializer @AT@ 17630 @LENGTH@ 21
---INS ExpressionStatement@@MethodInvocation:controllerInitializer.addPath("jboss.controller.temp.dir",System.getProperty("java.io.tmpdir"),null) @TO@ MethodDeclaration@@protected, void, MethodName:setupController, ControllerInitializer controllerInitializer,  @AT@ 17667 @LENGTH@ 103
------INS MethodInvocation@@controllerInitializer.addPath("jboss.controller.temp.dir",System.getProperty("java.io.tmpdir"),null) @TO@ ExpressionStatement@@MethodInvocation:controllerInitializer.addPath("jboss.controller.temp.dir",System.getProperty("java.io.tmpdir"),null) @AT@ 17667 @LENGTH@ 102
---------INS SimpleName@@Name:controllerInitializer @TO@ MethodInvocation@@controllerInitializer.addPath("jboss.controller.temp.dir",System.getProperty("java.io.tmpdir"),null) @AT@ 17667 @LENGTH@ 21
---------INS SimpleName@@MethodName:addPath:["jboss.controller.temp.dir", System.getProperty("java.io.tmpdir"), null] @TO@ MethodInvocation@@controllerInitializer.addPath("jboss.controller.temp.dir",System.getProperty("java.io.tmpdir"),null) @AT@ 17689 @LENGTH@ 80
------------INS StringLiteral@@"jboss.controller.temp.dir" @TO@ SimpleName@@MethodName:addPath:["jboss.controller.temp.dir", System.getProperty("java.io.tmpdir"), null] @AT@ 17697 @LENGTH@ 27
------------INS MethodInvocation@@System.getProperty("java.io.tmpdir") @TO@ SimpleName@@MethodName:addPath:["jboss.controller.temp.dir", System.getProperty("java.io.tmpdir"), null] @AT@ 17726 @LENGTH@ 36
---------------INS SimpleName@@Name:System @TO@ MethodInvocation@@System.getProperty("java.io.tmpdir") @AT@ 17726 @LENGTH@ 6
---------------INS SimpleName@@MethodName:getProperty:["java.io.tmpdir"] @TO@ MethodInvocation@@System.getProperty("java.io.tmpdir") @AT@ 17733 @LENGTH@ 29
------------------INS StringLiteral@@"java.io.tmpdir" @TO@ SimpleName@@MethodName:getProperty:["java.io.tmpdir"] @AT@ 17745 @LENGTH@ 16
------------INS NullLiteral@@null @TO@ SimpleName@@MethodName:addPath:["jboss.controller.temp.dir", System.getProperty("java.io.tmpdir"), null] @AT@ 17764 @LENGTH@ 4


INS ExpressionStatement@@MethodInvocation:consumer.setShutdownTimeout(this.shutdownTimeout) @TO@ MethodDeclaration@@protected, BlockingQueueConsumer, MethodName:createBlockingQueueConsumer,  @AT@ 38679 @LENGTH@ 50
---INS MethodInvocation@@consumer.setShutdownTimeout(this.shutdownTimeout) @TO@ ExpressionStatement@@MethodInvocation:consumer.setShutdownTimeout(this.shutdownTimeout) @AT@ 38679 @LENGTH@ 49
------INS SimpleName@@Name:consumer @TO@ MethodInvocation@@consumer.setShutdownTimeout(this.shutdownTimeout) @AT@ 38679 @LENGTH@ 8
------INS SimpleName@@MethodName:setShutdownTimeout:[this.shutdownTimeout] @TO@ MethodInvocation@@consumer.setShutdownTimeout(this.shutdownTimeout) @AT@ 38688 @LENGTH@ 40
---------INS FieldAccess@@this.shutdownTimeout @TO@ SimpleName@@MethodName:setShutdownTimeout:[this.shutdownTimeout] @AT@ 38707 @LENGTH@ 20
------------INS ThisExpression@@this @TO@ FieldAccess@@this.shutdownTimeout @AT@ 38707 @LENGTH@ 4
------------INS SimpleName@@shutdownTimeout @TO@ FieldAccess@@this.shutdownTimeout @AT@ 38712 @LENGTH@ 15


UPD TypeDeclaration@@[@Configuration, @ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration"), @EnableConfigurationProperties(HL7DataFormatConfiguration.class), public]HL7DataFormatAutoConfiguration,  @TO@ [@Configuration, @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration"), @EnableConfigurationProperties(HL7DataFormatConfiguration.class), public]HL7DataFormatAutoConfiguration,  @AT@ 1660 @LENGTH@ 1086
---UPD NormalAnnotation@@@ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1675 @LENGTH@ 79
---UPD NormalAnnotation@@@AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1755 @LENGTH@ 80


UPD IfStatement@@if (firstComponent.isEmpty()) {  absoluteName.addAll(name.getSuffix(1));} else {  absoluteName.addAll(prefix);  absoluteName.addAll(name);} @TO@ if (firstComponent.isEmpty()) {  absoluteName.addAll(name.getSuffix(1));} else {  absoluteName.addAll(prefix);  if (name instanceof CompositeName) {    absoluteName.addAll(name);  } else {    absoluteName.addAll(new CompositeName(name.toString()));  }} @AT@ 22471 @LENGTH@ 230
---INS Block@@ElseBody:{  absoluteName.addAll(prefix);  if (name instanceof CompositeName) {    absoluteName.addAll(name);  } else {    absoluteName.addAll(new CompositeName(name.toString()));  }} @TO@ IfStatement@@if (firstComponent.isEmpty()) {  absoluteName.addAll(name.getSuffix(1));} else {  absoluteName.addAll(prefix);  absoluteName.addAll(name);} @AT@ 22586 @LENGTH@ 307
------MOV ExpressionStatement@@MethodInvocation:absoluteName.addAll(prefix) @TO@ Block@@ElseBody:{  absoluteName.addAll(prefix);  if (name instanceof CompositeName) {    absoluteName.addAll(name);  } else {    absoluteName.addAll(new CompositeName(name.toString()));  }} @AT@ 22608 @LENGTH@ 28
------INS IfStatement@@if (name instanceof CompositeName) {  absoluteName.addAll(name);} else {  absoluteName.addAll(new CompositeName(name.toString()));} @TO@ Block@@ElseBody:{  absoluteName.addAll(prefix);  if (name instanceof CompositeName) {    absoluteName.addAll(name);  } else {    absoluteName.addAll(new CompositeName(name.toString()));  }} @AT@ 22657 @LENGTH@ 218
---------MOV Block@@ElseBody:{  absoluteName.addAll(prefix);  absoluteName.addAll(name);} @TO@ IfStatement@@if (name instanceof CompositeName) {  absoluteName.addAll(name);} else {  absoluteName.addAll(new CompositeName(name.toString()));} @AT@ 22586 @LENGTH@ 115
---------MOV Block@@ElseBody:{  absoluteName.addAll(prefix);  absoluteName.addAll(name);} @TO@ IfStatement@@if (name instanceof CompositeName) {  absoluteName.addAll(name);} else {  absoluteName.addAll(new CompositeName(name.toString()));} @AT@ 22586 @LENGTH@ 115
---------INS InstanceofExpression@@name instanceof CompositeName @TO@ IfStatement@@if (name instanceof CompositeName) {  absoluteName.addAll(name);} else {  absoluteName.addAll(new CompositeName(name.toString()));} @AT@ 22660 @LENGTH@ 29
------------INS SimpleName@@name @TO@ InstanceofExpression@@name instanceof CompositeName @AT@ 22660 @LENGTH@ 4
------------INS Instanceof@@instanceof @TO@ InstanceofExpression@@name instanceof CompositeName @AT@ 22665 @LENGTH@ 10
------------INS SimpleType@@CompositeName @TO@ InstanceofExpression@@name instanceof CompositeName @AT@ 22676 @LENGTH@ 13
---------INS Block@@ElseBody:{  absoluteName.addAll(new CompositeName(name.toString()));} @TO@ IfStatement@@if (name instanceof CompositeName) {  absoluteName.addAll(name);} else {  absoluteName.addAll(new CompositeName(name.toString()));} @AT@ 22771 @LENGTH@ 104
------------INS ExpressionStatement@@MethodInvocation:absoluteName.addAll(new CompositeName(name.toString())) @TO@ Block@@ElseBody:{  absoluteName.addAll(new CompositeName(name.toString()));} @AT@ 22797 @LENGTH@ 56
---------------INS MethodInvocation@@absoluteName.addAll(new CompositeName(name.toString())) @TO@ ExpressionStatement@@MethodInvocation:absoluteName.addAll(new CompositeName(name.toString())) @AT@ 22797 @LENGTH@ 55
------------------INS SimpleName@@Name:absoluteName @TO@ MethodInvocation@@absoluteName.addAll(new CompositeName(name.toString())) @AT@ 22797 @LENGTH@ 12
------------------INS SimpleName@@MethodName:addAll:[new CompositeName(name.toString())] @TO@ MethodInvocation@@absoluteName.addAll(new CompositeName(name.toString())) @AT@ 22810 @LENGTH@ 42
---------------------INS ClassInstanceCreation@@CompositeName[name.toString()] @TO@ SimpleName@@MethodName:addAll:[new CompositeName(name.toString())] @AT@ 22817 @LENGTH@ 34
------------------------INS New@@new @TO@ ClassInstanceCreation@@CompositeName[name.toString()] @AT@ 22817 @LENGTH@ 3
------------------------INS SimpleType@@CompositeName @TO@ ClassInstanceCreation@@CompositeName[name.toString()] @AT@ 22821 @LENGTH@ 13
------------------------INS MethodInvocation@@name.toString() @TO@ ClassInstanceCreation@@CompositeName[name.toString()] @AT@ 22835 @LENGTH@ 15
---------------------------INS SimpleName@@Name:name @TO@ MethodInvocation@@name.toString() @AT@ 22835 @LENGTH@ 4
---------------------------INS SimpleName@@MethodName:toString:[] @TO@ MethodInvocation@@name.toString() @AT@ 22840 @LENGTH@ 10
---UPD Block@@ElseBody:{  absoluteName.addAll(prefix);  absoluteName.addAll(name);} @TO@ ThenBody:{  absoluteName.addAll(name);} @AT@ 22586 @LENGTH@ 115


UPD MethodDeclaration@@public, AdvertisemetHandle, MethodName:advertise, String name,  @TO@ public, AdvertisementHandle, MethodName:advertise, String name,  @AT@ 1779 @LENGTH@ 353
---UPD SimpleType@@AdvertisemetHandle @TO@ AdvertisementHandle @AT@ 1786 @LENGTH@ 18


UPD TypeDeclaration@@[@Configuration, @ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration"), @EnableConfigurationProperties(HdfsComponentConfiguration.class), public]HdfsComponentAutoConfiguration,  @TO@ [@Configuration, @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration"), @EnableConfigurationProperties(HdfsComponentConfiguration.class), public]HdfsComponentAutoConfiguration,  @AT@ 1619 @LENGTH@ 2039
---UPD NormalAnnotation@@@ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1634 @LENGTH@ 79
---UPD NormalAnnotation@@@AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1714 @LENGTH@ 80


UPD TypeDeclaration@@[@Configuration, @ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration"), public]InfluxDbComponentAutoConfiguration,  @TO@ [@Configuration, @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration"), public]InfluxDbComponentAutoConfiguration,  @AT@ 1450 @LENGTH@ 625
---UPD NormalAnnotation@@@ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1465 @LENGTH@ 79
---UPD NormalAnnotation@@@AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1545 @LENGTH@ 80


UPD TypeDeclaration@@[@Configuration, @ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration"), @EnableConfigurationProperties(CxfComponentConfiguration.class), public]CxfComponentAutoConfiguration,  @TO@ [@Configuration, @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration"), @EnableConfigurationProperties(CxfComponentConfiguration.class), public]CxfComponentAutoConfiguration,  @AT@ 1616 @LENGTH@ 2030
---UPD NormalAnnotation@@@ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1631 @LENGTH@ 79
---UPD NormalAnnotation@@@AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1711 @LENGTH@ 80


UPD FieldDeclaration@@private, static, GraphDatabaseService, [graphDatabaseService=getGraphDatabaseService()] @TO@ private, static, GraphDatabaseService, [graphDatabaseService] @AT@ 2080 @LENGTH@ 85
---UPD VariableDeclarationFragment@@graphDatabaseService=getGraphDatabaseService() @TO@ graphDatabaseService @AT@ 2116 @LENGTH@ 48
------DEL MethodInvocation@@MethodName:getGraphDatabaseService:[] @AT@ 2139 @LENGTH@ 25


UPD TypeDeclaration@@[@Configuration, @ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration"), public]JBPMComponentAutoConfiguration,  @TO@ [@Configuration, @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration"), public]JBPMComponentAutoConfiguration,  @AT@ 1438 @LENGTH@ 596
---UPD NormalAnnotation@@@ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1453 @LENGTH@ 79
---UPD NormalAnnotation@@@AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1533 @LENGTH@ 80


INS ExpressionStatement@@MethodInvocation:deployment.addAllDependencies() @TO@ MethodDeclaration@@public, static, Archive, MethodName:createDeployment, Exception,  @AT@ 1628 @LENGTH@ 32
---INS MethodInvocation@@deployment.addAllDependencies() @TO@ ExpressionStatement@@MethodInvocation:deployment.addAllDependencies() @AT@ 1628 @LENGTH@ 31
------INS SimpleName@@Name:deployment @TO@ MethodInvocation@@deployment.addAllDependencies() @AT@ 1628 @LENGTH@ 10
------INS SimpleName@@MethodName:addAllDependencies:[] @TO@ MethodInvocation@@deployment.addAllDependencies() @AT@ 1639 @LENGTH@ 20


UPD IfStatement@@if (Modifier.isStatic(containerFactoryMethod.getModifiers())) {  final Object containerFactory=containerFactoryMethod.invoke(null,new Object[0]);  if (containerFactory instanceof Class) {    Class containerFactoryClass=(Class)containerFactory;    if (org.wildfly.swarm.ContainerFactory.class.isAssignableFrom(containerFactoryClass)) {      registerContainerFactory(archive,containerFactoryClass);    } else {      throw new IllegalArgumentException(String.format("Method annotated with %s does not return a class of %s",org.wildfly.swarm.arquillian.adapter.ContainerFactory.class.getSimpleName(),org.wildfly.swarm.ContainerFactory.class.getSimpleName()));    }  } else {    throw new IllegalArgumentException(String.format("Method annotated with %s does not return a class of %s",org.wildfly.swarm.arquillian.adapter.ContainerFactory.class.getSimpleName(),org.wildfly.swarm.ContainerFactory.class.getSimpleName()));  }} else {  throw new IllegalArgumentException(String.format("Method annotated with %s is %s but it is not static",org.wildfly.swarm.arquillian.adapter.ContainerFactory.class.getSimpleName(),containerMethod));} @TO@ if (Modifier.isStatic(containerFactoryMethod.getModifiers())) {  final Object containerFactory=containerFactoryMethod.invoke(null,new Object[0]);  if (containerFactory instanceof Class) {    Class containerFactoryClass=(Class)containerFactory;    if (org.wildfly.swarm.ContainerFactory.class.isAssignableFrom(containerFactoryClass)) {      registerContainerFactory(archive,containerFactoryClass);    } else {      throw new IllegalArgumentException(String.format("Method annotated with %s is %s but it does not return an instance of %s",org.wildfly.swarm.arquillian.adapter.ContainerFactory.class.getSimpleName(),containerFactoryMethod,org.wildfly.swarm.ContainerFactory.class.getSimpleName()));    }  } else {    throw new IllegalArgumentException(String.format("Method annotated with %s is %s but it does not return an instance of %s",org.wildfly.swarm.arquillian.adapter.ContainerFactory.class.getSimpleName(),containerFactoryMethod,org.wildfly.swarm.ContainerFactory.class.getSimpleName()));  }} else {  throw new IllegalArgumentException(String.format("Method annotated with %s is %s but it is not static",org.wildfly.swarm.arquillian.adapter.ContainerFactory.class.getSimpleName(),containerFactoryMethod));} @AT@ 5122 @LENGTH@ 1852
---UPD Block@@ThenBody:{  final Object containerFactory=containerFactoryMethod.invoke(null,new Object[0]);  if (containerFactory instanceof Class) {    Class containerFactoryClass=(Class)containerFactory;    if (org.wildfly.swarm.ContainerFactory.class.isAssignableFrom(containerFactoryClass)) {      registerContainerFactory(archive,containerFactoryClass);    } else {      throw new IllegalArgumentException(String.format("Method annotated with %s does not return a class of %s",org.wildfly.swarm.arquillian.adapter.ContainerFactory.class.getSimpleName(),org.wildfly.swarm.ContainerFactory.class.getSimpleName()));    }  } else {    throw new IllegalArgumentException(String.format("Method annotated with %s does not return a class of %s",org.wildfly.swarm.arquillian.adapter.ContainerFactory.class.getSimpleName(),org.wildfly.swarm.ContainerFactory.class.getSimpleName()));  }} @TO@ ThenBody:{  final Object containerFactory=containerFactoryMethod.invoke(null,new Object[0]);  if (containerFactory instanceof Class) {    Class containerFactoryClass=(Class)containerFactory;    if (org.wildfly.swarm.ContainerFactory.class.isAssignableFrom(containerFactoryClass)) {      registerContainerFactory(archive,containerFactoryClass);    } else {      throw new IllegalArgumentException(String.format("Method annotated with %s is %s but it does not return an instance of %s",org.wildfly.swarm.arquillian.adapter.ContainerFactory.class.getSimpleName(),containerFactoryMethod,org.wildfly.swarm.ContainerFactory.class.getSimpleName()));    }  } else {    throw new IllegalArgumentException(String.format("Method annotated with %s is %s but it does not return an instance of %s",org.wildfly.swarm.arquillian.adapter.ContainerFactory.class.getSimpleName(),containerFactoryMethod,org.wildfly.swarm.ContainerFactory.class.getSimpleName()));  }} @AT@ 5184 @LENGTH@ 1424
------UPD IfStatement@@if (containerFactory instanceof Class) {  Class containerFactoryClass=(Class)containerFactory;  if (org.wildfly.swarm.ContainerFactory.class.isAssignableFrom(containerFactoryClass)) {    registerContainerFactory(archive,containerFactoryClass);  } else {    throw new IllegalArgumentException(String.format("Method annotated with %s does not return a class of %s",org.wildfly.swarm.arquillian.adapter.ContainerFactory.class.getSimpleName(),org.wildfly.swarm.ContainerFactory.class.getSimpleName()));  }} else {  throw new IllegalArgumentException(String.format("Method annotated with %s does not return a class of %s",org.wildfly.swarm.arquillian.adapter.ContainerFactory.class.getSimpleName(),org.wildfly.swarm.ContainerFactory.class.getSimpleName()));} @TO@ if (containerFactory instanceof Class) {  Class containerFactoryClass=(Class)containerFactory;  if (org.wildfly.swarm.ContainerFactory.class.isAssignableFrom(containerFactoryClass)) {    registerContainerFactory(archive,containerFactoryClass);  } else {    throw new IllegalArgumentException(String.format("Method annotated with %s is %s but it does not return an instance of %s",org.wildfly.swarm.arquillian.adapter.ContainerFactory.class.getSimpleName(),containerFactoryMethod,org.wildfly.swarm.ContainerFactory.class.getSimpleName()));  }} else {  throw new IllegalArgumentException(String.format("Method annotated with %s is %s but it does not return an instance of %s",org.wildfly.swarm.arquillian.adapter.ContainerFactory.class.getSimpleName(),containerFactoryMethod,org.wildfly.swarm.ContainerFactory.class.getSimpleName()));} @AT@ 5319 @LENGTH@ 1267
---------UPD Block@@ThenBody:{  Class containerFactoryClass=(Class)containerFactory;  if (org.wildfly.swarm.ContainerFactory.class.isAssignableFrom(containerFactoryClass)) {    registerContainerFactory(archive,containerFactoryClass);  } else {    throw new IllegalArgumentException(String.format("Method annotated with %s does not return a class of %s",org.wildfly.swarm.arquillian.adapter.ContainerFactory.class.getSimpleName(),org.wildfly.swarm.ContainerFactory.class.getSimpleName()));  }} @TO@ ThenBody:{  Class containerFactoryClass=(Class)containerFactory;  if (org.wildfly.swarm.ContainerFactory.class.isAssignableFrom(containerFactoryClass)) {    registerContainerFactory(archive,containerFactoryClass);  } else {    throw new IllegalArgumentException(String.format("Method annotated with %s is %s but it does not return an instance of %s",org.wildfly.swarm.arquillian.adapter.ContainerFactory.class.getSimpleName(),containerFactoryMethod,org.wildfly.swarm.ContainerFactory.class.getSimpleName()));  }} @AT@ 5358 @LENGTH@ 798
------------UPD IfStatement@@if (org.wildfly.swarm.ContainerFactory.class.isAssignableFrom(containerFactoryClass)) {  registerContainerFactory(archive,containerFactoryClass);} else {  throw new IllegalArgumentException(String.format("Method annotated with %s does not return a class of %s",org.wildfly.swarm.arquillian.adapter.ContainerFactory.class.getSimpleName(),org.wildfly.swarm.ContainerFactory.class.getSimpleName()));} @TO@ if (org.wildfly.swarm.ContainerFactory.class.isAssignableFrom(containerFactoryClass)) {  registerContainerFactory(archive,containerFactoryClass);} else {  throw new IllegalArgumentException(String.format("Method annotated with %s is %s but it does not return an instance of %s",org.wildfly.swarm.arquillian.adapter.ContainerFactory.class.getSimpleName(),containerFactoryMethod,org.wildfly.swarm.ContainerFactory.class.getSimpleName()));} @AT@ 5472 @LENGTH@ 657
---------------UPD Block@@ElseBody:{  throw new IllegalArgumentException(String.format("Method annotated with %s does not return a class of %s",org.wildfly.swarm.arquillian.adapter.ContainerFactory.class.getSimpleName(),org.wildfly.swarm.ContainerFactory.class.getSimpleName()));} @TO@ ElseBody:{  throw new IllegalArgumentException(String.format("Method annotated with %s is %s but it does not return an instance of %s",org.wildfly.swarm.arquillian.adapter.ContainerFactory.class.getSimpleName(),containerFactoryMethod,org.wildfly.swarm.ContainerFactory.class.getSimpleName()));} @AT@ 5685 @LENGTH@ 444
------------------UPD ThrowStatement@@ClassInstanceCreation:new IllegalArgumentException(String.format("Method annotated with %s does not return a class of %s",org.wildfly.swarm.arquillian.adapter.ContainerFactory.class.getSimpleName(),org.wildfly.swarm.ContainerFactory.class.getSimpleName())) @TO@ ClassInstanceCreation:new IllegalArgumentException(String.format("Method annotated with %s is %s but it does not return an instance of %s",org.wildfly.swarm.arquillian.adapter.ContainerFactory.class.getSimpleName(),containerFactoryMethod,org.wildfly.swarm.ContainerFactory.class.getSimpleName())) @AT@ 5719 @LENGTH@ 380
---------------------UPD ClassInstanceCreation@@IllegalArgumentException[String.format("Method annotated with %s does not return a class of %s",org.wildfly.swarm.arquillian.adapter.ContainerFactory.class.getSimpleName(),org.wildfly.swarm.ContainerFactory.class.getSimpleName())] @TO@ IllegalArgumentException[String.format("Method annotated with %s is %s but it does not return an instance of %s",org.wildfly.swarm.arquillian.adapter.ContainerFactory.class.getSimpleName(),containerFactoryMethod,org.wildfly.swarm.ContainerFactory.class.getSimpleName())] @AT@ 5725 @LENGTH@ 373
------------------------UPD MethodInvocation@@String.format("Method annotated with %s does not return a class of %s",org.wildfly.swarm.arquillian.adapter.ContainerFactory.class.getSimpleName(),org.wildfly.swarm.ContainerFactory.class.getSimpleName()) @TO@ String.format("Method annotated with %s is %s but it does not return an instance of %s",org.wildfly.swarm.arquillian.adapter.ContainerFactory.class.getSimpleName(),containerFactoryMethod,org.wildfly.swarm.ContainerFactory.class.getSimpleName()) @AT@ 5795 @LENGTH@ 302
---------------------------UPD SimpleName@@MethodName:format:["Method annotated with %s does not return a class of %s", org.wildfly.swarm.arquillian.adapter.ContainerFactory.class.getSimpleName(), org.wildfly.swarm.ContainerFactory.class.getSimpleName()] @TO@ MethodName:format:["Method annotated with %s is %s but it does not return an instance of %s", org.wildfly.swarm.arquillian.adapter.ContainerFactory.class.getSimpleName(), containerFactoryMethod, org.wildfly.swarm.ContainerFactory.class.getSimpleName()] @AT@ 5802 @LENGTH@ 295
------------------------------UPD StringLiteral@@"Method annotated with %s does not return a class of %s" @TO@ "Method annotated with %s is %s but it does not return an instance of %s" @AT@ 5809 @LENGTH@ 56
------------------------------INS SimpleName@@containerFactoryMethod @TO@ SimpleName@@MethodName:format:["Method annotated with %s does not return a class of %s", org.wildfly.swarm.arquillian.adapter.ContainerFactory.class.getSimpleName(), org.wildfly.swarm.ContainerFactory.class.getSimpleName()] @AT@ 6057 @LENGTH@ 22
---------UPD Block@@ElseBody:{  throw new IllegalArgumentException(String.format("Method annotated with %s does not return a class of %s",org.wildfly.swarm.arquillian.adapter.ContainerFactory.class.getSimpleName(),org.wildfly.swarm.ContainerFactory.class.getSimpleName()));} @TO@ ElseBody:{  throw new IllegalArgumentException(String.format("Method annotated with %s is %s but it does not return an instance of %s",org.wildfly.swarm.arquillian.adapter.ContainerFactory.class.getSimpleName(),containerFactoryMethod,org.wildfly.swarm.ContainerFactory.class.getSimpleName()));} @AT@ 6162 @LENGTH@ 424
------------UPD ThrowStatement@@ClassInstanceCreation:new IllegalArgumentException(String.format("Method annotated with %s does not return a class of %s",org.wildfly.swarm.arquillian.adapter.ContainerFactory.class.getSimpleName(),org.wildfly.swarm.ContainerFactory.class.getSimpleName())) @TO@ ClassInstanceCreation:new IllegalArgumentException(String.format("Method annotated with %s is %s but it does not return an instance of %s",org.wildfly.swarm.arquillian.adapter.ContainerFactory.class.getSimpleName(),containerFactoryMethod,org.wildfly.swarm.ContainerFactory.class.getSimpleName())) @AT@ 6192 @LENGTH@ 368
---------------UPD ClassInstanceCreation@@IllegalArgumentException[String.format("Method annotated with %s does not return a class of %s",org.wildfly.swarm.arquillian.adapter.ContainerFactory.class.getSimpleName(),org.wildfly.swarm.ContainerFactory.class.getSimpleName())] @TO@ IllegalArgumentException[String.format("Method annotated with %s is %s but it does not return an instance of %s",org.wildfly.swarm.arquillian.adapter.ContainerFactory.class.getSimpleName(),containerFactoryMethod,org.wildfly.swarm.ContainerFactory.class.getSimpleName())] @AT@ 6198 @LENGTH@ 361
------------------UPD MethodInvocation@@String.format("Method annotated with %s does not return a class of %s",org.wildfly.swarm.arquillian.adapter.ContainerFactory.class.getSimpleName(),org.wildfly.swarm.ContainerFactory.class.getSimpleName()) @TO@ String.format("Method annotated with %s is %s but it does not return an instance of %s",org.wildfly.swarm.arquillian.adapter.ContainerFactory.class.getSimpleName(),containerFactoryMethod,org.wildfly.swarm.ContainerFactory.class.getSimpleName()) @AT@ 6264 @LENGTH@ 294
---------------------UPD SimpleName@@MethodName:format:["Method annotated with %s does not return a class of %s", org.wildfly.swarm.arquillian.adapter.ContainerFactory.class.getSimpleName(), org.wildfly.swarm.ContainerFactory.class.getSimpleName()] @TO@ MethodName:format:["Method annotated with %s is %s but it does not return an instance of %s", org.wildfly.swarm.arquillian.adapter.ContainerFactory.class.getSimpleName(), containerFactoryMethod, org.wildfly.swarm.ContainerFactory.class.getSimpleName()] @AT@ 6271 @LENGTH@ 287
------------------------UPD StringLiteral@@"Method annotated with %s does not return a class of %s" @TO@ "Method annotated with %s is %s but it does not return an instance of %s" @AT@ 6278 @LENGTH@ 56
------------------------INS SimpleName@@containerFactoryMethod @TO@ SimpleName@@MethodName:format:["Method annotated with %s does not return a class of %s", org.wildfly.swarm.arquillian.adapter.ContainerFactory.class.getSimpleName(), org.wildfly.swarm.ContainerFactory.class.getSimpleName()] @AT@ 6607 @LENGTH@ 22
---UPD Block@@ElseBody:{  throw new IllegalArgumentException(String.format("Method annotated with %s is %s but it is not static",org.wildfly.swarm.arquillian.adapter.ContainerFactory.class.getSimpleName(),containerMethod));} @TO@ ElseBody:{  throw new IllegalArgumentException(String.format("Method annotated with %s is %s but it is not static",org.wildfly.swarm.arquillian.adapter.ContainerFactory.class.getSimpleName(),containerFactoryMethod));} @AT@ 6614 @LENGTH@ 360
------UPD ThrowStatement@@ClassInstanceCreation:new IllegalArgumentException(String.format("Method annotated with %s is %s but it is not static",org.wildfly.swarm.arquillian.adapter.ContainerFactory.class.getSimpleName(),containerMethod)) @TO@ ClassInstanceCreation:new IllegalArgumentException(String.format("Method annotated with %s is %s but it is not static",org.wildfly.swarm.arquillian.adapter.ContainerFactory.class.getSimpleName(),containerFactoryMethod)) @AT@ 6640 @LENGTH@ 312
---------UPD ClassInstanceCreation@@IllegalArgumentException[String.format("Method annotated with %s is %s but it is not static",org.wildfly.swarm.arquillian.adapter.ContainerFactory.class.getSimpleName(),containerMethod)] @TO@ IllegalArgumentException[String.format("Method annotated with %s is %s but it is not static",org.wildfly.swarm.arquillian.adapter.ContainerFactory.class.getSimpleName(),containerFactoryMethod)] @AT@ 6646 @LENGTH@ 305
------------UPD MethodInvocation@@String.format("Method annotated with %s is %s but it is not static",org.wildfly.swarm.arquillian.adapter.ContainerFactory.class.getSimpleName(),containerMethod) @TO@ String.format("Method annotated with %s is %s but it is not static",org.wildfly.swarm.arquillian.adapter.ContainerFactory.class.getSimpleName(),containerFactoryMethod) @AT@ 6708 @LENGTH@ 242
---------------UPD SimpleName@@MethodName:format:["Method annotated with %s is %s but it is not static", org.wildfly.swarm.arquillian.adapter.ContainerFactory.class.getSimpleName(), containerMethod] @TO@ MethodName:format:["Method annotated with %s is %s but it is not static", org.wildfly.swarm.arquillian.adapter.ContainerFactory.class.getSimpleName(), containerFactoryMethod] @AT@ 6715 @LENGTH@ 235
------------------UPD SimpleName@@containerMethod @TO@ containerFactoryMethod @AT@ 6934 @LENGTH@ 15


UPD MethodDeclaration@@private, void, MethodName:runTestSendBody, String expectedBody, String sentBody, Function<String,String> processor, InterruptedException, java.util.concurrent.ExecutionException,  @TO@ private, void, MethodName:runTestSendBody, String expectedBody, String sentBody, Function<String,String> processor, Exception,  @AT@ 2751 @LENGTH@ 282
---UPD SimpleType@@InterruptedException @TO@ Exception @AT@ 2873 @LENGTH@ 20
---DEL SimpleType@@java.util.concurrent.ExecutionException @AT@ 2895 @LENGTH@ 39


UPD ExpressionStatement@@MethodInvocation:client.follow(profileLink,RestMediaTypes.SCHEMA_JSON).andExpect(status().is2xxSuccessful()).andExpect(header().string(HttpHeaders.CONTENT_TYPE,RestMediaTypes.SCHEMA_JSON_VALUE)) @TO@ MethodInvocation:client.follow(profileLink,RestMediaTypes.SCHEMA_JSON).andExpect(status().is2xxSuccessful()).andExpect(content().contentTypeCompatibleWith(RestMediaTypes.SCHEMA_JSON)) @AT@ 4729 @LENGTH@ 185
---UPD MethodInvocation@@client.follow(profileLink,RestMediaTypes.SCHEMA_JSON).andExpect(status().is2xxSuccessful()).andExpect(header().string(HttpHeaders.CONTENT_TYPE,RestMediaTypes.SCHEMA_JSON_VALUE)) @TO@ client.follow(profileLink,RestMediaTypes.SCHEMA_JSON).andExpect(status().is2xxSuccessful()).andExpect(content().contentTypeCompatibleWith(RestMediaTypes.SCHEMA_JSON)) @AT@ 4729 @LENGTH@ 184
------UPD SimpleName@@MethodName:andExpect:[header().string(HttpHeaders.CONTENT_TYPE,RestMediaTypes.SCHEMA_JSON_VALUE)] @TO@ MethodName:andExpect:[content().contentTypeCompatibleWith(RestMediaTypes.SCHEMA_JSON)] @AT@ 4827 @LENGTH@ 86
---------UPD MethodInvocation@@header().string(HttpHeaders.CONTENT_TYPE,RestMediaTypes.SCHEMA_JSON_VALUE) @TO@ content().contentTypeCompatibleWith(RestMediaTypes.SCHEMA_JSON) @AT@ 4837 @LENGTH@ 75
------------UPD MethodInvocation@@MethodName:header:[] @TO@ MethodName:content:[] @AT@ 4837 @LENGTH@ 8
------------UPD SimpleName@@MethodName:string:[HttpHeaders.CONTENT_TYPE, RestMediaTypes.SCHEMA_JSON_VALUE] @TO@ MethodName:contentTypeCompatibleWith:[RestMediaTypes.SCHEMA_JSON] @AT@ 4846 @LENGTH@ 66
---------------DEL QualifiedName@@HttpHeaders.CONTENT_TYPE @AT@ 4853 @LENGTH@ 24
------------------DEL SimpleName@@HttpHeaders @AT@ 4853 @LENGTH@ 11
------------------DEL SimpleName@@CONTENT_TYPE @AT@ 4865 @LENGTH@ 12
---------------UPD QualifiedName@@RestMediaTypes.SCHEMA_JSON_VALUE @TO@ RestMediaTypes.SCHEMA_JSON @AT@ 4879 @LENGTH@ 32
------------------UPD SimpleName@@SCHEMA_JSON_VALUE @TO@ SCHEMA_JSON @AT@ 4894 @LENGTH@ 17


INS VariableDeclarationStatement@@Set<String> authorities=AuthorityUtils.authorityListToSet(authentication.getAuthorities()); @TO@ MethodDeclaration@@public, void, MethodName:securityCheck, Acl acl, int changeType,  @AT@ 4636 @LENGTH@ 93
---INS ParameterizedType@@Set<String> @TO@ VariableDeclarationStatement@@Set<String> authorities=AuthorityUtils.authorityListToSet(authentication.getAuthorities()); @AT@ 4636 @LENGTH@ 11
------INS SimpleType@@Set @TO@ ParameterizedType@@Set<String> @AT@ 4636 @LENGTH@ 3
------INS SimpleType@@String @TO@ ParameterizedType@@Set<String> @AT@ 4640 @LENGTH@ 6
---INS VariableDeclarationFragment@@authorities=AuthorityUtils.authorityListToSet(authentication.getAuthorities()) @TO@ VariableDeclarationStatement@@Set<String> authorities=AuthorityUtils.authorityListToSet(authentication.getAuthorities()); @AT@ 4648 @LENGTH@ 80
------INS SimpleName@@authorities @TO@ VariableDeclarationFragment@@authorities=AuthorityUtils.authorityListToSet(authentication.getAuthorities()) @AT@ 4648 @LENGTH@ 11
------INS MethodInvocation@@AuthorityUtils.authorityListToSet(authentication.getAuthorities()) @TO@ VariableDeclarationFragment@@authorities=AuthorityUtils.authorityListToSet(authentication.getAuthorities()) @AT@ 4662 @LENGTH@ 66
---------INS SimpleName@@Name:AuthorityUtils @TO@ MethodInvocation@@AuthorityUtils.authorityListToSet(authentication.getAuthorities()) @AT@ 4662 @LENGTH@ 14
---------INS SimpleName@@MethodName:authorityListToSet:[authentication.getAuthorities()] @TO@ MethodInvocation@@AuthorityUtils.authorityListToSet(authentication.getAuthorities()) @AT@ 4677 @LENGTH@ 51
------------INS MethodInvocation@@authentication.getAuthorities() @TO@ SimpleName@@MethodName:authorityListToSet:[authentication.getAuthorities()] @AT@ 4696 @LENGTH@ 31
---------------INS SimpleName@@Name:authentication @TO@ MethodInvocation@@authentication.getAuthorities() @AT@ 4696 @LENGTH@ 14
---------------INS SimpleName@@MethodName:getAuthorities:[] @TO@ MethodInvocation@@authentication.getAuthorities() @AT@ 4711 @LENGTH@ 16


UPD MethodDeclaration@@public, static, File, MethodName:camelProjectRoot, File baseDir,  @TO@ public, static, File, MethodName:camelProjectRoot, File baseDir, String expectedDirName,  @AT@ 1871 @LENGTH@ 526
---UPD TryStatement@@try {  File root=baseDir.getCanonicalFile();  while (root != null && !root.getName().equals("camel")) {    root=root.getParentFile();  }  if (root == null) {    throw new IllegalStateException("Cannot find project root");  }  return root;} catch (IOException e) {  throw new IllegalStateException("Error while getting directory",e);} @TO@ try {  File root=baseDir.getCanonicalFile();  while (root != null) {    File[] names=root.listFiles(pathname -> pathname.getName().equals(expectedDirName));    if (names != null && names.length == 1) {      break;    }    root=root.getParentFile();  }  if (root == null) {    throw new IllegalStateException("Cannot find Apache Camel project root directory");  }  return root;} catch (IOException e) {  throw new IllegalStateException("Error while getting directory",e);} @AT@ 1931 @LENGTH@ 460
------UPD WhileStatement@@while (root != null && !root.getName().equals("camel")) {  root=root.getParentFile();} @TO@ while (root != null) {  File[] names=root.listFiles(pathname -> pathname.getName().equals(expectedDirName));  if (names != null && names.length == 1) {    break;  }  root=root.getParentFile();} @AT@ 2001 @LENGTH@ 116
---------DEL InfixExpression@@root != null && !root.getName().equals("camel") @AT@ 2008 @LENGTH@ 47
------------DEL InfixExpression@@root != null @AT@ 2008 @LENGTH@ 12
------------DEL Operator@@&& @AT@ 2020 @LENGTH@ 2
------------DEL PrefixExpression@@!root.getName().equals("camel") @AT@ 2024 @LENGTH@ 31
---------------DEL Operator@@! @AT@ 2024 @LENGTH@ 1
---------------DEL MethodInvocation@@root.getName().equals("camel") @AT@ 2025 @LENGTH@ 30
---------DEL Block@@WhileBody:{  root=root.getParentFile();} @AT@ 2057 @LENGTH@ 60
---------INS InfixExpression@@root != null @TO@ WhileStatement@@while (root != null && !root.getName().equals("camel")) {  root=root.getParentFile();} @AT@ 2277 @LENGTH@ 12
------------MOV SimpleName@@root @TO@ InfixExpression@@root != null @AT@ 2008 @LENGTH@ 4
------------MOV Operator@@!= @TO@ InfixExpression@@root != null @AT@ 2012 @LENGTH@ 2
------------MOV NullLiteral@@null @TO@ InfixExpression@@root != null @AT@ 2016 @LENGTH@ 4
---------INS Block@@WhileBody:{  File[] names=root.listFiles(pathname -> pathname.getName().equals(expectedDirName));  if (names != null && names.length == 1) {    break;  }  root=root.getParentFile();} @TO@ WhileStatement@@while (root != null && !root.getName().equals("camel")) {  root=root.getParentFile();} @AT@ 2291 @LENGTH@ 266
------------MOV ExpressionStatement@@Assignment:root=root.getParentFile() @TO@ Block@@WhileBody:{  File[] names=root.listFiles(pathname -> pathname.getName().equals(expectedDirName));  if (names != null && names.length == 1) {    break;  }  root=root.getParentFile();} @AT@ 2075 @LENGTH@ 28
------------INS VariableDeclarationStatement@@File[] names=root.listFiles(pathname -> pathname.getName().equals(expectedDirName)); @TO@ Block@@WhileBody:{  File[] names=root.listFiles(pathname -> pathname.getName().equals(expectedDirName));  if (names != null && names.length == 1) {    break;  }  root=root.getParentFile();} @AT@ 2309 @LENGTH@ 86
---------------INS ArrayType@@File[] @TO@ VariableDeclarationStatement@@File[] names=root.listFiles(pathname -> pathname.getName().equals(expectedDirName)); @AT@ 2309 @LENGTH@ 6
------------------INS SimpleType@@File @TO@ ArrayType@@File[] @AT@ 2309 @LENGTH@ 4
---------------INS VariableDeclarationFragment@@names=root.listFiles(pathname -> pathname.getName().equals(expectedDirName)) @TO@ VariableDeclarationStatement@@File[] names=root.listFiles(pathname -> pathname.getName().equals(expectedDirName)); @AT@ 2316 @LENGTH@ 78
------------------INS SimpleName@@names @TO@ VariableDeclarationFragment@@names=root.listFiles(pathname -> pathname.getName().equals(expectedDirName)) @AT@ 2316 @LENGTH@ 5
------------------INS MethodInvocation@@root.listFiles(pathname -> pathname.getName().equals(expectedDirName)) @TO@ VariableDeclarationFragment@@names=root.listFiles(pathname -> pathname.getName().equals(expectedDirName)) @AT@ 2324 @LENGTH@ 70
---------------------MOV SimpleName@@Name:root @TO@ MethodInvocation@@root.listFiles(pathname -> pathname.getName().equals(expectedDirName)) @AT@ 2025 @LENGTH@ 4
---------------------INS SimpleName@@MethodName:listFiles:[pathname -> pathname.getName().equals(expectedDirName)] @TO@ MethodInvocation@@root.listFiles(pathname -> pathname.getName().equals(expectedDirName)) @AT@ 2329 @LENGTH@ 65
------------------------INS LambdaExpression@@pathname -> pathname.getName().equals(expectedDirName) @TO@ SimpleName@@MethodName:listFiles:[pathname -> pathname.getName().equals(expectedDirName)] @AT@ 2339 @LENGTH@ 54
---------------------------INS VariableDeclarationFragment@@pathname @TO@ LambdaExpression@@pathname -> pathname.getName().equals(expectedDirName) @AT@ 2339 @LENGTH@ 8
------------------------------INS SimpleName@@pathname @TO@ VariableDeclarationFragment@@pathname @AT@ 2339 @LENGTH@ 8
---------------------------INS MethodInvocation@@pathname.getName().equals(expectedDirName) @TO@ LambdaExpression@@pathname -> pathname.getName().equals(expectedDirName) @AT@ 2351 @LENGTH@ 42
------------------------------MOV MethodInvocation@@MethodName:getName:[] @TO@ MethodInvocation@@pathname.getName().equals(expectedDirName) @AT@ 2025 @LENGTH@ 14
------------------------------MOV SimpleName@@MethodName:equals:["camel"] @TO@ MethodInvocation@@pathname.getName().equals(expectedDirName) @AT@ 2040 @LENGTH@ 15
---------------------------------DEL StringLiteral@@"camel" @AT@ 2047 @LENGTH@ 7
---------------------------------INS SimpleName@@expectedDirName @TO@ SimpleName@@MethodName:equals:["camel"] @AT@ 2377 @LENGTH@ 15
------------------------------INS SimpleName@@Name:pathname @TO@ MethodInvocation@@pathname.getName().equals(expectedDirName) @AT@ 2351 @LENGTH@ 8
------------INS IfStatement@@if (names != null && names.length == 1) {  break;} @TO@ Block@@WhileBody:{  File[] names=root.listFiles(pathname -> pathname.getName().equals(expectedDirName));  if (names != null && names.length == 1) {    break;  }  root=root.getParentFile();} @AT@ 2412 @LENGTH@ 86
---------------INS InfixExpression@@names != null && names.length == 1 @TO@ IfStatement@@if (names != null && names.length == 1) {  break;} @AT@ 2416 @LENGTH@ 34
------------------INS InfixExpression@@names != null @TO@ InfixExpression@@names != null && names.length == 1 @AT@ 2416 @LENGTH@ 13
---------------------INS SimpleName@@names @TO@ InfixExpression@@names != null @AT@ 2416 @LENGTH@ 5
---------------------INS Operator@@!= @TO@ InfixExpression@@names != null @AT@ 2421 @LENGTH@ 2
---------------------INS NullLiteral@@null @TO@ InfixExpression@@names != null @AT@ 2425 @LENGTH@ 4
------------------INS Operator@@&& @TO@ InfixExpression@@names != null && names.length == 1 @AT@ 2429 @LENGTH@ 2
------------------INS InfixExpression@@names.length == 1 @TO@ InfixExpression@@names != null && names.length == 1 @AT@ 2433 @LENGTH@ 17
---------------------INS QualifiedName@@names.length @TO@ InfixExpression@@names.length == 1 @AT@ 2433 @LENGTH@ 12
------------------------INS SimpleName@@names @TO@ QualifiedName@@names.length @AT@ 2433 @LENGTH@ 5
------------------------INS SimpleName@@length @TO@ QualifiedName@@names.length @AT@ 2439 @LENGTH@ 6
---------------------INS Operator@@== @TO@ InfixExpression@@names.length == 1 @AT@ 2445 @LENGTH@ 2
---------------------INS NumberLiteral@@1 @TO@ InfixExpression@@names.length == 1 @AT@ 2449 @LENGTH@ 1
---------------INS Block@@ThenBody:{  break;} @TO@ IfStatement@@if (names != null && names.length == 1) {  break;} @AT@ 2452 @LENGTH@ 46
------------------INS BreakStatement@@ @TO@ Block@@ThenBody:{  break;} @AT@ 2474 @LENGTH@ 6
------UPD IfStatement@@if (root == null) {  throw new IllegalStateException("Cannot find project root");} @TO@ if (root == null) {  throw new IllegalStateException("Cannot find Apache Camel project root directory");} @AT@ 2131 @LENGTH@ 110
---------UPD Block@@ThenBody:{  throw new IllegalStateException("Cannot find project root");} @TO@ ThenBody:{  throw new IllegalStateException("Cannot find Apache Camel project root directory");} @AT@ 2149 @LENGTH@ 92
------------UPD ThrowStatement@@ClassInstanceCreation:new IllegalStateException("Cannot find project root") @TO@ ClassInstanceCreation:new IllegalStateException("Cannot find Apache Camel project root directory") @AT@ 2167 @LENGTH@ 60
---------------UPD ClassInstanceCreation@@IllegalStateException["Cannot find project root"] @TO@ IllegalStateException["Cannot find Apache Camel project root directory"] @AT@ 2173 @LENGTH@ 53
------------------UPD StringLiteral@@"Cannot find project root" @TO@ "Cannot find Apache Camel project root directory" @AT@ 2199 @LENGTH@ 26
---INS SingleVariableDeclaration@@String expectedDirName @TO@ MethodDeclaration@@public, static, File, MethodName:camelProjectRoot, File baseDir,  @AT@ 1943 @LENGTH@ 22
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String expectedDirName @AT@ 1943 @LENGTH@ 6
------INS SimpleName@@expectedDirName @TO@ SingleVariableDeclaration@@String expectedDirName @AT@ 1950 @LENGTH@ 15


DEL ThrowStatement@@ClassInstanceCreation:new MetaException("This can't happen because checkRetryable() has a retry limit") @AT@ 138420 @LENGTH@ 88
---DEL ClassInstanceCreation@@MetaException["This can't happen because checkRetryable() has a retry limit"] @AT@ 138426 @LENGTH@ 81
------DEL New@@new @AT@ 138426 @LENGTH@ 3
------DEL SimpleType@@MetaException @AT@ 138430 @LENGTH@ 13
------DEL StringLiteral@@"This can't happen because checkRetryable() has a retry limit" @AT@ 138444 @LENGTH@ 62


UPD ExpressionStatement@@MethodInvocation:result.setDefaultProtocol("SSL-HTTP/1.1") @TO@ MethodInvocation:result.setDefaultProtocol(scf.getProtocol()) @AT@ 5047 @LENGTH@ 42
---UPD MethodInvocation@@result.setDefaultProtocol("SSL-HTTP/1.1") @TO@ result.setDefaultProtocol(scf.getProtocol()) @AT@ 5047 @LENGTH@ 41
------UPD SimpleName@@MethodName:setDefaultProtocol:["SSL-HTTP/1.1"] @TO@ MethodName:setDefaultProtocol:[scf.getProtocol()] @AT@ 5054 @LENGTH@ 34
---------DEL StringLiteral@@"SSL-HTTP/1.1" @AT@ 5073 @LENGTH@ 14
---------INS MethodInvocation@@scf.getProtocol() @TO@ SimpleName@@MethodName:setDefaultProtocol:["SSL-HTTP/1.1"] @AT@ 5175 @LENGTH@ 17
------------INS SimpleName@@Name:scf @TO@ MethodInvocation@@scf.getProtocol() @AT@ 5175 @LENGTH@ 3
------------INS SimpleName@@MethodName:getProtocol:[] @TO@ MethodInvocation@@scf.getProtocol() @AT@ 5179 @LENGTH@ 13


UPD TypeDeclaration@@[@Configuration, @ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration"), @EnableConfigurationProperties(GzipDataFormatConfiguration.class), public]GzipDataFormatAutoConfiguration,  @TO@ [@Configuration, @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration"), @EnableConfigurationProperties(GzipDataFormatConfiguration.class), public]GzipDataFormatAutoConfiguration,  @AT@ 1643 @LENGTH@ 1095
---UPD NormalAnnotation@@@ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1658 @LENGTH@ 79
---UPD NormalAnnotation@@@AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1738 @LENGTH@ 80


UPD MethodDeclaration@@protected, void, MethodName:executeListener, Channel channel, Message messageIn, Throwable,  @TO@ protected, void, MethodName:executeListener, Channel channel, Message messageIn, Exception,  @AT@ 28795 @LENGTH@ 1728
---UPD SimpleType@@Throwable @TO@ Exception @AT@ 28869 @LENGTH@ 9


DEL FieldDeclaration@@private, Session, [session] @AT@ 2131 @LENGTH@ 24
---DEL Modifier@@private @AT@ 2131 @LENGTH@ 7
---DEL SimpleType@@Session @AT@ 2139 @LENGTH@ 7
---DEL VariableDeclarationFragment@@session @AT@ 2147 @LENGTH@ 7
------DEL SimpleName@@session @AT@ 2147 @LENGTH@ 7


UPD TypeDeclaration@@[@Configuration, @ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration"), @EnableConfigurationProperties(TidyMarkupDataFormatConfiguration.class), public]TidyMarkupDataFormatAutoConfiguration,  @TO@ [@Configuration, @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration"), @EnableConfigurationProperties(TidyMarkupDataFormatConfiguration.class), public]TidyMarkupDataFormatAutoConfiguration,  @AT@ 1677 @LENGTH@ 1162
---UPD NormalAnnotation@@@ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1692 @LENGTH@ 79
---UPD NormalAnnotation@@@AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1772 @LENGTH@ 80


UPD IfStatement@@if (JNDI_OBJECT_FACTORY_BEAN.equals(definition.getBeanClassName())) {  if (!EntityManagerFactory.class.getName().equals(definition.getPropertyValues().get("expectedType"))) {    return;  }} @TO@ if (JNDI_OBJECT_FACTORY_BEAN.equals(definition.getBeanClassName())) {  if (!EntityManagerFactory.class.getName().equals(definition.getPropertyValues().get("expectedType"))) {    return;  }} else if (!EntityManagerFactory.class.equals(beanFactory.getType(name))) {  return;} @AT@ 4737 @LENGTH@ 197
---INS Block@@ElseBody:if (!EntityManagerFactory.class.equals(beanFactory.getType(name))) {  return;} @TO@ IfStatement@@if (JNDI_OBJECT_FACTORY_BEAN.equals(definition.getBeanClassName())) {  if (!EntityManagerFactory.class.getName().equals(definition.getPropertyValues().get("expectedType"))) {    return;  }} @AT@ 4940 @LENGTH@ 83
------INS IfStatement@@if (!EntityManagerFactory.class.equals(beanFactory.getType(name))) {  return;} @TO@ Block@@ElseBody:if (!EntityManagerFactory.class.equals(beanFactory.getType(name))) {  return;} @AT@ 4940 @LENGTH@ 83
---------INS PrefixExpression@@!EntityManagerFactory.class.equals(beanFactory.getType(name)) @TO@ IfStatement@@if (!EntityManagerFactory.class.equals(beanFactory.getType(name))) {  return;} @AT@ 4944 @LENGTH@ 61
------------INS Operator@@! @TO@ PrefixExpression@@!EntityManagerFactory.class.equals(beanFactory.getType(name)) @AT@ 4944 @LENGTH@ 1
------------INS MethodInvocation@@EntityManagerFactory.class.equals(beanFactory.getType(name)) @TO@ PrefixExpression@@!EntityManagerFactory.class.equals(beanFactory.getType(name)) @AT@ 4945 @LENGTH@ 60
---------------INS TypeLiteral@@EntityManagerFactory.class @TO@ MethodInvocation@@EntityManagerFactory.class.equals(beanFactory.getType(name)) @AT@ 4945 @LENGTH@ 26
---------------INS SimpleName@@MethodName:equals:[beanFactory.getType(name)] @TO@ MethodInvocation@@EntityManagerFactory.class.equals(beanFactory.getType(name)) @AT@ 4972 @LENGTH@ 33
------------------INS MethodInvocation@@beanFactory.getType(name) @TO@ SimpleName@@MethodName:equals:[beanFactory.getType(name)] @AT@ 4979 @LENGTH@ 25
---------------------INS SimpleName@@Name:beanFactory @TO@ MethodInvocation@@beanFactory.getType(name) @AT@ 4979 @LENGTH@ 11
---------------------INS SimpleName@@MethodName:getType:[name] @TO@ MethodInvocation@@beanFactory.getType(name) @AT@ 4991 @LENGTH@ 13
------------------------INS SimpleName@@name @TO@ SimpleName@@MethodName:getType:[name] @AT@ 4999 @LENGTH@ 4
---------INS Block@@ThenBody:{  return;} @TO@ IfStatement@@if (!EntityManagerFactory.class.equals(beanFactory.getType(name))) {  return;} @AT@ 5007 @LENGTH@ 16
------------INS ReturnStatement@@ @TO@ Block@@ThenBody:{  return;} @AT@ 5012 @LENGTH@ 7


UPD ExpressionStatement@@MethodInvocation:when(mockConnectionFactory.newConnection((ExecutorService)null)).thenReturn(mockConnection1).thenReturn(mockConnection2).thenReturn(null) @TO@ MethodInvocation:when(mockConnectionFactory.newConnection(any(ExecutorService.class),anyString())).thenReturn(mockConnection1).thenReturn(mockConnection2).thenReturn(null) @AT@ 17869 @LENGTH@ 151
---UPD MethodInvocation@@when(mockConnectionFactory.newConnection((ExecutorService)null)).thenReturn(mockConnection1).thenReturn(mockConnection2).thenReturn(null) @TO@ when(mockConnectionFactory.newConnection(any(ExecutorService.class),anyString())).thenReturn(mockConnection1).thenReturn(mockConnection2).thenReturn(null) @AT@ 17869 @LENGTH@ 150
------UPD MethodInvocation@@MethodName:when:[mockConnectionFactory.newConnection((ExecutorService)null)] @TO@ MethodName:when:[mockConnectionFactory.newConnection(any(ExecutorService.class),anyString())] @AT@ 17869 @LENGTH@ 65
---------UPD MethodInvocation@@mockConnectionFactory.newConnection((ExecutorService)null) @TO@ mockConnectionFactory.newConnection(any(ExecutorService.class),anyString()) @AT@ 17874 @LENGTH@ 59
------------UPD SimpleName@@MethodName:newConnection:[(ExecutorService)null] @TO@ MethodName:newConnection:[any(ExecutorService.class), anyString()] @AT@ 17896 @LENGTH@ 37
---------------INS MethodInvocation@@any(ExecutorService.class) @TO@ SimpleName@@MethodName:newConnection:[(ExecutorService)null] @AT@ 17910 @LENGTH@ 26
------------------INS SimpleName@@MethodName:any:[ExecutorService.class] @TO@ MethodInvocation@@any(ExecutorService.class) @AT@ 17910 @LENGTH@ 26
---------------------INS TypeLiteral@@ExecutorService.class @TO@ SimpleName@@MethodName:any:[ExecutorService.class] @AT@ 17914 @LENGTH@ 21
---------------DEL CastExpression@@(ExecutorService)null @AT@ 17910 @LENGTH@ 22
------------------DEL SimpleType@@ExecutorService @AT@ 17911 @LENGTH@ 15
------------------DEL NullLiteral@@null @AT@ 17928 @LENGTH@ 4
---------------INS MethodInvocation@@MethodName:anyString:[] @TO@ SimpleName@@MethodName:newConnection:[(ExecutorService)null] @AT@ 17938 @LENGTH@ 11


UPD MethodDeclaration@@public, String, MethodName:getSaslServerAuthentication,  @TO@ public, String, MethodName:getSaslAuthenticationFactory,  @AT@ 2984 @LENGTH@ 108
---UPD SimpleName@@MethodName:getSaslServerAuthentication @TO@ MethodName:getSaslAuthenticationFactory @AT@ 2998 @LENGTH@ 27
---UPD ReturnStatement@@SimpleName:saslServerAuthentication @TO@ SimpleName:saslAuthenticationFactory @AT@ 3046 @LENGTH@ 32
------UPD SimpleName@@saslServerAuthentication @TO@ saslAuthenticationFactory @AT@ 3053 @LENGTH@ 24


INS MethodDeclaration@@private, static, boolean, MethodName:isSolaris,  @TO@ TypeDeclaration@@[public, abstract]AbstractSyslogReconnectionTestCase, AbstractLoggingTestCase @AT@ 8437 @LENGTH@ 320
---INS Modifier@@private @TO@ MethodDeclaration@@private, static, boolean, MethodName:isSolaris,  @AT@ 8437 @LENGTH@ 7
---INS Modifier@@static @TO@ MethodDeclaration@@private, static, boolean, MethodName:isSolaris,  @AT@ 8445 @LENGTH@ 6
---INS PrimitiveType@@boolean @TO@ MethodDeclaration@@private, static, boolean, MethodName:isSolaris,  @AT@ 8452 @LENGTH@ 7
---INS SimpleName@@MethodName:isSolaris @TO@ MethodDeclaration@@private, static, boolean, MethodName:isSolaris,  @AT@ 8460 @LENGTH@ 9
---INS VariableDeclarationStatement@@String osName=System.getProperty("os.name"); @TO@ MethodDeclaration@@private, static, boolean, MethodName:isSolaris,  @AT@ 8482 @LENGTH@ 46
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String osName=System.getProperty("os.name"); @AT@ 8482 @LENGTH@ 6
------INS VariableDeclarationFragment@@osName=System.getProperty("os.name") @TO@ VariableDeclarationStatement@@String osName=System.getProperty("os.name"); @AT@ 8489 @LENGTH@ 38
---------INS SimpleName@@osName @TO@ VariableDeclarationFragment@@osName=System.getProperty("os.name") @AT@ 8489 @LENGTH@ 6
---------INS MethodInvocation@@System.getProperty("os.name") @TO@ VariableDeclarationFragment@@osName=System.getProperty("os.name") @AT@ 8498 @LENGTH@ 29
------------INS SimpleName@@Name:System @TO@ MethodInvocation@@System.getProperty("os.name") @AT@ 8498 @LENGTH@ 6
------------INS SimpleName@@MethodName:getProperty:["os.name"] @TO@ MethodInvocation@@System.getProperty("os.name") @AT@ 8505 @LENGTH@ 22
---------------INS StringLiteral@@"os.name" @TO@ SimpleName@@MethodName:getProperty:["os.name"] @AT@ 8517 @LENGTH@ 9
---INS IfStatement@@if (osName == null) {  Assert.fail("Can't get the operating system name");} @TO@ MethodDeclaration@@private, static, boolean, MethodName:isSolaris,  @AT@ 8537 @LENGTH@ 95
------INS InfixExpression@@osName == null @TO@ IfStatement@@if (osName == null) {  Assert.fail("Can't get the operating system name");} @AT@ 8541 @LENGTH@ 14
---------INS SimpleName@@osName @TO@ InfixExpression@@osName == null @AT@ 8541 @LENGTH@ 6
---------INS Operator@@== @TO@ InfixExpression@@osName == null @AT@ 8547 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@osName == null @AT@ 8551 @LENGTH@ 4
------INS Block@@ThenBody:{  Assert.fail("Can't get the operating system name");} @TO@ IfStatement@@if (osName == null) {  Assert.fail("Can't get the operating system name");} @AT@ 8557 @LENGTH@ 75
---------INS ExpressionStatement@@MethodInvocation:Assert.fail("Can't get the operating system name") @TO@ Block@@ThenBody:{  Assert.fail("Can't get the operating system name");} @AT@ 8571 @LENGTH@ 51
------------INS MethodInvocation@@Assert.fail("Can't get the operating system name") @TO@ ExpressionStatement@@MethodInvocation:Assert.fail("Can't get the operating system name") @AT@ 8571 @LENGTH@ 50
---------------INS SimpleName@@Name:Assert @TO@ MethodInvocation@@Assert.fail("Can't get the operating system name") @AT@ 8571 @LENGTH@ 6
---------------INS SimpleName@@MethodName:fail:["Can't get the operating system name"] @TO@ MethodInvocation@@Assert.fail("Can't get the operating system name") @AT@ 8578 @LENGTH@ 43
------------------INS StringLiteral@@"Can't get the operating system name" @TO@ SimpleName@@MethodName:fail:["Can't get the operating system name"] @AT@ 8583 @LENGTH@ 37
---INS ReturnStatement@@InfixExpression:(osName.indexOf("Solaris") > -1) || (osName.indexOf("solaris") > -1) || (osName.indexOf("SunOS") > -1) @TO@ MethodDeclaration@@private, static, boolean, MethodName:isSolaris,  @AT@ 8641 @LENGTH@ 110
------INS InfixExpression@@(osName.indexOf("Solaris") > -1) || (osName.indexOf("solaris") > -1) || (osName.indexOf("SunOS") > -1) @TO@ ReturnStatement@@InfixExpression:(osName.indexOf("Solaris") > -1) || (osName.indexOf("solaris") > -1) || (osName.indexOf("SunOS") > -1) @AT@ 8648 @LENGTH@ 102
---------INS ParenthesizedExpression@@(osName.indexOf("Solaris") > -1) @TO@ InfixExpression@@(osName.indexOf("Solaris") > -1) || (osName.indexOf("solaris") > -1) || (osName.indexOf("SunOS") > -1) @AT@ 8648 @LENGTH@ 32
------------INS InfixExpression@@osName.indexOf("Solaris") > -1 @TO@ ParenthesizedExpression@@(osName.indexOf("Solaris") > -1) @AT@ 8649 @LENGTH@ 30
---------------INS MethodInvocation@@osName.indexOf("Solaris") @TO@ InfixExpression@@osName.indexOf("Solaris") > -1 @AT@ 8649 @LENGTH@ 25
------------------INS SimpleName@@Name:osName @TO@ MethodInvocation@@osName.indexOf("Solaris") @AT@ 8649 @LENGTH@ 6
------------------INS SimpleName@@MethodName:indexOf:["Solaris"] @TO@ MethodInvocation@@osName.indexOf("Solaris") @AT@ 8656 @LENGTH@ 18
---------------------INS StringLiteral@@"Solaris" @TO@ SimpleName@@MethodName:indexOf:["Solaris"] @AT@ 8664 @LENGTH@ 9
---------------INS Operator@@> @TO@ InfixExpression@@osName.indexOf("Solaris") > -1 @AT@ 8674 @LENGTH@ 1
---------------INS PrefixExpression@@-1 @TO@ InfixExpression@@osName.indexOf("Solaris") > -1 @AT@ 8677 @LENGTH@ 2
------------------INS Operator@@- @TO@ PrefixExpression@@-1 @AT@ 8677 @LENGTH@ 1
------------------INS NumberLiteral@@1 @TO@ PrefixExpression@@-1 @AT@ 8678 @LENGTH@ 1
---------INS Operator@@|| @TO@ InfixExpression@@(osName.indexOf("Solaris") > -1) || (osName.indexOf("solaris") > -1) || (osName.indexOf("SunOS") > -1) @AT@ 8680 @LENGTH@ 2
---------INS ParenthesizedExpression@@(osName.indexOf("solaris") > -1) @TO@ InfixExpression@@(osName.indexOf("Solaris") > -1) || (osName.indexOf("solaris") > -1) || (osName.indexOf("SunOS") > -1) @AT@ 8684 @LENGTH@ 32
------------INS InfixExpression@@osName.indexOf("solaris") > -1 @TO@ ParenthesizedExpression@@(osName.indexOf("solaris") > -1) @AT@ 8685 @LENGTH@ 30
---------------INS MethodInvocation@@osName.indexOf("solaris") @TO@ InfixExpression@@osName.indexOf("solaris") > -1 @AT@ 8685 @LENGTH@ 25
------------------INS SimpleName@@Name:osName @TO@ MethodInvocation@@osName.indexOf("solaris") @AT@ 8685 @LENGTH@ 6
------------------INS SimpleName@@MethodName:indexOf:["solaris"] @TO@ MethodInvocation@@osName.indexOf("solaris") @AT@ 8692 @LENGTH@ 18
---------------------INS StringLiteral@@"solaris" @TO@ SimpleName@@MethodName:indexOf:["solaris"] @AT@ 8700 @LENGTH@ 9
---------------INS Operator@@> @TO@ InfixExpression@@osName.indexOf("solaris") > -1 @AT@ 8710 @LENGTH@ 1
---------------INS PrefixExpression@@-1 @TO@ InfixExpression@@osName.indexOf("solaris") > -1 @AT@ 8713 @LENGTH@ 2
------------------INS Operator@@- @TO@ PrefixExpression@@-1 @AT@ 8713 @LENGTH@ 1
------------------INS NumberLiteral@@1 @TO@ PrefixExpression@@-1 @AT@ 8714 @LENGTH@ 1
---------INS ParenthesizedExpression@@(osName.indexOf("SunOS") > -1) @TO@ InfixExpression@@(osName.indexOf("Solaris") > -1) || (osName.indexOf("solaris") > -1) || (osName.indexOf("SunOS") > -1) @AT@ 8720 @LENGTH@ 30
------------INS InfixExpression@@osName.indexOf("SunOS") > -1 @TO@ ParenthesizedExpression@@(osName.indexOf("SunOS") > -1) @AT@ 8721 @LENGTH@ 28
---------------INS MethodInvocation@@osName.indexOf("SunOS") @TO@ InfixExpression@@osName.indexOf("SunOS") > -1 @AT@ 8721 @LENGTH@ 23
------------------INS SimpleName@@Name:osName @TO@ MethodInvocation@@osName.indexOf("SunOS") @AT@ 8721 @LENGTH@ 6
------------------INS SimpleName@@MethodName:indexOf:["SunOS"] @TO@ MethodInvocation@@osName.indexOf("SunOS") @AT@ 8728 @LENGTH@ 16
---------------------INS StringLiteral@@"SunOS" @TO@ SimpleName@@MethodName:indexOf:["SunOS"] @AT@ 8736 @LENGTH@ 7
---------------INS Operator@@> @TO@ InfixExpression@@osName.indexOf("SunOS") > -1 @AT@ 8744 @LENGTH@ 1
---------------INS PrefixExpression@@-1 @TO@ InfixExpression@@osName.indexOf("SunOS") > -1 @AT@ 8747 @LENGTH@ 2
------------------INS Operator@@- @TO@ PrefixExpression@@-1 @AT@ 8747 @LENGTH@ 1
------------------INS NumberLiteral@@1 @TO@ PrefixExpression@@-1 @AT@ 8748 @LENGTH@ 1


MOV FieldDeclaration@@private, static, final, String, [ROUTE_COVERAGE_LOG_ENTRY="Route coverage ({} out of {} routes used)"] @TO@ TypeDeclaration@@[public, abstract]CamelTestSupport, TestSupport @AT@ 4507 @LENGTH@ 99


UPD VariableDeclarationStatement@@final String query=makePageable(cypherQuery,queryParams,pageable.getPageNumber(),pageable.getPageSize()); @TO@ final String query=addPaging(cypherQuery,queryParams,pageable.getPageNumber(),pageable.getPageSize()); @AT@ 3682 @LENGTH@ 110
---UPD VariableDeclarationFragment@@query=makePageable(cypherQuery,queryParams,pageable.getPageNumber(),pageable.getPageSize()) @TO@ query=addPaging(cypherQuery,queryParams,pageable.getPageNumber(),pageable.getPageSize()) @AT@ 3695 @LENGTH@ 96
------UPD MethodInvocation@@makePageable(cypherQuery,queryParams,pageable.getPageNumber(),pageable.getPageSize()) @TO@ addPaging(cypherQuery,queryParams,pageable.getPageNumber(),pageable.getPageSize()) @AT@ 3703 @LENGTH@ 88
---------UPD SimpleName@@MethodName:makePageable:[cypherQuery, queryParams, pageable.getPageNumber(), pageable.getPageSize()] @TO@ MethodName:addPaging:[cypherQuery, queryParams, pageable.getPageNumber(), pageable.getPageSize()] @AT@ 3703 @LENGTH@ 88


UPD FieldDeclaration@@private, static, GraphDatabaseService, [graphDatabaseService=getGraphDatabaseService()] @TO@ private, static, GraphDatabaseService, [graphDatabaseService] @AT@ 2174 @LENGTH@ 85
---UPD VariableDeclarationFragment@@graphDatabaseService=getGraphDatabaseService() @TO@ graphDatabaseService @AT@ 2210 @LENGTH@ 48
------DEL MethodInvocation@@MethodName:getGraphDatabaseService:[] @AT@ 2233 @LENGTH@ 25


UPD EnhancedForStatement@@for (MethodMetadata finderMethod : this.finders) {  JavaType formBean=finderMethod.getParameterTypes().get(0).getJavaType();  if (getTypeLocationService().getTypeDetails(formBean) == null) {    formBean=this.entity;  }  ctx.addExtraParameter("formBean","formBean");  MemberDetails formBeanDetails=getMemberDetailsScanner().getMemberDetails(this.getClass().getName(),getTypeLocationService().getTypeDetails(formBean));  Map<JavaType,Map<String,String>> typesFieldMaps=new HashMap<JavaType,Map<String,String>>();  Map<JavaType,Map<String,FieldMetadata>> typeFieldMetadataMap=new HashMap<JavaType,Map<String,FieldMetadata>>();  Map<JavaSymbolName,List<FinderParameter>> finderParametersMap=new HashMap<JavaSymbolName,List<FinderParameter>>();  getFinderOperations().buildFormBeanFieldNamesMap(this.entity,formBean,typesFieldMaps,typeFieldMetadataMap,finderMethod.getMethodName(),finderParametersMap);  List<FinderParameter> finderParameters=finderParametersMap.get(finderMethod.getMethodName());  Map<String,FieldMetadata> formBeanFields=typeFieldMetadataMap.get(formBean);  List<FieldMetadata> fieldsToAdd=new ArrayList<FieldMetadata>();  for (  FinderParameter finderParam : finderParameters) {    fieldsToAdd.add(formBeanFields.get(finderParam.getName().getSymbolName()));  }  viewGenerationService.addFinderFormView(this.controller.getType().getModule(),formBeanDetails,finderMethod.getMethodName().getSymbolName(),fieldsToAdd,ctx);  viewGenerationService.addFinderListView(this.controller.getType().getModule(),entityDetails,finderMethod.getMethodName().getSymbolName(),ctx);} @TO@ for (MethodMetadata finderMethod : this.finders) {  JavaType formBean=finderMethod.getParameterTypes().get(0).getJavaType();  List<FieldMetadata> fieldsToAdd=new ArrayList<FieldMetadata>();  if (getTypeLocationService().getTypeDetails(formBean) != null && getTypeLocationService().getTypeDetails(formBean).getAnnotation(RooJavaType.ROO_DTO) == null) {    formBean=this.entity;  }  ctx.addExtraParameter("formBean","formBean");  Map<JavaType,Map<String,String>> typesFieldMaps=new HashMap<JavaType,Map<String,String>>();  Map<JavaType,Map<String,FieldMetadata>> typeFieldMetadataMap=new HashMap<JavaType,Map<String,FieldMetadata>>();  Map<JavaSymbolName,List<FinderParameter>> finderParametersMap=new HashMap<JavaSymbolName,List<FinderParameter>>();  getFinderOperations().buildFormBeanFieldNamesMap(this.entity,formBean,typesFieldMaps,typeFieldMetadataMap,finderMethod.getMethodName(),finderParametersMap);  List<FinderParameter> finderParameters=finderParametersMap.get(finderMethod.getMethodName());  Map<String,FieldMetadata> formBeanFields=typeFieldMetadataMap.get(formBean);  for (  FinderParameter finderParam : finderParameters) {    fieldsToAdd.add(formBeanFields.get(finderParam.getName().getSymbolName()));  }  viewGenerationService.addFinderFormView(this.controller.getType().getModule(),entityDetails,finderMethod.getMethodName().getSymbolName(),fieldsToAdd,ctx);  viewGenerationService.addFinderListView(this.controller.getType().getModule(),entityDetails,finderMethod.getMethodName().getSymbolName(),ctx);} @AT@ 11071 @LENGTH@ 2314
---UPD IfStatement@@if (getTypeLocationService().getTypeDetails(formBean) == null) {  formBean=this.entity;} @TO@ if (getTypeLocationService().getTypeDetails(formBean) != null && getTypeLocationService().getTypeDetails(formBean).getAnnotation(RooJavaType.ROO_DTO) == null) {  formBean=this.entity;} @AT@ 11381 @LENGTH@ 157
------UPD InfixExpression@@getTypeLocationService().getTypeDetails(formBean) == null @TO@ getTypeLocationService().getTypeDetails(formBean) != null @AT@ 11385 @LENGTH@ 57
------INS InfixExpression@@getTypeLocationService().getTypeDetails(formBean) != null && getTypeLocationService().getTypeDetails(formBean).getAnnotation(RooJavaType.ROO_DTO) == null @TO@ IfStatement@@if (getTypeLocationService().getTypeDetails(formBean) == null) {  formBean=this.entity;} @AT@ 11469 @LENGTH@ 165
---------MOV InfixExpression@@getTypeLocationService().getTypeDetails(formBean) == null @TO@ InfixExpression@@getTypeLocationService().getTypeDetails(formBean) != null && getTypeLocationService().getTypeDetails(formBean).getAnnotation(RooJavaType.ROO_DTO) == null @AT@ 11385 @LENGTH@ 57
------------UPD Operator@@== @TO@ != @AT@ 11434 @LENGTH@ 2
---------INS Operator@@&& @TO@ InfixExpression@@getTypeLocationService().getTypeDetails(formBean) != null && getTypeLocationService().getTypeDetails(formBean).getAnnotation(RooJavaType.ROO_DTO) == null @AT@ 11526 @LENGTH@ 2
---------INS InfixExpression@@getTypeLocationService().getTypeDetails(formBean).getAnnotation(RooJavaType.ROO_DTO) == null @TO@ InfixExpression@@getTypeLocationService().getTypeDetails(formBean) != null && getTypeLocationService().getTypeDetails(formBean).getAnnotation(RooJavaType.ROO_DTO) == null @AT@ 11542 @LENGTH@ 92
------------INS MethodInvocation@@getTypeLocationService().getTypeDetails(formBean).getAnnotation(RooJavaType.ROO_DTO) @TO@ InfixExpression@@getTypeLocationService().getTypeDetails(formBean).getAnnotation(RooJavaType.ROO_DTO) == null @AT@ 11542 @LENGTH@ 84
---------------INS MethodInvocation@@MethodName:getTypeDetails:[formBean] @TO@ MethodInvocation@@getTypeLocationService().getTypeDetails(formBean).getAnnotation(RooJavaType.ROO_DTO) @AT@ 11542 @LENGTH@ 49
------------------INS SimpleName@@formBean @TO@ MethodInvocation@@MethodName:getTypeDetails:[formBean] @AT@ 11582 @LENGTH@ 8
---------------INS MethodInvocation@@MethodName:getTypeLocationService:[] @TO@ MethodInvocation@@getTypeLocationService().getTypeDetails(formBean).getAnnotation(RooJavaType.ROO_DTO) @AT@ 11542 @LENGTH@ 24
---------------INS SimpleName@@MethodName:getAnnotation:[RooJavaType.ROO_DTO] @TO@ MethodInvocation@@getTypeLocationService().getTypeDetails(formBean).getAnnotation(RooJavaType.ROO_DTO) @AT@ 11592 @LENGTH@ 34
------------------INS QualifiedName@@RooJavaType.ROO_DTO @TO@ SimpleName@@MethodName:getAnnotation:[RooJavaType.ROO_DTO] @AT@ 11606 @LENGTH@ 19
---------------------INS SimpleName@@RooJavaType @TO@ QualifiedName@@RooJavaType.ROO_DTO @AT@ 11606 @LENGTH@ 11
---------------------INS SimpleName@@ROO_DTO @TO@ QualifiedName@@RooJavaType.ROO_DTO @AT@ 11618 @LENGTH@ 7
------------INS Operator@@== @TO@ InfixExpression@@getTypeLocationService().getTypeDetails(formBean).getAnnotation(RooJavaType.ROO_DTO) == null @AT@ 11626 @LENGTH@ 2
------------INS NullLiteral@@null @TO@ InfixExpression@@getTypeLocationService().getTypeDetails(formBean).getAnnotation(RooJavaType.ROO_DTO) == null @AT@ 11630 @LENGTH@ 4
---DEL VariableDeclarationStatement@@MemberDetails formBeanDetails=getMemberDetailsScanner().getMemberDetails(this.getClass().getName(),getTypeLocationService().getTypeDetails(formBean)); @AT@ 11675 @LENGTH@ 181
------DEL SimpleType@@MemberDetails @AT@ 11675 @LENGTH@ 13
------DEL VariableDeclarationFragment@@formBeanDetails=getMemberDetailsScanner().getMemberDetails(this.getClass().getName(),getTypeLocationService().getTypeDetails(formBean)) @AT@ 11689 @LENGTH@ 166
---------DEL SimpleName@@formBeanDetails @AT@ 11689 @LENGTH@ 15
---------DEL MethodInvocation@@getMemberDetailsScanner().getMemberDetails(this.getClass().getName(),getTypeLocationService().getTypeDetails(formBean)) @AT@ 11719 @LENGTH@ 136
------------DEL MethodInvocation@@MethodName:getMemberDetailsScanner:[] @AT@ 11719 @LENGTH@ 25
------------DEL SimpleName@@MethodName:getMemberDetails:[this.getClass().getName(), getTypeLocationService().getTypeDetails(formBean)] @AT@ 11745 @LENGTH@ 110
---------------DEL MethodInvocation@@this.getClass().getName() @AT@ 11762 @LENGTH@ 25
------------------DEL MethodInvocation@@MethodName:getClass:[] @AT@ 11762 @LENGTH@ 15
------------------DEL ThisExpression@@this @AT@ 11762 @LENGTH@ 4
------------------DEL SimpleName@@MethodName:getName:[] @AT@ 11778 @LENGTH@ 9
---------------DEL MethodInvocation@@getTypeLocationService().getTypeDetails(formBean) @AT@ 11805 @LENGTH@ 49
------------------DEL MethodInvocation@@MethodName:getTypeLocationService:[] @AT@ 11805 @LENGTH@ 24
------------------DEL SimpleName@@MethodName:getTypeDetails:[formBean] @AT@ 11830 @LENGTH@ 24
---------------------DEL SimpleName@@formBean @AT@ 11845 @LENGTH@ 8
---MOV VariableDeclarationStatement@@List<FieldMetadata> fieldsToAdd=new ArrayList<FieldMetadata>(); @TO@ EnhancedForStatement@@for (MethodMetadata finderMethod : this.finders) {  JavaType formBean=finderMethod.getParameterTypes().get(0).getJavaType();  if (getTypeLocationService().getTypeDetails(formBean) == null) {    formBean=this.entity;  }  ctx.addExtraParameter("formBean","formBean");  MemberDetails formBeanDetails=getMemberDetailsScanner().getMemberDetails(this.getClass().getName(),getTypeLocationService().getTypeDetails(formBean));  Map<JavaType,Map<String,String>> typesFieldMaps=new HashMap<JavaType,Map<String,String>>();  Map<JavaType,Map<String,FieldMetadata>> typeFieldMetadataMap=new HashMap<JavaType,Map<String,FieldMetadata>>();  Map<JavaSymbolName,List<FinderParameter>> finderParametersMap=new HashMap<JavaSymbolName,List<FinderParameter>>();  getFinderOperations().buildFormBeanFieldNamesMap(this.entity,formBean,typesFieldMaps,typeFieldMetadataMap,finderMethod.getMethodName(),finderParametersMap);  List<FinderParameter> finderParameters=finderParametersMap.get(finderMethod.getMethodName());  Map<String,FieldMetadata> formBeanFields=typeFieldMetadataMap.get(formBean);  List<FieldMetadata> fieldsToAdd=new ArrayList<FieldMetadata>();  for (  FinderParameter finderParam : finderParameters) {    fieldsToAdd.add(formBeanFields.get(finderParam.getName().getSymbolName()));  }  viewGenerationService.addFinderFormView(this.controller.getType().getModule(),formBeanDetails,finderMethod.getMethodName().getSymbolName(),fieldsToAdd,ctx);  viewGenerationService.addFinderListView(this.controller.getType().getModule(),entityDetails,finderMethod.getMethodName().getSymbolName(),ctx);} @AT@ 12805 @LENGTH@ 65
---UPD ExpressionStatement@@MethodInvocation:viewGenerationService.addFinderFormView(this.controller.getType().getModule(),formBeanDetails,finderMethod.getMethodName().getSymbolName(),fieldsToAdd,ctx) @TO@ MethodInvocation:viewGenerationService.addFinderFormView(this.controller.getType().getModule(),entityDetails,finderMethod.getMethodName().getSymbolName(),fieldsToAdd,ctx) @AT@ 13039 @LENGTH@ 172
------UPD MethodInvocation@@viewGenerationService.addFinderFormView(this.controller.getType().getModule(),formBeanDetails,finderMethod.getMethodName().getSymbolName(),fieldsToAdd,ctx) @TO@ viewGenerationService.addFinderFormView(this.controller.getType().getModule(),entityDetails,finderMethod.getMethodName().getSymbolName(),fieldsToAdd,ctx) @AT@ 13039 @LENGTH@ 171
---------UPD SimpleName@@MethodName:addFinderFormView:[this.controller.getType().getModule(), formBeanDetails, finderMethod.getMethodName().getSymbolName(), fieldsToAdd, ctx] @TO@ MethodName:addFinderFormView:[this.controller.getType().getModule(), entityDetails, finderMethod.getMethodName().getSymbolName(), fieldsToAdd, ctx] @AT@ 13061 @LENGTH@ 149
------------UPD SimpleName@@formBeanDetails @TO@ entityDetails @AT@ 13130 @LENGTH@ 15


UPD TypeDeclaration@@[@Configuration, @ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration"), public]TestComponentAutoConfiguration,  @TO@ [@Configuration, @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration"), public]TestComponentAutoConfiguration,  @AT@ 1438 @LENGTH@ 596
---UPD NormalAnnotation@@@ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1453 @LENGTH@ 79
---UPD NormalAnnotation@@@AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1533 @LENGTH@ 80


UPD TypeDeclaration@@[public]SessionBeanDefinitionRegistrarPostProcessor, [BeanFactoryPostProcessor] @TO@ [public]SessionBeanDefinitionRegistrarPostProcessor, [BeanFactoryPostProcessor, PersistenceExceptionTranslator] @AT@ 1651 @LENGTH@ 1731
---INS SimpleType@@PersistenceExceptionTranslator @TO@ TypeDeclaration@@[public]SessionBeanDefinitionRegistrarPostProcessor, [BeanFactoryPostProcessor] @AT@ 1939 @LENGTH@ 30


UPD TypeDeclaration@@[@Configuration, @ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration"), public]KubernetesComponentAutoConfiguration,  @TO@ [@Configuration, @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration"), public]KubernetesComponentAutoConfiguration,  @AT@ 1456 @LENGTH@ 639
---UPD NormalAnnotation@@@ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1471 @LENGTH@ 79
---UPD NormalAnnotation@@@AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1551 @LENGTH@ 80


UPD IfStatement@@if (finders.contains(serviceFinder.getMethodName().toString())) {  MethodMetadata finderMethod=getFinderMethod(serviceFinder);  findersToAdd.add(finderMethod);  findersToAdd.add(getFinderFormMethod(finderMethod));  findersToAdd.add(getFinderRedirectMethod(finderMethod));  findersToAdd.add(getFinderListMethod(finderMethod));  List<JavaType> types=new ArrayList<JavaType>();  types.add(serviceFinder.getReturnType());  types.addAll(serviceFinder.getReturnType().getParameters());  for (  AnnotatedJavaType parameter : serviceFinder.getParameterTypes()) {    types.add(parameter.getJavaType());    types.addAll(parameter.getJavaType().getParameters());  }  for (  JavaType parameter : types) {    getTypeLocationService().addModuleDependency(governorPhysicalTypeMetadata.getType().getModule(),parameter);  }  finders.remove(serviceFinder.getMethodName().toString());} @TO@ if (finders.contains(serviceFinder.getMethodName().toString())) {  MethodMetadata finderMethod=getFinderMethod(serviceFinder);  findersToAdd.add(getFinderFormMethod(finderMethod));  findersToAdd.add(getFinderRedirectMethod(finderMethod));  findersToAdd.add(getFinderListMethod(finderMethod));  findersToAdd.add(finderMethod);  List<JavaType> types=new ArrayList<JavaType>();  types.add(serviceFinder.getReturnType());  types.addAll(serviceFinder.getReturnType().getParameters());  for (  AnnotatedJavaType parameter : serviceFinder.getParameterTypes()) {    types.add(parameter.getJavaType());    types.addAll(parameter.getJavaType().getParameters());  }  for (  JavaType parameter : types) {    getTypeLocationService().addModuleDependency(governorPhysicalTypeMetadata.getType().getModule(),parameter);  }  finders.remove(serviceFinder.getMethodName().toString());} @AT@ 13185 @LENGTH@ 1133
---UPD Block@@ThenBody:{  MethodMetadata finderMethod=getFinderMethod(serviceFinder);  findersToAdd.add(finderMethod);  findersToAdd.add(getFinderFormMethod(finderMethod));  findersToAdd.add(getFinderRedirectMethod(finderMethod));  findersToAdd.add(getFinderListMethod(finderMethod));  List<JavaType> types=new ArrayList<JavaType>();  types.add(serviceFinder.getReturnType());  types.addAll(serviceFinder.getReturnType().getParameters());  for (  AnnotatedJavaType parameter : serviceFinder.getParameterTypes()) {    types.add(parameter.getJavaType());    types.addAll(parameter.getJavaType().getParameters());  }  for (  JavaType parameter : types) {    getTypeLocationService().addModuleDependency(governorPhysicalTypeMetadata.getType().getModule(),parameter);  }  finders.remove(serviceFinder.getMethodName().toString());} @TO@ ThenBody:{  MethodMetadata finderMethod=getFinderMethod(serviceFinder);  findersToAdd.add(getFinderFormMethod(finderMethod));  findersToAdd.add(getFinderRedirectMethod(finderMethod));  findersToAdd.add(getFinderListMethod(finderMethod));  findersToAdd.add(finderMethod);  List<JavaType> types=new ArrayList<JavaType>();  types.add(serviceFinder.getReturnType());  types.addAll(serviceFinder.getReturnType().getParameters());  for (  AnnotatedJavaType parameter : serviceFinder.getParameterTypes()) {    types.add(parameter.getJavaType());    types.addAll(parameter.getJavaType().getParameters());  }  for (  JavaType parameter : types) {    getTypeLocationService().addModuleDependency(governorPhysicalTypeMetadata.getType().getModule(),parameter);  }  finders.remove(serviceFinder.getMethodName().toString());} @AT@ 13249 @LENGTH@ 1069
------MOV ExpressionStatement@@MethodInvocation:findersToAdd.add(finderMethod) @TO@ Block@@ThenBody:{  MethodMetadata finderMethod=getFinderMethod(serviceFinder);  findersToAdd.add(finderMethod);  findersToAdd.add(getFinderFormMethod(finderMethod));  findersToAdd.add(getFinderRedirectMethod(finderMethod));  findersToAdd.add(getFinderListMethod(finderMethod));  List<JavaType> types=new ArrayList<JavaType>();  types.add(serviceFinder.getReturnType());  types.addAll(serviceFinder.getReturnType().getParameters());  for (  AnnotatedJavaType parameter : serviceFinder.getParameterTypes()) {    types.add(parameter.getJavaType());    types.addAll(parameter.getJavaType().getParameters());  }  for (  JavaType parameter : types) {    getTypeLocationService().addModuleDependency(governorPhysicalTypeMetadata.getType().getModule(),parameter);  }  finders.remove(serviceFinder.getMethodName().toString());} @AT@ 13333 @LENGTH@ 31


UPD TypeDeclaration@@[@Configuration, @ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration"), @EnableConfigurationProperties(WebsocketComponentConfiguration.class), public]WebsocketComponentAutoConfiguration,  @TO@ [@Configuration, @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration"), @EnableConfigurationProperties(WebsocketComponentConfiguration.class), public]WebsocketComponentAutoConfiguration,  @AT@ 1656 @LENGTH@ 2108
---UPD NormalAnnotation@@@ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1671 @LENGTH@ 79
---UPD NormalAnnotation@@@AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1751 @LENGTH@ 80


UPD WhileStatement@@while (isActive(this.consumer) || this.consumer.hasDelivery()) {  try {    boolean receivedOk=receiveAndExecute(this.consumer);    if (SimpleMessageListenerContainer.this.maxConcurrentConsumers != null) {      if (receivedOk) {        if (isActive(this.consumer)) {          consecutiveIdles=0;          if (consecutiveMessages++ > SimpleMessageListenerContainer.this.consecutiveActiveTrigger) {            considerAddingAConsumer();            consecutiveMessages=0;          }        }      } else {        consecutiveMessages=0;        if (consecutiveIdles++ > SimpleMessageListenerContainer.this.consecutiveIdleTrigger) {          considerStoppingAConsumer(this.consumer);          consecutiveIdles=0;        }      }    }    if (SimpleMessageListenerContainer.this.idleEventInterval != null) {      if (receivedOk) {        SimpleMessageListenerContainer.this.lastReceive=System.currentTimeMillis();      } else {        long now=System.currentTimeMillis();        long lastAlertAt=SimpleMessageListenerContainer.this.lastNoMessageAlert.get();        long lastReceive=SimpleMessageListenerContainer.this.lastReceive;        if (now > lastReceive + SimpleMessageListenerContainer.this.idleEventInterval && now > lastAlertAt + SimpleMessageListenerContainer.this.idleEventInterval && SimpleMessageListenerContainer.this.lastNoMessageAlert.compareAndSet(lastAlertAt,now)) {          publishIdleContainerEvent(now - lastReceive);        }      }    }  } catch (  ListenerExecutionFailedException ex) {    if (ex.getCause() instanceof NoSuchMethodException) {      throw new FatalListenerExecutionException("Invalid listener",ex);    }  }catch (  AmqpRejectAndDontRequeueException rejectEx) {  }} @TO@ while (isActive(this.consumer) || this.consumer.hasDelivery() || !this.consumer.cancelled()) {  try {    boolean receivedOk=receiveAndExecute(this.consumer);    if (SimpleMessageListenerContainer.this.maxConcurrentConsumers != null) {      if (receivedOk) {        if (isActive(this.consumer)) {          consecutiveIdles=0;          if (consecutiveMessages++ > SimpleMessageListenerContainer.this.consecutiveActiveTrigger) {            considerAddingAConsumer();            consecutiveMessages=0;          }        }      } else {        consecutiveMessages=0;        if (consecutiveIdles++ > SimpleMessageListenerContainer.this.consecutiveIdleTrigger) {          considerStoppingAConsumer(this.consumer);          consecutiveIdles=0;        }      }    }    if (SimpleMessageListenerContainer.this.idleEventInterval != null) {      if (receivedOk) {        SimpleMessageListenerContainer.this.lastReceive=System.currentTimeMillis();      } else {        long now=System.currentTimeMillis();        long lastAlertAt=SimpleMessageListenerContainer.this.lastNoMessageAlert.get();        long lastReceive=SimpleMessageListenerContainer.this.lastReceive;        if (now > lastReceive + SimpleMessageListenerContainer.this.idleEventInterval && now > lastAlertAt + SimpleMessageListenerContainer.this.idleEventInterval && SimpleMessageListenerContainer.this.lastNoMessageAlert.compareAndSet(lastAlertAt,now)) {          publishIdleContainerEvent(now - lastReceive);        }      }    }  } catch (  ListenerExecutionFailedException ex) {    if (ex.getCause() instanceof NoSuchMethodException) {      throw new FatalListenerExecutionException("Invalid listener",ex);    }  }catch (  AmqpRejectAndDontRequeueException rejectEx) {  }} @AT@ 47436 @LENGTH@ 2092
---UPD InfixExpression@@isActive(this.consumer) || this.consumer.hasDelivery() @TO@ isActive(this.consumer) || this.consumer.hasDelivery() || !this.consumer.cancelled() @AT@ 47443 @LENGTH@ 54
------INS PrefixExpression@@!this.consumer.cancelled() @TO@ InfixExpression@@isActive(this.consumer) || this.consumer.hasDelivery() @AT@ 47554 @LENGTH@ 26
---------INS Operator@@! @TO@ PrefixExpression@@!this.consumer.cancelled() @AT@ 47554 @LENGTH@ 1
---------INS MethodInvocation@@this.consumer.cancelled() @TO@ PrefixExpression@@!this.consumer.cancelled() @AT@ 47555 @LENGTH@ 25
------------INS FieldAccess@@this.consumer @TO@ MethodInvocation@@this.consumer.cancelled() @AT@ 47555 @LENGTH@ 13
---------------INS ThisExpression@@this @TO@ FieldAccess@@this.consumer @AT@ 47555 @LENGTH@ 4
---------------INS SimpleName@@consumer @TO@ FieldAccess@@this.consumer @AT@ 47560 @LENGTH@ 8
------------INS SimpleName@@MethodName:cancelled:[] @TO@ MethodInvocation@@this.consumer.cancelled() @AT@ 47569 @LENGTH@ 11


UPD TypeDeclaration@@[@Configuration, @ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration"), @EnableConfigurationProperties(JpaComponentConfiguration.class), public]JpaComponentAutoConfiguration,  @TO@ [@Configuration, @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration"), @EnableConfigurationProperties(JpaComponentConfiguration.class), public]JpaComponentAutoConfiguration,  @AT@ 1616 @LENGTH@ 2030
---UPD NormalAnnotation@@@ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1631 @LENGTH@ 79
---UPD NormalAnnotation@@@AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1711 @LENGTH@ 80


UPD ExpressionStatement@@MethodInvocation:future.completeExceptionally(new AmqpException("Blocking receive, consumer failed to consume: " + consumer)) @TO@ MethodInvocation:future.completeExceptionally(new ConsumeOkNotReceivedException("Blocking receive, consumer failed to consume: " + consumer)) @AT@ 71203 @LENGTH@ 114
---UPD MethodInvocation@@future.completeExceptionally(new AmqpException("Blocking receive, consumer failed to consume: " + consumer)) @TO@ future.completeExceptionally(new ConsumeOkNotReceivedException("Blocking receive, consumer failed to consume: " + consumer)) @AT@ 71203 @LENGTH@ 113
------UPD SimpleName@@MethodName:completeExceptionally:[new AmqpException("Blocking receive, consumer failed to consume: " + consumer)] @TO@ MethodName:completeExceptionally:[new ConsumeOkNotReceivedException("Blocking receive, consumer failed to consume: " + consumer)] @AT@ 71210 @LENGTH@ 106
---------UPD ClassInstanceCreation@@AmqpException["Blocking receive, consumer failed to consume: " + consumer] @TO@ ConsumeOkNotReceivedException["Blocking receive, consumer failed to consume: " + consumer] @AT@ 71232 @LENGTH@ 83
------------UPD SimpleType@@AmqpException @TO@ ConsumeOkNotReceivedException @AT@ 71236 @LENGTH@ 13


INS MethodDeclaration@@public, static, CryptoRandom, MethodName:getCryptoRandom, GeneralSecurityException,  @TO@ TypeDeclaration@@[public]CryptoRandomFactory,  @AT@ 4390 @LENGTH@ 178
---INS Modifier@@public @TO@ MethodDeclaration@@public, static, CryptoRandom, MethodName:getCryptoRandom, GeneralSecurityException,  @AT@ 4390 @LENGTH@ 6
---INS Modifier@@static @TO@ MethodDeclaration@@public, static, CryptoRandom, MethodName:getCryptoRandom, GeneralSecurityException,  @AT@ 4397 @LENGTH@ 6
---INS SimpleType@@CryptoRandom @TO@ MethodDeclaration@@public, static, CryptoRandom, MethodName:getCryptoRandom, GeneralSecurityException,  @AT@ 4404 @LENGTH@ 12
---INS SimpleName@@MethodName:getCryptoRandom @TO@ MethodDeclaration@@public, static, CryptoRandom, MethodName:getCryptoRandom, GeneralSecurityException,  @AT@ 4417 @LENGTH@ 15
---INS SimpleType@@GeneralSecurityException @TO@ MethodDeclaration@@public, static, CryptoRandom, MethodName:getCryptoRandom, GeneralSecurityException,  @AT@ 4442 @LENGTH@ 24
---INS VariableDeclarationStatement@@Properties properties=new Properties(); @TO@ MethodDeclaration@@public, static, CryptoRandom, MethodName:getCryptoRandom, GeneralSecurityException,  @AT@ 4477 @LENGTH@ 41
------INS SimpleType@@Properties @TO@ VariableDeclarationStatement@@Properties properties=new Properties(); @AT@ 4477 @LENGTH@ 10
------INS VariableDeclarationFragment@@properties=new Properties() @TO@ VariableDeclarationStatement@@Properties properties=new Properties(); @AT@ 4488 @LENGTH@ 29
---------INS SimpleName@@properties @TO@ VariableDeclarationFragment@@properties=new Properties() @AT@ 4488 @LENGTH@ 10
---------INS ClassInstanceCreation@@Properties[] @TO@ VariableDeclarationFragment@@properties=new Properties() @AT@ 4501 @LENGTH@ 16
------------INS New@@new @TO@ ClassInstanceCreation@@Properties[] @AT@ 4501 @LENGTH@ 3
------------INS SimpleType@@Properties @TO@ ClassInstanceCreation@@Properties[] @AT@ 4505 @LENGTH@ 10
---INS ReturnStatement@@MethodInvocation:getCryptoRandom(properties) @TO@ MethodDeclaration@@public, static, CryptoRandom, MethodName:getCryptoRandom, GeneralSecurityException,  @AT@ 4527 @LENGTH@ 35
------INS MethodInvocation@@getCryptoRandom(properties) @TO@ ReturnStatement@@MethodInvocation:getCryptoRandom(properties) @AT@ 4534 @LENGTH@ 27
---------INS SimpleName@@MethodName:getCryptoRandom:[properties] @TO@ MethodInvocation@@getCryptoRandom(properties) @AT@ 4534 @LENGTH@ 27
------------INS SimpleName@@properties @TO@ SimpleName@@MethodName:getCryptoRandom:[properties] @AT@ 4550 @LENGTH@ 10


UPD TypeDeclaration@@[@Configuration, @ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration"), @EnableConfigurationProperties(JavaScriptLanguageConfiguration.class), public]JavaScriptLanguageAutoConfiguration,  @TO@ [@Configuration, @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration"), @EnableConfigurationProperties(JavaScriptLanguageConfiguration.class), public]JavaScriptLanguageAutoConfiguration,  @AT@ 1667 @LENGTH@ 1134
---UPD NormalAnnotation@@@ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1682 @LENGTH@ 79
---UPD NormalAnnotation@@@AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1762 @LENGTH@ 80


UPD EnhancedForStatement@@for (RelationInfo info : entityMetadata.getRelationInfos().values()) {  if (info.cardinality == Cardinality.ONE_TO_ONE) {    if (!commentAdded) {      bodyBuilder.newLine();      bodyBuilder.appendFormalLine("// Ensure the relationships are maintained");      commentAdded=true;    }    bodyBuilder.appendFormalLine("%s.%s(%s.get%s());",param0,info.addMethod.getMethodName(),param0,StringUtils.capitalize(info.childType.getSimpleTypeName()));    bodyBuilder.newLine();  }} @TO@ for (Entry<String,RelationInfo> entry : relationInfos.entrySet()) {  RelationInfo info=entry.getValue();  if (info.cardinality == Cardinality.ONE_TO_ONE) {    if (!commentAdded) {      bodyBuilder.newLine();      bodyBuilder.appendFormalLine("// Ensure the relationships are maintained");      commentAdded=true;    }    bodyBuilder.appendFormalLine("%s.%s(%s.get%s());",param0,info.addMethod.getMethodName(),param0,StringUtils.capitalize(entry.getKey()));    bodyBuilder.newLine();  }} @AT@ 30110 @LENGTH@ 540
---UPD SingleVariableDeclaration@@RelationInfo info @TO@ Entry<String,RelationInfo> entry @AT@ 30115 @LENGTH@ 17
------DEL SimpleType@@RelationInfo @AT@ 30115 @LENGTH@ 12
------UPD SimpleName@@info @TO@ entry @AT@ 30128 @LENGTH@ 4
------INS ParameterizedType@@Entry<String,RelationInfo> @TO@ SingleVariableDeclaration@@RelationInfo info @AT@ 30196 @LENGTH@ 27
---------INS SimpleType@@Entry @TO@ ParameterizedType@@Entry<String,RelationInfo> @AT@ 30196 @LENGTH@ 5
---------INS SimpleType@@String @TO@ ParameterizedType@@Entry<String,RelationInfo> @AT@ 30202 @LENGTH@ 6
---------INS SimpleType@@RelationInfo @TO@ ParameterizedType@@Entry<String,RelationInfo> @AT@ 30210 @LENGTH@ 12
---DEL MethodInvocation@@entityMetadata.getRelationInfos().values() @AT@ 30135 @LENGTH@ 42
------DEL MethodInvocation@@MethodName:getRelationInfos:[] @AT@ 30135 @LENGTH@ 33
---UPD IfStatement@@if (info.cardinality == Cardinality.ONE_TO_ONE) {  if (!commentAdded) {    bodyBuilder.newLine();    bodyBuilder.appendFormalLine("// Ensure the relationships are maintained");    commentAdded=true;  }  bodyBuilder.appendFormalLine("%s.%s(%s.get%s());",param0,info.addMethod.getMethodName(),param0,StringUtils.capitalize(info.childType.getSimpleTypeName()));  bodyBuilder.newLine();} @TO@ if (info.cardinality == Cardinality.ONE_TO_ONE) {  if (!commentAdded) {    bodyBuilder.newLine();    bodyBuilder.appendFormalLine("// Ensure the relationships are maintained");    commentAdded=true;  }  bodyBuilder.appendFormalLine("%s.%s(%s.get%s());",param0,info.addMethod.getMethodName(),param0,StringUtils.capitalize(entry.getKey()));  bodyBuilder.newLine();} @AT@ 30187 @LENGTH@ 457
------UPD Block@@ThenBody:{  if (!commentAdded) {    bodyBuilder.newLine();    bodyBuilder.appendFormalLine("// Ensure the relationships are maintained");    commentAdded=true;  }  bodyBuilder.appendFormalLine("%s.%s(%s.get%s());",param0,info.addMethod.getMethodName(),param0,StringUtils.capitalize(info.childType.getSimpleTypeName()));  bodyBuilder.newLine();} @TO@ ThenBody:{  if (!commentAdded) {    bodyBuilder.newLine();    bodyBuilder.appendFormalLine("// Ensure the relationships are maintained");    commentAdded=true;  }  bodyBuilder.appendFormalLine("%s.%s(%s.get%s());",param0,info.addMethod.getMethodName(),param0,StringUtils.capitalize(entry.getKey()));  bodyBuilder.newLine();} @AT@ 30235 @LENGTH@ 409
---------UPD ExpressionStatement@@MethodInvocation:bodyBuilder.appendFormalLine("%s.%s(%s.get%s());",param0,info.addMethod.getMethodName(),param0,StringUtils.capitalize(info.childType.getSimpleTypeName())) @TO@ MethodInvocation:bodyBuilder.appendFormalLine("%s.%s(%s.get%s());",param0,info.addMethod.getMethodName(),param0,StringUtils.capitalize(entry.getKey())) @AT@ 30434 @LENGTH@ 171
------------UPD MethodInvocation@@bodyBuilder.appendFormalLine("%s.%s(%s.get%s());",param0,info.addMethod.getMethodName(),param0,StringUtils.capitalize(info.childType.getSimpleTypeName())) @TO@ bodyBuilder.appendFormalLine("%s.%s(%s.get%s());",param0,info.addMethod.getMethodName(),param0,StringUtils.capitalize(entry.getKey())) @AT@ 30434 @LENGTH@ 170
---------------UPD SimpleName@@MethodName:appendFormalLine:["%s.%s(%s.get%s());", param0, info.addMethod.getMethodName(), param0, StringUtils.capitalize(info.childType.getSimpleTypeName())] @TO@ MethodName:appendFormalLine:["%s.%s(%s.get%s());", param0, info.addMethod.getMethodName(), param0, StringUtils.capitalize(entry.getKey())] @AT@ 30446 @LENGTH@ 158
------------------UPD MethodInvocation@@StringUtils.capitalize(info.childType.getSimpleTypeName()) @TO@ StringUtils.capitalize(entry.getKey()) @AT@ 30545 @LENGTH@ 58
---------------------UPD SimpleName@@MethodName:capitalize:[info.childType.getSimpleTypeName()] @TO@ MethodName:capitalize:[entry.getKey()] @AT@ 30557 @LENGTH@ 46
------------------------UPD MethodInvocation@@info.childType.getSimpleTypeName() @TO@ entry.getKey() @AT@ 30568 @LENGTH@ 34
---------------------------DEL QualifiedName@@Name:info.childType @AT@ 30568 @LENGTH@ 14
---------------------------UPD SimpleName@@MethodName:getSimpleTypeName:[] @TO@ MethodName:getKey:[] @AT@ 30583 @LENGTH@ 19
---------------------------INS SimpleName@@Name:entry @TO@ MethodInvocation@@info.childType.getSimpleTypeName() @AT@ 30691 @LENGTH@ 5
---INS MethodInvocation@@relationInfos.entrySet() @TO@ EnhancedForStatement@@for (RelationInfo info : entityMetadata.getRelationInfos().values()) {  if (info.cardinality == Cardinality.ONE_TO_ONE) {    if (!commentAdded) {      bodyBuilder.newLine();      bodyBuilder.appendFormalLine("// Ensure the relationships are maintained");      commentAdded=true;    }    bodyBuilder.appendFormalLine("%s.%s(%s.get%s());",param0,info.addMethod.getMethodName(),param0,StringUtils.capitalize(info.childType.getSimpleTypeName()));    bodyBuilder.newLine();  }} @AT@ 30232 @LENGTH@ 24
------INS SimpleName@@Name:relationInfos @TO@ MethodInvocation@@relationInfos.entrySet() @AT@ 30232 @LENGTH@ 13
------INS SimpleName@@MethodName:entrySet:[] @TO@ MethodInvocation@@relationInfos.entrySet() @AT@ 30246 @LENGTH@ 10
---INS VariableDeclarationStatement@@RelationInfo info=entry.getValue(); @TO@ EnhancedForStatement@@for (RelationInfo info : entityMetadata.getRelationInfos().values()) {  if (info.cardinality == Cardinality.ONE_TO_ONE) {    if (!commentAdded) {      bodyBuilder.newLine();      bodyBuilder.appendFormalLine("// Ensure the relationships are maintained");      commentAdded=true;    }    bodyBuilder.appendFormalLine("%s.%s(%s.get%s());",param0,info.addMethod.getMethodName(),param0,StringUtils.capitalize(info.childType.getSimpleTypeName()));    bodyBuilder.newLine();  }} @AT@ 30266 @LENGTH@ 37
------INS SimpleType@@RelationInfo @TO@ VariableDeclarationStatement@@RelationInfo info=entry.getValue(); @AT@ 30266 @LENGTH@ 12
------INS VariableDeclarationFragment@@info=entry.getValue() @TO@ VariableDeclarationStatement@@RelationInfo info=entry.getValue(); @AT@ 30279 @LENGTH@ 23
---------INS SimpleName@@info @TO@ VariableDeclarationFragment@@info=entry.getValue() @AT@ 30279 @LENGTH@ 4
---------INS MethodInvocation@@entry.getValue() @TO@ VariableDeclarationFragment@@info=entry.getValue() @AT@ 30286 @LENGTH@ 16
------------MOV SimpleName@@Name:entityMetadata @TO@ MethodInvocation@@entry.getValue() @AT@ 30135 @LENGTH@ 14
------------MOV SimpleName@@MethodName:values:[] @TO@ MethodInvocation@@entry.getValue() @AT@ 30169 @LENGTH@ 8


UPD CatchClause@@catch (IOException e) {  e.printStackTrace(System.err);  return null;} @TO@ catch (IOException e) {  return null;} @AT@ 7739 @LENGTH@ 101
---DEL ExpressionStatement@@MethodInvocation:e.printStackTrace(System.err) @AT@ 7775 @LENGTH@ 30
------DEL MethodInvocation@@e.printStackTrace(System.err) @AT@ 7775 @LENGTH@ 29
---------DEL SimpleName@@Name:e @AT@ 7775 @LENGTH@ 1
---------DEL SimpleName@@MethodName:printStackTrace:[System.err] @AT@ 7777 @LENGTH@ 27
------------DEL QualifiedName@@System.err @AT@ 7793 @LENGTH@ 10
---------------DEL SimpleName@@System @AT@ 7793 @LENGTH@ 6
---------------DEL SimpleName@@err @AT@ 7800 @LENGTH@ 3


INS MethodDeclaration@@public, void, MethodName:insertShouldConsiderInheritance,  @TO@ TypeDeclaration@@[@RunWith(SpringJUnit4ClassRunner.class), @ContextConfiguration("classpath:infrastructure.xml"), public]DefaultBulkOperationsIntegrationTests,  @AT@ 7302 @LENGTH@ 472
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:insertShouldConsiderInheritance,  @AT@ 7302 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:insertShouldConsiderInheritance,  @AT@ 7309 @LENGTH@ 4
---INS SimpleName@@MethodName:insertShouldConsiderInheritance @TO@ MethodDeclaration@@public, void, MethodName:insertShouldConsiderInheritance,  @AT@ 7314 @LENGTH@ 31
---INS VariableDeclarationStatement@@SpecialDoc specialDoc=new SpecialDoc(); @TO@ MethodDeclaration@@public, void, MethodName:insertShouldConsiderInheritance,  @AT@ 7353 @LENGTH@ 41
------INS SimpleType@@SpecialDoc @TO@ VariableDeclarationStatement@@SpecialDoc specialDoc=new SpecialDoc(); @AT@ 7353 @LENGTH@ 10
------INS VariableDeclarationFragment@@specialDoc=new SpecialDoc() @TO@ VariableDeclarationStatement@@SpecialDoc specialDoc=new SpecialDoc(); @AT@ 7364 @LENGTH@ 29
---------INS SimpleName@@specialDoc @TO@ VariableDeclarationFragment@@specialDoc=new SpecialDoc() @AT@ 7364 @LENGTH@ 10
---------INS ClassInstanceCreation@@SpecialDoc[] @TO@ VariableDeclarationFragment@@specialDoc=new SpecialDoc() @AT@ 7377 @LENGTH@ 16
------------INS New@@new @TO@ ClassInstanceCreation@@SpecialDoc[] @AT@ 7377 @LENGTH@ 3
------------INS SimpleType@@SpecialDoc @TO@ ClassInstanceCreation@@SpecialDoc[] @AT@ 7381 @LENGTH@ 10
---INS ExpressionStatement@@Assignment:specialDoc.id="id-special" @TO@ MethodDeclaration@@public, void, MethodName:insertShouldConsiderInheritance,  @AT@ 7397 @LENGTH@ 29
------INS Assignment@@specialDoc.id="id-special" @TO@ ExpressionStatement@@Assignment:specialDoc.id="id-special" @AT@ 7397 @LENGTH@ 28
---------INS QualifiedName@@specialDoc.id @TO@ Assignment@@specialDoc.id="id-special" @AT@ 7397 @LENGTH@ 13
------------INS SimpleName@@specialDoc @TO@ QualifiedName@@specialDoc.id @AT@ 7397 @LENGTH@ 10
------------INS SimpleName@@id @TO@ QualifiedName@@specialDoc.id @AT@ 7408 @LENGTH@ 2
---------INS Operator@@= @TO@ Assignment@@specialDoc.id="id-special" @AT@ 7410 @LENGTH@ 1
---------INS StringLiteral@@"id-special" @TO@ Assignment@@specialDoc.id="id-special" @AT@ 7413 @LENGTH@ 12
---INS ExpressionStatement@@Assignment:specialDoc.value="normal-value" @TO@ MethodDeclaration@@public, void, MethodName:insertShouldConsiderInheritance,  @AT@ 7429 @LENGTH@ 34
------INS Assignment@@specialDoc.value="normal-value" @TO@ ExpressionStatement@@Assignment:specialDoc.value="normal-value" @AT@ 7429 @LENGTH@ 33
---------INS QualifiedName@@specialDoc.value @TO@ Assignment@@specialDoc.value="normal-value" @AT@ 7429 @LENGTH@ 16
------------INS SimpleName@@specialDoc @TO@ QualifiedName@@specialDoc.value @AT@ 7429 @LENGTH@ 10
------------INS SimpleName@@value @TO@ QualifiedName@@specialDoc.value @AT@ 7440 @LENGTH@ 5
---------INS Operator@@= @TO@ Assignment@@specialDoc.value="normal-value" @AT@ 7445 @LENGTH@ 1
---------INS StringLiteral@@"normal-value" @TO@ Assignment@@specialDoc.value="normal-value" @AT@ 7448 @LENGTH@ 14
---INS ExpressionStatement@@Assignment:specialDoc.specialValue="special-value" @TO@ MethodDeclaration@@public, void, MethodName:insertShouldConsiderInheritance,  @AT@ 7466 @LENGTH@ 42
------INS Assignment@@specialDoc.specialValue="special-value" @TO@ ExpressionStatement@@Assignment:specialDoc.specialValue="special-value" @AT@ 7466 @LENGTH@ 41
---------INS QualifiedName@@specialDoc.specialValue @TO@ Assignment@@specialDoc.specialValue="special-value" @AT@ 7466 @LENGTH@ 23
------------INS SimpleName@@specialDoc @TO@ QualifiedName@@specialDoc.specialValue @AT@ 7466 @LENGTH@ 10
------------INS SimpleName@@specialValue @TO@ QualifiedName@@specialDoc.specialValue @AT@ 7477 @LENGTH@ 12
---------INS Operator@@= @TO@ Assignment@@specialDoc.specialValue="special-value" @AT@ 7489 @LENGTH@ 1
---------INS StringLiteral@@"special-value" @TO@ Assignment@@specialDoc.specialValue="special-value" @AT@ 7492 @LENGTH@ 15
---INS ExpressionStatement@@MethodInvocation:createBulkOps(BulkMode.ORDERED).insert(Arrays.asList(specialDoc)).execute() @TO@ MethodDeclaration@@public, void, MethodName:insertShouldConsiderInheritance,  @AT@ 7512 @LENGTH@ 76
------INS MethodInvocation@@createBulkOps(BulkMode.ORDERED).insert(Arrays.asList(specialDoc)).execute() @TO@ ExpressionStatement@@MethodInvocation:createBulkOps(BulkMode.ORDERED).insert(Arrays.asList(specialDoc)).execute() @AT@ 7512 @LENGTH@ 75
---------INS MethodInvocation@@MethodName:insert:[Arrays.asList(specialDoc)] @TO@ MethodInvocation@@createBulkOps(BulkMode.ORDERED).insert(Arrays.asList(specialDoc)).execute() @AT@ 7512 @LENGTH@ 65
------------INS MethodInvocation@@Arrays.asList(specialDoc) @TO@ MethodInvocation@@MethodName:insert:[Arrays.asList(specialDoc)] @AT@ 7551 @LENGTH@ 25
---------------INS SimpleName@@Name:Arrays @TO@ MethodInvocation@@Arrays.asList(specialDoc) @AT@ 7551 @LENGTH@ 6
---------------INS SimpleName@@MethodName:asList:[specialDoc] @TO@ MethodInvocation@@Arrays.asList(specialDoc) @AT@ 7558 @LENGTH@ 18
------------------INS SimpleName@@specialDoc @TO@ SimpleName@@MethodName:asList:[specialDoc] @AT@ 7565 @LENGTH@ 10
---------INS MethodInvocation@@MethodName:createBulkOps:[BulkMode.ORDERED] @TO@ MethodInvocation@@createBulkOps(BulkMode.ORDERED).insert(Arrays.asList(specialDoc)).execute() @AT@ 7512 @LENGTH@ 31
------------INS QualifiedName@@BulkMode.ORDERED @TO@ MethodInvocation@@MethodName:createBulkOps:[BulkMode.ORDERED] @AT@ 7526 @LENGTH@ 16
---------------INS SimpleName@@BulkMode @TO@ QualifiedName@@BulkMode.ORDERED @AT@ 7526 @LENGTH@ 8
---------------INS SimpleName@@ORDERED @TO@ QualifiedName@@BulkMode.ORDERED @AT@ 7535 @LENGTH@ 7
---------INS SimpleName@@MethodName:execute:[] @TO@ MethodInvocation@@createBulkOps(BulkMode.ORDERED).insert(Arrays.asList(specialDoc)).execute() @AT@ 7578 @LENGTH@ 9
---INS VariableDeclarationStatement@@BaseDoc doc=operations.findOne(where("_id",specialDoc.id),BaseDoc.class,COLLECTION_NAME); @TO@ MethodDeclaration@@public, void, MethodName:insertShouldConsiderInheritance,  @AT@ 7592 @LENGTH@ 94
------INS SimpleType@@BaseDoc @TO@ VariableDeclarationStatement@@BaseDoc doc=operations.findOne(where("_id",specialDoc.id),BaseDoc.class,COLLECTION_NAME); @AT@ 7592 @LENGTH@ 7
------INS VariableDeclarationFragment@@doc=operations.findOne(where("_id",specialDoc.id),BaseDoc.class,COLLECTION_NAME) @TO@ VariableDeclarationStatement@@BaseDoc doc=operations.findOne(where("_id",specialDoc.id),BaseDoc.class,COLLECTION_NAME); @AT@ 7600 @LENGTH@ 85
---------INS SimpleName@@doc @TO@ VariableDeclarationFragment@@doc=operations.findOne(where("_id",specialDoc.id),BaseDoc.class,COLLECTION_NAME) @AT@ 7600 @LENGTH@ 3
---------INS MethodInvocation@@operations.findOne(where("_id",specialDoc.id),BaseDoc.class,COLLECTION_NAME) @TO@ VariableDeclarationFragment@@doc=operations.findOne(where("_id",specialDoc.id),BaseDoc.class,COLLECTION_NAME) @AT@ 7606 @LENGTH@ 79
------------INS SimpleName@@Name:operations @TO@ MethodInvocation@@operations.findOne(where("_id",specialDoc.id),BaseDoc.class,COLLECTION_NAME) @AT@ 7606 @LENGTH@ 10
------------INS SimpleName@@MethodName:findOne:[where("_id",specialDoc.id), BaseDoc.class, COLLECTION_NAME] @TO@ MethodInvocation@@operations.findOne(where("_id",specialDoc.id),BaseDoc.class,COLLECTION_NAME) @AT@ 7617 @LENGTH@ 68
---------------INS MethodInvocation@@where("_id",specialDoc.id) @TO@ SimpleName@@MethodName:findOne:[where("_id",specialDoc.id), BaseDoc.class, COLLECTION_NAME] @AT@ 7625 @LENGTH@ 27
------------------INS SimpleName@@MethodName:where:["_id", specialDoc.id] @TO@ MethodInvocation@@where("_id",specialDoc.id) @AT@ 7625 @LENGTH@ 27
---------------------INS StringLiteral@@"_id" @TO@ SimpleName@@MethodName:where:["_id", specialDoc.id] @AT@ 7631 @LENGTH@ 5
---------------------INS QualifiedName@@specialDoc.id @TO@ SimpleName@@MethodName:where:["_id", specialDoc.id] @AT@ 7638 @LENGTH@ 13
------------------------INS SimpleName@@specialDoc @TO@ QualifiedName@@specialDoc.id @AT@ 7638 @LENGTH@ 10
------------------------INS SimpleName@@id @TO@ QualifiedName@@specialDoc.id @AT@ 7649 @LENGTH@ 2
---------------INS TypeLiteral@@BaseDoc.class @TO@ SimpleName@@MethodName:findOne:[where("_id",specialDoc.id), BaseDoc.class, COLLECTION_NAME] @AT@ 7654 @LENGTH@ 13
---------------INS SimpleName@@COLLECTION_NAME @TO@ SimpleName@@MethodName:findOne:[where("_id",specialDoc.id), BaseDoc.class, COLLECTION_NAME] @AT@ 7669 @LENGTH@ 15
---INS ExpressionStatement@@MethodInvocation:assertThat(doc,notNullValue()) @TO@ MethodDeclaration@@public, void, MethodName:insertShouldConsiderInheritance,  @AT@ 7690 @LENGTH@ 32
------INS MethodInvocation@@assertThat(doc,notNullValue()) @TO@ ExpressionStatement@@MethodInvocation:assertThat(doc,notNullValue()) @AT@ 7690 @LENGTH@ 31
---------INS SimpleName@@MethodName:assertThat:[doc, notNullValue()] @TO@ MethodInvocation@@assertThat(doc,notNullValue()) @AT@ 7690 @LENGTH@ 31
------------INS SimpleName@@doc @TO@ SimpleName@@MethodName:assertThat:[doc, notNullValue()] @AT@ 7701 @LENGTH@ 3
------------INS MethodInvocation@@MethodName:notNullValue:[] @TO@ SimpleName@@MethodName:assertThat:[doc, notNullValue()] @AT@ 7706 @LENGTH@ 14
---INS ExpressionStatement@@MethodInvocation:assertThat(doc,instanceOf(SpecialDoc.class)) @TO@ MethodDeclaration@@public, void, MethodName:insertShouldConsiderInheritance,  @AT@ 7725 @LENGTH@ 46
------INS MethodInvocation@@assertThat(doc,instanceOf(SpecialDoc.class)) @TO@ ExpressionStatement@@MethodInvocation:assertThat(doc,instanceOf(SpecialDoc.class)) @AT@ 7725 @LENGTH@ 45
---------INS SimpleName@@MethodName:assertThat:[doc, instanceOf(SpecialDoc.class)] @TO@ MethodInvocation@@assertThat(doc,instanceOf(SpecialDoc.class)) @AT@ 7725 @LENGTH@ 45
------------INS SimpleName@@doc @TO@ SimpleName@@MethodName:assertThat:[doc, instanceOf(SpecialDoc.class)] @AT@ 7736 @LENGTH@ 3
------------INS MethodInvocation@@instanceOf(SpecialDoc.class) @TO@ SimpleName@@MethodName:assertThat:[doc, instanceOf(SpecialDoc.class)] @AT@ 7741 @LENGTH@ 28
---------------INS SimpleName@@MethodName:instanceOf:[SpecialDoc.class] @TO@ MethodInvocation@@instanceOf(SpecialDoc.class) @AT@ 7741 @LENGTH@ 28
------------------INS TypeLiteral@@SpecialDoc.class @TO@ SimpleName@@MethodName:instanceOf:[SpecialDoc.class] @AT@ 7752 @LENGTH@ 16


UPD EnhancedForStatement@@for (final PhysicalPath thisPhysicalPath : pom.getPhysicalPaths()) {  final String possibleParent=new FileDetails(thisPhysicalPath.getLocation(),null).getCanonicalPath();  if (removeTrailingSeparator(identifier).startsWith(possibleParent) && possibleParent.length() > nextLongest) {    nextLongest=possibleParent.length();    physicalPath=thisPhysicalPath;  }} @TO@ for (final PhysicalPath thisPhysicalPath : pom.getPhysicalPaths()) {  String possibleParent=new FileDetails(thisPhysicalPath.getLocation(),null).getCanonicalPath();  if (!possibleParent.endsWith(File.separator)) {    possibleParent=possibleParent.concat(File.separator);  }  if (removeTrailingSeparator(identifier).startsWith(possibleParent) && possibleParent.length() > nextLongest) {    nextLongest=possibleParent.length();    physicalPath=thisPhysicalPath;  }} @AT@ 1535 @LENGTH@ 449
---UPD VariableDeclarationStatement@@final String possibleParent=new FileDetails(thisPhysicalPath.getLocation(),null).getCanonicalPath(); @TO@ String possibleParent=new FileDetails(thisPhysicalPath.getLocation(),null).getCanonicalPath(); @AT@ 1614 @LENGTH@ 117
------DEL Modifier@@final @AT@ 1614 @LENGTH@ 5
---INS IfStatement@@if (!possibleParent.endsWith(File.separator)) {  possibleParent=possibleParent.concat(File.separator);} @TO@ EnhancedForStatement@@for (final PhysicalPath thisPhysicalPath : pom.getPhysicalPaths()) {  final String possibleParent=new FileDetails(thisPhysicalPath.getLocation(),null).getCanonicalPath();  if (removeTrailingSeparator(identifier).startsWith(possibleParent) && possibleParent.length() > nextLongest) {    nextLongest=possibleParent.length();    physicalPath=thisPhysicalPath;  }} @AT@ 1735 @LENGTH@ 127
------INS PrefixExpression@@!possibleParent.endsWith(File.separator) @TO@ IfStatement@@if (!possibleParent.endsWith(File.separator)) {  possibleParent=possibleParent.concat(File.separator);} @AT@ 1739 @LENGTH@ 40
---------INS Operator@@! @TO@ PrefixExpression@@!possibleParent.endsWith(File.separator) @AT@ 1739 @LENGTH@ 1
---------INS MethodInvocation@@possibleParent.endsWith(File.separator) @TO@ PrefixExpression@@!possibleParent.endsWith(File.separator) @AT@ 1740 @LENGTH@ 39
------------INS SimpleName@@Name:possibleParent @TO@ MethodInvocation@@possibleParent.endsWith(File.separator) @AT@ 1740 @LENGTH@ 14
------------INS SimpleName@@MethodName:endsWith:[File.separator] @TO@ MethodInvocation@@possibleParent.endsWith(File.separator) @AT@ 1755 @LENGTH@ 24
---------------INS QualifiedName@@File.separator @TO@ SimpleName@@MethodName:endsWith:[File.separator] @AT@ 1764 @LENGTH@ 14
------------------INS SimpleName@@File @TO@ QualifiedName@@File.separator @AT@ 1764 @LENGTH@ 4
------------------INS SimpleName@@separator @TO@ QualifiedName@@File.separator @AT@ 1769 @LENGTH@ 9
------INS Block@@ThenBody:{  possibleParent=possibleParent.concat(File.separator);} @TO@ IfStatement@@if (!possibleParent.endsWith(File.separator)) {  possibleParent=possibleParent.concat(File.separator);} @AT@ 1781 @LENGTH@ 81
---------INS ExpressionStatement@@Assignment:possibleParent=possibleParent.concat(File.separator) @TO@ Block@@ThenBody:{  possibleParent=possibleParent.concat(File.separator);} @AT@ 1795 @LENGTH@ 55
------------INS Assignment@@possibleParent=possibleParent.concat(File.separator) @TO@ ExpressionStatement@@Assignment:possibleParent=possibleParent.concat(File.separator) @AT@ 1795 @LENGTH@ 54
---------------INS SimpleName@@possibleParent @TO@ Assignment@@possibleParent=possibleParent.concat(File.separator) @AT@ 1795 @LENGTH@ 14
---------------INS Operator@@= @TO@ Assignment@@possibleParent=possibleParent.concat(File.separator) @AT@ 1809 @LENGTH@ 1
---------------INS MethodInvocation@@possibleParent.concat(File.separator) @TO@ Assignment@@possibleParent=possibleParent.concat(File.separator) @AT@ 1812 @LENGTH@ 37
------------------INS SimpleName@@Name:possibleParent @TO@ MethodInvocation@@possibleParent.concat(File.separator) @AT@ 1812 @LENGTH@ 14
------------------INS SimpleName@@MethodName:concat:[File.separator] @TO@ MethodInvocation@@possibleParent.concat(File.separator) @AT@ 1827 @LENGTH@ 22
---------------------INS QualifiedName@@File.separator @TO@ SimpleName@@MethodName:concat:[File.separator] @AT@ 1834 @LENGTH@ 14
------------------------INS SimpleName@@File @TO@ QualifiedName@@File.separator @AT@ 1834 @LENGTH@ 4
------------------------INS SimpleName@@separator @TO@ QualifiedName@@File.separator @AT@ 1839 @LENGTH@ 9


INS ExpressionStatement@@MethodInvocation:container.setFailedDeclarationRetryInterval(100) @TO@ MethodDeclaration@@public, void, MethodName:testDeleteOneQueue, Exception,  @AT@ 6058 @LENGTH@ 49
---INS MethodInvocation@@container.setFailedDeclarationRetryInterval(100) @TO@ ExpressionStatement@@MethodInvocation:container.setFailedDeclarationRetryInterval(100) @AT@ 6058 @LENGTH@ 48
------INS SimpleName@@Name:container @TO@ MethodInvocation@@container.setFailedDeclarationRetryInterval(100) @AT@ 6058 @LENGTH@ 9
------INS SimpleName@@MethodName:setFailedDeclarationRetryInterval:[100] @TO@ MethodInvocation@@container.setFailedDeclarationRetryInterval(100) @AT@ 6068 @LENGTH@ 38
---------INS NumberLiteral@@100 @TO@ SimpleName@@MethodName:setFailedDeclarationRetryInterval:[100] @AT@ 6102 @LENGTH@ 3


DEL FieldDeclaration@@private, Session, [session] @AT@ 2050 @LENGTH@ 24
---DEL Modifier@@private @AT@ 2050 @LENGTH@ 7
---DEL SimpleType@@Session @AT@ 2058 @LENGTH@ 7
---DEL VariableDeclarationFragment@@session @AT@ 2066 @LENGTH@ 7
------DEL SimpleName@@session @AT@ 2066 @LENGTH@ 7


UPD IfStatement@@if (!simpleTypeHolder.isSimpleType(Enum.class) || owner.getType().isEnum()) {  this.isIdProperty=resolveWhetherIdProperty(owningClassInfo,field);} else {  this.isIdProperty=false;} @TO@ if ((owningClassInfo.getUnderlyingClass() != null && simpleTypeHolder.isSimpleType(owningClassInfo.getUnderlyingClass())) || owner.getType().isEnum()) {  this.isIdProperty=false;} else {  this.isIdProperty=resolveWhetherIdProperty(owningClassInfo,field);} @AT@ 3575 @LENGTH@ 233
---UPD InfixExpression@@!simpleTypeHolder.isSimpleType(Enum.class) || owner.getType().isEnum() @TO@ (owningClassInfo.getUnderlyingClass() != null && simpleTypeHolder.isSimpleType(owningClassInfo.getUnderlyingClass())) || owner.getType().isEnum() @AT@ 3579 @LENGTH@ 70
------DEL PrefixExpression@@!simpleTypeHolder.isSimpleType(Enum.class) @AT@ 3579 @LENGTH@ 42
---------DEL Operator@@! @AT@ 3579 @LENGTH@ 1
---------DEL MethodInvocation@@simpleTypeHolder.isSimpleType(Enum.class) @AT@ 3580 @LENGTH@ 41
------INS ParenthesizedExpression@@(owningClassInfo.getUnderlyingClass() != null && simpleTypeHolder.isSimpleType(owningClassInfo.getUnderlyingClass())) @TO@ InfixExpression@@!simpleTypeHolder.isSimpleType(Enum.class) || owner.getType().isEnum() @AT@ 3579 @LENGTH@ 115
---------INS InfixExpression@@owningClassInfo.getUnderlyingClass() != null && simpleTypeHolder.isSimpleType(owningClassInfo.getUnderlyingClass()) @TO@ ParenthesizedExpression@@(owningClassInfo.getUnderlyingClass() != null && simpleTypeHolder.isSimpleType(owningClassInfo.getUnderlyingClass())) @AT@ 3580 @LENGTH@ 113
------------INS InfixExpression@@owningClassInfo.getUnderlyingClass() != null @TO@ InfixExpression@@owningClassInfo.getUnderlyingClass() != null && simpleTypeHolder.isSimpleType(owningClassInfo.getUnderlyingClass()) @AT@ 3580 @LENGTH@ 42
---------------INS MethodInvocation@@owningClassInfo.getUnderlyingClass() @TO@ InfixExpression@@owningClassInfo.getUnderlyingClass() != null @AT@ 3580 @LENGTH@ 36
------------------INS SimpleName@@Name:owningClassInfo @TO@ MethodInvocation@@owningClassInfo.getUnderlyingClass() @AT@ 3580 @LENGTH@ 15
------------------INS SimpleName@@MethodName:getUnderlyingClass:[] @TO@ MethodInvocation@@owningClassInfo.getUnderlyingClass() @AT@ 3596 @LENGTH@ 20
---------------INS Operator@@!= @TO@ InfixExpression@@owningClassInfo.getUnderlyingClass() != null @AT@ 3616 @LENGTH@ 2
---------------INS NullLiteral@@null @TO@ InfixExpression@@owningClassInfo.getUnderlyingClass() != null @AT@ 3618 @LENGTH@ 4
------------INS Operator@@&& @TO@ InfixExpression@@owningClassInfo.getUnderlyingClass() != null && simpleTypeHolder.isSimpleType(owningClassInfo.getUnderlyingClass()) @AT@ 3622 @LENGTH@ 2
------------INS MethodInvocation@@simpleTypeHolder.isSimpleType(owningClassInfo.getUnderlyingClass()) @TO@ InfixExpression@@owningClassInfo.getUnderlyingClass() != null && simpleTypeHolder.isSimpleType(owningClassInfo.getUnderlyingClass()) @AT@ 3626 @LENGTH@ 67
---------------MOV SimpleName@@Name:simpleTypeHolder @TO@ MethodInvocation@@simpleTypeHolder.isSimpleType(owningClassInfo.getUnderlyingClass()) @AT@ 3580 @LENGTH@ 16
---------------MOV SimpleName@@Name:simpleTypeHolder @TO@ MethodInvocation@@simpleTypeHolder.isSimpleType(owningClassInfo.getUnderlyingClass()) @AT@ 3580 @LENGTH@ 16
---------------MOV SimpleName@@MethodName:isSimpleType:[Enum.class] @TO@ MethodInvocation@@simpleTypeHolder.isSimpleType(owningClassInfo.getUnderlyingClass()) @AT@ 3597 @LENGTH@ 24
------------------DEL TypeLiteral@@Enum.class @AT@ 3610 @LENGTH@ 10
------------------INS MethodInvocation@@owningClassInfo.getUnderlyingClass() @TO@ SimpleName@@MethodName:isSimpleType:[Enum.class] @AT@ 3656 @LENGTH@ 36
---------------------INS SimpleName@@Name:owningClassInfo @TO@ MethodInvocation@@owningClassInfo.getUnderlyingClass() @AT@ 3656 @LENGTH@ 15
---------------------INS SimpleName@@MethodName:getUnderlyingClass:[] @TO@ MethodInvocation@@owningClassInfo.getUnderlyingClass() @AT@ 3672 @LENGTH@ 20
---------------MOV SimpleName@@MethodName:isSimpleType:[Enum.class] @TO@ MethodInvocation@@simpleTypeHolder.isSimpleType(owningClassInfo.getUnderlyingClass()) @AT@ 3597 @LENGTH@ 24
------------------DEL TypeLiteral@@Enum.class @AT@ 3610 @LENGTH@ 10
------------------INS MethodInvocation@@owningClassInfo.getUnderlyingClass() @TO@ SimpleName@@MethodName:isSimpleType:[Enum.class] @AT@ 3656 @LENGTH@ 36
---------------------INS SimpleName@@Name:owningClassInfo @TO@ MethodInvocation@@owningClassInfo.getUnderlyingClass() @AT@ 3656 @LENGTH@ 15
---------------------INS SimpleName@@MethodName:getUnderlyingClass:[] @TO@ MethodInvocation@@owningClassInfo.getUnderlyingClass() @AT@ 3672 @LENGTH@ 20
---UPD Block@@ThenBody:{  this.isIdProperty=resolveWhetherIdProperty(owningClassInfo,field);} @TO@ ElseBody:{  this.isIdProperty=resolveWhetherIdProperty(owningClassInfo,field);} @AT@ 3651 @LENGTH@ 93
---MOV Block@@ThenBody:{  this.isIdProperty=resolveWhetherIdProperty(owningClassInfo,field);} @TO@ IfStatement@@if (!simpleTypeHolder.isSimpleType(Enum.class) || owner.getType().isEnum()) {  this.isIdProperty=resolveWhetherIdProperty(owningClassInfo,field);} else {  this.isIdProperty=false;} @AT@ 3651 @LENGTH@ 93
---UPD Block@@ElseBody:{  this.isIdProperty=false;} @TO@ ThenBody:{  this.isIdProperty=false;} @AT@ 3758 @LENGTH@ 50


INS TryStatement@@try {  assertExpression("date:yyyyMMdd","19740420");  fail("Should thrown an exception");} catch (IllegalArgumentException e) {  assertEquals("Command not supported for dateExpression: yyyyMMdd",e.getMessage());} @TO@ MethodDeclaration@@public, void, MethodName:testDateExpressions, Exception,  @AT@ 20392 @LENGTH@ 265
---INS ExpressionStatement@@MethodInvocation:assertExpression("date:yyyyMMdd","19740420") @TO@ TryStatement@@try {  assertExpression("date:yyyyMMdd","19740420");  fail("Should thrown an exception");} catch (IllegalArgumentException e) {  assertEquals("Command not supported for dateExpression: yyyyMMdd",e.getMessage());} @AT@ 20410 @LENGTH@ 46
------INS MethodInvocation@@assertExpression("date:yyyyMMdd","19740420") @TO@ ExpressionStatement@@MethodInvocation:assertExpression("date:yyyyMMdd","19740420") @AT@ 20410 @LENGTH@ 45
---------INS SimpleName@@MethodName:assertExpression:["date:yyyyMMdd", "19740420"] @TO@ MethodInvocation@@assertExpression("date:yyyyMMdd","19740420") @AT@ 20410 @LENGTH@ 45
------------INS StringLiteral@@"date:yyyyMMdd" @TO@ SimpleName@@MethodName:assertExpression:["date:yyyyMMdd", "19740420"] @AT@ 20427 @LENGTH@ 15
------------INS StringLiteral@@"19740420" @TO@ SimpleName@@MethodName:assertExpression:["date:yyyyMMdd", "19740420"] @AT@ 20444 @LENGTH@ 10
---INS ExpressionStatement@@MethodInvocation:fail("Should thrown an exception") @TO@ TryStatement@@try {  assertExpression("date:yyyyMMdd","19740420");  fail("Should thrown an exception");} catch (IllegalArgumentException e) {  assertEquals("Command not supported for dateExpression: yyyyMMdd",e.getMessage());} @AT@ 20469 @LENGTH@ 35
------INS MethodInvocation@@fail("Should thrown an exception") @TO@ ExpressionStatement@@MethodInvocation:fail("Should thrown an exception") @AT@ 20469 @LENGTH@ 34
---------INS SimpleName@@MethodName:fail:["Should thrown an exception"] @TO@ MethodInvocation@@fail("Should thrown an exception") @AT@ 20469 @LENGTH@ 34
------------INS StringLiteral@@"Should thrown an exception" @TO@ SimpleName@@MethodName:fail:["Should thrown an exception"] @AT@ 20474 @LENGTH@ 28
---INS CatchClause@@catch (IllegalArgumentException e) {  assertEquals("Command not supported for dateExpression: yyyyMMdd",e.getMessage());} @TO@ TryStatement@@try {  assertExpression("date:yyyyMMdd","19740420");  fail("Should thrown an exception");} catch (IllegalArgumentException e) {  assertEquals("Command not supported for dateExpression: yyyyMMdd",e.getMessage());} @AT@ 20515 @LENGTH@ 142
------INS SingleVariableDeclaration@@IllegalArgumentException e @TO@ CatchClause@@catch (IllegalArgumentException e) {  assertEquals("Command not supported for dateExpression: yyyyMMdd",e.getMessage());} @AT@ 20522 @LENGTH@ 26
---------INS SimpleType@@IllegalArgumentException @TO@ SingleVariableDeclaration@@IllegalArgumentException e @AT@ 20522 @LENGTH@ 24
---------INS SimpleName@@e @TO@ SingleVariableDeclaration@@IllegalArgumentException e @AT@ 20547 @LENGTH@ 1
------INS ExpressionStatement@@MethodInvocation:assertEquals("Command not supported for dateExpression: yyyyMMdd",e.getMessage()) @TO@ CatchClause@@catch (IllegalArgumentException e) {  assertEquals("Command not supported for dateExpression: yyyyMMdd",e.getMessage());} @AT@ 20564 @LENGTH@ 83
---------INS MethodInvocation@@assertEquals("Command not supported for dateExpression: yyyyMMdd",e.getMessage()) @TO@ ExpressionStatement@@MethodInvocation:assertEquals("Command not supported for dateExpression: yyyyMMdd",e.getMessage()) @AT@ 20564 @LENGTH@ 82
------------INS SimpleName@@MethodName:assertEquals:["Command not supported for dateExpression: yyyyMMdd", e.getMessage()] @TO@ MethodInvocation@@assertEquals("Command not supported for dateExpression: yyyyMMdd",e.getMessage()) @AT@ 20564 @LENGTH@ 82
---------------INS StringLiteral@@"Command not supported for dateExpression: yyyyMMdd" @TO@ SimpleName@@MethodName:assertEquals:["Command not supported for dateExpression: yyyyMMdd", e.getMessage()] @AT@ 20577 @LENGTH@ 52
---------------INS MethodInvocation@@e.getMessage() @TO@ SimpleName@@MethodName:assertEquals:["Command not supported for dateExpression: yyyyMMdd", e.getMessage()] @AT@ 20631 @LENGTH@ 14
------------------INS SimpleName@@Name:e @TO@ MethodInvocation@@e.getMessage() @AT@ 20631 @LENGTH@ 1
------------------INS SimpleName@@MethodName:getMessage:[] @TO@ MethodInvocation@@e.getMessage() @AT@ 20633 @LENGTH@ 12


INS MethodDeclaration@@public, void, MethodName:eraseCredentials,  @TO@ TypeDeclaration@@[public]LdapUserDetailsImpl, [LdapUserDetails, PasswordPolicyData] @AT@ 3514 @LENGTH@ 54
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:eraseCredentials,  @AT@ 3514 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:eraseCredentials,  @AT@ 3521 @LENGTH@ 4
---INS SimpleName@@MethodName:eraseCredentials @TO@ MethodDeclaration@@public, void, MethodName:eraseCredentials,  @AT@ 3526 @LENGTH@ 16
---INS ExpressionStatement@@Assignment:password=null @TO@ MethodDeclaration@@public, void, MethodName:eraseCredentials,  @AT@ 3549 @LENGTH@ 16
------INS Assignment@@password=null @TO@ ExpressionStatement@@Assignment:password=null @AT@ 3549 @LENGTH@ 15
---------INS SimpleName@@password @TO@ Assignment@@password=null @AT@ 3549 @LENGTH@ 8
---------INS Operator@@= @TO@ Assignment@@password=null @AT@ 3557 @LENGTH@ 1
---------INS NullLiteral@@null @TO@ Assignment@@password=null @AT@ 3560 @LENGTH@ 4


UPD IfStatement@@if (OpenSslCryptoRandom.isNativeCodeLoaded()) {  Assert.assertEquals(OpenSslCryptoRandom.class.getName(),name);} else {  Assert.assertEquals(JavaCryptoRandom.class.getName(),name);} @TO@ if (OpenSslCryptoRandom.isNativeCodeEnabled()) {  Assert.assertEquals(OpenSslCryptoRandom.class.getName(),name);} else {  Assert.assertEquals(JavaCryptoRandom.class.getName(),name);} @AT@ 1688 @LENGTH@ 223
---UPD MethodInvocation@@OpenSslCryptoRandom.isNativeCodeLoaded() @TO@ OpenSslCryptoRandom.isNativeCodeEnabled() @AT@ 1692 @LENGTH@ 40
------UPD SimpleName@@MethodName:isNativeCodeLoaded:[] @TO@ MethodName:isNativeCodeEnabled:[] @AT@ 1712 @LENGTH@ 20


UPD TypeDeclaration@@[@Configuration, @ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration"), public]SipComponentAutoConfiguration,  @TO@ [@Configuration, @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration"), public]SipComponentAutoConfiguration,  @AT@ 1435 @LENGTH@ 609
---UPD NormalAnnotation@@@ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1450 @LENGTH@ 79
---UPD NormalAnnotation@@@AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1530 @LENGTH@ 80


UPD TypeDeclaration@@[@Configuration, @ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration"), @EnableConfigurationProperties(AhcComponentConfiguration.class), public]AhcComponentAutoConfiguration,  @TO@ [@Configuration, @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration"), @EnableConfigurationProperties(AhcComponentConfiguration.class), public]AhcComponentAutoConfiguration,  @AT@ 1616 @LENGTH@ 2030
---UPD NormalAnnotation@@@ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1631 @LENGTH@ 79
---UPD NormalAnnotation@@@AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1711 @LENGTH@ 80


UPD TypeDeclaration@@[@Configuration, @ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration"), @EnableConfigurationProperties(CastorDataFormatConfiguration.class), public]CastorDataFormatAutoConfiguration,  @TO@ [@Configuration, @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration"), @EnableConfigurationProperties(CastorDataFormatConfiguration.class), public]CastorDataFormatAutoConfiguration,  @AT@ 1671 @LENGTH@ 1126
---UPD NormalAnnotation@@@ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1686 @LENGTH@ 79
---UPD NormalAnnotation@@@AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1766 @LENGTH@ 80


UPD TypeDeclaration@@[@Configuration, @ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration"), public]SnsComponentAutoConfiguration,  @TO@ [@Configuration, @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration"), public]SnsComponentAutoConfiguration,  @AT@ 1443 @LENGTH@ 593
---UPD NormalAnnotation@@@ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1458 @LENGTH@ 79
---UPD NormalAnnotation@@@AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1538 @LENGTH@ 80


UPD VariableDeclarationStatement@@PartialScanWork scanWork=new PartialScanWork(inputPaths); @TO@ PartialScanWork scanWork=new PartialScanWork(inputPaths,Utilities.getTableDesc(tableScan.getConf().getTableMetadata())); @AT@ 7613 @LENGTH@ 59
---UPD VariableDeclarationFragment@@scanWork=new PartialScanWork(inputPaths) @TO@ scanWork=new PartialScanWork(inputPaths,Utilities.getTableDesc(tableScan.getConf().getTableMetadata())) @AT@ 7629 @LENGTH@ 42
------UPD ClassInstanceCreation@@PartialScanWork[inputPaths] @TO@ PartialScanWork[inputPaths, Utilities.getTableDesc(tableScan.getConf().getTableMetadata())] @AT@ 7640 @LENGTH@ 31
---------INS MethodInvocation@@Utilities.getTableDesc(tableScan.getConf().getTableMetadata()) @TO@ ClassInstanceCreation@@PartialScanWork[inputPaths] @AT@ 7729 @LENGTH@ 62
------------INS SimpleName@@Name:Utilities @TO@ MethodInvocation@@Utilities.getTableDesc(tableScan.getConf().getTableMetadata()) @AT@ 7729 @LENGTH@ 9
------------INS SimpleName@@MethodName:getTableDesc:[tableScan.getConf().getTableMetadata()] @TO@ MethodInvocation@@Utilities.getTableDesc(tableScan.getConf().getTableMetadata()) @AT@ 7739 @LENGTH@ 52
---------------INS MethodInvocation@@tableScan.getConf().getTableMetadata() @TO@ SimpleName@@MethodName:getTableDesc:[tableScan.getConf().getTableMetadata()] @AT@ 7752 @LENGTH@ 38
------------------INS MethodInvocation@@MethodName:getConf:[] @TO@ MethodInvocation@@tableScan.getConf().getTableMetadata() @AT@ 7752 @LENGTH@ 19
------------------INS SimpleName@@Name:tableScan @TO@ MethodInvocation@@tableScan.getConf().getTableMetadata() @AT@ 7752 @LENGTH@ 9
------------------INS SimpleName@@MethodName:getTableMetadata:[] @TO@ MethodInvocation@@tableScan.getConf().getTableMetadata() @AT@ 7772 @LENGTH@ 18


UPD TypeDeclaration@@[@Configuration, @ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration"), @EnableConfigurationProperties(NettyHttpComponentConfiguration.class), public]NettyHttpComponentAutoConfiguration,  @TO@ [@Configuration, @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration"), @EnableConfigurationProperties(NettyHttpComponentConfiguration.class), public]NettyHttpComponentAutoConfiguration,  @AT@ 1638 @LENGTH@ 2099
---UPD NormalAnnotation@@@ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1653 @LENGTH@ 79
---UPD NormalAnnotation@@@AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1733 @LENGTH@ 80


UPD TypeDeclaration@@[@Configuration, @ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration"), public]MockComponentAutoConfiguration,  @TO@ [@Configuration, @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration"), public]MockComponentAutoConfiguration,  @AT@ 1438 @LENGTH@ 596
---UPD NormalAnnotation@@@ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1453 @LENGTH@ 79
---UPD NormalAnnotation@@@AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1533 @LENGTH@ 80


UPD ExpressionStatement@@MethodInvocation:Utilities.LOG14535.info("Paths for merge " + taskId + ": tmp "+ tmpPath+ ", task "+ taskTmpPath+ ", final "+ finalPath+ ", out "+ outPath,new Exception()) @TO@ MethodInvocation:Utilities.LOG14535.info("Paths for merge " + taskId + ": tmp "+ tmpPath+ ", task "+ taskTmpPath+ ", final "+ finalPath+ ", out "+ outPath) @AT@ 4653 @LENGTH@ 171
---UPD MethodInvocation@@Utilities.LOG14535.info("Paths for merge " + taskId + ": tmp "+ tmpPath+ ", task "+ taskTmpPath+ ", final "+ finalPath+ ", out "+ outPath,new Exception()) @TO@ Utilities.LOG14535.info("Paths for merge " + taskId + ": tmp "+ tmpPath+ ", task "+ taskTmpPath+ ", final "+ finalPath+ ", out "+ outPath) @AT@ 4653 @LENGTH@ 170
------UPD SimpleName@@MethodName:info:["Paths for merge " + taskId + ": tmp "+ tmpPath+ ", task "+ taskTmpPath+ ", final "+ finalPath+ ", out "+ outPath, new Exception()] @TO@ MethodName:info:["Paths for merge " + taskId + ": tmp "+ tmpPath+ ", task "+ taskTmpPath+ ", final "+ finalPath+ ", out "+ outPath] @AT@ 4672 @LENGTH@ 151
---------DEL ClassInstanceCreation@@Exception[] @AT@ 4807 @LENGTH@ 15
------------DEL New@@new @AT@ 4807 @LENGTH@ 3
------------DEL SimpleType@@Exception @AT@ 4811 @LENGTH@ 9


UPD ExpressionStatement@@MethodInvocation:config.addOption(name.trim(),value.trim()) @TO@ MethodInvocation:config.addOption(name,value) @AT@ 6550 @LENGTH@ 44
---UPD MethodInvocation@@config.addOption(name.trim(),value.trim()) @TO@ config.addOption(name,value) @AT@ 6550 @LENGTH@ 43
------UPD SimpleName@@MethodName:addOption:[name.trim(), value.trim()] @TO@ MethodName:addOption:[name, value] @AT@ 6557 @LENGTH@ 36
---------DEL MethodInvocation@@name.trim() @AT@ 6567 @LENGTH@ 11
------------DEL SimpleName@@Name:name @AT@ 6567 @LENGTH@ 4
------------DEL SimpleName@@MethodName:trim:[] @AT@ 6572 @LENGTH@ 6
---------INS SimpleName@@name @TO@ SimpleName@@MethodName:addOption:[name.trim(), value.trim()] @AT@ 6567 @LENGTH@ 4
---------INS SimpleName@@value @TO@ SimpleName@@MethodName:addOption:[name.trim(), value.trim()] @AT@ 6573 @LENGTH@ 5
---------DEL MethodInvocation@@value.trim() @AT@ 6580 @LENGTH@ 12
------------DEL SimpleName@@Name:value @AT@ 6580 @LENGTH@ 5
------------DEL SimpleName@@MethodName:trim:[] @AT@ 6586 @LENGTH@ 6


UPD TypeDeclaration@@[@Configuration, @ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration"), @EnableConfigurationProperties(SchedulerComponentConfiguration.class), public]SchedulerComponentAutoConfiguration,  @TO@ [@Configuration, @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration"), @EnableConfigurationProperties(SchedulerComponentConfiguration.class), public]SchedulerComponentAutoConfiguration,  @AT@ 1634 @LENGTH@ 2097
---UPD NormalAnnotation@@@ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1649 @LENGTH@ 79
---UPD NormalAnnotation@@@AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1729 @LENGTH@ 80


UPD TypeDeclaration@@[@Configuration, @ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration"), @EnableConfigurationProperties(SyslogDataFormatConfiguration.class), public]SyslogDataFormatAutoConfiguration,  @TO@ [@Configuration, @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration"), @EnableConfigurationProperties(SyslogDataFormatConfiguration.class), public]SyslogDataFormatAutoConfiguration,  @AT@ 1669 @LENGTH@ 1126
---UPD NormalAnnotation@@@ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1684 @LENGTH@ 79
---UPD NormalAnnotation@@@AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1764 @LENGTH@ 80


UPD TypeDeclaration@@[@Configuration, @ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration"), public]DataSetComponentAutoConfiguration,  @TO@ [@Configuration, @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration"), public]DataSetComponentAutoConfiguration,  @AT@ 1447 @LENGTH@ 617
---UPD NormalAnnotation@@@ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1462 @LENGTH@ 79
---UPD NormalAnnotation@@@AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1542 @LENGTH@ 80


UPD FieldDeclaration@@private, final, String, [host="bizzy"] @TO@ private, final, String, [host="localhost"] @AT@ 1320 @LENGTH@ 36
---UPD VariableDeclarationFragment@@host="bizzy" @TO@ host="localhost" @AT@ 1341 @LENGTH@ 14
------UPD StringLiteral@@"bizzy" @TO@ "localhost" @AT@ 1348 @LENGTH@ 7


UPD TypeDeclaration@@[@Configuration, @ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration"), @EnableConfigurationProperties(XPathLanguageConfiguration.class), public]XPathLanguageAutoConfiguration,  @TO@ [@Configuration, @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration"), @EnableConfigurationProperties(XPathLanguageConfiguration.class), public]XPathLanguageAutoConfiguration,  @AT@ 1662 @LENGTH@ 1076
---UPD NormalAnnotation@@@ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1677 @LENGTH@ 79
---UPD NormalAnnotation@@@AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1757 @LENGTH@ 80


UPD TypeDeclaration@@[@Configuration, @ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration"), @EnableConfigurationProperties(BindyFixedLengthDataFormatConfiguration.class), public]BindyFixedLengthDataFormatAutoConfiguration,  @TO@ [@Configuration, @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration"), @EnableConfigurationProperties(BindyFixedLengthDataFormatConfiguration.class), public]BindyFixedLengthDataFormatAutoConfiguration,  @AT@ 1691 @LENGTH@ 1223
---UPD NormalAnnotation@@@ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1706 @LENGTH@ 79
---UPD NormalAnnotation@@@AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1786 @LENGTH@ 80


UPD MethodDeclaration@@public, void, MethodName:testNothing,  @TO@ public, void, MethodName:testDefaultDatasource, Exception,  @AT@ 1694 @LENGTH@ 34
---UPD SimpleName@@MethodName:testNothing @TO@ MethodName:testDefaultDatasource @AT@ 1706 @LENGTH@ 11
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:testNothing,  @AT@ 1942 @LENGTH@ 9
---INS VariableDeclarationStatement@@DataSource dataSource=(DataSource)context.lookup("java:jboss/datasources/ExampleDS"); @TO@ MethodDeclaration@@public, void, MethodName:testNothing,  @AT@ 1962 @LENGTH@ 88
------INS SimpleType@@DataSource @TO@ VariableDeclarationStatement@@DataSource dataSource=(DataSource)context.lookup("java:jboss/datasources/ExampleDS"); @AT@ 1962 @LENGTH@ 10
------INS VariableDeclarationFragment@@dataSource=(DataSource)context.lookup("java:jboss/datasources/ExampleDS") @TO@ VariableDeclarationStatement@@DataSource dataSource=(DataSource)context.lookup("java:jboss/datasources/ExampleDS"); @AT@ 1973 @LENGTH@ 76
---------INS SimpleName@@dataSource @TO@ VariableDeclarationFragment@@dataSource=(DataSource)context.lookup("java:jboss/datasources/ExampleDS") @AT@ 1973 @LENGTH@ 10
---------INS CastExpression@@(DataSource)context.lookup("java:jboss/datasources/ExampleDS") @TO@ VariableDeclarationFragment@@dataSource=(DataSource)context.lookup("java:jboss/datasources/ExampleDS") @AT@ 1986 @LENGTH@ 63
------------INS SimpleType@@DataSource @TO@ CastExpression@@(DataSource)context.lookup("java:jboss/datasources/ExampleDS") @AT@ 1987 @LENGTH@ 10
------------INS MethodInvocation@@context.lookup("java:jboss/datasources/ExampleDS") @TO@ CastExpression@@(DataSource)context.lookup("java:jboss/datasources/ExampleDS") @AT@ 1999 @LENGTH@ 50
---------------INS SimpleName@@Name:context @TO@ MethodInvocation@@context.lookup("java:jboss/datasources/ExampleDS") @AT@ 1999 @LENGTH@ 7
---------------INS SimpleName@@MethodName:lookup:["java:jboss/datasources/ExampleDS"] @TO@ MethodInvocation@@context.lookup("java:jboss/datasources/ExampleDS") @AT@ 2007 @LENGTH@ 42
------------------INS StringLiteral@@"java:jboss/datasources/ExampleDS" @TO@ SimpleName@@MethodName:lookup:["java:jboss/datasources/ExampleDS"] @AT@ 2014 @LENGTH@ 34
---INS ExpressionStatement@@MethodInvocation:assertNotNull(dataSource) @TO@ MethodDeclaration@@public, void, MethodName:testNothing,  @AT@ 2059 @LENGTH@ 26
------INS MethodInvocation@@assertNotNull(dataSource) @TO@ ExpressionStatement@@MethodInvocation:assertNotNull(dataSource) @AT@ 2059 @LENGTH@ 25
---------INS SimpleName@@MethodName:assertNotNull:[dataSource] @TO@ MethodInvocation@@assertNotNull(dataSource) @AT@ 2059 @LENGTH@ 25
------------INS SimpleName@@dataSource @TO@ SimpleName@@MethodName:assertNotNull:[dataSource] @AT@ 2073 @LENGTH@ 10


INS MethodDeclaration@@public, boolean, MethodName:isMmTable,  @TO@ TypeDeclaration@@[public]LoadTableDesc, org.apache.hadoop.hive.ql.plan.LoadDesc[Serializable] @AT@ 5493 @LENGTH@ 62
---INS Modifier@@public @TO@ MethodDeclaration@@public, boolean, MethodName:isMmTable,  @AT@ 5493 @LENGTH@ 6
---INS PrimitiveType@@boolean @TO@ MethodDeclaration@@public, boolean, MethodName:isMmTable,  @AT@ 5500 @LENGTH@ 7
---INS SimpleName@@MethodName:isMmTable @TO@ MethodDeclaration@@public, boolean, MethodName:isMmTable,  @AT@ 5508 @LENGTH@ 9
---INS ReturnStatement@@InfixExpression:mmWriteId != null @TO@ MethodDeclaration@@public, boolean, MethodName:isMmTable,  @AT@ 5526 @LENGTH@ 25
------INS InfixExpression@@mmWriteId != null @TO@ ReturnStatement@@InfixExpression:mmWriteId != null @AT@ 5533 @LENGTH@ 17
---------INS SimpleName@@mmWriteId @TO@ InfixExpression@@mmWriteId != null @AT@ 5533 @LENGTH@ 9
---------INS Operator@@!= @TO@ InfixExpression@@mmWriteId != null @AT@ 5542 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@mmWriteId != null @AT@ 5546 @LENGTH@ 4


UPD Block@@WhileBody:{  final Interval interval=intervals.get(posIntervals);  final long expectedRange=rangeSize - currTime;  if (interval.getEndMillis() - startTime >= expectedRange) {    endTime=startTime + expectedRange;    currentIntervals.add(new Interval(startTime,endTime));    startTime=endTime;    currTime=0;    break;  }  endTime=interval.getEndMillis();  currentIntervals.add(new Interval(startTime,endTime));  currTime+=(endTime - startTime);  startTime=intervals.get(++posIntervals).getStartMillis();} @TO@ WhileBody:{  final Interval interval=intervals.get(posIntervals);  final long expectedRange=rangeSize - currTime;  if (interval.getEndMillis() - startTime >= expectedRange) {    endTime=startTime + expectedRange;    currentIntervals.add(new Interval(startTime,endTime,ISOChronology.getInstanceUTC()));    startTime=endTime;    currTime=0;    break;  }  endTime=interval.getEndMillis();  currentIntervals.add(new Interval(startTime,endTime,ISOChronology.getInstanceUTC()));  currTime+=(endTime - startTime);  startTime=intervals.get(++posIntervals).getStartMillis();} @AT@ 12558 @LENGTH@ 610
---UPD IfStatement@@if (interval.getEndMillis() - startTime >= expectedRange) {  endTime=startTime + expectedRange;  currentIntervals.add(new Interval(startTime,endTime));  startTime=endTime;  currTime=0;  break;} @TO@ if (interval.getEndMillis() - startTime >= expectedRange) {  endTime=startTime + expectedRange;  currentIntervals.add(new Interval(startTime,endTime,ISOChronology.getInstanceUTC()));  startTime=endTime;  currTime=0;  break;} @AT@ 12688 @LENGTH@ 254
------UPD Block@@ThenBody:{  endTime=startTime + expectedRange;  currentIntervals.add(new Interval(startTime,endTime));  startTime=endTime;  currTime=0;  break;} @TO@ ThenBody:{  endTime=startTime + expectedRange;  currentIntervals.add(new Interval(startTime,endTime,ISOChronology.getInstanceUTC()));  startTime=endTime;  currTime=0;  break;} @AT@ 12746 @LENGTH@ 196
---------UPD ExpressionStatement@@MethodInvocation:currentIntervals.add(new Interval(startTime,endTime)) @TO@ MethodInvocation:currentIntervals.add(new Interval(startTime,endTime,ISOChronology.getInstanceUTC())) @AT@ 12805 @LENGTH@ 55
------------UPD MethodInvocation@@currentIntervals.add(new Interval(startTime,endTime)) @TO@ currentIntervals.add(new Interval(startTime,endTime,ISOChronology.getInstanceUTC())) @AT@ 12805 @LENGTH@ 54
---------------UPD SimpleName@@MethodName:add:[new Interval(startTime,endTime)] @TO@ MethodName:add:[new Interval(startTime,endTime,ISOChronology.getInstanceUTC())] @AT@ 12822 @LENGTH@ 37
------------------UPD ClassInstanceCreation@@Interval[startTime, endTime] @TO@ Interval[startTime, endTime, ISOChronology.getInstanceUTC()] @AT@ 12826 @LENGTH@ 32
---------------------INS MethodInvocation@@ISOChronology.getInstanceUTC() @TO@ ClassInstanceCreation@@Interval[startTime, endTime] @AT@ 12891 @LENGTH@ 30
------------------------INS SimpleName@@Name:ISOChronology @TO@ MethodInvocation@@ISOChronology.getInstanceUTC() @AT@ 12891 @LENGTH@ 13
------------------------INS SimpleName@@MethodName:getInstanceUTC:[] @TO@ MethodInvocation@@ISOChronology.getInstanceUTC() @AT@ 12905 @LENGTH@ 16
---UPD ExpressionStatement@@MethodInvocation:currentIntervals.add(new Interval(startTime,endTime)) @TO@ MethodInvocation:currentIntervals.add(new Interval(startTime,endTime,ISOChronology.getInstanceUTC())) @AT@ 12994 @LENGTH@ 55
------UPD MethodInvocation@@currentIntervals.add(new Interval(startTime,endTime)) @TO@ currentIntervals.add(new Interval(startTime,endTime,ISOChronology.getInstanceUTC())) @AT@ 12994 @LENGTH@ 54
---------UPD SimpleName@@MethodName:add:[new Interval(startTime,endTime)] @TO@ MethodName:add:[new Interval(startTime,endTime,ISOChronology.getInstanceUTC())] @AT@ 13011 @LENGTH@ 37
------------UPD ClassInstanceCreation@@Interval[startTime, endTime] @TO@ Interval[startTime, endTime, ISOChronology.getInstanceUTC()] @AT@ 13015 @LENGTH@ 32
---------------INS MethodInvocation@@ISOChronology.getInstanceUTC() @TO@ ClassInstanceCreation@@Interval[startTime, endTime] @AT@ 13112 @LENGTH@ 30
------------------INS SimpleName@@Name:ISOChronology @TO@ MethodInvocation@@ISOChronology.getInstanceUTC() @AT@ 13112 @LENGTH@ 13
------------------INS SimpleName@@MethodName:getInstanceUTC:[] @TO@ MethodInvocation@@ISOChronology.getInstanceUTC() @AT@ 13126 @LENGTH@ 16


INS MethodDeclaration@@public, static, void, MethodName:installProvider,  @TO@ TypeDeclaration@@[public]PropertiesAuthenticationDigestedTestCase, SecurityRealmTestBase @AT@ 2768 @LENGTH@ 112
---INS Modifier@@public @TO@ MethodDeclaration@@public, static, void, MethodName:installProvider,  @AT@ 2768 @LENGTH@ 6
---INS Modifier@@static @TO@ MethodDeclaration@@public, static, void, MethodName:installProvider,  @AT@ 2775 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, static, void, MethodName:installProvider,  @AT@ 2782 @LENGTH@ 4
---INS SimpleName@@MethodName:installProvider @TO@ MethodDeclaration@@public, static, void, MethodName:installProvider,  @AT@ 2787 @LENGTH@ 15
---INS ExpressionStatement@@MethodInvocation:Security.insertProviderAt(new WildFlyElytronProvider(),0) @TO@ MethodDeclaration@@public, static, void, MethodName:installProvider,  @AT@ 2815 @LENGTH@ 59
------INS MethodInvocation@@Security.insertProviderAt(new WildFlyElytronProvider(),0) @TO@ ExpressionStatement@@MethodInvocation:Security.insertProviderAt(new WildFlyElytronProvider(),0) @AT@ 2815 @LENGTH@ 58
---------INS SimpleName@@Name:Security @TO@ MethodInvocation@@Security.insertProviderAt(new WildFlyElytronProvider(),0) @AT@ 2815 @LENGTH@ 8
---------INS SimpleName@@MethodName:insertProviderAt:[new WildFlyElytronProvider(), 0] @TO@ MethodInvocation@@Security.insertProviderAt(new WildFlyElytronProvider(),0) @AT@ 2824 @LENGTH@ 49
------------INS ClassInstanceCreation@@WildFlyElytronProvider[] @TO@ SimpleName@@MethodName:insertProviderAt:[new WildFlyElytronProvider(), 0] @AT@ 2841 @LENGTH@ 28
---------------INS New@@new @TO@ ClassInstanceCreation@@WildFlyElytronProvider[] @AT@ 2841 @LENGTH@ 3
---------------INS SimpleType@@WildFlyElytronProvider @TO@ ClassInstanceCreation@@WildFlyElytronProvider[] @AT@ 2845 @LENGTH@ 22
------------INS NumberLiteral@@0 @TO@ SimpleName@@MethodName:insertProviderAt:[new WildFlyElytronProvider(), 0] @AT@ 2871 @LENGTH@ 1


UPD MethodDeclaration@@public, voidMethodName:SampleComponent, boolean fallback,  @TO@ voidMethodName:SampleComponent, boolean fallback,  @AT@ 2828 @LENGTH@ 90
---DEL Modifier@@public @AT@ 2828 @LENGTH@ 6


UPD TypeDeclaration@@[@JsonTypeInfo(use=JsonTypeInfo.Id.CLASS,include=JsonTypeInfo.As.PROPERTY)]UnmodifiableSetMixin,  @TO@ [@JsonTypeInfo(use=JsonTypeInfo.Id.CLASS,include=JsonTypeInfo.As.PROPERTY), @JsonDeserialize(using=UnmodifiableSetDeserializer.class)]UnmodifiableSetMixin,  @AT@ 1192 @LENGTH@ 212
---INS NormalAnnotation@@@JsonDeserialize(using=UnmodifiableSetDeserializer.class) @TO@ TypeDeclaration@@[@JsonTypeInfo(use=JsonTypeInfo.Id.CLASS,include=JsonTypeInfo.As.PROPERTY)]UnmodifiableSetMixin,  @AT@ 1373 @LENGTH@ 59


UPD TypeDeclaration@@[@Configuration, @ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration"), @EnableConfigurationProperties(GooglePubsubComponentConfiguration.class), public]GooglePubsubComponentAutoConfiguration,  @TO@ [@Configuration, @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration"), @EnableConfigurationProperties(GooglePubsubComponentConfiguration.class), public]GooglePubsubComponentAutoConfiguration,  @AT@ 1645 @LENGTH@ 2125
---UPD NormalAnnotation@@@ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1660 @LENGTH@ 79
---UPD NormalAnnotation@@@AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1740 @LENGTH@ 80


INS IfStatement@@if (!this.hollow) {  this.properties.put(BootstrapProperties.APP_ARTIFACT,this.projectAsset.getSimpleName());} @TO@ MethodDeclaration@@private, void, MethodName:addWildFlySwarmApplicationManifest,  @AT@ 14578 @LENGTH@ 131
---INS PrefixExpression@@!this.hollow @TO@ IfStatement@@if (!this.hollow) {  this.properties.put(BootstrapProperties.APP_ARTIFACT,this.projectAsset.getSimpleName());} @AT@ 14582 @LENGTH@ 12
------INS Operator@@! @TO@ PrefixExpression@@!this.hollow @AT@ 14582 @LENGTH@ 1
------INS FieldAccess@@this.hollow @TO@ PrefixExpression@@!this.hollow @AT@ 14583 @LENGTH@ 11
---------INS ThisExpression@@this @TO@ FieldAccess@@this.hollow @AT@ 14583 @LENGTH@ 4
---------INS SimpleName@@hollow @TO@ FieldAccess@@this.hollow @AT@ 14588 @LENGTH@ 6
---INS Block@@ThenBody:{  this.properties.put(BootstrapProperties.APP_ARTIFACT,this.projectAsset.getSimpleName());} @TO@ IfStatement@@if (!this.hollow) {  this.properties.put(BootstrapProperties.APP_ARTIFACT,this.projectAsset.getSimpleName());} @AT@ 14596 @LENGTH@ 113
------MOV ExpressionStatement@@MethodInvocation:this.properties.put(BootstrapProperties.APP_ARTIFACT,this.projectAsset.getSimpleName()) @TO@ Block@@ThenBody:{  this.properties.put(BootstrapProperties.APP_ARTIFACT,this.projectAsset.getSimpleName());} @AT@ 14247 @LENGTH@ 89


UPD FieldDeclaration@@private, static, GraphDatabaseService, [graphDatabaseService=getGraphDatabaseService()] @TO@ private, static, GraphDatabaseService, [graphDatabaseService] @AT@ 1918 @LENGTH@ 85
---UPD VariableDeclarationFragment@@graphDatabaseService=getGraphDatabaseService() @TO@ graphDatabaseService @AT@ 1954 @LENGTH@ 48
------DEL MethodInvocation@@MethodName:getGraphDatabaseService:[] @AT@ 1977 @LENGTH@ 25


INS MethodDeclaration@@public, void, MethodName:doesNotQualifySortIfNoAliasDetected,  @TO@ TypeDeclaration@@[public]QueryUtilsUnitTests,  @AT@ 10008 @LENGTH@ 178
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:doesNotQualifySortIfNoAliasDetected,  @AT@ 10008 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:doesNotQualifySortIfNoAliasDetected,  @AT@ 10015 @LENGTH@ 4
---INS SimpleName@@MethodName:doesNotQualifySortIfNoAliasDetected @TO@ MethodDeclaration@@public, void, MethodName:doesNotQualifySortIfNoAliasDetected,  @AT@ 10020 @LENGTH@ 35
---INS ExpressionStatement@@MethodInvocation:assertThat(applySorting("from mytable where ?1 is null",new Sort("firstname")),endsWith("order by firstname asc")) @TO@ MethodDeclaration@@public, void, MethodName:doesNotQualifySortIfNoAliasDetected,  @AT@ 10062 @LENGTH@ 121
------INS MethodInvocation@@assertThat(applySorting("from mytable where ?1 is null",new Sort("firstname")),endsWith("order by firstname asc")) @TO@ ExpressionStatement@@MethodInvocation:assertThat(applySorting("from mytable where ?1 is null",new Sort("firstname")),endsWith("order by firstname asc")) @AT@ 10062 @LENGTH@ 120
---------INS SimpleName@@MethodName:assertThat:[applySorting("from mytable where ?1 is null",new Sort("firstname")), endsWith("order by firstname asc")] @TO@ MethodInvocation@@assertThat(applySorting("from mytable where ?1 is null",new Sort("firstname")),endsWith("order by firstname asc")) @AT@ 10062 @LENGTH@ 120
------------INS MethodInvocation@@applySorting("from mytable where ?1 is null",new Sort("firstname")) @TO@ SimpleName@@MethodName:assertThat:[applySorting("from mytable where ?1 is null",new Sort("firstname")), endsWith("order by firstname asc")] @AT@ 10073 @LENGTH@ 68
---------------INS SimpleName@@MethodName:applySorting:["from mytable where ?1 is null", new Sort("firstname")] @TO@ MethodInvocation@@applySorting("from mytable where ?1 is null",new Sort("firstname")) @AT@ 10073 @LENGTH@ 68
------------------INS StringLiteral@@"from mytable where ?1 is null" @TO@ SimpleName@@MethodName:applySorting:["from mytable where ?1 is null", new Sort("firstname")] @AT@ 10086 @LENGTH@ 31
------------------INS ClassInstanceCreation@@Sort["firstname"] @TO@ SimpleName@@MethodName:applySorting:["from mytable where ?1 is null", new Sort("firstname")] @AT@ 10119 @LENGTH@ 21
---------------------INS New@@new @TO@ ClassInstanceCreation@@Sort["firstname"] @AT@ 10119 @LENGTH@ 3
---------------------INS SimpleType@@Sort @TO@ ClassInstanceCreation@@Sort["firstname"] @AT@ 10123 @LENGTH@ 4
---------------------INS StringLiteral@@"firstname" @TO@ ClassInstanceCreation@@Sort["firstname"] @AT@ 10128 @LENGTH@ 11
---------------INS SimpleName@@MethodName:applySorting:["from mytable where ?1 is null", new Sort("firstname")] @TO@ MethodInvocation@@applySorting("from mytable where ?1 is null",new Sort("firstname")) @AT@ 10073 @LENGTH@ 68
------------------INS StringLiteral@@"from mytable where ?1 is null" @TO@ SimpleName@@MethodName:applySorting:["from mytable where ?1 is null", new Sort("firstname")] @AT@ 10086 @LENGTH@ 31
------------------INS ClassInstanceCreation@@Sort["firstname"] @TO@ SimpleName@@MethodName:applySorting:["from mytable where ?1 is null", new Sort("firstname")] @AT@ 10119 @LENGTH@ 21
---------------------INS New@@new @TO@ ClassInstanceCreation@@Sort["firstname"] @AT@ 10119 @LENGTH@ 3
---------------------INS SimpleType@@Sort @TO@ ClassInstanceCreation@@Sort["firstname"] @AT@ 10123 @LENGTH@ 4
---------------------INS StringLiteral@@"firstname" @TO@ ClassInstanceCreation@@Sort["firstname"] @AT@ 10128 @LENGTH@ 11
------------INS MethodInvocation@@endsWith("order by firstname asc") @TO@ SimpleName@@MethodName:assertThat:[applySorting("from mytable where ?1 is null",new Sort("firstname")), endsWith("order by firstname asc")] @AT@ 10147 @LENGTH@ 34
---------------INS SimpleName@@MethodName:endsWith:["order by firstname asc"] @TO@ MethodInvocation@@endsWith("order by firstname asc") @AT@ 10147 @LENGTH@ 34
------------------INS StringLiteral@@"order by firstname asc" @TO@ SimpleName@@MethodName:endsWith:["order by firstname asc"] @AT@ 10156 @LENGTH@ 24
---------------INS SimpleName@@MethodName:endsWith:["order by firstname asc"] @TO@ MethodInvocation@@endsWith("order by firstname asc") @AT@ 10147 @LENGTH@ 34
------------------INS StringLiteral@@"order by firstname asc" @TO@ SimpleName@@MethodName:endsWith:["order by firstname asc"] @AT@ 10156 @LENGTH@ 24


UPD TypeDeclaration@@[@Configuration, @ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration"), @EnableConfigurationProperties(BindyCsvDataFormatConfiguration.class), public]BindyCsvDataFormatAutoConfiguration,  @TO@ [@Configuration, @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration"), @EnableConfigurationProperties(BindyCsvDataFormatConfiguration.class), public]BindyCsvDataFormatAutoConfiguration,  @AT@ 1679 @LENGTH@ 1145
---UPD NormalAnnotation@@@ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1694 @LENGTH@ 79
---UPD NormalAnnotation@@@AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1774 @LENGTH@ 80


UPD ExpressionStatement@@MethodInvocation:deps.stream().forEach(spec -> {
  if (projects.containsKey(spec.groupId() + ":" + spec.artifactId()+ ":"+ spec.version())) {
    dependencySet.add(new DefaultProjectDependency((ProjectInternal)projects.get(spec.groupId() + ":" + spec.artifactId()+ ":"+ spec.version()),new DefaultProjectAccessListener(),false));
  }
 else {
    final DefaultExternalModuleDependency d=new DefaultExternalModuleDependency(spec.groupId(),spec.artifactId(),spec.version());
    final DefaultDependencyArtifact da=new DefaultDependencyArtifact(spec.artifactId(),spec.type(),spec.type(),spec.classifier(),null);
    d.addArtifact(da);
    dependencySet.add(d);
  }
}
) @TO@ MethodInvocation:deps.forEach(spec -> {
  if (projects.containsKey(spec.groupId() + ":" + spec.artifactId()+ ":"+ spec.version())) {
    dependencySet.add(new DefaultProjectDependency((ProjectInternal)projects.get(spec.groupId() + ":" + spec.artifactId()+ ":"+ spec.version()),new DefaultProjectAccessListener(),false));
  }
 else {
    final DefaultExternalModuleDependency d=new DefaultExternalModuleDependency(spec.groupId(),spec.artifactId(),spec.version());
    final DefaultDependencyArtifact da=new DefaultDependencyArtifact(spec.artifactId(),spec.type(),spec.type(),spec.classifier(),null);
    d.addArtifact(da);
    dependencySet.add(d);
  }
}
) @AT@ 3857 @LENGTH@ 914
---UPD MethodInvocation@@deps.stream().forEach(spec -> {
  if (projects.containsKey(spec.groupId() + ":" + spec.artifactId()+ ":"+ spec.version())) {
    dependencySet.add(new DefaultProjectDependency((ProjectInternal)projects.get(spec.groupId() + ":" + spec.artifactId()+ ":"+ spec.version()),new DefaultProjectAccessListener(),false));
  }
 else {
    final DefaultExternalModuleDependency d=new DefaultExternalModuleDependency(spec.groupId(),spec.artifactId(),spec.version());
    final DefaultDependencyArtifact da=new DefaultDependencyArtifact(spec.artifactId(),spec.type(),spec.type(),spec.classifier(),null);
    d.addArtifact(da);
    dependencySet.add(d);
  }
}
) @TO@ deps.forEach(spec -> {
  if (projects.containsKey(spec.groupId() + ":" + spec.artifactId()+ ":"+ spec.version())) {
    dependencySet.add(new DefaultProjectDependency((ProjectInternal)projects.get(spec.groupId() + ":" + spec.artifactId()+ ":"+ spec.version()),new DefaultProjectAccessListener(),false));
  }
 else {
    final DefaultExternalModuleDependency d=new DefaultExternalModuleDependency(spec.groupId(),spec.artifactId(),spec.version());
    final DefaultDependencyArtifact da=new DefaultDependencyArtifact(spec.artifactId(),spec.type(),spec.type(),spec.classifier(),null);
    d.addArtifact(da);
    dependencySet.add(d);
  }
}
) @AT@ 3857 @LENGTH@ 913
------DEL MethodInvocation@@MethodName:stream:[] @AT@ 3857 @LENGTH@ 13


UPD TypeDeclaration@@[@Configuration, @ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration"), @EnableConfigurationProperties(FlinkComponentConfiguration.class), public]FlinkComponentAutoConfiguration,  @TO@ [@Configuration, @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration"), @EnableConfigurationProperties(FlinkComponentConfiguration.class), public]FlinkComponentAutoConfiguration,  @AT@ 1622 @LENGTH@ 2048
---UPD NormalAnnotation@@@ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1637 @LENGTH@ 79
---UPD NormalAnnotation@@@AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1717 @LENGTH@ 80


UPD ExpressionStatement@@MethodInvocation:Assert.assertTrue(getUrlContents("http://localhost:8080/app/health-insecure").contains("UP")) @TO@ MethodInvocation:Assert.assertTrue(getUrlContents("http://localhost:8080/health/app/health-secure").contains("UP")) @AT@ 1917 @LENGTH@ 94
---UPD MethodInvocation@@Assert.assertTrue(getUrlContents("http://localhost:8080/app/health-insecure").contains("UP")) @TO@ Assert.assertTrue(getUrlContents("http://localhost:8080/health/app/health-secure").contains("UP")) @AT@ 1917 @LENGTH@ 93
------UPD SimpleName@@MethodName:assertTrue:[getUrlContents("http://localhost:8080/app/health-insecure").contains("UP")] @TO@ MethodName:assertTrue:[getUrlContents("http://localhost:8080/health/app/health-secure").contains("UP")] @AT@ 1924 @LENGTH@ 86
---------UPD MethodInvocation@@getUrlContents("http://localhost:8080/app/health-insecure").contains("UP") @TO@ getUrlContents("http://localhost:8080/health/app/health-secure").contains("UP") @AT@ 1935 @LENGTH@ 74
------------UPD MethodInvocation@@MethodName:getUrlContents:["http://localhost:8080/app/health-insecure"] @TO@ MethodName:getUrlContents:["http://localhost:8080/health/app/health-secure"] @AT@ 1935 @LENGTH@ 59
---------------UPD StringLiteral@@"http://localhost:8080/app/health-insecure" @TO@ "http://localhost:8080/health/app/health-secure" @AT@ 1950 @LENGTH@ 43


UPD TypeDeclaration@@[@Configuration, @ComponentScan(basePackages="org.springframework.data.neo4j.transactions",excludeFilters=@ComponentScan.Filter(type=FilterType.REGEX,pattern="org\\.springframework\\.data\\.neo4j\\.transactions\\.TransactionalEventListenerTests.*")), @EnableTransactionManagement, @EnableNeo4jRepositories, public]ProxiedPrototypeSessionBeanContext, Neo4jConfiguration @TO@ [@Configuration, @ComponentScan(basePackages="org.springframework.data.neo4j.transactions.service"), @EnableTransactionManagement, @EnableNeo4jRepositories, public]ProxiedPrototypeSessionBeanContext, Neo4jConfiguration @AT@ 510 @LENGTH@ 833
---UPD NormalAnnotation@@@ComponentScan(basePackages="org.springframework.data.neo4j.transactions",excludeFilters=@ComponentScan.Filter(type=FilterType.REGEX,pattern="org\\.springframework\\.data\\.neo4j\\.transactions\\.TransactionalEventListenerTests.*")) @TO@ @ComponentScan(basePackages="org.springframework.data.neo4j.transactions.service") @AT@ 525 @LENGTH@ 282


UPD TypeDeclaration@@[@Configuration, @ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration"), @EnableConfigurationProperties(LZFDataFormatConfiguration.class), public]LZFDataFormatAutoConfiguration,  @TO@ [@Configuration, @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration"), @EnableConfigurationProperties(LZFDataFormatConfiguration.class), public]LZFDataFormatAutoConfiguration,  @AT@ 1662 @LENGTH@ 1086
---UPD NormalAnnotation@@@ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1677 @LENGTH@ 79
---UPD NormalAnnotation@@@AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1757 @LENGTH@ 80


INS MethodDeclaration@@public, void, MethodName:testFileBasedConfigurationBuilderWithHomeDirectoryLocationStrategy, IOException, ConfigurationException,  @TO@ TypeDeclaration@@[public]TestFileBasedConfigurationBuilder,  @AT@ 20734 @LENGTH@ 1257
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testFileBasedConfigurationBuilderWithHomeDirectoryLocationStrategy, IOException, ConfigurationException,  @AT@ 20734 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testFileBasedConfigurationBuilderWithHomeDirectoryLocationStrategy, IOException, ConfigurationException,  @AT@ 20741 @LENGTH@ 4
---INS SimpleName@@MethodName:testFileBasedConfigurationBuilderWithHomeDirectoryLocationStrategy @TO@ MethodDeclaration@@public, void, MethodName:testFileBasedConfigurationBuilderWithHomeDirectoryLocationStrategy, IOException, ConfigurationException,  @AT@ 20746 @LENGTH@ 66
---INS SimpleType@@IOException @TO@ MethodDeclaration@@public, void, MethodName:testFileBasedConfigurationBuilderWithHomeDirectoryLocationStrategy, IOException, ConfigurationException,  @AT@ 20834 @LENGTH@ 11
---INS SimpleType@@ConfigurationException @TO@ MethodDeclaration@@public, void, MethodName:testFileBasedConfigurationBuilderWithHomeDirectoryLocationStrategy, IOException, ConfigurationException,  @AT@ 20847 @LENGTH@ 22
---INS VariableDeclarationStatement@@String folderName="test"; @TO@ MethodDeclaration@@public, void, MethodName:testFileBasedConfigurationBuilderWithHomeDirectoryLocationStrategy, IOException, ConfigurationException,  @AT@ 20884 @LENGTH@ 27
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String folderName="test"; @AT@ 20884 @LENGTH@ 6
------INS VariableDeclarationFragment@@folderName="test" @TO@ VariableDeclarationStatement@@String folderName="test"; @AT@ 20891 @LENGTH@ 19
---------INS SimpleName@@folderName @TO@ VariableDeclarationFragment@@folderName="test" @AT@ 20891 @LENGTH@ 10
---------INS StringLiteral@@"test" @TO@ VariableDeclarationFragment@@folderName="test" @AT@ 20904 @LENGTH@ 6
---INS VariableDeclarationStatement@@String fileName="sample.properties"; @TO@ MethodDeclaration@@public, void, MethodName:testFileBasedConfigurationBuilderWithHomeDirectoryLocationStrategy, IOException, ConfigurationException,  @AT@ 20920 @LENGTH@ 38
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String fileName="sample.properties"; @AT@ 20920 @LENGTH@ 6
------INS VariableDeclarationFragment@@fileName="sample.properties" @TO@ VariableDeclarationStatement@@String fileName="sample.properties"; @AT@ 20927 @LENGTH@ 30
---------INS SimpleName@@fileName @TO@ VariableDeclarationFragment@@fileName="sample.properties" @AT@ 20927 @LENGTH@ 8
---------INS StringLiteral@@"sample.properties" @TO@ VariableDeclarationFragment@@fileName="sample.properties" @AT@ 20938 @LENGTH@ 19
---INS ExpressionStatement@@MethodInvocation:folder.newFolder(folderName) @TO@ MethodDeclaration@@public, void, MethodName:testFileBasedConfigurationBuilderWithHomeDirectoryLocationStrategy, IOException, ConfigurationException,  @AT@ 20967 @LENGTH@ 29
------INS MethodInvocation@@folder.newFolder(folderName) @TO@ ExpressionStatement@@MethodInvocation:folder.newFolder(folderName) @AT@ 20967 @LENGTH@ 28
---------INS SimpleName@@Name:folder @TO@ MethodInvocation@@folder.newFolder(folderName) @AT@ 20967 @LENGTH@ 6
---------INS SimpleName@@MethodName:newFolder:[folderName] @TO@ MethodInvocation@@folder.newFolder(folderName) @AT@ 20974 @LENGTH@ 21
------------INS SimpleName@@folderName @TO@ SimpleName@@MethodName:newFolder:[folderName] @AT@ 20984 @LENGTH@ 10
---INS ExpressionStatement@@MethodInvocation:folder.newFile(folderName + File.separatorChar + fileName) @TO@ MethodDeclaration@@public, void, MethodName:testFileBasedConfigurationBuilderWithHomeDirectoryLocationStrategy, IOException, ConfigurationException,  @AT@ 21005 @LENGTH@ 59
------INS MethodInvocation@@folder.newFile(folderName + File.separatorChar + fileName) @TO@ ExpressionStatement@@MethodInvocation:folder.newFile(folderName + File.separatorChar + fileName) @AT@ 21005 @LENGTH@ 58
---------INS SimpleName@@Name:folder @TO@ MethodInvocation@@folder.newFile(folderName + File.separatorChar + fileName) @AT@ 21005 @LENGTH@ 6
---------INS SimpleName@@MethodName:newFile:[folderName + File.separatorChar + fileName] @TO@ MethodInvocation@@folder.newFile(folderName + File.separatorChar + fileName) @AT@ 21012 @LENGTH@ 51
------------INS InfixExpression@@folderName + File.separatorChar + fileName @TO@ SimpleName@@MethodName:newFile:[folderName + File.separatorChar + fileName] @AT@ 21020 @LENGTH@ 42
---------------INS SimpleName@@folderName @TO@ InfixExpression@@folderName + File.separatorChar + fileName @AT@ 21020 @LENGTH@ 10
---------------INS Operator@@+ @TO@ InfixExpression@@folderName + File.separatorChar + fileName @AT@ 21030 @LENGTH@ 1
---------------INS QualifiedName@@File.separatorChar @TO@ InfixExpression@@folderName + File.separatorChar + fileName @AT@ 21033 @LENGTH@ 18
------------------INS SimpleName@@File @TO@ QualifiedName@@File.separatorChar @AT@ 21033 @LENGTH@ 4
------------------INS SimpleName@@separatorChar @TO@ QualifiedName@@File.separatorChar @AT@ 21038 @LENGTH@ 13
---------------INS SimpleName@@fileName @TO@ InfixExpression@@folderName + File.separatorChar + fileName @AT@ 21054 @LENGTH@ 8
---INS VariableDeclarationStatement@@FileBasedConfigurationBuilder<FileBasedConfiguration> homeDirConfigurationBuilder=new FileBasedConfigurationBuilder<FileBasedConfiguration>(PropertiesConfiguration.class); @TO@ MethodDeclaration@@public, void, MethodName:testFileBasedConfigurationBuilderWithHomeDirectoryLocationStrategy, IOException, ConfigurationException,  @AT@ 21073 @LENGTH@ 214
------INS ParameterizedType@@FileBasedConfigurationBuilder<FileBasedConfiguration> @TO@ VariableDeclarationStatement@@FileBasedConfigurationBuilder<FileBasedConfiguration> homeDirConfigurationBuilder=new FileBasedConfigurationBuilder<FileBasedConfiguration>(PropertiesConfiguration.class); @AT@ 21073 @LENGTH@ 53
---------INS SimpleType@@FileBasedConfigurationBuilder @TO@ ParameterizedType@@FileBasedConfigurationBuilder<FileBasedConfiguration> @AT@ 21073 @LENGTH@ 29
---------INS SimpleType@@FileBasedConfiguration @TO@ ParameterizedType@@FileBasedConfigurationBuilder<FileBasedConfiguration> @AT@ 21103 @LENGTH@ 22
------INS VariableDeclarationFragment@@homeDirConfigurationBuilder=new FileBasedConfigurationBuilder<FileBasedConfiguration>(PropertiesConfiguration.class) @TO@ VariableDeclarationStatement@@FileBasedConfigurationBuilder<FileBasedConfiguration> homeDirConfigurationBuilder=new FileBasedConfigurationBuilder<FileBasedConfiguration>(PropertiesConfiguration.class); @AT@ 21127 @LENGTH@ 159
---------INS SimpleName@@homeDirConfigurationBuilder @TO@ VariableDeclarationFragment@@homeDirConfigurationBuilder=new FileBasedConfigurationBuilder<FileBasedConfiguration>(PropertiesConfiguration.class) @AT@ 21127 @LENGTH@ 27
---------INS ClassInstanceCreation@@FileBasedConfigurationBuilder<FileBasedConfiguration>[PropertiesConfiguration.class] @TO@ VariableDeclarationFragment@@homeDirConfigurationBuilder=new FileBasedConfigurationBuilder<FileBasedConfiguration>(PropertiesConfiguration.class) @AT@ 21173 @LENGTH@ 113
------------INS New@@new @TO@ ClassInstanceCreation@@FileBasedConfigurationBuilder<FileBasedConfiguration>[PropertiesConfiguration.class] @AT@ 21173 @LENGTH@ 3
------------INS ParameterizedType@@FileBasedConfigurationBuilder<FileBasedConfiguration> @TO@ ClassInstanceCreation@@FileBasedConfigurationBuilder<FileBasedConfiguration>[PropertiesConfiguration.class] @AT@ 21177 @LENGTH@ 53
---------------INS SimpleType@@FileBasedConfigurationBuilder @TO@ ParameterizedType@@FileBasedConfigurationBuilder<FileBasedConfiguration> @AT@ 21177 @LENGTH@ 29
---------------INS SimpleType@@FileBasedConfiguration @TO@ ParameterizedType@@FileBasedConfigurationBuilder<FileBasedConfiguration> @AT@ 21207 @LENGTH@ 22
------------INS TypeLiteral@@PropertiesConfiguration.class @TO@ ClassInstanceCreation@@FileBasedConfigurationBuilder<FileBasedConfiguration>[PropertiesConfiguration.class] @AT@ 21256 @LENGTH@ 29
---INS VariableDeclarationStatement@@PropertiesBuilderParameters homeDirProperties=new Parameters().properties(); @TO@ MethodDeclaration@@public, void, MethodName:testFileBasedConfigurationBuilderWithHomeDirectoryLocationStrategy, IOException, ConfigurationException,  @AT@ 21296 @LENGTH@ 94
------INS SimpleType@@PropertiesBuilderParameters @TO@ VariableDeclarationStatement@@PropertiesBuilderParameters homeDirProperties=new Parameters().properties(); @AT@ 21296 @LENGTH@ 27
------INS VariableDeclarationFragment@@homeDirProperties=new Parameters().properties() @TO@ VariableDeclarationStatement@@PropertiesBuilderParameters homeDirProperties=new Parameters().properties(); @AT@ 21324 @LENGTH@ 65
---------INS SimpleName@@homeDirProperties @TO@ VariableDeclarationFragment@@homeDirProperties=new Parameters().properties() @AT@ 21324 @LENGTH@ 17
---------INS MethodInvocation@@new Parameters().properties() @TO@ VariableDeclarationFragment@@homeDirProperties=new Parameters().properties() @AT@ 21360 @LENGTH@ 29
------------INS ClassInstanceCreation@@Parameters[] @TO@ MethodInvocation@@new Parameters().properties() @AT@ 21360 @LENGTH@ 16
---------------INS New@@new @TO@ ClassInstanceCreation@@Parameters[] @AT@ 21360 @LENGTH@ 3
---------------INS SimpleType@@Parameters @TO@ ClassInstanceCreation@@Parameters[] @AT@ 21364 @LENGTH@ 10
------------INS SimpleName@@MethodName:properties:[] @TO@ MethodInvocation@@new Parameters().properties() @AT@ 21377 @LENGTH@ 12
---INS VariableDeclarationStatement@@HomeDirectoryLocationStrategy strategy=new HomeDirectoryLocationStrategy(folder.getRoot().getAbsolutePath(),true); @TO@ MethodDeclaration@@public, void, MethodName:testFileBasedConfigurationBuilderWithHomeDirectoryLocationStrategy, IOException, ConfigurationException,  @AT@ 21399 @LENGTH@ 158
------INS SimpleType@@HomeDirectoryLocationStrategy @TO@ VariableDeclarationStatement@@HomeDirectoryLocationStrategy strategy=new HomeDirectoryLocationStrategy(folder.getRoot().getAbsolutePath(),true); @AT@ 21399 @LENGTH@ 29
------INS VariableDeclarationFragment@@strategy=new HomeDirectoryLocationStrategy(folder.getRoot().getAbsolutePath(),true) @TO@ VariableDeclarationStatement@@HomeDirectoryLocationStrategy strategy=new HomeDirectoryLocationStrategy(folder.getRoot().getAbsolutePath(),true); @AT@ 21429 @LENGTH@ 127
---------INS SimpleName@@strategy @TO@ VariableDeclarationFragment@@strategy=new HomeDirectoryLocationStrategy(folder.getRoot().getAbsolutePath(),true) @AT@ 21429 @LENGTH@ 8
---------INS ClassInstanceCreation@@HomeDirectoryLocationStrategy[folder.getRoot().getAbsolutePath(), true] @TO@ VariableDeclarationFragment@@strategy=new HomeDirectoryLocationStrategy(folder.getRoot().getAbsolutePath(),true) @AT@ 21456 @LENGTH@ 100
------------INS New@@new @TO@ ClassInstanceCreation@@HomeDirectoryLocationStrategy[folder.getRoot().getAbsolutePath(), true] @AT@ 21456 @LENGTH@ 3
------------INS SimpleType@@HomeDirectoryLocationStrategy @TO@ ClassInstanceCreation@@HomeDirectoryLocationStrategy[folder.getRoot().getAbsolutePath(), true] @AT@ 21460 @LENGTH@ 29
------------INS MethodInvocation@@folder.getRoot().getAbsolutePath() @TO@ ClassInstanceCreation@@HomeDirectoryLocationStrategy[folder.getRoot().getAbsolutePath(), true] @AT@ 21515 @LENGTH@ 34
---------------INS MethodInvocation@@MethodName:getRoot:[] @TO@ MethodInvocation@@folder.getRoot().getAbsolutePath() @AT@ 21515 @LENGTH@ 16
---------------INS SimpleName@@Name:folder @TO@ MethodInvocation@@folder.getRoot().getAbsolutePath() @AT@ 21515 @LENGTH@ 6
---------------INS SimpleName@@MethodName:getAbsolutePath:[] @TO@ MethodInvocation@@folder.getRoot().getAbsolutePath() @AT@ 21532 @LENGTH@ 17
------------INS BooleanLiteral@@true @TO@ ClassInstanceCreation@@HomeDirectoryLocationStrategy[folder.getRoot().getAbsolutePath(), true] @AT@ 21551 @LENGTH@ 4
---INS VariableDeclarationStatement@@FileBasedConfigurationBuilder<FileBasedConfiguration> builder=homeDirConfigurationBuilder.configure(homeDirProperties.setLocationStrategy(strategy).setBasePath(folderName).setListDelimiterHandler(new DefaultListDelimiterHandler(',')).setFileName(fileName)); @TO@ MethodDeclaration@@public, void, MethodName:testFileBasedConfigurationBuilderWithHomeDirectoryLocationStrategy, IOException, ConfigurationException,  @AT@ 21566 @LENGTH@ 383
------INS ParameterizedType@@FileBasedConfigurationBuilder<FileBasedConfiguration> @TO@ VariableDeclarationStatement@@FileBasedConfigurationBuilder<FileBasedConfiguration> builder=homeDirConfigurationBuilder.configure(homeDirProperties.setLocationStrategy(strategy).setBasePath(folderName).setListDelimiterHandler(new DefaultListDelimiterHandler(',')).setFileName(fileName)); @AT@ 21566 @LENGTH@ 53
---------INS SimpleType@@FileBasedConfigurationBuilder @TO@ ParameterizedType@@FileBasedConfigurationBuilder<FileBasedConfiguration> @AT@ 21566 @LENGTH@ 29
---------INS SimpleType@@FileBasedConfiguration @TO@ ParameterizedType@@FileBasedConfigurationBuilder<FileBasedConfiguration> @AT@ 21596 @LENGTH@ 22
------INS VariableDeclarationFragment@@builder=homeDirConfigurationBuilder.configure(homeDirProperties.setLocationStrategy(strategy).setBasePath(folderName).setListDelimiterHandler(new DefaultListDelimiterHandler(',')).setFileName(fileName)) @TO@ VariableDeclarationStatement@@FileBasedConfigurationBuilder<FileBasedConfiguration> builder=homeDirConfigurationBuilder.configure(homeDirProperties.setLocationStrategy(strategy).setBasePath(folderName).setListDelimiterHandler(new DefaultListDelimiterHandler(',')).setFileName(fileName)); @AT@ 21620 @LENGTH@ 328
---------INS SimpleName@@builder @TO@ VariableDeclarationFragment@@builder=homeDirConfigurationBuilder.configure(homeDirProperties.setLocationStrategy(strategy).setBasePath(folderName).setListDelimiterHandler(new DefaultListDelimiterHandler(',')).setFileName(fileName)) @AT@ 21620 @LENGTH@ 7
---------INS MethodInvocation@@homeDirConfigurationBuilder.configure(homeDirProperties.setLocationStrategy(strategy).setBasePath(folderName).setListDelimiterHandler(new DefaultListDelimiterHandler(',')).setFileName(fileName)) @TO@ VariableDeclarationFragment@@builder=homeDirConfigurationBuilder.configure(homeDirProperties.setLocationStrategy(strategy).setBasePath(folderName).setListDelimiterHandler(new DefaultListDelimiterHandler(',')).setFileName(fileName)) @AT@ 21646 @LENGTH@ 302
------------INS SimpleName@@Name:homeDirConfigurationBuilder @TO@ MethodInvocation@@homeDirConfigurationBuilder.configure(homeDirProperties.setLocationStrategy(strategy).setBasePath(folderName).setListDelimiterHandler(new DefaultListDelimiterHandler(',')).setFileName(fileName)) @AT@ 21646 @LENGTH@ 27
------------INS SimpleName@@MethodName:configure:[homeDirProperties.setLocationStrategy(strategy).setBasePath(folderName).setListDelimiterHandler(new DefaultListDelimiterHandler(',')).setFileName(fileName)] @TO@ MethodInvocation@@homeDirConfigurationBuilder.configure(homeDirProperties.setLocationStrategy(strategy).setBasePath(folderName).setListDelimiterHandler(new DefaultListDelimiterHandler(',')).setFileName(fileName)) @AT@ 21674 @LENGTH@ 274
---------------INS MethodInvocation@@homeDirProperties.setLocationStrategy(strategy).setBasePath(folderName).setListDelimiterHandler(new DefaultListDelimiterHandler(',')).setFileName(fileName) @TO@ SimpleName@@MethodName:configure:[homeDirProperties.setLocationStrategy(strategy).setBasePath(folderName).setListDelimiterHandler(new DefaultListDelimiterHandler(',')).setFileName(fileName)] @AT@ 21684 @LENGTH@ 263
------------------INS MethodInvocation@@MethodName:setListDelimiterHandler:[new DefaultListDelimiterHandler(',')] @TO@ MethodInvocation@@homeDirProperties.setLocationStrategy(strategy).setBasePath(folderName).setListDelimiterHandler(new DefaultListDelimiterHandler(',')).setFileName(fileName) @AT@ 21684 @LENGTH@ 216
---------------------INS ClassInstanceCreation@@DefaultListDelimiterHandler[','] @TO@ MethodInvocation@@MethodName:setListDelimiterHandler:[new DefaultListDelimiterHandler(',')] @AT@ 21863 @LENGTH@ 36
------------------------INS New@@new @TO@ ClassInstanceCreation@@DefaultListDelimiterHandler[','] @AT@ 21863 @LENGTH@ 3
------------------------INS SimpleType@@DefaultListDelimiterHandler @TO@ ClassInstanceCreation@@DefaultListDelimiterHandler[','] @AT@ 21867 @LENGTH@ 27
------------------------INS CharacterLiteral@@',' @TO@ ClassInstanceCreation@@DefaultListDelimiterHandler[','] @AT@ 21895 @LENGTH@ 3
------------------INS MethodInvocation@@MethodName:setBasePath:[folderName] @TO@ MethodInvocation@@homeDirProperties.setLocationStrategy(strategy).setBasePath(folderName).setListDelimiterHandler(new DefaultListDelimiterHandler(',')).setFileName(fileName) @AT@ 21684 @LENGTH@ 96
---------------------INS SimpleName@@folderName @TO@ MethodInvocation@@MethodName:setBasePath:[folderName] @AT@ 21769 @LENGTH@ 10
------------------INS MethodInvocation@@MethodName:setLocationStrategy:[strategy] @TO@ MethodInvocation@@homeDirProperties.setLocationStrategy(strategy).setBasePath(folderName).setListDelimiterHandler(new DefaultListDelimiterHandler(',')).setFileName(fileName) @AT@ 21684 @LENGTH@ 72
---------------------INS SimpleName@@strategy @TO@ MethodInvocation@@MethodName:setLocationStrategy:[strategy] @AT@ 21747 @LENGTH@ 8
------------------INS SimpleName@@Name:homeDirProperties @TO@ MethodInvocation@@homeDirProperties.setLocationStrategy(strategy).setBasePath(folderName).setListDelimiterHandler(new DefaultListDelimiterHandler(',')).setFileName(fileName) @AT@ 21684 @LENGTH@ 17
------------------INS SimpleName@@MethodName:setFileName:[fileName] @TO@ MethodInvocation@@homeDirProperties.setLocationStrategy(strategy).setBasePath(folderName).setListDelimiterHandler(new DefaultListDelimiterHandler(',')).setFileName(fileName) @AT@ 21926 @LENGTH@ 21
---------------------INS SimpleName@@fileName @TO@ SimpleName@@MethodName:setFileName:[fileName] @AT@ 21938 @LENGTH@ 8
---INS ExpressionStatement@@MethodInvocation:builder.getConfiguration() @TO@ MethodDeclaration@@public, void, MethodName:testFileBasedConfigurationBuilderWithHomeDirectoryLocationStrategy, IOException, ConfigurationException,  @AT@ 21958 @LENGTH@ 27
------INS MethodInvocation@@builder.getConfiguration() @TO@ ExpressionStatement@@MethodInvocation:builder.getConfiguration() @AT@ 21958 @LENGTH@ 26
---------INS SimpleName@@Name:builder @TO@ MethodInvocation@@builder.getConfiguration() @AT@ 21958 @LENGTH@ 7
---------INS SimpleName@@MethodName:getConfiguration:[] @TO@ MethodInvocation@@builder.getConfiguration() @AT@ 21966 @LENGTH@ 18


UPD FieldDeclaration@@public, static, final, String, [MISSING_BEAN_ERROR_MESSAGE="Did you forget to add a gobal <authentication-manager> element " + "to your configuration (with child <authentication-provider> elements)? Alternatively you can use the " + "authentication-manager-ref attribute on your <http> and <global-method-security> elements."] @TO@ public, static, final, String, [MISSING_BEAN_ERROR_MESSAGE="Did you forget to add a global <authentication-manager> element " + "to your configuration (with child <authentication-provider> elements)? Alternatively you can use the " + "authentication-manager-ref attribute on your <http> and <global-method-security> elements."] @AT@ 1860 @LENGTH@ 329
---UPD VariableDeclarationFragment@@MISSING_BEAN_ERROR_MESSAGE="Did you forget to add a gobal <authentication-manager> element " + "to your configuration (with child <authentication-provider> elements)? Alternatively you can use the " + "authentication-manager-ref attribute on your <http> and <global-method-security> elements." @TO@ MISSING_BEAN_ERROR_MESSAGE="Did you forget to add a global <authentication-manager> element " + "to your configuration (with child <authentication-provider> elements)? Alternatively you can use the " + "authentication-manager-ref attribute on your <http> and <global-method-security> elements." @AT@ 1887 @LENGTH@ 301
------UPD InfixExpression@@"Did you forget to add a gobal <authentication-manager> element " + "to your configuration (with child <authentication-provider> elements)? Alternatively you can use the " + "authentication-manager-ref attribute on your <http> and <global-method-security> elements." @TO@ "Did you forget to add a global <authentication-manager> element " + "to your configuration (with child <authentication-provider> elements)? Alternatively you can use the " + "authentication-manager-ref attribute on your <http> and <global-method-security> elements." @AT@ 1916 @LENGTH@ 272
---------UPD StringLiteral@@"Did you forget to add a gobal <authentication-manager> element " @TO@ "Did you forget to add a global <authentication-manager> element " @AT@ 1916 @LENGTH@ 65


UPD TypeDeclaration@@[@Configuration, @ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration"), @EnableConfigurationProperties(MyBatisComponentConfiguration.class), public]MyBatisComponentAutoConfiguration,  @TO@ [@Configuration, @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration"), @EnableConfigurationProperties(MyBatisComponentConfiguration.class), public]MyBatisComponentAutoConfiguration,  @AT@ 1628 @LENGTH@ 2079
---UPD NormalAnnotation@@@ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1643 @LENGTH@ 79
---UPD NormalAnnotation@@@AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1723 @LENGTH@ 80


UPD IfStatement@@if (e instanceof OutOfMemoryError) {  throw (OutOfMemoryError)e;} else {  throw new RuntimeException("Map operator initialization failed",e);} @TO@ if (e instanceof OutOfMemoryError) {  throw (OutOfMemoryError)e;} else if (e instanceof InterruptedException) {  l4j.info("Hit an interrupt while initializing MergeFileRecordProcessor. Message={}",e.getMessage());  throw (InterruptedException)e;} else {  throw new RuntimeException("Map operator initialization failed",e);} @AT@ 5029 @LENGTH@ 276
---INS Block@@ElseBody:if (e instanceof InterruptedException) {  l4j.info("Hit an interrupt while initializing MergeFileRecordProcessor. Message={}",e.getMessage());  throw (InterruptedException)e;} else {  throw new RuntimeException("Map operator initialization failed",e);} @TO@ IfStatement@@if (e instanceof OutOfMemoryError) {  throw (OutOfMemoryError)e;} else {  throw new RuntimeException("Map operator initialization failed",e);} @AT@ 5259 @LENGTH@ 302
------INS IfStatement@@if (e instanceof InterruptedException) {  l4j.info("Hit an interrupt while initializing MergeFileRecordProcessor. Message={}",e.getMessage());  throw (InterruptedException)e;} else {  throw new RuntimeException("Map operator initialization failed",e);} @TO@ Block@@ElseBody:if (e instanceof InterruptedException) {  l4j.info("Hit an interrupt while initializing MergeFileRecordProcessor. Message={}",e.getMessage());  throw (InterruptedException)e;} else {  throw new RuntimeException("Map operator initialization failed",e);} @AT@ 5259 @LENGTH@ 302
---------MOV Block@@ElseBody:{  throw new RuntimeException("Map operator initialization failed",e);} @TO@ IfStatement@@if (e instanceof InterruptedException) {  l4j.info("Hit an interrupt while initializing MergeFileRecordProcessor. Message={}",e.getMessage());  throw (InterruptedException)e;} else {  throw new RuntimeException("Map operator initialization failed",e);} @AT@ 5219 @LENGTH@ 86
---------INS InstanceofExpression@@e instanceof InterruptedException @TO@ IfStatement@@if (e instanceof InterruptedException) {  l4j.info("Hit an interrupt while initializing MergeFileRecordProcessor. Message={}",e.getMessage());  throw (InterruptedException)e;} else {  throw new RuntimeException("Map operator initialization failed",e);} @AT@ 5263 @LENGTH@ 33
------------INS SimpleName@@e @TO@ InstanceofExpression@@e instanceof InterruptedException @AT@ 5263 @LENGTH@ 1
------------INS Instanceof@@instanceof @TO@ InstanceofExpression@@e instanceof InterruptedException @AT@ 5265 @LENGTH@ 10
------------INS SimpleType@@InterruptedException @TO@ InstanceofExpression@@e instanceof InterruptedException @AT@ 5276 @LENGTH@ 20
---------INS Block@@ThenBody:{  l4j.info("Hit an interrupt while initializing MergeFileRecordProcessor. Message={}",e.getMessage());  throw (InterruptedException)e;} @TO@ IfStatement@@if (e instanceof InterruptedException) {  l4j.info("Hit an interrupt while initializing MergeFileRecordProcessor. Message={}",e.getMessage());  throw (InterruptedException)e;} else {  throw new RuntimeException("Map operator initialization failed",e);} @AT@ 5298 @LENGTH@ 171
------------INS ExpressionStatement@@MethodInvocation:l4j.info("Hit an interrupt while initializing MergeFileRecordProcessor. Message={}",e.getMessage()) @TO@ Block@@ThenBody:{  l4j.info("Hit an interrupt while initializing MergeFileRecordProcessor. Message={}",e.getMessage());  throw (InterruptedException)e;} @AT@ 5308 @LENGTH@ 113
---------------INS MethodInvocation@@l4j.info("Hit an interrupt while initializing MergeFileRecordProcessor. Message={}",e.getMessage()) @TO@ ExpressionStatement@@MethodInvocation:l4j.info("Hit an interrupt while initializing MergeFileRecordProcessor. Message={}",e.getMessage()) @AT@ 5308 @LENGTH@ 112
------------------INS SimpleName@@Name:l4j @TO@ MethodInvocation@@l4j.info("Hit an interrupt while initializing MergeFileRecordProcessor. Message={}",e.getMessage()) @AT@ 5308 @LENGTH@ 3
------------------INS SimpleName@@MethodName:info:["Hit an interrupt while initializing MergeFileRecordProcessor. Message={}", e.getMessage()] @TO@ MethodInvocation@@l4j.info("Hit an interrupt while initializing MergeFileRecordProcessor. Message={}",e.getMessage()) @AT@ 5312 @LENGTH@ 108
---------------------INS StringLiteral@@"Hit an interrupt while initializing MergeFileRecordProcessor. Message={}" @TO@ SimpleName@@MethodName:info:["Hit an interrupt while initializing MergeFileRecordProcessor. Message={}", e.getMessage()] @AT@ 5317 @LENGTH@ 74
---------------------INS MethodInvocation@@e.getMessage() @TO@ SimpleName@@MethodName:info:["Hit an interrupt while initializing MergeFileRecordProcessor. Message={}", e.getMessage()] @AT@ 5405 @LENGTH@ 14
------------------------INS SimpleName@@Name:e @TO@ MethodInvocation@@e.getMessage() @AT@ 5405 @LENGTH@ 1
------------------------INS SimpleName@@MethodName:getMessage:[] @TO@ MethodInvocation@@e.getMessage() @AT@ 5407 @LENGTH@ 12
------------INS ThrowStatement@@CastExpression:(InterruptedException)e @TO@ Block@@ThenBody:{  l4j.info("Hit an interrupt while initializing MergeFileRecordProcessor. Message={}",e.getMessage());  throw (InterruptedException)e;} @AT@ 5430 @LENGTH@ 31
---------------INS CastExpression@@(InterruptedException)e @TO@ ThrowStatement@@CastExpression:(InterruptedException)e @AT@ 5436 @LENGTH@ 24
------------------INS SimpleType@@InterruptedException @TO@ CastExpression@@(InterruptedException)e @AT@ 5437 @LENGTH@ 20
------------------INS SimpleName@@e @TO@ CastExpression@@(InterruptedException)e @AT@ 5459 @LENGTH@ 1


DEL IfStatement@@if (approvalStore != null) {  OAuth2Authentication auth=readAuthentication(token);  String clientId=auth.getOAuth2Request().getClientId();  Authentication user=auth.getUserAuthentication();  if (user != null) {    Collection<Approval> approvals=new ArrayList<Approval>();    for (    String scope : auth.getOAuth2Request().getScope()) {      approvals.add(new Approval(user.getName(),clientId,scope,new Date(),ApprovalStatus.APPROVED));    }    approvalStore.revokeApprovals(approvals);  }} @AT@ 3778 @LENGTH@ 515
---DEL InfixExpression@@approvalStore != null @AT@ 3782 @LENGTH@ 21
------DEL SimpleName@@approvalStore @AT@ 3782 @LENGTH@ 13
------DEL Operator@@!= @AT@ 3795 @LENGTH@ 2
------DEL NullLiteral@@null @AT@ 3799 @LENGTH@ 4
---DEL Block@@ThenBody:{  OAuth2Authentication auth=readAuthentication(token);  String clientId=auth.getOAuth2Request().getClientId();  Authentication user=auth.getUserAuthentication();  if (user != null) {    Collection<Approval> approvals=new ArrayList<Approval>();    for (    String scope : auth.getOAuth2Request().getScope()) {      approvals.add(new Approval(user.getName(),clientId,scope,new Date(),ApprovalStatus.APPROVED));    }    approvalStore.revokeApprovals(approvals);  }} @AT@ 3805 @LENGTH@ 488
------DEL VariableDeclarationStatement@@OAuth2Authentication auth=readAuthentication(token); @AT@ 3810 @LENGTH@ 54
---------DEL SimpleType@@OAuth2Authentication @AT@ 3810 @LENGTH@ 20
---------DEL VariableDeclarationFragment@@auth=readAuthentication(token) @AT@ 3831 @LENGTH@ 32
------------DEL SimpleName@@auth @AT@ 3831 @LENGTH@ 4
------------DEL MethodInvocation@@readAuthentication(token) @AT@ 3838 @LENGTH@ 25
---------------DEL SimpleName@@MethodName:readAuthentication:[token] @AT@ 3838 @LENGTH@ 25
------------------DEL SimpleName@@token @AT@ 3857 @LENGTH@ 5
------DEL VariableDeclarationStatement@@String clientId=auth.getOAuth2Request().getClientId(); @AT@ 3868 @LENGTH@ 56
---------DEL SimpleType@@String @AT@ 3868 @LENGTH@ 6
---------DEL VariableDeclarationFragment@@clientId=auth.getOAuth2Request().getClientId() @AT@ 3875 @LENGTH@ 48
------------DEL SimpleName@@clientId @AT@ 3875 @LENGTH@ 8
------------DEL MethodInvocation@@auth.getOAuth2Request().getClientId() @AT@ 3886 @LENGTH@ 37
---------------DEL MethodInvocation@@MethodName:getOAuth2Request:[] @AT@ 3886 @LENGTH@ 23
---------------DEL SimpleName@@Name:auth @AT@ 3886 @LENGTH@ 4
---------------DEL SimpleName@@MethodName:getClientId:[] @AT@ 3910 @LENGTH@ 13
------DEL VariableDeclarationStatement@@Authentication user=auth.getUserAuthentication(); @AT@ 3928 @LENGTH@ 51
---------DEL SimpleType@@Authentication @AT@ 3928 @LENGTH@ 14
---------DEL VariableDeclarationFragment@@user=auth.getUserAuthentication() @AT@ 3943 @LENGTH@ 35
------------DEL SimpleName@@user @AT@ 3943 @LENGTH@ 4
------------DEL MethodInvocation@@auth.getUserAuthentication() @AT@ 3950 @LENGTH@ 28
---------------DEL SimpleName@@Name:auth @AT@ 3950 @LENGTH@ 4
---------------DEL SimpleName@@MethodName:getUserAuthentication:[] @AT@ 3955 @LENGTH@ 23
------DEL IfStatement@@if (user != null) {  Collection<Approval> approvals=new ArrayList<Approval>();  for (  String scope : auth.getOAuth2Request().getScope()) {    approvals.add(new Approval(user.getName(),clientId,scope,new Date(),ApprovalStatus.APPROVED));  }  approvalStore.revokeApprovals(approvals);} @AT@ 3983 @LENGTH@ 306
---------DEL InfixExpression@@user != null @AT@ 3987 @LENGTH@ 12
------------DEL SimpleName@@user @AT@ 3987 @LENGTH@ 4
------------DEL Operator@@!= @AT@ 3991 @LENGTH@ 2
------------DEL NullLiteral@@null @AT@ 3995 @LENGTH@ 4
---------DEL Block@@ThenBody:{  Collection<Approval> approvals=new ArrayList<Approval>();  for (  String scope : auth.getOAuth2Request().getScope()) {    approvals.add(new Approval(user.getName(),clientId,scope,new Date(),ApprovalStatus.APPROVED));  }  approvalStore.revokeApprovals(approvals);} @AT@ 4001 @LENGTH@ 288
------------DEL VariableDeclarationStatement@@Collection<Approval> approvals=new ArrayList<Approval>(); @AT@ 4007 @LENGTH@ 59
---------------DEL ParameterizedType@@Collection<Approval> @AT@ 4007 @LENGTH@ 20
------------------DEL SimpleType@@Collection @AT@ 4007 @LENGTH@ 10
------------------DEL SimpleType@@Approval @AT@ 4018 @LENGTH@ 8
---------------DEL VariableDeclarationFragment@@approvals=new ArrayList<Approval>() @AT@ 4028 @LENGTH@ 37
------------------DEL SimpleName@@approvals @AT@ 4028 @LENGTH@ 9
------------------DEL ClassInstanceCreation@@ArrayList<Approval>[] @AT@ 4040 @LENGTH@ 25
---------------------DEL New@@new @AT@ 4040 @LENGTH@ 3
---------------------DEL ParameterizedType@@ArrayList<Approval> @AT@ 4044 @LENGTH@ 19
------------------------DEL SimpleType@@ArrayList @AT@ 4044 @LENGTH@ 9
------------------------DEL SimpleType@@Approval @AT@ 4054 @LENGTH@ 8
------------DEL EnhancedForStatement@@for (String scope : auth.getOAuth2Request().getScope()) {  approvals.add(new Approval(user.getName(),clientId,scope,new Date(),ApprovalStatus.APPROVED));} @AT@ 4071 @LENGTH@ 167
---------------DEL SingleVariableDeclaration@@String scope @AT@ 4076 @LENGTH@ 12
------------------DEL SimpleType@@String @AT@ 4076 @LENGTH@ 6
------------------DEL SimpleName@@scope @AT@ 4083 @LENGTH@ 5
---------------DEL MethodInvocation@@auth.getOAuth2Request().getScope() @AT@ 4091 @LENGTH@ 34
------------------DEL MethodInvocation@@MethodName:getOAuth2Request:[] @AT@ 4091 @LENGTH@ 23
------------------DEL SimpleName@@Name:auth @AT@ 4091 @LENGTH@ 4
------------------DEL SimpleName@@MethodName:getScope:[] @AT@ 4115 @LENGTH@ 10
---------------DEL ExpressionStatement@@MethodInvocation:approvals.add(new Approval(user.getName(),clientId,scope,new Date(),ApprovalStatus.APPROVED)) @AT@ 4134 @LENGTH@ 98
------------------DEL MethodInvocation@@approvals.add(new Approval(user.getName(),clientId,scope,new Date(),ApprovalStatus.APPROVED)) @AT@ 4134 @LENGTH@ 97
---------------------DEL SimpleName@@Name:approvals @AT@ 4134 @LENGTH@ 9
---------------------DEL SimpleName@@MethodName:add:[new Approval(user.getName(),clientId,scope,new Date(),ApprovalStatus.APPROVED)] @AT@ 4144 @LENGTH@ 87
------------------------DEL ClassInstanceCreation@@Approval[user.getName(), clientId, scope, new Date(), ApprovalStatus.APPROVED] @AT@ 4148 @LENGTH@ 82
---------------------------DEL New@@new @AT@ 4148 @LENGTH@ 3
---------------------------DEL SimpleType@@Approval @AT@ 4152 @LENGTH@ 8
---------------------------DEL MethodInvocation@@user.getName() @AT@ 4161 @LENGTH@ 14
------------------------------DEL SimpleName@@Name:user @AT@ 4161 @LENGTH@ 4
------------------------------DEL SimpleName@@MethodName:getName:[] @AT@ 4166 @LENGTH@ 9
---------------------------DEL SimpleName@@clientId @AT@ 4177 @LENGTH@ 8
---------------------------DEL SimpleName@@scope @AT@ 4187 @LENGTH@ 5
---------------------------DEL ClassInstanceCreation@@Date[] @AT@ 4194 @LENGTH@ 10
------------------------------DEL New@@new @AT@ 4194 @LENGTH@ 3
------------------------------DEL SimpleType@@Date @AT@ 4198 @LENGTH@ 4
---------------------------DEL QualifiedName@@ApprovalStatus.APPROVED @AT@ 4206 @LENGTH@ 23
------------------------------DEL SimpleName@@ApprovalStatus @AT@ 4206 @LENGTH@ 14
------------------------------DEL SimpleName@@APPROVED @AT@ 4221 @LENGTH@ 8
------------DEL ExpressionStatement@@MethodInvocation:approvalStore.revokeApprovals(approvals) @AT@ 4243 @LENGTH@ 41
---------------DEL MethodInvocation@@approvalStore.revokeApprovals(approvals) @AT@ 4243 @LENGTH@ 40
------------------DEL SimpleName@@Name:approvalStore @AT@ 4243 @LENGTH@ 13
------------------DEL SimpleName@@MethodName:revokeApprovals:[approvals] @AT@ 4257 @LENGTH@ 26
---------------------DEL SimpleName@@approvals @AT@ 4273 @LENGTH@ 9


INS ExpressionStatement@@MethodInvocation:when(em.getMetamodel()).thenReturn(metamodel) @TO@ MethodDeclaration@@public, void, MethodName:setUp,  @AT@ 2737 @LENGTH@ 46
---INS MethodInvocation@@when(em.getMetamodel()).thenReturn(metamodel) @TO@ ExpressionStatement@@MethodInvocation:when(em.getMetamodel()).thenReturn(metamodel) @AT@ 2737 @LENGTH@ 45
------INS MethodInvocation@@MethodName:when:[em.getMetamodel()] @TO@ MethodInvocation@@when(em.getMetamodel()).thenReturn(metamodel) @AT@ 2737 @LENGTH@ 23
---------INS MethodInvocation@@em.getMetamodel() @TO@ MethodInvocation@@MethodName:when:[em.getMetamodel()] @AT@ 2742 @LENGTH@ 17
------------INS SimpleName@@Name:em @TO@ MethodInvocation@@em.getMetamodel() @AT@ 2742 @LENGTH@ 2
------------INS SimpleName@@MethodName:getMetamodel:[] @TO@ MethodInvocation@@em.getMetamodel() @AT@ 2745 @LENGTH@ 14
------INS SimpleName@@MethodName:thenReturn:[metamodel] @TO@ MethodInvocation@@when(em.getMetamodel()).thenReturn(metamodel) @AT@ 2761 @LENGTH@ 21
---------INS SimpleName@@metamodel @TO@ SimpleName@@MethodName:thenReturn:[metamodel] @AT@ 2772 @LENGTH@ 9


DEL MethodDeclaration@@public, MessageConverter, MethodName:removeDelgate, String contentType,  @AT@ 3233 @LENGTH@ 100
---DEL Modifier@@public @AT@ 3233 @LENGTH@ 6
---DEL SimpleType@@MessageConverter @AT@ 3240 @LENGTH@ 16
---DEL SimpleName@@MethodName:removeDelgate @AT@ 3257 @LENGTH@ 13
---DEL SingleVariableDeclaration@@String contentType @AT@ 3271 @LENGTH@ 18
------DEL SimpleType@@String @AT@ 3271 @LENGTH@ 6
------DEL SimpleName@@contentType @AT@ 3278 @LENGTH@ 11
---DEL ReturnStatement@@MethodInvocation:removeDelegate(contentType) @AT@ 3295 @LENGTH@ 35
------DEL MethodInvocation@@removeDelegate(contentType) @AT@ 3302 @LENGTH@ 27
---------DEL SimpleName@@MethodName:removeDelegate:[contentType] @AT@ 3302 @LENGTH@ 27
------------DEL SimpleName@@contentType @AT@ 3317 @LENGTH@ 11


INS MethodDeclaration@@public, void, MethodName:setBeanClassLoader, ClassLoader classLoader,  @TO@ TypeDeclaration@@[public]Neo4jRepositoryFactory, RepositoryFactorySupport @AT@ 1737 @LENGTH@ 101
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:setBeanClassLoader, ClassLoader classLoader,  @AT@ 1737 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:setBeanClassLoader, ClassLoader classLoader,  @AT@ 1744 @LENGTH@ 4
---INS SimpleName@@MethodName:setBeanClassLoader @TO@ MethodDeclaration@@public, void, MethodName:setBeanClassLoader, ClassLoader classLoader,  @AT@ 1749 @LENGTH@ 18
---INS SingleVariableDeclaration@@ClassLoader classLoader @TO@ MethodDeclaration@@public, void, MethodName:setBeanClassLoader, ClassLoader classLoader,  @AT@ 1768 @LENGTH@ 23
------INS SimpleType@@ClassLoader @TO@ SingleVariableDeclaration@@ClassLoader classLoader @AT@ 1768 @LENGTH@ 11
------INS SimpleName@@classLoader @TO@ SingleVariableDeclaration@@ClassLoader classLoader @AT@ 1780 @LENGTH@ 11
---INS ExpressionStatement@@SuperMethodInvocation:super.setBeanClassLoader(classLoader) @TO@ MethodDeclaration@@public, void, MethodName:setBeanClassLoader, ClassLoader classLoader,  @AT@ 1797 @LENGTH@ 38
------INS SuperMethodInvocation@@super.setBeanClassLoader(classLoader) @TO@ ExpressionStatement@@SuperMethodInvocation:super.setBeanClassLoader(classLoader) @AT@ 1797 @LENGTH@ 37
---------INS SimpleName@@MethodName:setBeanClassLoader:[classLoader] @TO@ SuperMethodInvocation@@super.setBeanClassLoader(classLoader) @AT@ 1803 @LENGTH@ 18
---------INS SimpleName@@classLoader @TO@ SuperMethodInvocation@@super.setBeanClassLoader(classLoader) @AT@ 1822 @LENGTH@ 11


UPD VariableDeclarationStatement@@JavaType returnType=new JavaType(SpringJavaType.PAGE.getFullyQualifiedTypeName(),0,DataType.TYPE,null,Arrays.asList(defaultReturnType)); @TO@ JavaType returnType=new JavaType(SpringJavaType.PAGE.getFullyQualifiedTypeName(),0,DataType.TYPE,null,Arrays.asList(finderReturnType)); @AT@ 10875 @LENGTH@ 162
---UPD VariableDeclarationFragment@@returnType=new JavaType(SpringJavaType.PAGE.getFullyQualifiedTypeName(),0,DataType.TYPE,null,Arrays.asList(defaultReturnType)) @TO@ returnType=new JavaType(SpringJavaType.PAGE.getFullyQualifiedTypeName(),0,DataType.TYPE,null,Arrays.asList(finderReturnType)) @AT@ 10884 @LENGTH@ 152
------UPD ClassInstanceCreation@@JavaType[SpringJavaType.PAGE.getFullyQualifiedTypeName(), 0, DataType.TYPE, null, Arrays.asList(defaultReturnType)] @TO@ JavaType[SpringJavaType.PAGE.getFullyQualifiedTypeName(), 0, DataType.TYPE, null, Arrays.asList(finderReturnType)] @AT@ 10905 @LENGTH@ 131
---------UPD MethodInvocation@@Arrays.asList(defaultReturnType) @TO@ Arrays.asList(finderReturnType) @AT@ 11003 @LENGTH@ 32
------------UPD SimpleName@@MethodName:asList:[defaultReturnType] @TO@ MethodName:asList:[finderReturnType] @AT@ 11010 @LENGTH@ 25
---------------UPD SimpleName@@defaultReturnType @TO@ finderReturnType @AT@ 11017 @LENGTH@ 17


UPD CatchClause@@catch (NoSuchElementException ignore) {  assertThat(ignore.getMessage(),is(equalTo("no elements in this Iterator")));  assertThat(ignore.getCause(),is(nullValue()));  try {    iterator.remove();  } catch (  UnsupportedOperationException expected) {    assertThat(expected.getMessage(),is(equalTo("operation not supported")));    assertThat(expected.getCause(),is(nullValue()));    throw expected;  }} @TO@ catch (NoSuchElementException ignore) {  assertThat(ignore.getMessage(),is(equalTo("No more elements")));  assertThat(ignore.getCause(),is(nullValue()));  try {    iterator.remove();  } catch (  UnsupportedOperationException expected) {    assertThat(expected.getMessage(),is(equalTo("Operation not supported")));    assertThat(expected.getCause(),is(nullValue()));    throw expected;  }} @AT@ 4793 @LENGTH@ 423
---UPD ExpressionStatement@@MethodInvocation:assertThat(ignore.getMessage(),is(equalTo("no elements in this Iterator"))) @TO@ MethodInvocation:assertThat(ignore.getMessage(),is(equalTo("No more elements"))) @AT@ 4836 @LENGTH@ 77
------UPD MethodInvocation@@assertThat(ignore.getMessage(),is(equalTo("no elements in this Iterator"))) @TO@ assertThat(ignore.getMessage(),is(equalTo("No more elements"))) @AT@ 4836 @LENGTH@ 76
---------UPD SimpleName@@MethodName:assertThat:[ignore.getMessage(), is(equalTo("no elements in this Iterator"))] @TO@ MethodName:assertThat:[ignore.getMessage(), is(equalTo("No more elements"))] @AT@ 4836 @LENGTH@ 76
------------UPD MethodInvocation@@is(equalTo("no elements in this Iterator")) @TO@ is(equalTo("No more elements")) @AT@ 4868 @LENGTH@ 43
---------------UPD SimpleName@@MethodName:is:[equalTo("no elements in this Iterator")] @TO@ MethodName:is:[equalTo("No more elements")] @AT@ 4868 @LENGTH@ 43
------------------UPD MethodInvocation@@equalTo("no elements in this Iterator") @TO@ equalTo("No more elements") @AT@ 4871 @LENGTH@ 39
---------------------UPD SimpleName@@MethodName:equalTo:["no elements in this Iterator"] @TO@ MethodName:equalTo:["No more elements"] @AT@ 4871 @LENGTH@ 39
------------------------UPD StringLiteral@@"no elements in this Iterator" @TO@ "No more elements" @AT@ 4879 @LENGTH@ 30
---------------------UPD SimpleName@@MethodName:equalTo:["no elements in this Iterator"] @TO@ MethodName:equalTo:["No more elements"] @AT@ 4871 @LENGTH@ 39
------------------------UPD StringLiteral@@"no elements in this Iterator" @TO@ "No more elements" @AT@ 4879 @LENGTH@ 30
---------------------UPD SimpleName@@MethodName:equalTo:["no elements in this Iterator"] @TO@ MethodName:equalTo:["No more elements"] @AT@ 4871 @LENGTH@ 39
------------------------UPD StringLiteral@@"no elements in this Iterator" @TO@ "No more elements" @AT@ 4879 @LENGTH@ 30
---------------------UPD SimpleName@@MethodName:equalTo:["no elements in this Iterator"] @TO@ MethodName:equalTo:["No more elements"] @AT@ 4871 @LENGTH@ 39
------------------------UPD StringLiteral@@"no elements in this Iterator" @TO@ "No more elements" @AT@ 4879 @LENGTH@ 30
---------------------UPD SimpleName@@MethodName:equalTo:["no elements in this Iterator"] @TO@ MethodName:equalTo:["No more elements"] @AT@ 4871 @LENGTH@ 39
------------------------UPD StringLiteral@@"no elements in this Iterator" @TO@ "No more elements" @AT@ 4879 @LENGTH@ 30
---------------UPD SimpleName@@MethodName:is:[equalTo("no elements in this Iterator")] @TO@ MethodName:is:[equalTo("No more elements")] @AT@ 4868 @LENGTH@ 43
------------------UPD MethodInvocation@@equalTo("no elements in this Iterator") @TO@ equalTo("No more elements") @AT@ 4871 @LENGTH@ 39
---------------------UPD SimpleName@@MethodName:equalTo:["no elements in this Iterator"] @TO@ MethodName:equalTo:["No more elements"] @AT@ 4871 @LENGTH@ 39
------------------------UPD StringLiteral@@"no elements in this Iterator" @TO@ "No more elements" @AT@ 4879 @LENGTH@ 30
---------------------UPD SimpleName@@MethodName:equalTo:["no elements in this Iterator"] @TO@ MethodName:equalTo:["No more elements"] @AT@ 4871 @LENGTH@ 39
------------------------UPD StringLiteral@@"no elements in this Iterator" @TO@ "No more elements" @AT@ 4879 @LENGTH@ 30
---------------------UPD SimpleName@@MethodName:equalTo:["no elements in this Iterator"] @TO@ MethodName:equalTo:["No more elements"] @AT@ 4871 @LENGTH@ 39
------------------------UPD StringLiteral@@"no elements in this Iterator" @TO@ "No more elements" @AT@ 4879 @LENGTH@ 30
---------------------UPD SimpleName@@MethodName:equalTo:["no elements in this Iterator"] @TO@ MethodName:equalTo:["No more elements"] @AT@ 4871 @LENGTH@ 39
------------------------UPD StringLiteral@@"no elements in this Iterator" @TO@ "No more elements" @AT@ 4879 @LENGTH@ 30
---------------------UPD SimpleName@@MethodName:equalTo:["no elements in this Iterator"] @TO@ MethodName:equalTo:["No more elements"] @AT@ 4871 @LENGTH@ 39
------------------------UPD StringLiteral@@"no elements in this Iterator" @TO@ "No more elements" @AT@ 4879 @LENGTH@ 30
---UPD TryStatement@@try {  iterator.remove();} catch (UnsupportedOperationException expected) {  assertThat(expected.getMessage(),is(equalTo("operation not supported")));  assertThat(expected.getCause(),is(nullValue()));  throw expected;} @TO@ try {  iterator.remove();} catch (UnsupportedOperationException expected) {  assertThat(expected.getMessage(),is(equalTo("Operation not supported")));  assertThat(expected.getCause(),is(nullValue()));  throw expected;} @AT@ 4969 @LENGTH@ 243
------UPD CatchClause@@catch (UnsupportedOperationException expected) {  assertThat(expected.getMessage(),is(equalTo("operation not supported")));  assertThat(expected.getCause(),is(nullValue()));  throw expected;} @TO@ catch (UnsupportedOperationException expected) {  assertThat(expected.getMessage(),is(equalTo("Operation not supported")));  assertThat(expected.getCause(),is(nullValue()));  throw expected;} @AT@ 5006 @LENGTH@ 206
---------UPD ExpressionStatement@@MethodInvocation:assertThat(expected.getMessage(),is(equalTo("operation not supported"))) @TO@ MethodInvocation:assertThat(expected.getMessage(),is(equalTo("Operation not supported"))) @AT@ 5059 @LENGTH@ 74
------------UPD MethodInvocation@@assertThat(expected.getMessage(),is(equalTo("operation not supported"))) @TO@ assertThat(expected.getMessage(),is(equalTo("Operation not supported"))) @AT@ 5059 @LENGTH@ 73
---------------UPD SimpleName@@MethodName:assertThat:[expected.getMessage(), is(equalTo("operation not supported"))] @TO@ MethodName:assertThat:[expected.getMessage(), is(equalTo("Operation not supported"))] @AT@ 5059 @LENGTH@ 73
------------------UPD MethodInvocation@@is(equalTo("operation not supported")) @TO@ is(equalTo("Operation not supported")) @AT@ 5093 @LENGTH@ 38
---------------------UPD SimpleName@@MethodName:is:[equalTo("operation not supported")] @TO@ MethodName:is:[equalTo("Operation not supported")] @AT@ 5093 @LENGTH@ 38
------------------------UPD MethodInvocation@@equalTo("operation not supported") @TO@ equalTo("Operation not supported") @AT@ 5096 @LENGTH@ 34
---------------------------UPD SimpleName@@MethodName:equalTo:["operation not supported"] @TO@ MethodName:equalTo:["Operation not supported"] @AT@ 5096 @LENGTH@ 34
------------------------------UPD StringLiteral@@"operation not supported" @TO@ "Operation not supported" @AT@ 5104 @LENGTH@ 25
---------------------------UPD SimpleName@@MethodName:equalTo:["operation not supported"] @TO@ MethodName:equalTo:["Operation not supported"] @AT@ 5096 @LENGTH@ 34
------------------------------UPD StringLiteral@@"operation not supported" @TO@ "Operation not supported" @AT@ 5104 @LENGTH@ 25
---------------------------UPD SimpleName@@MethodName:equalTo:["operation not supported"] @TO@ MethodName:equalTo:["Operation not supported"] @AT@ 5096 @LENGTH@ 34
------------------------------UPD StringLiteral@@"operation not supported" @TO@ "Operation not supported" @AT@ 5104 @LENGTH@ 25
---------------------------UPD SimpleName@@MethodName:equalTo:["operation not supported"] @TO@ MethodName:equalTo:["Operation not supported"] @AT@ 5096 @LENGTH@ 34
------------------------------UPD StringLiteral@@"operation not supported" @TO@ "Operation not supported" @AT@ 5104 @LENGTH@ 25
---------------------------UPD SimpleName@@MethodName:equalTo:["operation not supported"] @TO@ MethodName:equalTo:["Operation not supported"] @AT@ 5096 @LENGTH@ 34
------------------------------UPD StringLiteral@@"operation not supported" @TO@ "Operation not supported" @AT@ 5104 @LENGTH@ 25
---------------------UPD SimpleName@@MethodName:is:[equalTo("operation not supported")] @TO@ MethodName:is:[equalTo("Operation not supported")] @AT@ 5093 @LENGTH@ 38
------------------------UPD MethodInvocation@@equalTo("operation not supported") @TO@ equalTo("Operation not supported") @AT@ 5096 @LENGTH@ 34
---------------------------UPD SimpleName@@MethodName:equalTo:["operation not supported"] @TO@ MethodName:equalTo:["Operation not supported"] @AT@ 5096 @LENGTH@ 34
------------------------------UPD StringLiteral@@"operation not supported" @TO@ "Operation not supported" @AT@ 5104 @LENGTH@ 25
---------------------------UPD SimpleName@@MethodName:equalTo:["operation not supported"] @TO@ MethodName:equalTo:["Operation not supported"] @AT@ 5096 @LENGTH@ 34
------------------------------UPD StringLiteral@@"operation not supported" @TO@ "Operation not supported" @AT@ 5104 @LENGTH@ 25
---------------------------UPD SimpleName@@MethodName:equalTo:["operation not supported"] @TO@ MethodName:equalTo:["Operation not supported"] @AT@ 5096 @LENGTH@ 34
------------------------------UPD StringLiteral@@"operation not supported" @TO@ "Operation not supported" @AT@ 5104 @LENGTH@ 25
---------------------------UPD SimpleName@@MethodName:equalTo:["operation not supported"] @TO@ MethodName:equalTo:["Operation not supported"] @AT@ 5096 @LENGTH@ 34
------------------------------UPD StringLiteral@@"operation not supported" @TO@ "Operation not supported" @AT@ 5104 @LENGTH@ 25
---------------------------UPD SimpleName@@MethodName:equalTo:["operation not supported"] @TO@ MethodName:equalTo:["Operation not supported"] @AT@ 5096 @LENGTH@ 34
------------------------------UPD StringLiteral@@"operation not supported" @TO@ "Operation not supported" @AT@ 5104 @LENGTH@ 25


UPD Block@@ThenBody:{  if (element.endsWith(JAR)) {    try (JarFile jar=new JarFile(new File(element))){      ZipEntry entry=jar.getEntry(WildFlySwarmClasspathConf.CLASSPATH_LOCATION);      if (entry != null) {        classpathConf.read(jar.getInputStream(entry));      }    } catch (    IOException e) {      e.printStackTrace();    }  }  if (!excluded(exclusions,element)) {    classpathElements.add(element);  }} @TO@ ThenBody:{  if (element.endsWith(JAR)) {    File file=new File(element);    if (file.exists()) {      try (JarFile jar=new JarFile(file)){        ZipEntry entry=jar.getEntry(WildFlySwarmClasspathConf.CLASSPATH_LOCATION);        if (entry != null) {          classpathConf.read(jar.getInputStream(entry));        }      } catch (      IOException e) {        e.printStackTrace();      }    }  }  if (!excluded(exclusions,element)) {    classpathElements.add(element);  }} @AT@ 2385 @LENGTH@ 801
---INS IfStatement@@if (element.endsWith(JAR)) {  File file=new File(element);  if (file.exists()) {    try (JarFile jar=new JarFile(file)){      ZipEntry entry=jar.getEntry(WildFlySwarmClasspathConf.CLASSPATH_LOCATION);      if (entry != null) {        classpathConf.read(jar.getInputStream(entry));      }    } catch (    IOException e) {      e.printStackTrace();    }  }} @TO@ Block@@ThenBody:{  if (element.endsWith(JAR)) {    try (JarFile jar=new JarFile(new File(element))){      ZipEntry entry=jar.getEntry(WildFlySwarmClasspathConf.CLASSPATH_LOCATION);      if (entry != null) {        classpathConf.read(jar.getInputStream(entry));      }    } catch (    IOException e) {      e.printStackTrace();    }  }  if (!excluded(exclusions,element)) {    classpathElements.add(element);  }} @AT@ 2473 @LENGTH@ 731
------MOV MethodInvocation@@element.endsWith(JAR) @TO@ IfStatement@@if (element.endsWith(JAR)) {  File file=new File(element);  if (file.exists()) {    try (JarFile jar=new JarFile(file)){      ZipEntry entry=jar.getEntry(WildFlySwarmClasspathConf.CLASSPATH_LOCATION);      if (entry != null) {        classpathConf.read(jar.getInputStream(entry));      }    } catch (    IOException e) {      e.printStackTrace();    }  }} @AT@ 2476 @LENGTH@ 21
------INS Block@@ThenBody:{  File file=new File(element);  if (file.exists()) {    try (JarFile jar=new JarFile(file)){      ZipEntry entry=jar.getEntry(WildFlySwarmClasspathConf.CLASSPATH_LOCATION);      if (entry != null) {        classpathConf.read(jar.getInputStream(entry));      }    } catch (    IOException e) {      e.printStackTrace();    }  }} @TO@ IfStatement@@if (element.endsWith(JAR)) {  File file=new File(element);  if (file.exists()) {    try (JarFile jar=new JarFile(file)){      ZipEntry entry=jar.getEntry(WildFlySwarmClasspathConf.CLASSPATH_LOCATION);      if (entry != null) {        classpathConf.read(jar.getInputStream(entry));      }    } catch (    IOException e) {      e.printStackTrace();    }  }} @AT@ 2499 @LENGTH@ 705
---------MOV IfStatement@@if (element.endsWith(JAR)) {  try (JarFile jar=new JarFile(new File(element))){    ZipEntry entry=jar.getEntry(WildFlySwarmClasspathConf.CLASSPATH_LOCATION);    if (entry != null) {      classpathConf.read(jar.getInputStream(entry));    }  } catch (  IOException e) {    e.printStackTrace();  }} @TO@ Block@@ThenBody:{  File file=new File(element);  if (file.exists()) {    try (JarFile jar=new JarFile(file)){      ZipEntry entry=jar.getEntry(WildFlySwarmClasspathConf.CLASSPATH_LOCATION);      if (entry != null) {        classpathConf.read(jar.getInputStream(entry));      }    } catch (    IOException e) {      e.printStackTrace();    }  }} @AT@ 2473 @LENGTH@ 514
------------UPD Block@@ThenBody:{  try (JarFile jar=new JarFile(new File(element))){    ZipEntry entry=jar.getEntry(WildFlySwarmClasspathConf.CLASSPATH_LOCATION);    if (entry != null) {      classpathConf.read(jar.getInputStream(entry));    }  } catch (  IOException e) {    e.printStackTrace();  }} @TO@ ThenBody:{  try (JarFile jar=new JarFile(file)){    ZipEntry entry=jar.getEntry(WildFlySwarmClasspathConf.CLASSPATH_LOCATION);    if (entry != null) {      classpathConf.read(jar.getInputStream(entry));    }  } catch (  IOException e) {    e.printStackTrace();  }} @AT@ 2499 @LENGTH@ 488
---------------UPD TryStatement@@try (JarFile jar=new JarFile(new File(element))){  ZipEntry entry=jar.getEntry(WildFlySwarmClasspathConf.CLASSPATH_LOCATION);  if (entry != null) {    classpathConf.read(jar.getInputStream(entry));  }} catch (IOException e) {  e.printStackTrace();} @TO@ try (JarFile jar=new JarFile(file)){  ZipEntry entry=jar.getEntry(WildFlySwarmClasspathConf.CLASSPATH_LOCATION);  if (entry != null) {    classpathConf.read(jar.getInputStream(entry));  }} catch (IOException e) {  e.printStackTrace();} @AT@ 2525 @LENGTH@ 440
------------------UPD VariableDeclarationExpression@@JarFile jar=new JarFile(new File(element)) @TO@ JarFile jar=new JarFile(file) @AT@ 2530 @LENGTH@ 44
---------------------UPD VariableDeclarationFragment@@jar=new JarFile(new File(element)) @TO@ jar=new JarFile(file) @AT@ 2538 @LENGTH@ 36
------------------------UPD ClassInstanceCreation@@JarFile[new File(element)] @TO@ JarFile[file] @AT@ 2544 @LENGTH@ 30
---------------------------DEL ClassInstanceCreation@@File[element] @AT@ 2556 @LENGTH@ 17
------------------------------DEL New@@new @AT@ 2556 @LENGTH@ 3
------------------------------DEL SimpleType@@File @AT@ 2560 @LENGTH@ 4
---------------------------MOV SimpleName@@element @TO@ ClassInstanceCreation@@JarFile[new File(element)] @AT@ 2565 @LENGTH@ 7
------------INS MethodInvocation@@file.exists() @TO@ IfStatement@@if (element.endsWith(JAR)) {  try (JarFile jar=new JarFile(new File(element))){    ZipEntry entry=jar.getEntry(WildFlySwarmClasspathConf.CLASSPATH_LOCATION);    if (entry != null) {      classpathConf.read(jar.getInputStream(entry));    }  } catch (  IOException e) {    e.printStackTrace();  }} @AT@ 2584 @LENGTH@ 13
---------------INS SimpleName@@Name:file @TO@ MethodInvocation@@file.exists() @AT@ 2584 @LENGTH@ 4
---------------INS SimpleName@@MethodName:exists:[] @TO@ MethodInvocation@@file.exists() @AT@ 2589 @LENGTH@ 8
---------INS VariableDeclarationStatement@@File file=new File(element); @TO@ Block@@ThenBody:{  File file=new File(element);  if (file.exists()) {    try (JarFile jar=new JarFile(file)){      ZipEntry entry=jar.getEntry(WildFlySwarmClasspathConf.CLASSPATH_LOCATION);      if (entry != null) {        classpathConf.read(jar.getInputStream(entry));      }    } catch (    IOException e) {      e.printStackTrace();    }  }} @AT@ 2526 @LENGTH@ 30
------------INS SimpleType@@File @TO@ VariableDeclarationStatement@@File file=new File(element); @AT@ 2526 @LENGTH@ 4
------------INS VariableDeclarationFragment@@file=new File(element) @TO@ VariableDeclarationStatement@@File file=new File(element); @AT@ 2531 @LENGTH@ 24
---------------INS SimpleName@@file @TO@ VariableDeclarationFragment@@file=new File(element) @AT@ 2531 @LENGTH@ 4
---------------INS ClassInstanceCreation@@File[element] @TO@ VariableDeclarationFragment@@file=new File(element) @AT@ 2538 @LENGTH@ 17
------------------INS New@@new @TO@ ClassInstanceCreation@@File[element] @AT@ 2538 @LENGTH@ 3
------------------INS SimpleType@@File @TO@ ClassInstanceCreation@@File[element] @AT@ 2542 @LENGTH@ 4
------------------INS SimpleName@@element @TO@ ClassInstanceCreation@@File[element] @AT@ 2547 @LENGTH@ 7
---UPD IfStatement@@if (element.endsWith(JAR)) {  try (JarFile jar=new JarFile(new File(element))){    ZipEntry entry=jar.getEntry(WildFlySwarmClasspathConf.CLASSPATH_LOCATION);    if (entry != null) {      classpathConf.read(jar.getInputStream(entry));    }  } catch (  IOException e) {    e.printStackTrace();  }} @TO@ if (file.exists()) {  try (JarFile jar=new JarFile(file)){    ZipEntry entry=jar.getEntry(WildFlySwarmClasspathConf.CLASSPATH_LOCATION);    if (entry != null) {      classpathConf.read(jar.getInputStream(entry));    }  } catch (  IOException e) {    e.printStackTrace();  }} @AT@ 2473 @LENGTH@ 514


UPD TypeDeclaration@@[@Configuration, @ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration"), @EnableConfigurationProperties(MetricsComponentConfiguration.class), public]MetricsComponentAutoConfiguration,  @TO@ [@Configuration, @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration"), @EnableConfigurationProperties(MetricsComponentConfiguration.class), public]MetricsComponentAutoConfiguration,  @AT@ 1628 @LENGTH@ 2079
---UPD NormalAnnotation@@@ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1643 @LENGTH@ 79
---UPD NormalAnnotation@@@AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1723 @LENGTH@ 80


UPD TypeDeclaration@@[@Configuration, @ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration"), public]GeoCoderComponentAutoConfiguration,  @TO@ [@Configuration, @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration"), public]GeoCoderComponentAutoConfiguration,  @AT@ 1450 @LENGTH@ 625
---UPD NormalAnnotation@@@ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1465 @LENGTH@ 79
---UPD NormalAnnotation@@@AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1545 @LENGTH@ 80


DEL MethodDeclaration@@public, boolean, MethodName:process, Exchange exchange, AsyncCallback callback,  @AT@ 1821 @LENGTH@ 809
---DEL Modifier@@public @AT@ 1821 @LENGTH@ 6
---DEL PrimitiveType@@boolean @AT@ 1828 @LENGTH@ 7
---DEL SimpleName@@MethodName:process @AT@ 1836 @LENGTH@ 7
---DEL SingleVariableDeclaration@@Exchange exchange @AT@ 1844 @LENGTH@ 17
------DEL SimpleType@@Exchange @AT@ 1844 @LENGTH@ 8
------DEL SimpleName@@exchange @AT@ 1853 @LENGTH@ 8
---DEL SingleVariableDeclaration@@AsyncCallback callback @AT@ 1863 @LENGTH@ 22
------DEL SimpleType@@AsyncCallback @AT@ 1863 @LENGTH@ 13
------DEL SimpleName@@callback @AT@ 1877 @LENGTH@ 8
---DEL VariableDeclarationStatement@@final Message out=exchange.getOut(); @AT@ 1942 @LENGTH@ 38
------DEL Modifier@@final @AT@ 1942 @LENGTH@ 5
------DEL SimpleType@@Message @AT@ 1948 @LENGTH@ 7
------DEL VariableDeclarationFragment@@out=exchange.getOut() @AT@ 1956 @LENGTH@ 23
---------DEL SimpleName@@out @AT@ 1956 @LENGTH@ 3
---------DEL MethodInvocation@@exchange.getOut() @AT@ 1962 @LENGTH@ 17
------------DEL SimpleName@@Name:exchange @AT@ 1962 @LENGTH@ 8
------------DEL SimpleName@@MethodName:getOut:[] @AT@ 1971 @LENGTH@ 8
---DEL VariableDeclarationStatement@@final boolean reply=endpoint.isReply(); @AT@ 2271 @LENGTH@ 41
------DEL Modifier@@final @AT@ 2271 @LENGTH@ 5
------DEL PrimitiveType@@boolean @AT@ 2277 @LENGTH@ 7
------DEL VariableDeclarationFragment@@reply=endpoint.isReply() @AT@ 2285 @LENGTH@ 26
---------DEL SimpleName@@reply @AT@ 2285 @LENGTH@ 5
---------DEL MethodInvocation@@endpoint.isReply() @AT@ 2293 @LENGTH@ 18
------------DEL SimpleName@@Name:endpoint @AT@ 2293 @LENGTH@ 8
------------DEL SimpleName@@MethodName:isReply:[] @AT@ 2302 @LENGTH@ 9
---DEL ExpressionStatement@@MethodInvocation:out.setHeaders(in.getHeaders()) @AT@ 2321 @LENGTH@ 32
------DEL MethodInvocation@@out.setHeaders(in.getHeaders()) @AT@ 2321 @LENGTH@ 31
---------DEL SimpleName@@Name:out @AT@ 2321 @LENGTH@ 3
---------DEL SimpleName@@MethodName:setHeaders:[in.getHeaders()] @AT@ 2325 @LENGTH@ 27
------------DEL MethodInvocation@@in.getHeaders() @AT@ 2336 @LENGTH@ 15
---------------DEL SimpleName@@Name:in @AT@ 2336 @LENGTH@ 2
---------------DEL SimpleName@@MethodName:getHeaders:[] @AT@ 2339 @LENGTH@ 12
---DEL IfStatement@@if (reply) {  processReply(exchange,callback,value,ref);} else {  ref.setValue(value);  out.setBody(in.getBody());  callback.done(true);} @AT@ 2362 @LENGTH@ 239
------DEL SimpleName@@reply @AT@ 2366 @LENGTH@ 5
------DEL Block@@ThenBody:{  processReply(exchange,callback,value,ref);} @AT@ 2373 @LENGTH@ 87
---------DEL ExpressionStatement@@MethodInvocation:processReply(exchange,callback,value,ref) @AT@ 2405 @LENGTH@ 45
------------DEL MethodInvocation@@processReply(exchange,callback,value,ref) @AT@ 2405 @LENGTH@ 44
---------------DEL SimpleName@@MethodName:processReply:[exchange, callback, value, ref] @AT@ 2405 @LENGTH@ 44
------------------DEL SimpleName@@exchange @AT@ 2418 @LENGTH@ 8
------------------DEL SimpleName@@callback @AT@ 2428 @LENGTH@ 8
------------------DEL SimpleName@@value @AT@ 2438 @LENGTH@ 5
------------------DEL SimpleName@@ref @AT@ 2445 @LENGTH@ 3
------DEL Block@@ElseBody:{  ref.setValue(value);  out.setBody(in.getBody());  callback.done(true);} @AT@ 2466 @LENGTH@ 135
---------DEL ExpressionStatement@@MethodInvocation:ref.setValue(value) @AT@ 2499 @LENGTH@ 20
------------DEL MethodInvocation@@ref.setValue(value) @AT@ 2499 @LENGTH@ 19
---------------DEL SimpleName@@Name:ref @AT@ 2499 @LENGTH@ 3
---------------DEL SimpleName@@MethodName:setValue:[value] @AT@ 2503 @LENGTH@ 15
------------------DEL SimpleName@@value @AT@ 2512 @LENGTH@ 5
---------DEL ExpressionStatement@@MethodInvocation:out.setBody(in.getBody()) @AT@ 2532 @LENGTH@ 26
------------DEL MethodInvocation@@out.setBody(in.getBody()) @AT@ 2532 @LENGTH@ 25
---------------DEL SimpleName@@Name:out @AT@ 2532 @LENGTH@ 3
---------------DEL SimpleName@@MethodName:setBody:[in.getBody()] @AT@ 2536 @LENGTH@ 21
------------------DEL MethodInvocation@@in.getBody() @AT@ 2544 @LENGTH@ 12
---------------------DEL SimpleName@@Name:in @AT@ 2544 @LENGTH@ 2
---------------------DEL SimpleName@@MethodName:getBody:[] @AT@ 2547 @LENGTH@ 9
---------DEL ExpressionStatement@@MethodInvocation:callback.done(true) @AT@ 2571 @LENGTH@ 20
------------DEL MethodInvocation@@callback.done(true) @AT@ 2571 @LENGTH@ 19
---------------DEL SimpleName@@Name:callback @AT@ 2571 @LENGTH@ 8
---------------DEL SimpleName@@MethodName:done:[true] @AT@ 2580 @LENGTH@ 10
------------------DEL BooleanLiteral@@true @AT@ 2585 @LENGTH@ 4
---DEL ReturnStatement@@PrefixExpression:!reply @AT@ 2610 @LENGTH@ 14
------DEL PrefixExpression@@!reply @AT@ 2617 @LENGTH@ 6
---------DEL Operator@@! @AT@ 2617 @LENGTH@ 1
---------DEL SimpleName@@reply @AT@ 2618 @LENGTH@ 5


INS IfStatement@@if (location != null) {  setLocations(location.split(","));} @TO@ MethodDeclaration@@public, void, MethodName:setLocation, String location,  @AT@ 9418 @LENGTH@ 80
---INS InfixExpression@@location != null @TO@ IfStatement@@if (location != null) {  setLocations(location.split(","));} @AT@ 9422 @LENGTH@ 16
------INS SimpleName@@location @TO@ InfixExpression@@location != null @AT@ 9422 @LENGTH@ 8
------INS Operator@@!= @TO@ InfixExpression@@location != null @AT@ 9430 @LENGTH@ 2
------INS NullLiteral@@null @TO@ InfixExpression@@location != null @AT@ 9434 @LENGTH@ 4
---INS Block@@ThenBody:{  setLocations(location.split(","));} @TO@ IfStatement@@if (location != null) {  setLocations(location.split(","));} @AT@ 9440 @LENGTH@ 58
------MOV ExpressionStatement@@MethodInvocation:setLocations(location.split(",")) @TO@ Block@@ThenBody:{  setLocations(location.split(","));} @AT@ 9418 @LENGTH@ 34


INS IfStatement@@if (sniHostNamesDefinition != null) {  newInstance.addAllSniHostNames(sniHostNamesDefinition.getSniHostName());} @TO@ MethodDeclaration@@protected, SSLContextClientParameters, MethodName:createInstance,  @AT@ 1627 @LENGTH@ 132
---INS InfixExpression@@sniHostNamesDefinition != null @TO@ IfStatement@@if (sniHostNamesDefinition != null) {  newInstance.addAllSniHostNames(sniHostNamesDefinition.getSniHostName());} @AT@ 1631 @LENGTH@ 30
------INS SimpleName@@sniHostNamesDefinition @TO@ InfixExpression@@sniHostNamesDefinition != null @AT@ 1631 @LENGTH@ 22
------INS Operator@@!= @TO@ InfixExpression@@sniHostNamesDefinition != null @AT@ 1653 @LENGTH@ 2
------INS NullLiteral@@null @TO@ InfixExpression@@sniHostNamesDefinition != null @AT@ 1657 @LENGTH@ 4
---INS Block@@ThenBody:{  newInstance.addAllSniHostNames(sniHostNamesDefinition.getSniHostName());} @TO@ IfStatement@@if (sniHostNamesDefinition != null) {  newInstance.addAllSniHostNames(sniHostNamesDefinition.getSniHostName());} @AT@ 1663 @LENGTH@ 96
------MOV ExpressionStatement@@MethodInvocation:newInstance.addAllSniHostNames(sniHostNamesDefinition.getSniHostName()) @TO@ Block@@ThenBody:{  newInstance.addAllSniHostNames(sniHostNamesDefinition.getSniHostName());} @AT@ 1627 @LENGTH@ 72


UPD TypeDeclaration@@[@Configuration, @ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration"), public]JavaSpaceComponentAutoConfiguration,  @TO@ [@Configuration, @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration"), public]JavaSpaceComponentAutoConfiguration,  @AT@ 1453 @LENGTH@ 632
---UPD NormalAnnotation@@@ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1468 @LENGTH@ 79
---UPD NormalAnnotation@@@AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1548 @LENGTH@ 80


UPD TypeDeclaration@@[@Configuration, @ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration"), @EnableConfigurationProperties(JdbcComponentConfiguration.class), public]JdbcComponentAutoConfiguration,  @TO@ [@Configuration, @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration"), @EnableConfigurationProperties(JdbcComponentConfiguration.class), public]JdbcComponentAutoConfiguration,  @AT@ 1619 @LENGTH@ 2039
---UPD NormalAnnotation@@@ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1634 @LENGTH@ 79
---UPD NormalAnnotation@@@AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1714 @LENGTH@ 80


INS ExpressionStatement@@MethodInvocation:context.setMixInAnnotations(PreAuthenticatedAuthenticationToken.class,PreAuthenticatedAuthenticationTokenMixin.class) @TO@ MethodDeclaration@@public, void, MethodName:setupModule, SetupContext context,  @AT@ 2792 @LENGTH@ 119
---INS MethodInvocation@@context.setMixInAnnotations(PreAuthenticatedAuthenticationToken.class,PreAuthenticatedAuthenticationTokenMixin.class) @TO@ ExpressionStatement@@MethodInvocation:context.setMixInAnnotations(PreAuthenticatedAuthenticationToken.class,PreAuthenticatedAuthenticationTokenMixin.class) @AT@ 2792 @LENGTH@ 118
------INS SimpleName@@Name:context @TO@ MethodInvocation@@context.setMixInAnnotations(PreAuthenticatedAuthenticationToken.class,PreAuthenticatedAuthenticationTokenMixin.class) @AT@ 2792 @LENGTH@ 7
------INS SimpleName@@MethodName:setMixInAnnotations:[PreAuthenticatedAuthenticationToken.class, PreAuthenticatedAuthenticationTokenMixin.class] @TO@ MethodInvocation@@context.setMixInAnnotations(PreAuthenticatedAuthenticationToken.class,PreAuthenticatedAuthenticationTokenMixin.class) @AT@ 2800 @LENGTH@ 110
---------INS TypeLiteral@@PreAuthenticatedAuthenticationToken.class @TO@ SimpleName@@MethodName:setMixInAnnotations:[PreAuthenticatedAuthenticationToken.class, PreAuthenticatedAuthenticationTokenMixin.class] @AT@ 2820 @LENGTH@ 41
---------INS TypeLiteral@@PreAuthenticatedAuthenticationTokenMixin.class @TO@ SimpleName@@MethodName:setMixInAnnotations:[PreAuthenticatedAuthenticationToken.class, PreAuthenticatedAuthenticationTokenMixin.class] @AT@ 2863 @LENGTH@ 46


UPD EnhancedForStatement@@for (FinderParameter finderParameter : finderParameters) {  JavaSymbolName fieldName=finderParameter.getName();  JavaType fieldType=finderParameter.getType();  boolean found=false;  for (  FieldMetadata field : allEntityFields) {    if (field.getFieldName().equals(fieldName) && field.getFieldType().equals(fieldType)) {      String fieldPathName="";      if (field.getAnnotation(JpaJavaType.ID) != null || field.getAnnotation(JpaJavaType.EMBEDDED_ID) != null) {        fieldPathName="getEntityId()";      } else {        fieldPathName=String.format("%s.%s",StringUtils.uncapitalize(entity.getSimpleTypeName()),field.getFieldName());      }      if (typesFieldMaps != null) {        fieldNamesMap.put(fieldName.getSymbolName(),fieldPathName);      }      boolean fieldFoundInDto=false;      for (      FieldMetadata dtoField : allFormBeanFields) {        if (dtoField.getFieldName().equals(fieldName) && dtoField.getFieldType().equals(fieldType)) {          if (typeFieldMetadataMap != null) {            fieldMetadataMap.put(fieldName.getSymbolName(),dtoField);          }          fieldFoundInDto=true;        }      }      Validate.isTrue(fieldFoundInDto,"Couldn't find a field with same name and type that %s on DTO %s",fieldName.getSymbolName(),formBeanType.getSimpleTypeName());      found=true;      break;    }  }  if (!found) {    for (    FieldMetadata field : allEntityFields) {      found=findDtoFieldRecursivelyAndAddToMappings(entity,fieldNamesMap,fieldMetadataMap,found,field,fieldName,fieldType,allFormBeanFields,formBeanType.getSimpleTypeName());    }  }  if (!found) {    throw new IllegalArgumentException(String.format("Field %s couldn't be located in DTO %s. Please, be sure that it is well " + "written and exists in %s or its related entities.",fieldName,formBeanType.getSimpleTypeName(),entity.getSimpleTypeName()));  }  finderParametersList.add(finderParameter);} @TO@ for (FinderParameter finderParameter : finderParameters) {  JavaSymbolName fieldName=finderParameter.getName();  JavaType fieldType=finderParameter.getType();  boolean found=false;  List<FieldMetadata> allFormBeanFields=new ArrayList<FieldMetadata>();  if (getTypeLocationService().getTypeDetails(formBeanType) != null && getTypeLocationService().getTypeDetails(formBeanType).getAnnotation(RooJavaType.ROO_DTO) != null) {    allFormBeanFields=getMemberDetailsScanner().getMemberDetails(this.getClass().getName(),getTypeLocationService().getTypeDetails(formBeanType)).getFields();  }  for (  FieldMetadata field : allEntityFields) {    if (field.getFieldName().equals(fieldName) && field.getFieldType().equals(fieldType)) {      String fieldPathName="";      if (field.getAnnotation(JpaJavaType.ID) != null || field.getAnnotation(JpaJavaType.EMBEDDED_ID) != null) {        fieldPathName="getEntityId()";      } else {        fieldPathName=String.format("%s.%s",StringUtils.uncapitalize(entity.getSimpleTypeName()),field.getFieldName());      }      if (typesFieldMaps != null) {        fieldNamesMap.put(fieldName.getSymbolName(),fieldPathName);      }      if (!allFormBeanFields.isEmpty()) {        boolean fieldFoundInDto=false;        for (        FieldMetadata dtoField : allFormBeanFields) {          if (dtoField.getFieldName().equals(fieldName) && dtoField.getFieldType().equals(fieldType)) {            if (typeFieldMetadataMap != null) {              fieldMetadataMap.put(fieldName.getSymbolName(),dtoField);            }            fieldFoundInDto=true;          }        }        Validate.isTrue(fieldFoundInDto,"Couldn't find a field with same name and type that %s on DTO %s",fieldName.getSymbolName(),formBeanType.getSimpleTypeName());      } else {        fieldMetadataMap.put(fieldName.getSymbolName(),field);      }      found=true;      break;    }  }  if (!found) {    for (    FieldMetadata field : allEntityFields) {      found=findDtoFieldRecursivelyAndAddToMappings(entity,fieldNamesMap,fieldMetadataMap,found,field,fieldName,fieldType,allFormBeanFields,formBeanType.getSimpleTypeName());    }  }  if (!found) {    throw new IllegalArgumentException(String.format("Field %s couldn't be located in DTO %s. Please, be sure that it is well " + "written and exists in %s or its related entities.",fieldName,formBeanType.getSimpleTypeName(),entity.getSimpleTypeName()));  }  finderParametersList.add(finderParameter);} @AT@ 12016 @LENGTH@ 2708
---INS VariableDeclarationStatement@@List<FieldMetadata> allFormBeanFields=new ArrayList<FieldMetadata>(); @TO@ EnhancedForStatement@@for (FinderParameter finderParameter : finderParameters) {  JavaSymbolName fieldName=finderParameter.getName();  JavaType fieldType=finderParameter.getType();  boolean found=false;  for (  FieldMetadata field : allEntityFields) {    if (field.getFieldName().equals(fieldName) && field.getFieldType().equals(fieldType)) {      String fieldPathName="";      if (field.getAnnotation(JpaJavaType.ID) != null || field.getAnnotation(JpaJavaType.EMBEDDED_ID) != null) {        fieldPathName="getEntityId()";      } else {        fieldPathName=String.format("%s.%s",StringUtils.uncapitalize(entity.getSimpleTypeName()),field.getFieldName());      }      if (typesFieldMaps != null) {        fieldNamesMap.put(fieldName.getSymbolName(),fieldPathName);      }      boolean fieldFoundInDto=false;      for (      FieldMetadata dtoField : allFormBeanFields) {        if (dtoField.getFieldName().equals(fieldName) && dtoField.getFieldType().equals(fieldType)) {          if (typeFieldMetadataMap != null) {            fieldMetadataMap.put(fieldName.getSymbolName(),dtoField);          }          fieldFoundInDto=true;        }      }      Validate.isTrue(fieldFoundInDto,"Couldn't find a field with same name and type that %s on DTO %s",fieldName.getSymbolName(),formBeanType.getSimpleTypeName());      found=true;      break;    }  }  if (!found) {    for (    FieldMetadata field : allEntityFields) {      found=findDtoFieldRecursivelyAndAddToMappings(entity,fieldNamesMap,fieldMetadataMap,found,field,fieldName,fieldType,allFormBeanFields,formBeanType.getSimpleTypeName());    }  }  if (!found) {    throw new IllegalArgumentException(String.format("Field %s couldn't be located in DTO %s. Please, be sure that it is well " + "written and exists in %s or its related entities.",fieldName,formBeanType.getSimpleTypeName(),entity.getSimpleTypeName()));  }  finderParametersList.add(finderParameter);} @AT@ 12070 @LENGTH@ 71
------INS ParameterizedType@@List<FieldMetadata> @TO@ VariableDeclarationStatement@@List<FieldMetadata> allFormBeanFields=new ArrayList<FieldMetadata>(); @AT@ 12070 @LENGTH@ 19
---------INS SimpleType@@List @TO@ ParameterizedType@@List<FieldMetadata> @AT@ 12070 @LENGTH@ 4
---------INS SimpleType@@FieldMetadata @TO@ ParameterizedType@@List<FieldMetadata> @AT@ 12075 @LENGTH@ 13
------INS VariableDeclarationFragment@@allFormBeanFields=new ArrayList<FieldMetadata>() @TO@ VariableDeclarationStatement@@List<FieldMetadata> allFormBeanFields=new ArrayList<FieldMetadata>(); @AT@ 12090 @LENGTH@ 50
---------INS SimpleName@@allFormBeanFields @TO@ VariableDeclarationFragment@@allFormBeanFields=new ArrayList<FieldMetadata>() @AT@ 12090 @LENGTH@ 17
---------INS ClassInstanceCreation@@ArrayList<FieldMetadata>[] @TO@ VariableDeclarationFragment@@allFormBeanFields=new ArrayList<FieldMetadata>() @AT@ 12110 @LENGTH@ 30
------------INS New@@new @TO@ ClassInstanceCreation@@ArrayList<FieldMetadata>[] @AT@ 12110 @LENGTH@ 3
------------INS ParameterizedType@@ArrayList<FieldMetadata> @TO@ ClassInstanceCreation@@ArrayList<FieldMetadata>[] @AT@ 12114 @LENGTH@ 24
---------------INS SimpleType@@ArrayList @TO@ ParameterizedType@@ArrayList<FieldMetadata> @AT@ 12114 @LENGTH@ 9
---------------INS SimpleType@@FieldMetadata @TO@ ParameterizedType@@ArrayList<FieldMetadata> @AT@ 12124 @LENGTH@ 13
---INS IfStatement@@if (getTypeLocationService().getTypeDetails(formBeanType) != null && getTypeLocationService().getTypeDetails(formBeanType).getAnnotation(RooJavaType.ROO_DTO) != null) {  allFormBeanFields=getMemberDetailsScanner().getMemberDetails(this.getClass().getName(),getTypeLocationService().getTypeDetails(formBeanType)).getFields();} @TO@ EnhancedForStatement@@for (FinderParameter finderParameter : finderParameters) {  JavaSymbolName fieldName=finderParameter.getName();  JavaType fieldType=finderParameter.getType();  boolean found=false;  for (  FieldMetadata field : allEntityFields) {    if (field.getFieldName().equals(fieldName) && field.getFieldType().equals(fieldType)) {      String fieldPathName="";      if (field.getAnnotation(JpaJavaType.ID) != null || field.getAnnotation(JpaJavaType.EMBEDDED_ID) != null) {        fieldPathName="getEntityId()";      } else {        fieldPathName=String.format("%s.%s",StringUtils.uncapitalize(entity.getSimpleTypeName()),field.getFieldName());      }      if (typesFieldMaps != null) {        fieldNamesMap.put(fieldName.getSymbolName(),fieldPathName);      }      boolean fieldFoundInDto=false;      for (      FieldMetadata dtoField : allFormBeanFields) {        if (dtoField.getFieldName().equals(fieldName) && dtoField.getFieldType().equals(fieldType)) {          if (typeFieldMetadataMap != null) {            fieldMetadataMap.put(fieldName.getSymbolName(),dtoField);          }          fieldFoundInDto=true;        }      }      Validate.isTrue(fieldFoundInDto,"Couldn't find a field with same name and type that %s on DTO %s",fieldName.getSymbolName(),formBeanType.getSimpleTypeName());      found=true;      break;    }  }  if (!found) {    for (    FieldMetadata field : allEntityFields) {      found=findDtoFieldRecursivelyAndAddToMappings(entity,fieldNamesMap,fieldMetadataMap,found,field,fieldName,fieldType,allFormBeanFields,formBeanType.getSimpleTypeName());    }  }  if (!found) {    throw new IllegalArgumentException(String.format("Field %s couldn't be located in DTO %s. Please, be sure that it is well " + "written and exists in %s or its related entities.",fieldName,formBeanType.getSimpleTypeName(),entity.getSimpleTypeName()));  }  finderParametersList.add(finderParameter);} @AT@ 12148 @LENGTH@ 395
------INS InfixExpression@@getTypeLocationService().getTypeDetails(formBeanType) != null && getTypeLocationService().getTypeDetails(formBeanType).getAnnotation(RooJavaType.ROO_DTO) != null @TO@ IfStatement@@if (getTypeLocationService().getTypeDetails(formBeanType) != null && getTypeLocationService().getTypeDetails(formBeanType).getAnnotation(RooJavaType.ROO_DTO) != null) {  allFormBeanFields=getMemberDetailsScanner().getMemberDetails(this.getClass().getName(),getTypeLocationService().getTypeDetails(formBeanType)).getFields();} @AT@ 12152 @LENGTH@ 186
---------INS InfixExpression@@getTypeLocationService().getTypeDetails(formBeanType) != null @TO@ InfixExpression@@getTypeLocationService().getTypeDetails(formBeanType) != null && getTypeLocationService().getTypeDetails(formBeanType).getAnnotation(RooJavaType.ROO_DTO) != null @AT@ 12152 @LENGTH@ 61
------------INS MethodInvocation@@getTypeLocationService().getTypeDetails(formBeanType) @TO@ InfixExpression@@getTypeLocationService().getTypeDetails(formBeanType) != null @AT@ 12152 @LENGTH@ 53
---------------INS MethodInvocation@@MethodName:getTypeLocationService:[] @TO@ MethodInvocation@@getTypeLocationService().getTypeDetails(formBeanType) @AT@ 12152 @LENGTH@ 24
---------------INS SimpleName@@MethodName:getTypeDetails:[formBeanType] @TO@ MethodInvocation@@getTypeLocationService().getTypeDetails(formBeanType) @AT@ 12177 @LENGTH@ 28
------------------INS SimpleName@@formBeanType @TO@ SimpleName@@MethodName:getTypeDetails:[formBeanType] @AT@ 12192 @LENGTH@ 12
------------INS Operator@@!= @TO@ InfixExpression@@getTypeLocationService().getTypeDetails(formBeanType) != null @AT@ 12205 @LENGTH@ 2
------------INS NullLiteral@@null @TO@ InfixExpression@@getTypeLocationService().getTypeDetails(formBeanType) != null @AT@ 12209 @LENGTH@ 4
---------INS Operator@@&& @TO@ InfixExpression@@getTypeLocationService().getTypeDetails(formBeanType) != null && getTypeLocationService().getTypeDetails(formBeanType).getAnnotation(RooJavaType.ROO_DTO) != null @AT@ 12213 @LENGTH@ 2
---------INS InfixExpression@@getTypeLocationService().getTypeDetails(formBeanType).getAnnotation(RooJavaType.ROO_DTO) != null @TO@ InfixExpression@@getTypeLocationService().getTypeDetails(formBeanType) != null && getTypeLocationService().getTypeDetails(formBeanType).getAnnotation(RooJavaType.ROO_DTO) != null @AT@ 12227 @LENGTH@ 111
------------INS MethodInvocation@@getTypeLocationService().getTypeDetails(formBeanType).getAnnotation(RooJavaType.ROO_DTO) @TO@ InfixExpression@@getTypeLocationService().getTypeDetails(formBeanType).getAnnotation(RooJavaType.ROO_DTO) != null @AT@ 12227 @LENGTH@ 103
---------------INS MethodInvocation@@MethodName:getTypeDetails:[formBeanType] @TO@ MethodInvocation@@getTypeLocationService().getTypeDetails(formBeanType).getAnnotation(RooJavaType.ROO_DTO) @AT@ 12227 @LENGTH@ 53
------------------INS SimpleName@@formBeanType @TO@ MethodInvocation@@MethodName:getTypeDetails:[formBeanType] @AT@ 12267 @LENGTH@ 12
---------------INS MethodInvocation@@MethodName:getTypeLocationService:[] @TO@ MethodInvocation@@getTypeLocationService().getTypeDetails(formBeanType).getAnnotation(RooJavaType.ROO_DTO) @AT@ 12227 @LENGTH@ 24
---------------INS SimpleName@@MethodName:getAnnotation:[RooJavaType.ROO_DTO] @TO@ MethodInvocation@@getTypeLocationService().getTypeDetails(formBeanType).getAnnotation(RooJavaType.ROO_DTO) @AT@ 12281 @LENGTH@ 49
------------------INS QualifiedName@@RooJavaType.ROO_DTO @TO@ SimpleName@@MethodName:getAnnotation:[RooJavaType.ROO_DTO] @AT@ 12310 @LENGTH@ 19
---------------------INS SimpleName@@RooJavaType @TO@ QualifiedName@@RooJavaType.ROO_DTO @AT@ 12310 @LENGTH@ 11
---------------------INS SimpleName@@ROO_DTO @TO@ QualifiedName@@RooJavaType.ROO_DTO @AT@ 12322 @LENGTH@ 7
------------INS Operator@@!= @TO@ InfixExpression@@getTypeLocationService().getTypeDetails(formBeanType).getAnnotation(RooJavaType.ROO_DTO) != null @AT@ 12330 @LENGTH@ 2
------------INS NullLiteral@@null @TO@ InfixExpression@@getTypeLocationService().getTypeDetails(formBeanType).getAnnotation(RooJavaType.ROO_DTO) != null @AT@ 12334 @LENGTH@ 4
------INS Block@@ThenBody:{  allFormBeanFields=getMemberDetailsScanner().getMemberDetails(this.getClass().getName(),getTypeLocationService().getTypeDetails(formBeanType)).getFields();} @TO@ IfStatement@@if (getTypeLocationService().getTypeDetails(formBeanType) != null && getTypeLocationService().getTypeDetails(formBeanType).getAnnotation(RooJavaType.ROO_DTO) != null) {  allFormBeanFields=getMemberDetailsScanner().getMemberDetails(this.getClass().getName(),getTypeLocationService().getTypeDetails(formBeanType)).getFields();} @AT@ 12340 @LENGTH@ 203
---------INS ExpressionStatement@@Assignment:allFormBeanFields=getMemberDetailsScanner().getMemberDetails(this.getClass().getName(),getTypeLocationService().getTypeDetails(formBeanType)).getFields() @TO@ Block@@ThenBody:{  allFormBeanFields=getMemberDetailsScanner().getMemberDetails(this.getClass().getName(),getTypeLocationService().getTypeDetails(formBeanType)).getFields();} @AT@ 12350 @LENGTH@ 185
------------INS Assignment@@allFormBeanFields=getMemberDetailsScanner().getMemberDetails(this.getClass().getName(),getTypeLocationService().getTypeDetails(formBeanType)).getFields() @TO@ ExpressionStatement@@Assignment:allFormBeanFields=getMemberDetailsScanner().getMemberDetails(this.getClass().getName(),getTypeLocationService().getTypeDetails(formBeanType)).getFields() @AT@ 12350 @LENGTH@ 184
---------------MOV MethodInvocation@@getMemberDetailsScanner().getMemberDetails(this.getClass().getName(),getTypeLocationService().getTypeDetails(formBeanType)).getFields() @TO@ Assignment@@allFormBeanFields=getMemberDetailsScanner().getMemberDetails(this.getClass().getName(),getTypeLocationService().getTypeDetails(formBeanType)).getFields() @AT@ 11687 @LENGTH@ 148
---------------INS SimpleName@@allFormBeanFields @TO@ Assignment@@allFormBeanFields=getMemberDetailsScanner().getMemberDetails(this.getClass().getName(),getTypeLocationService().getTypeDetails(formBeanType)).getFields() @AT@ 12350 @LENGTH@ 17
---------------INS Operator@@= @TO@ Assignment@@allFormBeanFields=getMemberDetailsScanner().getMemberDetails(this.getClass().getName(),getTypeLocationService().getTypeDetails(formBeanType)).getFields() @AT@ 12367 @LENGTH@ 1
---UPD EnhancedForStatement@@for (FieldMetadata field : allEntityFields) {  if (field.getFieldName().equals(fieldName) && field.getFieldType().equals(fieldType)) {    String fieldPathName="";    if (field.getAnnotation(JpaJavaType.ID) != null || field.getAnnotation(JpaJavaType.EMBEDDED_ID) != null) {      fieldPathName="getEntityId()";    } else {      fieldPathName=String.format("%s.%s",StringUtils.uncapitalize(entity.getSimpleTypeName()),field.getFieldName());    }    if (typesFieldMaps != null) {      fieldNamesMap.put(fieldName.getSymbolName(),fieldPathName);    }    boolean fieldFoundInDto=false;    for (    FieldMetadata dtoField : allFormBeanFields) {      if (dtoField.getFieldName().equals(fieldName) && dtoField.getFieldType().equals(fieldType)) {        if (typeFieldMetadataMap != null) {          fieldMetadataMap.put(fieldName.getSymbolName(),dtoField);        }        fieldFoundInDto=true;      }    }    Validate.isTrue(fieldFoundInDto,"Couldn't find a field with same name and type that %s on DTO %s",fieldName.getSymbolName(),formBeanType.getSimpleTypeName());    found=true;    break;  }} @TO@ for (FieldMetadata field : allEntityFields) {  if (field.getFieldName().equals(fieldName) && field.getFieldType().equals(fieldType)) {    String fieldPathName="";    if (field.getAnnotation(JpaJavaType.ID) != null || field.getAnnotation(JpaJavaType.EMBEDDED_ID) != null) {      fieldPathName="getEntityId()";    } else {      fieldPathName=String.format("%s.%s",StringUtils.uncapitalize(entity.getSimpleTypeName()),field.getFieldName());    }    if (typesFieldMaps != null) {      fieldNamesMap.put(fieldName.getSymbolName(),fieldPathName);    }    if (!allFormBeanFields.isEmpty()) {      boolean fieldFoundInDto=false;      for (      FieldMetadata dtoField : allFormBeanFields) {        if (dtoField.getFieldName().equals(fieldName) && dtoField.getFieldType().equals(fieldType)) {          if (typeFieldMetadataMap != null) {            fieldMetadataMap.put(fieldName.getSymbolName(),dtoField);          }          fieldFoundInDto=true;        }      }      Validate.isTrue(fieldFoundInDto,"Couldn't find a field with same name and type that %s on DTO %s",fieldName.getSymbolName(),formBeanType.getSimpleTypeName());    } else {      fieldMetadataMap.put(fieldName.getSymbolName(),field);    }    found=true;    break;  }} @AT@ 12265 @LENGTH@ 1628
------UPD IfStatement@@if (field.getFieldName().equals(fieldName) && field.getFieldType().equals(fieldType)) {  String fieldPathName="";  if (field.getAnnotation(JpaJavaType.ID) != null || field.getAnnotation(JpaJavaType.EMBEDDED_ID) != null) {    fieldPathName="getEntityId()";  } else {    fieldPathName=String.format("%s.%s",StringUtils.uncapitalize(entity.getSimpleTypeName()),field.getFieldName());  }  if (typesFieldMaps != null) {    fieldNamesMap.put(fieldName.getSymbolName(),fieldPathName);  }  boolean fieldFoundInDto=false;  for (  FieldMetadata dtoField : allFormBeanFields) {    if (dtoField.getFieldName().equals(fieldName) && dtoField.getFieldType().equals(fieldType)) {      if (typeFieldMetadataMap != null) {        fieldMetadataMap.put(fieldName.getSymbolName(),dtoField);      }      fieldFoundInDto=true;    }  }  Validate.isTrue(fieldFoundInDto,"Couldn't find a field with same name and type that %s on DTO %s",fieldName.getSymbolName(),formBeanType.getSimpleTypeName());  found=true;  break;} @TO@ if (field.getFieldName().equals(fieldName) && field.getFieldType().equals(fieldType)) {  String fieldPathName="";  if (field.getAnnotation(JpaJavaType.ID) != null || field.getAnnotation(JpaJavaType.EMBEDDED_ID) != null) {    fieldPathName="getEntityId()";  } else {    fieldPathName=String.format("%s.%s",StringUtils.uncapitalize(entity.getSimpleTypeName()),field.getFieldName());  }  if (typesFieldMaps != null) {    fieldNamesMap.put(fieldName.getSymbolName(),fieldPathName);  }  if (!allFormBeanFields.isEmpty()) {    boolean fieldFoundInDto=false;    for (    FieldMetadata dtoField : allFormBeanFields) {      if (dtoField.getFieldName().equals(fieldName) && dtoField.getFieldType().equals(fieldType)) {        if (typeFieldMetadataMap != null) {          fieldMetadataMap.put(fieldName.getSymbolName(),dtoField);        }        fieldFoundInDto=true;      }    }    Validate.isTrue(fieldFoundInDto,"Couldn't find a field with same name and type that %s on DTO %s",fieldName.getSymbolName(),formBeanType.getSimpleTypeName());  } else {    fieldMetadataMap.put(fieldName.getSymbolName(),field);  }  found=true;  break;} @AT@ 12319 @LENGTH@ 1566
---------UPD Block@@ThenBody:{  String fieldPathName="";  if (field.getAnnotation(JpaJavaType.ID) != null || field.getAnnotation(JpaJavaType.EMBEDDED_ID) != null) {    fieldPathName="getEntityId()";  } else {    fieldPathName=String.format("%s.%s",StringUtils.uncapitalize(entity.getSimpleTypeName()),field.getFieldName());  }  if (typesFieldMaps != null) {    fieldNamesMap.put(fieldName.getSymbolName(),fieldPathName);  }  boolean fieldFoundInDto=false;  for (  FieldMetadata dtoField : allFormBeanFields) {    if (dtoField.getFieldName().equals(fieldName) && dtoField.getFieldType().equals(fieldType)) {      if (typeFieldMetadataMap != null) {        fieldMetadataMap.put(fieldName.getSymbolName(),dtoField);      }      fieldFoundInDto=true;    }  }  Validate.isTrue(fieldFoundInDto,"Couldn't find a field with same name and type that %s on DTO %s",fieldName.getSymbolName(),formBeanType.getSimpleTypeName());  found=true;  break;} @TO@ ThenBody:{  String fieldPathName="";  if (field.getAnnotation(JpaJavaType.ID) != null || field.getAnnotation(JpaJavaType.EMBEDDED_ID) != null) {    fieldPathName="getEntityId()";  } else {    fieldPathName=String.format("%s.%s",StringUtils.uncapitalize(entity.getSimpleTypeName()),field.getFieldName());  }  if (typesFieldMaps != null) {    fieldNamesMap.put(fieldName.getSymbolName(),fieldPathName);  }  if (!allFormBeanFields.isEmpty()) {    boolean fieldFoundInDto=false;    for (    FieldMetadata dtoField : allFormBeanFields) {      if (dtoField.getFieldName().equals(fieldName) && dtoField.getFieldType().equals(fieldType)) {        if (typeFieldMetadataMap != null) {          fieldMetadataMap.put(fieldName.getSymbolName(),dtoField);        }        fieldFoundInDto=true;      }    }    Validate.isTrue(fieldFoundInDto,"Couldn't find a field with same name and type that %s on DTO %s",fieldName.getSymbolName(),formBeanType.getSimpleTypeName());  } else {    fieldMetadataMap.put(fieldName.getSymbolName(),field);  }  found=true;  break;} @AT@ 12405 @LENGTH@ 1480
------------INS IfStatement@@if (!allFormBeanFields.isEmpty()) {  boolean fieldFoundInDto=false;  for (  FieldMetadata dtoField : allFormBeanFields) {    if (dtoField.getFieldName().equals(fieldName) && dtoField.getFieldType().equals(fieldType)) {      if (typeFieldMetadataMap != null) {        fieldMetadataMap.put(fieldName.getSymbolName(),dtoField);      }      fieldFoundInDto=true;    }  }  Validate.isTrue(fieldFoundInDto,"Couldn't find a field with same name and type that %s on DTO %s",fieldName.getSymbolName(),formBeanType.getSimpleTypeName());} else {  fieldMetadataMap.put(fieldName.getSymbolName(),field);} @TO@ Block@@ThenBody:{  String fieldPathName="";  if (field.getAnnotation(JpaJavaType.ID) != null || field.getAnnotation(JpaJavaType.EMBEDDED_ID) != null) {    fieldPathName="getEntityId()";  } else {    fieldPathName=String.format("%s.%s",StringUtils.uncapitalize(entity.getSimpleTypeName()),field.getFieldName());  }  if (typesFieldMaps != null) {    fieldNamesMap.put(fieldName.getSymbolName(),fieldPathName);  }  boolean fieldFoundInDto=false;  for (  FieldMetadata dtoField : allFormBeanFields) {    if (dtoField.getFieldName().equals(fieldName) && dtoField.getFieldType().equals(fieldType)) {      if (typeFieldMetadataMap != null) {        fieldMetadataMap.put(fieldName.getSymbolName(),dtoField);      }      fieldFoundInDto=true;    }  }  Validate.isTrue(fieldFoundInDto,"Couldn't find a field with same name and type that %s on DTO %s",fieldName.getSymbolName(),formBeanType.getSimpleTypeName());  found=true;  break;} @AT@ 13538 @LENGTH@ 792
---------------INS PrefixExpression@@!allFormBeanFields.isEmpty() @TO@ IfStatement@@if (!allFormBeanFields.isEmpty()) {  boolean fieldFoundInDto=false;  for (  FieldMetadata dtoField : allFormBeanFields) {    if (dtoField.getFieldName().equals(fieldName) && dtoField.getFieldType().equals(fieldType)) {      if (typeFieldMetadataMap != null) {        fieldMetadataMap.put(fieldName.getSymbolName(),dtoField);      }      fieldFoundInDto=true;    }  }  Validate.isTrue(fieldFoundInDto,"Couldn't find a field with same name and type that %s on DTO %s",fieldName.getSymbolName(),formBeanType.getSimpleTypeName());} else {  fieldMetadataMap.put(fieldName.getSymbolName(),field);} @AT@ 13542 @LENGTH@ 28
------------------INS Operator@@! @TO@ PrefixExpression@@!allFormBeanFields.isEmpty() @AT@ 13542 @LENGTH@ 1
------------------INS MethodInvocation@@allFormBeanFields.isEmpty() @TO@ PrefixExpression@@!allFormBeanFields.isEmpty() @AT@ 13543 @LENGTH@ 27
---------------------INS SimpleName@@Name:allFormBeanFields @TO@ MethodInvocation@@allFormBeanFields.isEmpty() @AT@ 13543 @LENGTH@ 17
---------------------INS SimpleName@@MethodName:isEmpty:[] @TO@ MethodInvocation@@allFormBeanFields.isEmpty() @AT@ 13561 @LENGTH@ 9
---------------INS Block@@ThenBody:{  boolean fieldFoundInDto=false;  for (  FieldMetadata dtoField : allFormBeanFields) {    if (dtoField.getFieldName().equals(fieldName) && dtoField.getFieldType().equals(fieldType)) {      if (typeFieldMetadataMap != null) {        fieldMetadataMap.put(fieldName.getSymbolName(),dtoField);      }      fieldFoundInDto=true;    }  }  Validate.isTrue(fieldFoundInDto,"Couldn't find a field with same name and type that %s on DTO %s",fieldName.getSymbolName(),formBeanType.getSimpleTypeName());} @TO@ IfStatement@@if (!allFormBeanFields.isEmpty()) {  boolean fieldFoundInDto=false;  for (  FieldMetadata dtoField : allFormBeanFields) {    if (dtoField.getFieldName().equals(fieldName) && dtoField.getFieldType().equals(fieldType)) {      if (typeFieldMetadataMap != null) {        fieldMetadataMap.put(fieldName.getSymbolName(),dtoField);      }      fieldFoundInDto=true;    }  }  Validate.isTrue(fieldFoundInDto,"Couldn't find a field with same name and type that %s on DTO %s",fieldName.getSymbolName(),formBeanType.getSimpleTypeName());} else {  fieldMetadataMap.put(fieldName.getSymbolName(),field);} @AT@ 13572 @LENGTH@ 671
------------------MOV VariableDeclarationStatement@@boolean fieldFoundInDto=false; @TO@ Block@@ThenBody:{  boolean fieldFoundInDto=false;  for (  FieldMetadata dtoField : allFormBeanFields) {    if (dtoField.getFieldName().equals(fieldName) && dtoField.getFieldType().equals(fieldType)) {      if (typeFieldMetadataMap != null) {        fieldMetadataMap.put(fieldName.getSymbolName(),dtoField);      }      fieldFoundInDto=true;    }  }  Validate.isTrue(fieldFoundInDto,"Couldn't find a field with same name and type that %s on DTO %s",fieldName.getSymbolName(),formBeanType.getSimpleTypeName());} @AT@ 13212 @LENGTH@ 32
------------------MOV EnhancedForStatement@@for (FieldMetadata dtoField : allFormBeanFields) {  if (dtoField.getFieldName().equals(fieldName) && dtoField.getFieldType().equals(fieldType)) {    if (typeFieldMetadataMap != null) {      fieldMetadataMap.put(fieldName.getSymbolName(),dtoField);    }    fieldFoundInDto=true;  }} @TO@ Block@@ThenBody:{  boolean fieldFoundInDto=false;  for (  FieldMetadata dtoField : allFormBeanFields) {    if (dtoField.getFieldName().equals(fieldName) && dtoField.getFieldType().equals(fieldType)) {      if (typeFieldMetadataMap != null) {        fieldMetadataMap.put(fieldName.getSymbolName(),dtoField);      }      fieldFoundInDto=true;    }  }  Validate.isTrue(fieldFoundInDto,"Couldn't find a field with same name and type that %s on DTO %s",fieldName.getSymbolName(),formBeanType.getSimpleTypeName());} @AT@ 13255 @LENGTH@ 378
------------------MOV ExpressionStatement@@MethodInvocation:Validate.isTrue(fieldFoundInDto,"Couldn't find a field with same name and type that %s on DTO %s",fieldName.getSymbolName(),formBeanType.getSimpleTypeName()) @TO@ Block@@ThenBody:{  boolean fieldFoundInDto=false;  for (  FieldMetadata dtoField : allFormBeanFields) {    if (dtoField.getFieldName().equals(fieldName) && dtoField.getFieldType().equals(fieldType)) {      if (typeFieldMetadataMap != null) {        fieldMetadataMap.put(fieldName.getSymbolName(),dtoField);      }      fieldFoundInDto=true;    }  }  Validate.isTrue(fieldFoundInDto,"Couldn't find a field with same name and type that %s on DTO %s",fieldName.getSymbolName(),formBeanType.getSimpleTypeName());} @AT@ 13644 @LENGTH@ 189
---------------INS Block@@ElseBody:{  fieldMetadataMap.put(fieldName.getSymbolName(),field);} @TO@ IfStatement@@if (!allFormBeanFields.isEmpty()) {  boolean fieldFoundInDto=false;  for (  FieldMetadata dtoField : allFormBeanFields) {    if (dtoField.getFieldName().equals(fieldName) && dtoField.getFieldType().equals(fieldType)) {      if (typeFieldMetadataMap != null) {        fieldMetadataMap.put(fieldName.getSymbolName(),dtoField);      }      fieldFoundInDto=true;    }  }  Validate.isTrue(fieldFoundInDto,"Couldn't find a field with same name and type that %s on DTO %s",fieldName.getSymbolName(),formBeanType.getSimpleTypeName());} else {  fieldMetadataMap.put(fieldName.getSymbolName(),field);} @AT@ 14249 @LENGTH@ 81
------------------INS ExpressionStatement@@MethodInvocation:fieldMetadataMap.put(fieldName.getSymbolName(),field) @TO@ Block@@ElseBody:{  fieldMetadataMap.put(fieldName.getSymbolName(),field);} @AT@ 14263 @LENGTH@ 55
---------------------INS MethodInvocation@@fieldMetadataMap.put(fieldName.getSymbolName(),field) @TO@ ExpressionStatement@@MethodInvocation:fieldMetadataMap.put(fieldName.getSymbolName(),field) @AT@ 14263 @LENGTH@ 54
------------------------INS SimpleName@@Name:fieldMetadataMap @TO@ MethodInvocation@@fieldMetadataMap.put(fieldName.getSymbolName(),field) @AT@ 14263 @LENGTH@ 16
------------------------INS SimpleName@@MethodName:put:[fieldName.getSymbolName(), field] @TO@ MethodInvocation@@fieldMetadataMap.put(fieldName.getSymbolName(),field) @AT@ 14280 @LENGTH@ 37
---------------------------INS MethodInvocation@@fieldName.getSymbolName() @TO@ SimpleName@@MethodName:put:[fieldName.getSymbolName(), field] @AT@ 14284 @LENGTH@ 25
------------------------------INS SimpleName@@Name:fieldName @TO@ MethodInvocation@@fieldName.getSymbolName() @AT@ 14284 @LENGTH@ 9
------------------------------INS SimpleName@@MethodName:getSymbolName:[] @TO@ MethodInvocation@@fieldName.getSymbolName() @AT@ 14294 @LENGTH@ 15
---------------------------INS SimpleName@@field @TO@ SimpleName@@MethodName:put:[fieldName.getSymbolName(), field] @AT@ 14311 @LENGTH@ 5


UPD TypeDeclaration@@[@Configuration, @ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration"), @EnableConfigurationProperties(WebsocketComponentConfiguration.class), public]WebsocketComponentAutoConfiguration,  @TO@ [@Configuration, @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration"), @EnableConfigurationProperties(WebsocketComponentConfiguration.class), public]WebsocketComponentAutoConfiguration,  @AT@ 1634 @LENGTH@ 2097
---UPD NormalAnnotation@@@ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1649 @LENGTH@ 79
---UPD NormalAnnotation@@@AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1729 @LENGTH@ 80


UPD VariableDeclarationStatement@@CsrfToken token=(CsrfToken)request.getAttribute(CsrfRequestPostProcessor.TestCsrfTokenRepository.ATTR_NAME); @TO@ CsrfToken token=(CsrfToken)request.getAttribute(CsrfRequestPostProcessor.TestCsrfTokenRepository.TOKEN_ATTR_NAME); @AT@ 2310 @LENGTH@ 116
---UPD VariableDeclarationFragment@@token=(CsrfToken)request.getAttribute(CsrfRequestPostProcessor.TestCsrfTokenRepository.ATTR_NAME) @TO@ token=(CsrfToken)request.getAttribute(CsrfRequestPostProcessor.TestCsrfTokenRepository.TOKEN_ATTR_NAME) @AT@ 2320 @LENGTH@ 105
------UPD CastExpression@@(CsrfToken)request.getAttribute(CsrfRequestPostProcessor.TestCsrfTokenRepository.ATTR_NAME) @TO@ (CsrfToken)request.getAttribute(CsrfRequestPostProcessor.TestCsrfTokenRepository.TOKEN_ATTR_NAME) @AT@ 2328 @LENGTH@ 97
---------UPD MethodInvocation@@request.getAttribute(CsrfRequestPostProcessor.TestCsrfTokenRepository.ATTR_NAME) @TO@ request.getAttribute(CsrfRequestPostProcessor.TestCsrfTokenRepository.TOKEN_ATTR_NAME) @AT@ 2340 @LENGTH@ 85
------------UPD SimpleName@@MethodName:getAttribute:[CsrfRequestPostProcessor.TestCsrfTokenRepository.ATTR_NAME] @TO@ MethodName:getAttribute:[CsrfRequestPostProcessor.TestCsrfTokenRepository.TOKEN_ATTR_NAME] @AT@ 2353 @LENGTH@ 72
---------------UPD QualifiedName@@CsrfRequestPostProcessor.TestCsrfTokenRepository.ATTR_NAME @TO@ CsrfRequestPostProcessor.TestCsrfTokenRepository.TOKEN_ATTR_NAME @AT@ 2366 @LENGTH@ 58
------------------UPD SimpleName@@ATTR_NAME @TO@ TOKEN_ATTR_NAME @AT@ 2415 @LENGTH@ 9


INS IfStatement@@if (signatureAlgorithmOid == null) {  throw log.asnUnrecognisedAlgorithm(signatureAlgorithmName);} @TO@ MethodDeclaration@@public, X509Certificate, MethodName:build, CertificateException,  @AT@ 11996 @LENGTH@ 118
---INS InfixExpression@@signatureAlgorithmOid == null @TO@ IfStatement@@if (signatureAlgorithmOid == null) {  throw log.asnUnrecognisedAlgorithm(signatureAlgorithmName);} @AT@ 12000 @LENGTH@ 29
------INS SimpleName@@signatureAlgorithmOid @TO@ InfixExpression@@signatureAlgorithmOid == null @AT@ 12000 @LENGTH@ 21
------INS Operator@@== @TO@ InfixExpression@@signatureAlgorithmOid == null @AT@ 12021 @LENGTH@ 2
------INS NullLiteral@@null @TO@ InfixExpression@@signatureAlgorithmOid == null @AT@ 12025 @LENGTH@ 4
---INS Block@@ThenBody:{  throw log.asnUnrecognisedAlgorithm(signatureAlgorithmName);} @TO@ IfStatement@@if (signatureAlgorithmOid == null) {  throw log.asnUnrecognisedAlgorithm(signatureAlgorithmName);} @AT@ 12031 @LENGTH@ 83
------INS ThrowStatement@@MethodInvocation:log.asnUnrecognisedAlgorithm(signatureAlgorithmName) @TO@ Block@@ThenBody:{  throw log.asnUnrecognisedAlgorithm(signatureAlgorithmName);} @AT@ 12045 @LENGTH@ 59
---------INS MethodInvocation@@log.asnUnrecognisedAlgorithm(signatureAlgorithmName) @TO@ ThrowStatement@@MethodInvocation:log.asnUnrecognisedAlgorithm(signatureAlgorithmName) @AT@ 12051 @LENGTH@ 52
------------INS SimpleName@@Name:log @TO@ MethodInvocation@@log.asnUnrecognisedAlgorithm(signatureAlgorithmName) @AT@ 12051 @LENGTH@ 3
------------INS SimpleName@@MethodName:asnUnrecognisedAlgorithm:[signatureAlgorithmName] @TO@ MethodInvocation@@log.asnUnrecognisedAlgorithm(signatureAlgorithmName) @AT@ 12055 @LENGTH@ 48
---------------INS SimpleName@@signatureAlgorithmName @TO@ SimpleName@@MethodName:asnUnrecognisedAlgorithm:[signatureAlgorithmName] @AT@ 12080 @LENGTH@ 22


UPD ExpressionStatement@@MethodInvocation:assertThat(dbObject.get(OP),is((Object)10L)) @TO@ MethodInvocation:assertThat(document.get(OP),is((Object)10L)) @AT@ 1248 @LENGTH@ 47
---UPD MethodInvocation@@assertThat(dbObject.get(OP),is((Object)10L)) @TO@ assertThat(document.get(OP),is((Object)10L)) @AT@ 1248 @LENGTH@ 46
------UPD SimpleName@@MethodName:assertThat:[dbObject.get(OP), is((Object)10L)] @TO@ MethodName:assertThat:[document.get(OP), is((Object)10L)] @AT@ 1248 @LENGTH@ 46
---------UPD MethodInvocation@@dbObject.get(OP) @TO@ document.get(OP) @AT@ 1259 @LENGTH@ 16
------------UPD SimpleName@@Name:dbObject @TO@ Name:document @AT@ 1259 @LENGTH@ 8


INS MethodDeclaration@@public, PlatformTransactionManager, MethodName:annotationDrivenTransactionManager,  @TO@ TypeDeclaration@@[@Configuration, @ComponentScan({"org.springframework.data.neo4j.transactions"}), @EnableTransactionManagement, @EnableNeo4jRepositories, public]ApplicationConfig, Neo4jConfiguration @AT@ 1642 @LENGTH@ 246
---INS Modifier@@public @TO@ MethodDeclaration@@public, PlatformTransactionManager, MethodName:annotationDrivenTransactionManager,  @AT@ 1642 @LENGTH@ 6
---INS SimpleType@@PlatformTransactionManager @TO@ MethodDeclaration@@public, PlatformTransactionManager, MethodName:annotationDrivenTransactionManager,  @AT@ 1649 @LENGTH@ 26
---INS SimpleName@@MethodName:annotationDrivenTransactionManager @TO@ MethodDeclaration@@public, PlatformTransactionManager, MethodName:annotationDrivenTransactionManager,  @AT@ 1676 @LENGTH@ 34
---INS TryStatement@@try {  return transactionManager();} catch (Exception e) {  throw new RuntimeException(e);} @TO@ MethodDeclaration@@public, PlatformTransactionManager, MethodName:annotationDrivenTransactionManager,  @AT@ 1727 @LENGTH@ 155
------INS ReturnStatement@@MethodInvocation:transactionManager() @TO@ TryStatement@@try {  return transactionManager();} catch (Exception e) {  throw new RuntimeException(e);} @AT@ 1753 @LENGTH@ 28
---------INS MethodInvocation@@MethodName:transactionManager:[] @TO@ ReturnStatement@@MethodInvocation:transactionManager() @AT@ 1760 @LENGTH@ 20
------INS CatchClause@@catch (Exception e) {  throw new RuntimeException(e);} @TO@ TryStatement@@try {  return transactionManager();} catch (Exception e) {  throw new RuntimeException(e);} @AT@ 1800 @LENGTH@ 82
---------INS SingleVariableDeclaration@@Exception e @TO@ CatchClause@@catch (Exception e) {  throw new RuntimeException(e);} @AT@ 1807 @LENGTH@ 11
------------INS SimpleType@@Exception @TO@ SingleVariableDeclaration@@Exception e @AT@ 1807 @LENGTH@ 9
------------INS SimpleName@@e @TO@ SingleVariableDeclaration@@Exception e @AT@ 1817 @LENGTH@ 1
---------INS ThrowStatement@@ClassInstanceCreation:new RuntimeException(e) @TO@ CatchClause@@catch (Exception e) {  throw new RuntimeException(e);} @AT@ 1842 @LENGTH@ 30
------------INS ClassInstanceCreation@@RuntimeException[e] @TO@ ThrowStatement@@ClassInstanceCreation:new RuntimeException(e) @AT@ 1848 @LENGTH@ 23
---------------INS New@@new @TO@ ClassInstanceCreation@@RuntimeException[e] @AT@ 1848 @LENGTH@ 3
---------------INS SimpleType@@RuntimeException @TO@ ClassInstanceCreation@@RuntimeException[e] @AT@ 1852 @LENGTH@ 16
---------------INS SimpleName@@e @TO@ ClassInstanceCreation@@RuntimeException[e] @AT@ 1869 @LENGTH@ 1


INS MethodDeclaration@@public, void, MethodName:populatesIdsAddedByEventListener,  @TO@ TypeDeclaration@@[@RunWith(SpringJUnit4ClassRunner.class), @ContextConfiguration("classpath:infrastructure.xml"), public]MongoTemplateTests,  @AT@ 110976 @LENGTH@ 419
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:populatesIdsAddedByEventListener,  @AT@ 110976 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:populatesIdsAddedByEventListener,  @AT@ 110983 @LENGTH@ 4
---INS SimpleName@@MethodName:populatesIdsAddedByEventListener @TO@ MethodDeclaration@@public, void, MethodName:populatesIdsAddedByEventListener,  @AT@ 110988 @LENGTH@ 32
---INS ExpressionStatement@@MethodInvocation:context.addApplicationListener(new AbstractMongoEventListener<Document>(){
  @Override public void onBeforeSave(  BeforeSaveEvent<Document> event){
    event.getDBObject().put("_id",UUID.randomUUID().toString());
  }
}
) @TO@ MethodDeclaration@@public, void, MethodName:populatesIdsAddedByEventListener,  @AT@ 111028 @LENGTH@ 229
------INS MethodInvocation@@context.addApplicationListener(new AbstractMongoEventListener<Document>(){
  @Override public void onBeforeSave(  BeforeSaveEvent<Document> event){
    event.getDBObject().put("_id",UUID.randomUUID().toString());
  }
}
) @TO@ ExpressionStatement@@MethodInvocation:context.addApplicationListener(new AbstractMongoEventListener<Document>(){
  @Override public void onBeforeSave(  BeforeSaveEvent<Document> event){
    event.getDBObject().put("_id",UUID.randomUUID().toString());
  }
}
) @AT@ 111028 @LENGTH@ 228
---------INS SimpleName@@Name:context @TO@ MethodInvocation@@context.addApplicationListener(new AbstractMongoEventListener<Document>(){
  @Override public void onBeforeSave(  BeforeSaveEvent<Document> event){
    event.getDBObject().put("_id",UUID.randomUUID().toString());
  }
}
) @AT@ 111028 @LENGTH@ 7
---------INS SimpleName@@MethodName:addApplicationListener:[new AbstractMongoEventListener<Document>(){
  @Override public void onBeforeSave(  BeforeSaveEvent<Document> event){
    event.getDBObject().put("_id",UUID.randomUUID().toString());
  }
}
] @TO@ MethodInvocation@@context.addApplicationListener(new AbstractMongoEventListener<Document>(){
  @Override public void onBeforeSave(  BeforeSaveEvent<Document> event){
    event.getDBObject().put("_id",UUID.randomUUID().toString());
  }
}
) @AT@ 111036 @LENGTH@ 220
------------INS ClassInstanceCreation@@AbstractMongoEventListener<Document>[] @TO@ SimpleName@@MethodName:addApplicationListener:[new AbstractMongoEventListener<Document>(){
  @Override public void onBeforeSave(  BeforeSaveEvent<Document> event){
    event.getDBObject().put("_id",UUID.randomUUID().toString());
  }
}
] @AT@ 111059 @LENGTH@ 196
---------------INS New@@new @TO@ ClassInstanceCreation@@AbstractMongoEventListener<Document>[] @AT@ 111059 @LENGTH@ 3
---------------INS ParameterizedType@@AbstractMongoEventListener<Document> @TO@ ClassInstanceCreation@@AbstractMongoEventListener<Document>[] @AT@ 111063 @LENGTH@ 36
------------------INS SimpleType@@AbstractMongoEventListener @TO@ ParameterizedType@@AbstractMongoEventListener<Document> @AT@ 111063 @LENGTH@ 26
------------------INS SimpleType@@Document @TO@ ParameterizedType@@AbstractMongoEventListener<Document> @AT@ 111090 @LENGTH@ 8
---------------INS AnonymousClassDeclaration@@AnonymousClass @TO@ ClassInstanceCreation@@AbstractMongoEventListener<Document>[] @AT@ 111102 @LENGTH@ 153
------------------INS MethodDeclaration@@public, void, MethodName:onBeforeSave, BeforeSaveEvent<Document> event,  @TO@ AnonymousClassDeclaration@@AnonymousClass @AT@ 111121 @LENGTH@ 130
---------------------INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:onBeforeSave, BeforeSaveEvent<Document> event,  @AT@ 111121 @LENGTH@ 6
---------------------INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:onBeforeSave, BeforeSaveEvent<Document> event,  @AT@ 111128 @LENGTH@ 4
---------------------INS SimpleName@@MethodName:onBeforeSave @TO@ MethodDeclaration@@public, void, MethodName:onBeforeSave, BeforeSaveEvent<Document> event,  @AT@ 111133 @LENGTH@ 12
---------------------INS SingleVariableDeclaration@@BeforeSaveEvent<Document> event @TO@ MethodDeclaration@@public, void, MethodName:onBeforeSave, BeforeSaveEvent<Document> event,  @AT@ 111146 @LENGTH@ 31
------------------------INS ParameterizedType@@BeforeSaveEvent<Document> @TO@ SingleVariableDeclaration@@BeforeSaveEvent<Document> event @AT@ 111146 @LENGTH@ 25
---------------------------INS SimpleType@@BeforeSaveEvent @TO@ ParameterizedType@@BeforeSaveEvent<Document> @AT@ 111146 @LENGTH@ 15
---------------------------INS SimpleType@@Document @TO@ ParameterizedType@@BeforeSaveEvent<Document> @AT@ 111162 @LENGTH@ 8
------------------------INS SimpleName@@event @TO@ SingleVariableDeclaration@@BeforeSaveEvent<Document> event @AT@ 111172 @LENGTH@ 5
---------------------INS ExpressionStatement@@MethodInvocation:event.getDBObject().put("_id",UUID.randomUUID().toString()) @TO@ MethodDeclaration@@public, void, MethodName:onBeforeSave, BeforeSaveEvent<Document> event,  @AT@ 111185 @LENGTH@ 61
------------------------INS MethodInvocation@@event.getDBObject().put("_id",UUID.randomUUID().toString()) @TO@ ExpressionStatement@@MethodInvocation:event.getDBObject().put("_id",UUID.randomUUID().toString()) @AT@ 111185 @LENGTH@ 60
---------------------------INS MethodInvocation@@MethodName:getDBObject:[] @TO@ MethodInvocation@@event.getDBObject().put("_id",UUID.randomUUID().toString()) @AT@ 111185 @LENGTH@ 19
---------------------------INS SimpleName@@Name:event @TO@ MethodInvocation@@event.getDBObject().put("_id",UUID.randomUUID().toString()) @AT@ 111185 @LENGTH@ 5
---------------------------INS SimpleName@@MethodName:put:["_id", UUID.randomUUID().toString()] @TO@ MethodInvocation@@event.getDBObject().put("_id",UUID.randomUUID().toString()) @AT@ 111205 @LENGTH@ 40
------------------------------INS StringLiteral@@"_id" @TO@ SimpleName@@MethodName:put:["_id", UUID.randomUUID().toString()] @AT@ 111209 @LENGTH@ 5
------------------------------INS MethodInvocation@@UUID.randomUUID().toString() @TO@ SimpleName@@MethodName:put:["_id", UUID.randomUUID().toString()] @AT@ 111216 @LENGTH@ 28
---------------------------------INS MethodInvocation@@MethodName:randomUUID:[] @TO@ MethodInvocation@@UUID.randomUUID().toString() @AT@ 111216 @LENGTH@ 17
---------------------------------INS SimpleName@@Name:UUID @TO@ MethodInvocation@@UUID.randomUUID().toString() @AT@ 111216 @LENGTH@ 4
---------------------------------INS SimpleName@@MethodName:toString:[] @TO@ MethodInvocation@@UUID.randomUUID().toString() @AT@ 111234 @LENGTH@ 10
---INS VariableDeclarationStatement@@Document document=new Document(); @TO@ MethodDeclaration@@public, void, MethodName:populatesIdsAddedByEventListener,  @AT@ 111261 @LENGTH@ 35
------INS SimpleType@@Document @TO@ VariableDeclarationStatement@@Document document=new Document(); @AT@ 111261 @LENGTH@ 8
------INS VariableDeclarationFragment@@document=new Document() @TO@ VariableDeclarationStatement@@Document document=new Document(); @AT@ 111270 @LENGTH@ 25
---------INS SimpleName@@document @TO@ VariableDeclarationFragment@@document=new Document() @AT@ 111270 @LENGTH@ 8
---------INS ClassInstanceCreation@@Document[] @TO@ VariableDeclarationFragment@@document=new Document() @AT@ 111281 @LENGTH@ 14
------------INS New@@new @TO@ ClassInstanceCreation@@Document[] @AT@ 111281 @LENGTH@ 3
------------INS SimpleType@@Document @TO@ ClassInstanceCreation@@Document[] @AT@ 111285 @LENGTH@ 8
---INS ExpressionStatement@@MethodInvocation:template.insertAll(Arrays.asList(document)) @TO@ MethodDeclaration@@public, void, MethodName:populatesIdsAddedByEventListener,  @AT@ 111300 @LENGTH@ 44
------INS MethodInvocation@@template.insertAll(Arrays.asList(document)) @TO@ ExpressionStatement@@MethodInvocation:template.insertAll(Arrays.asList(document)) @AT@ 111300 @LENGTH@ 43
---------INS SimpleName@@Name:template @TO@ MethodInvocation@@template.insertAll(Arrays.asList(document)) @AT@ 111300 @LENGTH@ 8
---------INS SimpleName@@MethodName:insertAll:[Arrays.asList(document)] @TO@ MethodInvocation@@template.insertAll(Arrays.asList(document)) @AT@ 111309 @LENGTH@ 34
------------INS MethodInvocation@@Arrays.asList(document) @TO@ SimpleName@@MethodName:insertAll:[Arrays.asList(document)] @AT@ 111319 @LENGTH@ 23
---------------INS SimpleName@@Name:Arrays @TO@ MethodInvocation@@Arrays.asList(document) @AT@ 111319 @LENGTH@ 6
---------------INS SimpleName@@MethodName:asList:[document] @TO@ MethodInvocation@@Arrays.asList(document) @AT@ 111326 @LENGTH@ 16
------------------INS SimpleName@@document @TO@ SimpleName@@MethodName:asList:[document] @AT@ 111333 @LENGTH@ 8
---INS ExpressionStatement@@MethodInvocation:assertThat(document.id,is(notNullValue())) @TO@ MethodDeclaration@@public, void, MethodName:populatesIdsAddedByEventListener,  @AT@ 111348 @LENGTH@ 44
------INS MethodInvocation@@assertThat(document.id,is(notNullValue())) @TO@ ExpressionStatement@@MethodInvocation:assertThat(document.id,is(notNullValue())) @AT@ 111348 @LENGTH@ 43
---------INS SimpleName@@MethodName:assertThat:[document.id, is(notNullValue())] @TO@ MethodInvocation@@assertThat(document.id,is(notNullValue())) @AT@ 111348 @LENGTH@ 43
------------INS QualifiedName@@document.id @TO@ SimpleName@@MethodName:assertThat:[document.id, is(notNullValue())] @AT@ 111359 @LENGTH@ 11
---------------INS SimpleName@@document @TO@ QualifiedName@@document.id @AT@ 111359 @LENGTH@ 8
---------------INS SimpleName@@id @TO@ QualifiedName@@document.id @AT@ 111368 @LENGTH@ 2
------------INS MethodInvocation@@is(notNullValue()) @TO@ SimpleName@@MethodName:assertThat:[document.id, is(notNullValue())] @AT@ 111372 @LENGTH@ 18
---------------INS SimpleName@@MethodName:is:[notNullValue()] @TO@ MethodInvocation@@is(notNullValue()) @AT@ 111372 @LENGTH@ 18
------------------INS MethodInvocation@@MethodName:notNullValue:[] @TO@ SimpleName@@MethodName:is:[notNullValue()] @AT@ 111375 @LENGTH@ 14


UPD VariableDeclarationStatement@@Document dbObject=operation.toDocument(Aggregation.DEFAULT_CONTEXT); @TO@ Document document=operation.toDocument(Aggregation.DEFAULT_CONTEXT); @AT@ 1305 @LENGTH@ 70
---UPD VariableDeclarationFragment@@dbObject=operation.toDocument(Aggregation.DEFAULT_CONTEXT) @TO@ document=operation.toDocument(Aggregation.DEFAULT_CONTEXT) @AT@ 1314 @LENGTH@ 60
------UPD SimpleName@@dbObject @TO@ document @AT@ 1314 @LENGTH@ 8


UPD ReturnStatement@@ConditionalExpression:evidenceType.isInstance(this) && getAlgorithm().equals(algorithmName) ? function.apply(evidenceType.cast(this)) : null @TO@ ConditionalExpression:evidenceType.isInstance(this) && (algorithmName == null || algorithmName.equals(getAlgorithm())) ? function.apply(evidenceType.cast(this)) : null @AT@ 1268 @LENGTH@ 126
---UPD ConditionalExpression@@evidenceType.isInstance(this) && getAlgorithm().equals(algorithmName) ? function.apply(evidenceType.cast(this)) : null @TO@ evidenceType.isInstance(this) && (algorithmName == null || algorithmName.equals(getAlgorithm())) ? function.apply(evidenceType.cast(this)) : null @AT@ 1275 @LENGTH@ 118
------UPD InfixExpression@@evidenceType.isInstance(this) && getAlgorithm().equals(algorithmName) @TO@ evidenceType.isInstance(this) && (algorithmName == null || algorithmName.equals(getAlgorithm())) @AT@ 1275 @LENGTH@ 69
---------UPD MethodInvocation@@getAlgorithm().equals(algorithmName) @TO@ algorithmName.equals(getAlgorithm()) @AT@ 1308 @LENGTH@ 36
---------INS ParenthesizedExpression@@(algorithmName == null || algorithmName.equals(getAlgorithm())) @TO@ InfixExpression@@evidenceType.isInstance(this) && getAlgorithm().equals(algorithmName) @AT@ 1325 @LENGTH@ 63
------------INS InfixExpression@@algorithmName == null || algorithmName.equals(getAlgorithm()) @TO@ ParenthesizedExpression@@(algorithmName == null || algorithmName.equals(getAlgorithm())) @AT@ 1326 @LENGTH@ 61
---------------MOV MethodInvocation@@getAlgorithm().equals(algorithmName) @TO@ InfixExpression@@algorithmName == null || algorithmName.equals(getAlgorithm()) @AT@ 1308 @LENGTH@ 36
------------------DEL MethodInvocation@@MethodName:getAlgorithm:[] @AT@ 1308 @LENGTH@ 14
------------------DEL SimpleName@@MethodName:equals:[algorithmName] @AT@ 1323 @LENGTH@ 21
---------------------DEL SimpleName@@algorithmName @AT@ 1330 @LENGTH@ 13
------------------INS SimpleName@@Name:algorithmName @TO@ MethodInvocation@@getAlgorithm().equals(algorithmName) @AT@ 1351 @LENGTH@ 13
------------------INS SimpleName@@MethodName:equals:[getAlgorithm()] @TO@ MethodInvocation@@getAlgorithm().equals(algorithmName) @AT@ 1365 @LENGTH@ 22
---------------------INS MethodInvocation@@MethodName:getAlgorithm:[] @TO@ SimpleName@@MethodName:equals:[getAlgorithm()] @AT@ 1372 @LENGTH@ 14
---------------INS InfixExpression@@algorithmName == null @TO@ InfixExpression@@algorithmName == null || algorithmName.equals(getAlgorithm()) @AT@ 1326 @LENGTH@ 21
------------------INS SimpleName@@algorithmName @TO@ InfixExpression@@algorithmName == null @AT@ 1326 @LENGTH@ 13
------------------INS Operator@@== @TO@ InfixExpression@@algorithmName == null @AT@ 1339 @LENGTH@ 2
------------------INS NullLiteral@@null @TO@ InfixExpression@@algorithmName == null @AT@ 1343 @LENGTH@ 4
---------------INS Operator@@|| @TO@ InfixExpression@@algorithmName == null || algorithmName.equals(getAlgorithm()) @AT@ 1347 @LENGTH@ 2


UPD EnhancedForStatement@@for (Document dbo : indexes) {  if ("location".equals(dbo.get("name"))) {    return true;  }} @TO@ for (Document document : indexes) {  if ("location".equals(document.get("name"))) {    return true;  }} @AT@ 2780 @LENGTH@ 109
---UPD SingleVariableDeclaration@@Document dbo @TO@ Document document @AT@ 2785 @LENGTH@ 12
------UPD SimpleName@@dbo @TO@ document @AT@ 2794 @LENGTH@ 3
---UPD IfStatement@@if ("location".equals(dbo.get("name"))) {  return true;} @TO@ if ("location".equals(document.get("name"))) {  return true;} @AT@ 2816 @LENGTH@ 67
------UPD MethodInvocation@@"location".equals(dbo.get("name")) @TO@ "location".equals(document.get("name")) @AT@ 2820 @LENGTH@ 34
---------UPD SimpleName@@MethodName:equals:[dbo.get("name")] @TO@ MethodName:equals:[document.get("name")] @AT@ 2831 @LENGTH@ 23
------------UPD MethodInvocation@@dbo.get("name") @TO@ document.get("name") @AT@ 2838 @LENGTH@ 15
---------------UPD SimpleName@@Name:dbo @TO@ Name:document @AT@ 2838 @LENGTH@ 3


INS MethodDeclaration@@public, List<?>, MethodName:getAllOf, final Serializable keyspace,  @TO@ TypeDeclaration@@[public]RedisKeyValueAdapter, AbstractKeyValueAdapter[InitializingBean, ApplicationContextAware, ApplicationListener<RedisKeyspaceEvent>] @AT@ 12002 @LENGTH@ 94
---INS Modifier@@public @TO@ MethodDeclaration@@public, List<?>, MethodName:getAllOf, final Serializable keyspace,  @AT@ 12002 @LENGTH@ 6
---INS ParameterizedType@@List<?> @TO@ MethodDeclaration@@public, List<?>, MethodName:getAllOf, final Serializable keyspace,  @AT@ 12009 @LENGTH@ 7
------INS SimpleType@@List @TO@ ParameterizedType@@List<?> @AT@ 12009 @LENGTH@ 4
------INS WildcardType@@? @TO@ ParameterizedType@@List<?> @AT@ 12014 @LENGTH@ 1
---INS SimpleName@@MethodName:getAllOf @TO@ MethodDeclaration@@public, List<?>, MethodName:getAllOf, final Serializable keyspace,  @AT@ 12017 @LENGTH@ 8
---INS SingleVariableDeclaration@@final Serializable keyspace @TO@ MethodDeclaration@@public, List<?>, MethodName:getAllOf, final Serializable keyspace,  @AT@ 12026 @LENGTH@ 27
------INS Modifier@@final @TO@ SingleVariableDeclaration@@final Serializable keyspace @AT@ 12026 @LENGTH@ 5
------INS SimpleType@@Serializable @TO@ SingleVariableDeclaration@@final Serializable keyspace @AT@ 12032 @LENGTH@ 12
------INS SimpleName@@keyspace @TO@ SingleVariableDeclaration@@final Serializable keyspace @AT@ 12045 @LENGTH@ 8
---INS ReturnStatement@@MethodInvocation:getAllOf(keyspace,-1,-1) @TO@ MethodDeclaration@@public, List<?>, MethodName:getAllOf, final Serializable keyspace,  @AT@ 12059 @LENGTH@ 34
------INS MethodInvocation@@getAllOf(keyspace,-1,-1) @TO@ ReturnStatement@@MethodInvocation:getAllOf(keyspace,-1,-1) @AT@ 12066 @LENGTH@ 26
---------INS SimpleName@@MethodName:getAllOf:[keyspace, -1, -1] @TO@ MethodInvocation@@getAllOf(keyspace,-1,-1) @AT@ 12066 @LENGTH@ 26
------------INS SimpleName@@keyspace @TO@ SimpleName@@MethodName:getAllOf:[keyspace, -1, -1] @AT@ 12075 @LENGTH@ 8
------------INS PrefixExpression@@-1 @TO@ SimpleName@@MethodName:getAllOf:[keyspace, -1, -1] @AT@ 12085 @LENGTH@ 2
---------------INS Operator@@- @TO@ PrefixExpression@@-1 @AT@ 12085 @LENGTH@ 1
---------------INS NumberLiteral@@1 @TO@ PrefixExpression@@-1 @AT@ 12086 @LENGTH@ 1
------------INS PrefixExpression@@-1 @TO@ SimpleName@@MethodName:getAllOf:[keyspace, -1, -1] @AT@ 12089 @LENGTH@ 2
---------------INS Operator@@- @TO@ PrefixExpression@@-1 @AT@ 12089 @LENGTH@ 1
---------------INS NumberLiteral@@1 @TO@ PrefixExpression@@-1 @AT@ 12090 @LENGTH@ 1


UPD TypeDeclaration@@[@Configuration, @ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration"), @EnableConfigurationProperties(XmlJsonDataFormatConfiguration.class), public]XmlJsonDataFormatAutoConfiguration,  @TO@ [@Configuration, @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration"), @EnableConfigurationProperties(XmlJsonDataFormatConfiguration.class), public]XmlJsonDataFormatAutoConfiguration,  @AT@ 1674 @LENGTH@ 1135
---UPD NormalAnnotation@@@ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1689 @LENGTH@ 79
---UPD NormalAnnotation@@@AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1769 @LENGTH@ 80


UPD ExpressionStatement@@MethodInvocation:BeanHelper.setProperty(params,"iOFactory",factory) @TO@ MethodInvocation:BeanHelper.setProperty(params,"IOFactory",factory) @AT@ 3165 @LENGTH@ 53
---UPD MethodInvocation@@BeanHelper.setProperty(params,"iOFactory",factory) @TO@ BeanHelper.setProperty(params,"IOFactory",factory) @AT@ 3165 @LENGTH@ 52
------UPD SimpleName@@MethodName:setProperty:[params, "iOFactory", factory] @TO@ MethodName:setProperty:[params, "IOFactory", factory] @AT@ 3176 @LENGTH@ 41
---------UPD StringLiteral@@"iOFactory" @TO@ "IOFactory" @AT@ 3196 @LENGTH@ 11


UPD TypeDeclaration@@[public]HiveIndexResult,  @TO@ [public]HiveIndexResult, [IndexResult] @AT@ 1824 @LENGTH@ 4925
---INS SimpleType@@IndexResult @TO@ TypeDeclaration@@[public]HiveIndexResult,  @AT@ 1864 @LENGTH@ 11


UPD TypeDeclaration@@[@Configuration, @ComponentScan({"org.springframework.data.neo4j.examples.movies"}), @EnableNeo4jRepositories("org.springframework.data.neo4j.examples.movies.repo"), @EnableTransactionManagement, public]MoviesContext, Neo4jConfiguration @TO@ [@Configuration, @ComponentScan({"org.springframework.data.neo4j.examples.movies.service"}), @EnableNeo4jRepositories("org.springframework.data.neo4j.examples.movies.repo"), @EnableTransactionManagement, public]MoviesContext, Neo4jConfiguration @AT@ 1121 @LENGTH@ 536
---UPD SingleMemberAnnotation@@@ComponentScan({"org.springframework.data.neo4j.examples.movies"}) @TO@ @ComponentScan({"org.springframework.data.neo4j.examples.movies.service"}) @AT@ 1136 @LENGTH@ 66


UPD ExpressionStatement@@MethodInvocation:Assert.notNull("rememberMeServices cannot be null") @TO@ MethodInvocation:Assert.notNull(rememberMeServices,"rememberMeServices cannot be null") @AT@ 16214 @LENGTH@ 52
---UPD MethodInvocation@@Assert.notNull("rememberMeServices cannot be null") @TO@ Assert.notNull(rememberMeServices,"rememberMeServices cannot be null") @AT@ 16214 @LENGTH@ 51
------UPD SimpleName@@MethodName:notNull:["rememberMeServices cannot be null"] @TO@ MethodName:notNull:[rememberMeServices, "rememberMeServices cannot be null"] @AT@ 16221 @LENGTH@ 44
---------INS SimpleName@@rememberMeServices @TO@ SimpleName@@MethodName:notNull:["rememberMeServices cannot be null"] @AT@ 16119 @LENGTH@ 18


UPD TypeDeclaration@@[@Configuration, @ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration"), @EnableConfigurationProperties(JettyHttpComponentConfiguration9.class), public]JettyHttpComponentAutoConfiguration9,  @TO@ [@Configuration, @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration"), @EnableConfigurationProperties(JettyHttpComponentConfiguration9.class), public]JettyHttpComponentAutoConfiguration9,  @AT@ 1629 @LENGTH@ 2101
---UPD NormalAnnotation@@@ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1644 @LENGTH@ 79
---UPD NormalAnnotation@@@AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1724 @LENGTH@ 80


INS MethodDeclaration@@public, void, MethodName:equalsWhenNotEmptyAndEmptyThenFalse,  @TO@ TypeDeclaration@@[public]PasswordEncoderUtilsTests,  @AT@ 1529 @LENGTH@ 182
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:equalsWhenNotEmptyAndEmptyThenFalse,  @AT@ 1529 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:equalsWhenNotEmptyAndEmptyThenFalse,  @AT@ 1536 @LENGTH@ 4
---INS SimpleName@@MethodName:equalsWhenNotEmptyAndEmptyThenFalse @TO@ MethodDeclaration@@public, void, MethodName:equalsWhenNotEmptyAndEmptyThenFalse,  @AT@ 1541 @LENGTH@ 35
---INS ExpressionStatement@@MethodInvocation:assertThat(PasswordEncoderUtils.equals("abc","")).isFalse() @TO@ MethodDeclaration@@public, void, MethodName:equalsWhenNotEmptyAndEmptyThenFalse,  @AT@ 1583 @LENGTH@ 61
------INS MethodInvocation@@assertThat(PasswordEncoderUtils.equals("abc","")).isFalse() @TO@ ExpressionStatement@@MethodInvocation:assertThat(PasswordEncoderUtils.equals("abc","")).isFalse() @AT@ 1583 @LENGTH@ 60
---------INS MethodInvocation@@MethodName:assertThat:[PasswordEncoderUtils.equals("abc","")] @TO@ MethodInvocation@@assertThat(PasswordEncoderUtils.equals("abc","")).isFalse() @AT@ 1583 @LENGTH@ 50
------------INS MethodInvocation@@PasswordEncoderUtils.equals("abc","") @TO@ MethodInvocation@@MethodName:assertThat:[PasswordEncoderUtils.equals("abc","")] @AT@ 1594 @LENGTH@ 38
---------------INS SimpleName@@Name:PasswordEncoderUtils @TO@ MethodInvocation@@PasswordEncoderUtils.equals("abc","") @AT@ 1594 @LENGTH@ 20
---------------INS SimpleName@@MethodName:equals:["abc", ""] @TO@ MethodInvocation@@PasswordEncoderUtils.equals("abc","") @AT@ 1615 @LENGTH@ 17
------------------INS StringLiteral@@"abc" @TO@ SimpleName@@MethodName:equals:["abc", ""] @AT@ 1622 @LENGTH@ 5
------------------INS StringLiteral@@"" @TO@ SimpleName@@MethodName:equals:["abc", ""] @AT@ 1629 @LENGTH@ 2
---------INS SimpleName@@MethodName:isFalse:[] @TO@ MethodInvocation@@assertThat(PasswordEncoderUtils.equals("abc","")).isFalse() @AT@ 1634 @LENGTH@ 9
---INS ExpressionStatement@@MethodInvocation:assertThat(PasswordEncoderUtils.equals("","abc")).isFalse() @TO@ MethodDeclaration@@public, void, MethodName:equalsWhenNotEmptyAndEmptyThenFalse,  @AT@ 1647 @LENGTH@ 61
------INS MethodInvocation@@assertThat(PasswordEncoderUtils.equals("","abc")).isFalse() @TO@ ExpressionStatement@@MethodInvocation:assertThat(PasswordEncoderUtils.equals("","abc")).isFalse() @AT@ 1647 @LENGTH@ 60
---------INS MethodInvocation@@MethodName:assertThat:[PasswordEncoderUtils.equals("","abc")] @TO@ MethodInvocation@@assertThat(PasswordEncoderUtils.equals("","abc")).isFalse() @AT@ 1647 @LENGTH@ 50
------------INS MethodInvocation@@PasswordEncoderUtils.equals("","abc") @TO@ MethodInvocation@@MethodName:assertThat:[PasswordEncoderUtils.equals("","abc")] @AT@ 1658 @LENGTH@ 38
---------------INS SimpleName@@Name:PasswordEncoderUtils @TO@ MethodInvocation@@PasswordEncoderUtils.equals("","abc") @AT@ 1658 @LENGTH@ 20
---------------INS SimpleName@@MethodName:equals:["", "abc"] @TO@ MethodInvocation@@PasswordEncoderUtils.equals("","abc") @AT@ 1679 @LENGTH@ 17
------------------INS StringLiteral@@"" @TO@ SimpleName@@MethodName:equals:["", "abc"] @AT@ 1686 @LENGTH@ 2
------------------INS StringLiteral@@"abc" @TO@ SimpleName@@MethodName:equals:["", "abc"] @AT@ 1690 @LENGTH@ 5
---------INS SimpleName@@MethodName:isFalse:[] @TO@ MethodInvocation@@assertThat(PasswordEncoderUtils.equals("","abc")).isFalse() @AT@ 1698 @LENGTH@ 9


UPD TryStatement@@try {  return timeUnit.convert(connection.pTtl(rawKey),TimeUnit.MILLISECONDS);} catch (Exception e) {  return timeUnit.convert(connection.ttl(rawKey),TimeUnit.SECONDS);} @TO@ try {  expire=connection.pTtl(rawKey);  return expire < 0 ? expire : timeUnit.convert(expire,TimeUnit.MILLISECONDS);} catch (Exception e) {  expire=connection.ttl(rawKey);  return expire < 0 ? expire : timeUnit.convert(expire,TimeUnit.SECONDS);} @AT@ 24154 @LENGTH@ 259
---UPD ReturnStatement@@MethodInvocation:timeUnit.convert(connection.pTtl(rawKey),TimeUnit.MILLISECONDS) @TO@ ConditionalExpression:expire < 0 ? expire : timeUnit.convert(expire,TimeUnit.MILLISECONDS) @AT@ 24165 @LENGTH@ 72
------DEL MethodInvocation@@timeUnit.convert(connection.pTtl(rawKey),TimeUnit.MILLISECONDS) @AT@ 24172 @LENGTH@ 64
------INS ConditionalExpression@@expire < 0 ? expire : timeUnit.convert(expire,TimeUnit.MILLISECONDS) @TO@ ReturnStatement@@MethodInvocation:timeUnit.convert(connection.pTtl(rawKey),TimeUnit.MILLISECONDS) @AT@ 24228 @LENGTH@ 69
---------INS InfixExpression@@expire < 0 @TO@ ConditionalExpression@@expire < 0 ? expire : timeUnit.convert(expire,TimeUnit.MILLISECONDS) @AT@ 24228 @LENGTH@ 10
------------INS SimpleName@@expire @TO@ InfixExpression@@expire < 0 @AT@ 24228 @LENGTH@ 6
------------INS Operator@@< @TO@ InfixExpression@@expire < 0 @AT@ 24234 @LENGTH@ 1
------------INS NumberLiteral@@0 @TO@ InfixExpression@@expire < 0 @AT@ 24237 @LENGTH@ 1
---------INS SimpleName@@expire @TO@ ConditionalExpression@@expire < 0 ? expire : timeUnit.convert(expire,TimeUnit.MILLISECONDS) @AT@ 24241 @LENGTH@ 6
---------INS MethodInvocation@@timeUnit.convert(expire,TimeUnit.MILLISECONDS) @TO@ ConditionalExpression@@expire < 0 ? expire : timeUnit.convert(expire,TimeUnit.MILLISECONDS) @AT@ 24250 @LENGTH@ 47
------------MOV SimpleName@@Name:timeUnit @TO@ MethodInvocation@@timeUnit.convert(expire,TimeUnit.MILLISECONDS) @AT@ 24172 @LENGTH@ 8
------------MOV SimpleName@@MethodName:convert:[connection.pTtl(rawKey), TimeUnit.MILLISECONDS] @TO@ MethodInvocation@@timeUnit.convert(expire,TimeUnit.MILLISECONDS) @AT@ 24181 @LENGTH@ 55
---------------INS SimpleName@@expire @TO@ SimpleName@@MethodName:convert:[connection.pTtl(rawKey), TimeUnit.MILLISECONDS] @AT@ 24267 @LENGTH@ 6
---INS ExpressionStatement@@Assignment:expire=connection.pTtl(rawKey) @TO@ TryStatement@@try {  return timeUnit.convert(connection.pTtl(rawKey),TimeUnit.MILLISECONDS);} catch (Exception e) {  return timeUnit.convert(connection.ttl(rawKey),TimeUnit.SECONDS);} @AT@ 24182 @LENGTH@ 33
------INS Assignment@@expire=connection.pTtl(rawKey) @TO@ ExpressionStatement@@Assignment:expire=connection.pTtl(rawKey) @AT@ 24182 @LENGTH@ 32
---------INS SimpleName@@expire @TO@ Assignment@@expire=connection.pTtl(rawKey) @AT@ 24182 @LENGTH@ 6
---------INS Operator@@= @TO@ Assignment@@expire=connection.pTtl(rawKey) @AT@ 24188 @LENGTH@ 1
---------MOV MethodInvocation@@connection.pTtl(rawKey) @TO@ Assignment@@expire=connection.pTtl(rawKey) @AT@ 24189 @LENGTH@ 23
---UPD CatchClause@@catch (Exception e) {  return timeUnit.convert(connection.ttl(rawKey),TimeUnit.SECONDS);} @TO@ catch (Exception e) {  expire=connection.ttl(rawKey);  return expire < 0 ? expire : timeUnit.convert(expire,TimeUnit.SECONDS);} @AT@ 24244 @LENGTH@ 169
------UPD ReturnStatement@@MethodInvocation:timeUnit.convert(connection.ttl(rawKey),TimeUnit.SECONDS) @TO@ ConditionalExpression:expire < 0 ? expire : timeUnit.convert(expire,TimeUnit.SECONDS) @AT@ 24341 @LENGTH@ 66
---------DEL MethodInvocation@@timeUnit.convert(connection.ttl(rawKey),TimeUnit.SECONDS) @AT@ 24348 @LENGTH@ 58
---------INS ConditionalExpression@@expire < 0 ? expire : timeUnit.convert(expire,TimeUnit.SECONDS) @TO@ ReturnStatement@@MethodInvocation:timeUnit.convert(connection.ttl(rawKey),TimeUnit.SECONDS) @AT@ 24447 @LENGTH@ 64
------------INS InfixExpression@@expire < 0 @TO@ ConditionalExpression@@expire < 0 ? expire : timeUnit.convert(expire,TimeUnit.SECONDS) @AT@ 24447 @LENGTH@ 10
---------------INS SimpleName@@expire @TO@ InfixExpression@@expire < 0 @AT@ 24447 @LENGTH@ 6
---------------INS Operator@@< @TO@ InfixExpression@@expire < 0 @AT@ 24453 @LENGTH@ 1
---------------INS NumberLiteral@@0 @TO@ InfixExpression@@expire < 0 @AT@ 24456 @LENGTH@ 1
------------INS SimpleName@@expire @TO@ ConditionalExpression@@expire < 0 ? expire : timeUnit.convert(expire,TimeUnit.SECONDS) @AT@ 24460 @LENGTH@ 6
------------INS MethodInvocation@@timeUnit.convert(expire,TimeUnit.SECONDS) @TO@ ConditionalExpression@@expire < 0 ? expire : timeUnit.convert(expire,TimeUnit.SECONDS) @AT@ 24469 @LENGTH@ 42
---------------MOV SimpleName@@Name:timeUnit @TO@ MethodInvocation@@timeUnit.convert(expire,TimeUnit.SECONDS) @AT@ 24348 @LENGTH@ 8
---------------MOV SimpleName@@MethodName:convert:[connection.ttl(rawKey), TimeUnit.SECONDS] @TO@ MethodInvocation@@timeUnit.convert(expire,TimeUnit.SECONDS) @AT@ 24357 @LENGTH@ 49
------------------INS SimpleName@@expire @TO@ SimpleName@@MethodName:convert:[connection.ttl(rawKey), TimeUnit.SECONDS] @AT@ 24486 @LENGTH@ 6
------INS ExpressionStatement@@Assignment:expire=connection.ttl(rawKey) @TO@ CatchClause@@catch (Exception e) {  return timeUnit.convert(connection.ttl(rawKey),TimeUnit.SECONDS);} @AT@ 24402 @LENGTH@ 32
---------INS Assignment@@expire=connection.ttl(rawKey) @TO@ ExpressionStatement@@Assignment:expire=connection.ttl(rawKey) @AT@ 24402 @LENGTH@ 31
------------MOV MethodInvocation@@connection.ttl(rawKey) @TO@ Assignment@@expire=connection.ttl(rawKey) @AT@ 24365 @LENGTH@ 22
------------INS SimpleName@@expire @TO@ Assignment@@expire=connection.ttl(rawKey) @AT@ 24402 @LENGTH@ 6
------------INS Operator@@= @TO@ Assignment@@expire=connection.ttl(rawKey) @AT@ 24408 @LENGTH@ 1


UPD MethodDeclaration@@String, MethodName:getSaslServerAuthentication,  @TO@ String, MethodName:getSaslAuthenticationFactory,  @AT@ 2185 @LENGTH@ 30
---UPD SimpleName@@MethodName:getSaslServerAuthentication @TO@ MethodName:getSaslAuthenticationFactory @AT@ 2185 @LENGTH@ 27


UPD TypeDeclaration@@[@Configuration, @ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration"), public]GitComponentAutoConfiguration,  @TO@ [@Configuration, @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration"), public]GitComponentAutoConfiguration,  @AT@ 1435 @LENGTH@ 589
---UPD NormalAnnotation@@@ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1450 @LENGTH@ 79
---UPD NormalAnnotation@@@AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1530 @LENGTH@ 80


INS FieldDeclaration@@public, static, final, Cascade[], [ALL_ARRAY={ALL}] @TO@ EnumDeclaration@@[public]Cascade,  @AT@ 320 @LENGTH@ 48
---INS Modifier@@public @TO@ FieldDeclaration@@public, static, final, Cascade[], [ALL_ARRAY={ALL}] @AT@ 320 @LENGTH@ 6
---INS Modifier@@static @TO@ FieldDeclaration@@public, static, final, Cascade[], [ALL_ARRAY={ALL}] @AT@ 327 @LENGTH@ 6
---INS Modifier@@final @TO@ FieldDeclaration@@public, static, final, Cascade[], [ALL_ARRAY={ALL}] @AT@ 334 @LENGTH@ 5
---INS ArrayType@@Cascade[] @TO@ FieldDeclaration@@public, static, final, Cascade[], [ALL_ARRAY={ALL}] @AT@ 340 @LENGTH@ 9
------INS SimpleType@@Cascade @TO@ ArrayType@@Cascade[] @AT@ 340 @LENGTH@ 7
---INS VariableDeclarationFragment@@ALL_ARRAY={ALL} @TO@ FieldDeclaration@@public, static, final, Cascade[], [ALL_ARRAY={ALL}] @AT@ 350 @LENGTH@ 17
------INS SimpleName@@ALL_ARRAY @TO@ VariableDeclarationFragment@@ALL_ARRAY={ALL} @AT@ 350 @LENGTH@ 9
------INS ArrayInitializer@@{ALL} @TO@ VariableDeclarationFragment@@ALL_ARRAY={ALL} @AT@ 362 @LENGTH@ 5
---------INS SimpleName@@ALL @TO@ ArrayInitializer@@{ALL} @AT@ 363 @LENGTH@ 3


UPD TypeDeclaration@@[@Configuration, @ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration"), @EnableConfigurationProperties(RestComponentConfiguration.class), public]RestComponentAutoConfiguration,  @TO@ [@Configuration, @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration"), @EnableConfigurationProperties(RestComponentConfiguration.class), public]RestComponentAutoConfiguration,  @AT@ 1619 @LENGTH@ 2039
---UPD NormalAnnotation@@@ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1634 @LENGTH@ 79
---UPD NormalAnnotation@@@AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1714 @LENGTH@ 80


INS MethodDeclaration@@public, HttpSecurity, MethodName:mvcMatcher, String mvcPattern,  @TO@ TypeDeclaration@@[public, final]HttpSecurity, AbstractConfiguredSecurityBuilder<DefaultSecurityFilterChain,HttpSecurity>[SecurityBuilder<DefaultSecurityFilterChain>, HttpSecurityBuilder<HttpSecurity>] @AT@ 48518 @LENGTH@ 218
---INS Modifier@@public @TO@ MethodDeclaration@@public, HttpSecurity, MethodName:mvcMatcher, String mvcPattern,  @AT@ 48518 @LENGTH@ 6
---INS SimpleType@@HttpSecurity @TO@ MethodDeclaration@@public, HttpSecurity, MethodName:mvcMatcher, String mvcPattern,  @AT@ 48525 @LENGTH@ 12
---INS SimpleName@@MethodName:mvcMatcher @TO@ MethodDeclaration@@public, HttpSecurity, MethodName:mvcMatcher, String mvcPattern,  @AT@ 48538 @LENGTH@ 10
---INS SingleVariableDeclaration@@String mvcPattern @TO@ MethodDeclaration@@public, HttpSecurity, MethodName:mvcMatcher, String mvcPattern,  @AT@ 48549 @LENGTH@ 17
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String mvcPattern @AT@ 48549 @LENGTH@ 6
------INS SimpleName@@mvcPattern @TO@ SingleVariableDeclaration@@String mvcPattern @AT@ 48556 @LENGTH@ 10
---INS VariableDeclarationStatement@@HandlerMappingIntrospector introspector=new HandlerMappingIntrospector(getContext()); @TO@ MethodDeclaration@@public, HttpSecurity, MethodName:mvcMatcher, String mvcPattern,  @AT@ 48572 @LENGTH@ 87
------INS SimpleType@@HandlerMappingIntrospector @TO@ VariableDeclarationStatement@@HandlerMappingIntrospector introspector=new HandlerMappingIntrospector(getContext()); @AT@ 48572 @LENGTH@ 26
------INS VariableDeclarationFragment@@introspector=new HandlerMappingIntrospector(getContext()) @TO@ VariableDeclarationStatement@@HandlerMappingIntrospector introspector=new HandlerMappingIntrospector(getContext()); @AT@ 48599 @LENGTH@ 59
---------INS SimpleName@@introspector @TO@ VariableDeclarationFragment@@introspector=new HandlerMappingIntrospector(getContext()) @AT@ 48599 @LENGTH@ 12
---------INS ClassInstanceCreation@@HandlerMappingIntrospector[getContext()] @TO@ VariableDeclarationFragment@@introspector=new HandlerMappingIntrospector(getContext()) @AT@ 48614 @LENGTH@ 44
------------INS New@@new @TO@ ClassInstanceCreation@@HandlerMappingIntrospector[getContext()] @AT@ 48614 @LENGTH@ 3
------------INS SimpleType@@HandlerMappingIntrospector @TO@ ClassInstanceCreation@@HandlerMappingIntrospector[getContext()] @AT@ 48618 @LENGTH@ 26
------------INS MethodInvocation@@MethodName:getContext:[] @TO@ ClassInstanceCreation@@HandlerMappingIntrospector[getContext()] @AT@ 48645 @LENGTH@ 12
---INS ReturnStatement@@MethodInvocation:requestMatcher(new MvcRequestMatcher(introspector,mvcPattern)) @TO@ MethodDeclaration@@public, HttpSecurity, MethodName:mvcMatcher, String mvcPattern,  @AT@ 48662 @LENGTH@ 71
------INS MethodInvocation@@requestMatcher(new MvcRequestMatcher(introspector,mvcPattern)) @TO@ ReturnStatement@@MethodInvocation:requestMatcher(new MvcRequestMatcher(introspector,mvcPattern)) @AT@ 48669 @LENGTH@ 63
---------INS SimpleName@@MethodName:requestMatcher:[new MvcRequestMatcher(introspector,mvcPattern)] @TO@ MethodInvocation@@requestMatcher(new MvcRequestMatcher(introspector,mvcPattern)) @AT@ 48669 @LENGTH@ 63
------------INS ClassInstanceCreation@@MvcRequestMatcher[introspector, mvcPattern] @TO@ SimpleName@@MethodName:requestMatcher:[new MvcRequestMatcher(introspector,mvcPattern)] @AT@ 48684 @LENGTH@ 47
---------------INS New@@new @TO@ ClassInstanceCreation@@MvcRequestMatcher[introspector, mvcPattern] @AT@ 48684 @LENGTH@ 3
---------------INS SimpleType@@MvcRequestMatcher @TO@ ClassInstanceCreation@@MvcRequestMatcher[introspector, mvcPattern] @AT@ 48688 @LENGTH@ 17
---------------INS SimpleName@@introspector @TO@ ClassInstanceCreation@@MvcRequestMatcher[introspector, mvcPattern] @AT@ 48706 @LENGTH@ 12
---------------INS SimpleName@@mvcPattern @TO@ ClassInstanceCreation@@MvcRequestMatcher[introspector, mvcPattern] @AT@ 48720 @LENGTH@ 10


INS MethodDeclaration@@public, void, MethodName:discoversCorrectAliasForJoinFetch,  @TO@ TypeDeclaration@@[public]QueryUtilsUnitTests,  @AT@ 14068 @LENGTH@ 246
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:discoversCorrectAliasForJoinFetch,  @AT@ 14068 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:discoversCorrectAliasForJoinFetch,  @AT@ 14075 @LENGTH@ 4
---INS SimpleName@@MethodName:discoversCorrectAliasForJoinFetch @TO@ MethodDeclaration@@public, void, MethodName:discoversCorrectAliasForJoinFetch,  @AT@ 14080 @LENGTH@ 33
---INS VariableDeclarationStatement@@Set<String> aliases=QueryUtils.getOuterJoinAliases("SELECT DISTINCT user FROM User user LEFT JOIN FETCH user.authorities AS authority"); @TO@ MethodDeclaration@@public, void, MethodName:discoversCorrectAliasForJoinFetch,  @AT@ 14121 @LENGTH@ 143
------INS ParameterizedType@@Set<String> @TO@ VariableDeclarationStatement@@Set<String> aliases=QueryUtils.getOuterJoinAliases("SELECT DISTINCT user FROM User user LEFT JOIN FETCH user.authorities AS authority"); @AT@ 14121 @LENGTH@ 11
---------INS SimpleType@@Set @TO@ ParameterizedType@@Set<String> @AT@ 14121 @LENGTH@ 3
---------INS SimpleType@@String @TO@ ParameterizedType@@Set<String> @AT@ 14125 @LENGTH@ 6
------INS VariableDeclarationFragment@@aliases=QueryUtils.getOuterJoinAliases("SELECT DISTINCT user FROM User user LEFT JOIN FETCH user.authorities AS authority") @TO@ VariableDeclarationStatement@@Set<String> aliases=QueryUtils.getOuterJoinAliases("SELECT DISTINCT user FROM User user LEFT JOIN FETCH user.authorities AS authority"); @AT@ 14133 @LENGTH@ 130
---------INS SimpleName@@aliases @TO@ VariableDeclarationFragment@@aliases=QueryUtils.getOuterJoinAliases("SELECT DISTINCT user FROM User user LEFT JOIN FETCH user.authorities AS authority") @AT@ 14133 @LENGTH@ 7
---------INS MethodInvocation@@QueryUtils.getOuterJoinAliases("SELECT DISTINCT user FROM User user LEFT JOIN FETCH user.authorities AS authority") @TO@ VariableDeclarationFragment@@aliases=QueryUtils.getOuterJoinAliases("SELECT DISTINCT user FROM User user LEFT JOIN FETCH user.authorities AS authority") @AT@ 14143 @LENGTH@ 120
------------INS SimpleName@@Name:QueryUtils @TO@ MethodInvocation@@QueryUtils.getOuterJoinAliases("SELECT DISTINCT user FROM User user LEFT JOIN FETCH user.authorities AS authority") @AT@ 14143 @LENGTH@ 10
------------INS SimpleName@@MethodName:getOuterJoinAliases:["SELECT DISTINCT user FROM User user LEFT JOIN FETCH user.authorities AS authority"] @TO@ MethodInvocation@@QueryUtils.getOuterJoinAliases("SELECT DISTINCT user FROM User user LEFT JOIN FETCH user.authorities AS authority") @AT@ 14159 @LENGTH@ 104
---------------INS StringLiteral@@"SELECT DISTINCT user FROM User user LEFT JOIN FETCH user.authorities AS authority" @TO@ SimpleName@@MethodName:getOuterJoinAliases:["SELECT DISTINCT user FROM User user LEFT JOIN FETCH user.authorities AS authority"] @AT@ 14179 @LENGTH@ 83
---INS ExpressionStatement@@MethodInvocation:assertThat(aliases,contains("authority")) @TO@ MethodDeclaration@@public, void, MethodName:discoversCorrectAliasForJoinFetch,  @AT@ 14268 @LENGTH@ 43
------INS MethodInvocation@@assertThat(aliases,contains("authority")) @TO@ ExpressionStatement@@MethodInvocation:assertThat(aliases,contains("authority")) @AT@ 14268 @LENGTH@ 42
---------INS SimpleName@@MethodName:assertThat:[aliases, contains("authority")] @TO@ MethodInvocation@@assertThat(aliases,contains("authority")) @AT@ 14268 @LENGTH@ 42
------------INS SimpleName@@aliases @TO@ SimpleName@@MethodName:assertThat:[aliases, contains("authority")] @AT@ 14279 @LENGTH@ 7
------------INS MethodInvocation@@contains("authority") @TO@ SimpleName@@MethodName:assertThat:[aliases, contains("authority")] @AT@ 14288 @LENGTH@ 21
---------------INS SimpleName@@MethodName:contains:["authority"] @TO@ MethodInvocation@@contains("authority") @AT@ 14288 @LENGTH@ 21
------------------INS StringLiteral@@"authority" @TO@ SimpleName@@MethodName:contains:["authority"] @AT@ 14297 @LENGTH@ 11
---------------INS SimpleName@@MethodName:contains:["authority"] @TO@ MethodInvocation@@contains("authority") @AT@ 14288 @LENGTH@ 21
------------------INS StringLiteral@@"authority" @TO@ SimpleName@@MethodName:contains:["authority"] @AT@ 14297 @LENGTH@ 11


UPD CatchClause@@catch (MllpJUnitResourceException ex) {  Throwable cause=ex.getCause();  assertIsInstanceOf(SocketException.class,cause);  assertEquals("Broken pipe",cause.getMessage());} @TO@ catch (MllpJUnitResourceException ex) {  Throwable cause=ex.getCause();  assertIsInstanceOf(SocketException.class,cause);} @AT@ 4407 @LENGTH@ 217
---DEL ExpressionStatement@@MethodInvocation:assertEquals("Broken pipe",cause.getMessage()) @AT@ 4566 @LENGTH@ 48
------DEL MethodInvocation@@assertEquals("Broken pipe",cause.getMessage()) @AT@ 4566 @LENGTH@ 47
---------DEL SimpleName@@MethodName:assertEquals:["Broken pipe", cause.getMessage()] @AT@ 4566 @LENGTH@ 47
------------DEL StringLiteral@@"Broken pipe" @AT@ 4579 @LENGTH@ 13
------------DEL MethodInvocation@@cause.getMessage() @AT@ 4594 @LENGTH@ 18
---------------DEL SimpleName@@Name:cause @AT@ 4594 @LENGTH@ 5
---------------DEL SimpleName@@MethodName:getMessage:[] @AT@ 4600 @LENGTH@ 12


UPD VariableDeclarationStatement@@PartialScanWork mergeWork=new PartialScanWork(inputPaths); @TO@ PartialScanWork mergeWork=new PartialScanWork(inputPaths,null); @AT@ 12142 @LENGTH@ 60
---UPD VariableDeclarationFragment@@mergeWork=new PartialScanWork(inputPaths) @TO@ mergeWork=new PartialScanWork(inputPaths,null) @AT@ 12158 @LENGTH@ 43
------UPD ClassInstanceCreation@@PartialScanWork[inputPaths] @TO@ PartialScanWork[inputPaths, null] @AT@ 12170 @LENGTH@ 31
---------INS NullLiteral@@null @TO@ ClassInstanceCreation@@PartialScanWork[inputPaths] @AT@ 12202 @LENGTH@ 4


UPD ExpressionStatement@@MethodInvocation:((TableScanOperator)ts).setTableDesc(tableDescList.get((byte)k)) @TO@ MethodInvocation:((TableScanOperator)ts).setTableDescSkewJoin(tableDescList.get((byte)k)) @AT@ 10376 @LENGTH@ 67
---UPD MethodInvocation@@((TableScanOperator)ts).setTableDesc(tableDescList.get((byte)k)) @TO@ ((TableScanOperator)ts).setTableDescSkewJoin(tableDescList.get((byte)k)) @AT@ 10376 @LENGTH@ 66
------UPD SimpleName@@MethodName:setTableDesc:[tableDescList.get((byte)k)] @TO@ MethodName:setTableDescSkewJoin:[tableDescList.get((byte)k)] @AT@ 10401 @LENGTH@ 41


UPD TypeDeclaration@@[@Configuration, @ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration"), public]StreamComponentAutoConfiguration,  @TO@ [@Configuration, @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration"), public]StreamComponentAutoConfiguration,  @AT@ 1444 @LENGTH@ 610
---UPD NormalAnnotation@@@ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1459 @LENGTH@ 79
---UPD NormalAnnotation@@@AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1539 @LENGTH@ 80


UPD TypeDeclaration@@[@Configuration, @ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration"), public]DrillComponentAutoConfiguration,  @TO@ [@Configuration, @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration"), public]DrillComponentAutoConfiguration,  @AT@ 1441 @LENGTH@ 603
---UPD NormalAnnotation@@@ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1456 @LENGTH@ 79
---UPD NormalAnnotation@@@AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1536 @LENGTH@ 80


UPD TypeDeclaration@@[@Configuration, @ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration"), @EnableConfigurationProperties(GoogleMailComponentConfiguration.class), public]GoogleMailComponentAutoConfiguration,  @TO@ [@Configuration, @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration"), @EnableConfigurationProperties(GoogleMailComponentConfiguration.class), public]GoogleMailComponentAutoConfiguration,  @AT@ 1639 @LENGTH@ 2107
---UPD NormalAnnotation@@@ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1654 @LENGTH@ 79
---UPD NormalAnnotation@@@AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1734 @LENGTH@ 80


UPD TryStatement@@try {  OAuth2Exception body=extractor.extractData(bufferedResponse);  if (body != null) {    throw body;  }} catch (RestClientException e) {} @TO@ try {  OAuth2Exception oauth2Exception=extractor.extractData(bufferedResponse);  if (oauth2Exception != null) {    if (oauth2Exception.getClass() == UserDeniedAuthorizationException.class && bufferedResponse.getStatusCode().equals(HttpStatus.FORBIDDEN)) {      oauth2Exception=new OAuth2AccessDeniedException(oauth2Exception.getMessage());    }    throw oauth2Exception;  }} catch (RestClientException e) {} @AT@ 4615 @LENGTH@ 347
---UPD VariableDeclarationStatement@@OAuth2Exception body=extractor.extractData(bufferedResponse); @TO@ OAuth2Exception oauth2Exception=extractor.extractData(bufferedResponse); @AT@ 4626 @LENGTH@ 63
------UPD VariableDeclarationFragment@@body=extractor.extractData(bufferedResponse) @TO@ oauth2Exception=extractor.extractData(bufferedResponse) @AT@ 4642 @LENGTH@ 46
---------UPD SimpleName@@body @TO@ oauth2Exception @AT@ 4642 @LENGTH@ 4
---UPD IfStatement@@if (body != null) {  throw body;} @TO@ if (oauth2Exception != null) {  if (oauth2Exception.getClass() == UserDeniedAuthorizationException.class && bufferedResponse.getStatusCode().equals(HttpStatus.FORBIDDEN)) {    oauth2Exception=new OAuth2AccessDeniedException(oauth2Exception.getMessage());  }  throw oauth2Exception;} @AT@ 4695 @LENGTH@ 204
------UPD InfixExpression@@body != null @TO@ oauth2Exception != null @AT@ 4699 @LENGTH@ 12
---------UPD SimpleName@@body @TO@ oauth2Exception @AT@ 4699 @LENGTH@ 4
------UPD Block@@ThenBody:{  throw body;} @TO@ ThenBody:{  if (oauth2Exception.getClass() == UserDeniedAuthorizationException.class && bufferedResponse.getStatusCode().equals(HttpStatus.FORBIDDEN)) {    oauth2Exception=new OAuth2AccessDeniedException(oauth2Exception.getMessage());  }  throw oauth2Exception;} @AT@ 4713 @LENGTH@ 186
---------INS IfStatement@@if (oauth2Exception.getClass() == UserDeniedAuthorizationException.class && bufferedResponse.getStatusCode().equals(HttpStatus.FORBIDDEN)) {  oauth2Exception=new OAuth2AccessDeniedException(oauth2Exception.getMessage());} @TO@ Block@@ThenBody:{  throw body;} @AT@ 4676 @LENGTH@ 244
------------INS InfixExpression@@oauth2Exception.getClass() == UserDeniedAuthorizationException.class && bufferedResponse.getStatusCode().equals(HttpStatus.FORBIDDEN) @TO@ IfStatement@@if (oauth2Exception.getClass() == UserDeniedAuthorizationException.class && bufferedResponse.getStatusCode().equals(HttpStatus.FORBIDDEN)) {  oauth2Exception=new OAuth2AccessDeniedException(oauth2Exception.getMessage());} @AT@ 4680 @LENGTH@ 141
---------------INS InfixExpression@@oauth2Exception.getClass() == UserDeniedAuthorizationException.class @TO@ InfixExpression@@oauth2Exception.getClass() == UserDeniedAuthorizationException.class && bufferedResponse.getStatusCode().equals(HttpStatus.FORBIDDEN) @AT@ 4680 @LENGTH@ 68
------------------INS MethodInvocation@@oauth2Exception.getClass() @TO@ InfixExpression@@oauth2Exception.getClass() == UserDeniedAuthorizationException.class @AT@ 4680 @LENGTH@ 26
---------------------INS SimpleName@@Name:oauth2Exception @TO@ MethodInvocation@@oauth2Exception.getClass() @AT@ 4680 @LENGTH@ 15
---------------------INS SimpleName@@MethodName:getClass:[] @TO@ MethodInvocation@@oauth2Exception.getClass() @AT@ 4696 @LENGTH@ 10
------------------INS Operator@@== @TO@ InfixExpression@@oauth2Exception.getClass() == UserDeniedAuthorizationException.class @AT@ 4706 @LENGTH@ 2
------------------INS TypeLiteral@@UserDeniedAuthorizationException.class @TO@ InfixExpression@@oauth2Exception.getClass() == UserDeniedAuthorizationException.class @AT@ 4710 @LENGTH@ 38
---------------INS Operator@@&& @TO@ InfixExpression@@oauth2Exception.getClass() == UserDeniedAuthorizationException.class && bufferedResponse.getStatusCode().equals(HttpStatus.FORBIDDEN) @AT@ 4748 @LENGTH@ 2
---------------INS MethodInvocation@@bufferedResponse.getStatusCode().equals(HttpStatus.FORBIDDEN) @TO@ InfixExpression@@oauth2Exception.getClass() == UserDeniedAuthorizationException.class && bufferedResponse.getStatusCode().equals(HttpStatus.FORBIDDEN) @AT@ 4760 @LENGTH@ 61
------------------INS MethodInvocation@@MethodName:getStatusCode:[] @TO@ MethodInvocation@@bufferedResponse.getStatusCode().equals(HttpStatus.FORBIDDEN) @AT@ 4760 @LENGTH@ 32
------------------INS SimpleName@@Name:bufferedResponse @TO@ MethodInvocation@@bufferedResponse.getStatusCode().equals(HttpStatus.FORBIDDEN) @AT@ 4760 @LENGTH@ 16
------------------INS SimpleName@@MethodName:equals:[HttpStatus.FORBIDDEN] @TO@ MethodInvocation@@bufferedResponse.getStatusCode().equals(HttpStatus.FORBIDDEN) @AT@ 4793 @LENGTH@ 28
---------------------INS QualifiedName@@HttpStatus.FORBIDDEN @TO@ SimpleName@@MethodName:equals:[HttpStatus.FORBIDDEN] @AT@ 4800 @LENGTH@ 20
------------------------INS SimpleName@@HttpStatus @TO@ QualifiedName@@HttpStatus.FORBIDDEN @AT@ 4800 @LENGTH@ 10
------------------------INS SimpleName@@FORBIDDEN @TO@ QualifiedName@@HttpStatus.FORBIDDEN @AT@ 4811 @LENGTH@ 9
------------INS Block@@ThenBody:{  oauth2Exception=new OAuth2AccessDeniedException(oauth2Exception.getMessage());} @TO@ IfStatement@@if (oauth2Exception.getClass() == UserDeniedAuthorizationException.class && bufferedResponse.getStatusCode().equals(HttpStatus.FORBIDDEN)) {  oauth2Exception=new OAuth2AccessDeniedException(oauth2Exception.getMessage());} @AT@ 4823 @LENGTH@ 97
---------------INS ExpressionStatement@@Assignment:oauth2Exception=new OAuth2AccessDeniedException(oauth2Exception.getMessage()) @TO@ Block@@ThenBody:{  oauth2Exception=new OAuth2AccessDeniedException(oauth2Exception.getMessage());} @AT@ 4832 @LENGTH@ 80
------------------INS Assignment@@oauth2Exception=new OAuth2AccessDeniedException(oauth2Exception.getMessage()) @TO@ ExpressionStatement@@Assignment:oauth2Exception=new OAuth2AccessDeniedException(oauth2Exception.getMessage()) @AT@ 4832 @LENGTH@ 79
---------------------INS SimpleName@@oauth2Exception @TO@ Assignment@@oauth2Exception=new OAuth2AccessDeniedException(oauth2Exception.getMessage()) @AT@ 4832 @LENGTH@ 15
---------------------INS Operator@@= @TO@ Assignment@@oauth2Exception=new OAuth2AccessDeniedException(oauth2Exception.getMessage()) @AT@ 4847 @LENGTH@ 1
---------------------INS ClassInstanceCreation@@OAuth2AccessDeniedException[oauth2Exception.getMessage()] @TO@ Assignment@@oauth2Exception=new OAuth2AccessDeniedException(oauth2Exception.getMessage()) @AT@ 4850 @LENGTH@ 61
------------------------INS New@@new @TO@ ClassInstanceCreation@@OAuth2AccessDeniedException[oauth2Exception.getMessage()] @AT@ 4850 @LENGTH@ 3
------------------------INS SimpleType@@OAuth2AccessDeniedException @TO@ ClassInstanceCreation@@OAuth2AccessDeniedException[oauth2Exception.getMessage()] @AT@ 4854 @LENGTH@ 27
------------------------INS MethodInvocation@@oauth2Exception.getMessage() @TO@ ClassInstanceCreation@@OAuth2AccessDeniedException[oauth2Exception.getMessage()] @AT@ 4882 @LENGTH@ 28
---------------------------INS SimpleName@@Name:oauth2Exception @TO@ MethodInvocation@@oauth2Exception.getMessage() @AT@ 4882 @LENGTH@ 15
---------------------------INS SimpleName@@MethodName:getMessage:[] @TO@ MethodInvocation@@oauth2Exception.getMessage() @AT@ 4898 @LENGTH@ 12
---------UPD ThrowStatement@@SimpleName:body @TO@ SimpleName:oauth2Exception @AT@ 4881 @LENGTH@ 11
------------UPD SimpleName@@body @TO@ oauth2Exception @AT@ 4887 @LENGTH@ 4


UPD TypeDeclaration@@[@Configuration, @ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration"), @EnableConfigurationProperties(VmComponentConfiguration.class), public]VmComponentAutoConfiguration,  @TO@ [@Configuration, @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration"), @EnableConfigurationProperties(VmComponentConfiguration.class), public]VmComponentAutoConfiguration,  @AT@ 1613 @LENGTH@ 2021
---UPD NormalAnnotation@@@ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1628 @LENGTH@ 79
---UPD NormalAnnotation@@@AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1708 @LENGTH@ 80


UPD TypeDeclaration@@[@Configuration, @ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration"), @EnableConfigurationProperties(QuickfixjComponentConfiguration.class), public]QuickfixjComponentAutoConfiguration,  @TO@ [@Configuration, @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration"), @EnableConfigurationProperties(QuickfixjComponentConfiguration.class), public]QuickfixjComponentAutoConfiguration,  @AT@ 1634 @LENGTH@ 2096
---UPD NormalAnnotation@@@ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1649 @LENGTH@ 79
---UPD NormalAnnotation@@@AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1729 @LENGTH@ 80


UPD TypeDeclaration@@[public]LdapUserDetails, [UserDetails] @TO@ [public]LdapUserDetails, [UserDetails, CredentialsContainer] @AT@ 836 @LENGTH@ 286
---INS SimpleType@@CredentialsContainer @TO@ TypeDeclaration@@[public]LdapUserDetails, [UserDetails] @AT@ 953 @LENGTH@ 20


UPD TypeDeclaration@@[@Configuration, @ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration"), public]SchematronComponentAutoConfiguration,  @TO@ [@Configuration, @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration"), public]SchematronComponentAutoConfiguration,  @AT@ 1456 @LENGTH@ 639
---UPD NormalAnnotation@@@ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1471 @LENGTH@ 79
---UPD NormalAnnotation@@@AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1551 @LENGTH@ 80


UPD ExpressionStatement@@MethodInvocation:enabled.remove(protocols) @TO@ MethodInvocation:enabled.removeAll(protocols) @AT@ 11007 @LENGTH@ 26
---UPD MethodInvocation@@enabled.remove(protocols) @TO@ enabled.removeAll(protocols) @AT@ 11007 @LENGTH@ 25
------UPD SimpleName@@MethodName:remove:[protocols] @TO@ MethodName:removeAll:[protocols] @AT@ 11015 @LENGTH@ 17


UPD MethodDeclaration@@public, void, MethodName:createProject, @CliOption(key={"topLevelPackage"},mandatory=true,optionContext="update",help="The uppermost package name (this becomes the <groupId> in Maven and also the '~' value when using Roo's shell)") final JavaPackage topLevelPackage, @CliOption(key="projectName",help="The name of the project (last segment of package name used as default)") final String projectName, @CliOption(key="multimodule",mandatory=false,specifiedDefaultValue="STANDARD",help="Option to use a multmodule architecture") final Multimodule multimodule, @CliOption(key="java",help="Forces a particular major version of Java to be used (DEFAULT: 8)") final Integer majorJavaVersion, @CliOption(key="packaging",help="The Maven packaging of this project",unspecifiedDefaultValue=JarPackaging.NAME) final PackagingProvider packaging,  @TO@ public, void, MethodName:createProject, @CliOption(key={"topLevelPackage"},mandatory=true,optionContext="update",help="The uppermost package name (this becomes the <groupId> in Maven and also the '~' value when using Roo's shell)") final JavaPackage topLevelPackage, @CliOption(key="projectName",help="The name of the project (last segment of package name used as default)") final String projectName, @CliOption(key="multimodule",mandatory=false,specifiedDefaultValue="STANDARD",help="Option to use a multmodule architecture") final Multimodule multimodule, @CliOption(key="java",help="Forces a particular major version of Java to be used (DEFAULT: Java 6 inherited from Spring Boot)") final Integer majorJavaVersion, @CliOption(key="packaging",help="The Maven packaging of this project",unspecifiedDefaultValue=JarPackaging.NAME) final PackagingProvider packaging,  @AT@ 3459 @LENGTH@ 1253
---UPD SingleVariableDeclaration@@@CliOption(key="java",help="Forces a particular major version of Java to be used (DEFAULT: 8)") final Integer majorJavaVersion @TO@ @CliOption(key="java",help="Forces a particular major version of Java to be used (DEFAULT: Java 6 inherited from Spring Boot)") final Integer majorJavaVersion @AT@ 4116 @LENGTH@ 141


UPD ReturnStatement@@ParenthesizedExpression:(dataHandler.hashCode()) @TO@ MethodInvocation:dataHandler.hashCode() @AT@ 3724 @LENGTH@ 32
---INS MethodInvocation@@dataHandler.hashCode() @TO@ ReturnStatement@@ParenthesizedExpression:(dataHandler.hashCode()) @AT@ 3724 @LENGTH@ 22
------MOV SimpleName@@Name:dataHandler @TO@ MethodInvocation@@dataHandler.hashCode() @AT@ 3732 @LENGTH@ 11
------MOV SimpleName@@MethodName:hashCode:[] @TO@ MethodInvocation@@dataHandler.hashCode() @AT@ 3744 @LENGTH@ 10
---DEL ParenthesizedExpression@@(dataHandler.hashCode()) @AT@ 3731 @LENGTH@ 24
------DEL MethodInvocation@@dataHandler.hashCode() @AT@ 3732 @LENGTH@ 22


UPD ExpressionStatement@@MethodInvocation:assertThat(AuthorityUtils.authorityListToSet(token.getAuthorities()).contains("ROLE_ONE")) @TO@ MethodInvocation:assertThat(AuthorityUtils.authorityListToSet(token.getAuthorities())).contains("ROLE_ONE") @AT@ 2608 @LENGTH@ 96
---UPD MethodInvocation@@assertThat(AuthorityUtils.authorityListToSet(token.getAuthorities()).contains("ROLE_ONE")) @TO@ assertThat(AuthorityUtils.authorityListToSet(token.getAuthorities())).contains("ROLE_ONE") @AT@ 2608 @LENGTH@ 95
------INS MethodInvocation@@MethodName:assertThat:[AuthorityUtils.authorityListToSet(token.getAuthorities())] @TO@ MethodInvocation@@assertThat(AuthorityUtils.authorityListToSet(token.getAuthorities()).contains("ROLE_ONE")) @AT@ 2608 @LENGTH@ 69
---------INS MethodInvocation@@AuthorityUtils.authorityListToSet(token.getAuthorities()) @TO@ MethodInvocation@@MethodName:assertThat:[AuthorityUtils.authorityListToSet(token.getAuthorities())] @AT@ 2619 @LENGTH@ 57
------------MOV SimpleName@@Name:AuthorityUtils @TO@ MethodInvocation@@AuthorityUtils.authorityListToSet(token.getAuthorities()) @AT@ 2619 @LENGTH@ 14
------------INS SimpleName@@MethodName:authorityListToSet:[token.getAuthorities()] @TO@ MethodInvocation@@AuthorityUtils.authorityListToSet(token.getAuthorities()) @AT@ 2634 @LENGTH@ 42
---------------INS MethodInvocation@@token.getAuthorities() @TO@ SimpleName@@MethodName:authorityListToSet:[token.getAuthorities()] @AT@ 2653 @LENGTH@ 22
------------------MOV SimpleName@@Name:token @TO@ MethodInvocation@@token.getAuthorities() @AT@ 2653 @LENGTH@ 5
------------------MOV SimpleName@@MethodName:getAuthorities:[] @TO@ MethodInvocation@@token.getAuthorities() @AT@ 2659 @LENGTH@ 16
------DEL SimpleName@@MethodName:assertThat:[AuthorityUtils.authorityListToSet(token.getAuthorities()).contains("ROLE_ONE")] @AT@ 2608 @LENGTH@ 95
---------DEL MethodInvocation@@AuthorityUtils.authorityListToSet(token.getAuthorities()).contains("ROLE_ONE") @AT@ 2619 @LENGTH@ 83
------------DEL MethodInvocation@@MethodName:authorityListToSet:[token.getAuthorities()] @AT@ 2619 @LENGTH@ 57
---------------DEL MethodInvocation@@token.getAuthorities() @AT@ 2653 @LENGTH@ 22
------MOV SimpleName@@MethodName:contains:["ROLE_ONE"] @TO@ MethodInvocation@@assertThat(AuthorityUtils.authorityListToSet(token.getAuthorities()).contains("ROLE_ONE")) @AT@ 2677 @LENGTH@ 25


UPD TypeDeclaration@@[@Configuration, @ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration"), public]RedisComponentAutoConfiguration,  @TO@ [@Configuration, @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration"), public]RedisComponentAutoConfiguration,  @AT@ 1441 @LENGTH@ 610
---UPD NormalAnnotation@@@ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1456 @LENGTH@ 79
---UPD NormalAnnotation@@@AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1536 @LENGTH@ 80


UPD VariableDeclarationStatement@@String[] cookie=new String[]{"name","cookie","tokens","blah"}; @TO@ String[] cookie=new String[]{"name:with:colon","cookie","tokens","blah"}; @AT@ 3719 @LENGTH@ 70
---UPD VariableDeclarationFragment@@cookie=new String[]{"name","cookie","tokens","blah"} @TO@ cookie=new String[]{"name:with:colon","cookie","tokens","blah"} @AT@ 3728 @LENGTH@ 60
------UPD ArrayCreation@@new String[]{"name","cookie","tokens","blah"} @TO@ new String[]{"name:with:colon","cookie","tokens","blah"} @AT@ 3737 @LENGTH@ 51
---------UPD ArrayInitializer@@{"name","cookie","tokens","blah"} @TO@ {"name:with:colon","cookie","tokens","blah"} @AT@ 3750 @LENGTH@ 38
------------UPD StringLiteral@@"name" @TO@ "name:with:colon" @AT@ 3752 @LENGTH@ 6


UPD TypeDeclaration@@[@Configuration, @ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration"), public]CouchDbComponentAutoConfiguration,  @TO@ [@Configuration, @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration"), public]CouchDbComponentAutoConfiguration,  @AT@ 1447 @LENGTH@ 617
---UPD NormalAnnotation@@@ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1462 @LENGTH@ 79
---UPD NormalAnnotation@@@AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1542 @LENGTH@ 80


UPD TypeDeclaration@@[@ConfigurationProperties(prefix="camel.dataformat.json"), public]JsonDataFormatConfiguration,  @TO@ [@ConfigurationProperties(prefix="camel.dataformat.json-xstream"), public]JsonDataFormatConfiguration,  @AT@ 1156 @LENGTH@ 6760
---UPD NormalAnnotation@@@ConfigurationProperties(prefix="camel.dataformat.json") @TO@ @ConfigurationProperties(prefix="camel.dataformat.json-xstream") @AT@ 1156 @LENGTH@ 58


UPD TypeDeclaration@@[@Configuration, @ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration"), @EnableConfigurationProperties(SimpleLanguageConfiguration.class), public]SimpleLanguageAutoConfiguration,  @TO@ [@Configuration, @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration"), @EnableConfigurationProperties(SimpleLanguageConfiguration.class), public]SimpleLanguageAutoConfiguration,  @AT@ 1665 @LENGTH@ 1085
---UPD NormalAnnotation@@@ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1680 @LENGTH@ 79
---UPD NormalAnnotation@@@AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1760 @LENGTH@ 80


UPD TypeDeclaration@@[@Configuration, @ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration"), @EnableConfigurationProperties(UndertowComponentConfiguration.class), public]UndertowComponentAutoConfiguration,  @TO@ [@Configuration, @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration"), @EnableConfigurationProperties(UndertowComponentConfiguration.class), public]UndertowComponentAutoConfiguration,  @AT@ 1631 @LENGTH@ 2088
---UPD NormalAnnotation@@@ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1646 @LENGTH@ 79
---UPD NormalAnnotation@@@AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1726 @LENGTH@ 80


UPD TypeDeclaration@@[@Configuration, @ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration"), @EnableConfigurationProperties(CacheComponentConfiguration.class), public]CacheComponentAutoConfiguration,  @TO@ [@Configuration, @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration"), @EnableConfigurationProperties(CacheComponentConfiguration.class), public]CacheComponentAutoConfiguration,  @AT@ 1622 @LENGTH@ 2048
---UPD NormalAnnotation@@@ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1637 @LENGTH@ 79
---UPD NormalAnnotation@@@AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1717 @LENGTH@ 80


UPD TypeDeclaration@@[@Configuration, @ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration"), public]InfinispanComponentAutoConfiguration,  @TO@ [@Configuration, @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration"), public]InfinispanComponentAutoConfiguration,  @AT@ 1456 @LENGTH@ 639
---UPD NormalAnnotation@@@ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1471 @LENGTH@ 79
---UPD NormalAnnotation@@@AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1551 @LENGTH@ 80


UPD ExpressionStatement@@Assignment:restletHeaders=new Series<>(Header.class) @TO@ Assignment:restletHeaders=new Series<Header>(Header.class) @AT@ 8798 @LENGTH@ 44
---UPD Assignment@@restletHeaders=new Series<>(Header.class) @TO@ restletHeaders=new Series<Header>(Header.class) @AT@ 8798 @LENGTH@ 43
------UPD ClassInstanceCreation@@Series<>[Header.class] @TO@ Series<Header>[Header.class] @AT@ 8815 @LENGTH@ 26
---------UPD ParameterizedType@@Series<> @TO@ Series<Header> @AT@ 8819 @LENGTH@ 8
------------INS SimpleType@@Header @TO@ ParameterizedType@@Series<> @AT@ 8828 @LENGTH@ 6


INS IfStatement@@if (!this.applicationManifest.isHollow()) {  this.projectAsset=projectAsset;  this.applicationManifest.setAsset(this.projectAsset.getName());} @TO@ MethodDeclaration@@void, MethodName:setProjectAsset, ProjectAsset projectAsset,  @AT@ 13549 @LENGTH@ 175
---INS PrefixExpression@@!this.applicationManifest.isHollow() @TO@ IfStatement@@if (!this.applicationManifest.isHollow()) {  this.projectAsset=projectAsset;  this.applicationManifest.setAsset(this.projectAsset.getName());} @AT@ 13553 @LENGTH@ 36
------INS Operator@@! @TO@ PrefixExpression@@!this.applicationManifest.isHollow() @AT@ 13553 @LENGTH@ 1
------INS MethodInvocation@@this.applicationManifest.isHollow() @TO@ PrefixExpression@@!this.applicationManifest.isHollow() @AT@ 13554 @LENGTH@ 35
---------INS FieldAccess@@this.applicationManifest @TO@ MethodInvocation@@this.applicationManifest.isHollow() @AT@ 13554 @LENGTH@ 24
------------INS ThisExpression@@this @TO@ FieldAccess@@this.applicationManifest @AT@ 13554 @LENGTH@ 4
------------INS SimpleName@@applicationManifest @TO@ FieldAccess@@this.applicationManifest @AT@ 13559 @LENGTH@ 19
---------INS SimpleName@@MethodName:isHollow:[] @TO@ MethodInvocation@@this.applicationManifest.isHollow() @AT@ 13579 @LENGTH@ 10
---INS Block@@ThenBody:{  this.projectAsset=projectAsset;  this.applicationManifest.setAsset(this.projectAsset.getName());} @TO@ IfStatement@@if (!this.applicationManifest.isHollow()) {  this.projectAsset=projectAsset;  this.applicationManifest.setAsset(this.projectAsset.getName());} @AT@ 13591 @LENGTH@ 133
------MOV ExpressionStatement@@Assignment:this.projectAsset=projectAsset @TO@ Block@@ThenBody:{  this.projectAsset=projectAsset;  this.applicationManifest.setAsset(this.projectAsset.getName());} @AT@ 13549 @LENGTH@ 33
------MOV ExpressionStatement@@MethodInvocation:this.applicationManifest.setAsset(this.projectAsset.getName()) @TO@ Block@@ThenBody:{  this.projectAsset=projectAsset;  this.applicationManifest.setAsset(this.projectAsset.getName());} @AT@ 13591 @LENGTH@ 63


UPD TypeDeclaration@@[@Configuration, @ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration"), @EnableConfigurationProperties(LuceneComponentConfiguration.class), public]LuceneComponentAutoConfiguration,  @TO@ [@Configuration, @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration"), @EnableConfigurationProperties(LuceneComponentConfiguration.class), public]LuceneComponentAutoConfiguration,  @AT@ 1625 @LENGTH@ 2057
---UPD NormalAnnotation@@@ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1640 @LENGTH@ 79
---UPD NormalAnnotation@@@AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1720 @LENGTH@ 80


INS MethodDeclaration@@public, void, MethodName:unwrapsEmptyScalaOption,  @TO@ TypeDeclaration@@[public]QueryExecutionConvertersUnitTests,  @AT@ 4585 @LENGTH@ 124
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:unwrapsEmptyScalaOption,  @AT@ 4585 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:unwrapsEmptyScalaOption,  @AT@ 4592 @LENGTH@ 4
---INS SimpleName@@MethodName:unwrapsEmptyScalaOption @TO@ MethodDeclaration@@public, void, MethodName:unwrapsEmptyScalaOption,  @AT@ 4597 @LENGTH@ 23
---INS ExpressionStatement@@MethodInvocation:assertThat(QueryExecutionConverters.unwrap(Option.empty()),is((Object)null)) @TO@ MethodDeclaration@@public, void, MethodName:unwrapsEmptyScalaOption,  @AT@ 4627 @LENGTH@ 79
------INS MethodInvocation@@assertThat(QueryExecutionConverters.unwrap(Option.empty()),is((Object)null)) @TO@ ExpressionStatement@@MethodInvocation:assertThat(QueryExecutionConverters.unwrap(Option.empty()),is((Object)null)) @AT@ 4627 @LENGTH@ 78
---------INS SimpleName@@MethodName:assertThat:[QueryExecutionConverters.unwrap(Option.empty()), is((Object)null)] @TO@ MethodInvocation@@assertThat(QueryExecutionConverters.unwrap(Option.empty()),is((Object)null)) @AT@ 4627 @LENGTH@ 78
------------INS MethodInvocation@@QueryExecutionConverters.unwrap(Option.empty()) @TO@ SimpleName@@MethodName:assertThat:[QueryExecutionConverters.unwrap(Option.empty()), is((Object)null)] @AT@ 4638 @LENGTH@ 47
---------------INS SimpleName@@Name:QueryExecutionConverters @TO@ MethodInvocation@@QueryExecutionConverters.unwrap(Option.empty()) @AT@ 4638 @LENGTH@ 24
---------------INS SimpleName@@MethodName:unwrap:[Option.empty()] @TO@ MethodInvocation@@QueryExecutionConverters.unwrap(Option.empty()) @AT@ 4663 @LENGTH@ 22
------------------INS MethodInvocation@@Option.empty() @TO@ SimpleName@@MethodName:unwrap:[Option.empty()] @AT@ 4670 @LENGTH@ 14
---------------------INS SimpleName@@Name:Option @TO@ MethodInvocation@@Option.empty() @AT@ 4670 @LENGTH@ 6
---------------------INS SimpleName@@MethodName:empty:[] @TO@ MethodInvocation@@Option.empty() @AT@ 4677 @LENGTH@ 7
------------INS MethodInvocation@@is((Object)null) @TO@ SimpleName@@MethodName:assertThat:[QueryExecutionConverters.unwrap(Option.empty()), is((Object)null)] @AT@ 4687 @LENGTH@ 17
---------------INS SimpleName@@MethodName:is:[(Object)null] @TO@ MethodInvocation@@is((Object)null) @AT@ 4687 @LENGTH@ 17
------------------INS CastExpression@@(Object)null @TO@ SimpleName@@MethodName:is:[(Object)null] @AT@ 4690 @LENGTH@ 13
---------------------INS SimpleType@@Object @TO@ CastExpression@@(Object)null @AT@ 4691 @LENGTH@ 6
---------------------INS NullLiteral@@null @TO@ CastExpression@@(Object)null @AT@ 4699 @LENGTH@ 4
---------------INS SimpleName@@MethodName:is:[(Object)null] @TO@ MethodInvocation@@is((Object)null) @AT@ 4687 @LENGTH@ 17
------------------INS CastExpression@@(Object)null @TO@ SimpleName@@MethodName:is:[(Object)null] @AT@ 4690 @LENGTH@ 13
---------------------INS SimpleType@@Object @TO@ CastExpression@@(Object)null @AT@ 4691 @LENGTH@ 6
---------------------INS NullLiteral@@null @TO@ CastExpression@@(Object)null @AT@ 4699 @LENGTH@ 4


UPD VariableDeclarationStatement@@RCFileKeyBufferWrapper key=(RCFileKeyBufferWrapper)((CombineHiveKey)k).getKey(); @TO@ RCFileKeyBufferWrapper key=(RCFileKeyBufferWrapper)((k instanceof CombineHiveKey) ? ((CombineHiveKey)k).getKey() : k); @AT@ 3164 @LENGTH@ 84
---UPD VariableDeclarationFragment@@key=(RCFileKeyBufferWrapper)((CombineHiveKey)k).getKey() @TO@ key=(RCFileKeyBufferWrapper)((k instanceof CombineHiveKey) ? ((CombineHiveKey)k).getKey() : k) @AT@ 3187 @LENGTH@ 60
------UPD CastExpression@@(RCFileKeyBufferWrapper)((CombineHiveKey)k).getKey() @TO@ (RCFileKeyBufferWrapper)((k instanceof CombineHiveKey) ? ((CombineHiveKey)k).getKey() : k) @AT@ 3193 @LENGTH@ 54
---------INS ParenthesizedExpression@@((k instanceof CombineHiveKey) ? ((CombineHiveKey)k).getKey() : k) @TO@ CastExpression@@(RCFileKeyBufferWrapper)((CombineHiveKey)k).getKey() @AT@ 3232 @LENGTH@ 68
------------INS ConditionalExpression@@(k instanceof CombineHiveKey) ? ((CombineHiveKey)k).getKey() : k @TO@ ParenthesizedExpression@@((k instanceof CombineHiveKey) ? ((CombineHiveKey)k).getKey() : k) @AT@ 3233 @LENGTH@ 66
---------------MOV MethodInvocation@@((CombineHiveKey)k).getKey() @TO@ ConditionalExpression@@(k instanceof CombineHiveKey) ? ((CombineHiveKey)k).getKey() : k @AT@ 3218 @LENGTH@ 29
---------------INS ParenthesizedExpression@@(k instanceof CombineHiveKey) @TO@ ConditionalExpression@@(k instanceof CombineHiveKey) ? ((CombineHiveKey)k).getKey() : k @AT@ 3233 @LENGTH@ 29
------------------INS InstanceofExpression@@k instanceof CombineHiveKey @TO@ ParenthesizedExpression@@(k instanceof CombineHiveKey) @AT@ 3234 @LENGTH@ 27
---------------------INS SimpleName@@k @TO@ InstanceofExpression@@k instanceof CombineHiveKey @AT@ 3234 @LENGTH@ 1
---------------------INS Instanceof@@instanceof @TO@ InstanceofExpression@@k instanceof CombineHiveKey @AT@ 3236 @LENGTH@ 10
---------------------INS SimpleType@@CombineHiveKey @TO@ InstanceofExpression@@k instanceof CombineHiveKey @AT@ 3247 @LENGTH@ 14
---------------INS SimpleName@@k @TO@ ConditionalExpression@@(k instanceof CombineHiveKey) ? ((CombineHiveKey)k).getKey() : k @AT@ 3298 @LENGTH@ 1


INS MethodDeclaration@@public, void, MethodName:csrfWhenUsedThenDoesNotImpactOriginalRepository, Exception,  @TO@ TypeDeclaration@@[@RunWith(SpringJUnit4ClassRunner.class), @ContextConfiguration, @WebAppConfiguration, public]SecurityMockMvcRequestPostProcessorsCsrfTests,  @AT@ 5371 @LENGTH@ 667
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:csrfWhenUsedThenDoesNotImpactOriginalRepository, Exception,  @AT@ 5371 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:csrfWhenUsedThenDoesNotImpactOriginalRepository, Exception,  @AT@ 5378 @LENGTH@ 4
---INS SimpleName@@MethodName:csrfWhenUsedThenDoesNotImpactOriginalRepository @TO@ MethodDeclaration@@public, void, MethodName:csrfWhenUsedThenDoesNotImpactOriginalRepository, Exception,  @AT@ 5383 @LENGTH@ 47
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:csrfWhenUsedThenDoesNotImpactOriginalRepository, Exception,  @AT@ 5440 @LENGTH@ 9
---INS ExpressionStatement@@MethodInvocation:this.mockMvc.perform(post("/").with(csrf())) @TO@ MethodDeclaration@@public, void, MethodName:csrfWhenUsedThenDoesNotImpactOriginalRepository, Exception,  @AT@ 5474 @LENGTH@ 45
------INS MethodInvocation@@this.mockMvc.perform(post("/").with(csrf())) @TO@ ExpressionStatement@@MethodInvocation:this.mockMvc.perform(post("/").with(csrf())) @AT@ 5474 @LENGTH@ 44
---------INS FieldAccess@@this.mockMvc @TO@ MethodInvocation@@this.mockMvc.perform(post("/").with(csrf())) @AT@ 5474 @LENGTH@ 12
------------INS ThisExpression@@this @TO@ FieldAccess@@this.mockMvc @AT@ 5474 @LENGTH@ 4
------------INS SimpleName@@mockMvc @TO@ FieldAccess@@this.mockMvc @AT@ 5479 @LENGTH@ 7
---------INS SimpleName@@MethodName:perform:[post("/").with(csrf())] @TO@ MethodInvocation@@this.mockMvc.perform(post("/").with(csrf())) @AT@ 5487 @LENGTH@ 31
------------INS MethodInvocation@@post("/").with(csrf()) @TO@ SimpleName@@MethodName:perform:[post("/").with(csrf())] @AT@ 5495 @LENGTH@ 22
---------------INS MethodInvocation@@MethodName:post:["/"] @TO@ MethodInvocation@@post("/").with(csrf()) @AT@ 5495 @LENGTH@ 9
------------------INS StringLiteral@@"/" @TO@ MethodInvocation@@MethodName:post:["/"] @AT@ 5500 @LENGTH@ 3
---------------INS SimpleName@@MethodName:with:[csrf()] @TO@ MethodInvocation@@post("/").with(csrf()) @AT@ 5505 @LENGTH@ 12
------------------INS MethodInvocation@@MethodName:csrf:[] @TO@ SimpleName@@MethodName:with:[csrf()] @AT@ 5510 @LENGTH@ 6
---INS VariableDeclarationStatement@@MockHttpServletRequest request=new MockHttpServletRequest(); @TO@ MethodDeclaration@@public, void, MethodName:csrfWhenUsedThenDoesNotImpactOriginalRepository, Exception,  @AT@ 5523 @LENGTH@ 62
------INS SimpleType@@MockHttpServletRequest @TO@ VariableDeclarationStatement@@MockHttpServletRequest request=new MockHttpServletRequest(); @AT@ 5523 @LENGTH@ 22
------INS VariableDeclarationFragment@@request=new MockHttpServletRequest() @TO@ VariableDeclarationStatement@@MockHttpServletRequest request=new MockHttpServletRequest(); @AT@ 5546 @LENGTH@ 38
---------INS SimpleName@@request @TO@ VariableDeclarationFragment@@request=new MockHttpServletRequest() @AT@ 5546 @LENGTH@ 7
---------INS ClassInstanceCreation@@MockHttpServletRequest[] @TO@ VariableDeclarationFragment@@request=new MockHttpServletRequest() @AT@ 5556 @LENGTH@ 28
------------INS New@@new @TO@ ClassInstanceCreation@@MockHttpServletRequest[] @AT@ 5556 @LENGTH@ 3
------------INS SimpleType@@MockHttpServletRequest @TO@ ClassInstanceCreation@@MockHttpServletRequest[] @AT@ 5560 @LENGTH@ 22
---INS VariableDeclarationStatement@@HttpSessionCsrfTokenRepository repo=new HttpSessionCsrfTokenRepository(); @TO@ MethodDeclaration@@public, void, MethodName:csrfWhenUsedThenDoesNotImpactOriginalRepository, Exception,  @AT@ 5588 @LENGTH@ 75
------INS SimpleType@@HttpSessionCsrfTokenRepository @TO@ VariableDeclarationStatement@@HttpSessionCsrfTokenRepository repo=new HttpSessionCsrfTokenRepository(); @AT@ 5588 @LENGTH@ 30
------INS VariableDeclarationFragment@@repo=new HttpSessionCsrfTokenRepository() @TO@ VariableDeclarationStatement@@HttpSessionCsrfTokenRepository repo=new HttpSessionCsrfTokenRepository(); @AT@ 5619 @LENGTH@ 43
---------INS SimpleName@@repo @TO@ VariableDeclarationFragment@@repo=new HttpSessionCsrfTokenRepository() @AT@ 5619 @LENGTH@ 4
---------INS ClassInstanceCreation@@HttpSessionCsrfTokenRepository[] @TO@ VariableDeclarationFragment@@repo=new HttpSessionCsrfTokenRepository() @AT@ 5626 @LENGTH@ 36
------------INS New@@new @TO@ ClassInstanceCreation@@HttpSessionCsrfTokenRepository[] @AT@ 5626 @LENGTH@ 3
------------INS SimpleType@@HttpSessionCsrfTokenRepository @TO@ ClassInstanceCreation@@HttpSessionCsrfTokenRepository[] @AT@ 5630 @LENGTH@ 30
---INS VariableDeclarationStatement@@CsrfToken token=repo.generateToken(request); @TO@ MethodDeclaration@@public, void, MethodName:csrfWhenUsedThenDoesNotImpactOriginalRepository, Exception,  @AT@ 5666 @LENGTH@ 46
------INS SimpleType@@CsrfToken @TO@ VariableDeclarationStatement@@CsrfToken token=repo.generateToken(request); @AT@ 5666 @LENGTH@ 9
------INS VariableDeclarationFragment@@token=repo.generateToken(request) @TO@ VariableDeclarationStatement@@CsrfToken token=repo.generateToken(request); @AT@ 5676 @LENGTH@ 35
---------INS SimpleName@@token @TO@ VariableDeclarationFragment@@token=repo.generateToken(request) @AT@ 5676 @LENGTH@ 5
---------INS MethodInvocation@@repo.generateToken(request) @TO@ VariableDeclarationFragment@@token=repo.generateToken(request) @AT@ 5684 @LENGTH@ 27
------------INS SimpleName@@Name:repo @TO@ MethodInvocation@@repo.generateToken(request) @AT@ 5684 @LENGTH@ 4
------------INS SimpleName@@MethodName:generateToken:[request] @TO@ MethodInvocation@@repo.generateToken(request) @AT@ 5689 @LENGTH@ 22
---------------INS SimpleName@@request @TO@ SimpleName@@MethodName:generateToken:[request] @AT@ 5703 @LENGTH@ 7
---INS ExpressionStatement@@MethodInvocation:repo.saveToken(token,request,new MockHttpServletResponse()) @TO@ MethodDeclaration@@public, void, MethodName:csrfWhenUsedThenDoesNotImpactOriginalRepository, Exception,  @AT@ 5715 @LENGTH@ 62
------INS MethodInvocation@@repo.saveToken(token,request,new MockHttpServletResponse()) @TO@ ExpressionStatement@@MethodInvocation:repo.saveToken(token,request,new MockHttpServletResponse()) @AT@ 5715 @LENGTH@ 61
---------INS SimpleName@@Name:repo @TO@ MethodInvocation@@repo.saveToken(token,request,new MockHttpServletResponse()) @AT@ 5715 @LENGTH@ 4
---------INS SimpleName@@MethodName:saveToken:[token, request, new MockHttpServletResponse()] @TO@ MethodInvocation@@repo.saveToken(token,request,new MockHttpServletResponse()) @AT@ 5720 @LENGTH@ 56
------------INS SimpleName@@token @TO@ SimpleName@@MethodName:saveToken:[token, request, new MockHttpServletResponse()] @AT@ 5730 @LENGTH@ 5
------------INS SimpleName@@request @TO@ SimpleName@@MethodName:saveToken:[token, request, new MockHttpServletResponse()] @AT@ 5737 @LENGTH@ 7
------------INS ClassInstanceCreation@@MockHttpServletResponse[] @TO@ SimpleName@@MethodName:saveToken:[token, request, new MockHttpServletResponse()] @AT@ 5746 @LENGTH@ 29
---------------INS New@@new @TO@ ClassInstanceCreation@@MockHttpServletResponse[] @AT@ 5746 @LENGTH@ 3
---------------INS SimpleType@@MockHttpServletResponse @TO@ ClassInstanceCreation@@MockHttpServletResponse[] @AT@ 5750 @LENGTH@ 23
---INS VariableDeclarationStatement@@MockHttpServletRequestBuilder requestWithCsrf=post("/").param(token.getParameterName(),token.getToken()).session((MockHttpSession)request.getSession()); @TO@ MethodDeclaration@@public, void, MethodName:csrfWhenUsedThenDoesNotImpactOriginalRepository, Exception,  @AT@ 5781 @LENGTH@ 163
------INS SimpleType@@MockHttpServletRequestBuilder @TO@ VariableDeclarationStatement@@MockHttpServletRequestBuilder requestWithCsrf=post("/").param(token.getParameterName(),token.getToken()).session((MockHttpSession)request.getSession()); @AT@ 5781 @LENGTH@ 29
------INS VariableDeclarationFragment@@requestWithCsrf=post("/").param(token.getParameterName(),token.getToken()).session((MockHttpSession)request.getSession()) @TO@ VariableDeclarationStatement@@MockHttpServletRequestBuilder requestWithCsrf=post("/").param(token.getParameterName(),token.getToken()).session((MockHttpSession)request.getSession()); @AT@ 5811 @LENGTH@ 132
---------INS SimpleName@@requestWithCsrf @TO@ VariableDeclarationFragment@@requestWithCsrf=post("/").param(token.getParameterName(),token.getToken()).session((MockHttpSession)request.getSession()) @AT@ 5811 @LENGTH@ 15
---------INS MethodInvocation@@post("/").param(token.getParameterName(),token.getToken()).session((MockHttpSession)request.getSession()) @TO@ VariableDeclarationFragment@@requestWithCsrf=post("/").param(token.getParameterName(),token.getToken()).session((MockHttpSession)request.getSession()) @AT@ 5829 @LENGTH@ 114
------------INS MethodInvocation@@MethodName:param:[token.getParameterName(), token.getToken()] @TO@ MethodInvocation@@post("/").param(token.getParameterName(),token.getToken()).session((MockHttpSession)request.getSession()) @AT@ 5829 @LENGTH@ 63
---------------INS MethodInvocation@@token.getParameterName() @TO@ MethodInvocation@@MethodName:param:[token.getParameterName(), token.getToken()] @AT@ 5849 @LENGTH@ 24
------------------INS SimpleName@@Name:token @TO@ MethodInvocation@@token.getParameterName() @AT@ 5849 @LENGTH@ 5
------------------INS SimpleName@@MethodName:getParameterName:[] @TO@ MethodInvocation@@token.getParameterName() @AT@ 5855 @LENGTH@ 18
---------------INS MethodInvocation@@token.getToken() @TO@ MethodInvocation@@MethodName:param:[token.getParameterName(), token.getToken()] @AT@ 5875 @LENGTH@ 16
------------------INS SimpleName@@Name:token @TO@ MethodInvocation@@token.getToken() @AT@ 5875 @LENGTH@ 5
------------------INS SimpleName@@MethodName:getToken:[] @TO@ MethodInvocation@@token.getToken() @AT@ 5881 @LENGTH@ 10
------------INS MethodInvocation@@MethodName:post:["/"] @TO@ MethodInvocation@@post("/").param(token.getParameterName(),token.getToken()).session((MockHttpSession)request.getSession()) @AT@ 5829 @LENGTH@ 9
---------------INS StringLiteral@@"/" @TO@ MethodInvocation@@MethodName:post:["/"] @AT@ 5834 @LENGTH@ 3
------------INS SimpleName@@MethodName:session:[(MockHttpSession)request.getSession()] @TO@ MethodInvocation@@post("/").param(token.getParameterName(),token.getToken()).session((MockHttpSession)request.getSession()) @AT@ 5897 @LENGTH@ 46
---------------INS CastExpression@@(MockHttpSession)request.getSession() @TO@ SimpleName@@MethodName:session:[(MockHttpSession)request.getSession()] @AT@ 5905 @LENGTH@ 37
------------------INS SimpleType@@MockHttpSession @TO@ CastExpression@@(MockHttpSession)request.getSession() @AT@ 5906 @LENGTH@ 15
------------------INS MethodInvocation@@request.getSession() @TO@ CastExpression@@(MockHttpSession)request.getSession() @AT@ 5922 @LENGTH@ 20
---------------------INS SimpleName@@Name:request @TO@ MethodInvocation@@request.getSession() @AT@ 5922 @LENGTH@ 7
---------------------INS SimpleName@@MethodName:getSession:[] @TO@ MethodInvocation@@request.getSession() @AT@ 5930 @LENGTH@ 12
---INS ExpressionStatement@@MethodInvocation:this.mockMvc.perform(requestWithCsrf).andExpect(status().isOk()) @TO@ MethodDeclaration@@public, void, MethodName:csrfWhenUsedThenDoesNotImpactOriginalRepository, Exception,  @AT@ 5947 @LENGTH@ 69
------INS MethodInvocation@@this.mockMvc.perform(requestWithCsrf).andExpect(status().isOk()) @TO@ ExpressionStatement@@MethodInvocation:this.mockMvc.perform(requestWithCsrf).andExpect(status().isOk()) @AT@ 5947 @LENGTH@ 68
---------INS MethodInvocation@@MethodName:perform:[requestWithCsrf] @TO@ MethodInvocation@@this.mockMvc.perform(requestWithCsrf).andExpect(status().isOk()) @AT@ 5947 @LENGTH@ 37
------------INS SimpleName@@requestWithCsrf @TO@ MethodInvocation@@MethodName:perform:[requestWithCsrf] @AT@ 5968 @LENGTH@ 15
---------INS FieldAccess@@this.mockMvc @TO@ MethodInvocation@@this.mockMvc.perform(requestWithCsrf).andExpect(status().isOk()) @AT@ 5947 @LENGTH@ 12
------------INS ThisExpression@@this @TO@ FieldAccess@@this.mockMvc @AT@ 5947 @LENGTH@ 4
------------INS SimpleName@@mockMvc @TO@ FieldAccess@@this.mockMvc @AT@ 5952 @LENGTH@ 7
---------INS SimpleName@@MethodName:andExpect:[status().isOk()] @TO@ MethodInvocation@@this.mockMvc.perform(requestWithCsrf).andExpect(status().isOk()) @AT@ 5989 @LENGTH@ 26
------------INS MethodInvocation@@status().isOk() @TO@ SimpleName@@MethodName:andExpect:[status().isOk()] @AT@ 5999 @LENGTH@ 15
---------------INS MethodInvocation@@MethodName:status:[] @TO@ MethodInvocation@@status().isOk() @AT@ 5999 @LENGTH@ 8
---------------INS SimpleName@@MethodName:isOk:[] @TO@ MethodInvocation@@status().isOk() @AT@ 6008 @LENGTH@ 6


UPD MethodDeclaration@@public, void, MethodName:addField, final FieldMetadata field,  @TO@ public, void, MethodName:addField, final FieldMetadata field, boolean evict,  @AT@ 2630 @LENGTH@ 1709
---INS SingleVariableDeclaration@@boolean evict @TO@ MethodDeclaration@@public, void, MethodName:addField, final FieldMetadata field,  @AT@ 2768 @LENGTH@ 13
------INS PrimitiveType@@boolean @TO@ SingleVariableDeclaration@@boolean evict @AT@ 2768 @LENGTH@ 7
------INS SimpleName@@evict @TO@ SingleVariableDeclaration@@boolean evict @AT@ 2776 @LENGTH@ 5
---UPD VariableDeclarationStatement@@final PhysicalTypeMetadata ptm=(PhysicalTypeMetadata)metadataService.get(field.getDeclaredByMetadataId()); @TO@ PhysicalTypeMetadata ptm=null; @AT@ 2801 @LENGTH@ 117
------DEL Modifier@@final @AT@ 2801 @LENGTH@ 5
------UPD VariableDeclarationFragment@@ptm=(PhysicalTypeMetadata)metadataService.get(field.getDeclaredByMetadataId()) @TO@ ptm=null @AT@ 2828 @LENGTH@ 89
---------INS NullLiteral@@null @TO@ VariableDeclarationFragment@@ptm=(PhysicalTypeMetadata)metadataService.get(field.getDeclaredByMetadataId()) @AT@ 2933 @LENGTH@ 4
---INS IfStatement@@if (evict) {  ptm=(PhysicalTypeMetadata)metadataService.evictAndGet(field.getDeclaredByMetadataId());} else {  ptm=(PhysicalTypeMetadata)metadataService.get(field.getDeclaredByMetadataId());} @TO@ MethodDeclaration@@public, void, MethodName:addField, final FieldMetadata field,  @AT@ 2943 @LENGTH@ 217
------INS SimpleName@@evict @TO@ IfStatement@@if (evict) {  ptm=(PhysicalTypeMetadata)metadataService.evictAndGet(field.getDeclaredByMetadataId());} else {  ptm=(PhysicalTypeMetadata)metadataService.get(field.getDeclaredByMetadataId());} @AT@ 2947 @LENGTH@ 5
------INS Block@@ThenBody:{  ptm=(PhysicalTypeMetadata)metadataService.evictAndGet(field.getDeclaredByMetadataId());} @TO@ IfStatement@@if (evict) {  ptm=(PhysicalTypeMetadata)metadataService.evictAndGet(field.getDeclaredByMetadataId());} else {  ptm=(PhysicalTypeMetadata)metadataService.get(field.getDeclaredByMetadataId());} @AT@ 2954 @LENGTH@ 104
---------INS ExpressionStatement@@Assignment:ptm=(PhysicalTypeMetadata)metadataService.evictAndGet(field.getDeclaredByMetadataId()) @TO@ Block@@ThenBody:{  ptm=(PhysicalTypeMetadata)metadataService.evictAndGet(field.getDeclaredByMetadataId());} @AT@ 2962 @LENGTH@ 90
------------INS Assignment@@ptm=(PhysicalTypeMetadata)metadataService.evictAndGet(field.getDeclaredByMetadataId()) @TO@ ExpressionStatement@@Assignment:ptm=(PhysicalTypeMetadata)metadataService.evictAndGet(field.getDeclaredByMetadataId()) @AT@ 2962 @LENGTH@ 89
---------------INS SimpleName@@ptm @TO@ Assignment@@ptm=(PhysicalTypeMetadata)metadataService.evictAndGet(field.getDeclaredByMetadataId()) @AT@ 2962 @LENGTH@ 3
---------------INS Operator@@= @TO@ Assignment@@ptm=(PhysicalTypeMetadata)metadataService.evictAndGet(field.getDeclaredByMetadataId()) @AT@ 2965 @LENGTH@ 1
---------------INS CastExpression@@(PhysicalTypeMetadata)metadataService.evictAndGet(field.getDeclaredByMetadataId()) @TO@ Assignment@@ptm=(PhysicalTypeMetadata)metadataService.evictAndGet(field.getDeclaredByMetadataId()) @AT@ 2968 @LENGTH@ 83
------------------INS SimpleType@@PhysicalTypeMetadata @TO@ CastExpression@@(PhysicalTypeMetadata)metadataService.evictAndGet(field.getDeclaredByMetadataId()) @AT@ 2969 @LENGTH@ 20
------------------INS MethodInvocation@@metadataService.evictAndGet(field.getDeclaredByMetadataId()) @TO@ CastExpression@@(PhysicalTypeMetadata)metadataService.evictAndGet(field.getDeclaredByMetadataId()) @AT@ 2991 @LENGTH@ 60
---------------------INS SimpleName@@Name:metadataService @TO@ MethodInvocation@@metadataService.evictAndGet(field.getDeclaredByMetadataId()) @AT@ 2991 @LENGTH@ 15
---------------------INS SimpleName@@MethodName:evictAndGet:[field.getDeclaredByMetadataId()] @TO@ MethodInvocation@@metadataService.evictAndGet(field.getDeclaredByMetadataId()) @AT@ 3007 @LENGTH@ 44
------------------------INS MethodInvocation@@field.getDeclaredByMetadataId() @TO@ SimpleName@@MethodName:evictAndGet:[field.getDeclaredByMetadataId()] @AT@ 3019 @LENGTH@ 31
---------------------------INS SimpleName@@Name:field @TO@ MethodInvocation@@field.getDeclaredByMetadataId() @AT@ 3019 @LENGTH@ 5
---------------------------INS SimpleName@@MethodName:getDeclaredByMetadataId:[] @TO@ MethodInvocation@@field.getDeclaredByMetadataId() @AT@ 3025 @LENGTH@ 25
------INS Block@@ElseBody:{  ptm=(PhysicalTypeMetadata)metadataService.get(field.getDeclaredByMetadataId());} @TO@ IfStatement@@if (evict) {  ptm=(PhysicalTypeMetadata)metadataService.evictAndGet(field.getDeclaredByMetadataId());} else {  ptm=(PhysicalTypeMetadata)metadataService.get(field.getDeclaredByMetadataId());} @AT@ 3064 @LENGTH@ 96
---------INS ExpressionStatement@@Assignment:ptm=(PhysicalTypeMetadata)metadataService.get(field.getDeclaredByMetadataId()) @TO@ Block@@ElseBody:{  ptm=(PhysicalTypeMetadata)metadataService.get(field.getDeclaredByMetadataId());} @AT@ 3072 @LENGTH@ 82
------------INS Assignment@@ptm=(PhysicalTypeMetadata)metadataService.get(field.getDeclaredByMetadataId()) @TO@ ExpressionStatement@@Assignment:ptm=(PhysicalTypeMetadata)metadataService.get(field.getDeclaredByMetadataId()) @AT@ 3072 @LENGTH@ 81
---------------MOV CastExpression@@(PhysicalTypeMetadata)metadataService.get(field.getDeclaredByMetadataId()) @TO@ Assignment@@ptm=(PhysicalTypeMetadata)metadataService.get(field.getDeclaredByMetadataId()) @AT@ 2842 @LENGTH@ 75
---------------INS SimpleName@@ptm @TO@ Assignment@@ptm=(PhysicalTypeMetadata)metadataService.get(field.getDeclaredByMetadataId()) @AT@ 3072 @LENGTH@ 3
---------------INS Operator@@= @TO@ Assignment@@ptm=(PhysicalTypeMetadata)metadataService.get(field.getDeclaredByMetadataId()) @AT@ 3075 @LENGTH@ 1


UPD EnhancedForStatement@@for (Fraction fraction : userFractions.values()) {  BeanConfigurator<Object> configurator=abd.addBean().addType(fraction.getClass()).addType(Fraction.class).scope(Singleton.class).produceWith(() -> fraction);  for (  Annotation annotation : fraction.getClass().getAnnotations()) {    configurator.qualifiers(annotation);  }} @TO@ for (Fraction fraction : userFractions.values()) {  BeanConfigurator<Object> configurator=abd.addBean().addType(fraction.getClass()).addType(Fraction.class).scope(Singleton.class).produceWith(() -> fraction);  Annotation[] qualifiers=new Annotation[fraction.getClass().getAnnotations().length - 1];  int index=0;  for (  Annotation annotation : fraction.getClass().getAnnotations()) {    if (!annotation.annotationType().equals(DefaultFraction.class)) {      qualifiers[index++]=annotation;    }  }  configurator.qualifiers(qualifiers);} @AT@ 1039 @LENGTH@ 462
---DEL EnhancedForStatement@@for (Annotation annotation : fraction.getClass().getAnnotations()) {  configurator.qualifiers(annotation);} @AT@ 1358 @LENGTH@ 133
---INS VariableDeclarationStatement@@Annotation[] qualifiers=new Annotation[fraction.getClass().getAnnotations().length - 1]; @TO@ EnhancedForStatement@@for (Fraction fraction : userFractions.values()) {  BeanConfigurator<Object> configurator=abd.addBean().addType(fraction.getClass()).addType(Fraction.class).scope(Singleton.class).produceWith(() -> fraction);  for (  Annotation annotation : fraction.getClass().getAnnotations()) {    configurator.qualifiers(annotation);  }} @AT@ 1358 @LENGTH@ 90
------INS ArrayType@@Annotation[] @TO@ VariableDeclarationStatement@@Annotation[] qualifiers=new Annotation[fraction.getClass().getAnnotations().length - 1]; @AT@ 1358 @LENGTH@ 12
---------INS SimpleType@@Annotation @TO@ ArrayType@@Annotation[] @AT@ 1358 @LENGTH@ 10
------INS VariableDeclarationFragment@@qualifiers=new Annotation[fraction.getClass().getAnnotations().length - 1] @TO@ VariableDeclarationStatement@@Annotation[] qualifiers=new Annotation[fraction.getClass().getAnnotations().length - 1]; @AT@ 1371 @LENGTH@ 76
---------INS SimpleName@@qualifiers @TO@ VariableDeclarationFragment@@qualifiers=new Annotation[fraction.getClass().getAnnotations().length - 1] @AT@ 1371 @LENGTH@ 10
---------INS ArrayCreation@@new Annotation[fraction.getClass().getAnnotations().length - 1] @TO@ VariableDeclarationFragment@@qualifiers=new Annotation[fraction.getClass().getAnnotations().length - 1] @AT@ 1384 @LENGTH@ 63
------------INS ArrayType@@Annotation[] @TO@ ArrayCreation@@new Annotation[fraction.getClass().getAnnotations().length - 1] @AT@ 1388 @LENGTH@ 59
---------------INS SimpleType@@Annotation @TO@ ArrayType@@Annotation[] @AT@ 1388 @LENGTH@ 10
------------INS InfixExpression@@fraction.getClass().getAnnotations().length - 1 @TO@ ArrayCreation@@new Annotation[fraction.getClass().getAnnotations().length - 1] @AT@ 1399 @LENGTH@ 47
---------------INS FieldAccess@@fraction.getClass().getAnnotations().length @TO@ InfixExpression@@fraction.getClass().getAnnotations().length - 1 @AT@ 1399 @LENGTH@ 43
------------------INS MethodInvocation@@fraction.getClass().getAnnotations() @TO@ FieldAccess@@fraction.getClass().getAnnotations().length @AT@ 1399 @LENGTH@ 36
---------------------INS MethodInvocation@@MethodName:getClass:[] @TO@ MethodInvocation@@fraction.getClass().getAnnotations() @AT@ 1399 @LENGTH@ 19
---------------------INS SimpleName@@Name:fraction @TO@ MethodInvocation@@fraction.getClass().getAnnotations() @AT@ 1399 @LENGTH@ 8
---------------------INS SimpleName@@MethodName:getAnnotations:[] @TO@ MethodInvocation@@fraction.getClass().getAnnotations() @AT@ 1419 @LENGTH@ 16
------------------INS SimpleName@@length @TO@ FieldAccess@@fraction.getClass().getAnnotations().length @AT@ 1436 @LENGTH@ 6
---------------INS Operator@@- @TO@ InfixExpression@@fraction.getClass().getAnnotations().length - 1 @AT@ 1442 @LENGTH@ 1
---------------INS NumberLiteral@@1 @TO@ InfixExpression@@fraction.getClass().getAnnotations().length - 1 @AT@ 1445 @LENGTH@ 1
---MOV ExpressionStatement@@MethodInvocation:configurator.qualifiers(annotation) @TO@ EnhancedForStatement@@for (Fraction fraction : userFractions.values()) {  BeanConfigurator<Object> configurator=abd.addBean().addType(fraction.getClass()).addType(Fraction.class).scope(Singleton.class).produceWith(() -> fraction);  for (  Annotation annotation : fraction.getClass().getAnnotations()) {    configurator.qualifiers(annotation);  }} @AT@ 1441 @LENGTH@ 36
------UPD MethodInvocation@@configurator.qualifiers(annotation) @TO@ configurator.qualifiers(qualifiers) @AT@ 1441 @LENGTH@ 35
---------UPD SimpleName@@MethodName:qualifiers:[annotation] @TO@ MethodName:qualifiers:[qualifiers] @AT@ 1454 @LENGTH@ 22
------------UPD SimpleName@@annotation @TO@ qualifiers @AT@ 1465 @LENGTH@ 10
---INS VariableDeclarationStatement@@int index=0; @TO@ EnhancedForStatement@@for (Fraction fraction : userFractions.values()) {  BeanConfigurator<Object> configurator=abd.addBean().addType(fraction.getClass()).addType(Fraction.class).scope(Singleton.class).produceWith(() -> fraction);  for (  Annotation annotation : fraction.getClass().getAnnotations()) {    configurator.qualifiers(annotation);  }} @AT@ 1461 @LENGTH@ 14
------INS PrimitiveType@@int @TO@ VariableDeclarationStatement@@int index=0; @AT@ 1461 @LENGTH@ 3
------INS VariableDeclarationFragment@@index=0 @TO@ VariableDeclarationStatement@@int index=0; @AT@ 1465 @LENGTH@ 9
---------INS SimpleName@@index @TO@ VariableDeclarationFragment@@index=0 @AT@ 1465 @LENGTH@ 5
---------INS NumberLiteral@@0 @TO@ VariableDeclarationFragment@@index=0 @AT@ 1473 @LENGTH@ 1
---INS EnhancedForStatement@@for (Annotation annotation : fraction.getClass().getAnnotations()) {  if (!annotation.annotationType().equals(DefaultFraction.class)) {    qualifiers[index++]=annotation;  }} @TO@ EnhancedForStatement@@for (Fraction fraction : userFractions.values()) {  BeanConfigurator<Object> configurator=abd.addBean().addType(fraction.getClass()).addType(Fraction.class).scope(Singleton.class).produceWith(() -> fraction);  for (  Annotation annotation : fraction.getClass().getAnnotations()) {    configurator.qualifiers(annotation);  }} @AT@ 1488 @LENGTH@ 236
------MOV SingleVariableDeclaration@@Annotation annotation @TO@ EnhancedForStatement@@for (Annotation annotation : fraction.getClass().getAnnotations()) {  if (!annotation.annotationType().equals(DefaultFraction.class)) {    qualifiers[index++]=annotation;  }} @AT@ 1362 @LENGTH@ 21
------MOV MethodInvocation@@fraction.getClass().getAnnotations() @TO@ EnhancedForStatement@@for (Annotation annotation : fraction.getClass().getAnnotations()) {  if (!annotation.annotationType().equals(DefaultFraction.class)) {    qualifiers[index++]=annotation;  }} @AT@ 1385 @LENGTH@ 36
------INS IfStatement@@if (!annotation.annotationType().equals(DefaultFraction.class)) {  qualifiers[index++]=annotation;} @TO@ EnhancedForStatement@@for (Annotation annotation : fraction.getClass().getAnnotations()) {  if (!annotation.annotationType().equals(DefaultFraction.class)) {    qualifiers[index++]=annotation;  }} @AT@ 1573 @LENGTH@ 137
---------INS PrefixExpression@@!annotation.annotationType().equals(DefaultFraction.class) @TO@ IfStatement@@if (!annotation.annotationType().equals(DefaultFraction.class)) {  qualifiers[index++]=annotation;} @AT@ 1577 @LENGTH@ 58
------------INS Operator@@! @TO@ PrefixExpression@@!annotation.annotationType().equals(DefaultFraction.class) @AT@ 1577 @LENGTH@ 1
------------INS MethodInvocation@@annotation.annotationType().equals(DefaultFraction.class) @TO@ PrefixExpression@@!annotation.annotationType().equals(DefaultFraction.class) @AT@ 1578 @LENGTH@ 57
---------------INS MethodInvocation@@MethodName:annotationType:[] @TO@ MethodInvocation@@annotation.annotationType().equals(DefaultFraction.class) @AT@ 1578 @LENGTH@ 27
---------------INS SimpleName@@Name:annotation @TO@ MethodInvocation@@annotation.annotationType().equals(DefaultFraction.class) @AT@ 1578 @LENGTH@ 10
---------------INS SimpleName@@MethodName:equals:[DefaultFraction.class] @TO@ MethodInvocation@@annotation.annotationType().equals(DefaultFraction.class) @AT@ 1606 @LENGTH@ 29
------------------INS TypeLiteral@@DefaultFraction.class @TO@ SimpleName@@MethodName:equals:[DefaultFraction.class] @AT@ 1613 @LENGTH@ 21
---------INS Block@@ThenBody:{  qualifiers[index++]=annotation;} @TO@ IfStatement@@if (!annotation.annotationType().equals(DefaultFraction.class)) {  qualifiers[index++]=annotation;} @AT@ 1637 @LENGTH@ 73
------------INS ExpressionStatement@@Assignment:qualifiers[index++]=annotation @TO@ Block@@ThenBody:{  qualifiers[index++]=annotation;} @AT@ 1659 @LENGTH@ 33
---------------INS Assignment@@qualifiers[index++]=annotation @TO@ ExpressionStatement@@Assignment:qualifiers[index++]=annotation @AT@ 1659 @LENGTH@ 32
------------------INS ArrayAccess@@qualifiers[index++] @TO@ Assignment@@qualifiers[index++]=annotation @AT@ 1659 @LENGTH@ 19
---------------------INS SimpleName@@qualifiers @TO@ ArrayAccess@@qualifiers[index++] @AT@ 1659 @LENGTH@ 10
---------------------INS PostfixExpression@@index++ @TO@ ArrayAccess@@qualifiers[index++] @AT@ 1670 @LENGTH@ 7
------------------------INS SimpleName@@index @TO@ PostfixExpression@@index++ @AT@ 1670 @LENGTH@ 5
------------------------INS Operator@@++ @TO@ PostfixExpression@@index++ @AT@ 1676 @LENGTH@ 2
------------------INS Operator@@= @TO@ Assignment@@qualifiers[index++]=annotation @AT@ 1678 @LENGTH@ 1
------------------INS SimpleName@@annotation @TO@ Assignment@@qualifiers[index++]=annotation @AT@ 1681 @LENGTH@ 10


UPD TypeDeclaration@@[@Configuration, @ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration"), @EnableConfigurationProperties(PropertiesComponentConfiguration.class), public]PropertiesComponentAutoConfiguration,  @TO@ [@Configuration, @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration"), @EnableConfigurationProperties(PropertiesComponentConfiguration.class), public]PropertiesComponentAutoConfiguration,  @AT@ 1637 @LENGTH@ 2106
---UPD NormalAnnotation@@@ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1652 @LENGTH@ 79
---UPD NormalAnnotation@@@AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1732 @LENGTH@ 80


UPD ReturnStatement@@MethodInvocation:((ConfigurationValue)qualifier).property() @TO@ MethodInvocation:((ConfigurationValue)qualifier).value() @AT@ 2880 @LENGTH@ 51
---UPD MethodInvocation@@((ConfigurationValue)qualifier).property() @TO@ ((ConfigurationValue)qualifier).value() @AT@ 2887 @LENGTH@ 43
------UPD SimpleName@@MethodName:property:[] @TO@ MethodName:value:[] @AT@ 2920 @LENGTH@ 10


UPD ThrowStatement@@ClassInstanceCreation:new SecurityException("Security manager may not be changed") @TO@ MethodInvocation:access.secMgrChange() @AT@ 6497 @LENGTH@ 67
---INS MethodInvocation@@access.secMgrChange() @TO@ ThrowStatement@@ClassInstanceCreation:new SecurityException("Security manager may not be changed") @AT@ 6472 @LENGTH@ 21
------INS SimpleName@@Name:access @TO@ MethodInvocation@@access.secMgrChange() @AT@ 6472 @LENGTH@ 6
------INS SimpleName@@MethodName:secMgrChange:[] @TO@ MethodInvocation@@access.secMgrChange() @AT@ 6479 @LENGTH@ 14
---DEL ClassInstanceCreation@@SecurityException["Security manager may not be changed"] @AT@ 6503 @LENGTH@ 60
------DEL New@@new @AT@ 6503 @LENGTH@ 3
------DEL SimpleType@@SecurityException @AT@ 6507 @LENGTH@ 17
------DEL StringLiteral@@"Security manager may not be changed" @AT@ 6525 @LENGTH@ 37


INS FieldDeclaration@@private, final, Integer, [port=31010] @TO@ TypeDeclaration@@[@Ignore("CAMEL-10327: Set host, mode and query to test drill producer (direct connection mode)."), public]ProducerTest, CamelTestSupport @AT@ 1364 @LENGTH@ 35
---INS Modifier@@private @TO@ FieldDeclaration@@private, final, Integer, [port=31010] @AT@ 1364 @LENGTH@ 7
---INS Modifier@@final @TO@ FieldDeclaration@@private, final, Integer, [port=31010] @AT@ 1372 @LENGTH@ 5
---INS SimpleType@@Integer @TO@ FieldDeclaration@@private, final, Integer, [port=31010] @AT@ 1378 @LENGTH@ 7
---INS VariableDeclarationFragment@@port=31010 @TO@ FieldDeclaration@@private, final, Integer, [port=31010] @AT@ 1386 @LENGTH@ 12
------INS SimpleName@@port @TO@ VariableDeclarationFragment@@port=31010 @AT@ 1386 @LENGTH@ 4
------INS NumberLiteral@@31010 @TO@ VariableDeclarationFragment@@port=31010 @AT@ 1393 @LENGTH@ 5


UPD IfStatement@@if (!isAsyncStarted(request)) {  logger.debug("Closed Neo4J OGM Session in OpenSessionInViewFilter");  SessionFactoryUtils.closeSession();} @TO@ if (!isAsyncStarted(request)) {  logger.debug("Closed Neo4J OGM Session in OpenSessionInViewFilter");} @AT@ 5154 @LENGTH@ 175
---UPD Block@@ThenBody:{  logger.debug("Closed Neo4J OGM Session in OpenSessionInViewFilter");  SessionFactoryUtils.closeSession();} @TO@ ThenBody:{  logger.debug("Closed Neo4J OGM Session in OpenSessionInViewFilter");} @AT@ 5184 @LENGTH@ 145
------DEL ExpressionStatement@@MethodInvocation:SessionFactoryUtils.closeSession() @AT@ 5288 @LENGTH@ 35
---------DEL MethodInvocation@@SessionFactoryUtils.closeSession() @AT@ 5288 @LENGTH@ 34
------------DEL SimpleName@@Name:SessionFactoryUtils @AT@ 5288 @LENGTH@ 19
------------DEL SimpleName@@MethodName:closeSession:[] @AT@ 5308 @LENGTH@ 14


UPD TypeDeclaration@@[@Configuration, @ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration"), public]NetWeaverComponentAutoConfiguration,  @TO@ [@Configuration, @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration"), public]NetWeaverComponentAutoConfiguration,  @AT@ 1461 @LENGTH@ 636
---UPD NormalAnnotation@@@ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1476 @LENGTH@ 79
---UPD NormalAnnotation@@@AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1556 @LENGTH@ 80


UPD VariableDeclarationStatement@@int stabilityIndex=stabilityJson.isNull() ? FractionStability.UNSTABLE.ordinal() : stabilityJson.asInt(); @TO@ int stabilityIndex=stabilityJson == null || stabilityJson.isNull() ? FractionStability.UNSTABLE.ordinal() : stabilityJson.asInt(); @AT@ 2544 @LENGTH@ 107
---UPD VariableDeclarationFragment@@stabilityIndex=stabilityJson.isNull() ? FractionStability.UNSTABLE.ordinal() : stabilityJson.asInt() @TO@ stabilityIndex=stabilityJson == null || stabilityJson.isNull() ? FractionStability.UNSTABLE.ordinal() : stabilityJson.asInt() @AT@ 2548 @LENGTH@ 102
------UPD ConditionalExpression@@stabilityJson.isNull() ? FractionStability.UNSTABLE.ordinal() : stabilityJson.asInt() @TO@ stabilityJson == null || stabilityJson.isNull() ? FractionStability.UNSTABLE.ordinal() : stabilityJson.asInt() @AT@ 2565 @LENGTH@ 85
---------INS InfixExpression@@stabilityJson == null || stabilityJson.isNull() @TO@ ConditionalExpression@@stabilityJson.isNull() ? FractionStability.UNSTABLE.ordinal() : stabilityJson.asInt() @AT@ 2565 @LENGTH@ 47
------------INS InfixExpression@@stabilityJson == null @TO@ InfixExpression@@stabilityJson == null || stabilityJson.isNull() @AT@ 2565 @LENGTH@ 21
---------------INS SimpleName@@stabilityJson @TO@ InfixExpression@@stabilityJson == null @AT@ 2565 @LENGTH@ 13
---------------INS Operator@@== @TO@ InfixExpression@@stabilityJson == null @AT@ 2578 @LENGTH@ 2
---------------INS NullLiteral@@null @TO@ InfixExpression@@stabilityJson == null @AT@ 2582 @LENGTH@ 4
------------INS Operator@@|| @TO@ InfixExpression@@stabilityJson == null || stabilityJson.isNull() @AT@ 2586 @LENGTH@ 2
------------INS MethodInvocation@@stabilityJson.isNull() @TO@ InfixExpression@@stabilityJson == null || stabilityJson.isNull() @AT@ 2590 @LENGTH@ 22
---------------MOV SimpleName@@Name:stabilityJson @TO@ MethodInvocation@@stabilityJson.isNull() @AT@ 2565 @LENGTH@ 13
---------------MOV SimpleName@@MethodName:isNull:[] @TO@ MethodInvocation@@stabilityJson.isNull() @AT@ 2579 @LENGTH@ 8
---------DEL MethodInvocation@@stabilityJson.isNull() @AT@ 2565 @LENGTH@ 22


UPD CatchClause@@catch (InterruptedException e) {  e.printStackTrace();} @TO@ catch (InterruptedException e) {  Thread.currentThread().interrupt();  throw new RuntimeException(e);} @AT@ 8215 @LENGTH@ 107
---UPD ExpressionStatement@@MethodInvocation:e.printStackTrace() @TO@ MethodInvocation:Thread.currentThread().interrupt() @AT@ 8276 @LENGTH@ 20
------UPD MethodInvocation@@e.printStackTrace() @TO@ Thread.currentThread().interrupt() @AT@ 8276 @LENGTH@ 19
---------UPD SimpleName@@Name:e @TO@ Name:Thread @AT@ 8276 @LENGTH@ 1
---------INS MethodInvocation@@MethodName:currentThread:[] @TO@ MethodInvocation@@e.printStackTrace() @AT@ 8276 @LENGTH@ 22
---------UPD SimpleName@@MethodName:printStackTrace:[] @TO@ MethodName:interrupt:[] @AT@ 8278 @LENGTH@ 17
---INS ThrowStatement@@ClassInstanceCreation:new RuntimeException(e) @TO@ CatchClause@@catch (InterruptedException e) {  e.printStackTrace();} @AT@ 8340 @LENGTH@ 30
------INS ClassInstanceCreation@@RuntimeException[e] @TO@ ThrowStatement@@ClassInstanceCreation:new RuntimeException(e) @AT@ 8346 @LENGTH@ 23
---------INS New@@new @TO@ ClassInstanceCreation@@RuntimeException[e] @AT@ 8346 @LENGTH@ 3
---------INS SimpleType@@RuntimeException @TO@ ClassInstanceCreation@@RuntimeException[e] @AT@ 8350 @LENGTH@ 16
---------INS SimpleName@@e @TO@ ClassInstanceCreation@@RuntimeException[e] @AT@ 8367 @LENGTH@ 1


UPD ExpressionStatement@@MethodInvocation:mvc.perform(get("/")).andExpect(content().contentType(MediaTypes.HAL_JSON)).andExpect(jsonPath("$._links",notNullValue())) @TO@ MethodInvocation:mvc.perform(get("/")).andExpect(content().contentTypeCompatibleWith(MediaTypes.HAL_JSON)).andExpect(jsonPath("$._links",notNullValue())) @AT@ 3409 @LENGTH@ 140
---UPD MethodInvocation@@mvc.perform(get("/")).andExpect(content().contentType(MediaTypes.HAL_JSON)).andExpect(jsonPath("$._links",notNullValue())) @TO@ mvc.perform(get("/")).andExpect(content().contentTypeCompatibleWith(MediaTypes.HAL_JSON)).andExpect(jsonPath("$._links",notNullValue())) @AT@ 3409 @LENGTH@ 139
------UPD MethodInvocation@@MethodName:andExpect:[content().contentType(MediaTypes.HAL_JSON)] @TO@ MethodName:andExpect:[content().contentTypeCompatibleWith(MediaTypes.HAL_JSON)] @AT@ 3409 @LENGTH@ 83
---------UPD MethodInvocation@@content().contentType(MediaTypes.HAL_JSON) @TO@ content().contentTypeCompatibleWith(MediaTypes.HAL_JSON) @AT@ 3449 @LENGTH@ 42
------------UPD SimpleName@@MethodName:contentType:[MediaTypes.HAL_JSON] @TO@ MethodName:contentTypeCompatibleWith:[MediaTypes.HAL_JSON] @AT@ 3459 @LENGTH@ 32


UPD ExpressionStatement@@MethodInvocation:getJpaOperationsImpl().addDatabaseTestDependency(interfaceType.getModule(),null,null) @TO@ MethodInvocation:getJpaOperationsImpl().addDatabaseDependencyWithTestScope(interfaceType.getModule(),null,null) @AT@ 9558 @LENGTH@ 88
---UPD MethodInvocation@@getJpaOperationsImpl().addDatabaseTestDependency(interfaceType.getModule(),null,null) @TO@ getJpaOperationsImpl().addDatabaseDependencyWithTestScope(interfaceType.getModule(),null,null) @AT@ 9558 @LENGTH@ 87
------UPD SimpleName@@MethodName:addDatabaseTestDependency:[interfaceType.getModule(), null, null] @TO@ MethodName:addDatabaseDependencyWithTestScope:[interfaceType.getModule(), null, null] @AT@ 9581 @LENGTH@ 64


UPD TypeDeclaration@@[@Configuration, @ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration"), public]SftpComponentAutoConfiguration,  @TO@ [@Configuration, @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration"), public]SftpComponentAutoConfiguration,  @AT@ 1452 @LENGTH@ 596
---UPD NormalAnnotation@@@ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1467 @LENGTH@ 79
---UPD NormalAnnotation@@@AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1547 @LENGTH@ 80


UPD EnhancedForStatement@@for (Document dbo : indexes) {  if (dbo.get("name") != null && dbo.get("name") instanceof String && ((String)dbo.get("name")).startsWith("name")) {    return true;  }} @TO@ for (Document document : indexes) {  if (document.get("name") != null && document.get("name") instanceof String && ((String)document.get("name")).startsWith("name")) {    return true;  }} @AT@ 7561 @LENGTH@ 191
---UPD SingleVariableDeclaration@@Document dbo @TO@ Document document @AT@ 7566 @LENGTH@ 12
------UPD SimpleName@@dbo @TO@ document @AT@ 7575 @LENGTH@ 3
---UPD IfStatement@@if (dbo.get("name") != null && dbo.get("name") instanceof String && ((String)dbo.get("name")).startsWith("name")) {  return true;} @TO@ if (document.get("name") != null && document.get("name") instanceof String && ((String)document.get("name")).startsWith("name")) {  return true;} @AT@ 7597 @LENGTH@ 149
------UPD InfixExpression@@dbo.get("name") != null && dbo.get("name") instanceof String && ((String)dbo.get("name")).startsWith("name") @TO@ document.get("name") != null && document.get("name") instanceof String && ((String)document.get("name")).startsWith("name") @AT@ 7601 @LENGTH@ 116
---------UPD InfixExpression@@dbo.get("name") != null && dbo.get("name") instanceof String @TO@ document.get("name") != null && document.get("name") instanceof String @AT@ 7601 @LENGTH@ 60
------------UPD InfixExpression@@dbo.get("name") != null @TO@ document.get("name") != null @AT@ 7601 @LENGTH@ 23
---------------UPD MethodInvocation@@dbo.get("name") @TO@ document.get("name") @AT@ 7601 @LENGTH@ 15
------------------UPD SimpleName@@Name:dbo @TO@ Name:document @AT@ 7601 @LENGTH@ 3
------------UPD InstanceofExpression@@dbo.get("name") instanceof String @TO@ document.get("name") instanceof String @AT@ 7628 @LENGTH@ 33
---------------UPD MethodInvocation@@dbo.get("name") @TO@ document.get("name") @AT@ 7628 @LENGTH@ 15
------------------UPD SimpleName@@Name:dbo @TO@ Name:document @AT@ 7628 @LENGTH@ 3
---------UPD MethodInvocation@@((String)dbo.get("name")).startsWith("name") @TO@ ((String)document.get("name")).startsWith("name") @AT@ 7672 @LENGTH@ 45
------------UPD ParenthesizedExpression@@((String)dbo.get("name")) @TO@ ((String)document.get("name")) @AT@ 7672 @LENGTH@ 26
---------------UPD CastExpression@@(String)dbo.get("name") @TO@ (String)document.get("name") @AT@ 7673 @LENGTH@ 24
------------------UPD MethodInvocation@@dbo.get("name") @TO@ document.get("name") @AT@ 7682 @LENGTH@ 15
---------------------UPD SimpleName@@Name:dbo @TO@ Name:document @AT@ 7682 @LENGTH@ 3


UPD VariableDeclarationStatement@@PartialScanWork scanWork=new PartialScanWork(inputPaths); @TO@ PartialScanWork scanWork=new PartialScanWork(inputPaths,Utilities.getTableDesc(op.getConf().getTableMetadata())); @AT@ 8886 @LENGTH@ 59
---UPD VariableDeclarationFragment@@scanWork=new PartialScanWork(inputPaths) @TO@ scanWork=new PartialScanWork(inputPaths,Utilities.getTableDesc(op.getConf().getTableMetadata())) @AT@ 8902 @LENGTH@ 42
------UPD ClassInstanceCreation@@PartialScanWork[inputPaths] @TO@ PartialScanWork[inputPaths, Utilities.getTableDesc(op.getConf().getTableMetadata())] @AT@ 8913 @LENGTH@ 31
---------INS MethodInvocation@@Utilities.getTableDesc(op.getConf().getTableMetadata()) @TO@ ClassInstanceCreation@@PartialScanWork[inputPaths] @AT@ 9002 @LENGTH@ 55
------------INS SimpleName@@Name:Utilities @TO@ MethodInvocation@@Utilities.getTableDesc(op.getConf().getTableMetadata()) @AT@ 9002 @LENGTH@ 9
------------INS SimpleName@@MethodName:getTableDesc:[op.getConf().getTableMetadata()] @TO@ MethodInvocation@@Utilities.getTableDesc(op.getConf().getTableMetadata()) @AT@ 9012 @LENGTH@ 45
---------------INS MethodInvocation@@op.getConf().getTableMetadata() @TO@ SimpleName@@MethodName:getTableDesc:[op.getConf().getTableMetadata()] @AT@ 9025 @LENGTH@ 31
------------------INS MethodInvocation@@MethodName:getConf:[] @TO@ MethodInvocation@@op.getConf().getTableMetadata() @AT@ 9025 @LENGTH@ 12
------------------INS SimpleName@@Name:op @TO@ MethodInvocation@@op.getConf().getTableMetadata() @AT@ 9025 @LENGTH@ 2
------------------INS SimpleName@@MethodName:getTableMetadata:[] @TO@ MethodInvocation@@op.getConf().getTableMetadata() @AT@ 9038 @LENGTH@ 18


UPD FieldDeclaration@@String, [DATASOURCE_CONNECTION_URL="swam.ds.connection.url"] @TO@ String, [DATASOURCE_CONNECTION_URL="swarm.ds.connection.url"] @AT@ 3508 @LENGTH@ 60
---UPD VariableDeclarationFragment@@DATASOURCE_CONNECTION_URL="swam.ds.connection.url" @TO@ DATASOURCE_CONNECTION_URL="swarm.ds.connection.url" @AT@ 3515 @LENGTH@ 52
------UPD StringLiteral@@"swam.ds.connection.url" @TO@ "swarm.ds.connection.url" @AT@ 3543 @LENGTH@ 24


DEL MethodDeclaration@@public, int, MethodName:getConnectionCachesize,  @AT@ 9710 @LENGTH@ 75
---DEL Modifier@@public @AT@ 9710 @LENGTH@ 6
---DEL PrimitiveType@@int @AT@ 9717 @LENGTH@ 3
---DEL SimpleName@@MethodName:getConnectionCachesize @AT@ 9721 @LENGTH@ 22
---DEL ReturnStatement@@MethodInvocation:getConnectionCacheSize() @AT@ 9750 @LENGTH@ 32
------DEL MethodInvocation@@MethodName:getConnectionCacheSize:[] @AT@ 9757 @LENGTH@ 24


UPD TypeDeclaration@@[@Configuration, @ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration"), @EnableConfigurationProperties(SplunkComponentConfiguration.class), public]SplunkComponentAutoConfiguration,  @TO@ [@Configuration, @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration"), @EnableConfigurationProperties(SplunkComponentConfiguration.class), public]SplunkComponentAutoConfiguration,  @AT@ 1625 @LENGTH@ 2057
---UPD NormalAnnotation@@@ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1640 @LENGTH@ 79
---UPD NormalAnnotation@@@AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1720 @LENGTH@ 80


UPD Block@@ThenBody:{  String contentTypeClassName=contentType.getClass().getName();  if (contentTypeClassName.equals("org.springframework.http.MediaType") || contentTypeClassName.equals("org.springframework.util.MimeType")) {    contentTypeStringValue=contentType.toString();  } else   if (contentType instanceof String) {    contentTypeStringValue=(String)contentType;  } else {    if (logger.isWarnEnabled()) {      logger.warn("skipping header '" + AmqpHeaders.CONTENT_TYPE + "' since it is not of expected type ["+ contentTypeClassName+ "]");    }  }} @TO@ ThenBody:{  if (contentType instanceof MimeType) {    contentTypeStringValue=contentType.toString();  } else   if (contentType instanceof String) {    contentTypeStringValue=(String)contentType;  } else {    if (logger.isWarnEnabled()) {      logger.warn("skipping header '" + AmqpHeaders.CONTENT_TYPE + "' since it is not of expected type ["+ contentType.getClass().getName()+ "]");    }  }} @AT@ 11337 @LENGTH@ 631
---DEL VariableDeclarationStatement@@String contentTypeClassName=contentType.getClass().getName(); @AT@ 11342 @LENGTH@ 63
------DEL SimpleType@@String @AT@ 11342 @LENGTH@ 6
------DEL VariableDeclarationFragment@@contentTypeClassName=contentType.getClass().getName() @AT@ 11349 @LENGTH@ 55
---------DEL SimpleName@@contentTypeClassName @AT@ 11349 @LENGTH@ 20
---------DEL MethodInvocation@@contentType.getClass().getName() @AT@ 11372 @LENGTH@ 32
------------DEL MethodInvocation@@MethodName:getClass:[] @AT@ 11372 @LENGTH@ 22
------------DEL SimpleName@@Name:contentType @AT@ 11372 @LENGTH@ 11
------------DEL SimpleName@@MethodName:getName:[] @AT@ 11395 @LENGTH@ 9
---UPD IfStatement@@if (contentTypeClassName.equals("org.springframework.http.MediaType") || contentTypeClassName.equals("org.springframework.util.MimeType")) {  contentTypeStringValue=contentType.toString();} else if (contentType instanceof String) {  contentTypeStringValue=(String)contentType;} else {  if (logger.isWarnEnabled()) {    logger.warn("skipping header '" + AmqpHeaders.CONTENT_TYPE + "' since it is not of expected type ["+ contentTypeClassName+ "]");  }} @TO@ if (contentType instanceof MimeType) {  contentTypeStringValue=contentType.toString();} else if (contentType instanceof String) {  contentTypeStringValue=(String)contentType;} else {  if (logger.isWarnEnabled()) {    logger.warn("skipping header '" + AmqpHeaders.CONTENT_TYPE + "' since it is not of expected type ["+ contentType.getClass().getName()+ "]");  }} @AT@ 11462 @LENGTH@ 502
------INS InstanceofExpression@@contentType instanceof MimeType @TO@ IfStatement@@if (contentTypeClassName.equals("org.springframework.http.MediaType") || contentTypeClassName.equals("org.springframework.util.MimeType")) {  contentTypeStringValue=contentType.toString();} else if (contentType instanceof String) {  contentTypeStringValue=(String)contentType;} else {  if (logger.isWarnEnabled()) {    logger.warn("skipping header '" + AmqpHeaders.CONTENT_TYPE + "' since it is not of expected type ["+ contentTypeClassName+ "]");  }} @AT@ 11388 @LENGTH@ 31
---------INS SimpleName@@contentType @TO@ InstanceofExpression@@contentType instanceof MimeType @AT@ 11388 @LENGTH@ 11
---------INS Instanceof@@instanceof @TO@ InstanceofExpression@@contentType instanceof MimeType @AT@ 11400 @LENGTH@ 10
---------INS SimpleType@@MimeType @TO@ InstanceofExpression@@contentType instanceof MimeType @AT@ 11411 @LENGTH@ 8
------DEL InfixExpression@@contentTypeClassName.equals("org.springframework.http.MediaType") || contentTypeClassName.equals("org.springframework.util.MimeType") @AT@ 11466 @LENGTH@ 138
---------DEL MethodInvocation@@contentTypeClassName.equals("org.springframework.http.MediaType") @AT@ 11466 @LENGTH@ 65
------------DEL SimpleName@@Name:contentTypeClassName @AT@ 11466 @LENGTH@ 20
------------DEL SimpleName@@MethodName:equals:["org.springframework.http.MediaType"] @AT@ 11487 @LENGTH@ 44
---------------DEL StringLiteral@@"org.springframework.http.MediaType" @AT@ 11494 @LENGTH@ 36
---------DEL Operator@@|| @AT@ 11531 @LENGTH@ 2
---------DEL MethodInvocation@@contentTypeClassName.equals("org.springframework.util.MimeType") @AT@ 11540 @LENGTH@ 64
------------DEL SimpleName@@Name:contentTypeClassName @AT@ 11540 @LENGTH@ 20
------------DEL SimpleName@@MethodName:equals:["org.springframework.util.MimeType"] @AT@ 11561 @LENGTH@ 43
---------------DEL StringLiteral@@"org.springframework.util.MimeType" @AT@ 11568 @LENGTH@ 35
------UPD Block@@ElseBody:if (contentType instanceof String) {  contentTypeStringValue=(String)contentType;} else {  if (logger.isWarnEnabled()) {    logger.warn("skipping header '" + AmqpHeaders.CONTENT_TYPE + "' since it is not of expected type ["+ contentTypeClassName+ "]");  }} @TO@ ElseBody:if (contentType instanceof String) {  contentTypeStringValue=(String)contentType;} else {  if (logger.isWarnEnabled()) {    logger.warn("skipping header '" + AmqpHeaders.CONTENT_TYPE + "' since it is not of expected type ["+ contentType.getClass().getName()+ "]");  }} @AT@ 11674 @LENGTH@ 290
---------UPD IfStatement@@if (contentType instanceof String) {  contentTypeStringValue=(String)contentType;} else {  if (logger.isWarnEnabled()) {    logger.warn("skipping header '" + AmqpHeaders.CONTENT_TYPE + "' since it is not of expected type ["+ contentTypeClassName+ "]");  }} @TO@ if (contentType instanceof String) {  contentTypeStringValue=(String)contentType;} else {  if (logger.isWarnEnabled()) {    logger.warn("skipping header '" + AmqpHeaders.CONTENT_TYPE + "' since it is not of expected type ["+ contentType.getClass().getName()+ "]");  }} @AT@ 11674 @LENGTH@ 290
------------UPD Block@@ElseBody:{  if (logger.isWarnEnabled()) {    logger.warn("skipping header '" + AmqpHeaders.CONTENT_TYPE + "' since it is not of expected type ["+ contentTypeClassName+ "]");  }} @TO@ ElseBody:{  if (logger.isWarnEnabled()) {    logger.warn("skipping header '" + AmqpHeaders.CONTENT_TYPE + "' since it is not of expected type ["+ contentType.getClass().getName()+ "]");  }} @AT@ 11775 @LENGTH@ 189
---------------UPD IfStatement@@if (logger.isWarnEnabled()) {  logger.warn("skipping header '" + AmqpHeaders.CONTENT_TYPE + "' since it is not of expected type ["+ contentTypeClassName+ "]");} @TO@ if (logger.isWarnEnabled()) {  logger.warn("skipping header '" + AmqpHeaders.CONTENT_TYPE + "' since it is not of expected type ["+ contentType.getClass().getName()+ "]");} @AT@ 11781 @LENGTH@ 178
------------------UPD Block@@ThenBody:{  logger.warn("skipping header '" + AmqpHeaders.CONTENT_TYPE + "' since it is not of expected type ["+ contentTypeClassName+ "]");} @TO@ ThenBody:{  logger.warn("skipping header '" + AmqpHeaders.CONTENT_TYPE + "' since it is not of expected type ["+ contentType.getClass().getName()+ "]");} @AT@ 11809 @LENGTH@ 150
---------------------UPD ExpressionStatement@@MethodInvocation:logger.warn("skipping header '" + AmqpHeaders.CONTENT_TYPE + "' since it is not of expected type ["+ contentTypeClassName+ "]") @TO@ MethodInvocation:logger.warn("skipping header '" + AmqpHeaders.CONTENT_TYPE + "' since it is not of expected type ["+ contentType.getClass().getName()+ "]") @AT@ 11816 @LENGTH@ 137
------------------------UPD MethodInvocation@@logger.warn("skipping header '" + AmqpHeaders.CONTENT_TYPE + "' since it is not of expected type ["+ contentTypeClassName+ "]") @TO@ logger.warn("skipping header '" + AmqpHeaders.CONTENT_TYPE + "' since it is not of expected type ["+ contentType.getClass().getName()+ "]") @AT@ 11816 @LENGTH@ 136
---------------------------UPD SimpleName@@MethodName:warn:["skipping header '" + AmqpHeaders.CONTENT_TYPE + "' since it is not of expected type ["+ contentTypeClassName+ "]"] @TO@ MethodName:warn:["skipping header '" + AmqpHeaders.CONTENT_TYPE + "' since it is not of expected type ["+ contentType.getClass().getName()+ "]"] @AT@ 11823 @LENGTH@ 129
------------------------------UPD InfixExpression@@"skipping header '" + AmqpHeaders.CONTENT_TYPE + "' since it is not of expected type ["+ contentTypeClassName+ "]" @TO@ "skipping header '" + AmqpHeaders.CONTENT_TYPE + "' since it is not of expected type ["+ contentType.getClass().getName()+ "]" @AT@ 11828 @LENGTH@ 123
---------------------------------INS MethodInvocation@@contentType.getClass().getName() @TO@ InfixExpression@@"skipping header '" + AmqpHeaders.CONTENT_TYPE + "' since it is not of expected type ["+ contentTypeClassName+ "]" @AT@ 11740 @LENGTH@ 32
------------------------------------INS MethodInvocation@@MethodName:getClass:[] @TO@ MethodInvocation@@contentType.getClass().getName() @AT@ 11740 @LENGTH@ 22
------------------------------------INS SimpleName@@Name:contentType @TO@ MethodInvocation@@contentType.getClass().getName() @AT@ 11740 @LENGTH@ 11
------------------------------------INS SimpleName@@MethodName:getName:[] @TO@ MethodInvocation@@contentType.getClass().getName() @AT@ 11763 @LENGTH@ 9
---------------------------------INS MethodInvocation@@contentType.getClass().getName() @TO@ InfixExpression@@"skipping header '" + AmqpHeaders.CONTENT_TYPE + "' since it is not of expected type ["+ contentTypeClassName+ "]" @AT@ 11740 @LENGTH@ 32
------------------------------------INS MethodInvocation@@MethodName:getClass:[] @TO@ MethodInvocation@@contentType.getClass().getName() @AT@ 11740 @LENGTH@ 22
------------------------------------INS SimpleName@@Name:contentType @TO@ MethodInvocation@@contentType.getClass().getName() @AT@ 11740 @LENGTH@ 11
------------------------------------INS SimpleName@@MethodName:getName:[] @TO@ MethodInvocation@@contentType.getClass().getName() @AT@ 11763 @LENGTH@ 9
---------------------------------DEL SimpleName@@contentTypeClassName @AT@ 11925 @LENGTH@ 20


UPD TypeDeclaration@@[@Configuration, @ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration"), @EnableConfigurationProperties(HBaseComponentConfiguration.class), public]HBaseComponentAutoConfiguration,  @TO@ [@Configuration, @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration"), @EnableConfigurationProperties(HBaseComponentConfiguration.class), public]HBaseComponentAutoConfiguration,  @AT@ 1622 @LENGTH@ 2048
---UPD NormalAnnotation@@@ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1637 @LENGTH@ 79
---UPD NormalAnnotation@@@AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1717 @LENGTH@ 80


UPD TypeDeclaration@@[@Configuration, @ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration"), @EnableConfigurationProperties(ZooKeeperComponentConfiguration.class), public]ZooKeeperComponentAutoConfiguration,  @TO@ [@Configuration, @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration"), @EnableConfigurationProperties(ZooKeeperComponentConfiguration.class), public]ZooKeeperComponentAutoConfiguration,  @AT@ 1634 @LENGTH@ 2097
---UPD NormalAnnotation@@@ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1649 @LENGTH@ 79
---UPD NormalAnnotation@@@AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1729 @LENGTH@ 80


UPD MethodDeclaration@@public, static, final, Openssl, MethodName:getInstance, String transformation, NoSuchAlgorithmException, NoSuchPaddingException,  @TO@ public, static, Openssl, MethodName:getInstance, String transformation, NoSuchAlgorithmException, NoSuchPaddingException,  @AT@ 4939 @LENGTH@ 497
---DEL Modifier@@final @AT@ 4953 @LENGTH@ 5


UPD ExpressionStatement@@Assignment:tbl=((TableScanOperator)parent).getTableDesc() @TO@ Assignment:tbl=((TableScanOperator)parent).getTableDescSkewJoin() @AT@ 8879 @LENGTH@ 50
---UPD Assignment@@tbl=((TableScanOperator)parent).getTableDesc() @TO@ tbl=((TableScanOperator)parent).getTableDescSkewJoin() @AT@ 8879 @LENGTH@ 49
------UPD MethodInvocation@@((TableScanOperator)parent).getTableDesc() @TO@ ((TableScanOperator)parent).getTableDescSkewJoin() @AT@ 8885 @LENGTH@ 43
---------UPD SimpleName@@MethodName:getTableDesc:[] @TO@ MethodName:getTableDescSkewJoin:[] @AT@ 8914 @LENGTH@ 14


UPD MethodDeclaration@@public, void, MethodName:addFinderListView, String moduleName, MemberDetails entityDetails, String finderName, List<FieldMetadata> fieldsToAdd, ViewContext ctx,  @TO@ public, void, MethodName:addFinderListView, String moduleName, MemberDetails entityDetails, String finderName, ViewContext ctx,  @AT@ 9704 @LENGTH@ 1685
---DEL SingleVariableDeclaration@@List<FieldMetadata> fieldsToAdd @AT@ 9807 @LENGTH@ 31
------DEL ParameterizedType@@List<FieldMetadata> @AT@ 9807 @LENGTH@ 19
------DEL SimpleName@@fieldsToAdd @AT@ 9827 @LENGTH@ 11
---INS SingleVariableDeclaration@@ViewContext ctx @TO@ MethodDeclaration@@public, void, MethodName:addFinderListView, String moduleName, MemberDetails entityDetails, String finderName, List<FieldMetadata> fieldsToAdd, ViewContext ctx,  @AT@ 9807 @LENGTH@ 15
------INS SimpleType@@ViewContext @TO@ SingleVariableDeclaration@@ViewContext ctx @AT@ 9807 @LENGTH@ 11
------INS SimpleName@@ctx @TO@ SingleVariableDeclaration@@ViewContext ctx @AT@ 9819 @LENGTH@ 3
---DEL SingleVariableDeclaration@@ViewContext ctx @AT@ 9840 @LENGTH@ 15
------DEL SimpleType@@ViewContext @AT@ 9840 @LENGTH@ 11
------DEL SimpleName@@ctx @AT@ 9852 @LENGTH@ 3
---INS VariableDeclarationStatement@@List<FieldMetadata> entityFields=entityDetails.getFields(); @TO@ MethodDeclaration@@public, void, MethodName:addFinderListView, String moduleName, MemberDetails entityDetails, String finderName, List<FieldMetadata> fieldsToAdd, ViewContext ctx,  @AT@ 9892 @LENGTH@ 61
------INS ParameterizedType@@List<FieldMetadata> @TO@ VariableDeclarationStatement@@List<FieldMetadata> entityFields=entityDetails.getFields(); @AT@ 9892 @LENGTH@ 19
---------MOV SimpleType@@List @TO@ ParameterizedType@@List<FieldMetadata> @AT@ 9807 @LENGTH@ 4
---------MOV SimpleType@@FieldMetadata @TO@ ParameterizedType@@List<FieldMetadata> @AT@ 9812 @LENGTH@ 13
------INS VariableDeclarationFragment@@entityFields=entityDetails.getFields() @TO@ VariableDeclarationStatement@@List<FieldMetadata> entityFields=entityDetails.getFields(); @AT@ 9912 @LENGTH@ 40
---------INS SimpleName@@entityFields @TO@ VariableDeclarationFragment@@entityFields=entityDetails.getFields() @AT@ 9912 @LENGTH@ 12
---------INS MethodInvocation@@entityDetails.getFields() @TO@ VariableDeclarationFragment@@entityFields=entityDetails.getFields() @AT@ 9927 @LENGTH@ 25
------------INS SimpleName@@Name:entityDetails @TO@ MethodInvocation@@entityDetails.getFields() @AT@ 9927 @LENGTH@ 13
------------INS SimpleName@@MethodName:getFields:[] @TO@ MethodInvocation@@entityDetails.getFields() @AT@ 9941 @LENGTH@ 11
---UPD VariableDeclarationStatement@@List<FieldItem> fields=getFieldViewItems(fieldsToAdd,ctx.getEntityName(),false,ctx); @TO@ List<FieldItem> fields=getFieldViewItems(entityFields,ctx.getEntityName(),false,ctx); @AT@ 9925 @LENGTH@ 89
------UPD VariableDeclarationFragment@@fields=getFieldViewItems(fieldsToAdd,ctx.getEntityName(),false,ctx) @TO@ fields=getFieldViewItems(entityFields,ctx.getEntityName(),false,ctx) @AT@ 9941 @LENGTH@ 72
---------UPD MethodInvocation@@getFieldViewItems(fieldsToAdd,ctx.getEntityName(),false,ctx) @TO@ getFieldViewItems(entityFields,ctx.getEntityName(),false,ctx) @AT@ 9950 @LENGTH@ 63
------------UPD SimpleName@@MethodName:getFieldViewItems:[fieldsToAdd, ctx.getEntityName(), false, ctx] @TO@ MethodName:getFieldViewItems:[entityFields, ctx.getEntityName(), false, ctx] @AT@ 9950 @LENGTH@ 63
---------------UPD SimpleName@@fieldsToAdd @TO@ entityFields @AT@ 9968 @LENGTH@ 11


UPD MethodDeclaration@@public, Boolean, MethodName:isMmTable,  @TO@ public, Boolean, MethodName:isMmTableExplain,  @AT@ 5407 @LENGTH@ 75
---UPD SimpleName@@MethodName:isMmTable @TO@ MethodName:isMmTableExplain @AT@ 5422 @LENGTH@ 9


UPD TypeDeclaration@@[@Configuration, @ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration"), @EnableConfigurationProperties(WsComponentConfiguration.class), public]WsComponentAutoConfiguration,  @TO@ [@Configuration, @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration"), @EnableConfigurationProperties(WsComponentConfiguration.class), public]WsComponentAutoConfiguration,  @AT@ 1621 @LENGTH@ 2048
---UPD NormalAnnotation@@@ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1636 @LENGTH@ 79
---UPD NormalAnnotation@@@AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1716 @LENGTH@ 80


UPD TypeDeclaration@@[@Configuration, @ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration"), @EnableConfigurationProperties(ExchangePropertyLanguageConfiguration.class), public]ExchangePropertyLanguageAutoConfiguration,  @TO@ [@Configuration, @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration"), @EnableConfigurationProperties(ExchangePropertyLanguageConfiguration.class), public]ExchangePropertyLanguageAutoConfiguration,  @AT@ 1679 @LENGTH@ 1200
---UPD NormalAnnotation@@@ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1694 @LENGTH@ 79
---UPD NormalAnnotation@@@AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1774 @LENGTH@ 80


UPD ThrowStatement@@ClassInstanceCreation:new SimpleParserException("Valid syntax: ${date:command:timezone:pattern} was: " + function,token.getIndex()) @TO@ ClassInstanceCreation:new SimpleParserException("Valid syntax: ${date-with-timezone:command:timezone:pattern} was: " + function,token.getIndex()) @AT@ 6962 @LENGTH@ 117
---UPD ClassInstanceCreation@@SimpleParserException["Valid syntax: ${date:command:timezone:pattern} was: " + function, token.getIndex()] @TO@ SimpleParserException["Valid syntax: ${date-with-timezone:command:timezone:pattern} was: " + function, token.getIndex()] @AT@ 6968 @LENGTH@ 110
------UPD InfixExpression@@"Valid syntax: ${date:command:timezone:pattern} was: " + function @TO@ "Valid syntax: ${date-with-timezone:command:timezone:pattern} was: " + function @AT@ 6994 @LENGTH@ 65
---------UPD StringLiteral@@"Valid syntax: ${date:command:timezone:pattern} was: " @TO@ "Valid syntax: ${date-with-timezone:command:timezone:pattern} was: " @AT@ 6994 @LENGTH@ 54


UPD EnhancedForStatement@@for (PersistentProperty<?> property : persistentProperties) {  if (property.getGetter() != null && generateMethodHandle(entity,property.getGetter())) {    visitPropertyGetterInitializer(property,mv,entityClasses,internalClassName);  }  if (property.getSetter() != null && generateMethodHandle(entity,property.getSetter())) {    visitPropertySetterInitializer(property,mv,entityClasses,internalClassName);  }  if (property.getField() != null && generateSetterMethodHandle(entity,property.getField())) {    visitFieldGetterSetterInitializer(property,mv,entityClasses,internalClassName);  }} @TO@ for (PersistentProperty<?> property : persistentProperties) {  if (property.usePropertyAccess()) {    if (property.getGetter() != null && generateMethodHandle(entity,property.getGetter())) {      visitPropertyGetterInitializer(property,mv,entityClasses,internalClassName);    }    if (property.getSetter() != null && generateMethodHandle(entity,property.getSetter())) {      visitPropertySetterInitializer(property,mv,entityClasses,internalClassName);    }  }  if (property.getField() != null && generateSetterMethodHandle(entity,property.getField())) {    visitFieldGetterSetterInitializer(property,mv,entityClasses,internalClassName);  }} @AT@ 19152 @LENGTH@ 631
---INS IfStatement@@if (property.usePropertyAccess()) {  if (property.getGetter() != null && generateMethodHandle(entity,property.getGetter())) {    visitPropertyGetterInitializer(property,mv,entityClasses,internalClassName);  }  if (property.getSetter() != null && generateMethodHandle(entity,property.getSetter())) {    visitPropertySetterInitializer(property,mv,entityClasses,internalClassName);  }} @TO@ EnhancedForStatement@@for (PersistentProperty<?> property : persistentProperties) {  if (property.getGetter() != null && generateMethodHandle(entity,property.getGetter())) {    visitPropertyGetterInitializer(property,mv,entityClasses,internalClassName);  }  if (property.getSetter() != null && generateMethodHandle(entity,property.getSetter())) {    visitPropertySetterInitializer(property,mv,entityClasses,internalClassName);  }  if (property.getField() != null && generateSetterMethodHandle(entity,property.getField())) {    visitFieldGetterSetterInitializer(property,mv,entityClasses,internalClassName);  }} @AT@ 19219 @LENGTH@ 418
------INS MethodInvocation@@property.usePropertyAccess() @TO@ IfStatement@@if (property.usePropertyAccess()) {  if (property.getGetter() != null && generateMethodHandle(entity,property.getGetter())) {    visitPropertyGetterInitializer(property,mv,entityClasses,internalClassName);  }  if (property.getSetter() != null && generateMethodHandle(entity,property.getSetter())) {    visitPropertySetterInitializer(property,mv,entityClasses,internalClassName);  }} @AT@ 19222 @LENGTH@ 28
---------INS SimpleName@@Name:property @TO@ MethodInvocation@@property.usePropertyAccess() @AT@ 19222 @LENGTH@ 8
---------INS SimpleName@@MethodName:usePropertyAccess:[] @TO@ MethodInvocation@@property.usePropertyAccess() @AT@ 19231 @LENGTH@ 19
------INS Block@@ThenBody:{  if (property.getGetter() != null && generateMethodHandle(entity,property.getGetter())) {    visitPropertyGetterInitializer(property,mv,entityClasses,internalClassName);  }  if (property.getSetter() != null && generateMethodHandle(entity,property.getSetter())) {    visitPropertySetterInitializer(property,mv,entityClasses,internalClassName);  }} @TO@ IfStatement@@if (property.usePropertyAccess()) {  if (property.getGetter() != null && generateMethodHandle(entity,property.getGetter())) {    visitPropertyGetterInitializer(property,mv,entityClasses,internalClassName);  }  if (property.getSetter() != null && generateMethodHandle(entity,property.getSetter())) {    visitPropertySetterInitializer(property,mv,entityClasses,internalClassName);  }} @AT@ 19252 @LENGTH@ 385
---------MOV IfStatement@@if (property.getGetter() != null && generateMethodHandle(entity,property.getGetter())) {  visitPropertyGetterInitializer(property,mv,entityClasses,internalClassName);} @TO@ Block@@ThenBody:{  if (property.getGetter() != null && generateMethodHandle(entity,property.getGetter())) {    visitPropertyGetterInitializer(property,mv,entityClasses,internalClassName);  }  if (property.getSetter() != null && generateMethodHandle(entity,property.getSetter())) {    visitPropertySetterInitializer(property,mv,entityClasses,internalClassName);  }} @AT@ 19219 @LENGTH@ 180
---------MOV IfStatement@@if (property.getSetter() != null && generateMethodHandle(entity,property.getSetter())) {  visitPropertySetterInitializer(property,mv,entityClasses,internalClassName);} @TO@ Block@@ThenBody:{  if (property.getGetter() != null && generateMethodHandle(entity,property.getGetter())) {    visitPropertyGetterInitializer(property,mv,entityClasses,internalClassName);  }  if (property.getSetter() != null && generateMethodHandle(entity,property.getSetter())) {    visitPropertySetterInitializer(property,mv,entityClasses,internalClassName);  }} @AT@ 19405 @LENGTH@ 180


UPD TypeDeclaration@@[@RunWith(SpringRunner.class), @SpringBootApplication, @ContextConfiguration(classes=ServletMappingAutoConfiguration.class), @SpringBootTest(webEnvironment=SpringBootTest.WebEnvironment.RANDOM_PORT), @Ignore("TODO: test fails"), public]ServletMappingAutoConfigurationTest,  @TO@ [@RunWith(SpringRunner.class), @SpringBootApplication, @ContextConfiguration(classes={ServletMappingAutoConfiguration.class,CamelAutoConfiguration.class}), @SpringBootTest(webEnvironment=SpringBootTest.WebEnvironment.RANDOM_PORT), @Ignore("TODO: test fails"), public]ServletMappingAutoConfigurationTest,  @AT@ 1497 @LENGTH@ 941
---UPD NormalAnnotation@@@ContextConfiguration(classes=ServletMappingAutoConfiguration.class) @TO@ @ContextConfiguration(classes={ServletMappingAutoConfiguration.class,CamelAutoConfiguration.class}) @AT@ 1549 @LENGTH@ 70


UPD MethodDeclaration@@public, voidMethodName:XMLStreamReaderInputStream, XMLStreamReader reader, String charset, XMLOutputFactory outfactory,  @TO@ voidMethodName:XMLStreamReaderInputStream, XMLStreamReader reader, String charset, XMLOutputFactory outfactory,  @AT@ 1507 @LENGTH@ 466
---DEL Modifier@@public @AT@ 1507 @LENGTH@ 6


UPD FieldDeclaration@@private, Session, [session] @TO@ private, Neo4jOperations, [neo4jOperations] @AT@ 1243 @LENGTH@ 24
---UPD SimpleType@@Session @TO@ Neo4jOperations @AT@ 1251 @LENGTH@ 7
---UPD VariableDeclarationFragment@@session @TO@ neo4jOperations @AT@ 1259 @LENGTH@ 7
------UPD SimpleName@@session @TO@ neo4jOperations @AT@ 1259 @LENGTH@ 7


UPD SynchronizedStatement@@synchronized (DirectMessageListenerContainer.this.consumersMonitor) {  List<SimpleConsumer> list=DirectMessageListenerContainer.this.consumersByQueue.get(this.queue);  if (list != null) {    list.remove(this);  }  DirectMessageListenerContainer.this.cancellationLock.release(this);  DirectMessageListenerContainer.this.consumers.remove(this);} @TO@ synchronized (DirectMessageListenerContainer.this.consumersMonitor) {  List<SimpleConsumer> list=DirectMessageListenerContainer.this.consumersByQueue.get(this.queue);  if (list != null) {    list.remove(this);  }  RabbitUtils.setPhysicalCloseRequired(true);  RabbitUtils.closeChannel(getChannel());  DirectMessageListenerContainer.this.cancellationLock.release(this);  DirectMessageListenerContainer.this.consumers.remove(this);} @AT@ 17632 @LENGTH@ 366
---UPD Block@@SyncBody:{  List<SimpleConsumer> list=DirectMessageListenerContainer.this.consumersByQueue.get(this.queue);  if (list != null) {    list.remove(this);  }  DirectMessageListenerContainer.this.cancellationLock.release(this);  DirectMessageListenerContainer.this.consumers.remove(this);} @TO@ SyncBody:{  List<SimpleConsumer> list=DirectMessageListenerContainer.this.consumersByQueue.get(this.queue);  if (list != null) {    list.remove(this);  }  RabbitUtils.setPhysicalCloseRequired(true);  RabbitUtils.closeChannel(getChannel());  DirectMessageListenerContainer.this.cancellationLock.release(this);  DirectMessageListenerContainer.this.consumers.remove(this);} @AT@ 17700 @LENGTH@ 298
------MOV ExpressionStatement@@MethodInvocation:RabbitUtils.setPhysicalCloseRequired(true) @TO@ Block@@SyncBody:{  List<SimpleConsumer> list=DirectMessageListenerContainer.this.consumersByQueue.get(this.queue);  if (list != null) {    list.remove(this);  }  DirectMessageListenerContainer.this.cancellationLock.release(this);  DirectMessageListenerContainer.this.consumers.remove(this);} @AT@ 18002 @LENGTH@ 43
------MOV ExpressionStatement@@MethodInvocation:RabbitUtils.closeChannel(getChannel()) @TO@ Block@@SyncBody:{  List<SimpleConsumer> list=DirectMessageListenerContainer.this.consumersByQueue.get(this.queue);  if (list != null) {    list.remove(this);  }  DirectMessageListenerContainer.this.cancellationLock.release(this);  DirectMessageListenerContainer.this.consumers.remove(this);} @AT@ 18049 @LENGTH@ 39


UPD TypeDeclaration@@[@Configuration, @ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration"), @EnableConfigurationProperties(NagiosComponentConfiguration.class), public]NagiosComponentAutoConfiguration,  @TO@ [@Configuration, @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration"), @EnableConfigurationProperties(NagiosComponentConfiguration.class), public]NagiosComponentAutoConfiguration,  @AT@ 1625 @LENGTH@ 2057
---UPD NormalAnnotation@@@ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1640 @LENGTH@ 79
---UPD NormalAnnotation@@@AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1720 @LENGTH@ 80


UPD TypeDeclaration@@[@Configuration, @ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration"), @EnableConfigurationProperties(MailComponentConfiguration.class), public]MailComponentAutoConfiguration,  @TO@ [@Configuration, @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration"), @EnableConfigurationProperties(MailComponentConfiguration.class), public]MailComponentAutoConfiguration,  @AT@ 1619 @LENGTH@ 2146
---UPD NormalAnnotation@@@ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1634 @LENGTH@ 79
---UPD NormalAnnotation@@@AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1714 @LENGTH@ 80


INS MethodDeclaration@@public, DataAccessException, MethodName:translateExceptionIfPossible, RuntimeException ex,  @TO@ TypeDeclaration@@[public]SessionBeanDefinitionRegistrarPostProcessor, [BeanFactoryPostProcessor] @AT@ 3097 @LENGTH@ 141
---INS Modifier@@public @TO@ MethodDeclaration@@public, DataAccessException, MethodName:translateExceptionIfPossible, RuntimeException ex,  @AT@ 3097 @LENGTH@ 6
---INS SimpleType@@DataAccessException @TO@ MethodDeclaration@@public, DataAccessException, MethodName:translateExceptionIfPossible, RuntimeException ex,  @AT@ 3104 @LENGTH@ 19
---INS SimpleName@@MethodName:translateExceptionIfPossible @TO@ MethodDeclaration@@public, DataAccessException, MethodName:translateExceptionIfPossible, RuntimeException ex,  @AT@ 3124 @LENGTH@ 28
---INS SingleVariableDeclaration@@RuntimeException ex @TO@ MethodDeclaration@@public, DataAccessException, MethodName:translateExceptionIfPossible, RuntimeException ex,  @AT@ 3153 @LENGTH@ 19
------INS SimpleType@@RuntimeException @TO@ SingleVariableDeclaration@@RuntimeException ex @AT@ 3153 @LENGTH@ 16
------INS SimpleName@@ex @TO@ SingleVariableDeclaration@@RuntimeException ex @AT@ 3170 @LENGTH@ 2
---INS ReturnStatement@@MethodInvocation:SessionFactoryUtils.convertOgmAccessException(ex) @TO@ MethodDeclaration@@public, DataAccessException, MethodName:translateExceptionIfPossible, RuntimeException ex,  @AT@ 3178 @LENGTH@ 57
------INS MethodInvocation@@SessionFactoryUtils.convertOgmAccessException(ex) @TO@ ReturnStatement@@MethodInvocation:SessionFactoryUtils.convertOgmAccessException(ex) @AT@ 3185 @LENGTH@ 49
---------INS SimpleName@@Name:SessionFactoryUtils @TO@ MethodInvocation@@SessionFactoryUtils.convertOgmAccessException(ex) @AT@ 3185 @LENGTH@ 19
---------INS SimpleName@@MethodName:convertOgmAccessException:[ex] @TO@ MethodInvocation@@SessionFactoryUtils.convertOgmAccessException(ex) @AT@ 3205 @LENGTH@ 29
------------INS SimpleName@@ex @TO@ SimpleName@@MethodName:convertOgmAccessException:[ex] @AT@ 3231 @LENGTH@ 2


UPD VariableDeclarationStatement@@Document idField=DBObjectTestUtils.getAsDocument(queryCaptor.getValue(),"_id"); @TO@ Document idField=DocumentTestUtils.getAsDocument(queryCaptor.getValue(),"_id"); @AT@ 11869 @LENGTH@ 82
---UPD VariableDeclarationFragment@@idField=DBObjectTestUtils.getAsDocument(queryCaptor.getValue(),"_id") @TO@ idField=DocumentTestUtils.getAsDocument(queryCaptor.getValue(),"_id") @AT@ 11878 @LENGTH@ 72
------UPD MethodInvocation@@DBObjectTestUtils.getAsDocument(queryCaptor.getValue(),"_id") @TO@ DocumentTestUtils.getAsDocument(queryCaptor.getValue(),"_id") @AT@ 11888 @LENGTH@ 62
---------UPD SimpleName@@Name:DBObjectTestUtils @TO@ Name:DocumentTestUtils @AT@ 11888 @LENGTH@ 17


INS MethodDeclaration@@public, static, void, MethodName:beforeClass,  @TO@ TypeDeclaration@@[@ContextConfiguration(classes={MoviesContext.class}), @RunWith(SpringJUnit4ClassRunner.class), @DirtiesContext, public]PagedQueryIT, MultiDriverTestClass @AT@ 2381 @LENGTH@ 88
---INS Modifier@@public @TO@ MethodDeclaration@@public, static, void, MethodName:beforeClass,  @AT@ 2381 @LENGTH@ 6
---INS Modifier@@static @TO@ MethodDeclaration@@public, static, void, MethodName:beforeClass,  @AT@ 2388 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, static, void, MethodName:beforeClass,  @AT@ 2395 @LENGTH@ 4
---INS SimpleName@@MethodName:beforeClass @TO@ MethodDeclaration@@public, static, void, MethodName:beforeClass,  @AT@ 2400 @LENGTH@ 11
---INS ExpressionStatement@@Assignment:graphDatabaseService=getGraphDatabaseService() @TO@ MethodDeclaration@@public, static, void, MethodName:beforeClass,  @AT@ 2417 @LENGTH@ 49
------INS Assignment@@graphDatabaseService=getGraphDatabaseService() @TO@ ExpressionStatement@@Assignment:graphDatabaseService=getGraphDatabaseService() @AT@ 2417 @LENGTH@ 48
---------INS SimpleName@@graphDatabaseService @TO@ Assignment@@graphDatabaseService=getGraphDatabaseService() @AT@ 2417 @LENGTH@ 20
---------INS Operator@@= @TO@ Assignment@@graphDatabaseService=getGraphDatabaseService() @AT@ 2437 @LENGTH@ 1
---------INS MethodInvocation@@MethodName:getGraphDatabaseService:[] @TO@ Assignment@@graphDatabaseService=getGraphDatabaseService() @AT@ 2440 @LENGTH@ 25


INS MethodDeclaration@@public, JndiObjectFactoryBean, MethodName:jndiObject, NamingException,  @TO@ TypeDeclaration@@[@EnableJpaRepositories, @ComponentScan(includeFilters=@Filter(type=FilterType.ASSIGNABLE_TYPE,value=ApplicationComponent.class),useDefaultFilters=false), static]Config,  @AT@ 6236 @LENGTH@ 329
---INS Modifier@@public @TO@ MethodDeclaration@@public, JndiObjectFactoryBean, MethodName:jndiObject, NamingException,  @AT@ 6236 @LENGTH@ 6
---INS SimpleType@@JndiObjectFactoryBean @TO@ MethodDeclaration@@public, JndiObjectFactoryBean, MethodName:jndiObject, NamingException,  @AT@ 6243 @LENGTH@ 21
---INS SimpleName@@MethodName:jndiObject @TO@ MethodDeclaration@@public, JndiObjectFactoryBean, MethodName:jndiObject, NamingException,  @AT@ 6265 @LENGTH@ 10
---INS SimpleType@@NamingException @TO@ MethodDeclaration@@public, JndiObjectFactoryBean, MethodName:jndiObject, NamingException,  @AT@ 6285 @LENGTH@ 15
---INS VariableDeclarationStatement@@JndiObjectFactoryBean bean=new JndiObjectFactoryBean(); @TO@ MethodDeclaration@@public, JndiObjectFactoryBean, MethodName:jndiObject, NamingException,  @AT@ 6307 @LENGTH@ 57
------INS SimpleType@@JndiObjectFactoryBean @TO@ VariableDeclarationStatement@@JndiObjectFactoryBean bean=new JndiObjectFactoryBean(); @AT@ 6307 @LENGTH@ 21
------INS VariableDeclarationFragment@@bean=new JndiObjectFactoryBean() @TO@ VariableDeclarationStatement@@JndiObjectFactoryBean bean=new JndiObjectFactoryBean(); @AT@ 6329 @LENGTH@ 34
---------INS SimpleName@@bean @TO@ VariableDeclarationFragment@@bean=new JndiObjectFactoryBean() @AT@ 6329 @LENGTH@ 4
---------INS ClassInstanceCreation@@JndiObjectFactoryBean[] @TO@ VariableDeclarationFragment@@bean=new JndiObjectFactoryBean() @AT@ 6336 @LENGTH@ 27
------------INS New@@new @TO@ ClassInstanceCreation@@JndiObjectFactoryBean[] @AT@ 6336 @LENGTH@ 3
------------INS SimpleType@@JndiObjectFactoryBean @TO@ ClassInstanceCreation@@JndiObjectFactoryBean[] @AT@ 6340 @LENGTH@ 21
---INS ExpressionStatement@@MethodInvocation:bean.setJndiName("some/DataSource") @TO@ MethodDeclaration@@public, JndiObjectFactoryBean, MethodName:jndiObject, NamingException,  @AT@ 6369 @LENGTH@ 36
------INS MethodInvocation@@bean.setJndiName("some/DataSource") @TO@ ExpressionStatement@@MethodInvocation:bean.setJndiName("some/DataSource") @AT@ 6369 @LENGTH@ 35
---------INS SimpleName@@Name:bean @TO@ MethodInvocation@@bean.setJndiName("some/DataSource") @AT@ 6369 @LENGTH@ 4
---------INS SimpleName@@MethodName:setJndiName:["some/DataSource"] @TO@ MethodInvocation@@bean.setJndiName("some/DataSource") @AT@ 6374 @LENGTH@ 30
------------INS StringLiteral@@"some/DataSource" @TO@ SimpleName@@MethodName:setJndiName:["some/DataSource"] @AT@ 6386 @LENGTH@ 17
---INS ExpressionStatement@@MethodInvocation:bean.setJndiTemplate(new ExpectedLookupTemplate("some/DataSource",mock(DataSource.class))) @TO@ MethodDeclaration@@public, JndiObjectFactoryBean, MethodName:jndiObject, NamingException,  @AT@ 6409 @LENGTH@ 92
------INS MethodInvocation@@bean.setJndiTemplate(new ExpectedLookupTemplate("some/DataSource",mock(DataSource.class))) @TO@ ExpressionStatement@@MethodInvocation:bean.setJndiTemplate(new ExpectedLookupTemplate("some/DataSource",mock(DataSource.class))) @AT@ 6409 @LENGTH@ 91
---------INS SimpleName@@Name:bean @TO@ MethodInvocation@@bean.setJndiTemplate(new ExpectedLookupTemplate("some/DataSource",mock(DataSource.class))) @AT@ 6409 @LENGTH@ 4
---------INS SimpleName@@MethodName:setJndiTemplate:[new ExpectedLookupTemplate("some/DataSource",mock(DataSource.class))] @TO@ MethodInvocation@@bean.setJndiTemplate(new ExpectedLookupTemplate("some/DataSource",mock(DataSource.class))) @AT@ 6414 @LENGTH@ 86
------------INS ClassInstanceCreation@@ExpectedLookupTemplate["some/DataSource", mock(DataSource.class)] @TO@ SimpleName@@MethodName:setJndiTemplate:[new ExpectedLookupTemplate("some/DataSource",mock(DataSource.class))] @AT@ 6430 @LENGTH@ 69
---------------INS New@@new @TO@ ClassInstanceCreation@@ExpectedLookupTemplate["some/DataSource", mock(DataSource.class)] @AT@ 6430 @LENGTH@ 3
---------------INS SimpleType@@ExpectedLookupTemplate @TO@ ClassInstanceCreation@@ExpectedLookupTemplate["some/DataSource", mock(DataSource.class)] @AT@ 6434 @LENGTH@ 22
---------------INS StringLiteral@@"some/DataSource" @TO@ ClassInstanceCreation@@ExpectedLookupTemplate["some/DataSource", mock(DataSource.class)] @AT@ 6457 @LENGTH@ 17
---------------INS MethodInvocation@@mock(DataSource.class) @TO@ ClassInstanceCreation@@ExpectedLookupTemplate["some/DataSource", mock(DataSource.class)] @AT@ 6476 @LENGTH@ 22
------------------INS SimpleName@@MethodName:mock:[DataSource.class] @TO@ MethodInvocation@@mock(DataSource.class) @AT@ 6476 @LENGTH@ 22
---------------------INS TypeLiteral@@DataSource.class @TO@ SimpleName@@MethodName:mock:[DataSource.class] @AT@ 6481 @LENGTH@ 16
---INS ExpressionStatement@@MethodInvocation:bean.setExpectedType(DataSource.class) @TO@ MethodDeclaration@@public, JndiObjectFactoryBean, MethodName:jndiObject, NamingException,  @AT@ 6505 @LENGTH@ 39
------INS MethodInvocation@@bean.setExpectedType(DataSource.class) @TO@ ExpressionStatement@@MethodInvocation:bean.setExpectedType(DataSource.class) @AT@ 6505 @LENGTH@ 38
---------INS SimpleName@@Name:bean @TO@ MethodInvocation@@bean.setExpectedType(DataSource.class) @AT@ 6505 @LENGTH@ 4
---------INS SimpleName@@MethodName:setExpectedType:[DataSource.class] @TO@ MethodInvocation@@bean.setExpectedType(DataSource.class) @AT@ 6510 @LENGTH@ 33
------------INS TypeLiteral@@DataSource.class @TO@ SimpleName@@MethodName:setExpectedType:[DataSource.class] @AT@ 6526 @LENGTH@ 16
---INS ReturnStatement@@SimpleName:bean @TO@ MethodDeclaration@@public, JndiObjectFactoryBean, MethodName:jndiObject, NamingException,  @AT@ 6549 @LENGTH@ 12
------INS SimpleName@@bean @TO@ ReturnStatement@@SimpleName:bean @AT@ 6556 @LENGTH@ 4


UPD TypeDeclaration@@[@Configuration, @ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration"), @EnableConfigurationProperties(SoapJaxbDataFormatConfiguration.class), public]SoapJaxbDataFormatAutoConfiguration,  @TO@ [@Configuration, @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration"), @EnableConfigurationProperties(SoapJaxbDataFormatConfiguration.class), public]SoapJaxbDataFormatAutoConfiguration,  @AT@ 1669 @LENGTH@ 1144
---UPD NormalAnnotation@@@ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1684 @LENGTH@ 79
---UPD NormalAnnotation@@@AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1764 @LENGTH@ 80


UPD TypeDeclaration@@[@Configuration, @ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration"), public]SpringLdapComponentAutoConfiguration,  @TO@ [@Configuration, @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration"), public]SpringLdapComponentAutoConfiguration,  @AT@ 1456 @LENGTH@ 640
---UPD NormalAnnotation@@@ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1471 @LENGTH@ 79
---UPD NormalAnnotation@@@AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1551 @LENGTH@ 80


UPD VariableDeclarationStatement@@List<Double> dbl=(List<Double>)source.get("coordinates"); @TO@ List<Number> dbl=(List<Number>)source.get("coordinates"); @AT@ 15620 @LENGTH@ 60
---UPD ParameterizedType@@List<Double> @TO@ List<Number> @AT@ 15620 @LENGTH@ 12
------UPD SimpleType@@Double @TO@ Number @AT@ 15625 @LENGTH@ 6
---UPD VariableDeclarationFragment@@dbl=(List<Double>)source.get("coordinates") @TO@ dbl=(List<Number>)source.get("coordinates") @AT@ 15633 @LENGTH@ 46
------UPD CastExpression@@(List<Double>)source.get("coordinates") @TO@ (List<Number>)source.get("coordinates") @AT@ 15639 @LENGTH@ 40
---------UPD ParameterizedType@@List<Double> @TO@ List<Number> @AT@ 15640 @LENGTH@ 12
------------UPD SimpleType@@Double @TO@ Number @AT@ 15645 @LENGTH@ 6


UPD EnhancedForStatement@@for (Parameter<?> parameter : query.getParameters()) {  if (parameter.getName() != null) {    return true;  }} @TO@ for (Parameter<?> parameter : query.getParameters()) {  String name=parameter.getName();  if (name != null && NO_DIGITS.matcher(name).find()) {    return true;  }} @AT@ 12578 @LENGTH@ 118
---DEL IfStatement@@if (parameter.getName() != null) {  return true;} @AT@ 12636 @LENGTH@ 56
------DEL InfixExpression@@parameter.getName() != null @AT@ 12640 @LENGTH@ 27
---------DEL MethodInvocation@@parameter.getName() @AT@ 12640 @LENGTH@ 19
---INS VariableDeclarationStatement@@String name=parameter.getName(); @TO@ EnhancedForStatement@@for (Parameter<?> parameter : query.getParameters()) {  if (parameter.getName() != null) {    return true;  }} @AT@ 12704 @LENGTH@ 34
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String name=parameter.getName(); @AT@ 12704 @LENGTH@ 6
------INS VariableDeclarationFragment@@name=parameter.getName() @TO@ VariableDeclarationStatement@@String name=parameter.getName(); @AT@ 12711 @LENGTH@ 26
---------INS SimpleName@@name @TO@ VariableDeclarationFragment@@name=parameter.getName() @AT@ 12711 @LENGTH@ 4
---------INS MethodInvocation@@parameter.getName() @TO@ VariableDeclarationFragment@@name=parameter.getName() @AT@ 12718 @LENGTH@ 19
------------MOV SimpleName@@Name:parameter @TO@ MethodInvocation@@parameter.getName() @AT@ 12640 @LENGTH@ 9
------------MOV SimpleName@@MethodName:getName:[] @TO@ MethodInvocation@@parameter.getName() @AT@ 12650 @LENGTH@ 9
---INS IfStatement@@if (name != null && NO_DIGITS.matcher(name).find()) {  return true;} @TO@ EnhancedForStatement@@for (Parameter<?> parameter : query.getParameters()) {  if (parameter.getName() != null) {    return true;  }} @AT@ 12823 @LENGTH@ 75
------MOV Block@@ThenBody:{  return true;} @TO@ IfStatement@@if (name != null && NO_DIGITS.matcher(name).find()) {  return true;} @AT@ 12669 @LENGTH@ 23
------INS InfixExpression@@name != null && NO_DIGITS.matcher(name).find() @TO@ IfStatement@@if (name != null && NO_DIGITS.matcher(name).find()) {  return true;} @AT@ 12827 @LENGTH@ 46
---------INS InfixExpression@@name != null @TO@ InfixExpression@@name != null && NO_DIGITS.matcher(name).find() @AT@ 12827 @LENGTH@ 12
------------MOV Operator@@!= @TO@ InfixExpression@@name != null @AT@ 12659 @LENGTH@ 2
------------MOV NullLiteral@@null @TO@ InfixExpression@@name != null @AT@ 12663 @LENGTH@ 4
------------INS SimpleName@@name @TO@ InfixExpression@@name != null @AT@ 12827 @LENGTH@ 4
---------INS Operator@@&& @TO@ InfixExpression@@name != null && NO_DIGITS.matcher(name).find() @AT@ 12839 @LENGTH@ 2
---------INS MethodInvocation@@NO_DIGITS.matcher(name).find() @TO@ InfixExpression@@name != null && NO_DIGITS.matcher(name).find() @AT@ 12843 @LENGTH@ 30
------------INS MethodInvocation@@MethodName:matcher:[name] @TO@ MethodInvocation@@NO_DIGITS.matcher(name).find() @AT@ 12843 @LENGTH@ 23
---------------INS SimpleName@@name @TO@ MethodInvocation@@MethodName:matcher:[name] @AT@ 12861 @LENGTH@ 4
------------INS SimpleName@@Name:NO_DIGITS @TO@ MethodInvocation@@NO_DIGITS.matcher(name).find() @AT@ 12843 @LENGTH@ 9
------------INS SimpleName@@MethodName:find:[] @TO@ MethodInvocation@@NO_DIGITS.matcher(name).find() @AT@ 12867 @LENGTH@ 6


UPD Block@@ThenBody:{  ConnectionDefinitions definitions=new ConnectionDefinitions("VertxConnectionFactory").className("io.vertx.resourceadapter.impl.VertxManagedConnectionFactory").jndiName(jndiName);  definitions.put("clusterHost",clusterHost);  definitions.put("clusterPort",clusterPort);  initContext.fraction(new ResourceAdapterFraction().resourceAdapter(new ResourceAdapter("vertx-rar.rar").module("io.vertx.jca").transactionSupport(ResourceAdapter.TransactionSupport.NOTRANSACTION).connectionDefinitions(definitions)));} @TO@ ThenBody:{  ResourceAdapter resourceAdapter=new ResourceAdapter("vertx-ra").module("io.vertx.jca").transactionSupport(ResourceAdapter.TransactionSupport.NOTRANSACTION).connectionDefinitions(new ConnectionDefinitions("VertxConnectionFactory").className("io.vertx.resourceadapter.impl.VertxManagedConnectionFactory").jndiName(jndiName()).configProperties(new ConfigProperties("clusterHost").value(clusterHost())).configProperties(new ConfigProperties("clusterPort").value(String.valueOf(clusterPort()))));  initContext.fraction(new ResourceAdapterFraction().resourceAdapter(resourceAdapter));} @AT@ 2197 @LENGTH@ 736
---DEL VariableDeclarationStatement@@ConnectionDefinitions definitions=new ConnectionDefinitions("VertxConnectionFactory").className("io.vertx.resourceadapter.impl.VertxManagedConnectionFactory").jndiName(jndiName); @AT@ 2211 @LENGTH@ 224
------DEL VariableDeclarationFragment@@definitions=new ConnectionDefinitions("VertxConnectionFactory").className("io.vertx.resourceadapter.impl.VertxManagedConnectionFactory").jndiName(jndiName) @AT@ 2233 @LENGTH@ 201
---------DEL MethodInvocation@@new ConnectionDefinitions("VertxConnectionFactory").className("io.vertx.resourceadapter.impl.VertxManagedConnectionFactory").jndiName(jndiName) @AT@ 2247 @LENGTH@ 187
------------DEL SimpleName@@MethodName:jndiName:[jndiName] @AT@ 2416 @LENGTH@ 18
---------------DEL SimpleName@@jndiName @AT@ 2425 @LENGTH@ 8
---INS VariableDeclarationStatement@@ResourceAdapter resourceAdapter=new ResourceAdapter("vertx-ra").module("io.vertx.jca").transactionSupport(ResourceAdapter.TransactionSupport.NOTRANSACTION).connectionDefinitions(new ConnectionDefinitions("VertxConnectionFactory").className("io.vertx.resourceadapter.impl.VertxManagedConnectionFactory").jndiName(jndiName()).configProperties(new ConfigProperties("clusterHost").value(clusterHost())).configProperties(new ConfigProperties("clusterPort").value(String.valueOf(clusterPort())))); @TO@ Block@@ThenBody:{  ConnectionDefinitions definitions=new ConnectionDefinitions("VertxConnectionFactory").className("io.vertx.resourceadapter.impl.VertxManagedConnectionFactory").jndiName(jndiName);  definitions.put("clusterHost",clusterHost);  definitions.put("clusterPort",clusterPort);  initContext.fraction(new ResourceAdapterFraction().resourceAdapter(new ResourceAdapter("vertx-rar.rar").module("io.vertx.jca").transactionSupport(ResourceAdapter.TransactionSupport.NOTRANSACTION).connectionDefinitions(definitions)));} @AT@ 2394 @LENGTH@ 715
------MOV SimpleType@@ConnectionDefinitions @TO@ VariableDeclarationStatement@@ResourceAdapter resourceAdapter=new ResourceAdapter("vertx-ra").module("io.vertx.jca").transactionSupport(ResourceAdapter.TransactionSupport.NOTRANSACTION).connectionDefinitions(new ConnectionDefinitions("VertxConnectionFactory").className("io.vertx.resourceadapter.impl.VertxManagedConnectionFactory").jndiName(jndiName()).configProperties(new ConfigProperties("clusterHost").value(clusterHost())).configProperties(new ConfigProperties("clusterPort").value(String.valueOf(clusterPort())))); @AT@ 2211 @LENGTH@ 21
------INS VariableDeclarationFragment@@resourceAdapter=new ResourceAdapter("vertx-ra").module("io.vertx.jca").transactionSupport(ResourceAdapter.TransactionSupport.NOTRANSACTION).connectionDefinitions(new ConnectionDefinitions("VertxConnectionFactory").className("io.vertx.resourceadapter.impl.VertxManagedConnectionFactory").jndiName(jndiName()).configProperties(new ConfigProperties("clusterHost").value(clusterHost())).configProperties(new ConfigProperties("clusterPort").value(String.valueOf(clusterPort())))) @TO@ VariableDeclarationStatement@@ResourceAdapter resourceAdapter=new ResourceAdapter("vertx-ra").module("io.vertx.jca").transactionSupport(ResourceAdapter.TransactionSupport.NOTRANSACTION).connectionDefinitions(new ConnectionDefinitions("VertxConnectionFactory").className("io.vertx.resourceadapter.impl.VertxManagedConnectionFactory").jndiName(jndiName()).configProperties(new ConfigProperties("clusterHost").value(clusterHost())).configProperties(new ConfigProperties("clusterPort").value(String.valueOf(clusterPort())))); @AT@ 2410 @LENGTH@ 698
---------MOV SimpleName@@definitions @TO@ VariableDeclarationFragment@@resourceAdapter=new ResourceAdapter("vertx-ra").module("io.vertx.jca").transactionSupport(ResourceAdapter.TransactionSupport.NOTRANSACTION).connectionDefinitions(new ConnectionDefinitions("VertxConnectionFactory").className("io.vertx.resourceadapter.impl.VertxManagedConnectionFactory").jndiName(jndiName()).configProperties(new ConfigProperties("clusterHost").value(clusterHost())).configProperties(new ConfigProperties("clusterPort").value(String.valueOf(clusterPort())))) @AT@ 2233 @LENGTH@ 11
---------INS MethodInvocation@@new ResourceAdapter("vertx-ra").module("io.vertx.jca").transactionSupport(ResourceAdapter.TransactionSupport.NOTRANSACTION).connectionDefinitions(new ConnectionDefinitions("VertxConnectionFactory").className("io.vertx.resourceadapter.impl.VertxManagedConnectionFactory").jndiName(jndiName()).configProperties(new ConfigProperties("clusterHost").value(clusterHost())).configProperties(new ConfigProperties("clusterPort").value(String.valueOf(clusterPort())))) @TO@ VariableDeclarationFragment@@resourceAdapter=new ResourceAdapter("vertx-ra").module("io.vertx.jca").transactionSupport(ResourceAdapter.TransactionSupport.NOTRANSACTION).connectionDefinitions(new ConnectionDefinitions("VertxConnectionFactory").className("io.vertx.resourceadapter.impl.VertxManagedConnectionFactory").jndiName(jndiName()).configProperties(new ConfigProperties("clusterHost").value(clusterHost())).configProperties(new ConfigProperties("clusterPort").value(String.valueOf(clusterPort())))) @AT@ 2428 @LENGTH@ 680
------------INS MethodInvocation@@MethodName:module:["io.vertx.jca"] @TO@ MethodInvocation@@new ResourceAdapter("vertx-ra").module("io.vertx.jca").transactionSupport(ResourceAdapter.TransactionSupport.NOTRANSACTION).connectionDefinitions(new ConnectionDefinitions("VertxConnectionFactory").className("io.vertx.resourceadapter.impl.VertxManagedConnectionFactory").jndiName(jndiName()).configProperties(new ConfigProperties("clusterHost").value(clusterHost())).configProperties(new ConfigProperties("clusterPort").value(String.valueOf(clusterPort())))) @AT@ 2428 @LENGTH@ 75
---------------INS StringLiteral@@"io.vertx.jca" @TO@ MethodInvocation@@MethodName:module:["io.vertx.jca"] @AT@ 2488 @LENGTH@ 14
------------INS ClassInstanceCreation@@ResourceAdapter["vertx-ra"] @TO@ MethodInvocation@@new ResourceAdapter("vertx-ra").module("io.vertx.jca").transactionSupport(ResourceAdapter.TransactionSupport.NOTRANSACTION).connectionDefinitions(new ConnectionDefinitions("VertxConnectionFactory").className("io.vertx.resourceadapter.impl.VertxManagedConnectionFactory").jndiName(jndiName()).configProperties(new ConfigProperties("clusterHost").value(clusterHost())).configProperties(new ConfigProperties("clusterPort").value(String.valueOf(clusterPort())))) @AT@ 2428 @LENGTH@ 31
---------------INS New@@new @TO@ ClassInstanceCreation@@ResourceAdapter["vertx-ra"] @AT@ 2428 @LENGTH@ 3
---------------INS SimpleType@@ResourceAdapter @TO@ ClassInstanceCreation@@ResourceAdapter["vertx-ra"] @AT@ 2432 @LENGTH@ 15
---------------INS StringLiteral@@"vertx-ra" @TO@ ClassInstanceCreation@@ResourceAdapter["vertx-ra"] @AT@ 2448 @LENGTH@ 10
------------INS SimpleName@@MethodName:connectionDefinitions:[new ConnectionDefinitions("VertxConnectionFactory").className("io.vertx.resourceadapter.impl.VertxManagedConnectionFactory").jndiName(jndiName()).configProperties(new ConfigProperties("clusterHost").value(clusterHost())).configProperties(new ConfigProperties("clusterPort").value(String.valueOf(clusterPort())))] @TO@ MethodInvocation@@new ResourceAdapter("vertx-ra").module("io.vertx.jca").transactionSupport(ResourceAdapter.TransactionSupport.NOTRANSACTION).connectionDefinitions(new ConnectionDefinitions("VertxConnectionFactory").className("io.vertx.resourceadapter.impl.VertxManagedConnectionFactory").jndiName(jndiName()).configProperties(new ConfigProperties("clusterHost").value(clusterHost())).configProperties(new ConfigProperties("clusterPort").value(String.valueOf(clusterPort())))) @AT@ 2615 @LENGTH@ 493
---------------INS MethodInvocation@@new ConnectionDefinitions("VertxConnectionFactory").className("io.vertx.resourceadapter.impl.VertxManagedConnectionFactory").jndiName(jndiName()).configProperties(new ConfigProperties("clusterHost").value(clusterHost())).configProperties(new ConfigProperties("clusterPort").value(String.valueOf(clusterPort()))) @TO@ SimpleName@@MethodName:connectionDefinitions:[new ConnectionDefinitions("VertxConnectionFactory").className("io.vertx.resourceadapter.impl.VertxManagedConnectionFactory").jndiName(jndiName()).configProperties(new ConfigProperties("clusterHost").value(clusterHost())).configProperties(new ConfigProperties("clusterPort").value(String.valueOf(clusterPort())))] @AT@ 2637 @LENGTH@ 470
------------------MOV MethodInvocation@@MethodName:className:["io.vertx.resourceadapter.impl.VertxManagedConnectionFactory"] @TO@ MethodInvocation@@new ConnectionDefinitions("VertxConnectionFactory").className("io.vertx.resourceadapter.impl.VertxManagedConnectionFactory").jndiName(jndiName()).configProperties(new ConfigProperties("clusterHost").value(clusterHost())).configProperties(new ConfigProperties("clusterPort").value(String.valueOf(clusterPort()))) @AT@ 2247 @LENGTH@ 146
------------------MOV ClassInstanceCreation@@ConnectionDefinitions["VertxConnectionFactory"] @TO@ MethodInvocation@@new ConnectionDefinitions("VertxConnectionFactory").className("io.vertx.resourceadapter.impl.VertxManagedConnectionFactory").jndiName(jndiName()).configProperties(new ConfigProperties("clusterHost").value(clusterHost())).configProperties(new ConfigProperties("clusterPort").value(String.valueOf(clusterPort()))) @AT@ 2247 @LENGTH@ 51
------------------MOV SimpleName@@MethodName:put:["clusterPort", clusterPort] @TO@ MethodInvocation@@new ConnectionDefinitions("VertxConnectionFactory").className("io.vertx.resourceadapter.impl.VertxManagedConnectionFactory").jndiName(jndiName()).configProperties(new ConfigProperties("clusterHost").value(clusterHost())).configProperties(new ConfigProperties("clusterPort").value(String.valueOf(clusterPort()))) @AT@ 2517 @LENGTH@ 31
---------------------DEL StringLiteral@@"clusterPort" @AT@ 2521 @LENGTH@ 13
---------------------DEL SimpleName@@clusterPort @AT@ 2536 @LENGTH@ 11
---------------------INS MethodInvocation@@new ConfigProperties("clusterPort").value(String.valueOf(clusterPort())) @TO@ SimpleName@@MethodName:put:["clusterPort", clusterPort] @AT@ 3034 @LENGTH@ 72
------------------------INS ClassInstanceCreation@@ConfigProperties["clusterPort"] @TO@ MethodInvocation@@new ConfigProperties("clusterPort").value(String.valueOf(clusterPort())) @AT@ 3034 @LENGTH@ 35
---------------------------INS New@@new @TO@ ClassInstanceCreation@@ConfigProperties["clusterPort"] @AT@ 3034 @LENGTH@ 3
---------------------------INS SimpleType@@ConfigProperties @TO@ ClassInstanceCreation@@ConfigProperties["clusterPort"] @AT@ 3038 @LENGTH@ 16
---------------------------INS StringLiteral@@"clusterPort" @TO@ ClassInstanceCreation@@ConfigProperties["clusterPort"] @AT@ 3055 @LENGTH@ 13
------------------------INS SimpleName@@MethodName:value:[String.valueOf(clusterPort())] @TO@ MethodInvocation@@new ConfigProperties("clusterPort").value(String.valueOf(clusterPort())) @AT@ 3070 @LENGTH@ 36
---------------------------INS MethodInvocation@@String.valueOf(clusterPort()) @TO@ SimpleName@@MethodName:value:[String.valueOf(clusterPort())] @AT@ 3076 @LENGTH@ 29
------------------------------INS SimpleName@@Name:String @TO@ MethodInvocation@@String.valueOf(clusterPort()) @AT@ 3076 @LENGTH@ 6
------------------------------INS SimpleName@@MethodName:valueOf:[clusterPort()] @TO@ MethodInvocation@@String.valueOf(clusterPort()) @AT@ 3083 @LENGTH@ 22
---------------------------------INS MethodInvocation@@MethodName:clusterPort:[] @TO@ SimpleName@@MethodName:valueOf:[clusterPort()] @AT@ 3091 @LENGTH@ 13
------------------INS MethodInvocation@@MethodName:configProperties:[new ConfigProperties("clusterHost").value(clusterHost())] @TO@ MethodInvocation@@new ConnectionDefinitions("VertxConnectionFactory").className("io.vertx.resourceadapter.impl.VertxManagedConnectionFactory").jndiName(jndiName()).configProperties(new ConfigProperties("clusterHost").value(clusterHost())).configProperties(new ConfigProperties("clusterPort").value(String.valueOf(clusterPort()))) @AT@ 2637 @LENGTH@ 310
---------------------INS MethodInvocation@@new ConfigProperties("clusterHost").value(clusterHost()) @TO@ MethodInvocation@@MethodName:configProperties:[new ConfigProperties("clusterHost").value(clusterHost())] @AT@ 2890 @LENGTH@ 56
------------------------INS ClassInstanceCreation@@ConfigProperties["clusterHost"] @TO@ MethodInvocation@@new ConfigProperties("clusterHost").value(clusterHost()) @AT@ 2890 @LENGTH@ 35
---------------------------INS New@@new @TO@ ClassInstanceCreation@@ConfigProperties["clusterHost"] @AT@ 2890 @LENGTH@ 3
---------------------------INS SimpleType@@ConfigProperties @TO@ ClassInstanceCreation@@ConfigProperties["clusterHost"] @AT@ 2894 @LENGTH@ 16
---------------------------INS StringLiteral@@"clusterHost" @TO@ ClassInstanceCreation@@ConfigProperties["clusterHost"] @AT@ 2911 @LENGTH@ 13
------------------------INS SimpleName@@MethodName:value:[clusterHost()] @TO@ MethodInvocation@@new ConfigProperties("clusterHost").value(clusterHost()) @AT@ 2926 @LENGTH@ 20
---------------------------INS MethodInvocation@@MethodName:clusterHost:[] @TO@ SimpleName@@MethodName:value:[clusterHost()] @AT@ 2932 @LENGTH@ 13
------------------INS MethodInvocation@@MethodName:jndiName:[jndiName()] @TO@ MethodInvocation@@new ConnectionDefinitions("VertxConnectionFactory").className("io.vertx.resourceadapter.impl.VertxManagedConnectionFactory").jndiName(jndiName()).configProperties(new ConfigProperties("clusterHost").value(clusterHost())).configProperties(new ConfigProperties("clusterPort").value(String.valueOf(clusterPort()))) @AT@ 2637 @LENGTH@ 205
---------------------INS MethodInvocation@@MethodName:jndiName:[] @TO@ MethodInvocation@@MethodName:jndiName:[jndiName()] @AT@ 2831 @LENGTH@ 10
------------MOV MethodInvocation@@MethodName:transactionSupport:[ResourceAdapter.TransactionSupport.NOTRANSACTION] @TO@ MethodInvocation@@new ResourceAdapter("vertx-ra").module("io.vertx.jca").transactionSupport(ResourceAdapter.TransactionSupport.NOTRANSACTION).connectionDefinitions(new ConnectionDefinitions("VertxConnectionFactory").className("io.vertx.resourceadapter.impl.VertxManagedConnectionFactory").jndiName(jndiName()).configProperties(new ConfigProperties("clusterHost").value(clusterHost())).configProperties(new ConfigProperties("clusterPort").value(String.valueOf(clusterPort())))) @AT@ 2651 @LENGTH@ 190
---DEL ExpressionStatement@@MethodInvocation:definitions.put("clusterHost",clusterHost) @AT@ 2448 @LENGTH@ 44
------DEL MethodInvocation@@definitions.put("clusterHost",clusterHost) @AT@ 2448 @LENGTH@ 43
---------DEL SimpleName@@Name:definitions @AT@ 2448 @LENGTH@ 11
---------DEL SimpleName@@MethodName:put:["clusterHost", clusterHost] @AT@ 2460 @LENGTH@ 31
------------DEL StringLiteral@@"clusterHost" @AT@ 2464 @LENGTH@ 13
------------DEL SimpleName@@clusterHost @AT@ 2479 @LENGTH@ 11
---DEL ExpressionStatement@@MethodInvocation:definitions.put("clusterPort",clusterPort) @AT@ 2505 @LENGTH@ 44
------DEL MethodInvocation@@definitions.put("clusterPort",clusterPort) @AT@ 2505 @LENGTH@ 43
---------DEL SimpleName@@Name:definitions @AT@ 2505 @LENGTH@ 11
---UPD ExpressionStatement@@MethodInvocation:initContext.fraction(new ResourceAdapterFraction().resourceAdapter(new ResourceAdapter("vertx-rar.rar").module("io.vertx.jca").transactionSupport(ResourceAdapter.TransactionSupport.NOTRANSACTION).connectionDefinitions(definitions))) @TO@ MethodInvocation:initContext.fraction(new ResourceAdapterFraction().resourceAdapter(resourceAdapter)) @AT@ 2562 @LENGTH@ 361
------UPD MethodInvocation@@initContext.fraction(new ResourceAdapterFraction().resourceAdapter(new ResourceAdapter("vertx-rar.rar").module("io.vertx.jca").transactionSupport(ResourceAdapter.TransactionSupport.NOTRANSACTION).connectionDefinitions(definitions))) @TO@ initContext.fraction(new ResourceAdapterFraction().resourceAdapter(resourceAdapter)) @AT@ 2562 @LENGTH@ 360
---------UPD SimpleName@@MethodName:fraction:[new ResourceAdapterFraction().resourceAdapter(new ResourceAdapter("vertx-rar.rar").module("io.vertx.jca").transactionSupport(ResourceAdapter.TransactionSupport.NOTRANSACTION).connectionDefinitions(definitions))] @TO@ MethodName:fraction:[new ResourceAdapterFraction().resourceAdapter(resourceAdapter)] @AT@ 2574 @LENGTH@ 348
------------UPD MethodInvocation@@new ResourceAdapterFraction().resourceAdapter(new ResourceAdapter("vertx-rar.rar").module("io.vertx.jca").transactionSupport(ResourceAdapter.TransactionSupport.NOTRANSACTION).connectionDefinitions(definitions)) @TO@ new ResourceAdapterFraction().resourceAdapter(resourceAdapter) @AT@ 2583 @LENGTH@ 338
---------------UPD SimpleName@@MethodName:resourceAdapter:[new ResourceAdapter("vertx-rar.rar").module("io.vertx.jca").transactionSupport(ResourceAdapter.TransactionSupport.NOTRANSACTION).connectionDefinitions(definitions)] @TO@ MethodName:resourceAdapter:[resourceAdapter] @AT@ 2613 @LENGTH@ 308
------------------DEL MethodInvocation@@new ResourceAdapter("vertx-rar.rar").module("io.vertx.jca").transactionSupport(ResourceAdapter.TransactionSupport.NOTRANSACTION).connectionDefinitions(definitions) @AT@ 2651 @LENGTH@ 256
---------------------DEL MethodInvocation@@MethodName:module:["io.vertx.jca"] @AT@ 2651 @LENGTH@ 90
------------------------DEL StringLiteral@@"io.vertx.jca" @AT@ 2726 @LENGTH@ 14
---------------------DEL ClassInstanceCreation@@ResourceAdapter["vertx-rar.rar"] @AT@ 2651 @LENGTH@ 36
------------------------DEL New@@new @AT@ 2651 @LENGTH@ 3
------------------------DEL SimpleType@@ResourceAdapter @AT@ 2655 @LENGTH@ 15
------------------------DEL StringLiteral@@"vertx-rar.rar" @AT@ 2671 @LENGTH@ 15
---------------------DEL SimpleName@@MethodName:connectionDefinitions:[definitions] @AT@ 2873 @LENGTH@ 34
------------------MOV SimpleName@@definitions @TO@ SimpleName@@MethodName:resourceAdapter:[new ResourceAdapter("vertx-rar.rar").module("io.vertx.jca").transactionSupport(ResourceAdapter.TransactionSupport.NOTRANSACTION).connectionDefinitions(definitions)] @AT@ 2895 @LENGTH@ 11


UPD FieldDeclaration@@protected, static, final, PathElement, [SUBSYSTEM_PATH=PathElement.pathElement(SUBSYSTEM,Constants.SUBSYSTEM_NAME)] @TO@ public, static, final, PathElement, [SUBSYSTEM_PATH=PathElement.pathElement(SUBSYSTEM,Constants.SUBSYSTEM_NAME)] @AT@ 1907 @LENGTH@ 113
---UPD Modifier@@protected @TO@ public @AT@ 1907 @LENGTH@ 9


UPD ExpressionStatement@@MethodInvocation:assertEquals(0,approvalStore.getApprovals("test","id").size()) @TO@ MethodInvocation:assertEquals(1,approvalStore.getApprovals("test","id").size()) @AT@ 7200 @LENGTH@ 65
---UPD MethodInvocation@@assertEquals(0,approvalStore.getApprovals("test","id").size()) @TO@ assertEquals(1,approvalStore.getApprovals("test","id").size()) @AT@ 7200 @LENGTH@ 64
------UPD SimpleName@@MethodName:assertEquals:[0, approvalStore.getApprovals("test","id").size()] @TO@ MethodName:assertEquals:[1, approvalStore.getApprovals("test","id").size()] @AT@ 7200 @LENGTH@ 64
---------UPD NumberLiteral@@0 @TO@ 1 @AT@ 7213 @LENGTH@ 1


UPD TypeDeclaration@@[@Configuration, @ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration"), @EnableConfigurationProperties(ZipFileDataFormatConfiguration.class), public]ZipFileDataFormatAutoConfiguration,  @TO@ [@Configuration, @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration"), @EnableConfigurationProperties(ZipFileDataFormatConfiguration.class), public]ZipFileDataFormatAutoConfiguration,  @AT@ 1674 @LENGTH@ 1135
---UPD NormalAnnotation@@@ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1689 @LENGTH@ 79
---UPD NormalAnnotation@@@AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1769 @LENGTH@ 80


UPD TypeDeclaration@@[@Configuration, @ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration"), @EnableConfigurationProperties(BoonDataFormatConfiguration.class), public]BoonDataFormatAutoConfiguration,  @TO@ [@Configuration, @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration"), @EnableConfigurationProperties(BoonDataFormatConfiguration.class), public]BoonDataFormatAutoConfiguration,  @AT@ 1663 @LENGTH@ 1095
---UPD NormalAnnotation@@@ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1678 @LENGTH@ 79
---UPD NormalAnnotation@@@AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1758 @LENGTH@ 80


UPD ExpressionStatement@@MethodInvocation:pr.put("remote.connection.default.connect.options.org.xnio.Options.SASL_DISALLOWED_MECHANISMS","JBOSS_LOCAL_USER") @TO@ MethodInvocation:pr.put("remote.connection.default.connect.options.org.xnio.Options.SASL_DISALLOWED_MECHANISMS","JBOSS-LOCAL-USER") @AT@ 3381 @LENGTH@ 116
---UPD MethodInvocation@@pr.put("remote.connection.default.connect.options.org.xnio.Options.SASL_DISALLOWED_MECHANISMS","JBOSS_LOCAL_USER") @TO@ pr.put("remote.connection.default.connect.options.org.xnio.Options.SASL_DISALLOWED_MECHANISMS","JBOSS-LOCAL-USER") @AT@ 3381 @LENGTH@ 115
------UPD SimpleName@@MethodName:put:["remote.connection.default.connect.options.org.xnio.Options.SASL_DISALLOWED_MECHANISMS", "JBOSS_LOCAL_USER"] @TO@ MethodName:put:["remote.connection.default.connect.options.org.xnio.Options.SASL_DISALLOWED_MECHANISMS", "JBOSS-LOCAL-USER"] @AT@ 3384 @LENGTH@ 112
---------UPD StringLiteral@@"JBOSS_LOCAL_USER" @TO@ "JBOSS-LOCAL-USER" @AT@ 3477 @LENGTH@ 18


UPD TypeDeclaration@@[@Configuration, @ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration"), public]CassandraComponentAutoConfiguration,  @TO@ [@Configuration, @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration"), public]CassandraComponentAutoConfiguration,  @AT@ 1453 @LENGTH@ 626
---UPD NormalAnnotation@@@ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1468 @LENGTH@ 79
---UPD NormalAnnotation@@@AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1548 @LENGTH@ 80


UPD TypeDeclaration@@[@Configuration, @ComponentScan({"org.springframework.data.neo4j.repositories"}), @EnableNeo4jRepositories("org.springframework.data.neo4j.repositories.repo"), @EnableTransactionManagement, public]RepositoriesTestContext, Neo4jConfiguration @TO@ [@Configuration, @EnableNeo4jRepositories("org.springframework.data.neo4j.repositories.repo"), @EnableTransactionManagement, public]RepositoriesTestContext, Neo4jConfiguration @AT@ 1080 @LENGTH@ 421
---DEL SingleMemberAnnotation@@@ComponentScan({"org.springframework.data.neo4j.repositories"}) @AT@ 1095 @LENGTH@ 63


UPD MethodDeclaration@@private, boolean, MethodName:matchesGenericType, TypeVariable<?> variable, Class<?> parameterType,  @TO@ private, boolean, MethodName:matchesGenericType, TypeVariable<?> variable, ResolvableType parameterType,  @AT@ 10963 @LENGTH@ 882
---UPD SingleVariableDeclaration@@Class<?> parameterType @TO@ ResolvableType parameterType @AT@ 11024 @LENGTH@ 22
------DEL ParameterizedType@@Class<?> @AT@ 11024 @LENGTH@ 8
---------DEL SimpleType@@Class @AT@ 11024 @LENGTH@ 5
---------DEL WildcardType@@? @AT@ 11030 @LENGTH@ 1
------INS SimpleType@@ResolvableType @TO@ SingleVariableDeclaration@@Class<?> parameterType @AT@ 11210 @LENGTH@ 14
---DEL VariableDeclarationStatement@@Class<?> entityType=getDomainType(); @AT@ 11053 @LENGTH@ 38
------DEL ParameterizedType@@Class<?> @AT@ 11053 @LENGTH@ 8
---------DEL SimpleType@@Class @AT@ 11053 @LENGTH@ 5
---------DEL WildcardType@@? @AT@ 11059 @LENGTH@ 1
---DEL VariableDeclarationStatement@@Class<?> idClass=getIdType(); @AT@ 11094 @LENGTH@ 31
------DEL ParameterizedType@@Class<?> @AT@ 11094 @LENGTH@ 8
---------DEL SimpleType@@Class @AT@ 11094 @LENGTH@ 5
---------DEL WildcardType@@? @AT@ 11100 @LENGTH@ 1
---INS VariableDeclarationStatement@@GenericDeclaration declaration=variable.getGenericDeclaration(); @TO@ MethodDeclaration@@private, boolean, MethodName:matchesGenericType, TypeVariable<?> variable, Class<?> parameterType,  @AT@ 11245 @LENGTH@ 66
------INS SimpleType@@GenericDeclaration @TO@ VariableDeclarationStatement@@GenericDeclaration declaration=variable.getGenericDeclaration(); @AT@ 11245 @LENGTH@ 18
------INS VariableDeclarationFragment@@declaration=variable.getGenericDeclaration() @TO@ VariableDeclarationStatement@@GenericDeclaration declaration=variable.getGenericDeclaration(); @AT@ 11264 @LENGTH@ 46
---------INS SimpleName@@declaration @TO@ VariableDeclarationFragment@@declaration=variable.getGenericDeclaration() @AT@ 11264 @LENGTH@ 11
---------INS MethodInvocation@@variable.getGenericDeclaration() @TO@ VariableDeclarationFragment@@declaration=variable.getGenericDeclaration() @AT@ 11278 @LENGTH@ 32
------------INS SimpleName@@Name:variable @TO@ MethodInvocation@@variable.getGenericDeclaration() @AT@ 11278 @LENGTH@ 8
------------INS SimpleName@@MethodName:getGenericDeclaration:[] @TO@ MethodInvocation@@variable.getGenericDeclaration() @AT@ 11287 @LENGTH@ 23
---INS IfStatement@@if (declaration instanceof Class) {  ResolvableType entityType=ResolvableType.forClass(getDomainType());  ResolvableType idClass=ResolvableType.forClass(getIdType());  if (ID_TYPE_NAME.equals(variable.getName()) && parameterType.isAssignableFrom(idClass)) {    return true;  }  Type boundType=variable.getBounds()[0];  String referenceName=boundType instanceof TypeVariable ? boundType.toString() : variable.toString();  boolean isDomainTypeVariableReference=DOMAIN_TYPE_NAME.equals(referenceName);  boolean parameterMatchesEntityType=parameterType.isAssignableFrom(entityType);  boolean isNotIterable=!parameterType.equals(Iterable.class);  if (isDomainTypeVariableReference && parameterMatchesEntityType && isNotIterable) {    return true;  }  return false;} @TO@ MethodDeclaration@@private, boolean, MethodName:matchesGenericType, TypeVariable<?> variable, Class<?> parameterType,  @AT@ 11315 @LENGTH@ 909
------INS InstanceofExpression@@declaration instanceof Class @TO@ IfStatement@@if (declaration instanceof Class) {  ResolvableType entityType=ResolvableType.forClass(getDomainType());  ResolvableType idClass=ResolvableType.forClass(getIdType());  if (ID_TYPE_NAME.equals(variable.getName()) && parameterType.isAssignableFrom(idClass)) {    return true;  }  Type boundType=variable.getBounds()[0];  String referenceName=boundType instanceof TypeVariable ? boundType.toString() : variable.toString();  boolean isDomainTypeVariableReference=DOMAIN_TYPE_NAME.equals(referenceName);  boolean parameterMatchesEntityType=parameterType.isAssignableFrom(entityType);  boolean isNotIterable=!parameterType.equals(Iterable.class);  if (isDomainTypeVariableReference && parameterMatchesEntityType && isNotIterable) {    return true;  }  return false;} @AT@ 11319 @LENGTH@ 28
---------INS SimpleName@@declaration @TO@ InstanceofExpression@@declaration instanceof Class @AT@ 11319 @LENGTH@ 11
---------INS Instanceof@@instanceof @TO@ InstanceofExpression@@declaration instanceof Class @AT@ 11331 @LENGTH@ 10
---------INS SimpleType@@Class @TO@ InstanceofExpression@@declaration instanceof Class @AT@ 11342 @LENGTH@ 5
------INS Block@@ThenBody:{  ResolvableType entityType=ResolvableType.forClass(getDomainType());  ResolvableType idClass=ResolvableType.forClass(getIdType());  if (ID_TYPE_NAME.equals(variable.getName()) && parameterType.isAssignableFrom(idClass)) {    return true;  }  Type boundType=variable.getBounds()[0];  String referenceName=boundType instanceof TypeVariable ? boundType.toString() : variable.toString();  boolean isDomainTypeVariableReference=DOMAIN_TYPE_NAME.equals(referenceName);  boolean parameterMatchesEntityType=parameterType.isAssignableFrom(entityType);  boolean isNotIterable=!parameterType.equals(Iterable.class);  if (isDomainTypeVariableReference && parameterMatchesEntityType && isNotIterable) {    return true;  }  return false;} @TO@ IfStatement@@if (declaration instanceof Class) {  ResolvableType entityType=ResolvableType.forClass(getDomainType());  ResolvableType idClass=ResolvableType.forClass(getIdType());  if (ID_TYPE_NAME.equals(variable.getName()) && parameterType.isAssignableFrom(idClass)) {    return true;  }  Type boundType=variable.getBounds()[0];  String referenceName=boundType instanceof TypeVariable ? boundType.toString() : variable.toString();  boolean isDomainTypeVariableReference=DOMAIN_TYPE_NAME.equals(referenceName);  boolean parameterMatchesEntityType=parameterType.isAssignableFrom(entityType);  boolean isNotIterable=!parameterType.equals(Iterable.class);  if (isDomainTypeVariableReference && parameterMatchesEntityType && isNotIterable) {    return true;  }  return false;} @AT@ 11349 @LENGTH@ 875
---------MOV IfStatement@@if (ID_TYPE_NAME.equals(variable.getName()) && parameterType.isAssignableFrom(idClass)) {  return true;} @TO@ Block@@ThenBody:{  ResolvableType entityType=ResolvableType.forClass(getDomainType());  ResolvableType idClass=ResolvableType.forClass(getIdType());  if (ID_TYPE_NAME.equals(variable.getName()) && parameterType.isAssignableFrom(idClass)) {    return true;  }  Type boundType=variable.getBounds()[0];  String referenceName=boundType instanceof TypeVariable ? boundType.toString() : variable.toString();  boolean isDomainTypeVariableReference=DOMAIN_TYPE_NAME.equals(referenceName);  boolean parameterMatchesEntityType=parameterType.isAssignableFrom(entityType);  boolean isNotIterable=!parameterType.equals(Iterable.class);  if (isDomainTypeVariableReference && parameterMatchesEntityType && isNotIterable) {    return true;  }  return false;} @AT@ 11129 @LENGTH@ 109
---------MOV VariableDeclarationStatement@@Type boundType=variable.getBounds()[0]; @TO@ Block@@ThenBody:{  ResolvableType entityType=ResolvableType.forClass(getDomainType());  ResolvableType idClass=ResolvableType.forClass(getIdType());  if (ID_TYPE_NAME.equals(variable.getName()) && parameterType.isAssignableFrom(idClass)) {    return true;  }  Type boundType=variable.getBounds()[0];  String referenceName=boundType instanceof TypeVariable ? boundType.toString() : variable.toString();  boolean isDomainTypeVariableReference=DOMAIN_TYPE_NAME.equals(referenceName);  boolean parameterMatchesEntityType=parameterType.isAssignableFrom(entityType);  boolean isNotIterable=!parameterType.equals(Iterable.class);  if (isDomainTypeVariableReference && parameterMatchesEntityType && isNotIterable) {    return true;  }  return false;} @AT@ 11242 @LENGTH@ 41
---------MOV VariableDeclarationStatement@@String referenceName=boundType instanceof TypeVariable ? boundType.toString() : variable.toString(); @TO@ Block@@ThenBody:{  ResolvableType entityType=ResolvableType.forClass(getDomainType());  ResolvableType idClass=ResolvableType.forClass(getIdType());  if (ID_TYPE_NAME.equals(variable.getName()) && parameterType.isAssignableFrom(idClass)) {    return true;  }  Type boundType=variable.getBounds()[0];  String referenceName=boundType instanceof TypeVariable ? boundType.toString() : variable.toString();  boolean isDomainTypeVariableReference=DOMAIN_TYPE_NAME.equals(referenceName);  boolean parameterMatchesEntityType=parameterType.isAssignableFrom(entityType);  boolean isNotIterable=!parameterType.equals(Iterable.class);  if (isDomainTypeVariableReference && parameterMatchesEntityType && isNotIterable) {    return true;  }  return false;} @AT@ 11286 @LENGTH@ 102
---------INS VariableDeclarationStatement@@ResolvableType entityType=ResolvableType.forClass(getDomainType()); @TO@ Block@@ThenBody:{  ResolvableType entityType=ResolvableType.forClass(getDomainType());  ResolvableType idClass=ResolvableType.forClass(getIdType());  if (ID_TYPE_NAME.equals(variable.getName()) && parameterType.isAssignableFrom(idClass)) {    return true;  }  Type boundType=variable.getBounds()[0];  String referenceName=boundType instanceof TypeVariable ? boundType.toString() : variable.toString();  boolean isDomainTypeVariableReference=DOMAIN_TYPE_NAME.equals(referenceName);  boolean parameterMatchesEntityType=parameterType.isAssignableFrom(entityType);  boolean isNotIterable=!parameterType.equals(Iterable.class);  if (isDomainTypeVariableReference && parameterMatchesEntityType && isNotIterable) {    return true;  }  return false;} @AT@ 11355 @LENGTH@ 69
------------MOV VariableDeclarationFragment@@entityType=getDomainType() @TO@ VariableDeclarationStatement@@ResolvableType entityType=ResolvableType.forClass(getDomainType()); @AT@ 11062 @LENGTH@ 28
---------------DEL MethodInvocation@@MethodName:getDomainType:[] @AT@ 11075 @LENGTH@ 15
---------------INS MethodInvocation@@ResolvableType.forClass(getDomainType()) @TO@ VariableDeclarationFragment@@entityType=getDomainType() @AT@ 11383 @LENGTH@ 40
------------------INS SimpleName@@Name:ResolvableType @TO@ MethodInvocation@@ResolvableType.forClass(getDomainType()) @AT@ 11383 @LENGTH@ 14
------------------INS SimpleName@@MethodName:forClass:[getDomainType()] @TO@ MethodInvocation@@ResolvableType.forClass(getDomainType()) @AT@ 11398 @LENGTH@ 25
---------------------INS MethodInvocation@@MethodName:getDomainType:[] @TO@ SimpleName@@MethodName:forClass:[getDomainType()] @AT@ 11407 @LENGTH@ 15
------------INS SimpleType@@ResolvableType @TO@ VariableDeclarationStatement@@ResolvableType entityType=ResolvableType.forClass(getDomainType()); @AT@ 11355 @LENGTH@ 14
---------MOV VariableDeclarationStatement@@boolean isDomainTypeVariableReference=DOMAIN_TYPE_NAME.equals(referenceName); @TO@ Block@@ThenBody:{  ResolvableType entityType=ResolvableType.forClass(getDomainType());  ResolvableType idClass=ResolvableType.forClass(getIdType());  if (ID_TYPE_NAME.equals(variable.getName()) && parameterType.isAssignableFrom(idClass)) {    return true;  }  Type boundType=variable.getBounds()[0];  String referenceName=boundType instanceof TypeVariable ? boundType.toString() : variable.toString();  boolean isDomainTypeVariableReference=DOMAIN_TYPE_NAME.equals(referenceName);  boolean parameterMatchesEntityType=parameterType.isAssignableFrom(entityType);  boolean isNotIterable=!parameterType.equals(Iterable.class);  if (isDomainTypeVariableReference && parameterMatchesEntityType && isNotIterable) {    return true;  }  return false;} @AT@ 11392 @LENGTH@ 79
---------INS VariableDeclarationStatement@@ResolvableType idClass=ResolvableType.forClass(getIdType()); @TO@ Block@@ThenBody:{  ResolvableType entityType=ResolvableType.forClass(getDomainType());  ResolvableType idClass=ResolvableType.forClass(getIdType());  if (ID_TYPE_NAME.equals(variable.getName()) && parameterType.isAssignableFrom(idClass)) {    return true;  }  Type boundType=variable.getBounds()[0];  String referenceName=boundType instanceof TypeVariable ? boundType.toString() : variable.toString();  boolean isDomainTypeVariableReference=DOMAIN_TYPE_NAME.equals(referenceName);  boolean parameterMatchesEntityType=parameterType.isAssignableFrom(entityType);  boolean isNotIterable=!parameterType.equals(Iterable.class);  if (isDomainTypeVariableReference && parameterMatchesEntityType && isNotIterable) {    return true;  }  return false;} @AT@ 11428 @LENGTH@ 62
------------MOV VariableDeclarationFragment@@idClass=getIdType() @TO@ VariableDeclarationStatement@@ResolvableType idClass=ResolvableType.forClass(getIdType()); @AT@ 11103 @LENGTH@ 21
---------------DEL MethodInvocation@@MethodName:getIdType:[] @AT@ 11113 @LENGTH@ 11
---------------INS MethodInvocation@@ResolvableType.forClass(getIdType()) @TO@ VariableDeclarationFragment@@idClass=getIdType() @AT@ 11453 @LENGTH@ 36
------------------INS SimpleName@@Name:ResolvableType @TO@ MethodInvocation@@ResolvableType.forClass(getIdType()) @AT@ 11453 @LENGTH@ 14
------------------INS SimpleName@@MethodName:forClass:[getIdType()] @TO@ MethodInvocation@@ResolvableType.forClass(getIdType()) @AT@ 11468 @LENGTH@ 21
---------------------INS MethodInvocation@@MethodName:getIdType:[] @TO@ SimpleName@@MethodName:forClass:[getIdType()] @AT@ 11477 @LENGTH@ 11
------------INS SimpleType@@ResolvableType @TO@ VariableDeclarationStatement@@ResolvableType idClass=ResolvableType.forClass(getIdType()); @AT@ 11428 @LENGTH@ 14
---------MOV VariableDeclarationStatement@@boolean parameterMatchesEntityType=parameterType.isAssignableFrom(entityType); @TO@ Block@@ThenBody:{  ResolvableType entityType=ResolvableType.forClass(getDomainType());  ResolvableType idClass=ResolvableType.forClass(getIdType());  if (ID_TYPE_NAME.equals(variable.getName()) && parameterType.isAssignableFrom(idClass)) {    return true;  }  Type boundType=variable.getBounds()[0];  String referenceName=boundType instanceof TypeVariable ? boundType.toString() : variable.toString();  boolean isDomainTypeVariableReference=DOMAIN_TYPE_NAME.equals(referenceName);  boolean parameterMatchesEntityType=parameterType.isAssignableFrom(entityType);  boolean isNotIterable=!parameterType.equals(Iterable.class);  if (isDomainTypeVariableReference && parameterMatchesEntityType && isNotIterable) {    return true;  }  return false;} @AT@ 11474 @LENGTH@ 80
---------MOV VariableDeclarationStatement@@boolean isNotIterable=!parameterType.equals(Iterable.class); @TO@ Block@@ThenBody:{  ResolvableType entityType=ResolvableType.forClass(getDomainType());  ResolvableType idClass=ResolvableType.forClass(getIdType());  if (ID_TYPE_NAME.equals(variable.getName()) && parameterType.isAssignableFrom(idClass)) {    return true;  }  Type boundType=variable.getBounds()[0];  String referenceName=boundType instanceof TypeVariable ? boundType.toString() : variable.toString();  boolean isDomainTypeVariableReference=DOMAIN_TYPE_NAME.equals(referenceName);  boolean parameterMatchesEntityType=parameterType.isAssignableFrom(entityType);  boolean isNotIterable=!parameterType.equals(Iterable.class);  if (isDomainTypeVariableReference && parameterMatchesEntityType && isNotIterable) {    return true;  }  return false;} @AT@ 11656 @LENGTH@ 62
---------MOV IfStatement@@if (isDomainTypeVariableReference && parameterMatchesEntityType && isNotIterable) {  return true;} @TO@ Block@@ThenBody:{  ResolvableType entityType=ResolvableType.forClass(getDomainType());  ResolvableType idClass=ResolvableType.forClass(getIdType());  if (ID_TYPE_NAME.equals(variable.getName()) && parameterType.isAssignableFrom(idClass)) {    return true;  }  Type boundType=variable.getBounds()[0];  String referenceName=boundType instanceof TypeVariable ? boundType.toString() : variable.toString();  boolean isDomainTypeVariableReference=DOMAIN_TYPE_NAME.equals(referenceName);  boolean parameterMatchesEntityType=parameterType.isAssignableFrom(entityType);  boolean isNotIterable=!parameterType.equals(Iterable.class);  if (isDomainTypeVariableReference && parameterMatchesEntityType && isNotIterable) {    return true;  }  return false;} @AT@ 11722 @LENGTH@ 103
---------INS ReturnStatement@@BooleanLiteral:false @TO@ Block@@ThenBody:{  ResolvableType entityType=ResolvableType.forClass(getDomainType());  ResolvableType idClass=ResolvableType.forClass(getIdType());  if (ID_TYPE_NAME.equals(variable.getName()) && parameterType.isAssignableFrom(idClass)) {    return true;  }  Type boundType=variable.getBounds()[0];  String referenceName=boundType instanceof TypeVariable ? boundType.toString() : variable.toString();  boolean isDomainTypeVariableReference=DOMAIN_TYPE_NAME.equals(referenceName);  boolean parameterMatchesEntityType=parameterType.isAssignableFrom(entityType);  boolean isNotIterable=!parameterType.equals(Iterable.class);  if (isDomainTypeVariableReference && parameterMatchesEntityType && isNotIterable) {    return true;  }  return false;} @AT@ 12207 @LENGTH@ 13
------------MOV BooleanLiteral@@false @TO@ ReturnStatement@@BooleanLiteral:false @AT@ 11836 @LENGTH@ 5
---DEL ReturnStatement@@BooleanLiteral:false @AT@ 11829 @LENGTH@ 13
---INS EnhancedForStatement@@for (Type type : variable.getBounds()) {  if (ResolvableType.forType(type).isAssignableFrom(parameterType)) {    return true;  }} @TO@ MethodDeclaration@@private, boolean, MethodName:matchesGenericType, TypeVariable<?> variable, Class<?> parameterType,  @AT@ 12228 @LENGTH@ 137
------INS SingleVariableDeclaration@@Type type @TO@ EnhancedForStatement@@for (Type type : variable.getBounds()) {  if (ResolvableType.forType(type).isAssignableFrom(parameterType)) {    return true;  }} @AT@ 12233 @LENGTH@ 9
---------INS SimpleType@@Type @TO@ SingleVariableDeclaration@@Type type @AT@ 12233 @LENGTH@ 4
---------INS SimpleName@@type @TO@ SingleVariableDeclaration@@Type type @AT@ 12238 @LENGTH@ 4
------INS MethodInvocation@@variable.getBounds() @TO@ EnhancedForStatement@@for (Type type : variable.getBounds()) {  if (ResolvableType.forType(type).isAssignableFrom(parameterType)) {    return true;  }} @AT@ 12245 @LENGTH@ 20
---------INS SimpleName@@Name:variable @TO@ MethodInvocation@@variable.getBounds() @AT@ 12245 @LENGTH@ 8
---------INS SimpleName@@MethodName:getBounds:[] @TO@ MethodInvocation@@variable.getBounds() @AT@ 12254 @LENGTH@ 11
------INS IfStatement@@if (ResolvableType.forType(type).isAssignableFrom(parameterType)) {  return true;} @TO@ EnhancedForStatement@@for (Type type : variable.getBounds()) {  if (ResolvableType.forType(type).isAssignableFrom(parameterType)) {    return true;  }} @AT@ 12272 @LENGTH@ 89
---------INS MethodInvocation@@ResolvableType.forType(type).isAssignableFrom(parameterType) @TO@ IfStatement@@if (ResolvableType.forType(type).isAssignableFrom(parameterType)) {  return true;} @AT@ 12276 @LENGTH@ 60
------------INS MethodInvocation@@MethodName:forType:[type] @TO@ MethodInvocation@@ResolvableType.forType(type).isAssignableFrom(parameterType) @AT@ 12276 @LENGTH@ 28
---------------INS SimpleName@@type @TO@ MethodInvocation@@MethodName:forType:[type] @AT@ 12299 @LENGTH@ 4
------------INS SimpleName@@Name:ResolvableType @TO@ MethodInvocation@@ResolvableType.forType(type).isAssignableFrom(parameterType) @AT@ 12276 @LENGTH@ 14
------------INS SimpleName@@MethodName:isAssignableFrom:[parameterType] @TO@ MethodInvocation@@ResolvableType.forType(type).isAssignableFrom(parameterType) @AT@ 12305 @LENGTH@ 31
---------------INS SimpleName@@parameterType @TO@ SimpleName@@MethodName:isAssignableFrom:[parameterType] @AT@ 12322 @LENGTH@ 13
---------INS Block@@ThenBody:{  return true;} @TO@ IfStatement@@if (ResolvableType.forType(type).isAssignableFrom(parameterType)) {  return true;} @AT@ 12338 @LENGTH@ 23
------------INS ReturnStatement@@BooleanLiteral:true @TO@ Block@@ThenBody:{  return true;} @AT@ 12344 @LENGTH@ 12
---------------INS BooleanLiteral@@true @TO@ ReturnStatement@@BooleanLiteral:true @AT@ 12351 @LENGTH@ 4
---INS ReturnStatement@@BooleanLiteral:false @TO@ MethodDeclaration@@private, boolean, MethodName:matchesGenericType, TypeVariable<?> variable, Class<?> parameterType,  @AT@ 12369 @LENGTH@ 13
------INS BooleanLiteral@@false @TO@ ReturnStatement@@BooleanLiteral:false @AT@ 12376 @LENGTH@ 5


INS FieldDeclaration@@private, RedisProcessorsCreator, [redisProcessorsCreator] @TO@ TypeDeclaration@@[@UriEndpoint(scheme="spring-redis",title="Spring Redis",syntax="spring-redist:host:port",consumerClass=RedisConsumer.class,label="spring,nosql"), public]RedisEndpoint, DefaultEndpoint @AT@ 1441 @LENGTH@ 54
---INS Modifier@@private @TO@ FieldDeclaration@@private, RedisProcessorsCreator, [redisProcessorsCreator] @AT@ 1441 @LENGTH@ 7
---INS SimpleType@@RedisProcessorsCreator @TO@ FieldDeclaration@@private, RedisProcessorsCreator, [redisProcessorsCreator] @AT@ 1449 @LENGTH@ 22
---INS VariableDeclarationFragment@@redisProcessorsCreator @TO@ FieldDeclaration@@private, RedisProcessorsCreator, [redisProcessorsCreator] @AT@ 1472 @LENGTH@ 22
------INS SimpleName@@redisProcessorsCreator @TO@ VariableDeclarationFragment@@redisProcessorsCreator @AT@ 1472 @LENGTH@ 22


UPD TypeDeclaration@@[@Configuration, @ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration"), @EnableConfigurationProperties(RubyLanguageConfiguration.class), public]RubyLanguageAutoConfiguration,  @TO@ [@Configuration, @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration"), @EnableConfigurationProperties(RubyLanguageConfiguration.class), public]RubyLanguageAutoConfiguration,  @AT@ 1661 @LENGTH@ 1067
---UPD NormalAnnotation@@@ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1676 @LENGTH@ 79
---UPD NormalAnnotation@@@AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1756 @LENGTH@ 80


UPD FieldDeclaration@@final, ConcurrentHashMap<SecurityDomain,CachedIdentity>, [identities=(ConcurrentHashMap<SecurityDomain,CachedIdentity>)SSLUtils.computeIfAbsent(sslSession,"org.wildfly.elytron.identity-cache",key -> new ConcurrentHashMap())] @TO@ final, Map<SecurityDomain,CachedIdentity>, [identities=SSLUtils.computeIfAbsent(sslSession,"org.wildfly.elytron.identity-cache",key -> new ConcurrentHashMap<>())] @AT@ 7486 @LENGTH@ 228
---UPD ParameterizedType@@ConcurrentHashMap<SecurityDomain,CachedIdentity> @TO@ Map<SecurityDomain,CachedIdentity> @AT@ 7492 @LENGTH@ 49
------UPD SimpleType@@ConcurrentHashMap @TO@ Map @AT@ 7492 @LENGTH@ 17
---UPD VariableDeclarationFragment@@identities=(ConcurrentHashMap<SecurityDomain,CachedIdentity>)SSLUtils.computeIfAbsent(sslSession,"org.wildfly.elytron.identity-cache",key -> new ConcurrentHashMap()) @TO@ identities=SSLUtils.computeIfAbsent(sslSession,"org.wildfly.elytron.identity-cache",key -> new ConcurrentHashMap<>()) @AT@ 7542 @LENGTH@ 171
------DEL CastExpression@@(ConcurrentHashMap<SecurityDomain,CachedIdentity>)SSLUtils.computeIfAbsent(sslSession,"org.wildfly.elytron.identity-cache",key -> new ConcurrentHashMap()) @AT@ 7555 @LENGTH@ 158
---------DEL ParameterizedType@@ConcurrentHashMap<SecurityDomain,CachedIdentity> @AT@ 7556 @LENGTH@ 49
------------DEL SimpleType@@ConcurrentHashMap @AT@ 7556 @LENGTH@ 17
------------DEL SimpleType@@SecurityDomain @AT@ 7574 @LENGTH@ 14
------------DEL SimpleType@@CachedIdentity @AT@ 7590 @LENGTH@ 14
---------DEL MethodInvocation@@SSLUtils.computeIfAbsent(sslSession,"org.wildfly.elytron.identity-cache",key -> new ConcurrentHashMap()) @AT@ 7607 @LENGTH@ 106
------INS MethodInvocation@@SSLUtils.computeIfAbsent(sslSession,"org.wildfly.elytron.identity-cache",key -> new ConcurrentHashMap<>()) @TO@ VariableDeclarationFragment@@identities=(ConcurrentHashMap<SecurityDomain,CachedIdentity>)SSLUtils.computeIfAbsent(sslSession,"org.wildfly.elytron.identity-cache",key -> new ConcurrentHashMap()) @AT@ 7563 @LENGTH@ 108
---------MOV SimpleName@@Name:SSLUtils @TO@ MethodInvocation@@SSLUtils.computeIfAbsent(sslSession,"org.wildfly.elytron.identity-cache",key -> new ConcurrentHashMap<>()) @AT@ 7607 @LENGTH@ 8
---------MOV SimpleName@@MethodName:computeIfAbsent:[sslSession, "org.wildfly.elytron.identity-cache", key -> new ConcurrentHashMap()] @TO@ MethodInvocation@@SSLUtils.computeIfAbsent(sslSession,"org.wildfly.elytron.identity-cache",key -> new ConcurrentHashMap<>()) @AT@ 7616 @LENGTH@ 97


UPD TryStatement@@try {  KeyStore vaultStorage=KeyStore.getInstance(KEYSTORE_TYPE);  vaultStorage.load(new FileInputStream(storeFile),storagePassword);  for (Enumeration<String> storedAliases=vaultStorage.aliases(); storedAliases.hasMoreElements(); ) {    String alias=storedAliases.nextElement();    if (!alias.equalsIgnoreCase(adminKeyAlias)) {      KeyStore.SecretKeyEntry secret=(KeyStore.SecretKeyEntry)vaultStorage.getEntry(alias,adminKeyProtectionParam);      if (secret.getSecretKey() != null) {        storage.put(alias,Entry.deserializeEntry(secret.getSecretKey().getEncoded()));      } else {        log.warn("Stored for alias='" + alias + "' is null.");      }    }  }  adminKey=((KeyStore.SecretKeyEntry)vaultStorage.getEntry(adminKeyAlias,adminKeyProtectionParam)).getSecretKey();  if (adminKey == null) {    throw log.storeAdminKeyNotPresent(storeName,adminKeyAlias);  }} catch (KeyStoreException|IOException|NoSuchAlgorithmException|CertificateException|UnrecoverableEntryException e) {  throw log.cannotReadVaultStorage(storeFile.toString(),storeName,e);} @TO@ try {  KeyStore vaultStorage=KeyStore.getInstance(KEYSTORE_TYPE);  try (FileInputStream stream=new FileInputStream(storeFile)){    vaultStorage.load(stream,storagePassword);  }   for (Enumeration<String> storedAliases=vaultStorage.aliases(); storedAliases.hasMoreElements(); ) {    String alias=storedAliases.nextElement();    if (!alias.equalsIgnoreCase(adminKeyAlias)) {      KeyStore.SecretKeyEntry secret=(KeyStore.SecretKeyEntry)vaultStorage.getEntry(alias,adminKeyProtectionParam);      if (secret.getSecretKey() != null) {        storage.put(alias,Entry.deserializeEntry(secret.getSecretKey().getEncoded()));      } else {        log.warn("Stored for alias='" + alias + "' is null.");      }    }  }  adminKey=((KeyStore.SecretKeyEntry)vaultStorage.getEntry(adminKeyAlias,adminKeyProtectionParam)).getSecretKey();  if (adminKey == null) {    throw log.storeAdminKeyNotPresent(storeName,adminKeyAlias);  }} catch (KeyStoreException|IOException|NoSuchAlgorithmException|CertificateException|UnrecoverableEntryException e) {  throw log.cannotReadVaultStorage(storeFile.toString(),storeName,e);} @AT@ 17577 @LENGTH@ 1349
---DEL ExpressionStatement@@MethodInvocation:vaultStorage.load(new FileInputStream(storeFile),storagePassword) @AT@ 17668 @LENGTH@ 67
------DEL MethodInvocation@@vaultStorage.load(new FileInputStream(storeFile),storagePassword) @AT@ 17668 @LENGTH@ 66
---------DEL SimpleName@@Name:vaultStorage @AT@ 17668 @LENGTH@ 12
---------DEL SimpleName@@MethodName:load:[new FileInputStream(storeFile), storagePassword] @AT@ 17681 @LENGTH@ 53
------------DEL ClassInstanceCreation@@FileInputStream[storeFile] @AT@ 17686 @LENGTH@ 30
---INS TryStatement@@try (FileInputStream stream=new FileInputStream(storeFile)){  vaultStorage.load(stream,storagePassword);}  @TO@ TryStatement@@try {  KeyStore vaultStorage=KeyStore.getInstance(KEYSTORE_TYPE);  vaultStorage.load(new FileInputStream(storeFile),storagePassword);  for (Enumeration<String> storedAliases=vaultStorage.aliases(); storedAliases.hasMoreElements(); ) {    String alias=storedAliases.nextElement();    if (!alias.equalsIgnoreCase(adminKeyAlias)) {      KeyStore.SecretKeyEntry secret=(KeyStore.SecretKeyEntry)vaultStorage.getEntry(alias,adminKeyProtectionParam);      if (secret.getSecretKey() != null) {        storage.put(alias,Entry.deserializeEntry(secret.getSecretKey().getEncoded()));      } else {        log.warn("Stored for alias='" + alias + "' is null.");      }    }  }  adminKey=((KeyStore.SecretKeyEntry)vaultStorage.getEntry(adminKeyAlias,adminKeyProtectionParam)).getSecretKey();  if (adminKey == null) {    throw log.storeAdminKeyNotPresent(storeName,adminKeyAlias);  }} catch (KeyStoreException|IOException|NoSuchAlgorithmException|CertificateException|UnrecoverableEntryException e) {  throw log.cannotReadVaultStorage(storeFile.toString(),storeName,e);} @AT@ 17739 @LENGTH@ 137
------INS VariableDeclarationExpression@@FileInputStream stream=new FileInputStream(storeFile) @TO@ TryStatement@@try (FileInputStream stream=new FileInputStream(storeFile)){  vaultStorage.load(stream,storagePassword);}  @AT@ 17744 @LENGTH@ 55
---------INS SimpleType@@FileInputStream @TO@ VariableDeclarationExpression@@FileInputStream stream=new FileInputStream(storeFile) @AT@ 17744 @LENGTH@ 15
---------INS VariableDeclarationFragment@@stream=new FileInputStream(storeFile) @TO@ VariableDeclarationExpression@@FileInputStream stream=new FileInputStream(storeFile) @AT@ 17760 @LENGTH@ 39
------------INS SimpleName@@stream @TO@ VariableDeclarationFragment@@stream=new FileInputStream(storeFile) @AT@ 17760 @LENGTH@ 6
------------INS ClassInstanceCreation@@FileInputStream[storeFile] @TO@ VariableDeclarationFragment@@stream=new FileInputStream(storeFile) @AT@ 17769 @LENGTH@ 30
---------------MOV New@@new @TO@ ClassInstanceCreation@@FileInputStream[storeFile] @AT@ 17686 @LENGTH@ 3
---------------MOV SimpleType@@FileInputStream @TO@ ClassInstanceCreation@@FileInputStream[storeFile] @AT@ 17690 @LENGTH@ 15
---------------MOV SimpleName@@storeFile @TO@ ClassInstanceCreation@@FileInputStream[storeFile] @AT@ 17706 @LENGTH@ 9
------INS ExpressionStatement@@MethodInvocation:vaultStorage.load(stream,storagePassword) @TO@ TryStatement@@try (FileInputStream stream=new FileInputStream(storeFile)){  vaultStorage.load(stream,storagePassword);}  @AT@ 17819 @LENGTH@ 43
---------INS MethodInvocation@@vaultStorage.load(stream,storagePassword) @TO@ ExpressionStatement@@MethodInvocation:vaultStorage.load(stream,storagePassword) @AT@ 17819 @LENGTH@ 42
------------INS SimpleName@@Name:vaultStorage @TO@ MethodInvocation@@vaultStorage.load(stream,storagePassword) @AT@ 17819 @LENGTH@ 12
------------INS SimpleName@@MethodName:load:[stream, storagePassword] @TO@ MethodInvocation@@vaultStorage.load(stream,storagePassword) @AT@ 17832 @LENGTH@ 29
---------------MOV SimpleName@@storagePassword @TO@ SimpleName@@MethodName:load:[stream, storagePassword] @AT@ 17718 @LENGTH@ 15
---------------INS SimpleName@@stream @TO@ SimpleName@@MethodName:load:[stream, storagePassword] @AT@ 17837 @LENGTH@ 6


DEL MethodDeclaration@@public, Tweet, MethodName:updateStatus, String message, Resource media, StatusDetails details,  @AT@ 6897 @LENGTH@ 759
---DEL Modifier@@public @AT@ 6897 @LENGTH@ 6
---DEL SimpleType@@Tweet @AT@ 6904 @LENGTH@ 5
---DEL SimpleName@@MethodName:updateStatus @AT@ 6910 @LENGTH@ 12
---DEL SingleVariableDeclaration@@String message @AT@ 6923 @LENGTH@ 14
------DEL SimpleType@@String @AT@ 6923 @LENGTH@ 6
------DEL SimpleName@@message @AT@ 6930 @LENGTH@ 7
---DEL SingleVariableDeclaration@@Resource media @AT@ 6939 @LENGTH@ 14
------DEL SimpleType@@Resource @AT@ 6939 @LENGTH@ 8
------DEL SimpleName@@media @AT@ 6948 @LENGTH@ 5
---DEL SingleVariableDeclaration@@StatusDetails details @AT@ 6955 @LENGTH@ 21
------DEL SimpleType@@StatusDetails @AT@ 6955 @LENGTH@ 13
------DEL SimpleName@@details @AT@ 6969 @LENGTH@ 7
---DEL ExpressionStatement@@MethodInvocation:requireUserAuthorization() @AT@ 6982 @LENGTH@ 27
------DEL MethodInvocation@@MethodName:requireUserAuthorization:[] @AT@ 6982 @LENGTH@ 26
---DEL VariableDeclarationStatement@@MultiValueMap<String,Object> tweetParams=new LinkedMultiValueMap<String,Object>(); @AT@ 7012 @LENGTH@ 86
------DEL ParameterizedType@@MultiValueMap<String,Object> @AT@ 7012 @LENGTH@ 29
---------DEL SimpleType@@MultiValueMap @AT@ 7012 @LENGTH@ 13
---------DEL SimpleType@@String @AT@ 7026 @LENGTH@ 6
---------DEL SimpleType@@Object @AT@ 7034 @LENGTH@ 6
------DEL VariableDeclarationFragment@@tweetParams=new LinkedMultiValueMap<String,Object>() @AT@ 7042 @LENGTH@ 55
---------DEL SimpleName@@tweetParams @AT@ 7042 @LENGTH@ 11
---------DEL ClassInstanceCreation@@LinkedMultiValueMap<String,Object>[] @AT@ 7056 @LENGTH@ 41
------------DEL New@@new @AT@ 7056 @LENGTH@ 3
------------DEL ParameterizedType@@LinkedMultiValueMap<String,Object> @AT@ 7060 @LENGTH@ 35
---------------DEL SimpleType@@LinkedMultiValueMap @AT@ 7060 @LENGTH@ 19
---------------DEL SimpleType@@String @AT@ 7080 @LENGTH@ 6
---------------DEL SimpleType@@Object @AT@ 7088 @LENGTH@ 6
---DEL ExpressionStatement@@MethodInvocation:tweetParams.add("status",message) @AT@ 7101 @LENGTH@ 35
------DEL MethodInvocation@@tweetParams.add("status",message) @AT@ 7101 @LENGTH@ 34
---------DEL SimpleName@@Name:tweetParams @AT@ 7101 @LENGTH@ 11
---------DEL SimpleName@@MethodName:add:["status", message] @AT@ 7113 @LENGTH@ 22
------------DEL StringLiteral@@"status" @AT@ 7117 @LENGTH@ 8
------------DEL SimpleName@@message @AT@ 7127 @LENGTH@ 7
---DEL ExpressionStatement@@MethodInvocation:tweetParams.putAll(details.toParameterMap()) @AT@ 7139 @LENGTH@ 45
------DEL MethodInvocation@@tweetParams.putAll(details.toParameterMap()) @AT@ 7139 @LENGTH@ 44
---------DEL SimpleName@@Name:tweetParams @AT@ 7139 @LENGTH@ 11
---------DEL SimpleName@@MethodName:putAll:[details.toParameterMap()] @AT@ 7151 @LENGTH@ 32
------------DEL MethodInvocation@@details.toParameterMap() @AT@ 7158 @LENGTH@ 24
---------------DEL SimpleName@@Name:details @AT@ 7158 @LENGTH@ 7
---------------DEL SimpleName@@MethodName:toParameterMap:[] @AT@ 7166 @LENGTH@ 16
---DEL IfStatement@@if (media != null) {  MultiValueMap<String,Object> uploadParams=new LinkedMultiValueMap<String,Object>();  uploadParams.set("media",media);  MediaUploadResponse response=restTemplate.postForObject("https://upload.twitter.com/1.1/media/upload.json",uploadParams,MediaUploadResponse.class);  tweetParams.set("media_ids",response.getMediaId());} @AT@ 7187 @LENGTH@ 369
------DEL InfixExpression@@media != null @AT@ 7191 @LENGTH@ 13
---------DEL SimpleName@@media @AT@ 7191 @LENGTH@ 5
---------DEL Operator@@!= @AT@ 7196 @LENGTH@ 2
---------DEL NullLiteral@@null @AT@ 7200 @LENGTH@ 4
------DEL Block@@ThenBody:{  MultiValueMap<String,Object> uploadParams=new LinkedMultiValueMap<String,Object>();  uploadParams.set("media",media);  MediaUploadResponse response=restTemplate.postForObject("https://upload.twitter.com/1.1/media/upload.json",uploadParams,MediaUploadResponse.class);  tweetParams.set("media_ids",response.getMediaId());} @AT@ 7206 @LENGTH@ 350
---------DEL VariableDeclarationStatement@@MultiValueMap<String,Object> uploadParams=new LinkedMultiValueMap<String,Object>(); @AT@ 7211 @LENGTH@ 87
------------DEL ParameterizedType@@MultiValueMap<String,Object> @AT@ 7211 @LENGTH@ 29
---------------DEL SimpleType@@MultiValueMap @AT@ 7211 @LENGTH@ 13
---------------DEL SimpleType@@String @AT@ 7225 @LENGTH@ 6
---------------DEL SimpleType@@Object @AT@ 7233 @LENGTH@ 6
------------DEL VariableDeclarationFragment@@uploadParams=new LinkedMultiValueMap<String,Object>() @AT@ 7241 @LENGTH@ 56
---------------DEL SimpleName@@uploadParams @AT@ 7241 @LENGTH@ 12
---------------DEL ClassInstanceCreation@@LinkedMultiValueMap<String,Object>[] @AT@ 7256 @LENGTH@ 41
------------------DEL New@@new @AT@ 7256 @LENGTH@ 3
------------------DEL ParameterizedType@@LinkedMultiValueMap<String,Object> @AT@ 7260 @LENGTH@ 35
---------------------DEL SimpleType@@LinkedMultiValueMap @AT@ 7260 @LENGTH@ 19
---------------------DEL SimpleType@@String @AT@ 7280 @LENGTH@ 6
---------------------DEL SimpleType@@Object @AT@ 7288 @LENGTH@ 6
---------DEL ExpressionStatement@@MethodInvocation:uploadParams.set("media",media) @AT@ 7302 @LENGTH@ 33
------------DEL MethodInvocation@@uploadParams.set("media",media) @AT@ 7302 @LENGTH@ 32
---------------DEL SimpleName@@Name:uploadParams @AT@ 7302 @LENGTH@ 12
---------------DEL SimpleName@@MethodName:set:["media", media] @AT@ 7315 @LENGTH@ 19
------------------DEL StringLiteral@@"media" @AT@ 7319 @LENGTH@ 7
------------------DEL SimpleName@@media @AT@ 7328 @LENGTH@ 5
---------DEL VariableDeclarationStatement@@MediaUploadResponse response=restTemplate.postForObject("https://upload.twitter.com/1.1/media/upload.json",uploadParams,MediaUploadResponse.class); @AT@ 7339 @LENGTH@ 157
------------DEL SimpleType@@MediaUploadResponse @AT@ 7339 @LENGTH@ 19
------------DEL VariableDeclarationFragment@@response=restTemplate.postForObject("https://upload.twitter.com/1.1/media/upload.json",uploadParams,MediaUploadResponse.class) @AT@ 7359 @LENGTH@ 136
---------------DEL SimpleName@@response @AT@ 7359 @LENGTH@ 8
---------------DEL MethodInvocation@@restTemplate.postForObject("https://upload.twitter.com/1.1/media/upload.json",uploadParams,MediaUploadResponse.class) @AT@ 7370 @LENGTH@ 125
------------------DEL SimpleName@@Name:restTemplate @AT@ 7370 @LENGTH@ 12
------------------DEL SimpleName@@MethodName:postForObject:["https://upload.twitter.com/1.1/media/upload.json", uploadParams, MediaUploadResponse.class] @AT@ 7383 @LENGTH@ 112
---------------------DEL StringLiteral@@"https://upload.twitter.com/1.1/media/upload.json" @AT@ 7397 @LENGTH@ 50
---------------------DEL SimpleName@@uploadParams @AT@ 7455 @LENGTH@ 12
---------------------DEL TypeLiteral@@MediaUploadResponse.class @AT@ 7469 @LENGTH@ 25
---------DEL ExpressionStatement@@MethodInvocation:tweetParams.set("media_ids",response.getMediaId()) @AT@ 7500 @LENGTH@ 52
------------DEL MethodInvocation@@tweetParams.set("media_ids",response.getMediaId()) @AT@ 7500 @LENGTH@ 51
---------------DEL SimpleName@@Name:tweetParams @AT@ 7500 @LENGTH@ 11
---------------DEL SimpleName@@MethodName:set:["media_ids", response.getMediaId()] @AT@ 7512 @LENGTH@ 39
------------------DEL StringLiteral@@"media_ids" @AT@ 7516 @LENGTH@ 11
------------------DEL MethodInvocation@@response.getMediaId() @AT@ 7529 @LENGTH@ 21
---------------------DEL SimpleName@@Name:response @AT@ 7529 @LENGTH@ 8
---------------------DEL SimpleName@@MethodName:getMediaId:[] @AT@ 7538 @LENGTH@ 12
---DEL ReturnStatement@@MethodInvocation:restTemplate.postForObject(buildUri("statuses/update.json"),tweetParams,Tweet.class) @AT@ 7559 @LENGTH@ 94
------DEL MethodInvocation@@restTemplate.postForObject(buildUri("statuses/update.json"),tweetParams,Tweet.class) @AT@ 7566 @LENGTH@ 86
---------DEL SimpleName@@Name:restTemplate @AT@ 7566 @LENGTH@ 12
---------DEL SimpleName@@MethodName:postForObject:[buildUri("statuses/update.json"), tweetParams, Tweet.class] @AT@ 7579 @LENGTH@ 73
------------DEL MethodInvocation@@buildUri("statuses/update.json") @AT@ 7593 @LENGTH@ 32
---------------DEL SimpleName@@MethodName:buildUri:["statuses/update.json"] @AT@ 7593 @LENGTH@ 32
------------------DEL StringLiteral@@"statuses/update.json" @AT@ 7602 @LENGTH@ 22
------------DEL SimpleName@@tweetParams @AT@ 7627 @LENGTH@ 11
------------DEL TypeLiteral@@Tweet.class @AT@ 7640 @LENGTH@ 11


UPD TypeDeclaration@@[@Configuration, @ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration"), public]DdbStreamComponentAutoConfiguration,  @TO@ [@Configuration, @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration"), public]DdbStreamComponentAutoConfiguration,  @AT@ 1461 @LENGTH@ 636
---UPD NormalAnnotation@@@ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1476 @LENGTH@ 79
---UPD NormalAnnotation@@@AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1556 @LENGTH@ 80


INS FieldDeclaration@@static, private, long, [sleepTime=60000] @TO@ TypeDeclaration@@[private, static]CleanerThread, Thread @AT@ 10647 @LENGTH@ 38
---INS Modifier@@static @TO@ FieldDeclaration@@static, private, long, [sleepTime=60000] @AT@ 10647 @LENGTH@ 6
---INS Modifier@@private @TO@ FieldDeclaration@@static, private, long, [sleepTime=60000] @AT@ 10654 @LENGTH@ 7
---INS PrimitiveType@@long @TO@ FieldDeclaration@@static, private, long, [sleepTime=60000] @AT@ 10662 @LENGTH@ 4
---INS VariableDeclarationFragment@@sleepTime=60000 @TO@ FieldDeclaration@@static, private, long, [sleepTime=60000] @AT@ 10667 @LENGTH@ 17
------INS SimpleName@@sleepTime @TO@ VariableDeclarationFragment@@sleepTime=60000 @AT@ 10667 @LENGTH@ 9
------INS NumberLiteral@@60000 @TO@ VariableDeclarationFragment@@sleepTime=60000 @AT@ 10679 @LENGTH@ 5


INS ExpressionStatement@@MethodInvocation:Collections.sort(all) @TO@ MethodDeclaration@@public, voidMethodName:SimpleTabCompleter, String[] candidates,  @AT@ 1727 @LENGTH@ 22
---INS MethodInvocation@@Collections.sort(all) @TO@ ExpressionStatement@@MethodInvocation:Collections.sort(all) @AT@ 1727 @LENGTH@ 21
------INS SimpleName@@Name:Collections @TO@ MethodInvocation@@Collections.sort(all) @AT@ 1727 @LENGTH@ 11
------INS SimpleName@@MethodName:sort:[all] @TO@ MethodInvocation@@Collections.sort(all) @AT@ 1739 @LENGTH@ 9
---------INS SimpleName@@all @TO@ SimpleName@@MethodName:sort:[all] @AT@ 1744 @LENGTH@ 3


INS IfStatement@@if (this.isHollow()) {  this.asset=null;} @TO@ MethodDeclaration@@public, void, MethodName:setHollow, boolean hollow,  @AT@ 5441 @LENGTH@ 63
---INS MethodInvocation@@this.isHollow() @TO@ IfStatement@@if (this.isHollow()) {  this.asset=null;} @AT@ 5445 @LENGTH@ 15
------INS ThisExpression@@this @TO@ MethodInvocation@@this.isHollow() @AT@ 5445 @LENGTH@ 4
------INS SimpleName@@MethodName:isHollow:[] @TO@ MethodInvocation@@this.isHollow() @AT@ 5450 @LENGTH@ 10
---INS Block@@ThenBody:{  this.asset=null;} @TO@ IfStatement@@if (this.isHollow()) {  this.asset=null;} @AT@ 5462 @LENGTH@ 42
------INS ExpressionStatement@@Assignment:this.asset=null @TO@ Block@@ThenBody:{  this.asset=null;} @AT@ 5476 @LENGTH@ 18
---------INS Assignment@@this.asset=null @TO@ ExpressionStatement@@Assignment:this.asset=null @AT@ 5476 @LENGTH@ 17
------------INS FieldAccess@@this.asset @TO@ Assignment@@this.asset=null @AT@ 5476 @LENGTH@ 10
---------------INS ThisExpression@@this @TO@ FieldAccess@@this.asset @AT@ 5476 @LENGTH@ 4
---------------INS SimpleName@@asset @TO@ FieldAccess@@this.asset @AT@ 5481 @LENGTH@ 5
------------INS Operator@@= @TO@ Assignment@@this.asset=null @AT@ 5486 @LENGTH@ 1
------------INS NullLiteral@@null @TO@ Assignment@@this.asset=null @AT@ 5489 @LENGTH@ 4


UPD TypeDeclaration@@[@Configuration, @ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration"), @EnableConfigurationProperties(ElsqlComponentConfiguration.class), public]ElsqlComponentAutoConfiguration,  @TO@ [@Configuration, @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration"), @EnableConfigurationProperties(ElsqlComponentConfiguration.class), public]ElsqlComponentAutoConfiguration,  @AT@ 1622 @LENGTH@ 2048
---UPD NormalAnnotation@@@ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1637 @LENGTH@ 79
---UPD NormalAnnotation@@@AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1717 @LENGTH@ 80


UPD VariableDeclarationStatement@@PartialScanWork scanWork=new PartialScanWork(inputPaths); @TO@ PartialScanWork scanWork=new PartialScanWork(inputPaths,Utilities.getTableDesc(tableScan.getConf().getTableMetadata())); @AT@ 7793 @LENGTH@ 59
---UPD VariableDeclarationFragment@@scanWork=new PartialScanWork(inputPaths) @TO@ scanWork=new PartialScanWork(inputPaths,Utilities.getTableDesc(tableScan.getConf().getTableMetadata())) @AT@ 7809 @LENGTH@ 42
------UPD ClassInstanceCreation@@PartialScanWork[inputPaths] @TO@ PartialScanWork[inputPaths, Utilities.getTableDesc(tableScan.getConf().getTableMetadata())] @AT@ 7820 @LENGTH@ 31
---------INS MethodInvocation@@Utilities.getTableDesc(tableScan.getConf().getTableMetadata()) @TO@ ClassInstanceCreation@@PartialScanWork[inputPaths] @AT@ 7909 @LENGTH@ 62
------------INS SimpleName@@Name:Utilities @TO@ MethodInvocation@@Utilities.getTableDesc(tableScan.getConf().getTableMetadata()) @AT@ 7909 @LENGTH@ 9
------------INS SimpleName@@MethodName:getTableDesc:[tableScan.getConf().getTableMetadata()] @TO@ MethodInvocation@@Utilities.getTableDesc(tableScan.getConf().getTableMetadata()) @AT@ 7919 @LENGTH@ 52
---------------INS MethodInvocation@@tableScan.getConf().getTableMetadata() @TO@ SimpleName@@MethodName:getTableDesc:[tableScan.getConf().getTableMetadata()] @AT@ 7932 @LENGTH@ 38
------------------INS MethodInvocation@@MethodName:getConf:[] @TO@ MethodInvocation@@tableScan.getConf().getTableMetadata() @AT@ 7932 @LENGTH@ 19
------------------INS SimpleName@@Name:tableScan @TO@ MethodInvocation@@tableScan.getConf().getTableMetadata() @AT@ 7932 @LENGTH@ 9
------------------INS SimpleName@@MethodName:getTableMetadata:[] @TO@ MethodInvocation@@tableScan.getConf().getTableMetadata() @AT@ 7952 @LENGTH@ 18


UPD ExpressionStatement@@Assignment:interfaceType=new JavaType(String.format("%s.%sRepository",domainType.getPackage(),domainType.getSimpleTypeName()),"") @TO@ Assignment:interfaceType=new JavaType(String.format("%s.repository.%sRepository",getProjectOperations().getFocusedTopLevelPackage(),domainType.getSimpleTypeName()),"") @AT@ 5116 @LENGTH@ 148
---UPD Assignment@@interfaceType=new JavaType(String.format("%s.%sRepository",domainType.getPackage(),domainType.getSimpleTypeName()),"") @TO@ interfaceType=new JavaType(String.format("%s.repository.%sRepository",getProjectOperations().getFocusedTopLevelPackage(),domainType.getSimpleTypeName()),"") @AT@ 5116 @LENGTH@ 147
------UPD ClassInstanceCreation@@JavaType[String.format("%s.%sRepository",domainType.getPackage(),domainType.getSimpleTypeName()), ""] @TO@ JavaType[String.format("%s.repository.%sRepository",getProjectOperations().getFocusedTopLevelPackage(),domainType.getSimpleTypeName()), ""] @AT@ 5142 @LENGTH@ 121
---------UPD MethodInvocation@@String.format("%s.%sRepository",domainType.getPackage(),domainType.getSimpleTypeName()) @TO@ String.format("%s.repository.%sRepository",getProjectOperations().getFocusedTopLevelPackage(),domainType.getSimpleTypeName()) @AT@ 5155 @LENGTH@ 103
------------UPD SimpleName@@MethodName:format:["%s.%sRepository", domainType.getPackage(), domainType.getSimpleTypeName()] @TO@ MethodName:format:["%s.repository.%sRepository", getProjectOperations().getFocusedTopLevelPackage(), domainType.getSimpleTypeName()] @AT@ 5162 @LENGTH@ 96
---------------UPD StringLiteral@@"%s.%sRepository" @TO@ "%s.repository.%sRepository" @AT@ 5169 @LENGTH@ 17
---------------UPD MethodInvocation@@domainType.getPackage() @TO@ getProjectOperations().getFocusedTopLevelPackage() @AT@ 5188 @LENGTH@ 23
------------------DEL SimpleName@@Name:domainType @AT@ 5188 @LENGTH@ 10
------------------INS MethodInvocation@@MethodName:getProjectOperations:[] @TO@ MethodInvocation@@domainType.getPackage() @AT@ 5199 @LENGTH@ 22
------------------UPD SimpleName@@MethodName:getPackage:[] @TO@ MethodName:getFocusedTopLevelPackage:[] @AT@ 5199 @LENGTH@ 12


INS FieldDeclaration@@Metamodel, [metamodel] @TO@ TypeDeclaration@@[@RunWith(MockitoJUnitRunner.class), public]JpaRepositoryFactoryUnitTests,  @AT@ 2195 @LENGTH@ 20
---INS SimpleType@@Metamodel @TO@ FieldDeclaration@@Metamodel, [metamodel] @AT@ 2195 @LENGTH@ 9
---INS VariableDeclarationFragment@@metamodel @TO@ FieldDeclaration@@Metamodel, [metamodel] @AT@ 2205 @LENGTH@ 9
------INS SimpleName@@metamodel @TO@ VariableDeclarationFragment@@metamodel @AT@ 2205 @LENGTH@ 9


UPD MethodDeclaration@@private, void, MethodName:processReply, Exchange exchange, AsyncCallback callback, Object value, DatabaseReference ref,  @TO@ public, boolean, MethodName:process, Exchange exchange, AsyncCallback callback,  @AT@ 2636 @LENGTH@ 479
---MOV VariableDeclarationStatement@@final Message in=exchange.getIn(); @TO@ MethodDeclaration@@private, void, MethodName:processReply, Exchange exchange, AsyncCallback callback, Object value, DatabaseReference ref,  @AT@ 1897 @LENGTH@ 36
---MOV VariableDeclarationStatement@@String firebaseKey=(String)in.getHeader(endpoint.getKeyName()); @TO@ MethodDeclaration@@private, void, MethodName:processReply, Exchange exchange, AsyncCallback callback, Object value, DatabaseReference ref,  @AT@ 1989 @LENGTH@ 66
---MOV VariableDeclarationStatement@@Object value=in.getBody(); @TO@ MethodDeclaration@@private, void, MethodName:processReply, Exchange exchange, AsyncCallback callback, Object value, DatabaseReference ref,  @AT@ 2064 @LENGTH@ 28
---MOV VariableDeclarationStatement@@DatabaseReference ref=FirebaseDatabase.getInstance(endpoint.getFirebaseApp()).getReference(rootReference).child(firebaseKey); @TO@ MethodDeclaration@@private, void, MethodName:processReply, Exchange exchange, AsyncCallback callback, Object value, DatabaseReference ref,  @AT@ 2101 @LENGTH@ 161
---UPD Modifier@@private @TO@ public @AT@ 2636 @LENGTH@ 7
---UPD PrimitiveType@@void @TO@ boolean @AT@ 2644 @LENGTH@ 4
---UPD SimpleName@@MethodName:processReply @TO@ MethodName:process @AT@ 2649 @LENGTH@ 12
---DEL SingleVariableDeclaration@@Object value @AT@ 2705 @LENGTH@ 12
------DEL SimpleType@@Object @AT@ 2705 @LENGTH@ 6
------DEL SimpleName@@value @AT@ 2712 @LENGTH@ 5
---DEL SingleVariableDeclaration@@DatabaseReference ref @AT@ 2719 @LENGTH@ 21
------DEL SimpleType@@DatabaseReference @AT@ 2719 @LENGTH@ 17
------DEL SimpleName@@ref @AT@ 2737 @LENGTH@ 3
---UPD ExpressionStatement@@MethodInvocation:ref.setValue(value,(DatabaseError databaseError,DatabaseReference databaseReference) -> {
  if (databaseError != null) {
    exchange.setException(new DatabaseErrorException(databaseError));
  }
 else {
    exchange.getOut().setBody(databaseReference);
  }
  callback.done(false);
}
) @TO@ MethodInvocation:ref.setValue(value,(DatabaseError databaseError,DatabaseReference databaseReference) -> {
  if (databaseError != null) {
    exchange.setException(new DatabaseErrorException(databaseError));
    exchange.getOut().setFault(true);
  }
 else {
    exchange.getOut().setBody(databaseReference);
  }
  callback.done(endpoint.isAsync());
}
) @AT@ 2752 @LENGTH@ 357
------UPD MethodInvocation@@ref.setValue(value,(DatabaseError databaseError,DatabaseReference databaseReference) -> {
  if (databaseError != null) {
    exchange.setException(new DatabaseErrorException(databaseError));
  }
 else {
    exchange.getOut().setBody(databaseReference);
  }
  callback.done(false);
}
) @TO@ ref.setValue(value,(DatabaseError databaseError,DatabaseReference databaseReference) -> {
  if (databaseError != null) {
    exchange.setException(new DatabaseErrorException(databaseError));
    exchange.getOut().setFault(true);
  }
 else {
    exchange.getOut().setBody(databaseReference);
  }
  callback.done(endpoint.isAsync());
}
) @AT@ 2752 @LENGTH@ 356
---------UPD SimpleName@@MethodName:setValue:[value, (DatabaseError databaseError,DatabaseReference databaseReference) -> {
  if (databaseError != null) {
    exchange.setException(new DatabaseErrorException(databaseError));
  }
 else {
    exchange.getOut().setBody(databaseReference);
  }
  callback.done(false);
}
] @TO@ MethodName:setValue:[value, (DatabaseError databaseError,DatabaseReference databaseReference) -> {
  if (databaseError != null) {
    exchange.setException(new DatabaseErrorException(databaseError));
    exchange.getOut().setFault(true);
  }
 else {
    exchange.getOut().setBody(databaseReference);
  }
  callback.done(endpoint.isAsync());
}
] @AT@ 2756 @LENGTH@ 352
------------UPD LambdaExpression@@(DatabaseError databaseError,DatabaseReference databaseReference) -> {
  if (databaseError != null) {
    exchange.setException(new DatabaseErrorException(databaseError));
  }
 else {
    exchange.getOut().setBody(databaseReference);
  }
  callback.done(false);
}
 @TO@ (DatabaseError databaseError,DatabaseReference databaseReference) -> {
  if (databaseError != null) {
    exchange.setException(new DatabaseErrorException(databaseError));
    exchange.getOut().setFault(true);
  }
 else {
    exchange.getOut().setBody(databaseReference);
  }
  callback.done(endpoint.isAsync());
}
 @AT@ 2772 @LENGTH@ 335
---------------UPD IfStatement@@if (databaseError != null) {  exchange.setException(new DatabaseErrorException(databaseError));} else {  exchange.getOut().setBody(databaseReference);} @TO@ if (databaseError != null) {  exchange.setException(new DatabaseErrorException(databaseError));  exchange.getOut().setFault(true);} else {  exchange.getOut().setBody(databaseReference);} @AT@ 2856 @LENGTH@ 207
------------------UPD Block@@ThenBody:{  exchange.setException(new DatabaseErrorException(databaseError));} @TO@ ThenBody:{  exchange.setException(new DatabaseErrorException(databaseError));  exchange.getOut().setFault(true);} @AT@ 2883 @LENGTH@ 97
---------------------INS ExpressionStatement@@MethodInvocation:exchange.getOut().setFault(true) @TO@ Block@@ThenBody:{  exchange.setException(new DatabaseErrorException(databaseError));} @AT@ 3291 @LENGTH@ 33
------------------------INS MethodInvocation@@exchange.getOut().setFault(true) @TO@ ExpressionStatement@@MethodInvocation:exchange.getOut().setFault(true) @AT@ 3291 @LENGTH@ 32
---------------------------INS MethodInvocation@@MethodName:getOut:[] @TO@ MethodInvocation@@exchange.getOut().setFault(true) @AT@ 3291 @LENGTH@ 17
---------------------------INS SimpleName@@Name:exchange @TO@ MethodInvocation@@exchange.getOut().setFault(true) @AT@ 3291 @LENGTH@ 8
---------------------------INS SimpleName@@MethodName:setFault:[true] @TO@ MethodInvocation@@exchange.getOut().setFault(true) @AT@ 3309 @LENGTH@ 14
------------------------------INS BooleanLiteral@@true @TO@ SimpleName@@MethodName:setFault:[true] @AT@ 3318 @LENGTH@ 4
---------------UPD ExpressionStatement@@MethodInvocation:callback.done(false) @TO@ MethodInvocation:callback.done(endpoint.isAsync()) @AT@ 3076 @LENGTH@ 21
------------------UPD MethodInvocation@@callback.done(false) @TO@ callback.done(endpoint.isAsync()) @AT@ 3076 @LENGTH@ 20
---------------------UPD SimpleName@@MethodName:done:[false] @TO@ MethodName:done:[endpoint.isAsync()] @AT@ 3085 @LENGTH@ 11
------------------------DEL BooleanLiteral@@false @AT@ 3090 @LENGTH@ 5
------------------------INS MethodInvocation@@endpoint.isAsync() @TO@ SimpleName@@MethodName:done:[false] @AT@ 3448 @LENGTH@ 18
---------------------------INS SimpleName@@Name:endpoint @TO@ MethodInvocation@@endpoint.isAsync() @AT@ 3448 @LENGTH@ 8
---------------------------INS SimpleName@@MethodName:isAsync:[] @TO@ MethodInvocation@@endpoint.isAsync() @AT@ 3457 @LENGTH@ 9
---INS ReturnStatement@@MethodInvocation:endpoint.isAsync() @TO@ MethodDeclaration@@private, void, MethodName:processReply, Exchange exchange, AsyncCallback callback, Object value, DatabaseReference ref,  @AT@ 3489 @LENGTH@ 26
------INS MethodInvocation@@endpoint.isAsync() @TO@ ReturnStatement@@MethodInvocation:endpoint.isAsync() @AT@ 3496 @LENGTH@ 18
---------INS SimpleName@@Name:endpoint @TO@ MethodInvocation@@endpoint.isAsync() @AT@ 3496 @LENGTH@ 8
---------INS SimpleName@@MethodName:isAsync:[] @TO@ MethodInvocation@@endpoint.isAsync() @AT@ 3505 @LENGTH@ 9


UPD ExpressionStatement@@MethodInvocation:controllerAnnotation.addEnumAttribute("type",new EnumDetails(RooJavaType.ROO_ENUM_CONTROLLERTYPE,new JavaSymbolName("SEARCH"))) @TO@ MethodInvocation:controllerAnnotation.addEnumAttribute("type",new EnumDetails(RooJavaType.ROO_ENUM_CONTROLLER_TYPE,new JavaSymbolName("SEARCH"))) @AT@ 12405 @LENGTH@ 141
---UPD MethodInvocation@@controllerAnnotation.addEnumAttribute("type",new EnumDetails(RooJavaType.ROO_ENUM_CONTROLLERTYPE,new JavaSymbolName("SEARCH"))) @TO@ controllerAnnotation.addEnumAttribute("type",new EnumDetails(RooJavaType.ROO_ENUM_CONTROLLER_TYPE,new JavaSymbolName("SEARCH"))) @AT@ 12405 @LENGTH@ 140
------UPD SimpleName@@MethodName:addEnumAttribute:["type", new EnumDetails(RooJavaType.ROO_ENUM_CONTROLLERTYPE,new JavaSymbolName("SEARCH"))] @TO@ MethodName:addEnumAttribute:["type", new EnumDetails(RooJavaType.ROO_ENUM_CONTROLLER_TYPE,new JavaSymbolName("SEARCH"))] @AT@ 12426 @LENGTH@ 119
---------UPD ClassInstanceCreation@@EnumDetails[RooJavaType.ROO_ENUM_CONTROLLERTYPE, new JavaSymbolName("SEARCH")] @TO@ EnumDetails[RooJavaType.ROO_ENUM_CONTROLLER_TYPE, new JavaSymbolName("SEARCH")] @AT@ 12451 @LENGTH@ 93
------------UPD QualifiedName@@RooJavaType.ROO_ENUM_CONTROLLERTYPE @TO@ RooJavaType.ROO_ENUM_CONTROLLER_TYPE @AT@ 12478 @LENGTH@ 35
---------------UPD SimpleName@@ROO_ENUM_CONTROLLERTYPE @TO@ ROO_ENUM_CONTROLLER_TYPE @AT@ 12490 @LENGTH@ 23


DEL MethodDeclaration@@public, void, MethodName:setAfterReceivePostProcessor, MessagePostProcessor... afterReceivePostProcessors,  @AT@ 21817 @LENGTH@ 158
---DEL Modifier@@public @AT@ 21817 @LENGTH@ 6
---DEL PrimitiveType@@void @AT@ 21824 @LENGTH@ 4
---DEL SimpleName@@MethodName:setAfterReceivePostProcessor @AT@ 21829 @LENGTH@ 28
---DEL SingleVariableDeclaration@@MessagePostProcessor... afterReceivePostProcessors @AT@ 21858 @LENGTH@ 50
------DEL SimpleType@@MessagePostProcessor @AT@ 21858 @LENGTH@ 20
------DEL SimpleName@@afterReceivePostProcessors @AT@ 21882 @LENGTH@ 26
---DEL ExpressionStatement@@MethodInvocation:setAfterReceivePostProcessors(afterReceivePostProcessors) @AT@ 21914 @LENGTH@ 58
------DEL MethodInvocation@@setAfterReceivePostProcessors(afterReceivePostProcessors) @AT@ 21914 @LENGTH@ 57
---------DEL SimpleName@@MethodName:setAfterReceivePostProcessors:[afterReceivePostProcessors] @AT@ 21914 @LENGTH@ 57
------------DEL SimpleName@@afterReceivePostProcessors @AT@ 21944 @LENGTH@ 26


UPD TypeDeclaration@@[@Configuration, @ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration"), @EnableConfigurationProperties(DigitalSignatureComponentConfiguration.class), public]DigitalSignatureComponentAutoConfiguration,  @TO@ [@Configuration, @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration"), @EnableConfigurationProperties(DigitalSignatureComponentConfiguration.class), public]DigitalSignatureComponentAutoConfiguration,  @AT@ 1635 @LENGTH@ 2162
---UPD NormalAnnotation@@@ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1650 @LENGTH@ 79
---UPD NormalAnnotation@@@AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1730 @LENGTH@ 80


DEL ReturnStatement@@NullLiteral:null @AT@ 8755 @LENGTH@ 12
---DEL NullLiteral@@null @AT@ 8762 @LENGTH@ 4


UPD MethodDeclaration@@public, voidMethodName:SampleDataFormat, boolean fallback,  @TO@ voidMethodName:SampleDataFormat, boolean fallback,  @AT@ 2792 @LENGTH@ 91
---DEL Modifier@@public @AT@ 2792 @LENGTH@ 6


UPD TypeDeclaration@@[@Configuration, @ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration"), @EnableConfigurationProperties(SlackComponentConfiguration.class), public]SlackComponentAutoConfiguration,  @TO@ [@Configuration, @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration"), @EnableConfigurationProperties(SlackComponentConfiguration.class), public]SlackComponentAutoConfiguration,  @AT@ 1622 @LENGTH@ 2048
---UPD NormalAnnotation@@@ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1637 @LENGTH@ 79
---UPD NormalAnnotation@@@AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1717 @LENGTH@ 80


UPD TypeDeclaration@@[@Configuration, @ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration"), @EnableConfigurationProperties(XmlRpcDataFormatConfiguration.class), public]XmlRpcDataFormatAutoConfiguration,  @TO@ [@Configuration, @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration"), @EnableConfigurationProperties(XmlRpcDataFormatConfiguration.class), public]XmlRpcDataFormatAutoConfiguration,  @AT@ 1671 @LENGTH@ 1126
---UPD NormalAnnotation@@@ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1686 @LENGTH@ 79
---UPD NormalAnnotation@@@AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1766 @LENGTH@ 80


UPD ExpressionStatement@@MethodInvocation:assertThat(AuthorityUtils.authorityListToSet(token.getAuthorities()).contains("ROLE_TWO")) @TO@ MethodInvocation:assertThat(AuthorityUtils.authorityListToSet(token.getAuthorities())).contains("ROLE_TWO") @AT@ 2925 @LENGTH@ 96
---UPD MethodInvocation@@assertThat(AuthorityUtils.authorityListToSet(token.getAuthorities()).contains("ROLE_TWO")) @TO@ assertThat(AuthorityUtils.authorityListToSet(token.getAuthorities())).contains("ROLE_TWO") @AT@ 2925 @LENGTH@ 95
------INS MethodInvocation@@MethodName:assertThat:[AuthorityUtils.authorityListToSet(token.getAuthorities())] @TO@ MethodInvocation@@assertThat(AuthorityUtils.authorityListToSet(token.getAuthorities()).contains("ROLE_TWO")) @AT@ 2920 @LENGTH@ 69
---------INS MethodInvocation@@AuthorityUtils.authorityListToSet(token.getAuthorities()) @TO@ MethodInvocation@@MethodName:assertThat:[AuthorityUtils.authorityListToSet(token.getAuthorities())] @AT@ 2931 @LENGTH@ 57
------------MOV SimpleName@@Name:AuthorityUtils @TO@ MethodInvocation@@AuthorityUtils.authorityListToSet(token.getAuthorities()) @AT@ 2936 @LENGTH@ 14
------------INS SimpleName@@MethodName:authorityListToSet:[token.getAuthorities()] @TO@ MethodInvocation@@AuthorityUtils.authorityListToSet(token.getAuthorities()) @AT@ 2946 @LENGTH@ 42
---------------INS MethodInvocation@@token.getAuthorities() @TO@ SimpleName@@MethodName:authorityListToSet:[token.getAuthorities()] @AT@ 2965 @LENGTH@ 22
------------------MOV SimpleName@@Name:token @TO@ MethodInvocation@@token.getAuthorities() @AT@ 2970 @LENGTH@ 5
------------------MOV SimpleName@@MethodName:getAuthorities:[] @TO@ MethodInvocation@@token.getAuthorities() @AT@ 2976 @LENGTH@ 16
------DEL SimpleName@@MethodName:assertThat:[AuthorityUtils.authorityListToSet(token.getAuthorities()).contains("ROLE_TWO")] @AT@ 2925 @LENGTH@ 95
---------DEL MethodInvocation@@AuthorityUtils.authorityListToSet(token.getAuthorities()).contains("ROLE_TWO") @AT@ 2936 @LENGTH@ 83
------------DEL MethodInvocation@@MethodName:authorityListToSet:[token.getAuthorities()] @AT@ 2936 @LENGTH@ 57
---------------DEL MethodInvocation@@token.getAuthorities() @AT@ 2970 @LENGTH@ 22
------MOV SimpleName@@MethodName:contains:["ROLE_TWO"] @TO@ MethodInvocation@@assertThat(AuthorityUtils.authorityListToSet(token.getAuthorities()).contains("ROLE_TWO")) @AT@ 2994 @LENGTH@ 25


UPD TypeDeclaration@@[@Configuration, @ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration"), public]SpringWebserviceComponentAutoConfiguration,  @TO@ [@Configuration, @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration"), public]SpringWebserviceComponentAutoConfiguration,  @AT@ 1460 @LENGTH@ 674
---UPD NormalAnnotation@@@ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1475 @LENGTH@ 79
---UPD NormalAnnotation@@@AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1555 @LENGTH@ 80


UPD ReturnStatement@@ClassInstanceCreation:new DelegatingTransactionManager(transactionManager()) @TO@ ClassInstanceCreation:new ExtendedTransactionsIT.DelegatingTransactionManager(transactionManager()) @AT@ 1827 @LENGTH@ 62
---UPD ClassInstanceCreation@@DelegatingTransactionManager[transactionManager()] @TO@ ExtendedTransactionsIT.DelegatingTransactionManager[transactionManager()] @AT@ 1834 @LENGTH@ 54
------UPD SimpleType@@DelegatingTransactionManager @TO@ ExtendedTransactionsIT.DelegatingTransactionManager @AT@ 1838 @LENGTH@ 28


UPD TypeDeclaration@@[@Configuration, @ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration"), @EnableConfigurationProperties(YammerComponentConfiguration.class), public]YammerComponentAutoConfiguration,  @TO@ [@Configuration, @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration"), @EnableConfigurationProperties(YammerComponentConfiguration.class), public]YammerComponentAutoConfiguration,  @AT@ 1625 @LENGTH@ 2057
---UPD NormalAnnotation@@@ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1640 @LENGTH@ 79
---UPD NormalAnnotation@@@AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1720 @LENGTH@ 80


UPD TypeDeclaration@@[@Configuration, @ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration"), public]EhcacheComponentAutoConfiguration,  @TO@ [@Configuration, @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration"), public]EhcacheComponentAutoConfiguration,  @AT@ 1447 @LENGTH@ 617
---UPD NormalAnnotation@@@ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1462 @LENGTH@ 79
---UPD NormalAnnotation@@@AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1542 @LENGTH@ 80


UPD TypeDeclaration@@[@Configuration, @ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration"), @EnableConfigurationProperties(ElasticsearchComponentConfiguration.class), public]ElasticsearchComponentAutoConfiguration,  @TO@ [@Configuration, @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration"), @EnableConfigurationProperties(ElasticsearchComponentConfiguration.class), public]ElasticsearchComponentAutoConfiguration,  @AT@ 1646 @LENGTH@ 2133
---UPD NormalAnnotation@@@ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1661 @LENGTH@ 79
---UPD NormalAnnotation@@@AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1741 @LENGTH@ 80


UPD TypeDeclaration@@[@Configuration, @ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration"), public]GoraComponentAutoConfiguration,  @TO@ [@Configuration, @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration"), public]GoraComponentAutoConfiguration,  @AT@ 1438 @LENGTH@ 596
---UPD NormalAnnotation@@@ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1453 @LENGTH@ 79
---UPD NormalAnnotation@@@AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1533 @LENGTH@ 80


UPD TypeDeclaration@@[@Configuration, @ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration"), public]SWFComponentAutoConfiguration,  @TO@ [@Configuration, @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration"), public]SWFComponentAutoConfiguration,  @AT@ 1443 @LENGTH@ 593
---UPD NormalAnnotation@@@ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1458 @LENGTH@ 79
---UPD NormalAnnotation@@@AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1538 @LENGTH@ 80


UPD TypeDeclaration@@[@Configuration, @ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration"), @EnableConfigurationProperties(GoogleDriveComponentConfiguration.class), public]GoogleDriveComponentAutoConfiguration,  @TO@ [@Configuration, @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration"), @EnableConfigurationProperties(GoogleDriveComponentConfiguration.class), public]GoogleDriveComponentAutoConfiguration,  @AT@ 1642 @LENGTH@ 2116
---UPD NormalAnnotation@@@ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1657 @LENGTH@ 79
---UPD NormalAnnotation@@@AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1737 @LENGTH@ 80


UPD MethodDeclaration@@public, List<?>, MethodName:getAllOf, final Serializable keyspace,  @TO@ public, List<?>, MethodName:getAllOf, final Serializable keyspace, int offset, int rows,  @AT@ 12047 @LENGTH@ 471
---INS SingleVariableDeclaration@@int offset @TO@ MethodDeclaration@@public, List<?>, MethodName:getAllOf, final Serializable keyspace,  @AT@ 12152 @LENGTH@ 10
------INS PrimitiveType@@int @TO@ SingleVariableDeclaration@@int offset @AT@ 12152 @LENGTH@ 3
------INS SimpleName@@offset @TO@ SingleVariableDeclaration@@int offset @AT@ 12156 @LENGTH@ 6
---INS SingleVariableDeclaration@@int rows @TO@ MethodDeclaration@@public, List<?>, MethodName:getAllOf, final Serializable keyspace,  @AT@ 12164 @LENGTH@ 8
------INS PrimitiveType@@int @TO@ SingleVariableDeclaration@@int rows @AT@ 12164 @LENGTH@ 3
------INS SimpleName@@rows @TO@ SingleVariableDeclaration@@int rows @AT@ 12168 @LENGTH@ 4
---UPD EnhancedForStatement@@for (byte[] key : ids) {  result.add(get(key,keyspace));} @TO@ for (byte[] key : keys) {  result.add(get(key,keyspace));} @AT@ 12435 @LENGTH@ 63
------UPD SimpleName@@ids @TO@ keys @AT@ 12453 @LENGTH@ 3
---INS VariableDeclarationStatement@@List<byte[]> keys=new ArrayList<byte[]>(ids); @TO@ MethodDeclaration@@public, List<?>, MethodName:getAllOf, final Serializable keyspace,  @AT@ 12510 @LENGTH@ 47
------INS ParameterizedType@@List<byte[]> @TO@ VariableDeclarationStatement@@List<byte[]> keys=new ArrayList<byte[]>(ids); @AT@ 12510 @LENGTH@ 12
---------INS SimpleType@@List @TO@ ParameterizedType@@List<byte[]> @AT@ 12510 @LENGTH@ 4
---------INS ArrayType@@byte[] @TO@ ParameterizedType@@List<byte[]> @AT@ 12515 @LENGTH@ 6
------------INS PrimitiveType@@byte @TO@ ArrayType@@byte[] @AT@ 12515 @LENGTH@ 4
------INS VariableDeclarationFragment@@keys=new ArrayList<byte[]>(ids) @TO@ VariableDeclarationStatement@@List<byte[]> keys=new ArrayList<byte[]>(ids); @AT@ 12523 @LENGTH@ 33
---------INS SimpleName@@keys @TO@ VariableDeclarationFragment@@keys=new ArrayList<byte[]>(ids) @AT@ 12523 @LENGTH@ 4
---------INS ClassInstanceCreation@@ArrayList<byte[]>[ids] @TO@ VariableDeclarationFragment@@keys=new ArrayList<byte[]>(ids) @AT@ 12530 @LENGTH@ 26
------------INS New@@new @TO@ ClassInstanceCreation@@ArrayList<byte[]>[ids] @AT@ 12530 @LENGTH@ 3
------------INS ParameterizedType@@ArrayList<byte[]> @TO@ ClassInstanceCreation@@ArrayList<byte[]>[ids] @AT@ 12534 @LENGTH@ 17
---------------INS SimpleType@@ArrayList @TO@ ParameterizedType@@ArrayList<byte[]> @AT@ 12534 @LENGTH@ 9
---------------INS ArrayType@@byte[] @TO@ ParameterizedType@@ArrayList<byte[]> @AT@ 12544 @LENGTH@ 6
------------------INS PrimitiveType@@byte @TO@ ArrayType@@byte[] @AT@ 12544 @LENGTH@ 4
------------INS SimpleName@@ids @TO@ ClassInstanceCreation@@ArrayList<byte[]>[ids] @AT@ 12552 @LENGTH@ 3
---INS ExpressionStatement@@Assignment:offset=Math.max(0,offset) @TO@ MethodDeclaration@@public, List<?>, MethodName:getAllOf, final Serializable keyspace,  @AT@ 12561 @LENGTH@ 29
------INS Assignment@@offset=Math.max(0,offset) @TO@ ExpressionStatement@@Assignment:offset=Math.max(0,offset) @AT@ 12561 @LENGTH@ 28
---------INS SimpleName@@offset @TO@ Assignment@@offset=Math.max(0,offset) @AT@ 12561 @LENGTH@ 6
---------INS Operator@@= @TO@ Assignment@@offset=Math.max(0,offset) @AT@ 12567 @LENGTH@ 1
---------INS MethodInvocation@@Math.max(0,offset) @TO@ Assignment@@offset=Math.max(0,offset) @AT@ 12570 @LENGTH@ 19
------------INS SimpleName@@Name:Math @TO@ MethodInvocation@@Math.max(0,offset) @AT@ 12570 @LENGTH@ 4
------------INS SimpleName@@MethodName:max:[0, offset] @TO@ MethodInvocation@@Math.max(0,offset) @AT@ 12575 @LENGTH@ 14
---------------INS NumberLiteral@@0 @TO@ SimpleName@@MethodName:max:[0, offset] @AT@ 12579 @LENGTH@ 1
---------------INS SimpleName@@offset @TO@ SimpleName@@MethodName:max:[0, offset] @AT@ 12582 @LENGTH@ 6
---INS IfStatement@@if (offset >= 0 && rows > 0) {  keys=keys.subList(offset,Math.min(offset + rows,keys.size()));} @TO@ MethodDeclaration@@public, List<?>, MethodName:getAllOf, final Serializable keyspace,  @AT@ 12593 @LENGTH@ 104
------INS InfixExpression@@offset >= 0 && rows > 0 @TO@ IfStatement@@if (offset >= 0 && rows > 0) {  keys=keys.subList(offset,Math.min(offset + rows,keys.size()));} @AT@ 12597 @LENGTH@ 23
---------INS InfixExpression@@offset >= 0 @TO@ InfixExpression@@offset >= 0 && rows > 0 @AT@ 12597 @LENGTH@ 11
------------INS SimpleName@@offset @TO@ InfixExpression@@offset >= 0 @AT@ 12597 @LENGTH@ 6
------------INS Operator@@>= @TO@ InfixExpression@@offset >= 0 @AT@ 12603 @LENGTH@ 2
------------INS NumberLiteral@@0 @TO@ InfixExpression@@offset >= 0 @AT@ 12607 @LENGTH@ 1
---------INS Operator@@&& @TO@ InfixExpression@@offset >= 0 && rows > 0 @AT@ 12608 @LENGTH@ 2
---------INS InfixExpression@@rows > 0 @TO@ InfixExpression@@offset >= 0 && rows > 0 @AT@ 12612 @LENGTH@ 8
------------INS SimpleName@@rows @TO@ InfixExpression@@rows > 0 @AT@ 12612 @LENGTH@ 4
------------INS Operator@@> @TO@ InfixExpression@@rows > 0 @AT@ 12616 @LENGTH@ 1
------------INS NumberLiteral@@0 @TO@ InfixExpression@@rows > 0 @AT@ 12619 @LENGTH@ 1
------INS Block@@ThenBody:{  keys=keys.subList(offset,Math.min(offset + rows,keys.size()));} @TO@ IfStatement@@if (offset >= 0 && rows > 0) {  keys=keys.subList(offset,Math.min(offset + rows,keys.size()));} @AT@ 12622 @LENGTH@ 75
---------INS ExpressionStatement@@Assignment:keys=keys.subList(offset,Math.min(offset + rows,keys.size())) @TO@ Block@@ThenBody:{  keys=keys.subList(offset,Math.min(offset + rows,keys.size()));} @AT@ 12627 @LENGTH@ 66
------------INS Assignment@@keys=keys.subList(offset,Math.min(offset + rows,keys.size())) @TO@ ExpressionStatement@@Assignment:keys=keys.subList(offset,Math.min(offset + rows,keys.size())) @AT@ 12627 @LENGTH@ 65
---------------INS SimpleName@@keys @TO@ Assignment@@keys=keys.subList(offset,Math.min(offset + rows,keys.size())) @AT@ 12627 @LENGTH@ 4
---------------INS Operator@@= @TO@ Assignment@@keys=keys.subList(offset,Math.min(offset + rows,keys.size())) @AT@ 12631 @LENGTH@ 1
---------------INS MethodInvocation@@keys.subList(offset,Math.min(offset + rows,keys.size())) @TO@ Assignment@@keys=keys.subList(offset,Math.min(offset + rows,keys.size())) @AT@ 12634 @LENGTH@ 58
------------------INS SimpleName@@Name:keys @TO@ MethodInvocation@@keys.subList(offset,Math.min(offset + rows,keys.size())) @AT@ 12634 @LENGTH@ 4
------------------INS SimpleName@@MethodName:subList:[offset, Math.min(offset + rows,keys.size())] @TO@ MethodInvocation@@keys.subList(offset,Math.min(offset + rows,keys.size())) @AT@ 12639 @LENGTH@ 53
---------------------INS SimpleName@@offset @TO@ SimpleName@@MethodName:subList:[offset, Math.min(offset + rows,keys.size())] @AT@ 12647 @LENGTH@ 6
---------------------INS MethodInvocation@@Math.min(offset + rows,keys.size()) @TO@ SimpleName@@MethodName:subList:[offset, Math.min(offset + rows,keys.size())] @AT@ 12655 @LENGTH@ 36
------------------------INS SimpleName@@Name:Math @TO@ MethodInvocation@@Math.min(offset + rows,keys.size()) @AT@ 12655 @LENGTH@ 4
------------------------INS SimpleName@@MethodName:min:[offset + rows, keys.size()] @TO@ MethodInvocation@@Math.min(offset + rows,keys.size()) @AT@ 12660 @LENGTH@ 31
---------------------------INS InfixExpression@@offset + rows @TO@ SimpleName@@MethodName:min:[offset + rows, keys.size()] @AT@ 12664 @LENGTH@ 13
------------------------------INS SimpleName@@offset @TO@ InfixExpression@@offset + rows @AT@ 12664 @LENGTH@ 6
------------------------------INS Operator@@+ @TO@ InfixExpression@@offset + rows @AT@ 12670 @LENGTH@ 1
------------------------------INS SimpleName@@rows @TO@ InfixExpression@@offset + rows @AT@ 12673 @LENGTH@ 4
---------------------------INS MethodInvocation@@keys.size() @TO@ SimpleName@@MethodName:min:[offset + rows, keys.size()] @AT@ 12679 @LENGTH@ 11
------------------------------INS SimpleName@@Name:keys @TO@ MethodInvocation@@keys.size() @AT@ 12679 @LENGTH@ 4
------------------------------INS SimpleName@@MethodName:size:[] @TO@ MethodInvocation@@keys.size() @AT@ 12684 @LENGTH@ 6


UPD FieldDeclaration@@public, static, final, Attachments.Key<File>, [TEMP_DIR=new Attachments.Key(File.class)] @TO@ public, static, final, Attachments.Key<File>, [TEMP_DIR=new Attachments.Key<File>(File.class)] @AT@ 1901 @LENGTH@ 85
---UPD VariableDeclarationFragment@@TEMP_DIR=new Attachments.Key(File.class) @TO@ TEMP_DIR=new Attachments.Key<File>(File.class) @AT@ 1943 @LENGTH@ 42
------UPD ClassInstanceCreation@@Attachments.Key[File.class] @TO@ Attachments.Key<File>[File.class] @AT@ 1954 @LENGTH@ 31
---------INS ParameterizedType@@Attachments.Key<File> @TO@ ClassInstanceCreation@@Attachments.Key[File.class] @AT@ 1958 @LENGTH@ 21
------------INS SimpleType@@Attachments.Key @TO@ ParameterizedType@@Attachments.Key<File> @AT@ 1958 @LENGTH@ 15
------------INS SimpleType@@File @TO@ ParameterizedType@@Attachments.Key<File> @AT@ 1974 @LENGTH@ 4
---------DEL SimpleType@@Attachments.Key @AT@ 1958 @LENGTH@ 15


UPD VariableDeclarationStatement@@String cipherClassString=props.getProperty(configName) != null ? props.getProperty(configName,CIPHER_CLASSES_DEFAULT) : System.getProperty(configName,CIPHER_CLASSES_DEFAULT); @TO@ String cipherClassString=props.getProperty(ConfigurationKeys.CIPHER_CLASSES_KEY,CIPHER_CLASSES_DEFAULT); @AT@ 6011 @LENGTH@ 227
---UPD VariableDeclarationFragment@@cipherClassString=props.getProperty(configName) != null ? props.getProperty(configName,CIPHER_CLASSES_DEFAULT) : System.getProperty(configName,CIPHER_CLASSES_DEFAULT) @TO@ cipherClassString=props.getProperty(ConfigurationKeys.CIPHER_CLASSES_KEY,CIPHER_CLASSES_DEFAULT) @AT@ 6018 @LENGTH@ 219
------INS MethodInvocation@@props.getProperty(ConfigurationKeys.CIPHER_CLASSES_KEY,CIPHER_CLASSES_DEFAULT) @TO@ VariableDeclarationFragment@@cipherClassString=props.getProperty(configName) != null ? props.getProperty(configName,CIPHER_CLASSES_DEFAULT) : System.getProperty(configName,CIPHER_CLASSES_DEFAULT) @AT@ 5966 @LENGTH@ 79
---------MOV SimpleName@@Name:props @TO@ MethodInvocation@@props.getProperty(ConfigurationKeys.CIPHER_CLASSES_KEY,CIPHER_CLASSES_DEFAULT) @AT@ 6078 @LENGTH@ 5
---------MOV SimpleName@@MethodName:getProperty:[configName, CIPHER_CLASSES_DEFAULT] @TO@ MethodInvocation@@props.getProperty(ConfigurationKeys.CIPHER_CLASSES_KEY,CIPHER_CLASSES_DEFAULT) @AT@ 6101 @LENGTH@ 47
------------INS QualifiedName@@ConfigurationKeys.CIPHER_CLASSES_KEY @TO@ SimpleName@@MethodName:getProperty:[configName, CIPHER_CLASSES_DEFAULT] @AT@ 5984 @LENGTH@ 36
---------------INS SimpleName@@ConfigurationKeys @TO@ QualifiedName@@ConfigurationKeys.CIPHER_CLASSES_KEY @AT@ 5984 @LENGTH@ 17
---------------INS SimpleName@@CIPHER_CLASSES_KEY @TO@ QualifiedName@@ConfigurationKeys.CIPHER_CLASSES_KEY @AT@ 6002 @LENGTH@ 18
------------INS QualifiedName@@ConfigurationKeys.CIPHER_CLASSES_KEY @TO@ SimpleName@@MethodName:getProperty:[configName, CIPHER_CLASSES_DEFAULT] @AT@ 5984 @LENGTH@ 36
---------------INS SimpleName@@ConfigurationKeys @TO@ QualifiedName@@ConfigurationKeys.CIPHER_CLASSES_KEY @AT@ 5984 @LENGTH@ 17
---------------INS SimpleName@@CIPHER_CLASSES_KEY @TO@ QualifiedName@@ConfigurationKeys.CIPHER_CLASSES_KEY @AT@ 6002 @LENGTH@ 18
------DEL ConditionalExpression@@props.getProperty(configName) != null ? props.getProperty(configName,CIPHER_CLASSES_DEFAULT) : System.getProperty(configName,CIPHER_CLASSES_DEFAULT) @AT@ 6038 @LENGTH@ 199
---------DEL InfixExpression@@props.getProperty(configName) != null @AT@ 6038 @LENGTH@ 37
------------DEL MethodInvocation@@props.getProperty(configName) @AT@ 6038 @LENGTH@ 29
---------------DEL SimpleName@@Name:props @AT@ 6038 @LENGTH@ 5
---------------DEL SimpleName@@MethodName:getProperty:[configName] @AT@ 6044 @LENGTH@ 23
------------------DEL SimpleName@@configName @AT@ 6056 @LENGTH@ 10
------------DEL Operator@@!= @AT@ 6067 @LENGTH@ 2
------------DEL NullLiteral@@null @AT@ 6071 @LENGTH@ 4
---------DEL MethodInvocation@@props.getProperty(configName,CIPHER_CLASSES_DEFAULT) @AT@ 6078 @LENGTH@ 70
---------DEL MethodInvocation@@System.getProperty(configName,CIPHER_CLASSES_DEFAULT) @AT@ 6167 @LENGTH@ 70
------------DEL SimpleName@@Name:System @AT@ 6167 @LENGTH@ 6
------------DEL SimpleName@@MethodName:getProperty:[configName, CIPHER_CLASSES_DEFAULT] @AT@ 6174 @LENGTH@ 63
---------------DEL SimpleName@@configName @AT@ 6186 @LENGTH@ 10
---------------DEL SimpleName@@CIPHER_CLASSES_DEFAULT @AT@ 6214 @LENGTH@ 22


INS FieldDeclaration@@ConfigurableApplicationContext, [context] @TO@ TypeDeclaration@@[@RunWith(SpringJUnit4ClassRunner.class), @ContextConfiguration("classpath:infrastructure.xml"), public]MongoTemplateTests,  @AT@ 5482 @LENGTH@ 39
---INS SimpleType@@ConfigurableApplicationContext @TO@ FieldDeclaration@@ConfigurableApplicationContext, [context] @AT@ 5482 @LENGTH@ 30
---INS VariableDeclarationFragment@@context @TO@ FieldDeclaration@@ConfigurableApplicationContext, [context] @AT@ 5513 @LENGTH@ 7
------INS SimpleName@@context @TO@ VariableDeclarationFragment@@context @AT@ 5513 @LENGTH@ 7


INS MethodDeclaration@@public, void, MethodName:testNoEndpoint, Exception,  @TO@ TypeDeclaration@@[public]FluentProducerTemplateTest, ContextTestSupport @AT@ 1278 @LENGTH@ 530
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testNoEndpoint, Exception,  @AT@ 1278 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testNoEndpoint, Exception,  @AT@ 1285 @LENGTH@ 4
---INS SimpleName@@MethodName:testNoEndpoint @TO@ MethodDeclaration@@public, void, MethodName:testNoEndpoint, Exception,  @AT@ 1290 @LENGTH@ 14
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:testNoEndpoint, Exception,  @AT@ 1314 @LENGTH@ 9
---INS VariableDeclarationStatement@@FluentProducerTemplate fluent=context.createFluentProducerTemplate(); @TO@ MethodDeclaration@@public, void, MethodName:testNoEndpoint, Exception,  @AT@ 1334 @LENGTH@ 71
------INS SimpleType@@FluentProducerTemplate @TO@ VariableDeclarationStatement@@FluentProducerTemplate fluent=context.createFluentProducerTemplate(); @AT@ 1334 @LENGTH@ 22
------INS VariableDeclarationFragment@@fluent=context.createFluentProducerTemplate() @TO@ VariableDeclarationStatement@@FluentProducerTemplate fluent=context.createFluentProducerTemplate(); @AT@ 1357 @LENGTH@ 47
---------INS SimpleName@@fluent @TO@ VariableDeclarationFragment@@fluent=context.createFluentProducerTemplate() @AT@ 1357 @LENGTH@ 6
---------INS MethodInvocation@@context.createFluentProducerTemplate() @TO@ VariableDeclarationFragment@@fluent=context.createFluentProducerTemplate() @AT@ 1366 @LENGTH@ 38
------------INS SimpleName@@Name:context @TO@ MethodInvocation@@context.createFluentProducerTemplate() @AT@ 1366 @LENGTH@ 7
------------INS SimpleName@@MethodName:createFluentProducerTemplate:[] @TO@ MethodInvocation@@context.createFluentProducerTemplate() @AT@ 1374 @LENGTH@ 30
---INS TryStatement@@try {  fluent.withBody("Hello World").send();  fail("Should have thrown exception");} catch (IllegalArgumentException e) {} @TO@ MethodDeclaration@@public, void, MethodName:testNoEndpoint, Exception,  @AT@ 1415 @LENGTH@ 187
------INS ExpressionStatement@@MethodInvocation:fluent.withBody("Hello World").send() @TO@ TryStatement@@try {  fluent.withBody("Hello World").send();  fail("Should have thrown exception");} catch (IllegalArgumentException e) {} @AT@ 1433 @LENGTH@ 38
---------INS MethodInvocation@@fluent.withBody("Hello World").send() @TO@ ExpressionStatement@@MethodInvocation:fluent.withBody("Hello World").send() @AT@ 1433 @LENGTH@ 37
------------INS MethodInvocation@@MethodName:withBody:["Hello World"] @TO@ MethodInvocation@@fluent.withBody("Hello World").send() @AT@ 1433 @LENGTH@ 30
---------------INS StringLiteral@@"Hello World" @TO@ MethodInvocation@@MethodName:withBody:["Hello World"] @AT@ 1449 @LENGTH@ 13
------------INS SimpleName@@Name:fluent @TO@ MethodInvocation@@fluent.withBody("Hello World").send() @AT@ 1433 @LENGTH@ 6
------------INS SimpleName@@MethodName:send:[] @TO@ MethodInvocation@@fluent.withBody("Hello World").send() @AT@ 1464 @LENGTH@ 6
------INS ExpressionStatement@@MethodInvocation:fail("Should have thrown exception") @TO@ TryStatement@@try {  fluent.withBody("Hello World").send();  fail("Should have thrown exception");} catch (IllegalArgumentException e) {} @AT@ 1484 @LENGTH@ 37
---------INS MethodInvocation@@fail("Should have thrown exception") @TO@ ExpressionStatement@@MethodInvocation:fail("Should have thrown exception") @AT@ 1484 @LENGTH@ 36
------------INS SimpleName@@MethodName:fail:["Should have thrown exception"] @TO@ MethodInvocation@@fail("Should have thrown exception") @AT@ 1484 @LENGTH@ 36
---------------INS StringLiteral@@"Should have thrown exception" @TO@ SimpleName@@MethodName:fail:["Should have thrown exception"] @AT@ 1489 @LENGTH@ 30
------INS CatchClause@@catch (IllegalArgumentException e) {} @TO@ TryStatement@@try {  fluent.withBody("Hello World").send();  fail("Should have thrown exception");} catch (IllegalArgumentException e) {} @AT@ 1532 @LENGTH@ 70
---------INS SingleVariableDeclaration@@IllegalArgumentException e @TO@ CatchClause@@catch (IllegalArgumentException e) {} @AT@ 1539 @LENGTH@ 26
------------INS SimpleType@@IllegalArgumentException @TO@ SingleVariableDeclaration@@IllegalArgumentException e @AT@ 1539 @LENGTH@ 24
------------INS SimpleName@@e @TO@ SingleVariableDeclaration@@IllegalArgumentException e @AT@ 1564 @LENGTH@ 1
---INS TryStatement@@try {  fluent.withBody("Hello World").request();  fail("Should have thrown exception");} catch (IllegalArgumentException e) {} @TO@ MethodDeclaration@@public, void, MethodName:testNoEndpoint, Exception,  @AT@ 1612 @LENGTH@ 190
------INS ExpressionStatement@@MethodInvocation:fluent.withBody("Hello World").request() @TO@ TryStatement@@try {  fluent.withBody("Hello World").request();  fail("Should have thrown exception");} catch (IllegalArgumentException e) {} @AT@ 1630 @LENGTH@ 41
---------INS MethodInvocation@@fluent.withBody("Hello World").request() @TO@ ExpressionStatement@@MethodInvocation:fluent.withBody("Hello World").request() @AT@ 1630 @LENGTH@ 40
------------INS MethodInvocation@@MethodName:withBody:["Hello World"] @TO@ MethodInvocation@@fluent.withBody("Hello World").request() @AT@ 1630 @LENGTH@ 30
---------------INS StringLiteral@@"Hello World" @TO@ MethodInvocation@@MethodName:withBody:["Hello World"] @AT@ 1646 @LENGTH@ 13
------------INS SimpleName@@Name:fluent @TO@ MethodInvocation@@fluent.withBody("Hello World").request() @AT@ 1630 @LENGTH@ 6
------------INS SimpleName@@MethodName:request:[] @TO@ MethodInvocation@@fluent.withBody("Hello World").request() @AT@ 1661 @LENGTH@ 9
------INS ExpressionStatement@@MethodInvocation:fail("Should have thrown exception") @TO@ TryStatement@@try {  fluent.withBody("Hello World").request();  fail("Should have thrown exception");} catch (IllegalArgumentException e) {} @AT@ 1684 @LENGTH@ 37
---------INS MethodInvocation@@fail("Should have thrown exception") @TO@ ExpressionStatement@@MethodInvocation:fail("Should have thrown exception") @AT@ 1684 @LENGTH@ 36
------------INS SimpleName@@MethodName:fail:["Should have thrown exception"] @TO@ MethodInvocation@@fail("Should have thrown exception") @AT@ 1684 @LENGTH@ 36
---------------INS StringLiteral@@"Should have thrown exception" @TO@ SimpleName@@MethodName:fail:["Should have thrown exception"] @AT@ 1689 @LENGTH@ 30
------INS CatchClause@@catch (IllegalArgumentException e) {} @TO@ TryStatement@@try {  fluent.withBody("Hello World").request();  fail("Should have thrown exception");} catch (IllegalArgumentException e) {} @AT@ 1732 @LENGTH@ 70
---------INS SingleVariableDeclaration@@IllegalArgumentException e @TO@ CatchClause@@catch (IllegalArgumentException e) {} @AT@ 1739 @LENGTH@ 26
------------INS SimpleType@@IllegalArgumentException @TO@ SingleVariableDeclaration@@IllegalArgumentException e @AT@ 1739 @LENGTH@ 24
------------INS SimpleName@@e @TO@ SingleVariableDeclaration@@IllegalArgumentException e @AT@ 1764 @LENGTH@ 1


DEL MethodDeclaration@@public, void, MethodName:addDelgate, String contentType, MessageConverter messageConverter,  @AT@ 2582 @LENGTH@ 128
---DEL Modifier@@public @AT@ 2582 @LENGTH@ 6
---DEL PrimitiveType@@void @AT@ 2589 @LENGTH@ 4
---DEL SimpleName@@MethodName:addDelgate @AT@ 2594 @LENGTH@ 10
---DEL SingleVariableDeclaration@@String contentType @AT@ 2605 @LENGTH@ 18
------DEL SimpleType@@String @AT@ 2605 @LENGTH@ 6
------DEL SimpleName@@contentType @AT@ 2612 @LENGTH@ 11
---DEL SingleVariableDeclaration@@MessageConverter messageConverter @AT@ 2625 @LENGTH@ 33
------DEL SimpleType@@MessageConverter @AT@ 2625 @LENGTH@ 16
------DEL SimpleName@@messageConverter @AT@ 2642 @LENGTH@ 16
---DEL ExpressionStatement@@MethodInvocation:addDelegate(contentType,messageConverter) @AT@ 2664 @LENGTH@ 43
------DEL MethodInvocation@@addDelegate(contentType,messageConverter) @AT@ 2664 @LENGTH@ 42
---------DEL SimpleName@@MethodName:addDelegate:[contentType, messageConverter] @AT@ 2664 @LENGTH@ 42
------------DEL SimpleName@@contentType @AT@ 2676 @LENGTH@ 11
------------DEL SimpleName@@messageConverter @AT@ 2689 @LENGTH@ 16


UPD TypeDeclaration@@[@Configuration, @ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration"), public]KratiComponentAutoConfiguration,  @TO@ [@Configuration, @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration"), public]KratiComponentAutoConfiguration,  @AT@ 1441 @LENGTH@ 603
---UPD NormalAnnotation@@@ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1456 @LENGTH@ 79
---UPD NormalAnnotation@@@AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1536 @LENGTH@ 80


UPD TypeDeclaration@@[@Configuration, @ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration"), @EnableConfigurationProperties(SjmsComponentConfiguration.class), public]SjmsComponentAutoConfiguration,  @TO@ [@Configuration, @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration"), @EnableConfigurationProperties(SjmsComponentConfiguration.class), public]SjmsComponentAutoConfiguration,  @AT@ 1619 @LENGTH@ 2039
---UPD NormalAnnotation@@@ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1634 @LENGTH@ 79
---UPD NormalAnnotation@@@AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1714 @LENGTH@ 80


UPD TypeDeclaration@@[@Configuration, @ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration"), public]HipchatComponentAutoConfiguration,  @TO@ [@Configuration, @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration"), public]HipchatComponentAutoConfiguration,  @AT@ 1447 @LENGTH@ 617
---UPD NormalAnnotation@@@ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1462 @LENGTH@ 79
---UPD NormalAnnotation@@@AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1542 @LENGTH@ 80


UPD FieldDeclaration@@private, final, List<RecordMetadata>, [recordMetadatas=new Vector<>()] @TO@ private, final, List<RecordMetadata>, [recordMetadatas=new ArrayList<>()] @AT@ 8248 @LENGTH@ 68
---UPD VariableDeclarationFragment@@recordMetadatas=new Vector<>() @TO@ recordMetadatas=new ArrayList<>() @AT@ 8283 @LENGTH@ 32
------UPD ClassInstanceCreation@@Vector<>[] @TO@ ArrayList<>[] @AT@ 8301 @LENGTH@ 14
---------UPD ParameterizedType@@Vector<> @TO@ ArrayList<> @AT@ 8305 @LENGTH@ 8
------------UPD SimpleType@@Vector @TO@ ArrayList @AT@ 8305 @LENGTH@ 6


UPD Block@@ThenBody:{  Serializable payload=(Serializable)msg.content();  ByteBuf buf=ctx.alloc().heapBuffer();  delegateObjectEncoder.encode(ctx,payload,buf);  AddressedEnvelope<Object,InetSocketAddress> addressedEnvelop=new DefaultAddressedEnvelope<Object,InetSocketAddress>(buf.retain(),msg.recipient(),msg.sender());  out.add(addressedEnvelop);} @TO@ ThenBody:{  Serializable payload=(Serializable)msg.content();  ByteBuf buf=ctx.alloc().buffer();  delegateObjectEncoder.encode(ctx,payload,buf);  AddressedEnvelope<Object,InetSocketAddress> addressedEnvelop=new DefaultAddressedEnvelope<Object,InetSocketAddress>(buf,msg.recipient(),msg.sender());  out.add(addressedEnvelop);} @AT@ 1740 @LENGTH@ 423
---UPD VariableDeclarationStatement@@ByteBuf buf=ctx.alloc().heapBuffer(); @TO@ ByteBuf buf=ctx.alloc().buffer(); @AT@ 1819 @LENGTH@ 39
------UPD VariableDeclarationFragment@@buf=ctx.alloc().heapBuffer() @TO@ buf=ctx.alloc().buffer() @AT@ 1827 @LENGTH@ 30
---------UPD MethodInvocation@@ctx.alloc().heapBuffer() @TO@ ctx.alloc().buffer() @AT@ 1833 @LENGTH@ 24
------------UPD SimpleName@@MethodName:heapBuffer:[] @TO@ MethodName:buffer:[] @AT@ 1845 @LENGTH@ 12
---UPD VariableDeclarationStatement@@AddressedEnvelope<Object,InetSocketAddress> addressedEnvelop=new DefaultAddressedEnvelope<Object,InetSocketAddress>(buf.retain(),msg.recipient(),msg.sender()); @TO@ AddressedEnvelope<Object,InetSocketAddress> addressedEnvelop=new DefaultAddressedEnvelope<Object,InetSocketAddress>(buf,msg.recipient(),msg.sender()); @AT@ 1932 @LENGTH@ 182
------UPD VariableDeclarationFragment@@addressedEnvelop=new DefaultAddressedEnvelope<Object,InetSocketAddress>(buf.retain(),msg.recipient(),msg.sender()) @TO@ addressedEnvelop=new DefaultAddressedEnvelope<Object,InetSocketAddress>(buf,msg.recipient(),msg.sender()) @AT@ 1977 @LENGTH@ 136
---------UPD ClassInstanceCreation@@DefaultAddressedEnvelope<Object,InetSocketAddress>[buf.retain(), msg.recipient(), msg.sender()] @TO@ DefaultAddressedEnvelope<Object,InetSocketAddress>[buf, msg.recipient(), msg.sender()] @AT@ 2013 @LENGTH@ 100
------------INS SimpleName@@buf @TO@ ClassInstanceCreation@@DefaultAddressedEnvelope<Object,InetSocketAddress>[buf.retain(), msg.recipient(), msg.sender()] @AT@ 2065 @LENGTH@ 3
------------DEL MethodInvocation@@buf.retain() @AT@ 2069 @LENGTH@ 12
---------------DEL SimpleName@@Name:buf @AT@ 2069 @LENGTH@ 3
---------------DEL SimpleName@@MethodName:retain:[] @AT@ 2073 @LENGTH@ 8


INS FieldDeclaration@@InitialContext, [context] @TO@ TypeDeclaration@@[@RunWith(Arquillian.class), public]MySQLJPAArquillianTest,  @AT@ 1790 @LENGTH@ 23
---INS SimpleType@@InitialContext @TO@ FieldDeclaration@@InitialContext, [context] @AT@ 1790 @LENGTH@ 14
---INS VariableDeclarationFragment@@context @TO@ FieldDeclaration@@InitialContext, [context] @AT@ 1805 @LENGTH@ 7
------INS SimpleName@@context @TO@ VariableDeclarationFragment@@context @AT@ 1805 @LENGTH@ 7


INS MethodDeclaration@@public, void, MethodName:addField, final FieldMetadata field,  @TO@ TypeDeclaration@@[@Component, @Service, public]TypeManagementServiceImpl, [TypeManagementService] @AT@ 2630 @LENGTH@ 86
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:addField, final FieldMetadata field,  @AT@ 2630 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:addField, final FieldMetadata field,  @AT@ 2637 @LENGTH@ 4
---INS SimpleName@@MethodName:addField @TO@ MethodDeclaration@@public, void, MethodName:addField, final FieldMetadata field,  @AT@ 2642 @LENGTH@ 8
---INS SingleVariableDeclaration@@final FieldMetadata field @TO@ MethodDeclaration@@public, void, MethodName:addField, final FieldMetadata field,  @AT@ 2651 @LENGTH@ 25
------INS Modifier@@final @TO@ SingleVariableDeclaration@@final FieldMetadata field @AT@ 2651 @LENGTH@ 5
------INS SimpleType@@FieldMetadata @TO@ SingleVariableDeclaration@@final FieldMetadata field @AT@ 2657 @LENGTH@ 13
------INS SimpleName@@field @TO@ SingleVariableDeclaration@@final FieldMetadata field @AT@ 2671 @LENGTH@ 5
---INS ExpressionStatement@@MethodInvocation:this.addField(field,false) @TO@ MethodDeclaration@@public, void, MethodName:addField, final FieldMetadata field,  @AT@ 2684 @LENGTH@ 28
------INS MethodInvocation@@this.addField(field,false) @TO@ ExpressionStatement@@MethodInvocation:this.addField(field,false) @AT@ 2684 @LENGTH@ 27
---------INS ThisExpression@@this @TO@ MethodInvocation@@this.addField(field,false) @AT@ 2684 @LENGTH@ 4
---------INS SimpleName@@MethodName:addField:[field, false] @TO@ MethodInvocation@@this.addField(field,false) @AT@ 2689 @LENGTH@ 22
------------INS SimpleName@@field @TO@ SimpleName@@MethodName:addField:[field, false] @AT@ 2698 @LENGTH@ 5
------------INS BooleanLiteral@@false @TO@ SimpleName@@MethodName:addField:[field, false] @AT@ 2705 @LENGTH@ 5


DEL MethodDeclaration@@private, static, String, MethodName:getJCEProvider, Properties props,  @AT@ 8784 @LENGTH@ 298
---DEL Modifier@@private @AT@ 8784 @LENGTH@ 7
---DEL Modifier@@static @AT@ 8792 @LENGTH@ 6
---DEL SimpleType@@String @AT@ 8799 @LENGTH@ 6
---DEL SimpleName@@MethodName:getJCEProvider @AT@ 8806 @LENGTH@ 14
---DEL SingleVariableDeclaration@@Properties props @AT@ 8821 @LENGTH@ 16
------DEL SimpleType@@Properties @AT@ 8821 @LENGTH@ 10
------DEL SimpleName@@props @AT@ 8832 @LENGTH@ 5
---DEL ReturnStatement@@ConditionalExpression:props.getProperty(ConfigurationKeys.CIPHER_JCE_PROVIDER_KEY) != null ? props.getProperty(ConfigurationKeys.CIPHER_JCE_PROVIDER_KEY) : System.getProperty(ConfigurationKeys.CIPHER_JCE_PROVIDER_KEY) @AT@ 8849 @LENGTH@ 227
------DEL ConditionalExpression@@props.getProperty(ConfigurationKeys.CIPHER_JCE_PROVIDER_KEY) != null ? props.getProperty(ConfigurationKeys.CIPHER_JCE_PROVIDER_KEY) : System.getProperty(ConfigurationKeys.CIPHER_JCE_PROVIDER_KEY) @AT@ 8856 @LENGTH@ 219
---------DEL InfixExpression@@props.getProperty(ConfigurationKeys.CIPHER_JCE_PROVIDER_KEY) != null @AT@ 8856 @LENGTH@ 80
------------DEL MethodInvocation@@props.getProperty(ConfigurationKeys.CIPHER_JCE_PROVIDER_KEY) @AT@ 8856 @LENGTH@ 60
---------------DEL SimpleName@@Name:props @AT@ 8856 @LENGTH@ 5
---------------DEL SimpleName@@MethodName:getProperty:[ConfigurationKeys.CIPHER_JCE_PROVIDER_KEY] @AT@ 8862 @LENGTH@ 54
------------------DEL QualifiedName@@ConfigurationKeys.CIPHER_JCE_PROVIDER_KEY @AT@ 8874 @LENGTH@ 41
---------------------DEL SimpleName@@ConfigurationKeys @AT@ 8874 @LENGTH@ 17
---------------------DEL SimpleName@@CIPHER_JCE_PROVIDER_KEY @AT@ 8892 @LENGTH@ 23
------------DEL Operator@@!= @AT@ 8916 @LENGTH@ 2
------------DEL NullLiteral@@null @AT@ 8932 @LENGTH@ 4
---------DEL MethodInvocation@@System.getProperty(ConfigurationKeys.CIPHER_JCE_PROVIDER_KEY) @AT@ 9014 @LENGTH@ 61
------------DEL SimpleName@@Name:System @AT@ 9014 @LENGTH@ 6
------------DEL SimpleName@@MethodName:getProperty:[ConfigurationKeys.CIPHER_JCE_PROVIDER_KEY] @AT@ 9021 @LENGTH@ 54
---------------DEL QualifiedName@@ConfigurationKeys.CIPHER_JCE_PROVIDER_KEY @AT@ 9033 @LENGTH@ 41
------------------DEL SimpleName@@ConfigurationKeys @AT@ 9033 @LENGTH@ 17
------------------DEL SimpleName@@CIPHER_JCE_PROVIDER_KEY @AT@ 9051 @LENGTH@ 23


UPD EnhancedForStatement@@for (Class clazz : interfaces) {  if (clazz.getName().equals(sunClass.getName())) {    Method getCleaner=sunClass.getMethod("cleaner");    Object cleaner=getCleaner.invoke(buffer,null);    Method cleanMethod=cleanerClass.getMethod("clean");    cleanMethod.invoke(cleaner,null);    return;  }} @TO@ for (Class<?> clazz : interfaces) {  if (clazz.getName().equals(sunClass.getName())) {    final Object[] NO_PARAM=new Object[0];    Method getCleaner=sunClass.getMethod("cleaner");    Object cleaner=getCleaner.invoke(buffer,NO_PARAM);    Method cleanMethod=cleanerClass.getMethod("clean");    cleanMethod.invoke(cleaner,NO_PARAM);    return;  }} @AT@ 4898 @LENGTH@ 519
---UPD SingleVariableDeclaration@@Class clazz @TO@ Class<?> clazz @AT@ 4903 @LENGTH@ 11
------INS ParameterizedType@@Class<?> @TO@ SingleVariableDeclaration@@Class clazz @AT@ 4903 @LENGTH@ 8
---------INS SimpleType@@Class @TO@ ParameterizedType@@Class<?> @AT@ 4903 @LENGTH@ 5
---------INS WildcardType@@? @TO@ ParameterizedType@@Class<?> @AT@ 4909 @LENGTH@ 1
------DEL SimpleType@@Class @AT@ 4903 @LENGTH@ 5
---UPD IfStatement@@if (clazz.getName().equals(sunClass.getName())) {  Method getCleaner=sunClass.getMethod("cleaner");  Object cleaner=getCleaner.invoke(buffer,null);  Method cleanMethod=cleanerClass.getMethod("clean");  cleanMethod.invoke(cleaner,null);  return;} @TO@ if (clazz.getName().equals(sunClass.getName())) {  final Object[] NO_PARAM=new Object[0];  Method getCleaner=sunClass.getMethod("cleaner");  Object cleaner=getCleaner.invoke(buffer,NO_PARAM);  Method cleanMethod=cleanerClass.getMethod("clean");  cleanMethod.invoke(cleaner,NO_PARAM);  return;} @AT@ 4947 @LENGTH@ 456
------UPD Block@@ThenBody:{  Method getCleaner=sunClass.getMethod("cleaner");  Object cleaner=getCleaner.invoke(buffer,null);  Method cleanMethod=cleanerClass.getMethod("clean");  cleanMethod.invoke(cleaner,null);  return;} @TO@ ThenBody:{  final Object[] NO_PARAM=new Object[0];  Method getCleaner=sunClass.getMethod("cleaner");  Object cleaner=getCleaner.invoke(buffer,NO_PARAM);  Method cleanMethod=cleanerClass.getMethod("clean");  cleanMethod.invoke(cleaner,NO_PARAM);  return;} @AT@ 4995 @LENGTH@ 408
---------INS VariableDeclarationStatement@@final Object[] NO_PARAM=new Object[0]; @TO@ Block@@ThenBody:{  Method getCleaner=sunClass.getMethod("cleaner");  Object cleaner=getCleaner.invoke(buffer,null);  Method cleanMethod=cleanerClass.getMethod("clean");  cleanMethod.invoke(cleaner,null);  return;} @AT@ 5020 @LENGTH@ 40
------------INS Modifier@@final @TO@ VariableDeclarationStatement@@final Object[] NO_PARAM=new Object[0]; @AT@ 5020 @LENGTH@ 5
------------INS ArrayType@@Object[] @TO@ VariableDeclarationStatement@@final Object[] NO_PARAM=new Object[0]; @AT@ 5026 @LENGTH@ 8
---------------INS SimpleType@@Object @TO@ ArrayType@@Object[] @AT@ 5026 @LENGTH@ 6
------------INS VariableDeclarationFragment@@NO_PARAM=new Object[0] @TO@ VariableDeclarationStatement@@final Object[] NO_PARAM=new Object[0]; @AT@ 5035 @LENGTH@ 24
---------------INS SimpleName@@NO_PARAM @TO@ VariableDeclarationFragment@@NO_PARAM=new Object[0] @AT@ 5035 @LENGTH@ 8
---------------INS ArrayCreation@@new Object[0] @TO@ VariableDeclarationFragment@@NO_PARAM=new Object[0] @AT@ 5046 @LENGTH@ 13
------------------INS ArrayType@@Object[] @TO@ ArrayCreation@@new Object[0] @AT@ 5050 @LENGTH@ 9
---------------------INS SimpleType@@Object @TO@ ArrayType@@Object[] @AT@ 5050 @LENGTH@ 6
------------------INS NumberLiteral@@0 @TO@ ArrayCreation@@new Object[0] @AT@ 5057 @LENGTH@ 1
---------UPD VariableDeclarationStatement@@Object cleaner=getCleaner.invoke(buffer,null); @TO@ Object cleaner=getCleaner.invoke(buffer,NO_PARAM); @AT@ 5137 @LENGTH@ 49
------------UPD VariableDeclarationFragment@@cleaner=getCleaner.invoke(buffer,null) @TO@ cleaner=getCleaner.invoke(buffer,NO_PARAM) @AT@ 5144 @LENGTH@ 41
---------------UPD MethodInvocation@@getCleaner.invoke(buffer,null) @TO@ getCleaner.invoke(buffer,NO_PARAM) @AT@ 5154 @LENGTH@ 31
------------------UPD SimpleName@@MethodName:invoke:[buffer, null] @TO@ MethodName:invoke:[buffer, NO_PARAM] @AT@ 5165 @LENGTH@ 20
---------------------DEL NullLiteral@@null @AT@ 5180 @LENGTH@ 4
---------------------INS SimpleName@@NO_PARAM @TO@ SimpleName@@MethodName:invoke:[buffer, null] @AT@ 5244 @LENGTH@ 8
---------UPD ExpressionStatement@@MethodInvocation:cleanMethod.invoke(cleaner,null) @TO@ MethodInvocation:cleanMethod.invoke(cleaner,NO_PARAM) @AT@ 5323 @LENGTH@ 34
------------UPD MethodInvocation@@cleanMethod.invoke(cleaner,null) @TO@ cleanMethod.invoke(cleaner,NO_PARAM) @AT@ 5323 @LENGTH@ 33
---------------UPD SimpleName@@MethodName:invoke:[cleaner, null] @TO@ MethodName:invoke:[cleaner, NO_PARAM] @AT@ 5335 @LENGTH@ 21
------------------DEL NullLiteral@@null @AT@ 5351 @LENGTH@ 4
------------------INS SimpleName@@NO_PARAM @TO@ SimpleName@@MethodName:invoke:[cleaner, null] @AT@ 5419 @LENGTH@ 8


INS ExpressionStatement@@MethodInvocation:checkAbortCondition() @TO@ MethodDeclaration@@void, MethodName:init, MRTaskReporter mrReporter, Map<String,LogicalInput> inputs, Map<String,LogicalOutput> outputs, Exception,  @AT@ 3481 @LENGTH@ 22
---INS MethodInvocation@@MethodName:checkAbortCondition:[] @TO@ ExpressionStatement@@MethodInvocation:checkAbortCondition() @AT@ 3481 @LENGTH@ 21


UPD TypeDeclaration@@[@Configuration, @ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration"), @EnableConfigurationProperties(SqlLanguageConfiguration.class), public]SqlLanguageAutoConfiguration,  @TO@ [@Configuration, @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration"), @EnableConfigurationProperties(SqlLanguageConfiguration.class), public]SqlLanguageAutoConfiguration,  @AT@ 1656 @LENGTH@ 1058
---UPD NormalAnnotation@@@ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1671 @LENGTH@ 79
---UPD NormalAnnotation@@@AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1751 @LENGTH@ 80


UPD ExpressionStatement@@MethodInvocation:privacyBuffer.append(",'" + entry.getKey() + "':'"+ entry.getKey()+ "'") @TO@ MethodInvocation:privacyBuffer.append(",'" + entry.getKey() + "':'"+ entry.getValue()+ "'") @AT@ 3283 @LENGTH@ 71
---UPD MethodInvocation@@privacyBuffer.append(",'" + entry.getKey() + "':'"+ entry.getKey()+ "'") @TO@ privacyBuffer.append(",'" + entry.getKey() + "':'"+ entry.getValue()+ "'") @AT@ 3283 @LENGTH@ 70
------UPD SimpleName@@MethodName:append:[",'" + entry.getKey() + "':'"+ entry.getKey()+ "'"] @TO@ MethodName:append:[",'" + entry.getKey() + "':'"+ entry.getValue()+ "'"] @AT@ 3297 @LENGTH@ 56
---------UPD InfixExpression@@",'" + entry.getKey() + "':'"+ entry.getKey()+ "'" @TO@ ",'" + entry.getKey() + "':'"+ entry.getValue()+ "'" @AT@ 3304 @LENGTH@ 48
------------UPD MethodInvocation@@entry.getKey() @TO@ entry.getValue() @AT@ 3332 @LENGTH@ 14
---------------UPD SimpleName@@MethodName:getKey:[] @TO@ MethodName:getValue:[] @AT@ 3338 @LENGTH@ 8


UPD TypeDeclaration@@[@Configuration, @ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration"), @EnableConfigurationProperties(HttpComponentConfiguration.class), public]HttpComponentAutoConfiguration,  @TO@ [@Configuration, @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration"), @EnableConfigurationProperties(HttpComponentConfiguration.class), public]HttpComponentAutoConfiguration,  @AT@ 1619 @LENGTH@ 2060
---UPD NormalAnnotation@@@ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1634 @LENGTH@ 79
---UPD NormalAnnotation@@@AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1714 @LENGTH@ 80


UPD ExpressionStatement@@MethodInvocation:properties.setUserId("user-id-1234") @TO@ MethodInvocation:properties.setReceivedUserId("user-id-1234") @AT@ 2328 @LENGTH@ 37
---UPD MethodInvocation@@properties.setUserId("user-id-1234") @TO@ properties.setReceivedUserId("user-id-1234") @AT@ 2328 @LENGTH@ 36
------UPD SimpleName@@MethodName:setUserId:["user-id-1234"] @TO@ MethodName:setReceivedUserId:["user-id-1234"] @AT@ 2339 @LENGTH@ 25


UPD VariableDeclarationStatement@@CsrfToken token=(CsrfToken)request.getAttribute(CsrfRequestPostProcessor.TestCsrfTokenRepository.ATTR_NAME); @TO@ CsrfToken token=(CsrfToken)request.getAttribute(CsrfRequestPostProcessor.TestCsrfTokenRepository.TOKEN_ATTR_NAME); @AT@ 1510 @LENGTH@ 111
---UPD VariableDeclarationFragment@@token=(CsrfToken)request.getAttribute(CsrfRequestPostProcessor.TestCsrfTokenRepository.ATTR_NAME) @TO@ token=(CsrfToken)request.getAttribute(CsrfRequestPostProcessor.TestCsrfTokenRepository.TOKEN_ATTR_NAME) @AT@ 1520 @LENGTH@ 100
------UPD CastExpression@@(CsrfToken)request.getAttribute(CsrfRequestPostProcessor.TestCsrfTokenRepository.ATTR_NAME) @TO@ (CsrfToken)request.getAttribute(CsrfRequestPostProcessor.TestCsrfTokenRepository.TOKEN_ATTR_NAME) @AT@ 1528 @LENGTH@ 92
---------UPD MethodInvocation@@request.getAttribute(CsrfRequestPostProcessor.TestCsrfTokenRepository.ATTR_NAME) @TO@ request.getAttribute(CsrfRequestPostProcessor.TestCsrfTokenRepository.TOKEN_ATTR_NAME) @AT@ 1540 @LENGTH@ 80
------------UPD SimpleName@@MethodName:getAttribute:[CsrfRequestPostProcessor.TestCsrfTokenRepository.ATTR_NAME] @TO@ MethodName:getAttribute:[CsrfRequestPostProcessor.TestCsrfTokenRepository.TOKEN_ATTR_NAME] @AT@ 1548 @LENGTH@ 72
---------------UPD QualifiedName@@CsrfRequestPostProcessor.TestCsrfTokenRepository.ATTR_NAME @TO@ CsrfRequestPostProcessor.TestCsrfTokenRepository.TOKEN_ATTR_NAME @AT@ 1561 @LENGTH@ 58
------------------UPD SimpleName@@ATTR_NAME @TO@ TOKEN_ATTR_NAME @AT@ 1610 @LENGTH@ 9


INS IfStatement@@if (logger.isDebugEnabled()) {  logger.debug("MapredContext initialized.");} @TO@ MethodDeclaration@@public, static, MapredContext, MethodName:init, boolean isMap, JobConf jobConf,  @AT@ 2118 @LENGTH@ 86
---INS MethodInvocation@@logger.isDebugEnabled() @TO@ IfStatement@@if (logger.isDebugEnabled()) {  logger.debug("MapredContext initialized.");} @AT@ 2122 @LENGTH@ 23
------INS SimpleName@@Name:logger @TO@ MethodInvocation@@logger.isDebugEnabled() @AT@ 2122 @LENGTH@ 6
------INS SimpleName@@MethodName:isDebugEnabled:[] @TO@ MethodInvocation@@logger.isDebugEnabled() @AT@ 2129 @LENGTH@ 16
---INS Block@@ThenBody:{  logger.debug("MapredContext initialized.");} @TO@ IfStatement@@if (logger.isDebugEnabled()) {  logger.debug("MapredContext initialized.");} @AT@ 2147 @LENGTH@ 57
------MOV ExpressionStatement@@MethodInvocation:logger.debug("MapredContext initialized.") @TO@ Block@@ThenBody:{  logger.debug("MapredContext initialized.");} @AT@ 2118 @LENGTH@ 43


UPD TypeDeclaration@@[@Configuration, @ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration"), public]DropboxComponentAutoConfiguration,  @TO@ [@Configuration, @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration"), public]DropboxComponentAutoConfiguration,  @AT@ 1447 @LENGTH@ 617
---UPD NormalAnnotation@@@ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1462 @LENGTH@ 79
---UPD NormalAnnotation@@@AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1542 @LENGTH@ 80


UPD VariableDeclarationStatement@@Document _id=DBObjectTestUtils.getAsDocument(captor.getValue(),"_id"); @TO@ Document _id=DocumentTestUtils.getAsDocument(captor.getValue(),"_id"); @AT@ 2924 @LENGTH@ 73
---UPD VariableDeclarationFragment@@_id=DBObjectTestUtils.getAsDocument(captor.getValue(),"_id") @TO@ _id=DocumentTestUtils.getAsDocument(captor.getValue(),"_id") @AT@ 2933 @LENGTH@ 63
------UPD MethodInvocation@@DBObjectTestUtils.getAsDocument(captor.getValue(),"_id") @TO@ DocumentTestUtils.getAsDocument(captor.getValue(),"_id") @AT@ 2939 @LENGTH@ 57
---------UPD SimpleName@@Name:DBObjectTestUtils @TO@ Name:DocumentTestUtils @AT@ 2939 @LENGTH@ 17


UPD ExpressionStatement@@Assignment:n=((n << 8) | (reservoir[pos++] & 0xff)) @TO@ Assignment:n=(n << 8) | (reservoir[pos++] & 0xff) @AT@ 3887 @LENGTH@ 43
---UPD Assignment@@n=((n << 8) | (reservoir[pos++] & 0xff)) @TO@ n=(n << 8) | (reservoir[pos++] & 0xff) @AT@ 3887 @LENGTH@ 42
------DEL ParenthesizedExpression@@((n << 8) | (reservoir[pos++] & 0xff)) @AT@ 3891 @LENGTH@ 38
------MOV InfixExpression@@(n << 8) | (reservoir[pos++] & 0xff) @TO@ Assignment@@n=((n << 8) | (reservoir[pos++] & 0xff)) @AT@ 3892 @LENGTH@ 36


UPD TypeDeclaration@@[@Configuration, @ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration"), public]JIRAComponentAutoConfiguration,  @TO@ [@Configuration, @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration"), public]JIRAComponentAutoConfiguration,  @AT@ 1438 @LENGTH@ 596
---UPD NormalAnnotation@@@ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1453 @LENGTH@ 79
---UPD NormalAnnotation@@@AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1533 @LENGTH@ 80


INS FieldDeclaration@@private, final, Function0<Object>, [alternative=new AbstractFunction0<Object>(){
  @Override public Option<Object> apply(){
    return null;
  }
}
] @TO@ EnumDeclaration@@[private, static]ScalOptionUnwrapper, [Converter<Object,Object>] @AT@ 13395 @LENGTH@ 223
---INS Modifier@@private @TO@ FieldDeclaration@@private, final, Function0<Object>, [alternative=new AbstractFunction0<Object>(){
  @Override public Option<Object> apply(){
    return null;
  }
}
] @AT@ 13395 @LENGTH@ 7
---INS Modifier@@final @TO@ FieldDeclaration@@private, final, Function0<Object>, [alternative=new AbstractFunction0<Object>(){
  @Override public Option<Object> apply(){
    return null;
  }
}
] @AT@ 13403 @LENGTH@ 5
---INS ParameterizedType@@Function0<Object> @TO@ FieldDeclaration@@private, final, Function0<Object>, [alternative=new AbstractFunction0<Object>(){
  @Override public Option<Object> apply(){
    return null;
  }
}
] @AT@ 13409 @LENGTH@ 17
------INS SimpleType@@Function0 @TO@ ParameterizedType@@Function0<Object> @AT@ 13409 @LENGTH@ 9
------INS SimpleType@@Object @TO@ ParameterizedType@@Function0<Object> @AT@ 13419 @LENGTH@ 6
---INS VariableDeclarationFragment@@alternative=new AbstractFunction0<Object>(){
  @Override public Option<Object> apply(){
    return null;
  }
}
 @TO@ FieldDeclaration@@private, final, Function0<Object>, [alternative=new AbstractFunction0<Object>(){
  @Override public Option<Object> apply(){
    return null;
  }
}
] @AT@ 13427 @LENGTH@ 190
------INS SimpleName@@alternative @TO@ VariableDeclarationFragment@@alternative=new AbstractFunction0<Object>(){
  @Override public Option<Object> apply(){
    return null;
  }
}
 @AT@ 13427 @LENGTH@ 11
------INS ClassInstanceCreation@@AbstractFunction0<Object>[] @TO@ VariableDeclarationFragment@@alternative=new AbstractFunction0<Object>(){
  @Override public Option<Object> apply(){
    return null;
  }
}
 @AT@ 13441 @LENGTH@ 176
---------INS New@@new @TO@ ClassInstanceCreation@@AbstractFunction0<Object>[] @AT@ 13441 @LENGTH@ 3
---------INS ParameterizedType@@AbstractFunction0<Object> @TO@ ClassInstanceCreation@@AbstractFunction0<Object>[] @AT@ 13445 @LENGTH@ 25
------------INS SimpleType@@AbstractFunction0 @TO@ ParameterizedType@@AbstractFunction0<Object> @AT@ 13445 @LENGTH@ 17
------------INS SimpleType@@Object @TO@ ParameterizedType@@AbstractFunction0<Object> @AT@ 13463 @LENGTH@ 6
---------INS AnonymousClassDeclaration@@AnonymousClass @TO@ ClassInstanceCreation@@AbstractFunction0<Object>[] @AT@ 13473 @LENGTH@ 144
------------INS MethodDeclaration@@public, Option<Object>, MethodName:apply,  @TO@ AnonymousClassDeclaration@@AnonymousClass @AT@ 13560 @LENGTH@ 53
---------------INS Modifier@@public @TO@ MethodDeclaration@@public, Option<Object>, MethodName:apply,  @AT@ 13560 @LENGTH@ 6
---------------INS ParameterizedType@@Option<Object> @TO@ MethodDeclaration@@public, Option<Object>, MethodName:apply,  @AT@ 13567 @LENGTH@ 14
------------------INS SimpleType@@Option @TO@ ParameterizedType@@Option<Object> @AT@ 13567 @LENGTH@ 6
------------------INS SimpleType@@Object @TO@ ParameterizedType@@Option<Object> @AT@ 13574 @LENGTH@ 6
---------------INS SimpleName@@MethodName:apply @TO@ MethodDeclaration@@public, Option<Object>, MethodName:apply,  @AT@ 13582 @LENGTH@ 5
---------------INS ReturnStatement@@NullLiteral:null @TO@ MethodDeclaration@@public, Option<Object>, MethodName:apply,  @AT@ 13596 @LENGTH@ 12
------------------INS NullLiteral@@null @TO@ ReturnStatement@@NullLiteral:null @AT@ 13603 @LENGTH@ 4


UPD VariableDeclarationStatement@@OneTimePassword otp=identity.getCredential(PasswordCredential.class).getPassword(OneTimePassword.class); @TO@ OneTimePassword otp=identity.getCredential(PasswordCredential.class,OneTimePassword.ALGORITHM_OTP_SHA1).getPassword(OneTimePassword.class); @AT@ 5646 @LENGTH@ 106
---UPD VariableDeclarationFragment@@otp=identity.getCredential(PasswordCredential.class).getPassword(OneTimePassword.class) @TO@ otp=identity.getCredential(PasswordCredential.class,OneTimePassword.ALGORITHM_OTP_SHA1).getPassword(OneTimePassword.class) @AT@ 5662 @LENGTH@ 89
------UPD MethodInvocation@@identity.getCredential(PasswordCredential.class).getPassword(OneTimePassword.class) @TO@ identity.getCredential(PasswordCredential.class,OneTimePassword.ALGORITHM_OTP_SHA1).getPassword(OneTimePassword.class) @AT@ 5668 @LENGTH@ 83
---------UPD MethodInvocation@@MethodName:getCredential:[PasswordCredential.class] @TO@ MethodName:getCredential:[PasswordCredential.class, OneTimePassword.ALGORITHM_OTP_SHA1] @AT@ 5668 @LENGTH@ 48
------------INS QualifiedName@@OneTimePassword.ALGORITHM_OTP_SHA1 @TO@ MethodInvocation@@MethodName:getCredential:[PasswordCredential.class] @AT@ 5717 @LENGTH@ 34
---------------INS SimpleName@@OneTimePassword @TO@ QualifiedName@@OneTimePassword.ALGORITHM_OTP_SHA1 @AT@ 5717 @LENGTH@ 15
---------------INS SimpleName@@ALGORITHM_OTP_SHA1 @TO@ QualifiedName@@OneTimePassword.ALGORITHM_OTP_SHA1 @AT@ 5733 @LENGTH@ 18


UPD FieldDeclaration@@private, static, final, Log, [LOG=LogFactory.getLog(PointLookupOptimizer.class)] @TO@ private, static, final, Log, [LOG=LogFactory.getLog(PartitionColumnsSeparator.class)] @AT@ 2991 @LENGTH@ 77
---UPD VariableDeclarationFragment@@LOG=LogFactory.getLog(PointLookupOptimizer.class) @TO@ LOG=LogFactory.getLog(PartitionColumnsSeparator.class) @AT@ 3016 @LENGTH@ 51
------UPD MethodInvocation@@LogFactory.getLog(PointLookupOptimizer.class) @TO@ LogFactory.getLog(PartitionColumnsSeparator.class) @AT@ 3022 @LENGTH@ 45
---------UPD SimpleName@@MethodName:getLog:[PointLookupOptimizer.class] @TO@ MethodName:getLog:[PartitionColumnsSeparator.class] @AT@ 3033 @LENGTH@ 34
------------UPD TypeLiteral@@PointLookupOptimizer.class @TO@ PartitionColumnsSeparator.class @AT@ 3040 @LENGTH@ 26


UPD ExpressionStatement@@Assignment:cache=ObjectCacheFactory.getCache(hconf,queryId) @TO@ Assignment:cache=ObjectCacheFactory.getCache(hconf,queryId,false) @AT@ 6382 @LENGTH@ 52
---UPD Assignment@@cache=ObjectCacheFactory.getCache(hconf,queryId) @TO@ cache=ObjectCacheFactory.getCache(hconf,queryId,false) @AT@ 6382 @LENGTH@ 51
------UPD MethodInvocation@@ObjectCacheFactory.getCache(hconf,queryId) @TO@ ObjectCacheFactory.getCache(hconf,queryId,false) @AT@ 6390 @LENGTH@ 43
---------UPD SimpleName@@MethodName:getCache:[hconf, queryId] @TO@ MethodName:getCache:[hconf, queryId, false] @AT@ 6409 @LENGTH@ 24
------------INS BooleanLiteral@@false @TO@ SimpleName@@MethodName:getCache:[hconf, queryId] @AT@ 6434 @LENGTH@ 5


INS MethodDeclaration@@public, void, MethodName:detectsConstructorExpressionInDistinctQuery,  @TO@ TypeDeclaration@@[public]QueryUtilsUnitTests,  @AT@ 9153 @LENGTH@ 152
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:detectsConstructorExpressionInDistinctQuery,  @AT@ 9153 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:detectsConstructorExpressionInDistinctQuery,  @AT@ 9160 @LENGTH@ 4
---INS SimpleName@@MethodName:detectsConstructorExpressionInDistinctQuery @TO@ MethodDeclaration@@public, void, MethodName:detectsConstructorExpressionInDistinctQuery,  @AT@ 9165 @LENGTH@ 43
---INS ExpressionStatement@@MethodInvocation:assertThat(hasConstructorExpression("select distinct new Foo() from Bar b"),is(true)) @TO@ MethodDeclaration@@public, void, MethodName:detectsConstructorExpressionInDistinctQuery,  @AT@ 9215 @LENGTH@ 87
------INS MethodInvocation@@assertThat(hasConstructorExpression("select distinct new Foo() from Bar b"),is(true)) @TO@ ExpressionStatement@@MethodInvocation:assertThat(hasConstructorExpression("select distinct new Foo() from Bar b"),is(true)) @AT@ 9215 @LENGTH@ 86
---------INS SimpleName@@MethodName:assertThat:[hasConstructorExpression("select distinct new Foo() from Bar b"), is(true)] @TO@ MethodInvocation@@assertThat(hasConstructorExpression("select distinct new Foo() from Bar b"),is(true)) @AT@ 9215 @LENGTH@ 86
------------INS MethodInvocation@@hasConstructorExpression("select distinct new Foo() from Bar b") @TO@ SimpleName@@MethodName:assertThat:[hasConstructorExpression("select distinct new Foo() from Bar b"), is(true)] @AT@ 9226 @LENGTH@ 64
---------------INS SimpleName@@MethodName:hasConstructorExpression:["select distinct new Foo() from Bar b"] @TO@ MethodInvocation@@hasConstructorExpression("select distinct new Foo() from Bar b") @AT@ 9226 @LENGTH@ 64
------------------INS StringLiteral@@"select distinct new Foo() from Bar b" @TO@ SimpleName@@MethodName:hasConstructorExpression:["select distinct new Foo() from Bar b"] @AT@ 9251 @LENGTH@ 38
---------------INS SimpleName@@MethodName:hasConstructorExpression:["select distinct new Foo() from Bar b"] @TO@ MethodInvocation@@hasConstructorExpression("select distinct new Foo() from Bar b") @AT@ 9226 @LENGTH@ 64
------------------INS StringLiteral@@"select distinct new Foo() from Bar b" @TO@ SimpleName@@MethodName:hasConstructorExpression:["select distinct new Foo() from Bar b"] @AT@ 9251 @LENGTH@ 38
------------INS MethodInvocation@@is(true) @TO@ SimpleName@@MethodName:assertThat:[hasConstructorExpression("select distinct new Foo() from Bar b"), is(true)] @AT@ 9292 @LENGTH@ 8
---------------INS SimpleName@@MethodName:is:[true] @TO@ MethodInvocation@@is(true) @AT@ 9292 @LENGTH@ 8
------------------INS BooleanLiteral@@true @TO@ SimpleName@@MethodName:is:[true] @AT@ 9295 @LENGTH@ 4
---------------INS SimpleName@@MethodName:is:[true] @TO@ MethodInvocation@@is(true) @AT@ 9292 @LENGTH@ 8
------------------INS BooleanLiteral@@true @TO@ SimpleName@@MethodName:is:[true] @AT@ 9295 @LENGTH@ 4


UPD TryStatement@@try {  List<ProjectStage> stages=new LinkedList<>();  Yaml yaml=new Yaml();  Iterable<Object> docs=yaml.loadAll(inputStream);  for (  Object item : docs) {    Map<String,Map<String,String>> doc=(Map<String,Map<String,String>>)item;    String stageName=doc.get(PROJECT_PREFIX) != null ? doc.get(PROJECT_PREFIX).get(STAGE) : DEFAULT;    ProjectStageImpl stage=new ProjectStageImpl(stageName);    for (    String key : doc.keySet()) {      if (!key.equals(PROJECT_PREFIX)) {        stage.getConfig().put(key,doc.get(key));      }    }    stages.add(stage.initialize());  }  Optional<ProjectStage> defaultStage=stages.stream().filter(stage -> DEFAULT.equals(stage.getName())).findFirst();  if (!defaultStage.isPresent())   throw new RuntimeException("Missing stage 'default' in project-stages.yml");  final Map<String,String> defaults=defaultStage.get().getProperties();  stages.stream().filter(stage -> !stage.getName().equals(DEFAULT)).forEach(stage -> {    defaults.keySet().forEach(key -> {      Map<String,String> current=stage.getProperties();      if (!current.keySet().contains(key))       current.put(key,defaults.get(key));    });  });  return stages;}  finally {  try {    inputStream.close();  } catch (  IOException e) {  }} @TO@ try {  List<ProjectStage> stages=new LinkedList<>();  Yaml yaml=new Yaml();  Iterable<Object> docs=yaml.loadAll(inputStream);  for (  Object item : docs) {    Map<String,Map<String,String>> doc=(Map<String,Map<String,String>>)item;    String stageName=doc.get(PROJECT_PREFIX) != null ? doc.get(PROJECT_PREFIX).get(STAGE) : DEFAULT;    ProjectStageImpl stage=new ProjectStageImpl(stageName);    for (    String key : doc.keySet()) {      if (!key.equals(PROJECT_PREFIX)) {        stage.getConfig().put(key,doc.get(key));      }    }    stages.add(stage.initialize());  }  Optional<ProjectStage> defaultStage=stages.stream().filter(stage -> DEFAULT.equals(stage.getName())).findFirst();  if (!defaultStage.isPresent())   throw new RuntimeException("Missing stage 'default' in project-stages.yml");  final Map<String,String> defaults=defaultStage.get().getProperties();  stages.stream().filter(stage -> !stage.getName().equals(DEFAULT)).forEach(stage -> {    Map<String,String> current=stage.getProperties();    Set<String> currentKeys=current.keySet();    defaults.keySet().forEach(key -> {      if (!currentKeys.contains(key))       current.put(key,defaults.get(key));    });  });  return stages;}  finally {  try {    inputStream.close();  } catch (  IOException e) {  }} @AT@ 1076 @LENGTH@ 1947
---DEL ExpressionStatement@@MethodInvocation:stages.stream().filter(stage -> !stage.getName().equals(DEFAULT)).forEach(stage -> {
  defaults.keySet().forEach(key -> {
    Map<String,String> current=stage.getProperties();
    if (!current.keySet().contains(key))     current.put(key,defaults.get(key));
  }
);
}
) @AT@ 2298 @LENGTH@ 541
------DEL MethodInvocation@@stages.stream().filter(stage -> !stage.getName().equals(DEFAULT)).forEach(stage -> {
  defaults.keySet().forEach(key -> {
    Map<String,String> current=stage.getProperties();
    if (!current.keySet().contains(key))     current.put(key,defaults.get(key));
  }
);
}
) @AT@ 2298 @LENGTH@ 540
---------DEL MethodInvocation@@MethodName:stream:[] @AT@ 2298 @LENGTH@ 15
---------DEL SimpleName@@Name:stages @AT@ 2298 @LENGTH@ 6
---------DEL SimpleName@@MethodName:forEach:[stage -> {
  defaults.keySet().forEach(key -> {
    Map<String,String> current=stage.getProperties();
    if (!current.keySet().contains(key))     current.put(key,defaults.get(key));
  }
);
}
] @AT@ 2406 @LENGTH@ 432
------------DEL LambdaExpression@@stage -> {
  defaults.keySet().forEach(key -> {
    Map<String,String> current=stage.getProperties();
    if (!current.keySet().contains(key))     current.put(key,defaults.get(key));
  }
);
}
 @AT@ 2414 @LENGTH@ 423
---------------DEL VariableDeclarationFragment@@stage @AT@ 2414 @LENGTH@ 5
------------------DEL SimpleName@@stage @AT@ 2414 @LENGTH@ 5
---MOV ExpressionStatement@@MethodInvocation:defaults.keySet().forEach(key -> {
  Map<String,String> current=stage.getProperties();
  if (!current.keySet().contains(key))   current.put(key,defaults.get(key));
}
) @TO@ TryStatement@@try {  List<ProjectStage> stages=new LinkedList<>();  Yaml yaml=new Yaml();  Iterable<Object> docs=yaml.loadAll(inputStream);  for (  Object item : docs) {    Map<String,Map<String,String>> doc=(Map<String,Map<String,String>>)item;    String stageName=doc.get(PROJECT_PREFIX) != null ? doc.get(PROJECT_PREFIX).get(STAGE) : DEFAULT;    ProjectStageImpl stage=new ProjectStageImpl(stageName);    for (    String key : doc.keySet()) {      if (!key.equals(PROJECT_PREFIX)) {        stage.getConfig().put(key,doc.get(key));      }    }    stages.add(stage.initialize());  }  Optional<ProjectStage> defaultStage=stages.stream().filter(stage -> DEFAULT.equals(stage.getName())).findFirst();  if (!defaultStage.isPresent())   throw new RuntimeException("Missing stage 'default' in project-stages.yml");  final Map<String,String> defaults=defaultStage.get().getProperties();  stages.stream().filter(stage -> !stage.getName().equals(DEFAULT)).forEach(stage -> {    defaults.keySet().forEach(key -> {      Map<String,String> current=stage.getProperties();      if (!current.keySet().contains(key))       current.put(key,defaults.get(key));    });  });  return stages;}  finally {  try {    inputStream.close();  } catch (  IOException e) {  }} @AT@ 2449 @LENGTH@ 366
------UPD MethodInvocation@@defaults.keySet().forEach(key -> {
  Map<String,String> current=stage.getProperties();
  if (!current.keySet().contains(key))   current.put(key,defaults.get(key));
}
) @TO@ stages.stream().filter(stage -> !stage.getName().equals(DEFAULT)).forEach(stage -> {
  Map<String,String> current=stage.getProperties();
  Set<String> currentKeys=current.keySet();
  defaults.keySet().forEach(key -> {
    if (!currentKeys.contains(key))     current.put(key,defaults.get(key));
  }
);
}
) @AT@ 2449 @LENGTH@ 365
---------MOV MethodInvocation@@MethodName:filter:[stage -> !stage.getName().equals(DEFAULT)] @TO@ MethodInvocation@@defaults.keySet().forEach(key -> {
  Map<String,String> current=stage.getProperties();
  if (!current.keySet().contains(key))   current.put(key,defaults.get(key));
}
) @AT@ 2298 @LENGTH@ 86
---------UPD MethodInvocation@@MethodName:keySet:[] @TO@ MethodName:stream:[] @AT@ 2449 @LENGTH@ 17
---------UPD SimpleName@@Name:defaults @TO@ Name:stages @AT@ 2449 @LENGTH@ 8
---------UPD SimpleName@@MethodName:forEach:[key -> {
  Map<String,String> current=stage.getProperties();
  if (!current.keySet().contains(key))   current.put(key,defaults.get(key));
}
] @TO@ MethodName:forEach:[stage -> {
  Map<String,String> current=stage.getProperties();
  Set<String> currentKeys=current.keySet();
  defaults.keySet().forEach(key -> {
    if (!currentKeys.contains(key))     current.put(key,defaults.get(key));
  }
);
}
] @AT@ 2467 @LENGTH@ 347
------------UPD LambdaExpression@@key -> {
  Map<String,String> current=stage.getProperties();
  if (!current.keySet().contains(key))   current.put(key,defaults.get(key));
}
 @TO@ stage -> {
  Map<String,String> current=stage.getProperties();
  Set<String> currentKeys=current.keySet();
  defaults.keySet().forEach(key -> {
    if (!currentKeys.contains(key))     current.put(key,defaults.get(key));
  }
);
}
 @AT@ 2508 @LENGTH@ 280
---------------INS VariableDeclarationFragment@@stage @TO@ LambdaExpression@@key -> {
  Map<String,String> current=stage.getProperties();
  if (!current.keySet().contains(key))   current.put(key,defaults.get(key));
}
 @AT@ 2436 @LENGTH@ 5
------------------INS SimpleName@@stage @TO@ VariableDeclarationFragment@@stage @AT@ 2436 @LENGTH@ 5
---------------INS VariableDeclarationStatement@@Set<String> currentKeys=current.keySet(); @TO@ LambdaExpression@@key -> {
  Map<String,String> current=stage.getProperties();
  if (!current.keySet().contains(key))   current.put(key,defaults.get(key));
}
 @AT@ 2548 @LENGTH@ 43
------------------INS ParameterizedType@@Set<String> @TO@ VariableDeclarationStatement@@Set<String> currentKeys=current.keySet(); @AT@ 2548 @LENGTH@ 11
---------------------INS SimpleType@@Set @TO@ ParameterizedType@@Set<String> @AT@ 2548 @LENGTH@ 3
---------------------INS SimpleType@@String @TO@ ParameterizedType@@Set<String> @AT@ 2552 @LENGTH@ 6
------------------INS VariableDeclarationFragment@@currentKeys=current.keySet() @TO@ VariableDeclarationStatement@@Set<String> currentKeys=current.keySet(); @AT@ 2560 @LENGTH@ 30
---------------------INS SimpleName@@currentKeys @TO@ VariableDeclarationFragment@@currentKeys=current.keySet() @AT@ 2560 @LENGTH@ 11
---------------------INS MethodInvocation@@current.keySet() @TO@ VariableDeclarationFragment@@currentKeys=current.keySet() @AT@ 2574 @LENGTH@ 16
------------------------INS SimpleName@@Name:current @TO@ MethodInvocation@@current.keySet() @AT@ 2574 @LENGTH@ 7
------------------------INS SimpleName@@MethodName:keySet:[] @TO@ MethodInvocation@@current.keySet() @AT@ 2582 @LENGTH@ 8
---------------INS ExpressionStatement@@MethodInvocation:defaults.keySet().forEach(key -> {
  if (!currentKeys.contains(key))   current.put(key,defaults.get(key));
}
) @TO@ LambdaExpression@@key -> {
  Map<String,String> current=stage.getProperties();
  if (!current.keySet().contains(key))   current.put(key,defaults.get(key));
}
 @AT@ 2616 @LENGTH@ 272
------------------INS MethodInvocation@@defaults.keySet().forEach(key -> {
  if (!currentKeys.contains(key))   current.put(key,defaults.get(key));
}
) @TO@ ExpressionStatement@@MethodInvocation:defaults.keySet().forEach(key -> {
  if (!currentKeys.contains(key))   current.put(key,defaults.get(key));
}
) @AT@ 2616 @LENGTH@ 271
---------------------INS MethodInvocation@@MethodName:keySet:[] @TO@ MethodInvocation@@defaults.keySet().forEach(key -> {
  if (!currentKeys.contains(key))   current.put(key,defaults.get(key));
}
) @AT@ 2616 @LENGTH@ 17
---------------------INS SimpleName@@Name:defaults @TO@ MethodInvocation@@defaults.keySet().forEach(key -> {
  if (!currentKeys.contains(key))   current.put(key,defaults.get(key));
}
) @AT@ 2616 @LENGTH@ 8
---------------------INS SimpleName@@MethodName:forEach:[key -> {
  if (!currentKeys.contains(key))   current.put(key,defaults.get(key));
}
] @TO@ MethodInvocation@@defaults.keySet().forEach(key -> {
  if (!currentKeys.contains(key))   current.put(key,defaults.get(key));
}
) @AT@ 2634 @LENGTH@ 253
------------------------INS LambdaExpression@@key -> {
  if (!currentKeys.contains(key))   current.put(key,defaults.get(key));
}
 @TO@ SimpleName@@MethodName:forEach:[key -> {
  if (!currentKeys.contains(key))   current.put(key,defaults.get(key));
}
] @AT@ 2675 @LENGTH@ 186
---------------------------MOV VariableDeclarationFragment@@key @TO@ LambdaExpression@@key -> {
  if (!currentKeys.contains(key))   current.put(key,defaults.get(key));
}
 @AT@ 2508 @LENGTH@ 3
---------------------------MOV IfStatement@@if (!current.keySet().contains(key)) current.put(key,defaults.get(key)); @TO@ LambdaExpression@@key -> {
  if (!currentKeys.contains(key))   current.put(key,defaults.get(key));
}
 @AT@ 2642 @LENGTH@ 112
------------------------------UPD PrefixExpression@@!current.keySet().contains(key) @TO@ !currentKeys.contains(key) @AT@ 2645 @LENGTH@ 31
---------------------------------UPD MethodInvocation@@current.keySet().contains(key) @TO@ currentKeys.contains(key) @AT@ 2646 @LENGTH@ 30
------------------------------------DEL MethodInvocation@@MethodName:keySet:[] @AT@ 2646 @LENGTH@ 16
------------------------------------UPD SimpleName@@Name:current @TO@ Name:currentKeys @AT@ 2646 @LENGTH@ 7
---------------UPD IfStatement@@if (!current.keySet().contains(key)) current.put(key,defaults.get(key)); @TO@ if (!currentKeys.contains(key)) current.put(key,defaults.get(key)); @AT@ 2642 @LENGTH@ 112


UPD TypeDeclaration@@[@Configuration, @ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration"), public]AtomComponentAutoConfiguration,  @TO@ [@Configuration, @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration"), public]AtomComponentAutoConfiguration,  @AT@ 1438 @LENGTH@ 596
---UPD NormalAnnotation@@@ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1453 @LENGTH@ 79
---UPD NormalAnnotation@@@AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1533 @LENGTH@ 80


UPD VariableDeclarationStatement@@BasicQuery result=new BasicQuery(query.getQueryObject().toString(),fieldSpec); @TO@ BasicQuery result=new BasicQuery(query.getQueryObject(),(DBObject)JSON.parse(fieldSpec)); @AT@ 3762 @LENGTH@ 81
---UPD VariableDeclarationFragment@@result=new BasicQuery(query.getQueryObject().toString(),fieldSpec) @TO@ result=new BasicQuery(query.getQueryObject(),(DBObject)JSON.parse(fieldSpec)) @AT@ 3773 @LENGTH@ 69
------UPD ClassInstanceCreation@@BasicQuery[query.getQueryObject().toString(), fieldSpec] @TO@ BasicQuery[query.getQueryObject(), (DBObject)JSON.parse(fieldSpec)] @AT@ 3782 @LENGTH@ 60
---------UPD MethodInvocation@@query.getQueryObject().toString() @TO@ query.getQueryObject() @AT@ 3797 @LENGTH@ 33
------------DEL MethodInvocation@@MethodName:getQueryObject:[] @AT@ 3797 @LENGTH@ 22
------------UPD SimpleName@@MethodName:toString:[] @TO@ MethodName:getQueryObject:[] @AT@ 3820 @LENGTH@ 10
---------DEL SimpleName@@fieldSpec @AT@ 3832 @LENGTH@ 9
---------INS CastExpression@@(DBObject)JSON.parse(fieldSpec) @TO@ ClassInstanceCreation@@BasicQuery[query.getQueryObject().toString(), fieldSpec] @AT@ 3880 @LENGTH@ 32
------------INS SimpleType@@DBObject @TO@ CastExpression@@(DBObject)JSON.parse(fieldSpec) @AT@ 3881 @LENGTH@ 8
------------INS MethodInvocation@@JSON.parse(fieldSpec) @TO@ CastExpression@@(DBObject)JSON.parse(fieldSpec) @AT@ 3891 @LENGTH@ 21
---------------INS SimpleName@@Name:JSON @TO@ MethodInvocation@@JSON.parse(fieldSpec) @AT@ 3891 @LENGTH@ 4
---------------INS SimpleName@@MethodName:parse:[fieldSpec] @TO@ MethodInvocation@@JSON.parse(fieldSpec) @AT@ 3896 @LENGTH@ 16
------------------INS SimpleName@@fieldSpec @TO@ SimpleName@@MethodName:parse:[fieldSpec] @AT@ 3902 @LENGTH@ 9


UPD IfStatement@@if (context.length() > 0 && !context.endsWith("/")) {  context=context + "/";} @TO@ if (context.length() > 0 || !context.endsWith("/")) {  System.out.println("Inside if");  context=context + "/";} @AT@ 814 @LENGTH@ 100
---UPD InfixExpression@@context.length() > 0 && !context.endsWith("/") @TO@ context.length() > 0 || !context.endsWith("/") @AT@ 818 @LENGTH@ 46
------UPD Operator@@&& @TO@ || @AT@ 838 @LENGTH@ 2
---UPD Block@@ThenBody:{  context=context + "/";} @TO@ ThenBody:{  System.out.println("Inside if");  context=context + "/";} @AT@ 866 @LENGTH@ 48
------INS ExpressionStatement@@MethodInvocation:System.out.println("Inside if") @TO@ Block@@ThenBody:{  context=context + "/";} @AT@ 880 @LENGTH@ 32
---------INS MethodInvocation@@System.out.println("Inside if") @TO@ ExpressionStatement@@MethodInvocation:System.out.println("Inside if") @AT@ 880 @LENGTH@ 31
------------INS QualifiedName@@Name:System.out @TO@ MethodInvocation@@System.out.println("Inside if") @AT@ 880 @LENGTH@ 10
------------INS SimpleName@@MethodName:println:["Inside if"] @TO@ MethodInvocation@@System.out.println("Inside if") @AT@ 891 @LENGTH@ 20
---------------INS StringLiteral@@"Inside if" @TO@ SimpleName@@MethodName:println:["Inside if"] @AT@ 899 @LENGTH@ 11


UPD MethodDeclaration@@public, void, MethodName:testRabbitGatewaySupportWithJmsTemplate, Exception,  @TO@ public, void, MethodName:testRabbitGatewaySupportWithTemplate, Exception,  @AT@ 1768 @LENGTH@ 525
---UPD SimpleName@@MethodName:testRabbitGatewaySupportWithJmsTemplate @TO@ MethodName:testRabbitGatewaySupportWithTemplate @AT@ 1780 @LENGTH@ 39
---UPD ExpressionStatement@@MethodInvocation:gateway.setRabbitTemplate(template) @TO@ MethodInvocation:gateway.setRabbitOperations(template) @AT@ 2087 @LENGTH@ 36
------UPD MethodInvocation@@gateway.setRabbitTemplate(template) @TO@ gateway.setRabbitOperations(template) @AT@ 2087 @LENGTH@ 35
---------UPD SimpleName@@MethodName:setRabbitTemplate:[template] @TO@ MethodName:setRabbitOperations:[template] @AT@ 2095 @LENGTH@ 27
---UPD ExpressionStatement@@MethodInvocation:assertEquals("Correct RabbitTemplate",template,gateway.getRabbitTemplate()) @TO@ MethodInvocation:assertEquals("Correct RabbitTemplate",template,gateway.getRabbitOperations()) @AT@ 2158 @LENGTH@ 78
------UPD MethodInvocation@@assertEquals("Correct RabbitTemplate",template,gateway.getRabbitTemplate()) @TO@ assertEquals("Correct RabbitTemplate",template,gateway.getRabbitOperations()) @AT@ 2158 @LENGTH@ 77
---------UPD SimpleName@@MethodName:assertEquals:["Correct RabbitTemplate", template, gateway.getRabbitTemplate()] @TO@ MethodName:assertEquals:["Correct RabbitTemplate", template, gateway.getRabbitOperations()] @AT@ 2158 @LENGTH@ 77
------------UPD MethodInvocation@@gateway.getRabbitTemplate() @TO@ gateway.getRabbitOperations() @AT@ 2207 @LENGTH@ 27
---------------UPD SimpleName@@MethodName:getRabbitTemplate:[] @TO@ MethodName:getRabbitOperations:[] @AT@ 2215 @LENGTH@ 19


DEL VariableDeclarationStatement@@BufferedReader br=new BufferedReader(mr); @AT@ 5343 @LENGTH@ 45
---DEL SimpleType@@BufferedReader @AT@ 5343 @LENGTH@ 14


UPD TypeDeclaration@@[@Configuration, @ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration"), @EnableConfigurationProperties(ProtobufDataFormatConfiguration.class), public]ProtobufDataFormatAutoConfiguration,  @TO@ [@Configuration, @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration"), @EnableConfigurationProperties(ProtobufDataFormatConfiguration.class), public]ProtobufDataFormatAutoConfiguration,  @AT@ 1677 @LENGTH@ 1144
---UPD NormalAnnotation@@@ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1692 @LENGTH@ 79
---UPD NormalAnnotation@@@AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1772 @LENGTH@ 80


UPD WhileStatement@@while (true) {  while (byteSegmentRef != null) {    if (smallTableVectorDeserializeRow != null) {      byte[] bytes=byteSegmentRef.getBytes();      int offset=(int)byteSegmentRef.getOffset();      int length=byteSegmentRef.getLength();      smallTableVectorDeserializeRow.setBytes(bytes,offset,length);      smallTableVectorDeserializeRow.deserialize(overflowBatch,overflowBatch.DEFAULT_SIZE);    }    overflowBatch.size++;    if (overflowBatch.size == overflowBatch.DEFAULT_SIZE) {      break;    }    byteSegmentRef=hashMapResult.next();  }  for (int i=0; i < duplicateCount; i++) {    int batchIndex=allMatchs[allMatchesIndex + i];    if (bigTableRetainedVectorCopy != null) {      bigTableRetainedVectorCopy.copyByReference(batch,batchIndex,overflowBatch,0);      for (      int column : bigTableRetainedMapping.getOutputColumns()) {        overflowBatch.cols[column].isRepeating=true;      }    }    forwardOverflowNoReset();    for (    int column : bigTableRetainedMapping.getOutputColumns()) {      ColumnVector colVector=overflowBatch.cols[column];      colVector.reset();    }  }  if (hashMapResult.isEof()) {    break;  }  byteSegmentRef=hashMapResult.next();  overflowBatch.reset();} @TO@ while (byteSegmentRef != null) {  while (byteSegmentRef != null) {    if (smallTableVectorDeserializeRow != null) {      byte[] bytes=byteSegmentRef.getBytes();      int offset=(int)byteSegmentRef.getOffset();      int length=byteSegmentRef.getLength();      smallTableVectorDeserializeRow.setBytes(bytes,offset,length);      smallTableVectorDeserializeRow.deserialize(overflowBatch,overflowBatch.size);    }    overflowBatch.size++;    if (overflowBatch.size == overflowBatch.DEFAULT_SIZE) {      break;    }    byteSegmentRef=hashMapResult.next();  }  for (int i=0; i < duplicateCount; i++) {    int batchIndex=allMatchs[allMatchesIndex + i];    if (bigTableRetainedVectorCopy != null) {      bigTableRetainedVectorCopy.copyByReference(batch,batchIndex,overflowBatch,0);      for (      int column : bigTableRetainedMapping.getOutputColumns()) {        overflowBatch.cols[column].isRepeating=true;      }    }    forwardOverflowNoReset();    for (    int column : bigTableRetainedMapping.getOutputColumns()) {      ColumnVector colVector=overflowBatch.cols[column];      colVector.reset();    }  }  if (hashMapResult.isEof()) {    break;  }  byteSegmentRef=hashMapResult.next();  overflowBatch.reset();} @AT@ 11801 @LENGTH@ 2184
---INS InfixExpression@@byteSegmentRef != null @TO@ WhileStatement@@while (true) {  while (byteSegmentRef != null) {    if (smallTableVectorDeserializeRow != null) {      byte[] bytes=byteSegmentRef.getBytes();      int offset=(int)byteSegmentRef.getOffset();      int length=byteSegmentRef.getLength();      smallTableVectorDeserializeRow.setBytes(bytes,offset,length);      smallTableVectorDeserializeRow.deserialize(overflowBatch,overflowBatch.DEFAULT_SIZE);    }    overflowBatch.size++;    if (overflowBatch.size == overflowBatch.DEFAULT_SIZE) {      break;    }    byteSegmentRef=hashMapResult.next();  }  for (int i=0; i < duplicateCount; i++) {    int batchIndex=allMatchs[allMatchesIndex + i];    if (bigTableRetainedVectorCopy != null) {      bigTableRetainedVectorCopy.copyByReference(batch,batchIndex,overflowBatch,0);      for (      int column : bigTableRetainedMapping.getOutputColumns()) {        overflowBatch.cols[column].isRepeating=true;      }    }    forwardOverflowNoReset();    for (    int column : bigTableRetainedMapping.getOutputColumns()) {      ColumnVector colVector=overflowBatch.cols[column];      colVector.reset();    }  }  if (hashMapResult.isEof()) {    break;  }  byteSegmentRef=hashMapResult.next();  overflowBatch.reset();} @AT@ 11808 @LENGTH@ 22
------INS SimpleName@@byteSegmentRef @TO@ InfixExpression@@byteSegmentRef != null @AT@ 11808 @LENGTH@ 14
------INS Operator@@!= @TO@ InfixExpression@@byteSegmentRef != null @AT@ 11822 @LENGTH@ 2
------INS NullLiteral@@null @TO@ InfixExpression@@byteSegmentRef != null @AT@ 11826 @LENGTH@ 4
---DEL BooleanLiteral@@true @AT@ 11808 @LENGTH@ 4
---UPD Block@@WhileBody:{  while (byteSegmentRef != null) {    if (smallTableVectorDeserializeRow != null) {      byte[] bytes=byteSegmentRef.getBytes();      int offset=(int)byteSegmentRef.getOffset();      int length=byteSegmentRef.getLength();      smallTableVectorDeserializeRow.setBytes(bytes,offset,length);      smallTableVectorDeserializeRow.deserialize(overflowBatch,overflowBatch.DEFAULT_SIZE);    }    overflowBatch.size++;    if (overflowBatch.size == overflowBatch.DEFAULT_SIZE) {      break;    }    byteSegmentRef=hashMapResult.next();  }  for (int i=0; i < duplicateCount; i++) {    int batchIndex=allMatchs[allMatchesIndex + i];    if (bigTableRetainedVectorCopy != null) {      bigTableRetainedVectorCopy.copyByReference(batch,batchIndex,overflowBatch,0);      for (      int column : bigTableRetainedMapping.getOutputColumns()) {        overflowBatch.cols[column].isRepeating=true;      }    }    forwardOverflowNoReset();    for (    int column : bigTableRetainedMapping.getOutputColumns()) {      ColumnVector colVector=overflowBatch.cols[column];      colVector.reset();    }  }  if (hashMapResult.isEof()) {    break;  }  byteSegmentRef=hashMapResult.next();  overflowBatch.reset();} @TO@ WhileBody:{  while (byteSegmentRef != null) {    if (smallTableVectorDeserializeRow != null) {      byte[] bytes=byteSegmentRef.getBytes();      int offset=(int)byteSegmentRef.getOffset();      int length=byteSegmentRef.getLength();      smallTableVectorDeserializeRow.setBytes(bytes,offset,length);      smallTableVectorDeserializeRow.deserialize(overflowBatch,overflowBatch.size);    }    overflowBatch.size++;    if (overflowBatch.size == overflowBatch.DEFAULT_SIZE) {      break;    }    byteSegmentRef=hashMapResult.next();  }  for (int i=0; i < duplicateCount; i++) {    int batchIndex=allMatchs[allMatchesIndex + i];    if (bigTableRetainedVectorCopy != null) {      bigTableRetainedVectorCopy.copyByReference(batch,batchIndex,overflowBatch,0);      for (      int column : bigTableRetainedMapping.getOutputColumns()) {        overflowBatch.cols[column].isRepeating=true;      }    }    forwardOverflowNoReset();    for (    int column : bigTableRetainedMapping.getOutputColumns()) {      ColumnVector colVector=overflowBatch.cols[column];      colVector.reset();    }  }  if (hashMapResult.isEof()) {    break;  }  byteSegmentRef=hashMapResult.next();  overflowBatch.reset();} @AT@ 11814 @LENGTH@ 2171
------UPD WhileStatement@@while (byteSegmentRef != null) {  if (smallTableVectorDeserializeRow != null) {    byte[] bytes=byteSegmentRef.getBytes();    int offset=(int)byteSegmentRef.getOffset();    int length=byteSegmentRef.getLength();    smallTableVectorDeserializeRow.setBytes(bytes,offset,length);    smallTableVectorDeserializeRow.deserialize(overflowBatch,overflowBatch.DEFAULT_SIZE);  }  overflowBatch.size++;  if (overflowBatch.size == overflowBatch.DEFAULT_SIZE) {    break;  }  byteSegmentRef=hashMapResult.next();} @TO@ while (byteSegmentRef != null) {  if (smallTableVectorDeserializeRow != null) {    byte[] bytes=byteSegmentRef.getBytes();    int offset=(int)byteSegmentRef.getOffset();    int length=byteSegmentRef.getLength();    smallTableVectorDeserializeRow.setBytes(bytes,offset,length);    smallTableVectorDeserializeRow.deserialize(overflowBatch,overflowBatch.size);  }  overflowBatch.size++;  if (overflowBatch.size == overflowBatch.DEFAULT_SIZE) {    break;  }  byteSegmentRef=hashMapResult.next();} @AT@ 11907 @LENGTH@ 607
---------UPD Block@@WhileBody:{  if (smallTableVectorDeserializeRow != null) {    byte[] bytes=byteSegmentRef.getBytes();    int offset=(int)byteSegmentRef.getOffset();    int length=byteSegmentRef.getLength();    smallTableVectorDeserializeRow.setBytes(bytes,offset,length);    smallTableVectorDeserializeRow.deserialize(overflowBatch,overflowBatch.DEFAULT_SIZE);  }  overflowBatch.size++;  if (overflowBatch.size == overflowBatch.DEFAULT_SIZE) {    break;  }  byteSegmentRef=hashMapResult.next();} @TO@ WhileBody:{  if (smallTableVectorDeserializeRow != null) {    byte[] bytes=byteSegmentRef.getBytes();    int offset=(int)byteSegmentRef.getOffset();    int length=byteSegmentRef.getLength();    smallTableVectorDeserializeRow.setBytes(bytes,offset,length);    smallTableVectorDeserializeRow.deserialize(overflowBatch,overflowBatch.size);  }  overflowBatch.size++;  if (overflowBatch.size == overflowBatch.DEFAULT_SIZE) {    break;  }  byteSegmentRef=hashMapResult.next();} @AT@ 11938 @LENGTH@ 576
------------UPD IfStatement@@if (smallTableVectorDeserializeRow != null) {  byte[] bytes=byteSegmentRef.getBytes();  int offset=(int)byteSegmentRef.getOffset();  int length=byteSegmentRef.getLength();  smallTableVectorDeserializeRow.setBytes(bytes,offset,length);  smallTableVectorDeserializeRow.deserialize(overflowBatch,overflowBatch.DEFAULT_SIZE);} @TO@ if (smallTableVectorDeserializeRow != null) {  byte[] bytes=byteSegmentRef.getBytes();  int offset=(int)byteSegmentRef.getOffset();  int length=byteSegmentRef.getLength();  smallTableVectorDeserializeRow.setBytes(bytes,offset,length);  smallTableVectorDeserializeRow.deserialize(overflowBatch,overflowBatch.size);} @AT@ 11949 @LENGTH@ 388
---------------UPD Block@@ThenBody:{  byte[] bytes=byteSegmentRef.getBytes();  int offset=(int)byteSegmentRef.getOffset();  int length=byteSegmentRef.getLength();  smallTableVectorDeserializeRow.setBytes(bytes,offset,length);  smallTableVectorDeserializeRow.deserialize(overflowBatch,overflowBatch.DEFAULT_SIZE);} @TO@ ThenBody:{  byte[] bytes=byteSegmentRef.getBytes();  int offset=(int)byteSegmentRef.getOffset();  int length=byteSegmentRef.getLength();  smallTableVectorDeserializeRow.setBytes(bytes,offset,length);  smallTableVectorDeserializeRow.deserialize(overflowBatch,overflowBatch.size);} @AT@ 11993 @LENGTH@ 344
------------------UPD ExpressionStatement@@MethodInvocation:smallTableVectorDeserializeRow.deserialize(overflowBatch,overflowBatch.DEFAULT_SIZE) @TO@ MethodInvocation:smallTableVectorDeserializeRow.deserialize(overflowBatch,overflowBatch.size) @AT@ 12241 @LENGTH@ 86
---------------------UPD MethodInvocation@@smallTableVectorDeserializeRow.deserialize(overflowBatch,overflowBatch.DEFAULT_SIZE) @TO@ smallTableVectorDeserializeRow.deserialize(overflowBatch,overflowBatch.size) @AT@ 12241 @LENGTH@ 85
------------------------UPD SimpleName@@MethodName:deserialize:[overflowBatch, overflowBatch.DEFAULT_SIZE] @TO@ MethodName:deserialize:[overflowBatch, overflowBatch.size] @AT@ 12272 @LENGTH@ 54
---------------------------UPD QualifiedName@@overflowBatch.DEFAULT_SIZE @TO@ overflowBatch.size @AT@ 12299 @LENGTH@ 26
------------------------------UPD SimpleName@@DEFAULT_SIZE @TO@ size @AT@ 12313 @LENGTH@ 12


UPD TypeDeclaration@@[@ConfigurationProperties(prefix="camel.dataformat.json"), public]JohnzonDataFormatConfiguration,  @TO@ [@ConfigurationProperties(prefix="camel.dataformat.json-johnzon"), public]JohnzonDataFormatConfiguration,  @AT@ 1157 @LENGTH@ 6763
---UPD NormalAnnotation@@@ConfigurationProperties(prefix="camel.dataformat.json") @TO@ @ConfigurationProperties(prefix="camel.dataformat.json-johnzon") @AT@ 1157 @LENGTH@ 58


UPD TypeDeclaration@@[@Configuration, @ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration"), @EnableConfigurationProperties(MQTTComponentConfiguration.class), public]MQTTComponentAutoConfiguration,  @TO@ [@Configuration, @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration"), @EnableConfigurationProperties(MQTTComponentConfiguration.class), public]MQTTComponentAutoConfiguration,  @AT@ 1619 @LENGTH@ 2039
---UPD NormalAnnotation@@@ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1634 @LENGTH@ 79
---UPD NormalAnnotation@@@AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1714 @LENGTH@ 80


DEL MethodDeclaration@@public, void, MethodName:correlationconvertAndSend, Object object, CorrelationData correlationData, AmqpException,  @AT@ 30430 @LENGTH@ 170
---DEL Modifier@@public @AT@ 30430 @LENGTH@ 6
---DEL PrimitiveType@@void @AT@ 30437 @LENGTH@ 4
---DEL SimpleName@@MethodName:correlationconvertAndSend @AT@ 30442 @LENGTH@ 25
---DEL SingleVariableDeclaration@@Object object @AT@ 30468 @LENGTH@ 13
------DEL SimpleType@@Object @AT@ 30468 @LENGTH@ 6
------DEL SimpleName@@object @AT@ 30475 @LENGTH@ 6
---DEL SingleVariableDeclaration@@CorrelationData correlationData @AT@ 30483 @LENGTH@ 31
------DEL SimpleType@@CorrelationData @AT@ 30483 @LENGTH@ 15
------DEL SimpleName@@correlationData @AT@ 30499 @LENGTH@ 15
---DEL SimpleType@@AmqpException @AT@ 30523 @LENGTH@ 13
---DEL ExpressionStatement@@MethodInvocation:this.correlationConvertAndSend(object,correlationData) @AT@ 30541 @LENGTH@ 56
------DEL MethodInvocation@@this.correlationConvertAndSend(object,correlationData) @AT@ 30541 @LENGTH@ 55
---------DEL ThisExpression@@this @AT@ 30541 @LENGTH@ 4
---------DEL SimpleName@@MethodName:correlationConvertAndSend:[object, correlationData] @AT@ 30546 @LENGTH@ 50
------------DEL SimpleName@@object @AT@ 30572 @LENGTH@ 6
------------DEL SimpleName@@correlationData @AT@ 30580 @LENGTH@ 15


UPD IfStatement@@if (requestPath.startsWith(path)) {  return false;} @TO@ if (requestPath.startsWith(mapping.getPath(path))) {  return false;} @AT@ 3375 @LENGTH@ 60
---UPD MethodInvocation@@requestPath.startsWith(path) @TO@ requestPath.startsWith(mapping.getPath(path)) @AT@ 3379 @LENGTH@ 28
------INS SimpleName@@MethodName:startsWith:[mapping.getPath(path)] @TO@ MethodInvocation@@requestPath.startsWith(path) @AT@ 3391 @LENGTH@ 33
---------INS MethodInvocation@@mapping.getPath(path) @TO@ SimpleName@@MethodName:startsWith:[mapping.getPath(path)] @AT@ 3402 @LENGTH@ 21
------------MOV SimpleName@@MethodName:startsWith:[path] @TO@ MethodInvocation@@mapping.getPath(path) @AT@ 3391 @LENGTH@ 16
------------INS SimpleName@@Name:mapping @TO@ MethodInvocation@@mapping.getPath(path) @AT@ 3402 @LENGTH@ 7
------UPD SimpleName@@MethodName:startsWith:[path] @TO@ MethodName:getPath:[path] @AT@ 3391 @LENGTH@ 16


UPD TypeDeclaration@@[@Configuration, @ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration"), @EnableConfigurationProperties(ServletComponentConfiguration.class), public]ServletComponentAutoConfiguration,  @TO@ [@Configuration, @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration"), @EnableConfigurationProperties(ServletComponentConfiguration.class), public]ServletComponentAutoConfiguration,  @AT@ 1628 @LENGTH@ 2079
---UPD NormalAnnotation@@@ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1643 @LENGTH@ 79
---UPD NormalAnnotation@@@AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1723 @LENGTH@ 80


UPD TypeDeclaration@@[@Configuration, @ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration"), public]BeanValidatorComponentAutoConfiguration,  @TO@ [@Configuration, @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration"), public]BeanValidatorComponentAutoConfiguration,  @AT@ 1467 @LENGTH@ 661
---UPD NormalAnnotation@@@ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1482 @LENGTH@ 79
---UPD NormalAnnotation@@@AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1562 @LENGTH@ 80


INS MethodDeclaration@@public, void, MethodName:detectsFallbackPageableIfNullOneIsConfigured,  @TO@ TypeDeclaration@@[public]PageableHandlerMethodArgumentResolverUnitTests, PageableDefaultUnitTests @AT@ 8310 @LENGTH@ 307
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:detectsFallbackPageableIfNullOneIsConfigured,  @AT@ 8310 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:detectsFallbackPageableIfNullOneIsConfigured,  @AT@ 8317 @LENGTH@ 4
---INS SimpleName@@MethodName:detectsFallbackPageableIfNullOneIsConfigured @TO@ MethodDeclaration@@public, void, MethodName:detectsFallbackPageableIfNullOneIsConfigured,  @AT@ 8322 @LENGTH@ 44
---INS VariableDeclarationStatement@@PageableHandlerMethodArgumentResolver resolver=getResolver(); @TO@ MethodDeclaration@@public, void, MethodName:detectsFallbackPageableIfNullOneIsConfigured,  @AT@ 8374 @LENGTH@ 63
------INS SimpleType@@PageableHandlerMethodArgumentResolver @TO@ VariableDeclarationStatement@@PageableHandlerMethodArgumentResolver resolver=getResolver(); @AT@ 8374 @LENGTH@ 37
------INS VariableDeclarationFragment@@resolver=getResolver() @TO@ VariableDeclarationStatement@@PageableHandlerMethodArgumentResolver resolver=getResolver(); @AT@ 8412 @LENGTH@ 24
---------INS SimpleName@@resolver @TO@ VariableDeclarationFragment@@resolver=getResolver() @AT@ 8412 @LENGTH@ 8
---------INS MethodInvocation@@MethodName:getResolver:[] @TO@ VariableDeclarationFragment@@resolver=getResolver() @AT@ 8423 @LENGTH@ 13
---INS ExpressionStatement@@MethodInvocation:resolver.setFallbackPageable(null) @TO@ MethodDeclaration@@public, void, MethodName:detectsFallbackPageableIfNullOneIsConfigured,  @AT@ 8440 @LENGTH@ 35
------INS MethodInvocation@@resolver.setFallbackPageable(null) @TO@ ExpressionStatement@@MethodInvocation:resolver.setFallbackPageable(null) @AT@ 8440 @LENGTH@ 34
---------INS SimpleName@@Name:resolver @TO@ MethodInvocation@@resolver.setFallbackPageable(null) @AT@ 8440 @LENGTH@ 8
---------INS SimpleName@@MethodName:setFallbackPageable:[null] @TO@ MethodInvocation@@resolver.setFallbackPageable(null) @AT@ 8449 @LENGTH@ 25
------------INS NullLiteral@@null @TO@ SimpleName@@MethodName:setFallbackPageable:[null] @AT@ 8469 @LENGTH@ 4
---INS ExpressionStatement@@MethodInvocation:assertThat(resolver.isFallbackPageable(null),is(false)) @TO@ MethodDeclaration@@public, void, MethodName:detectsFallbackPageableIfNullOneIsConfigured,  @AT@ 8479 @LENGTH@ 57
------INS MethodInvocation@@assertThat(resolver.isFallbackPageable(null),is(false)) @TO@ ExpressionStatement@@MethodInvocation:assertThat(resolver.isFallbackPageable(null),is(false)) @AT@ 8479 @LENGTH@ 56
---------INS SimpleName@@MethodName:assertThat:[resolver.isFallbackPageable(null), is(false)] @TO@ MethodInvocation@@assertThat(resolver.isFallbackPageable(null),is(false)) @AT@ 8479 @LENGTH@ 56
------------INS MethodInvocation@@resolver.isFallbackPageable(null) @TO@ SimpleName@@MethodName:assertThat:[resolver.isFallbackPageable(null), is(false)] @AT@ 8490 @LENGTH@ 33
---------------INS SimpleName@@Name:resolver @TO@ MethodInvocation@@resolver.isFallbackPageable(null) @AT@ 8490 @LENGTH@ 8
---------------INS SimpleName@@MethodName:isFallbackPageable:[null] @TO@ MethodInvocation@@resolver.isFallbackPageable(null) @AT@ 8499 @LENGTH@ 24
------------------INS NullLiteral@@null @TO@ SimpleName@@MethodName:isFallbackPageable:[null] @AT@ 8518 @LENGTH@ 4
------------INS MethodInvocation@@is(false) @TO@ SimpleName@@MethodName:assertThat:[resolver.isFallbackPageable(null), is(false)] @AT@ 8525 @LENGTH@ 9
---------------INS SimpleName@@MethodName:is:[false] @TO@ MethodInvocation@@is(false) @AT@ 8525 @LENGTH@ 9
------------------INS BooleanLiteral@@false @TO@ SimpleName@@MethodName:is:[false] @AT@ 8528 @LENGTH@ 5
---------------INS SimpleName@@MethodName:is:[false] @TO@ MethodInvocation@@is(false) @AT@ 8525 @LENGTH@ 9
------------------INS BooleanLiteral@@false @TO@ SimpleName@@MethodName:is:[false] @AT@ 8528 @LENGTH@ 5
---INS ExpressionStatement@@MethodInvocation:assertThat(resolver.isFallbackPageable(new PageRequest(0,10)),is(false)) @TO@ MethodDeclaration@@public, void, MethodName:detectsFallbackPageableIfNullOneIsConfigured,  @AT@ 8539 @LENGTH@ 75
------INS MethodInvocation@@assertThat(resolver.isFallbackPageable(new PageRequest(0,10)),is(false)) @TO@ ExpressionStatement@@MethodInvocation:assertThat(resolver.isFallbackPageable(new PageRequest(0,10)),is(false)) @AT@ 8539 @LENGTH@ 74
---------INS SimpleName@@MethodName:assertThat:[resolver.isFallbackPageable(new PageRequest(0,10)), is(false)] @TO@ MethodInvocation@@assertThat(resolver.isFallbackPageable(new PageRequest(0,10)),is(false)) @AT@ 8539 @LENGTH@ 74
------------INS MethodInvocation@@resolver.isFallbackPageable(new PageRequest(0,10)) @TO@ SimpleName@@MethodName:assertThat:[resolver.isFallbackPageable(new PageRequest(0,10)), is(false)] @AT@ 8550 @LENGTH@ 51
---------------INS SimpleName@@Name:resolver @TO@ MethodInvocation@@resolver.isFallbackPageable(new PageRequest(0,10)) @AT@ 8550 @LENGTH@ 8
---------------INS SimpleName@@MethodName:isFallbackPageable:[new PageRequest(0,10)] @TO@ MethodInvocation@@resolver.isFallbackPageable(new PageRequest(0,10)) @AT@ 8559 @LENGTH@ 42
------------------INS ClassInstanceCreation@@PageRequest[0, 10] @TO@ SimpleName@@MethodName:isFallbackPageable:[new PageRequest(0,10)] @AT@ 8578 @LENGTH@ 22
---------------------INS New@@new @TO@ ClassInstanceCreation@@PageRequest[0, 10] @AT@ 8578 @LENGTH@ 3
---------------------INS SimpleType@@PageRequest @TO@ ClassInstanceCreation@@PageRequest[0, 10] @AT@ 8582 @LENGTH@ 11
---------------------INS NumberLiteral@@0 @TO@ ClassInstanceCreation@@PageRequest[0, 10] @AT@ 8594 @LENGTH@ 1
---------------------INS NumberLiteral@@10 @TO@ ClassInstanceCreation@@PageRequest[0, 10] @AT@ 8597 @LENGTH@ 2
------------INS MethodInvocation@@is(false) @TO@ SimpleName@@MethodName:assertThat:[resolver.isFallbackPageable(new PageRequest(0,10)), is(false)] @AT@ 8603 @LENGTH@ 9
---------------INS SimpleName@@MethodName:is:[false] @TO@ MethodInvocation@@is(false) @AT@ 8603 @LENGTH@ 9
------------------INS BooleanLiteral@@false @TO@ SimpleName@@MethodName:is:[false] @AT@ 8606 @LENGTH@ 5
---------------INS SimpleName@@MethodName:is:[false] @TO@ MethodInvocation@@is(false) @AT@ 8603 @LENGTH@ 9
------------------INS BooleanLiteral@@false @TO@ SimpleName@@MethodName:is:[false] @AT@ 8606 @LENGTH@ 5


UPD TypeDeclaration@@[@Configuration, @ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration"), public]AtmosComponentAutoConfiguration,  @TO@ [@Configuration, @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration"), public]AtmosComponentAutoConfiguration,  @AT@ 1441 @LENGTH@ 603
---UPD NormalAnnotation@@@ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1456 @LENGTH@ 79
---UPD NormalAnnotation@@@AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1536 @LENGTH@ 80


UPD FieldDeclaration@@private, GraphDatabaseService, [graphDatabaseService=getGraphDatabaseService()] @TO@ private, static, GraphDatabaseService, [graphDatabaseService] @AT@ 1570 @LENGTH@ 78
---UPD VariableDeclarationFragment@@graphDatabaseService=getGraphDatabaseService() @TO@ graphDatabaseService @AT@ 1599 @LENGTH@ 48
------DEL MethodInvocation@@MethodName:getGraphDatabaseService:[] @AT@ 1622 @LENGTH@ 25
---INS Modifier@@static @TO@ FieldDeclaration@@private, GraphDatabaseService, [graphDatabaseService=getGraphDatabaseService()] @AT@ 1607 @LENGTH@ 6


UPD TypeDeclaration@@[@Configuration, @ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration"), @EnableConfigurationProperties(Olingo2ComponentConfiguration.class), public]Olingo2ComponentAutoConfiguration,  @TO@ [@Configuration, @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration"), @EnableConfigurationProperties(Olingo2ComponentConfiguration.class), public]Olingo2ComponentAutoConfiguration,  @AT@ 1628 @LENGTH@ 2079
---UPD NormalAnnotation@@@ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1643 @LENGTH@ 79
---UPD NormalAnnotation@@@AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1723 @LENGTH@ 80


UPD TypeDeclaration@@[@Configuration, @ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration"), public]AsteriskComponentAutoConfiguration,  @TO@ [@Configuration, @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration"), public]AsteriskComponentAutoConfiguration,  @AT@ 1450 @LENGTH@ 625
---UPD NormalAnnotation@@@ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1465 @LENGTH@ 79
---UPD NormalAnnotation@@@AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1545 @LENGTH@ 80


UPD TypeDeclaration@@[@Configuration, @ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration"), @EnableConfigurationProperties(NettyComponentConfiguration.class), public]NettyComponentAutoConfiguration,  @TO@ [@Configuration, @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration"), @EnableConfigurationProperties(NettyComponentConfiguration.class), public]NettyComponentAutoConfiguration,  @AT@ 1622 @LENGTH@ 2048
---UPD NormalAnnotation@@@ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1637 @LENGTH@ 79
---UPD NormalAnnotation@@@AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1717 @LENGTH@ 80


UPD ExpressionStatement@@MethodInvocation:invoke(method,invokeFindOne(id)) @TO@ MethodInvocation:invoke(method,this.<Object>invokeFindOne(id)) @AT@ 5764 @LENGTH@ 34
---UPD MethodInvocation@@invoke(method,invokeFindOne(id)) @TO@ invoke(method,this.<Object>invokeFindOne(id)) @AT@ 5764 @LENGTH@ 33
------UPD SimpleName@@MethodName:invoke:[method, invokeFindOne(id)] @TO@ MethodName:invoke:[method, this.<Object>invokeFindOne(id)] @AT@ 5764 @LENGTH@ 33
---------UPD MethodInvocation@@invokeFindOne(id) @TO@ this.<Object>invokeFindOne(id) @AT@ 5779 @LENGTH@ 17
------------INS ThisExpression@@this @TO@ MethodInvocation@@invokeFindOne(id) @AT@ 5747 @LENGTH@ 4


UPD MethodDeclaration@@public, void, MethodName:setSessionFactory, SessionFactory emf,  @TO@ public, void, MethodName:setSessionFactory, SessionFactory sessionFactory,  @AT@ 3040 @LENGTH@ 83
---UPD SingleVariableDeclaration@@SessionFactory emf @TO@ SessionFactory sessionFactory @AT@ 3070 @LENGTH@ 18
------UPD SimpleName@@emf @TO@ sessionFactory @AT@ 3085 @LENGTH@ 3
---UPD ExpressionStatement@@Assignment:this.sessionFactory=emf @TO@ Assignment:this.sessionFactory=sessionFactory @AT@ 3094 @LENGTH@ 26
------UPD Assignment@@this.sessionFactory=emf @TO@ this.sessionFactory=sessionFactory @AT@ 3094 @LENGTH@ 25
---------UPD SimpleName@@emf @TO@ sessionFactory @AT@ 3116 @LENGTH@ 3


UPD TypeDeclaration@@[@Configuration, @ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration"), @EnableConfigurationProperties(UniVocityTsvDataFormatConfiguration.class), public]UniVocityTsvDataFormatAutoConfiguration,  @TO@ [@Configuration, @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration"), @EnableConfigurationProperties(UniVocityTsvDataFormatConfiguration.class), public]UniVocityTsvDataFormatAutoConfiguration,  @AT@ 1683 @LENGTH@ 1181
---UPD NormalAnnotation@@@ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1698 @LENGTH@ 79
---UPD NormalAnnotation@@@AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1778 @LENGTH@ 80


INS MethodDeclaration@@public, void, MethodName:addField, final FieldMetadata field,  @TO@ TypeDeclaration@@[@Component, @Service, public]TypeManagementServiceImpl, [TypeManagementService] @AT@ 2630 @LENGTH@ 86
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:addField, final FieldMetadata field,  @AT@ 2630 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:addField, final FieldMetadata field,  @AT@ 2637 @LENGTH@ 4
---INS SimpleName@@MethodName:addField @TO@ MethodDeclaration@@public, void, MethodName:addField, final FieldMetadata field,  @AT@ 2642 @LENGTH@ 8
---INS SingleVariableDeclaration@@final FieldMetadata field @TO@ MethodDeclaration@@public, void, MethodName:addField, final FieldMetadata field,  @AT@ 2651 @LENGTH@ 25
------INS Modifier@@final @TO@ SingleVariableDeclaration@@final FieldMetadata field @AT@ 2651 @LENGTH@ 5
------INS SimpleType@@FieldMetadata @TO@ SingleVariableDeclaration@@final FieldMetadata field @AT@ 2657 @LENGTH@ 13
------INS SimpleName@@field @TO@ SingleVariableDeclaration@@final FieldMetadata field @AT@ 2671 @LENGTH@ 5
---INS ExpressionStatement@@MethodInvocation:this.addField(field,false) @TO@ MethodDeclaration@@public, void, MethodName:addField, final FieldMetadata field,  @AT@ 2684 @LENGTH@ 28
------INS MethodInvocation@@this.addField(field,false) @TO@ ExpressionStatement@@MethodInvocation:this.addField(field,false) @AT@ 2684 @LENGTH@ 27
---------INS ThisExpression@@this @TO@ MethodInvocation@@this.addField(field,false) @AT@ 2684 @LENGTH@ 4
---------INS SimpleName@@MethodName:addField:[field, false] @TO@ MethodInvocation@@this.addField(field,false) @AT@ 2689 @LENGTH@ 22
------------INS SimpleName@@field @TO@ SimpleName@@MethodName:addField:[field, false] @AT@ 2698 @LENGTH@ 5
------------INS BooleanLiteral@@false @TO@ SimpleName@@MethodName:addField:[field, false] @AT@ 2705 @LENGTH@ 5


UPD TypeDeclaration@@[@Configuration, @ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration"), @EnableConfigurationProperties(HdfsComponentConfiguration.class), public]HdfsComponentAutoConfiguration,  @TO@ [@Configuration, @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration"), @EnableConfigurationProperties(HdfsComponentConfiguration.class), public]HdfsComponentAutoConfiguration,  @AT@ 1621 @LENGTH@ 2040
---UPD NormalAnnotation@@@ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1636 @LENGTH@ 79
---UPD NormalAnnotation@@@AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1716 @LENGTH@ 80


DEL MethodDeclaration@@public, void, MethodName:testAlternativeComponentAsciiDoc, Exception,  @AT@ 31104 @LENGTH@ 332
---DEL Modifier@@public @AT@ 31104 @LENGTH@ 6
---DEL PrimitiveType@@void @AT@ 31111 @LENGTH@ 4
---DEL SimpleName@@MethodName:testAlternativeComponentAsciiDoc @AT@ 31116 @LENGTH@ 32
---DEL SimpleType@@Exception @AT@ 31158 @LENGTH@ 9
---DEL VariableDeclarationStatement@@String doc=catalog.componentAsciiDoc("solr"); @AT@ 31178 @LENGTH@ 47
------DEL SimpleType@@String @AT@ 31178 @LENGTH@ 6
------DEL VariableDeclarationFragment@@doc=catalog.componentAsciiDoc("solr") @AT@ 31185 @LENGTH@ 39
---------DEL SimpleName@@doc @AT@ 31185 @LENGTH@ 3
---------DEL MethodInvocation@@catalog.componentAsciiDoc("solr") @AT@ 31191 @LENGTH@ 33
------------DEL SimpleName@@Name:catalog @AT@ 31191 @LENGTH@ 7
------------DEL SimpleName@@MethodName:componentAsciiDoc:["solr"] @AT@ 31199 @LENGTH@ 25
---------------DEL StringLiteral@@"solr" @AT@ 31217 @LENGTH@ 6
---DEL ExpressionStatement@@MethodInvocation:assertNotNull(doc) @AT@ 31234 @LENGTH@ 19
------DEL MethodInvocation@@assertNotNull(doc) @AT@ 31234 @LENGTH@ 18
---------DEL SimpleName@@MethodName:assertNotNull:[doc] @AT@ 31234 @LENGTH@ 18
------------DEL SimpleName@@doc @AT@ 31248 @LENGTH@ 3
---DEL ExpressionStatement@@MethodInvocation:assertTrue(doc.contains("Solr Component")) @AT@ 31262 @LENGTH@ 43
------DEL MethodInvocation@@assertTrue(doc.contains("Solr Component")) @AT@ 31262 @LENGTH@ 42
---------DEL SimpleName@@MethodName:assertTrue:[doc.contains("Solr Component")] @AT@ 31262 @LENGTH@ 42
------------DEL MethodInvocation@@doc.contains("Solr Component") @AT@ 31273 @LENGTH@ 30
---------------DEL SimpleName@@Name:doc @AT@ 31273 @LENGTH@ 3
---------------DEL SimpleName@@MethodName:contains:["Solr Component"] @AT@ 31277 @LENGTH@ 26
------------------DEL StringLiteral@@"Solr Component" @AT@ 31286 @LENGTH@ 16
---DEL VariableDeclarationStatement@@String doc2=catalog.componentAsciiDoc("solrCloud"); @AT@ 31315 @LENGTH@ 53
------DEL SimpleType@@String @AT@ 31315 @LENGTH@ 6
------DEL VariableDeclarationFragment@@doc2=catalog.componentAsciiDoc("solrCloud") @AT@ 31322 @LENGTH@ 45
---------DEL SimpleName@@doc2 @AT@ 31322 @LENGTH@ 4
---------DEL MethodInvocation@@catalog.componentAsciiDoc("solrCloud") @AT@ 31329 @LENGTH@ 38
------------DEL SimpleName@@Name:catalog @AT@ 31329 @LENGTH@ 7
------------DEL SimpleName@@MethodName:componentAsciiDoc:["solrCloud"] @AT@ 31337 @LENGTH@ 30
---------------DEL StringLiteral@@"solrCloud" @AT@ 31355 @LENGTH@ 11
---DEL ExpressionStatement@@MethodInvocation:assertNotNull(doc2) @AT@ 31377 @LENGTH@ 20
------DEL MethodInvocation@@assertNotNull(doc2) @AT@ 31377 @LENGTH@ 19
---------DEL SimpleName@@MethodName:assertNotNull:[doc2] @AT@ 31377 @LENGTH@ 19
------------DEL SimpleName@@doc2 @AT@ 31391 @LENGTH@ 4
---DEL ExpressionStatement@@MethodInvocation:assertEquals(doc,doc2) @AT@ 31406 @LENGTH@ 24
------DEL MethodInvocation@@assertEquals(doc,doc2) @AT@ 31406 @LENGTH@ 23
---------DEL SimpleName@@MethodName:assertEquals:[doc, doc2] @AT@ 31406 @LENGTH@ 23
------------DEL SimpleName@@doc @AT@ 31419 @LENGTH@ 3
------------DEL SimpleName@@doc2 @AT@ 31424 @LENGTH@ 4


UPD TypeDeclaration@@[@Configuration, @ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration"), @EnableConfigurationProperties(RefLanguageConfiguration.class), public]RefLanguageAutoConfiguration,  @TO@ [@Configuration, @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration"), @EnableConfigurationProperties(RefLanguageConfiguration.class), public]RefLanguageAutoConfiguration,  @AT@ 1656 @LENGTH@ 1058
---UPD NormalAnnotation@@@ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1671 @LENGTH@ 79
---UPD NormalAnnotation@@@AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1751 @LENGTH@ 80


UPD MethodDeclaration@@public, voidMethodName:SampleComponent, boolean fallback,  @TO@ voidMethodName:SampleComponent, boolean fallback,  @AT@ 3337 @LENGTH@ 90
---DEL Modifier@@public @AT@ 3337 @LENGTH@ 6


UPD TypeDeclaration@@[@Configuration, @ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration"), public]BonitaComponentAutoConfiguration,  @TO@ [@Configuration, @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration"), public]BonitaComponentAutoConfiguration,  @AT@ 1444 @LENGTH@ 610
---UPD NormalAnnotation@@@ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1459 @LENGTH@ 79
---UPD NormalAnnotation@@@AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1539 @LENGTH@ 80


UPD TypeDeclaration@@[@Configuration, @ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration"), @EnableConfigurationProperties(GoogleCalendarComponentConfiguration.class), public]GoogleCalendarComponentAutoConfiguration,  @TO@ [@Configuration, @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration"), @EnableConfigurationProperties(GoogleCalendarComponentConfiguration.class), public]GoogleCalendarComponentAutoConfiguration,  @AT@ 1651 @LENGTH@ 2155
---UPD NormalAnnotation@@@ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1666 @LENGTH@ 79
---UPD NormalAnnotation@@@AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1746 @LENGTH@ 80


INS MethodDeclaration@@public, void, MethodName:rejectHeaderContainingCRLF,  @TO@ TypeDeclaration@@[public]FirewalledResponseTests,  @AT@ 1804 @LENGTH@ 540
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:rejectHeaderContainingCRLF,  @AT@ 1804 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:rejectHeaderContainingCRLF,  @AT@ 1811 @LENGTH@ 4
---INS SimpleName@@MethodName:rejectHeaderContainingCRLF @TO@ MethodDeclaration@@public, void, MethodName:rejectHeaderContainingCRLF,  @AT@ 1816 @LENGTH@ 26
---INS VariableDeclarationStatement@@MockHttpServletResponse response=new MockHttpServletResponse(); @TO@ MethodDeclaration@@public, void, MethodName:rejectHeaderContainingCRLF,  @AT@ 1849 @LENGTH@ 65
------INS SimpleType@@MockHttpServletResponse @TO@ VariableDeclarationStatement@@MockHttpServletResponse response=new MockHttpServletResponse(); @AT@ 1849 @LENGTH@ 23
------INS VariableDeclarationFragment@@response=new MockHttpServletResponse() @TO@ VariableDeclarationStatement@@MockHttpServletResponse response=new MockHttpServletResponse(); @AT@ 1873 @LENGTH@ 40
---------INS SimpleName@@response @TO@ VariableDeclarationFragment@@response=new MockHttpServletResponse() @AT@ 1873 @LENGTH@ 8
---------INS ClassInstanceCreation@@MockHttpServletResponse[] @TO@ VariableDeclarationFragment@@response=new MockHttpServletResponse() @AT@ 1884 @LENGTH@ 29
------------INS New@@new @TO@ ClassInstanceCreation@@MockHttpServletResponse[] @AT@ 1884 @LENGTH@ 3
------------INS SimpleType@@MockHttpServletResponse @TO@ ClassInstanceCreation@@MockHttpServletResponse[] @AT@ 1888 @LENGTH@ 23
---INS VariableDeclarationStatement@@FirewalledResponse fwResponse=new FirewalledResponse(response); @TO@ MethodDeclaration@@public, void, MethodName:rejectHeaderContainingCRLF,  @AT@ 1917 @LENGTH@ 65
------INS SimpleType@@FirewalledResponse @TO@ VariableDeclarationStatement@@FirewalledResponse fwResponse=new FirewalledResponse(response); @AT@ 1917 @LENGTH@ 18
------INS VariableDeclarationFragment@@fwResponse=new FirewalledResponse(response) @TO@ VariableDeclarationStatement@@FirewalledResponse fwResponse=new FirewalledResponse(response); @AT@ 1936 @LENGTH@ 45
---------INS SimpleName@@fwResponse @TO@ VariableDeclarationFragment@@fwResponse=new FirewalledResponse(response) @AT@ 1936 @LENGTH@ 10
---------INS ClassInstanceCreation@@FirewalledResponse[response] @TO@ VariableDeclarationFragment@@fwResponse=new FirewalledResponse(response) @AT@ 1949 @LENGTH@ 32
------------INS New@@new @TO@ ClassInstanceCreation@@FirewalledResponse[response] @AT@ 1949 @LENGTH@ 3
------------INS SimpleType@@FirewalledResponse @TO@ ClassInstanceCreation@@FirewalledResponse[response] @AT@ 1953 @LENGTH@ 18
------------INS SimpleName@@response @TO@ ClassInstanceCreation@@FirewalledResponse[response] @AT@ 1972 @LENGTH@ 8
---INS TryStatement@@try {  fwResponse.addHeader("foo","abc\r\nContent-Length:100");  fail("IllegalArgumentException should have thrown");} catch (IllegalArgumentException expected) {} @TO@ MethodDeclaration@@public, void, MethodName:rejectHeaderContainingCRLF,  @AT@ 1986 @LENGTH@ 176
------INS ExpressionStatement@@MethodInvocation:fwResponse.addHeader("foo","abc\r\nContent-Length:100") @TO@ TryStatement@@try {  fwResponse.addHeader("foo","abc\r\nContent-Length:100");  fail("IllegalArgumentException should have thrown");} catch (IllegalArgumentException expected) {} @AT@ 1995 @LENGTH@ 57
---------INS MethodInvocation@@fwResponse.addHeader("foo","abc\r\nContent-Length:100") @TO@ ExpressionStatement@@MethodInvocation:fwResponse.addHeader("foo","abc\r\nContent-Length:100") @AT@ 1995 @LENGTH@ 56
------------INS SimpleName@@Name:fwResponse @TO@ MethodInvocation@@fwResponse.addHeader("foo","abc\r\nContent-Length:100") @AT@ 1995 @LENGTH@ 10
------------INS SimpleName@@MethodName:addHeader:["foo", "abc\r\nContent-Length:100"] @TO@ MethodInvocation@@fwResponse.addHeader("foo","abc\r\nContent-Length:100") @AT@ 2006 @LENGTH@ 45
---------------INS StringLiteral@@"foo" @TO@ SimpleName@@MethodName:addHeader:["foo", "abc\r\nContent-Length:100"] @AT@ 2016 @LENGTH@ 5
---------------INS StringLiteral@@"abc\r\nContent-Length:100" @TO@ SimpleName@@MethodName:addHeader:["foo", "abc\r\nContent-Length:100"] @AT@ 2023 @LENGTH@ 27
------INS ExpressionStatement@@MethodInvocation:fail("IllegalArgumentException should have thrown") @TO@ TryStatement@@try {  fwResponse.addHeader("foo","abc\r\nContent-Length:100");  fail("IllegalArgumentException should have thrown");} catch (IllegalArgumentException expected) {} @AT@ 2056 @LENGTH@ 52
---------INS MethodInvocation@@fail("IllegalArgumentException should have thrown") @TO@ ExpressionStatement@@MethodInvocation:fail("IllegalArgumentException should have thrown") @AT@ 2056 @LENGTH@ 51
------------INS SimpleName@@MethodName:fail:["IllegalArgumentException should have thrown"] @TO@ MethodInvocation@@fail("IllegalArgumentException should have thrown") @AT@ 2056 @LENGTH@ 51
---------------INS StringLiteral@@"IllegalArgumentException should have thrown" @TO@ SimpleName@@MethodName:fail:["IllegalArgumentException should have thrown"] @AT@ 2061 @LENGTH@ 45
------INS CatchClause@@catch (IllegalArgumentException expected) {} @TO@ TryStatement@@try {  fwResponse.addHeader("foo","abc\r\nContent-Length:100");  fail("IllegalArgumentException should have thrown");} catch (IllegalArgumentException expected) {} @AT@ 2115 @LENGTH@ 47
---------INS SingleVariableDeclaration@@IllegalArgumentException expected @TO@ CatchClause@@catch (IllegalArgumentException expected) {} @AT@ 2122 @LENGTH@ 33
------------INS SimpleType@@IllegalArgumentException @TO@ SingleVariableDeclaration@@IllegalArgumentException expected @AT@ 2122 @LENGTH@ 24
------------INS SimpleName@@expected @TO@ SingleVariableDeclaration@@IllegalArgumentException expected @AT@ 2147 @LENGTH@ 8
---INS TryStatement@@try {  fwResponse.setHeader("foo","abc\r\nContent-Length:100");  fail("IllegalArgumentException should have thrown");} catch (IllegalArgumentException expected) {} @TO@ MethodDeclaration@@public, void, MethodName:rejectHeaderContainingCRLF,  @AT@ 2165 @LENGTH@ 176
------INS ExpressionStatement@@MethodInvocation:fwResponse.setHeader("foo","abc\r\nContent-Length:100") @TO@ TryStatement@@try {  fwResponse.setHeader("foo","abc\r\nContent-Length:100");  fail("IllegalArgumentException should have thrown");} catch (IllegalArgumentException expected) {} @AT@ 2174 @LENGTH@ 57
---------INS MethodInvocation@@fwResponse.setHeader("foo","abc\r\nContent-Length:100") @TO@ ExpressionStatement@@MethodInvocation:fwResponse.setHeader("foo","abc\r\nContent-Length:100") @AT@ 2174 @LENGTH@ 56
------------INS SimpleName@@Name:fwResponse @TO@ MethodInvocation@@fwResponse.setHeader("foo","abc\r\nContent-Length:100") @AT@ 2174 @LENGTH@ 10
------------INS SimpleName@@MethodName:setHeader:["foo", "abc\r\nContent-Length:100"] @TO@ MethodInvocation@@fwResponse.setHeader("foo","abc\r\nContent-Length:100") @AT@ 2185 @LENGTH@ 45
---------------INS StringLiteral@@"foo" @TO@ SimpleName@@MethodName:setHeader:["foo", "abc\r\nContent-Length:100"] @AT@ 2195 @LENGTH@ 5
---------------INS StringLiteral@@"abc\r\nContent-Length:100" @TO@ SimpleName@@MethodName:setHeader:["foo", "abc\r\nContent-Length:100"] @AT@ 2202 @LENGTH@ 27
------INS ExpressionStatement@@MethodInvocation:fail("IllegalArgumentException should have thrown") @TO@ TryStatement@@try {  fwResponse.setHeader("foo","abc\r\nContent-Length:100");  fail("IllegalArgumentException should have thrown");} catch (IllegalArgumentException expected) {} @AT@ 2235 @LENGTH@ 52
---------INS MethodInvocation@@fail("IllegalArgumentException should have thrown") @TO@ ExpressionStatement@@MethodInvocation:fail("IllegalArgumentException should have thrown") @AT@ 2235 @LENGTH@ 51
------------INS SimpleName@@MethodName:fail:["IllegalArgumentException should have thrown"] @TO@ MethodInvocation@@fail("IllegalArgumentException should have thrown") @AT@ 2235 @LENGTH@ 51
---------------INS StringLiteral@@"IllegalArgumentException should have thrown" @TO@ SimpleName@@MethodName:fail:["IllegalArgumentException should have thrown"] @AT@ 2240 @LENGTH@ 45
------INS CatchClause@@catch (IllegalArgumentException expected) {} @TO@ TryStatement@@try {  fwResponse.setHeader("foo","abc\r\nContent-Length:100");  fail("IllegalArgumentException should have thrown");} catch (IllegalArgumentException expected) {} @AT@ 2294 @LENGTH@ 47
---------INS SingleVariableDeclaration@@IllegalArgumentException expected @TO@ CatchClause@@catch (IllegalArgumentException expected) {} @AT@ 2301 @LENGTH@ 33
------------INS SimpleType@@IllegalArgumentException @TO@ SingleVariableDeclaration@@IllegalArgumentException expected @AT@ 2301 @LENGTH@ 24
------------INS SimpleName@@expected @TO@ SingleVariableDeclaration@@IllegalArgumentException expected @AT@ 2326 @LENGTH@ 8


INS MethodDeclaration@@public, static, void, MethodName:beforeClass,  @TO@ TypeDeclaration@@[@ContextConfiguration(classes={MoviesContext.class}), @RunWith(SpringJUnit4ClassRunner.class), public]TransactionIntegrationIT, MultiDriverTestClass @AT@ 1773 @LENGTH@ 88
---INS Modifier@@public @TO@ MethodDeclaration@@public, static, void, MethodName:beforeClass,  @AT@ 1773 @LENGTH@ 6
---INS Modifier@@static @TO@ MethodDeclaration@@public, static, void, MethodName:beforeClass,  @AT@ 1780 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, static, void, MethodName:beforeClass,  @AT@ 1787 @LENGTH@ 4
---INS SimpleName@@MethodName:beforeClass @TO@ MethodDeclaration@@public, static, void, MethodName:beforeClass,  @AT@ 1792 @LENGTH@ 11
---INS ExpressionStatement@@Assignment:graphDatabaseService=getGraphDatabaseService() @TO@ MethodDeclaration@@public, static, void, MethodName:beforeClass,  @AT@ 1809 @LENGTH@ 49
------INS Assignment@@graphDatabaseService=getGraphDatabaseService() @TO@ ExpressionStatement@@Assignment:graphDatabaseService=getGraphDatabaseService() @AT@ 1809 @LENGTH@ 48
---------INS SimpleName@@graphDatabaseService @TO@ Assignment@@graphDatabaseService=getGraphDatabaseService() @AT@ 1809 @LENGTH@ 20
---------INS Operator@@= @TO@ Assignment@@graphDatabaseService=getGraphDatabaseService() @AT@ 1829 @LENGTH@ 1
---------INS MethodInvocation@@MethodName:getGraphDatabaseService:[] @TO@ Assignment@@graphDatabaseService=getGraphDatabaseService() @AT@ 1832 @LENGTH@ 25


INS MethodDeclaration@@public, static, void, MethodName:tearDown, Exception,  @TO@ TypeDeclaration@@[public]CdiExtensionIT, MultiDriverTestClass @AT@ 1766 @LENGTH@ 141
---INS Modifier@@public @TO@ MethodDeclaration@@public, static, void, MethodName:tearDown, Exception,  @AT@ 1766 @LENGTH@ 6
---INS Modifier@@static @TO@ MethodDeclaration@@public, static, void, MethodName:tearDown, Exception,  @AT@ 1773 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, static, void, MethodName:tearDown, Exception,  @AT@ 1780 @LENGTH@ 4
---INS SimpleName@@MethodName:tearDown @TO@ MethodDeclaration@@public, static, void, MethodName:tearDown, Exception,  @AT@ 1785 @LENGTH@ 8
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, static, void, MethodName:tearDown, Exception,  @AT@ 1803 @LENGTH@ 9
---INS ExpressionStatement@@MethodInvocation:container.shutdownContainer() @TO@ MethodDeclaration@@public, static, void, MethodName:tearDown, Exception,  @AT@ 1824 @LENGTH@ 30
------INS MethodInvocation@@container.shutdownContainer() @TO@ ExpressionStatement@@MethodInvocation:container.shutdownContainer() @AT@ 1824 @LENGTH@ 29
---------INS SimpleName@@Name:container @TO@ MethodInvocation@@container.shutdownContainer() @AT@ 1824 @LENGTH@ 9
---------INS SimpleName@@MethodName:shutdownContainer:[] @TO@ MethodInvocation@@container.shutdownContainer() @AT@ 1834 @LENGTH@ 19
---INS ExpressionStatement@@MethodInvocation:tearDownMultiDriverTestEnvironment() @TO@ MethodDeclaration@@public, static, void, MethodName:tearDown, Exception,  @AT@ 1864 @LENGTH@ 37
------INS MethodInvocation@@MethodName:tearDownMultiDriverTestEnvironment:[] @TO@ ExpressionStatement@@MethodInvocation:tearDownMultiDriverTestEnvironment() @AT@ 1864 @LENGTH@ 36


UPD ExpressionStatement@@MethodInvocation:client.follow(profileLink,RestMediaTypes.ALPS_JSON).andExpect(status().is2xxSuccessful()).andExpect(header().string(HttpHeaders.CONTENT_TYPE,RestMediaTypes.ALPS_JSON_VALUE)) @TO@ MethodInvocation:client.follow(profileLink,RestMediaTypes.ALPS_JSON).andExpect(status().is2xxSuccessful()).andExpect(content().contentTypeCompatibleWith(RestMediaTypes.ALPS_JSON)) @AT@ 4544 @LENGTH@ 181
---UPD MethodInvocation@@client.follow(profileLink,RestMediaTypes.ALPS_JSON).andExpect(status().is2xxSuccessful()).andExpect(header().string(HttpHeaders.CONTENT_TYPE,RestMediaTypes.ALPS_JSON_VALUE)) @TO@ client.follow(profileLink,RestMediaTypes.ALPS_JSON).andExpect(status().is2xxSuccessful()).andExpect(content().contentTypeCompatibleWith(RestMediaTypes.ALPS_JSON)) @AT@ 4544 @LENGTH@ 180
------UPD SimpleName@@MethodName:andExpect:[header().string(HttpHeaders.CONTENT_TYPE,RestMediaTypes.ALPS_JSON_VALUE)] @TO@ MethodName:andExpect:[content().contentTypeCompatibleWith(RestMediaTypes.ALPS_JSON)] @AT@ 4640 @LENGTH@ 84
---------UPD MethodInvocation@@header().string(HttpHeaders.CONTENT_TYPE,RestMediaTypes.ALPS_JSON_VALUE) @TO@ content().contentTypeCompatibleWith(RestMediaTypes.ALPS_JSON) @AT@ 4650 @LENGTH@ 73
------------UPD MethodInvocation@@MethodName:header:[] @TO@ MethodName:content:[] @AT@ 4650 @LENGTH@ 8
------------UPD SimpleName@@MethodName:string:[HttpHeaders.CONTENT_TYPE, RestMediaTypes.ALPS_JSON_VALUE] @TO@ MethodName:contentTypeCompatibleWith:[RestMediaTypes.ALPS_JSON] @AT@ 4659 @LENGTH@ 64
---------------DEL QualifiedName@@HttpHeaders.CONTENT_TYPE @AT@ 4666 @LENGTH@ 24
------------------DEL SimpleName@@HttpHeaders @AT@ 4666 @LENGTH@ 11
------------------DEL SimpleName@@CONTENT_TYPE @AT@ 4678 @LENGTH@ 12
---------------UPD QualifiedName@@RestMediaTypes.ALPS_JSON_VALUE @TO@ RestMediaTypes.ALPS_JSON @AT@ 4692 @LENGTH@ 30
------------------UPD SimpleName@@ALPS_JSON_VALUE @TO@ ALPS_JSON @AT@ 4707 @LENGTH@ 15


UPD TypeDeclaration@@[@Configuration, @ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration"), public]JingComponentAutoConfiguration,  @TO@ [@Configuration, @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration"), public]JingComponentAutoConfiguration,  @AT@ 1458 @LENGTH@ 596
---UPD NormalAnnotation@@@ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1473 @LENGTH@ 79
---UPD NormalAnnotation@@@AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1553 @LENGTH@ 80


UPD ExpressionStatement@@Assignment:this.requestParameters=Collections.unmodifiableMap(requestParameters) @TO@ Assignment:this.requestParameters=Collections.unmodifiableMap(new HashMap<String,String>(requestParameters)) @AT@ 4712 @LENGTH@ 78
---UPD Assignment@@this.requestParameters=Collections.unmodifiableMap(requestParameters) @TO@ this.requestParameters=Collections.unmodifiableMap(new HashMap<String,String>(requestParameters)) @AT@ 4712 @LENGTH@ 77
------UPD MethodInvocation@@Collections.unmodifiableMap(requestParameters) @TO@ Collections.unmodifiableMap(new HashMap<String,String>(requestParameters)) @AT@ 4737 @LENGTH@ 52
---------UPD SimpleName@@MethodName:unmodifiableMap:[requestParameters] @TO@ MethodName:unmodifiableMap:[new HashMap<String,String>(requestParameters)] @AT@ 4755 @LENGTH@ 34
------------INS ClassInstanceCreation@@HashMap<String,String>[requestParameters] @TO@ SimpleName@@MethodName:unmodifiableMap:[requestParameters] @AT@ 4771 @LENGTH@ 46
---------------INS New@@new @TO@ ClassInstanceCreation@@HashMap<String,String>[requestParameters] @AT@ 4771 @LENGTH@ 3
---------------INS ParameterizedType@@HashMap<String,String> @TO@ ClassInstanceCreation@@HashMap<String,String>[requestParameters] @AT@ 4775 @LENGTH@ 23
------------------INS SimpleType@@HashMap @TO@ ParameterizedType@@HashMap<String,String> @AT@ 4775 @LENGTH@ 7
------------------INS SimpleType@@String @TO@ ParameterizedType@@HashMap<String,String> @AT@ 4783 @LENGTH@ 6
------------------INS SimpleType@@String @TO@ ParameterizedType@@HashMap<String,String> @AT@ 4791 @LENGTH@ 6
---------------INS SimpleName@@requestParameters @TO@ ClassInstanceCreation@@HashMap<String,String>[requestParameters] @AT@ 4799 @LENGTH@ 17
------------DEL SimpleName@@requestParameters @AT@ 4771 @LENGTH@ 17


UPD ExpressionStatement@@MethodInvocation:assertThat(AuthorityUtils.authorityListToSet(auth.getAuthorities()).contains("ROLE_ANONYMOUS")) @TO@ MethodInvocation:assertThat(AuthorityUtils.authorityListToSet(auth.getAuthorities())).contains("ROLE_ANONYMOUS") @AT@ 3968 @LENGTH@ 101
---UPD MethodInvocation@@assertThat(AuthorityUtils.authorityListToSet(auth.getAuthorities()).contains("ROLE_ANONYMOUS")) @TO@ assertThat(AuthorityUtils.authorityListToSet(auth.getAuthorities())).contains("ROLE_ANONYMOUS") @AT@ 3968 @LENGTH@ 100
------DEL SimpleName@@MethodName:assertThat:[AuthorityUtils.authorityListToSet(auth.getAuthorities()).contains("ROLE_ANONYMOUS")] @AT@ 3968 @LENGTH@ 100
---------DEL MethodInvocation@@AuthorityUtils.authorityListToSet(auth.getAuthorities()).contains("ROLE_ANONYMOUS") @AT@ 3979 @LENGTH@ 88
------------DEL MethodInvocation@@MethodName:authorityListToSet:[auth.getAuthorities()] @AT@ 3979 @LENGTH@ 56
---------------DEL MethodInvocation@@auth.getAuthorities() @AT@ 4013 @LENGTH@ 21
------MOV SimpleName@@MethodName:contains:["ROLE_ANONYMOUS"] @TO@ MethodInvocation@@assertThat(AuthorityUtils.authorityListToSet(auth.getAuthorities()).contains("ROLE_ANONYMOUS")) @AT@ 4036 @LENGTH@ 31
------INS MethodInvocation@@MethodName:assertThat:[AuthorityUtils.authorityListToSet(auth.getAuthorities())] @TO@ MethodInvocation@@assertThat(AuthorityUtils.authorityListToSet(auth.getAuthorities()).contains("ROLE_ANONYMOUS")) @AT@ 4111 @LENGTH@ 68
---------INS MethodInvocation@@AuthorityUtils.authorityListToSet(auth.getAuthorities()) @TO@ MethodInvocation@@MethodName:assertThat:[AuthorityUtils.authorityListToSet(auth.getAuthorities())] @AT@ 4122 @LENGTH@ 56
------------MOV SimpleName@@Name:AuthorityUtils @TO@ MethodInvocation@@AuthorityUtils.authorityListToSet(auth.getAuthorities()) @AT@ 3979 @LENGTH@ 14
------------INS SimpleName@@MethodName:authorityListToSet:[auth.getAuthorities()] @TO@ MethodInvocation@@AuthorityUtils.authorityListToSet(auth.getAuthorities()) @AT@ 4137 @LENGTH@ 41
---------------INS MethodInvocation@@auth.getAuthorities() @TO@ SimpleName@@MethodName:authorityListToSet:[auth.getAuthorities()] @AT@ 4156 @LENGTH@ 21
------------------MOV SimpleName@@Name:auth @TO@ MethodInvocation@@auth.getAuthorities() @AT@ 4013 @LENGTH@ 4
------------------MOV SimpleName@@MethodName:getAuthorities:[] @TO@ MethodInvocation@@auth.getAuthorities() @AT@ 4018 @LENGTH@ 16


UPD TypeDeclaration@@[@Configuration, @ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration"), public]TimerComponentAutoConfiguration,  @TO@ [@Configuration, @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration"), public]TimerComponentAutoConfiguration,  @AT@ 1441 @LENGTH@ 603
---UPD NormalAnnotation@@@ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1456 @LENGTH@ 79
---UPD NormalAnnotation@@@AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1536 @LENGTH@ 80


UPD MethodDeclaration@@public, voidMethodName:ExchangeSubmitter, Endpoint startEndpoint, SendProcessor asyncSender,  @TO@ voidMethodName:ExchangeSubmitter, Endpoint startEndpoint, SendProcessor asyncSender,  @AT@ 3680 @LENGTH@ 179
---DEL Modifier@@public @AT@ 3680 @LENGTH@ 6


UPD TypeDeclaration@@[@Configuration, @ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration"), public]SesComponentAutoConfiguration,  @TO@ [@Configuration, @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration"), public]SesComponentAutoConfiguration,  @AT@ 1443 @LENGTH@ 593
---UPD NormalAnnotation@@@ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1458 @LENGTH@ 79
---UPD NormalAnnotation@@@AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1538 @LENGTH@ 80


DEL FieldDeclaration@@private, Session, [session] @AT@ 1788 @LENGTH@ 24
---DEL Modifier@@private @AT@ 1788 @LENGTH@ 7
---DEL SimpleType@@Session @AT@ 1796 @LENGTH@ 7
---DEL VariableDeclarationFragment@@session @AT@ 1804 @LENGTH@ 7
------DEL SimpleName@@session @AT@ 1804 @LENGTH@ 7


UPD TypeDeclaration@@[@Configuration, @ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration"), @EnableConfigurationProperties(LinkedInComponentConfiguration.class), public]LinkedInComponentAutoConfiguration,  @TO@ [@Configuration, @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration"), @EnableConfigurationProperties(LinkedInComponentConfiguration.class), public]LinkedInComponentAutoConfiguration,  @AT@ 1631 @LENGTH@ 2088
---UPD NormalAnnotation@@@ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1646 @LENGTH@ 79
---UPD NormalAnnotation@@@AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1726 @LENGTH@ 80


UPD TypeDeclaration@@[@Configuration, @ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration"), public]ChunkComponentAutoConfiguration,  @TO@ [@Configuration, @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration"), public]ChunkComponentAutoConfiguration,  @AT@ 1441 @LENGTH@ 603
---UPD NormalAnnotation@@@ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1456 @LENGTH@ 79
---UPD NormalAnnotation@@@AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1536 @LENGTH@ 80


UPD ExpressionStatement@@Assignment:this.revisionDate=new DateTime(revisionCallback.getValue(entity)) @TO@ Assignment:this.revisionDate=new DateTime(revisionCallback.<Object>getValue(entity)) @AT@ 2591 @LENGTH@ 68
---UPD Assignment@@this.revisionDate=new DateTime(revisionCallback.getValue(entity)) @TO@ this.revisionDate=new DateTime(revisionCallback.<Object>getValue(entity)) @AT@ 2591 @LENGTH@ 67
------UPD ClassInstanceCreation@@DateTime[revisionCallback.getValue(entity)] @TO@ DateTime[revisionCallback.<Object>getValue(entity)] @AT@ 2611 @LENGTH@ 47
---------UPD MethodInvocation@@revisionCallback.getValue(entity) @TO@ revisionCallback.<Object>getValue(entity) @AT@ 2624 @LENGTH@ 33


UPD VariableDeclarationStatement@@int ret=driver.run(new String[]{"-n",clusterName}); @TO@ int ret=driver.run(new LlapStatusOptionsProcessor.LlapStatusOptions(clusterName)); @AT@ 3539 @LENGTH@ 57
---UPD VariableDeclarationFragment@@ret=driver.run(new String[]{"-n",clusterName}) @TO@ ret=driver.run(new LlapStatusOptionsProcessor.LlapStatusOptions(clusterName)) @AT@ 3543 @LENGTH@ 52
------UPD MethodInvocation@@driver.run(new String[]{"-n",clusterName}) @TO@ driver.run(new LlapStatusOptionsProcessor.LlapStatusOptions(clusterName)) @AT@ 3549 @LENGTH@ 46
---------UPD SimpleName@@MethodName:run:[new String[]{"-n",clusterName}] @TO@ MethodName:run:[new LlapStatusOptionsProcessor.LlapStatusOptions(clusterName)] @AT@ 3556 @LENGTH@ 39
------------DEL ArrayCreation@@new String[]{"-n",clusterName} @AT@ 3560 @LENGTH@ 34
---------------DEL ArrayType@@String[] @AT@ 3564 @LENGTH@ 8
------------------DEL SimpleType@@String @AT@ 3564 @LENGTH@ 6
---------------DEL ArrayInitializer@@{"-n",clusterName} @AT@ 3573 @LENGTH@ 21
------------------DEL StringLiteral@@"-n" @AT@ 3575 @LENGTH@ 4
------------------DEL SimpleName@@clusterName @AT@ 3581 @LENGTH@ 11
------------INS ClassInstanceCreation@@LlapStatusOptionsProcessor.LlapStatusOptions[clusterName] @TO@ SimpleName@@MethodName:run:[new String[]{"-n",clusterName}] @AT@ 3627 @LENGTH@ 61
---------------INS New@@new @TO@ ClassInstanceCreation@@LlapStatusOptionsProcessor.LlapStatusOptions[clusterName] @AT@ 3627 @LENGTH@ 3
---------------INS SimpleType@@LlapStatusOptionsProcessor.LlapStatusOptions @TO@ ClassInstanceCreation@@LlapStatusOptionsProcessor.LlapStatusOptions[clusterName] @AT@ 3631 @LENGTH@ 44
---------------INS SimpleName@@clusterName @TO@ ClassInstanceCreation@@LlapStatusOptionsProcessor.LlapStatusOptions[clusterName] @AT@ 3676 @LENGTH@ 11


UPD VariableDeclarationStatement@@File allStartersDir=new File(camelProjectRoot(baseDir),"components-starter"); @TO@ File allStartersDir=new File(camelProjectRoot(baseDir,"components-starter"),"components-starter"); @AT@ 1748 @LENGTH@ 80
---UPD VariableDeclarationFragment@@allStartersDir=new File(camelProjectRoot(baseDir),"components-starter") @TO@ allStartersDir=new File(camelProjectRoot(baseDir,"components-starter"),"components-starter") @AT@ 1753 @LENGTH@ 74
------UPD ClassInstanceCreation@@File[camelProjectRoot(baseDir), "components-starter"] @TO@ File[camelProjectRoot(baseDir,"components-starter"), "components-starter"] @AT@ 1770 @LENGTH@ 57
---------UPD MethodInvocation@@camelProjectRoot(baseDir) @TO@ camelProjectRoot(baseDir,"components-starter") @AT@ 1779 @LENGTH@ 25
------------UPD SimpleName@@MethodName:camelProjectRoot:[baseDir] @TO@ MethodName:camelProjectRoot:[baseDir, "components-starter"] @AT@ 1779 @LENGTH@ 25
---------------INS StringLiteral@@"components-starter" @TO@ SimpleName@@MethodName:camelProjectRoot:[baseDir] @AT@ 1805 @LENGTH@ 20


UPD TypeDeclaration@@[@Configuration, @ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration"), @EnableConfigurationProperties(SshComponentConfiguration.class), public]SshComponentAutoConfiguration,  @TO@ [@Configuration, @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration"), @EnableConfigurationProperties(SshComponentConfiguration.class), public]SshComponentAutoConfiguration,  @AT@ 1616 @LENGTH@ 2030
---UPD NormalAnnotation@@@ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1631 @LENGTH@ 79
---UPD NormalAnnotation@@@AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1711 @LENGTH@ 80


UPD TypeDeclaration@@[@Configuration, @ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration"), public]FtpComponentAutoConfiguration,  @TO@ [@Configuration, @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration"), public]FtpComponentAutoConfiguration,  @AT@ 1451 @LENGTH@ 589
---UPD NormalAnnotation@@@ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1466 @LENGTH@ 79
---UPD NormalAnnotation@@@AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1546 @LENGTH@ 80


UPD ReturnStatement@@MethodInvocation:session.loadAll(User.class,new Filter(propertyName,propertyValue)) @TO@ MethodInvocation:neo4jOperations.loadAll(User.class,new Filter(propertyName,propertyValue)) @AT@ 2310 @LENGTH@ 76
---UPD MethodInvocation@@session.loadAll(User.class,new Filter(propertyName,propertyValue)) @TO@ neo4jOperations.loadAll(User.class,new Filter(propertyName,propertyValue)) @AT@ 2317 @LENGTH@ 68
------UPD SimpleName@@Name:session @TO@ Name:neo4jOperations @AT@ 2317 @LENGTH@ 7


INS MethodDeclaration@@public, void, MethodName:testApprovalsAddedForAutoapprovedScopes,  @TO@ TypeDeclaration@@[public]ApprovalStoreUserApprovalHandlerTests,  @AT@ 5955 @LENGTH@ 822
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testApprovalsAddedForAutoapprovedScopes,  @AT@ 5955 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testApprovalsAddedForAutoapprovedScopes,  @AT@ 5962 @LENGTH@ 4
---INS SimpleName@@MethodName:testApprovalsAddedForAutoapprovedScopes @TO@ MethodDeclaration@@public, void, MethodName:testApprovalsAddedForAutoapprovedScopes,  @AT@ 5967 @LENGTH@ 39
---INS ExpressionStatement@@MethodInvocation:handler.setClientDetailsService(clientDetailsService) @TO@ MethodDeclaration@@public, void, MethodName:testApprovalsAddedForAutoapprovedScopes,  @AT@ 6013 @LENGTH@ 54
------INS MethodInvocation@@handler.setClientDetailsService(clientDetailsService) @TO@ ExpressionStatement@@MethodInvocation:handler.setClientDetailsService(clientDetailsService) @AT@ 6013 @LENGTH@ 53
---------INS SimpleName@@Name:handler @TO@ MethodInvocation@@handler.setClientDetailsService(clientDetailsService) @AT@ 6013 @LENGTH@ 7
---------INS SimpleName@@MethodName:setClientDetailsService:[clientDetailsService] @TO@ MethodInvocation@@handler.setClientDetailsService(clientDetailsService) @AT@ 6021 @LENGTH@ 45
------------INS SimpleName@@clientDetailsService @TO@ SimpleName@@MethodName:setClientDetailsService:[clientDetailsService] @AT@ 6045 @LENGTH@ 20
---INS VariableDeclarationStatement@@BaseClientDetails client=new BaseClientDetails("client",null,"read","authorization_code",null); @TO@ MethodDeclaration@@public, void, MethodName:testApprovalsAddedForAutoapprovedScopes,  @AT@ 6070 @LENGTH@ 101
------INS SimpleType@@BaseClientDetails @TO@ VariableDeclarationStatement@@BaseClientDetails client=new BaseClientDetails("client",null,"read","authorization_code",null); @AT@ 6070 @LENGTH@ 17
------INS VariableDeclarationFragment@@client=new BaseClientDetails("client",null,"read","authorization_code",null) @TO@ VariableDeclarationStatement@@BaseClientDetails client=new BaseClientDetails("client",null,"read","authorization_code",null); @AT@ 6088 @LENGTH@ 82
---------INS SimpleName@@client @TO@ VariableDeclarationFragment@@client=new BaseClientDetails("client",null,"read","authorization_code",null) @AT@ 6088 @LENGTH@ 6
---------INS ClassInstanceCreation@@BaseClientDetails["client", null, "read", "authorization_code", null] @TO@ VariableDeclarationFragment@@client=new BaseClientDetails("client",null,"read","authorization_code",null) @AT@ 6097 @LENGTH@ 73
------------INS New@@new @TO@ ClassInstanceCreation@@BaseClientDetails["client", null, "read", "authorization_code", null] @AT@ 6097 @LENGTH@ 3
------------INS SimpleType@@BaseClientDetails @TO@ ClassInstanceCreation@@BaseClientDetails["client", null, "read", "authorization_code", null] @AT@ 6101 @LENGTH@ 17
------------INS StringLiteral@@"client" @TO@ ClassInstanceCreation@@BaseClientDetails["client", null, "read", "authorization_code", null] @AT@ 6119 @LENGTH@ 8
------------INS NullLiteral@@null @TO@ ClassInstanceCreation@@BaseClientDetails["client", null, "read", "authorization_code", null] @AT@ 6129 @LENGTH@ 4
------------INS StringLiteral@@"read" @TO@ ClassInstanceCreation@@BaseClientDetails["client", null, "read", "authorization_code", null] @AT@ 6135 @LENGTH@ 6
------------INS StringLiteral@@"authorization_code" @TO@ ClassInstanceCreation@@BaseClientDetails["client", null, "read", "authorization_code", null] @AT@ 6143 @LENGTH@ 20
------------INS NullLiteral@@null @TO@ ClassInstanceCreation@@BaseClientDetails["client", null, "read", "authorization_code", null] @AT@ 6165 @LENGTH@ 4
---INS ExpressionStatement@@MethodInvocation:client.setAutoApproveScopes(new HashSet<String>(Arrays.asList("read"))) @TO@ MethodDeclaration@@public, void, MethodName:testApprovalsAddedForAutoapprovedScopes,  @AT@ 6174 @LENGTH@ 72
------INS MethodInvocation@@client.setAutoApproveScopes(new HashSet<String>(Arrays.asList("read"))) @TO@ ExpressionStatement@@MethodInvocation:client.setAutoApproveScopes(new HashSet<String>(Arrays.asList("read"))) @AT@ 6174 @LENGTH@ 71
---------INS SimpleName@@Name:client @TO@ MethodInvocation@@client.setAutoApproveScopes(new HashSet<String>(Arrays.asList("read"))) @AT@ 6174 @LENGTH@ 6
---------INS SimpleName@@MethodName:setAutoApproveScopes:[new HashSet<String>(Arrays.asList("read"))] @TO@ MethodInvocation@@client.setAutoApproveScopes(new HashSet<String>(Arrays.asList("read"))) @AT@ 6181 @LENGTH@ 64
------------INS ClassInstanceCreation@@HashSet<String>[Arrays.asList("read")] @TO@ SimpleName@@MethodName:setAutoApproveScopes:[new HashSet<String>(Arrays.asList("read"))] @AT@ 6202 @LENGTH@ 42
---------------INS New@@new @TO@ ClassInstanceCreation@@HashSet<String>[Arrays.asList("read")] @AT@ 6202 @LENGTH@ 3
---------------INS ParameterizedType@@HashSet<String> @TO@ ClassInstanceCreation@@HashSet<String>[Arrays.asList("read")] @AT@ 6206 @LENGTH@ 15
------------------INS SimpleType@@HashSet @TO@ ParameterizedType@@HashSet<String> @AT@ 6206 @LENGTH@ 7
------------------INS SimpleType@@String @TO@ ParameterizedType@@HashSet<String> @AT@ 6214 @LENGTH@ 6
---------------INS MethodInvocation@@Arrays.asList("read") @TO@ ClassInstanceCreation@@HashSet<String>[Arrays.asList("read")] @AT@ 6222 @LENGTH@ 21
------------------INS SimpleName@@Name:Arrays @TO@ MethodInvocation@@Arrays.asList("read") @AT@ 6222 @LENGTH@ 6
------------------INS SimpleName@@MethodName:asList:["read"] @TO@ MethodInvocation@@Arrays.asList("read") @AT@ 6229 @LENGTH@ 14
---------------------INS StringLiteral@@"read" @TO@ SimpleName@@MethodName:asList:["read"] @AT@ 6236 @LENGTH@ 6
---INS ExpressionStatement@@MethodInvocation:clientDetailsService.setClientDetailsStore(Collections.singletonMap("client",client)) @TO@ MethodDeclaration@@public, void, MethodName:testApprovalsAddedForAutoapprovedScopes,  @AT@ 6249 @LENGTH@ 87
------INS MethodInvocation@@clientDetailsService.setClientDetailsStore(Collections.singletonMap("client",client)) @TO@ ExpressionStatement@@MethodInvocation:clientDetailsService.setClientDetailsStore(Collections.singletonMap("client",client)) @AT@ 6249 @LENGTH@ 86
---------INS SimpleName@@Name:clientDetailsService @TO@ MethodInvocation@@clientDetailsService.setClientDetailsStore(Collections.singletonMap("client",client)) @AT@ 6249 @LENGTH@ 20
---------INS SimpleName@@MethodName:setClientDetailsStore:[Collections.singletonMap("client",client)] @TO@ MethodInvocation@@clientDetailsService.setClientDetailsStore(Collections.singletonMap("client",client)) @AT@ 6270 @LENGTH@ 65
------------INS MethodInvocation@@Collections.singletonMap("client",client) @TO@ SimpleName@@MethodName:setClientDetailsStore:[Collections.singletonMap("client",client)] @AT@ 6292 @LENGTH@ 42
---------------INS SimpleName@@Name:Collections @TO@ MethodInvocation@@Collections.singletonMap("client",client) @AT@ 6292 @LENGTH@ 11
---------------INS SimpleName@@MethodName:singletonMap:["client", client] @TO@ MethodInvocation@@Collections.singletonMap("client",client) @AT@ 6304 @LENGTH@ 30
------------------INS StringLiteral@@"client" @TO@ SimpleName@@MethodName:singletonMap:["client", client] @AT@ 6317 @LENGTH@ 8
------------------INS SimpleName@@client @TO@ SimpleName@@MethodName:singletonMap:["client", client] @AT@ 6327 @LENGTH@ 6
---INS VariableDeclarationStatement@@AuthorizationRequest authorizationRequest=new AuthorizationRequest("client",Arrays.asList("read")); @TO@ MethodDeclaration@@public, void, MethodName:testApprovalsAddedForAutoapprovedScopes,  @AT@ 6339 @LENGTH@ 102
------INS SimpleType@@AuthorizationRequest @TO@ VariableDeclarationStatement@@AuthorizationRequest authorizationRequest=new AuthorizationRequest("client",Arrays.asList("read")); @AT@ 6339 @LENGTH@ 20
------INS VariableDeclarationFragment@@authorizationRequest=new AuthorizationRequest("client",Arrays.asList("read")) @TO@ VariableDeclarationStatement@@AuthorizationRequest authorizationRequest=new AuthorizationRequest("client",Arrays.asList("read")); @AT@ 6360 @LENGTH@ 80
---------INS SimpleName@@authorizationRequest @TO@ VariableDeclarationFragment@@authorizationRequest=new AuthorizationRequest("client",Arrays.asList("read")) @AT@ 6360 @LENGTH@ 20
---------INS ClassInstanceCreation@@AuthorizationRequest["client", Arrays.asList("read")] @TO@ VariableDeclarationFragment@@authorizationRequest=new AuthorizationRequest("client",Arrays.asList("read")) @AT@ 6383 @LENGTH@ 57
------------INS New@@new @TO@ ClassInstanceCreation@@AuthorizationRequest["client", Arrays.asList("read")] @AT@ 6383 @LENGTH@ 3
------------INS SimpleType@@AuthorizationRequest @TO@ ClassInstanceCreation@@AuthorizationRequest["client", Arrays.asList("read")] @AT@ 6387 @LENGTH@ 20
------------INS StringLiteral@@"client" @TO@ ClassInstanceCreation@@AuthorizationRequest["client", Arrays.asList("read")] @AT@ 6408 @LENGTH@ 8
------------INS MethodInvocation@@Arrays.asList("read") @TO@ ClassInstanceCreation@@AuthorizationRequest["client", Arrays.asList("read")] @AT@ 6418 @LENGTH@ 21
---------------INS SimpleName@@Name:Arrays @TO@ MethodInvocation@@Arrays.asList("read") @AT@ 6418 @LENGTH@ 6
---------------INS SimpleName@@MethodName:asList:["read"] @TO@ MethodInvocation@@Arrays.asList("read") @AT@ 6425 @LENGTH@ 14
------------------INS StringLiteral@@"read" @TO@ SimpleName@@MethodName:asList:["read"] @AT@ 6432 @LENGTH@ 6
---INS VariableDeclarationStatement@@AuthorizationRequest result=handler.checkForPreApproval(authorizationRequest,userAuthentication); @TO@ MethodDeclaration@@public, void, MethodName:testApprovalsAddedForAutoapprovedScopes,  @AT@ 6444 @LENGTH@ 100
------INS SimpleType@@AuthorizationRequest @TO@ VariableDeclarationStatement@@AuthorizationRequest result=handler.checkForPreApproval(authorizationRequest,userAuthentication); @AT@ 6444 @LENGTH@ 20
------INS VariableDeclarationFragment@@result=handler.checkForPreApproval(authorizationRequest,userAuthentication) @TO@ VariableDeclarationStatement@@AuthorizationRequest result=handler.checkForPreApproval(authorizationRequest,userAuthentication); @AT@ 6465 @LENGTH@ 78
---------INS SimpleName@@result @TO@ VariableDeclarationFragment@@result=handler.checkForPreApproval(authorizationRequest,userAuthentication) @AT@ 6465 @LENGTH@ 6
---------INS MethodInvocation@@handler.checkForPreApproval(authorizationRequest,userAuthentication) @TO@ VariableDeclarationFragment@@result=handler.checkForPreApproval(authorizationRequest,userAuthentication) @AT@ 6474 @LENGTH@ 69
------------INS SimpleName@@Name:handler @TO@ MethodInvocation@@handler.checkForPreApproval(authorizationRequest,userAuthentication) @AT@ 6474 @LENGTH@ 7
------------INS SimpleName@@MethodName:checkForPreApproval:[authorizationRequest, userAuthentication] @TO@ MethodInvocation@@handler.checkForPreApproval(authorizationRequest,userAuthentication) @AT@ 6482 @LENGTH@ 61
---------------INS SimpleName@@authorizationRequest @TO@ SimpleName@@MethodName:checkForPreApproval:[authorizationRequest, userAuthentication] @AT@ 6502 @LENGTH@ 20
---------------INS SimpleName@@userAuthentication @TO@ SimpleName@@MethodName:checkForPreApproval:[authorizationRequest, userAuthentication] @AT@ 6524 @LENGTH@ 18
---INS VariableDeclarationStatement@@Collection<Approval> approvals=store.getApprovals(userAuthentication.getName(),"client"); @TO@ MethodDeclaration@@public, void, MethodName:testApprovalsAddedForAutoapprovedScopes,  @AT@ 6548 @LENGTH@ 92
------INS ParameterizedType@@Collection<Approval> @TO@ VariableDeclarationStatement@@Collection<Approval> approvals=store.getApprovals(userAuthentication.getName(),"client"); @AT@ 6548 @LENGTH@ 20
---------INS SimpleType@@Collection @TO@ ParameterizedType@@Collection<Approval> @AT@ 6548 @LENGTH@ 10
---------INS SimpleType@@Approval @TO@ ParameterizedType@@Collection<Approval> @AT@ 6559 @LENGTH@ 8
------INS VariableDeclarationFragment@@approvals=store.getApprovals(userAuthentication.getName(),"client") @TO@ VariableDeclarationStatement@@Collection<Approval> approvals=store.getApprovals(userAuthentication.getName(),"client"); @AT@ 6569 @LENGTH@ 70
---------INS SimpleName@@approvals @TO@ VariableDeclarationFragment@@approvals=store.getApprovals(userAuthentication.getName(),"client") @AT@ 6569 @LENGTH@ 9
---------INS MethodInvocation@@store.getApprovals(userAuthentication.getName(),"client") @TO@ VariableDeclarationFragment@@approvals=store.getApprovals(userAuthentication.getName(),"client") @AT@ 6581 @LENGTH@ 58
------------INS SimpleName@@Name:store @TO@ MethodInvocation@@store.getApprovals(userAuthentication.getName(),"client") @AT@ 6581 @LENGTH@ 5
------------INS SimpleName@@MethodName:getApprovals:[userAuthentication.getName(), "client"] @TO@ MethodInvocation@@store.getApprovals(userAuthentication.getName(),"client") @AT@ 6587 @LENGTH@ 52
---------------INS MethodInvocation@@userAuthentication.getName() @TO@ SimpleName@@MethodName:getApprovals:[userAuthentication.getName(), "client"] @AT@ 6600 @LENGTH@ 28
------------------INS SimpleName@@Name:userAuthentication @TO@ MethodInvocation@@userAuthentication.getName() @AT@ 6600 @LENGTH@ 18
------------------INS SimpleName@@MethodName:getName:[] @TO@ MethodInvocation@@userAuthentication.getName() @AT@ 6619 @LENGTH@ 9
---------------INS StringLiteral@@"client" @TO@ SimpleName@@MethodName:getApprovals:[userAuthentication.getName(), "client"] @AT@ 6630 @LENGTH@ 8
---INS ExpressionStatement@@MethodInvocation:assertEquals(1,approvals.size()) @TO@ MethodDeclaration@@public, void, MethodName:testApprovalsAddedForAutoapprovedScopes,  @AT@ 6643 @LENGTH@ 34
------INS MethodInvocation@@assertEquals(1,approvals.size()) @TO@ ExpressionStatement@@MethodInvocation:assertEquals(1,approvals.size()) @AT@ 6643 @LENGTH@ 33
---------INS SimpleName@@MethodName:assertEquals:[1, approvals.size()] @TO@ MethodInvocation@@assertEquals(1,approvals.size()) @AT@ 6643 @LENGTH@ 33
------------INS NumberLiteral@@1 @TO@ SimpleName@@MethodName:assertEquals:[1, approvals.size()] @AT@ 6656 @LENGTH@ 1
------------INS MethodInvocation@@approvals.size() @TO@ SimpleName@@MethodName:assertEquals:[1, approvals.size()] @AT@ 6659 @LENGTH@ 16
---------------INS SimpleName@@Name:approvals @TO@ MethodInvocation@@approvals.size() @AT@ 6659 @LENGTH@ 9
---------------INS SimpleName@@MethodName:size:[] @TO@ MethodInvocation@@approvals.size() @AT@ 6669 @LENGTH@ 6
---INS VariableDeclarationStatement@@Approval approval=approvals.iterator().next(); @TO@ MethodDeclaration@@public, void, MethodName:testApprovalsAddedForAutoapprovedScopes,  @AT@ 6681 @LENGTH@ 48
------INS SimpleType@@Approval @TO@ VariableDeclarationStatement@@Approval approval=approvals.iterator().next(); @AT@ 6681 @LENGTH@ 8
------INS VariableDeclarationFragment@@approval=approvals.iterator().next() @TO@ VariableDeclarationStatement@@Approval approval=approvals.iterator().next(); @AT@ 6690 @LENGTH@ 38
---------INS SimpleName@@approval @TO@ VariableDeclarationFragment@@approval=approvals.iterator().next() @AT@ 6690 @LENGTH@ 8
---------INS MethodInvocation@@approvals.iterator().next() @TO@ VariableDeclarationFragment@@approval=approvals.iterator().next() @AT@ 6701 @LENGTH@ 27
------------INS MethodInvocation@@MethodName:iterator:[] @TO@ MethodInvocation@@approvals.iterator().next() @AT@ 6701 @LENGTH@ 20
------------INS SimpleName@@Name:approvals @TO@ MethodInvocation@@approvals.iterator().next() @AT@ 6701 @LENGTH@ 9
------------INS SimpleName@@MethodName:next:[] @TO@ MethodInvocation@@approvals.iterator().next() @AT@ 6722 @LENGTH@ 6
---INS ExpressionStatement@@MethodInvocation:assertEquals("read",approval.getScope()) @TO@ MethodDeclaration@@public, void, MethodName:testApprovalsAddedForAutoapprovedScopes,  @AT@ 6732 @LENGTH@ 42
------INS MethodInvocation@@assertEquals("read",approval.getScope()) @TO@ ExpressionStatement@@MethodInvocation:assertEquals("read",approval.getScope()) @AT@ 6732 @LENGTH@ 41
---------INS SimpleName@@MethodName:assertEquals:["read", approval.getScope()] @TO@ MethodInvocation@@assertEquals("read",approval.getScope()) @AT@ 6732 @LENGTH@ 41
------------INS StringLiteral@@"read" @TO@ SimpleName@@MethodName:assertEquals:["read", approval.getScope()] @AT@ 6745 @LENGTH@ 6
------------INS MethodInvocation@@approval.getScope() @TO@ SimpleName@@MethodName:assertEquals:["read", approval.getScope()] @AT@ 6753 @LENGTH@ 19
---------------INS SimpleName@@Name:approval @TO@ MethodInvocation@@approval.getScope() @AT@ 6753 @LENGTH@ 8
---------------INS SimpleName@@MethodName:getScope:[] @TO@ MethodInvocation@@approval.getScope() @AT@ 6762 @LENGTH@ 10


UPD TypeDeclaration@@[@Configuration, @ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration"), @EnableConfigurationProperties(TelegramComponentConfiguration.class), public]TelegramComponentAutoConfiguration,  @TO@ [@Configuration, @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration"), @EnableConfigurationProperties(TelegramComponentConfiguration.class), public]TelegramComponentAutoConfiguration,  @AT@ 1631 @LENGTH@ 2088
---UPD NormalAnnotation@@@ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1646 @LENGTH@ 79
---UPD NormalAnnotation@@@AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1726 @LENGTH@ 80


INS MethodDeclaration@@Page<Person>, MethodName:findBy, Pageable page,  @TO@ TypeDeclaration@@[public, static]PersonRepository, [PagingAndSortingRepository<Person,String>] @AT@ 9676 @LENGTH@ 22
---INS ParameterizedType@@Page<Person> @TO@ MethodDeclaration@@Page<Person>, MethodName:findBy, Pageable page,  @AT@ 9663 @LENGTH@ 12
------INS SimpleType@@Page @TO@ ParameterizedType@@Page<Person> @AT@ 9663 @LENGTH@ 4
------INS SimpleType@@Person @TO@ ParameterizedType@@Page<Person> @AT@ 9668 @LENGTH@ 6
---INS SimpleName@@MethodName:findBy @TO@ MethodDeclaration@@Page<Person>, MethodName:findBy, Pageable page,  @AT@ 9676 @LENGTH@ 6
---INS SingleVariableDeclaration@@Pageable page @TO@ MethodDeclaration@@Page<Person>, MethodName:findBy, Pageable page,  @AT@ 9683 @LENGTH@ 13
------INS SimpleType@@Pageable @TO@ SingleVariableDeclaration@@Pageable page @AT@ 9683 @LENGTH@ 8
------INS SimpleName@@page @TO@ SingleVariableDeclaration@@Pageable page @AT@ 9692 @LENGTH@ 4


UPD TryStatement@@try {  tblObj=getTable(tableName);  if (MetaStoreUtils.isInsertOnlyTable(tblObj.getParameters())) {    throw new SemanticException("Merge is not supported for MM tables");  }  List<String> bucketCols=null;  Class<? extends InputFormat> inputFormatClass=null;  boolean isArchived=false;  boolean checkIndex=HiveConf.getBoolVar(conf,HiveConf.ConfVars.HIVE_CONCATENATE_CHECK_INDEX);  if (checkIndex) {    List<Index> indexes=db.getIndexes(tblObj.getDbName(),tblObj.getTableName(),Short.MAX_VALUE);    if (indexes != null && indexes.size() > 0) {      throw new SemanticException("can not do merge because source table " + tableName + " is indexed.");    }  }  if (tblObj.isPartitioned()) {    if (partSpec == null) {      throw new SemanticException("source table " + tableName + " is partitioned but no partition desc found.");    } else {      Partition part=getPartition(tblObj,partSpec,false);      if (part == null) {        throw new SemanticException("source table " + tableName + " is partitioned but partition not found.");      }      bucketCols=part.getBucketCols();      inputFormatClass=part.getInputFormatClass();      isArchived=ArchiveUtils.isArchived(part);      Path tabPath=tblObj.getPath();      Path partPath=part.getDataLocation();      newTblPartLoc=new Path(tabPath.toUri().getScheme(),tabPath.toUri().getAuthority(),partPath.toUri().getPath());      oldTblPartLoc=partPath;      lbCtx=constructListBucketingCtx(part.getSkewedColNames(),part.getSkewedColValues(),part.getSkewedColValueLocationMaps(),part.isStoredAsSubDirectories(),conf);    }  } else {    inputFormatClass=tblObj.getInputFormatClass();    bucketCols=tblObj.getBucketCols();    oldTblPartLoc=tblObj.getPath();    newTblPartLoc=tblObj.getPath();    lbCtx=constructListBucketingCtx(tblObj.getSkewedColNames(),tblObj.getSkewedColValues(),tblObj.getSkewedColValueLocationMaps(),tblObj.isStoredAsSubDirectories(),conf);  }  if (!((inputFormatClass.equals(RCFileInputFormat.class) || (inputFormatClass.equals(OrcInputFormat.class))))) {    throw new SemanticException("Only RCFile and ORCFile Formats are supportted right now.");  }  mergeDesc.setInputFormatClass(inputFormatClass);  if (bucketCols != null && bucketCols.size() > 0) {    throw new SemanticException("Merge can not perform on bucketized partition/table.");  }  if (isArchived) {    throw new SemanticException("Merge can not perform on archived partitions.");  }  inputDir.add(oldTblPartLoc);  mergeDesc.setInputDir(inputDir);  mergeDesc.setLbCtx(lbCtx);  addInputsOutputsAlterTable(tableName,partSpec,AlterTableTypes.MERGEFILES);  DDLWork ddlWork=new DDLWork(getInputs(),getOutputs(),mergeDesc);  ddlWork.setNeedLock(true);  Task<? extends Serializable> mergeTask=TaskFactory.get(ddlWork,conf);  TableDesc tblDesc=Utilities.getTableDesc(tblObj);  Path queryTmpdir=ctx.getExternalTmpPath(newTblPartLoc);  mergeDesc.setOutputDir(queryTmpdir);  LoadTableDesc ltd=new LoadTableDesc(queryTmpdir,tblDesc,partSpec == null ? new HashMap<String,String>() : partSpec,null);  ltd.setLbCtx(lbCtx);  Task<MoveWork> moveTsk=TaskFactory.get(new MoveWork(null,null,ltd,null,false),conf);  mergeTask.addDependentTask(moveTsk);  if (conf.getBoolVar(HiveConf.ConfVars.HIVESTATSAUTOGATHER)) {    StatsWork statDesc;    if (oldTblPartLoc.equals(newTblPartLoc)) {      TableSpec tablepart=new TableSpec(db,conf,tableName,partSpec);      statDesc=new StatsWork(tablepart);    } else {      statDesc=new StatsWork(ltd);    }    statDesc.setNoStatsAggregator(true);    statDesc.setClearAggregatorStats(true);    statDesc.setStatsReliable(conf.getBoolVar(HiveConf.ConfVars.HIVE_STATS_RELIABLE));    Task<? extends Serializable> statTask=TaskFactory.get(statDesc,conf);    moveTsk.addDependentTask(statTask);  }  rootTasks.add(mergeTask);} catch (Exception e) {  throw new SemanticException(e);} @TO@ try {  tblObj=getTable(tableName);  if (MetaStoreUtils.isInsertOnlyTable(tblObj.getParameters())) {    throw new SemanticException("Merge is not supported for MM tables");  }  mergeDesc.setTableDesc(Utilities.getTableDesc(tblObj));  List<String> bucketCols=null;  Class<? extends InputFormat> inputFormatClass=null;  boolean isArchived=false;  boolean checkIndex=HiveConf.getBoolVar(conf,HiveConf.ConfVars.HIVE_CONCATENATE_CHECK_INDEX);  if (checkIndex) {    List<Index> indexes=db.getIndexes(tblObj.getDbName(),tblObj.getTableName(),Short.MAX_VALUE);    if (indexes != null && indexes.size() > 0) {      throw new SemanticException("can not do merge because source table " + tableName + " is indexed.");    }  }  if (tblObj.isPartitioned()) {    if (partSpec == null) {      throw new SemanticException("source table " + tableName + " is partitioned but no partition desc found.");    } else {      Partition part=getPartition(tblObj,partSpec,false);      if (part == null) {        throw new SemanticException("source table " + tableName + " is partitioned but partition not found.");      }      bucketCols=part.getBucketCols();      inputFormatClass=part.getInputFormatClass();      isArchived=ArchiveUtils.isArchived(part);      Path tabPath=tblObj.getPath();      Path partPath=part.getDataLocation();      newTblPartLoc=new Path(tabPath.toUri().getScheme(),tabPath.toUri().getAuthority(),partPath.toUri().getPath());      oldTblPartLoc=partPath;      lbCtx=constructListBucketingCtx(part.getSkewedColNames(),part.getSkewedColValues(),part.getSkewedColValueLocationMaps(),part.isStoredAsSubDirectories(),conf);    }  } else {    inputFormatClass=tblObj.getInputFormatClass();    bucketCols=tblObj.getBucketCols();    oldTblPartLoc=tblObj.getPath();    newTblPartLoc=tblObj.getPath();    lbCtx=constructListBucketingCtx(tblObj.getSkewedColNames(),tblObj.getSkewedColValues(),tblObj.getSkewedColValueLocationMaps(),tblObj.isStoredAsSubDirectories(),conf);  }  if (!((inputFormatClass.equals(RCFileInputFormat.class) || (inputFormatClass.equals(OrcInputFormat.class))))) {    throw new SemanticException("Only RCFile and ORCFile Formats are supportted right now.");  }  mergeDesc.setInputFormatClass(inputFormatClass);  if (bucketCols != null && bucketCols.size() > 0) {    throw new SemanticException("Merge can not perform on bucketized partition/table.");  }  if (isArchived) {    throw new SemanticException("Merge can not perform on archived partitions.");  }  inputDir.add(oldTblPartLoc);  mergeDesc.setInputDir(inputDir);  mergeDesc.setLbCtx(lbCtx);  addInputsOutputsAlterTable(tableName,partSpec,AlterTableTypes.MERGEFILES);  DDLWork ddlWork=new DDLWork(getInputs(),getOutputs(),mergeDesc);  ddlWork.setNeedLock(true);  Task<? extends Serializable> mergeTask=TaskFactory.get(ddlWork,conf);  TableDesc tblDesc=Utilities.getTableDesc(tblObj);  Path queryTmpdir=ctx.getExternalTmpPath(newTblPartLoc);  mergeDesc.setOutputDir(queryTmpdir);  LoadTableDesc ltd=new LoadTableDesc(queryTmpdir,tblDesc,partSpec == null ? new HashMap<String,String>() : partSpec,null);  ltd.setLbCtx(lbCtx);  Task<MoveWork> moveTsk=TaskFactory.get(new MoveWork(null,null,ltd,null,false),conf);  mergeTask.addDependentTask(moveTsk);  if (conf.getBoolVar(HiveConf.ConfVars.HIVESTATSAUTOGATHER)) {    StatsWork statDesc;    if (oldTblPartLoc.equals(newTblPartLoc)) {      TableSpec tablepart=new TableSpec(db,conf,tableName,partSpec);      statDesc=new StatsWork(tablepart);    } else {      statDesc=new StatsWork(ltd);    }    statDesc.setNoStatsAggregator(true);    statDesc.setClearAggregatorStats(true);    statDesc.setStatsReliable(conf.getBoolVar(HiveConf.ConfVars.HIVE_STATS_RELIABLE));    Task<? extends Serializable> statTask=TaskFactory.get(statDesc,conf);    moveTsk.addDependentTask(statTask);  }  rootTasks.add(mergeTask);} catch (Exception e) {  throw new SemanticException(e);} @AT@ 68059 @LENGTH@ 5070
---INS ExpressionStatement@@MethodInvocation:mergeDesc.setTableDesc(Utilities.getTableDesc(tblObj)) @TO@ TryStatement@@try {  tblObj=getTable(tableName);  if (MetaStoreUtils.isInsertOnlyTable(tblObj.getParameters())) {    throw new SemanticException("Merge is not supported for MM tables");  }  List<String> bucketCols=null;  Class<? extends InputFormat> inputFormatClass=null;  boolean isArchived=false;  boolean checkIndex=HiveConf.getBoolVar(conf,HiveConf.ConfVars.HIVE_CONCATENATE_CHECK_INDEX);  if (checkIndex) {    List<Index> indexes=db.getIndexes(tblObj.getDbName(),tblObj.getTableName(),Short.MAX_VALUE);    if (indexes != null && indexes.size() > 0) {      throw new SemanticException("can not do merge because source table " + tableName + " is indexed.");    }  }  if (tblObj.isPartitioned()) {    if (partSpec == null) {      throw new SemanticException("source table " + tableName + " is partitioned but no partition desc found.");    } else {      Partition part=getPartition(tblObj,partSpec,false);      if (part == null) {        throw new SemanticException("source table " + tableName + " is partitioned but partition not found.");      }      bucketCols=part.getBucketCols();      inputFormatClass=part.getInputFormatClass();      isArchived=ArchiveUtils.isArchived(part);      Path tabPath=tblObj.getPath();      Path partPath=part.getDataLocation();      newTblPartLoc=new Path(tabPath.toUri().getScheme(),tabPath.toUri().getAuthority(),partPath.toUri().getPath());      oldTblPartLoc=partPath;      lbCtx=constructListBucketingCtx(part.getSkewedColNames(),part.getSkewedColValues(),part.getSkewedColValueLocationMaps(),part.isStoredAsSubDirectories(),conf);    }  } else {    inputFormatClass=tblObj.getInputFormatClass();    bucketCols=tblObj.getBucketCols();    oldTblPartLoc=tblObj.getPath();    newTblPartLoc=tblObj.getPath();    lbCtx=constructListBucketingCtx(tblObj.getSkewedColNames(),tblObj.getSkewedColValues(),tblObj.getSkewedColValueLocationMaps(),tblObj.isStoredAsSubDirectories(),conf);  }  if (!((inputFormatClass.equals(RCFileInputFormat.class) || (inputFormatClass.equals(OrcInputFormat.class))))) {    throw new SemanticException("Only RCFile and ORCFile Formats are supportted right now.");  }  mergeDesc.setInputFormatClass(inputFormatClass);  if (bucketCols != null && bucketCols.size() > 0) {    throw new SemanticException("Merge can not perform on bucketized partition/table.");  }  if (isArchived) {    throw new SemanticException("Merge can not perform on archived partitions.");  }  inputDir.add(oldTblPartLoc);  mergeDesc.setInputDir(inputDir);  mergeDesc.setLbCtx(lbCtx);  addInputsOutputsAlterTable(tableName,partSpec,AlterTableTypes.MERGEFILES);  DDLWork ddlWork=new DDLWork(getInputs(),getOutputs(),mergeDesc);  ddlWork.setNeedLock(true);  Task<? extends Serializable> mergeTask=TaskFactory.get(ddlWork,conf);  TableDesc tblDesc=Utilities.getTableDesc(tblObj);  Path queryTmpdir=ctx.getExternalTmpPath(newTblPartLoc);  mergeDesc.setOutputDir(queryTmpdir);  LoadTableDesc ltd=new LoadTableDesc(queryTmpdir,tblDesc,partSpec == null ? new HashMap<String,String>() : partSpec,null);  ltd.setLbCtx(lbCtx);  Task<MoveWork> moveTsk=TaskFactory.get(new MoveWork(null,null,ltd,null,false),conf);  mergeTask.addDependentTask(moveTsk);  if (conf.getBoolVar(HiveConf.ConfVars.HIVESTATSAUTOGATHER)) {    StatsWork statDesc;    if (oldTblPartLoc.equals(newTblPartLoc)) {      TableSpec tablepart=new TableSpec(db,conf,tableName,partSpec);      statDesc=new StatsWork(tablepart);    } else {      statDesc=new StatsWork(ltd);    }    statDesc.setNoStatsAggregator(true);    statDesc.setClearAggregatorStats(true);    statDesc.setStatsReliable(conf.getBoolVar(HiveConf.ConfVars.HIVE_STATS_RELIABLE));    Task<? extends Serializable> statTask=TaskFactory.get(statDesc,conf);    moveTsk.addDependentTask(statTask);  }  rootTasks.add(mergeTask);} catch (Exception e) {  throw new SemanticException(e);} @AT@ 68324 @LENGTH@ 55
------INS MethodInvocation@@mergeDesc.setTableDesc(Utilities.getTableDesc(tblObj)) @TO@ ExpressionStatement@@MethodInvocation:mergeDesc.setTableDesc(Utilities.getTableDesc(tblObj)) @AT@ 68324 @LENGTH@ 54
---------INS SimpleName@@Name:mergeDesc @TO@ MethodInvocation@@mergeDesc.setTableDesc(Utilities.getTableDesc(tblObj)) @AT@ 68324 @LENGTH@ 9
---------INS SimpleName@@MethodName:setTableDesc:[Utilities.getTableDesc(tblObj)] @TO@ MethodInvocation@@mergeDesc.setTableDesc(Utilities.getTableDesc(tblObj)) @AT@ 68334 @LENGTH@ 44
------------INS MethodInvocation@@Utilities.getTableDesc(tblObj) @TO@ SimpleName@@MethodName:setTableDesc:[Utilities.getTableDesc(tblObj)] @AT@ 68347 @LENGTH@ 30
---------------INS SimpleName@@Name:Utilities @TO@ MethodInvocation@@Utilities.getTableDesc(tblObj) @AT@ 68347 @LENGTH@ 9
---------------INS SimpleName@@MethodName:getTableDesc:[tblObj] @TO@ MethodInvocation@@Utilities.getTableDesc(tblObj) @AT@ 68357 @LENGTH@ 20
------------------INS SimpleName@@tblObj @TO@ SimpleName@@MethodName:getTableDesc:[tblObj] @AT@ 68370 @LENGTH@ 6


UPD VariableDeclarationStatement@@String userId=amqpMessageProperties.getUserId(); @TO@ String userId=amqpMessageProperties.getReceivedUserId(); @AT@ 10043 @LENGTH@ 50
---UPD VariableDeclarationFragment@@userId=amqpMessageProperties.getUserId() @TO@ userId=amqpMessageProperties.getReceivedUserId() @AT@ 10050 @LENGTH@ 42
------UPD MethodInvocation@@amqpMessageProperties.getUserId() @TO@ amqpMessageProperties.getReceivedUserId() @AT@ 10059 @LENGTH@ 33
---------UPD SimpleName@@MethodName:getUserId:[] @TO@ MethodName:getReceivedUserId:[] @AT@ 10081 @LENGTH@ 11


UPD ExpressionStatement@@Assignment:scope=Collections.singleton(String.class.cast(scopeObj)) @TO@ Assignment:scope=new LinkedHashSet<String>(Arrays.asList(String.class.cast(scopeObj).split(" "))) @AT@ 5628 @LENGTH@ 59
---UPD Assignment@@scope=Collections.singleton(String.class.cast(scopeObj)) @TO@ scope=new LinkedHashSet<String>(Arrays.asList(String.class.cast(scopeObj).split(" "))) @AT@ 5628 @LENGTH@ 58
------DEL MethodInvocation@@Collections.singleton(String.class.cast(scopeObj)) @AT@ 5636 @LENGTH@ 50
------INS ClassInstanceCreation@@LinkedHashSet<String>[Arrays.asList(String.class.cast(scopeObj).split(" "))] @TO@ Assignment@@scope=Collections.singleton(String.class.cast(scopeObj)) @AT@ 5661 @LENGTH@ 80
---------INS New@@new @TO@ ClassInstanceCreation@@LinkedHashSet<String>[Arrays.asList(String.class.cast(scopeObj).split(" "))] @AT@ 5661 @LENGTH@ 3
---------INS ParameterizedType@@LinkedHashSet<String> @TO@ ClassInstanceCreation@@LinkedHashSet<String>[Arrays.asList(String.class.cast(scopeObj).split(" "))] @AT@ 5665 @LENGTH@ 21
------------INS SimpleType@@LinkedHashSet @TO@ ParameterizedType@@LinkedHashSet<String> @AT@ 5665 @LENGTH@ 13
------------INS SimpleType@@String @TO@ ParameterizedType@@LinkedHashSet<String> @AT@ 5679 @LENGTH@ 6
---------INS MethodInvocation@@Arrays.asList(String.class.cast(scopeObj).split(" ")) @TO@ ClassInstanceCreation@@LinkedHashSet<String>[Arrays.asList(String.class.cast(scopeObj).split(" "))] @AT@ 5687 @LENGTH@ 53
------------MOV SimpleName@@Name:Collections @TO@ MethodInvocation@@Arrays.asList(String.class.cast(scopeObj).split(" ")) @AT@ 5636 @LENGTH@ 11
------------MOV SimpleName@@MethodName:singleton:[String.class.cast(scopeObj)] @TO@ MethodInvocation@@Arrays.asList(String.class.cast(scopeObj).split(" ")) @AT@ 5648 @LENGTH@ 38
---------------UPD MethodInvocation@@String.class.cast(scopeObj) @TO@ String.class.cast(scopeObj).split(" ") @AT@ 5658 @LENGTH@ 27
------------------DEL SimpleName@@MethodName:cast:[scopeObj] @AT@ 5671 @LENGTH@ 14
---------------------DEL SimpleName@@scopeObj @AT@ 5676 @LENGTH@ 8
------------------INS MethodInvocation@@MethodName:cast:[scopeObj] @TO@ MethodInvocation@@String.class.cast(scopeObj) @AT@ 5701 @LENGTH@ 27
---------------------INS SimpleName@@scopeObj @TO@ MethodInvocation@@MethodName:cast:[scopeObj] @AT@ 5719 @LENGTH@ 8
------------------INS SimpleName@@MethodName:split:[" "] @TO@ MethodInvocation@@String.class.cast(scopeObj) @AT@ 5729 @LENGTH@ 10
---------------------INS StringLiteral@@" " @TO@ SimpleName@@MethodName:split:[" "] @AT@ 5735 @LENGTH@ 3


UPD MethodDeclaration@@public, voidMethodName:PartialScanWork, List<Path> inputPaths,  @TO@ public, voidMethodName:PartialScanWork, List<Path> inputPaths, TableDesc tblDesc,  @AT@ 1885 @LENGTH@ 316
---INS SingleVariableDeclaration@@TableDesc tblDesc @TO@ MethodDeclaration@@public, voidMethodName:PartialScanWork, List<Path> inputPaths,  @AT@ 2009 @LENGTH@ 17
------INS SimpleType@@TableDesc @TO@ SingleVariableDeclaration@@TableDesc tblDesc @AT@ 2009 @LENGTH@ 9
------INS SimpleName@@tblDesc @TO@ SingleVariableDeclaration@@TableDesc tblDesc @AT@ 2019 @LENGTH@ 7
---INS ExpressionStatement@@Assignment:this.tblDesc=tblDesc @TO@ MethodDeclaration@@public, voidMethodName:PartialScanWork, List<Path> inputPaths,  @AT@ 2081 @LENGTH@ 23
------INS Assignment@@this.tblDesc=tblDesc @TO@ ExpressionStatement@@Assignment:this.tblDesc=tblDesc @AT@ 2081 @LENGTH@ 22
---------INS FieldAccess@@this.tblDesc @TO@ Assignment@@this.tblDesc=tblDesc @AT@ 2081 @LENGTH@ 12
------------INS ThisExpression@@this @TO@ FieldAccess@@this.tblDesc @AT@ 2081 @LENGTH@ 4
------------INS SimpleName@@tblDesc @TO@ FieldAccess@@this.tblDesc @AT@ 2086 @LENGTH@ 7
---------INS Operator@@= @TO@ Assignment@@this.tblDesc=tblDesc @AT@ 2093 @LENGTH@ 1
---------INS SimpleName@@tblDesc @TO@ Assignment@@this.tblDesc=tblDesc @AT@ 2096 @LENGTH@ 7
---INS ExpressionStatement@@MethodInvocation:partDesc.setTableDesc(tblDesc) @TO@ MethodDeclaration@@public, voidMethodName:PartialScanWork, List<Path> inputPaths,  @AT@ 2232 @LENGTH@ 31
------INS MethodInvocation@@partDesc.setTableDesc(tblDesc) @TO@ ExpressionStatement@@MethodInvocation:partDesc.setTableDesc(tblDesc) @AT@ 2232 @LENGTH@ 30
---------INS SimpleName@@Name:partDesc @TO@ MethodInvocation@@partDesc.setTableDesc(tblDesc) @AT@ 2232 @LENGTH@ 8
---------INS SimpleName@@MethodName:setTableDesc:[tblDesc] @TO@ MethodInvocation@@partDesc.setTableDesc(tblDesc) @AT@ 2241 @LENGTH@ 21
------------INS SimpleName@@tblDesc @TO@ SimpleName@@MethodName:setTableDesc:[tblDesc] @AT@ 2254 @LENGTH@ 7


UPD TypeDeclaration@@[@Configuration, @EnableNeo4jRepositories, @EnableTransactionManagement, public]ConversionServicePersistenceContext, Neo4jConfiguration @TO@ [@Configuration, @EnableNeo4jRepositories(basePackageClasses={SiteMemberRepository.class,PensionRepository.class,JavaElementRepository.class}), @EnableTransactionManagement, public]ConversionServicePersistenceContext, Neo4jConfiguration @AT@ 1283 @LENGTH@ 595
---INS NormalAnnotation@@@EnableNeo4jRepositories(basePackageClasses={SiteMemberRepository.class,PensionRepository.class,JavaElementRepository.class}) @TO@ TypeDeclaration@@[@Configuration, @EnableNeo4jRepositories, @EnableTransactionManagement, public]ConversionServicePersistenceContext, Neo4jConfiguration @AT@ 1298 @LENGTH@ 129
---DEL MarkerAnnotation@@@EnableNeo4jRepositories @AT@ 1298 @LENGTH@ 24


UPD MethodDeclaration@@public, void, MethodName:addField, final FieldMetadata field,  @TO@ public, void, MethodName:addField, final FieldMetadata field, boolean evict,  @AT@ 2630 @LENGTH@ 1709
---INS SingleVariableDeclaration@@boolean evict @TO@ MethodDeclaration@@public, void, MethodName:addField, final FieldMetadata field,  @AT@ 2768 @LENGTH@ 13
------INS PrimitiveType@@boolean @TO@ SingleVariableDeclaration@@boolean evict @AT@ 2768 @LENGTH@ 7
------INS SimpleName@@evict @TO@ SingleVariableDeclaration@@boolean evict @AT@ 2776 @LENGTH@ 5
---UPD VariableDeclarationStatement@@final PhysicalTypeMetadata ptm=(PhysicalTypeMetadata)metadataService.get(field.getDeclaredByMetadataId()); @TO@ PhysicalTypeMetadata ptm=null; @AT@ 2801 @LENGTH@ 117
------DEL Modifier@@final @AT@ 2801 @LENGTH@ 5
------UPD VariableDeclarationFragment@@ptm=(PhysicalTypeMetadata)metadataService.get(field.getDeclaredByMetadataId()) @TO@ ptm=null @AT@ 2828 @LENGTH@ 89
---------INS NullLiteral@@null @TO@ VariableDeclarationFragment@@ptm=(PhysicalTypeMetadata)metadataService.get(field.getDeclaredByMetadataId()) @AT@ 2933 @LENGTH@ 4
---INS IfStatement@@if (evict) {  ptm=(PhysicalTypeMetadata)metadataService.evictAndGet(field.getDeclaredByMetadataId());} else {  ptm=(PhysicalTypeMetadata)metadataService.get(field.getDeclaredByMetadataId());} @TO@ MethodDeclaration@@public, void, MethodName:addField, final FieldMetadata field,  @AT@ 2943 @LENGTH@ 217
------INS SimpleName@@evict @TO@ IfStatement@@if (evict) {  ptm=(PhysicalTypeMetadata)metadataService.evictAndGet(field.getDeclaredByMetadataId());} else {  ptm=(PhysicalTypeMetadata)metadataService.get(field.getDeclaredByMetadataId());} @AT@ 2947 @LENGTH@ 5
------INS Block@@ThenBody:{  ptm=(PhysicalTypeMetadata)metadataService.evictAndGet(field.getDeclaredByMetadataId());} @TO@ IfStatement@@if (evict) {  ptm=(PhysicalTypeMetadata)metadataService.evictAndGet(field.getDeclaredByMetadataId());} else {  ptm=(PhysicalTypeMetadata)metadataService.get(field.getDeclaredByMetadataId());} @AT@ 2954 @LENGTH@ 104
---------INS ExpressionStatement@@Assignment:ptm=(PhysicalTypeMetadata)metadataService.evictAndGet(field.getDeclaredByMetadataId()) @TO@ Block@@ThenBody:{  ptm=(PhysicalTypeMetadata)metadataService.evictAndGet(field.getDeclaredByMetadataId());} @AT@ 2962 @LENGTH@ 90
------------INS Assignment@@ptm=(PhysicalTypeMetadata)metadataService.evictAndGet(field.getDeclaredByMetadataId()) @TO@ ExpressionStatement@@Assignment:ptm=(PhysicalTypeMetadata)metadataService.evictAndGet(field.getDeclaredByMetadataId()) @AT@ 2962 @LENGTH@ 89
---------------INS SimpleName@@ptm @TO@ Assignment@@ptm=(PhysicalTypeMetadata)metadataService.evictAndGet(field.getDeclaredByMetadataId()) @AT@ 2962 @LENGTH@ 3
---------------INS Operator@@= @TO@ Assignment@@ptm=(PhysicalTypeMetadata)metadataService.evictAndGet(field.getDeclaredByMetadataId()) @AT@ 2965 @LENGTH@ 1
---------------INS CastExpression@@(PhysicalTypeMetadata)metadataService.evictAndGet(field.getDeclaredByMetadataId()) @TO@ Assignment@@ptm=(PhysicalTypeMetadata)metadataService.evictAndGet(field.getDeclaredByMetadataId()) @AT@ 2968 @LENGTH@ 83
------------------INS SimpleType@@PhysicalTypeMetadata @TO@ CastExpression@@(PhysicalTypeMetadata)metadataService.evictAndGet(field.getDeclaredByMetadataId()) @AT@ 2969 @LENGTH@ 20
------------------INS MethodInvocation@@metadataService.evictAndGet(field.getDeclaredByMetadataId()) @TO@ CastExpression@@(PhysicalTypeMetadata)metadataService.evictAndGet(field.getDeclaredByMetadataId()) @AT@ 2991 @LENGTH@ 60
---------------------INS SimpleName@@Name:metadataService @TO@ MethodInvocation@@metadataService.evictAndGet(field.getDeclaredByMetadataId()) @AT@ 2991 @LENGTH@ 15
---------------------INS SimpleName@@MethodName:evictAndGet:[field.getDeclaredByMetadataId()] @TO@ MethodInvocation@@metadataService.evictAndGet(field.getDeclaredByMetadataId()) @AT@ 3007 @LENGTH@ 44
------------------------INS MethodInvocation@@field.getDeclaredByMetadataId() @TO@ SimpleName@@MethodName:evictAndGet:[field.getDeclaredByMetadataId()] @AT@ 3019 @LENGTH@ 31
---------------------------INS SimpleName@@Name:field @TO@ MethodInvocation@@field.getDeclaredByMetadataId() @AT@ 3019 @LENGTH@ 5
---------------------------INS SimpleName@@MethodName:getDeclaredByMetadataId:[] @TO@ MethodInvocation@@field.getDeclaredByMetadataId() @AT@ 3025 @LENGTH@ 25
------INS Block@@ElseBody:{  ptm=(PhysicalTypeMetadata)metadataService.get(field.getDeclaredByMetadataId());} @TO@ IfStatement@@if (evict) {  ptm=(PhysicalTypeMetadata)metadataService.evictAndGet(field.getDeclaredByMetadataId());} else {  ptm=(PhysicalTypeMetadata)metadataService.get(field.getDeclaredByMetadataId());} @AT@ 3064 @LENGTH@ 96
---------INS ExpressionStatement@@Assignment:ptm=(PhysicalTypeMetadata)metadataService.get(field.getDeclaredByMetadataId()) @TO@ Block@@ElseBody:{  ptm=(PhysicalTypeMetadata)metadataService.get(field.getDeclaredByMetadataId());} @AT@ 3072 @LENGTH@ 82
------------INS Assignment@@ptm=(PhysicalTypeMetadata)metadataService.get(field.getDeclaredByMetadataId()) @TO@ ExpressionStatement@@Assignment:ptm=(PhysicalTypeMetadata)metadataService.get(field.getDeclaredByMetadataId()) @AT@ 3072 @LENGTH@ 81
---------------MOV CastExpression@@(PhysicalTypeMetadata)metadataService.get(field.getDeclaredByMetadataId()) @TO@ Assignment@@ptm=(PhysicalTypeMetadata)metadataService.get(field.getDeclaredByMetadataId()) @AT@ 2842 @LENGTH@ 75
---------------INS SimpleName@@ptm @TO@ Assignment@@ptm=(PhysicalTypeMetadata)metadataService.get(field.getDeclaredByMetadataId()) @AT@ 3072 @LENGTH@ 3
---------------INS Operator@@= @TO@ Assignment@@ptm=(PhysicalTypeMetadata)metadataService.get(field.getDeclaredByMetadataId()) @AT@ 3075 @LENGTH@ 1


INS MethodDeclaration@@void, MethodName:noPrimaryElected, String service,  @TO@ TypeDeclaration@@[@MessageLogger(projectCode="WFLYCLSV",length=4), public]ClusteringServerLogger, [BasicLogger] @AT@ 4865 @LENGTH@ 33
---INS PrimitiveType@@void @TO@ MethodDeclaration@@void, MethodName:noPrimaryElected, String service,  @AT@ 4860 @LENGTH@ 4
---INS SimpleName@@MethodName:noPrimaryElected @TO@ MethodDeclaration@@void, MethodName:noPrimaryElected, String service,  @AT@ 4865 @LENGTH@ 16
---INS SingleVariableDeclaration@@String service @TO@ MethodDeclaration@@void, MethodName:noPrimaryElected, String service,  @AT@ 4882 @LENGTH@ 14
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String service @AT@ 4882 @LENGTH@ 6
------INS SimpleName@@service @TO@ SingleVariableDeclaration@@String service @AT@ 4889 @LENGTH@ 7


UPD TypeDeclaration@@[@Configuration, @ComponentScan, @EnableNeo4jRepositories("org.springframework.data.neo4j.examples.jsr303.repo"), @EnableTransactionManagement, public]JSR303Context, Neo4jConfiguration @TO@ [@Configuration, @ComponentScan(basePackageClasses={AdultService.class}), @EnableNeo4jRepositories("org.springframework.data.neo4j.examples.jsr303.repo"), @EnableTransactionManagement, public]JSR303Context, Neo4jConfiguration @AT@ 987 @LENGTH@ 557
---DEL MarkerAnnotation@@@ComponentScan @AT@ 1002 @LENGTH@ 14
---INS NormalAnnotation@@@ComponentScan(basePackageClasses={AdultService.class}) @TO@ TypeDeclaration@@[@Configuration, @ComponentScan, @EnableNeo4jRepositories("org.springframework.data.neo4j.examples.jsr303.repo"), @EnableTransactionManagement, public]JSR303Context, Neo4jConfiguration @AT@ 1160 @LENGTH@ 59


UPD TypeDeclaration@@[@Configuration, @ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration"), @EnableConfigurationProperties(QuartzComponentConfiguration.class), public]QuartzComponentAutoConfiguration,  @TO@ [@Configuration, @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration"), @EnableConfigurationProperties(QuartzComponentConfiguration.class), public]QuartzComponentAutoConfiguration,  @AT@ 1627 @LENGTH@ 2058
---UPD NormalAnnotation@@@ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1642 @LENGTH@ 79
---UPD NormalAnnotation@@@AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1722 @LENGTH@ 80


UPD TypeDeclaration@@[@Configuration, @ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration"), @EnableConfigurationProperties(SjmsBatchComponentConfiguration.class), public]SjmsBatchComponentAutoConfiguration,  @TO@ [@Configuration, @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration"), @EnableConfigurationProperties(SjmsBatchComponentConfiguration.class), public]SjmsBatchComponentAutoConfiguration,  @AT@ 1636 @LENGTH@ 2098
---UPD NormalAnnotation@@@ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1651 @LENGTH@ 79
---UPD NormalAnnotation@@@AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1731 @LENGTH@ 80


UPD ReturnStatement@@MethodInvocation:this.fallbackPageable.equals(pageable) @TO@ ConditionalExpression:fallbackPageable == null ? false : fallbackPageable.equals(pageable) @AT@ 4363 @LENGTH@ 46
---DEL MethodInvocation@@this.fallbackPageable.equals(pageable) @AT@ 4370 @LENGTH@ 38
------DEL FieldAccess@@this.fallbackPageable @AT@ 4370 @LENGTH@ 21
---------DEL ThisExpression@@this @AT@ 4370 @LENGTH@ 4
---------DEL SimpleName@@fallbackPageable @AT@ 4375 @LENGTH@ 16
---INS ConditionalExpression@@fallbackPageable == null ? false : fallbackPageable.equals(pageable) @TO@ ReturnStatement@@MethodInvocation:this.fallbackPageable.equals(pageable) @AT@ 4394 @LENGTH@ 68
------INS InfixExpression@@fallbackPageable == null @TO@ ConditionalExpression@@fallbackPageable == null ? false : fallbackPageable.equals(pageable) @AT@ 4394 @LENGTH@ 24
---------INS SimpleName@@fallbackPageable @TO@ InfixExpression@@fallbackPageable == null @AT@ 4394 @LENGTH@ 16
---------INS Operator@@== @TO@ InfixExpression@@fallbackPageable == null @AT@ 4410 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@fallbackPageable == null @AT@ 4414 @LENGTH@ 4
------INS BooleanLiteral@@false @TO@ ConditionalExpression@@fallbackPageable == null ? false : fallbackPageable.equals(pageable) @AT@ 4421 @LENGTH@ 5
------INS MethodInvocation@@fallbackPageable.equals(pageable) @TO@ ConditionalExpression@@fallbackPageable == null ? false : fallbackPageable.equals(pageable) @AT@ 4429 @LENGTH@ 33
---------MOV SimpleName@@MethodName:equals:[pageable] @TO@ MethodInvocation@@fallbackPageable.equals(pageable) @AT@ 4392 @LENGTH@ 16
---------INS SimpleName@@Name:fallbackPageable @TO@ MethodInvocation@@fallbackPageable.equals(pageable) @AT@ 4429 @LENGTH@ 16


UPD TypeDeclaration@@[@Configuration, @ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration"), public]MvelComponentAutoConfiguration,  @TO@ [@Configuration, @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration"), public]MvelComponentAutoConfiguration,  @AT@ 1438 @LENGTH@ 596
---UPD NormalAnnotation@@@ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1453 @LENGTH@ 79
---UPD NormalAnnotation@@@AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1533 @LENGTH@ 80


UPD TypeDeclaration@@[@Configuration, @ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration"), @EnableConfigurationProperties(GsonDataFormatConfiguration.class), public]GsonDataFormatAutoConfiguration,  @TO@ [@Configuration, @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration"), @EnableConfigurationProperties(GsonDataFormatConfiguration.class), public]GsonDataFormatAutoConfiguration,  @AT@ 1663 @LENGTH@ 1100
---UPD NormalAnnotation@@@ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1678 @LENGTH@ 79
---UPD NormalAnnotation@@@AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1758 @LENGTH@ 80


UPD TypeDeclaration@@[@ConfigurationProperties(prefix="camel.dataformat.json"), public]JacksonDataFormatConfiguration,  @TO@ [@ConfigurationProperties(prefix="camel.dataformat.json-jackson"), public]JacksonDataFormatConfiguration,  @AT@ 1157 @LENGTH@ 6763
---UPD NormalAnnotation@@@ConfigurationProperties(prefix="camel.dataformat.json") @TO@ @ConfigurationProperties(prefix="camel.dataformat.json-jackson") @AT@ 1157 @LENGTH@ 58


INS MethodDeclaration@@public, List<String>, MethodName:getCapabilityReferenceNames, CommandContext ctx, OperationRequestAddress address, String staticPart,  @TO@ TypeDeclaration@@[public]CapabilityReferenceCompleter, DefaultCompleter @AT@ 3153 @LENGTH@ 212
---INS Modifier@@public @TO@ MethodDeclaration@@public, List<String>, MethodName:getCapabilityReferenceNames, CommandContext ctx, OperationRequestAddress address, String staticPart,  @AT@ 3153 @LENGTH@ 6
---INS ParameterizedType@@List<String> @TO@ MethodDeclaration@@public, List<String>, MethodName:getCapabilityReferenceNames, CommandContext ctx, OperationRequestAddress address, String staticPart,  @AT@ 3160 @LENGTH@ 12
------INS SimpleType@@List @TO@ ParameterizedType@@List<String> @AT@ 3160 @LENGTH@ 4
------INS SimpleType@@String @TO@ ParameterizedType@@List<String> @AT@ 3165 @LENGTH@ 6
---INS SimpleName@@MethodName:getCapabilityReferenceNames @TO@ MethodDeclaration@@public, List<String>, MethodName:getCapabilityReferenceNames, CommandContext ctx, OperationRequestAddress address, String staticPart,  @AT@ 3173 @LENGTH@ 27
---INS SingleVariableDeclaration@@CommandContext ctx @TO@ MethodDeclaration@@public, List<String>, MethodName:getCapabilityReferenceNames, CommandContext ctx, OperationRequestAddress address, String staticPart,  @AT@ 3201 @LENGTH@ 18
------INS SimpleType@@CommandContext @TO@ SingleVariableDeclaration@@CommandContext ctx @AT@ 3201 @LENGTH@ 14
------INS SimpleName@@ctx @TO@ SingleVariableDeclaration@@CommandContext ctx @AT@ 3216 @LENGTH@ 3
---INS SingleVariableDeclaration@@OperationRequestAddress address @TO@ MethodDeclaration@@public, List<String>, MethodName:getCapabilityReferenceNames, CommandContext ctx, OperationRequestAddress address, String staticPart,  @AT@ 3233 @LENGTH@ 31
------INS SimpleType@@OperationRequestAddress @TO@ SingleVariableDeclaration@@OperationRequestAddress address @AT@ 3233 @LENGTH@ 23
------INS SimpleName@@address @TO@ SingleVariableDeclaration@@OperationRequestAddress address @AT@ 3257 @LENGTH@ 7
---INS SingleVariableDeclaration@@String staticPart @TO@ MethodDeclaration@@public, List<String>, MethodName:getCapabilityReferenceNames, CommandContext ctx, OperationRequestAddress address, String staticPart,  @AT@ 3278 @LENGTH@ 17
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String staticPart @AT@ 3278 @LENGTH@ 6
------INS SimpleName@@staticPart @TO@ SingleVariableDeclaration@@String staticPart @AT@ 3285 @LENGTH@ 10
---INS ReturnStatement@@MethodInvocation:getCapabilityNames(ctx,address,staticPart) @TO@ MethodDeclaration@@public, List<String>, MethodName:getCapabilityReferenceNames, CommandContext ctx, OperationRequestAddress address, String staticPart,  @AT@ 3307 @LENGTH@ 52
------INS MethodInvocation@@getCapabilityNames(ctx,address,staticPart) @TO@ ReturnStatement@@MethodInvocation:getCapabilityNames(ctx,address,staticPart) @AT@ 3314 @LENGTH@ 44
---------INS SimpleName@@MethodName:getCapabilityNames:[ctx, address, staticPart] @TO@ MethodInvocation@@getCapabilityNames(ctx,address,staticPart) @AT@ 3314 @LENGTH@ 44
------------INS SimpleName@@ctx @TO@ SimpleName@@MethodName:getCapabilityNames:[ctx, address, staticPart] @AT@ 3333 @LENGTH@ 3
------------INS SimpleName@@address @TO@ SimpleName@@MethodName:getCapabilityNames:[ctx, address, staticPart] @AT@ 3338 @LENGTH@ 7
------------INS SimpleName@@staticPart @TO@ SimpleName@@MethodName:getCapabilityNames:[ctx, address, staticPart] @AT@ 3347 @LENGTH@ 10


UPD IfStatement@@if (this.timeoutInProgress) {  logger.debug("Closing Neo4j OGM Session after async request timeout");  SessionFactoryUtils.closeSession();} @TO@ if (this.timeoutInProgress) {  logger.debug("Closing Neo4j OGM Session after async request timeout");} @AT@ 2963 @LENGTH@ 167
---UPD Block@@ThenBody:{  logger.debug("Closing Neo4j OGM Session after async request timeout");  SessionFactoryUtils.closeSession();} @TO@ ThenBody:{  logger.debug("Closing Neo4j OGM Session after async request timeout");} @AT@ 2991 @LENGTH@ 139
------DEL ExpressionStatement@@MethodInvocation:SessionFactoryUtils.closeSession() @AT@ 3091 @LENGTH@ 35
---------DEL MethodInvocation@@SessionFactoryUtils.closeSession() @AT@ 3091 @LENGTH@ 34
------------DEL SimpleName@@Name:SessionFactoryUtils @AT@ 3091 @LENGTH@ 19
------------DEL SimpleName@@MethodName:closeSession:[] @AT@ 3111 @LENGTH@ 14


UPD VariableDeclarationStatement@@JsonNode treeNode=(JsonNode)jp.readValueAs(JsonNode.class).get("places"); @TO@ JsonNode treeNode=jp.readValueAs(JsonNode.class).get("places"); @AT@ 2057 @LENGTH@ 76
---UPD VariableDeclarationFragment@@treeNode=(JsonNode)jp.readValueAs(JsonNode.class).get("places") @TO@ treeNode=jp.readValueAs(JsonNode.class).get("places") @AT@ 2066 @LENGTH@ 66
------DEL CastExpression@@(JsonNode)jp.readValueAs(JsonNode.class).get("places") @AT@ 2077 @LENGTH@ 55
---------DEL SimpleType@@JsonNode @AT@ 2078 @LENGTH@ 8
------MOV MethodInvocation@@jp.readValueAs(JsonNode.class).get("places") @TO@ VariableDeclarationFragment@@treeNode=(JsonNode)jp.readValueAs(JsonNode.class).get("places") @AT@ 2088 @LENGTH@ 44


UPD TypeDeclaration@@[@Configuration, @ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration"), public]LanguageComponentAutoConfiguration,  @TO@ [@Configuration, @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration"), public]LanguageComponentAutoConfiguration,  @AT@ 1450 @LENGTH@ 625
---UPD NormalAnnotation@@@ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1465 @LENGTH@ 79
---UPD NormalAnnotation@@@AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1545 @LENGTH@ 80


UPD TypeDeclaration@@[@Configuration, @ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration"), @EnableConfigurationProperties(VelocityComponentConfiguration.class), public]VelocityComponentAutoConfiguration,  @TO@ [@Configuration, @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration"), @EnableConfigurationProperties(VelocityComponentConfiguration.class), public]VelocityComponentAutoConfiguration,  @AT@ 1631 @LENGTH@ 2088
---UPD NormalAnnotation@@@ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1646 @LENGTH@ 79
---UPD NormalAnnotation@@@AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1726 @LENGTH@ 80


INS MethodDeclaration@@void, MethodName:methodWithOptional, Optional<String> optional,  @TO@ TypeDeclaration@@[static]SampleDao,  @AT@ 6514 @LENGTH@ 46
---INS PrimitiveType@@void @TO@ MethodDeclaration@@void, MethodName:methodWithOptional, Optional<String> optional,  @AT@ 6509 @LENGTH@ 4
---INS SimpleName@@MethodName:methodWithOptional @TO@ MethodDeclaration@@void, MethodName:methodWithOptional, Optional<String> optional,  @AT@ 6514 @LENGTH@ 18
---INS SingleVariableDeclaration@@Optional<String> optional @TO@ MethodDeclaration@@void, MethodName:methodWithOptional, Optional<String> optional,  @AT@ 6533 @LENGTH@ 25
------INS ParameterizedType@@Optional<String> @TO@ SingleVariableDeclaration@@Optional<String> optional @AT@ 6533 @LENGTH@ 16
---------INS SimpleType@@Optional @TO@ ParameterizedType@@Optional<String> @AT@ 6533 @LENGTH@ 8
---------INS SimpleType@@String @TO@ ParameterizedType@@Optional<String> @AT@ 6542 @LENGTH@ 6
------INS SimpleName@@optional @TO@ SingleVariableDeclaration@@Optional<String> optional @AT@ 6550 @LENGTH@ 8


INS MethodDeclaration@@public, static, boolean, MethodName:mkdir, FileSystem fs, Path f, Configuration conf, IOException,  @TO@ TypeDeclaration@@[public, final]FileUtils,  @AT@ 18200 @LENGTH@ 240
---INS Modifier@@public @TO@ MethodDeclaration@@public, static, boolean, MethodName:mkdir, FileSystem fs, Path f, Configuration conf, IOException,  @AT@ 18200 @LENGTH@ 6
---INS Modifier@@static @TO@ MethodDeclaration@@public, static, boolean, MethodName:mkdir, FileSystem fs, Path f, Configuration conf, IOException,  @AT@ 18207 @LENGTH@ 6
---INS PrimitiveType@@boolean @TO@ MethodDeclaration@@public, static, boolean, MethodName:mkdir, FileSystem fs, Path f, Configuration conf, IOException,  @AT@ 18214 @LENGTH@ 7
---INS SimpleName@@MethodName:mkdir @TO@ MethodDeclaration@@public, static, boolean, MethodName:mkdir, FileSystem fs, Path f, Configuration conf, IOException,  @AT@ 18222 @LENGTH@ 5
---INS SingleVariableDeclaration@@FileSystem fs @TO@ MethodDeclaration@@public, static, boolean, MethodName:mkdir, FileSystem fs, Path f, Configuration conf, IOException,  @AT@ 18228 @LENGTH@ 13
------INS SimpleType@@FileSystem @TO@ SingleVariableDeclaration@@FileSystem fs @AT@ 18228 @LENGTH@ 10
------INS SimpleName@@fs @TO@ SingleVariableDeclaration@@FileSystem fs @AT@ 18239 @LENGTH@ 2
---INS SingleVariableDeclaration@@Path f @TO@ MethodDeclaration@@public, static, boolean, MethodName:mkdir, FileSystem fs, Path f, Configuration conf, IOException,  @AT@ 18243 @LENGTH@ 6
------INS SimpleType@@Path @TO@ SingleVariableDeclaration@@Path f @AT@ 18243 @LENGTH@ 4
------INS SimpleName@@f @TO@ SingleVariableDeclaration@@Path f @AT@ 18248 @LENGTH@ 1
---INS SingleVariableDeclaration@@Configuration conf @TO@ MethodDeclaration@@public, static, boolean, MethodName:mkdir, FileSystem fs, Path f, Configuration conf, IOException,  @AT@ 18251 @LENGTH@ 18
------INS SimpleType@@Configuration @TO@ SingleVariableDeclaration@@Configuration conf @AT@ 18251 @LENGTH@ 13
------INS SimpleName@@conf @TO@ SingleVariableDeclaration@@Configuration conf @AT@ 18265 @LENGTH@ 4
---INS SimpleType@@IOException @TO@ MethodDeclaration@@public, static, boolean, MethodName:mkdir, FileSystem fs, Path f, Configuration conf, IOException,  @AT@ 18278 @LENGTH@ 11
---INS VariableDeclarationStatement@@boolean inheritPerms=HiveConf.getBoolVar(conf,ConfVars.HIVE_WAREHOUSE_SUBDIR_INHERIT_PERMS); @TO@ MethodDeclaration@@public, static, boolean, MethodName:mkdir, FileSystem fs, Path f, Configuration conf, IOException,  @AT@ 18296 @LENGTH@ 95
------INS PrimitiveType@@boolean @TO@ VariableDeclarationStatement@@boolean inheritPerms=HiveConf.getBoolVar(conf,ConfVars.HIVE_WAREHOUSE_SUBDIR_INHERIT_PERMS); @AT@ 18296 @LENGTH@ 7
------INS VariableDeclarationFragment@@inheritPerms=HiveConf.getBoolVar(conf,ConfVars.HIVE_WAREHOUSE_SUBDIR_INHERIT_PERMS) @TO@ VariableDeclarationStatement@@boolean inheritPerms=HiveConf.getBoolVar(conf,ConfVars.HIVE_WAREHOUSE_SUBDIR_INHERIT_PERMS); @AT@ 18304 @LENGTH@ 86
---------INS SimpleName@@inheritPerms @TO@ VariableDeclarationFragment@@inheritPerms=HiveConf.getBoolVar(conf,ConfVars.HIVE_WAREHOUSE_SUBDIR_INHERIT_PERMS) @AT@ 18304 @LENGTH@ 12
---------INS MethodInvocation@@HiveConf.getBoolVar(conf,ConfVars.HIVE_WAREHOUSE_SUBDIR_INHERIT_PERMS) @TO@ VariableDeclarationFragment@@inheritPerms=HiveConf.getBoolVar(conf,ConfVars.HIVE_WAREHOUSE_SUBDIR_INHERIT_PERMS) @AT@ 18319 @LENGTH@ 71
------------INS SimpleName@@Name:HiveConf @TO@ MethodInvocation@@HiveConf.getBoolVar(conf,ConfVars.HIVE_WAREHOUSE_SUBDIR_INHERIT_PERMS) @AT@ 18319 @LENGTH@ 8
------------INS SimpleName@@MethodName:getBoolVar:[conf, ConfVars.HIVE_WAREHOUSE_SUBDIR_INHERIT_PERMS] @TO@ MethodInvocation@@HiveConf.getBoolVar(conf,ConfVars.HIVE_WAREHOUSE_SUBDIR_INHERIT_PERMS) @AT@ 18328 @LENGTH@ 62
---------------INS SimpleName@@conf @TO@ SimpleName@@MethodName:getBoolVar:[conf, ConfVars.HIVE_WAREHOUSE_SUBDIR_INHERIT_PERMS] @AT@ 18339 @LENGTH@ 4
---------------INS QualifiedName@@ConfVars.HIVE_WAREHOUSE_SUBDIR_INHERIT_PERMS @TO@ SimpleName@@MethodName:getBoolVar:[conf, ConfVars.HIVE_WAREHOUSE_SUBDIR_INHERIT_PERMS] @AT@ 18345 @LENGTH@ 44
------------------INS SimpleName@@ConfVars @TO@ QualifiedName@@ConfVars.HIVE_WAREHOUSE_SUBDIR_INHERIT_PERMS @AT@ 18345 @LENGTH@ 8
------------------INS SimpleName@@HIVE_WAREHOUSE_SUBDIR_INHERIT_PERMS @TO@ QualifiedName@@ConfVars.HIVE_WAREHOUSE_SUBDIR_INHERIT_PERMS @AT@ 18354 @LENGTH@ 35
---INS ReturnStatement@@MethodInvocation:mkdir(fs,f,inheritPerms,conf) @TO@ MethodDeclaration@@public, static, boolean, MethodName:mkdir, FileSystem fs, Path f, Configuration conf, IOException,  @AT@ 18396 @LENGTH@ 40
------INS MethodInvocation@@mkdir(fs,f,inheritPerms,conf) @TO@ ReturnStatement@@MethodInvocation:mkdir(fs,f,inheritPerms,conf) @AT@ 18403 @LENGTH@ 32
---------INS SimpleName@@MethodName:mkdir:[fs, f, inheritPerms, conf] @TO@ MethodInvocation@@mkdir(fs,f,inheritPerms,conf) @AT@ 18403 @LENGTH@ 32
------------INS SimpleName@@fs @TO@ SimpleName@@MethodName:mkdir:[fs, f, inheritPerms, conf] @AT@ 18409 @LENGTH@ 2
------------INS SimpleName@@f @TO@ SimpleName@@MethodName:mkdir:[fs, f, inheritPerms, conf] @AT@ 18413 @LENGTH@ 1
------------INS SimpleName@@inheritPerms @TO@ SimpleName@@MethodName:mkdir:[fs, f, inheritPerms, conf] @AT@ 18416 @LENGTH@ 12
------------INS SimpleName@@conf @TO@ SimpleName@@MethodName:mkdir:[fs, f, inheritPerms, conf] @AT@ 18430 @LENGTH@ 4


UPD TypeDeclaration@@[@Configuration, @ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration"), @EnableConfigurationProperties(GuavaEventBusComponentConfiguration.class), public]GuavaEventBusComponentAutoConfiguration,  @TO@ [@Configuration, @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration"), @EnableConfigurationProperties(GuavaEventBusComponentConfiguration.class), public]GuavaEventBusComponentAutoConfiguration,  @AT@ 1648 @LENGTH@ 2134
---UPD NormalAnnotation@@@ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1663 @LENGTH@ 79
---UPD NormalAnnotation@@@AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1743 @LENGTH@ 80


UPD IfStatement@@if (clientConfig != null) {  DefaultAsyncHttpClientConfig.Builder builder=AhcComponent.cloneConfig(clientConfig);  if (sslContextParameters != null) {    SSLContext sslContext=sslContextParameters.createSSLContext(getCamelContext());    JdkSslContext ssl=new JdkSslContext(sslContext,true,ClientAuth.NONE);    builder.setSslContext(ssl);  }  config=builder.build();} else {  if (sslContextParameters != null) {    DefaultAsyncHttpClientConfig.Builder builder=new DefaultAsyncHttpClientConfig.Builder();    SSLContext sslContext=sslContextParameters.createSSLContext(getCamelContext());    JdkSslContext ssl=new JdkSslContext(sslContext,true,ClientAuth.NONE);    builder.setSslContext(ssl);    config=builder.build();  }} @TO@ if (clientConfig != null) {  DefaultAsyncHttpClientConfig.Builder builder=AhcComponent.cloneConfig(clientConfig);  if (sslContextParameters != null) {    SSLContext sslContext=sslContextParameters.createSSLContext(getCamelContext());    JdkSslContext ssl=new JdkSslContext(sslContext,true,ClientAuth.REQUIRE);    builder.setSslContext(ssl);  }  config=builder.build();} else {  if (sslContextParameters != null) {    DefaultAsyncHttpClientConfig.Builder builder=new DefaultAsyncHttpClientConfig.Builder();    SSLContext sslContext=sslContextParameters.createSSLContext(getCamelContext());    JdkSslContext ssl=new JdkSslContext(sslContext,true,ClientAuth.REQUIRE);    builder.setSslContext(ssl);    config=builder.build();  }} @AT@ 9100 @LENGTH@ 1026
---UPD Block@@ThenBody:{  DefaultAsyncHttpClientConfig.Builder builder=AhcComponent.cloneConfig(clientConfig);  if (sslContextParameters != null) {    SSLContext sslContext=sslContextParameters.createSSLContext(getCamelContext());    JdkSslContext ssl=new JdkSslContext(sslContext,true,ClientAuth.NONE);    builder.setSslContext(ssl);  }  config=builder.build();} @TO@ ThenBody:{  DefaultAsyncHttpClientConfig.Builder builder=AhcComponent.cloneConfig(clientConfig);  if (sslContextParameters != null) {    SSLContext sslContext=sslContextParameters.createSSLContext(getCamelContext());    JdkSslContext ssl=new JdkSslContext(sslContext,true,ClientAuth.REQUIRE);    builder.setSslContext(ssl);  }  config=builder.build();} @AT@ 9126 @LENGTH@ 508
------UPD IfStatement@@if (sslContextParameters != null) {  SSLContext sslContext=sslContextParameters.createSSLContext(getCamelContext());  JdkSslContext ssl=new JdkSslContext(sslContext,true,ClientAuth.NONE);  builder.setSslContext(ssl);} @TO@ if (sslContextParameters != null) {  SSLContext sslContext=sslContextParameters.createSSLContext(getCamelContext());  JdkSslContext ssl=new JdkSslContext(sslContext,true,ClientAuth.REQUIRE);  builder.setSslContext(ssl);} @AT@ 9264 @LENGTH@ 297
---------UPD Block@@ThenBody:{  SSLContext sslContext=sslContextParameters.createSSLContext(getCamelContext());  JdkSslContext ssl=new JdkSslContext(sslContext,true,ClientAuth.NONE);  builder.setSslContext(ssl);} @TO@ ThenBody:{  SSLContext sslContext=sslContextParameters.createSSLContext(getCamelContext());  JdkSslContext ssl=new JdkSslContext(sslContext,true,ClientAuth.REQUIRE);  builder.setSslContext(ssl);} @AT@ 9298 @LENGTH@ 263
------------UPD VariableDeclarationStatement@@JdkSslContext ssl=new JdkSslContext(sslContext,true,ClientAuth.NONE); @TO@ JdkSslContext ssl=new JdkSslContext(sslContext,true,ClientAuth.REQUIRE); @AT@ 9422 @LENGTH@ 73
---------------UPD VariableDeclarationFragment@@ssl=new JdkSslContext(sslContext,true,ClientAuth.NONE) @TO@ ssl=new JdkSslContext(sslContext,true,ClientAuth.REQUIRE) @AT@ 9436 @LENGTH@ 58
------------------UPD ClassInstanceCreation@@JdkSslContext[sslContext, true, ClientAuth.NONE] @TO@ JdkSslContext[sslContext, true, ClientAuth.REQUIRE] @AT@ 9442 @LENGTH@ 52
---------------------UPD QualifiedName@@ClientAuth.NONE @TO@ ClientAuth.REQUIRE @AT@ 9478 @LENGTH@ 15
------------------------UPD SimpleName@@NONE @TO@ REQUIRE @AT@ 9489 @LENGTH@ 4
---UPD Block@@ElseBody:{  if (sslContextParameters != null) {    DefaultAsyncHttpClientConfig.Builder builder=new DefaultAsyncHttpClientConfig.Builder();    SSLContext sslContext=sslContextParameters.createSSLContext(getCamelContext());    JdkSslContext ssl=new JdkSslContext(sslContext,true,ClientAuth.NONE);    builder.setSslContext(ssl);    config=builder.build();  }} @TO@ ElseBody:{  if (sslContextParameters != null) {    DefaultAsyncHttpClientConfig.Builder builder=new DefaultAsyncHttpClientConfig.Builder();    SSLContext sslContext=sslContextParameters.createSSLContext(getCamelContext());    JdkSslContext ssl=new JdkSslContext(sslContext,true,ClientAuth.REQUIRE);    builder.setSslContext(ssl);    config=builder.build();  }} @AT@ 9640 @LENGTH@ 486
------UPD IfStatement@@if (sslContextParameters != null) {  DefaultAsyncHttpClientConfig.Builder builder=new DefaultAsyncHttpClientConfig.Builder();  SSLContext sslContext=sslContextParameters.createSSLContext(getCamelContext());  JdkSslContext ssl=new JdkSslContext(sslContext,true,ClientAuth.NONE);  builder.setSslContext(ssl);  config=builder.build();} @TO@ if (sslContextParameters != null) {  DefaultAsyncHttpClientConfig.Builder builder=new DefaultAsyncHttpClientConfig.Builder();  SSLContext sslContext=sslContextParameters.createSSLContext(getCamelContext());  JdkSslContext ssl=new JdkSslContext(sslContext,true,ClientAuth.REQUIRE);  builder.setSslContext(ssl);  config=builder.build();} @AT@ 9658 @LENGTH@ 454
---------UPD Block@@ThenBody:{  DefaultAsyncHttpClientConfig.Builder builder=new DefaultAsyncHttpClientConfig.Builder();  SSLContext sslContext=sslContextParameters.createSSLContext(getCamelContext());  JdkSslContext ssl=new JdkSslContext(sslContext,true,ClientAuth.NONE);  builder.setSslContext(ssl);  config=builder.build();} @TO@ ThenBody:{  DefaultAsyncHttpClientConfig.Builder builder=new DefaultAsyncHttpClientConfig.Builder();  SSLContext sslContext=sslContextParameters.createSSLContext(getCamelContext());  JdkSslContext ssl=new JdkSslContext(sslContext,true,ClientAuth.REQUIRE);  builder.setSslContext(ssl);  config=builder.build();} @AT@ 9692 @LENGTH@ 420
------------UPD VariableDeclarationStatement@@JdkSslContext ssl=new JdkSslContext(sslContext,true,ClientAuth.NONE); @TO@ JdkSslContext ssl=new JdkSslContext(sslContext,true,ClientAuth.REQUIRE); @AT@ 9927 @LENGTH@ 73
---------------UPD VariableDeclarationFragment@@ssl=new JdkSslContext(sslContext,true,ClientAuth.NONE) @TO@ ssl=new JdkSslContext(sslContext,true,ClientAuth.REQUIRE) @AT@ 9941 @LENGTH@ 58
------------------UPD ClassInstanceCreation@@JdkSslContext[sslContext, true, ClientAuth.NONE] @TO@ JdkSslContext[sslContext, true, ClientAuth.REQUIRE] @AT@ 9947 @LENGTH@ 52
---------------------UPD QualifiedName@@ClientAuth.NONE @TO@ ClientAuth.REQUIRE @AT@ 9983 @LENGTH@ 15
------------------------UPD SimpleName@@NONE @TO@ REQUIRE @AT@ 9994 @LENGTH@ 4


UPD ForStatement@@for (int i=0; i < length; i++) {  PartitionDesc part=HiveFileFormatUtils.getPartitionDescFromPathRecursively(pathToPartitionInfo,paths[i + start],IOPrepareCache.get().allocatePartitionDescMap());  Class<? extends InputFormat> inputFormatClass=part.getInputFileFormatClass();  InputFormat<WritableComparable,Writable> inputFormat=getInputFormatFromCache(inputFormatClass,conf);  if (inputFormat instanceof AvoidSplitCombination && ((AvoidSplitCombination)inputFormat).shouldSkipCombine(paths[i + start],conf)) {    if (LOG.isDebugEnabled()) {      LOG.debug("The path [" + paths[i + start] + "] is being parked for HiveInputFormat.getSplits");    }    nonCombinablePathIndices.add(i + start);  }} @TO@ for (int i=0; i < length; i++) {  PartitionDesc part=HiveFileFormatUtils.getPartitionDescFromPathRecursively(pathToPartitionInfo,paths[i + start],IOPrepareCache.get().allocatePartitionDescMap());  Class<? extends InputFormat> inputFormatClass=part.getInputFileFormatClass();  InputFormat<WritableComparable,Writable> inputFormat=getInputFormatFromCache(inputFormatClass,conf);  boolean isAvoidSplitCombine=inputFormat instanceof AvoidSplitCombination && ((AvoidSplitCombination)inputFormat).shouldSkipCombine(paths[i + start],conf);  boolean isMmTable=MetaStoreUtils.isMmTable(part.getTableDesc().getProperties());  if (isAvoidSplitCombine || isMmTable) {    if (LOG.isDebugEnabled()) {      LOG.debug("The path [" + paths[i + start] + "] is being parked for HiveInputFormat.getSplits");    }    nonCombinablePathIndices.add(i + start);  }} @AT@ 3904 @LENGTH@ 933
---UPD IfStatement@@if (inputFormat instanceof AvoidSplitCombination && ((AvoidSplitCombination)inputFormat).shouldSkipCombine(paths[i + start],conf)) {  if (LOG.isDebugEnabled()) {    LOG.debug("The path [" + paths[i + start] + "] is being parked for HiveInputFormat.getSplits");  }  nonCombinablePathIndices.add(i + start);} @TO@ if (isAvoidSplitCombine || isMmTable) {  if (LOG.isDebugEnabled()) {    LOG.debug("The path [" + paths[i + start] + "] is being parked for HiveInputFormat.getSplits");  }  nonCombinablePathIndices.add(i + start);} @AT@ 4448 @LENGTH@ 381
------INS InfixExpression@@isAvoidSplitCombine || isMmTable @TO@ IfStatement@@if (inputFormat instanceof AvoidSplitCombination && ((AvoidSplitCombination)inputFormat).shouldSkipCombine(paths[i + start],conf)) {  if (LOG.isDebugEnabled()) {    LOG.debug("The path [" + paths[i + start] + "] is being parked for HiveInputFormat.getSplits");  }  nonCombinablePathIndices.add(i + start);} @AT@ 4778 @LENGTH@ 32
---------INS SimpleName@@isAvoidSplitCombine @TO@ InfixExpression@@isAvoidSplitCombine || isMmTable @AT@ 4778 @LENGTH@ 19
---------INS Operator@@|| @TO@ InfixExpression@@isAvoidSplitCombine || isMmTable @AT@ 4797 @LENGTH@ 2
---------INS SimpleName@@isMmTable @TO@ InfixExpression@@isAvoidSplitCombine || isMmTable @AT@ 4801 @LENGTH@ 9
---INS VariableDeclarationStatement@@boolean isAvoidSplitCombine=inputFormat instanceof AvoidSplitCombination && ((AvoidSplitCombination)inputFormat).shouldSkipCombine(paths[i + start],conf); @TO@ ForStatement@@for (int i=0; i < length; i++) {  PartitionDesc part=HiveFileFormatUtils.getPartitionDescFromPathRecursively(pathToPartitionInfo,paths[i + start],IOPrepareCache.get().allocatePartitionDescMap());  Class<? extends InputFormat> inputFormatClass=part.getInputFileFormatClass();  InputFormat<WritableComparable,Writable> inputFormat=getInputFormatFromCache(inputFormatClass,conf);  if (inputFormat instanceof AvoidSplitCombination && ((AvoidSplitCombination)inputFormat).shouldSkipCombine(paths[i + start],conf)) {    if (LOG.isDebugEnabled()) {      LOG.debug("The path [" + paths[i + start] + "] is being parked for HiveInputFormat.getSplits");    }    nonCombinablePathIndices.add(i + start);  }} @AT@ 4504 @LENGTH@ 170
------INS PrimitiveType@@boolean @TO@ VariableDeclarationStatement@@boolean isAvoidSplitCombine=inputFormat instanceof AvoidSplitCombination && ((AvoidSplitCombination)inputFormat).shouldSkipCombine(paths[i + start],conf); @AT@ 4504 @LENGTH@ 7
------INS VariableDeclarationFragment@@isAvoidSplitCombine=inputFormat instanceof AvoidSplitCombination && ((AvoidSplitCombination)inputFormat).shouldSkipCombine(paths[i + start],conf) @TO@ VariableDeclarationStatement@@boolean isAvoidSplitCombine=inputFormat instanceof AvoidSplitCombination && ((AvoidSplitCombination)inputFormat).shouldSkipCombine(paths[i + start],conf); @AT@ 4512 @LENGTH@ 161
---------MOV InfixExpression@@inputFormat instanceof AvoidSplitCombination && ((AvoidSplitCombination)inputFormat).shouldSkipCombine(paths[i + start],conf) @TO@ VariableDeclarationFragment@@isAvoidSplitCombine=inputFormat instanceof AvoidSplitCombination && ((AvoidSplitCombination)inputFormat).shouldSkipCombine(paths[i + start],conf) @AT@ 4452 @LENGTH@ 139
---------INS SimpleName@@isAvoidSplitCombine @TO@ VariableDeclarationFragment@@isAvoidSplitCombine=inputFormat instanceof AvoidSplitCombination && ((AvoidSplitCombination)inputFormat).shouldSkipCombine(paths[i + start],conf) @AT@ 4512 @LENGTH@ 19
---INS VariableDeclarationStatement@@boolean isMmTable=MetaStoreUtils.isMmTable(part.getTableDesc().getProperties()); @TO@ ForStatement@@for (int i=0; i < length; i++) {  PartitionDesc part=HiveFileFormatUtils.getPartitionDescFromPathRecursively(pathToPartitionInfo,paths[i + start],IOPrepareCache.get().allocatePartitionDescMap());  Class<? extends InputFormat> inputFormatClass=part.getInputFileFormatClass();  InputFormat<WritableComparable,Writable> inputFormat=getInputFormatFromCache(inputFormatClass,conf);  if (inputFormat instanceof AvoidSplitCombination && ((AvoidSplitCombination)inputFormat).shouldSkipCombine(paths[i + start],conf)) {    if (LOG.isDebugEnabled()) {      LOG.debug("The path [" + paths[i + start] + "] is being parked for HiveInputFormat.getSplits");    }    nonCombinablePathIndices.add(i + start);  }} @AT@ 4683 @LENGTH@ 82
------INS PrimitiveType@@boolean @TO@ VariableDeclarationStatement@@boolean isMmTable=MetaStoreUtils.isMmTable(part.getTableDesc().getProperties()); @AT@ 4683 @LENGTH@ 7
------INS VariableDeclarationFragment@@isMmTable=MetaStoreUtils.isMmTable(part.getTableDesc().getProperties()) @TO@ VariableDeclarationStatement@@boolean isMmTable=MetaStoreUtils.isMmTable(part.getTableDesc().getProperties()); @AT@ 4691 @LENGTH@ 73
---------INS SimpleName@@isMmTable @TO@ VariableDeclarationFragment@@isMmTable=MetaStoreUtils.isMmTable(part.getTableDesc().getProperties()) @AT@ 4691 @LENGTH@ 9
---------INS MethodInvocation@@MetaStoreUtils.isMmTable(part.getTableDesc().getProperties()) @TO@ VariableDeclarationFragment@@isMmTable=MetaStoreUtils.isMmTable(part.getTableDesc().getProperties()) @AT@ 4703 @LENGTH@ 61
------------INS SimpleName@@Name:MetaStoreUtils @TO@ MethodInvocation@@MetaStoreUtils.isMmTable(part.getTableDesc().getProperties()) @AT@ 4703 @LENGTH@ 14
------------INS SimpleName@@MethodName:isMmTable:[part.getTableDesc().getProperties()] @TO@ MethodInvocation@@MetaStoreUtils.isMmTable(part.getTableDesc().getProperties()) @AT@ 4718 @LENGTH@ 46
---------------INS MethodInvocation@@part.getTableDesc().getProperties() @TO@ SimpleName@@MethodName:isMmTable:[part.getTableDesc().getProperties()] @AT@ 4728 @LENGTH@ 35
------------------INS MethodInvocation@@MethodName:getTableDesc:[] @TO@ MethodInvocation@@part.getTableDesc().getProperties() @AT@ 4728 @LENGTH@ 19
------------------INS SimpleName@@Name:part @TO@ MethodInvocation@@part.getTableDesc().getProperties() @AT@ 4728 @LENGTH@ 4
------------------INS SimpleName@@MethodName:getProperties:[] @TO@ MethodInvocation@@part.getTableDesc().getProperties() @AT@ 4748 @LENGTH@ 15


INS MethodDeclaration@@void, MethodName:addField, FieldMetadata field, boolean evict,  @TO@ TypeDeclaration@@[public]TypeManagementService,  @AT@ 1314 @LENGTH@ 45
---INS PrimitiveType@@void @TO@ MethodDeclaration@@void, MethodName:addField, FieldMetadata field, boolean evict,  @AT@ 1309 @LENGTH@ 4
---INS SimpleName@@MethodName:addField @TO@ MethodDeclaration@@void, MethodName:addField, FieldMetadata field, boolean evict,  @AT@ 1314 @LENGTH@ 8
---INS SingleVariableDeclaration@@FieldMetadata field @TO@ MethodDeclaration@@void, MethodName:addField, FieldMetadata field, boolean evict,  @AT@ 1323 @LENGTH@ 19
------INS SimpleType@@FieldMetadata @TO@ SingleVariableDeclaration@@FieldMetadata field @AT@ 1323 @LENGTH@ 13
------INS SimpleName@@field @TO@ SingleVariableDeclaration@@FieldMetadata field @AT@ 1337 @LENGTH@ 5
---INS SingleVariableDeclaration@@boolean evict @TO@ MethodDeclaration@@void, MethodName:addField, FieldMetadata field, boolean evict,  @AT@ 1344 @LENGTH@ 13
------INS PrimitiveType@@boolean @TO@ SingleVariableDeclaration@@boolean evict @AT@ 1344 @LENGTH@ 7
------INS SimpleName@@evict @TO@ SingleVariableDeclaration@@boolean evict @AT@ 1352 @LENGTH@ 5


UPD ExpressionStatement@@MethodInvocation:log.debug("Limiting to maximum messages to poll " + maxMessagesPerPoll + " as there was more messages in this poll.") @TO@ MethodInvocation:log.debug("Maximum messages to poll is {} and there were exactly {} messages in this poll.",maxMessagesPerPoll,total) @AT@ 8784 @LENGTH@ 118
---UPD MethodInvocation@@log.debug("Limiting to maximum messages to poll " + maxMessagesPerPoll + " as there was more messages in this poll.") @TO@ log.debug("Maximum messages to poll is {} and there were exactly {} messages in this poll.",maxMessagesPerPoll,total) @AT@ 8784 @LENGTH@ 117
------UPD SimpleName@@MethodName:debug:["Limiting to maximum messages to poll " + maxMessagesPerPoll + " as there was more messages in this poll."] @TO@ MethodName:debug:["Maximum messages to poll is {} and there were exactly {} messages in this poll.", maxMessagesPerPoll, total] @AT@ 8788 @LENGTH@ 113
---------INS StringLiteral@@"Maximum messages to poll is {} and there were exactly {} messages in this poll." @TO@ SimpleName@@MethodName:debug:["Limiting to maximum messages to poll " + maxMessagesPerPoll + " as there was more messages in this poll."] @AT@ 8767 @LENGTH@ 81
---------DEL InfixExpression@@"Limiting to maximum messages to poll " + maxMessagesPerPoll + " as there was more messages in this poll." @AT@ 8794 @LENGTH@ 106
------------DEL StringLiteral@@"Limiting to maximum messages to poll " @AT@ 8794 @LENGTH@ 39
------------DEL Operator@@+ @AT@ 8833 @LENGTH@ 1
------------DEL SimpleName@@maxMessagesPerPoll @AT@ 8836 @LENGTH@ 18
------------DEL StringLiteral@@" as there was more messages in this poll." @AT@ 8857 @LENGTH@ 43
---------INS SimpleName@@maxMessagesPerPoll @TO@ SimpleName@@MethodName:debug:["Limiting to maximum messages to poll " + maxMessagesPerPoll + " as there was more messages in this poll."] @AT@ 8850 @LENGTH@ 18
---------INS SimpleName@@total @TO@ SimpleName@@MethodName:debug:["Limiting to maximum messages to poll " + maxMessagesPerPoll + " as there was more messages in this poll."] @AT@ 8870 @LENGTH@ 5


UPD ExpressionStatement@@MethodInvocation:assertThat(AuthorityUtils.authorityListToSet(token.getAuthorities()).contains("ROLE_TWO")) @TO@ MethodInvocation:assertThat(AuthorityUtils.authorityListToSet(token.getAuthorities())).contains("ROLE_TWO") @AT@ 2707 @LENGTH@ 96
---UPD MethodInvocation@@assertThat(AuthorityUtils.authorityListToSet(token.getAuthorities()).contains("ROLE_TWO")) @TO@ assertThat(AuthorityUtils.authorityListToSet(token.getAuthorities())).contains("ROLE_TWO") @AT@ 2707 @LENGTH@ 95
------INS MethodInvocation@@MethodName:assertThat:[AuthorityUtils.authorityListToSet(token.getAuthorities())] @TO@ MethodInvocation@@assertThat(AuthorityUtils.authorityListToSet(token.getAuthorities()).contains("ROLE_TWO")) @AT@ 2702 @LENGTH@ 69
---------INS MethodInvocation@@AuthorityUtils.authorityListToSet(token.getAuthorities()) @TO@ MethodInvocation@@MethodName:assertThat:[AuthorityUtils.authorityListToSet(token.getAuthorities())] @AT@ 2713 @LENGTH@ 57
------------MOV SimpleName@@Name:AuthorityUtils @TO@ MethodInvocation@@AuthorityUtils.authorityListToSet(token.getAuthorities()) @AT@ 2718 @LENGTH@ 14
------------INS SimpleName@@MethodName:authorityListToSet:[token.getAuthorities()] @TO@ MethodInvocation@@AuthorityUtils.authorityListToSet(token.getAuthorities()) @AT@ 2728 @LENGTH@ 42
---------------INS MethodInvocation@@token.getAuthorities() @TO@ SimpleName@@MethodName:authorityListToSet:[token.getAuthorities()] @AT@ 2747 @LENGTH@ 22
------------------MOV SimpleName@@Name:token @TO@ MethodInvocation@@token.getAuthorities() @AT@ 2752 @LENGTH@ 5
------------------MOV SimpleName@@MethodName:getAuthorities:[] @TO@ MethodInvocation@@token.getAuthorities() @AT@ 2758 @LENGTH@ 16
------DEL SimpleName@@MethodName:assertThat:[AuthorityUtils.authorityListToSet(token.getAuthorities()).contains("ROLE_TWO")] @AT@ 2707 @LENGTH@ 95
---------DEL MethodInvocation@@AuthorityUtils.authorityListToSet(token.getAuthorities()).contains("ROLE_TWO") @AT@ 2718 @LENGTH@ 83
------------DEL MethodInvocation@@MethodName:authorityListToSet:[token.getAuthorities()] @AT@ 2718 @LENGTH@ 57
---------------DEL MethodInvocation@@token.getAuthorities() @AT@ 2752 @LENGTH@ 22
------MOV SimpleName@@MethodName:contains:["ROLE_TWO"] @TO@ MethodInvocation@@assertThat(AuthorityUtils.authorityListToSet(token.getAuthorities()).contains("ROLE_TWO")) @AT@ 2776 @LENGTH@ 25


UPD TypeDeclaration@@[@Configuration, @ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration"), public]FtpsComponentAutoConfiguration,  @TO@ [@Configuration, @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration"), public]FtpsComponentAutoConfiguration,  @AT@ 1452 @LENGTH@ 596
---UPD NormalAnnotation@@@ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1467 @LENGTH@ 79
---UPD NormalAnnotation@@@AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1547 @LENGTH@ 80


UPD TypeDeclaration@@[@Configuration, @ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration"), public]ClassComponentAutoConfiguration,  @TO@ [@Configuration, @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration"), public]ClassComponentAutoConfiguration,  @AT@ 1449 @LENGTH@ 603
---UPD NormalAnnotation@@@ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1464 @LENGTH@ 79
---UPD NormalAnnotation@@@AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1544 @LENGTH@ 80


UPD TypeDeclaration@@[@Configuration, @ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration"), @EnableConfigurationProperties(JGroupsComponentConfiguration.class), public]JGroupsComponentAutoConfiguration,  @TO@ [@Configuration, @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration"), @EnableConfigurationProperties(JGroupsComponentConfiguration.class), public]JGroupsComponentAutoConfiguration,  @AT@ 1628 @LENGTH@ 2079
---UPD NormalAnnotation@@@ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1643 @LENGTH@ 79
---UPD NormalAnnotation@@@AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1723 @LENGTH@ 80


INS MethodDeclaration@@public, void, MethodName:shouldLeaveParameterConversionToQueryMapper,  @TO@ TypeDeclaration@@[@RunWith(MockitoJUnitRunner.class), public]PartTreeMongoQueryUnitTests,  @AT@ 6377 @LENGTH@ 318
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:shouldLeaveParameterConversionToQueryMapper,  @AT@ 6377 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:shouldLeaveParameterConversionToQueryMapper,  @AT@ 6384 @LENGTH@ 4
---INS SimpleName@@MethodName:shouldLeaveParameterConversionToQueryMapper @TO@ MethodDeclaration@@public, void, MethodName:shouldLeaveParameterConversionToQueryMapper,  @AT@ 6389 @LENGTH@ 43
---INS VariableDeclarationStatement@@org.springframework.data.mongodb.core.query.Query query=deriveQueryFromMethod("findBySex",Sex.FEMALE); @TO@ MethodDeclaration@@public, void, MethodName:shouldLeaveParameterConversionToQueryMapper,  @AT@ 6440 @LENGTH@ 105
------INS SimpleType@@org.springframework.data.mongodb.core.query.Query @TO@ VariableDeclarationStatement@@org.springframework.data.mongodb.core.query.Query query=deriveQueryFromMethod("findBySex",Sex.FEMALE); @AT@ 6440 @LENGTH@ 49
------INS VariableDeclarationFragment@@query=deriveQueryFromMethod("findBySex",Sex.FEMALE) @TO@ VariableDeclarationStatement@@org.springframework.data.mongodb.core.query.Query query=deriveQueryFromMethod("findBySex",Sex.FEMALE); @AT@ 6490 @LENGTH@ 54
---------INS SimpleName@@query @TO@ VariableDeclarationFragment@@query=deriveQueryFromMethod("findBySex",Sex.FEMALE) @AT@ 6490 @LENGTH@ 5
---------INS MethodInvocation@@deriveQueryFromMethod("findBySex",Sex.FEMALE) @TO@ VariableDeclarationFragment@@query=deriveQueryFromMethod("findBySex",Sex.FEMALE) @AT@ 6498 @LENGTH@ 46
------------INS SimpleName@@MethodName:deriveQueryFromMethod:["findBySex", Sex.FEMALE] @TO@ MethodInvocation@@deriveQueryFromMethod("findBySex",Sex.FEMALE) @AT@ 6498 @LENGTH@ 46
---------------INS StringLiteral@@"findBySex" @TO@ SimpleName@@MethodName:deriveQueryFromMethod:["findBySex", Sex.FEMALE] @AT@ 6520 @LENGTH@ 11
---------------INS QualifiedName@@Sex.FEMALE @TO@ SimpleName@@MethodName:deriveQueryFromMethod:["findBySex", Sex.FEMALE] @AT@ 6533 @LENGTH@ 10
------------------INS SimpleName@@Sex @TO@ QualifiedName@@Sex.FEMALE @AT@ 6533 @LENGTH@ 3
------------------INS SimpleName@@FEMALE @TO@ QualifiedName@@Sex.FEMALE @AT@ 6537 @LENGTH@ 6
---INS ExpressionStatement@@MethodInvocation:assertThat(query.getQueryObject().get("sex"),is((Object)Sex.FEMALE)) @TO@ MethodDeclaration@@public, void, MethodName:shouldLeaveParameterConversionToQueryMapper,  @AT@ 6549 @LENGTH@ 71
------INS MethodInvocation@@assertThat(query.getQueryObject().get("sex"),is((Object)Sex.FEMALE)) @TO@ ExpressionStatement@@MethodInvocation:assertThat(query.getQueryObject().get("sex"),is((Object)Sex.FEMALE)) @AT@ 6549 @LENGTH@ 70
---------INS SimpleName@@MethodName:assertThat:[query.getQueryObject().get("sex"), is((Object)Sex.FEMALE)] @TO@ MethodInvocation@@assertThat(query.getQueryObject().get("sex"),is((Object)Sex.FEMALE)) @AT@ 6549 @LENGTH@ 70
------------INS MethodInvocation@@query.getQueryObject().get("sex") @TO@ SimpleName@@MethodName:assertThat:[query.getQueryObject().get("sex"), is((Object)Sex.FEMALE)] @AT@ 6560 @LENGTH@ 33
---------------INS MethodInvocation@@MethodName:getQueryObject:[] @TO@ MethodInvocation@@query.getQueryObject().get("sex") @AT@ 6560 @LENGTH@ 22
---------------INS SimpleName@@Name:query @TO@ MethodInvocation@@query.getQueryObject().get("sex") @AT@ 6560 @LENGTH@ 5
---------------INS SimpleName@@MethodName:get:["sex"] @TO@ MethodInvocation@@query.getQueryObject().get("sex") @AT@ 6583 @LENGTH@ 10
------------------INS StringLiteral@@"sex" @TO@ SimpleName@@MethodName:get:["sex"] @AT@ 6587 @LENGTH@ 5
------------INS MethodInvocation@@is((Object)Sex.FEMALE) @TO@ SimpleName@@MethodName:assertThat:[query.getQueryObject().get("sex"), is((Object)Sex.FEMALE)] @AT@ 6595 @LENGTH@ 23
---------------INS SimpleName@@MethodName:is:[(Object)Sex.FEMALE] @TO@ MethodInvocation@@is((Object)Sex.FEMALE) @AT@ 6595 @LENGTH@ 23
------------------INS CastExpression@@(Object)Sex.FEMALE @TO@ SimpleName@@MethodName:is:[(Object)Sex.FEMALE] @AT@ 6598 @LENGTH@ 19
---------------------INS SimpleType@@Object @TO@ CastExpression@@(Object)Sex.FEMALE @AT@ 6599 @LENGTH@ 6
---------------------INS QualifiedName@@Sex.FEMALE @TO@ CastExpression@@(Object)Sex.FEMALE @AT@ 6607 @LENGTH@ 10
------------------------INS SimpleName@@Sex @TO@ QualifiedName@@Sex.FEMALE @AT@ 6607 @LENGTH@ 3
------------------------INS SimpleName@@FEMALE @TO@ QualifiedName@@Sex.FEMALE @AT@ 6611 @LENGTH@ 6
---------------INS SimpleName@@MethodName:is:[(Object)Sex.FEMALE] @TO@ MethodInvocation@@is((Object)Sex.FEMALE) @AT@ 6595 @LENGTH@ 23
------------------INS CastExpression@@(Object)Sex.FEMALE @TO@ SimpleName@@MethodName:is:[(Object)Sex.FEMALE] @AT@ 6598 @LENGTH@ 19
---------------------INS SimpleType@@Object @TO@ CastExpression@@(Object)Sex.FEMALE @AT@ 6599 @LENGTH@ 6
---------------------INS QualifiedName@@Sex.FEMALE @TO@ CastExpression@@(Object)Sex.FEMALE @AT@ 6607 @LENGTH@ 10
------------------------INS SimpleName@@Sex @TO@ QualifiedName@@Sex.FEMALE @AT@ 6607 @LENGTH@ 3
------------------------INS SimpleName@@FEMALE @TO@ QualifiedName@@Sex.FEMALE @AT@ 6611 @LENGTH@ 6
---INS ExpressionStatement@@MethodInvocation:assertThat(query.getFieldsObject().get("firstname"),is((Object)1)) @TO@ MethodDeclaration@@public, void, MethodName:shouldLeaveParameterConversionToQueryMapper,  @AT@ 6623 @LENGTH@ 69
------INS MethodInvocation@@assertThat(query.getFieldsObject().get("firstname"),is((Object)1)) @TO@ ExpressionStatement@@MethodInvocation:assertThat(query.getFieldsObject().get("firstname"),is((Object)1)) @AT@ 6623 @LENGTH@ 68
---------INS SimpleName@@MethodName:assertThat:[query.getFieldsObject().get("firstname"), is((Object)1)] @TO@ MethodInvocation@@assertThat(query.getFieldsObject().get("firstname"),is((Object)1)) @AT@ 6623 @LENGTH@ 68
------------INS MethodInvocation@@query.getFieldsObject().get("firstname") @TO@ SimpleName@@MethodName:assertThat:[query.getFieldsObject().get("firstname"), is((Object)1)] @AT@ 6634 @LENGTH@ 40
---------------INS MethodInvocation@@MethodName:getFieldsObject:[] @TO@ MethodInvocation@@query.getFieldsObject().get("firstname") @AT@ 6634 @LENGTH@ 23
---------------INS SimpleName@@Name:query @TO@ MethodInvocation@@query.getFieldsObject().get("firstname") @AT@ 6634 @LENGTH@ 5
---------------INS SimpleName@@MethodName:get:["firstname"] @TO@ MethodInvocation@@query.getFieldsObject().get("firstname") @AT@ 6658 @LENGTH@ 16
------------------INS StringLiteral@@"firstname" @TO@ SimpleName@@MethodName:get:["firstname"] @AT@ 6662 @LENGTH@ 11
------------INS MethodInvocation@@is((Object)1) @TO@ SimpleName@@MethodName:assertThat:[query.getFieldsObject().get("firstname"), is((Object)1)] @AT@ 6676 @LENGTH@ 14
---------------INS SimpleName@@MethodName:is:[(Object)1] @TO@ MethodInvocation@@is((Object)1) @AT@ 6676 @LENGTH@ 14
------------------INS CastExpression@@(Object)1 @TO@ SimpleName@@MethodName:is:[(Object)1] @AT@ 6679 @LENGTH@ 10
---------------------INS SimpleType@@Object @TO@ CastExpression@@(Object)1 @AT@ 6680 @LENGTH@ 6
---------------------INS NumberLiteral@@1 @TO@ CastExpression@@(Object)1 @AT@ 6688 @LENGTH@ 1
---------------INS SimpleName@@MethodName:is:[(Object)1] @TO@ MethodInvocation@@is((Object)1) @AT@ 6676 @LENGTH@ 14
------------------INS CastExpression@@(Object)1 @TO@ SimpleName@@MethodName:is:[(Object)1] @AT@ 6679 @LENGTH@ 10
---------------------INS SimpleType@@Object @TO@ CastExpression@@(Object)1 @AT@ 6680 @LENGTH@ 6
---------------------INS NumberLiteral@@1 @TO@ CastExpression@@(Object)1 @AT@ 6688 @LENGTH@ 1


DEL MethodDeclaration@@protected, Object, MethodName:invokeListenerMethod, String methodName, Object[] arguments, Exception,  @AT@ 14863 @LENGTH@ 163
---DEL Modifier@@protected @AT@ 14863 @LENGTH@ 9
---DEL SimpleType@@Object @AT@ 14873 @LENGTH@ 6
---DEL SimpleName@@MethodName:invokeListenerMethod @AT@ 14880 @LENGTH@ 20
---DEL SingleVariableDeclaration@@String methodName @AT@ 14901 @LENGTH@ 17
------DEL SimpleType@@String @AT@ 14901 @LENGTH@ 6
------DEL SimpleName@@methodName @AT@ 14908 @LENGTH@ 10
---DEL SingleVariableDeclaration@@Object[] arguments @AT@ 14920 @LENGTH@ 18
------DEL ArrayType@@Object[] @AT@ 14920 @LENGTH@ 8
---------DEL SimpleType@@Object @AT@ 14920 @LENGTH@ 6
------DEL SimpleName@@arguments @AT@ 14929 @LENGTH@ 9
---DEL SimpleType@@Exception @AT@ 14947 @LENGTH@ 9
---DEL ReturnStatement@@MethodInvocation:this.invokeListenerMethod(methodName,arguments,null) @AT@ 14961 @LENGTH@ 62
------DEL MethodInvocation@@this.invokeListenerMethod(methodName,arguments,null) @AT@ 14968 @LENGTH@ 54
---------DEL ThisExpression@@this @AT@ 14968 @LENGTH@ 4
---------DEL SimpleName@@MethodName:invokeListenerMethod:[methodName, arguments, null] @AT@ 14973 @LENGTH@ 49
------------DEL SimpleName@@methodName @AT@ 14994 @LENGTH@ 10
------------DEL SimpleName@@arguments @AT@ 15006 @LENGTH@ 9
------------DEL NullLiteral@@null @AT@ 15017 @LENGTH@ 4


UPD TypeDeclaration@@[@Configuration, @ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration"), @EnableConfigurationProperties(ApnsComponentConfiguration.class), public]ApnsComponentAutoConfiguration,  @TO@ [@Configuration, @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration"), @EnableConfigurationProperties(ApnsComponentConfiguration.class), public]ApnsComponentAutoConfiguration,  @AT@ 1619 @LENGTH@ 2039
---UPD NormalAnnotation@@@ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1634 @LENGTH@ 79
---UPD NormalAnnotation@@@AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1714 @LENGTH@ 80


UPD IfStatement@@if (!decrementParticipateCount(request)) {  TransactionSynchronizationManager.unbindResource(getSessionFactory());  logger.debug("Closed Neo4j OGM Session in OpenSessionInViewInterceptor");  SessionFactoryUtils.closeSession();} @TO@ if (!decrementParticipateCount(request)) {  TransactionSynchronizationManager.unbindResource(getSessionFactory());  logger.debug("Closed Neo4j OGM Session in OpenSessionInViewInterceptor");} @AT@ 5068 @LENGTH@ 257
---UPD Block@@ThenBody:{  TransactionSynchronizationManager.unbindResource(getSessionFactory());  logger.debug("Closed Neo4j OGM Session in OpenSessionInViewInterceptor");  SessionFactoryUtils.closeSession();} @TO@ ThenBody:{  TransactionSynchronizationManager.unbindResource(getSessionFactory());  logger.debug("Closed Neo4j OGM Session in OpenSessionInViewInterceptor");} @AT@ 5109 @LENGTH@ 216
------DEL ExpressionStatement@@MethodInvocation:SessionFactoryUtils.closeSession() @AT@ 5286 @LENGTH@ 35
---------DEL MethodInvocation@@SessionFactoryUtils.closeSession() @AT@ 5286 @LENGTH@ 34
------------DEL SimpleName@@Name:SessionFactoryUtils @AT@ 5286 @LENGTH@ 19
------------DEL SimpleName@@MethodName:closeSession:[] @AT@ 5306 @LENGTH@ 14


UPD TypeDeclaration@@[@Configuration, @ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration"), @EnableConfigurationProperties(ValidatorComponentConfiguration.class), public]ValidatorComponentAutoConfiguration,  @TO@ [@Configuration, @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration"), @EnableConfigurationProperties(ValidatorComponentConfiguration.class), public]ValidatorComponentAutoConfiguration,  @AT@ 1634 @LENGTH@ 2097
---UPD NormalAnnotation@@@ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1649 @LENGTH@ 79
---UPD NormalAnnotation@@@AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1729 @LENGTH@ 80


UPD TypeDeclaration@@[@Configuration, @ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration"), @EnableConfigurationProperties(DirectComponentConfiguration.class), public]DirectComponentAutoConfiguration,  @TO@ [@Configuration, @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration"), @EnableConfigurationProperties(DirectComponentConfiguration.class), public]DirectComponentAutoConfiguration,  @AT@ 1625 @LENGTH@ 2057
---UPD NormalAnnotation@@@ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1640 @LENGTH@ 79
---UPD NormalAnnotation@@@AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1720 @LENGTH@ 80


UPD MethodDeclaration@@public, void, MethodName:testNothing,  @TO@ public, void, MethodName:testDefaultDatasource, Exception,  @AT@ 1607 @LENGTH@ 34
---UPD SimpleName@@MethodName:testNothing @TO@ MethodName:testDefaultDatasource @AT@ 1619 @LENGTH@ 11
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:testNothing,  @AT@ 1872 @LENGTH@ 9
---INS VariableDeclarationStatement@@DataSource dataSource=(DataSource)context.lookup("java:jboss/datasources/ExampleDS"); @TO@ MethodDeclaration@@public, void, MethodName:testNothing,  @AT@ 1892 @LENGTH@ 88
------INS SimpleType@@DataSource @TO@ VariableDeclarationStatement@@DataSource dataSource=(DataSource)context.lookup("java:jboss/datasources/ExampleDS"); @AT@ 1892 @LENGTH@ 10
------INS VariableDeclarationFragment@@dataSource=(DataSource)context.lookup("java:jboss/datasources/ExampleDS") @TO@ VariableDeclarationStatement@@DataSource dataSource=(DataSource)context.lookup("java:jboss/datasources/ExampleDS"); @AT@ 1903 @LENGTH@ 76
---------INS SimpleName@@dataSource @TO@ VariableDeclarationFragment@@dataSource=(DataSource)context.lookup("java:jboss/datasources/ExampleDS") @AT@ 1903 @LENGTH@ 10
---------INS CastExpression@@(DataSource)context.lookup("java:jboss/datasources/ExampleDS") @TO@ VariableDeclarationFragment@@dataSource=(DataSource)context.lookup("java:jboss/datasources/ExampleDS") @AT@ 1916 @LENGTH@ 63
------------INS SimpleType@@DataSource @TO@ CastExpression@@(DataSource)context.lookup("java:jboss/datasources/ExampleDS") @AT@ 1917 @LENGTH@ 10
------------INS MethodInvocation@@context.lookup("java:jboss/datasources/ExampleDS") @TO@ CastExpression@@(DataSource)context.lookup("java:jboss/datasources/ExampleDS") @AT@ 1929 @LENGTH@ 50
---------------INS SimpleName@@Name:context @TO@ MethodInvocation@@context.lookup("java:jboss/datasources/ExampleDS") @AT@ 1929 @LENGTH@ 7
---------------INS SimpleName@@MethodName:lookup:["java:jboss/datasources/ExampleDS"] @TO@ MethodInvocation@@context.lookup("java:jboss/datasources/ExampleDS") @AT@ 1937 @LENGTH@ 42
------------------INS StringLiteral@@"java:jboss/datasources/ExampleDS" @TO@ SimpleName@@MethodName:lookup:["java:jboss/datasources/ExampleDS"] @AT@ 1944 @LENGTH@ 34
---INS ExpressionStatement@@MethodInvocation:assertNotNull(dataSource) @TO@ MethodDeclaration@@public, void, MethodName:testNothing,  @AT@ 1989 @LENGTH@ 26
------INS MethodInvocation@@assertNotNull(dataSource) @TO@ ExpressionStatement@@MethodInvocation:assertNotNull(dataSource) @AT@ 1989 @LENGTH@ 25
---------INS SimpleName@@MethodName:assertNotNull:[dataSource] @TO@ MethodInvocation@@assertNotNull(dataSource) @AT@ 1989 @LENGTH@ 25
------------INS SimpleName@@dataSource @TO@ SimpleName@@MethodName:assertNotNull:[dataSource] @AT@ 2003 @LENGTH@ 10


UPD TypeDeclaration@@[@Configuration, @ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration"), public]KinesisComponentAutoConfiguration,  @TO@ [@Configuration, @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration"), public]KinesisComponentAutoConfiguration,  @AT@ 1455 @LENGTH@ 621
---UPD NormalAnnotation@@@ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1470 @LENGTH@ 79
---UPD NormalAnnotation@@@AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1550 @LENGTH@ 80


UPD TypeDeclaration@@[@Configuration, @ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration"), @EnableConfigurationProperties(SpringBatchComponentConfiguration.class), public]SpringBatchComponentAutoConfiguration,  @TO@ [@Configuration, @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration"), @EnableConfigurationProperties(SpringBatchComponentConfiguration.class), public]SpringBatchComponentAutoConfiguration,  @AT@ 1642 @LENGTH@ 2116
---UPD NormalAnnotation@@@ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1657 @LENGTH@ 79
---UPD NormalAnnotation@@@AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1737 @LENGTH@ 80


UPD ExpressionStatement@@MethodInvocation:parameters.addAll(parameters(new InnerTypeWithPrivateAncesor(),propertyNames,InnerTypeWithPrivateAncesor.class)) @TO@ MethodInvocation:parameters.addAll(parameters(new InnerTypeWithPrivateAncestor(),propertyNames,InnerTypeWithPrivateAncestor.class)) @AT@ 2853 @LENGTH@ 115
---UPD MethodInvocation@@parameters.addAll(parameters(new InnerTypeWithPrivateAncesor(),propertyNames,InnerTypeWithPrivateAncesor.class)) @TO@ parameters.addAll(parameters(new InnerTypeWithPrivateAncestor(),propertyNames,InnerTypeWithPrivateAncestor.class)) @AT@ 2853 @LENGTH@ 114
------UPD SimpleName@@MethodName:addAll:[parameters(new InnerTypeWithPrivateAncesor(),propertyNames,InnerTypeWithPrivateAncesor.class)] @TO@ MethodName:addAll:[parameters(new InnerTypeWithPrivateAncestor(),propertyNames,InnerTypeWithPrivateAncestor.class)] @AT@ 2864 @LENGTH@ 103
---------UPD MethodInvocation@@parameters(new InnerTypeWithPrivateAncesor(),propertyNames,InnerTypeWithPrivateAncesor.class) @TO@ parameters(new InnerTypeWithPrivateAncestor(),propertyNames,InnerTypeWithPrivateAncestor.class) @AT@ 2871 @LENGTH@ 95
------------UPD SimpleName@@MethodName:parameters:[new InnerTypeWithPrivateAncesor(), propertyNames, InnerTypeWithPrivateAncesor.class] @TO@ MethodName:parameters:[new InnerTypeWithPrivateAncestor(), propertyNames, InnerTypeWithPrivateAncestor.class] @AT@ 2871 @LENGTH@ 95
---------------UPD ClassInstanceCreation@@InnerTypeWithPrivateAncesor[] @TO@ InnerTypeWithPrivateAncestor[] @AT@ 2882 @LENGTH@ 33
------------------UPD SimpleType@@InnerTypeWithPrivateAncesor @TO@ InnerTypeWithPrivateAncestor @AT@ 2886 @LENGTH@ 27
---------------UPD TypeLiteral@@InnerTypeWithPrivateAncesor.class @TO@ InnerTypeWithPrivateAncestor.class @AT@ 2932 @LENGTH@ 33


UPD TypeDeclaration@@[@Configuration, @ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration"), @EnableConfigurationProperties(UniVocityCsvDataFormatConfiguration.class), public]UniVocityCsvDataFormatAutoConfiguration,  @TO@ [@Configuration, @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration"), @EnableConfigurationProperties(UniVocityCsvDataFormatConfiguration.class), public]UniVocityCsvDataFormatAutoConfiguration,  @AT@ 1683 @LENGTH@ 1181
---UPD NormalAnnotation@@@ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1698 @LENGTH@ 79
---UPD NormalAnnotation@@@AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1778 @LENGTH@ 80


UPD Block@@ThenBody:{  String finderName=null;  if (finderAnnotation.getValue().getAttribute("finder").getValue() instanceof String) {    finderName=(String)finderAnnotation.getValue().getAttribute("finder").getValue();  }  Validate.notNull(finderName,"'finder' attribute in @RooFinder must be a String");  JavaType returnType=(JavaType)finderAnnotation.getValue().getAttribute("defaultReturnType").getValue();  Validate.notNull(returnType,"@RooFinder must have a 'defaultReturnType' parameter.");  if (getTypeLocationService().getTypeDetails(returnType) == null || (getTypeLocationService().getTypeDetails(returnType) != null && getTypeLocationService().getTypeDetails(returnType).getAnnotation(RooJavaType.ROO_ENTITY_PROJECTION) == null)) {    PartTree finder=new PartTree(finderName,entityMemberDetails,this,returnType);    Validate.notNull(finder,String.format("ERROR: '%s' is not a valid finder. Use autocomplete feature (TAB or CTRL + Space) to include finder that follows Spring Data nomenclature.",finderName));    FinderMethod finderMethod=new FinderMethod(finder.getReturnType(),new JavaSymbolName(finderName),finder.getParameters());    List<JavaType> types=new ArrayList<JavaType>();    types.add(finder.getReturnType());    types.addAll(finder.getReturnType().getParameters());    for (    FinderParameter parameter : finder.getParameters()) {      types.add(parameter.getType());      types.addAll(parameter.getType().getParameters());    }    for (    JavaType parameter : types) {      getTypeLocationService().addModuleDependency(governorPhysicalTypeMetadata.getType().getModule(),parameter);    }    findersToAdd.add(finderMethod);  }} @TO@ ThenBody:{  String finderName=null;  if (finderAnnotation.getValue().getAttribute("finder").getValue() instanceof String) {    finderName=(String)finderAnnotation.getValue().getAttribute("finder").getValue();  }  Validate.notNull(finderName,"'finder' attribute in @RooFinder must be a String");  JavaType returnType=(JavaType)finderAnnotation.getValue().getAttribute("defaultReturnType").getValue();  Validate.notNull(returnType,"@RooFinder must have a 'defaultReturnType' parameter.");  JavaType formBean=(JavaType)finderAnnotation.getValue().getAttribute("formBean").getValue();  Validate.notNull(formBean,"@RooFinder must have a 'formBean' parameter.");  if ((getTypeLocationService().getTypeDetails(returnType) != null && getTypeLocationService().getTypeDetails(returnType).getAnnotation(RooJavaType.ROO_ENTITY_PROJECTION) == null) && (getTypeLocationService().getTypeDetails(formBean) != null && getTypeLocationService().getTypeDetails(formBean).getAnnotation(RooJavaType.ROO_DTO) == null)) {    PartTree finder=new PartTree(finderName,entityMemberDetails,this,returnType);    Validate.notNull(finder,String.format("ERROR: '%s' is not a valid finder. Use autocomplete feature (TAB or CTRL + Space) to include finder that follows Spring Data nomenclature.",finderName));    FinderMethod finderMethod=new FinderMethod(finder.getReturnType(),new JavaSymbolName(finderName),finder.getParameters());    List<JavaType> types=new ArrayList<JavaType>();    types.add(finder.getReturnType());    types.addAll(finder.getReturnType().getParameters());    for (    FinderParameter parameter : finder.getParameters()) {      types.add(parameter.getType());      types.addAll(parameter.getType().getParameters());    }    for (    JavaType parameter : types) {      getTypeLocationService().addModuleDependency(governorPhysicalTypeMetadata.getType().getModule(),parameter);    }    findersToAdd.add(finderMethod);  }} @AT@ 8767 @LENGTH@ 2487
---INS VariableDeclarationStatement@@JavaType formBean=(JavaType)finderAnnotation.getValue().getAttribute("formBean").getValue(); @TO@ Block@@ThenBody:{  String finderName=null;  if (finderAnnotation.getValue().getAttribute("finder").getValue() instanceof String) {    finderName=(String)finderAnnotation.getValue().getAttribute("finder").getValue();  }  Validate.notNull(finderName,"'finder' attribute in @RooFinder must be a String");  JavaType returnType=(JavaType)finderAnnotation.getValue().getAttribute("defaultReturnType").getValue();  Validate.notNull(returnType,"@RooFinder must have a 'defaultReturnType' parameter.");  if (getTypeLocationService().getTypeDetails(returnType) == null || (getTypeLocationService().getTypeDetails(returnType) != null && getTypeLocationService().getTypeDetails(returnType).getAnnotation(RooJavaType.ROO_ENTITY_PROJECTION) == null)) {    PartTree finder=new PartTree(finderName,entityMemberDetails,this,returnType);    Validate.notNull(finder,String.format("ERROR: '%s' is not a valid finder. Use autocomplete feature (TAB or CTRL + Space) to include finder that follows Spring Data nomenclature.",finderName));    FinderMethod finderMethod=new FinderMethod(finder.getReturnType(),new JavaSymbolName(finderName),finder.getParameters());    List<JavaType> types=new ArrayList<JavaType>();    types.add(finder.getReturnType());    types.addAll(finder.getReturnType().getParameters());    for (    FinderParameter parameter : finder.getParameters()) {      types.add(parameter.getType());      types.addAll(parameter.getType().getParameters());    }    for (    JavaType parameter : types) {      getTypeLocationService().addModuleDependency(governorPhysicalTypeMetadata.getType().getModule(),parameter);    }    findersToAdd.add(finderMethod);  }} @AT@ 9446 @LENGTH@ 109
------INS SimpleType@@JavaType @TO@ VariableDeclarationStatement@@JavaType formBean=(JavaType)finderAnnotation.getValue().getAttribute("formBean").getValue(); @AT@ 9446 @LENGTH@ 8
------INS VariableDeclarationFragment@@formBean=(JavaType)finderAnnotation.getValue().getAttribute("formBean").getValue() @TO@ VariableDeclarationStatement@@JavaType formBean=(JavaType)finderAnnotation.getValue().getAttribute("formBean").getValue(); @AT@ 9455 @LENGTH@ 99
---------INS SimpleName@@formBean @TO@ VariableDeclarationFragment@@formBean=(JavaType)finderAnnotation.getValue().getAttribute("formBean").getValue() @AT@ 9455 @LENGTH@ 8
---------INS CastExpression@@(JavaType)finderAnnotation.getValue().getAttribute("formBean").getValue() @TO@ VariableDeclarationFragment@@formBean=(JavaType)finderAnnotation.getValue().getAttribute("formBean").getValue() @AT@ 9480 @LENGTH@ 74
------------INS SimpleType@@JavaType @TO@ CastExpression@@(JavaType)finderAnnotation.getValue().getAttribute("formBean").getValue() @AT@ 9481 @LENGTH@ 8
------------INS MethodInvocation@@finderAnnotation.getValue().getAttribute("formBean").getValue() @TO@ CastExpression@@(JavaType)finderAnnotation.getValue().getAttribute("formBean").getValue() @AT@ 9491 @LENGTH@ 63
---------------INS MethodInvocation@@MethodName:getAttribute:["formBean"] @TO@ MethodInvocation@@finderAnnotation.getValue().getAttribute("formBean").getValue() @AT@ 9491 @LENGTH@ 52
------------------INS StringLiteral@@"formBean" @TO@ MethodInvocation@@MethodName:getAttribute:["formBean"] @AT@ 9532 @LENGTH@ 10
---------------INS MethodInvocation@@MethodName:getValue:[] @TO@ MethodInvocation@@finderAnnotation.getValue().getAttribute("formBean").getValue() @AT@ 9491 @LENGTH@ 27
---------------INS SimpleName@@Name:finderAnnotation @TO@ MethodInvocation@@finderAnnotation.getValue().getAttribute("formBean").getValue() @AT@ 9491 @LENGTH@ 16
---------------INS SimpleName@@MethodName:getValue:[] @TO@ MethodInvocation@@finderAnnotation.getValue().getAttribute("formBean").getValue() @AT@ 9544 @LENGTH@ 10
---INS ExpressionStatement@@MethodInvocation:Validate.notNull(formBean,"@RooFinder must have a 'formBean' parameter.") @TO@ Block@@ThenBody:{  String finderName=null;  if (finderAnnotation.getValue().getAttribute("finder").getValue() instanceof String) {    finderName=(String)finderAnnotation.getValue().getAttribute("finder").getValue();  }  Validate.notNull(finderName,"'finder' attribute in @RooFinder must be a String");  JavaType returnType=(JavaType)finderAnnotation.getValue().getAttribute("defaultReturnType").getValue();  Validate.notNull(returnType,"@RooFinder must have a 'defaultReturnType' parameter.");  if (getTypeLocationService().getTypeDetails(returnType) == null || (getTypeLocationService().getTypeDetails(returnType) != null && getTypeLocationService().getTypeDetails(returnType).getAnnotation(RooJavaType.ROO_ENTITY_PROJECTION) == null)) {    PartTree finder=new PartTree(finderName,entityMemberDetails,this,returnType);    Validate.notNull(finder,String.format("ERROR: '%s' is not a valid finder. Use autocomplete feature (TAB or CTRL + Space) to include finder that follows Spring Data nomenclature.",finderName));    FinderMethod finderMethod=new FinderMethod(finder.getReturnType(),new JavaSymbolName(finderName),finder.getParameters());    List<JavaType> types=new ArrayList<JavaType>();    types.add(finder.getReturnType());    types.addAll(finder.getReturnType().getParameters());    for (    FinderParameter parameter : finder.getParameters()) {      types.add(parameter.getType());      types.addAll(parameter.getType().getParameters());    }    for (    JavaType parameter : types) {      getTypeLocationService().addModuleDependency(governorPhysicalTypeMetadata.getType().getModule(),parameter);    }    findersToAdd.add(finderMethod);  }} @AT@ 9566 @LENGTH@ 75
------INS MethodInvocation@@Validate.notNull(formBean,"@RooFinder must have a 'formBean' parameter.") @TO@ ExpressionStatement@@MethodInvocation:Validate.notNull(formBean,"@RooFinder must have a 'formBean' parameter.") @AT@ 9566 @LENGTH@ 74
---------INS SimpleName@@Name:Validate @TO@ MethodInvocation@@Validate.notNull(formBean,"@RooFinder must have a 'formBean' parameter.") @AT@ 9566 @LENGTH@ 8
---------INS SimpleName@@MethodName:notNull:[formBean, "@RooFinder must have a 'formBean' parameter."] @TO@ MethodInvocation@@Validate.notNull(formBean,"@RooFinder must have a 'formBean' parameter.") @AT@ 9575 @LENGTH@ 65
------------INS SimpleName@@formBean @TO@ SimpleName@@MethodName:notNull:[formBean, "@RooFinder must have a 'formBean' parameter."] @AT@ 9583 @LENGTH@ 8
------------INS StringLiteral@@"@RooFinder must have a 'formBean' parameter." @TO@ SimpleName@@MethodName:notNull:[formBean, "@RooFinder must have a 'formBean' parameter."] @AT@ 9593 @LENGTH@ 46
---UPD IfStatement@@if (getTypeLocationService().getTypeDetails(returnType) == null || (getTypeLocationService().getTypeDetails(returnType) != null && getTypeLocationService().getTypeDetails(returnType).getAnnotation(RooJavaType.ROO_ENTITY_PROJECTION) == null)) {  PartTree finder=new PartTree(finderName,entityMemberDetails,this,returnType);  Validate.notNull(finder,String.format("ERROR: '%s' is not a valid finder. Use autocomplete feature (TAB or CTRL + Space) to include finder that follows Spring Data nomenclature.",finderName));  FinderMethod finderMethod=new FinderMethod(finder.getReturnType(),new JavaSymbolName(finderName),finder.getParameters());  List<JavaType> types=new ArrayList<JavaType>();  types.add(finder.getReturnType());  types.addAll(finder.getReturnType().getParameters());  for (  FinderParameter parameter : finder.getParameters()) {    types.add(parameter.getType());    types.addAll(parameter.getType().getParameters());  }  for (  JavaType parameter : types) {    getTypeLocationService().addModuleDependency(governorPhysicalTypeMetadata.getType().getModule(),parameter);  }  findersToAdd.add(finderMethod);} @TO@ if ((getTypeLocationService().getTypeDetails(returnType) != null && getTypeLocationService().getTypeDetails(returnType).getAnnotation(RooJavaType.ROO_ENTITY_PROJECTION) == null) && (getTypeLocationService().getTypeDetails(formBean) != null && getTypeLocationService().getTypeDetails(formBean).getAnnotation(RooJavaType.ROO_DTO) == null)) {  PartTree finder=new PartTree(finderName,entityMemberDetails,this,returnType);  Validate.notNull(finder,String.format("ERROR: '%s' is not a valid finder. Use autocomplete feature (TAB or CTRL + Space) to include finder that follows Spring Data nomenclature.",finderName));  FinderMethod finderMethod=new FinderMethod(finder.getReturnType(),new JavaSymbolName(finderName),finder.getParameters());  List<JavaType> types=new ArrayList<JavaType>();  types.add(finder.getReturnType());  types.addAll(finder.getReturnType().getParameters());  for (  FinderParameter parameter : finder.getParameters()) {    types.add(parameter.getType());    types.addAll(parameter.getType().getParameters());  }  for (  JavaType parameter : types) {    getTypeLocationService().addModuleDependency(governorPhysicalTypeMetadata.getType().getModule(),parameter);  }  findersToAdd.add(finderMethod);} @AT@ 9589 @LENGTH@ 1655
------UPD InfixExpression@@getTypeLocationService().getTypeDetails(returnType) == null || (getTypeLocationService().getTypeDetails(returnType) != null && getTypeLocationService().getTypeDetails(returnType).getAnnotation(RooJavaType.ROO_ENTITY_PROJECTION) == null) @TO@ (getTypeLocationService().getTypeDetails(returnType) != null && getTypeLocationService().getTypeDetails(returnType).getAnnotation(RooJavaType.ROO_ENTITY_PROJECTION) == null) && (getTypeLocationService().getTypeDetails(formBean) != null && getTypeLocationService().getTypeDetails(formBean).getAnnotation(RooJavaType.ROO_DTO) == null) @AT@ 9593 @LENGTH@ 269
---------UPD InfixExpression@@getTypeLocationService().getTypeDetails(returnType) == null @TO@ getTypeLocationService().getTypeDetails(formBean) != null @AT@ 9593 @LENGTH@ 59
---------UPD Operator@@|| @TO@ && @AT@ 9652 @LENGTH@ 2
---------INS Operator@@&& @TO@ InfixExpression@@getTypeLocationService().getTypeDetails(returnType) == null || (getTypeLocationService().getTypeDetails(returnType) != null && getTypeLocationService().getTypeDetails(returnType).getAnnotation(RooJavaType.ROO_ENTITY_PROJECTION) == null) @AT@ 10059 @LENGTH@ 2
---------INS ParenthesizedExpression@@(getTypeLocationService().getTypeDetails(formBean) != null && getTypeLocationService().getTypeDetails(formBean).getAnnotation(RooJavaType.ROO_DTO) == null) @TO@ InfixExpression@@getTypeLocationService().getTypeDetails(returnType) == null || (getTypeLocationService().getTypeDetails(returnType) != null && getTypeLocationService().getTypeDetails(returnType).getAnnotation(RooJavaType.ROO_ENTITY_PROJECTION) == null) @AT@ 10077 @LENGTH@ 174
------------INS InfixExpression@@getTypeLocationService().getTypeDetails(formBean) != null && getTypeLocationService().getTypeDetails(formBean).getAnnotation(RooJavaType.ROO_DTO) == null @TO@ ParenthesizedExpression@@(getTypeLocationService().getTypeDetails(formBean) != null && getTypeLocationService().getTypeDetails(formBean).getAnnotation(RooJavaType.ROO_DTO) == null) @AT@ 10078 @LENGTH@ 172
---------------MOV InfixExpression@@getTypeLocationService().getTypeDetails(returnType) == null @TO@ InfixExpression@@getTypeLocationService().getTypeDetails(formBean) != null && getTypeLocationService().getTypeDetails(formBean).getAnnotation(RooJavaType.ROO_DTO) == null @AT@ 9593 @LENGTH@ 59
------------------UPD MethodInvocation@@getTypeLocationService().getTypeDetails(returnType) @TO@ getTypeLocationService().getTypeDetails(formBean) @AT@ 9593 @LENGTH@ 51
---------------------UPD SimpleName@@MethodName:getTypeDetails:[returnType] @TO@ MethodName:getTypeDetails:[formBean] @AT@ 9618 @LENGTH@ 26
------------------------UPD SimpleName@@returnType @TO@ formBean @AT@ 9633 @LENGTH@ 10
------------------UPD Operator@@== @TO@ != @AT@ 9644 @LENGTH@ 2
---------------MOV Operator@@|| @TO@ InfixExpression@@getTypeLocationService().getTypeDetails(formBean) != null && getTypeLocationService().getTypeDetails(formBean).getAnnotation(RooJavaType.ROO_DTO) == null @AT@ 9652 @LENGTH@ 2
---------------INS InfixExpression@@getTypeLocationService().getTypeDetails(formBean).getAnnotation(RooJavaType.ROO_DTO) == null @TO@ InfixExpression@@getTypeLocationService().getTypeDetails(formBean) != null && getTypeLocationService().getTypeDetails(formBean).getAnnotation(RooJavaType.ROO_DTO) == null @AT@ 10139 @LENGTH@ 111
------------------INS MethodInvocation@@getTypeLocationService().getTypeDetails(formBean).getAnnotation(RooJavaType.ROO_DTO) @TO@ InfixExpression@@getTypeLocationService().getTypeDetails(formBean).getAnnotation(RooJavaType.ROO_DTO) == null @AT@ 10139 @LENGTH@ 103
---------------------INS MethodInvocation@@MethodName:getTypeDetails:[formBean] @TO@ MethodInvocation@@getTypeLocationService().getTypeDetails(formBean).getAnnotation(RooJavaType.ROO_DTO) @AT@ 10139 @LENGTH@ 68
------------------------INS SimpleName@@formBean @TO@ MethodInvocation@@MethodName:getTypeDetails:[formBean] @AT@ 10198 @LENGTH@ 8
---------------------INS MethodInvocation@@MethodName:getTypeLocationService:[] @TO@ MethodInvocation@@getTypeLocationService().getTypeDetails(formBean).getAnnotation(RooJavaType.ROO_DTO) @AT@ 10139 @LENGTH@ 24
---------------------INS SimpleName@@MethodName:getAnnotation:[RooJavaType.ROO_DTO] @TO@ MethodInvocation@@getTypeLocationService().getTypeDetails(formBean).getAnnotation(RooJavaType.ROO_DTO) @AT@ 10208 @LENGTH@ 34
------------------------INS QualifiedName@@RooJavaType.ROO_DTO @TO@ SimpleName@@MethodName:getAnnotation:[RooJavaType.ROO_DTO] @AT@ 10222 @LENGTH@ 19
---------------------------INS SimpleName@@RooJavaType @TO@ QualifiedName@@RooJavaType.ROO_DTO @AT@ 10222 @LENGTH@ 11
---------------------------INS SimpleName@@ROO_DTO @TO@ QualifiedName@@RooJavaType.ROO_DTO @AT@ 10234 @LENGTH@ 7
------------------INS Operator@@== @TO@ InfixExpression@@getTypeLocationService().getTypeDetails(formBean).getAnnotation(RooJavaType.ROO_DTO) == null @AT@ 10242 @LENGTH@ 2
------------------INS NullLiteral@@null @TO@ InfixExpression@@getTypeLocationService().getTypeDetails(formBean).getAnnotation(RooJavaType.ROO_DTO) == null @AT@ 10246 @LENGTH@ 4


UPD VariableDeclarationStatement@@Iterable<Object> $in=DBObjectTestUtils.getTypedValue(_id,"$in",Iterable.class); @TO@ Iterable<Object> $in=DocumentTestUtils.getTypedValue(_id,"$in",Iterable.class); @AT@ 3000 @LENGTH@ 83
---UPD VariableDeclarationFragment@@$in=DBObjectTestUtils.getTypedValue(_id,"$in",Iterable.class) @TO@ $in=DocumentTestUtils.getTypedValue(_id,"$in",Iterable.class) @AT@ 3017 @LENGTH@ 65
------UPD MethodInvocation@@DBObjectTestUtils.getTypedValue(_id,"$in",Iterable.class) @TO@ DocumentTestUtils.getTypedValue(_id,"$in",Iterable.class) @AT@ 3023 @LENGTH@ 59
---------UPD SimpleName@@Name:DBObjectTestUtils @TO@ Name:DocumentTestUtils @AT@ 3023 @LENGTH@ 17


UPD TypeDeclaration@@[@Configuration, @ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration"), @EnableConfigurationProperties(Mina2ComponentConfiguration.class), public]Mina2ComponentAutoConfiguration,  @TO@ [@Configuration, @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration"), @EnableConfigurationProperties(Mina2ComponentConfiguration.class), public]Mina2ComponentAutoConfiguration,  @AT@ 1622 @LENGTH@ 2048
---UPD NormalAnnotation@@@ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1637 @LENGTH@ 79
---UPD NormalAnnotation@@@AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1717 @LENGTH@ 80


UPD CatchClause@@catch (RetryException ex) {  acquireLock(key);} @TO@ catch (RetryException ex) {  return acquireLock(key);} @AT@ 138359 @LENGTH@ 56
---INS ReturnStatement@@MethodInvocation:acquireLock(key) @TO@ CatchClause@@catch (RetryException ex) {  acquireLock(key);} @AT@ 138342 @LENGTH@ 24
------MOV MethodInvocation@@acquireLock(key) @TO@ ReturnStatement@@MethodInvocation:acquireLock(key) @AT@ 138392 @LENGTH@ 16
---DEL ExpressionStatement@@MethodInvocation:acquireLock(key) @AT@ 138392 @LENGTH@ 17


UPD VariableDeclarationStatement@@int cmdResult=ctx.getDefaultCommandCompleter().complete(ctx,cmd,0,candidates); @TO@ int cmdResult=ctx.getDefaultCommandCompleter().complete(ctx,cmd,cmd.length(),candidates); @AT@ 3967 @LENGTH@ 83
---UPD VariableDeclarationFragment@@cmdResult=ctx.getDefaultCommandCompleter().complete(ctx,cmd,0,candidates) @TO@ cmdResult=ctx.getDefaultCommandCompleter().complete(ctx,cmd,cmd.length(),candidates) @AT@ 3971 @LENGTH@ 78
------UPD MethodInvocation@@ctx.getDefaultCommandCompleter().complete(ctx,cmd,0,candidates) @TO@ ctx.getDefaultCommandCompleter().complete(ctx,cmd,cmd.length(),candidates) @AT@ 3983 @LENGTH@ 66
---------UPD SimpleName@@MethodName:complete:[ctx, cmd, 0, candidates] @TO@ MethodName:complete:[ctx, cmd, cmd.length(), candidates] @AT@ 4016 @LENGTH@ 33
------------DEL NumberLiteral@@0 @AT@ 4035 @LENGTH@ 1
------------INS MethodInvocation@@cmd.length() @TO@ SimpleName@@MethodName:complete:[ctx, cmd, 0, candidates] @AT@ 4036 @LENGTH@ 12
---------------INS SimpleName@@Name:cmd @TO@ MethodInvocation@@cmd.length() @AT@ 4036 @LENGTH@ 3
---------------INS SimpleName@@MethodName:length:[] @TO@ MethodInvocation@@cmd.length() @AT@ 4040 @LENGTH@ 8


INS ExpressionStatement@@MethodInvocation:sw.start() @TO@ MethodDeclaration@@public, ExitShellRequest, MethodName:run,  @AT@ 4210 @LENGTH@ 11
---INS MethodInvocation@@sw.start() @TO@ ExpressionStatement@@MethodInvocation:sw.start() @AT@ 4210 @LENGTH@ 10
------INS SimpleName@@Name:sw @TO@ MethodInvocation@@sw.start() @AT@ 4210 @LENGTH@ 2
------INS SimpleName@@MethodName:start:[] @TO@ MethodInvocation@@sw.start() @AT@ 4213 @LENGTH@ 7


UPD IfStatement@@if (System.getProperty("swarm.hollow") == null) {  this.server.deployer().deploy();} else {  this.server.deployer().deploy(getCommandLine().extraArguments().stream().map(e -> Paths.get(e)).collect(Collectors.toList()));} @TO@ if (ApplicationEnvironment.get().isHollow()) {  this.server.deployer().deploy(getCommandLine().extraArguments().stream().map(e -> Paths.get(e)).collect(Collectors.toList()));} else {  this.server.deployer().deploy();} @AT@ 14145 @LENGTH@ 381
---DEL InfixExpression@@System.getProperty("swarm.hollow") == null @AT@ 14149 @LENGTH@ 42
------DEL MethodInvocation@@System.getProperty("swarm.hollow") @AT@ 14149 @LENGTH@ 34
------DEL Operator@@== @AT@ 14183 @LENGTH@ 2
------DEL NullLiteral@@null @AT@ 14187 @LENGTH@ 4
---UPD Block@@ThenBody:{  this.server.deployer().deploy();} @TO@ ElseBody:{  this.server.deployer().deploy();} @AT@ 14193 @LENGTH@ 56
---MOV Block@@ThenBody:{  this.server.deployer().deploy();} @TO@ IfStatement@@if (System.getProperty("swarm.hollow") == null) {  this.server.deployer().deploy();} else {  this.server.deployer().deploy(getCommandLine().extraArguments().stream().map(e -> Paths.get(e)).collect(Collectors.toList()));} @AT@ 14193 @LENGTH@ 56
---INS MethodInvocation@@ApplicationEnvironment.get().isHollow() @TO@ IfStatement@@if (System.getProperty("swarm.hollow") == null) {  this.server.deployer().deploy();} else {  this.server.deployer().deploy(getCommandLine().extraArguments().stream().map(e -> Paths.get(e)).collect(Collectors.toList()));} @AT@ 14212 @LENGTH@ 39
------MOV SimpleName@@Name:System @TO@ MethodInvocation@@ApplicationEnvironment.get().isHollow() @AT@ 14149 @LENGTH@ 6
------MOV SimpleName@@MethodName:getProperty:["swarm.hollow"] @TO@ MethodInvocation@@ApplicationEnvironment.get().isHollow() @AT@ 14156 @LENGTH@ 27
---------DEL StringLiteral@@"swarm.hollow" @AT@ 14168 @LENGTH@ 14
------INS MethodInvocation@@MethodName:get:[] @TO@ MethodInvocation@@ApplicationEnvironment.get().isHollow() @AT@ 14212 @LENGTH@ 28
---UPD Block@@ElseBody:{  this.server.deployer().deploy(getCommandLine().extraArguments().stream().map(e -> Paths.get(e)).collect(Collectors.toList()));} @TO@ ThenBody:{  this.server.deployer().deploy(getCommandLine().extraArguments().stream().map(e -> Paths.get(e)).collect(Collectors.toList()));} @AT@ 14255 @LENGTH@ 271


UPD TypeDeclaration@@[@Configuration, @ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration"), @EnableConfigurationProperties(FileLanguageConfiguration.class), public]FileLanguageAutoConfiguration,  @TO@ [@Configuration, @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration"), @EnableConfigurationProperties(FileLanguageConfiguration.class), public]FileLanguageAutoConfiguration,  @AT@ 1663 @LENGTH@ 1067
---UPD NormalAnnotation@@@ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1678 @LENGTH@ 79
---UPD NormalAnnotation@@@AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1758 @LENGTH@ 80


UPD FieldDeclaration@@private, final, String, [query="select * from mongo.view.events limit 100"] @TO@ private, final, String, [query="select * from schema.db"] @AT@ 1444 @LENGTH@ 73
---UPD VariableDeclarationFragment@@query="select * from mongo.view.events limit 100" @TO@ query="select * from schema.db" @AT@ 1465 @LENGTH@ 51
------UPD StringLiteral@@"select * from mongo.view.events limit 100" @TO@ "select * from schema.db" @AT@ 1473 @LENGTH@ 43


UPD VariableDeclarationStatement@@final String query=makePageable(cypherQuery,queryParams,pageable.getPageNumber(),pageable.getPageSize()); @TO@ final String query=addPaging(cypherQuery,queryParams,pageable.getPageNumber(),pageable.getPageSize()); @AT@ 3107 @LENGTH@ 110
---UPD VariableDeclarationFragment@@query=makePageable(cypherQuery,queryParams,pageable.getPageNumber(),pageable.getPageSize()) @TO@ query=addPaging(cypherQuery,queryParams,pageable.getPageNumber(),pageable.getPageSize()) @AT@ 3120 @LENGTH@ 96
------UPD MethodInvocation@@makePageable(cypherQuery,queryParams,pageable.getPageNumber(),pageable.getPageSize()) @TO@ addPaging(cypherQuery,queryParams,pageable.getPageNumber(),pageable.getPageSize()) @AT@ 3128 @LENGTH@ 88
---------UPD SimpleName@@MethodName:makePageable:[cypherQuery, queryParams, pageable.getPageNumber(), pageable.getPageSize()] @TO@ MethodName:addPaging:[cypherQuery, queryParams, pageable.getPageNumber(), pageable.getPageSize()] @AT@ 3128 @LENGTH@ 88


UPD TypeDeclaration@@[@Configuration, @ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration"), public]RssComponentAutoConfiguration,  @TO@ [@Configuration, @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration"), public]RssComponentAutoConfiguration,  @AT@ 1435 @LENGTH@ 589
---UPD NormalAnnotation@@@ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1450 @LENGTH@ 79
---UPD NormalAnnotation@@@AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1530 @LENGTH@ 80


UPD TypeDeclaration@@[@Configuration, @ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration"), @EnableConfigurationProperties(SmppComponentConfiguration.class), public]SmppComponentAutoConfiguration,  @TO@ [@Configuration, @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration"), @EnableConfigurationProperties(SmppComponentConfiguration.class), public]SmppComponentAutoConfiguration,  @AT@ 1619 @LENGTH@ 2060
---UPD NormalAnnotation@@@ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1634 @LENGTH@ 79
---UPD NormalAnnotation@@@AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1714 @LENGTH@ 80


INS MethodDeclaration@@public, static, void, MethodName:beforeClass,  @TO@ TypeDeclaration@@[@ContextConfiguration(classes={Neo4jTemplateConfiguration.class}), @RunWith(SpringJUnit4ClassRunner.class), public]Neo4jTemplateIT, MultiDriverTestClass @AT@ 2171 @LENGTH@ 97
---INS Modifier@@public @TO@ MethodDeclaration@@public, static, void, MethodName:beforeClass,  @AT@ 2171 @LENGTH@ 6
---INS Modifier@@static @TO@ MethodDeclaration@@public, static, void, MethodName:beforeClass,  @AT@ 2178 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, static, void, MethodName:beforeClass,  @AT@ 2185 @LENGTH@ 4
---INS SimpleName@@MethodName:beforeClass @TO@ MethodDeclaration@@public, static, void, MethodName:beforeClass,  @AT@ 2190 @LENGTH@ 11
---INS ExpressionStatement@@Assignment:graphDatabaseService=getGraphDatabaseService() @TO@ MethodDeclaration@@public, static, void, MethodName:beforeClass,  @AT@ 2213 @LENGTH@ 49
------INS Assignment@@graphDatabaseService=getGraphDatabaseService() @TO@ ExpressionStatement@@Assignment:graphDatabaseService=getGraphDatabaseService() @AT@ 2213 @LENGTH@ 48
---------INS SimpleName@@graphDatabaseService @TO@ Assignment@@graphDatabaseService=getGraphDatabaseService() @AT@ 2213 @LENGTH@ 20
---------INS Operator@@= @TO@ Assignment@@graphDatabaseService=getGraphDatabaseService() @AT@ 2233 @LENGTH@ 1
---------INS MethodInvocation@@MethodName:getGraphDatabaseService:[] @TO@ Assignment@@graphDatabaseService=getGraphDatabaseService() @AT@ 2236 @LENGTH@ 25


INS MethodDeclaration@@List<Person>, MethodName:findBySex, Sex sex,  @TO@ TypeDeclaration@@Repo, [MongoRepository<Person,Long>] @AT@ 8740 @LENGTH@ 19
---INS ParameterizedType@@List<Person> @TO@ MethodDeclaration@@List<Person>, MethodName:findBySex, Sex sex,  @AT@ 8727 @LENGTH@ 12
------INS SimpleType@@List @TO@ ParameterizedType@@List<Person> @AT@ 8727 @LENGTH@ 4
------INS SimpleType@@Person @TO@ ParameterizedType@@List<Person> @AT@ 8732 @LENGTH@ 6
---INS SimpleName@@MethodName:findBySex @TO@ MethodDeclaration@@List<Person>, MethodName:findBySex, Sex sex,  @AT@ 8740 @LENGTH@ 9
---INS SingleVariableDeclaration@@Sex sex @TO@ MethodDeclaration@@List<Person>, MethodName:findBySex, Sex sex,  @AT@ 8750 @LENGTH@ 7
------INS SimpleType@@Sex @TO@ SingleVariableDeclaration@@Sex sex @AT@ 8750 @LENGTH@ 3
------INS SimpleName@@sex @TO@ SingleVariableDeclaration@@Sex sex @AT@ 8754 @LENGTH@ 3


UPD TypeDeclaration@@[@Configuration, @ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration"), @EnableConfigurationProperties(DisruptorComponentConfiguration.class), public]DisruptorComponentAutoConfiguration,  @TO@ [@Configuration, @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration"), @EnableConfigurationProperties(DisruptorComponentConfiguration.class), public]DisruptorComponentAutoConfiguration,  @AT@ 1634 @LENGTH@ 2097
---UPD NormalAnnotation@@@ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1649 @LENGTH@ 79
---UPD NormalAnnotation@@@AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1729 @LENGTH@ 80


INS VariableDeclarationStatement@@Map<String,RelationInfo> relationInfos=entityMetadata.getRelationInfos(); @TO@ MethodDeclaration@@private, InvocableMemberBodyBuilder, MethodName:builSaveMethodBody, final MethodMetadata methodToBeImplemented,  @AT@ 30110 @LENGTH@ 76
---INS ParameterizedType@@Map<String,RelationInfo> @TO@ VariableDeclarationStatement@@Map<String,RelationInfo> relationInfos=entityMetadata.getRelationInfos(); @AT@ 30110 @LENGTH@ 25
------INS SimpleType@@Map @TO@ ParameterizedType@@Map<String,RelationInfo> @AT@ 30110 @LENGTH@ 3
------INS SimpleType@@String @TO@ ParameterizedType@@Map<String,RelationInfo> @AT@ 30114 @LENGTH@ 6
------INS SimpleType@@RelationInfo @TO@ ParameterizedType@@Map<String,RelationInfo> @AT@ 30122 @LENGTH@ 12
---INS VariableDeclarationFragment@@relationInfos=entityMetadata.getRelationInfos() @TO@ VariableDeclarationStatement@@Map<String,RelationInfo> relationInfos=entityMetadata.getRelationInfos(); @AT@ 30136 @LENGTH@ 49
------INS SimpleName@@relationInfos @TO@ VariableDeclarationFragment@@relationInfos=entityMetadata.getRelationInfos() @AT@ 30136 @LENGTH@ 13
------INS MethodInvocation@@entityMetadata.getRelationInfos() @TO@ VariableDeclarationFragment@@relationInfos=entityMetadata.getRelationInfos() @AT@ 30152 @LENGTH@ 33
---------INS SimpleName@@Name:entityMetadata @TO@ MethodInvocation@@entityMetadata.getRelationInfos() @AT@ 30152 @LENGTH@ 14
---------INS SimpleName@@MethodName:getRelationInfos:[] @TO@ MethodInvocation@@entityMetadata.getRelationInfos() @AT@ 30167 @LENGTH@ 18


UPD VariableDeclarationStatement@@QueueView.Excerpt<Object,Object> excerpt=queueView.get().get(index.longValue()); @TO@ QueueView.Excerpt<Object,Object> excerpt=queueView.get().getExcerpt(index.longValue()); @AT@ 5659 @LENGTH@ 83
---UPD VariableDeclarationFragment@@excerpt=queueView.get().get(index.longValue()) @TO@ excerpt=queueView.get().getExcerpt(index.longValue()) @AT@ 5693 @LENGTH@ 48
------UPD MethodInvocation@@queueView.get().get(index.longValue()) @TO@ queueView.get().getExcerpt(index.longValue()) @AT@ 5703 @LENGTH@ 38
---------UPD SimpleName@@MethodName:get:[index.longValue()] @TO@ MethodName:getExcerpt:[index.longValue()] @AT@ 5719 @LENGTH@ 22


UPD ExpressionStatement@@Assignment:this.customizer.jndiName="java:/jms/tacos" @TO@ Assignment:this.customizer.jndiName=Optional.of("java:/jms/tacos") @AT@ 1556 @LENGTH@ 45
---UPD Assignment@@this.customizer.jndiName="java:/jms/tacos" @TO@ this.customizer.jndiName=Optional.of("java:/jms/tacos") @AT@ 1556 @LENGTH@ 44
------DEL StringLiteral@@"java:/jms/tacos" @AT@ 1583 @LENGTH@ 17
------INS MethodInvocation@@Optional.of("java:/jms/tacos") @TO@ Assignment@@this.customizer.jndiName="java:/jms/tacos" @AT@ 1611 @LENGTH@ 30
---------INS SimpleName@@Name:Optional @TO@ MethodInvocation@@Optional.of("java:/jms/tacos") @AT@ 1611 @LENGTH@ 8
---------INS SimpleName@@MethodName:of:["java:/jms/tacos"] @TO@ MethodInvocation@@Optional.of("java:/jms/tacos") @AT@ 1620 @LENGTH@ 21
------------INS StringLiteral@@"java:/jms/tacos" @TO@ SimpleName@@MethodName:of:["java:/jms/tacos"] @AT@ 1623 @LENGTH@ 17


UPD ExpressionStatement@@MethodInvocation:Utilities.handleMmTableFinalPath(specPath,unionSuffix,hconf,success,dpLevels,lbLevels,mbc,conf.getMmWriteId(),reporter) @TO@ MethodInvocation:Utilities.handleMmTableFinalPath(specPath,unionSuffix,hconf,success,dpLevels,lbLevels,mbc,conf.getMmWriteId(),reporter,conf.isMmCtas()) @AT@ 49458 @LENGTH@ 142
---UPD MethodInvocation@@Utilities.handleMmTableFinalPath(specPath,unionSuffix,hconf,success,dpLevels,lbLevels,mbc,conf.getMmWriteId(),reporter) @TO@ Utilities.handleMmTableFinalPath(specPath,unionSuffix,hconf,success,dpLevels,lbLevels,mbc,conf.getMmWriteId(),reporter,conf.isMmCtas()) @AT@ 49458 @LENGTH@ 141
------UPD SimpleName@@MethodName:handleMmTableFinalPath:[specPath, unionSuffix, hconf, success, dpLevels, lbLevels, mbc, conf.getMmWriteId(), reporter] @TO@ MethodName:handleMmTableFinalPath:[specPath, unionSuffix, hconf, success, dpLevels, lbLevels, mbc, conf.getMmWriteId(), reporter, conf.isMmCtas()] @AT@ 49468 @LENGTH@ 131
---------INS MethodInvocation@@conf.isMmCtas() @TO@ SimpleName@@MethodName:handleMmTableFinalPath:[specPath, unionSuffix, hconf, success, dpLevels, lbLevels, mbc, conf.getMmWriteId(), reporter] @AT@ 49600 @LENGTH@ 15
------------INS SimpleName@@Name:conf @TO@ MethodInvocation@@conf.isMmCtas() @AT@ 49600 @LENGTH@ 4
------------INS SimpleName@@MethodName:isMmCtas:[] @TO@ MethodInvocation@@conf.isMmCtas() @AT@ 49605 @LENGTH@ 10


UPD TypeDeclaration@@[@Configuration, @ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration"), @EnableConfigurationProperties(CxfRsComponentConfiguration.class), public]CxfRsComponentAutoConfiguration,  @TO@ [@Configuration, @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration"), @EnableConfigurationProperties(CxfRsComponentConfiguration.class), public]CxfRsComponentAutoConfiguration,  @AT@ 1630 @LENGTH@ 2048
---UPD NormalAnnotation@@@ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1645 @LENGTH@ 79
---UPD NormalAnnotation@@@AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1725 @LENGTH@ 80


UPD ReturnStatement@@ConditionalExpression:credentialType.isInstance(this) && getAlgorithm().equals(algorithmName) ? function.apply(credentialType.cast(this)) : null @TO@ ConditionalExpression:credentialType.isInstance(this) && (algorithmName == null || algorithmName.equals(getAlgorithm())) ? function.apply(credentialType.cast(this)) : null @AT@ 1203 @LENGTH@ 130
---UPD ConditionalExpression@@credentialType.isInstance(this) && getAlgorithm().equals(algorithmName) ? function.apply(credentialType.cast(this)) : null @TO@ credentialType.isInstance(this) && (algorithmName == null || algorithmName.equals(getAlgorithm())) ? function.apply(credentialType.cast(this)) : null @AT@ 1210 @LENGTH@ 122
------UPD InfixExpression@@credentialType.isInstance(this) && getAlgorithm().equals(algorithmName) @TO@ credentialType.isInstance(this) && (algorithmName == null || algorithmName.equals(getAlgorithm())) @AT@ 1210 @LENGTH@ 71
---------UPD MethodInvocation@@getAlgorithm().equals(algorithmName) @TO@ algorithmName.equals(getAlgorithm()) @AT@ 1245 @LENGTH@ 36
---------INS ParenthesizedExpression@@(algorithmName == null || algorithmName.equals(getAlgorithm())) @TO@ InfixExpression@@credentialType.isInstance(this) && getAlgorithm().equals(algorithmName) @AT@ 1264 @LENGTH@ 63
------------INS InfixExpression@@algorithmName == null || algorithmName.equals(getAlgorithm()) @TO@ ParenthesizedExpression@@(algorithmName == null || algorithmName.equals(getAlgorithm())) @AT@ 1265 @LENGTH@ 61
---------------MOV MethodInvocation@@getAlgorithm().equals(algorithmName) @TO@ InfixExpression@@algorithmName == null || algorithmName.equals(getAlgorithm()) @AT@ 1245 @LENGTH@ 36
------------------DEL MethodInvocation@@MethodName:getAlgorithm:[] @AT@ 1245 @LENGTH@ 14
------------------DEL SimpleName@@MethodName:equals:[algorithmName] @AT@ 1260 @LENGTH@ 21
---------------------DEL SimpleName@@algorithmName @AT@ 1267 @LENGTH@ 13
------------------INS SimpleName@@Name:algorithmName @TO@ MethodInvocation@@getAlgorithm().equals(algorithmName) @AT@ 1290 @LENGTH@ 13
------------------INS SimpleName@@MethodName:equals:[getAlgorithm()] @TO@ MethodInvocation@@getAlgorithm().equals(algorithmName) @AT@ 1304 @LENGTH@ 22
---------------------INS MethodInvocation@@MethodName:getAlgorithm:[] @TO@ SimpleName@@MethodName:equals:[getAlgorithm()] @AT@ 1311 @LENGTH@ 14
---------------INS InfixExpression@@algorithmName == null @TO@ InfixExpression@@algorithmName == null || algorithmName.equals(getAlgorithm()) @AT@ 1265 @LENGTH@ 21
------------------INS SimpleName@@algorithmName @TO@ InfixExpression@@algorithmName == null @AT@ 1265 @LENGTH@ 13
------------------INS Operator@@== @TO@ InfixExpression@@algorithmName == null @AT@ 1278 @LENGTH@ 2
------------------INS NullLiteral@@null @TO@ InfixExpression@@algorithmName == null @AT@ 1282 @LENGTH@ 4
---------------INS Operator@@|| @TO@ InfixExpression@@algorithmName == null || algorithmName.equals(getAlgorithm()) @AT@ 1286 @LENGTH@ 2


MOV IfStatement@@if (hasNamedParameter(jpaQuery)) {  return query.getBindingFor(methodParameter.getName());} @TO@ MethodDeclaration@@private, ParameterBinding, MethodName:getBindingFor, Query jpaQuery, int position, Parameter methodParameter,  @AT@ 2972 @LENGTH@ 98


UPD IfStatement@@if (objectToInsert instanceof PartialUpdate) {  doPartialUpdate((PartialUpdate<?>)objectToInsert);} @TO@ if (objectToInsert instanceof PartialUpdate) {  doPartialUpdate((PartialUpdate<?>)objectToInsert);  return;} @AT@ 4104 @LENGTH@ 105
---UPD Block@@ThenBody:{  doPartialUpdate((PartialUpdate<?>)objectToInsert);} @TO@ ThenBody:{  doPartialUpdate((PartialUpdate<?>)objectToInsert);  return;} @AT@ 4149 @LENGTH@ 60
------INS ReturnStatement@@ @TO@ Block@@ThenBody:{  doPartialUpdate((PartialUpdate<?>)objectToInsert);} @AT@ 4149 @LENGTH@ 7


INS IfStatement@@if (element.get().length == 0) {  connection.del(element.getKeyBytes());} else {  connection.set(element.getKeyBytes(),element.get());  processKeyExpiration(element,connection);  maintainKnownKeys(element,connection);} @TO@ MethodDeclaration@@public, Void, MethodName:doInRedis, BinaryRedisCacheElement element, RedisConnection connection, DataAccessException,  @AT@ 20507 @LENGTH@ 242
---INS InfixExpression@@element.get().length == 0 @TO@ IfStatement@@if (element.get().length == 0) {  connection.del(element.getKeyBytes());} else {  connection.set(element.getKeyBytes(),element.get());  processKeyExpiration(element,connection);  maintainKnownKeys(element,connection);} @AT@ 20511 @LENGTH@ 25
------INS FieldAccess@@element.get().length @TO@ InfixExpression@@element.get().length == 0 @AT@ 20511 @LENGTH@ 20
---------INS MethodInvocation@@element.get() @TO@ FieldAccess@@element.get().length @AT@ 20511 @LENGTH@ 13
------------INS SimpleName@@Name:element @TO@ MethodInvocation@@element.get() @AT@ 20511 @LENGTH@ 7
------------INS SimpleName@@MethodName:get:[] @TO@ MethodInvocation@@element.get() @AT@ 20519 @LENGTH@ 5
---------INS SimpleName@@length @TO@ FieldAccess@@element.get().length @AT@ 20525 @LENGTH@ 6
------INS Operator@@== @TO@ InfixExpression@@element.get().length == 0 @AT@ 20531 @LENGTH@ 2
------INS NumberLiteral@@0 @TO@ InfixExpression@@element.get().length == 0 @AT@ 20535 @LENGTH@ 1
---INS Block@@ThenBody:{  connection.del(element.getKeyBytes());} @TO@ IfStatement@@if (element.get().length == 0) {  connection.del(element.getKeyBytes());} else {  connection.set(element.getKeyBytes(),element.get());  processKeyExpiration(element,connection);  maintainKnownKeys(element,connection);} @AT@ 20538 @LENGTH@ 49
------INS ExpressionStatement@@MethodInvocation:connection.del(element.getKeyBytes()) @TO@ Block@@ThenBody:{  connection.del(element.getKeyBytes());} @AT@ 20544 @LENGTH@ 38
---------INS MethodInvocation@@connection.del(element.getKeyBytes()) @TO@ ExpressionStatement@@MethodInvocation:connection.del(element.getKeyBytes()) @AT@ 20544 @LENGTH@ 37
------------INS SimpleName@@Name:connection @TO@ MethodInvocation@@connection.del(element.getKeyBytes()) @AT@ 20544 @LENGTH@ 10
------------INS SimpleName@@MethodName:del:[element.getKeyBytes()] @TO@ MethodInvocation@@connection.del(element.getKeyBytes()) @AT@ 20555 @LENGTH@ 26
---------------INS MethodInvocation@@element.getKeyBytes() @TO@ SimpleName@@MethodName:del:[element.getKeyBytes()] @AT@ 20559 @LENGTH@ 21
------------------INS SimpleName@@Name:element @TO@ MethodInvocation@@element.getKeyBytes() @AT@ 20559 @LENGTH@ 7
------------------INS SimpleName@@MethodName:getKeyBytes:[] @TO@ MethodInvocation@@element.getKeyBytes() @AT@ 20567 @LENGTH@ 13
---INS Block@@ElseBody:{  connection.set(element.getKeyBytes(),element.get());  processKeyExpiration(element,connection);  maintainKnownKeys(element,connection);} @TO@ IfStatement@@if (element.get().length == 0) {  connection.del(element.getKeyBytes());} else {  connection.set(element.getKeyBytes(),element.get());  processKeyExpiration(element,connection);  maintainKnownKeys(element,connection);} @AT@ 20593 @LENGTH@ 156
------MOV ExpressionStatement@@MethodInvocation:connection.set(element.getKeyBytes(),element.get()) @TO@ Block@@ElseBody:{  connection.set(element.getKeyBytes(),element.get());  processKeyExpiration(element,connection);  maintainKnownKeys(element,connection);} @AT@ 20507 @LENGTH@ 53
------MOV ExpressionStatement@@MethodInvocation:processKeyExpiration(element,connection) @TO@ Block@@ElseBody:{  connection.set(element.getKeyBytes(),element.get());  processKeyExpiration(element,connection);  maintainKnownKeys(element,connection);} @AT@ 20565 @LENGTH@ 42
------MOV ExpressionStatement@@MethodInvocation:maintainKnownKeys(element,connection) @TO@ Block@@ElseBody:{  connection.set(element.getKeyBytes(),element.get());  processKeyExpiration(element,connection);  maintainKnownKeys(element,connection);} @AT@ 20611 @LENGTH@ 39


UPD ExpressionStatement@@MethodInvocation:configurator.qualifiers(annotation) @TO@ MethodInvocation:configurator.qualifiers(qualifiers) @AT@ 1441 @LENGTH@ 36


UPD TypeDeclaration@@[@Configuration, @EnableNeo4jRepositories("org.springframework.data.neo4j.examples.friends.repo"), @ComponentScan({"org.springframework.data.neo4j.examples.friends"}), @EnableTransactionManagement, public]FriendContext, Neo4jConfiguration @TO@ [@Configuration, @EnableNeo4jRepositories("org.springframework.data.neo4j.examples.friends.repo"), @ComponentScan(basePackageClasses=FriendService.class), @EnableTransactionManagement, public]FriendContext, Neo4jConfiguration @AT@ 1086 @LENGTH@ 423
---DEL SingleMemberAnnotation@@@ComponentScan({"org.springframework.data.neo4j.examples.friends"}) @AT@ 1182 @LENGTH@ 67
---INS NormalAnnotation@@@ComponentScan(basePackageClasses=FriendService.class) @TO@ TypeDeclaration@@[@Configuration, @EnableNeo4jRepositories("org.springframework.data.neo4j.examples.friends.repo"), @ComponentScan({"org.springframework.data.neo4j.examples.friends"}), @EnableTransactionManagement, public]FriendContext, Neo4jConfiguration @AT@ 1252 @LENGTH@ 56


UPD VariableDeclarationStatement@@List<?> content=((Stream<?>)result).collect(Collectors.toList()); @TO@ List<Object> content=((Stream<Object>)result).collect(Collectors.toList()); @AT@ 6964 @LENGTH@ 68
---UPD ParameterizedType@@List<?> @TO@ List<Object> @AT@ 6964 @LENGTH@ 7
------DEL WildcardType@@? @AT@ 6969 @LENGTH@ 1
------INS SimpleType@@Object @TO@ ParameterizedType@@List<?> @AT@ 7001 @LENGTH@ 6
---UPD VariableDeclarationFragment@@content=((Stream<?>)result).collect(Collectors.toList()) @TO@ content=((Stream<Object>)result).collect(Collectors.toList()) @AT@ 6972 @LENGTH@ 59
------UPD MethodInvocation@@((Stream<?>)result).collect(Collectors.toList()) @TO@ ((Stream<Object>)result).collect(Collectors.toList()) @AT@ 6982 @LENGTH@ 49
---------UPD ParenthesizedExpression@@((Stream<?>)result) @TO@ ((Stream<Object>)result) @AT@ 6982 @LENGTH@ 20
------------UPD CastExpression@@(Stream<?>)result @TO@ (Stream<Object>)result @AT@ 6983 @LENGTH@ 18
---------------UPD ParameterizedType@@Stream<?> @TO@ Stream<Object> @AT@ 6984 @LENGTH@ 9
------------------DEL WildcardType@@? @AT@ 6991 @LENGTH@ 1
------------------INS SimpleType@@Object @TO@ ParameterizedType@@Stream<?> @AT@ 7028 @LENGTH@ 6


INS TryStatement@@try (BufferedReader br=new BufferedReader(mr)){  br.readLine();  br.readLine();}  @TO@ MethodDeclaration@@public, void, MethodName:testReadBytesEOF, IOException,  @AT@ 5343 @LENGTH@ 118
---INS VariableDeclarationExpression@@BufferedReader br=new BufferedReader(mr) @TO@ TryStatement@@try (BufferedReader br=new BufferedReader(mr)){  br.readLine();  br.readLine();}  @AT@ 5349 @LENGTH@ 44
------INS SimpleType@@BufferedReader @TO@ VariableDeclarationExpression@@BufferedReader br=new BufferedReader(mr) @AT@ 5349 @LENGTH@ 14
------MOV VariableDeclarationFragment@@br=new BufferedReader(mr) @TO@ VariableDeclarationExpression@@BufferedReader br=new BufferedReader(mr) @AT@ 5358 @LENGTH@ 29
---MOV ExpressionStatement@@MethodInvocation:br.readLine() @TO@ TryStatement@@try (BufferedReader br=new BufferedReader(mr)){  br.readLine();  br.readLine();}  @AT@ 5397 @LENGTH@ 14
---MOV ExpressionStatement@@MethodInvocation:br.readLine() @TO@ TryStatement@@try (BufferedReader br=new BufferedReader(mr)){  br.readLine();  br.readLine();}  @AT@ 5420 @LENGTH@ 14


INS ExpressionStatement@@MethodInvocation:when(entityManager.getMetamodel()).thenReturn(metamodel) @TO@ MethodDeclaration@@public, void, MethodName:setUp,  @AT@ 2362 @LENGTH@ 57
---INS MethodInvocation@@when(entityManager.getMetamodel()).thenReturn(metamodel) @TO@ ExpressionStatement@@MethodInvocation:when(entityManager.getMetamodel()).thenReturn(metamodel) @AT@ 2362 @LENGTH@ 56
------INS MethodInvocation@@MethodName:when:[entityManager.getMetamodel()] @TO@ MethodInvocation@@when(entityManager.getMetamodel()).thenReturn(metamodel) @AT@ 2362 @LENGTH@ 34
---------INS MethodInvocation@@entityManager.getMetamodel() @TO@ MethodInvocation@@MethodName:when:[entityManager.getMetamodel()] @AT@ 2367 @LENGTH@ 28
------------INS SimpleName@@Name:entityManager @TO@ MethodInvocation@@entityManager.getMetamodel() @AT@ 2367 @LENGTH@ 13
------------INS SimpleName@@MethodName:getMetamodel:[] @TO@ MethodInvocation@@entityManager.getMetamodel() @AT@ 2381 @LENGTH@ 14
------INS SimpleName@@MethodName:thenReturn:[metamodel] @TO@ MethodInvocation@@when(entityManager.getMetamodel()).thenReturn(metamodel) @AT@ 2397 @LENGTH@ 21
---------INS SimpleName@@metamodel @TO@ SimpleName@@MethodName:thenReturn:[metamodel] @AT@ 2408 @LENGTH@ 9


UPD IfStatement@@if (elprop != null) System.setProperty("javax.el.ExpressionFactory",elprop); else System.clearProperty("javax.el.ExpressionFactory"); @TO@ if (elprop != null) {  System.setProperty("javax.el.ExpressionFactory",elprop);} else {  System.clearProperty("javax.el.ExpressionFactory");} @AT@ 6210 @LENGTH@ 178
---UPD Block@@ThenBody:System.setProperty("javax.el.ExpressionFactory",elprop); @TO@ ThenBody:{  System.setProperty("javax.el.ExpressionFactory",elprop);} @AT@ 6246 @LENGTH@ 57
---UPD Block@@ElseBody:System.clearProperty("javax.el.ExpressionFactory"); @TO@ ElseBody:{  System.clearProperty("javax.el.ExpressionFactory");} @AT@ 6337 @LENGTH@ 51


UPD TypeDeclaration@@[@Configuration, @ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration"), public]RmiComponentAutoConfiguration,  @TO@ [@Configuration, @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration"), public]RmiComponentAutoConfiguration,  @AT@ 1435 @LENGTH@ 589
---UPD NormalAnnotation@@@ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1450 @LENGTH@ 79
---UPD NormalAnnotation@@@AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1530 @LENGTH@ 80


UPD IfStatement@@if (authentication.getAuthorities().contains(requiredAuthority)) {  return;} @TO@ if (authorities.contains(requiredAuthority.getAuthority())) {  return;} @AT@ 4547 @LENGTH@ 81
---UPD MethodInvocation@@authentication.getAuthorities().contains(requiredAuthority) @TO@ authorities.contains(requiredAuthority.getAuthority()) @AT@ 4551 @LENGTH@ 59
------DEL MethodInvocation@@MethodName:getAuthorities:[] @AT@ 4551 @LENGTH@ 31
------UPD SimpleName@@Name:authentication @TO@ Name:authorities @AT@ 4551 @LENGTH@ 14
------UPD SimpleName@@MethodName:contains:[requiredAuthority] @TO@ MethodName:contains:[requiredAuthority.getAuthority()] @AT@ 4583 @LENGTH@ 27
---------DEL SimpleName@@requiredAuthority @AT@ 4592 @LENGTH@ 17
---------INS MethodInvocation@@requiredAuthority.getAuthority() @TO@ SimpleName@@MethodName:contains:[requiredAuthority] @AT@ 4757 @LENGTH@ 32
------------INS SimpleName@@Name:requiredAuthority @TO@ MethodInvocation@@requiredAuthority.getAuthority() @AT@ 4757 @LENGTH@ 17
------------INS SimpleName@@MethodName:getAuthority:[] @TO@ MethodInvocation@@requiredAuthority.getAuthority() @AT@ 4775 @LENGTH@ 14


UPD TypeDeclaration@@[@Configuration, @ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration"), @EnableConfigurationProperties(TarFileDataFormatConfiguration.class), public]TarFileDataFormatAutoConfiguration,  @TO@ [@Configuration, @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration"), @EnableConfigurationProperties(TarFileDataFormatConfiguration.class), public]TarFileDataFormatAutoConfiguration,  @AT@ 1674 @LENGTH@ 1135
---UPD NormalAnnotation@@@ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1689 @LENGTH@ 79
---UPD NormalAnnotation@@@AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1769 @LENGTH@ 80


INS ExpressionStatement@@MethodInvocation:when(em.getMetamodel()).thenReturn(metamodel) @TO@ MethodDeclaration@@public, void, MethodName:setUp,  @AT@ 2225 @LENGTH@ 46
---INS MethodInvocation@@when(em.getMetamodel()).thenReturn(metamodel) @TO@ ExpressionStatement@@MethodInvocation:when(em.getMetamodel()).thenReturn(metamodel) @AT@ 2225 @LENGTH@ 45
------INS MethodInvocation@@MethodName:when:[em.getMetamodel()] @TO@ MethodInvocation@@when(em.getMetamodel()).thenReturn(metamodel) @AT@ 2225 @LENGTH@ 23
---------INS MethodInvocation@@em.getMetamodel() @TO@ MethodInvocation@@MethodName:when:[em.getMetamodel()] @AT@ 2230 @LENGTH@ 17
------------INS SimpleName@@Name:em @TO@ MethodInvocation@@em.getMetamodel() @AT@ 2230 @LENGTH@ 2
------------INS SimpleName@@MethodName:getMetamodel:[] @TO@ MethodInvocation@@em.getMetamodel() @AT@ 2233 @LENGTH@ 14
------INS SimpleName@@MethodName:thenReturn:[metamodel] @TO@ MethodInvocation@@when(em.getMetamodel()).thenReturn(metamodel) @AT@ 2249 @LENGTH@ 21
---------INS SimpleName@@metamodel @TO@ SimpleName@@MethodName:thenReturn:[metamodel] @AT@ 2260 @LENGTH@ 9


UPD TypeDeclaration@@[@Configuration, @ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration"), @EnableConfigurationProperties(CsvDataFormatConfiguration.class), public]CsvDataFormatAutoConfiguration,  @TO@ [@Configuration, @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration"), @EnableConfigurationProperties(CsvDataFormatConfiguration.class), public]CsvDataFormatAutoConfiguration,  @AT@ 1662 @LENGTH@ 1086
---UPD NormalAnnotation@@@ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1677 @LENGTH@ 79
---UPD NormalAnnotation@@@AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1757 @LENGTH@ 80


UPD TypeDeclaration@@[@Configuration, @ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration"), @EnableConfigurationProperties(SerializationDataFormatConfiguration.class), public]SerializationDataFormatAutoConfiguration,  @TO@ [@Configuration, @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration"), @EnableConfigurationProperties(SerializationDataFormatConfiguration.class), public]SerializationDataFormatAutoConfiguration,  @AT@ 1652 @LENGTH@ 1201
---UPD NormalAnnotation@@@ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1667 @LENGTH@ 79
---UPD NormalAnnotation@@@AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1747 @LENGTH@ 80


MOV ExpressionStatement@@MethodInvocation:RabbitUtils.setPhysicalCloseRequired(true) @TO@ MethodDeclaration@@private, void, MethodName:removeConsumer,  @AT@ 12103 @LENGTH@ 43


INS FieldDeclaration@@InitialContext, [context] @TO@ TypeDeclaration@@[@RunWith(Arquillian.class), public]JPAArquillianTest,  @AT@ 1770 @LENGTH@ 23
---INS SimpleType@@InitialContext @TO@ FieldDeclaration@@InitialContext, [context] @AT@ 1770 @LENGTH@ 14
---INS VariableDeclarationFragment@@context @TO@ FieldDeclaration@@InitialContext, [context] @AT@ 1785 @LENGTH@ 7
------INS SimpleName@@context @TO@ VariableDeclarationFragment@@context @AT@ 1785 @LENGTH@ 7


UPD TypeDeclaration@@[@Configuration, @ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration"), public]XmlRpcComponentAutoConfiguration,  @TO@ [@Configuration, @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration"), public]XmlRpcComponentAutoConfiguration,  @AT@ 1444 @LENGTH@ 610
---UPD NormalAnnotation@@@ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1459 @LENGTH@ 79
---UPD NormalAnnotation@@@AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1539 @LENGTH@ 80


UPD TypeDeclaration@@[@Configuration, @ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration"), @EnableConfigurationProperties(GroovyLanguageConfiguration.class), public]GroovyLanguageAutoConfiguration,  @TO@ [@Configuration, @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration"), @EnableConfigurationProperties(GroovyLanguageConfiguration.class), public]GroovyLanguageAutoConfiguration,  @AT@ 1665 @LENGTH@ 1085
---UPD NormalAnnotation@@@ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1680 @LENGTH@ 79
---UPD NormalAnnotation@@@AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1760 @LENGTH@ 80


INS MethodDeclaration@@public, void, MethodName:cachePutWithNullShouldRemoveKeyIfExists,  @TO@ TypeDeclaration@@[@SuppressWarnings("rawtypes"), @RunWith(Parameterized.class), public]RedisCacheTest, AbstractNativeCacheTest<RedisTemplate> @AT@ 8003 @LENGTH@ 269
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:cachePutWithNullShouldRemoveKeyIfExists,  @AT@ 8003 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:cachePutWithNullShouldRemoveKeyIfExists,  @AT@ 8010 @LENGTH@ 4
---INS SimpleName@@MethodName:cachePutWithNullShouldRemoveKeyIfExists @TO@ MethodDeclaration@@public, void, MethodName:cachePutWithNullShouldRemoveKeyIfExists,  @AT@ 8015 @LENGTH@ 39
---INS VariableDeclarationStatement@@Object key=getKey(); @TO@ MethodDeclaration@@public, void, MethodName:cachePutWithNullShouldRemoveKeyIfExists,  @AT@ 8062 @LENGTH@ 22
------INS SimpleType@@Object @TO@ VariableDeclarationStatement@@Object key=getKey(); @AT@ 8062 @LENGTH@ 6
------INS VariableDeclarationFragment@@key=getKey() @TO@ VariableDeclarationStatement@@Object key=getKey(); @AT@ 8069 @LENGTH@ 14
---------INS SimpleName@@key @TO@ VariableDeclarationFragment@@key=getKey() @AT@ 8069 @LENGTH@ 3
---------INS MethodInvocation@@MethodName:getKey:[] @TO@ VariableDeclarationFragment@@key=getKey() @AT@ 8075 @LENGTH@ 8
---INS VariableDeclarationStatement@@Object value=getValue(); @TO@ MethodDeclaration@@public, void, MethodName:cachePutWithNullShouldRemoveKeyIfExists,  @AT@ 8087 @LENGTH@ 26
------INS SimpleType@@Object @TO@ VariableDeclarationStatement@@Object value=getValue(); @AT@ 8087 @LENGTH@ 6
------INS VariableDeclarationFragment@@value=getValue() @TO@ VariableDeclarationStatement@@Object value=getValue(); @AT@ 8094 @LENGTH@ 18
---------INS SimpleName@@value @TO@ VariableDeclarationFragment@@value=getValue() @AT@ 8094 @LENGTH@ 5
---------INS MethodInvocation@@MethodName:getValue:[] @TO@ VariableDeclarationFragment@@value=getValue() @AT@ 8102 @LENGTH@ 10
---INS ExpressionStatement@@MethodInvocation:cache.put(key,value) @TO@ MethodDeclaration@@public, void, MethodName:cachePutWithNullShouldRemoveKeyIfExists,  @AT@ 8117 @LENGTH@ 22
------INS MethodInvocation@@cache.put(key,value) @TO@ ExpressionStatement@@MethodInvocation:cache.put(key,value) @AT@ 8117 @LENGTH@ 21
---------INS SimpleName@@Name:cache @TO@ MethodInvocation@@cache.put(key,value) @AT@ 8117 @LENGTH@ 5
---------INS SimpleName@@MethodName:put:[key, value] @TO@ MethodInvocation@@cache.put(key,value) @AT@ 8123 @LENGTH@ 15
------------INS SimpleName@@key @TO@ SimpleName@@MethodName:put:[key, value] @AT@ 8127 @LENGTH@ 3
------------INS SimpleName@@value @TO@ SimpleName@@MethodName:put:[key, value] @AT@ 8132 @LENGTH@ 5
---INS ExpressionStatement@@MethodInvocation:assertThat(cache.get(key).get(),is(equalTo(value))) @TO@ MethodDeclaration@@public, void, MethodName:cachePutWithNullShouldRemoveKeyIfExists,  @AT@ 8143 @LENGTH@ 53
------INS MethodInvocation@@assertThat(cache.get(key).get(),is(equalTo(value))) @TO@ ExpressionStatement@@MethodInvocation:assertThat(cache.get(key).get(),is(equalTo(value))) @AT@ 8143 @LENGTH@ 52
---------INS SimpleName@@MethodName:assertThat:[cache.get(key).get(), is(equalTo(value))] @TO@ MethodInvocation@@assertThat(cache.get(key).get(),is(equalTo(value))) @AT@ 8143 @LENGTH@ 52
------------INS MethodInvocation@@cache.get(key).get() @TO@ SimpleName@@MethodName:assertThat:[cache.get(key).get(), is(equalTo(value))] @AT@ 8154 @LENGTH@ 20
---------------INS MethodInvocation@@MethodName:get:[key] @TO@ MethodInvocation@@cache.get(key).get() @AT@ 8154 @LENGTH@ 14
------------------INS SimpleName@@key @TO@ MethodInvocation@@MethodName:get:[key] @AT@ 8164 @LENGTH@ 3
---------------INS SimpleName@@Name:cache @TO@ MethodInvocation@@cache.get(key).get() @AT@ 8154 @LENGTH@ 5
---------------INS SimpleName@@MethodName:get:[] @TO@ MethodInvocation@@cache.get(key).get() @AT@ 8169 @LENGTH@ 5
------------INS MethodInvocation@@is(equalTo(value)) @TO@ SimpleName@@MethodName:assertThat:[cache.get(key).get(), is(equalTo(value))] @AT@ 8176 @LENGTH@ 18
---------------INS SimpleName@@MethodName:is:[equalTo(value)] @TO@ MethodInvocation@@is(equalTo(value)) @AT@ 8176 @LENGTH@ 18
------------------INS MethodInvocation@@equalTo(value) @TO@ SimpleName@@MethodName:is:[equalTo(value)] @AT@ 8179 @LENGTH@ 14
---------------------INS SimpleName@@MethodName:equalTo:[value] @TO@ MethodInvocation@@equalTo(value) @AT@ 8179 @LENGTH@ 14
------------------------INS SimpleName@@value @TO@ SimpleName@@MethodName:equalTo:[value] @AT@ 8187 @LENGTH@ 5
---------------------INS SimpleName@@MethodName:equalTo:[value] @TO@ MethodInvocation@@equalTo(value) @AT@ 8179 @LENGTH@ 14
------------------------INS SimpleName@@value @TO@ SimpleName@@MethodName:equalTo:[value] @AT@ 8187 @LENGTH@ 5
---------------------INS SimpleName@@MethodName:equalTo:[value] @TO@ MethodInvocation@@equalTo(value) @AT@ 8179 @LENGTH@ 14
------------------------INS SimpleName@@value @TO@ SimpleName@@MethodName:equalTo:[value] @AT@ 8187 @LENGTH@ 5
---------------------INS SimpleName@@MethodName:equalTo:[value] @TO@ MethodInvocation@@equalTo(value) @AT@ 8179 @LENGTH@ 14
------------------------INS SimpleName@@value @TO@ SimpleName@@MethodName:equalTo:[value] @AT@ 8187 @LENGTH@ 5
---------------------INS SimpleName@@MethodName:equalTo:[value] @TO@ MethodInvocation@@equalTo(value) @AT@ 8179 @LENGTH@ 14
------------------------INS SimpleName@@value @TO@ SimpleName@@MethodName:equalTo:[value] @AT@ 8187 @LENGTH@ 5
---------------INS SimpleName@@MethodName:is:[equalTo(value)] @TO@ MethodInvocation@@is(equalTo(value)) @AT@ 8176 @LENGTH@ 18
------------------INS MethodInvocation@@equalTo(value) @TO@ SimpleName@@MethodName:is:[equalTo(value)] @AT@ 8179 @LENGTH@ 14
---------------------INS SimpleName@@MethodName:equalTo:[value] @TO@ MethodInvocation@@equalTo(value) @AT@ 8179 @LENGTH@ 14
------------------------INS SimpleName@@value @TO@ SimpleName@@MethodName:equalTo:[value] @AT@ 8187 @LENGTH@ 5
---------------------INS SimpleName@@MethodName:equalTo:[value] @TO@ MethodInvocation@@equalTo(value) @AT@ 8179 @LENGTH@ 14
------------------------INS SimpleName@@value @TO@ SimpleName@@MethodName:equalTo:[value] @AT@ 8187 @LENGTH@ 5
---------------------INS SimpleName@@MethodName:equalTo:[value] @TO@ MethodInvocation@@equalTo(value) @AT@ 8179 @LENGTH@ 14
------------------------INS SimpleName@@value @TO@ SimpleName@@MethodName:equalTo:[value] @AT@ 8187 @LENGTH@ 5
---------------------INS SimpleName@@MethodName:equalTo:[value] @TO@ MethodInvocation@@equalTo(value) @AT@ 8179 @LENGTH@ 14
------------------------INS SimpleName@@value @TO@ SimpleName@@MethodName:equalTo:[value] @AT@ 8187 @LENGTH@ 5
---------------------INS SimpleName@@MethodName:equalTo:[value] @TO@ MethodInvocation@@equalTo(value) @AT@ 8179 @LENGTH@ 14
------------------------INS SimpleName@@value @TO@ SimpleName@@MethodName:equalTo:[value] @AT@ 8187 @LENGTH@ 5
---INS ExpressionStatement@@MethodInvocation:cache.put(key,null) @TO@ MethodDeclaration@@public, void, MethodName:cachePutWithNullShouldRemoveKeyIfExists,  @AT@ 8200 @LENGTH@ 21
------INS MethodInvocation@@cache.put(key,null) @TO@ ExpressionStatement@@MethodInvocation:cache.put(key,null) @AT@ 8200 @LENGTH@ 20
---------INS SimpleName@@Name:cache @TO@ MethodInvocation@@cache.put(key,null) @AT@ 8200 @LENGTH@ 5
---------INS SimpleName@@MethodName:put:[key, null] @TO@ MethodInvocation@@cache.put(key,null) @AT@ 8206 @LENGTH@ 14
------------INS SimpleName@@key @TO@ SimpleName@@MethodName:put:[key, null] @AT@ 8210 @LENGTH@ 3
------------INS NullLiteral@@null @TO@ SimpleName@@MethodName:put:[key, null] @AT@ 8215 @LENGTH@ 4
---INS ExpressionStatement@@MethodInvocation:assertThat(cache.get(key),is(nullValue())) @TO@ MethodDeclaration@@public, void, MethodName:cachePutWithNullShouldRemoveKeyIfExists,  @AT@ 8225 @LENGTH@ 44
------INS MethodInvocation@@assertThat(cache.get(key),is(nullValue())) @TO@ ExpressionStatement@@MethodInvocation:assertThat(cache.get(key),is(nullValue())) @AT@ 8225 @LENGTH@ 43
---------INS SimpleName@@MethodName:assertThat:[cache.get(key), is(nullValue())] @TO@ MethodInvocation@@assertThat(cache.get(key),is(nullValue())) @AT@ 8225 @LENGTH@ 43
------------INS MethodInvocation@@cache.get(key) @TO@ SimpleName@@MethodName:assertThat:[cache.get(key), is(nullValue())] @AT@ 8236 @LENGTH@ 14
---------------INS SimpleName@@Name:cache @TO@ MethodInvocation@@cache.get(key) @AT@ 8236 @LENGTH@ 5
---------------INS SimpleName@@MethodName:get:[key] @TO@ MethodInvocation@@cache.get(key) @AT@ 8242 @LENGTH@ 8
------------------INS SimpleName@@key @TO@ SimpleName@@MethodName:get:[key] @AT@ 8246 @LENGTH@ 3
------------INS MethodInvocation@@is(nullValue()) @TO@ SimpleName@@MethodName:assertThat:[cache.get(key), is(nullValue())] @AT@ 8252 @LENGTH@ 15
---------------INS SimpleName@@MethodName:is:[nullValue()] @TO@ MethodInvocation@@is(nullValue()) @AT@ 8252 @LENGTH@ 15
------------------INS MethodInvocation@@MethodName:nullValue:[] @TO@ SimpleName@@MethodName:is:[nullValue()] @AT@ 8255 @LENGTH@ 11


UPD TypeDeclaration@@[@Configuration, @ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration"), @EnableConfigurationProperties(StompComponentConfiguration.class), public]StompComponentAutoConfiguration,  @TO@ [@Configuration, @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration"), @EnableConfigurationProperties(StompComponentConfiguration.class), public]StompComponentAutoConfiguration,  @AT@ 1622 @LENGTH@ 2048
---UPD NormalAnnotation@@@ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1637 @LENGTH@ 79
---UPD NormalAnnotation@@@AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1717 @LENGTH@ 80


UPD TypeDeclaration@@[@Configuration, @ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration"), @EnableConfigurationProperties(XmlSignatureComponentConfiguration.class), public]XmlSignatureComponentAutoConfiguration,  @TO@ [@Configuration, @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration"), @EnableConfigurationProperties(XmlSignatureComponentConfiguration.class), public]XmlSignatureComponentAutoConfiguration,  @AT@ 1641 @LENGTH@ 2123
---UPD NormalAnnotation@@@ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1656 @LENGTH@ 79
---UPD NormalAnnotation@@@AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1736 @LENGTH@ 80


UPD FieldDeclaration@@private, Map<String,Object>, [headers=null] @TO@ private, Map<String,Object>, [headers] @AT@ 1184 @LENGTH@ 43
---UPD VariableDeclarationFragment@@headers=null @TO@ headers @AT@ 1212 @LENGTH@ 14
------DEL NullLiteral@@null @AT@ 1222 @LENGTH@ 4


UPD MethodDeclaration@@public, void, MethodName:init,  @TO@ public, void, MethodName:clearDatabase,  @AT@ 1723 @LENGTH@ 59
---UPD SimpleName@@MethodName:init @TO@ MethodName:clearDatabase @AT@ 1735 @LENGTH@ 4
---UPD ExpressionStatement@@MethodInvocation:session.purgeDatabase() @TO@ MethodInvocation:graphDatabaseService.execute("MATCH (n) OPTIONAL MATCH (n)-[r]-() DELETE r, n") @AT@ 1752 @LENGTH@ 24
------UPD MethodInvocation@@session.purgeDatabase() @TO@ graphDatabaseService.execute("MATCH (n) OPTIONAL MATCH (n)-[r]-() DELETE r, n") @AT@ 1752 @LENGTH@ 23
---------UPD SimpleName@@Name:session @TO@ Name:graphDatabaseService @AT@ 1752 @LENGTH@ 7
---------UPD SimpleName@@MethodName:purgeDatabase:[] @TO@ MethodName:execute:["MATCH (n) OPTIONAL MATCH (n)-[r]-() DELETE r, n"] @AT@ 1760 @LENGTH@ 15
------------INS StringLiteral@@"MATCH (n) OPTIONAL MATCH (n)-[r]-() DELETE r, n" @TO@ SimpleName@@MethodName:purgeDatabase:[] @AT@ 1768 @LENGTH@ 49


DEL VariableDeclarationStatement@@List<FieldMetadata> allFormBeanFields=getMemberDetailsScanner().getMemberDetails(this.getClass().getName(),getTypeLocationService().getTypeDetails(formBeanType)).getFields(); @AT@ 11639 @LENGTH@ 197
---DEL ParameterizedType@@List<FieldMetadata> @AT@ 11639 @LENGTH@ 19
------DEL SimpleType@@List @AT@ 11639 @LENGTH@ 4
------DEL SimpleType@@FieldMetadata @AT@ 11644 @LENGTH@ 13
---DEL VariableDeclarationFragment@@allFormBeanFields=getMemberDetailsScanner().getMemberDetails(this.getClass().getName(),getTypeLocationService().getTypeDetails(formBeanType)).getFields() @AT@ 11659 @LENGTH@ 176
------DEL SimpleName@@allFormBeanFields @AT@ 11659 @LENGTH@ 17


UPD TryStatement@@try {  if (!isRunning()) {    if (this.logger.isWarnEnabled()) {      this.logger.warn("Rejecting received message because the listener container has been stopped: " + message);    }    throw new MessageRejectedWhileStoppingException();  }  invokeListener(getChannel(),message);  if (this.ackRequired) {    getChannel().basicAck(envelope.getDeliveryTag(),false);  }} catch (Exception e) {  this.logger.error("Failed to invoke listener",e);  boolean shouldRequeue=isDefaultRequeueRejected() || e instanceof MessageRejectedWhileStoppingException;  Throwable t=e;  while (shouldRequeue && t != null) {    if (t instanceof AmqpRejectAndDontRequeueException) {      shouldRequeue=false;    }    t=t.getCause();  }  if (this.ackRequired) {    getChannel().basicNack(envelope.getDeliveryTag(),false,shouldRequeue);  }} @TO@ try {  executeListener(getChannel(),message);  if (this.ackRequired) {    getChannel().basicAck(envelope.getDeliveryTag(),false);  }} catch (Exception e) {  this.logger.error("Failed to invoke listener",e);  boolean shouldRequeue=isDefaultRequeueRejected() || e instanceof MessageRejectedWhileStoppingException;  Throwable t=e;  while (shouldRequeue && t != null) {    if (t instanceof AmqpRejectAndDontRequeueException) {      shouldRequeue=false;    }    t=t.getCause();  }  if (this.ackRequired) {    getChannel().basicNack(envelope.getDeliveryTag(),false,shouldRequeue);  }} @AT@ 14664 @LENGTH@ 903
---DEL IfStatement@@if (!isRunning()) {  if (this.logger.isWarnEnabled()) {    this.logger.warn("Rejecting received message because the listener container has been stopped: " + message);  }  throw new MessageRejectedWhileStoppingException();} @AT@ 14674 @LENGTH@ 250
------DEL PrefixExpression@@!isRunning() @AT@ 14678 @LENGTH@ 12
---------DEL Operator@@! @AT@ 14678 @LENGTH@ 1
---------DEL MethodInvocation@@MethodName:isRunning:[] @AT@ 14679 @LENGTH@ 11
------DEL Block@@ThenBody:{  if (this.logger.isWarnEnabled()) {    this.logger.warn("Rejecting received message because the listener container has been stopped: " + message);  }  throw new MessageRejectedWhileStoppingException();} @AT@ 14692 @LENGTH@ 232
---------DEL IfStatement@@if (this.logger.isWarnEnabled()) {  this.logger.warn("Rejecting received message because the listener container has been stopped: " + message);} @AT@ 14699 @LENGTH@ 163
------------DEL MethodInvocation@@this.logger.isWarnEnabled() @AT@ 14703 @LENGTH@ 27
---------------DEL FieldAccess@@this.logger @AT@ 14703 @LENGTH@ 11
------------------DEL ThisExpression@@this @AT@ 14703 @LENGTH@ 4
------------------DEL SimpleName@@logger @AT@ 14708 @LENGTH@ 6
---------------DEL SimpleName@@MethodName:isWarnEnabled:[] @AT@ 14715 @LENGTH@ 15
------------DEL Block@@ThenBody:{  this.logger.warn("Rejecting received message because the listener container has been stopped: " + message);} @AT@ 14732 @LENGTH@ 130
---------------DEL ExpressionStatement@@MethodInvocation:this.logger.warn("Rejecting received message because the listener container has been stopped: " + message) @AT@ 14740 @LENGTH@ 115
------------------DEL MethodInvocation@@this.logger.warn("Rejecting received message because the listener container has been stopped: " + message) @AT@ 14740 @LENGTH@ 114
---------------------DEL FieldAccess@@this.logger @AT@ 14740 @LENGTH@ 11
------------------------DEL ThisExpression@@this @AT@ 14740 @LENGTH@ 4
------------------------DEL SimpleName@@logger @AT@ 14745 @LENGTH@ 6
---------------------DEL SimpleName@@MethodName:warn:["Rejecting received message because the listener container has been stopped: " + message] @AT@ 14752 @LENGTH@ 102
------------------------DEL InfixExpression@@"Rejecting received message because the listener container has been stopped: " + message @AT@ 14757 @LENGTH@ 96
---------------------------DEL StringLiteral@@"Rejecting received message because the listener container has been stopped: " @AT@ 14757 @LENGTH@ 78
---------------------------DEL Operator@@+ @AT@ 14835 @LENGTH@ 1
---------------------------DEL SimpleName@@message @AT@ 14846 @LENGTH@ 7
---------DEL ThrowStatement@@ClassInstanceCreation:new MessageRejectedWhileStoppingException() @AT@ 14868 @LENGTH@ 50
------------DEL ClassInstanceCreation@@MessageRejectedWhileStoppingException[] @AT@ 14874 @LENGTH@ 43
---------------DEL New@@new @AT@ 14874 @LENGTH@ 3
---------------DEL SimpleType@@MessageRejectedWhileStoppingException @AT@ 14878 @LENGTH@ 37
---UPD ExpressionStatement@@MethodInvocation:invokeListener(getChannel(),message) @TO@ MethodInvocation:executeListener(getChannel(),message) @AT@ 14929 @LENGTH@ 38
------UPD MethodInvocation@@invokeListener(getChannel(),message) @TO@ executeListener(getChannel(),message) @AT@ 14929 @LENGTH@ 37
---------UPD SimpleName@@MethodName:invokeListener:[getChannel(), message] @TO@ MethodName:executeListener:[getChannel(), message] @AT@ 14929 @LENGTH@ 37


INS MethodDeclaration@@public, void, MethodName:testNoCipher, Exception,  @TO@ TypeDeclaration@@[public]CryptoCipherFactoryTest,  @AT@ 2842 @LENGTH@ 359
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testNoCipher, Exception,  @AT@ 2842 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testNoCipher, Exception,  @AT@ 2849 @LENGTH@ 4
---INS SimpleName@@MethodName:testNoCipher @TO@ MethodDeclaration@@public, void, MethodName:testNoCipher, Exception,  @AT@ 2854 @LENGTH@ 12
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:testNoCipher, Exception,  @AT@ 2876 @LENGTH@ 9
---INS VariableDeclarationStatement@@Properties properties=new Properties(); @TO@ MethodDeclaration@@public, void, MethodName:testNoCipher, Exception,  @AT@ 2896 @LENGTH@ 41
------INS SimpleType@@Properties @TO@ VariableDeclarationStatement@@Properties properties=new Properties(); @AT@ 2896 @LENGTH@ 10
------INS VariableDeclarationFragment@@properties=new Properties() @TO@ VariableDeclarationStatement@@Properties properties=new Properties(); @AT@ 2907 @LENGTH@ 29
---------INS SimpleName@@properties @TO@ VariableDeclarationFragment@@properties=new Properties() @AT@ 2907 @LENGTH@ 10
---------INS ClassInstanceCreation@@Properties[] @TO@ VariableDeclarationFragment@@properties=new Properties() @AT@ 2920 @LENGTH@ 16
------------INS New@@new @TO@ ClassInstanceCreation@@Properties[] @AT@ 2920 @LENGTH@ 3
------------INS SimpleType@@Properties @TO@ ClassInstanceCreation@@Properties[] @AT@ 2924 @LENGTH@ 10
---INS ExpressionStatement@@MethodInvocation:properties.setProperty(CryptoCipherFactory.CLASSES_KEY,",") @TO@ MethodDeclaration@@public, void, MethodName:testNoCipher, Exception,  @AT@ 3056 @LENGTH@ 61
------INS MethodInvocation@@properties.setProperty(CryptoCipherFactory.CLASSES_KEY,",") @TO@ ExpressionStatement@@MethodInvocation:properties.setProperty(CryptoCipherFactory.CLASSES_KEY,",") @AT@ 3056 @LENGTH@ 60
---------INS SimpleName@@Name:properties @TO@ MethodInvocation@@properties.setProperty(CryptoCipherFactory.CLASSES_KEY,",") @AT@ 3056 @LENGTH@ 10
---------INS SimpleName@@MethodName:setProperty:[CryptoCipherFactory.CLASSES_KEY, ","] @TO@ MethodInvocation@@properties.setProperty(CryptoCipherFactory.CLASSES_KEY,",") @AT@ 3067 @LENGTH@ 49
------------INS QualifiedName@@CryptoCipherFactory.CLASSES_KEY @TO@ SimpleName@@MethodName:setProperty:[CryptoCipherFactory.CLASSES_KEY, ","] @AT@ 3079 @LENGTH@ 31
---------------INS SimpleName@@CryptoCipherFactory @TO@ QualifiedName@@CryptoCipherFactory.CLASSES_KEY @AT@ 3079 @LENGTH@ 19
---------------INS SimpleName@@CLASSES_KEY @TO@ QualifiedName@@CryptoCipherFactory.CLASSES_KEY @AT@ 3099 @LENGTH@ 11
------------INS StringLiteral@@"," @TO@ SimpleName@@MethodName:setProperty:[CryptoCipherFactory.CLASSES_KEY, ","] @AT@ 3112 @LENGTH@ 3
---INS ExpressionStatement@@MethodInvocation:CryptoCipherFactory.getCryptoCipher("AES/CBC/NoPadding",properties) @TO@ MethodDeclaration@@public, void, MethodName:testNoCipher, Exception,  @AT@ 3126 @LENGTH@ 69
------INS MethodInvocation@@CryptoCipherFactory.getCryptoCipher("AES/CBC/NoPadding",properties) @TO@ ExpressionStatement@@MethodInvocation:CryptoCipherFactory.getCryptoCipher("AES/CBC/NoPadding",properties) @AT@ 3126 @LENGTH@ 68
---------INS SimpleName@@Name:CryptoCipherFactory @TO@ MethodInvocation@@CryptoCipherFactory.getCryptoCipher("AES/CBC/NoPadding",properties) @AT@ 3126 @LENGTH@ 19
---------INS SimpleName@@MethodName:getCryptoCipher:["AES/CBC/NoPadding", properties] @TO@ MethodInvocation@@CryptoCipherFactory.getCryptoCipher("AES/CBC/NoPadding",properties) @AT@ 3146 @LENGTH@ 48
------------INS StringLiteral@@"AES/CBC/NoPadding" @TO@ SimpleName@@MethodName:getCryptoCipher:["AES/CBC/NoPadding", properties] @AT@ 3162 @LENGTH@ 19
------------INS SimpleName@@properties @TO@ SimpleName@@MethodName:getCryptoCipher:["AES/CBC/NoPadding", properties] @AT@ 3183 @LENGTH@ 10


UPD MethodDeclaration@@RuntimeException, MethodName:fractionHasMultipleExtensions, @Transform(Transform.TransformType.GET_CLASS) String className, Collection<Extension> extensions,  @TO@ RuntimeException, MethodName:fractionHasMultipleExtensions, @Transform(Transform.TransformType.GET_CLASS) String className, Collection<String> extensions,  @AT@ 2969 @LENGTH@ 128
---UPD SingleVariableDeclaration@@Collection<Extension> extensions @TO@ Collection<String> extensions @AT@ 3063 @LENGTH@ 32
------UPD ParameterizedType@@Collection<Extension> @TO@ Collection<String> @AT@ 3063 @LENGTH@ 21
---------UPD SimpleType@@Extension @TO@ String @AT@ 3074 @LENGTH@ 9


UPD VariableDeclarationStatement@@final AuthenticationContext authenticationContext=AuthenticationContext.empty().with(MatchRule.ALL,AuthenticationConfiguration.EMPTY.useCallbackHandler(new AuthenticationCallbackHandler(username,password))); @TO@ final AuthenticationContext authenticationContext=AuthenticationContext.empty().with(MatchRule.ALL,AuthenticationConfiguration.EMPTY.useCallbackHandler(new AuthenticationCallbackHandler(username,password)).allowSaslMechanisms("JBOSS-LOCAL-USER","DIGEST-MD5")); @AT@ 13469 @LENGTH@ 310
---UPD VariableDeclarationFragment@@authenticationContext=AuthenticationContext.empty().with(MatchRule.ALL,AuthenticationConfiguration.EMPTY.useCallbackHandler(new AuthenticationCallbackHandler(username,password))) @TO@ authenticationContext=AuthenticationContext.empty().with(MatchRule.ALL,AuthenticationConfiguration.EMPTY.useCallbackHandler(new AuthenticationCallbackHandler(username,password)).allowSaslMechanisms("JBOSS-LOCAL-USER","DIGEST-MD5")) @AT@ 13497 @LENGTH@ 281
------UPD MethodInvocation@@AuthenticationContext.empty().with(MatchRule.ALL,AuthenticationConfiguration.EMPTY.useCallbackHandler(new AuthenticationCallbackHandler(username,password))) @TO@ AuthenticationContext.empty().with(MatchRule.ALL,AuthenticationConfiguration.EMPTY.useCallbackHandler(new AuthenticationCallbackHandler(username,password)).allowSaslMechanisms("JBOSS-LOCAL-USER","DIGEST-MD5")) @AT@ 13521 @LENGTH@ 257
---------UPD SimpleName@@MethodName:with:[MatchRule.ALL, AuthenticationConfiguration.EMPTY.useCallbackHandler(new AuthenticationCallbackHandler(username,password))] @TO@ MethodName:with:[MatchRule.ALL, AuthenticationConfiguration.EMPTY.useCallbackHandler(new AuthenticationCallbackHandler(username,password)).allowSaslMechanisms("JBOSS-LOCAL-USER","DIGEST-MD5")] @AT@ 13568 @LENGTH@ 210
------------UPD MethodInvocation@@AuthenticationConfiguration.EMPTY.useCallbackHandler(new AuthenticationCallbackHandler(username,password)) @TO@ AuthenticationConfiguration.EMPTY.useCallbackHandler(new AuthenticationCallbackHandler(username,password)).allowSaslMechanisms("JBOSS-LOCAL-USER","DIGEST-MD5") @AT@ 13637 @LENGTH@ 140
---------------INS MethodInvocation@@MethodName:useCallbackHandler:[new AuthenticationCallbackHandler(username,password)] @TO@ MethodInvocation@@AuthenticationConfiguration.EMPTY.useCallbackHandler(new AuthenticationCallbackHandler(username,password)) @AT@ 13498 @LENGTH@ 140
------------------INS ClassInstanceCreation@@AuthenticationCallbackHandler[username, password] @TO@ MethodInvocation@@MethodName:useCallbackHandler:[new AuthenticationCallbackHandler(username,password)] @AT@ 13584 @LENGTH@ 53
---------------------MOV New@@new @TO@ ClassInstanceCreation@@AuthenticationCallbackHandler[username, password] @AT@ 13723 @LENGTH@ 3
---------------------MOV SimpleType@@AuthenticationCallbackHandler @TO@ ClassInstanceCreation@@AuthenticationCallbackHandler[username, password] @AT@ 13727 @LENGTH@ 29
---------------------MOV SimpleName@@username @TO@ ClassInstanceCreation@@AuthenticationCallbackHandler[username, password] @AT@ 13757 @LENGTH@ 8
---------------------MOV SimpleName@@password @TO@ ClassInstanceCreation@@AuthenticationCallbackHandler[username, password] @AT@ 13767 @LENGTH@ 8
---------------INS SimpleName@@MethodName:allowSaslMechanisms:["JBOSS-LOCAL-USER", "DIGEST-MD5"] @TO@ MethodInvocation@@AuthenticationConfiguration.EMPTY.useCallbackHandler(new AuthenticationCallbackHandler(username,password)) @AT@ 13672 @LENGTH@ 53
------------------INS StringLiteral@@"JBOSS-LOCAL-USER" @TO@ SimpleName@@MethodName:allowSaslMechanisms:["JBOSS-LOCAL-USER", "DIGEST-MD5"] @AT@ 13692 @LENGTH@ 18
------------------INS StringLiteral@@"DIGEST-MD5" @TO@ SimpleName@@MethodName:allowSaslMechanisms:["JBOSS-LOCAL-USER", "DIGEST-MD5"] @AT@ 13712 @LENGTH@ 12
---------------DEL SimpleName@@MethodName:useCallbackHandler:[new AuthenticationCallbackHandler(username,password)] @AT@ 13704 @LENGTH@ 73
------------------DEL ClassInstanceCreation@@AuthenticationCallbackHandler[username, password] @AT@ 13723 @LENGTH@ 53


UPD TypeDeclaration@@[@Configuration, @ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration"), @EnableConfigurationProperties(NettyComponentConfiguration.class), public]NettyComponentAutoConfiguration,  @TO@ [@Configuration, @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration"), @EnableConfigurationProperties(NettyComponentConfiguration.class), public]NettyComponentAutoConfiguration,  @AT@ 1624 @LENGTH@ 2049
---UPD NormalAnnotation@@@ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1639 @LENGTH@ 79
---UPD NormalAnnotation@@@AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1719 @LENGTH@ 80


INS MethodDeclaration@@public, String, MethodName:toString,  @TO@ TypeDeclaration@@[public]TableDesc, [Serializable, Cloneable] @AT@ 7347 @LENGTH@ 243
---INS Modifier@@public @TO@ MethodDeclaration@@public, String, MethodName:toString,  @AT@ 7347 @LENGTH@ 6
---INS SimpleType@@String @TO@ MethodDeclaration@@public, String, MethodName:toString,  @AT@ 7354 @LENGTH@ 6
---INS SimpleName@@MethodName:toString @TO@ MethodDeclaration@@public, String, MethodName:toString,  @AT@ 7361 @LENGTH@ 8
---INS ReturnStatement@@InfixExpression:"TableDesc [inputFileFormatClass=" + inputFileFormatClass + ", outputFileFormatClass="+ outputFileFormatClass+ ", properties="+ properties+ ", jobProperties="+ jobProperties+ "]" @TO@ MethodDeclaration@@public, String, MethodName:toString,  @AT@ 7378 @LENGTH@ 208
------INS InfixExpression@@"TableDesc [inputFileFormatClass=" + inputFileFormatClass + ", outputFileFormatClass="+ outputFileFormatClass+ ", properties="+ properties+ ", jobProperties="+ jobProperties+ "]" @TO@ ReturnStatement@@InfixExpression:"TableDesc [inputFileFormatClass=" + inputFileFormatClass + ", outputFileFormatClass="+ outputFileFormatClass+ ", properties="+ properties+ ", jobProperties="+ jobProperties+ "]" @AT@ 7385 @LENGTH@ 200
---------INS StringLiteral@@"TableDesc [inputFileFormatClass=" @TO@ InfixExpression@@"TableDesc [inputFileFormatClass=" + inputFileFormatClass + ", outputFileFormatClass="+ outputFileFormatClass+ ", properties="+ properties+ ", jobProperties="+ jobProperties+ "]" @AT@ 7385 @LENGTH@ 34
---------INS Operator@@+ @TO@ InfixExpression@@"TableDesc [inputFileFormatClass=" + inputFileFormatClass + ", outputFileFormatClass="+ outputFileFormatClass+ ", properties="+ properties+ ", jobProperties="+ jobProperties+ "]" @AT@ 7419 @LENGTH@ 1
---------INS SimpleName@@inputFileFormatClass @TO@ InfixExpression@@"TableDesc [inputFileFormatClass=" + inputFileFormatClass + ", outputFileFormatClass="+ outputFileFormatClass+ ", properties="+ properties+ ", jobProperties="+ jobProperties+ "]" @AT@ 7422 @LENGTH@ 20
---------INS StringLiteral@@", outputFileFormatClass=" @TO@ InfixExpression@@"TableDesc [inputFileFormatClass=" + inputFileFormatClass + ", outputFileFormatClass="+ outputFileFormatClass+ ", properties="+ properties+ ", jobProperties="+ jobProperties+ "]" @AT@ 7453 @LENGTH@ 26
---------INS SimpleName@@outputFileFormatClass @TO@ InfixExpression@@"TableDesc [inputFileFormatClass=" + inputFileFormatClass + ", outputFileFormatClass="+ outputFileFormatClass+ ", properties="+ properties+ ", jobProperties="+ jobProperties+ "]" @AT@ 7482 @LENGTH@ 21
---------INS StringLiteral@@", properties=" @TO@ InfixExpression@@"TableDesc [inputFileFormatClass=" + inputFileFormatClass + ", outputFileFormatClass="+ outputFileFormatClass+ ", properties="+ properties+ ", jobProperties="+ jobProperties+ "]" @AT@ 7506 @LENGTH@ 15
---------INS SimpleName@@properties @TO@ InfixExpression@@"TableDesc [inputFileFormatClass=" + inputFileFormatClass + ", outputFileFormatClass="+ outputFileFormatClass+ ", properties="+ properties+ ", jobProperties="+ jobProperties+ "]" @AT@ 7532 @LENGTH@ 10
---------INS StringLiteral@@", jobProperties=" @TO@ InfixExpression@@"TableDesc [inputFileFormatClass=" + inputFileFormatClass + ", outputFileFormatClass="+ outputFileFormatClass+ ", properties="+ properties+ ", jobProperties="+ jobProperties+ "]" @AT@ 7545 @LENGTH@ 18
---------INS SimpleName@@jobProperties @TO@ InfixExpression@@"TableDesc [inputFileFormatClass=" + inputFileFormatClass + ", outputFileFormatClass="+ outputFileFormatClass+ ", properties="+ properties+ ", jobProperties="+ jobProperties+ "]" @AT@ 7566 @LENGTH@ 13
---------INS StringLiteral@@"]" @TO@ InfixExpression@@"TableDesc [inputFileFormatClass=" + inputFileFormatClass + ", outputFileFormatClass="+ outputFileFormatClass+ ", properties="+ properties+ ", jobProperties="+ jobProperties+ "]" @AT@ 7582 @LENGTH@ 3


UPD ExpressionStatement@@MethodInvocation:assertEquals(363057792615071744L,retweet.getId()) @TO@ MethodInvocation:assertEquals("363057792615071744",retweet.getId()) @AT@ 22108 @LENGTH@ 51
---UPD MethodInvocation@@assertEquals(363057792615071744L,retweet.getId()) @TO@ assertEquals("363057792615071744",retweet.getId()) @AT@ 22108 @LENGTH@ 50
------UPD SimpleName@@MethodName:assertEquals:[363057792615071744L, retweet.getId()] @TO@ MethodName:assertEquals:["363057792615071744", retweet.getId()] @AT@ 22108 @LENGTH@ 50
---------INS StringLiteral@@"363057792615071744" @TO@ SimpleName@@MethodName:assertEquals:[363057792615071744L, retweet.getId()] @AT@ 22121 @LENGTH@ 20
---------DEL NumberLiteral@@363057792615071744L @AT@ 22121 @LENGTH@ 19


INS TryStatement@@try {  received=this.template.receiveAndReply(message -> message);} catch (ConsumeOkNotReceivedException e) {} @TO@ MethodDeclaration@@private, void, MethodName:testReceiveAndReply, long timeout,  @AT@ 36915 @LENGTH@ 195
---MOV ExpressionStatement@@Assignment:received=this.template.receiveAndReply(message -> message) @TO@ TryStatement@@try {  received=this.template.receiveAndReply(message -> message);} catch (ConsumeOkNotReceivedException e) {} @AT@ 36915 @LENGTH@ 61
---INS CatchClause@@catch (ConsumeOkNotReceivedException e) {} @TO@ TryStatement@@try {  received=this.template.receiveAndReply(message -> message);} catch (ConsumeOkNotReceivedException e) {} @AT@ 36992 @LENGTH@ 118
------INS SingleVariableDeclaration@@ConsumeOkNotReceivedException e @TO@ CatchClause@@catch (ConsumeOkNotReceivedException e) {} @AT@ 36999 @LENGTH@ 31
---------INS SimpleType@@ConsumeOkNotReceivedException @TO@ SingleVariableDeclaration@@ConsumeOkNotReceivedException e @AT@ 36999 @LENGTH@ 29
---------INS SimpleName@@e @TO@ SingleVariableDeclaration@@ConsumeOkNotReceivedException e @AT@ 37029 @LENGTH@ 1


UPD MethodDeclaration@@public, static, boolean, MethodName:isFallbackEnable, Properties props,  @TO@ public, static, boolean, MethodName:isFallbackEnabled, Properties props,  @AT@ 13958 @LENGTH@ 659
---UPD SimpleName@@MethodName:isFallbackEnable @TO@ MethodName:isFallbackEnabled @AT@ 13980 @LENGTH@ 16


INS ExpressionStatement@@MethodInvocation:when(em.getMetamodel()).thenReturn(metamodel) @TO@ MethodDeclaration@@public, void, MethodName:setUp, SecurityException, NoSuchMethodException,  @AT@ 2283 @LENGTH@ 46
---INS MethodInvocation@@when(em.getMetamodel()).thenReturn(metamodel) @TO@ ExpressionStatement@@MethodInvocation:when(em.getMetamodel()).thenReturn(metamodel) @AT@ 2283 @LENGTH@ 45
------INS MethodInvocation@@MethodName:when:[em.getMetamodel()] @TO@ MethodInvocation@@when(em.getMetamodel()).thenReturn(metamodel) @AT@ 2283 @LENGTH@ 23
---------INS MethodInvocation@@em.getMetamodel() @TO@ MethodInvocation@@MethodName:when:[em.getMetamodel()] @AT@ 2288 @LENGTH@ 17
------------INS SimpleName@@Name:em @TO@ MethodInvocation@@em.getMetamodel() @AT@ 2288 @LENGTH@ 2
------------INS SimpleName@@MethodName:getMetamodel:[] @TO@ MethodInvocation@@em.getMetamodel() @AT@ 2291 @LENGTH@ 14
------INS SimpleName@@MethodName:thenReturn:[metamodel] @TO@ MethodInvocation@@when(em.getMetamodel()).thenReturn(metamodel) @AT@ 2307 @LENGTH@ 21
---------INS SimpleName@@metamodel @TO@ SimpleName@@MethodName:thenReturn:[metamodel] @AT@ 2318 @LENGTH@ 9


INS FieldDeclaration@@private, TableDesc, [tblDesc] @TO@ TypeDeclaration@@[@Explain(displayName="Partial Scan Statistics"), public]PartialScanWork, MapWork[Serializable] @AT@ 1899 @LENGTH@ 26
---INS Modifier@@private @TO@ FieldDeclaration@@private, TableDesc, [tblDesc] @AT@ 1899 @LENGTH@ 7
---INS SimpleType@@TableDesc @TO@ FieldDeclaration@@private, TableDesc, [tblDesc] @AT@ 1907 @LENGTH@ 9
---INS VariableDeclarationFragment@@tblDesc @TO@ FieldDeclaration@@private, TableDesc, [tblDesc] @AT@ 1917 @LENGTH@ 7
------INS SimpleName@@tblDesc @TO@ VariableDeclarationFragment@@tblDesc @AT@ 1917 @LENGTH@ 7


UPD TypeDeclaration@@[@Configuration, @ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration"), @EnableConfigurationProperties(BraintreeComponentConfiguration.class), public]BraintreeComponentAutoConfiguration,  @TO@ [@Configuration, @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration"), @EnableConfigurationProperties(BraintreeComponentConfiguration.class), public]BraintreeComponentAutoConfiguration,  @AT@ 1634 @LENGTH@ 2097
---UPD NormalAnnotation@@@ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1649 @LENGTH@ 79
---UPD NormalAnnotation@@@AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1729 @LENGTH@ 80


UPD TypeDeclaration@@[@Configuration, @ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration"), @EnableConfigurationProperties(RssDataFormatConfiguration.class), public]RssDataFormatAutoConfiguration,  @TO@ [@Configuration, @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration"), @EnableConfigurationProperties(RssDataFormatConfiguration.class), public]RssDataFormatAutoConfiguration,  @AT@ 1662 @LENGTH@ 1086
---UPD NormalAnnotation@@@ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1677 @LENGTH@ 79
---UPD NormalAnnotation@@@AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1757 @LENGTH@ 80


UPD IfStatement@@if (Utils.isFallbackEnabled(props)) {  return new JavaCryptoRandom(props);} else {  throw new GeneralSecurityException(errorMessage.toString());} @TO@ if (Utils.isFallbackEnabled(props)) {  return new JavaCryptoRandom(props);} else {  if (errorMessage.length() == 0) {    throw new IllegalArgumentException("No classname(s) provided, and fallback is not enabled");  }  throw new GeneralSecurityException(errorMessage.toString());} @AT@ 3170 @LENGTH@ 186
---UPD Block@@ElseBody:{  throw new GeneralSecurityException(errorMessage.toString());} @TO@ ElseBody:{  if (errorMessage.length() == 0) {    throw new IllegalArgumentException("No classname(s) provided, and fallback is not enabled");  }  throw new GeneralSecurityException(errorMessage.toString());} @AT@ 3272 @LENGTH@ 84
------INS IfStatement@@if (errorMessage.length() == 0) {  throw new IllegalArgumentException("No classname(s) provided, and fallback is not enabled");} @TO@ Block@@ElseBody:{  throw new GeneralSecurityException(errorMessage.toString());} @AT@ 3229 @LENGTH@ 156
---------INS InfixExpression@@errorMessage.length() == 0 @TO@ IfStatement@@if (errorMessage.length() == 0) {  throw new IllegalArgumentException("No classname(s) provided, and fallback is not enabled");} @AT@ 3233 @LENGTH@ 26
------------INS MethodInvocation@@errorMessage.length() @TO@ InfixExpression@@errorMessage.length() == 0 @AT@ 3233 @LENGTH@ 21
---------------INS SimpleName@@Name:errorMessage @TO@ MethodInvocation@@errorMessage.length() @AT@ 3233 @LENGTH@ 12
---------------INS SimpleName@@MethodName:length:[] @TO@ MethodInvocation@@errorMessage.length() @AT@ 3246 @LENGTH@ 8
------------INS Operator@@== @TO@ InfixExpression@@errorMessage.length() == 0 @AT@ 3254 @LENGTH@ 2
------------INS NumberLiteral@@0 @TO@ InfixExpression@@errorMessage.length() == 0 @AT@ 3258 @LENGTH@ 1
---------INS Block@@ThenBody:{  throw new IllegalArgumentException("No classname(s) provided, and fallback is not enabled");} @TO@ IfStatement@@if (errorMessage.length() == 0) {  throw new IllegalArgumentException("No classname(s) provided, and fallback is not enabled");} @AT@ 3261 @LENGTH@ 124
------------INS ThrowStatement@@ClassInstanceCreation:new IllegalArgumentException("No classname(s) provided, and fallback is not enabled") @TO@ Block@@ThenBody:{  throw new IllegalArgumentException("No classname(s) provided, and fallback is not enabled");} @AT@ 3279 @LENGTH@ 92
---------------INS ClassInstanceCreation@@IllegalArgumentException["No classname(s) provided, and fallback is not enabled"] @TO@ ThrowStatement@@ClassInstanceCreation:new IllegalArgumentException("No classname(s) provided, and fallback is not enabled") @AT@ 3285 @LENGTH@ 85
------------------INS New@@new @TO@ ClassInstanceCreation@@IllegalArgumentException["No classname(s) provided, and fallback is not enabled"] @AT@ 3285 @LENGTH@ 3
------------------INS SimpleType@@IllegalArgumentException @TO@ ClassInstanceCreation@@IllegalArgumentException["No classname(s) provided, and fallback is not enabled"] @AT@ 3289 @LENGTH@ 24
------------------INS StringLiteral@@"No classname(s) provided, and fallback is not enabled" @TO@ ClassInstanceCreation@@IllegalArgumentException["No classname(s) provided, and fallback is not enabled"] @AT@ 3314 @LENGTH@ 55
------INS IfStatement@@if (errorMessage.length() == 0) {  throw new IllegalArgumentException("No classname(s) provided, and fallback is not enabled");} @TO@ Block@@ElseBody:{  throw new GeneralSecurityException(errorMessage.toString());} @AT@ 3229 @LENGTH@ 156
---------INS InfixExpression@@errorMessage.length() == 0 @TO@ IfStatement@@if (errorMessage.length() == 0) {  throw new IllegalArgumentException("No classname(s) provided, and fallback is not enabled");} @AT@ 3233 @LENGTH@ 26
------------INS MethodInvocation@@errorMessage.length() @TO@ InfixExpression@@errorMessage.length() == 0 @AT@ 3233 @LENGTH@ 21
---------------INS SimpleName@@Name:errorMessage @TO@ MethodInvocation@@errorMessage.length() @AT@ 3233 @LENGTH@ 12
---------------INS SimpleName@@MethodName:length:[] @TO@ MethodInvocation@@errorMessage.length() @AT@ 3246 @LENGTH@ 8
------------INS Operator@@== @TO@ InfixExpression@@errorMessage.length() == 0 @AT@ 3254 @LENGTH@ 2
------------INS NumberLiteral@@0 @TO@ InfixExpression@@errorMessage.length() == 0 @AT@ 3258 @LENGTH@ 1
---------INS Block@@ThenBody:{  throw new IllegalArgumentException("No classname(s) provided, and fallback is not enabled");} @TO@ IfStatement@@if (errorMessage.length() == 0) {  throw new IllegalArgumentException("No classname(s) provided, and fallback is not enabled");} @AT@ 3261 @LENGTH@ 124
------------INS ThrowStatement@@ClassInstanceCreation:new IllegalArgumentException("No classname(s) provided, and fallback is not enabled") @TO@ Block@@ThenBody:{  throw new IllegalArgumentException("No classname(s) provided, and fallback is not enabled");} @AT@ 3279 @LENGTH@ 92
---------------INS ClassInstanceCreation@@IllegalArgumentException["No classname(s) provided, and fallback is not enabled"] @TO@ ThrowStatement@@ClassInstanceCreation:new IllegalArgumentException("No classname(s) provided, and fallback is not enabled") @AT@ 3285 @LENGTH@ 85
------------------INS New@@new @TO@ ClassInstanceCreation@@IllegalArgumentException["No classname(s) provided, and fallback is not enabled"] @AT@ 3285 @LENGTH@ 3
------------------INS SimpleType@@IllegalArgumentException @TO@ ClassInstanceCreation@@IllegalArgumentException["No classname(s) provided, and fallback is not enabled"] @AT@ 3289 @LENGTH@ 24
------------------INS StringLiteral@@"No classname(s) provided, and fallback is not enabled" @TO@ ClassInstanceCreation@@IllegalArgumentException["No classname(s) provided, and fallback is not enabled"] @AT@ 3314 @LENGTH@ 55


UPD TypeDeclaration@@[@Configuration, @ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration"), @EnableConfigurationProperties(SqlStoredComponentConfiguration.class), public]SqlStoredComponentAutoConfiguration,  @TO@ [@Configuration, @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration"), @EnableConfigurationProperties(SqlStoredComponentConfiguration.class), public]SqlStoredComponentAutoConfiguration,  @AT@ 1636 @LENGTH@ 2098
---UPD NormalAnnotation@@@ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1651 @LENGTH@ 79
---UPD NormalAnnotation@@@AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1731 @LENGTH@ 80


UPD IfStatement@@if (propertiesComponent.isDefaultCreated()) {  esb.append("PropertiesComponent with name properties must be defined in CamelContext to support property placeholders. ");} @TO@ if (propertiesComponent == null || propertiesComponent.isDefaultCreated()) {  esb.append("PropertiesComponent with name properties must be defined in CamelContext to support property placeholders. ");} @AT@ 11159 @LENGTH@ 328
---INS InfixExpression@@propertiesComponent == null || propertiesComponent.isDefaultCreated() @TO@ IfStatement@@if (propertiesComponent.isDefaultCreated()) {  esb.append("PropertiesComponent with name properties must be defined in CamelContext to support property placeholders. ");} @AT@ 11163 @LENGTH@ 69
------INS InfixExpression@@propertiesComponent == null @TO@ InfixExpression@@propertiesComponent == null || propertiesComponent.isDefaultCreated() @AT@ 11163 @LENGTH@ 27
---------INS SimpleName@@propertiesComponent @TO@ InfixExpression@@propertiesComponent == null @AT@ 11163 @LENGTH@ 19
---------INS Operator@@== @TO@ InfixExpression@@propertiesComponent == null @AT@ 11182 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@propertiesComponent == null @AT@ 11186 @LENGTH@ 4
------INS Operator@@|| @TO@ InfixExpression@@propertiesComponent == null || propertiesComponent.isDefaultCreated() @AT@ 11190 @LENGTH@ 2
------INS MethodInvocation@@propertiesComponent.isDefaultCreated() @TO@ InfixExpression@@propertiesComponent == null || propertiesComponent.isDefaultCreated() @AT@ 11194 @LENGTH@ 38
---------MOV SimpleName@@Name:propertiesComponent @TO@ MethodInvocation@@propertiesComponent.isDefaultCreated() @AT@ 11163 @LENGTH@ 19
---------MOV SimpleName@@MethodName:isDefaultCreated:[] @TO@ MethodInvocation@@propertiesComponent.isDefaultCreated() @AT@ 11183 @LENGTH@ 18
---DEL MethodInvocation@@propertiesComponent.isDefaultCreated() @AT@ 11163 @LENGTH@ 38


UPD TypeDeclaration@@[@Configuration, @ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration"), @EnableConfigurationProperties(LogComponentConfiguration.class), public]LogComponentAutoConfiguration,  @TO@ [@Configuration, @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration"), @EnableConfigurationProperties(LogComponentConfiguration.class), public]LogComponentAutoConfiguration,  @AT@ 1616 @LENGTH@ 2030
---UPD NormalAnnotation@@@ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1631 @LENGTH@ 79
---UPD NormalAnnotation@@@AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1711 @LENGTH@ 80


UPD TypeDeclaration@@[@Configuration, @ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration"), @EnableConfigurationProperties(CryptoDataFormatConfiguration.class), public]CryptoDataFormatAutoConfiguration,  @TO@ [@Configuration, @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration"), @EnableConfigurationProperties(CryptoDataFormatConfiguration.class), public]CryptoDataFormatAutoConfiguration,  @AT@ 1669 @LENGTH@ 1126
---UPD NormalAnnotation@@@ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1684 @LENGTH@ 79
---UPD NormalAnnotation@@@AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1764 @LENGTH@ 80


UPD TypeDeclaration@@[@Configuration, @ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration"), @EnableConfigurationProperties(JacksonXMLDataFormatConfiguration.class), public]JacksonXMLDataFormatAutoConfiguration,  @TO@ [@Configuration, @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration"), @EnableConfigurationProperties(JacksonXMLDataFormatConfiguration.class), public]JacksonXMLDataFormatAutoConfiguration,  @AT@ 1681 @LENGTH@ 1162
---UPD NormalAnnotation@@@ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1696 @LENGTH@ 79
---UPD NormalAnnotation@@@AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1776 @LENGTH@ 80


DEL IfStatement@@if (bufferSizeStr == null || bufferSizeStr.isEmpty()) {  bufferSizeStr=System.getProperty(ConfigurationKeys.STREAM_BUFFER_SIZE_KEY);} @AT@ 19569 @LENGTH@ 176
---DEL InfixExpression@@bufferSizeStr == null || bufferSizeStr.isEmpty() @AT@ 19573 @LENGTH@ 48
------DEL InfixExpression@@bufferSizeStr == null @AT@ 19573 @LENGTH@ 21
---------DEL SimpleName@@bufferSizeStr @AT@ 19573 @LENGTH@ 13
---------DEL Operator@@== @AT@ 19586 @LENGTH@ 2
---------DEL NullLiteral@@null @AT@ 19590 @LENGTH@ 4
------DEL Operator@@|| @AT@ 19594 @LENGTH@ 2
------DEL MethodInvocation@@bufferSizeStr.isEmpty() @AT@ 19598 @LENGTH@ 23
---------DEL SimpleName@@Name:bufferSizeStr @AT@ 19598 @LENGTH@ 13
---------DEL SimpleName@@MethodName:isEmpty:[] @AT@ 19612 @LENGTH@ 9
---DEL Block@@ThenBody:{  bufferSizeStr=System.getProperty(ConfigurationKeys.STREAM_BUFFER_SIZE_KEY);} @AT@ 19623 @LENGTH@ 122
------DEL ExpressionStatement@@Assignment:bufferSizeStr=System.getProperty(ConfigurationKeys.STREAM_BUFFER_SIZE_KEY) @AT@ 19637 @LENGTH@ 98
---------DEL Assignment@@bufferSizeStr=System.getProperty(ConfigurationKeys.STREAM_BUFFER_SIZE_KEY) @AT@ 19637 @LENGTH@ 97
------------DEL SimpleName@@bufferSizeStr @AT@ 19637 @LENGTH@ 13
------------DEL Operator@@= @AT@ 19650 @LENGTH@ 1
------------DEL MethodInvocation@@System.getProperty(ConfigurationKeys.STREAM_BUFFER_SIZE_KEY) @AT@ 19653 @LENGTH@ 81
---------------DEL SimpleName@@Name:System @AT@ 19653 @LENGTH@ 6
---------------DEL SimpleName@@MethodName:getProperty:[ConfigurationKeys.STREAM_BUFFER_SIZE_KEY] @AT@ 19681 @LENGTH@ 53
------------------DEL QualifiedName@@ConfigurationKeys.STREAM_BUFFER_SIZE_KEY @AT@ 19693 @LENGTH@ 40
---------------------DEL SimpleName@@ConfigurationKeys @AT@ 19693 @LENGTH@ 17
---------------------DEL SimpleName@@STREAM_BUFFER_SIZE_KEY @AT@ 19711 @LENGTH@ 22


UPD CatchClause@@catch (IllegalArgumentException o_O) {  if (hasNamedParameter(jpaQuery)) {    return query.getBindingFor(methodParameter.getName());  }} @TO@ catch (IllegalArgumentException o_O) {  return new ParameterBinding(position);} @AT@ 2929 @LENGTH@ 145
---MOV ReturnStatement@@ClassInstanceCreation:new ParameterBinding(position) @TO@ CatchClause@@catch (IllegalArgumentException o_O) {  if (hasNamedParameter(jpaQuery)) {    return query.getBindingFor(methodParameter.getName());  }} @AT@ 3333 @LENGTH@ 38


DEL MethodDeclaration@@public, void, MethodName:closeTestRepeat,  @AT@ 1321 @LENGTH@ 103
---DEL Modifier@@public @AT@ 1321 @LENGTH@ 6
---DEL PrimitiveType@@void @AT@ 1328 @LENGTH@ 4
---DEL SimpleName@@MethodName:closeTestRepeat @AT@ 1333 @LENGTH@ 15
---DEL ExpressionStatement@@MethodInvocation:System.err.println("closeTestRepeat() Causes JVM crash") @AT@ 1361 @LENGTH@ 57
------DEL MethodInvocation@@System.err.println("closeTestRepeat() Causes JVM crash") @AT@ 1361 @LENGTH@ 56
---------DEL QualifiedName@@Name:System.err @AT@ 1361 @LENGTH@ 10
---------DEL SimpleName@@MethodName:println:["closeTestRepeat() Causes JVM crash"] @AT@ 1372 @LENGTH@ 45
------------DEL StringLiteral@@"closeTestRepeat() Causes JVM crash" @AT@ 1380 @LENGTH@ 36


DEL VariableDeclarationStatement@@final String configName=ConfigurationKeys.CIPHER_CLASSES_KEY; @AT@ 5939 @LENGTH@ 63
---DEL Modifier@@final @AT@ 5939 @LENGTH@ 5
---DEL SimpleType@@String @AT@ 5945 @LENGTH@ 6
---DEL VariableDeclarationFragment@@configName=ConfigurationKeys.CIPHER_CLASSES_KEY @AT@ 5952 @LENGTH@ 49
------DEL SimpleName@@configName @AT@ 5952 @LENGTH@ 10
------DEL QualifiedName@@ConfigurationKeys.CIPHER_CLASSES_KEY @AT@ 5965 @LENGTH@ 36
---------DEL SimpleName@@ConfigurationKeys @AT@ 5965 @LENGTH@ 17
---------DEL SimpleName@@CIPHER_CLASSES_KEY @AT@ 5983 @LENGTH@ 18


UPD FieldDeclaration@@private, static, final, int, [QUERY_JOIN_ALIAS_GROUP_INDEX=2] @TO@ private, static, final, int, [QUERY_JOIN_ALIAS_GROUP_INDEX=3] @AT@ 4132 @LENGTH@ 58
---UPD VariableDeclarationFragment@@QUERY_JOIN_ALIAS_GROUP_INDEX=2 @TO@ QUERY_JOIN_ALIAS_GROUP_INDEX=3 @AT@ 4157 @LENGTH@ 32
------UPD NumberLiteral@@2 @TO@ 3 @AT@ 4188 @LENGTH@ 1


UPD FieldDeclaration@@static, final, String, [MIN_SPRING_VERSION="4.3.3.RELEASE"] @TO@ static, final, String, [MIN_SPRING_VERSION="4.3.4.RELEASE"] @AT@ 1455 @LENGTH@ 57
---UPD VariableDeclarationFragment@@MIN_SPRING_VERSION="4.3.3.RELEASE" @TO@ MIN_SPRING_VERSION="4.3.4.RELEASE" @AT@ 1475 @LENGTH@ 36
------UPD StringLiteral@@"4.3.3.RELEASE" @TO@ "4.3.4.RELEASE" @AT@ 1496 @LENGTH@ 15


UPD TypeDeclaration@@[@Configuration, @ComponentScan(basePackages="org.springframework.data.neo4j.transactions",excludeFilters=@ComponentScan.Filter(type=FilterType.REGEX,pattern="org\\.springframework\\.data\\.neo4j\\.transactions\\.TransactionalEventListenerTests.*")), @EnableTransactionManagement, @EnableNeo4jRepositories, public]PrototypeSessionBeanContext, Neo4jConfiguration @TO@ [@Configuration, @ComponentScan(basePackages="org.springframework.data.neo4j.transactions.service"), @EnableTransactionManagement, @EnableNeo4jRepositories, public]PrototypeSessionBeanContext, Neo4jConfiguration @AT@ 510 @LENGTH@ 786
---UPD NormalAnnotation@@@ComponentScan(basePackages="org.springframework.data.neo4j.transactions",excludeFilters=@ComponentScan.Filter(type=FilterType.REGEX,pattern="org\\.springframework\\.data\\.neo4j\\.transactions\\.TransactionalEventListenerTests.*")) @TO@ @ComponentScan(basePackages="org.springframework.data.neo4j.transactions.service") @AT@ 525 @LENGTH@ 282


UPD ExpressionStatement@@MethodInvocation:logger.info("Initialising Neo4jSession") @TO@ MethodInvocation:logger.debug("Initialising Neo4jSession") @AT@ 2541 @LENGTH@ 41
---UPD MethodInvocation@@logger.info("Initialising Neo4jSession") @TO@ logger.debug("Initialising Neo4jSession") @AT@ 2541 @LENGTH@ 40
------UPD SimpleName@@MethodName:info:["Initialising Neo4jSession"] @TO@ MethodName:debug:["Initialising Neo4jSession"] @AT@ 2548 @LENGTH@ 33


UPD TypeDeclaration@@[@Configuration, @ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration"), public]QualifiedContextComponentAutoConfiguration,  @TO@ [@Configuration, @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration"), public]QualifiedContextComponentAutoConfiguration,  @AT@ 1456 @LENGTH@ 672
---UPD NormalAnnotation@@@ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1471 @LENGTH@ 79
---UPD NormalAnnotation@@@AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1551 @LENGTH@ 80


UPD TypeDeclaration@@[@Configuration, @ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration"), @EnableConfigurationProperties(SnakeYAMLDataFormatConfiguration.class), public]SnakeYAMLDataFormatAutoConfiguration,  @TO@ [@Configuration, @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration"), @EnableConfigurationProperties(SnakeYAMLDataFormatConfiguration.class), public]SnakeYAMLDataFormatAutoConfiguration,  @AT@ 1678 @LENGTH@ 1158
---UPD NormalAnnotation@@@ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1693 @LENGTH@ 79
---UPD NormalAnnotation@@@AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1773 @LENGTH@ 80


UPD Block@@ThenBody:{  PathAddress resourceAddress=context.getCurrentAddress().size() == 0 ? PathAddress.pathAddress(DEPLOYMENT,managementName) : PathAddress.EMPTY_ADDRESS;  final Resource deployment=context.readResourceForUpdate(resourceAddress);  final ImmutableManagementResourceRegistration registration=context.getResourceRegistration().getSubModel(resourceAddress);  final ManagementResourceRegistration mutableRegistration=context.getResourceRegistrationForUpdate().getSubModel(resourceAddress);  DeploymentResourceSupport.cleanup(deployment);  ModelNode notificationData=new ModelNode();  notificationData.get(NAME).set(managementName);  notificationData.get(SERVER_BOOTING).set(context.isBooting());  if (operation.hasDefined(OWNER.getName())) {    try {      notificationData.get(OWNER.getName()).set(OWNER.resolveModelAttribute(context,operation));    } catch (    OperationFailedException ex) {    }  }  notificationData.get(DEPLOYMENT).set(runtimeName);  context.emit(new Notification(DEPLOYMENT_UNDEPLOYED_NOTIFICATION,resourceAddress,ServerLogger.ROOT_LOGGER.deploymentUndeployedNotification(managementName,runtimeName),notificationData));  context.addStep(new OperationStepHandler(){    @Override public void execute(    OperationContext context,    ModelNode operation){      final ServiceName deploymentUnitServiceName=Services.deploymentUnitName(runtimeName);      context.removeService(deploymentUnitServiceName);      context.removeService(deploymentUnitServiceName.append("contents"));      context.completeStep(new OperationContext.ResultHandler(){        @Override public void handleResult(        OperationContext.ResultAction resultAction,        OperationContext context,        ModelNode operation){          if (resultAction == OperationContext.ResultAction.ROLLBACK) {            final ModelNode model=context.readResource(PathAddress.EMPTY_ADDRESS).getModel();            final DeploymentHandlerUtil.ContentItem[] contents=getContents(model.require(CONTENT));            doDeploy(context,runtimeName,managementName,deployment,registration,mutableRegistration,vaultReader,contents);            if (context.hasFailureDescription()) {              ServerLogger.ROOT_LOGGER.undeploymentRolledBack(runtimeName,getFormattedFailureDescription(context));            } else {              ServerLogger.ROOT_LOGGER.undeploymentRolledBackWithNoMessage(runtimeName);            }          } else {            ServerLogger.ROOT_LOGGER.deploymentUndeployed(managementName,runtimeName);          }        }      });    }  },OperationContext.Stage.RUNTIME);} @TO@ ThenBody:{  PathAddress resourceAddress=context.getCurrentAddress().size() == 0 ? PathAddress.pathAddress(DEPLOYMENT,managementName) : PathAddress.EMPTY_ADDRESS;  final Resource deployment=context.readResourceForUpdate(resourceAddress);  final ImmutableManagementResourceRegistration registration=context.getResourceRegistration().getSubModel(resourceAddress);  final ManagementResourceRegistration mutableRegistration=context.getResourceRegistrationForUpdate().getSubModel(resourceAddress);  DeploymentResourceSupport.cleanup(deployment);  ModelNode notificationData=new ModelNode();  notificationData.get(NAME).set(managementName);  notificationData.get(SERVER_BOOTING).set(context.isBooting());  if (operation.hasDefined(OWNER.getName())) {    try {      notificationData.get(OWNER.getName()).set(OWNER.resolveModelAttribute(context,operation));    } catch (    OperationFailedException ex) {    }  }  notificationData.get(DEPLOYMENT).set(runtimeName);  PathAddress pathAddress=context.getCurrentAddress().size() == 0 ? PathAddress.pathAddress(DEPLOYMENT,managementName) : context.getCurrentAddress();  context.emit(new Notification(DEPLOYMENT_UNDEPLOYED_NOTIFICATION,pathAddress,ServerLogger.ROOT_LOGGER.deploymentUndeployedNotification(managementName,runtimeName),notificationData));  context.addStep(new OperationStepHandler(){    @Override public void execute(    OperationContext context,    ModelNode operation){      final ServiceName deploymentUnitServiceName=Services.deploymentUnitName(runtimeName);      context.removeService(deploymentUnitServiceName);      context.removeService(deploymentUnitServiceName.append("contents"));      context.completeStep(new OperationContext.ResultHandler(){        @Override public void handleResult(        OperationContext.ResultAction resultAction,        OperationContext context,        ModelNode operation){          if (resultAction == OperationContext.ResultAction.ROLLBACK) {            final ModelNode model=context.readResource(PathAddress.EMPTY_ADDRESS).getModel();            final DeploymentHandlerUtil.ContentItem[] contents=getContents(model.require(CONTENT));            doDeploy(context,runtimeName,managementName,deployment,registration,mutableRegistration,vaultReader,contents);            if (context.hasFailureDescription()) {              ServerLogger.ROOT_LOGGER.undeploymentRolledBack(runtimeName,getFormattedFailureDescription(context));            } else {              ServerLogger.ROOT_LOGGER.undeploymentRolledBackWithNoMessage(runtimeName);            }          } else {            ServerLogger.ROOT_LOGGER.deploymentUndeployed(managementName,runtimeName);          }        }      });    }  },OperationContext.Stage.RUNTIME);} @AT@ 19241 @LENGTH@ 3367
---UPD ExpressionStatement@@MethodInvocation:context.emit(new Notification(DEPLOYMENT_UNDEPLOYED_NOTIFICATION,resourceAddress,ServerLogger.ROOT_LOGGER.deploymentUndeployedNotification(managementName,runtimeName),notificationData)) @TO@ MethodInvocation:context.emit(new Notification(DEPLOYMENT_UNDEPLOYED_NOTIFICATION,pathAddress,ServerLogger.ROOT_LOGGER.deploymentUndeployedNotification(managementName,runtimeName),notificationData)) @AT@ 20547 @LENGTH@ 190
------UPD MethodInvocation@@context.emit(new Notification(DEPLOYMENT_UNDEPLOYED_NOTIFICATION,resourceAddress,ServerLogger.ROOT_LOGGER.deploymentUndeployedNotification(managementName,runtimeName),notificationData)) @TO@ context.emit(new Notification(DEPLOYMENT_UNDEPLOYED_NOTIFICATION,pathAddress,ServerLogger.ROOT_LOGGER.deploymentUndeployedNotification(managementName,runtimeName),notificationData)) @AT@ 20547 @LENGTH@ 189
---------UPD SimpleName@@MethodName:emit:[new Notification(DEPLOYMENT_UNDEPLOYED_NOTIFICATION,resourceAddress,ServerLogger.ROOT_LOGGER.deploymentUndeployedNotification(managementName,runtimeName),notificationData)] @TO@ MethodName:emit:[new Notification(DEPLOYMENT_UNDEPLOYED_NOTIFICATION,pathAddress,ServerLogger.ROOT_LOGGER.deploymentUndeployedNotification(managementName,runtimeName),notificationData)] @AT@ 20555 @LENGTH@ 181
------------UPD ClassInstanceCreation@@Notification[DEPLOYMENT_UNDEPLOYED_NOTIFICATION, resourceAddress, ServerLogger.ROOT_LOGGER.deploymentUndeployedNotification(managementName,runtimeName), notificationData] @TO@ Notification[DEPLOYMENT_UNDEPLOYED_NOTIFICATION, pathAddress, ServerLogger.ROOT_LOGGER.deploymentUndeployedNotification(managementName,runtimeName), notificationData] @AT@ 20560 @LENGTH@ 175
---------------UPD SimpleName@@resourceAddress @TO@ pathAddress @AT@ 20613 @LENGTH@ 15
---INS VariableDeclarationStatement@@PathAddress pathAddress=context.getCurrentAddress().size() == 0 ? PathAddress.pathAddress(DEPLOYMENT,managementName) : context.getCurrentAddress(); @TO@ Block@@ThenBody:{  PathAddress resourceAddress=context.getCurrentAddress().size() == 0 ? PathAddress.pathAddress(DEPLOYMENT,managementName) : PathAddress.EMPTY_ADDRESS;  final Resource deployment=context.readResourceForUpdate(resourceAddress);  final ImmutableManagementResourceRegistration registration=context.getResourceRegistration().getSubModel(resourceAddress);  final ManagementResourceRegistration mutableRegistration=context.getResourceRegistrationForUpdate().getSubModel(resourceAddress);  DeploymentResourceSupport.cleanup(deployment);  ModelNode notificationData=new ModelNode();  notificationData.get(NAME).set(managementName);  notificationData.get(SERVER_BOOTING).set(context.isBooting());  if (operation.hasDefined(OWNER.getName())) {    try {      notificationData.get(OWNER.getName()).set(OWNER.resolveModelAttribute(context,operation));    } catch (    OperationFailedException ex) {    }  }  notificationData.get(DEPLOYMENT).set(runtimeName);  context.emit(new Notification(DEPLOYMENT_UNDEPLOYED_NOTIFICATION,resourceAddress,ServerLogger.ROOT_LOGGER.deploymentUndeployedNotification(managementName,runtimeName),notificationData));  context.addStep(new OperationStepHandler(){    @Override public void execute(    OperationContext context,    ModelNode operation){      final ServiceName deploymentUnitServiceName=Services.deploymentUnitName(runtimeName);      context.removeService(deploymentUnitServiceName);      context.removeService(deploymentUnitServiceName.append("contents"));      context.completeStep(new OperationContext.ResultHandler(){        @Override public void handleResult(        OperationContext.ResultAction resultAction,        OperationContext context,        ModelNode operation){          if (resultAction == OperationContext.ResultAction.ROLLBACK) {            final ModelNode model=context.readResource(PathAddress.EMPTY_ADDRESS).getModel();            final DeploymentHandlerUtil.ContentItem[] contents=getContents(model.require(CONTENT));            doDeploy(context,runtimeName,managementName,deployment,registration,mutableRegistration,vaultReader,contents);            if (context.hasFailureDescription()) {              ServerLogger.ROOT_LOGGER.undeploymentRolledBack(runtimeName,getFormattedFailureDescription(context));            } else {              ServerLogger.ROOT_LOGGER.undeploymentRolledBackWithNoMessage(runtimeName);            }          } else {            ServerLogger.ROOT_LOGGER.deploymentUndeployed(managementName,runtimeName);          }        }      });    }  },OperationContext.Stage.RUNTIME);} @AT@ 20547 @LENGTH@ 150
------INS SimpleType@@PathAddress @TO@ VariableDeclarationStatement@@PathAddress pathAddress=context.getCurrentAddress().size() == 0 ? PathAddress.pathAddress(DEPLOYMENT,managementName) : context.getCurrentAddress(); @AT@ 20547 @LENGTH@ 11
------INS VariableDeclarationFragment@@pathAddress=context.getCurrentAddress().size() == 0 ? PathAddress.pathAddress(DEPLOYMENT,managementName) : context.getCurrentAddress() @TO@ VariableDeclarationStatement@@PathAddress pathAddress=context.getCurrentAddress().size() == 0 ? PathAddress.pathAddress(DEPLOYMENT,managementName) : context.getCurrentAddress(); @AT@ 20559 @LENGTH@ 137
---------INS SimpleName@@pathAddress @TO@ VariableDeclarationFragment@@pathAddress=context.getCurrentAddress().size() == 0 ? PathAddress.pathAddress(DEPLOYMENT,managementName) : context.getCurrentAddress() @AT@ 20559 @LENGTH@ 11
---------INS ConditionalExpression@@context.getCurrentAddress().size() == 0 ? PathAddress.pathAddress(DEPLOYMENT,managementName) : context.getCurrentAddress() @TO@ VariableDeclarationFragment@@pathAddress=context.getCurrentAddress().size() == 0 ? PathAddress.pathAddress(DEPLOYMENT,managementName) : context.getCurrentAddress() @AT@ 20573 @LENGTH@ 123
------------INS InfixExpression@@context.getCurrentAddress().size() == 0 @TO@ ConditionalExpression@@context.getCurrentAddress().size() == 0 ? PathAddress.pathAddress(DEPLOYMENT,managementName) : context.getCurrentAddress() @AT@ 20573 @LENGTH@ 39
---------------INS MethodInvocation@@context.getCurrentAddress().size() @TO@ InfixExpression@@context.getCurrentAddress().size() == 0 @AT@ 20573 @LENGTH@ 34
------------------INS MethodInvocation@@MethodName:getCurrentAddress:[] @TO@ MethodInvocation@@context.getCurrentAddress().size() @AT@ 20573 @LENGTH@ 27
------------------INS SimpleName@@Name:context @TO@ MethodInvocation@@context.getCurrentAddress().size() @AT@ 20573 @LENGTH@ 7
------------------INS SimpleName@@MethodName:size:[] @TO@ MethodInvocation@@context.getCurrentAddress().size() @AT@ 20601 @LENGTH@ 6
---------------INS Operator@@== @TO@ InfixExpression@@context.getCurrentAddress().size() == 0 @AT@ 20607 @LENGTH@ 2
---------------INS NumberLiteral@@0 @TO@ InfixExpression@@context.getCurrentAddress().size() == 0 @AT@ 20611 @LENGTH@ 1
------------INS MethodInvocation@@PathAddress.pathAddress(DEPLOYMENT,managementName) @TO@ ConditionalExpression@@context.getCurrentAddress().size() == 0 ? PathAddress.pathAddress(DEPLOYMENT,managementName) : context.getCurrentAddress() @AT@ 20615 @LENGTH@ 51
---------------INS SimpleName@@Name:PathAddress @TO@ MethodInvocation@@PathAddress.pathAddress(DEPLOYMENT,managementName) @AT@ 20615 @LENGTH@ 11
---------------INS SimpleName@@MethodName:pathAddress:[DEPLOYMENT, managementName] @TO@ MethodInvocation@@PathAddress.pathAddress(DEPLOYMENT,managementName) @AT@ 20627 @LENGTH@ 39
------------------INS SimpleName@@DEPLOYMENT @TO@ SimpleName@@MethodName:pathAddress:[DEPLOYMENT, managementName] @AT@ 20639 @LENGTH@ 10
------------------INS SimpleName@@managementName @TO@ SimpleName@@MethodName:pathAddress:[DEPLOYMENT, managementName] @AT@ 20651 @LENGTH@ 14
------------INS MethodInvocation@@context.getCurrentAddress() @TO@ ConditionalExpression@@context.getCurrentAddress().size() == 0 ? PathAddress.pathAddress(DEPLOYMENT,managementName) : context.getCurrentAddress() @AT@ 20669 @LENGTH@ 27
---------------INS SimpleName@@Name:context @TO@ MethodInvocation@@context.getCurrentAddress() @AT@ 20669 @LENGTH@ 7
---------------INS SimpleName@@MethodName:getCurrentAddress:[] @TO@ MethodInvocation@@context.getCurrentAddress() @AT@ 20677 @LENGTH@ 19


UPD VariableDeclarationStatement@@final String saslServerAuthentication=asStringIfDefined(context,BaseNativeInterfaceResourceDefinition.SASL_AUTHENTICATION_FACTORY,model); @TO@ final String saslAuthenticationFactory=asStringIfDefined(context,BaseNativeInterfaceResourceDefinition.SASL_AUTHENTICATION_FACTORY,model); @AT@ 1976 @LENGTH@ 141
---UPD VariableDeclarationFragment@@saslServerAuthentication=asStringIfDefined(context,BaseNativeInterfaceResourceDefinition.SASL_AUTHENTICATION_FACTORY,model) @TO@ saslAuthenticationFactory=asStringIfDefined(context,BaseNativeInterfaceResourceDefinition.SASL_AUTHENTICATION_FACTORY,model) @AT@ 1989 @LENGTH@ 127
------UPD SimpleName@@saslServerAuthentication @TO@ saslAuthenticationFactory @AT@ 1989 @LENGTH@ 24


UPD TypeDeclaration@@[@ConfigurationProperties(prefix="camel.dataformat.bindy"), public]BindyKeyValuePairDataFormatConfiguration,  @TO@ [@ConfigurationProperties(prefix="camel.dataformat.bindy-kvp"), public]BindyKeyValuePairDataFormatConfiguration,  @AT@ 1181 @LENGTH@ 948
---UPD NormalAnnotation@@@ConfigurationProperties(prefix="camel.dataformat.bindy") @TO@ @ConfigurationProperties(prefix="camel.dataformat.bindy-kvp") @AT@ 1181 @LENGTH@ 59


UPD TypeDeclaration@@[@Configuration, @ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration"), @EnableConfigurationProperties(JmsComponentConfiguration.class), public]JmsComponentAutoConfiguration,  @TO@ [@Configuration, @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration"), @EnableConfigurationProperties(JmsComponentConfiguration.class), public]JmsComponentAutoConfiguration,  @AT@ 1616 @LENGTH@ 2030
---UPD NormalAnnotation@@@ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1631 @LENGTH@ 79
---UPD NormalAnnotation@@@AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1711 @LENGTH@ 80


UPD ReturnStatement@@MethodInvocation:mvc.perform(get(href).accept(contentType)).andExpect(status().isOk()).andExpect(content().contentType(contentType)).andReturn().getResponse() @TO@ MethodInvocation:mvc.perform(get(href).accept(contentType)).andExpect(status().isOk()).andExpect(content().contentTypeCompatibleWith(contentType)).andReturn().getResponse() @AT@ 3600 @LENGTH@ 173
---UPD MethodInvocation@@mvc.perform(get(href).accept(contentType)).andExpect(status().isOk()).andExpect(content().contentType(contentType)).andReturn().getResponse() @TO@ mvc.perform(get(href).accept(contentType)).andExpect(status().isOk()).andExpect(content().contentTypeCompatibleWith(contentType)).andReturn().getResponse() @AT@ 3607 @LENGTH@ 165
------UPD MethodInvocation@@MethodName:andExpect:[content().contentType(contentType)] @TO@ MethodName:andExpect:[content().contentTypeCompatibleWith(contentType)] @AT@ 3607 @LENGTH@ 131
---------UPD MethodInvocation@@content().contentType(contentType) @TO@ content().contentTypeCompatibleWith(contentType) @AT@ 3703 @LENGTH@ 34
------------UPD SimpleName@@MethodName:contentType:[contentType] @TO@ MethodName:contentTypeCompatibleWith:[contentType] @AT@ 3713 @LENGTH@ 24


UPD IfStatement@@if (controllerAnnotation.getAttribute("type") != null && controllerType.equals(ControllerType.getControllerType(new EnumDetails(RooJavaType.ROO_ENUM_CONTROLLERTYPE,new JavaSymbolName("SEARCH")).getField().getSymbolName())) && controllerAnnotation.getAttribute("entity") != null && controllerAnnotation.getAttribute("entity").getValue().equals(entity)) {  entitySearchControllers.add(controller);} @TO@ if (controllerAnnotation.getAttribute("type") != null && controllerType.equals(ControllerType.getControllerType(new EnumDetails(RooJavaType.ROO_ENUM_CONTROLLER_TYPE,new JavaSymbolName("SEARCH")).getField().getSymbolName())) && controllerAnnotation.getAttribute("entity") != null && controllerAnnotation.getAttribute("entity").getValue().equals(entity)) {  entitySearchControllers.add(controller);} @AT@ 8440 @LENGTH@ 533
---UPD InfixExpression@@controllerAnnotation.getAttribute("type") != null && controllerType.equals(ControllerType.getControllerType(new EnumDetails(RooJavaType.ROO_ENUM_CONTROLLERTYPE,new JavaSymbolName("SEARCH")).getField().getSymbolName())) && controllerAnnotation.getAttribute("entity") != null && controllerAnnotation.getAttribute("entity").getValue().equals(entity) @TO@ controllerAnnotation.getAttribute("type") != null && controllerType.equals(ControllerType.getControllerType(new EnumDetails(RooJavaType.ROO_ENUM_CONTROLLER_TYPE,new JavaSymbolName("SEARCH")).getField().getSymbolName())) && controllerAnnotation.getAttribute("entity") != null && controllerAnnotation.getAttribute("entity").getValue().equals(entity) @AT@ 8444 @LENGTH@ 397
------UPD InfixExpression@@controllerAnnotation.getAttribute("type") != null && controllerType.equals(ControllerType.getControllerType(new EnumDetails(RooJavaType.ROO_ENUM_CONTROLLERTYPE,new JavaSymbolName("SEARCH")).getField().getSymbolName())) && controllerAnnotation.getAttribute("entity") != null @TO@ controllerAnnotation.getAttribute("type") != null && controllerType.equals(ControllerType.getControllerType(new EnumDetails(RooJavaType.ROO_ENUM_CONTROLLER_TYPE,new JavaSymbolName("SEARCH")).getField().getSymbolName())) && controllerAnnotation.getAttribute("entity") != null @AT@ 8444 @LENGTH@ 314
---------UPD InfixExpression@@controllerAnnotation.getAttribute("type") != null && controllerType.equals(ControllerType.getControllerType(new EnumDetails(RooJavaType.ROO_ENUM_CONTROLLERTYPE,new JavaSymbolName("SEARCH")).getField().getSymbolName())) @TO@ controllerAnnotation.getAttribute("type") != null && controllerType.equals(ControllerType.getControllerType(new EnumDetails(RooJavaType.ROO_ENUM_CONTROLLER_TYPE,new JavaSymbolName("SEARCH")).getField().getSymbolName())) @AT@ 8444 @LENGTH@ 259
------------UPD MethodInvocation@@controllerType.equals(ControllerType.getControllerType(new EnumDetails(RooJavaType.ROO_ENUM_CONTROLLERTYPE,new JavaSymbolName("SEARCH")).getField().getSymbolName())) @TO@ controllerType.equals(ControllerType.getControllerType(new EnumDetails(RooJavaType.ROO_ENUM_CONTROLLER_TYPE,new JavaSymbolName("SEARCH")).getField().getSymbolName())) @AT@ 8507 @LENGTH@ 196
---------------UPD SimpleName@@MethodName:equals:[ControllerType.getControllerType(new EnumDetails(RooJavaType.ROO_ENUM_CONTROLLERTYPE,new JavaSymbolName("SEARCH")).getField().getSymbolName())] @TO@ MethodName:equals:[ControllerType.getControllerType(new EnumDetails(RooJavaType.ROO_ENUM_CONTROLLER_TYPE,new JavaSymbolName("SEARCH")).getField().getSymbolName())] @AT@ 8522 @LENGTH@ 181
------------------UPD MethodInvocation@@ControllerType.getControllerType(new EnumDetails(RooJavaType.ROO_ENUM_CONTROLLERTYPE,new JavaSymbolName("SEARCH")).getField().getSymbolName()) @TO@ ControllerType.getControllerType(new EnumDetails(RooJavaType.ROO_ENUM_CONTROLLER_TYPE,new JavaSymbolName("SEARCH")).getField().getSymbolName()) @AT@ 8529 @LENGTH@ 173
---------------------UPD SimpleName@@MethodName:getControllerType:[new EnumDetails(RooJavaType.ROO_ENUM_CONTROLLERTYPE,new JavaSymbolName("SEARCH")).getField().getSymbolName()] @TO@ MethodName:getControllerType:[new EnumDetails(RooJavaType.ROO_ENUM_CONTROLLER_TYPE,new JavaSymbolName("SEARCH")).getField().getSymbolName()] @AT@ 8544 @LENGTH@ 158
------------------------UPD MethodInvocation@@new EnumDetails(RooJavaType.ROO_ENUM_CONTROLLERTYPE,new JavaSymbolName("SEARCH")).getField().getSymbolName() @TO@ new EnumDetails(RooJavaType.ROO_ENUM_CONTROLLER_TYPE,new JavaSymbolName("SEARCH")).getField().getSymbolName() @AT@ 8562 @LENGTH@ 139
---------------------------UPD ClassInstanceCreation@@EnumDetails[RooJavaType.ROO_ENUM_CONTROLLERTYPE, new JavaSymbolName("SEARCH")] @TO@ EnumDetails[RooJavaType.ROO_ENUM_CONTROLLER_TYPE, new JavaSymbolName("SEARCH")] @AT@ 8562 @LENGTH@ 97
------------------------------UPD QualifiedName@@RooJavaType.ROO_ENUM_CONTROLLERTYPE @TO@ RooJavaType.ROO_ENUM_CONTROLLER_TYPE @AT@ 8593 @LENGTH@ 35
---------------------------------UPD SimpleName@@ROO_ENUM_CONTROLLERTYPE @TO@ ROO_ENUM_CONTROLLER_TYPE @AT@ 8605 @LENGTH@ 23


INS MethodDeclaration@@ConnectionFactory, MethodName:getConnectionFactory,  @TO@ TypeDeclaration@@[public]RabbitOperations, [AmqpTemplate] @AT@ 1501 @LENGTH@ 23
---INS SimpleType@@ConnectionFactory @TO@ MethodDeclaration@@ConnectionFactory, MethodName:getConnectionFactory,  @AT@ 1483 @LENGTH@ 17
---INS SimpleName@@MethodName:getConnectionFactory @TO@ MethodDeclaration@@ConnectionFactory, MethodName:getConnectionFactory,  @AT@ 1501 @LENGTH@ 20


UPD TypeDeclaration@@[@Configuration, @ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration"), @EnableConfigurationProperties(XQueryComponentConfiguration.class), public]XQueryComponentAutoConfiguration,  @TO@ [@Configuration, @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration"), @EnableConfigurationProperties(XQueryComponentConfiguration.class), public]XQueryComponentAutoConfiguration,  @AT@ 1625 @LENGTH@ 2057
---UPD NormalAnnotation@@@ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1640 @LENGTH@ 79
---UPD NormalAnnotation@@@AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1720 @LENGTH@ 80


DEL VariableDeclarationStatement@@final String configName=ConfigurationKeys.SECURE_RANDOM_CLASSES_KEY; @AT@ 5961 @LENGTH@ 70
---DEL Modifier@@final @AT@ 5961 @LENGTH@ 5
---DEL SimpleType@@String @AT@ 5967 @LENGTH@ 6
---DEL VariableDeclarationFragment@@configName=ConfigurationKeys.SECURE_RANDOM_CLASSES_KEY @AT@ 5974 @LENGTH@ 56
------DEL SimpleName@@configName @AT@ 5974 @LENGTH@ 10
------DEL QualifiedName@@ConfigurationKeys.SECURE_RANDOM_CLASSES_KEY @AT@ 5987 @LENGTH@ 43
---------DEL SimpleName@@ConfigurationKeys @AT@ 5987 @LENGTH@ 17
---------DEL SimpleName@@SECURE_RANDOM_CLASSES_KEY @AT@ 6005 @LENGTH@ 25


INS MethodDeclaration@@public, void, MethodName:testHandleErrorWhenAccessDeniedMessageAndStatus400ThenThrowsUserDeniedAuthorizationException, Exception,  @TO@ TypeDeclaration@@[@RunWith(MockitoJUnitRunner.class), public]OAuth2ErrorHandlerTests,  @AT@ 7687 @LENGTH@ 609
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testHandleErrorWhenAccessDeniedMessageAndStatus400ThenThrowsUserDeniedAuthorizationException, Exception,  @AT@ 7687 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testHandleErrorWhenAccessDeniedMessageAndStatus400ThenThrowsUserDeniedAuthorizationException, Exception,  @AT@ 7694 @LENGTH@ 4
---INS SimpleName@@MethodName:testHandleErrorWhenAccessDeniedMessageAndStatus400ThenThrowsUserDeniedAuthorizationException @TO@ MethodDeclaration@@public, void, MethodName:testHandleErrorWhenAccessDeniedMessageAndStatus400ThenThrowsUserDeniedAuthorizationException, Exception,  @AT@ 7699 @LENGTH@ 92
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:testHandleErrorWhenAccessDeniedMessageAndStatus400ThenThrowsUserDeniedAuthorizationException, Exception,  @AT@ 7801 @LENGTH@ 9
---INS VariableDeclarationStatement@@String accessDeniedMessage="{\"error\":\"access_denied\", \"error_description\":\"some error message\"}"; @TO@ MethodDeclaration@@public, void, MethodName:testHandleErrorWhenAccessDeniedMessageAndStatus400ThenThrowsUserDeniedAuthorizationException, Exception,  @AT@ 7815 @LENGTH@ 107
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String accessDeniedMessage="{\"error\":\"access_denied\", \"error_description\":\"some error message\"}"; @AT@ 7815 @LENGTH@ 6
------INS VariableDeclarationFragment@@accessDeniedMessage="{\"error\":\"access_denied\", \"error_description\":\"some error message\"}" @TO@ VariableDeclarationStatement@@String accessDeniedMessage="{\"error\":\"access_denied\", \"error_description\":\"some error message\"}"; @AT@ 7822 @LENGTH@ 99
---------INS SimpleName@@accessDeniedMessage @TO@ VariableDeclarationFragment@@accessDeniedMessage="{\"error\":\"access_denied\", \"error_description\":\"some error message\"}" @AT@ 7822 @LENGTH@ 19
---------INS StringLiteral@@"{\"error\":\"access_denied\", \"error_description\":\"some error message\"}" @TO@ VariableDeclarationFragment@@accessDeniedMessage="{\"error\":\"access_denied\", \"error_description\":\"some error message\"}" @AT@ 7844 @LENGTH@ 77
---INS VariableDeclarationStatement@@ByteArrayInputStream messageBody=new ByteArrayInputStream(accessDeniedMessage.getBytes()); @TO@ MethodDeclaration@@public, void, MethodName:testHandleErrorWhenAccessDeniedMessageAndStatus400ThenThrowsUserDeniedAuthorizationException, Exception,  @AT@ 7925 @LENGTH@ 92
------INS SimpleType@@ByteArrayInputStream @TO@ VariableDeclarationStatement@@ByteArrayInputStream messageBody=new ByteArrayInputStream(accessDeniedMessage.getBytes()); @AT@ 7925 @LENGTH@ 20
------INS VariableDeclarationFragment@@messageBody=new ByteArrayInputStream(accessDeniedMessage.getBytes()) @TO@ VariableDeclarationStatement@@ByteArrayInputStream messageBody=new ByteArrayInputStream(accessDeniedMessage.getBytes()); @AT@ 7946 @LENGTH@ 70
---------INS SimpleName@@messageBody @TO@ VariableDeclarationFragment@@messageBody=new ByteArrayInputStream(accessDeniedMessage.getBytes()) @AT@ 7946 @LENGTH@ 11
---------INS ClassInstanceCreation@@ByteArrayInputStream[accessDeniedMessage.getBytes()] @TO@ VariableDeclarationFragment@@messageBody=new ByteArrayInputStream(accessDeniedMessage.getBytes()) @AT@ 7960 @LENGTH@ 56
------------INS New@@new @TO@ ClassInstanceCreation@@ByteArrayInputStream[accessDeniedMessage.getBytes()] @AT@ 7960 @LENGTH@ 3
------------INS SimpleType@@ByteArrayInputStream @TO@ ClassInstanceCreation@@ByteArrayInputStream[accessDeniedMessage.getBytes()] @AT@ 7964 @LENGTH@ 20
------------INS MethodInvocation@@accessDeniedMessage.getBytes() @TO@ ClassInstanceCreation@@ByteArrayInputStream[accessDeniedMessage.getBytes()] @AT@ 7985 @LENGTH@ 30
---------------INS SimpleName@@Name:accessDeniedMessage @TO@ MethodInvocation@@accessDeniedMessage.getBytes() @AT@ 7985 @LENGTH@ 19
---------------INS SimpleName@@MethodName:getBytes:[] @TO@ MethodInvocation@@accessDeniedMessage.getBytes() @AT@ 8005 @LENGTH@ 10
---INS VariableDeclarationStatement@@HttpHeaders headers=new HttpHeaders(); @TO@ MethodDeclaration@@public, void, MethodName:testHandleErrorWhenAccessDeniedMessageAndStatus400ThenThrowsUserDeniedAuthorizationException, Exception,  @AT@ 8020 @LENGTH@ 40
------INS SimpleType@@HttpHeaders @TO@ VariableDeclarationStatement@@HttpHeaders headers=new HttpHeaders(); @AT@ 8020 @LENGTH@ 11
------INS VariableDeclarationFragment@@headers=new HttpHeaders() @TO@ VariableDeclarationStatement@@HttpHeaders headers=new HttpHeaders(); @AT@ 8032 @LENGTH@ 27
---------INS SimpleName@@headers @TO@ VariableDeclarationFragment@@headers=new HttpHeaders() @AT@ 8032 @LENGTH@ 7
---------INS ClassInstanceCreation@@HttpHeaders[] @TO@ VariableDeclarationFragment@@headers=new HttpHeaders() @AT@ 8042 @LENGTH@ 17
------------INS New@@new @TO@ ClassInstanceCreation@@HttpHeaders[] @AT@ 8042 @LENGTH@ 3
------------INS SimpleType@@HttpHeaders @TO@ ClassInstanceCreation@@HttpHeaders[] @AT@ 8046 @LENGTH@ 11
---INS ExpressionStatement@@MethodInvocation:headers.setContentType(MediaType.APPLICATION_JSON) @TO@ MethodDeclaration@@public, void, MethodName:testHandleErrorWhenAccessDeniedMessageAndStatus400ThenThrowsUserDeniedAuthorizationException, Exception,  @AT@ 8063 @LENGTH@ 51
------INS MethodInvocation@@headers.setContentType(MediaType.APPLICATION_JSON) @TO@ ExpressionStatement@@MethodInvocation:headers.setContentType(MediaType.APPLICATION_JSON) @AT@ 8063 @LENGTH@ 50
---------INS SimpleName@@Name:headers @TO@ MethodInvocation@@headers.setContentType(MediaType.APPLICATION_JSON) @AT@ 8063 @LENGTH@ 7
---------INS SimpleName@@MethodName:setContentType:[MediaType.APPLICATION_JSON] @TO@ MethodInvocation@@headers.setContentType(MediaType.APPLICATION_JSON) @AT@ 8071 @LENGTH@ 42
------------INS QualifiedName@@MediaType.APPLICATION_JSON @TO@ SimpleName@@MethodName:setContentType:[MediaType.APPLICATION_JSON] @AT@ 8086 @LENGTH@ 26
---------------INS SimpleName@@MediaType @TO@ QualifiedName@@MediaType.APPLICATION_JSON @AT@ 8086 @LENGTH@ 9
---------------INS SimpleName@@APPLICATION_JSON @TO@ QualifiedName@@MediaType.APPLICATION_JSON @AT@ 8096 @LENGTH@ 16
---INS VariableDeclarationStatement@@ClientHttpResponse response=new TestClientHttpResponse(headers,400,messageBody); @TO@ MethodDeclaration@@public, void, MethodName:testHandleErrorWhenAccessDeniedMessageAndStatus400ThenThrowsUserDeniedAuthorizationException, Exception,  @AT@ 8117 @LENGTH@ 84
------INS SimpleType@@ClientHttpResponse @TO@ VariableDeclarationStatement@@ClientHttpResponse response=new TestClientHttpResponse(headers,400,messageBody); @AT@ 8117 @LENGTH@ 18
------INS VariableDeclarationFragment@@response=new TestClientHttpResponse(headers,400,messageBody) @TO@ VariableDeclarationStatement@@ClientHttpResponse response=new TestClientHttpResponse(headers,400,messageBody); @AT@ 8136 @LENGTH@ 64
---------INS SimpleName@@response @TO@ VariableDeclarationFragment@@response=new TestClientHttpResponse(headers,400,messageBody) @AT@ 8136 @LENGTH@ 8
---------INS ClassInstanceCreation@@TestClientHttpResponse[headers, 400, messageBody] @TO@ VariableDeclarationFragment@@response=new TestClientHttpResponse(headers,400,messageBody) @AT@ 8147 @LENGTH@ 53
------------INS New@@new @TO@ ClassInstanceCreation@@TestClientHttpResponse[headers, 400, messageBody] @AT@ 8147 @LENGTH@ 3
------------INS SimpleType@@TestClientHttpResponse @TO@ ClassInstanceCreation@@TestClientHttpResponse[headers, 400, messageBody] @AT@ 8151 @LENGTH@ 22
------------INS SimpleName@@headers @TO@ ClassInstanceCreation@@TestClientHttpResponse[headers, 400, messageBody] @AT@ 8174 @LENGTH@ 7
------------INS NumberLiteral@@400 @TO@ ClassInstanceCreation@@TestClientHttpResponse[headers, 400, messageBody] @AT@ 8183 @LENGTH@ 3
------------INS SimpleName@@messageBody @TO@ ClassInstanceCreation@@TestClientHttpResponse[headers, 400, messageBody] @AT@ 8188 @LENGTH@ 11
---INS ExpressionStatement@@MethodInvocation:expected.expect(UserDeniedAuthorizationException.class) @TO@ MethodDeclaration@@public, void, MethodName:testHandleErrorWhenAccessDeniedMessageAndStatus400ThenThrowsUserDeniedAuthorizationException, Exception,  @AT@ 8204 @LENGTH@ 56
------INS MethodInvocation@@expected.expect(UserDeniedAuthorizationException.class) @TO@ ExpressionStatement@@MethodInvocation:expected.expect(UserDeniedAuthorizationException.class) @AT@ 8204 @LENGTH@ 55
---------INS SimpleName@@Name:expected @TO@ MethodInvocation@@expected.expect(UserDeniedAuthorizationException.class) @AT@ 8204 @LENGTH@ 8
---------INS SimpleName@@MethodName:expect:[UserDeniedAuthorizationException.class] @TO@ MethodInvocation@@expected.expect(UserDeniedAuthorizationException.class) @AT@ 8213 @LENGTH@ 46
------------INS TypeLiteral@@UserDeniedAuthorizationException.class @TO@ SimpleName@@MethodName:expect:[UserDeniedAuthorizationException.class] @AT@ 8220 @LENGTH@ 38
---INS ExpressionStatement@@MethodInvocation:handler.handleError(response) @TO@ MethodDeclaration@@public, void, MethodName:testHandleErrorWhenAccessDeniedMessageAndStatus400ThenThrowsUserDeniedAuthorizationException, Exception,  @AT@ 8263 @LENGTH@ 30
------INS MethodInvocation@@handler.handleError(response) @TO@ ExpressionStatement@@MethodInvocation:handler.handleError(response) @AT@ 8263 @LENGTH@ 29
---------INS SimpleName@@Name:handler @TO@ MethodInvocation@@handler.handleError(response) @AT@ 8263 @LENGTH@ 7
---------INS SimpleName@@MethodName:handleError:[response] @TO@ MethodInvocation@@handler.handleError(response) @AT@ 8271 @LENGTH@ 21
------------INS SimpleName@@response @TO@ SimpleName@@MethodName:handleError:[response] @AT@ 8283 @LENGTH@ 8


UPD VariableDeclarationStatement@@CsrfToken token=(CsrfToken)request.getAttribute(CsrfRequestPostProcessor.TestCsrfTokenRepository.ATTR_NAME); @TO@ CsrfToken token=(CsrfToken)request.getAttribute(CsrfRequestPostProcessor.TestCsrfTokenRepository.TOKEN_ATTR_NAME); @AT@ 1980 @LENGTH@ 111
---UPD VariableDeclarationFragment@@token=(CsrfToken)request.getAttribute(CsrfRequestPostProcessor.TestCsrfTokenRepository.ATTR_NAME) @TO@ token=(CsrfToken)request.getAttribute(CsrfRequestPostProcessor.TestCsrfTokenRepository.TOKEN_ATTR_NAME) @AT@ 1990 @LENGTH@ 100
------UPD CastExpression@@(CsrfToken)request.getAttribute(CsrfRequestPostProcessor.TestCsrfTokenRepository.ATTR_NAME) @TO@ (CsrfToken)request.getAttribute(CsrfRequestPostProcessor.TestCsrfTokenRepository.TOKEN_ATTR_NAME) @AT@ 1998 @LENGTH@ 92
---------UPD MethodInvocation@@request.getAttribute(CsrfRequestPostProcessor.TestCsrfTokenRepository.ATTR_NAME) @TO@ request.getAttribute(CsrfRequestPostProcessor.TestCsrfTokenRepository.TOKEN_ATTR_NAME) @AT@ 2010 @LENGTH@ 80
------------UPD SimpleName@@MethodName:getAttribute:[CsrfRequestPostProcessor.TestCsrfTokenRepository.ATTR_NAME] @TO@ MethodName:getAttribute:[CsrfRequestPostProcessor.TestCsrfTokenRepository.TOKEN_ATTR_NAME] @AT@ 2018 @LENGTH@ 72
---------------UPD QualifiedName@@CsrfRequestPostProcessor.TestCsrfTokenRepository.ATTR_NAME @TO@ CsrfRequestPostProcessor.TestCsrfTokenRepository.TOKEN_ATTR_NAME @AT@ 2031 @LENGTH@ 58
------------------UPD SimpleName@@ATTR_NAME @TO@ TOKEN_ATTR_NAME @AT@ 2080 @LENGTH@ 9


UPD ExpressionStatement@@MethodInvocation:rooControllerAttributes.add(new EnumAttributeValue(new JavaSymbolName("type"),new EnumDetails(RooJavaType.ROO_ENUM_CONTROLLERTYPE,new JavaSymbolName(controllerType.name())))) @TO@ MethodInvocation:rooControllerAttributes.add(new EnumAttributeValue(new JavaSymbolName("type"),new EnumDetails(RooJavaType.ROO_ENUM_CONTROLLER_TYPE,new JavaSymbolName(controllerType.name())))) @AT@ 26713 @LENGTH@ 186
---UPD MethodInvocation@@rooControllerAttributes.add(new EnumAttributeValue(new JavaSymbolName("type"),new EnumDetails(RooJavaType.ROO_ENUM_CONTROLLERTYPE,new JavaSymbolName(controllerType.name())))) @TO@ rooControllerAttributes.add(new EnumAttributeValue(new JavaSymbolName("type"),new EnumDetails(RooJavaType.ROO_ENUM_CONTROLLER_TYPE,new JavaSymbolName(controllerType.name())))) @AT@ 26713 @LENGTH@ 185
------UPD SimpleName@@MethodName:add:[new EnumAttributeValue(new JavaSymbolName("type"),new EnumDetails(RooJavaType.ROO_ENUM_CONTROLLERTYPE,new JavaSymbolName(controllerType.name())))] @TO@ MethodName:add:[new EnumAttributeValue(new JavaSymbolName("type"),new EnumDetails(RooJavaType.ROO_ENUM_CONTROLLER_TYPE,new JavaSymbolName(controllerType.name())))] @AT@ 26737 @LENGTH@ 161
---------UPD ClassInstanceCreation@@EnumAttributeValue[new JavaSymbolName("type"), new EnumDetails(RooJavaType.ROO_ENUM_CONTROLLERTYPE,new JavaSymbolName(controllerType.name()))] @TO@ EnumAttributeValue[new JavaSymbolName("type"), new EnumDetails(RooJavaType.ROO_ENUM_CONTROLLER_TYPE,new JavaSymbolName(controllerType.name()))] @AT@ 26741 @LENGTH@ 156
------------UPD ClassInstanceCreation@@EnumDetails[RooJavaType.ROO_ENUM_CONTROLLERTYPE, new JavaSymbolName(controllerType.name())] @TO@ EnumDetails[RooJavaType.ROO_ENUM_CONTROLLER_TYPE, new JavaSymbolName(controllerType.name())] @AT@ 26792 @LENGTH@ 104
---------------UPD QualifiedName@@RooJavaType.ROO_ENUM_CONTROLLERTYPE @TO@ RooJavaType.ROO_ENUM_CONTROLLER_TYPE @AT@ 26817 @LENGTH@ 35
------------------UPD SimpleName@@ROO_ENUM_CONTROLLERTYPE @TO@ ROO_ENUM_CONTROLLER_TYPE @AT@ 26829 @LENGTH@ 23


UPD TypeDeclaration@@[@Configuration, @ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration"), @EnableConfigurationProperties(MvelLanguageConfiguration.class), public]MvelLanguageAutoConfiguration,  @TO@ [@Configuration, @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration"), @EnableConfigurationProperties(MvelLanguageConfiguration.class), public]MvelLanguageAutoConfiguration,  @AT@ 1659 @LENGTH@ 1067
---UPD NormalAnnotation@@@ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1674 @LENGTH@ 79
---UPD NormalAnnotation@@@AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1754 @LENGTH@ 80


UPD TypeDeclaration@@[@Configuration, @ComponentScan({"org.springframework.data.neo4j.transactions"}), @EnableTransactionManagement, @EnableNeo4jRepositories, public]ApplicationConfig, Neo4jConfiguration @TO@ [@Configuration, @ComponentScan({"org.springframework.data.neo4j.transactions"}), @EnableTransactionManagement, @EnableNeo4jRepositories, public]ApplicationConfig, Neo4jConfiguration[TransactionManagementConfigurer] @AT@ 1071 @LENGTH@ 339
---INS SimpleType@@TransactionManagementConfigurer @TO@ TypeDeclaration@@[@Configuration, @ComponentScan({"org.springframework.data.neo4j.transactions"}), @EnableTransactionManagement, @EnableNeo4jRepositories, public]ApplicationConfig, Neo4jConfiguration @AT@ 1423 @LENGTH@ 31


UPD TypeDeclaration@@[@Configuration, @ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration"), public]ControlBusComponentAutoConfiguration,  @TO@ [@Configuration, @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration"), public]ControlBusComponentAutoConfiguration,  @AT@ 1456 @LENGTH@ 639
---UPD NormalAnnotation@@@ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1471 @LENGTH@ 79
---UPD NormalAnnotation@@@AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1551 @LENGTH@ 80


UPD TypeDeclaration@@[@Configuration, @ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration"), @EnableConfigurationProperties(BindyKeyValuePairDataFormatConfiguration.class), public]BindyKeyValuePairDataFormatAutoConfiguration,  @TO@ [@Configuration, @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration"), @EnableConfigurationProperties(BindyKeyValuePairDataFormatConfiguration.class), public]BindyKeyValuePairDataFormatAutoConfiguration,  @AT@ 1688 @LENGTH@ 1229
---UPD NormalAnnotation@@@ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1703 @LENGTH@ 79
---UPD NormalAnnotation@@@AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1783 @LENGTH@ 80


UPD ExpressionStatement@@MethodInvocation:assertThat(DBObjectTestUtils.getTypedValue(query.toDocument(),"num",Integer.class),is(num)) @TO@ MethodInvocation:assertThat(DocumentTestUtils.getTypedValue(query.toDocument(),"num",Integer.class),is(num)) @AT@ 4877 @LENGTH@ 95
---UPD MethodInvocation@@assertThat(DBObjectTestUtils.getTypedValue(query.toDocument(),"num",Integer.class),is(num)) @TO@ assertThat(DocumentTestUtils.getTypedValue(query.toDocument(),"num",Integer.class),is(num)) @AT@ 4877 @LENGTH@ 94
------UPD SimpleName@@MethodName:assertThat:[DBObjectTestUtils.getTypedValue(query.toDocument(),"num",Integer.class), is(num)] @TO@ MethodName:assertThat:[DocumentTestUtils.getTypedValue(query.toDocument(),"num",Integer.class), is(num)] @AT@ 4877 @LENGTH@ 94
---------UPD MethodInvocation@@DBObjectTestUtils.getTypedValue(query.toDocument(),"num",Integer.class) @TO@ DocumentTestUtils.getTypedValue(query.toDocument(),"num",Integer.class) @AT@ 4888 @LENGTH@ 73
------------UPD SimpleName@@Name:DBObjectTestUtils @TO@ Name:DocumentTestUtils @AT@ 4888 @LENGTH@ 17


UPD FieldDeclaration@@private, static, Pattern, [RAW_PATTERN=Pattern.compile("RAW\\([^\\)]+\\)")] @TO@ private, static, final, Pattern, [RAW_PATTERN=Pattern.compile("RAW\\([^\\)]+\\)")] @AT@ 1466 @LENGTH@ 73
---INS Modifier@@final @TO@ FieldDeclaration@@private, static, Pattern, [RAW_PATTERN=Pattern.compile("RAW\\([^\\)]+\\)")] @AT@ 1481 @LENGTH@ 5


UPD ExpressionStatement@@Assignment:resolvedHostName=colon > 0 ? host.substring(0,colon - 1) : host @TO@ Assignment:resolvedHostName=colon > 0 ? host.substring(0,colon) : host @AT@ 3465 @LENGTH@ 66
---UPD Assignment@@resolvedHostName=colon > 0 ? host.substring(0,colon - 1) : host @TO@ resolvedHostName=colon > 0 ? host.substring(0,colon) : host @AT@ 3465 @LENGTH@ 65
------UPD ConditionalExpression@@colon > 0 ? host.substring(0,colon - 1) : host @TO@ colon > 0 ? host.substring(0,colon) : host @AT@ 3484 @LENGTH@ 46
---------UPD MethodInvocation@@host.substring(0,colon - 1) @TO@ host.substring(0,colon) @AT@ 3496 @LENGTH@ 27
------------UPD SimpleName@@MethodName:substring:[0, colon - 1] @TO@ MethodName:substring:[0, colon] @AT@ 3501 @LENGTH@ 22
---------------DEL InfixExpression@@colon - 1 @AT@ 3514 @LENGTH@ 8
------------------DEL SimpleName@@colon @AT@ 3514 @LENGTH@ 5
------------------DEL Operator@@- @AT@ 3519 @LENGTH@ 1
------------------DEL NumberLiteral@@1 @AT@ 3521 @LENGTH@ 1
---------------INS SimpleName@@colon @TO@ SimpleName@@MethodName:substring:[0, colon - 1] @AT@ 3514 @LENGTH@ 5


UPD TypeDeclaration@@[@Configuration, @ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration"), public]DdbComponentAutoConfiguration,  @TO@ [@Configuration, @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration"), public]DdbComponentAutoConfiguration,  @AT@ 1443 @LENGTH@ 593
---UPD NormalAnnotation@@@ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1458 @LENGTH@ 79
---UPD NormalAnnotation@@@AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1538 @LENGTH@ 80


UPD TypeDeclaration@@[@Configuration, @ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration"), @EnableConfigurationProperties(DirectVmComponentConfiguration.class), public]DirectVmComponentAutoConfiguration,  @TO@ [@Configuration, @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration"), @EnableConfigurationProperties(DirectVmComponentConfiguration.class), public]DirectVmComponentAutoConfiguration,  @AT@ 1631 @LENGTH@ 2089
---UPD NormalAnnotation@@@ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1646 @LENGTH@ 79
---UPD NormalAnnotation@@@AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1726 @LENGTH@ 80


INS FieldDeclaration@@public, static, final, JavaType, [ARRAYS=new JavaType("java.util.Arrays")] @TO@ TypeDeclaration@@[public]JavaType, [Comparable<JavaType>] @AT@ 3809 @LENGTH@ 71
---INS Modifier@@public @TO@ FieldDeclaration@@public, static, final, JavaType, [ARRAYS=new JavaType("java.util.Arrays")] @AT@ 3809 @LENGTH@ 6
---INS Modifier@@static @TO@ FieldDeclaration@@public, static, final, JavaType, [ARRAYS=new JavaType("java.util.Arrays")] @AT@ 3816 @LENGTH@ 6
---INS Modifier@@final @TO@ FieldDeclaration@@public, static, final, JavaType, [ARRAYS=new JavaType("java.util.Arrays")] @AT@ 3823 @LENGTH@ 5
---INS SimpleType@@JavaType @TO@ FieldDeclaration@@public, static, final, JavaType, [ARRAYS=new JavaType("java.util.Arrays")] @AT@ 3829 @LENGTH@ 8
---INS VariableDeclarationFragment@@ARRAYS=new JavaType("java.util.Arrays") @TO@ FieldDeclaration@@public, static, final, JavaType, [ARRAYS=new JavaType("java.util.Arrays")] @AT@ 3838 @LENGTH@ 41
------INS SimpleName@@ARRAYS @TO@ VariableDeclarationFragment@@ARRAYS=new JavaType("java.util.Arrays") @AT@ 3838 @LENGTH@ 6
------INS ClassInstanceCreation@@JavaType["java.util.Arrays"] @TO@ VariableDeclarationFragment@@ARRAYS=new JavaType("java.util.Arrays") @AT@ 3847 @LENGTH@ 32
---------INS New@@new @TO@ ClassInstanceCreation@@JavaType["java.util.Arrays"] @AT@ 3847 @LENGTH@ 3
---------INS SimpleType@@JavaType @TO@ ClassInstanceCreation@@JavaType["java.util.Arrays"] @AT@ 3851 @LENGTH@ 8
---------INS StringLiteral@@"java.util.Arrays" @TO@ ClassInstanceCreation@@JavaType["java.util.Arrays"] @AT@ 3860 @LENGTH@ 18


INS MethodDeclaration@@protected, boolean, MethodName:isContextRelative,  @TO@ TypeDeclaration@@[public]DefaultRedirectStrategy, [RedirectStrategy] @AT@ 3075 @LENGTH@ 68
---INS Modifier@@protected @TO@ MethodDeclaration@@protected, boolean, MethodName:isContextRelative,  @AT@ 3075 @LENGTH@ 9
---INS PrimitiveType@@boolean @TO@ MethodDeclaration@@protected, boolean, MethodName:isContextRelative,  @AT@ 3085 @LENGTH@ 7
---INS SimpleName@@MethodName:isContextRelative @TO@ MethodDeclaration@@protected, boolean, MethodName:isContextRelative,  @AT@ 3093 @LENGTH@ 17
---INS ReturnStatement@@SimpleName:contextRelative @TO@ MethodDeclaration@@protected, boolean, MethodName:isContextRelative,  @AT@ 3117 @LENGTH@ 23
------INS SimpleName@@contextRelative @TO@ ReturnStatement@@SimpleName:contextRelative @AT@ 3124 @LENGTH@ 15


INS MethodDeclaration@@public, static, boolean, MethodName:isMmTable, Properties params,  @TO@ TypeDeclaration@@[public]MetaStoreUtils,  @AT@ 69119 @LENGTH@ 259
---INS Modifier@@public @TO@ MethodDeclaration@@public, static, boolean, MethodName:isMmTable, Properties params,  @AT@ 69119 @LENGTH@ 6
---INS Modifier@@static @TO@ MethodDeclaration@@public, static, boolean, MethodName:isMmTable, Properties params,  @AT@ 69126 @LENGTH@ 6
---INS PrimitiveType@@boolean @TO@ MethodDeclaration@@public, static, boolean, MethodName:isMmTable, Properties params,  @AT@ 69133 @LENGTH@ 7
---INS SimpleName@@MethodName:isMmTable @TO@ MethodDeclaration@@public, static, boolean, MethodName:isMmTable, Properties params,  @AT@ 69141 @LENGTH@ 9
---INS SingleVariableDeclaration@@Properties params @TO@ MethodDeclaration@@public, static, boolean, MethodName:isMmTable, Properties params,  @AT@ 69151 @LENGTH@ 17
------INS SimpleType@@Properties @TO@ SingleVariableDeclaration@@Properties params @AT@ 69151 @LENGTH@ 10
------INS SimpleName@@params @TO@ SingleVariableDeclaration@@Properties params @AT@ 69162 @LENGTH@ 6
---INS VariableDeclarationStatement@@String value=params.getProperty(hive_metastoreConstants.TABLE_IS_MM); @TO@ MethodDeclaration@@public, static, boolean, MethodName:isMmTable, Properties params,  @AT@ 69243 @LENGTH@ 71
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String value=params.getProperty(hive_metastoreConstants.TABLE_IS_MM); @AT@ 69243 @LENGTH@ 6
------INS VariableDeclarationFragment@@value=params.getProperty(hive_metastoreConstants.TABLE_IS_MM) @TO@ VariableDeclarationStatement@@String value=params.getProperty(hive_metastoreConstants.TABLE_IS_MM); @AT@ 69250 @LENGTH@ 63
---------INS SimpleName@@value @TO@ VariableDeclarationFragment@@value=params.getProperty(hive_metastoreConstants.TABLE_IS_MM) @AT@ 69250 @LENGTH@ 5
---------INS MethodInvocation@@params.getProperty(hive_metastoreConstants.TABLE_IS_MM) @TO@ VariableDeclarationFragment@@value=params.getProperty(hive_metastoreConstants.TABLE_IS_MM) @AT@ 69258 @LENGTH@ 55
------------INS SimpleName@@Name:params @TO@ MethodInvocation@@params.getProperty(hive_metastoreConstants.TABLE_IS_MM) @AT@ 69258 @LENGTH@ 6
------------INS SimpleName@@MethodName:getProperty:[hive_metastoreConstants.TABLE_IS_MM] @TO@ MethodInvocation@@params.getProperty(hive_metastoreConstants.TABLE_IS_MM) @AT@ 69265 @LENGTH@ 48
---------------INS QualifiedName@@hive_metastoreConstants.TABLE_IS_MM @TO@ SimpleName@@MethodName:getProperty:[hive_metastoreConstants.TABLE_IS_MM] @AT@ 69277 @LENGTH@ 35
------------------INS SimpleName@@hive_metastoreConstants @TO@ QualifiedName@@hive_metastoreConstants.TABLE_IS_MM @AT@ 69277 @LENGTH@ 23
------------------INS SimpleName@@TABLE_IS_MM @TO@ QualifiedName@@hive_metastoreConstants.TABLE_IS_MM @AT@ 69301 @LENGTH@ 11
---INS ReturnStatement@@InfixExpression:value != null && value.equalsIgnoreCase("true") @TO@ MethodDeclaration@@public, static, boolean, MethodName:isMmTable, Properties params,  @AT@ 69319 @LENGTH@ 55
------INS InfixExpression@@value != null && value.equalsIgnoreCase("true") @TO@ ReturnStatement@@InfixExpression:value != null && value.equalsIgnoreCase("true") @AT@ 69326 @LENGTH@ 47
---------INS InfixExpression@@value != null @TO@ InfixExpression@@value != null && value.equalsIgnoreCase("true") @AT@ 69326 @LENGTH@ 13
------------INS SimpleName@@value @TO@ InfixExpression@@value != null @AT@ 69326 @LENGTH@ 5
------------INS Operator@@!= @TO@ InfixExpression@@value != null @AT@ 69331 @LENGTH@ 2
------------INS NullLiteral@@null @TO@ InfixExpression@@value != null @AT@ 69335 @LENGTH@ 4
---------INS Operator@@&& @TO@ InfixExpression@@value != null && value.equalsIgnoreCase("true") @AT@ 69339 @LENGTH@ 2
---------INS MethodInvocation@@value.equalsIgnoreCase("true") @TO@ InfixExpression@@value != null && value.equalsIgnoreCase("true") @AT@ 69343 @LENGTH@ 30
------------INS SimpleName@@Name:value @TO@ MethodInvocation@@value.equalsIgnoreCase("true") @AT@ 69343 @LENGTH@ 5
------------INS SimpleName@@MethodName:equalsIgnoreCase:["true"] @TO@ MethodInvocation@@value.equalsIgnoreCase("true") @AT@ 69349 @LENGTH@ 24
---------------INS StringLiteral@@"true" @TO@ SimpleName@@MethodName:equalsIgnoreCase:["true"] @AT@ 69366 @LENGTH@ 6


UPD MethodDeclaration@@public, TTransport, MethodName:createClientTransport, String principalConfig, String host, String methodStr, String tokenStrForm, TTransport underlyingTransport, Map<String,String> saslProps, IOException,  @TO@ public, TTransport, MethodName:createClientTransport, String principalConfig, String host, String methodStr, String tokenStrForm, final TTransport underlyingTransport, final Map<String,String> saslProps, IOException,  @AT@ 7354 @LENGTH@ 1799
---UPD SingleVariableDeclaration@@TTransport underlyingTransport @TO@ final TTransport underlyingTransport @AT@ 7487 @LENGTH@ 30
------INS Modifier@@final @TO@ SingleVariableDeclaration@@TTransport underlyingTransport @AT@ 7487 @LENGTH@ 5
---UPD SingleVariableDeclaration@@Map<String,String> saslProps @TO@ final Map<String,String> saslProps @AT@ 7527 @LENGTH@ 29
------INS Modifier@@final @TO@ SingleVariableDeclaration@@Map<String,String> saslProps @AT@ 7533 @LENGTH@ 5
---UPD VariableDeclarationStatement@@AuthMethod method=AuthMethod.valueOf(AuthMethod.class,methodStr); @TO@ final AuthMethod method=AuthMethod.valueOf(AuthMethod.class,methodStr); @AT@ 7585 @LENGTH@ 68
------INS Modifier@@final @TO@ VariableDeclarationStatement@@AuthMethod method=AuthMethod.valueOf(AuthMethod.class,methodStr); @AT@ 7597 @LENGTH@ 5
---UPD SwitchStatement@@switch (method) {case DIGEST:  Token<DelegationTokenIdentifier> t=new Token<DelegationTokenIdentifier>();t.decodeFromUrlString(tokenStrForm);saslTransport=new TSaslClientTransport(method.getMechanismName(),null,null,SaslRpcServer.SASL_DEFAULT_REALM,saslProps,new SaslClientCallbackHandler(t),underlyingTransport);return new TUGIAssumingTransport(saslTransport,UserGroupInformation.getCurrentUser());case KERBEROS:String serverPrincipal=SecurityUtil.getServerPrincipal(principalConfig,host);String names[]=SaslRpcServer.splitKerberosName(serverPrincipal);if (names.length != 3) {throw new IOException("Kerberos principal name does NOT have the expected hostname part: " + serverPrincipal);}try {saslTransport=new TSaslClientTransport(method.getMechanismName(),null,names[0],names[1],saslProps,null,underlyingTransport);return new TUGIAssumingTransport(saslTransport,UserGroupInformation.getCurrentUser());} catch (SaslException se) {throw new IOException("Could not instantiate SASL transport",se);}default :throw new IOException("Unsupported authentication method: " + method);} @TO@ switch (method) {case DIGEST:  Token<DelegationTokenIdentifier> t=new Token<DelegationTokenIdentifier>();t.decodeFromUrlString(tokenStrForm);saslTransport=new TSaslClientTransport(method.getMechanismName(),null,null,SaslRpcServer.SASL_DEFAULT_REALM,saslProps,new SaslClientCallbackHandler(t),underlyingTransport);return new TUGIAssumingTransport(saslTransport,UserGroupInformation.getCurrentUser());case KERBEROS:String serverPrincipal=SecurityUtil.getServerPrincipal(principalConfig,host);final String names[]=SaslRpcServer.splitKerberosName(serverPrincipal);if (names.length != 3) {throw new IOException("Kerberos principal name does NOT have the expected hostname part: " + serverPrincipal);}try {return UserGroupInformation.getCurrentUser().doAs(new PrivilegedExceptionAction<TUGIAssumingTransport>(){@Override public TUGIAssumingTransport run() throws IOException {TTransport saslTransport=new TSaslClientTransport(method.getMechanismName(),null,names[0],names[1],saslProps,null,underlyingTransport);return new TUGIAssumingTransport(saslTransport,UserGroupInformation.getCurrentUser());}});} catch (InterruptedException|SaslException se) {throw new IOException("Could not instantiate SASL transport",se);}default :throw new IOException("Unsupported authentication method: " + method);} @AT@ 7700 @LENGTH@ 1447
------UPD VariableDeclarationStatement@@String names[]=SaslRpcServer.splitKerberosName(serverPrincipal); @TO@ final String names[]=SaslRpcServer.splitKerberosName(serverPrincipal); @AT@ 8331 @LENGTH@ 66
---------INS Modifier@@final @TO@ VariableDeclarationStatement@@String names[]=SaslRpcServer.splitKerberosName(serverPrincipal); @AT@ 8349 @LENGTH@ 5
------UPD TryStatement@@try {  saslTransport=new TSaslClientTransport(method.getMechanismName(),null,names[0],names[1],saslProps,null,underlyingTransport);  return new TUGIAssumingTransport(saslTransport,UserGroupInformation.getCurrentUser());} catch (SaslException se) {  throw new IOException("Could not instantiate SASL transport",se);} @TO@ try {  return UserGroupInformation.getCurrentUser().doAs(new PrivilegedExceptionAction<TUGIAssumingTransport>(){    @Override public TUGIAssumingTransport run() throws IOException {      TTransport saslTransport=new TSaslClientTransport(method.getMechanismName(),null,names[0],names[1],saslProps,null,underlyingTransport);      return new TUGIAssumingTransport(saslTransport,UserGroupInformation.getCurrentUser());    }  });} catch (InterruptedException|SaslException se) {  throw new IOException("Could not instantiate SASL transport",se);} @AT@ 8603 @LENGTH@ 441
---------DEL ExpressionStatement@@Assignment:saslTransport=new TSaslClientTransport(method.getMechanismName(),null,names[0],names[1],saslProps,null,underlyingTransport) @AT@ 8619 @LENGTH@ 203
------------DEL Assignment@@saslTransport=new TSaslClientTransport(method.getMechanismName(),null,names[0],names[1],saslProps,null,underlyingTransport) @AT@ 8619 @LENGTH@ 202
---------------DEL SimpleName@@saslTransport @AT@ 8619 @LENGTH@ 13
---------------DEL Operator@@= @AT@ 8632 @LENGTH@ 1
---------INS ReturnStatement@@MethodInvocation:UserGroupInformation.getCurrentUser().doAs(new PrivilegedExceptionAction<TUGIAssumingTransport>(){
  @Override public TUGIAssumingTransport run() throws IOException {
    TTransport saslTransport=new TSaslClientTransport(method.getMechanismName(),null,names[0],names[1],saslProps,null,underlyingTransport);
    return new TUGIAssumingTransport(saslTransport,UserGroupInformation.getCurrentUser());
  }
}
) @TO@ TryStatement@@try {  saslTransport=new TSaslClientTransport(method.getMechanismName(),null,names[0],names[1],saslProps,null,underlyingTransport);  return new TUGIAssumingTransport(saslTransport,UserGroupInformation.getCurrentUser());} catch (SaslException se) {  throw new IOException("Could not instantiate SASL transport",se);} @AT@ 8643 @LENGTH@ 624
------------INS MethodInvocation@@UserGroupInformation.getCurrentUser().doAs(new PrivilegedExceptionAction<TUGIAssumingTransport>(){
  @Override public TUGIAssumingTransport run() throws IOException {
    TTransport saslTransport=new TSaslClientTransport(method.getMechanismName(),null,names[0],names[1],saslProps,null,underlyingTransport);
    return new TUGIAssumingTransport(saslTransport,UserGroupInformation.getCurrentUser());
  }
}
) @TO@ ReturnStatement@@MethodInvocation:UserGroupInformation.getCurrentUser().doAs(new PrivilegedExceptionAction<TUGIAssumingTransport>(){
  @Override public TUGIAssumingTransport run() throws IOException {
    TTransport saslTransport=new TSaslClientTransport(method.getMechanismName(),null,names[0],names[1],saslProps,null,underlyingTransport);
    return new TUGIAssumingTransport(saslTransport,UserGroupInformation.getCurrentUser());
  }
}
) @AT@ 8650 @LENGTH@ 616
---------------INS MethodInvocation@@MethodName:getCurrentUser:[] @TO@ MethodInvocation@@UserGroupInformation.getCurrentUser().doAs(new PrivilegedExceptionAction<TUGIAssumingTransport>(){
  @Override public TUGIAssumingTransport run() throws IOException {
    TTransport saslTransport=new TSaslClientTransport(method.getMechanismName(),null,names[0],names[1],saslProps,null,underlyingTransport);
    return new TUGIAssumingTransport(saslTransport,UserGroupInformation.getCurrentUser());
  }
}
) @AT@ 8650 @LENGTH@ 37
---------------INS SimpleName@@Name:UserGroupInformation @TO@ MethodInvocation@@UserGroupInformation.getCurrentUser().doAs(new PrivilegedExceptionAction<TUGIAssumingTransport>(){
  @Override public TUGIAssumingTransport run() throws IOException {
    TTransport saslTransport=new TSaslClientTransport(method.getMechanismName(),null,names[0],names[1],saslProps,null,underlyingTransport);
    return new TUGIAssumingTransport(saslTransport,UserGroupInformation.getCurrentUser());
  }
}
) @AT@ 8650 @LENGTH@ 20
---------------INS SimpleName@@MethodName:doAs:[new PrivilegedExceptionAction<TUGIAssumingTransport>(){
  @Override public TUGIAssumingTransport run() throws IOException {
    TTransport saslTransport=new TSaslClientTransport(method.getMechanismName(),null,names[0],names[1],saslProps,null,underlyingTransport);
    return new TUGIAssumingTransport(saslTransport,UserGroupInformation.getCurrentUser());
  }
}
] @TO@ MethodInvocation@@UserGroupInformation.getCurrentUser().doAs(new PrivilegedExceptionAction<TUGIAssumingTransport>(){
  @Override public TUGIAssumingTransport run() throws IOException {
    TTransport saslTransport=new TSaslClientTransport(method.getMechanismName(),null,names[0],names[1],saslProps,null,underlyingTransport);
    return new TUGIAssumingTransport(saslTransport,UserGroupInformation.getCurrentUser());
  }
}
) @AT@ 8688 @LENGTH@ 578
------------------INS ClassInstanceCreation@@PrivilegedExceptionAction<TUGIAssumingTransport>[] @TO@ SimpleName@@MethodName:doAs:[new PrivilegedExceptionAction<TUGIAssumingTransport>(){
  @Override public TUGIAssumingTransport run() throws IOException {
    TTransport saslTransport=new TSaslClientTransport(method.getMechanismName(),null,names[0],names[1],saslProps,null,underlyingTransport);
    return new TUGIAssumingTransport(saslTransport,UserGroupInformation.getCurrentUser());
  }
}
] @AT@ 8708 @LENGTH@ 557
---------------------INS New@@new @TO@ ClassInstanceCreation@@PrivilegedExceptionAction<TUGIAssumingTransport>[] @AT@ 8708 @LENGTH@ 3
---------------------INS ParameterizedType@@PrivilegedExceptionAction<TUGIAssumingTransport> @TO@ ClassInstanceCreation@@PrivilegedExceptionAction<TUGIAssumingTransport>[] @AT@ 8712 @LENGTH@ 48
------------------------INS SimpleType@@PrivilegedExceptionAction @TO@ ParameterizedType@@PrivilegedExceptionAction<TUGIAssumingTransport> @AT@ 8712 @LENGTH@ 25
------------------------INS SimpleType@@TUGIAssumingTransport @TO@ ParameterizedType@@PrivilegedExceptionAction<TUGIAssumingTransport> @AT@ 8738 @LENGTH@ 21
---------------------INS AnonymousClassDeclaration@@AnonymousClass @TO@ ClassInstanceCreation@@PrivilegedExceptionAction<TUGIAssumingTransport>[] @AT@ 8763 @LENGTH@ 502
------------------------INS MethodDeclaration@@public, TUGIAssumingTransport, MethodName:run, IOException,  @TO@ AnonymousClassDeclaration@@AnonymousClass @AT@ 8807 @LENGTH@ 442
---------------------------INS Modifier@@public @TO@ MethodDeclaration@@public, TUGIAssumingTransport, MethodName:run, IOException,  @AT@ 8807 @LENGTH@ 6
---------------------------INS SimpleType@@TUGIAssumingTransport @TO@ MethodDeclaration@@public, TUGIAssumingTransport, MethodName:run, IOException,  @AT@ 8814 @LENGTH@ 21
---------------------------MOV ReturnStatement@@ClassInstanceCreation:new TUGIAssumingTransport(saslTransport,UserGroupInformation.getCurrentUser()) @TO@ MethodDeclaration@@public, TUGIAssumingTransport, MethodName:run, IOException,  @AT@ 8833 @LENGTH@ 87
---------------------------INS SimpleName@@MethodName:run @TO@ MethodDeclaration@@public, TUGIAssumingTransport, MethodName:run, IOException,  @AT@ 8836 @LENGTH@ 3
---------------------------INS SimpleType@@IOException @TO@ MethodDeclaration@@public, TUGIAssumingTransport, MethodName:run, IOException,  @AT@ 8849 @LENGTH@ 11
---------------------------INS VariableDeclarationStatement@@TTransport saslTransport=new TSaslClientTransport(method.getMechanismName(),null,names[0],names[1],saslProps,null,underlyingTransport); @TO@ MethodDeclaration@@public, TUGIAssumingTransport, MethodName:run, IOException,  @AT@ 8881 @LENGTH@ 244
------------------------------INS SimpleType@@TTransport @TO@ VariableDeclarationStatement@@TTransport saslTransport=new TSaslClientTransport(method.getMechanismName(),null,names[0],names[1],saslProps,null,underlyingTransport); @AT@ 8881 @LENGTH@ 10
------------------------------INS VariableDeclarationFragment@@saslTransport=new TSaslClientTransport(method.getMechanismName(),null,names[0],names[1],saslProps,null,underlyingTransport) @TO@ VariableDeclarationStatement@@TTransport saslTransport=new TSaslClientTransport(method.getMechanismName(),null,names[0],names[1],saslProps,null,underlyingTransport); @AT@ 8892 @LENGTH@ 232
---------------------------------MOV ClassInstanceCreation@@TSaslClientTransport[method.getMechanismName(), null, names[0], names[1], saslProps, null, underlyingTransport] @TO@ VariableDeclarationFragment@@saslTransport=new TSaslClientTransport(method.getMechanismName(),null,names[0],names[1],saslProps,null,underlyingTransport) @AT@ 8635 @LENGTH@ 186
---------------------------------INS SimpleName@@saslTransport @TO@ VariableDeclarationFragment@@saslTransport=new TSaslClientTransport(method.getMechanismName(),null,names[0],names[1],saslProps,null,underlyingTransport) @AT@ 8892 @LENGTH@ 13
---------UPD CatchClause@@catch (SaslException se) {  throw new IOException("Could not instantiate SASL transport",se);} @TO@ catch (InterruptedException|SaslException se) {  throw new IOException("Could not instantiate SASL transport",se);} @AT@ 8931 @LENGTH@ 113
------------UPD SingleVariableDeclaration@@SaslException se @TO@ InterruptedException|SaslException se @AT@ 8938 @LENGTH@ 16
---------------DEL SimpleType@@SaslException @AT@ 8938 @LENGTH@ 13
---------------INS UnionType@@InterruptedException|SaslException @TO@ SingleVariableDeclaration@@SaslException se @AT@ 9285 @LENGTH@ 36
------------------INS SimpleType@@InterruptedException @TO@ UnionType@@InterruptedException|SaslException @AT@ 9285 @LENGTH@ 20
------------------INS SimpleType@@SaslException @TO@ UnionType@@InterruptedException|SaslException @AT@ 9308 @LENGTH@ 13


UPD TypeDeclaration@@[@Configuration, @ComponentScan(basePackages="org.springframework.data.neo4j.transactions",excludeFilters=@ComponentScan.Filter(type=FilterType.REGEX,pattern="org\\.springframework\\.data\\.neo4j\\.transactions\\.TransactionalEventListenerTests.*")), @EnableTransactionManagement, @EnableNeo4jRepositories, public]ThreadScopeSessionBeanContext, Neo4jConfiguration @TO@ [@Configuration, @ComponentScan(basePackages="org.springframework.data.neo4j.transactions.service"), @EnableTransactionManagement, @EnableNeo4jRepositories, public]ThreadScopeSessionBeanContext, Neo4jConfiguration @AT@ 570 @LENGTH@ 1063
---UPD NormalAnnotation@@@ComponentScan(basePackages="org.springframework.data.neo4j.transactions",excludeFilters=@ComponentScan.Filter(type=FilterType.REGEX,pattern="org\\.springframework\\.data\\.neo4j\\.transactions\\.TransactionalEventListenerTests.*")) @TO@ @ComponentScan(basePackages="org.springframework.data.neo4j.transactions.service") @AT@ 585 @LENGTH@ 282


UPD FieldDeclaration@@public, static, final, String, [KAFKA_RECORDMETA="kafka.RECORDMETA"] @TO@ public, static, final, String, [KAFKA_RECORDMETA="org.apache.kafka.clients.producer.RecordMetadata"] @AT@ 1846 @LENGTH@ 65
---UPD VariableDeclarationFragment@@KAFKA_RECORDMETA="kafka.RECORDMETA" @TO@ KAFKA_RECORDMETA="org.apache.kafka.clients.producer.RecordMetadata" @AT@ 1873 @LENGTH@ 37
------UPD StringLiteral@@"kafka.RECORDMETA" @TO@ "org.apache.kafka.clients.producer.RecordMetadata" @AT@ 1892 @LENGTH@ 18


INS IfStatement@@if (transitive) {  config.getResolutionStrategy().setForcedModules(this.project.getConfigurations().getByName("compile").getResolutionStrategy().getForcedModules());} @TO@ MethodDeclaration@@private, Collection<ResolvedArtifact>, MethodName:doResolve, final Collection<ArtifactSpec> deps, boolean transitive,  @AT@ 3684 @LENGTH@ 408
---INS SimpleName@@transitive @TO@ IfStatement@@if (transitive) {  config.getResolutionStrategy().setForcedModules(this.project.getConfigurations().getByName("compile").getResolutionStrategy().getForcedModules());} @AT@ 3689 @LENGTH@ 10
---INS Block@@ThenBody:{  config.getResolutionStrategy().setForcedModules(this.project.getConfigurations().getByName("compile").getResolutionStrategy().getForcedModules());} @TO@ IfStatement@@if (transitive) {  config.getResolutionStrategy().setForcedModules(this.project.getConfigurations().getByName("compile").getResolutionStrategy().getForcedModules());} @AT@ 3702 @LENGTH@ 390
------MOV ExpressionStatement@@MethodInvocation:config.getResolutionStrategy().setForcedModules(this.project.getConfigurations().getByName("compile").getResolutionStrategy().getForcedModules()) @TO@ Block@@ThenBody:{  config.getResolutionStrategy().setForcedModules(this.project.getConfigurations().getByName("compile").getResolutionStrategy().getForcedModules());} @AT@ 3684 @LENGTH@ 163


UPD TypeDeclaration@@[@Configuration, @ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration"), public]EC2ComponentAutoConfiguration,  @TO@ [@Configuration, @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration"), public]EC2ComponentAutoConfiguration,  @AT@ 1443 @LENGTH@ 593
---UPD NormalAnnotation@@@ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1458 @LENGTH@ 79
---UPD NormalAnnotation@@@AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1538 @LENGTH@ 80


UPD TypeDeclaration@@[@Configuration, @ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration"), @EnableConfigurationProperties(VertxComponentConfiguration.class), public]VertxComponentAutoConfiguration,  @TO@ [@Configuration, @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration"), @EnableConfigurationProperties(VertxComponentConfiguration.class), public]VertxComponentAutoConfiguration,  @AT@ 1622 @LENGTH@ 2048
---UPD NormalAnnotation@@@ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1637 @LENGTH@ 79
---UPD NormalAnnotation@@@AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1717 @LENGTH@ 80


UPD ExpressionStatement@@MethodInvocation:ActionsEnum.valueOf(action) @TO@ MethodInvocation:AsteriskActionEnum.valueOf(action) @AT@ 2986 @LENGTH@ 28
---UPD MethodInvocation@@ActionsEnum.valueOf(action) @TO@ AsteriskActionEnum.valueOf(action) @AT@ 2986 @LENGTH@ 27
------UPD SimpleName@@Name:ActionsEnum @TO@ Name:AsteriskActionEnum @AT@ 2986 @LENGTH@ 11


UPD TypeDeclaration@@[@Configuration, @ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration"), @EnableConfigurationProperties(XStreamDataFormatConfiguration.class), public]XStreamDataFormatAutoConfiguration,  @TO@ [@Configuration, @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration"), @EnableConfigurationProperties(XStreamDataFormatConfiguration.class), public]XStreamDataFormatAutoConfiguration,  @AT@ 1674 @LENGTH@ 1135
---UPD NormalAnnotation@@@ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1689 @LENGTH@ 79
---UPD NormalAnnotation@@@AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1769 @LENGTH@ 80


UPD VariableDeclarationStatement@@String provider=getJCEProvider(props); @TO@ final String provider=props.getProperty(ConfigurationKeys.CIPHER_JCE_PROVIDER_KEY); @AT@ 2204 @LENGTH@ 40
---INS Modifier@@final @TO@ VariableDeclarationStatement@@String provider=getJCEProvider(props); @AT@ 2204 @LENGTH@ 5
---UPD VariableDeclarationFragment@@provider=getJCEProvider(props) @TO@ provider=props.getProperty(ConfigurationKeys.CIPHER_JCE_PROVIDER_KEY) @AT@ 2211 @LENGTH@ 32
------MOV MethodInvocation@@props.getProperty(ConfigurationKeys.CIPHER_JCE_PROVIDER_KEY) @TO@ VariableDeclarationFragment@@provider=getJCEProvider(props) @AT@ 8939 @LENGTH@ 60


UPD IfStatement@@if (objectToUpdate instanceof PartialUpdate) {  doPartialUpdate((PartialUpdate<?>)objectToUpdate);} @TO@ if (objectToUpdate instanceof PartialUpdate) {  doPartialUpdate((PartialUpdate<?>)objectToUpdate);  return;} @AT@ 4427 @LENGTH@ 105
---UPD Block@@ThenBody:{  doPartialUpdate((PartialUpdate<?>)objectToUpdate);} @TO@ ThenBody:{  doPartialUpdate((PartialUpdate<?>)objectToUpdate);  return;} @AT@ 4472 @LENGTH@ 60
------INS ReturnStatement@@ @TO@ Block@@ThenBody:{  doPartialUpdate((PartialUpdate<?>)objectToUpdate);} @AT@ 4483 @LENGTH@ 7


UPD ReturnStatement@@LambdaExpression:(ModelNode model) -> {
  if (InfinispanModel.VERSION_4_0_0.requiresTransformation(version)) {
    Arrays.asList("cache-with-string-keyed-store","cache-with-binary-keyed-store").forEach(cacheName -> {
      ModelNode cache=model.get("cache-container","maximal","replicated-cache",cacheName);
      assertFalse(cache.hasDefined(StateTransferResourceDefinition.LEGACY_PATH.getKeyValuePair()));
      ModelNode stateTransfer=cache.get(StateTransferResourceDefinition.LEGACY_PATH.getKeyValuePair());
      stateTransfer.get(StateTransferResourceDefinition.Attribute.CHUNK_SIZE.getDefinition().getName()).set(StateTransferResourceDefinition.Attribute.CHUNK_SIZE.getDefinition().getDefaultValue());
      stateTransfer.get(StateTransferResourceDefinition.Attribute.TIMEOUT.getDefinition().getName()).set(StateTransferResourceDefinition.Attribute.TIMEOUT.getDefinition().getDefaultValue());
    }
);
  }
  return model;
}
 @TO@ LambdaExpression:(ModelNode model) -> {
  if (InfinispanModel.VERSION_4_1_0.requiresTransformation(version)) {
    final ModelNode maximal=model.get("cache-container","maximal");
    maximal.asPropertyList().stream().filter(caches -> caches.getName().equals("distributed-cache") || caches.getName().equals("replicated-cache")).forEach(p -> {
      ModelNode caches=maximal.get(p.getName());
      final List<Property> cachesModel=caches.asPropertyList();
      for (      Property cacheName : cachesModel) {
        final ModelNode cache=caches.get(cacheName.getName());
        if (cache.hasDefined("component")) {
          cache.get("component","backups").set(new ModelNode());
        }
      }
    }
);
  }
  if (InfinispanModel.VERSION_4_0_0.requiresTransformation(version)) {
    Arrays.asList("cache-with-string-keyed-store","cache-with-binary-keyed-store").forEach(cacheName -> {
      ModelNode cache=model.get("cache-container","maximal","replicated-cache",cacheName);
      assertFalse(cache.hasDefined(StateTransferResourceDefinition.LEGACY_PATH.getKeyValuePair()));
      ModelNode stateTransfer=cache.get(StateTransferResourceDefinition.LEGACY_PATH.getKeyValuePair());
      stateTransfer.get(StateTransferResourceDefinition.Attribute.CHUNK_SIZE.getDefinition().getName()).set(StateTransferResourceDefinition.Attribute.CHUNK_SIZE.getDefinition().getDefaultValue());
      stateTransfer.get(StateTransferResourceDefinition.Attribute.TIMEOUT.getDefinition().getName()).set(StateTransferResourceDefinition.Attribute.TIMEOUT.getDefinition().getDefaultValue());
    }
);
  }
  return model;
}
 @AT@ 10655 @LENGTH@ 1192
---UPD LambdaExpression@@(ModelNode model) -> {
  if (InfinispanModel.VERSION_4_0_0.requiresTransformation(version)) {
    Arrays.asList("cache-with-string-keyed-store","cache-with-binary-keyed-store").forEach(cacheName -> {
      ModelNode cache=model.get("cache-container","maximal","replicated-cache",cacheName);
      assertFalse(cache.hasDefined(StateTransferResourceDefinition.LEGACY_PATH.getKeyValuePair()));
      ModelNode stateTransfer=cache.get(StateTransferResourceDefinition.LEGACY_PATH.getKeyValuePair());
      stateTransfer.get(StateTransferResourceDefinition.Attribute.CHUNK_SIZE.getDefinition().getName()).set(StateTransferResourceDefinition.Attribute.CHUNK_SIZE.getDefinition().getDefaultValue());
      stateTransfer.get(StateTransferResourceDefinition.Attribute.TIMEOUT.getDefinition().getName()).set(StateTransferResourceDefinition.Attribute.TIMEOUT.getDefinition().getDefaultValue());
    }
);
  }
  return model;
}
 @TO@ (ModelNode model) -> {
  if (InfinispanModel.VERSION_4_1_0.requiresTransformation(version)) {
    final ModelNode maximal=model.get("cache-container","maximal");
    maximal.asPropertyList().stream().filter(caches -> caches.getName().equals("distributed-cache") || caches.getName().equals("replicated-cache")).forEach(p -> {
      ModelNode caches=maximal.get(p.getName());
      final List<Property> cachesModel=caches.asPropertyList();
      for (      Property cacheName : cachesModel) {
        final ModelNode cache=caches.get(cacheName.getName());
        if (cache.hasDefined("component")) {
          cache.get("component","backups").set(new ModelNode());
        }
      }
    }
);
  }
  if (InfinispanModel.VERSION_4_0_0.requiresTransformation(version)) {
    Arrays.asList("cache-with-string-keyed-store","cache-with-binary-keyed-store").forEach(cacheName -> {
      ModelNode cache=model.get("cache-container","maximal","replicated-cache",cacheName);
      assertFalse(cache.hasDefined(StateTransferResourceDefinition.LEGACY_PATH.getKeyValuePair()));
      ModelNode stateTransfer=cache.get(StateTransferResourceDefinition.LEGACY_PATH.getKeyValuePair());
      stateTransfer.get(StateTransferResourceDefinition.Attribute.CHUNK_SIZE.getDefinition().getName()).set(StateTransferResourceDefinition.Attribute.CHUNK_SIZE.getDefinition().getDefaultValue());
      stateTransfer.get(StateTransferResourceDefinition.Attribute.TIMEOUT.getDefinition().getName()).set(StateTransferResourceDefinition.Attribute.TIMEOUT.getDefinition().getDefaultValue());
    }
);
  }
  return model;
}
 @AT@ 10662 @LENGTH@ 1184
------INS IfStatement@@if (InfinispanModel.VERSION_4_1_0.requiresTransformation(version)) {  final ModelNode maximal=model.get("cache-container","maximal");  maximal.asPropertyList().stream().filter(caches -> caches.getName().equals("distributed-cache") || caches.getName().equals("replicated-cache")).forEach(p -> {    ModelNode caches=maximal.get(p.getName());    final List<Property> cachesModel=caches.asPropertyList();    for (    Property cacheName : cachesModel) {      final ModelNode cache=caches.get(cacheName.getName());      if (cache.hasDefined("component")) {        cache.get("component","backups").set(new ModelNode());      }    }  });} @TO@ LambdaExpression@@(ModelNode model) -> {
  if (InfinispanModel.VERSION_4_0_0.requiresTransformation(version)) {
    Arrays.asList("cache-with-string-keyed-store","cache-with-binary-keyed-store").forEach(cacheName -> {
      ModelNode cache=model.get("cache-container","maximal","replicated-cache",cacheName);
      assertFalse(cache.hasDefined(StateTransferResourceDefinition.LEGACY_PATH.getKeyValuePair()));
      ModelNode stateTransfer=cache.get(StateTransferResourceDefinition.LEGACY_PATH.getKeyValuePair());
      stateTransfer.get(StateTransferResourceDefinition.Attribute.CHUNK_SIZE.getDefinition().getName()).set(StateTransferResourceDefinition.Attribute.CHUNK_SIZE.getDefinition().getDefaultValue());
      stateTransfer.get(StateTransferResourceDefinition.Attribute.TIMEOUT.getDefinition().getName()).set(StateTransferResourceDefinition.Attribute.TIMEOUT.getDefinition().getDefaultValue());
    }
);
  }
  return model;
}
 @AT@ 10728 @LENGTH@ 840
---------INS MethodInvocation@@InfinispanModel.VERSION_4_1_0.requiresTransformation(version) @TO@ IfStatement@@if (InfinispanModel.VERSION_4_1_0.requiresTransformation(version)) {  final ModelNode maximal=model.get("cache-container","maximal");  maximal.asPropertyList().stream().filter(caches -> caches.getName().equals("distributed-cache") || caches.getName().equals("replicated-cache")).forEach(p -> {    ModelNode caches=maximal.get(p.getName());    final List<Property> cachesModel=caches.asPropertyList();    for (    Property cacheName : cachesModel) {      final ModelNode cache=caches.get(cacheName.getName());      if (cache.hasDefined("component")) {        cache.get("component","backups").set(new ModelNode());      }    }  });} @AT@ 10732 @LENGTH@ 61
------------INS QualifiedName@@Name:InfinispanModel.VERSION_4_1_0 @TO@ MethodInvocation@@InfinispanModel.VERSION_4_1_0.requiresTransformation(version) @AT@ 10732 @LENGTH@ 29
------------INS SimpleName@@MethodName:requiresTransformation:[version] @TO@ MethodInvocation@@InfinispanModel.VERSION_4_1_0.requiresTransformation(version) @AT@ 10762 @LENGTH@ 31
---------------INS SimpleName@@version @TO@ SimpleName@@MethodName:requiresTransformation:[version] @AT@ 10785 @LENGTH@ 7
---------INS Block@@ThenBody:{  final ModelNode maximal=model.get("cache-container","maximal");  maximal.asPropertyList().stream().filter(caches -> caches.getName().equals("distributed-cache") || caches.getName().equals("replicated-cache")).forEach(p -> {    ModelNode caches=maximal.get(p.getName());    final List<Property> cachesModel=caches.asPropertyList();    for (    Property cacheName : cachesModel) {      final ModelNode cache=caches.get(cacheName.getName());      if (cache.hasDefined("component")) {        cache.get("component","backups").set(new ModelNode());      }    }  });} @TO@ IfStatement@@if (InfinispanModel.VERSION_4_1_0.requiresTransformation(version)) {  final ModelNode maximal=model.get("cache-container","maximal");  maximal.asPropertyList().stream().filter(caches -> caches.getName().equals("distributed-cache") || caches.getName().equals("replicated-cache")).forEach(p -> {    ModelNode caches=maximal.get(p.getName());    final List<Property> cachesModel=caches.asPropertyList();    for (    Property cacheName : cachesModel) {      final ModelNode cache=caches.get(cacheName.getName());      if (cache.hasDefined("component")) {        cache.get("component","backups").set(new ModelNode());      }    }  });} @AT@ 10795 @LENGTH@ 773
------------INS VariableDeclarationStatement@@final ModelNode maximal=model.get("cache-container","maximal"); @TO@ Block@@ThenBody:{  final ModelNode maximal=model.get("cache-container","maximal");  maximal.asPropertyList().stream().filter(caches -> caches.getName().equals("distributed-cache") || caches.getName().equals("replicated-cache")).forEach(p -> {    ModelNode caches=maximal.get(p.getName());    final List<Property> cachesModel=caches.asPropertyList();    for (    Property cacheName : cachesModel) {      final ModelNode cache=caches.get(cacheName.getName());      if (cache.hasDefined("component")) {        cache.get("component","backups").set(new ModelNode());      }    }  });} @AT@ 10813 @LENGTH@ 66
---------------INS Modifier@@final @TO@ VariableDeclarationStatement@@final ModelNode maximal=model.get("cache-container","maximal"); @AT@ 10813 @LENGTH@ 5
---------------INS SimpleType@@ModelNode @TO@ VariableDeclarationStatement@@final ModelNode maximal=model.get("cache-container","maximal"); @AT@ 10819 @LENGTH@ 9
---------------INS VariableDeclarationFragment@@maximal=model.get("cache-container","maximal") @TO@ VariableDeclarationStatement@@final ModelNode maximal=model.get("cache-container","maximal"); @AT@ 10829 @LENGTH@ 49
------------------INS SimpleName@@maximal @TO@ VariableDeclarationFragment@@maximal=model.get("cache-container","maximal") @AT@ 10829 @LENGTH@ 7
------------------INS MethodInvocation@@model.get("cache-container","maximal") @TO@ VariableDeclarationFragment@@maximal=model.get("cache-container","maximal") @AT@ 10839 @LENGTH@ 39
---------------------INS SimpleName@@Name:model @TO@ MethodInvocation@@model.get("cache-container","maximal") @AT@ 10839 @LENGTH@ 5
---------------------INS SimpleName@@MethodName:get:["cache-container", "maximal"] @TO@ MethodInvocation@@model.get("cache-container","maximal") @AT@ 10845 @LENGTH@ 33
------------------------INS StringLiteral@@"cache-container" @TO@ SimpleName@@MethodName:get:["cache-container", "maximal"] @AT@ 10849 @LENGTH@ 17
------------------------INS StringLiteral@@"maximal" @TO@ SimpleName@@MethodName:get:["cache-container", "maximal"] @AT@ 10868 @LENGTH@ 9
------------INS ExpressionStatement@@MethodInvocation:maximal.asPropertyList().stream().filter(caches -> caches.getName().equals("distributed-cache") || caches.getName().equals("replicated-cache")).forEach(p -> {
  ModelNode caches=maximal.get(p.getName());
  final List<Property> cachesModel=caches.asPropertyList();
  for (  Property cacheName : cachesModel) {
    final ModelNode cache=caches.get(cacheName.getName());
    if (cache.hasDefined("component")) {
      cache.get("component","backups").set(new ModelNode());
    }
  }
}
) @TO@ Block@@ThenBody:{  final ModelNode maximal=model.get("cache-container","maximal");  maximal.asPropertyList().stream().filter(caches -> caches.getName().equals("distributed-cache") || caches.getName().equals("replicated-cache")).forEach(p -> {    ModelNode caches=maximal.get(p.getName());    final List<Property> cachesModel=caches.asPropertyList();    for (    Property cacheName : cachesModel) {      final ModelNode cache=caches.get(cacheName.getName());      if (cache.hasDefined("component")) {        cache.get("component","backups").set(new ModelNode());      }    }  });} @AT@ 10896 @LENGTH@ 658
---------------INS MethodInvocation@@maximal.asPropertyList().stream().filter(caches -> caches.getName().equals("distributed-cache") || caches.getName().equals("replicated-cache")).forEach(p -> {
  ModelNode caches=maximal.get(p.getName());
  final List<Property> cachesModel=caches.asPropertyList();
  for (  Property cacheName : cachesModel) {
    final ModelNode cache=caches.get(cacheName.getName());
    if (cache.hasDefined("component")) {
      cache.get("component","backups").set(new ModelNode());
    }
  }
}
) @TO@ ExpressionStatement@@MethodInvocation:maximal.asPropertyList().stream().filter(caches -> caches.getName().equals("distributed-cache") || caches.getName().equals("replicated-cache")).forEach(p -> {
  ModelNode caches=maximal.get(p.getName());
  final List<Property> cachesModel=caches.asPropertyList();
  for (  Property cacheName : cachesModel) {
    final ModelNode cache=caches.get(cacheName.getName());
    if (cache.hasDefined("component")) {
      cache.get("component","backups").set(new ModelNode());
    }
  }
}
) @AT@ 10896 @LENGTH@ 657
------------------INS MethodInvocation@@MethodName:filter:[caches -> caches.getName().equals("distributed-cache") || caches.getName().equals("replicated-cache")] @TO@ MethodInvocation@@maximal.asPropertyList().stream().filter(caches -> caches.getName().equals("distributed-cache") || caches.getName().equals("replicated-cache")).forEach(p -> {
  ModelNode caches=maximal.get(p.getName());
  final List<Property> cachesModel=caches.asPropertyList();
  for (  Property cacheName : cachesModel) {
    final ModelNode cache=caches.get(cacheName.getName());
    if (cache.hasDefined("component")) {
      cache.get("component","backups").set(new ModelNode());
    }
  }
}
) @AT@ 10896 @LENGTH@ 143
---------------------INS LambdaExpression@@caches -> caches.getName().equals("distributed-cache") || caches.getName().equals("replicated-cache") @TO@ MethodInvocation@@MethodName:filter:[caches -> caches.getName().equals("distributed-cache") || caches.getName().equals("replicated-cache")] @AT@ 10937 @LENGTH@ 101
------------------------INS VariableDeclarationFragment@@caches @TO@ LambdaExpression@@caches -> caches.getName().equals("distributed-cache") || caches.getName().equals("replicated-cache") @AT@ 10937 @LENGTH@ 6
---------------------------INS SimpleName@@caches @TO@ VariableDeclarationFragment@@caches @AT@ 10937 @LENGTH@ 6
------------------------INS InfixExpression@@caches.getName().equals("distributed-cache") || caches.getName().equals("replicated-cache") @TO@ LambdaExpression@@caches -> caches.getName().equals("distributed-cache") || caches.getName().equals("replicated-cache") @AT@ 10947 @LENGTH@ 91
---------------------------INS MethodInvocation@@caches.getName().equals("distributed-cache") @TO@ InfixExpression@@caches.getName().equals("distributed-cache") || caches.getName().equals("replicated-cache") @AT@ 10947 @LENGTH@ 44
------------------------------INS MethodInvocation@@MethodName:getName:[] @TO@ MethodInvocation@@caches.getName().equals("distributed-cache") @AT@ 10947 @LENGTH@ 16
------------------------------INS SimpleName@@Name:caches @TO@ MethodInvocation@@caches.getName().equals("distributed-cache") @AT@ 10947 @LENGTH@ 6
------------------------------INS SimpleName@@MethodName:equals:["distributed-cache"] @TO@ MethodInvocation@@caches.getName().equals("distributed-cache") @AT@ 10964 @LENGTH@ 27
---------------------------------INS StringLiteral@@"distributed-cache" @TO@ SimpleName@@MethodName:equals:["distributed-cache"] @AT@ 10971 @LENGTH@ 19
---------------------------INS Operator@@|| @TO@ InfixExpression@@caches.getName().equals("distributed-cache") || caches.getName().equals("replicated-cache") @AT@ 10991 @LENGTH@ 2
---------------------------INS MethodInvocation@@caches.getName().equals("replicated-cache") @TO@ InfixExpression@@caches.getName().equals("distributed-cache") || caches.getName().equals("replicated-cache") @AT@ 10995 @LENGTH@ 43
------------------------------INS MethodInvocation@@MethodName:getName:[] @TO@ MethodInvocation@@caches.getName().equals("replicated-cache") @AT@ 10995 @LENGTH@ 16
------------------------------INS SimpleName@@Name:caches @TO@ MethodInvocation@@caches.getName().equals("replicated-cache") @AT@ 10995 @LENGTH@ 6
------------------------------INS SimpleName@@MethodName:equals:["replicated-cache"] @TO@ MethodInvocation@@caches.getName().equals("replicated-cache") @AT@ 11012 @LENGTH@ 26
---------------------------------INS StringLiteral@@"replicated-cache" @TO@ SimpleName@@MethodName:equals:["replicated-cache"] @AT@ 11019 @LENGTH@ 18
------------------INS MethodInvocation@@MethodName:stream:[] @TO@ MethodInvocation@@maximal.asPropertyList().stream().filter(caches -> caches.getName().equals("distributed-cache") || caches.getName().equals("replicated-cache")).forEach(p -> {
  ModelNode caches=maximal.get(p.getName());
  final List<Property> cachesModel=caches.asPropertyList();
  for (  Property cacheName : cachesModel) {
    final ModelNode cache=caches.get(cacheName.getName());
    if (cache.hasDefined("component")) {
      cache.get("component","backups").set(new ModelNode());
    }
  }
}
) @AT@ 10896 @LENGTH@ 33
------------------INS MethodInvocation@@MethodName:asPropertyList:[] @TO@ MethodInvocation@@maximal.asPropertyList().stream().filter(caches -> caches.getName().equals("distributed-cache") || caches.getName().equals("replicated-cache")).forEach(p -> {
  ModelNode caches=maximal.get(p.getName());
  final List<Property> cachesModel=caches.asPropertyList();
  for (  Property cacheName : cachesModel) {
    final ModelNode cache=caches.get(cacheName.getName());
    if (cache.hasDefined("component")) {
      cache.get("component","backups").set(new ModelNode());
    }
  }
}
) @AT@ 10896 @LENGTH@ 24
------------------INS SimpleName@@Name:maximal @TO@ MethodInvocation@@maximal.asPropertyList().stream().filter(caches -> caches.getName().equals("distributed-cache") || caches.getName().equals("replicated-cache")).forEach(p -> {
  ModelNode caches=maximal.get(p.getName());
  final List<Property> cachesModel=caches.asPropertyList();
  for (  Property cacheName : cachesModel) {
    final ModelNode cache=caches.get(cacheName.getName());
    if (cache.hasDefined("component")) {
      cache.get("component","backups").set(new ModelNode());
    }
  }
}
) @AT@ 10896 @LENGTH@ 7
------------------INS SimpleName@@MethodName:forEach:[p -> {
  ModelNode caches=maximal.get(p.getName());
  final List<Property> cachesModel=caches.asPropertyList();
  for (  Property cacheName : cachesModel) {
    final ModelNode cache=caches.get(cacheName.getName());
    if (cache.hasDefined("component")) {
      cache.get("component","backups").set(new ModelNode());
    }
  }
}
] @TO@ MethodInvocation@@maximal.asPropertyList().stream().filter(caches -> caches.getName().equals("distributed-cache") || caches.getName().equals("replicated-cache")).forEach(p -> {
  ModelNode caches=maximal.get(p.getName());
  final List<Property> cachesModel=caches.asPropertyList();
  for (  Property cacheName : cachesModel) {
    final ModelNode cache=caches.get(cacheName.getName());
    if (cache.hasDefined("component")) {
      cache.get("component","backups").set(new ModelNode());
    }
  }
}
) @AT@ 11040 @LENGTH@ 513
---------------------INS LambdaExpression@@p -> {
  ModelNode caches=maximal.get(p.getName());
  final List<Property> cachesModel=caches.asPropertyList();
  for (  Property cacheName : cachesModel) {
    final ModelNode cache=caches.get(cacheName.getName());
    if (cache.hasDefined("component")) {
      cache.get("component","backups").set(new ModelNode());
    }
  }
}
 @TO@ SimpleName@@MethodName:forEach:[p -> {
  ModelNode caches=maximal.get(p.getName());
  final List<Property> cachesModel=caches.asPropertyList();
  for (  Property cacheName : cachesModel) {
    final ModelNode cache=caches.get(cacheName.getName());
    if (cache.hasDefined("component")) {
      cache.get("component","backups").set(new ModelNode());
    }
  }
}
] @AT@ 11048 @LENGTH@ 504
------------------------INS VariableDeclarationFragment@@p @TO@ LambdaExpression@@p -> {
  ModelNode caches=maximal.get(p.getName());
  final List<Property> cachesModel=caches.asPropertyList();
  for (  Property cacheName : cachesModel) {
    final ModelNode cache=caches.get(cacheName.getName());
    if (cache.hasDefined("component")) {
      cache.get("component","backups").set(new ModelNode());
    }
  }
}
 @AT@ 11048 @LENGTH@ 1
---------------------------INS SimpleName@@p @TO@ VariableDeclarationFragment@@p @AT@ 11048 @LENGTH@ 1
------------------------INS VariableDeclarationStatement@@ModelNode caches=maximal.get(p.getName()); @TO@ LambdaExpression@@p -> {
  ModelNode caches=maximal.get(p.getName());
  final List<Property> cachesModel=caches.asPropertyList();
  for (  Property cacheName : cachesModel) {
    final ModelNode cache=caches.get(cacheName.getName());
    if (cache.hasDefined("component")) {
      cache.get("component","backups").set(new ModelNode());
    }
  }
}
 @AT@ 11075 @LENGTH@ 44
---------------------------INS SimpleType@@ModelNode @TO@ VariableDeclarationStatement@@ModelNode caches=maximal.get(p.getName()); @AT@ 11075 @LENGTH@ 9
---------------------------INS VariableDeclarationFragment@@caches=maximal.get(p.getName()) @TO@ VariableDeclarationStatement@@ModelNode caches=maximal.get(p.getName()); @AT@ 11085 @LENGTH@ 33
------------------------------INS SimpleName@@caches @TO@ VariableDeclarationFragment@@caches=maximal.get(p.getName()) @AT@ 11085 @LENGTH@ 6
------------------------------INS MethodInvocation@@maximal.get(p.getName()) @TO@ VariableDeclarationFragment@@caches=maximal.get(p.getName()) @AT@ 11094 @LENGTH@ 24
---------------------------------INS SimpleName@@Name:maximal @TO@ MethodInvocation@@maximal.get(p.getName()) @AT@ 11094 @LENGTH@ 7
---------------------------------INS SimpleName@@MethodName:get:[p.getName()] @TO@ MethodInvocation@@maximal.get(p.getName()) @AT@ 11102 @LENGTH@ 16
------------------------------------INS MethodInvocation@@p.getName() @TO@ SimpleName@@MethodName:get:[p.getName()] @AT@ 11106 @LENGTH@ 11
---------------------------------------INS SimpleName@@Name:p @TO@ MethodInvocation@@p.getName() @AT@ 11106 @LENGTH@ 1
---------------------------------------INS SimpleName@@MethodName:getName:[] @TO@ MethodInvocation@@p.getName() @AT@ 11108 @LENGTH@ 9
------------------------INS VariableDeclarationStatement@@final List<Property> cachesModel=caches.asPropertyList(); @TO@ LambdaExpression@@p -> {
  ModelNode caches=maximal.get(p.getName());
  final List<Property> cachesModel=caches.asPropertyList();
  for (  Property cacheName : cachesModel) {
    final ModelNode cache=caches.get(cacheName.getName());
    if (cache.hasDefined("component")) {
      cache.get("component","backups").set(new ModelNode());
    }
  }
}
 @AT@ 11140 @LENGTH@ 59
---------------------------INS Modifier@@final @TO@ VariableDeclarationStatement@@final List<Property> cachesModel=caches.asPropertyList(); @AT@ 11140 @LENGTH@ 5
---------------------------INS ParameterizedType@@List<Property> @TO@ VariableDeclarationStatement@@final List<Property> cachesModel=caches.asPropertyList(); @AT@ 11146 @LENGTH@ 14
------------------------------INS SimpleType@@List @TO@ ParameterizedType@@List<Property> @AT@ 11146 @LENGTH@ 4
------------------------------INS SimpleType@@Property @TO@ ParameterizedType@@List<Property> @AT@ 11151 @LENGTH@ 8
---------------------------INS VariableDeclarationFragment@@cachesModel=caches.asPropertyList() @TO@ VariableDeclarationStatement@@final List<Property> cachesModel=caches.asPropertyList(); @AT@ 11161 @LENGTH@ 37
------------------------------INS SimpleName@@cachesModel @TO@ VariableDeclarationFragment@@cachesModel=caches.asPropertyList() @AT@ 11161 @LENGTH@ 11
------------------------------INS MethodInvocation@@caches.asPropertyList() @TO@ VariableDeclarationFragment@@cachesModel=caches.asPropertyList() @AT@ 11175 @LENGTH@ 23
---------------------------------INS SimpleName@@Name:caches @TO@ MethodInvocation@@caches.asPropertyList() @AT@ 11175 @LENGTH@ 6
---------------------------------INS SimpleName@@MethodName:asPropertyList:[] @TO@ MethodInvocation@@caches.asPropertyList() @AT@ 11182 @LENGTH@ 16
------------------------INS EnhancedForStatement@@for (Property cacheName : cachesModel) {  final ModelNode cache=caches.get(cacheName.getName());  if (cache.hasDefined("component")) {    cache.get("component","backups").set(new ModelNode());  }} @TO@ LambdaExpression@@p -> {
  ModelNode caches=maximal.get(p.getName());
  final List<Property> cachesModel=caches.asPropertyList();
  for (  Property cacheName : cachesModel) {
    final ModelNode cache=caches.get(cacheName.getName());
    if (cache.hasDefined("component")) {
      cache.get("component","backups").set(new ModelNode());
    }
  }
}
 @AT@ 11220 @LENGTH@ 314
---------------------------INS SingleVariableDeclaration@@Property cacheName @TO@ EnhancedForStatement@@for (Property cacheName : cachesModel) {  final ModelNode cache=caches.get(cacheName.getName());  if (cache.hasDefined("component")) {    cache.get("component","backups").set(new ModelNode());  }} @AT@ 11225 @LENGTH@ 18
------------------------------INS SimpleType@@Property @TO@ SingleVariableDeclaration@@Property cacheName @AT@ 11225 @LENGTH@ 8
------------------------------INS SimpleName@@cacheName @TO@ SingleVariableDeclaration@@Property cacheName @AT@ 11234 @LENGTH@ 9
---------------------------INS SimpleName@@cachesModel @TO@ EnhancedForStatement@@for (Property cacheName : cachesModel) {  final ModelNode cache=caches.get(cacheName.getName());  if (cache.hasDefined("component")) {    cache.get("component","backups").set(new ModelNode());  }} @AT@ 11246 @LENGTH@ 11
---------------------------INS VariableDeclarationStatement@@final ModelNode cache=caches.get(cacheName.getName()); @TO@ EnhancedForStatement@@for (Property cacheName : cachesModel) {  final ModelNode cache=caches.get(cacheName.getName());  if (cache.hasDefined("component")) {    cache.get("component","backups").set(new ModelNode());  }} @AT@ 11285 @LENGTH@ 56
------------------------------INS Modifier@@final @TO@ VariableDeclarationStatement@@final ModelNode cache=caches.get(cacheName.getName()); @AT@ 11285 @LENGTH@ 5
------------------------------INS SimpleType@@ModelNode @TO@ VariableDeclarationStatement@@final ModelNode cache=caches.get(cacheName.getName()); @AT@ 11291 @LENGTH@ 9
------------------------------INS VariableDeclarationFragment@@cache=caches.get(cacheName.getName()) @TO@ VariableDeclarationStatement@@final ModelNode cache=caches.get(cacheName.getName()); @AT@ 11301 @LENGTH@ 39
---------------------------------INS SimpleName@@cache @TO@ VariableDeclarationFragment@@cache=caches.get(cacheName.getName()) @AT@ 11301 @LENGTH@ 5
---------------------------------INS MethodInvocation@@caches.get(cacheName.getName()) @TO@ VariableDeclarationFragment@@cache=caches.get(cacheName.getName()) @AT@ 11309 @LENGTH@ 31
------------------------------------INS SimpleName@@Name:caches @TO@ MethodInvocation@@caches.get(cacheName.getName()) @AT@ 11309 @LENGTH@ 6
------------------------------------INS SimpleName@@MethodName:get:[cacheName.getName()] @TO@ MethodInvocation@@caches.get(cacheName.getName()) @AT@ 11316 @LENGTH@ 24
---------------------------------------INS MethodInvocation@@cacheName.getName() @TO@ SimpleName@@MethodName:get:[cacheName.getName()] @AT@ 11320 @LENGTH@ 19
------------------------------------------INS SimpleName@@Name:cacheName @TO@ MethodInvocation@@cacheName.getName() @AT@ 11320 @LENGTH@ 9
------------------------------------------INS SimpleName@@MethodName:getName:[] @TO@ MethodInvocation@@cacheName.getName() @AT@ 11330 @LENGTH@ 9
---------------------------INS IfStatement@@if (cache.hasDefined("component")) {  cache.get("component","backups").set(new ModelNode());} @TO@ EnhancedForStatement@@for (Property cacheName : cachesModel) {  final ModelNode cache=caches.get(cacheName.getName());  if (cache.hasDefined("component")) {    cache.get("component","backups").set(new ModelNode());  }} @AT@ 11366 @LENGTH@ 146
------------------------------INS MethodInvocation@@cache.hasDefined("component") @TO@ IfStatement@@if (cache.hasDefined("component")) {  cache.get("component","backups").set(new ModelNode());} @AT@ 11370 @LENGTH@ 29
---------------------------------INS SimpleName@@Name:cache @TO@ MethodInvocation@@cache.hasDefined("component") @AT@ 11370 @LENGTH@ 5
---------------------------------INS SimpleName@@MethodName:hasDefined:["component"] @TO@ MethodInvocation@@cache.hasDefined("component") @AT@ 11376 @LENGTH@ 23
------------------------------------INS StringLiteral@@"component" @TO@ SimpleName@@MethodName:hasDefined:["component"] @AT@ 11387 @LENGTH@ 11
------------------------------INS Block@@ThenBody:{  cache.get("component","backups").set(new ModelNode());} @TO@ IfStatement@@if (cache.hasDefined("component")) {  cache.get("component","backups").set(new ModelNode());} @AT@ 11401 @LENGTH@ 111
---------------------------------INS ExpressionStatement@@MethodInvocation:cache.get("component","backups").set(new ModelNode()) @TO@ Block@@ThenBody:{  cache.get("component","backups").set(new ModelNode());} @AT@ 11431 @LENGTH@ 55
------------------------------------INS MethodInvocation@@cache.get("component","backups").set(new ModelNode()) @TO@ ExpressionStatement@@MethodInvocation:cache.get("component","backups").set(new ModelNode()) @AT@ 11431 @LENGTH@ 54
---------------------------------------INS MethodInvocation@@MethodName:get:["component", "backups"] @TO@ MethodInvocation@@cache.get("component","backups").set(new ModelNode()) @AT@ 11431 @LENGTH@ 33
------------------------------------------INS StringLiteral@@"component" @TO@ MethodInvocation@@MethodName:get:["component", "backups"] @AT@ 11441 @LENGTH@ 11
------------------------------------------INS StringLiteral@@"backups" @TO@ MethodInvocation@@MethodName:get:["component", "backups"] @AT@ 11454 @LENGTH@ 9
---------------------------------------INS SimpleName@@Name:cache @TO@ MethodInvocation@@cache.get("component","backups").set(new ModelNode()) @AT@ 11431 @LENGTH@ 5
---------------------------------------INS SimpleName@@MethodName:set:[new ModelNode()] @TO@ MethodInvocation@@cache.get("component","backups").set(new ModelNode()) @AT@ 11465 @LENGTH@ 20
------------------------------------------INS ClassInstanceCreation@@ModelNode[] @TO@ SimpleName@@MethodName:set:[new ModelNode()] @AT@ 11469 @LENGTH@ 15
---------------------------------------------INS New@@new @TO@ ClassInstanceCreation@@ModelNode[] @AT@ 11469 @LENGTH@ 3
---------------------------------------------INS SimpleType@@ModelNode @TO@ ClassInstanceCreation@@ModelNode[] @AT@ 11473 @LENGTH@ 9


UPD VariableDeclarationStatement@@CsrfToken token=(CsrfToken)request.getAttribute(CsrfRequestPostProcessor.TestCsrfTokenRepository.ATTR_NAME); @TO@ CsrfToken token=(CsrfToken)request.getAttribute(CsrfRequestPostProcessor.TestCsrfTokenRepository.TOKEN_ATTR_NAME); @AT@ 1585 @LENGTH@ 116
---UPD VariableDeclarationFragment@@token=(CsrfToken)request.getAttribute(CsrfRequestPostProcessor.TestCsrfTokenRepository.ATTR_NAME) @TO@ token=(CsrfToken)request.getAttribute(CsrfRequestPostProcessor.TestCsrfTokenRepository.TOKEN_ATTR_NAME) @AT@ 1595 @LENGTH@ 105
------UPD CastExpression@@(CsrfToken)request.getAttribute(CsrfRequestPostProcessor.TestCsrfTokenRepository.ATTR_NAME) @TO@ (CsrfToken)request.getAttribute(CsrfRequestPostProcessor.TestCsrfTokenRepository.TOKEN_ATTR_NAME) @AT@ 1603 @LENGTH@ 97
---------UPD MethodInvocation@@request.getAttribute(CsrfRequestPostProcessor.TestCsrfTokenRepository.ATTR_NAME) @TO@ request.getAttribute(CsrfRequestPostProcessor.TestCsrfTokenRepository.TOKEN_ATTR_NAME) @AT@ 1615 @LENGTH@ 85
------------UPD SimpleName@@MethodName:getAttribute:[CsrfRequestPostProcessor.TestCsrfTokenRepository.ATTR_NAME] @TO@ MethodName:getAttribute:[CsrfRequestPostProcessor.TestCsrfTokenRepository.TOKEN_ATTR_NAME] @AT@ 1628 @LENGTH@ 72
---------------UPD QualifiedName@@CsrfRequestPostProcessor.TestCsrfTokenRepository.ATTR_NAME @TO@ CsrfRequestPostProcessor.TestCsrfTokenRepository.TOKEN_ATTR_NAME @AT@ 1641 @LENGTH@ 58
------------------UPD SimpleName@@ATTR_NAME @TO@ TOKEN_ATTR_NAME @AT@ 1690 @LENGTH@ 9


UPD ExpressionStatement@@MethodInvocation:LOGGER.log(Level.SEVERE,String.format("ERROR: Repository % does not have any finder generated. Use 'finder add' command to solve this.",associatedRepository.getSimpleTypeName())) @TO@ MethodInvocation:LOGGER.log(Level.SEVERE,String.format("ERROR: Repository %s does not have any finder generated. Use 'finder add' command to solve this.",associatedRepository.getSimpleTypeName())) @AT@ 17040 @LENGTH@ 285
---UPD MethodInvocation@@LOGGER.log(Level.SEVERE,String.format("ERROR: Repository % does not have any finder generated. Use 'finder add' command to solve this.",associatedRepository.getSimpleTypeName())) @TO@ LOGGER.log(Level.SEVERE,String.format("ERROR: Repository %s does not have any finder generated. Use 'finder add' command to solve this.",associatedRepository.getSimpleTypeName())) @AT@ 17040 @LENGTH@ 284
------UPD SimpleName@@MethodName:log:[Level.SEVERE, String.format("ERROR: Repository % does not have any finder generated. Use 'finder add' command to solve this.",associatedRepository.getSimpleTypeName())] @TO@ MethodName:log:[Level.SEVERE, String.format("ERROR: Repository %s does not have any finder generated. Use 'finder add' command to solve this.",associatedRepository.getSimpleTypeName())] @AT@ 17058 @LENGTH@ 266
---------UPD MethodInvocation@@String.format("ERROR: Repository % does not have any finder generated. Use 'finder add' command to solve this.",associatedRepository.getSimpleTypeName()) @TO@ String.format("ERROR: Repository %s does not have any finder generated. Use 'finder add' command to solve this.",associatedRepository.getSimpleTypeName()) @AT@ 17105 @LENGTH@ 218
------------UPD SimpleName@@MethodName:format:["ERROR: Repository % does not have any finder generated. Use 'finder add' command to solve this.", associatedRepository.getSimpleTypeName()] @TO@ MethodName:format:["ERROR: Repository %s does not have any finder generated. Use 'finder add' command to solve this.", associatedRepository.getSimpleTypeName()] @AT@ 17131 @LENGTH@ 192
---------------UPD StringLiteral@@"ERROR: Repository % does not have any finder generated. Use 'finder add' command to solve this." @TO@ "ERROR: Repository %s does not have any finder generated. Use 'finder add' command to solve this." @AT@ 17161 @LENGTH@ 97


UPD ExpressionStatement@@MethodInvocation:indexWriter.updateIndexes(key,rdo.getIndexedData()) @TO@ MethodInvocation:indexWriter.deleteAndUpdateIndexes(key,rdo.getIndexedData()) @AT@ 9063 @LENGTH@ 53
---UPD MethodInvocation@@indexWriter.updateIndexes(key,rdo.getIndexedData()) @TO@ indexWriter.deleteAndUpdateIndexes(key,rdo.getIndexedData()) @AT@ 9063 @LENGTH@ 52
------UPD SimpleName@@MethodName:updateIndexes:[key, rdo.getIndexedData()] @TO@ MethodName:deleteAndUpdateIndexes:[key, rdo.getIndexedData()] @AT@ 9075 @LENGTH@ 40


UPD MethodDeclaration@@private, String, MethodName:calculateRedirectUrl, String contextPath, String url,  @TO@ protected, String, MethodName:calculateRedirectUrl, String contextPath, String url,  @AT@ 1998 @LENGTH@ 655
---UPD Modifier@@private @TO@ protected @AT@ 1998 @LENGTH@ 7
---UPD IfStatement@@if (!UrlUtils.isAbsoluteUrl(url)) {  if (contextRelative) {    return url;  } else {    return contextPath + url;  }} @TO@ if (!UrlUtils.isAbsoluteUrl(url)) {  if (isContextRelative()) {    return url;  } else {    return contextPath + url;  }} @AT@ 2070 @LENGTH@ 131
------UPD Block@@ThenBody:{  if (contextRelative) {    return url;  } else {    return contextPath + url;  }} @TO@ ThenBody:{  if (isContextRelative()) {    return url;  } else {    return contextPath + url;  }} @AT@ 2104 @LENGTH@ 97
---------UPD IfStatement@@if (contextRelative) {  return url;} else {  return contextPath + url;} @TO@ if (isContextRelative()) {  return url;} else {  return contextPath + url;} @AT@ 2109 @LENGTH@ 88
------------DEL SimpleName@@contextRelative @AT@ 2113 @LENGTH@ 15
------------INS MethodInvocation@@MethodName:isContextRelative:[] @TO@ IfStatement@@if (contextRelative) {  return url;} else {  return contextPath + url;} @AT@ 2115 @LENGTH@ 19
---UPD IfStatement@@if (!contextRelative) {  return url;} @TO@ if (!isContextRelative()) {  return url;} @AT@ 2242 @LENGTH@ 42
------UPD PrefixExpression@@!contextRelative @TO@ !isContextRelative() @AT@ 2246 @LENGTH@ 16
---------DEL SimpleName@@contextRelative @AT@ 2247 @LENGTH@ 15
---------INS MethodInvocation@@MethodName:isContextRelative:[] @TO@ PrefixExpression@@!contextRelative @AT@ 2253 @LENGTH@ 19


UPD TypeDeclaration@@[@Configuration, @ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration"), public]MongoDbComponentAutoConfiguration,  @TO@ [@Configuration, @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration"), public]MongoDbComponentAutoConfiguration,  @AT@ 1447 @LENGTH@ 617
---UPD NormalAnnotation@@@ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1462 @LENGTH@ 79
---UPD NormalAnnotation@@@AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1542 @LENGTH@ 80


INS IfStatement@@if (criteria == null) {  return this.getAdapter().count(keyspace);} @TO@ MethodDeclaration@@public, long, MethodName:count, final RedisOperationChain criteria, final Serializable keyspace,  @AT@ 5635 @LENGTH@ 71
---INS InfixExpression@@criteria == null @TO@ IfStatement@@if (criteria == null) {  return this.getAdapter().count(keyspace);} @AT@ 5638 @LENGTH@ 16
------INS SimpleName@@criteria @TO@ InfixExpression@@criteria == null @AT@ 5638 @LENGTH@ 8
------INS Operator@@== @TO@ InfixExpression@@criteria == null @AT@ 5646 @LENGTH@ 2
------INS NullLiteral@@null @TO@ InfixExpression@@criteria == null @AT@ 5650 @LENGTH@ 4
---INS Block@@ThenBody:{  return this.getAdapter().count(keyspace);} @TO@ IfStatement@@if (criteria == null) {  return this.getAdapter().count(keyspace);} @AT@ 5656 @LENGTH@ 50
------INS ReturnStatement@@MethodInvocation:this.getAdapter().count(keyspace) @TO@ Block@@ThenBody:{  return this.getAdapter().count(keyspace);} @AT@ 5661 @LENGTH@ 41
---------INS MethodInvocation@@this.getAdapter().count(keyspace) @TO@ ReturnStatement@@MethodInvocation:this.getAdapter().count(keyspace) @AT@ 5668 @LENGTH@ 33
------------INS MethodInvocation@@MethodName:getAdapter:[] @TO@ MethodInvocation@@this.getAdapter().count(keyspace) @AT@ 5668 @LENGTH@ 17
------------INS ThisExpression@@this @TO@ MethodInvocation@@this.getAdapter().count(keyspace) @AT@ 5668 @LENGTH@ 4
------------INS SimpleName@@MethodName:count:[keyspace] @TO@ MethodInvocation@@this.getAdapter().count(keyspace) @AT@ 5686 @LENGTH@ 15
---------------INS SimpleName@@keyspace @TO@ SimpleName@@MethodName:count:[keyspace] @AT@ 5692 @LENGTH@ 8


INS MethodDeclaration@@public, void, MethodName:reInitAfterClose,  @TO@ TypeDeclaration@@[public]OpensslJnaCipherTest, AbstractCipherTest @AT@ 1444 @LENGTH@ 105
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:reInitAfterClose,  @AT@ 1444 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:reInitAfterClose,  @AT@ 1451 @LENGTH@ 4
---INS SimpleName@@MethodName:reInitAfterClose @TO@ MethodDeclaration@@public, void, MethodName:reInitAfterClose,  @AT@ 1456 @LENGTH@ 16
---INS ExpressionStatement@@MethodInvocation:System.err.println("reInitAfterClose() Causes JVM crash") @TO@ MethodDeclaration@@public, void, MethodName:reInitAfterClose,  @AT@ 1485 @LENGTH@ 58
------INS MethodInvocation@@System.err.println("reInitAfterClose() Causes JVM crash") @TO@ ExpressionStatement@@MethodInvocation:System.err.println("reInitAfterClose() Causes JVM crash") @AT@ 1485 @LENGTH@ 57
---------INS QualifiedName@@Name:System.err @TO@ MethodInvocation@@System.err.println("reInitAfterClose() Causes JVM crash") @AT@ 1485 @LENGTH@ 10
---------INS SimpleName@@MethodName:println:["reInitAfterClose() Causes JVM crash"] @TO@ MethodInvocation@@System.err.println("reInitAfterClose() Causes JVM crash") @AT@ 1496 @LENGTH@ 46
------------INS StringLiteral@@"reInitAfterClose() Causes JVM crash" @TO@ SimpleName@@MethodName:println:["reInitAfterClose() Causes JVM crash"] @AT@ 1504 @LENGTH@ 37


UPD TypeDeclaration@@[@Configuration, @ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration"), @EnableConfigurationProperties(BeanstalkComponentConfiguration.class), public]BeanstalkComponentAutoConfiguration,  @TO@ [@Configuration, @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration"), @EnableConfigurationProperties(BeanstalkComponentConfiguration.class), public]BeanstalkComponentAutoConfiguration,  @AT@ 1634 @LENGTH@ 2097
---UPD NormalAnnotation@@@ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1649 @LENGTH@ 79
---UPD NormalAnnotation@@@AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1729 @LENGTH@ 80


UPD ThrowStatement@@ClassInstanceCreation:new SecurityException("Unknown security context type") @TO@ MethodInvocation:access.unknownContext() @AT@ 3910 @LENGTH@ 61
---DEL ClassInstanceCreation@@SecurityException["Unknown security context type"] @AT@ 3916 @LENGTH@ 54
------DEL New@@new @AT@ 3916 @LENGTH@ 3
------DEL SimpleType@@SecurityException @AT@ 3920 @LENGTH@ 17
------DEL StringLiteral@@"Unknown security context type" @AT@ 3938 @LENGTH@ 31
---INS MethodInvocation@@access.unknownContext() @TO@ ThrowStatement@@ClassInstanceCreation:new SecurityException("Unknown security context type") @AT@ 3916 @LENGTH@ 23
------INS SimpleName@@Name:access @TO@ MethodInvocation@@access.unknownContext() @AT@ 3916 @LENGTH@ 6
------INS SimpleName@@MethodName:unknownContext:[] @TO@ MethodInvocation@@access.unknownContext() @AT@ 3923 @LENGTH@ 16


UPD ExpressionStatement@@MethodInvocation:dummyOp.getConf().setTbl(tableScan.getTableDesc()) @TO@ MethodInvocation:dummyOp.getConf().setTbl(tableScan.getTableDescSkewJoin()) @AT@ 16738 @LENGTH@ 51
---UPD MethodInvocation@@dummyOp.getConf().setTbl(tableScan.getTableDesc()) @TO@ dummyOp.getConf().setTbl(tableScan.getTableDescSkewJoin()) @AT@ 16738 @LENGTH@ 50
------UPD SimpleName@@MethodName:setTbl:[tableScan.getTableDesc()] @TO@ MethodName:setTbl:[tableScan.getTableDescSkewJoin()] @AT@ 16756 @LENGTH@ 32
---------UPD MethodInvocation@@tableScan.getTableDesc() @TO@ tableScan.getTableDescSkewJoin() @AT@ 16763 @LENGTH@ 24
------------UPD SimpleName@@MethodName:getTableDesc:[] @TO@ MethodName:getTableDescSkewJoin:[] @AT@ 16773 @LENGTH@ 14


UPD TypeDeclaration@@[@Configuration, @ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration"), public]XmppComponentAutoConfiguration,  @TO@ [@Configuration, @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration"), public]XmppComponentAutoConfiguration,  @AT@ 1438 @LENGTH@ 596
---UPD NormalAnnotation@@@ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1453 @LENGTH@ 79
---UPD NormalAnnotation@@@AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1533 @LENGTH@ 80


UPD TypeDeclaration@@[@Configuration, @ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration"), @EnableConfigurationProperties(JsonDataFormatConfiguration.class), public]JsonDataFormatAutoConfiguration,  @TO@ [@Configuration, @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration"), @EnableConfigurationProperties(JsonDataFormatConfiguration.class), public]JsonDataFormatAutoConfiguration,  @AT@ 1671 @LENGTH@ 1103
---UPD NormalAnnotation@@@ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1686 @LENGTH@ 79
---UPD NormalAnnotation@@@AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1766 @LENGTH@ 80


UPD TryStatement@@try {  byte[] bytes=message.getJMSCorrelationIDAsBytes();  boolean isNull=true;  for (  byte b : bytes)   if (b != 0)   isNull=false;  return isNull ? null : new String(message.getJMSCorrelationIDAsBytes());} catch (Exception e) {} @TO@ try {  byte[] bytes=message.getJMSCorrelationIDAsBytes();  boolean isNull=true;  for (  byte b : bytes) {    if (b != 0) {      isNull=false;    }  }  return isNull ? null : new String(bytes);} catch (Exception e) {} @AT@ 14394 @LENGTH@ 377
---UPD EnhancedForStatement@@for (byte b : bytes) if (b != 0) isNull=false; @TO@ for (byte b : bytes) {  if (b != 0) {    isNull=false;  }} @AT@ 14512 @LENGTH@ 76
------UPD IfStatement@@if (b != 0) isNull=false; @TO@ if (b != 0) {  isNull=false;} @AT@ 14545 @LENGTH@ 43
---------UPD Block@@ThenBody:isNull=false; @TO@ ThenBody:{  isNull=false;} @AT@ 14573 @LENGTH@ 15
---UPD ReturnStatement@@ConditionalExpression:isNull ? null : new String(message.getJMSCorrelationIDAsBytes()) @TO@ ConditionalExpression:isNull ? null : new String(bytes) @AT@ 14601 @LENGTH@ 72
------UPD ConditionalExpression@@isNull ? null : new String(message.getJMSCorrelationIDAsBytes()) @TO@ isNull ? null : new String(bytes) @AT@ 14608 @LENGTH@ 64
---------UPD ClassInstanceCreation@@String[message.getJMSCorrelationIDAsBytes()] @TO@ String[bytes] @AT@ 14624 @LENGTH@ 48
------------DEL MethodInvocation@@message.getJMSCorrelationIDAsBytes() @AT@ 14635 @LENGTH@ 36
---------------DEL SimpleName@@Name:message @AT@ 14635 @LENGTH@ 7
---------------DEL SimpleName@@MethodName:getJMSCorrelationIDAsBytes:[] @AT@ 14643 @LENGTH@ 28
------------INS SimpleName@@bytes @TO@ ClassInstanceCreation@@String[message.getJMSCorrelationIDAsBytes()] @AT@ 14679 @LENGTH@ 5


UPD TypeDeclaration@@[@Configuration, @ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration"), @EnableConfigurationProperties(ConstantLanguageConfiguration.class), public]ConstantLanguageAutoConfiguration,  @TO@ [@Configuration, @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration"), @EnableConfigurationProperties(ConstantLanguageConfiguration.class), public]ConstantLanguageAutoConfiguration,  @AT@ 1671 @LENGTH@ 1116
---UPD NormalAnnotation@@@ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1686 @LENGTH@ 79
---UPD NormalAnnotation@@@AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1766 @LENGTH@ 80


UPD MethodDeclaration@@public, Builder, MethodName:setHttpServerAuthentication, HttpAuthenticationFactory httpAuthenticationFactory,  @TO@ public, Builder, MethodName:setHttpAuthenticationFactory, HttpAuthenticationFactory httpAuthenticationFactory,  @AT@ 27556 @LENGTH@ 235
---UPD SimpleName@@MethodName:setHttpServerAuthentication @TO@ MethodName:setHttpAuthenticationFactory @AT@ 27571 @LENGTH@ 27


UPD TypeDeclaration@@[@Configuration, @ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration"), public]SolrComponentAutoConfiguration,  @TO@ [@Configuration, @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration"), public]SolrComponentAutoConfiguration,  @AT@ 1438 @LENGTH@ 640
---UPD NormalAnnotation@@@ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1453 @LENGTH@ 79
---UPD NormalAnnotation@@@AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1533 @LENGTH@ 80


UPD TypeDeclaration@@[@Configuration, @ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration"), @EnableConfigurationProperties(CometdComponentConfiguration.class), public]CometdComponentAutoConfiguration,  @TO@ [@Configuration, @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration"), @EnableConfigurationProperties(CometdComponentConfiguration.class), public]CometdComponentAutoConfiguration,  @AT@ 1625 @LENGTH@ 2080
---UPD NormalAnnotation@@@ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1640 @LENGTH@ 79
---UPD NormalAnnotation@@@AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1720 @LENGTH@ 80


UPD FieldDeclaration@@protected, static, final, String, [TEST_UPLOAD_FILE="src/test/resources/log4j.properties"] @TO@ protected, static, final, String, [TEST_UPLOAD_FILE="src/test/resources/log4j2.properties"] @AT@ 1747 @LENGTH@ 87
---UPD VariableDeclarationFragment@@TEST_UPLOAD_FILE="src/test/resources/log4j.properties" @TO@ TEST_UPLOAD_FILE="src/test/resources/log4j2.properties" @AT@ 1777 @LENGTH@ 56
------UPD StringLiteral@@"src/test/resources/log4j.properties" @TO@ "src/test/resources/log4j2.properties" @AT@ 1796 @LENGTH@ 37


UPD IfStatement@@if (Utils.isFallbackEnable(props)) {  return new JceCipher(props,transformation);} else {  errorMessage.append(" is not available or transformation " + transformation.getName() + " is not supported.");  throw new GeneralSecurityException(errorMessage.toString());} @TO@ if (Utils.isFallbackEnabled(props)) {  return new JceCipher(props,transformation);} else {  errorMessage.append(" is not available or transformation " + transformation.getName() + " is not supported.");  throw new GeneralSecurityException(errorMessage.toString());} @AT@ 2668 @LENGTH@ 335
---UPD MethodInvocation@@Utils.isFallbackEnable(props) @TO@ Utils.isFallbackEnabled(props) @AT@ 2672 @LENGTH@ 29
------UPD SimpleName@@MethodName:isFallbackEnable:[props] @TO@ MethodName:isFallbackEnabled:[props] @AT@ 2678 @LENGTH@ 23


UPD ExpressionStatement@@MethodInvocation:assertThat(AuthorityUtils.authorityListToSet(token.getAuthorities()).contains("ROLE_ONE")) @TO@ MethodInvocation:assertThat(AuthorityUtils.authorityListToSet(token.getAuthorities())).contains("ROLE_ONE") @AT@ 2826 @LENGTH@ 96
---UPD MethodInvocation@@assertThat(AuthorityUtils.authorityListToSet(token.getAuthorities()).contains("ROLE_ONE")) @TO@ assertThat(AuthorityUtils.authorityListToSet(token.getAuthorities())).contains("ROLE_ONE") @AT@ 2826 @LENGTH@ 95
------INS MethodInvocation@@MethodName:assertThat:[AuthorityUtils.authorityListToSet(token.getAuthorities())] @TO@ MethodInvocation@@assertThat(AuthorityUtils.authorityListToSet(token.getAuthorities()).contains("ROLE_ONE")) @AT@ 2826 @LENGTH@ 69
---------INS MethodInvocation@@AuthorityUtils.authorityListToSet(token.getAuthorities()) @TO@ MethodInvocation@@MethodName:assertThat:[AuthorityUtils.authorityListToSet(token.getAuthorities())] @AT@ 2837 @LENGTH@ 57
------------MOV SimpleName@@Name:AuthorityUtils @TO@ MethodInvocation@@AuthorityUtils.authorityListToSet(token.getAuthorities()) @AT@ 2837 @LENGTH@ 14
------------INS SimpleName@@MethodName:authorityListToSet:[token.getAuthorities()] @TO@ MethodInvocation@@AuthorityUtils.authorityListToSet(token.getAuthorities()) @AT@ 2852 @LENGTH@ 42
---------------INS MethodInvocation@@token.getAuthorities() @TO@ SimpleName@@MethodName:authorityListToSet:[token.getAuthorities()] @AT@ 2871 @LENGTH@ 22
------------------MOV SimpleName@@Name:token @TO@ MethodInvocation@@token.getAuthorities() @AT@ 2871 @LENGTH@ 5
------------------MOV SimpleName@@MethodName:getAuthorities:[] @TO@ MethodInvocation@@token.getAuthorities() @AT@ 2877 @LENGTH@ 16
------DEL SimpleName@@MethodName:assertThat:[AuthorityUtils.authorityListToSet(token.getAuthorities()).contains("ROLE_ONE")] @AT@ 2826 @LENGTH@ 95
---------DEL MethodInvocation@@AuthorityUtils.authorityListToSet(token.getAuthorities()).contains("ROLE_ONE") @AT@ 2837 @LENGTH@ 83
------------DEL MethodInvocation@@MethodName:authorityListToSet:[token.getAuthorities()] @AT@ 2837 @LENGTH@ 57
---------------DEL MethodInvocation@@token.getAuthorities() @AT@ 2871 @LENGTH@ 22
------MOV SimpleName@@MethodName:contains:["ROLE_ONE"] @TO@ MethodInvocation@@assertThat(AuthorityUtils.authorityListToSet(token.getAuthorities()).contains("ROLE_ONE")) @AT@ 2895 @LENGTH@ 25


DEL MethodDeclaration@@public, final, void, MethodName:setQuiesce, long shutdownTimeout,  @AT@ 10240 @LENGTH@ 55
---DEL Modifier@@public @AT@ 10240 @LENGTH@ 6
---DEL Modifier@@final @AT@ 10247 @LENGTH@ 5
---DEL PrimitiveType@@void @AT@ 10253 @LENGTH@ 4
---DEL SimpleName@@MethodName:setQuiesce @AT@ 10258 @LENGTH@ 10
---DEL SingleVariableDeclaration@@long shutdownTimeout @AT@ 10269 @LENGTH@ 20
------DEL PrimitiveType@@long @AT@ 10269 @LENGTH@ 4
------DEL SimpleName@@shutdownTimeout @AT@ 10274 @LENGTH@ 15


DEL MethodDeclaration@@public, Tweet, MethodName:updateStatus, String message, StatusDetails details,  @AT@ 6523 @LENGTH@ 371
---DEL Modifier@@public @AT@ 6523 @LENGTH@ 6
---DEL SimpleType@@Tweet @AT@ 6530 @LENGTH@ 5
---DEL SimpleName@@MethodName:updateStatus @AT@ 6536 @LENGTH@ 12
---DEL SingleVariableDeclaration@@String message @AT@ 6549 @LENGTH@ 14
------DEL SimpleType@@String @AT@ 6549 @LENGTH@ 6
------DEL SimpleName@@message @AT@ 6556 @LENGTH@ 7
---DEL SingleVariableDeclaration@@StatusDetails details @AT@ 6565 @LENGTH@ 21
------DEL SimpleType@@StatusDetails @AT@ 6565 @LENGTH@ 13
------DEL SimpleName@@details @AT@ 6579 @LENGTH@ 7
---DEL ExpressionStatement@@MethodInvocation:requireUserAuthorization() @AT@ 6592 @LENGTH@ 27
------DEL MethodInvocation@@MethodName:requireUserAuthorization:[] @AT@ 6592 @LENGTH@ 26
---DEL VariableDeclarationStatement@@MultiValueMap<String,Object> tweetParams=new LinkedMultiValueMap<String,Object>(); @AT@ 6622 @LENGTH@ 86
------DEL ParameterizedType@@MultiValueMap<String,Object> @AT@ 6622 @LENGTH@ 29
---------DEL SimpleType@@MultiValueMap @AT@ 6622 @LENGTH@ 13
---------DEL SimpleType@@String @AT@ 6636 @LENGTH@ 6
---------DEL SimpleType@@Object @AT@ 6644 @LENGTH@ 6
------DEL VariableDeclarationFragment@@tweetParams=new LinkedMultiValueMap<String,Object>() @AT@ 6652 @LENGTH@ 55
---------DEL SimpleName@@tweetParams @AT@ 6652 @LENGTH@ 11
---------DEL ClassInstanceCreation@@LinkedMultiValueMap<String,Object>[] @AT@ 6666 @LENGTH@ 41
------------DEL New@@new @AT@ 6666 @LENGTH@ 3
------------DEL ParameterizedType@@LinkedMultiValueMap<String,Object> @AT@ 6670 @LENGTH@ 35
---------------DEL SimpleType@@LinkedMultiValueMap @AT@ 6670 @LENGTH@ 19
---------------DEL SimpleType@@String @AT@ 6690 @LENGTH@ 6
---------------DEL SimpleType@@Object @AT@ 6698 @LENGTH@ 6
---DEL ExpressionStatement@@MethodInvocation:tweetParams.add("status",message) @AT@ 6711 @LENGTH@ 35
------DEL MethodInvocation@@tweetParams.add("status",message) @AT@ 6711 @LENGTH@ 34
---------DEL SimpleName@@Name:tweetParams @AT@ 6711 @LENGTH@ 11
---------DEL SimpleName@@MethodName:add:["status", message] @AT@ 6723 @LENGTH@ 22
------------DEL StringLiteral@@"status" @AT@ 6727 @LENGTH@ 8
------------DEL SimpleName@@message @AT@ 6737 @LENGTH@ 7
---DEL ExpressionStatement@@MethodInvocation:tweetParams.putAll(details.toParameterMap()) @AT@ 6749 @LENGTH@ 45
------DEL MethodInvocation@@tweetParams.putAll(details.toParameterMap()) @AT@ 6749 @LENGTH@ 44
---------DEL SimpleName@@Name:tweetParams @AT@ 6749 @LENGTH@ 11
---------DEL SimpleName@@MethodName:putAll:[details.toParameterMap()] @AT@ 6761 @LENGTH@ 32
------------DEL MethodInvocation@@details.toParameterMap() @AT@ 6768 @LENGTH@ 24
---------------DEL SimpleName@@Name:details @AT@ 6768 @LENGTH@ 7
---------------DEL SimpleName@@MethodName:toParameterMap:[] @AT@ 6776 @LENGTH@ 16
---DEL ReturnStatement@@MethodInvocation:restTemplate.postForObject(buildUri("statuses/update.json"),tweetParams,Tweet.class) @AT@ 6797 @LENGTH@ 94
------DEL MethodInvocation@@restTemplate.postForObject(buildUri("statuses/update.json"),tweetParams,Tweet.class) @AT@ 6804 @LENGTH@ 86
---------DEL SimpleName@@Name:restTemplate @AT@ 6804 @LENGTH@ 12
---------DEL SimpleName@@MethodName:postForObject:[buildUri("statuses/update.json"), tweetParams, Tweet.class] @AT@ 6817 @LENGTH@ 73
------------DEL MethodInvocation@@buildUri("statuses/update.json") @AT@ 6831 @LENGTH@ 32
---------------DEL SimpleName@@MethodName:buildUri:["statuses/update.json"] @AT@ 6831 @LENGTH@ 32
------------------DEL StringLiteral@@"statuses/update.json" @AT@ 6840 @LENGTH@ 22
------------DEL SimpleName@@tweetParams @AT@ 6865 @LENGTH@ 11
------------DEL TypeLiteral@@Tweet.class @AT@ 6878 @LENGTH@ 11


UPD ReturnStatement@@InfixExpression:obj.getClass() == getClass() && equals((This)obj) @TO@ InfixExpression:obj != null && obj.getClass() == getClass() && equals((This)obj) @AT@ 2327 @LENGTH@ 58
---UPD InfixExpression@@obj.getClass() == getClass() && equals((This)obj) @TO@ obj != null && obj.getClass() == getClass() && equals((This)obj) @AT@ 2334 @LENGTH@ 50
------INS InfixExpression@@obj != null && obj.getClass() == getClass() @TO@ InfixExpression@@obj.getClass() == getClass() && equals((This)obj) @AT@ 2334 @LENGTH@ 43
---------MOV InfixExpression@@obj.getClass() == getClass() @TO@ InfixExpression@@obj != null && obj.getClass() == getClass() @AT@ 2334 @LENGTH@ 28
---------INS InfixExpression@@obj != null @TO@ InfixExpression@@obj != null && obj.getClass() == getClass() @AT@ 2334 @LENGTH@ 11
------------INS SimpleName@@obj @TO@ InfixExpression@@obj != null @AT@ 2334 @LENGTH@ 3
------------INS Operator@@!= @TO@ InfixExpression@@obj != null @AT@ 2337 @LENGTH@ 2
------------INS NullLiteral@@null @TO@ InfixExpression@@obj != null @AT@ 2341 @LENGTH@ 4
---------MOV Operator@@&& @TO@ InfixExpression@@obj != null && obj.getClass() == getClass() @AT@ 2362 @LENGTH@ 2
------INS Operator@@&& @TO@ InfixExpression@@obj.getClass() == getClass() && equals((This)obj) @AT@ 2377 @LENGTH@ 2


UPD TypeDeclaration@@[@Configuration, @ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration"), public]ConsulComponentAutoConfiguration,  @TO@ [@Configuration, @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration"), public]ConsulComponentAutoConfiguration,  @AT@ 1444 @LENGTH@ 610
---UPD NormalAnnotation@@@ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1459 @LENGTH@ 79
---UPD NormalAnnotation@@@AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1539 @LENGTH@ 80


UPD TypeDeclaration@@[@Configuration, @ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration"), @EnableConfigurationProperties(HttpComponentConfiguration.class), public]HttpComponentAutoConfiguration,  @TO@ [@Configuration, @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration"), @EnableConfigurationProperties(HttpComponentConfiguration.class), public]HttpComponentAutoConfiguration,  @AT@ 1621 @LENGTH@ 2040
---UPD NormalAnnotation@@@ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1636 @LENGTH@ 79
---UPD NormalAnnotation@@@AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1716 @LENGTH@ 80


UPD MethodDeclaration@@private, void, MethodName:runTestSendBody, Consumer<MockEndpoint> mockPreparer, String sentBody, Function<String,String> processor, InterruptedException, java.util.concurrent.ExecutionException,  @TO@ private, void, MethodName:runTestSendBody, Consumer<MockEndpoint> mockPreparer, String sentBody, Function<String,String> processor, Exception,  @AT@ 3039 @LENGTH@ 914
---UPD SimpleType@@InterruptedException @TO@ Exception @AT@ 3189 @LENGTH@ 20
---DEL SimpleType@@java.util.concurrent.ExecutionException @AT@ 3211 @LENGTH@ 39


UPD FieldDeclaration@@public, static, final, JavaType, [ROO_ENUM_CONTROLLERTYPE=new JavaType("org.springframework.roo.addon.web.mvc.controller.annotations.ControllerType")] @TO@ public, static, final, JavaType, [ROO_ENUM_CONTROLLER_TYPE=new JavaType("org.springframework.roo.addon.web.mvc.controller.annotations.ControllerType")] @AT@ 10599 @LENGTH@ 154
---UPD VariableDeclarationFragment@@ROO_ENUM_CONTROLLERTYPE=new JavaType("org.springframework.roo.addon.web.mvc.controller.annotations.ControllerType") @TO@ ROO_ENUM_CONTROLLER_TYPE=new JavaType("org.springframework.roo.addon.web.mvc.controller.annotations.ControllerType") @AT@ 10628 @LENGTH@ 124
------UPD SimpleName@@ROO_ENUM_CONTROLLERTYPE @TO@ ROO_ENUM_CONTROLLER_TYPE @AT@ 10628 @LENGTH@ 23


UPD VariableDeclarationStatement@@MergeFileWork work=new MergeFileWork(inputDirs,finalName,hasDynamicPartitions,tblDesc.getInputFileFormatClass().getName()); @TO@ MergeFileWork work=new MergeFileWork(inputDirs,finalName,hasDynamicPartitions,tblDesc.getInputFileFormatClass().getName(),tblDesc); @AT@ 62145 @LENGTH@ 136
---UPD VariableDeclarationFragment@@work=new MergeFileWork(inputDirs,finalName,hasDynamicPartitions,tblDesc.getInputFileFormatClass().getName()) @TO@ work=new MergeFileWork(inputDirs,finalName,hasDynamicPartitions,tblDesc.getInputFileFormatClass().getName(),tblDesc) @AT@ 62159 @LENGTH@ 121
------UPD ClassInstanceCreation@@MergeFileWork[inputDirs, finalName, hasDynamicPartitions, tblDesc.getInputFileFormatClass().getName()] @TO@ MergeFileWork[inputDirs, finalName, hasDynamicPartitions, tblDesc.getInputFileFormatClass().getName(), tblDesc] @AT@ 62166 @LENGTH@ 114
---------INS SimpleName@@tblDesc @TO@ ClassInstanceCreation@@MergeFileWork[inputDirs, finalName, hasDynamicPartitions, tblDesc.getInputFileFormatClass().getName()] @AT@ 62281 @LENGTH@ 7


UPD TypeDeclaration@@[@Configuration, @ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration"), public]SnmpComponentAutoConfiguration,  @TO@ [@Configuration, @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration"), public]SnmpComponentAutoConfiguration,  @AT@ 1438 @LENGTH@ 596
---UPD NormalAnnotation@@@ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1453 @LENGTH@ 79
---UPD NormalAnnotation@@@AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1533 @LENGTH@ 80


UPD TypeDeclaration@@[@Configuration, @ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration"), @EnableConfigurationProperties(PahoComponentConfiguration.class), public]PahoComponentAutoConfiguration,  @TO@ [@Configuration, @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration"), @EnableConfigurationProperties(PahoComponentConfiguration.class), public]PahoComponentAutoConfiguration,  @AT@ 1619 @LENGTH@ 2039
---UPD NormalAnnotation@@@ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1634 @LENGTH@ 79
---UPD NormalAnnotation@@@AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1714 @LENGTH@ 80


UPD TypeDeclaration@@[@Configuration, @ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration"), @EnableConfigurationProperties(BoxComponentConfiguration.class), public]BoxComponentAutoConfiguration,  @TO@ [@Configuration, @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration"), @EnableConfigurationProperties(BoxComponentConfiguration.class), public]BoxComponentAutoConfiguration,  @AT@ 1616 @LENGTH@ 2030
---UPD NormalAnnotation@@@ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1631 @LENGTH@ 79
---UPD NormalAnnotation@@@AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1711 @LENGTH@ 80


UPD VariableDeclarationStatement@@Page<IdClassExampleEmployee> page=employeeRepositoryWithIdClass.findAll(new PageRequest(0,10)); @TO@ Page<IdClassExampleEmployee> page=employeeRepositoryWithIdClass.findAll(new PageRequest(0,1)); @AT@ 5335 @LENGTH@ 98
---UPD VariableDeclarationFragment@@page=employeeRepositoryWithIdClass.findAll(new PageRequest(0,10)) @TO@ page=employeeRepositoryWithIdClass.findAll(new PageRequest(0,1)) @AT@ 5364 @LENGTH@ 68
------UPD MethodInvocation@@employeeRepositoryWithIdClass.findAll(new PageRequest(0,10)) @TO@ employeeRepositoryWithIdClass.findAll(new PageRequest(0,1)) @AT@ 5371 @LENGTH@ 61
---------UPD SimpleName@@MethodName:findAll:[new PageRequest(0,10)] @TO@ MethodName:findAll:[new PageRequest(0,1)] @AT@ 5401 @LENGTH@ 31
------------UPD ClassInstanceCreation@@PageRequest[0, 10] @TO@ PageRequest[0, 1] @AT@ 5409 @LENGTH@ 22
---------------UPD NumberLiteral@@10 @TO@ 1 @AT@ 5428 @LENGTH@ 2


UPD WhileStatement@@while (getNextPath()) {  job.set("mapred.input.dir",StringUtils.escapeString(currPath.toString()));  HiveConf.setBoolVar(job,HiveConf.ConfVars.HIVE_VECTORIZATION_ENABLED,false);  Class<? extends InputFormat> formatter=currDesc.getInputFileFormatClass();  Utilities.copyTableJobPropertiesToConf(currDesc.getTableDesc(),job);  InputFormat inputFormat=getInputFormatFromCache(formatter,job);  String inputs=processCurrPathForMmWriteIds(inputFormat);  if (inputs == null)   return null;  job.set("mapred.input.dir",inputs);  InputSplit[] splits=inputFormat.getSplits(job,1);  FetchInputFormatSplit[] inputSplits=new FetchInputFormatSplit[splits.length];  for (int i=0; i < splits.length; i++) {    inputSplits[i]=new FetchInputFormatSplit(splits[i],inputFormat);  }  if (work.getSplitSample() != null) {    inputSplits=splitSampling(work.getSplitSample(),inputSplits);  }  if (inputSplits.length > 0) {    return inputSplits;  }} @TO@ while (getNextPath()) {  job.set("mapred.input.dir",StringUtils.escapeString(currPath.toString()));  HiveConf.setBoolVar(job,HiveConf.ConfVars.HIVE_VECTORIZATION_ENABLED,false);  Class<? extends InputFormat> formatter=currDesc.getInputFileFormatClass();  Utilities.copyTableJobPropertiesToConf(currDesc.getTableDesc(),job);  InputFormat inputFormat=getInputFormatFromCache(formatter,job);  String inputs=processCurrPathForMmWriteIds(inputFormat);  Utilities.LOG14535.info("Setting fetch inputs to " + inputs);  if (inputs == null)   return null;  job.set("mapred.input.dir",inputs);  InputSplit[] splits=inputFormat.getSplits(job,1);  FetchInputFormatSplit[] inputSplits=new FetchInputFormatSplit[splits.length];  for (int i=0; i < splits.length; i++) {    inputSplits[i]=new FetchInputFormatSplit(splits[i],inputFormat);  }  if (work.getSplitSample() != null) {    inputSplits=splitSampling(work.getSplitSample(),inputSplits);  }  if (inputSplits.length > 0) {    return inputSplits;  }} @AT@ 14222 @LENGTH@ 1385
---UPD Block@@WhileBody:{  job.set("mapred.input.dir",StringUtils.escapeString(currPath.toString()));  HiveConf.setBoolVar(job,HiveConf.ConfVars.HIVE_VECTORIZATION_ENABLED,false);  Class<? extends InputFormat> formatter=currDesc.getInputFileFormatClass();  Utilities.copyTableJobPropertiesToConf(currDesc.getTableDesc(),job);  InputFormat inputFormat=getInputFormatFromCache(formatter,job);  String inputs=processCurrPathForMmWriteIds(inputFormat);  if (inputs == null)   return null;  job.set("mapred.input.dir",inputs);  InputSplit[] splits=inputFormat.getSplits(job,1);  FetchInputFormatSplit[] inputSplits=new FetchInputFormatSplit[splits.length];  for (int i=0; i < splits.length; i++) {    inputSplits[i]=new FetchInputFormatSplit(splits[i],inputFormat);  }  if (work.getSplitSample() != null) {    inputSplits=splitSampling(work.getSplitSample(),inputSplits);  }  if (inputSplits.length > 0) {    return inputSplits;  }} @TO@ WhileBody:{  job.set("mapred.input.dir",StringUtils.escapeString(currPath.toString()));  HiveConf.setBoolVar(job,HiveConf.ConfVars.HIVE_VECTORIZATION_ENABLED,false);  Class<? extends InputFormat> formatter=currDesc.getInputFileFormatClass();  Utilities.copyTableJobPropertiesToConf(currDesc.getTableDesc(),job);  InputFormat inputFormat=getInputFormatFromCache(formatter,job);  String inputs=processCurrPathForMmWriteIds(inputFormat);  Utilities.LOG14535.info("Setting fetch inputs to " + inputs);  if (inputs == null)   return null;  job.set("mapred.input.dir",inputs);  InputSplit[] splits=inputFormat.getSplits(job,1);  FetchInputFormatSplit[] inputSplits=new FetchInputFormatSplit[splits.length];  for (int i=0; i < splits.length; i++) {    inputSplits[i]=new FetchInputFormatSplit(splits[i],inputFormat);  }  if (work.getSplitSample() != null) {    inputSplits=splitSampling(work.getSplitSample(),inputSplits);  }  if (inputSplits.length > 0) {    return inputSplits;  }} @AT@ 14244 @LENGTH@ 1363
------INS ExpressionStatement@@MethodInvocation:Utilities.LOG14535.info("Setting fetch inputs to " + inputs) @TO@ Block@@WhileBody:{  job.set("mapred.input.dir",StringUtils.escapeString(currPath.toString()));  HiveConf.setBoolVar(job,HiveConf.ConfVars.HIVE_VECTORIZATION_ENABLED,false);  Class<? extends InputFormat> formatter=currDesc.getInputFileFormatClass();  Utilities.copyTableJobPropertiesToConf(currDesc.getTableDesc(),job);  InputFormat inputFormat=getInputFormatFromCache(formatter,job);  String inputs=processCurrPathForMmWriteIds(inputFormat);  if (inputs == null)   return null;  job.set("mapred.input.dir",inputs);  InputSplit[] splits=inputFormat.getSplits(job,1);  FetchInputFormatSplit[] inputSplits=new FetchInputFormatSplit[splits.length];  for (int i=0; i < splits.length; i++) {    inputSplits[i]=new FetchInputFormatSplit(splits[i],inputFormat);  }  if (work.getSplitSample() != null) {    inputSplits=splitSampling(work.getSplitSample(),inputSplits);  }  if (inputSplits.length > 0) {    return inputSplits;  }} @AT@ 15052 @LENGTH@ 61
---------INS MethodInvocation@@Utilities.LOG14535.info("Setting fetch inputs to " + inputs) @TO@ ExpressionStatement@@MethodInvocation:Utilities.LOG14535.info("Setting fetch inputs to " + inputs) @AT@ 15052 @LENGTH@ 60
------------INS QualifiedName@@Name:Utilities.LOG14535 @TO@ MethodInvocation@@Utilities.LOG14535.info("Setting fetch inputs to " + inputs) @AT@ 15052 @LENGTH@ 18
------------INS SimpleName@@MethodName:info:["Setting fetch inputs to " + inputs] @TO@ MethodInvocation@@Utilities.LOG14535.info("Setting fetch inputs to " + inputs) @AT@ 15071 @LENGTH@ 41
---------------INS InfixExpression@@"Setting fetch inputs to " + inputs @TO@ SimpleName@@MethodName:info:["Setting fetch inputs to " + inputs] @AT@ 15076 @LENGTH@ 35
------------------INS StringLiteral@@"Setting fetch inputs to " @TO@ InfixExpression@@"Setting fetch inputs to " + inputs @AT@ 15076 @LENGTH@ 26
------------------INS Operator@@+ @TO@ InfixExpression@@"Setting fetch inputs to " + inputs @AT@ 15102 @LENGTH@ 1
------------------INS SimpleName@@inputs @TO@ InfixExpression@@"Setting fetch inputs to " + inputs @AT@ 15105 @LENGTH@ 6


UPD ExpressionStatement@@MethodInvocation:from("direct:in").setHeader(DrillConstants.DRILL_QUERY,constant(query)).to("drill://" + host + "?mode="+ mode.name()).log("${body}").to("mock:result") @TO@ MethodInvocation:from("direct:in").setHeader(DrillConstants.DRILL_QUERY,constant(query)).to("drill://" + host + "?mode="+ mode.name()+ "&port="+ port).log("${body}").to("mock:result") @AT@ 1865 @LENGTH@ 153
---UPD MethodInvocation@@from("direct:in").setHeader(DrillConstants.DRILL_QUERY,constant(query)).to("drill://" + host + "?mode="+ mode.name()).log("${body}").to("mock:result") @TO@ from("direct:in").setHeader(DrillConstants.DRILL_QUERY,constant(query)).to("drill://" + host + "?mode="+ mode.name()+ "&port="+ port).log("${body}").to("mock:result") @AT@ 1865 @LENGTH@ 152
------UPD MethodInvocation@@MethodName:to:["drill://" + host + "?mode="+ mode.name()] @TO@ MethodName:to:["drill://" + host + "?mode="+ mode.name()+ "&port="+ port] @AT@ 1865 @LENGTH@ 119
---------UPD InfixExpression@@"drill://" + host + "?mode="+ mode.name() @TO@ "drill://" + host + "?mode="+ mode.name()+ "&port="+ port @AT@ 1941 @LENGTH@ 42
------------INS StringLiteral@@"&port=" @TO@ InfixExpression@@"drill://" + host + "?mode="+ mode.name() @AT@ 2051 @LENGTH@ 8
------------INS SimpleName@@port @TO@ InfixExpression@@"drill://" + host + "?mode="+ mode.name() @AT@ 2062 @LENGTH@ 4


DEL MethodDeclaration@@protected, void, MethodName:maybeDeclareExchange,  @AT@ 16481 @LENGTH@ 72
---DEL Modifier@@protected @AT@ 16481 @LENGTH@ 9
---DEL PrimitiveType@@void @AT@ 16491 @LENGTH@ 4
---DEL SimpleName@@MethodName:maybeDeclareExchange @AT@ 16496 @LENGTH@ 20
---DEL ExpressionStatement@@MethodInvocation:setUpExchangeDeclaration() @AT@ 16523 @LENGTH@ 27
------DEL MethodInvocation@@MethodName:setUpExchangeDeclaration:[] @AT@ 16523 @LENGTH@ 26


INS FieldDeclaration@@Metamodel, [metamodel] @TO@ TypeDeclaration@@[@RunWith(MockitoJUnitRunner.class), public]JpaQueryLookupStrategyUnitTests,  @AT@ 2565 @LENGTH@ 20
---INS SimpleType@@Metamodel @TO@ FieldDeclaration@@Metamodel, [metamodel] @AT@ 2565 @LENGTH@ 9
---INS VariableDeclarationFragment@@metamodel @TO@ FieldDeclaration@@Metamodel, [metamodel] @AT@ 2575 @LENGTH@ 9
------INS SimpleName@@metamodel @TO@ VariableDeclarationFragment@@metamodel @AT@ 2575 @LENGTH@ 9


UPD MethodDeclaration@@private, void, MethodName:assertCountQuery, String originalQuery, String countQuery,  @TO@ private, static, void, MethodName:assertCountQuery, String originalQuery, String countQuery,  @AT@ 9115 @LENGTH@ 141
---INS Modifier@@static @TO@ MethodDeclaration@@private, void, MethodName:assertCountQuery, String originalQuery, String countQuery,  @AT@ 9316 @LENGTH@ 6


UPD TypeDeclaration@@[@Configuration, @ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration"), @EnableConfigurationProperties(DockerComponentConfiguration.class), public]DockerComponentAutoConfiguration,  @TO@ [@Configuration, @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration"), @EnableConfigurationProperties(DockerComponentConfiguration.class), public]DockerComponentAutoConfiguration,  @AT@ 1625 @LENGTH@ 2057
---UPD NormalAnnotation@@@ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1640 @LENGTH@ 79
---UPD NormalAnnotation@@@AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1720 @LENGTH@ 80


UPD TypeDeclaration@@[@Configuration, @ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration"), @EnableConfigurationProperties(PythonLanguageConfiguration.class), public]PythonLanguageAutoConfiguration,  @TO@ [@Configuration, @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration"), @EnableConfigurationProperties(PythonLanguageConfiguration.class), public]PythonLanguageAutoConfiguration,  @AT@ 1663 @LENGTH@ 1085
---UPD NormalAnnotation@@@ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1678 @LENGTH@ 79
---UPD NormalAnnotation@@@AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1758 @LENGTH@ 80


DEL VariableDeclarationStatement@@ClassLoader classLoader=CamelContextRegistryService.MutableCamelContextRegistry.class.getClassLoader(); @AT@ 2828 @LENGTH@ 105
---DEL SimpleType@@ClassLoader @AT@ 2828 @LENGTH@ 11
---DEL VariableDeclarationFragment@@classLoader=CamelContextRegistryService.MutableCamelContextRegistry.class.getClassLoader() @AT@ 2840 @LENGTH@ 92
------DEL SimpleName@@classLoader @AT@ 2840 @LENGTH@ 11
------DEL MethodInvocation@@CamelContextRegistryService.MutableCamelContextRegistry.class.getClassLoader() @AT@ 2854 @LENGTH@ 78
---------DEL TypeLiteral@@CamelContextRegistryService.MutableCamelContextRegistry.class @AT@ 2854 @LENGTH@ 61
---------DEL SimpleName@@MethodName:getClassLoader:[] @AT@ 2916 @LENGTH@ 16


UPD TypeDeclaration@@[@Configuration, @ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration"), @EnableConfigurationProperties(JXPathLanguageConfiguration.class), public]JXPathLanguageAutoConfiguration,  @TO@ [@Configuration, @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration"), @EnableConfigurationProperties(JXPathLanguageConfiguration.class), public]JXPathLanguageAutoConfiguration,  @AT@ 1665 @LENGTH@ 1085
---UPD NormalAnnotation@@@ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1680 @LENGTH@ 79
---UPD NormalAnnotation@@@AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1760 @LENGTH@ 80


UPD TypeDeclaration@@[@Configuration, @ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration"), @EnableConfigurationProperties(Base64DataFormatConfiguration.class), public]Base64DataFormatAutoConfiguration,  @TO@ [@Configuration, @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration"), @EnableConfigurationProperties(Base64DataFormatConfiguration.class), public]Base64DataFormatAutoConfiguration,  @AT@ 1671 @LENGTH@ 1126
---UPD NormalAnnotation@@@ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1686 @LENGTH@ 79
---UPD NormalAnnotation@@@AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1766 @LENGTH@ 80


UPD TypeDeclaration@@[@Configuration, @ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration"), @EnableConfigurationProperties(XQueryLanguageConfiguration.class), public]XQueryLanguageAutoConfiguration,  @TO@ [@Configuration, @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration"), @EnableConfigurationProperties(XQueryLanguageConfiguration.class), public]XQueryLanguageAutoConfiguration,  @AT@ 1665 @LENGTH@ 1085
---UPD NormalAnnotation@@@ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1680 @LENGTH@ 79
---UPD NormalAnnotation@@@AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1760 @LENGTH@ 80


UPD TypeDeclaration@@[@Configuration, @ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration"), public]CoAPComponentAutoConfiguration,  @TO@ [@Configuration, @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration"), public]CoAPComponentAutoConfiguration,  @AT@ 1418 @LENGTH@ 596
---UPD NormalAnnotation@@@ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1433 @LENGTH@ 79
---UPD NormalAnnotation@@@AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1513 @LENGTH@ 80


INS MethodDeclaration@@public, void, MethodName:testHandleErrorWhenAccessDeniedMessageAndStatus403ThenThrowsOAuth2AccessDeniedException, Exception,  @TO@ TypeDeclaration@@[@RunWith(MockitoJUnitRunner.class), public]OAuth2ErrorHandlerTests,  @AT@ 8317 @LENGTH@ 599
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testHandleErrorWhenAccessDeniedMessageAndStatus403ThenThrowsOAuth2AccessDeniedException, Exception,  @AT@ 8317 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testHandleErrorWhenAccessDeniedMessageAndStatus403ThenThrowsOAuth2AccessDeniedException, Exception,  @AT@ 8324 @LENGTH@ 4
---INS SimpleName@@MethodName:testHandleErrorWhenAccessDeniedMessageAndStatus403ThenThrowsOAuth2AccessDeniedException @TO@ MethodDeclaration@@public, void, MethodName:testHandleErrorWhenAccessDeniedMessageAndStatus403ThenThrowsOAuth2AccessDeniedException, Exception,  @AT@ 8329 @LENGTH@ 87
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:testHandleErrorWhenAccessDeniedMessageAndStatus403ThenThrowsOAuth2AccessDeniedException, Exception,  @AT@ 8426 @LENGTH@ 9
---INS VariableDeclarationStatement@@String accessDeniedMessage="{\"error\":\"access_denied\", \"error_description\":\"some error message\"}"; @TO@ MethodDeclaration@@public, void, MethodName:testHandleErrorWhenAccessDeniedMessageAndStatus403ThenThrowsOAuth2AccessDeniedException, Exception,  @AT@ 8440 @LENGTH@ 107
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String accessDeniedMessage="{\"error\":\"access_denied\", \"error_description\":\"some error message\"}"; @AT@ 8440 @LENGTH@ 6
------INS VariableDeclarationFragment@@accessDeniedMessage="{\"error\":\"access_denied\", \"error_description\":\"some error message\"}" @TO@ VariableDeclarationStatement@@String accessDeniedMessage="{\"error\":\"access_denied\", \"error_description\":\"some error message\"}"; @AT@ 8447 @LENGTH@ 99
---------INS SimpleName@@accessDeniedMessage @TO@ VariableDeclarationFragment@@accessDeniedMessage="{\"error\":\"access_denied\", \"error_description\":\"some error message\"}" @AT@ 8447 @LENGTH@ 19
---------INS StringLiteral@@"{\"error\":\"access_denied\", \"error_description\":\"some error message\"}" @TO@ VariableDeclarationFragment@@accessDeniedMessage="{\"error\":\"access_denied\", \"error_description\":\"some error message\"}" @AT@ 8469 @LENGTH@ 77
---INS VariableDeclarationStatement@@ByteArrayInputStream messageBody=new ByteArrayInputStream(accessDeniedMessage.getBytes()); @TO@ MethodDeclaration@@public, void, MethodName:testHandleErrorWhenAccessDeniedMessageAndStatus403ThenThrowsOAuth2AccessDeniedException, Exception,  @AT@ 8550 @LENGTH@ 92
------INS SimpleType@@ByteArrayInputStream @TO@ VariableDeclarationStatement@@ByteArrayInputStream messageBody=new ByteArrayInputStream(accessDeniedMessage.getBytes()); @AT@ 8550 @LENGTH@ 20
------INS VariableDeclarationFragment@@messageBody=new ByteArrayInputStream(accessDeniedMessage.getBytes()) @TO@ VariableDeclarationStatement@@ByteArrayInputStream messageBody=new ByteArrayInputStream(accessDeniedMessage.getBytes()); @AT@ 8571 @LENGTH@ 70
---------INS SimpleName@@messageBody @TO@ VariableDeclarationFragment@@messageBody=new ByteArrayInputStream(accessDeniedMessage.getBytes()) @AT@ 8571 @LENGTH@ 11
---------INS ClassInstanceCreation@@ByteArrayInputStream[accessDeniedMessage.getBytes()] @TO@ VariableDeclarationFragment@@messageBody=new ByteArrayInputStream(accessDeniedMessage.getBytes()) @AT@ 8585 @LENGTH@ 56
------------INS New@@new @TO@ ClassInstanceCreation@@ByteArrayInputStream[accessDeniedMessage.getBytes()] @AT@ 8585 @LENGTH@ 3
------------INS SimpleType@@ByteArrayInputStream @TO@ ClassInstanceCreation@@ByteArrayInputStream[accessDeniedMessage.getBytes()] @AT@ 8589 @LENGTH@ 20
------------INS MethodInvocation@@accessDeniedMessage.getBytes() @TO@ ClassInstanceCreation@@ByteArrayInputStream[accessDeniedMessage.getBytes()] @AT@ 8610 @LENGTH@ 30
---------------INS SimpleName@@Name:accessDeniedMessage @TO@ MethodInvocation@@accessDeniedMessage.getBytes() @AT@ 8610 @LENGTH@ 19
---------------INS SimpleName@@MethodName:getBytes:[] @TO@ MethodInvocation@@accessDeniedMessage.getBytes() @AT@ 8630 @LENGTH@ 10
---INS VariableDeclarationStatement@@HttpHeaders headers=new HttpHeaders(); @TO@ MethodDeclaration@@public, void, MethodName:testHandleErrorWhenAccessDeniedMessageAndStatus403ThenThrowsOAuth2AccessDeniedException, Exception,  @AT@ 8645 @LENGTH@ 40
------INS SimpleType@@HttpHeaders @TO@ VariableDeclarationStatement@@HttpHeaders headers=new HttpHeaders(); @AT@ 8645 @LENGTH@ 11
------INS VariableDeclarationFragment@@headers=new HttpHeaders() @TO@ VariableDeclarationStatement@@HttpHeaders headers=new HttpHeaders(); @AT@ 8657 @LENGTH@ 27
---------INS SimpleName@@headers @TO@ VariableDeclarationFragment@@headers=new HttpHeaders() @AT@ 8657 @LENGTH@ 7
---------INS ClassInstanceCreation@@HttpHeaders[] @TO@ VariableDeclarationFragment@@headers=new HttpHeaders() @AT@ 8667 @LENGTH@ 17
------------INS New@@new @TO@ ClassInstanceCreation@@HttpHeaders[] @AT@ 8667 @LENGTH@ 3
------------INS SimpleType@@HttpHeaders @TO@ ClassInstanceCreation@@HttpHeaders[] @AT@ 8671 @LENGTH@ 11
---INS ExpressionStatement@@MethodInvocation:headers.setContentType(MediaType.APPLICATION_JSON) @TO@ MethodDeclaration@@public, void, MethodName:testHandleErrorWhenAccessDeniedMessageAndStatus403ThenThrowsOAuth2AccessDeniedException, Exception,  @AT@ 8688 @LENGTH@ 51
------INS MethodInvocation@@headers.setContentType(MediaType.APPLICATION_JSON) @TO@ ExpressionStatement@@MethodInvocation:headers.setContentType(MediaType.APPLICATION_JSON) @AT@ 8688 @LENGTH@ 50
---------INS SimpleName@@Name:headers @TO@ MethodInvocation@@headers.setContentType(MediaType.APPLICATION_JSON) @AT@ 8688 @LENGTH@ 7
---------INS SimpleName@@MethodName:setContentType:[MediaType.APPLICATION_JSON] @TO@ MethodInvocation@@headers.setContentType(MediaType.APPLICATION_JSON) @AT@ 8696 @LENGTH@ 42
------------INS QualifiedName@@MediaType.APPLICATION_JSON @TO@ SimpleName@@MethodName:setContentType:[MediaType.APPLICATION_JSON] @AT@ 8711 @LENGTH@ 26
---------------INS SimpleName@@MediaType @TO@ QualifiedName@@MediaType.APPLICATION_JSON @AT@ 8711 @LENGTH@ 9
---------------INS SimpleName@@APPLICATION_JSON @TO@ QualifiedName@@MediaType.APPLICATION_JSON @AT@ 8721 @LENGTH@ 16
---INS VariableDeclarationStatement@@ClientHttpResponse response=new TestClientHttpResponse(headers,403,messageBody); @TO@ MethodDeclaration@@public, void, MethodName:testHandleErrorWhenAccessDeniedMessageAndStatus403ThenThrowsOAuth2AccessDeniedException, Exception,  @AT@ 8742 @LENGTH@ 84
------INS SimpleType@@ClientHttpResponse @TO@ VariableDeclarationStatement@@ClientHttpResponse response=new TestClientHttpResponse(headers,403,messageBody); @AT@ 8742 @LENGTH@ 18
------INS VariableDeclarationFragment@@response=new TestClientHttpResponse(headers,403,messageBody) @TO@ VariableDeclarationStatement@@ClientHttpResponse response=new TestClientHttpResponse(headers,403,messageBody); @AT@ 8761 @LENGTH@ 64
---------INS SimpleName@@response @TO@ VariableDeclarationFragment@@response=new TestClientHttpResponse(headers,403,messageBody) @AT@ 8761 @LENGTH@ 8
---------INS ClassInstanceCreation@@TestClientHttpResponse[headers, 403, messageBody] @TO@ VariableDeclarationFragment@@response=new TestClientHttpResponse(headers,403,messageBody) @AT@ 8772 @LENGTH@ 53
------------INS New@@new @TO@ ClassInstanceCreation@@TestClientHttpResponse[headers, 403, messageBody] @AT@ 8772 @LENGTH@ 3
------------INS SimpleType@@TestClientHttpResponse @TO@ ClassInstanceCreation@@TestClientHttpResponse[headers, 403, messageBody] @AT@ 8776 @LENGTH@ 22
------------INS SimpleName@@headers @TO@ ClassInstanceCreation@@TestClientHttpResponse[headers, 403, messageBody] @AT@ 8799 @LENGTH@ 7
------------INS NumberLiteral@@403 @TO@ ClassInstanceCreation@@TestClientHttpResponse[headers, 403, messageBody] @AT@ 8808 @LENGTH@ 3
------------INS SimpleName@@messageBody @TO@ ClassInstanceCreation@@TestClientHttpResponse[headers, 403, messageBody] @AT@ 8813 @LENGTH@ 11
---INS ExpressionStatement@@MethodInvocation:expected.expect(OAuth2AccessDeniedException.class) @TO@ MethodDeclaration@@public, void, MethodName:testHandleErrorWhenAccessDeniedMessageAndStatus403ThenThrowsOAuth2AccessDeniedException, Exception,  @AT@ 8829 @LENGTH@ 51
------INS MethodInvocation@@expected.expect(OAuth2AccessDeniedException.class) @TO@ ExpressionStatement@@MethodInvocation:expected.expect(OAuth2AccessDeniedException.class) @AT@ 8829 @LENGTH@ 50
---------INS SimpleName@@Name:expected @TO@ MethodInvocation@@expected.expect(OAuth2AccessDeniedException.class) @AT@ 8829 @LENGTH@ 8
---------INS SimpleName@@MethodName:expect:[OAuth2AccessDeniedException.class] @TO@ MethodInvocation@@expected.expect(OAuth2AccessDeniedException.class) @AT@ 8838 @LENGTH@ 41
------------INS TypeLiteral@@OAuth2AccessDeniedException.class @TO@ SimpleName@@MethodName:expect:[OAuth2AccessDeniedException.class] @AT@ 8845 @LENGTH@ 33
---INS ExpressionStatement@@MethodInvocation:handler.handleError(response) @TO@ MethodDeclaration@@public, void, MethodName:testHandleErrorWhenAccessDeniedMessageAndStatus403ThenThrowsOAuth2AccessDeniedException, Exception,  @AT@ 8883 @LENGTH@ 30
------INS MethodInvocation@@handler.handleError(response) @TO@ ExpressionStatement@@MethodInvocation:handler.handleError(response) @AT@ 8883 @LENGTH@ 29
---------INS SimpleName@@Name:handler @TO@ MethodInvocation@@handler.handleError(response) @AT@ 8883 @LENGTH@ 7
---------INS SimpleName@@MethodName:handleError:[response] @TO@ MethodInvocation@@handler.handleError(response) @AT@ 8891 @LENGTH@ 21
------------INS SimpleName@@response @TO@ SimpleName@@MethodName:handleError:[response] @AT@ 8903 @LENGTH@ 8


UPD MethodDeclaration@@public, voidMethodName:MergeFileWork, List<Path> inputPaths, Path outputDir, String srcTblInputFormat,  @TO@ public, voidMethodName:MergeFileWork, List<Path> inputPaths, Path outputDir, String srcTblInputFormat, TableDesc tbl,  @AT@ 2532 @LENGTH@ 156
---INS SingleVariableDeclaration@@TableDesc tbl @TO@ MethodDeclaration@@public, voidMethodName:MergeFileWork, List<Path> inputPaths, Path outputDir, String srcTblInputFormat,  @AT@ 2624 @LENGTH@ 13
------INS SimpleType@@TableDesc @TO@ SingleVariableDeclaration@@TableDesc tbl @AT@ 2624 @LENGTH@ 9
------INS SimpleName@@tbl @TO@ SingleVariableDeclaration@@TableDesc tbl @AT@ 2634 @LENGTH@ 3
---UPD ConstructorInvocation@@this(inputPaths,outputDir,false,srcTblInputFormat); @TO@ this(inputPaths,outputDir,false,srcTblInputFormat,tbl); @AT@ 2630 @LENGTH@ 54
------INS SimpleName@@tbl @TO@ ConstructorInvocation@@this(inputPaths,outputDir,false,srcTblInputFormat); @AT@ 2699 @LENGTH@ 3


UPD IfStatement@@if (address instanceof Inet6Address && hostString.equals(address.getHostAddress())) {  return "[" + address.getHostAddress() + "]";} else {  return hostString;} @TO@ if (address instanceof Inet6Address && hostString != null && address != null && hostString.equals(address.getHostAddress())) {  return "[" + address.getHostAddress() + "]";} else {  return hostString;} @AT@ 1840 @LENGTH@ 216
---UPD InfixExpression@@address instanceof Inet6Address && hostString.equals(address.getHostAddress()) @TO@ address instanceof Inet6Address && hostString != null && address != null && hostString.equals(address.getHostAddress()) @AT@ 1844 @LENGTH@ 78
------INS InfixExpression@@address instanceof Inet6Address && hostString != null && address != null @TO@ InfixExpression@@address instanceof Inet6Address && hostString.equals(address.getHostAddress()) @AT@ 1844 @LENGTH@ 72
---------INS InfixExpression@@address instanceof Inet6Address && hostString != null @TO@ InfixExpression@@address instanceof Inet6Address && hostString != null && address != null @AT@ 1844 @LENGTH@ 53
------------MOV InstanceofExpression@@address instanceof Inet6Address @TO@ InfixExpression@@address instanceof Inet6Address && hostString != null @AT@ 1844 @LENGTH@ 31
------------MOV Operator@@&& @TO@ InfixExpression@@address instanceof Inet6Address && hostString != null @AT@ 1875 @LENGTH@ 2
------------INS InfixExpression@@hostString != null @TO@ InfixExpression@@address instanceof Inet6Address && hostString != null @AT@ 1879 @LENGTH@ 18
---------------INS SimpleName@@hostString @TO@ InfixExpression@@hostString != null @AT@ 1879 @LENGTH@ 10
---------------INS Operator@@!= @TO@ InfixExpression@@hostString != null @AT@ 1889 @LENGTH@ 2
---------------INS NullLiteral@@null @TO@ InfixExpression@@hostString != null @AT@ 1893 @LENGTH@ 4
---------INS Operator@@&& @TO@ InfixExpression@@address instanceof Inet6Address && hostString != null && address != null @AT@ 1897 @LENGTH@ 2
---------INS InfixExpression@@address != null @TO@ InfixExpression@@address instanceof Inet6Address && hostString != null && address != null @AT@ 1901 @LENGTH@ 15
------------INS SimpleName@@address @TO@ InfixExpression@@address != null @AT@ 1901 @LENGTH@ 7
------------INS Operator@@!= @TO@ InfixExpression@@address != null @AT@ 1908 @LENGTH@ 2
------------INS NullLiteral@@null @TO@ InfixExpression@@address != null @AT@ 1912 @LENGTH@ 4
------INS Operator@@&& @TO@ InfixExpression@@address instanceof Inet6Address && hostString.equals(address.getHostAddress()) @AT@ 1916 @LENGTH@ 2


UPD TypeDeclaration@@[@Configuration, @ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration"), @EnableConfigurationProperties(ICalDataFormatConfiguration.class), public]ICalDataFormatAutoConfiguration,  @TO@ [@Configuration, @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration"), @EnableConfigurationProperties(ICalDataFormatConfiguration.class), public]ICalDataFormatAutoConfiguration,  @AT@ 1663 @LENGTH@ 1095
---UPD NormalAnnotation@@@ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1678 @LENGTH@ 79
---UPD NormalAnnotation@@@AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1758 @LENGTH@ 80


UPD MethodDeclaration@@public, static, Object, MethodName:computeIfAbsent, SSLSession sslSession, String key, Function<String,?> mappingFunction,  @TO@ public, static, R, R, MethodName:computeIfAbsent, SSLSession sslSession, String key, Function<String,R> mappingFunction,  @AT@ 17077 @LENGTH@ 699
---UPD SimpleType@@Object @TO@ R @AT@ 17091 @LENGTH@ 6
---UPD SingleVariableDeclaration@@Function<String,?> mappingFunction @TO@ Function<String,R> mappingFunction @AT@ 17149 @LENGTH@ 35
------UPD ParameterizedType@@Function<String,?> @TO@ Function<String,R> @AT@ 17149 @LENGTH@ 19
---------INS SimpleType@@R @TO@ ParameterizedType@@Function<String,?> @AT@ 17165 @LENGTH@ 1
---------DEL WildcardType@@? @AT@ 17166 @LENGTH@ 1
---UPD SynchronizedStatement@@synchronized (sslSession) {  final Object existing=sslSession.getValue(key);  if (existing == null) {    Object newValue=mappingFunction.apply(key);    Assert.assertNotNull(newValue);    sslSession.putValue(key,newValue);    return newValue;  } else {    return existing;  }} @TO@ synchronized (sslSession) {  final R existing=(R)sslSession.getValue(key);  if (existing == null) {    R newValue=mappingFunction.apply(key);    Assert.assertNotNull(newValue);    sslSession.putValue(key,newValue);    return newValue;  } else {    return existing;  }} @AT@ 17372 @LENGTH@ 398
------UPD Block@@SyncBody:{  final Object existing=sslSession.getValue(key);  if (existing == null) {    Object newValue=mappingFunction.apply(key);    Assert.assertNotNull(newValue);    sslSession.putValue(key,newValue);    return newValue;  } else {    return existing;  }} @TO@ SyncBody:{  final R existing=(R)sslSession.getValue(key);  if (existing == null) {    R newValue=mappingFunction.apply(key);    Assert.assertNotNull(newValue);    sslSession.putValue(key,newValue);    return newValue;  } else {    return existing;  }} @AT@ 17398 @LENGTH@ 372
---------UPD VariableDeclarationStatement@@final Object existing=sslSession.getValue(key); @TO@ final R existing=(R)sslSession.getValue(key); @AT@ 17412 @LENGTH@ 49
------------UPD SimpleType@@Object @TO@ R @AT@ 17418 @LENGTH@ 6
------------UPD VariableDeclarationFragment@@existing=sslSession.getValue(key) @TO@ existing=(R)sslSession.getValue(key) @AT@ 17425 @LENGTH@ 35
---------------INS CastExpression@@(R)sslSession.getValue(key) @TO@ VariableDeclarationFragment@@existing=sslSession.getValue(key) @AT@ 17430 @LENGTH@ 28
------------------INS SimpleType@@R @TO@ CastExpression@@(R)sslSession.getValue(key) @AT@ 17431 @LENGTH@ 1
------------------MOV MethodInvocation@@sslSession.getValue(key) @TO@ CastExpression@@(R)sslSession.getValue(key) @AT@ 17436 @LENGTH@ 24
---------UPD IfStatement@@if (existing == null) {  Object newValue=mappingFunction.apply(key);  Assert.assertNotNull(newValue);  sslSession.putValue(key,newValue);  return newValue;} else {  return existing;} @TO@ if (existing == null) {  R newValue=mappingFunction.apply(key);  Assert.assertNotNull(newValue);  sslSession.putValue(key,newValue);  return newValue;} else {  return existing;} @AT@ 17474 @LENGTH@ 286
------------UPD Block@@ThenBody:{  Object newValue=mappingFunction.apply(key);  Assert.assertNotNull(newValue);  sslSession.putValue(key,newValue);  return newValue;} @TO@ ThenBody:{  R newValue=mappingFunction.apply(key);  Assert.assertNotNull(newValue);  sslSession.putValue(key,newValue);  return newValue;} @AT@ 17496 @LENGTH@ 210
---------------UPD VariableDeclarationStatement@@Object newValue=mappingFunction.apply(key); @TO@ R newValue=mappingFunction.apply(key); @AT@ 17514 @LENGTH@ 45
------------------UPD SimpleType@@Object @TO@ R @AT@ 17514 @LENGTH@ 6


UPD ExpressionStatement@@MethodInvocation:mvc.perform(get(profileLink.expand().getHref()).accept(ALPS_MEDIA_TYPE)).andExpect(status().isOk()).andExpect(content().contentType(ALPS_MEDIA_TYPE)) @TO@ MethodInvocation:mvc.perform(get(profileLink.expand().getHref()).accept(ALPS_MEDIA_TYPE)).andExpect(status().isOk()).andExpect(content().contentTypeCompatibleWith(ALPS_MEDIA_TYPE)) @AT@ 6310 @LENGTH@ 185
---UPD MethodInvocation@@mvc.perform(get(profileLink.expand().getHref()).accept(ALPS_MEDIA_TYPE)).andExpect(status().isOk()).andExpect(content().contentType(ALPS_MEDIA_TYPE)) @TO@ mvc.perform(get(profileLink.expand().getHref()).accept(ALPS_MEDIA_TYPE)).andExpect(status().isOk()).andExpect(content().contentTypeCompatibleWith(ALPS_MEDIA_TYPE)) @AT@ 6310 @LENGTH@ 184
------UPD SimpleName@@MethodName:andExpect:[content().contentType(ALPS_MEDIA_TYPE)] @TO@ MethodName:andExpect:[content().contentTypeCompatibleWith(ALPS_MEDIA_TYPE)] @AT@ 6445 @LENGTH@ 49
---------UPD MethodInvocation@@content().contentType(ALPS_MEDIA_TYPE) @TO@ content().contentTypeCompatibleWith(ALPS_MEDIA_TYPE) @AT@ 6455 @LENGTH@ 38
------------UPD SimpleName@@MethodName:contentType:[ALPS_MEDIA_TYPE] @TO@ MethodName:contentTypeCompatibleWith:[ALPS_MEDIA_TYPE] @AT@ 6465 @LENGTH@ 28


UPD TypeDeclaration@@[@Configuration, @ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration"), public]GitHubComponentAutoConfiguration,  @TO@ [@Configuration, @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration"), public]GitHubComponentAutoConfiguration,  @AT@ 1444 @LENGTH@ 610
---UPD NormalAnnotation@@@ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1459 @LENGTH@ 79
---UPD NormalAnnotation@@@AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1539 @LENGTH@ 80


UPD ExpressionStatement@@Assignment:redirectQuery=location.substring(location.indexOf('?') + 1) @TO@ Assignment:redirectQuery=new URL(location).getQuery() @AT@ 7875 @LENGTH@ 62
---UPD Assignment@@redirectQuery=location.substring(location.indexOf('?') + 1) @TO@ redirectQuery=new URL(location).getQuery() @AT@ 7875 @LENGTH@ 61
------DEL MethodInvocation@@location.substring(location.indexOf('?') + 1) @AT@ 7891 @LENGTH@ 45
---------DEL SimpleName@@Name:location @AT@ 7891 @LENGTH@ 8
---------DEL SimpleName@@MethodName:substring:[location.indexOf('?') + 1] @AT@ 7900 @LENGTH@ 36
------------DEL InfixExpression@@location.indexOf('?') + 1 @AT@ 7910 @LENGTH@ 25
---------------DEL MethodInvocation@@location.indexOf('?') @AT@ 7910 @LENGTH@ 21
------------------DEL SimpleName@@Name:location @AT@ 7910 @LENGTH@ 8
---------------DEL Operator@@+ @AT@ 7931 @LENGTH@ 1
---------------DEL NumberLiteral@@1 @AT@ 7934 @LENGTH@ 1
------INS MethodInvocation@@new URL(location).getQuery() @TO@ Assignment@@redirectQuery=location.substring(location.indexOf('?') + 1) @AT@ 7911 @LENGTH@ 28
---------INS ClassInstanceCreation@@URL[location] @TO@ MethodInvocation@@new URL(location).getQuery() @AT@ 7911 @LENGTH@ 17
------------INS New@@new @TO@ ClassInstanceCreation@@URL[location] @AT@ 7911 @LENGTH@ 3
------------INS SimpleType@@URL @TO@ ClassInstanceCreation@@URL[location] @AT@ 7915 @LENGTH@ 3
------------INS SimpleName@@location @TO@ ClassInstanceCreation@@URL[location] @AT@ 7919 @LENGTH@ 8
---------MOV SimpleName@@MethodName:indexOf:['?'] @TO@ MethodInvocation@@new URL(location).getQuery() @AT@ 7919 @LENGTH@ 12


UPD TypeDeclaration@@[@Configuration, protected, static]TokenKeyEndpointRegistrar, [BeanDefinitionRegistryPostProcessor] @TO@ [@Component, protected, static]TokenKeyEndpointRegistrar, [BeanDefinitionRegistryPostProcessor] @AT@ 8256 @LENGTH@ 855
---UPD MarkerAnnotation@@@Configuration @TO@ @Component @AT@ 8256 @LENGTH@ 14


UPD IfStatement@@if (File.separatorChar == '/') {  final String[] cmd;  String osName=System.getProperty("os.name");  osName=osName.toLowerCase(Locale.ENGLISH);  if (osName.contains("hp-ux") || osName.contains("aix")) {    cmd=new String[]{"df","-P","/"};  } else   if (osName.contains("sunos") || osName.contains("sun os") || osName.contains("solaris")) {    cmd=new String[]{"/usr/xpg4/bin/df","-P","/"};  } else {    cmd=new String[]{"df","/"};  }  final Process proc=Runtime.getRuntime().exec(cmd);  boolean kilobyteBlock=true;  BufferedReader r=null;  try {    r=new BufferedReader(new InputStreamReader(proc.getInputStream()));    final String line=r.readLine();    Assert.assertNotNull("Unexpected null line",line);    if (line.contains("512")) {      kilobyteBlock=false;    }  }  finally {    IOUtils.closeQuietly(r);  }  @SuppressWarnings("deprecation") final long free=FileSystemUtils.freeSpace("/");  final long kb=FileSystemUtils.freeSpaceKb("/");  if (kilobyteBlock) {    assertEquals(free,kb,256d);  } else {    assertEquals(free / 2d,kb,256d);  }} else {  @SuppressWarnings("deprecation") final long bytes=FileSystemUtils.freeSpace("");  final long kb=FileSystemUtils.freeSpaceKb("");  assertEquals((double)bytes / 1024,kb,256d);} @TO@ if (File.separatorChar == '/') {  final String[] cmd;  String osName=System.getProperty("os.name");  osName=osName.toLowerCase(Locale.ENGLISH);  if (osName.contains("hp-ux") || osName.contains("aix")) {    cmd=new String[]{"df","-P","/"};  } else   if (osName.contains("sunos") || osName.contains("sun os") || osName.contains("solaris")) {    cmd=new String[]{"/usr/xpg4/bin/df","-P","/"};  } else {    cmd=new String[]{"df","/"};  }  final Process proc=Runtime.getRuntime().exec(cmd);  boolean kilobyteBlock=true;  try (BufferedReader r=new BufferedReader(new InputStreamReader(proc.getInputStream()))){    final String line=r.readLine();    Assert.assertNotNull("Unexpected null line",line);    if (line.contains("512")) {      kilobyteBlock=false;    }  }   final long free=FileSystemUtils.freeSpace("/");  final long kb=FileSystemUtils.freeSpaceKb("/");  if (kilobyteBlock) {    assertEquals(free,kb,256d);  } else {    assertEquals(free / 2d,kb,256d);  }} else {  final long bytes=FileSystemUtils.freeSpace("");  final long kb=FileSystemUtils.freeSpaceKb("");  assertEquals((double)bytes / 1024,kb,256d);} @AT@ 1394 @LENGTH@ 1832
---UPD Block@@ThenBody:{  final String[] cmd;  String osName=System.getProperty("os.name");  osName=osName.toLowerCase(Locale.ENGLISH);  if (osName.contains("hp-ux") || osName.contains("aix")) {    cmd=new String[]{"df","-P","/"};  } else   if (osName.contains("sunos") || osName.contains("sun os") || osName.contains("solaris")) {    cmd=new String[]{"/usr/xpg4/bin/df","-P","/"};  } else {    cmd=new String[]{"df","/"};  }  final Process proc=Runtime.getRuntime().exec(cmd);  boolean kilobyteBlock=true;  BufferedReader r=null;  try {    r=new BufferedReader(new InputStreamReader(proc.getInputStream()));    final String line=r.readLine();    Assert.assertNotNull("Unexpected null line",line);    if (line.contains("512")) {      kilobyteBlock=false;    }  }  finally {    IOUtils.closeQuietly(r);  }  @SuppressWarnings("deprecation") final long free=FileSystemUtils.freeSpace("/");  final long kb=FileSystemUtils.freeSpaceKb("/");  if (kilobyteBlock) {    assertEquals(free,kb,256d);  } else {    assertEquals(free / 2d,kb,256d);  }} @TO@ ThenBody:{  final String[] cmd;  String osName=System.getProperty("os.name");  osName=osName.toLowerCase(Locale.ENGLISH);  if (osName.contains("hp-ux") || osName.contains("aix")) {    cmd=new String[]{"df","-P","/"};  } else   if (osName.contains("sunos") || osName.contains("sun os") || osName.contains("solaris")) {    cmd=new String[]{"/usr/xpg4/bin/df","-P","/"};  } else {    cmd=new String[]{"df","/"};  }  final Process proc=Runtime.getRuntime().exec(cmd);  boolean kilobyteBlock=true;  try (BufferedReader r=new BufferedReader(new InputStreamReader(proc.getInputStream()))){    final String line=r.readLine();    Assert.assertNotNull("Unexpected null line",line);    if (line.contains("512")) {      kilobyteBlock=false;    }  }   final long free=FileSystemUtils.freeSpace("/");  final long kb=FileSystemUtils.freeSpaceKb("/");  if (kilobyteBlock) {    assertEquals(free,kb,256d);  } else {    assertEquals(free / 2d,kb,256d);  }} @AT@ 1425 @LENGTH@ 1545
------DEL VariableDeclarationStatement@@BufferedReader r=null; @AT@ 2147 @LENGTH@ 24
---------DEL SimpleType@@BufferedReader @AT@ 2147 @LENGTH@ 14
---------DEL VariableDeclarationFragment@@r=null @AT@ 2162 @LENGTH@ 8
------------DEL SimpleName@@r @AT@ 2162 @LENGTH@ 1
------------DEL NullLiteral@@null @AT@ 2166 @LENGTH@ 4
------UPD TryStatement@@try {  r=new BufferedReader(new InputStreamReader(proc.getInputStream()));  final String line=r.readLine();  Assert.assertNotNull("Unexpected null line",line);  if (line.contains("512")) {    kilobyteBlock=false;  }}  finally {  IOUtils.closeQuietly(r);} @TO@ try (BufferedReader r=new BufferedReader(new InputStreamReader(proc.getInputStream()))){  final String line=r.readLine();  Assert.assertNotNull("Unexpected null line",line);  if (line.contains("512")) {    kilobyteBlock=false;  }}  @AT@ 2184 @LENGTH@ 393
---------DEL ExpressionStatement@@Assignment:r=new BufferedReader(new InputStreamReader(proc.getInputStream())) @AT@ 2206 @LENGTH@ 69
------------DEL Assignment@@r=new BufferedReader(new InputStreamReader(proc.getInputStream())) @AT@ 2206 @LENGTH@ 68
---------------DEL SimpleName@@r @AT@ 2206 @LENGTH@ 1
---------------DEL Operator@@= @AT@ 2207 @LENGTH@ 1
---------INS VariableDeclarationExpression@@BufferedReader r=new BufferedReader(new InputStreamReader(proc.getInputStream())) @TO@ TryStatement@@try {  r=new BufferedReader(new InputStreamReader(proc.getInputStream()));  final String line=r.readLine();  Assert.assertNotNull("Unexpected null line",line);  if (line.contains("512")) {    kilobyteBlock=false;  }}  finally {  IOUtils.closeQuietly(r);} @AT@ 2216 @LENGTH@ 83
------------INS SimpleType@@BufferedReader @TO@ VariableDeclarationExpression@@BufferedReader r=new BufferedReader(new InputStreamReader(proc.getInputStream())) @AT@ 2216 @LENGTH@ 14
------------INS VariableDeclarationFragment@@r=new BufferedReader(new InputStreamReader(proc.getInputStream())) @TO@ VariableDeclarationExpression@@BufferedReader r=new BufferedReader(new InputStreamReader(proc.getInputStream())) @AT@ 2231 @LENGTH@ 68
---------------MOV ClassInstanceCreation@@BufferedReader[new InputStreamReader(proc.getInputStream())] @TO@ VariableDeclarationFragment@@r=new BufferedReader(new InputStreamReader(proc.getInputStream())) @AT@ 2210 @LENGTH@ 64
---------------INS SimpleName@@r @TO@ VariableDeclarationFragment@@r=new BufferedReader(new InputStreamReader(proc.getInputStream())) @AT@ 2231 @LENGTH@ 1
---------DEL Block@@FinallyBody:{  IOUtils.closeQuietly(r);} @AT@ 2521 @LENGTH@ 56
------------DEL ExpressionStatement@@MethodInvocation:IOUtils.closeQuietly(r) @AT@ 2539 @LENGTH@ 24
---------------DEL MethodInvocation@@IOUtils.closeQuietly(r) @AT@ 2539 @LENGTH@ 23
------------------DEL SimpleName@@Name:IOUtils @AT@ 2539 @LENGTH@ 7
------------------DEL SimpleName@@MethodName:closeQuietly:[r] @AT@ 2547 @LENGTH@ 15
---------------------DEL SimpleName@@r @AT@ 2560 @LENGTH@ 1
------UPD VariableDeclarationStatement@@@SuppressWarnings("deprecation") final long free=FileSystemUtils.freeSpace("/"); @TO@ final long free=FileSystemUtils.freeSpace("/"); @AT@ 2627 @LENGTH@ 106
---UPD Block@@ElseBody:{  @SuppressWarnings("deprecation") final long bytes=FileSystemUtils.freeSpace("");  final long kb=FileSystemUtils.freeSpaceKb("");  assertEquals((double)bytes / 1024,kb,256d);} @TO@ ElseBody:{  final long bytes=FileSystemUtils.freeSpace("");  final long kb=FileSystemUtils.freeSpaceKb("");  assertEquals((double)bytes / 1024,kb,256d);} @AT@ 2976 @LENGTH@ 250
------UPD VariableDeclarationStatement@@@SuppressWarnings("deprecation") final long bytes=FileSystemUtils.freeSpace(""); @TO@ final long bytes=FileSystemUtils.freeSpace(""); @AT@ 2990 @LENGTH@ 106


UPD MethodDeclaration@@public, voidMethodName:SampleLanguage, boolean fallback,  @TO@ voidMethodName:SampleLanguage, boolean fallback,  @AT@ 3010 @LENGTH@ 89
---DEL Modifier@@public @AT@ 3010 @LENGTH@ 6


UPD TypeDeclaration@@[@Configuration, @ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration"), @EnableConfigurationProperties(SedaComponentConfiguration.class), public]SedaComponentAutoConfiguration,  @TO@ [@Configuration, @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration"), @EnableConfigurationProperties(SedaComponentConfiguration.class), public]SedaComponentAutoConfiguration,  @AT@ 1619 @LENGTH@ 2039
---UPD NormalAnnotation@@@ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1634 @LENGTH@ 79
---UPD NormalAnnotation@@@AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1714 @LENGTH@ 80


UPD TypeDeclaration@@[@Configuration, @ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration"), public]MllpComponentAutoConfiguration,  @TO@ [@Configuration, @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration"), public]MllpComponentAutoConfiguration,  @AT@ 1438 @LENGTH@ 596
---UPD NormalAnnotation@@@ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1453 @LENGTH@ 79
---UPD NormalAnnotation@@@AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1533 @LENGTH@ 80


UPD ExpressionStatement@@Assignment:redirectQuery=location.substring(location.indexOf('?') + 1) @TO@ Assignment:redirectQuery=new URL(location).getQuery() @AT@ 9263 @LENGTH@ 62
---UPD Assignment@@redirectQuery=location.substring(location.indexOf('?') + 1) @TO@ redirectQuery=new URL(location).getQuery() @AT@ 9263 @LENGTH@ 61
------DEL MethodInvocation@@location.substring(location.indexOf('?') + 1) @AT@ 9279 @LENGTH@ 45
---------DEL SimpleName@@Name:location @AT@ 9279 @LENGTH@ 8
---------DEL SimpleName@@MethodName:substring:[location.indexOf('?') + 1] @AT@ 9288 @LENGTH@ 36
------------DEL InfixExpression@@location.indexOf('?') + 1 @AT@ 9298 @LENGTH@ 25
---------------DEL MethodInvocation@@location.indexOf('?') @AT@ 9298 @LENGTH@ 21
------------------DEL SimpleName@@Name:location @AT@ 9298 @LENGTH@ 8
---------------DEL Operator@@+ @AT@ 9319 @LENGTH@ 1
---------------DEL NumberLiteral@@1 @AT@ 9322 @LENGTH@ 1
------INS MethodInvocation@@new URL(location).getQuery() @TO@ Assignment@@redirectQuery=location.substring(location.indexOf('?') + 1) @AT@ 9279 @LENGTH@ 28
---------INS ClassInstanceCreation@@URL[location] @TO@ MethodInvocation@@new URL(location).getQuery() @AT@ 9279 @LENGTH@ 17
------------INS New@@new @TO@ ClassInstanceCreation@@URL[location] @AT@ 9279 @LENGTH@ 3
------------INS SimpleType@@URL @TO@ ClassInstanceCreation@@URL[location] @AT@ 9283 @LENGTH@ 3
------------INS SimpleName@@location @TO@ ClassInstanceCreation@@URL[location] @AT@ 9287 @LENGTH@ 8
---------MOV SimpleName@@MethodName:indexOf:['?'] @TO@ MethodInvocation@@new URL(location).getQuery() @AT@ 9307 @LENGTH@ 12


UPD IfStatement@@if (!matchesGenericType((TypeVariable<?>)genericType,parameterType)) {  return false;} @TO@ if (!matchesGenericType((TypeVariable<?>)genericType,ResolvableType.forMethodParameter(parameter))) {  return false;} @AT@ 10382 @LENGTH@ 97
---UPD PrefixExpression@@!matchesGenericType((TypeVariable<?>)genericType,parameterType) @TO@ !matchesGenericType((TypeVariable<?>)genericType,ResolvableType.forMethodParameter(parameter)) @AT@ 10386 @LENGTH@ 65
------UPD MethodInvocation@@matchesGenericType((TypeVariable<?>)genericType,parameterType) @TO@ matchesGenericType((TypeVariable<?>)genericType,ResolvableType.forMethodParameter(parameter)) @AT@ 10387 @LENGTH@ 64
---------UPD SimpleName@@MethodName:matchesGenericType:[(TypeVariable<?>)genericType, parameterType] @TO@ MethodName:matchesGenericType:[(TypeVariable<?>)genericType, ResolvableType.forMethodParameter(parameter)] @AT@ 10387 @LENGTH@ 64
------------UPD SimpleName@@parameterType @TO@ parameter @AT@ 10437 @LENGTH@ 13
------------INS MethodInvocation@@ResolvableType.forMethodParameter(parameter) @TO@ SimpleName@@MethodName:matchesGenericType:[(TypeVariable<?>)genericType, parameterType] @AT@ 10530 @LENGTH@ 44
---------------INS SimpleName@@Name:ResolvableType @TO@ MethodInvocation@@ResolvableType.forMethodParameter(parameter) @AT@ 10530 @LENGTH@ 14
---------------INS SimpleName@@MethodName:forMethodParameter:[parameter] @TO@ MethodInvocation@@ResolvableType.forMethodParameter(parameter) @AT@ 10545 @LENGTH@ 29
------------------MOV SimpleName@@parameterType @TO@ SimpleName@@MethodName:forMethodParameter:[parameter] @AT@ 10437 @LENGTH@ 13
------------------MOV SimpleName@@parameterType @TO@ SimpleName@@MethodName:forMethodParameter:[parameter] @AT@ 10437 @LENGTH@ 13


UPD MethodDeclaration@@String, MethodName:getSaslServerAuthentication,  @TO@ String, MethodName:getSaslAuthenticationFactory,  @AT@ 1582 @LENGTH@ 30
---UPD SimpleName@@MethodName:getSaslServerAuthentication @TO@ MethodName:getSaslAuthenticationFactory @AT@ 1582 @LENGTH@ 27


UPD TypeDeclaration@@[@Configuration, @ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration"), @EnableConfigurationProperties(XmlBeansDataFormatConfiguration.class), public]XmlBeansDataFormatAutoConfiguration,  @TO@ [@Configuration, @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration"), @EnableConfigurationProperties(XmlBeansDataFormatConfiguration.class), public]XmlBeansDataFormatAutoConfiguration,  @AT@ 1675 @LENGTH@ 1144
---UPD NormalAnnotation@@@ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1690 @LENGTH@ 79
---UPD NormalAnnotation@@@AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1770 @LENGTH@ 80


UPD TypeDeclaration@@[@UriEndpoint(scheme="consul",title="Consul",syntax="consul://apiEndpoint",label="api,cloud"), public]ConsulEndpoint, DefaultEndpoint @TO@ [@UriEndpoint(scheme="consul",title="Consul",syntax="consul:apiEndpoint",label="api,cloud"), public]ConsulEndpoint, DefaultEndpoint @AT@ 1228 @LENGTH@ 2822
---UPD NormalAnnotation@@@UriEndpoint(scheme="consul",title="Consul",syntax="consul://apiEndpoint",label="api,cloud") @TO@ @UriEndpoint(scheme="consul",title="Consul",syntax="consul:apiEndpoint",label="api,cloud") @AT@ 1228 @LENGTH@ 103


UPD TypeDeclaration@@[@Configuration, @ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration"), @EnableConfigurationProperties(MimeMultipartDataFormatConfiguration.class), public]MimeMultipartDataFormatAutoConfiguration,  @TO@ [@Configuration, @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration"), @EnableConfigurationProperties(MimeMultipartDataFormatConfiguration.class), public]MimeMultipartDataFormatAutoConfiguration,  @AT@ 1694 @LENGTH@ 1202
---UPD NormalAnnotation@@@ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1709 @LENGTH@ 79
---UPD NormalAnnotation@@@AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1789 @LENGTH@ 80


UPD ExpressionStatement@@Assignment:desc=new FileSinkDesc(basePath,tableDesc,false,1,false,false,1,1,partCols,dpCtx,null,null) @TO@ Assignment:desc=new FileSinkDesc(basePath,tableDesc,false,1,false,false,1,1,partCols,dpCtx,null,null,false) @AT@ 11008 @LENGTH@ 104
---UPD Assignment@@desc=new FileSinkDesc(basePath,tableDesc,false,1,false,false,1,1,partCols,dpCtx,null,null) @TO@ desc=new FileSinkDesc(basePath,tableDesc,false,1,false,false,1,1,partCols,dpCtx,null,null,false) @AT@ 11008 @LENGTH@ 103
------UPD ClassInstanceCreation@@FileSinkDesc[basePath, tableDesc, false, 1, false, false, 1, 1, partCols, dpCtx, null, null] @TO@ FileSinkDesc[basePath, tableDesc, false, 1, false, false, 1, 1, partCols, dpCtx, null, null, false] @AT@ 11015 @LENGTH@ 96
---------INS BooleanLiteral@@false @TO@ ClassInstanceCreation@@FileSinkDesc[basePath, tableDesc, false, 1, false, false, 1, 1, partCols, dpCtx, null, null] @AT@ 11122 @LENGTH@ 5


UPD VariableDeclarationStatement@@String spoolRules=CamelContextHelper.parseText(getContext(),streamCaching.getAnySpoolRules()); @TO@ String spoolRules=CamelContextHelper.parseText(getContext(),streamCaching.getSpoolRules()); @AT@ 28572 @LENGTH@ 97
---UPD VariableDeclarationFragment@@spoolRules=CamelContextHelper.parseText(getContext(),streamCaching.getAnySpoolRules()) @TO@ spoolRules=CamelContextHelper.parseText(getContext(),streamCaching.getSpoolRules()) @AT@ 28579 @LENGTH@ 89
------UPD MethodInvocation@@CamelContextHelper.parseText(getContext(),streamCaching.getAnySpoolRules()) @TO@ CamelContextHelper.parseText(getContext(),streamCaching.getSpoolRules()) @AT@ 28592 @LENGTH@ 76
---------UPD SimpleName@@MethodName:parseText:[getContext(), streamCaching.getAnySpoolRules()] @TO@ MethodName:parseText:[getContext(), streamCaching.getSpoolRules()] @AT@ 28611 @LENGTH@ 57
------------UPD MethodInvocation@@streamCaching.getAnySpoolRules() @TO@ streamCaching.getSpoolRules() @AT@ 28635 @LENGTH@ 32
---------------UPD SimpleName@@MethodName:getAnySpoolRules:[] @TO@ MethodName:getSpoolRules:[] @AT@ 28649 @LENGTH@ 18


UPD ExpressionStatement@@MethodInvocation:Assert.notNull(lookupInformation,"LookuInformation must not be null!") @TO@ MethodInvocation:Assert.notNull(lookupInformation,"LookupInformation must not be null!") @AT@ 7234 @LENGTH@ 72
---UPD MethodInvocation@@Assert.notNull(lookupInformation,"LookuInformation must not be null!") @TO@ Assert.notNull(lookupInformation,"LookupInformation must not be null!") @AT@ 7234 @LENGTH@ 71
------UPD SimpleName@@MethodName:notNull:[lookupInformation, "LookuInformation must not be null!"] @TO@ MethodName:notNull:[lookupInformation, "LookupInformation must not be null!"] @AT@ 7241 @LENGTH@ 64
---------UPD StringLiteral@@"LookuInformation must not be null!" @TO@ "LookupInformation must not be null!" @AT@ 7268 @LENGTH@ 36


UPD TypeDeclaration@@[@Configuration, @ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration"), public]ChronicleEngineComponentAutoConfiguration,  @TO@ [@Configuration, @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration"), public]ChronicleEngineComponentAutoConfiguration,  @AT@ 1473 @LENGTH@ 675
---UPD NormalAnnotation@@@ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1488 @LENGTH@ 79
---UPD NormalAnnotation@@@AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1568 @LENGTH@ 80


UPD FieldDeclaration@@static, final, SimpleAttributeDefinition, [SECURITY_DOMAIN=new SimpleAttributeDefinitionBuilder(EJB3SubsystemModel.SECURITY_DOMAIN,ModelType.STRING,false).setAllowExpression(true).setValidator(new StringLengthValidator(1)).setFlags(AttributeAccess.Flag.RESTART_RESOURCE_SERVICES).setCapabilityReference(SECURITY_DOMAIN_CAPABILITY,APPLICATION_SECURITY_DOMAIN_CAPABILITY,true).build()] @TO@ static, final, SimpleAttributeDefinition, [SECURITY_DOMAIN=new SimpleAttributeDefinitionBuilder(EJB3SubsystemModel.SECURITY_DOMAIN,ModelType.STRING,false).setValidator(new StringLengthValidator(1)).setFlags(AttributeAccess.Flag.RESTART_ALL_SERVICES).setCapabilityReference(SECURITY_DOMAIN_CAPABILITY,APPLICATION_SECURITY_DOMAIN_CAPABILITY,true).build()] @AT@ 3726 @LENGTH@ 450
---UPD VariableDeclarationFragment@@SECURITY_DOMAIN=new SimpleAttributeDefinitionBuilder(EJB3SubsystemModel.SECURITY_DOMAIN,ModelType.STRING,false).setAllowExpression(true).setValidator(new StringLengthValidator(1)).setFlags(AttributeAccess.Flag.RESTART_RESOURCE_SERVICES).setCapabilityReference(SECURITY_DOMAIN_CAPABILITY,APPLICATION_SECURITY_DOMAIN_CAPABILITY,true).build() @TO@ SECURITY_DOMAIN=new SimpleAttributeDefinitionBuilder(EJB3SubsystemModel.SECURITY_DOMAIN,ModelType.STRING,false).setValidator(new StringLengthValidator(1)).setFlags(AttributeAccess.Flag.RESTART_ALL_SERVICES).setCapabilityReference(SECURITY_DOMAIN_CAPABILITY,APPLICATION_SECURITY_DOMAIN_CAPABILITY,true).build() @AT@ 3765 @LENGTH@ 410
------UPD MethodInvocation@@new SimpleAttributeDefinitionBuilder(EJB3SubsystemModel.SECURITY_DOMAIN,ModelType.STRING,false).setAllowExpression(true).setValidator(new StringLengthValidator(1)).setFlags(AttributeAccess.Flag.RESTART_RESOURCE_SERVICES).setCapabilityReference(SECURITY_DOMAIN_CAPABILITY,APPLICATION_SECURITY_DOMAIN_CAPABILITY,true).build() @TO@ new SimpleAttributeDefinitionBuilder(EJB3SubsystemModel.SECURITY_DOMAIN,ModelType.STRING,false).setValidator(new StringLengthValidator(1)).setFlags(AttributeAccess.Flag.RESTART_ALL_SERVICES).setCapabilityReference(SECURITY_DOMAIN_CAPABILITY,APPLICATION_SECURITY_DOMAIN_CAPABILITY,true).build() @AT@ 3783 @LENGTH@ 392
---------UPD MethodInvocation@@MethodName:setFlags:[AttributeAccess.Flag.RESTART_RESOURCE_SERVICES] @TO@ MethodName:setFlags:[AttributeAccess.Flag.RESTART_ALL_SERVICES] @AT@ 3783 @LENGTH@ 261
------------UPD QualifiedName@@AttributeAccess.Flag.RESTART_RESOURCE_SERVICES @TO@ AttributeAccess.Flag.RESTART_ALL_SERVICES @AT@ 3997 @LENGTH@ 46
---------------UPD SimpleName@@RESTART_RESOURCE_SERVICES @TO@ RESTART_ALL_SERVICES @AT@ 4018 @LENGTH@ 25
---------DEL MethodInvocation@@MethodName:setAllowExpression:[true] @AT@ 3783 @LENGTH@ 135
------------DEL BooleanLiteral@@true @AT@ 3913 @LENGTH@ 4


UPD ExpressionStatement@@MethodInvocation:session.purgeDatabase() @TO@ MethodInvocation:graphDatabaseService.execute("MATCH (n) OPTIONAL MATCH (n)-[r]-() DELETE r, n") @AT@ 2445 @LENGTH@ 24
---UPD MethodInvocation@@session.purgeDatabase() @TO@ graphDatabaseService.execute("MATCH (n) OPTIONAL MATCH (n)-[r]-() DELETE r, n") @AT@ 2445 @LENGTH@ 23
------UPD SimpleName@@Name:session @TO@ Name:graphDatabaseService @AT@ 2445 @LENGTH@ 7
------UPD SimpleName@@MethodName:purgeDatabase:[] @TO@ MethodName:execute:["MATCH (n) OPTIONAL MATCH (n)-[r]-() DELETE r, n"] @AT@ 2453 @LENGTH@ 15
---------INS StringLiteral@@"MATCH (n) OPTIONAL MATCH (n)-[r]-() DELETE r, n" @TO@ SimpleName@@MethodName:purgeDatabase:[] @AT@ 2470 @LENGTH@ 49


UPD ExpressionStatement@@MethodInvocation:parameterNames.add(new JavaSymbolName("id")) @TO@ MethodInvocation:parameterNames.add(new JavaSymbolName(StringUtils.uncapitalize(this.entity.getSimpleTypeName()))) @AT@ 18773 @LENGTH@ 45
---UPD MethodInvocation@@parameterNames.add(new JavaSymbolName("id")) @TO@ parameterNames.add(new JavaSymbolName(StringUtils.uncapitalize(this.entity.getSimpleTypeName()))) @AT@ 18773 @LENGTH@ 44
------UPD SimpleName@@MethodName:add:[new JavaSymbolName("id")] @TO@ MethodName:add:[new JavaSymbolName(StringUtils.uncapitalize(this.entity.getSimpleTypeName()))] @AT@ 18788 @LENGTH@ 29
---------UPD ClassInstanceCreation@@JavaSymbolName["id"] @TO@ JavaSymbolName[StringUtils.uncapitalize(this.entity.getSimpleTypeName())] @AT@ 18792 @LENGTH@ 24
------------DEL StringLiteral@@"id" @AT@ 18811 @LENGTH@ 4
------------INS MethodInvocation@@StringUtils.uncapitalize(this.entity.getSimpleTypeName()) @TO@ ClassInstanceCreation@@JavaSymbolName["id"] @AT@ 18868 @LENGTH@ 57
---------------INS SimpleName@@Name:StringUtils @TO@ MethodInvocation@@StringUtils.uncapitalize(this.entity.getSimpleTypeName()) @AT@ 18868 @LENGTH@ 11
---------------INS SimpleName@@MethodName:uncapitalize:[this.entity.getSimpleTypeName()] @TO@ MethodInvocation@@StringUtils.uncapitalize(this.entity.getSimpleTypeName()) @AT@ 18880 @LENGTH@ 45
------------------INS MethodInvocation@@this.entity.getSimpleTypeName() @TO@ SimpleName@@MethodName:uncapitalize:[this.entity.getSimpleTypeName()] @AT@ 18893 @LENGTH@ 31
---------------------INS FieldAccess@@this.entity @TO@ MethodInvocation@@this.entity.getSimpleTypeName() @AT@ 18893 @LENGTH@ 11
------------------------INS ThisExpression@@this @TO@ FieldAccess@@this.entity @AT@ 18893 @LENGTH@ 4
------------------------INS SimpleName@@entity @TO@ FieldAccess@@this.entity @AT@ 18898 @LENGTH@ 6
---------------------INS SimpleName@@MethodName:getSimpleTypeName:[] @TO@ MethodInvocation@@this.entity.getSimpleTypeName() @AT@ 18905 @LENGTH@ 19


INS MethodDeclaration@@public, voidMethodName:CapabilityReferenceCompleter, CandidatesProvider provider,  @TO@ TypeDeclaration@@[public]CapabilityReferenceCompleter, DefaultCompleter @AT@ 1818 @LENGTH@ 97
---INS Modifier@@public @TO@ MethodDeclaration@@public, voidMethodName:CapabilityReferenceCompleter, CandidatesProvider provider,  @AT@ 1818 @LENGTH@ 6
---INS SimpleName@@MethodName:CapabilityReferenceCompleter @TO@ MethodDeclaration@@public, voidMethodName:CapabilityReferenceCompleter, CandidatesProvider provider,  @AT@ 1825 @LENGTH@ 28
---INS SingleVariableDeclaration@@CandidatesProvider provider @TO@ MethodDeclaration@@public, voidMethodName:CapabilityReferenceCompleter, CandidatesProvider provider,  @AT@ 1854 @LENGTH@ 27
------INS SimpleType@@CandidatesProvider @TO@ SingleVariableDeclaration@@CandidatesProvider provider @AT@ 1854 @LENGTH@ 18
------INS SimpleName@@provider @TO@ SingleVariableDeclaration@@CandidatesProvider provider @AT@ 1873 @LENGTH@ 8
---INS SuperConstructorInvocation@@super(provider);
 @TO@ MethodDeclaration@@public, voidMethodName:CapabilityReferenceCompleter, CandidatesProvider provider,  @AT@ 1893 @LENGTH@ 16
------INS SimpleName@@provider @TO@ SuperConstructorInvocation@@super(provider);
 @AT@ 1899 @LENGTH@ 8


UPD ExpressionStatement@@MethodInvocation:intervals.add(new Interval(timeList.get(0).getValue().getMinTime().getMillis(),timeList.get(0).getValue().getMaxTime().getMillis())) @TO@ MethodInvocation:intervals.add(new Interval(timeList.get(0).getValue().getMinTime().getMillis(),timeList.get(0).getValue().getMaxTime().getMillis(),ISOChronology.getInstanceUTC())) @AT@ 10982 @LENGTH@ 148
---UPD MethodInvocation@@intervals.add(new Interval(timeList.get(0).getValue().getMinTime().getMillis(),timeList.get(0).getValue().getMaxTime().getMillis())) @TO@ intervals.add(new Interval(timeList.get(0).getValue().getMinTime().getMillis(),timeList.get(0).getValue().getMaxTime().getMillis(),ISOChronology.getInstanceUTC())) @AT@ 10982 @LENGTH@ 147
------UPD SimpleName@@MethodName:add:[new Interval(timeList.get(0).getValue().getMinTime().getMillis(),timeList.get(0).getValue().getMaxTime().getMillis())] @TO@ MethodName:add:[new Interval(timeList.get(0).getValue().getMinTime().getMillis(),timeList.get(0).getValue().getMaxTime().getMillis(),ISOChronology.getInstanceUTC())] @AT@ 10992 @LENGTH@ 137
---------UPD ClassInstanceCreation@@Interval[timeList.get(0).getValue().getMinTime().getMillis(), timeList.get(0).getValue().getMaxTime().getMillis()] @TO@ Interval[timeList.get(0).getValue().getMinTime().getMillis(), timeList.get(0).getValue().getMaxTime().getMillis(), ISOChronology.getInstanceUTC()] @AT@ 10996 @LENGTH@ 132
------------INS MethodInvocation@@ISOChronology.getInstanceUTC() @TO@ ClassInstanceCreation@@Interval[timeList.get(0).getValue().getMinTime().getMillis(), timeList.get(0).getValue().getMaxTime().getMillis()] @AT@ 11129 @LENGTH@ 30
---------------INS SimpleName@@Name:ISOChronology @TO@ MethodInvocation@@ISOChronology.getInstanceUTC() @AT@ 11129 @LENGTH@ 13
---------------INS SimpleName@@MethodName:getInstanceUTC:[] @TO@ MethodInvocation@@ISOChronology.getInstanceUTC() @AT@ 11143 @LENGTH@ 16


INS MethodDeclaration@@public, String, MethodName:toString,  @TO@ TypeDeclaration@@[@Explain(displayName="Partition",explainLevels={Level.USER,Level.DEFAULT,Level.EXTENDED}), public]PartitionDesc, [Serializable, Cloneable] @AT@ 11647 @LENGTH@ 366
---INS Modifier@@public @TO@ MethodDeclaration@@public, String, MethodName:toString,  @AT@ 11647 @LENGTH@ 6
---INS SimpleType@@String @TO@ MethodDeclaration@@public, String, MethodName:toString,  @AT@ 11654 @LENGTH@ 6
---INS SimpleName@@MethodName:toString @TO@ MethodDeclaration@@public, String, MethodName:toString,  @AT@ 11661 @LENGTH@ 8
---INS ReturnStatement@@InfixExpression:"PartitionDesc [tableDesc=" + tableDesc + ", partSpec="+ partSpec+ ", inputFileFormatClass="+ inputFileFormatClass+ ", outputFileFormatClass="+ outputFileFormatClass+ ", properties="+ properties+ ", baseFileName="+ baseFileName+ ", vectorPartitionDesc="+ vectorPartitionDesc+ "]" @TO@ MethodDeclaration@@public, String, MethodName:toString,  @AT@ 11678 @LENGTH@ 331
------INS InfixExpression@@"PartitionDesc [tableDesc=" + tableDesc + ", partSpec="+ partSpec+ ", inputFileFormatClass="+ inputFileFormatClass+ ", outputFileFormatClass="+ outputFileFormatClass+ ", properties="+ properties+ ", baseFileName="+ baseFileName+ ", vectorPartitionDesc="+ vectorPartitionDesc+ "]" @TO@ ReturnStatement@@InfixExpression:"PartitionDesc [tableDesc=" + tableDesc + ", partSpec="+ partSpec+ ", inputFileFormatClass="+ inputFileFormatClass+ ", outputFileFormatClass="+ outputFileFormatClass+ ", properties="+ properties+ ", baseFileName="+ baseFileName+ ", vectorPartitionDesc="+ vectorPartitionDesc+ "]" @AT@ 11685 @LENGTH@ 323
---------INS StringLiteral@@"PartitionDesc [tableDesc=" @TO@ InfixExpression@@"PartitionDesc [tableDesc=" + tableDesc + ", partSpec="+ partSpec+ ", inputFileFormatClass="+ inputFileFormatClass+ ", outputFileFormatClass="+ outputFileFormatClass+ ", properties="+ properties+ ", baseFileName="+ baseFileName+ ", vectorPartitionDesc="+ vectorPartitionDesc+ "]" @AT@ 11685 @LENGTH@ 27
---------INS Operator@@+ @TO@ InfixExpression@@"PartitionDesc [tableDesc=" + tableDesc + ", partSpec="+ partSpec+ ", inputFileFormatClass="+ inputFileFormatClass+ ", outputFileFormatClass="+ outputFileFormatClass+ ", properties="+ properties+ ", baseFileName="+ baseFileName+ ", vectorPartitionDesc="+ vectorPartitionDesc+ "]" @AT@ 11712 @LENGTH@ 1
---------INS SimpleName@@tableDesc @TO@ InfixExpression@@"PartitionDesc [tableDesc=" + tableDesc + ", partSpec="+ partSpec+ ", inputFileFormatClass="+ inputFileFormatClass+ ", outputFileFormatClass="+ outputFileFormatClass+ ", properties="+ properties+ ", baseFileName="+ baseFileName+ ", vectorPartitionDesc="+ vectorPartitionDesc+ "]" @AT@ 11715 @LENGTH@ 9
---------INS StringLiteral@@", partSpec=" @TO@ InfixExpression@@"PartitionDesc [tableDesc=" + tableDesc + ", partSpec="+ partSpec+ ", inputFileFormatClass="+ inputFileFormatClass+ ", outputFileFormatClass="+ outputFileFormatClass+ ", properties="+ properties+ ", baseFileName="+ baseFileName+ ", vectorPartitionDesc="+ vectorPartitionDesc+ "]" @AT@ 11727 @LENGTH@ 13
---------INS SimpleName@@partSpec @TO@ InfixExpression@@"PartitionDesc [tableDesc=" + tableDesc + ", partSpec="+ partSpec+ ", inputFileFormatClass="+ inputFileFormatClass+ ", outputFileFormatClass="+ outputFileFormatClass+ ", properties="+ properties+ ", baseFileName="+ baseFileName+ ", vectorPartitionDesc="+ vectorPartitionDesc+ "]" @AT@ 11743 @LENGTH@ 8
---------INS StringLiteral@@", inputFileFormatClass=" @TO@ InfixExpression@@"PartitionDesc [tableDesc=" + tableDesc + ", partSpec="+ partSpec+ ", inputFileFormatClass="+ inputFileFormatClass+ ", outputFileFormatClass="+ outputFileFormatClass+ ", properties="+ properties+ ", baseFileName="+ baseFileName+ ", vectorPartitionDesc="+ vectorPartitionDesc+ "]" @AT@ 11762 @LENGTH@ 25
---------INS SimpleName@@inputFileFormatClass @TO@ InfixExpression@@"PartitionDesc [tableDesc=" + tableDesc + ", partSpec="+ partSpec+ ", inputFileFormatClass="+ inputFileFormatClass+ ", outputFileFormatClass="+ outputFileFormatClass+ ", properties="+ properties+ ", baseFileName="+ baseFileName+ ", vectorPartitionDesc="+ vectorPartitionDesc+ "]" @AT@ 11790 @LENGTH@ 20
---------INS StringLiteral@@", outputFileFormatClass=" @TO@ InfixExpression@@"PartitionDesc [tableDesc=" + tableDesc + ", partSpec="+ partSpec+ ", inputFileFormatClass="+ inputFileFormatClass+ ", outputFileFormatClass="+ outputFileFormatClass+ ", properties="+ properties+ ", baseFileName="+ baseFileName+ ", vectorPartitionDesc="+ vectorPartitionDesc+ "]" @AT@ 11821 @LENGTH@ 26
---------INS SimpleName@@outputFileFormatClass @TO@ InfixExpression@@"PartitionDesc [tableDesc=" + tableDesc + ", partSpec="+ partSpec+ ", inputFileFormatClass="+ inputFileFormatClass+ ", outputFileFormatClass="+ outputFileFormatClass+ ", properties="+ properties+ ", baseFileName="+ baseFileName+ ", vectorPartitionDesc="+ vectorPartitionDesc+ "]" @AT@ 11850 @LENGTH@ 21
---------INS StringLiteral@@", properties=" @TO@ InfixExpression@@"PartitionDesc [tableDesc=" + tableDesc + ", partSpec="+ partSpec+ ", inputFileFormatClass="+ inputFileFormatClass+ ", outputFileFormatClass="+ outputFileFormatClass+ ", properties="+ properties+ ", baseFileName="+ baseFileName+ ", vectorPartitionDesc="+ vectorPartitionDesc+ "]" @AT@ 11874 @LENGTH@ 15
---------INS SimpleName@@properties @TO@ InfixExpression@@"PartitionDesc [tableDesc=" + tableDesc + ", partSpec="+ partSpec+ ", inputFileFormatClass="+ inputFileFormatClass+ ", outputFileFormatClass="+ outputFileFormatClass+ ", properties="+ properties+ ", baseFileName="+ baseFileName+ ", vectorPartitionDesc="+ vectorPartitionDesc+ "]" @AT@ 11900 @LENGTH@ 10
---------INS StringLiteral@@", baseFileName=" @TO@ InfixExpression@@"PartitionDesc [tableDesc=" + tableDesc + ", partSpec="+ partSpec+ ", inputFileFormatClass="+ inputFileFormatClass+ ", outputFileFormatClass="+ outputFileFormatClass+ ", properties="+ properties+ ", baseFileName="+ baseFileName+ ", vectorPartitionDesc="+ vectorPartitionDesc+ "]" @AT@ 11913 @LENGTH@ 17
---------INS SimpleName@@baseFileName @TO@ InfixExpression@@"PartitionDesc [tableDesc=" + tableDesc + ", partSpec="+ partSpec+ ", inputFileFormatClass="+ inputFileFormatClass+ ", outputFileFormatClass="+ outputFileFormatClass+ ", properties="+ properties+ ", baseFileName="+ baseFileName+ ", vectorPartitionDesc="+ vectorPartitionDesc+ "]" @AT@ 11933 @LENGTH@ 12
---------INS StringLiteral@@", vectorPartitionDesc=" @TO@ InfixExpression@@"PartitionDesc [tableDesc=" + tableDesc + ", partSpec="+ partSpec+ ", inputFileFormatClass="+ inputFileFormatClass+ ", outputFileFormatClass="+ outputFileFormatClass+ ", properties="+ properties+ ", baseFileName="+ baseFileName+ ", vectorPartitionDesc="+ vectorPartitionDesc+ "]" @AT@ 11956 @LENGTH@ 24
---------INS SimpleName@@vectorPartitionDesc @TO@ InfixExpression@@"PartitionDesc [tableDesc=" + tableDesc + ", partSpec="+ partSpec+ ", inputFileFormatClass="+ inputFileFormatClass+ ", outputFileFormatClass="+ outputFileFormatClass+ ", properties="+ properties+ ", baseFileName="+ baseFileName+ ", vectorPartitionDesc="+ vectorPartitionDesc+ "]" @AT@ 11983 @LENGTH@ 19
---------INS StringLiteral@@"]" @TO@ InfixExpression@@"PartitionDesc [tableDesc=" + tableDesc + ", partSpec="+ partSpec+ ", inputFileFormatClass="+ inputFileFormatClass+ ", outputFileFormatClass="+ outputFileFormatClass+ ", properties="+ properties+ ", baseFileName="+ baseFileName+ ", vectorPartitionDesc="+ vectorPartitionDesc+ "]" @AT@ 12005 @LENGTH@ 3


UPD ExpressionStatement@@MethodInvocation:LOGGER.log(Level.INFO,"WARNING: Property {0} is not defined on current settings",name) @TO@ MethodInvocation:LOGGER.log(Level.INFO,String.format("WARNING: Property '%s' is not defined on current settings",name)) @AT@ 2185 @LENGTH@ 89
---UPD MethodInvocation@@LOGGER.log(Level.INFO,"WARNING: Property {0} is not defined on current settings",name) @TO@ LOGGER.log(Level.INFO,String.format("WARNING: Property '%s' is not defined on current settings",name)) @AT@ 2185 @LENGTH@ 88
------UPD SimpleName@@MethodName:log:[Level.INFO, "WARNING: Property {0} is not defined on current settings", name] @TO@ MethodName:log:[Level.INFO, String.format("WARNING: Property '%s' is not defined on current settings",name)] @AT@ 2192 @LENGTH@ 81
---------UPD StringLiteral@@"WARNING: Property {0} is not defined on current settings" @TO@ "WARNING: Property '%s' is not defined on current settings" @AT@ 2208 @LENGTH@ 58
---------INS MethodInvocation@@String.format("WARNING: Property '%s' is not defined on current settings",name) @TO@ SimpleName@@MethodName:log:[Level.INFO, "WARNING: Property {0} is not defined on current settings", name] @AT@ 2220 @LENGTH@ 80
------------INS SimpleName@@Name:String @TO@ MethodInvocation@@String.format("WARNING: Property '%s' is not defined on current settings",name) @AT@ 2220 @LENGTH@ 6
------------INS SimpleName@@MethodName:format:["WARNING: Property '%s' is not defined on current settings", name] @TO@ MethodInvocation@@String.format("WARNING: Property '%s' is not defined on current settings",name) @AT@ 2227 @LENGTH@ 73
---------------MOV StringLiteral@@"WARNING: Property {0} is not defined on current settings" @TO@ SimpleName@@MethodName:format:["WARNING: Property '%s' is not defined on current settings", name] @AT@ 2208 @LENGTH@ 58
---------------MOV SimpleName@@name @TO@ SimpleName@@MethodName:format:["WARNING: Property '%s' is not defined on current settings", name] @AT@ 2268 @LENGTH@ 4


UPD IfStatement@@if (approvedScopes.containsAll(requestedScopes)) {  authorizationRequest.setApproved(true);  return authorizationRequest;} @TO@ if (approvedScopes.containsAll(requestedScopes)) {  Set<Approval> approvals=new HashSet<Approval>();  Date expiry=computeExpiry();  for (  String approvedScope : approvedScopes) {    approvals.add(new Approval(userAuthentication.getName(),authorizationRequest.getClientId(),approvedScope,expiry,ApprovalStatus.APPROVED));  }  approvalStore.addApprovals(approvals);  authorizationRequest.setApproved(true);  return authorizationRequest;} @AT@ 4131 @LENGTH@ 135
---UPD Block@@ThenBody:{  authorizationRequest.setApproved(true);  return authorizationRequest;} @TO@ ThenBody:{  Set<Approval> approvals=new HashSet<Approval>();  Date expiry=computeExpiry();  for (  String approvedScope : approvedScopes) {    approvals.add(new Approval(userAuthentication.getName(),authorizationRequest.getClientId(),approvedScope,expiry,ApprovalStatus.APPROVED));  }  approvalStore.addApprovals(approvals);  authorizationRequest.setApproved(true);  return authorizationRequest;} @AT@ 4180 @LENGTH@ 86
------INS VariableDeclarationStatement@@Set<Approval> approvals=new HashSet<Approval>(); @TO@ Block@@ThenBody:{  authorizationRequest.setApproved(true);  return authorizationRequest;} @AT@ 4293 @LENGTH@ 50
---------INS ParameterizedType@@Set<Approval> @TO@ VariableDeclarationStatement@@Set<Approval> approvals=new HashSet<Approval>(); @AT@ 4293 @LENGTH@ 13
------------INS SimpleType@@Set @TO@ ParameterizedType@@Set<Approval> @AT@ 4293 @LENGTH@ 3
------------INS SimpleType@@Approval @TO@ ParameterizedType@@Set<Approval> @AT@ 4297 @LENGTH@ 8
---------INS VariableDeclarationFragment@@approvals=new HashSet<Approval>() @TO@ VariableDeclarationStatement@@Set<Approval> approvals=new HashSet<Approval>(); @AT@ 4307 @LENGTH@ 35
------------INS SimpleName@@approvals @TO@ VariableDeclarationFragment@@approvals=new HashSet<Approval>() @AT@ 4307 @LENGTH@ 9
------------INS ClassInstanceCreation@@HashSet<Approval>[] @TO@ VariableDeclarationFragment@@approvals=new HashSet<Approval>() @AT@ 4319 @LENGTH@ 23
---------------INS New@@new @TO@ ClassInstanceCreation@@HashSet<Approval>[] @AT@ 4319 @LENGTH@ 3
---------------INS ParameterizedType@@HashSet<Approval> @TO@ ClassInstanceCreation@@HashSet<Approval>[] @AT@ 4323 @LENGTH@ 17
------------------INS SimpleType@@HashSet @TO@ ParameterizedType@@HashSet<Approval> @AT@ 4323 @LENGTH@ 7
------------------INS SimpleType@@Approval @TO@ ParameterizedType@@HashSet<Approval> @AT@ 4331 @LENGTH@ 8
------INS VariableDeclarationStatement@@Date expiry=computeExpiry(); @TO@ Block@@ThenBody:{  authorizationRequest.setApproved(true);  return authorizationRequest;} @AT@ 4349 @LENGTH@ 30
---------INS SimpleType@@Date @TO@ VariableDeclarationStatement@@Date expiry=computeExpiry(); @AT@ 4349 @LENGTH@ 4
---------INS VariableDeclarationFragment@@expiry=computeExpiry() @TO@ VariableDeclarationStatement@@Date expiry=computeExpiry(); @AT@ 4354 @LENGTH@ 24
------------INS SimpleName@@expiry @TO@ VariableDeclarationFragment@@expiry=computeExpiry() @AT@ 4354 @LENGTH@ 6
------------INS MethodInvocation@@MethodName:computeExpiry:[] @TO@ VariableDeclarationFragment@@expiry=computeExpiry() @AT@ 4363 @LENGTH@ 15
------INS EnhancedForStatement@@for (String approvedScope : approvedScopes) {  approvals.add(new Approval(userAuthentication.getName(),authorizationRequest.getClientId(),approvedScope,expiry,ApprovalStatus.APPROVED));} @TO@ Block@@ThenBody:{  authorizationRequest.setApproved(true);  return authorizationRequest;} @AT@ 4385 @LENGTH@ 209
---------INS SingleVariableDeclaration@@String approvedScope @TO@ EnhancedForStatement@@for (String approvedScope : approvedScopes) {  approvals.add(new Approval(userAuthentication.getName(),authorizationRequest.getClientId(),approvedScope,expiry,ApprovalStatus.APPROVED));} @AT@ 4390 @LENGTH@ 20
------------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String approvedScope @AT@ 4390 @LENGTH@ 6
------------INS SimpleName@@approvedScope @TO@ SingleVariableDeclaration@@String approvedScope @AT@ 4397 @LENGTH@ 13
---------INS SimpleName@@approvedScopes @TO@ EnhancedForStatement@@for (String approvedScope : approvedScopes) {  approvals.add(new Approval(userAuthentication.getName(),authorizationRequest.getClientId(),approvedScope,expiry,ApprovalStatus.APPROVED));} @AT@ 4413 @LENGTH@ 14
---------INS ExpressionStatement@@MethodInvocation:approvals.add(new Approval(userAuthentication.getName(),authorizationRequest.getClientId(),approvedScope,expiry,ApprovalStatus.APPROVED)) @TO@ EnhancedForStatement@@for (String approvedScope : approvedScopes) {  approvals.add(new Approval(userAuthentication.getName(),authorizationRequest.getClientId(),approvedScope,expiry,ApprovalStatus.APPROVED));} @AT@ 4437 @LENGTH@ 150
------------INS MethodInvocation@@approvals.add(new Approval(userAuthentication.getName(),authorizationRequest.getClientId(),approvedScope,expiry,ApprovalStatus.APPROVED)) @TO@ ExpressionStatement@@MethodInvocation:approvals.add(new Approval(userAuthentication.getName(),authorizationRequest.getClientId(),approvedScope,expiry,ApprovalStatus.APPROVED)) @AT@ 4437 @LENGTH@ 149
---------------INS SimpleName@@Name:approvals @TO@ MethodInvocation@@approvals.add(new Approval(userAuthentication.getName(),authorizationRequest.getClientId(),approvedScope,expiry,ApprovalStatus.APPROVED)) @AT@ 4437 @LENGTH@ 9
---------------INS SimpleName@@MethodName:add:[new Approval(userAuthentication.getName(),authorizationRequest.getClientId(),approvedScope,expiry,ApprovalStatus.APPROVED)] @TO@ MethodInvocation@@approvals.add(new Approval(userAuthentication.getName(),authorizationRequest.getClientId(),approvedScope,expiry,ApprovalStatus.APPROVED)) @AT@ 4447 @LENGTH@ 139
------------------INS ClassInstanceCreation@@Approval[userAuthentication.getName(), authorizationRequest.getClientId(), approvedScope, expiry, ApprovalStatus.APPROVED] @TO@ SimpleName@@MethodName:add:[new Approval(userAuthentication.getName(),authorizationRequest.getClientId(),approvedScope,expiry,ApprovalStatus.APPROVED)] @AT@ 4451 @LENGTH@ 134
---------------------INS New@@new @TO@ ClassInstanceCreation@@Approval[userAuthentication.getName(), authorizationRequest.getClientId(), approvedScope, expiry, ApprovalStatus.APPROVED] @AT@ 4451 @LENGTH@ 3
---------------------INS SimpleType@@Approval @TO@ ClassInstanceCreation@@Approval[userAuthentication.getName(), authorizationRequest.getClientId(), approvedScope, expiry, ApprovalStatus.APPROVED] @AT@ 4455 @LENGTH@ 8
---------------------INS MethodInvocation@@userAuthentication.getName() @TO@ ClassInstanceCreation@@Approval[userAuthentication.getName(), authorizationRequest.getClientId(), approvedScope, expiry, ApprovalStatus.APPROVED] @AT@ 4464 @LENGTH@ 28
------------------------INS SimpleName@@Name:userAuthentication @TO@ MethodInvocation@@userAuthentication.getName() @AT@ 4464 @LENGTH@ 18
------------------------INS SimpleName@@MethodName:getName:[] @TO@ MethodInvocation@@userAuthentication.getName() @AT@ 4483 @LENGTH@ 9
---------------------INS MethodInvocation@@authorizationRequest.getClientId() @TO@ ClassInstanceCreation@@Approval[userAuthentication.getName(), authorizationRequest.getClientId(), approvedScope, expiry, ApprovalStatus.APPROVED] @AT@ 4494 @LENGTH@ 34
------------------------INS SimpleName@@Name:authorizationRequest @TO@ MethodInvocation@@authorizationRequest.getClientId() @AT@ 4494 @LENGTH@ 20
------------------------INS SimpleName@@MethodName:getClientId:[] @TO@ MethodInvocation@@authorizationRequest.getClientId() @AT@ 4515 @LENGTH@ 13
---------------------INS SimpleName@@approvedScope @TO@ ClassInstanceCreation@@Approval[userAuthentication.getName(), authorizationRequest.getClientId(), approvedScope, expiry, ApprovalStatus.APPROVED] @AT@ 4538 @LENGTH@ 13
---------------------INS SimpleName@@expiry @TO@ ClassInstanceCreation@@Approval[userAuthentication.getName(), authorizationRequest.getClientId(), approvedScope, expiry, ApprovalStatus.APPROVED] @AT@ 4553 @LENGTH@ 6
---------------------INS QualifiedName@@ApprovalStatus.APPROVED @TO@ ClassInstanceCreation@@Approval[userAuthentication.getName(), authorizationRequest.getClientId(), approvedScope, expiry, ApprovalStatus.APPROVED] @AT@ 4561 @LENGTH@ 23
------------------------INS SimpleName@@ApprovalStatus @TO@ QualifiedName@@ApprovalStatus.APPROVED @AT@ 4561 @LENGTH@ 14
------------------------INS SimpleName@@APPROVED @TO@ QualifiedName@@ApprovalStatus.APPROVED @AT@ 4576 @LENGTH@ 8
------INS ExpressionStatement@@MethodInvocation:approvalStore.addApprovals(approvals) @TO@ Block@@ThenBody:{  authorizationRequest.setApproved(true);  return authorizationRequest;} @AT@ 4600 @LENGTH@ 38
---------INS MethodInvocation@@approvalStore.addApprovals(approvals) @TO@ ExpressionStatement@@MethodInvocation:approvalStore.addApprovals(approvals) @AT@ 4600 @LENGTH@ 37
------------INS SimpleName@@Name:approvalStore @TO@ MethodInvocation@@approvalStore.addApprovals(approvals) @AT@ 4600 @LENGTH@ 13
------------INS SimpleName@@MethodName:addApprovals:[approvals] @TO@ MethodInvocation@@approvalStore.addApprovals(approvals) @AT@ 4614 @LENGTH@ 23
---------------INS SimpleName@@approvals @TO@ SimpleName@@MethodName:addApprovals:[approvals] @AT@ 4627 @LENGTH@ 9


UPD TypeDeclaration@@[@Configuration, @ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration"), @EnableConfigurationProperties(SqlComponentConfiguration.class), public]SqlComponentAutoConfiguration,  @TO@ [@Configuration, @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration"), @EnableConfigurationProperties(SqlComponentConfiguration.class), public]SqlComponentAutoConfiguration,  @AT@ 1616 @LENGTH@ 2030
---UPD NormalAnnotation@@@ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1631 @LENGTH@ 79
---UPD NormalAnnotation@@@AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1711 @LENGTH@ 80


UPD TypeDeclaration@@[@Configuration, @ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration"), public]JMXComponentAutoConfiguration,  @TO@ [@Configuration, @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration"), public]JMXComponentAutoConfiguration,  @AT@ 1435 @LENGTH@ 589
---UPD NormalAnnotation@@@ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1450 @LENGTH@ 79
---UPD NormalAnnotation@@@AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1530 @LENGTH@ 80


UPD VariableDeclarationStatement@@Document nearClause=DBObjectTestUtils.getAsDocument(dbObject,"$geoNear"); @TO@ Document nearClause=DocumentTestUtils.getAsDocument(document,"$geoNear"); @AT@ 1379 @LENGTH@ 76
---UPD VariableDeclarationFragment@@nearClause=DBObjectTestUtils.getAsDocument(dbObject,"$geoNear") @TO@ nearClause=DocumentTestUtils.getAsDocument(document,"$geoNear") @AT@ 1388 @LENGTH@ 66
------UPD MethodInvocation@@DBObjectTestUtils.getAsDocument(dbObject,"$geoNear") @TO@ DocumentTestUtils.getAsDocument(document,"$geoNear") @AT@ 1401 @LENGTH@ 53
---------UPD SimpleName@@Name:DBObjectTestUtils @TO@ Name:DocumentTestUtils @AT@ 1401 @LENGTH@ 17
---------UPD SimpleName@@MethodName:getAsDocument:[dbObject, "$geoNear"] @TO@ MethodName:getAsDocument:[document, "$geoNear"] @AT@ 1419 @LENGTH@ 35
------------UPD SimpleName@@dbObject @TO@ document @AT@ 1433 @LENGTH@ 8


UPD VariableDeclarationStatement@@int cmdResult=ctx.getDefaultCommandCompleter().complete(ctx,cmd,0,candidates); @TO@ int cmdResult=ctx.getDefaultCommandCompleter().complete(ctx,cmd,cmd.length(),candidates); @AT@ 3668 @LENGTH@ 83
---UPD VariableDeclarationFragment@@cmdResult=ctx.getDefaultCommandCompleter().complete(ctx,cmd,0,candidates) @TO@ cmdResult=ctx.getDefaultCommandCompleter().complete(ctx,cmd,cmd.length(),candidates) @AT@ 3672 @LENGTH@ 78
------UPD MethodInvocation@@ctx.getDefaultCommandCompleter().complete(ctx,cmd,0,candidates) @TO@ ctx.getDefaultCommandCompleter().complete(ctx,cmd,cmd.length(),candidates) @AT@ 3684 @LENGTH@ 66
---------UPD SimpleName@@MethodName:complete:[ctx, cmd, 0, candidates] @TO@ MethodName:complete:[ctx, cmd, cmd.length(), candidates] @AT@ 3717 @LENGTH@ 33
------------INS MethodInvocation@@cmd.length() @TO@ SimpleName@@MethodName:complete:[ctx, cmd, 0, candidates] @AT@ 3736 @LENGTH@ 12
---------------INS SimpleName@@Name:cmd @TO@ MethodInvocation@@cmd.length() @AT@ 3736 @LENGTH@ 3
---------------INS SimpleName@@MethodName:length:[] @TO@ MethodInvocation@@cmd.length() @AT@ 3740 @LENGTH@ 8
------------DEL NumberLiteral@@0 @AT@ 3736 @LENGTH@ 1


DEL FieldDeclaration@@private, Session, [session] @AT@ 1538 @LENGTH@ 24
---DEL Modifier@@private @AT@ 1538 @LENGTH@ 7
---DEL SimpleType@@Session @AT@ 1546 @LENGTH@ 7
---DEL VariableDeclarationFragment@@session @AT@ 1554 @LENGTH@ 7
------DEL SimpleName@@session @AT@ 1554 @LENGTH@ 7


DEL ExpressionStatement@@MethodInvocation:project.getExtensions().create("swarm",SwarmExtension.class) @AT@ 1273 @LENGTH@ 62
---DEL MethodInvocation@@project.getExtensions().create("swarm",SwarmExtension.class) @AT@ 1273 @LENGTH@ 61
------DEL MethodInvocation@@MethodName:getExtensions:[] @AT@ 1273 @LENGTH@ 23
------DEL SimpleName@@Name:project @AT@ 1273 @LENGTH@ 7
------DEL SimpleName@@MethodName:create:["swarm", SwarmExtension.class] @AT@ 1297 @LENGTH@ 37
---------DEL StringLiteral@@"swarm" @AT@ 1304 @LENGTH@ 7
---------DEL TypeLiteral@@SwarmExtension.class @AT@ 1313 @LENGTH@ 20


UPD TypeDeclaration@@[@Configuration, @ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration"), @EnableConfigurationProperties(LumberjackComponentConfiguration.class), public]LumberjackComponentAutoConfiguration,  @TO@ [@Configuration, @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration"), @EnableConfigurationProperties(LumberjackComponentConfiguration.class), public]LumberjackComponentAutoConfiguration,  @AT@ 1637 @LENGTH@ 2106
---UPD NormalAnnotation@@@ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1652 @LENGTH@ 79
---UPD NormalAnnotation@@@AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1732 @LENGTH@ 80


INS IfStatement@@if (!this.isHollow()) {  this.asset=asset;} @TO@ MethodDeclaration@@public, void, MethodName:setAsset, String asset,  @AT@ 4528 @LENGTH@ 65
---INS PrefixExpression@@!this.isHollow() @TO@ IfStatement@@if (!this.isHollow()) {  this.asset=asset;} @AT@ 4532 @LENGTH@ 16
------INS Operator@@! @TO@ PrefixExpression@@!this.isHollow() @AT@ 4532 @LENGTH@ 1
------INS MethodInvocation@@this.isHollow() @TO@ PrefixExpression@@!this.isHollow() @AT@ 4533 @LENGTH@ 15
---------INS ThisExpression@@this @TO@ MethodInvocation@@this.isHollow() @AT@ 4533 @LENGTH@ 4
---------INS SimpleName@@MethodName:isHollow:[] @TO@ MethodInvocation@@this.isHollow() @AT@ 4538 @LENGTH@ 10
---INS Block@@ThenBody:{  this.asset=asset;} @TO@ IfStatement@@if (!this.isHollow()) {  this.asset=asset;} @AT@ 4550 @LENGTH@ 43
------MOV ExpressionStatement@@Assignment:this.asset=asset @TO@ Block@@ThenBody:{  this.asset=asset;} @AT@ 4528 @LENGTH@ 19


UPD TypeDeclaration@@[@Configuration, @ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration"), public]ExecComponentAutoConfiguration,  @TO@ [@Configuration, @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration"), public]ExecComponentAutoConfiguration,  @AT@ 1438 @LENGTH@ 596
---UPD NormalAnnotation@@@ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1453 @LENGTH@ 79
---UPD NormalAnnotation@@@AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1533 @LENGTH@ 80


UPD VariableDeclarationStatement@@TableDesc tblDesc=operator.getTableDesc(); @TO@ TableDesc tblDesc=operator.getTableDescSkewJoin(); @AT@ 4754 @LENGTH@ 44
---UPD VariableDeclarationFragment@@tblDesc=operator.getTableDesc() @TO@ tblDesc=operator.getTableDescSkewJoin() @AT@ 4764 @LENGTH@ 33
------UPD MethodInvocation@@operator.getTableDesc() @TO@ operator.getTableDescSkewJoin() @AT@ 4774 @LENGTH@ 23
---------UPD SimpleName@@MethodName:getTableDesc:[] @TO@ MethodName:getTableDescSkewJoin:[] @AT@ 4783 @LENGTH@ 14


UPD MethodDeclaration@@public, void, MethodName:init,  @TO@ public, void, MethodName:clearDatabase,  @AT@ 1830 @LENGTH@ 59
---UPD SimpleName@@MethodName:init @TO@ MethodName:clearDatabase @AT@ 1842 @LENGTH@ 4
---UPD ExpressionStatement@@MethodInvocation:session.purgeDatabase() @TO@ MethodInvocation:graphDatabaseService.execute("MATCH (n) OPTIONAL MATCH (n)-[r]-() DELETE r, n") @AT@ 1859 @LENGTH@ 24
------UPD MethodInvocation@@session.purgeDatabase() @TO@ graphDatabaseService.execute("MATCH (n) OPTIONAL MATCH (n)-[r]-() DELETE r, n") @AT@ 1859 @LENGTH@ 23
---------UPD SimpleName@@Name:session @TO@ Name:graphDatabaseService @AT@ 1859 @LENGTH@ 7
---------UPD SimpleName@@MethodName:purgeDatabase:[] @TO@ MethodName:execute:["MATCH (n) OPTIONAL MATCH (n)-[r]-() DELETE r, n"] @AT@ 1867 @LENGTH@ 15
------------INS StringLiteral@@"MATCH (n) OPTIONAL MATCH (n)-[r]-() DELETE r, n" @TO@ SimpleName@@MethodName:purgeDatabase:[] @AT@ 1875 @LENGTH@ 49


INS MethodDeclaration@@public, static, void, MethodName:beforeClass,  @TO@ TypeDeclaration@@[@ContextConfiguration(classes={MoviesContext.class}), @RunWith(SpringJUnit4ClassRunner.class), @DirtiesContext, public]DerivedRelationshipEntityQueryIT, MultiDriverTestClass @AT@ 2244 @LENGTH@ 88
---INS Modifier@@public @TO@ MethodDeclaration@@public, static, void, MethodName:beforeClass,  @AT@ 2244 @LENGTH@ 6
---INS Modifier@@static @TO@ MethodDeclaration@@public, static, void, MethodName:beforeClass,  @AT@ 2251 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, static, void, MethodName:beforeClass,  @AT@ 2258 @LENGTH@ 4
---INS SimpleName@@MethodName:beforeClass @TO@ MethodDeclaration@@public, static, void, MethodName:beforeClass,  @AT@ 2263 @LENGTH@ 11
---INS ExpressionStatement@@Assignment:graphDatabaseService=getGraphDatabaseService() @TO@ MethodDeclaration@@public, static, void, MethodName:beforeClass,  @AT@ 2280 @LENGTH@ 49
------INS Assignment@@graphDatabaseService=getGraphDatabaseService() @TO@ ExpressionStatement@@Assignment:graphDatabaseService=getGraphDatabaseService() @AT@ 2280 @LENGTH@ 48
---------INS SimpleName@@graphDatabaseService @TO@ Assignment@@graphDatabaseService=getGraphDatabaseService() @AT@ 2280 @LENGTH@ 20
---------INS Operator@@= @TO@ Assignment@@graphDatabaseService=getGraphDatabaseService() @AT@ 2300 @LENGTH@ 1
---------INS MethodInvocation@@MethodName:getGraphDatabaseService:[] @TO@ Assignment@@graphDatabaseService=getGraphDatabaseService() @AT@ 2303 @LENGTH@ 25


INS IfStatement@@if (!fs.exists(path)) return null; @TO@ MethodDeclaration@@private, static, FileStatus[], MethodName:matchFilesOrDir, FileSystem fs, Path path, boolean isSourceMm, IOException,  @AT@ 3975 @LENGTH@ 34
---INS PrefixExpression@@!fs.exists(path) @TO@ IfStatement@@if (!fs.exists(path)) return null; @AT@ 3979 @LENGTH@ 16
------INS Operator@@! @TO@ PrefixExpression@@!fs.exists(path) @AT@ 3979 @LENGTH@ 1
------INS MethodInvocation@@fs.exists(path) @TO@ PrefixExpression@@!fs.exists(path) @AT@ 3980 @LENGTH@ 15
---------INS SimpleName@@Name:fs @TO@ MethodInvocation@@fs.exists(path) @AT@ 3980 @LENGTH@ 2
---------INS SimpleName@@MethodName:exists:[path] @TO@ MethodInvocation@@fs.exists(path) @AT@ 3983 @LENGTH@ 12
------------INS SimpleName@@path @TO@ SimpleName@@MethodName:exists:[path] @AT@ 3990 @LENGTH@ 4
---INS Block@@ThenBody:return null; @TO@ IfStatement@@if (!fs.exists(path)) return null; @AT@ 3997 @LENGTH@ 12
------INS ReturnStatement@@NullLiteral:null @TO@ Block@@ThenBody:return null; @AT@ 3997 @LENGTH@ 12
---------INS NullLiteral@@null @TO@ ReturnStatement@@NullLiteral:null @AT@ 4004 @LENGTH@ 4


UPD TypeDeclaration@@[@Configuration, @ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration"), @EnableConfigurationProperties(KafkaComponentConfiguration.class), public]KafkaComponentAutoConfiguration,  @TO@ [@Configuration, @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration"), @EnableConfigurationProperties(KafkaComponentConfiguration.class), public]KafkaComponentAutoConfiguration,  @AT@ 1622 @LENGTH@ 2048
---UPD NormalAnnotation@@@ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1637 @LENGTH@ 79
---UPD NormalAnnotation@@@AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1717 @LENGTH@ 80


DEL MethodDeclaration@@public, String, MethodName:getExchangeType,  @AT@ 3463 @LENGTH@ 51
---DEL Modifier@@public @AT@ 3463 @LENGTH@ 6
---DEL SimpleType@@String @AT@ 3470 @LENGTH@ 6
---DEL SimpleName@@MethodName:getExchangeType @AT@ 3477 @LENGTH@ 15
---DEL ReturnStatement@@NullLiteral:null @AT@ 3499 @LENGTH@ 12
------DEL NullLiteral@@null @AT@ 3506 @LENGTH@ 4


UPD TypeDeclaration@@[@Configuration, @ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration"), @EnableConfigurationProperties(XMLTokenizeLanguageConfiguration.class), public]XMLTokenizeLanguageAutoConfiguration,  @TO@ [@Configuration, @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration"), @EnableConfigurationProperties(XMLTokenizeLanguageConfiguration.class), public]XMLTokenizeLanguageAutoConfiguration,  @AT@ 1676 @LENGTH@ 1141
---UPD NormalAnnotation@@@ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1691 @LENGTH@ 79
---UPD NormalAnnotation@@@AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1771 @LENGTH@ 80


UPD ExpressionStatement@@MethodInvocation:defaults.keySet().forEach(key -> {
  Map<String,String> current=stage.getProperties();
  if (!current.keySet().contains(key))   current.put(key,defaults.get(key));
}
) @TO@ MethodInvocation:stages.stream().filter(stage -> !stage.getName().equals(DEFAULT)).forEach(stage -> {
  Map<String,String> current=stage.getProperties();
  Set<String> currentKeys=current.keySet();
  defaults.keySet().forEach(key -> {
    if (!currentKeys.contains(key))     current.put(key,defaults.get(key));
  }
);
}
) @AT@ 2449 @LENGTH@ 366


UPD Block@@ThenBody:{  mv.visitVarInsn(ALOAD,classVariableIndex4(entityClasses,setter.getDeclaringClass()));  mv.visitLdcInsn(setter.getName());  mv.visitInsn(ICONST_1);  mv.visitTypeInsn(ANEWARRAY,JAVA_LANG_CLASS);  mv.visitInsn(DUP);  mv.visitInsn(ICONST_0);  mv.visitLdcInsn(Type.getType(referenceName(Type.getInternalName(autoboxType(setter.getParameterTypes()[0])))));  mv.visitInsn(AASTORE);  mv.visitMethodInsn(INVOKEVIRTUAL,JAVA_LANG_CLASS,"getDeclaredMethod",String.format("(%s[%s)%s",referenceName(JAVA_LANG_STRING),referenceName(JAVA_LANG_CLASS),referenceName(JAVA_LANG_REFLECT_METHOD)),false);  mv.visitVarInsn(ASTORE,2);  mv.visitVarInsn(ALOAD,2);  mv.visitInsn(ICONST_1);  mv.visitMethodInsn(INVOKEVIRTUAL,JAVA_LANG_REFLECT_METHOD,SET_ACCESSIBLE,"(Z)V",false);  mv.visitVarInsn(ALOAD,0);  mv.visitVarInsn(ALOAD,2);  mv.visitMethodInsn(INVOKEVIRTUAL,JAVA_LANG_INVOKE_METHOD_HANDLES_LOOKUP,"unreflect",String.format("(%s)%s",referenceName(JAVA_LANG_REFLECT_METHOD),referenceName(JAVA_LANG_INVOKE_METHOD_HANDLE)),false);} @TO@ ThenBody:{  mv.visitVarInsn(ALOAD,classVariableIndex4(entityClasses,setter.getDeclaringClass()));  mv.visitLdcInsn(setter.getName());  mv.visitInsn(ICONST_1);  mv.visitTypeInsn(ANEWARRAY,JAVA_LANG_CLASS);  mv.visitInsn(DUP);  mv.visitInsn(ICONST_0);  Class<?> parameterType=setter.getParameterTypes()[0];  if (parameterType.isPrimitive()) {    mv.visitFieldInsn(GETSTATIC,Type.getInternalName(autoboxType(setter.getParameterTypes()[0])),"TYPE",referenceName(JAVA_LANG_CLASS));  } else {    mv.visitLdcInsn(Type.getType(referenceName(parameterType)));  }  mv.visitInsn(AASTORE);  mv.visitMethodInsn(INVOKEVIRTUAL,JAVA_LANG_CLASS,"getDeclaredMethod",String.format("(%s[%s)%s",referenceName(JAVA_LANG_STRING),referenceName(JAVA_LANG_CLASS),referenceName(JAVA_LANG_REFLECT_METHOD)),false);  mv.visitVarInsn(ASTORE,2);  mv.visitVarInsn(ALOAD,2);  mv.visitInsn(ICONST_1);  mv.visitMethodInsn(INVOKEVIRTUAL,JAVA_LANG_REFLECT_METHOD,SET_ACCESSIBLE,"(Z)V",false);  mv.visitVarInsn(ALOAD,0);  mv.visitVarInsn(ALOAD,2);  mv.visitMethodInsn(INVOKEVIRTUAL,JAVA_LANG_INVOKE_METHOD_HANDLES_LOOKUP,"unreflect",String.format("(%s)%s",referenceName(JAVA_LANG_REFLECT_METHOD),referenceName(JAVA_LANG_INVOKE_METHOD_HANDLE)),false);} @AT@ 23361 @LENGTH@ 1145
---UPD ExpressionStatement@@MethodInvocation:mv.visitLdcInsn(Type.getType(referenceName(Type.getInternalName(autoboxType(setter.getParameterTypes()[0]))))) @TO@ MethodInvocation:mv.visitFieldInsn(GETSTATIC,Type.getInternalName(autoboxType(setter.getParameterTypes()[0])),"TYPE",referenceName(JAVA_LANG_CLASS)) @AT@ 23629 @LENGTH@ 111
---INS VariableDeclarationStatement@@Class<?> parameterType=setter.getParameterTypes()[0]; @TO@ Block@@ThenBody:{  mv.visitVarInsn(ALOAD,classVariableIndex4(entityClasses,setter.getDeclaringClass()));  mv.visitLdcInsn(setter.getName());  mv.visitInsn(ICONST_1);  mv.visitTypeInsn(ANEWARRAY,JAVA_LANG_CLASS);  mv.visitInsn(DUP);  mv.visitInsn(ICONST_0);  mv.visitLdcInsn(Type.getType(referenceName(Type.getInternalName(autoboxType(setter.getParameterTypes()[0])))));  mv.visitInsn(AASTORE);  mv.visitMethodInsn(INVOKEVIRTUAL,JAVA_LANG_CLASS,"getDeclaredMethod",String.format("(%s[%s)%s",referenceName(JAVA_LANG_STRING),referenceName(JAVA_LANG_CLASS),referenceName(JAVA_LANG_REFLECT_METHOD)),false);  mv.visitVarInsn(ASTORE,2);  mv.visitVarInsn(ALOAD,2);  mv.visitInsn(ICONST_1);  mv.visitMethodInsn(INVOKEVIRTUAL,JAVA_LANG_REFLECT_METHOD,SET_ACCESSIBLE,"(Z)V",false);  mv.visitVarInsn(ALOAD,0);  mv.visitVarInsn(ALOAD,2);  mv.visitMethodInsn(INVOKEVIRTUAL,JAVA_LANG_INVOKE_METHOD_HANDLES_LOOKUP,"unreflect",String.format("(%s)%s",referenceName(JAVA_LANG_REFLECT_METHOD),referenceName(JAVA_LANG_INVOKE_METHOD_HANDLE)),false);} @AT@ 23682 @LENGTH@ 55
------INS ParameterizedType@@Class<?> @TO@ VariableDeclarationStatement@@Class<?> parameterType=setter.getParameterTypes()[0]; @AT@ 23682 @LENGTH@ 8
---------INS SimpleType@@Class @TO@ ParameterizedType@@Class<?> @AT@ 23682 @LENGTH@ 5
---------INS WildcardType@@? @TO@ ParameterizedType@@Class<?> @AT@ 23688 @LENGTH@ 1
------INS VariableDeclarationFragment@@parameterType=setter.getParameterTypes()[0] @TO@ VariableDeclarationStatement@@Class<?> parameterType=setter.getParameterTypes()[0]; @AT@ 23691 @LENGTH@ 45
---------INS SimpleName@@parameterType @TO@ VariableDeclarationFragment@@parameterType=setter.getParameterTypes()[0] @AT@ 23691 @LENGTH@ 13
---------INS ArrayAccess@@setter.getParameterTypes()[0] @TO@ VariableDeclarationFragment@@parameterType=setter.getParameterTypes()[0] @AT@ 23707 @LENGTH@ 29
------------INS MethodInvocation@@setter.getParameterTypes() @TO@ ArrayAccess@@setter.getParameterTypes()[0] @AT@ 23707 @LENGTH@ 26
---------------INS SimpleName@@Name:setter @TO@ MethodInvocation@@setter.getParameterTypes() @AT@ 23707 @LENGTH@ 6
---------------INS SimpleName@@MethodName:getParameterTypes:[] @TO@ MethodInvocation@@setter.getParameterTypes() @AT@ 23714 @LENGTH@ 19
------------INS NumberLiteral@@0 @TO@ ArrayAccess@@setter.getParameterTypes()[0] @AT@ 23734 @LENGTH@ 1
---INS IfStatement@@if (parameterType.isPrimitive()) {  mv.visitFieldInsn(GETSTATIC,Type.getInternalName(autoboxType(setter.getParameterTypes()[0])),"TYPE",referenceName(JAVA_LANG_CLASS));} else {  mv.visitLdcInsn(Type.getType(referenceName(parameterType)));} @TO@ Block@@ThenBody:{  mv.visitVarInsn(ALOAD,classVariableIndex4(entityClasses,setter.getDeclaringClass()));  mv.visitLdcInsn(setter.getName());  mv.visitInsn(ICONST_1);  mv.visitTypeInsn(ANEWARRAY,JAVA_LANG_CLASS);  mv.visitInsn(DUP);  mv.visitInsn(ICONST_0);  mv.visitLdcInsn(Type.getType(referenceName(Type.getInternalName(autoboxType(setter.getParameterTypes()[0])))));  mv.visitInsn(AASTORE);  mv.visitMethodInsn(INVOKEVIRTUAL,JAVA_LANG_CLASS,"getDeclaredMethod",String.format("(%s[%s)%s",referenceName(JAVA_LANG_STRING),referenceName(JAVA_LANG_CLASS),referenceName(JAVA_LANG_REFLECT_METHOD)),false);  mv.visitVarInsn(ASTORE,2);  mv.visitVarInsn(ALOAD,2);  mv.visitInsn(ICONST_1);  mv.visitMethodInsn(INVOKEVIRTUAL,JAVA_LANG_REFLECT_METHOD,SET_ACCESSIBLE,"(Z)V",false);  mv.visitVarInsn(ALOAD,0);  mv.visitVarInsn(ALOAD,2);  mv.visitMethodInsn(INVOKEVIRTUAL,JAVA_LANG_INVOKE_METHOD_HANDLES_LOOKUP,"unreflect",String.format("(%s)%s",referenceName(JAVA_LANG_REFLECT_METHOD),referenceName(JAVA_LANG_INVOKE_METHOD_HANDLE)),false);} @AT@ 23742 @LENGTH@ 268
------INS MethodInvocation@@parameterType.isPrimitive() @TO@ IfStatement@@if (parameterType.isPrimitive()) {  mv.visitFieldInsn(GETSTATIC,Type.getInternalName(autoboxType(setter.getParameterTypes()[0])),"TYPE",referenceName(JAVA_LANG_CLASS));} else {  mv.visitLdcInsn(Type.getType(referenceName(parameterType)));} @AT@ 23746 @LENGTH@ 27
---------INS SimpleName@@Name:parameterType @TO@ MethodInvocation@@parameterType.isPrimitive() @AT@ 23746 @LENGTH@ 13
---------INS SimpleName@@MethodName:isPrimitive:[] @TO@ MethodInvocation@@parameterType.isPrimitive() @AT@ 23760 @LENGTH@ 13
------INS Block@@ThenBody:{  mv.visitFieldInsn(GETSTATIC,Type.getInternalName(autoboxType(setter.getParameterTypes()[0])),"TYPE",referenceName(JAVA_LANG_CLASS));} @TO@ IfStatement@@if (parameterType.isPrimitive()) {  mv.visitFieldInsn(GETSTATIC,Type.getInternalName(autoboxType(setter.getParameterTypes()[0])),"TYPE",referenceName(JAVA_LANG_CLASS));} else {  mv.visitLdcInsn(Type.getType(referenceName(parameterType)));} @AT@ 23775 @LENGTH@ 156
---------MOV ExpressionStatement@@MethodInvocation:mv.visitLdcInsn(Type.getType(referenceName(Type.getInternalName(autoboxType(setter.getParameterTypes()[0]))))) @TO@ Block@@ThenBody:{  mv.visitFieldInsn(GETSTATIC,Type.getInternalName(autoboxType(setter.getParameterTypes()[0])),"TYPE",referenceName(JAVA_LANG_CLASS));} @AT@ 23629 @LENGTH@ 111
------------DEL MethodInvocation@@mv.visitLdcInsn(Type.getType(referenceName(Type.getInternalName(autoboxType(setter.getParameterTypes()[0]))))) @AT@ 23629 @LENGTH@ 110
---------------DEL SimpleName@@Name:mv @AT@ 23629 @LENGTH@ 2
---------------DEL SimpleName@@MethodName:visitLdcInsn:[Type.getType(referenceName(Type.getInternalName(autoboxType(setter.getParameterTypes()[0]))))] @AT@ 23632 @LENGTH@ 107
------------------DEL MethodInvocation@@Type.getType(referenceName(Type.getInternalName(autoboxType(setter.getParameterTypes()[0])))) @AT@ 23645 @LENGTH@ 93
---------------------DEL SimpleName@@Name:Type @AT@ 23645 @LENGTH@ 4
---------------------DEL SimpleName@@MethodName:getType:[referenceName(Type.getInternalName(autoboxType(setter.getParameterTypes()[0])))] @AT@ 23650 @LENGTH@ 88
------------MOV MethodInvocation@@referenceName(Type.getInternalName(autoboxType(setter.getParameterTypes()[0]))) @TO@ ExpressionStatement@@MethodInvocation:mv.visitLdcInsn(Type.getType(referenceName(Type.getInternalName(autoboxType(setter.getParameterTypes()[0]))))) @AT@ 23658 @LENGTH@ 79
---------------UPD SimpleName@@MethodName:referenceName:[Type.getInternalName(autoboxType(setter.getParameterTypes()[0]))] @TO@ MethodName:visitFieldInsn:[GETSTATIC, Type.getInternalName(autoboxType(setter.getParameterTypes()[0])), "TYPE", referenceName(JAVA_LANG_CLASS)] @AT@ 23658 @LENGTH@ 79
------------------INS SimpleName@@GETSTATIC @TO@ SimpleName@@MethodName:referenceName:[Type.getInternalName(autoboxType(setter.getParameterTypes()[0]))] @AT@ 23800 @LENGTH@ 9
------------------INS StringLiteral@@"TYPE" @TO@ SimpleName@@MethodName:referenceName:[Type.getInternalName(autoboxType(setter.getParameterTypes()[0]))] @AT@ 23877 @LENGTH@ 6
------------------INS MethodInvocation@@referenceName(JAVA_LANG_CLASS) @TO@ SimpleName@@MethodName:referenceName:[Type.getInternalName(autoboxType(setter.getParameterTypes()[0]))] @AT@ 23893 @LENGTH@ 30
---------------------INS SimpleName@@MethodName:referenceName:[JAVA_LANG_CLASS] @TO@ MethodInvocation@@referenceName(JAVA_LANG_CLASS) @AT@ 23893 @LENGTH@ 30
------------------------INS SimpleName@@JAVA_LANG_CLASS @TO@ SimpleName@@MethodName:referenceName:[JAVA_LANG_CLASS] @AT@ 23907 @LENGTH@ 15
---------------------INS SimpleName@@MethodName:referenceName:[JAVA_LANG_CLASS] @TO@ MethodInvocation@@referenceName(JAVA_LANG_CLASS) @AT@ 23893 @LENGTH@ 30
------------------------INS SimpleName@@JAVA_LANG_CLASS @TO@ SimpleName@@MethodName:referenceName:[JAVA_LANG_CLASS] @AT@ 23907 @LENGTH@ 15
---------------------INS SimpleName@@MethodName:referenceName:[JAVA_LANG_CLASS] @TO@ MethodInvocation@@referenceName(JAVA_LANG_CLASS) @AT@ 23893 @LENGTH@ 30
------------------------INS SimpleName@@JAVA_LANG_CLASS @TO@ SimpleName@@MethodName:referenceName:[JAVA_LANG_CLASS] @AT@ 23907 @LENGTH@ 15
---------------INS SimpleName@@Name:mv @TO@ MethodInvocation@@referenceName(Type.getInternalName(autoboxType(setter.getParameterTypes()[0]))) @AT@ 23782 @LENGTH@ 2
------INS Block@@ElseBody:{  mv.visitLdcInsn(Type.getType(referenceName(parameterType)));} @TO@ IfStatement@@if (parameterType.isPrimitive()) {  mv.visitFieldInsn(GETSTATIC,Type.getInternalName(autoboxType(setter.getParameterTypes()[0])),"TYPE",referenceName(JAVA_LANG_CLASS));} else {  mv.visitLdcInsn(Type.getType(referenceName(parameterType)));} @AT@ 23937 @LENGTH@ 73
---------INS ExpressionStatement@@MethodInvocation:mv.visitLdcInsn(Type.getType(referenceName(parameterType))) @TO@ Block@@ElseBody:{  mv.visitLdcInsn(Type.getType(referenceName(parameterType)));} @AT@ 23944 @LENGTH@ 60
------------INS MethodInvocation@@mv.visitLdcInsn(Type.getType(referenceName(parameterType))) @TO@ ExpressionStatement@@MethodInvocation:mv.visitLdcInsn(Type.getType(referenceName(parameterType))) @AT@ 23944 @LENGTH@ 59
---------------INS SimpleName@@Name:mv @TO@ MethodInvocation@@mv.visitLdcInsn(Type.getType(referenceName(parameterType))) @AT@ 23944 @LENGTH@ 2
---------------INS SimpleName@@MethodName:visitLdcInsn:[Type.getType(referenceName(parameterType))] @TO@ MethodInvocation@@mv.visitLdcInsn(Type.getType(referenceName(parameterType))) @AT@ 23947 @LENGTH@ 56
------------------INS MethodInvocation@@Type.getType(referenceName(parameterType)) @TO@ SimpleName@@MethodName:visitLdcInsn:[Type.getType(referenceName(parameterType))] @AT@ 23960 @LENGTH@ 42
---------------------INS SimpleName@@Name:Type @TO@ MethodInvocation@@Type.getType(referenceName(parameterType)) @AT@ 23960 @LENGTH@ 4
---------------------INS SimpleName@@MethodName:getType:[referenceName(parameterType)] @TO@ MethodInvocation@@Type.getType(referenceName(parameterType)) @AT@ 23965 @LENGTH@ 37
------------------------INS MethodInvocation@@referenceName(parameterType) @TO@ SimpleName@@MethodName:getType:[referenceName(parameterType)] @AT@ 23973 @LENGTH@ 28
---------------------------INS SimpleName@@MethodName:referenceName:[parameterType] @TO@ MethodInvocation@@referenceName(parameterType) @AT@ 23973 @LENGTH@ 28
------------------------------INS SimpleName@@parameterType @TO@ SimpleName@@MethodName:referenceName:[parameterType] @AT@ 23987 @LENGTH@ 13


INS ExpressionStatement@@MethodInvocation:neo4jOperations.clear() @TO@ MethodDeclaration@@public, void, MethodName:clearDatabase,  @AT@ 2410 @LENGTH@ 24
---INS MethodInvocation@@neo4jOperations.clear() @TO@ ExpressionStatement@@MethodInvocation:neo4jOperations.clear() @AT@ 2410 @LENGTH@ 23
------INS SimpleName@@Name:neo4jOperations @TO@ MethodInvocation@@neo4jOperations.clear() @AT@ 2410 @LENGTH@ 15
------INS SimpleName@@MethodName:clear:[] @TO@ MethodInvocation@@neo4jOperations.clear() @AT@ 2426 @LENGTH@ 7


UPD TypeDeclaration@@[@Configuration, @ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration"), public]IronMQComponentAutoConfiguration,  @TO@ [@Configuration, @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration"), public]IronMQComponentAutoConfiguration,  @AT@ 1444 @LENGTH@ 610
---UPD NormalAnnotation@@@ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1459 @LENGTH@ 79
---UPD NormalAnnotation@@@AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1539 @LENGTH@ 80


UPD IfStatement@@if (!defaultSupported) {  Assert.assertNull(bl.findLocalDriver(connectionString));} else {  Assert.assertEquals(bl.findLocalDriver(connectionString).getClass().getName(),driverClazzName);} @TO@ if (!defaultSupported) {  Assert.assertNull(bl.findLocalDriver(connectionString));} else {  Assert.assertNotNull(bl.findLocalDriver(connectionString));  Assert.assertEquals(bl.findLocalDriver(connectionString).getClass().getName(),driverClazzName);} @AT@ 10238 @LENGTH@ 276
---UPD Block@@ElseBody:{  Assert.assertEquals(bl.findLocalDriver(connectionString).getClass().getName(),driverClazzName);} @TO@ ElseBody:{  Assert.assertNotNull(bl.findLocalDriver(connectionString));  Assert.assertEquals(bl.findLocalDriver(connectionString).getClass().getName(),driverClazzName);} @AT@ 10337 @LENGTH@ 177
------INS ExpressionStatement@@MethodInvocation:Assert.assertNotNull(bl.findLocalDriver(connectionString)) @TO@ Block@@ElseBody:{  Assert.assertEquals(bl.findLocalDriver(connectionString).getClass().getName(),driverClazzName);} @AT@ 10412 @LENGTH@ 59
---------INS MethodInvocation@@Assert.assertNotNull(bl.findLocalDriver(connectionString)) @TO@ ExpressionStatement@@MethodInvocation:Assert.assertNotNull(bl.findLocalDriver(connectionString)) @AT@ 10412 @LENGTH@ 58
------------INS SimpleName@@Name:Assert @TO@ MethodInvocation@@Assert.assertNotNull(bl.findLocalDriver(connectionString)) @AT@ 10412 @LENGTH@ 6
------------INS SimpleName@@MethodName:assertNotNull:[bl.findLocalDriver(connectionString)] @TO@ MethodInvocation@@Assert.assertNotNull(bl.findLocalDriver(connectionString)) @AT@ 10419 @LENGTH@ 51
---------------INS MethodInvocation@@bl.findLocalDriver(connectionString) @TO@ SimpleName@@MethodName:assertNotNull:[bl.findLocalDriver(connectionString)] @AT@ 10433 @LENGTH@ 36
------------------INS SimpleName@@Name:bl @TO@ MethodInvocation@@bl.findLocalDriver(connectionString) @AT@ 10433 @LENGTH@ 2
------------------INS SimpleName@@MethodName:findLocalDriver:[connectionString] @TO@ MethodInvocation@@bl.findLocalDriver(connectionString) @AT@ 10436 @LENGTH@ 33
---------------------INS SimpleName@@connectionString @TO@ SimpleName@@MethodName:findLocalDriver:[connectionString] @AT@ 10452 @LENGTH@ 16


UPD MethodDeclaration@@public, boolean, MethodName:isMmTable,  @TO@ public, Boolean, MethodName:isMmTable,  @AT@ 5407 @LENGTH@ 62
---DEL PrimitiveType@@boolean @AT@ 5414 @LENGTH@ 7
---INS SimpleType@@Boolean @TO@ MethodDeclaration@@public, boolean, MethodName:isMmTable,  @AT@ 5414 @LENGTH@ 7
---UPD ReturnStatement@@InfixExpression:mmWriteId != null @TO@ ConditionalExpression:mmWriteId != null ? true : null @AT@ 5440 @LENGTH@ 25
------INS ConditionalExpression@@mmWriteId != null ? true : null @TO@ ReturnStatement@@InfixExpression:mmWriteId != null @AT@ 5447 @LENGTH@ 30
---------INS InfixExpression@@mmWriteId != null @TO@ ConditionalExpression@@mmWriteId != null ? true : null @AT@ 5447 @LENGTH@ 17
------------MOV SimpleName@@mmWriteId @TO@ InfixExpression@@mmWriteId != null @AT@ 5447 @LENGTH@ 9
------------MOV Operator@@!= @TO@ InfixExpression@@mmWriteId != null @AT@ 5456 @LENGTH@ 2
------------MOV NullLiteral@@null @TO@ InfixExpression@@mmWriteId != null @AT@ 5460 @LENGTH@ 4
---------INS BooleanLiteral@@true @TO@ ConditionalExpression@@mmWriteId != null ? true : null @AT@ 5466 @LENGTH@ 4
---------INS NullLiteral@@null @TO@ ConditionalExpression@@mmWriteId != null ? true : null @AT@ 5473 @LENGTH@ 4
------DEL InfixExpression@@mmWriteId != null @AT@ 5447 @LENGTH@ 17


INS VariableDeclarationStatement@@Long expire; @TO@ MethodDeclaration@@public, Long, MethodName:doInRedis, RedisConnection connection,  @AT@ 24154 @LENGTH@ 12
---INS SimpleType@@Long @TO@ VariableDeclarationStatement@@Long expire; @AT@ 24154 @LENGTH@ 4
---INS VariableDeclarationFragment@@expire @TO@ VariableDeclarationStatement@@Long expire; @AT@ 24159 @LENGTH@ 6
------INS SimpleName@@expire @TO@ VariableDeclarationFragment@@expire @AT@ 24159 @LENGTH@ 6


UPD MethodDeclaration@@public, static, ObjectCache, MethodName:getCache, Configuration conf, String queryId,  @TO@ public, static, ObjectCache, MethodName:getCache, Configuration conf, String queryId, boolean isPlanCache,  @AT@ 1662 @LENGTH@ 890
---INS SingleVariableDeclaration@@boolean isPlanCache @TO@ MethodDeclaration@@public, static, ObjectCache, MethodName:getCache, Configuration conf, String queryId,  @AT@ 1733 @LENGTH@ 19
------INS PrimitiveType@@boolean @TO@ SingleVariableDeclaration@@boolean isPlanCache @AT@ 1733 @LENGTH@ 7
------INS SimpleName@@isPlanCache @TO@ SingleVariableDeclaration@@boolean isPlanCache @AT@ 1741 @LENGTH@ 11
---UPD IfStatement@@if (HiveConf.getVar(conf,HiveConf.ConfVars.HIVE_EXECUTION_ENGINE).equals("tez")) {  if (LlapProxy.isDaemon()) {    if (HiveConf.getBoolVar(conf,HiveConf.ConfVars.LLAP_OBJECT_CACHE_ENABLED)) {      return getLlapObjectCache(queryId);    } else {      return new ObjectCacheWrapper(new org.apache.hadoop.hive.ql.exec.mr.ObjectCache(),queryId);    }  } else {    return new ObjectCacheWrapper(new org.apache.hadoop.hive.ql.exec.tez.ObjectCache(),queryId);  }} else {  return new ObjectCacheWrapper(new org.apache.hadoop.hive.ql.exec.mr.ObjectCache(),queryId);} @TO@ if (HiveConf.getVar(conf,HiveConf.ConfVars.HIVE_EXECUTION_ENGINE).equals("tez")) {  if (LlapProxy.isDaemon()) {    if (HiveConf.getBoolVar(conf,HiveConf.ConfVars.LLAP_OBJECT_CACHE_ENABLED) && !isPlanCache) {      return getLlapObjectCache(queryId);    } else {      return new ObjectCacheWrapper(new org.apache.hadoop.hive.ql.exec.mr.ObjectCache(),queryId);    }  } else {    return new ObjectCacheWrapper(new org.apache.hadoop.hive.ql.exec.tez.ObjectCache(),queryId);  }} else {  return new ObjectCacheWrapper(new org.apache.hadoop.hive.ql.exec.mr.ObjectCache(),queryId);} @AT@ 1739 @LENGTH@ 809
------UPD Block@@ThenBody:{  if (LlapProxy.isDaemon()) {    if (HiveConf.getBoolVar(conf,HiveConf.ConfVars.LLAP_OBJECT_CACHE_ENABLED)) {      return getLlapObjectCache(queryId);    } else {      return new ObjectCacheWrapper(new org.apache.hadoop.hive.ql.exec.mr.ObjectCache(),queryId);    }  } else {    return new ObjectCacheWrapper(new org.apache.hadoop.hive.ql.exec.tez.ObjectCache(),queryId);  }} @TO@ ThenBody:{  if (LlapProxy.isDaemon()) {    if (HiveConf.getBoolVar(conf,HiveConf.ConfVars.LLAP_OBJECT_CACHE_ENABLED) && !isPlanCache) {      return getLlapObjectCache(queryId);    } else {      return new ObjectCacheWrapper(new org.apache.hadoop.hive.ql.exec.mr.ObjectCache(),queryId);    }  } else {    return new ObjectCacheWrapper(new org.apache.hadoop.hive.ql.exec.tez.ObjectCache(),queryId);  }} @AT@ 1821 @LENGTH@ 588
---------UPD IfStatement@@if (LlapProxy.isDaemon()) {  if (HiveConf.getBoolVar(conf,HiveConf.ConfVars.LLAP_OBJECT_CACHE_ENABLED)) {    return getLlapObjectCache(queryId);  } else {    return new ObjectCacheWrapper(new org.apache.hadoop.hive.ql.exec.mr.ObjectCache(),queryId);  }} else {  return new ObjectCacheWrapper(new org.apache.hadoop.hive.ql.exec.tez.ObjectCache(),queryId);} @TO@ if (LlapProxy.isDaemon()) {  if (HiveConf.getBoolVar(conf,HiveConf.ConfVars.LLAP_OBJECT_CACHE_ENABLED) && !isPlanCache) {    return getLlapObjectCache(queryId);  } else {    return new ObjectCacheWrapper(new org.apache.hadoop.hive.ql.exec.mr.ObjectCache(),queryId);  }} else {  return new ObjectCacheWrapper(new org.apache.hadoop.hive.ql.exec.tez.ObjectCache(),queryId);} @AT@ 1829 @LENGTH@ 574
------------UPD Block@@ThenBody:{  if (HiveConf.getBoolVar(conf,HiveConf.ConfVars.LLAP_OBJECT_CACHE_ENABLED)) {    return getLlapObjectCache(queryId);  } else {    return new ObjectCacheWrapper(new org.apache.hadoop.hive.ql.exec.mr.ObjectCache(),queryId);  }} @TO@ ThenBody:{  if (HiveConf.getBoolVar(conf,HiveConf.ConfVars.LLAP_OBJECT_CACHE_ENABLED) && !isPlanCache) {    return getLlapObjectCache(queryId);  } else {    return new ObjectCacheWrapper(new org.apache.hadoop.hive.ql.exec.mr.ObjectCache(),queryId);  }} @AT@ 1855 @LENGTH@ 405
---------------UPD IfStatement@@if (HiveConf.getBoolVar(conf,HiveConf.ConfVars.LLAP_OBJECT_CACHE_ENABLED)) {  return getLlapObjectCache(queryId);} else {  return new ObjectCacheWrapper(new org.apache.hadoop.hive.ql.exec.mr.ObjectCache(),queryId);} @TO@ if (HiveConf.getBoolVar(conf,HiveConf.ConfVars.LLAP_OBJECT_CACHE_ENABLED) && !isPlanCache) {  return getLlapObjectCache(queryId);} else {  return new ObjectCacheWrapper(new org.apache.hadoop.hive.ql.exec.mr.ObjectCache(),queryId);} @AT@ 1875 @LENGTH@ 377
------------------INS InfixExpression@@HiveConf.getBoolVar(conf,HiveConf.ConfVars.LLAP_OBJECT_CACHE_ENABLED) && !isPlanCache @TO@ IfStatement@@if (HiveConf.getBoolVar(conf,HiveConf.ConfVars.LLAP_OBJECT_CACHE_ENABLED)) {  return getLlapObjectCache(queryId);} else {  return new ObjectCacheWrapper(new org.apache.hadoop.hive.ql.exec.mr.ObjectCache(),queryId);} @AT@ 1900 @LENGTH@ 98
---------------------MOV MethodInvocation@@HiveConf.getBoolVar(conf,HiveConf.ConfVars.LLAP_OBJECT_CACHE_ENABLED) @TO@ InfixExpression@@HiveConf.getBoolVar(conf,HiveConf.ConfVars.LLAP_OBJECT_CACHE_ENABLED) && !isPlanCache @AT@ 1879 @LENGTH@ 70
---------------------INS Operator@@&& @TO@ InfixExpression@@HiveConf.getBoolVar(conf,HiveConf.ConfVars.LLAP_OBJECT_CACHE_ENABLED) && !isPlanCache @AT@ 1970 @LENGTH@ 2
---------------------INS PrefixExpression@@!isPlanCache @TO@ InfixExpression@@HiveConf.getBoolVar(conf,HiveConf.ConfVars.LLAP_OBJECT_CACHE_ENABLED) && !isPlanCache @AT@ 1986 @LENGTH@ 12
------------------------INS Operator@@! @TO@ PrefixExpression@@!isPlanCache @AT@ 1986 @LENGTH@ 1
------------------------INS SimpleName@@isPlanCache @TO@ PrefixExpression@@!isPlanCache @AT@ 1987 @LENGTH@ 11


UPD MethodDeclaration@@public, void, MethodName:limitShouldNotBePresentInDboWhenNotSet,  @TO@ public, void, MethodName:limitShouldNotBePresentInDocumentWhenNotSet,  @AT@ 1319 @LENGTH@ 153
---UPD SimpleName@@MethodName:limitShouldNotBePresentInDboWhenNotSet @TO@ MethodName:limitShouldNotBePresentInDocumentWhenNotSet @AT@ 1331 @LENGTH@ 38


UPD TypeDeclaration@@[@Configuration, @ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration"), @EnableConfigurationProperties(ZipDataFormatConfiguration.class), public]ZipDataFormatAutoConfiguration,  @TO@ [@Configuration, @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration"), @EnableConfigurationProperties(ZipDataFormatConfiguration.class), public]ZipDataFormatAutoConfiguration,  @AT@ 1642 @LENGTH@ 1086
---UPD NormalAnnotation@@@ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1657 @LENGTH@ 79
---UPD NormalAnnotation@@@AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1737 @LENGTH@ 80


INS FieldDeclaration@@InitialContext, [context] @TO@ TypeDeclaration@@[@RunWith(Arquillian.class), public]PostgreSQLJPAArquillianTest,  @AT@ 1860 @LENGTH@ 23
---INS SimpleType@@InitialContext @TO@ FieldDeclaration@@InitialContext, [context] @AT@ 1860 @LENGTH@ 14
---INS VariableDeclarationFragment@@context @TO@ FieldDeclaration@@InitialContext, [context] @AT@ 1875 @LENGTH@ 7
------INS SimpleName@@context @TO@ VariableDeclarationFragment@@context @AT@ 1875 @LENGTH@ 7


UPD TypeDeclaration@@[@Configuration, @ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration"), @EnableConfigurationProperties(EventComponentConfiguration.class), public]EventComponentAutoConfiguration,  @TO@ [@Configuration, @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration"), @EnableConfigurationProperties(EventComponentConfiguration.class), public]EventComponentAutoConfiguration,  @AT@ 1622 @LENGTH@ 2055
---UPD NormalAnnotation@@@ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1637 @LENGTH@ 79
---UPD NormalAnnotation@@@AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1717 @LENGTH@ 80


UPD WhileStatement@@while (bootstraps.hasMoreElements()) {  URL each=bootstraps.nextElement();  try (BufferedReader reader=new BufferedReader(new InputStreamReader(each.openStream()))){    String line;    while ((line=reader.readLine()) != null) {      line=line.trim();      if (line.isEmpty()) {        continue;      }      Module module=Module.getBootModuleLoader().loadModule(ModuleIdentifier.create(line,"runtime"));      List<Class<? extends ServerConfiguration>> serverConfigs=findServerConfigurationImpls(module,indexes);      for (      Class<? extends ServerConfiguration> cls : serverConfigs) {        if (!this.configList.stream().anyMatch((e) -> e.getClass().equals(cls))) {          ServerConfiguration serverConfig=cls.newInstance();          this.configByFractionType.put(serverConfig.getType(),serverConfig);          this.configList.add(serverConfig);        }      }      try {        module=Module.getBootModuleLoader().loadModule(ModuleIdentifier.create(line,"api"));      } catch (      ModuleLoadException e) {        module=Module.getBootModuleLoader().loadModule(ModuleIdentifier.create(line,"runtime"));      }      List<ServerConfiguration> serverConfigInstances=findAnnotationServerConfigurations(module,indexes);      for (      ServerConfiguration serverConfigInstance : serverConfigInstances) {        if (!this.configList.stream().anyMatch((e) -> e.getType().equals(serverConfigInstance.getType()))) {          this.configByFractionType.put(serverConfigInstance.getType(),serverConfigInstance);          this.configList.add(serverConfigInstance);        }      }    }  } } @TO@ while (bootstraps.hasMoreElements()) {  URL each=bootstraps.nextElement();  System.out.println(each);  try (BufferedReader reader=new BufferedReader(new InputStreamReader(each.openStream()))){    String line;    while ((line=reader.readLine()) != null) {      line=line.trim();      if (line.isEmpty()) {        continue;      }      Module module=Module.getBootModuleLoader().loadModule(ModuleIdentifier.create(line,"runtime"));      List<Class<? extends ServerConfiguration>> serverConfigs=findServerConfigurationImpls(module,indexes);      for (      Class<? extends ServerConfiguration> cls : serverConfigs) {        if (!this.configList.stream().anyMatch((e) -> e.getClass().equals(cls))) {          ServerConfiguration serverConfig=cls.newInstance();          this.configByFractionType.put(serverConfig.getType(),serverConfig);          this.configList.add(serverConfig);        }      }      try {        module=Module.getBootModuleLoader().loadModule(ModuleIdentifier.create(line,"api"));      } catch (      ModuleLoadException e) {        module=Module.getBootModuleLoader().loadModule(ModuleIdentifier.create(line,"runtime"));      }      List<ServerConfiguration> serverConfigInstances=findAnnotationServerConfigurations(module,indexes);      for (      ServerConfiguration serverConfigInstance : serverConfigInstances) {        if (!this.configList.stream().anyMatch((e) -> e.getType().equals(serverConfigInstance.getType()))) {          this.configByFractionType.put(serverConfigInstance.getType(),serverConfigInstance);          this.configList.add(serverConfigInstance);        }      }    }  } } @AT@ 18271 @LENGTH@ 2157
---UPD Block@@WhileBody:{  URL each=bootstraps.nextElement();  try (BufferedReader reader=new BufferedReader(new InputStreamReader(each.openStream()))){    String line;    while ((line=reader.readLine()) != null) {      line=line.trim();      if (line.isEmpty()) {        continue;      }      Module module=Module.getBootModuleLoader().loadModule(ModuleIdentifier.create(line,"runtime"));      List<Class<? extends ServerConfiguration>> serverConfigs=findServerConfigurationImpls(module,indexes);      for (      Class<? extends ServerConfiguration> cls : serverConfigs) {        if (!this.configList.stream().anyMatch((e) -> e.getClass().equals(cls))) {          ServerConfiguration serverConfig=cls.newInstance();          this.configByFractionType.put(serverConfig.getType(),serverConfig);          this.configList.add(serverConfig);        }      }      try {        module=Module.getBootModuleLoader().loadModule(ModuleIdentifier.create(line,"api"));      } catch (      ModuleLoadException e) {        module=Module.getBootModuleLoader().loadModule(ModuleIdentifier.create(line,"runtime"));      }      List<ServerConfiguration> serverConfigInstances=findAnnotationServerConfigurations(module,indexes);      for (      ServerConfiguration serverConfigInstance : serverConfigInstances) {        if (!this.configList.stream().anyMatch((e) -> e.getType().equals(serverConfigInstance.getType()))) {          this.configByFractionType.put(serverConfigInstance.getType(),serverConfigInstance);          this.configList.add(serverConfigInstance);        }      }    }  } } @TO@ WhileBody:{  URL each=bootstraps.nextElement();  System.out.println(each);  try (BufferedReader reader=new BufferedReader(new InputStreamReader(each.openStream()))){    String line;    while ((line=reader.readLine()) != null) {      line=line.trim();      if (line.isEmpty()) {        continue;      }      Module module=Module.getBootModuleLoader().loadModule(ModuleIdentifier.create(line,"runtime"));      List<Class<? extends ServerConfiguration>> serverConfigs=findServerConfigurationImpls(module,indexes);      for (      Class<? extends ServerConfiguration> cls : serverConfigs) {        if (!this.configList.stream().anyMatch((e) -> e.getClass().equals(cls))) {          ServerConfiguration serverConfig=cls.newInstance();          this.configByFractionType.put(serverConfig.getType(),serverConfig);          this.configList.add(serverConfig);        }      }      try {        module=Module.getBootModuleLoader().loadModule(ModuleIdentifier.create(line,"api"));      } catch (      ModuleLoadException e) {        module=Module.getBootModuleLoader().loadModule(ModuleIdentifier.create(line,"runtime"));      }      List<ServerConfiguration> serverConfigInstances=findAnnotationServerConfigurations(module,indexes);      for (      ServerConfiguration serverConfigInstance : serverConfigInstances) {        if (!this.configList.stream().anyMatch((e) -> e.getType().equals(serverConfigInstance.getType()))) {          this.configByFractionType.put(serverConfigInstance.getType(),serverConfigInstance);          this.configList.add(serverConfigInstance);        }      }    }  } } @AT@ 18308 @LENGTH@ 2120
------INS ExpressionStatement@@MethodInvocation:System.out.println(each) @TO@ Block@@WhileBody:{  URL each=bootstraps.nextElement();  try (BufferedReader reader=new BufferedReader(new InputStreamReader(each.openStream()))){    String line;    while ((line=reader.readLine()) != null) {      line=line.trim();      if (line.isEmpty()) {        continue;      }      Module module=Module.getBootModuleLoader().loadModule(ModuleIdentifier.create(line,"runtime"));      List<Class<? extends ServerConfiguration>> serverConfigs=findServerConfigurationImpls(module,indexes);      for (      Class<? extends ServerConfiguration> cls : serverConfigs) {        if (!this.configList.stream().anyMatch((e) -> e.getClass().equals(cls))) {          ServerConfiguration serverConfig=cls.newInstance();          this.configByFractionType.put(serverConfig.getType(),serverConfig);          this.configList.add(serverConfig);        }      }      try {        module=Module.getBootModuleLoader().loadModule(ModuleIdentifier.create(line,"api"));      } catch (      ModuleLoadException e) {        module=Module.getBootModuleLoader().loadModule(ModuleIdentifier.create(line,"runtime"));      }      List<ServerConfiguration> serverConfigInstances=findAnnotationServerConfigurations(module,indexes);      for (      ServerConfiguration serverConfigInstance : serverConfigInstances) {        if (!this.configList.stream().anyMatch((e) -> e.getType().equals(serverConfigInstance.getType()))) {          this.configByFractionType.put(serverConfigInstance.getType(),serverConfigInstance);          this.configList.add(serverConfigInstance);        }      }    }  } } @AT@ 18371 @LENGTH@ 25
---------INS MethodInvocation@@System.out.println(each) @TO@ ExpressionStatement@@MethodInvocation:System.out.println(each) @AT@ 18371 @LENGTH@ 24
------------INS QualifiedName@@Name:System.out @TO@ MethodInvocation@@System.out.println(each) @AT@ 18371 @LENGTH@ 10
------------INS SimpleName@@MethodName:println:[each] @TO@ MethodInvocation@@System.out.println(each) @AT@ 18382 @LENGTH@ 13
---------------INS SimpleName@@each @TO@ SimpleName@@MethodName:println:[each] @AT@ 18390 @LENGTH@ 4


UPD ForStatement@@for (c=str.codePointAt(i); i < str.length(); i=str.offsetByCodePoints(i,1)) {  validatePrintableByte(c);} @TO@ for (int i=0; i < str.length(); i=str.offsetByCodePoints(i,1)) {  validatePrintableByte(str.codePointAt(i));} @AT@ 8210 @LENGTH@ 130
---INS VariableDeclarationExpression@@int i=0 @TO@ ForStatement@@for (c=str.codePointAt(i); i < str.length(); i=str.offsetByCodePoints(i,1)) {  validatePrintableByte(c);} @AT@ 8193 @LENGTH@ 9
------INS PrimitiveType@@int @TO@ VariableDeclarationExpression@@int i=0 @AT@ 8193 @LENGTH@ 3
------INS VariableDeclarationFragment@@i=0 @TO@ VariableDeclarationExpression@@int i=0 @AT@ 8197 @LENGTH@ 5
---------INS SimpleName@@i @TO@ VariableDeclarationFragment@@i=0 @AT@ 8197 @LENGTH@ 1
---------INS NumberLiteral@@0 @TO@ VariableDeclarationFragment@@i=0 @AT@ 8201 @LENGTH@ 1
---DEL Assignment@@c=str.codePointAt(i) @AT@ 8215 @LENGTH@ 22
------DEL SimpleName@@c @AT@ 8215 @LENGTH@ 1
------DEL Operator@@= @AT@ 8216 @LENGTH@ 1
---UPD ExpressionStatement@@MethodInvocation:validatePrintableByte(c) @TO@ MethodInvocation:validatePrintableByte(str.codePointAt(i)) @AT@ 8305 @LENGTH@ 25
------UPD MethodInvocation@@validatePrintableByte(c) @TO@ validatePrintableByte(str.codePointAt(i)) @AT@ 8305 @LENGTH@ 24
---------UPD SimpleName@@MethodName:validatePrintableByte:[c] @TO@ MethodName:validatePrintableByte:[str.codePointAt(i)] @AT@ 8305 @LENGTH@ 24
------------MOV MethodInvocation@@str.codePointAt(i) @TO@ SimpleName@@MethodName:validatePrintableByte:[c] @AT@ 8219 @LENGTH@ 18
------------DEL SimpleName@@c @AT@ 8327 @LENGTH@ 1


MOV FieldDeclaration@@private, static, final, Logger, [LOG=LoggerFactory.getLogger(FailoverCuratorLeaderRoutePolicyTest.class)] @TO@ TypeDeclaration@@[public]FailoverCuratorLeaderRoutePolicyTest, ZooKeeperTestSupport @AT@ 1493 @LENGTH@ 102


UPD VariableDeclarationStatement@@String ordereString="{\"purchase-order\":{\"@name\":\"Tiger\",\"@price\":\"99.95\",\"@amount\":\"1.0\"}}"; @TO@ String ordereString="{\"purchase-order\":{\"@name\":\"Tiger\",\"@price\":99.95,\"@amount\":1}}"; @AT@ 4010 @LENGTH@ 108
---UPD VariableDeclarationFragment@@ordereString="{\"purchase-order\":{\"@name\":\"Tiger\",\"@price\":\"99.95\",\"@amount\":\"1.0\"}}" @TO@ ordereString="{\"purchase-order\":{\"@name\":\"Tiger\",\"@price\":99.95,\"@amount\":1}}" @AT@ 4017 @LENGTH@ 100
------UPD StringLiteral@@"{\"purchase-order\":{\"@name\":\"Tiger\",\"@price\":\"99.95\",\"@amount\":\"1.0\"}}" @TO@ "{\"purchase-order\":{\"@name\":\"Tiger\",\"@price\":99.95,\"@amount\":1}}" @AT@ 4032 @LENGTH@ 85


DEL FieldDeclaration@@public, static, final, String, [DEFAULT_MAIN_CLASS_NAME="org.wildfly.swarm.Swarm"] @AT@ 1217 @LENGTH@ 79
---DEL Modifier@@public @AT@ 1217 @LENGTH@ 6
---DEL Modifier@@static @AT@ 1224 @LENGTH@ 6
---DEL Modifier@@final @AT@ 1231 @LENGTH@ 5
---DEL SimpleType@@String @AT@ 1237 @LENGTH@ 6
---DEL VariableDeclarationFragment@@DEFAULT_MAIN_CLASS_NAME="org.wildfly.swarm.Swarm" @AT@ 1244 @LENGTH@ 51
------DEL SimpleName@@DEFAULT_MAIN_CLASS_NAME @AT@ 1244 @LENGTH@ 23
------DEL StringLiteral@@"org.wildfly.swarm.Swarm" @AT@ 1270 @LENGTH@ 25


UPD ForStatement@@for (int i=256; i < 8192; i=i * 2) {  final byte[] buffer=generateRandomByteStream(i);  final MessageDigest md5Sum=MessageDigest.getInstance("MD5");  final byte[] expect=md5Sum.digest(buffer);  final MessageDigestCalculatingInputStream md5InputStream=new MessageDigestCalculatingInputStream(new ByteArrayInputStream(buffer));  md5InputStream.consume();  final byte[] got=md5InputStream.getMessageDigest().digest();  assertArrayEquals(expect,got);} @TO@ for (int i=256; i < 8192; i=i * 2) {  final byte[] buffer=generateRandomByteStream(i);  final MessageDigest md5Sum=MessageDigest.getInstance("MD5");  final byte[] expect=md5Sum.digest(buffer);  try (final MessageDigestCalculatingInputStream md5InputStream=new MessageDigestCalculatingInputStream(new ByteArrayInputStream(buffer))){    md5InputStream.consume();    final byte[] got=md5InputStream.getMessageDigest().digest();    assertArrayEquals(expect,got);  } } @AT@ 1328 @LENGTH@ 548
---INS TryStatement@@try (final MessageDigestCalculatingInputStream md5InputStream=new MessageDigestCalculatingInputStream(new ByteArrayInputStream(buffer))){  md5InputStream.consume();  final byte[] got=md5InputStream.getMessageDigest().digest();  assertArrayEquals(expect,got);}  @TO@ ForStatement@@for (int i=256; i < 8192; i=i * 2) {  final byte[] buffer=generateRandomByteStream(i);  final MessageDigest md5Sum=MessageDigest.getInstance("MD5");  final byte[] expect=md5Sum.digest(buffer);  final MessageDigestCalculatingInputStream md5InputStream=new MessageDigestCalculatingInputStream(new ByteArrayInputStream(buffer));  md5InputStream.consume();  final byte[] got=md5InputStream.getMessageDigest().digest();  assertArrayEquals(expect,got);} @AT@ 1576 @LENGTH@ 343
------INS VariableDeclarationExpression@@final MessageDigestCalculatingInputStream md5InputStream=new MessageDigestCalculatingInputStream(new ByteArrayInputStream(buffer)) @TO@ TryStatement@@try (final MessageDigestCalculatingInputStream md5InputStream=new MessageDigestCalculatingInputStream(new ByteArrayInputStream(buffer))){  md5InputStream.consume();  final byte[] got=md5InputStream.getMessageDigest().digest();  assertArrayEquals(expect,got);}  @AT@ 1581 @LENGTH@ 152
---------INS Modifier@@final @TO@ VariableDeclarationExpression@@final MessageDigestCalculatingInputStream md5InputStream=new MessageDigestCalculatingInputStream(new ByteArrayInputStream(buffer)) @AT@ 1581 @LENGTH@ 5
---------INS SimpleType@@MessageDigestCalculatingInputStream @TO@ VariableDeclarationExpression@@final MessageDigestCalculatingInputStream md5InputStream=new MessageDigestCalculatingInputStream(new ByteArrayInputStream(buffer)) @AT@ 1587 @LENGTH@ 35
---------MOV VariableDeclarationFragment@@md5InputStream=new MessageDigestCalculatingInputStream(new ByteArrayInputStream(buffer)) @TO@ VariableDeclarationExpression@@final MessageDigestCalculatingInputStream md5InputStream=new MessageDigestCalculatingInputStream(new ByteArrayInputStream(buffer)) @AT@ 1618 @LENGTH@ 90
------MOV ExpressionStatement@@MethodInvocation:md5InputStream.consume() @TO@ TryStatement@@try (final MessageDigestCalculatingInputStream md5InputStream=new MessageDigestCalculatingInputStream(new ByteArrayInputStream(buffer))){  md5InputStream.consume();  final byte[] got=md5InputStream.getMessageDigest().digest();  assertArrayEquals(expect,got);}  @AT@ 1722 @LENGTH@ 25
------MOV VariableDeclarationStatement@@final byte[] got=md5InputStream.getMessageDigest().digest(); @TO@ TryStatement@@try (final MessageDigestCalculatingInputStream md5InputStream=new MessageDigestCalculatingInputStream(new ByteArrayInputStream(buffer))){  md5InputStream.consume();  final byte[] got=md5InputStream.getMessageDigest().digest();  assertArrayEquals(expect,got);}  @AT@ 1760 @LENGTH@ 62
------MOV ExpressionStatement@@MethodInvocation:assertArrayEquals(expect,got) @TO@ TryStatement@@try (final MessageDigestCalculatingInputStream md5InputStream=new MessageDigestCalculatingInputStream(new ByteArrayInputStream(buffer))){  md5InputStream.consume();  final byte[] got=md5InputStream.getMessageDigest().digest();  assertArrayEquals(expect,got);}  @AT@ 1835 @LENGTH@ 31
---DEL VariableDeclarationStatement@@final MessageDigestCalculatingInputStream md5InputStream=new MessageDigestCalculatingInputStream(new ByteArrayInputStream(buffer)); @AT@ 1576 @LENGTH@ 133
------DEL Modifier@@final @AT@ 1576 @LENGTH@ 5
------DEL SimpleType@@MessageDigestCalculatingInputStream @AT@ 1582 @LENGTH@ 35


UPD TypeDeclaration@@[@Configuration, @ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration"), public]StringTemplateComponentAutoConfiguration,  @TO@ [@Configuration, @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration"), public]StringTemplateComponentAutoConfiguration,  @AT@ 1468 @LENGTH@ 668
---UPD NormalAnnotation@@@ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1483 @LENGTH@ 79
---UPD NormalAnnotation@@@AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1563 @LENGTH@ 80


UPD TypeDeclaration@@[@Repository, @Transactional, public]SimpleNeo4jRepository, [Neo4jRepository<T>] @TO@ [@Repository, @Transactional(readOnly=true), public]SimpleNeo4jRepository, [Neo4jRepository<T>] @AT@ 1544 @LENGTH@ 4454
---INS NormalAnnotation@@@Transactional(readOnly=true) @TO@ TypeDeclaration@@[@Repository, @Transactional, public]SimpleNeo4jRepository, [Neo4jRepository<T>] @AT@ 1556 @LENGTH@ 31
---DEL MarkerAnnotation@@@Transactional @AT@ 1556 @LENGTH@ 14


INS FieldDeclaration@@Metamodel, [metamodel] @TO@ TypeDeclaration@@[@RunWith(MockitoJUnitRunner.class), public]NamedQueryUnitTests,  @AT@ 1816 @LENGTH@ 20
---INS SimpleType@@Metamodel @TO@ FieldDeclaration@@Metamodel, [metamodel] @AT@ 1816 @LENGTH@ 9
---INS VariableDeclarationFragment@@metamodel @TO@ FieldDeclaration@@Metamodel, [metamodel] @AT@ 1826 @LENGTH@ 9
------INS SimpleName@@metamodel @TO@ VariableDeclarationFragment@@metamodel @AT@ 1826 @LENGTH@ 9


UPD TypeDeclaration@@[@Configuration, @ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration"), @EnableConfigurationProperties(JsonPathLanguageConfiguration.class), public]JsonPathLanguageAutoConfiguration,  @TO@ [@Configuration, @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration"), @EnableConfigurationProperties(JsonPathLanguageConfiguration.class), public]JsonPathLanguageAutoConfiguration,  @AT@ 1653 @LENGTH@ 1116
---UPD NormalAnnotation@@@ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1668 @LENGTH@ 79
---UPD NormalAnnotation@@@AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1748 @LENGTH@ 80


UPD ThrowStatement@@ClassInstanceCreation:new IllegalArgumentException("Non-hex character in input: " + s) @TO@ ClassInstanceCreation:new IllegalArgumentException("Detected a Non-hex character at " + (i + 1) + " or "+ (i + 2)+ " position") @AT@ 1784 @LENGTH@ 71
---UPD ClassInstanceCreation@@IllegalArgumentException["Non-hex character in input: " + s] @TO@ IllegalArgumentException["Detected a Non-hex character at " + (i + 1) + " or "+ (i + 2)+ " position"] @AT@ 1790 @LENGTH@ 64
------UPD InfixExpression@@"Non-hex character in input: " + s @TO@ "Detected a Non-hex character at " + (i + 1) + " or "+ (i + 2)+ " position" @AT@ 1819 @LENGTH@ 34
---------UPD StringLiteral@@"Non-hex character in input: " @TO@ "Detected a Non-hex character at " @AT@ 1819 @LENGTH@ 30
---------UPD SimpleName@@s @TO@ i @AT@ 1852 @LENGTH@ 1
---------INS ParenthesizedExpression@@(i + 1) @TO@ InfixExpression@@"Non-hex character in input: " + s @AT@ 1862 @LENGTH@ 7
------------INS InfixExpression@@i + 1 @TO@ ParenthesizedExpression@@(i + 1) @AT@ 1863 @LENGTH@ 5
---------------MOV SimpleName@@s @TO@ InfixExpression@@i + 1 @AT@ 1852 @LENGTH@ 1
---------------INS Operator@@+ @TO@ InfixExpression@@i + 1 @AT@ 1864 @LENGTH@ 1
---------------INS NumberLiteral@@1 @TO@ InfixExpression@@i + 1 @AT@ 1867 @LENGTH@ 1
---------INS StringLiteral@@" or " @TO@ InfixExpression@@"Non-hex character in input: " + s @AT@ 1872 @LENGTH@ 6
---------INS ParenthesizedExpression@@(i + 2) @TO@ InfixExpression@@"Non-hex character in input: " + s @AT@ 1881 @LENGTH@ 7
------------INS InfixExpression@@i + 2 @TO@ ParenthesizedExpression@@(i + 2) @AT@ 1882 @LENGTH@ 5
---------------INS SimpleName@@i @TO@ InfixExpression@@i + 2 @AT@ 1882 @LENGTH@ 1
---------------INS Operator@@+ @TO@ InfixExpression@@i + 2 @AT@ 1883 @LENGTH@ 1
---------------INS NumberLiteral@@2 @TO@ InfixExpression@@i + 2 @AT@ 1886 @LENGTH@ 1
---------INS StringLiteral@@" position" @TO@ InfixExpression@@"Non-hex character in input: " + s @AT@ 1891 @LENGTH@ 11


INS FieldDeclaration@@private, Neo4jOperations, [neo4jOperations] @TO@ TypeDeclaration@@[@ContextConfiguration(classes={MoviesContext.class}), @RunWith(SpringJUnit4ClassRunner.class), @DirtiesContext, public]DerivedRelationshipEntityQueryTest, MultiDriverTestClass @AT@ 2244 @LENGTH@ 40
---INS Modifier@@private @TO@ FieldDeclaration@@private, Neo4jOperations, [neo4jOperations] @AT@ 2244 @LENGTH@ 7
---INS SimpleType@@Neo4jOperations @TO@ FieldDeclaration@@private, Neo4jOperations, [neo4jOperations] @AT@ 2252 @LENGTH@ 15
---INS VariableDeclarationFragment@@neo4jOperations @TO@ FieldDeclaration@@private, Neo4jOperations, [neo4jOperations] @AT@ 2268 @LENGTH@ 15
------INS SimpleName@@neo4jOperations @TO@ VariableDeclarationFragment@@neo4jOperations @AT@ 2268 @LENGTH@ 15


UPD MethodDeclaration@@public, Drive, MethodName:getClient,  @TO@ public, Drive, MethodName:getClient, GoogleDriveConfiguration googleDriveConfiguration,  @AT@ 2003 @LENGTH@ 354
---INS SingleVariableDeclaration@@GoogleDriveConfiguration googleDriveConfiguration @TO@ MethodDeclaration@@public, Drive, MethodName:getClient,  @AT@ 2026 @LENGTH@ 49
------INS SimpleType@@GoogleDriveConfiguration @TO@ SingleVariableDeclaration@@GoogleDriveConfiguration googleDriveConfiguration @AT@ 2026 @LENGTH@ 24
------INS SimpleName@@googleDriveConfiguration @TO@ SingleVariableDeclaration@@GoogleDriveConfiguration googleDriveConfiguration @AT@ 2051 @LENGTH@ 24
---UPD IfStatement@@if (client == null) {  client=getClientFactory().makeClient(configuration.getClientId(),configuration.getClientSecret(),configuration.getScopes(),configuration.getApplicationName(),configuration.getRefreshToken(),configuration.getAccessToken());} @TO@ if (client == null) {  client=getClientFactory().makeClient(googleDriveConfiguration.getClientId(),googleDriveConfiguration.getClientSecret(),googleDriveConfiguration.getScopes(),googleDriveConfiguration.getApplicationName(),googleDriveConfiguration.getRefreshToken(),googleDriveConfiguration.getAccessToken());} @AT@ 2038 @LENGTH@ 290
------UPD Block@@ThenBody:{  client=getClientFactory().makeClient(configuration.getClientId(),configuration.getClientSecret(),configuration.getScopes(),configuration.getApplicationName(),configuration.getRefreshToken(),configuration.getAccessToken());} @TO@ ThenBody:{  client=getClientFactory().makeClient(googleDriveConfiguration.getClientId(),googleDriveConfiguration.getClientSecret(),googleDriveConfiguration.getScopes(),googleDriveConfiguration.getApplicationName(),googleDriveConfiguration.getRefreshToken(),googleDriveConfiguration.getAccessToken());} @AT@ 2058 @LENGTH@ 270
---------UPD ExpressionStatement@@Assignment:client=getClientFactory().makeClient(configuration.getClientId(),configuration.getClientSecret(),configuration.getScopes(),configuration.getApplicationName(),configuration.getRefreshToken(),configuration.getAccessToken()) @TO@ Assignment:client=getClientFactory().makeClient(googleDriveConfiguration.getClientId(),googleDriveConfiguration.getClientSecret(),googleDriveConfiguration.getScopes(),googleDriveConfiguration.getApplicationName(),googleDriveConfiguration.getRefreshToken(),googleDriveConfiguration.getAccessToken()) @AT@ 2072 @LENGTH@ 246
------------UPD Assignment@@client=getClientFactory().makeClient(configuration.getClientId(),configuration.getClientSecret(),configuration.getScopes(),configuration.getApplicationName(),configuration.getRefreshToken(),configuration.getAccessToken()) @TO@ client=getClientFactory().makeClient(googleDriveConfiguration.getClientId(),googleDriveConfiguration.getClientSecret(),googleDriveConfiguration.getScopes(),googleDriveConfiguration.getApplicationName(),googleDriveConfiguration.getRefreshToken(),googleDriveConfiguration.getAccessToken()) @AT@ 2072 @LENGTH@ 245
---------------UPD MethodInvocation@@getClientFactory().makeClient(configuration.getClientId(),configuration.getClientSecret(),configuration.getScopes(),configuration.getApplicationName(),configuration.getRefreshToken(),configuration.getAccessToken()) @TO@ getClientFactory().makeClient(googleDriveConfiguration.getClientId(),googleDriveConfiguration.getClientSecret(),googleDriveConfiguration.getScopes(),googleDriveConfiguration.getApplicationName(),googleDriveConfiguration.getRefreshToken(),googleDriveConfiguration.getAccessToken()) @AT@ 2081 @LENGTH@ 236
------------------UPD SimpleName@@MethodName:makeClient:[configuration.getClientId(), configuration.getClientSecret(), configuration.getScopes(), configuration.getApplicationName(), configuration.getRefreshToken(), configuration.getAccessToken()] @TO@ MethodName:makeClient:[googleDriveConfiguration.getClientId(), googleDriveConfiguration.getClientSecret(), googleDriveConfiguration.getScopes(), googleDriveConfiguration.getApplicationName(), googleDriveConfiguration.getRefreshToken(), googleDriveConfiguration.getAccessToken()] @AT@ 2100 @LENGTH@ 217
---------------------UPD MethodInvocation@@configuration.getClientId() @TO@ googleDriveConfiguration.getClientId() @AT@ 2111 @LENGTH@ 27
------------------------UPD SimpleName@@Name:configuration @TO@ Name:googleDriveConfiguration @AT@ 2111 @LENGTH@ 13
---------------------UPD MethodInvocation@@configuration.getClientSecret() @TO@ googleDriveConfiguration.getClientSecret() @AT@ 2140 @LENGTH@ 31
------------------------UPD SimpleName@@Name:configuration @TO@ Name:googleDriveConfiguration @AT@ 2140 @LENGTH@ 13
---------------------UPD MethodInvocation@@configuration.getScopes() @TO@ googleDriveConfiguration.getScopes() @AT@ 2173 @LENGTH@ 25
------------------------UPD SimpleName@@Name:configuration @TO@ Name:googleDriveConfiguration @AT@ 2173 @LENGTH@ 13
---------------------UPD MethodInvocation@@configuration.getApplicationName() @TO@ googleDriveConfiguration.getApplicationName() @AT@ 2217 @LENGTH@ 34
------------------------UPD SimpleName@@Name:configuration @TO@ Name:googleDriveConfiguration @AT@ 2217 @LENGTH@ 13
---------------------UPD MethodInvocation@@configuration.getRefreshToken() @TO@ googleDriveConfiguration.getRefreshToken() @AT@ 2253 @LENGTH@ 31
------------------------UPD SimpleName@@Name:configuration @TO@ Name:googleDriveConfiguration @AT@ 2253 @LENGTH@ 13
---------------------UPD MethodInvocation@@configuration.getAccessToken() @TO@ googleDriveConfiguration.getAccessToken() @AT@ 2286 @LENGTH@ 30
------------------------UPD SimpleName@@Name:configuration @TO@ Name:googleDriveConfiguration @AT@ 2286 @LENGTH@ 13


UPD TypeDeclaration@@[@Configuration, @ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration"), @EnableConfigurationProperties(KestrelComponentConfiguration.class), public]KestrelComponentAutoConfiguration,  @TO@ [@Configuration, @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration"), @EnableConfigurationProperties(KestrelComponentConfiguration.class), public]KestrelComponentAutoConfiguration,  @AT@ 1628 @LENGTH@ 2079
---UPD NormalAnnotation@@@ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1643 @LENGTH@ 79
---UPD NormalAnnotation@@@AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1723 @LENGTH@ 80


UPD TypeDeclaration@@[@Configuration, @ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration"), public]JcrComponentAutoConfiguration,  @TO@ [@Configuration, @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration"), public]JcrComponentAutoConfiguration,  @AT@ 1435 @LENGTH@ 589
---UPD NormalAnnotation@@@ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1450 @LENGTH@ 79
---UPD NormalAnnotation@@@AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1530 @LENGTH@ 80


UPD IfStatement@@if (castValue.getValue().getAttributeNames().size() == 1) {  annotationExpr=new SingleMemberAnnotationExpr(JavaParserUtils.getNameExpr(nestedAnnotation.getAnnotationType().getSimpleTypeName()),convert(nestedAnnotation.getAttribute(nestedAnnotation.getAttributeNames().get(0)),compilationUnitServices).getValue());} else {  final List<MemberValuePair> memberValuePairs=new ArrayList<MemberValuePair>();  for (  final JavaSymbolName attributeName : nestedAnnotation.getAttributeNames()) {    memberValuePairs.add(convert(nestedAnnotation.getAttribute(attributeName),compilationUnitServices));  }  annotationExpr=new NormalAnnotationExpr(JavaParserUtils.getNameExpr(nestedAnnotation.getAnnotationType().getSimpleTypeName()),memberValuePairs);} @TO@ if (castValue.getValue().getAttributeNames().size() == 1 && (castValue.getValue().getAttributeNames().get(0) == null || "value".equals(castValue.getValue().getAttributeNames().get(0).getSymbolName()))) {  annotationExpr=new SingleMemberAnnotationExpr(JavaParserUtils.getNameExpr(nestedAnnotation.getAnnotationType().getSimpleTypeName()),convert(nestedAnnotation.getAttribute(nestedAnnotation.getAttributeNames().get(0)),compilationUnitServices).getValue());} else {  final List<MemberValuePair> memberValuePairs=new ArrayList<MemberValuePair>();  for (  final JavaSymbolName attributeName : nestedAnnotation.getAttributeNames()) {    memberValuePairs.add(convert(nestedAnnotation.getAttribute(attributeName),compilationUnitServices));  }  annotationExpr=new NormalAnnotationExpr(JavaParserUtils.getNameExpr(nestedAnnotation.getAnnotationType().getSimpleTypeName()),memberValuePairs);} @AT@ 11709 @LENGTH@ 909
---INS InfixExpression@@castValue.getValue().getAttributeNames().size() == 1 && (castValue.getValue().getAttributeNames().get(0) == null || "value".equals(castValue.getValue().getAttributeNames().get(0).getSymbolName())) @TO@ IfStatement@@if (castValue.getValue().getAttributeNames().size() == 1) {  annotationExpr=new SingleMemberAnnotationExpr(JavaParserUtils.getNameExpr(nestedAnnotation.getAnnotationType().getSimpleTypeName()),convert(nestedAnnotation.getAttribute(nestedAnnotation.getAttributeNames().get(0)),compilationUnitServices).getValue());} else {  final List<MemberValuePair> memberValuePairs=new ArrayList<MemberValuePair>();  for (  final JavaSymbolName attributeName : nestedAnnotation.getAttributeNames()) {    memberValuePairs.add(convert(nestedAnnotation.getAttribute(attributeName),compilationUnitServices));  }  annotationExpr=new NormalAnnotationExpr(JavaParserUtils.getNameExpr(nestedAnnotation.getAnnotationType().getSimpleTypeName()),memberValuePairs);} @AT@ 11713 @LENGTH@ 221
------MOV InfixExpression@@castValue.getValue().getAttributeNames().size() == 1 @TO@ InfixExpression@@castValue.getValue().getAttributeNames().size() == 1 && (castValue.getValue().getAttributeNames().get(0) == null || "value".equals(castValue.getValue().getAttributeNames().get(0).getSymbolName())) @AT@ 11713 @LENGTH@ 52
------INS Operator@@&& @TO@ InfixExpression@@castValue.getValue().getAttributeNames().size() == 1 && (castValue.getValue().getAttributeNames().get(0) == null || "value".equals(castValue.getValue().getAttributeNames().get(0).getSymbolName())) @AT@ 11765 @LENGTH@ 2
------INS ParenthesizedExpression@@(castValue.getValue().getAttributeNames().get(0) == null || "value".equals(castValue.getValue().getAttributeNames().get(0).getSymbolName())) @TO@ InfixExpression@@castValue.getValue().getAttributeNames().size() == 1 && (castValue.getValue().getAttributeNames().get(0) == null || "value".equals(castValue.getValue().getAttributeNames().get(0).getSymbolName())) @AT@ 11779 @LENGTH@ 155
---------INS InfixExpression@@castValue.getValue().getAttributeNames().get(0) == null || "value".equals(castValue.getValue().getAttributeNames().get(0).getSymbolName()) @TO@ ParenthesizedExpression@@(castValue.getValue().getAttributeNames().get(0) == null || "value".equals(castValue.getValue().getAttributeNames().get(0).getSymbolName())) @AT@ 11780 @LENGTH@ 153
------------INS InfixExpression@@castValue.getValue().getAttributeNames().get(0) == null @TO@ InfixExpression@@castValue.getValue().getAttributeNames().get(0) == null || "value".equals(castValue.getValue().getAttributeNames().get(0).getSymbolName()) @AT@ 11780 @LENGTH@ 55
---------------INS MethodInvocation@@castValue.getValue().getAttributeNames().get(0) @TO@ InfixExpression@@castValue.getValue().getAttributeNames().get(0) == null @AT@ 11780 @LENGTH@ 47
------------------INS MethodInvocation@@MethodName:getAttributeNames:[] @TO@ MethodInvocation@@castValue.getValue().getAttributeNames().get(0) @AT@ 11780 @LENGTH@ 40
------------------INS MethodInvocation@@MethodName:getValue:[] @TO@ MethodInvocation@@castValue.getValue().getAttributeNames().get(0) @AT@ 11780 @LENGTH@ 20
------------------INS SimpleName@@Name:castValue @TO@ MethodInvocation@@castValue.getValue().getAttributeNames().get(0) @AT@ 11780 @LENGTH@ 9
------------------INS SimpleName@@MethodName:get:[0] @TO@ MethodInvocation@@castValue.getValue().getAttributeNames().get(0) @AT@ 11821 @LENGTH@ 6
---------------------INS NumberLiteral@@0 @TO@ SimpleName@@MethodName:get:[0] @AT@ 11825 @LENGTH@ 1
---------------INS Operator@@== @TO@ InfixExpression@@castValue.getValue().getAttributeNames().get(0) == null @AT@ 11827 @LENGTH@ 2
---------------INS NullLiteral@@null @TO@ InfixExpression@@castValue.getValue().getAttributeNames().get(0) == null @AT@ 11831 @LENGTH@ 4
------------INS Operator@@|| @TO@ InfixExpression@@castValue.getValue().getAttributeNames().get(0) == null || "value".equals(castValue.getValue().getAttributeNames().get(0).getSymbolName()) @AT@ 11835 @LENGTH@ 2
------------INS MethodInvocation@@"value".equals(castValue.getValue().getAttributeNames().get(0).getSymbolName()) @TO@ InfixExpression@@castValue.getValue().getAttributeNames().get(0) == null || "value".equals(castValue.getValue().getAttributeNames().get(0).getSymbolName()) @AT@ 11839 @LENGTH@ 94
---------------INS StringLiteral@@"value" @TO@ MethodInvocation@@"value".equals(castValue.getValue().getAttributeNames().get(0).getSymbolName()) @AT@ 11839 @LENGTH@ 7
---------------INS SimpleName@@MethodName:equals:[castValue.getValue().getAttributeNames().get(0).getSymbolName()] @TO@ MethodInvocation@@"value".equals(castValue.getValue().getAttributeNames().get(0).getSymbolName()) @AT@ 11847 @LENGTH@ 86
------------------INS MethodInvocation@@castValue.getValue().getAttributeNames().get(0).getSymbolName() @TO@ SimpleName@@MethodName:equals:[castValue.getValue().getAttributeNames().get(0).getSymbolName()] @AT@ 11854 @LENGTH@ 78
---------------------INS MethodInvocation@@MethodName:get:[0] @TO@ MethodInvocation@@castValue.getValue().getAttributeNames().get(0).getSymbolName() @AT@ 11854 @LENGTH@ 62
------------------------INS NumberLiteral@@0 @TO@ MethodInvocation@@MethodName:get:[0] @AT@ 11914 @LENGTH@ 1
---------------------INS MethodInvocation@@MethodName:getAttributeNames:[] @TO@ MethodInvocation@@castValue.getValue().getAttributeNames().get(0).getSymbolName() @AT@ 11854 @LENGTH@ 55
---------------------INS MethodInvocation@@MethodName:getValue:[] @TO@ MethodInvocation@@castValue.getValue().getAttributeNames().get(0).getSymbolName() @AT@ 11854 @LENGTH@ 35
---------------------INS SimpleName@@Name:castValue @TO@ MethodInvocation@@castValue.getValue().getAttributeNames().get(0).getSymbolName() @AT@ 11854 @LENGTH@ 9
---------------------INS SimpleName@@MethodName:getSymbolName:[] @TO@ MethodInvocation@@castValue.getValue().getAttributeNames().get(0).getSymbolName() @AT@ 11917 @LENGTH@ 15


UPD TypeDeclaration@@[@Configuration, @ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration"), public]PrinterComponentAutoConfiguration,  @TO@ [@Configuration, @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration"), public]PrinterComponentAutoConfiguration,  @AT@ 1447 @LENGTH@ 613
---UPD NormalAnnotation@@@ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1462 @LENGTH@ 79
---UPD NormalAnnotation@@@AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1542 @LENGTH@ 80


UPD FieldDeclaration@@private, GraphDatabaseService, [graphDatabaseService=getGraphDatabaseService()] @TO@ private, static, GraphDatabaseService, [graphDatabaseService] @AT@ 2011 @LENGTH@ 78
---UPD VariableDeclarationFragment@@graphDatabaseService=getGraphDatabaseService() @TO@ graphDatabaseService @AT@ 2040 @LENGTH@ 48
------DEL MethodInvocation@@MethodName:getGraphDatabaseService:[] @AT@ 2063 @LENGTH@ 25
---INS Modifier@@static @TO@ FieldDeclaration@@private, GraphDatabaseService, [graphDatabaseService=getGraphDatabaseService()] @AT@ 2049 @LENGTH@ 6


UPD VariableDeclarationStatement@@MergeFileWork mergeWork=new MergeFileWork(mergeFilesDesc.getInputDir(),mergeFilesDesc.getOutputDir(),mergeFilesDesc.getInputFormatClass().getName()); @TO@ MergeFileWork mergeWork=new MergeFileWork(mergeFilesDesc.getInputDir(),mergeFilesDesc.getOutputDir(),mergeFilesDesc.getInputFormatClass().getName(),mergeFilesDesc.getTableDesc()); @AT@ 26123 @LENGTH@ 161
---UPD VariableDeclarationFragment@@mergeWork=new MergeFileWork(mergeFilesDesc.getInputDir(),mergeFilesDesc.getOutputDir(),mergeFilesDesc.getInputFormatClass().getName()) @TO@ mergeWork=new MergeFileWork(mergeFilesDesc.getInputDir(),mergeFilesDesc.getOutputDir(),mergeFilesDesc.getInputFormatClass().getName(),mergeFilesDesc.getTableDesc()) @AT@ 26137 @LENGTH@ 146
------UPD ClassInstanceCreation@@MergeFileWork[mergeFilesDesc.getInputDir(), mergeFilesDesc.getOutputDir(), mergeFilesDesc.getInputFormatClass().getName()] @TO@ MergeFileWork[mergeFilesDesc.getInputDir(), mergeFilesDesc.getOutputDir(), mergeFilesDesc.getInputFormatClass().getName(), mergeFilesDesc.getTableDesc()] @AT@ 26149 @LENGTH@ 134
---------INS MethodInvocation@@mergeFilesDesc.getTableDesc() @TO@ ClassInstanceCreation@@MergeFileWork[mergeFilesDesc.getInputDir(), mergeFilesDesc.getOutputDir(), mergeFilesDesc.getInputFormatClass().getName()] @AT@ 26292 @LENGTH@ 29
------------INS SimpleName@@Name:mergeFilesDesc @TO@ MethodInvocation@@mergeFilesDesc.getTableDesc() @AT@ 26292 @LENGTH@ 14
------------INS SimpleName@@MethodName:getTableDesc:[] @TO@ MethodInvocation@@mergeFilesDesc.getTableDesc() @AT@ 26307 @LENGTH@ 14


UPD IfStatement@@if (Utils.isFallbackEnable(props)) {  return new JavaCryptoRandom(props);} else {  throw new GeneralSecurityException(errorMessage.toString());} @TO@ if (Utils.isFallbackEnabled(props)) {  return new JavaCryptoRandom(props);} else {  throw new GeneralSecurityException(errorMessage.toString());} @AT@ 3459 @LENGTH@ 185
---UPD MethodInvocation@@Utils.isFallbackEnable(props) @TO@ Utils.isFallbackEnabled(props) @AT@ 3463 @LENGTH@ 29
------UPD SimpleName@@MethodName:isFallbackEnable:[props] @TO@ MethodName:isFallbackEnabled:[props] @AT@ 3469 @LENGTH@ 23


UPD ReturnStatement@@MethodInvocation:new ITestConfigBuilder().module(inferModuleName(CamelZipkinStarterTest.class)).build() @TO@ MethodInvocation:new ITestConfigBuilder().module(inferModuleName(CamelZipkinStarterTest.class)).unitTestExpectedNumber(0).build() @AT@ 1451 @LENGTH@ 128
---UPD MethodInvocation@@new ITestConfigBuilder().module(inferModuleName(CamelZipkinStarterTest.class)).build() @TO@ new ITestConfigBuilder().module(inferModuleName(CamelZipkinStarterTest.class)).unitTestExpectedNumber(0).build() @AT@ 1458 @LENGTH@ 120
------INS MethodInvocation@@MethodName:unitTestExpectedNumber:[0] @TO@ MethodInvocation@@new ITestConfigBuilder().module(inferModuleName(CamelZipkinStarterTest.class)).build() @AT@ 1458 @LENGTH@ 138
---------INS NumberLiteral@@0 @TO@ MethodInvocation@@MethodName:unitTestExpectedNumber:[0] @AT@ 1594 @LENGTH@ 1


UPD Block@@WhileBody:{synchronized (NOTIFICATION_TBL_LOCK) {    rs.cleanNotificationEvents(ttl);  }  try {    Thread.sleep(60000);  } catch (  InterruptedException e) {    LOG.info("Cleaner thread sleep interupted",e);  }} @TO@ WhileBody:{synchronized (NOTIFICATION_TBL_LOCK) {    rs.cleanNotificationEvents(ttl);  }  LOG.debug("Cleaner thread done");  try {    Thread.sleep(sleepTime);  } catch (  InterruptedException e) {    LOG.info("Cleaner thread sleep interupted",e);  }} @AT@ 10947 @LENGTH@ 264
---UPD TryStatement@@try {  Thread.sleep(60000);} catch (InterruptedException e) {  LOG.info("Cleaner thread sleep interupted",e);} @TO@ try {  Thread.sleep(sleepTime);} catch (InterruptedException e) {  LOG.info("Cleaner thread sleep interupted",e);} @AT@ 11056 @LENGTH@ 147
------UPD ExpressionStatement@@MethodInvocation:Thread.sleep(60000) @TO@ MethodInvocation:Thread.sleep(sleepTime) @AT@ 11072 @LENGTH@ 20
---------UPD MethodInvocation@@Thread.sleep(60000) @TO@ Thread.sleep(sleepTime) @AT@ 11072 @LENGTH@ 19
------------UPD SimpleName@@MethodName:sleep:[60000] @TO@ MethodName:sleep:[sleepTime] @AT@ 11079 @LENGTH@ 12
---------------DEL NumberLiteral@@60000 @AT@ 11085 @LENGTH@ 5
---------------INS SimpleName@@sleepTime @TO@ SimpleName@@MethodName:sleep:[60000] @AT@ 11169 @LENGTH@ 9
---INS ExpressionStatement@@MethodInvocation:LOG.debug("Cleaner thread done") @TO@ Block@@WhileBody:{synchronized (NOTIFICATION_TBL_LOCK) {    rs.cleanNotificationEvents(ttl);  }  try {    Thread.sleep(60000);  } catch (  InterruptedException e) {    LOG.info("Cleaner thread sleep interupted",e);  }} @AT@ 11098 @LENGTH@ 33
------INS MethodInvocation@@LOG.debug("Cleaner thread done") @TO@ ExpressionStatement@@MethodInvocation:LOG.debug("Cleaner thread done") @AT@ 11098 @LENGTH@ 32
---------INS SimpleName@@Name:LOG @TO@ MethodInvocation@@LOG.debug("Cleaner thread done") @AT@ 11098 @LENGTH@ 3
---------INS SimpleName@@MethodName:debug:["Cleaner thread done"] @TO@ MethodInvocation@@LOG.debug("Cleaner thread done") @AT@ 11102 @LENGTH@ 28
------------INS StringLiteral@@"Cleaner thread done" @TO@ SimpleName@@MethodName:debug:["Cleaner thread done"] @AT@ 11108 @LENGTH@ 21


UPD TypeDeclaration@@[@Configuration, public]AuthenticationConfiguration,  @TO@ [@Configuration, @Import(ObjectPostProcessorConfiguration.class), public]AuthenticationConfiguration,  @AT@ 2070 @LENGTH@ 5432
---INS SingleMemberAnnotation@@@Import(ObjectPostProcessorConfiguration.class) @TO@ TypeDeclaration@@[@Configuration, public]AuthenticationConfiguration,  @AT@ 2241 @LENGTH@ 47


UPD VariableDeclarationStatement@@Document dbObject=operation.toDocument(Aggregation.DEFAULT_CONTEXT); @TO@ Document document=operation.toDocument(Aggregation.DEFAULT_CONTEXT); @AT@ 1174 @LENGTH@ 70
---UPD VariableDeclarationFragment@@dbObject=operation.toDocument(Aggregation.DEFAULT_CONTEXT) @TO@ document=operation.toDocument(Aggregation.DEFAULT_CONTEXT) @AT@ 1183 @LENGTH@ 60
------UPD SimpleName@@dbObject @TO@ document @AT@ 1183 @LENGTH@ 8


UPD CatchClause@@catch (TimeoutException e) {  log.error("Timeout occured");  throw e;} @TO@ catch (TimeoutException e) {  log.warn("Timeout occurred while stopping consumer. This exception is ignored",e);} @AT@ 4512 @LENGTH@ 113
---UPD ExpressionStatement@@MethodInvocation:log.error("Timeout occured") @TO@ MethodInvocation:log.warn("Timeout occurred while stopping consumer. This exception is ignored",e) @AT@ 4557 @LENGTH@ 29
------UPD MethodInvocation@@log.error("Timeout occured") @TO@ log.warn("Timeout occurred while stopping consumer. This exception is ignored",e) @AT@ 4557 @LENGTH@ 28
---------UPD SimpleName@@MethodName:error:["Timeout occured"] @TO@ MethodName:warn:["Timeout occurred while stopping consumer. This exception is ignored", e] @AT@ 4561 @LENGTH@ 24
------------UPD StringLiteral@@"Timeout occured" @TO@ "Timeout occurred while stopping consumer. This exception is ignored" @AT@ 4567 @LENGTH@ 17
------------INS SimpleName@@e @TO@ SimpleName@@MethodName:error:["Timeout occured"] @AT@ 4637 @LENGTH@ 1
---DEL ThrowStatement@@SimpleName:e @AT@ 4603 @LENGTH@ 8
------DEL SimpleName@@e @AT@ 4609 @LENGTH@ 1


UPD ExpressionStatement@@MethodInvocation:logger.debug("Not autwiring PermissionEvaluator since size != 1. Got " + handlers) @TO@ MethodInvocation:logger.debug("Not autowiring MethodSecurityExpressionHandler since size != 1. Got " + handlers) @AT@ 16228 @LENGTH@ 88
---UPD MethodInvocation@@logger.debug("Not autwiring PermissionEvaluator since size != 1. Got " + handlers) @TO@ logger.debug("Not autowiring MethodSecurityExpressionHandler since size != 1. Got " + handlers) @AT@ 16228 @LENGTH@ 87
------UPD SimpleName@@MethodName:debug:["Not autwiring PermissionEvaluator since size != 1. Got " + handlers] @TO@ MethodName:debug:["Not autowiring MethodSecurityExpressionHandler since size != 1. Got " + handlers] @AT@ 16235 @LENGTH@ 80
---------UPD InfixExpression@@"Not autwiring PermissionEvaluator since size != 1. Got " + handlers @TO@ "Not autowiring MethodSecurityExpressionHandler since size != 1. Got " + handlers @AT@ 16241 @LENGTH@ 73
------------UPD StringLiteral@@"Not autwiring PermissionEvaluator since size != 1. Got " @TO@ "Not autowiring MethodSecurityExpressionHandler since size != 1. Got " @AT@ 16241 @LENGTH@ 57


UPD ReturnStatement@@ConditionalExpression:source instanceof Option ? ((Option<?>)source).orNull(null) : source @TO@ ConditionalExpression:source instanceof Option ? ((Option<?>)source).getOrElse(alternative) : source @AT@ 13458 @LENGTH@ 77
---UPD ConditionalExpression@@source instanceof Option ? ((Option<?>)source).orNull(null) : source @TO@ source instanceof Option ? ((Option<?>)source).getOrElse(alternative) : source @AT@ 13465 @LENGTH@ 69
------UPD MethodInvocation@@((Option<?>)source).orNull(null) @TO@ ((Option<?>)source).getOrElse(alternative) @AT@ 13492 @LENGTH@ 33
---------UPD SimpleName@@MethodName:orNull:[null] @TO@ MethodName:getOrElse:[alternative] @AT@ 13513 @LENGTH@ 12
------------DEL NullLiteral@@null @AT@ 13520 @LENGTH@ 4
------------INS SimpleName@@alternative @TO@ SimpleName@@MethodName:orNull:[null] @AT@ 13860 @LENGTH@ 11


UPD TypeDeclaration@@[@Configuration, @ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration"), public]NatsComponentAutoConfiguration,  @TO@ [@Configuration, @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration"), public]NatsComponentAutoConfiguration,  @AT@ 1438 @LENGTH@ 596
---UPD NormalAnnotation@@@ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1453 @LENGTH@ 79
---UPD NormalAnnotation@@@AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1533 @LENGTH@ 80


UPD CatchClause@@catch (RuntimeOperationsException e) {  if (notificationListenerOperationsMustSucceed) {    Assert.fail("Unexpected exception when adding the notification listener");  } else {    RuntimeException exception=e.getTargetException();    Assert.assertTrue(exception instanceof UnsupportedOperationException);  }} @TO@ catch (IOException|RuntimeOperationsException e) {  if (notificationListenerOperationsMustSucceed) {    Assert.fail("Unexpected exception when adding the notification listener");  } else {    Assert.assertTrue(e.getCause() instanceof UnsupportedOperationException || e.getCause().getCause() instanceof UnsupportedOperationException);  }} @AT@ 72650 @LENGTH@ 391
---UPD SingleVariableDeclaration@@RuntimeOperationsException e @TO@ IOException|RuntimeOperationsException e @AT@ 72657 @LENGTH@ 28
------DEL SimpleType@@RuntimeOperationsException @AT@ 72657 @LENGTH@ 26
------INS UnionType@@IOException|RuntimeOperationsException @TO@ SingleVariableDeclaration@@RuntimeOperationsException e @AT@ 72657 @LENGTH@ 40
---------INS SimpleType@@IOException @TO@ UnionType@@IOException|RuntimeOperationsException @AT@ 72657 @LENGTH@ 11
---------INS SimpleType@@RuntimeOperationsException @TO@ UnionType@@IOException|RuntimeOperationsException @AT@ 72671 @LENGTH@ 26
---UPD IfStatement@@if (notificationListenerOperationsMustSucceed) {  Assert.fail("Unexpected exception when adding the notification listener");} else {  RuntimeException exception=e.getTargetException();  Assert.assertTrue(exception instanceof UnsupportedOperationException);} @TO@ if (notificationListenerOperationsMustSucceed) {  Assert.fail("Unexpected exception when adding the notification listener");} else {  Assert.assertTrue(e.getCause() instanceof UnsupportedOperationException || e.getCause().getCause() instanceof UnsupportedOperationException);} @AT@ 72701 @LENGTH@ 330
------UPD Block@@ElseBody:{  RuntimeException exception=e.getTargetException();  Assert.assertTrue(exception instanceof UnsupportedOperationException);} @TO@ ElseBody:{  Assert.assertTrue(e.getCause() instanceof UnsupportedOperationException || e.getCause().getCause() instanceof UnsupportedOperationException);} @AT@ 72860 @LENGTH@ 171
---------DEL VariableDeclarationStatement@@RuntimeException exception=e.getTargetException(); @AT@ 72878 @LENGTH@ 52
------------DEL SimpleType@@RuntimeException @AT@ 72878 @LENGTH@ 16
------------DEL VariableDeclarationFragment@@exception=e.getTargetException() @AT@ 72895 @LENGTH@ 34
---------------DEL SimpleName@@exception @AT@ 72895 @LENGTH@ 9
---------------DEL MethodInvocation@@e.getTargetException() @AT@ 72907 @LENGTH@ 22
------------------DEL SimpleName@@Name:e @AT@ 72907 @LENGTH@ 1
------------------DEL SimpleName@@MethodName:getTargetException:[] @AT@ 72909 @LENGTH@ 20
---------UPD ExpressionStatement@@MethodInvocation:Assert.assertTrue(exception instanceof UnsupportedOperationException) @TO@ MethodInvocation:Assert.assertTrue(e.getCause() instanceof UnsupportedOperationException || e.getCause().getCause() instanceof UnsupportedOperationException) @AT@ 72947 @LENGTH@ 70
------------UPD MethodInvocation@@Assert.assertTrue(exception instanceof UnsupportedOperationException) @TO@ Assert.assertTrue(e.getCause() instanceof UnsupportedOperationException || e.getCause().getCause() instanceof UnsupportedOperationException) @AT@ 72947 @LENGTH@ 69
---------------UPD SimpleName@@MethodName:assertTrue:[exception instanceof UnsupportedOperationException] @TO@ MethodName:assertTrue:[e.getCause() instanceof UnsupportedOperationException || e.getCause().getCause() instanceof UnsupportedOperationException] @AT@ 72954 @LENGTH@ 62
------------------INS InfixExpression@@e.getCause() instanceof UnsupportedOperationException || e.getCause().getCause() instanceof UnsupportedOperationException @TO@ SimpleName@@MethodName:assertTrue:[exception instanceof UnsupportedOperationException] @AT@ 72910 @LENGTH@ 121
---------------------INS InstanceofExpression@@e.getCause() instanceof UnsupportedOperationException @TO@ InfixExpression@@e.getCause() instanceof UnsupportedOperationException || e.getCause().getCause() instanceof UnsupportedOperationException @AT@ 72910 @LENGTH@ 53
------------------------INS MethodInvocation@@e.getCause() @TO@ InstanceofExpression@@e.getCause() instanceof UnsupportedOperationException @AT@ 72910 @LENGTH@ 12
---------------------------INS SimpleName@@Name:e @TO@ MethodInvocation@@e.getCause() @AT@ 72910 @LENGTH@ 1
---------------------------INS SimpleName@@MethodName:getCause:[] @TO@ MethodInvocation@@e.getCause() @AT@ 72912 @LENGTH@ 10
------------------------MOV Instanceof@@instanceof @TO@ InstanceofExpression@@e.getCause() instanceof UnsupportedOperationException @AT@ 72975 @LENGTH@ 10
------------------------MOV SimpleType@@UnsupportedOperationException @TO@ InstanceofExpression@@e.getCause() instanceof UnsupportedOperationException @AT@ 72986 @LENGTH@ 29
---------------------INS Operator@@|| @TO@ InfixExpression@@e.getCause() instanceof UnsupportedOperationException || e.getCause().getCause() instanceof UnsupportedOperationException @AT@ 72963 @LENGTH@ 2
---------------------INS InstanceofExpression@@e.getCause().getCause() instanceof UnsupportedOperationException @TO@ InfixExpression@@e.getCause() instanceof UnsupportedOperationException || e.getCause().getCause() instanceof UnsupportedOperationException @AT@ 72967 @LENGTH@ 64
------------------------INS MethodInvocation@@e.getCause().getCause() @TO@ InstanceofExpression@@e.getCause().getCause() instanceof UnsupportedOperationException @AT@ 72967 @LENGTH@ 23
---------------------------INS MethodInvocation@@MethodName:getCause:[] @TO@ MethodInvocation@@e.getCause().getCause() @AT@ 72967 @LENGTH@ 12
---------------------------INS SimpleName@@Name:e @TO@ MethodInvocation@@e.getCause().getCause() @AT@ 72967 @LENGTH@ 1
---------------------------INS SimpleName@@MethodName:getCause:[] @TO@ MethodInvocation@@e.getCause().getCause() @AT@ 72980 @LENGTH@ 10
------------------------INS Instanceof@@instanceof @TO@ InstanceofExpression@@e.getCause().getCause() instanceof UnsupportedOperationException @AT@ 72991 @LENGTH@ 10
------------------------INS SimpleType@@UnsupportedOperationException @TO@ InstanceofExpression@@e.getCause().getCause() instanceof UnsupportedOperationException @AT@ 73002 @LENGTH@ 29
------------------DEL InstanceofExpression@@exception instanceof UnsupportedOperationException @AT@ 72965 @LENGTH@ 50
---------------------DEL SimpleName@@exception @AT@ 72965 @LENGTH@ 9


UPD ExpressionStatement@@MethodInvocation:assertThat(AuthorityUtils.authorityListToSet(ben.getAuthorities()).contains("PREFIX_DEVELOPERS")) @TO@ MethodInvocation:assertThat(AuthorityUtils.authorityListToSet(ben.getAuthorities())).contains("PREFIX_DEVELOPERS") @AT@ 4635 @LENGTH@ 103
---UPD MethodInvocation@@assertThat(AuthorityUtils.authorityListToSet(ben.getAuthorities()).contains("PREFIX_DEVELOPERS")) @TO@ assertThat(AuthorityUtils.authorityListToSet(ben.getAuthorities())).contains("PREFIX_DEVELOPERS") @AT@ 4635 @LENGTH@ 102
------DEL SimpleName@@MethodName:assertThat:[AuthorityUtils.authorityListToSet(ben.getAuthorities()).contains("PREFIX_DEVELOPERS")] @AT@ 4635 @LENGTH@ 102
---------DEL MethodInvocation@@AuthorityUtils.authorityListToSet(ben.getAuthorities()).contains("PREFIX_DEVELOPERS") @AT@ 4646 @LENGTH@ 90
------------DEL MethodInvocation@@MethodName:authorityListToSet:[ben.getAuthorities()] @AT@ 4646 @LENGTH@ 55
---------------DEL MethodInvocation@@ben.getAuthorities() @AT@ 4680 @LENGTH@ 20
------MOV SimpleName@@MethodName:contains:["PREFIX_DEVELOPERS"] @TO@ MethodInvocation@@assertThat(AuthorityUtils.authorityListToSet(ben.getAuthorities()).contains("PREFIX_DEVELOPERS")) @AT@ 4702 @LENGTH@ 34
------INS MethodInvocation@@MethodName:assertThat:[AuthorityUtils.authorityListToSet(ben.getAuthorities())] @TO@ MethodInvocation@@assertThat(AuthorityUtils.authorityListToSet(ben.getAuthorities()).contains("PREFIX_DEVELOPERS")) @AT@ 5191 @LENGTH@ 67
---------INS MethodInvocation@@AuthorityUtils.authorityListToSet(ben.getAuthorities()) @TO@ MethodInvocation@@MethodName:assertThat:[AuthorityUtils.authorityListToSet(ben.getAuthorities())] @AT@ 5202 @LENGTH@ 55
------------MOV SimpleName@@Name:AuthorityUtils @TO@ MethodInvocation@@AuthorityUtils.authorityListToSet(ben.getAuthorities()) @AT@ 4646 @LENGTH@ 14
------------INS SimpleName@@MethodName:authorityListToSet:[ben.getAuthorities()] @TO@ MethodInvocation@@AuthorityUtils.authorityListToSet(ben.getAuthorities()) @AT@ 5217 @LENGTH@ 40
---------------INS MethodInvocation@@ben.getAuthorities() @TO@ SimpleName@@MethodName:authorityListToSet:[ben.getAuthorities()] @AT@ 5236 @LENGTH@ 20
------------------MOV SimpleName@@Name:ben @TO@ MethodInvocation@@ben.getAuthorities() @AT@ 4680 @LENGTH@ 3
------------------MOV SimpleName@@MethodName:getAuthorities:[] @TO@ MethodInvocation@@ben.getAuthorities() @AT@ 4684 @LENGTH@ 16


UPD TypeDeclaration@@[@Configuration, @ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration"), public]DataFormatComponentAutoConfiguration,  @TO@ [@Configuration, @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration"), public]DataFormatComponentAutoConfiguration,  @AT@ 1456 @LENGTH@ 639
---UPD NormalAnnotation@@@ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1471 @LENGTH@ 79
---UPD NormalAnnotation@@@AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1551 @LENGTH@ 80


UPD ReturnStatement@@SuperMethodInvocation:super.getMapValueType() @TO@ SuperMethodInvocation:super.doGetMapValueType() @AT@ 2642 @LENGTH@ 31
---UPD SuperMethodInvocation@@super.getMapValueType() @TO@ super.doGetMapValueType() @AT@ 2649 @LENGTH@ 23
------UPD SimpleName@@MethodName:getMapValueType:[] @TO@ MethodName:doGetMapValueType:[] @AT@ 2655 @LENGTH@ 15


UPD TypeDeclaration@@[@Configuration, @ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration"), @EnableConfigurationProperties(NettyHttpComponentConfiguration.class), public]NettyHttpComponentAutoConfiguration,  @TO@ [@Configuration, @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration"), @EnableConfigurationProperties(NettyHttpComponentConfiguration.class), public]NettyHttpComponentAutoConfiguration,  @AT@ 1636 @LENGTH@ 2098
---UPD NormalAnnotation@@@ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1651 @LENGTH@ 79
---UPD NormalAnnotation@@@AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1731 @LENGTH@ 80


UPD ReturnStatement@@ClassInstanceCreation:new ServiceMetadata(metadataIdentificationString,aspectName,governorPhysicalTypeMetadata,entity,identifierType,readOnly,finders,repositoryCustomMetadata.getFindAllGlobalSearchMethod(),repositoryCustomMetadata.getReferencedFieldsFindAllMethods(),countByReferencedFieldMethods,countMethods) @TO@ ClassInstanceCreation:new ServiceMetadata(metadataIdentificationString,aspectName,governorPhysicalTypeMetadata,entity,identifierType,readOnly,finders,repositoryCustomMetadata.getCurrentFindAllGlobalSearchMethod(),repositoryCustomMetadata.getReferencedFieldsFindAllMethods(),countByReferencedFieldMethods,countMethods) @AT@ 12838 @LENGTH@ 338
---UPD ClassInstanceCreation@@ServiceMetadata[metadataIdentificationString, aspectName, governorPhysicalTypeMetadata, entity, identifierType, readOnly, finders, repositoryCustomMetadata.getFindAllGlobalSearchMethod(), repositoryCustomMetadata.getReferencedFieldsFindAllMethods(), countByReferencedFieldMethods, countMethods] @TO@ ServiceMetadata[metadataIdentificationString, aspectName, governorPhysicalTypeMetadata, entity, identifierType, readOnly, finders, repositoryCustomMetadata.getCurrentFindAllGlobalSearchMethod(), repositoryCustomMetadata.getReferencedFieldsFindAllMethods(), countByReferencedFieldMethods, countMethods] @AT@ 12845 @LENGTH@ 330
------UPD MethodInvocation@@repositoryCustomMetadata.getFindAllGlobalSearchMethod() @TO@ repositoryCustomMetadata.getCurrentFindAllGlobalSearchMethod() @AT@ 12996 @LENGTH@ 55
---------UPD SimpleName@@MethodName:getFindAllGlobalSearchMethod:[] @TO@ MethodName:getCurrentFindAllGlobalSearchMethod:[] @AT@ 13021 @LENGTH@ 30


UPD TypeDeclaration@@[@Configuration, @ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration"), public]CMISComponentAutoConfiguration,  @TO@ [@Configuration, @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration"), public]CMISComponentAutoConfiguration,  @AT@ 1438 @LENGTH@ 596
---UPD NormalAnnotation@@@ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1453 @LENGTH@ 79
---UPD NormalAnnotation@@@AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1533 @LENGTH@ 80


UPD IfStatement@@if (BlockingQueueConsumer.this.abortStarted > 0) {  BlockingQueueConsumer.this.queue.offer(new Delivery(consumerTag,envelope,properties,body),BlockingQueueConsumer.this.shutdownTimeout,TimeUnit.MILLISECONDS);} else {  BlockingQueueConsumer.this.queue.put(new Delivery(consumerTag,envelope,properties,body));} @TO@ if (BlockingQueueConsumer.this.abortStarted > 0) {  if (!BlockingQueueConsumer.this.queue.offer(new Delivery(consumerTag,envelope,properties,body),BlockingQueueConsumer.this.shutdownTimeout,TimeUnit.MILLISECONDS)) {  }} else {  BlockingQueueConsumer.this.queue.put(new Delivery(consumerTag,envelope,properties,body));} @AT@ 26863 @LENGTH@ 345
---UPD Block@@ThenBody:{  BlockingQueueConsumer.this.queue.offer(new Delivery(consumerTag,envelope,properties,body),BlockingQueueConsumer.this.shutdownTimeout,TimeUnit.MILLISECONDS);} @TO@ ThenBody:{  if (!BlockingQueueConsumer.this.queue.offer(new Delivery(consumerTag,envelope,properties,body),BlockingQueueConsumer.this.shutdownTimeout,TimeUnit.MILLISECONDS)) {  }} @AT@ 26912 @LENGTH@ 181
------INS IfStatement@@if (!BlockingQueueConsumer.this.queue.offer(new Delivery(consumerTag,envelope,properties,body),BlockingQueueConsumer.this.shutdownTimeout,TimeUnit.MILLISECONDS)) {} @TO@ Block@@ThenBody:{  BlockingQueueConsumer.this.queue.offer(new Delivery(consumerTag,envelope,properties,body),BlockingQueueConsumer.this.shutdownTimeout,TimeUnit.MILLISECONDS);} @AT@ 26919 @LENGTH@ 222
---------INS PrefixExpression@@!BlockingQueueConsumer.this.queue.offer(new Delivery(consumerTag,envelope,properties,body),BlockingQueueConsumer.this.shutdownTimeout,TimeUnit.MILLISECONDS) @TO@ IfStatement@@if (!BlockingQueueConsumer.this.queue.offer(new Delivery(consumerTag,envelope,properties,body),BlockingQueueConsumer.this.shutdownTimeout,TimeUnit.MILLISECONDS)) {} @AT@ 26923 @LENGTH@ 168
------------MOV MethodInvocation@@BlockingQueueConsumer.this.queue.offer(new Delivery(consumerTag,envelope,properties,body),BlockingQueueConsumer.this.shutdownTimeout,TimeUnit.MILLISECONDS) @TO@ PrefixExpression@@!BlockingQueueConsumer.this.queue.offer(new Delivery(consumerTag,envelope,properties,body),BlockingQueueConsumer.this.shutdownTimeout,TimeUnit.MILLISECONDS) @AT@ 26919 @LENGTH@ 167
------------INS Operator@@! @TO@ PrefixExpression@@!BlockingQueueConsumer.this.queue.offer(new Delivery(consumerTag,envelope,properties,body),BlockingQueueConsumer.this.shutdownTimeout,TimeUnit.MILLISECONDS) @AT@ 26923 @LENGTH@ 1
---------INS Block@@ThenBody:{} @TO@ IfStatement@@if (!BlockingQueueConsumer.this.queue.offer(new Delivery(consumerTag,envelope,properties,body),BlockingQueueConsumer.this.shutdownTimeout,TimeUnit.MILLISECONDS)) {} @AT@ 27093 @LENGTH@ 48
------DEL ExpressionStatement@@MethodInvocation:BlockingQueueConsumer.this.queue.offer(new Delivery(consumerTag,envelope,properties,body),BlockingQueueConsumer.this.shutdownTimeout,TimeUnit.MILLISECONDS) @AT@ 26919 @LENGTH@ 168


UPD TypeDeclaration@@[@Configuration, @ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration"), @EnableConfigurationProperties(OgnlLanguageConfiguration.class), public]OgnlLanguageAutoConfiguration,  @TO@ [@Configuration, @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration"), @EnableConfigurationProperties(OgnlLanguageConfiguration.class), public]OgnlLanguageAutoConfiguration,  @AT@ 1659 @LENGTH@ 1067
---UPD NormalAnnotation@@@ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1674 @LENGTH@ 79
---UPD NormalAnnotation@@@AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1754 @LENGTH@ 80


INS ExpressionStatement@@MethodInvocation:builder.append("(.*\\s+)?") @TO@ Initializer@@Initializer @AT@ 5576 @LENGTH@ 28
---INS MethodInvocation@@builder.append("(.*\\s+)?") @TO@ ExpressionStatement@@MethodInvocation:builder.append("(.*\\s+)?") @AT@ 5576 @LENGTH@ 27
------INS SimpleName@@Name:builder @TO@ MethodInvocation@@builder.append("(.*\\s+)?") @AT@ 5576 @LENGTH@ 7
------INS SimpleName@@MethodName:append:["(.*\\s+)?"] @TO@ MethodInvocation@@builder.append("(.*\\s+)?") @AT@ 5584 @LENGTH@ 19
---------INS StringLiteral@@"(.*\\s+)?" @TO@ SimpleName@@MethodName:append:["(.*\\s+)?"] @AT@ 5591 @LENGTH@ 11


UPD VariableDeclarationStatement@@int cmdResult=ctx.getDefaultCommandCompleter().complete(ctx,cmd,0,candidates); @TO@ int cmdResult=ctx.getDefaultCommandCompleter().complete(ctx,cmd,cmd.length(),candidates); @AT@ 3105 @LENGTH@ 83
---UPD VariableDeclarationFragment@@cmdResult=ctx.getDefaultCommandCompleter().complete(ctx,cmd,0,candidates) @TO@ cmdResult=ctx.getDefaultCommandCompleter().complete(ctx,cmd,cmd.length(),candidates) @AT@ 3109 @LENGTH@ 78
------UPD MethodInvocation@@ctx.getDefaultCommandCompleter().complete(ctx,cmd,0,candidates) @TO@ ctx.getDefaultCommandCompleter().complete(ctx,cmd,cmd.length(),candidates) @AT@ 3121 @LENGTH@ 66
---------UPD SimpleName@@MethodName:complete:[ctx, cmd, 0, candidates] @TO@ MethodName:complete:[ctx, cmd, cmd.length(), candidates] @AT@ 3154 @LENGTH@ 33
------------INS MethodInvocation@@cmd.length() @TO@ SimpleName@@MethodName:complete:[ctx, cmd, 0, candidates] @AT@ 3173 @LENGTH@ 12
---------------INS SimpleName@@Name:cmd @TO@ MethodInvocation@@cmd.length() @AT@ 3173 @LENGTH@ 3
---------------INS SimpleName@@MethodName:length:[] @TO@ MethodInvocation@@cmd.length() @AT@ 3177 @LENGTH@ 8
------------DEL NumberLiteral@@0 @AT@ 3173 @LENGTH@ 1


UPD MethodDeclaration@@AdvertisemetHandle, MethodName:advertise, String name,  @TO@ AdvertisementHandle, MethodName:advertise, String name,  @AT@ 1203 @LENGTH@ 23
---UPD SimpleType@@AdvertisemetHandle @TO@ AdvertisementHandle @AT@ 1184 @LENGTH@ 18


UPD TypeDeclaration@@[@Configuration, @ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration"), @EnableConfigurationProperties(XsltComponentConfiguration.class), public]XsltComponentAutoConfiguration,  @TO@ [@Configuration, @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration"), @EnableConfigurationProperties(XsltComponentConfiguration.class), public]XsltComponentAutoConfiguration,  @AT@ 1619 @LENGTH@ 2039
---UPD NormalAnnotation@@@ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1634 @LENGTH@ 79
---UPD NormalAnnotation@@@AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1714 @LENGTH@ 80


UPD ExpressionStatement@@MethodInvocation:assertThat(decoded[0]).isEqualTo("name") @TO@ MethodInvocation:assertThat(decoded[0]).isEqualTo("name:with:colon") @AT@ 4102 @LENGTH@ 41
---UPD MethodInvocation@@assertThat(decoded[0]).isEqualTo("name") @TO@ assertThat(decoded[0]).isEqualTo("name:with:colon") @AT@ 4102 @LENGTH@ 40
------UPD SimpleName@@MethodName:isEqualTo:["name"] @TO@ MethodName:isEqualTo:["name:with:colon"] @AT@ 4125 @LENGTH@ 17
---------UPD StringLiteral@@"name" @TO@ "name:with:colon" @AT@ 4135 @LENGTH@ 6


UPD ExpressionStatement@@MethodInvocation:Utilities.handleMmTableFinalPath(outputDir.getParent(),null,hconf,success,dpLevels,lbLevels,null,mmWriteId,reporter) @TO@ MethodInvocation:Utilities.handleMmTableFinalPath(outputDir.getParent(),null,hconf,success,dpLevels,lbLevels,null,mmWriteId,reporter,false) @AT@ 11561 @LENGTH@ 137
---UPD MethodInvocation@@Utilities.handleMmTableFinalPath(outputDir.getParent(),null,hconf,success,dpLevels,lbLevels,null,mmWriteId,reporter) @TO@ Utilities.handleMmTableFinalPath(outputDir.getParent(),null,hconf,success,dpLevels,lbLevels,null,mmWriteId,reporter,false) @AT@ 11561 @LENGTH@ 136
------UPD SimpleName@@MethodName:handleMmTableFinalPath:[outputDir.getParent(), null, hconf, success, dpLevels, lbLevels, null, mmWriteId, reporter] @TO@ MethodName:handleMmTableFinalPath:[outputDir.getParent(), null, hconf, success, dpLevels, lbLevels, null, mmWriteId, reporter, false] @AT@ 11571 @LENGTH@ 126
---------INS BooleanLiteral@@false @TO@ SimpleName@@MethodName:handleMmTableFinalPath:[outputDir.getParent(), null, hconf, success, dpLevels, lbLevels, null, mmWriteId, reporter] @AT@ 11681 @LENGTH@ 5


UPD TypeDeclaration@@[@Configuration, @ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration"), @EnableConfigurationProperties(GangliaComponentConfiguration.class), public]GangliaComponentAutoConfiguration,  @TO@ [@Configuration, @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration"), @EnableConfigurationProperties(GangliaComponentConfiguration.class), public]GangliaComponentAutoConfiguration,  @AT@ 1628 @LENGTH@ 2079
---UPD NormalAnnotation@@@ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1643 @LENGTH@ 79
---UPD NormalAnnotation@@@AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1723 @LENGTH@ 80


DEL MethodDeclaration@@public, void, MethodName:reInitAfterClose,  @AT@ 1444 @LENGTH@ 105
---DEL Modifier@@public @AT@ 1444 @LENGTH@ 6
---DEL PrimitiveType@@void @AT@ 1451 @LENGTH@ 4
---DEL SimpleName@@MethodName:reInitAfterClose @AT@ 1456 @LENGTH@ 16
---DEL ExpressionStatement@@MethodInvocation:System.err.println("reInitAfterClose() Causes JVM crash") @AT@ 1485 @LENGTH@ 58
------DEL MethodInvocation@@System.err.println("reInitAfterClose() Causes JVM crash") @AT@ 1485 @LENGTH@ 57
---------DEL QualifiedName@@Name:System.err @AT@ 1485 @LENGTH@ 10
---------DEL SimpleName@@MethodName:println:["reInitAfterClose() Causes JVM crash"] @AT@ 1496 @LENGTH@ 46
------------DEL StringLiteral@@"reInitAfterClose() Causes JVM crash" @AT@ 1504 @LENGTH@ 37


UPD ExpressionStatement@@MethodInvocation:inputSource.setParameterValues(Collections.singletonMap("name",(Object)"bar%")) @TO@ MethodInvocation:inputSource.setParameterValues(Collections.singletonMap("name","bar%")) @AT@ 1852 @LENGTH@ 81
---UPD MethodInvocation@@inputSource.setParameterValues(Collections.singletonMap("name",(Object)"bar%")) @TO@ inputSource.setParameterValues(Collections.singletonMap("name","bar%")) @AT@ 1852 @LENGTH@ 80
------UPD SimpleName@@MethodName:setParameterValues:[Collections.singletonMap("name",(Object)"bar%")] @TO@ MethodName:setParameterValues:[Collections.singletonMap("name","bar%")] @AT@ 1864 @LENGTH@ 68
---------UPD MethodInvocation@@Collections.singletonMap("name",(Object)"bar%") @TO@ Collections.singletonMap("name","bar%") @AT@ 1883 @LENGTH@ 48
------------UPD SimpleName@@MethodName:singletonMap:["name", (Object)"bar%"] @TO@ MethodName:singletonMap:["name", "bar%"] @AT@ 1895 @LENGTH@ 36
---------------INS StringLiteral@@"bar%" @TO@ SimpleName@@MethodName:singletonMap:["name", (Object)"bar%"] @AT@ 1913 @LENGTH@ 6
---------------DEL CastExpression@@(Object)"bar%" @AT@ 1916 @LENGTH@ 14
------------------DEL SimpleType@@Object @AT@ 1917 @LENGTH@ 6
------------------DEL StringLiteral@@"bar%" @AT@ 1924 @LENGTH@ 6


UPD ExpressionStatement@@MethodInvocation:assertThat(AuthorityUtils.authorityListToSet(user.getAuthorities()).contains("ROLE_X")) @TO@ MethodInvocation:assertThat(AuthorityUtils.authorityListToSet(user.getAuthorities())).contains("ROLE_X") @AT@ 2498 @LENGTH@ 93
---UPD MethodInvocation@@assertThat(AuthorityUtils.authorityListToSet(user.getAuthorities()).contains("ROLE_X")) @TO@ assertThat(AuthorityUtils.authorityListToSet(user.getAuthorities())).contains("ROLE_X") @AT@ 2498 @LENGTH@ 92
------DEL SimpleName@@MethodName:assertThat:[AuthorityUtils.authorityListToSet(user.getAuthorities()).contains("ROLE_X")] @AT@ 2498 @LENGTH@ 92
---------DEL MethodInvocation@@AuthorityUtils.authorityListToSet(user.getAuthorities()).contains("ROLE_X") @AT@ 2509 @LENGTH@ 80
------------DEL MethodInvocation@@MethodName:authorityListToSet:[user.getAuthorities()] @AT@ 2509 @LENGTH@ 56
---------------DEL MethodInvocation@@user.getAuthorities() @AT@ 2543 @LENGTH@ 21
------INS MethodInvocation@@MethodName:assertThat:[AuthorityUtils.authorityListToSet(user.getAuthorities())] @TO@ MethodInvocation@@assertThat(AuthorityUtils.authorityListToSet(user.getAuthorities()).contains("ROLE_X")) @AT@ 2524 @LENGTH@ 68
---------INS MethodInvocation@@AuthorityUtils.authorityListToSet(user.getAuthorities()) @TO@ MethodInvocation@@MethodName:assertThat:[AuthorityUtils.authorityListToSet(user.getAuthorities())] @AT@ 2535 @LENGTH@ 56
------------MOV SimpleName@@Name:AuthorityUtils @TO@ MethodInvocation@@AuthorityUtils.authorityListToSet(user.getAuthorities()) @AT@ 2509 @LENGTH@ 14
------------INS SimpleName@@MethodName:authorityListToSet:[user.getAuthorities()] @TO@ MethodInvocation@@AuthorityUtils.authorityListToSet(user.getAuthorities()) @AT@ 2550 @LENGTH@ 41
---------------INS MethodInvocation@@user.getAuthorities() @TO@ SimpleName@@MethodName:authorityListToSet:[user.getAuthorities()] @AT@ 2569 @LENGTH@ 21
------------------MOV SimpleName@@Name:user @TO@ MethodInvocation@@user.getAuthorities() @AT@ 2543 @LENGTH@ 4
------------------MOV SimpleName@@MethodName:getAuthorities:[] @TO@ MethodInvocation@@user.getAuthorities() @AT@ 2548 @LENGTH@ 16
------MOV SimpleName@@MethodName:contains:["ROLE_X"] @TO@ MethodInvocation@@assertThat(AuthorityUtils.authorityListToSet(user.getAuthorities()).contains("ROLE_X")) @AT@ 2566 @LENGTH@ 23


UPD ExpressionStatement@@MethodInvocation:amqpProperties.setUserId("test.userId") @TO@ MethodInvocation:amqpProperties.setReceivedUserId("test.userId") @AT@ 6027 @LENGTH@ 40
---UPD MethodInvocation@@amqpProperties.setUserId("test.userId") @TO@ amqpProperties.setReceivedUserId("test.userId") @AT@ 6027 @LENGTH@ 39
------UPD SimpleName@@MethodName:setUserId:["test.userId"] @TO@ MethodName:setReceivedUserId:["test.userId"] @AT@ 6042 @LENGTH@ 24


UPD TypeDeclaration@@[@ConfigurationProperties(prefix="camel.dataformat.yaml"), public]SnakeYAMLDataFormatConfiguration,  @TO@ [@ConfigurationProperties(prefix="camel.dataformat.yaml-snakeyaml"), public]SnakeYAMLDataFormatConfiguration,  @AT@ 1165 @LENGTH@ 2562
---UPD NormalAnnotation@@@ConfigurationProperties(prefix="camel.dataformat.yaml") @TO@ @ConfigurationProperties(prefix="camel.dataformat.yaml-snakeyaml") @AT@ 1165 @LENGTH@ 58


UPD TypeDeclaration@@[@Configuration, @ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration"), public]CMComponentAutoConfiguration,  @TO@ [@Configuration, @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration"), public]CMComponentAutoConfiguration,  @AT@ 1432 @LENGTH@ 586
---UPD NormalAnnotation@@@ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1447 @LENGTH@ 79
---UPD NormalAnnotation@@@AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1527 @LENGTH@ 80


INS IfStatement@@if (isSolaris()) {  makeLog();  makeLog();} @TO@ MethodDeclaration@@protected, void, MethodName:makeLog_syslogIsOffline, Exception,  @AT@ 8351 @LENGTH@ 74
---INS MethodInvocation@@MethodName:isSolaris:[] @TO@ IfStatement@@if (isSolaris()) {  makeLog();  makeLog();} @AT@ 8355 @LENGTH@ 11
---INS Block@@ThenBody:{  makeLog();  makeLog();} @TO@ IfStatement@@if (isSolaris()) {  makeLog();  makeLog();} @AT@ 8368 @LENGTH@ 57
------INS ExpressionStatement@@MethodInvocation:makeLog() @TO@ Block@@ThenBody:{  makeLog();  makeLog();} @AT@ 8382 @LENGTH@ 10
---------INS MethodInvocation@@MethodName:makeLog:[] @TO@ ExpressionStatement@@MethodInvocation:makeLog() @AT@ 8382 @LENGTH@ 9
------INS ExpressionStatement@@MethodInvocation:makeLog() @TO@ Block@@ThenBody:{  makeLog();  makeLog();} @AT@ 8405 @LENGTH@ 10
---------INS MethodInvocation@@MethodName:makeLog:[] @TO@ ExpressionStatement@@MethodInvocation:makeLog() @AT@ 8405 @LENGTH@ 9


UPD ExpressionStatement@@MethodInvocation:viewGenerationService.addFinderListView(this.controller.getType().getModule(),formBeanDetails,finderMethod.getMethodName().getSymbolName(),fieldsToAdd,ctx) @TO@ MethodInvocation:viewGenerationService.addFinderListView(this.controller.getType().getModule(),entityDetails,finderMethod.getMethodName().getSymbolName(),ctx) @AT@ 13353 @LENGTH@ 172
---UPD MethodInvocation@@viewGenerationService.addFinderListView(this.controller.getType().getModule(),formBeanDetails,finderMethod.getMethodName().getSymbolName(),fieldsToAdd,ctx) @TO@ viewGenerationService.addFinderListView(this.controller.getType().getModule(),entityDetails,finderMethod.getMethodName().getSymbolName(),ctx) @AT@ 13353 @LENGTH@ 171
------UPD SimpleName@@MethodName:addFinderListView:[this.controller.getType().getModule(), formBeanDetails, finderMethod.getMethodName().getSymbolName(), fieldsToAdd, ctx] @TO@ MethodName:addFinderListView:[this.controller.getType().getModule(), entityDetails, finderMethod.getMethodName().getSymbolName(), ctx] @AT@ 13375 @LENGTH@ 149
---------UPD SimpleName@@formBeanDetails @TO@ entityDetails @AT@ 13444 @LENGTH@ 15
---------DEL SimpleName@@fieldsToAdd @AT@ 13507 @LENGTH@ 11


INS MethodDeclaration@@public, static, void, MethodName:beforeClass,  @TO@ TypeDeclaration@@[@ContextConfiguration(classes={MoviesContext.class}), @RunWith(SpringJUnit4ClassRunner.class), @DirtiesContext, public]DerivedQueryIT, MultiDriverTestClass @AT@ 2883 @LENGTH@ 88
---INS Modifier@@public @TO@ MethodDeclaration@@public, static, void, MethodName:beforeClass,  @AT@ 2883 @LENGTH@ 6
---INS Modifier@@static @TO@ MethodDeclaration@@public, static, void, MethodName:beforeClass,  @AT@ 2890 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, static, void, MethodName:beforeClass,  @AT@ 2897 @LENGTH@ 4
---INS SimpleName@@MethodName:beforeClass @TO@ MethodDeclaration@@public, static, void, MethodName:beforeClass,  @AT@ 2902 @LENGTH@ 11
---INS ExpressionStatement@@Assignment:graphDatabaseService=getGraphDatabaseService() @TO@ MethodDeclaration@@public, static, void, MethodName:beforeClass,  @AT@ 2919 @LENGTH@ 49
------INS Assignment@@graphDatabaseService=getGraphDatabaseService() @TO@ ExpressionStatement@@Assignment:graphDatabaseService=getGraphDatabaseService() @AT@ 2919 @LENGTH@ 48
---------INS SimpleName@@graphDatabaseService @TO@ Assignment@@graphDatabaseService=getGraphDatabaseService() @AT@ 2919 @LENGTH@ 20
---------INS Operator@@= @TO@ Assignment@@graphDatabaseService=getGraphDatabaseService() @AT@ 2939 @LENGTH@ 1
---------INS MethodInvocation@@MethodName:getGraphDatabaseService:[] @TO@ Assignment@@graphDatabaseService=getGraphDatabaseService() @AT@ 2942 @LENGTH@ 25


UPD TypeDeclaration@@[@Configuration, @ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration"), public]RouteboxComponentAutoConfiguration,  @TO@ [@Configuration, @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration"), public]RouteboxComponentAutoConfiguration,  @AT@ 1450 @LENGTH@ 625
---UPD NormalAnnotation@@@ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1465 @LENGTH@ 79
---UPD NormalAnnotation@@@AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1545 @LENGTH@ 80


UPD IfStatement@@if (overrideDeploymentConfig) {  final Map<String,String> mechanismConfiguration=baseConfiguration;  availableMechanisms.forEach(n -> selectedMechanisms.put(n,mechanismConfiguration));} else {  final List<AuthMethodConfig> authMethods=loginConfig == null ? Collections.<AuthMethodConfig>emptyList() : loginConfig.getAuthMethods();  if (authMethods.isEmpty()) {    throw ROOT_LOGGER.noMechanismsSelected();  }  authMethods.forEach(c -> {    String name=c.getName();    if (availableMechanisms.contains(name) == false) {      throw ROOT_LOGGER.requiredMechanismNotAvailable(name);    }    Map<String,String> mechanismConfiguration;    Map<String,String> additionalProperties=c.getProperties();    if (additionalProperties != null) {      mechanismConfiguration=new HashMap<>(baseConfiguration);      mechanismConfiguration.putAll(additionalProperties);      mechanismConfiguration=Collections.unmodifiableMap(mechanismConfiguration);    } else {      mechanismConfiguration=baseConfiguration;    }    selectedMechanisms.put(name,mechanismConfiguration);  });} @TO@ if (overrideDeploymentConfig || (loginConfig == null)) {  final Map<String,String> mechanismConfiguration=baseConfiguration;  availableMechanisms.forEach(n -> selectedMechanisms.put(n,mechanismConfiguration));} else {  final List<AuthMethodConfig> authMethods=loginConfig.getAuthMethods();  if (authMethods.isEmpty()) {    throw ROOT_LOGGER.noMechanismsSelected();  }  authMethods.forEach(c -> {    String name=c.getName();    if (availableMechanisms.contains(name) == false) {      throw ROOT_LOGGER.requiredMechanismNotAvailable(name);    }    Map<String,String> mechanismConfiguration;    Map<String,String> additionalProperties=c.getProperties();    if (additionalProperties != null) {      mechanismConfiguration=new HashMap<>(baseConfiguration);      mechanismConfiguration.putAll(additionalProperties);      mechanismConfiguration=Collections.unmodifiableMap(mechanismConfiguration);    } else {      mechanismConfiguration=baseConfiguration;    }    selectedMechanisms.put(name,mechanismConfiguration);  });} @AT@ 16572 @LENGTH@ 1474
---INS InfixExpression@@overrideDeploymentConfig || (loginConfig == null) @TO@ IfStatement@@if (overrideDeploymentConfig) {  final Map<String,String> mechanismConfiguration=baseConfiguration;  availableMechanisms.forEach(n -> selectedMechanisms.put(n,mechanismConfiguration));} else {  final List<AuthMethodConfig> authMethods=loginConfig == null ? Collections.<AuthMethodConfig>emptyList() : loginConfig.getAuthMethods();  if (authMethods.isEmpty()) {    throw ROOT_LOGGER.noMechanismsSelected();  }  authMethods.forEach(c -> {    String name=c.getName();    if (availableMechanisms.contains(name) == false) {      throw ROOT_LOGGER.requiredMechanismNotAvailable(name);    }    Map<String,String> mechanismConfiguration;    Map<String,String> additionalProperties=c.getProperties();    if (additionalProperties != null) {      mechanismConfiguration=new HashMap<>(baseConfiguration);      mechanismConfiguration.putAll(additionalProperties);      mechanismConfiguration=Collections.unmodifiableMap(mechanismConfiguration);    } else {      mechanismConfiguration=baseConfiguration;    }    selectedMechanisms.put(name,mechanismConfiguration);  });} @AT@ 16576 @LENGTH@ 49
------INS SimpleName@@overrideDeploymentConfig @TO@ InfixExpression@@overrideDeploymentConfig || (loginConfig == null) @AT@ 16576 @LENGTH@ 24
------INS Operator@@|| @TO@ InfixExpression@@overrideDeploymentConfig || (loginConfig == null) @AT@ 16600 @LENGTH@ 2
------INS ParenthesizedExpression@@(loginConfig == null) @TO@ InfixExpression@@overrideDeploymentConfig || (loginConfig == null) @AT@ 16604 @LENGTH@ 21
---------INS InfixExpression@@loginConfig == null @TO@ ParenthesizedExpression@@(loginConfig == null) @AT@ 16605 @LENGTH@ 19
------------INS SimpleName@@loginConfig @TO@ InfixExpression@@loginConfig == null @AT@ 16605 @LENGTH@ 11
------------INS Operator@@== @TO@ InfixExpression@@loginConfig == null @AT@ 16616 @LENGTH@ 2
------------INS NullLiteral@@null @TO@ InfixExpression@@loginConfig == null @AT@ 16620 @LENGTH@ 4
---DEL SimpleName@@overrideDeploymentConfig @AT@ 16576 @LENGTH@ 24
---UPD Block@@ElseBody:{  final List<AuthMethodConfig> authMethods=loginConfig == null ? Collections.<AuthMethodConfig>emptyList() : loginConfig.getAuthMethods();  if (authMethods.isEmpty()) {    throw ROOT_LOGGER.noMechanismsSelected();  }  authMethods.forEach(c -> {    String name=c.getName();    if (availableMechanisms.contains(name) == false) {      throw ROOT_LOGGER.requiredMechanismNotAvailable(name);    }    Map<String,String> mechanismConfiguration;    Map<String,String> additionalProperties=c.getProperties();    if (additionalProperties != null) {      mechanismConfiguration=new HashMap<>(baseConfiguration);      mechanismConfiguration.putAll(additionalProperties);      mechanismConfiguration=Collections.unmodifiableMap(mechanismConfiguration);    } else {      mechanismConfiguration=baseConfiguration;    }    selectedMechanisms.put(name,mechanismConfiguration);  });} @TO@ ElseBody:{  final List<AuthMethodConfig> authMethods=loginConfig.getAuthMethods();  if (authMethods.isEmpty()) {    throw ROOT_LOGGER.noMechanismsSelected();  }  authMethods.forEach(c -> {    String name=c.getName();    if (availableMechanisms.contains(name) == false) {      throw ROOT_LOGGER.requiredMechanismNotAvailable(name);    }    Map<String,String> mechanismConfiguration;    Map<String,String> additionalProperties=c.getProperties();    if (additionalProperties != null) {      mechanismConfiguration=new HashMap<>(baseConfiguration);      mechanismConfiguration.putAll(additionalProperties);      mechanismConfiguration=Collections.unmodifiableMap(mechanismConfiguration);    } else {      mechanismConfiguration=baseConfiguration;    }    selectedMechanisms.put(name,mechanismConfiguration);  });} @AT@ 16810 @LENGTH@ 1236
------UPD VariableDeclarationStatement@@final List<AuthMethodConfig> authMethods=loginConfig == null ? Collections.<AuthMethodConfig>emptyList() : loginConfig.getAuthMethods(); @TO@ final List<AuthMethodConfig> authMethods=loginConfig.getAuthMethods(); @AT@ 16828 @LENGTH@ 139
---------UPD VariableDeclarationFragment@@authMethods=loginConfig == null ? Collections.<AuthMethodConfig>emptyList() : loginConfig.getAuthMethods() @TO@ authMethods=loginConfig.getAuthMethods() @AT@ 16857 @LENGTH@ 109
------------DEL ConditionalExpression@@loginConfig == null ? Collections.<AuthMethodConfig>emptyList() : loginConfig.getAuthMethods() @AT@ 16871 @LENGTH@ 95
---------------DEL InfixExpression@@loginConfig == null @AT@ 16871 @LENGTH@ 19
------------------DEL SimpleName@@loginConfig @AT@ 16871 @LENGTH@ 11
------------------DEL Operator@@== @AT@ 16882 @LENGTH@ 2
------------------DEL NullLiteral@@null @AT@ 16886 @LENGTH@ 4
---------------DEL MethodInvocation@@Collections.<AuthMethodConfig>emptyList() @AT@ 16893 @LENGTH@ 42
------------------DEL SimpleName@@Name:Collections @AT@ 16893 @LENGTH@ 11
------------------DEL SimpleName@@MethodName:emptyList:[] @AT@ 16924 @LENGTH@ 11
---------------DEL MethodInvocation@@loginConfig.getAuthMethods() @AT@ 16938 @LENGTH@ 28
------------INS MethodInvocation@@loginConfig.getAuthMethods() @TO@ VariableDeclarationFragment@@authMethods=loginConfig == null ? Collections.<AuthMethodConfig>emptyList() : loginConfig.getAuthMethods() @AT@ 16896 @LENGTH@ 28
---------------MOV SimpleName@@Name:loginConfig @TO@ MethodInvocation@@loginConfig.getAuthMethods() @AT@ 16938 @LENGTH@ 11
---------------MOV SimpleName@@MethodName:getAuthMethods:[] @TO@ MethodInvocation@@loginConfig.getAuthMethods() @AT@ 16950 @LENGTH@ 16


UPD TypeDeclaration@@[@Configuration, @ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration"), public]DozerComponentAutoConfiguration,  @TO@ [@Configuration, @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration"), public]DozerComponentAutoConfiguration,  @AT@ 1441 @LENGTH@ 603
---UPD NormalAnnotation@@@ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1456 @LENGTH@ 79
---UPD NormalAnnotation@@@AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1536 @LENGTH@ 80


UPD FieldDeclaration@@private, static, Pattern, [rawPattern=Pattern.compile("RAW\\([^\\)]+\\)")] @TO@ private, static, final, Pattern, [RAW_PATTERN=Pattern.compile("RAW\\([^\\)]+\\)")] @AT@ 1501 @LENGTH@ 72
---INS Modifier@@final @TO@ FieldDeclaration@@private, static, Pattern, [rawPattern=Pattern.compile("RAW\\([^\\)]+\\)")] @AT@ 1516 @LENGTH@ 5
---UPD VariableDeclarationFragment@@rawPattern=Pattern.compile("RAW\\([^\\)]+\\)") @TO@ RAW_PATTERN=Pattern.compile("RAW\\([^\\)]+\\)") @AT@ 1524 @LENGTH@ 48
------UPD SimpleName@@rawPattern @TO@ RAW_PATTERN @AT@ 1524 @LENGTH@ 10


UPD ExpressionStatement@@MethodInvocation:session.purgeDatabase() @TO@ MethodInvocation:getGraphDatabaseService().execute("MATCH (n) OPTIONAL MATCH (n)-[r]-() DELETE r, n") @AT@ 2219 @LENGTH@ 24
---UPD MethodInvocation@@session.purgeDatabase() @TO@ getGraphDatabaseService().execute("MATCH (n) OPTIONAL MATCH (n)-[r]-() DELETE r, n") @AT@ 2219 @LENGTH@ 23
------INS MethodInvocation@@MethodName:getGraphDatabaseService:[] @TO@ MethodInvocation@@session.purgeDatabase() @AT@ 2180 @LENGTH@ 25
------DEL SimpleName@@Name:session @AT@ 2219 @LENGTH@ 7
------UPD SimpleName@@MethodName:purgeDatabase:[] @TO@ MethodName:execute:["MATCH (n) OPTIONAL MATCH (n)-[r]-() DELETE r, n"] @AT@ 2227 @LENGTH@ 15
---------INS StringLiteral@@"MATCH (n) OPTIONAL MATCH (n)-[r]-() DELETE r, n" @TO@ SimpleName@@MethodName:purgeDatabase:[] @AT@ 2214 @LENGTH@ 49


UPD FieldDeclaration@@private, static, GraphDatabaseService, [graphDatabaseService=getGraphDatabaseService()] @TO@ private, static, GraphDatabaseService, [graphDatabaseService] @AT@ 2496 @LENGTH@ 85
---UPD VariableDeclarationFragment@@graphDatabaseService=getGraphDatabaseService() @TO@ graphDatabaseService @AT@ 2532 @LENGTH@ 48
------DEL MethodInvocation@@MethodName:getGraphDatabaseService:[] @AT@ 2555 @LENGTH@ 25


UPD TypeDeclaration@@[@Configuration, @ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration"), @EnableConfigurationProperties(HazelcastComponentConfiguration.class), public]HazelcastComponentAutoConfiguration,  @TO@ [@Configuration, @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration"), @EnableConfigurationProperties(HazelcastComponentConfiguration.class), public]HazelcastComponentAutoConfiguration,  @AT@ 1634 @LENGTH@ 2097
---UPD NormalAnnotation@@@ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1649 @LENGTH@ 79
---UPD NormalAnnotation@@@AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1729 @LENGTH@ 80


UPD MethodDeclaration@@public, voidMethodName:MergeFileWork, List<Path> inputPaths, Path outputDir, boolean hasDynamicPartitions, String srcTblInputFormat,  @TO@ public, voidMethodName:MergeFileWork, List<Path> inputPaths, Path outputDir, boolean hasDynamicPartitions, String srcTblInputFormat, TableDesc tbl,  @AT@ 2692 @LENGTH@ 852
---INS SingleVariableDeclaration@@TableDesc tbl @TO@ MethodDeclaration@@public, voidMethodName:MergeFileWork, List<Path> inputPaths, Path outputDir, boolean hasDynamicPartitions, String srcTblInputFormat,  @AT@ 2840 @LENGTH@ 13
------INS SimpleType@@TableDesc @TO@ SingleVariableDeclaration@@TableDesc tbl @AT@ 2840 @LENGTH@ 9
------INS SimpleName@@tbl @TO@ SingleVariableDeclaration@@TableDesc tbl @AT@ 2850 @LENGTH@ 3
---INS ExpressionStatement@@MethodInvocation:partDesc.setTableDesc(tbl) @TO@ MethodDeclaration@@public, voidMethodName:MergeFileWork, List<Path> inputPaths, Path outputDir, boolean hasDynamicPartitions, String srcTblInputFormat,  @AT@ 3428 @LENGTH@ 27
------INS MethodInvocation@@partDesc.setTableDesc(tbl) @TO@ ExpressionStatement@@MethodInvocation:partDesc.setTableDesc(tbl) @AT@ 3428 @LENGTH@ 26
---------INS SimpleName@@Name:partDesc @TO@ MethodInvocation@@partDesc.setTableDesc(tbl) @AT@ 3428 @LENGTH@ 8
---------INS SimpleName@@MethodName:setTableDesc:[tbl] @TO@ MethodInvocation@@partDesc.setTableDesc(tbl) @AT@ 3437 @LENGTH@ 17
------------INS SimpleName@@tbl @TO@ SimpleName@@MethodName:setTableDesc:[tbl] @AT@ 3450 @LENGTH@ 3


UPD ForStatement@@for (int i=0; i < length; i++) {  PartitionDesc part=HiveFileFormatUtils.getPartitionDescFromPathRecursively(pathToPartitionInfo,paths[i + start],IOPrepareCache.get().allocatePartitionDescMap());  Class<? extends InputFormat> inputFormatClass=part.getInputFileFormatClass();  InputFormat<WritableComparable,Writable> inputFormat=getInputFormatFromCache(inputFormatClass,conf);  boolean isAvoidSplitCombine=inputFormat instanceof AvoidSplitCombination && ((AvoidSplitCombination)inputFormat).shouldSkipCombine(paths[i + start],conf);  boolean isMmTableNonMerge=!isMerge && MetaStoreUtils.isInsertOnlyTable(part.getTableDesc().getProperties());  if (isAvoidSplitCombine || isMmTableNonMerge) {    Utilities.LOG14535.info("The path [" + paths[i + start] + "] is being parked for HiveInputFormat.getSplits");    nonCombinablePathIndices.add(i + start);  }} @TO@ for (int i=0; i < length; i++) {  PartitionDesc part=HiveFileFormatUtils.getPartitionDescFromPathRecursively(pathToPartitionInfo,paths[i + start],IOPrepareCache.get().allocatePartitionDescMap());  Class<? extends InputFormat> inputFormatClass=part.getInputFileFormatClass();  InputFormat<WritableComparable,Writable> inputFormat=getInputFormatFromCache(inputFormatClass,conf);  boolean isAvoidSplitCombine=inputFormat instanceof AvoidSplitCombination && ((AvoidSplitCombination)inputFormat).shouldSkipCombine(paths[i + start],conf);  TableDesc tbl=part.getTableDesc();  boolean isMmNonMerge=false;  if (tbl != null) {    isMmNonMerge=!isMerge && MetaStoreUtils.isInsertOnlyTable(tbl.getProperties());  } else {    Utilities.LOG14535.warn("Assuming not insert-only; no table in partition spec " + part);  }  if (isAvoidSplitCombine || isMmNonMerge) {    Utilities.LOG14535.info("The path [" + paths[i + start] + "] is being parked for HiveInputFormat.getSplits");    nonCombinablePathIndices.add(i + start);  }} @AT@ 4109 @LENGTH@ 1320
---INS VariableDeclarationStatement@@TableDesc tbl=part.getTableDesc(); @TO@ ForStatement@@for (int i=0; i < length; i++) {  PartitionDesc part=HiveFileFormatUtils.getPartitionDescFromPathRecursively(pathToPartitionInfo,paths[i + start],IOPrepareCache.get().allocatePartitionDescMap());  Class<? extends InputFormat> inputFormatClass=part.getInputFileFormatClass();  InputFormat<WritableComparable,Writable> inputFormat=getInputFormatFromCache(inputFormatClass,conf);  boolean isAvoidSplitCombine=inputFormat instanceof AvoidSplitCombination && ((AvoidSplitCombination)inputFormat).shouldSkipCombine(paths[i + start],conf);  boolean isMmTableNonMerge=!isMerge && MetaStoreUtils.isInsertOnlyTable(part.getTableDesc().getProperties());  if (isAvoidSplitCombine || isMmTableNonMerge) {    Utilities.LOG14535.info("The path [" + paths[i + start] + "] is being parked for HiveInputFormat.getSplits");    nonCombinablePathIndices.add(i + start);  }} @AT@ 4820 @LENGTH@ 36
------INS SimpleType@@TableDesc @TO@ VariableDeclarationStatement@@TableDesc tbl=part.getTableDesc(); @AT@ 4820 @LENGTH@ 9
------INS VariableDeclarationFragment@@tbl=part.getTableDesc() @TO@ VariableDeclarationStatement@@TableDesc tbl=part.getTableDesc(); @AT@ 4830 @LENGTH@ 25
---------INS SimpleName@@tbl @TO@ VariableDeclarationFragment@@tbl=part.getTableDesc() @AT@ 4830 @LENGTH@ 3
---------INS MethodInvocation@@part.getTableDesc() @TO@ VariableDeclarationFragment@@tbl=part.getTableDesc() @AT@ 4836 @LENGTH@ 19
------------INS SimpleName@@Name:part @TO@ MethodInvocation@@part.getTableDesc() @AT@ 4836 @LENGTH@ 4
------------INS SimpleName@@MethodName:getTableDesc:[] @TO@ MethodInvocation@@part.getTableDesc() @AT@ 4841 @LENGTH@ 14
---INS VariableDeclarationStatement@@boolean isMmNonMerge=false; @TO@ ForStatement@@for (int i=0; i < length; i++) {  PartitionDesc part=HiveFileFormatUtils.getPartitionDescFromPathRecursively(pathToPartitionInfo,paths[i + start],IOPrepareCache.get().allocatePartitionDescMap());  Class<? extends InputFormat> inputFormatClass=part.getInputFileFormatClass();  InputFormat<WritableComparable,Writable> inputFormat=getInputFormatFromCache(inputFormatClass,conf);  boolean isAvoidSplitCombine=inputFormat instanceof AvoidSplitCombination && ((AvoidSplitCombination)inputFormat).shouldSkipCombine(paths[i + start],conf);  boolean isMmTableNonMerge=!isMerge && MetaStoreUtils.isInsertOnlyTable(part.getTableDesc().getProperties());  if (isAvoidSplitCombine || isMmTableNonMerge) {    Utilities.LOG14535.info("The path [" + paths[i + start] + "] is being parked for HiveInputFormat.getSplits");    nonCombinablePathIndices.add(i + start);  }} @AT@ 4865 @LENGTH@ 29
------INS VariableDeclarationFragment@@isMmNonMerge=false @TO@ VariableDeclarationStatement@@boolean isMmNonMerge=false; @AT@ 4873 @LENGTH@ 20
---------INS BooleanLiteral@@false @TO@ VariableDeclarationFragment@@isMmNonMerge=false @AT@ 4888 @LENGTH@ 5
---------MOV SimpleName@@isMmTableNonMerge @TO@ VariableDeclarationFragment@@isMmNonMerge=false @AT@ 4998 @LENGTH@ 17
------MOV PrimitiveType@@boolean @TO@ VariableDeclarationStatement@@boolean isMmNonMerge=false; @AT@ 4990 @LENGTH@ 7
---INS IfStatement@@if (tbl != null) {  isMmNonMerge=!isMerge && MetaStoreUtils.isInsertOnlyTable(tbl.getProperties());} else {  Utilities.LOG14535.warn("Assuming not insert-only; no table in partition spec " + part);} @TO@ ForStatement@@for (int i=0; i < length; i++) {  PartitionDesc part=HiveFileFormatUtils.getPartitionDescFromPathRecursively(pathToPartitionInfo,paths[i + start],IOPrepareCache.get().allocatePartitionDescMap());  Class<? extends InputFormat> inputFormatClass=part.getInputFileFormatClass();  InputFormat<WritableComparable,Writable> inputFormat=getInputFormatFromCache(inputFormatClass,conf);  boolean isAvoidSplitCombine=inputFormat instanceof AvoidSplitCombination && ((AvoidSplitCombination)inputFormat).shouldSkipCombine(paths[i + start],conf);  boolean isMmTableNonMerge=!isMerge && MetaStoreUtils.isInsertOnlyTable(part.getTableDesc().getProperties());  if (isAvoidSplitCombine || isMmTableNonMerge) {    Utilities.LOG14535.info("The path [" + paths[i + start] + "] is being parked for HiveInputFormat.getSplits");    nonCombinablePathIndices.add(i + start);  }} @AT@ 4903 @LENGTH@ 333
------INS InfixExpression@@tbl != null @TO@ IfStatement@@if (tbl != null) {  isMmNonMerge=!isMerge && MetaStoreUtils.isInsertOnlyTable(tbl.getProperties());} else {  Utilities.LOG14535.warn("Assuming not insert-only; no table in partition spec " + part);} @AT@ 4907 @LENGTH@ 11
---------INS SimpleName@@tbl @TO@ InfixExpression@@tbl != null @AT@ 4907 @LENGTH@ 3
---------INS Operator@@!= @TO@ InfixExpression@@tbl != null @AT@ 4910 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@tbl != null @AT@ 4914 @LENGTH@ 4
------INS Block@@ThenBody:{  isMmNonMerge=!isMerge && MetaStoreUtils.isInsertOnlyTable(tbl.getProperties());} @TO@ IfStatement@@if (tbl != null) {  isMmNonMerge=!isMerge && MetaStoreUtils.isInsertOnlyTable(tbl.getProperties());} else {  Utilities.LOG14535.warn("Assuming not insert-only; no table in partition spec " + part);} @AT@ 4920 @LENGTH@ 103
---------INS ExpressionStatement@@Assignment:isMmNonMerge=!isMerge && MetaStoreUtils.isInsertOnlyTable(tbl.getProperties()) @TO@ Block@@ThenBody:{  isMmNonMerge=!isMerge && MetaStoreUtils.isInsertOnlyTable(tbl.getProperties());} @AT@ 4932 @LENGTH@ 81
------------INS Assignment@@isMmNonMerge=!isMerge && MetaStoreUtils.isInsertOnlyTable(tbl.getProperties()) @TO@ ExpressionStatement@@Assignment:isMmNonMerge=!isMerge && MetaStoreUtils.isInsertOnlyTable(tbl.getProperties()) @AT@ 4932 @LENGTH@ 80
---------------INS SimpleName@@isMmNonMerge @TO@ Assignment@@isMmNonMerge=!isMerge && MetaStoreUtils.isInsertOnlyTable(tbl.getProperties()) @AT@ 4932 @LENGTH@ 12
---------------INS Operator@@= @TO@ Assignment@@isMmNonMerge=!isMerge && MetaStoreUtils.isInsertOnlyTable(tbl.getProperties()) @AT@ 4944 @LENGTH@ 1
---------------INS InfixExpression@@!isMerge && MetaStoreUtils.isInsertOnlyTable(tbl.getProperties()) @TO@ Assignment@@isMmNonMerge=!isMerge && MetaStoreUtils.isInsertOnlyTable(tbl.getProperties()) @AT@ 4947 @LENGTH@ 65
------------------MOV PrefixExpression@@!isMerge @TO@ InfixExpression@@!isMerge && MetaStoreUtils.isInsertOnlyTable(tbl.getProperties()) @AT@ 5018 @LENGTH@ 8
------------------MOV Operator@@&& @TO@ InfixExpression@@!isMerge && MetaStoreUtils.isInsertOnlyTable(tbl.getProperties()) @AT@ 5026 @LENGTH@ 2
------------------MOV MethodInvocation@@MetaStoreUtils.isInsertOnlyTable(part.getTableDesc().getProperties()) @TO@ InfixExpression@@!isMerge && MetaStoreUtils.isInsertOnlyTable(tbl.getProperties()) @AT@ 5042 @LENGTH@ 69
------INS Block@@ElseBody:{  Utilities.LOG14535.warn("Assuming not insert-only; no table in partition spec " + part);} @TO@ IfStatement@@if (tbl != null) {  isMmNonMerge=!isMerge && MetaStoreUtils.isInsertOnlyTable(tbl.getProperties());} else {  Utilities.LOG14535.warn("Assuming not insert-only; no table in partition spec " + part);} @AT@ 5029 @LENGTH@ 207
---------INS ExpressionStatement@@MethodInvocation:Utilities.LOG14535.warn("Assuming not insert-only; no table in partition spec " + part) @TO@ Block@@ElseBody:{  Utilities.LOG14535.warn("Assuming not insert-only; no table in partition spec " + part);} @AT@ 5138 @LENGTH@ 88
------------INS MethodInvocation@@Utilities.LOG14535.warn("Assuming not insert-only; no table in partition spec " + part) @TO@ ExpressionStatement@@MethodInvocation:Utilities.LOG14535.warn("Assuming not insert-only; no table in partition spec " + part) @AT@ 5138 @LENGTH@ 87
---------------INS QualifiedName@@Name:Utilities.LOG14535 @TO@ MethodInvocation@@Utilities.LOG14535.warn("Assuming not insert-only; no table in partition spec " + part) @AT@ 5138 @LENGTH@ 18
---------------INS SimpleName@@MethodName:warn:["Assuming not insert-only; no table in partition spec " + part] @TO@ MethodInvocation@@Utilities.LOG14535.warn("Assuming not insert-only; no table in partition spec " + part) @AT@ 5157 @LENGTH@ 68
------------------INS InfixExpression@@"Assuming not insert-only; no table in partition spec " + part @TO@ SimpleName@@MethodName:warn:["Assuming not insert-only; no table in partition spec " + part] @AT@ 5162 @LENGTH@ 62
---------------------INS StringLiteral@@"Assuming not insert-only; no table in partition spec " @TO@ InfixExpression@@"Assuming not insert-only; no table in partition spec " + part @AT@ 5162 @LENGTH@ 55
---------------------INS Operator@@+ @TO@ InfixExpression@@"Assuming not insert-only; no table in partition spec " + part @AT@ 5217 @LENGTH@ 1
---------------------INS SimpleName@@part @TO@ InfixExpression@@"Assuming not insert-only; no table in partition spec " + part @AT@ 5220 @LENGTH@ 4
---DEL VariableDeclarationStatement@@boolean isMmTableNonMerge=!isMerge && MetaStoreUtils.isInsertOnlyTable(part.getTableDesc().getProperties()); @AT@ 4990 @LENGTH@ 122
------DEL VariableDeclarationFragment@@isMmTableNonMerge=!isMerge && MetaStoreUtils.isInsertOnlyTable(part.getTableDesc().getProperties()) @AT@ 4998 @LENGTH@ 113
---------DEL InfixExpression@@!isMerge && MetaStoreUtils.isInsertOnlyTable(part.getTableDesc().getProperties()) @AT@ 5018 @LENGTH@ 93
---UPD IfStatement@@if (isAvoidSplitCombine || isMmTableNonMerge) {  Utilities.LOG14535.info("The path [" + paths[i + start] + "] is being parked for HiveInputFormat.getSplits");  nonCombinablePathIndices.add(i + start);} @TO@ if (isAvoidSplitCombine || isMmNonMerge) {  Utilities.LOG14535.info("The path [" + paths[i + start] + "] is being parked for HiveInputFormat.getSplits");  nonCombinablePathIndices.add(i + start);} @AT@ 5121 @LENGTH@ 300
------UPD InfixExpression@@isAvoidSplitCombine || isMmTableNonMerge @TO@ isAvoidSplitCombine || isMmNonMerge @AT@ 5125 @LENGTH@ 40
---------UPD SimpleName@@isMmTableNonMerge @TO@ isMmNonMerge @AT@ 5148 @LENGTH@ 17


UPD VariableDeclarationStatement@@String randomClassString=props.getProperty(configName) != null ? props.getProperty(configName,SECURE_RANDOM_CLASSES_DEFAULT) : System.getProperty(configName,SECURE_RANDOM_CLASSES_DEFAULT); @TO@ String randomClassString=props.getProperty(ConfigurationKeys.SECURE_RANDOM_CLASSES_KEY,SECURE_RANDOM_CLASSES_DEFAULT); @AT@ 6040 @LENGTH@ 217
---UPD VariableDeclarationFragment@@randomClassString=props.getProperty(configName) != null ? props.getProperty(configName,SECURE_RANDOM_CLASSES_DEFAULT) : System.getProperty(configName,SECURE_RANDOM_CLASSES_DEFAULT) @TO@ randomClassString=props.getProperty(ConfigurationKeys.SECURE_RANDOM_CLASSES_KEY,SECURE_RANDOM_CLASSES_DEFAULT) @AT@ 6047 @LENGTH@ 209
------INS MethodInvocation@@props.getProperty(ConfigurationKeys.SECURE_RANDOM_CLASSES_KEY,SECURE_RANDOM_CLASSES_DEFAULT) @TO@ VariableDeclarationFragment@@randomClassString=props.getProperty(configName) != null ? props.getProperty(configName,SECURE_RANDOM_CLASSES_DEFAULT) : System.getProperty(configName,SECURE_RANDOM_CLASSES_DEFAULT) @AT@ 5988 @LENGTH@ 93
---------MOV SimpleName@@Name:props @TO@ MethodInvocation@@props.getProperty(ConfigurationKeys.SECURE_RANDOM_CLASSES_KEY,SECURE_RANDOM_CLASSES_DEFAULT) @AT@ 6107 @LENGTH@ 5
---------MOV SimpleName@@MethodName:getProperty:[configName, SECURE_RANDOM_CLASSES_DEFAULT] @TO@ MethodInvocation@@props.getProperty(ConfigurationKeys.SECURE_RANDOM_CLASSES_KEY,SECURE_RANDOM_CLASSES_DEFAULT) @AT@ 6126 @LENGTH@ 54
------------INS QualifiedName@@ConfigurationKeys.SECURE_RANDOM_CLASSES_KEY @TO@ SimpleName@@MethodName:getProperty:[configName, SECURE_RANDOM_CLASSES_DEFAULT] @AT@ 6006 @LENGTH@ 43
---------------INS SimpleName@@ConfigurationKeys @TO@ QualifiedName@@ConfigurationKeys.SECURE_RANDOM_CLASSES_KEY @AT@ 6006 @LENGTH@ 17
---------------INS SimpleName@@SECURE_RANDOM_CLASSES_KEY @TO@ QualifiedName@@ConfigurationKeys.SECURE_RANDOM_CLASSES_KEY @AT@ 6024 @LENGTH@ 25
------------INS QualifiedName@@ConfigurationKeys.SECURE_RANDOM_CLASSES_KEY @TO@ SimpleName@@MethodName:getProperty:[configName, SECURE_RANDOM_CLASSES_DEFAULT] @AT@ 6006 @LENGTH@ 43
---------------INS SimpleName@@ConfigurationKeys @TO@ QualifiedName@@ConfigurationKeys.SECURE_RANDOM_CLASSES_KEY @AT@ 6006 @LENGTH@ 17
---------------INS SimpleName@@SECURE_RANDOM_CLASSES_KEY @TO@ QualifiedName@@ConfigurationKeys.SECURE_RANDOM_CLASSES_KEY @AT@ 6024 @LENGTH@ 25
------DEL ConditionalExpression@@props.getProperty(configName) != null ? props.getProperty(configName,SECURE_RANDOM_CLASSES_DEFAULT) : System.getProperty(configName,SECURE_RANDOM_CLASSES_DEFAULT) @AT@ 6067 @LENGTH@ 189
---------DEL InfixExpression@@props.getProperty(configName) != null @AT@ 6067 @LENGTH@ 37
------------DEL MethodInvocation@@props.getProperty(configName) @AT@ 6067 @LENGTH@ 29
---------------DEL SimpleName@@Name:props @AT@ 6067 @LENGTH@ 5
---------------DEL SimpleName@@MethodName:getProperty:[configName] @AT@ 6073 @LENGTH@ 23
------------------DEL SimpleName@@configName @AT@ 6085 @LENGTH@ 10
------------DEL Operator@@!= @AT@ 6096 @LENGTH@ 2
------------DEL NullLiteral@@null @AT@ 6100 @LENGTH@ 4
---------DEL MethodInvocation@@props.getProperty(configName,SECURE_RANDOM_CLASSES_DEFAULT) @AT@ 6107 @LENGTH@ 73
---------DEL MethodInvocation@@System.getProperty(configName,SECURE_RANDOM_CLASSES_DEFAULT) @AT@ 6195 @LENGTH@ 61
------------DEL SimpleName@@Name:System @AT@ 6195 @LENGTH@ 6
------------DEL SimpleName@@MethodName:getProperty:[configName, SECURE_RANDOM_CLASSES_DEFAULT] @AT@ 6202 @LENGTH@ 54
---------------DEL SimpleName@@configName @AT@ 6214 @LENGTH@ 10
---------------DEL SimpleName@@SECURE_RANDOM_CLASSES_DEFAULT @AT@ 6226 @LENGTH@ 29


UPD SuperConstructorInvocation@@super(resourceDefinition,xmlElementName,xmlWrapperElement,attributes,children,useValueAsElementName,noAddOperation,additionalOperationsGenerator);
 @TO@ super(resourceDefinition,xmlElementName,xmlWrapperElement,attributes,children,useValueAsElementName,noAddOperation,additionalOperationsGenerator,null);
 @AT@ 5154 @LENGTH@ 153
---INS NullLiteral@@null @TO@ SuperConstructorInvocation@@super(resourceDefinition,xmlElementName,xmlWrapperElement,attributes,children,useValueAsElementName,noAddOperation,additionalOperationsGenerator);
 @AT@ 5307 @LENGTH@ 4


UPD IfStatement@@if (this.connection.target == null) {  this.connection.target=super.createBareConnection();  if (!this.checkoutPermits.containsKey(this.connection)) {    this.checkoutPermits.put(this.connection,new Semaphore(this.channelCacheSize));  }  getConnectionListener().onCreate(this.connection);} @TO@ if (this.connection.target == null) {  this.connection.target=super.createBareConnection();  if (!this.checkoutPermits.containsKey(this.connection)) {    this.checkoutPermits.put(this.connection,new Semaphore(this.channelCacheSize));  }  this.connection.closeNotified.set(false);  getConnectionListener().onCreate(this.connection);} @AT@ 19695 @LENGTH@ 380
---UPD Block@@ThenBody:{  this.connection.target=super.createBareConnection();  if (!this.checkoutPermits.containsKey(this.connection)) {    this.checkoutPermits.put(this.connection,new Semaphore(this.channelCacheSize));  }  getConnectionListener().onCreate(this.connection);} @TO@ ThenBody:{  this.connection.target=super.createBareConnection();  if (!this.checkoutPermits.containsKey(this.connection)) {    this.checkoutPermits.put(this.connection,new Semaphore(this.channelCacheSize));  }  this.connection.closeNotified.set(false);  getConnectionListener().onCreate(this.connection);} @AT@ 19731 @LENGTH@ 344
------INS ExpressionStatement@@MethodInvocation:this.connection.closeNotified.set(false) @TO@ Block@@ThenBody:{  this.connection.target=super.createBareConnection();  if (!this.checkoutPermits.containsKey(this.connection)) {    this.checkoutPermits.put(this.connection,new Semaphore(this.channelCacheSize));  }  getConnectionListener().onCreate(this.connection);} @AT@ 20019 @LENGTH@ 41
---------INS MethodInvocation@@this.connection.closeNotified.set(false) @TO@ ExpressionStatement@@MethodInvocation:this.connection.closeNotified.set(false) @AT@ 20019 @LENGTH@ 40
------------INS FieldAccess@@this.connection.closeNotified @TO@ MethodInvocation@@this.connection.closeNotified.set(false) @AT@ 20019 @LENGTH@ 29
---------------INS FieldAccess@@this.connection @TO@ FieldAccess@@this.connection.closeNotified @AT@ 20019 @LENGTH@ 15
------------------INS ThisExpression@@this @TO@ FieldAccess@@this.connection @AT@ 20019 @LENGTH@ 4
------------------INS SimpleName@@connection @TO@ FieldAccess@@this.connection @AT@ 20024 @LENGTH@ 10
---------------INS SimpleName@@closeNotified @TO@ FieldAccess@@this.connection.closeNotified @AT@ 20035 @LENGTH@ 13
------------INS SimpleName@@MethodName:set:[false] @TO@ MethodInvocation@@this.connection.closeNotified.set(false) @AT@ 20049 @LENGTH@ 10
---------------INS BooleanLiteral@@false @TO@ SimpleName@@MethodName:set:[false] @AT@ 20053 @LENGTH@ 5


UPD TypeDeclaration@@[@Configuration, @ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration"), public]RefComponentAutoConfiguration,  @TO@ [@Configuration, @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration"), public]RefComponentAutoConfiguration,  @AT@ 1435 @LENGTH@ 589
---UPD NormalAnnotation@@@ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1450 @LENGTH@ 79
---UPD NormalAnnotation@@@AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1530 @LENGTH@ 80


UPD TypeDeclaration@@[@Configuration, @ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration"), @EnableConfigurationProperties(AMQPComponentConfiguration.class), public]AMQPComponentAutoConfiguration,  @TO@ [@Configuration, @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration"), @EnableConfigurationProperties(AMQPComponentConfiguration.class), public]AMQPComponentAutoConfiguration,  @AT@ 1619 @LENGTH@ 2039
---UPD NormalAnnotation@@@ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1634 @LENGTH@ 79
---UPD NormalAnnotation@@@AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1714 @LENGTH@ 80


UPD TypeDeclaration@@AdvertisementHandleImpl, [AdvertisemetHandle] @TO@ AdvertisementHandleImpl, [AdvertisementHandle] @AT@ 187 @LENGTH@ 419
---UPD SimpleType@@AdvertisemetHandle @TO@ AdvertisementHandle @AT@ 222 @LENGTH@ 18


UPD VariableDeclarationStatement@@String id=exchange1.getIn().getMandatoryBody(String.class); @TO@ Object id=exchange1.getIn().getMandatoryBody(); @AT@ 20652 @LENGTH@ 61
---UPD SimpleType@@String @TO@ Object @AT@ 20652 @LENGTH@ 6
---UPD VariableDeclarationFragment@@id=exchange1.getIn().getMandatoryBody(String.class) @TO@ id=exchange1.getIn().getMandatoryBody() @AT@ 20659 @LENGTH@ 53
------UPD MethodInvocation@@exchange1.getIn().getMandatoryBody(String.class) @TO@ exchange1.getIn().getMandatoryBody() @AT@ 20664 @LENGTH@ 48
---------UPD SimpleName@@MethodName:getMandatoryBody:[String.class] @TO@ MethodName:getMandatoryBody:[] @AT@ 20682 @LENGTH@ 30
------------DEL TypeLiteral@@String.class @AT@ 20699 @LENGTH@ 12


UPD TypeDeclaration@@[@Configuration, @ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration"), @EnableConfigurationProperties(Jt400ComponentConfiguration.class), public]Jt400ComponentAutoConfiguration,  @TO@ [@Configuration, @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration"), @EnableConfigurationProperties(Jt400ComponentConfiguration.class), public]Jt400ComponentAutoConfiguration,  @AT@ 1622 @LENGTH@ 2048
---UPD NormalAnnotation@@@ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1637 @LENGTH@ 79
---UPD NormalAnnotation@@@AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1717 @LENGTH@ 80


DEL MethodDeclaration@@private, static, String, MethodName:getRandomDevPath, Properties props,  @AT@ 4640 @LENGTH@ 427
---DEL Modifier@@private @AT@ 4640 @LENGTH@ 7
---DEL Modifier@@static @AT@ 4648 @LENGTH@ 6
---DEL SimpleType@@String @AT@ 4655 @LENGTH@ 6
---DEL SimpleName@@MethodName:getRandomDevPath @AT@ 4662 @LENGTH@ 16
---DEL SingleVariableDeclaration@@Properties props @AT@ 4679 @LENGTH@ 16
------DEL SimpleType@@Properties @AT@ 4679 @LENGTH@ 10
------DEL SimpleName@@props @AT@ 4690 @LENGTH@ 5
---DEL VariableDeclarationStatement@@String devPath=props.getProperty(ConfigurationKeys.SECURE_RANDOM_DEVICE_FILE_PATH_KEY); @AT@ 4707 @LENGTH@ 102
------DEL SimpleType@@String @AT@ 4707 @LENGTH@ 6
------DEL VariableDeclarationFragment@@devPath=props.getProperty(ConfigurationKeys.SECURE_RANDOM_DEVICE_FILE_PATH_KEY) @AT@ 4714 @LENGTH@ 94
---------DEL SimpleName@@devPath @AT@ 4714 @LENGTH@ 7
---------DEL MethodInvocation@@props.getProperty(ConfigurationKeys.SECURE_RANDOM_DEVICE_FILE_PATH_KEY) @AT@ 4724 @LENGTH@ 84
------------DEL SimpleName@@Name:props @AT@ 4724 @LENGTH@ 5
------------DEL SimpleName@@MethodName:getProperty:[ConfigurationKeys.SECURE_RANDOM_DEVICE_FILE_PATH_KEY] @AT@ 4743 @LENGTH@ 65
---------------DEL QualifiedName@@ConfigurationKeys.SECURE_RANDOM_DEVICE_FILE_PATH_KEY @AT@ 4755 @LENGTH@ 52
------------------DEL SimpleName@@ConfigurationKeys @AT@ 4755 @LENGTH@ 17
------------------DEL SimpleName@@SECURE_RANDOM_DEVICE_FILE_PATH_KEY @AT@ 4773 @LENGTH@ 34
---DEL IfStatement@@if (devPath == null) {  devPath=System.getProperty(ConfigurationKeys.SECURE_RANDOM_DEVICE_FILE_PATH_KEY,ConfigurationKeys.SECURE_RANDOM_DEVICE_FILE_PATH_DEFAULT);} @AT@ 4818 @LENGTH@ 219
------DEL InfixExpression@@devPath == null @AT@ 4822 @LENGTH@ 15
---------DEL SimpleName@@devPath @AT@ 4822 @LENGTH@ 7
---------DEL Operator@@== @AT@ 4829 @LENGTH@ 2
---------DEL NullLiteral@@null @AT@ 4833 @LENGTH@ 4
------DEL Block@@ThenBody:{  devPath=System.getProperty(ConfigurationKeys.SECURE_RANDOM_DEVICE_FILE_PATH_KEY,ConfigurationKeys.SECURE_RANDOM_DEVICE_FILE_PATH_DEFAULT);} @AT@ 4839 @LENGTH@ 198
---------DEL ExpressionStatement@@Assignment:devPath=System.getProperty(ConfigurationKeys.SECURE_RANDOM_DEVICE_FILE_PATH_KEY,ConfigurationKeys.SECURE_RANDOM_DEVICE_FILE_PATH_DEFAULT) @AT@ 4853 @LENGTH@ 174
------------DEL Assignment@@devPath=System.getProperty(ConfigurationKeys.SECURE_RANDOM_DEVICE_FILE_PATH_KEY,ConfigurationKeys.SECURE_RANDOM_DEVICE_FILE_PATH_DEFAULT) @AT@ 4853 @LENGTH@ 173
---------------DEL SimpleName@@devPath @AT@ 4853 @LENGTH@ 7
---------------DEL Operator@@= @AT@ 4860 @LENGTH@ 1
---------------DEL MethodInvocation@@System.getProperty(ConfigurationKeys.SECURE_RANDOM_DEVICE_FILE_PATH_KEY,ConfigurationKeys.SECURE_RANDOM_DEVICE_FILE_PATH_DEFAULT) @AT@ 4863 @LENGTH@ 163
------------------DEL SimpleName@@Name:System @AT@ 4863 @LENGTH@ 6
---DEL ReturnStatement@@SimpleName:devPath @AT@ 5046 @LENGTH@ 15
------DEL SimpleName@@devPath @AT@ 5053 @LENGTH@ 7


UPD ReturnStatement@@MethodInvocation:((GoogleDriveComponent)getComponent()).getClient() @TO@ MethodInvocation:((GoogleDriveComponent)getComponent()).getClient(configuration) @AT@ 4889 @LENGTH@ 58
---UPD MethodInvocation@@((GoogleDriveComponent)getComponent()).getClient() @TO@ ((GoogleDriveComponent)getComponent()).getClient(configuration) @AT@ 4896 @LENGTH@ 50
------UPD SimpleName@@MethodName:getClient:[] @TO@ MethodName:getClient:[configuration] @AT@ 4935 @LENGTH@ 11
---------INS SimpleName@@configuration @TO@ SimpleName@@MethodName:getClient:[] @AT@ 4945 @LENGTH@ 13


UPD TypeDeclaration@@[@Configuration, @ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration"), @EnableConfigurationProperties(TerserLanguageConfiguration.class), public]TerserLanguageAutoConfiguration,  @TO@ [@Configuration, @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration"), @EnableConfigurationProperties(TerserLanguageConfiguration.class), public]TerserLanguageAutoConfiguration,  @AT@ 1661 @LENGTH@ 1085
---UPD NormalAnnotation@@@ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1676 @LENGTH@ 79
---UPD NormalAnnotation@@@AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1756 @LENGTH@ 80


UPD TypeDeclaration@@[@Configuration, @ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration"), @EnableConfigurationProperties(StubComponentConfiguration.class), public]StubComponentAutoConfiguration,  @TO@ [@Configuration, @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration"), @EnableConfigurationProperties(StubComponentConfiguration.class), public]StubComponentAutoConfiguration,  @AT@ 1619 @LENGTH@ 2039
---UPD NormalAnnotation@@@ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1634 @LENGTH@ 79
---UPD NormalAnnotation@@@AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1714 @LENGTH@ 80


INS ExpressionStatement@@MethodInvocation:query.setUnique(true) @TO@ MethodDeclaration@@private, int, MethodName:getNumPartitionsViaSqlFilterInternal, String dbName, String tblName, String sqlFilter, List<Object> paramsForFilter, List<String> joinsForFilter, MetaException,  @AT@ 38305 @LENGTH@ 22
---INS MethodInvocation@@query.setUnique(true) @TO@ ExpressionStatement@@MethodInvocation:query.setUnique(true) @AT@ 38305 @LENGTH@ 21
------INS SimpleName@@Name:query @TO@ MethodInvocation@@query.setUnique(true) @AT@ 38305 @LENGTH@ 5
------INS SimpleName@@MethodName:setUnique:[true] @TO@ MethodInvocation@@query.setUnique(true) @AT@ 38311 @LENGTH@ 15
---------INS BooleanLiteral@@true @TO@ SimpleName@@MethodName:setUnique:[true] @AT@ 38321 @LENGTH@ 4


UPD MethodDeclaration@@public, void, MethodName:testNothing,  @TO@ public, void, MethodName:testDefaultDatasource, Exception,  @AT@ 1664 @LENGTH@ 34
---UPD SimpleName@@MethodName:testNothing @TO@ MethodName:testDefaultDatasource @AT@ 1676 @LENGTH@ 11
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:testNothing,  @AT@ 1852 @LENGTH@ 9
---INS VariableDeclarationStatement@@DataSource dataSource=(DataSource)context.lookup("java:jboss/datasources/ExampleDS"); @TO@ MethodDeclaration@@public, void, MethodName:testNothing,  @AT@ 1872 @LENGTH@ 88
------INS SimpleType@@DataSource @TO@ VariableDeclarationStatement@@DataSource dataSource=(DataSource)context.lookup("java:jboss/datasources/ExampleDS"); @AT@ 1872 @LENGTH@ 10
------INS VariableDeclarationFragment@@dataSource=(DataSource)context.lookup("java:jboss/datasources/ExampleDS") @TO@ VariableDeclarationStatement@@DataSource dataSource=(DataSource)context.lookup("java:jboss/datasources/ExampleDS"); @AT@ 1883 @LENGTH@ 76
---------INS SimpleName@@dataSource @TO@ VariableDeclarationFragment@@dataSource=(DataSource)context.lookup("java:jboss/datasources/ExampleDS") @AT@ 1883 @LENGTH@ 10
---------INS CastExpression@@(DataSource)context.lookup("java:jboss/datasources/ExampleDS") @TO@ VariableDeclarationFragment@@dataSource=(DataSource)context.lookup("java:jboss/datasources/ExampleDS") @AT@ 1896 @LENGTH@ 63
------------INS SimpleType@@DataSource @TO@ CastExpression@@(DataSource)context.lookup("java:jboss/datasources/ExampleDS") @AT@ 1897 @LENGTH@ 10
------------INS MethodInvocation@@context.lookup("java:jboss/datasources/ExampleDS") @TO@ CastExpression@@(DataSource)context.lookup("java:jboss/datasources/ExampleDS") @AT@ 1909 @LENGTH@ 50
---------------INS SimpleName@@Name:context @TO@ MethodInvocation@@context.lookup("java:jboss/datasources/ExampleDS") @AT@ 1909 @LENGTH@ 7
---------------INS SimpleName@@MethodName:lookup:["java:jboss/datasources/ExampleDS"] @TO@ MethodInvocation@@context.lookup("java:jboss/datasources/ExampleDS") @AT@ 1917 @LENGTH@ 42
------------------INS StringLiteral@@"java:jboss/datasources/ExampleDS" @TO@ SimpleName@@MethodName:lookup:["java:jboss/datasources/ExampleDS"] @AT@ 1924 @LENGTH@ 34
---INS ExpressionStatement@@MethodInvocation:assertNotNull(dataSource) @TO@ MethodDeclaration@@public, void, MethodName:testNothing,  @AT@ 1969 @LENGTH@ 26
------INS MethodInvocation@@assertNotNull(dataSource) @TO@ ExpressionStatement@@MethodInvocation:assertNotNull(dataSource) @AT@ 1969 @LENGTH@ 25
---------INS SimpleName@@MethodName:assertNotNull:[dataSource] @TO@ MethodInvocation@@assertNotNull(dataSource) @AT@ 1969 @LENGTH@ 25
------------INS SimpleName@@dataSource @TO@ SimpleName@@MethodName:assertNotNull:[dataSource] @AT@ 1983 @LENGTH@ 10


UPD ExpressionStatement@@Assignment:sum=initIV[i] & 0xff + sum >>> Byte.SIZE @TO@ Assignment:sum=(initIV[i] & 0xff) + (sum >>> Byte.SIZE) @AT@ 10546 @LENGTH@ 43
---UPD Assignment@@sum=initIV[i] & 0xff + sum >>> Byte.SIZE @TO@ sum=(initIV[i] & 0xff) + (sum >>> Byte.SIZE) @AT@ 10546 @LENGTH@ 42
------UPD InfixExpression@@initIV[i] & 0xff + sum >>> Byte.SIZE @TO@ (initIV[i] & 0xff) + (sum >>> Byte.SIZE) @AT@ 10552 @LENGTH@ 36
---------INS ParenthesizedExpression@@(initIV[i] & 0xff) @TO@ InfixExpression@@initIV[i] & 0xff + sum >>> Byte.SIZE @AT@ 10552 @LENGTH@ 18
------------INS InfixExpression@@initIV[i] & 0xff @TO@ ParenthesizedExpression@@(initIV[i] & 0xff) @AT@ 10553 @LENGTH@ 16
---------------MOV ArrayAccess@@initIV[i] @TO@ InfixExpression@@initIV[i] & 0xff @AT@ 10552 @LENGTH@ 9
---------------MOV Operator@@& @TO@ InfixExpression@@initIV[i] & 0xff @AT@ 10561 @LENGTH@ 1
---------------MOV NumberLiteral@@0xff @TO@ InfixExpression@@initIV[i] & 0xff @AT@ 10564 @LENGTH@ 4
---------DEL InfixExpression@@0xff + sum >>> Byte.SIZE @AT@ 10564 @LENGTH@ 24
------------DEL InfixExpression@@0xff + sum @AT@ 10564 @LENGTH@ 10
---------MOV Operator@@+ @TO@ InfixExpression@@initIV[i] & 0xff + sum >>> Byte.SIZE @AT@ 10568 @LENGTH@ 1
---------INS ParenthesizedExpression@@(sum >>> Byte.SIZE) @TO@ InfixExpression@@initIV[i] & 0xff + sum >>> Byte.SIZE @AT@ 10573 @LENGTH@ 19
------------INS InfixExpression@@sum >>> Byte.SIZE @TO@ ParenthesizedExpression@@(sum >>> Byte.SIZE) @AT@ 10574 @LENGTH@ 17
---------------MOV SimpleName@@sum @TO@ InfixExpression@@sum >>> Byte.SIZE @AT@ 10571 @LENGTH@ 3
---------------MOV Operator@@>>> @TO@ InfixExpression@@sum >>> Byte.SIZE @AT@ 10574 @LENGTH@ 3
---------------MOV QualifiedName@@Byte.SIZE @TO@ InfixExpression@@sum >>> Byte.SIZE @AT@ 10579 @LENGTH@ 9


UPD TypeDeclaration@@[@Configuration, @ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration"), @EnableConfigurationProperties(ScpComponentConfiguration.class), public]ScpComponentAutoConfiguration,  @TO@ [@Configuration, @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration"), @EnableConfigurationProperties(ScpComponentConfiguration.class), public]ScpComponentAutoConfiguration,  @AT@ 1616 @LENGTH@ 2030
---UPD NormalAnnotation@@@ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1631 @LENGTH@ 79
---UPD NormalAnnotation@@@AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1711 @LENGTH@ 80


UPD MethodDeclaration@@public, voidMethodName:ChannelConnectedListener, Exchange exchange, AsyncCallback callback, Object body,  @TO@ voidMethodName:ChannelConnectedListener, Exchange exchange, AsyncCallback callback, Object body,  @AT@ 26443 @LENGTH@ 205
---DEL Modifier@@public @AT@ 26443 @LENGTH@ 6


UPD CatchClause@@catch (AmqpIOException|AmqpConnectException e) {  Method shutdownReason=shutdown.get().getReason();  assertThat(shutdownReason,instanceOf(AMQP.Channel.Close.class));  assertThat(((AMQP.Channel.Close)shutdownReason).getReplyCode(),equalTo(AMQP.NOT_FOUND));} @TO@ catch (AmqpException e) {  Method shutdownReason=shutdown.get().getReason();  assertThat(shutdownReason,instanceOf(AMQP.Channel.Close.class));  assertThat(((AMQP.Channel.Close)shutdownReason).getReplyCode(),equalTo(AMQP.NOT_FOUND));} @AT@ 51933 @LENGTH@ 272
---UPD SingleVariableDeclaration@@AmqpIOException|AmqpConnectException e @TO@ AmqpException e @AT@ 51940 @LENGTH@ 40
------INS SimpleType@@AmqpException @TO@ SingleVariableDeclaration@@AmqpIOException|AmqpConnectException e @AT@ 51886 @LENGTH@ 13
------DEL UnionType@@AmqpIOException|AmqpConnectException @AT@ 51940 @LENGTH@ 38
---------DEL SimpleType@@AmqpIOException @AT@ 51940 @LENGTH@ 15
---------DEL SimpleType@@AmqpConnectException @AT@ 51958 @LENGTH@ 20


UPD VariableDeclarationStatement@@Matcher matcher=rawPattern.matcher(s); @TO@ Matcher matcher=RAW_PATTERN.matcher(s); @AT@ 3603 @LENGTH@ 40
---UPD VariableDeclarationFragment@@matcher=rawPattern.matcher(s) @TO@ matcher=RAW_PATTERN.matcher(s) @AT@ 3611 @LENGTH@ 31
------UPD MethodInvocation@@rawPattern.matcher(s) @TO@ RAW_PATTERN.matcher(s) @AT@ 3621 @LENGTH@ 21
---------UPD SimpleName@@Name:rawPattern @TO@ Name:RAW_PATTERN @AT@ 3621 @LENGTH@ 10


UPD TypeDeclaration@@[@Configuration, @ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration"), @EnableConfigurationProperties(StringDataFormatConfiguration.class), public]StringDataFormatAutoConfiguration,  @TO@ [@Configuration, @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration"), @EnableConfigurationProperties(StringDataFormatConfiguration.class), public]StringDataFormatAutoConfiguration,  @AT@ 1645 @LENGTH@ 1126
---UPD NormalAnnotation@@@ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1660 @LENGTH@ 79
---UPD NormalAnnotation@@@AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1740 @LENGTH@ 80


UPD TypeDeclaration@@[@Configuration, @ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration"), public]StAXComponentAutoConfiguration,  @TO@ [@Configuration, @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration"), public]StAXComponentAutoConfiguration,  @AT@ 1438 @LENGTH@ 596
---UPD NormalAnnotation@@@ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1453 @LENGTH@ 79
---UPD NormalAnnotation@@@AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1533 @LENGTH@ 80


UPD IfStatement@@if (kafkaProducer == null) {  kafkaProducer=new org.apache.kafka.clients.producer.KafkaProducer(props);} @TO@ if (kafkaProducer == null) {  ClassLoader threadClassLoader=Thread.currentThread().getContextClassLoader();  try {    Thread.currentThread().setContextClassLoader(null);    kafkaProducer=new org.apache.kafka.clients.producer.KafkaProducer(props);  }  finally {    Thread.currentThread().setContextClassLoader(threadClassLoader);  }} @AT@ 2928 @LENGTH@ 126
---UPD Block@@ThenBody:{  kafkaProducer=new org.apache.kafka.clients.producer.KafkaProducer(props);} @TO@ ThenBody:{  ClassLoader threadClassLoader=Thread.currentThread().getContextClassLoader();  try {    Thread.currentThread().setContextClassLoader(null);    kafkaProducer=new org.apache.kafka.clients.producer.KafkaProducer(props);  }  finally {    Thread.currentThread().setContextClassLoader(threadClassLoader);  }} @AT@ 2955 @LENGTH@ 99
------INS VariableDeclarationStatement@@ClassLoader threadClassLoader=Thread.currentThread().getContextClassLoader(); @TO@ Block@@ThenBody:{  kafkaProducer=new org.apache.kafka.clients.producer.KafkaProducer(props);} @AT@ 2969 @LENGTH@ 79
---------INS SimpleType@@ClassLoader @TO@ VariableDeclarationStatement@@ClassLoader threadClassLoader=Thread.currentThread().getContextClassLoader(); @AT@ 2969 @LENGTH@ 11
---------INS VariableDeclarationFragment@@threadClassLoader=Thread.currentThread().getContextClassLoader() @TO@ VariableDeclarationStatement@@ClassLoader threadClassLoader=Thread.currentThread().getContextClassLoader(); @AT@ 2981 @LENGTH@ 66
------------INS SimpleName@@threadClassLoader @TO@ VariableDeclarationFragment@@threadClassLoader=Thread.currentThread().getContextClassLoader() @AT@ 2981 @LENGTH@ 17
------------INS MethodInvocation@@Thread.currentThread().getContextClassLoader() @TO@ VariableDeclarationFragment@@threadClassLoader=Thread.currentThread().getContextClassLoader() @AT@ 3001 @LENGTH@ 46
---------------INS MethodInvocation@@MethodName:currentThread:[] @TO@ MethodInvocation@@Thread.currentThread().getContextClassLoader() @AT@ 3001 @LENGTH@ 22
---------------INS SimpleName@@Name:Thread @TO@ MethodInvocation@@Thread.currentThread().getContextClassLoader() @AT@ 3001 @LENGTH@ 6
---------------INS SimpleName@@MethodName:getContextClassLoader:[] @TO@ MethodInvocation@@Thread.currentThread().getContextClassLoader() @AT@ 3024 @LENGTH@ 23
------INS TryStatement@@try {  Thread.currentThread().setContextClassLoader(null);  kafkaProducer=new org.apache.kafka.clients.producer.KafkaProducer(props);}  finally {  Thread.currentThread().setContextClassLoader(threadClassLoader);} @TO@ Block@@ThenBody:{  kafkaProducer=new org.apache.kafka.clients.producer.KafkaProducer(props);} @AT@ 3061 @LENGTH@ 284
---------MOV ExpressionStatement@@Assignment:kafkaProducer=new org.apache.kafka.clients.producer.KafkaProducer(props) @TO@ TryStatement@@try {  Thread.currentThread().setContextClassLoader(null);  kafkaProducer=new org.apache.kafka.clients.producer.KafkaProducer(props);}  finally {  Thread.currentThread().setContextClassLoader(threadClassLoader);} @AT@ 2969 @LENGTH@ 75
---------INS ExpressionStatement@@MethodInvocation:Thread.currentThread().setContextClassLoader(null) @TO@ TryStatement@@try {  Thread.currentThread().setContextClassLoader(null);  kafkaProducer=new org.apache.kafka.clients.producer.KafkaProducer(props);}  finally {  Thread.currentThread().setContextClassLoader(threadClassLoader);} @AT@ 3083 @LENGTH@ 51
------------INS MethodInvocation@@Thread.currentThread().setContextClassLoader(null) @TO@ ExpressionStatement@@MethodInvocation:Thread.currentThread().setContextClassLoader(null) @AT@ 3083 @LENGTH@ 50
---------------INS MethodInvocation@@MethodName:currentThread:[] @TO@ MethodInvocation@@Thread.currentThread().setContextClassLoader(null) @AT@ 3083 @LENGTH@ 22
---------------INS SimpleName@@Name:Thread @TO@ MethodInvocation@@Thread.currentThread().setContextClassLoader(null) @AT@ 3083 @LENGTH@ 6
---------------INS SimpleName@@MethodName:setContextClassLoader:[null] @TO@ MethodInvocation@@Thread.currentThread().setContextClassLoader(null) @AT@ 3106 @LENGTH@ 27
------------------INS NullLiteral@@null @TO@ SimpleName@@MethodName:setContextClassLoader:[null] @AT@ 3128 @LENGTH@ 4
---------INS Block@@FinallyBody:{  Thread.currentThread().setContextClassLoader(threadClassLoader);} @TO@ TryStatement@@try {  Thread.currentThread().setContextClassLoader(null);  kafkaProducer=new org.apache.kafka.clients.producer.KafkaProducer(props);}  finally {  Thread.currentThread().setContextClassLoader(threadClassLoader);} @AT@ 3249 @LENGTH@ 96
------------INS ExpressionStatement@@MethodInvocation:Thread.currentThread().setContextClassLoader(threadClassLoader) @TO@ Block@@FinallyBody:{  Thread.currentThread().setContextClassLoader(threadClassLoader);} @AT@ 3267 @LENGTH@ 64
---------------INS MethodInvocation@@Thread.currentThread().setContextClassLoader(threadClassLoader) @TO@ ExpressionStatement@@MethodInvocation:Thread.currentThread().setContextClassLoader(threadClassLoader) @AT@ 3267 @LENGTH@ 63
------------------INS MethodInvocation@@MethodName:currentThread:[] @TO@ MethodInvocation@@Thread.currentThread().setContextClassLoader(threadClassLoader) @AT@ 3267 @LENGTH@ 22
------------------INS SimpleName@@Name:Thread @TO@ MethodInvocation@@Thread.currentThread().setContextClassLoader(threadClassLoader) @AT@ 3267 @LENGTH@ 6
------------------INS SimpleName@@MethodName:setContextClassLoader:[threadClassLoader] @TO@ MethodInvocation@@Thread.currentThread().setContextClassLoader(threadClassLoader) @AT@ 3290 @LENGTH@ 40
---------------------INS SimpleName@@threadClassLoader @TO@ SimpleName@@MethodName:setContextClassLoader:[threadClassLoader] @AT@ 3312 @LENGTH@ 17


UPD FieldDeclaration@@private, ServiceNowRelease, [release=ServiceNowRelease.HELSINKY] @TO@ private, ServiceNowRelease, [release=ServiceNowRelease.HELSINKI] @AT@ 3984 @LENGTH@ 63
---UPD VariableDeclarationFragment@@release=ServiceNowRelease.HELSINKY @TO@ release=ServiceNowRelease.HELSINKI @AT@ 4010 @LENGTH@ 36
------UPD QualifiedName@@ServiceNowRelease.HELSINKY @TO@ ServiceNowRelease.HELSINKI @AT@ 4020 @LENGTH@ 26
---------UPD SimpleName@@HELSINKY @TO@ HELSINKI @AT@ 4038 @LENGTH@ 8


UPD TypeDeclaration@@[@Configuration, @ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration"), public]PdfComponentAutoConfiguration,  @TO@ [@Configuration, @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration"), public]PdfComponentAutoConfiguration,  @AT@ 1435 @LENGTH@ 589
---UPD NormalAnnotation@@@ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1450 @LENGTH@ 79
---UPD NormalAnnotation@@@AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1530 @LENGTH@ 80


INS MethodDeclaration@@public, void, MethodName:closeTestRepeat,  @TO@ TypeDeclaration@@[public]OpensslJnaCipherTest, AbstractCipherTest @AT@ 1321 @LENGTH@ 103
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:closeTestRepeat,  @AT@ 1321 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:closeTestRepeat,  @AT@ 1328 @LENGTH@ 4
---INS SimpleName@@MethodName:closeTestRepeat @TO@ MethodDeclaration@@public, void, MethodName:closeTestRepeat,  @AT@ 1333 @LENGTH@ 15
---INS ExpressionStatement@@MethodInvocation:System.err.println("closeTestRepeat() Causes JVM crash") @TO@ MethodDeclaration@@public, void, MethodName:closeTestRepeat,  @AT@ 1361 @LENGTH@ 57
------INS MethodInvocation@@System.err.println("closeTestRepeat() Causes JVM crash") @TO@ ExpressionStatement@@MethodInvocation:System.err.println("closeTestRepeat() Causes JVM crash") @AT@ 1361 @LENGTH@ 56
---------INS QualifiedName@@Name:System.err @TO@ MethodInvocation@@System.err.println("closeTestRepeat() Causes JVM crash") @AT@ 1361 @LENGTH@ 10
---------INS SimpleName@@MethodName:println:["closeTestRepeat() Causes JVM crash"] @TO@ MethodInvocation@@System.err.println("closeTestRepeat() Causes JVM crash") @AT@ 1372 @LENGTH@ 45
------------INS StringLiteral@@"closeTestRepeat() Causes JVM crash" @TO@ SimpleName@@MethodName:println:["closeTestRepeat() Causes JVM crash"] @AT@ 1380 @LENGTH@ 36


UPD ExpressionStatement@@MethodInvocation:builder.appendFormalLine(String.format("Assert.notNull(%s, \"The given Iterable of items to add can't be null!\");",parameterName)) @TO@ MethodInvocation:builder.appendFormalLine(String.format("Assert.notNull(%s, \"The given Iterable of items to remove can't be null!\");",parameterName)) @AT@ 43628 @LENGTH@ 154
---UPD MethodInvocation@@builder.appendFormalLine(String.format("Assert.notNull(%s, \"The given Iterable of items to add can't be null!\");",parameterName)) @TO@ builder.appendFormalLine(String.format("Assert.notNull(%s, \"The given Iterable of items to remove can't be null!\");",parameterName)) @AT@ 43628 @LENGTH@ 153
------UPD SimpleName@@MethodName:appendFormalLine:[String.format("Assert.notNull(%s, \"The given Iterable of items to add can't be null!\");",parameterName)] @TO@ MethodName:appendFormalLine:[String.format("Assert.notNull(%s, \"The given Iterable of items to remove can't be null!\");",parameterName)] @AT@ 43636 @LENGTH@ 145
---------UPD MethodInvocation@@String.format("Assert.notNull(%s, \"The given Iterable of items to add can't be null!\");",parameterName) @TO@ String.format("Assert.notNull(%s, \"The given Iterable of items to remove can't be null!\");",parameterName) @AT@ 43653 @LENGTH@ 127
------------UPD SimpleName@@MethodName:format:["Assert.notNull(%s, \"The given Iterable of items to add can't be null!\");", parameterName] @TO@ MethodName:format:["Assert.notNull(%s, \"The given Iterable of items to remove can't be null!\");", parameterName] @AT@ 43669 @LENGTH@ 111
---------------UPD StringLiteral@@"Assert.notNull(%s, \"The given Iterable of items to add can't be null!\");" @TO@ "Assert.notNull(%s, \"The given Iterable of items to remove can't be null!\");" @AT@ 43676 @LENGTH@ 76


UPD TypeDeclaration@@[@Configuration, @ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration"), @EnableConfigurationProperties(TokenizeLanguageConfiguration.class), public]TokenizeLanguageAutoConfiguration,  @TO@ [@Configuration, @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration"), @EnableConfigurationProperties(TokenizeLanguageConfiguration.class), public]TokenizeLanguageAutoConfiguration,  @AT@ 1673 @LENGTH@ 1116
---UPD NormalAnnotation@@@ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1688 @LENGTH@ 79
---UPD NormalAnnotation@@@AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1768 @LENGTH@ 80


UPD TypeDeclaration@@[@Configuration, @ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration"), public]BrowseComponentAutoConfiguration,  @TO@ [@Configuration, @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration"), public]BrowseComponentAutoConfiguration,  @AT@ 1444 @LENGTH@ 610
---UPD NormalAnnotation@@@ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1459 @LENGTH@ 79
---UPD NormalAnnotation@@@AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1539 @LENGTH@ 80


UPD TypeDeclaration@@[@Configuration, @ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration"), public]PgEventComponentAutoConfiguration,  @TO@ [@Configuration, @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration"), public]PgEventComponentAutoConfiguration,  @AT@ 1447 @LENGTH@ 617
---UPD NormalAnnotation@@@ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1462 @LENGTH@ 79
---UPD NormalAnnotation@@@AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1542 @LENGTH@ 80


INS MethodDeclaration@@public, void, MethodName:testEmptyCellsVerticalAligner,  @TO@ TypeDeclaration@@[public]TableTest, AbstractTestWithSample @AT@ 3029 @LENGTH@ 284
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testEmptyCellsVerticalAligner,  @AT@ 3029 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testEmptyCellsVerticalAligner,  @AT@ 3036 @LENGTH@ 4
---INS SimpleName@@MethodName:testEmptyCellsVerticalAligner @TO@ MethodDeclaration@@public, void, MethodName:testEmptyCellsVerticalAligner,  @AT@ 3041 @LENGTH@ 29
---INS VariableDeclarationStatement@@TableModel model=new ArrayTableModel(new String[][]{{"a","b"},{null,null}}); @TO@ MethodDeclaration@@public, void, MethodName:testEmptyCellsVerticalAligner,  @AT@ 3077 @LENGTH@ 82
------INS SimpleType@@TableModel @TO@ VariableDeclarationStatement@@TableModel model=new ArrayTableModel(new String[][]{{"a","b"},{null,null}}); @AT@ 3077 @LENGTH@ 10
------INS VariableDeclarationFragment@@model=new ArrayTableModel(new String[][]{{"a","b"},{null,null}}) @TO@ VariableDeclarationStatement@@TableModel model=new ArrayTableModel(new String[][]{{"a","b"},{null,null}}); @AT@ 3088 @LENGTH@ 70
---------INS SimpleName@@model @TO@ VariableDeclarationFragment@@model=new ArrayTableModel(new String[][]{{"a","b"},{null,null}}) @AT@ 3088 @LENGTH@ 5
---------INS ClassInstanceCreation@@ArrayTableModel[new String[][]{{"a","b"},{null,null}}] @TO@ VariableDeclarationFragment@@model=new ArrayTableModel(new String[][]{{"a","b"},{null,null}}) @AT@ 3096 @LENGTH@ 62
------------INS New@@new @TO@ ClassInstanceCreation@@ArrayTableModel[new String[][]{{"a","b"},{null,null}}] @AT@ 3096 @LENGTH@ 3
------------INS SimpleType@@ArrayTableModel @TO@ ClassInstanceCreation@@ArrayTableModel[new String[][]{{"a","b"},{null,null}}] @AT@ 3100 @LENGTH@ 15
------------INS ArrayCreation@@new String[][]{{"a","b"},{null,null}} @TO@ ClassInstanceCreation@@ArrayTableModel[new String[][]{{"a","b"},{null,null}}] @AT@ 3116 @LENGTH@ 41
---------------INS ArrayType@@String[][] @TO@ ArrayCreation@@new String[][]{{"a","b"},{null,null}} @AT@ 3120 @LENGTH@ 10
------------------INS SimpleType@@String @TO@ ArrayType@@String[][] @AT@ 3120 @LENGTH@ 6
---------------INS ArrayInitializer@@{{"a","b"},{null,null}} @TO@ ArrayCreation@@new String[][]{{"a","b"},{null,null}} @AT@ 3131 @LENGTH@ 26
------------------INS ArrayInitializer@@{"a","b"} @TO@ ArrayInitializer@@{{"a","b"},{null,null}} @AT@ 3132 @LENGTH@ 10
---------------------INS StringLiteral@@"a" @TO@ ArrayInitializer@@{"a","b"} @AT@ 3133 @LENGTH@ 3
---------------------INS StringLiteral@@"b" @TO@ ArrayInitializer@@{"a","b"} @AT@ 3138 @LENGTH@ 3
------------------INS ArrayInitializer@@{null,null} @TO@ ArrayInitializer@@{{"a","b"},{null,null}} @AT@ 3144 @LENGTH@ 12
---------------------INS NullLiteral@@null @TO@ ArrayInitializer@@{null,null} @AT@ 3145 @LENGTH@ 4
---------------------INS NullLiteral@@null @TO@ ArrayInitializer@@{null,null} @AT@ 3151 @LENGTH@ 4
---INS VariableDeclarationStatement@@Table table=new TableBuilder(model).on(CellMatchers.table()).addAligner(SimpleVerticalAligner.middle).build(); @TO@ MethodDeclaration@@public, void, MethodName:testEmptyCellsVerticalAligner,  @AT@ 3162 @LENGTH@ 112
------INS SimpleType@@Table @TO@ VariableDeclarationStatement@@Table table=new TableBuilder(model).on(CellMatchers.table()).addAligner(SimpleVerticalAligner.middle).build(); @AT@ 3162 @LENGTH@ 5
------INS VariableDeclarationFragment@@table=new TableBuilder(model).on(CellMatchers.table()).addAligner(SimpleVerticalAligner.middle).build() @TO@ VariableDeclarationStatement@@Table table=new TableBuilder(model).on(CellMatchers.table()).addAligner(SimpleVerticalAligner.middle).build(); @AT@ 3168 @LENGTH@ 105
---------INS SimpleName@@table @TO@ VariableDeclarationFragment@@table=new TableBuilder(model).on(CellMatchers.table()).addAligner(SimpleVerticalAligner.middle).build() @AT@ 3168 @LENGTH@ 5
---------INS MethodInvocation@@new TableBuilder(model).on(CellMatchers.table()).addAligner(SimpleVerticalAligner.middle).build() @TO@ VariableDeclarationFragment@@table=new TableBuilder(model).on(CellMatchers.table()).addAligner(SimpleVerticalAligner.middle).build() @AT@ 3176 @LENGTH@ 97
------------INS MethodInvocation@@MethodName:addAligner:[SimpleVerticalAligner.middle] @TO@ MethodInvocation@@new TableBuilder(model).on(CellMatchers.table()).addAligner(SimpleVerticalAligner.middle).build() @AT@ 3176 @LENGTH@ 89
---------------INS QualifiedName@@SimpleVerticalAligner.middle @TO@ MethodInvocation@@MethodName:addAligner:[SimpleVerticalAligner.middle] @AT@ 3236 @LENGTH@ 28
------------------INS SimpleName@@SimpleVerticalAligner @TO@ QualifiedName@@SimpleVerticalAligner.middle @AT@ 3236 @LENGTH@ 21
------------------INS SimpleName@@middle @TO@ QualifiedName@@SimpleVerticalAligner.middle @AT@ 3258 @LENGTH@ 6
------------INS MethodInvocation@@MethodName:on:[CellMatchers.table()] @TO@ MethodInvocation@@new TableBuilder(model).on(CellMatchers.table()).addAligner(SimpleVerticalAligner.middle).build() @AT@ 3176 @LENGTH@ 48
---------------INS MethodInvocation@@CellMatchers.table() @TO@ MethodInvocation@@MethodName:on:[CellMatchers.table()] @AT@ 3203 @LENGTH@ 20
------------------INS SimpleName@@Name:CellMatchers @TO@ MethodInvocation@@CellMatchers.table() @AT@ 3203 @LENGTH@ 12
------------------INS SimpleName@@MethodName:table:[] @TO@ MethodInvocation@@CellMatchers.table() @AT@ 3216 @LENGTH@ 7
------------INS ClassInstanceCreation@@TableBuilder[model] @TO@ MethodInvocation@@new TableBuilder(model).on(CellMatchers.table()).addAligner(SimpleVerticalAligner.middle).build() @AT@ 3176 @LENGTH@ 23
---------------INS New@@new @TO@ ClassInstanceCreation@@TableBuilder[model] @AT@ 3176 @LENGTH@ 3
---------------INS SimpleType@@TableBuilder @TO@ ClassInstanceCreation@@TableBuilder[model] @AT@ 3180 @LENGTH@ 12
---------------INS SimpleName@@model @TO@ ClassInstanceCreation@@TableBuilder[model] @AT@ 3193 @LENGTH@ 5
------------INS SimpleName@@MethodName:build:[] @TO@ MethodInvocation@@new TableBuilder(model).on(CellMatchers.table()).addAligner(SimpleVerticalAligner.middle).build() @AT@ 3266 @LENGTH@ 7
---INS VariableDeclarationStatement@@String result=table.render(3); @TO@ MethodDeclaration@@public, void, MethodName:testEmptyCellsVerticalAligner,  @AT@ 3277 @LENGTH@ 32
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String result=table.render(3); @AT@ 3277 @LENGTH@ 6
------INS VariableDeclarationFragment@@result=table.render(3) @TO@ VariableDeclarationStatement@@String result=table.render(3); @AT@ 3284 @LENGTH@ 24
---------INS SimpleName@@result @TO@ VariableDeclarationFragment@@result=table.render(3) @AT@ 3284 @LENGTH@ 6
---------INS MethodInvocation@@table.render(3) @TO@ VariableDeclarationFragment@@result=table.render(3) @AT@ 3293 @LENGTH@ 15
------------INS SimpleName@@Name:table @TO@ MethodInvocation@@table.render(3) @AT@ 3293 @LENGTH@ 5
------------INS SimpleName@@MethodName:render:[3] @TO@ MethodInvocation@@table.render(3) @AT@ 3299 @LENGTH@ 9
---------------INS NumberLiteral@@3 @TO@ SimpleName@@MethodName:render:[3] @AT@ 3306 @LENGTH@ 1


UPD ExpressionStatement@@MethodInvocation:assertEquals(0,approvalStore.getApprovals("test","id").size()) @TO@ MethodInvocation:assertEquals(1,approvalStore.getApprovals("test","id").size()) @AT@ 8192 @LENGTH@ 65
---UPD MethodInvocation@@assertEquals(0,approvalStore.getApprovals("test","id").size()) @TO@ assertEquals(1,approvalStore.getApprovals("test","id").size()) @AT@ 8192 @LENGTH@ 64
------UPD SimpleName@@MethodName:assertEquals:[0, approvalStore.getApprovals("test","id").size()] @TO@ MethodName:assertEquals:[1, approvalStore.getApprovals("test","id").size()] @AT@ 8192 @LENGTH@ 64
---------UPD NumberLiteral@@0 @TO@ 1 @AT@ 8205 @LENGTH@ 1


UPD TypeDeclaration@@[@Configuration, @ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration"), public]BindingNameComponentAutoConfiguration,  @TO@ [@Configuration, @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration"), public]BindingNameComponentAutoConfiguration,  @AT@ 1451 @LENGTH@ 642
---UPD NormalAnnotation@@@ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1466 @LENGTH@ 79
---UPD NormalAnnotation@@@AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1546 @LENGTH@ 80


INS MethodDeclaration@@IllegalArgumentException, MethodName:invalidQuorum, int quorum,  @TO@ TypeDeclaration@@[@MessageLogger(projectCode="WFLYCLSV",length=4), public]ClusteringServerLogger, [BasicLogger] @AT@ 5008 @LENGTH@ 26
---INS SimpleType@@IllegalArgumentException @TO@ MethodDeclaration@@IllegalArgumentException, MethodName:invalidQuorum, int quorum,  @AT@ 4983 @LENGTH@ 24
---INS SimpleName@@MethodName:invalidQuorum @TO@ MethodDeclaration@@IllegalArgumentException, MethodName:invalidQuorum, int quorum,  @AT@ 5008 @LENGTH@ 13
---INS SingleVariableDeclaration@@int quorum @TO@ MethodDeclaration@@IllegalArgumentException, MethodName:invalidQuorum, int quorum,  @AT@ 5022 @LENGTH@ 10
------INS PrimitiveType@@int @TO@ SingleVariableDeclaration@@int quorum @AT@ 5022 @LENGTH@ 3
------INS SimpleName@@quorum @TO@ SingleVariableDeclaration@@int quorum @AT@ 5026 @LENGTH@ 6


UPD TypeDeclaration@@[@Configuration, @ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration"), @EnableConfigurationProperties(DisruptorVmComponentConfiguration.class), public]DisruptorVmComponentAutoConfiguration,  @TO@ [@Configuration, @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration"), @EnableConfigurationProperties(DisruptorVmComponentConfiguration.class), public]DisruptorVmComponentAutoConfiguration,  @AT@ 1642 @LENGTH@ 2116
---UPD NormalAnnotation@@@ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1657 @LENGTH@ 79
---UPD NormalAnnotation@@@AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1737 @LENGTH@ 80


UPD TypeDeclaration@@[@Configuration, @ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration"), public]JCacheComponentAutoConfiguration,  @TO@ [@Configuration, @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration"), public]JCacheComponentAutoConfiguration,  @AT@ 1444 @LENGTH@ 610
---UPD NormalAnnotation@@@ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1459 @LENGTH@ 79
---UPD NormalAnnotation@@@AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1539 @LENGTH@ 80


UPD ReturnStatement@@ClassInstanceCreation:new DelegatingTransactionManager(new Neo4jTransactionManager(sessionFactory())) @TO@ ClassInstanceCreation:new WebIntegrationIT.DelegatingTransactionManager(new Neo4jTransactionManager(sessionFactory())) @AT@ 2403 @LENGTH@ 87
---UPD ClassInstanceCreation@@DelegatingTransactionManager[new Neo4jTransactionManager(sessionFactory())] @TO@ WebIntegrationIT.DelegatingTransactionManager[new Neo4jTransactionManager(sessionFactory())] @AT@ 2410 @LENGTH@ 79
------UPD SimpleType@@DelegatingTransactionManager @TO@ WebIntegrationIT.DelegatingTransactionManager @AT@ 2414 @LENGTH@ 28


UPD TypeDeclaration@@[@Configuration, @ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration"), public]OptaPlannerComponentAutoConfiguration,  @TO@ [@Configuration, @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration"), public]OptaPlannerComponentAutoConfiguration,  @AT@ 1459 @LENGTH@ 646
---UPD NormalAnnotation@@@ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1474 @LENGTH@ 79
---UPD NormalAnnotation@@@AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1554 @LENGTH@ 80


UPD IfStatement@@if (cache != null) return cache.containsKey(key); else return false; @TO@ if (cache != null) {  return cache.containsKey(key);} else {  return false;} @AT@ 13534 @LENGTH@ 89
---UPD Block@@ThenBody:return cache.containsKey(key); @TO@ ThenBody:{  return cache.containsKey(key);} @AT@ 13560 @LENGTH@ 30
---UPD Block@@ElseBody:return false; @TO@ ElseBody:{  return false;} @AT@ 13610 @LENGTH@ 13


UPD TypeDeclaration@@[@Configuration, @ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration"), @EnableConfigurationProperties(XMLSecurityDataFormatConfiguration.class), public]XMLSecurityDataFormatAutoConfiguration,  @TO@ [@Configuration, @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration"), @EnableConfigurationProperties(XMLSecurityDataFormatConfiguration.class), public]XMLSecurityDataFormatAutoConfiguration,  @AT@ 1686 @LENGTH@ 1169
---UPD NormalAnnotation@@@ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1701 @LENGTH@ 79
---UPD NormalAnnotation@@@AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1781 @LENGTH@ 80


UPD ExpressionStatement@@MethodInvocation:assertEquals("Correct RabbitTemplate",mockConnectionFactory,gateway.getRabbitTemplate().getConnectionFactory()) @TO@ MethodInvocation:assertEquals("Correct RabbitTemplate",mockConnectionFactory,gateway.getRabbitOperations().getConnectionFactory()) @AT@ 1588 @LENGTH@ 114
---UPD MethodInvocation@@assertEquals("Correct RabbitTemplate",mockConnectionFactory,gateway.getRabbitTemplate().getConnectionFactory()) @TO@ assertEquals("Correct RabbitTemplate",mockConnectionFactory,gateway.getRabbitOperations().getConnectionFactory()) @AT@ 1588 @LENGTH@ 113
------UPD SimpleName@@MethodName:assertEquals:["Correct RabbitTemplate", mockConnectionFactory, gateway.getRabbitTemplate().getConnectionFactory()] @TO@ MethodName:assertEquals:["Correct RabbitTemplate", mockConnectionFactory, gateway.getRabbitOperations().getConnectionFactory()] @AT@ 1588 @LENGTH@ 113
---------UPD MethodInvocation@@gateway.getRabbitTemplate().getConnectionFactory() @TO@ gateway.getRabbitOperations().getConnectionFactory() @AT@ 1650 @LENGTH@ 50
------------UPD MethodInvocation@@MethodName:getRabbitTemplate:[] @TO@ MethodName:getRabbitOperations:[] @AT@ 1650 @LENGTH@ 27


UPD MethodDeclaration@@public, void, MethodName:processWithConnectedChannel, final Exchange exchange, AsyncCallback callback, ChannelFuture channelFuture, Object body,  @TO@ public, void, MethodName:processWithConnectedChannel, final Exchange exchange, final AsyncCallback callback, final ChannelFuture channelFuture, final Object body,  @AT@ 9742 @LENGTH@ 5385
---UPD SingleVariableDeclaration@@AsyncCallback callback @TO@ final AsyncCallback callback @AT@ 9807 @LENGTH@ 22
------INS Modifier@@final @TO@ SingleVariableDeclaration@@AsyncCallback callback @AT@ 9807 @LENGTH@ 5
---UPD SingleVariableDeclaration@@ChannelFuture channelFuture @TO@ final ChannelFuture channelFuture @AT@ 9831 @LENGTH@ 27
------INS Modifier@@final @TO@ SingleVariableDeclaration@@ChannelFuture channelFuture @AT@ 9837 @LENGTH@ 5
---UPD SingleVariableDeclaration@@Object body @TO@ final Object body @AT@ 9860 @LENGTH@ 11
------INS Modifier@@final @TO@ SingleVariableDeclaration@@Object body @AT@ 9872 @LENGTH@ 5


UPD ExpressionStatement@@MethodInvocation:assertThat(config.get(SwaggerConfig.Key.PACKAGES)).isEqualTo("com.tester.resource,com.tester.other.resource") @TO@ MethodInvocation:assertThat(Arrays.toString((String[])config.get(SwaggerConfig.Key.PACKAGES))).isEqualTo("[com.tester.resource, com.tester.other.resource]") @AT@ 3145 @LENGTH@ 110
---UPD MethodInvocation@@assertThat(config.get(SwaggerConfig.Key.PACKAGES)).isEqualTo("com.tester.resource,com.tester.other.resource") @TO@ MethodName:assertThat:[Arrays.toString((String[])config.get(SwaggerConfig.Key.PACKAGES))] @AT@ 3145 @LENGTH@ 109
---INS MethodInvocation@@assertThat(Arrays.toString((String[])config.get(SwaggerConfig.Key.PACKAGES))).isEqualTo("[com.tester.resource, com.tester.other.resource]") @TO@ ExpressionStatement@@MethodInvocation:assertThat(config.get(SwaggerConfig.Key.PACKAGES)).isEqualTo("com.tester.resource,com.tester.other.resource") @AT@ 3171 @LENGTH@ 139
------MOV MethodInvocation@@assertThat(config.get(SwaggerConfig.Key.PACKAGES)).isEqualTo("com.tester.resource,com.tester.other.resource") @TO@ MethodInvocation@@assertThat(Arrays.toString((String[])config.get(SwaggerConfig.Key.PACKAGES))).isEqualTo("[com.tester.resource, com.tester.other.resource]") @AT@ 3145 @LENGTH@ 109
---------UPD MethodInvocation@@MethodName:assertThat:[config.get(SwaggerConfig.Key.PACKAGES)] @TO@ Arrays.toString((String[])config.get(SwaggerConfig.Key.PACKAGES)) @AT@ 3145 @LENGTH@ 50
------------INS SimpleName@@Name:Arrays @TO@ MethodInvocation@@MethodName:assertThat:[config.get(SwaggerConfig.Key.PACKAGES)] @AT@ 3182 @LENGTH@ 6
------------INS SimpleName@@MethodName:toString:[(String[])config.get(SwaggerConfig.Key.PACKAGES)] @TO@ MethodInvocation@@MethodName:assertThat:[config.get(SwaggerConfig.Key.PACKAGES)] @AT@ 3189 @LENGTH@ 58
---------------INS CastExpression@@(String[])config.get(SwaggerConfig.Key.PACKAGES) @TO@ SimpleName@@MethodName:toString:[(String[])config.get(SwaggerConfig.Key.PACKAGES)] @AT@ 3198 @LENGTH@ 48
------------------MOV MethodInvocation@@config.get(SwaggerConfig.Key.PACKAGES) @TO@ CastExpression@@(String[])config.get(SwaggerConfig.Key.PACKAGES) @AT@ 3156 @LENGTH@ 38
------------------MOV MethodInvocation@@config.get(SwaggerConfig.Key.PACKAGES) @TO@ CastExpression@@(String[])config.get(SwaggerConfig.Key.PACKAGES) @AT@ 3156 @LENGTH@ 38
------------------INS ArrayType@@String[] @TO@ CastExpression@@(String[])config.get(SwaggerConfig.Key.PACKAGES) @AT@ 3199 @LENGTH@ 8
---------------------INS SimpleType@@String @TO@ ArrayType@@String[] @AT@ 3199 @LENGTH@ 6
---------DEL SimpleName@@MethodName:isEqualTo:["com.tester.resource,com.tester.other.resource"] @AT@ 3196 @LENGTH@ 58
------------DEL StringLiteral@@"com.tester.resource,com.tester.other.resource" @AT@ 3206 @LENGTH@ 47
------INS SimpleName@@MethodName:isEqualTo:["[com.tester.resource, com.tester.other.resource]"] @TO@ MethodInvocation@@assertThat(Arrays.toString((String[])config.get(SwaggerConfig.Key.PACKAGES))).isEqualTo("[com.tester.resource, com.tester.other.resource]") @AT@ 3249 @LENGTH@ 61
---------INS StringLiteral@@"[com.tester.resource, com.tester.other.resource]" @TO@ SimpleName@@MethodName:isEqualTo:["[com.tester.resource, com.tester.other.resource]"] @AT@ 3259 @LENGTH@ 50


UPD CatchClause@@catch (IOException e) {  System.err.println(e);} @TO@ catch (IOException e) {} @AT@ 8981 @LENGTH@ 68
---DEL ExpressionStatement@@MethodInvocation:System.err.println(e) @AT@ 9017 @LENGTH@ 22
------DEL MethodInvocation@@System.err.println(e) @AT@ 9017 @LENGTH@ 21
---------DEL QualifiedName@@Name:System.err @AT@ 9017 @LENGTH@ 10
---------DEL SimpleName@@MethodName:println:[e] @AT@ 9028 @LENGTH@ 10
------------DEL SimpleName@@e @AT@ 9036 @LENGTH@ 1


UPD IfStatement@@if ("*".equals(name)) {  bits=(1 << nameEnumeration.size()) - 1;} else {  bits=1 << nameEnumeration.indexOf(name);} @TO@ if ("*".equals(name)) {  bits=(1L << nameEnumeration.size()) - 1;} else {  bits=1L << nameEnumeration.indexOf(name);} @AT@ 2699 @LENGTH@ 188
---UPD Block@@ThenBody:{  bits=(1 << nameEnumeration.size()) - 1;} @TO@ ThenBody:{  bits=(1L << nameEnumeration.size()) - 1;} @AT@ 2721 @LENGTH@ 94
------UPD ExpressionStatement@@Assignment:bits=(1 << nameEnumeration.size()) - 1 @TO@ Assignment:bits=(1L << nameEnumeration.size()) - 1 @AT@ 2764 @LENGTH@ 41
---------UPD Assignment@@bits=(1 << nameEnumeration.size()) - 1 @TO@ bits=(1L << nameEnumeration.size()) - 1 @AT@ 2764 @LENGTH@ 40
------------UPD InfixExpression@@(1 << nameEnumeration.size()) - 1 @TO@ (1L << nameEnumeration.size()) - 1 @AT@ 2771 @LENGTH@ 33
---------------UPD ParenthesizedExpression@@(1 << nameEnumeration.size()) @TO@ (1L << nameEnumeration.size()) @AT@ 2771 @LENGTH@ 29
------------------UPD InfixExpression@@1 << nameEnumeration.size() @TO@ 1L << nameEnumeration.size() @AT@ 2772 @LENGTH@ 27
---------------------UPD NumberLiteral@@1 @TO@ 1L @AT@ 2772 @LENGTH@ 1
---UPD Block@@ElseBody:{  bits=1 << nameEnumeration.indexOf(name);} @TO@ ElseBody:{  bits=1L << nameEnumeration.indexOf(name);} @AT@ 2821 @LENGTH@ 66
------UPD ExpressionStatement@@Assignment:bits=1 << nameEnumeration.indexOf(name) @TO@ Assignment:bits=1L << nameEnumeration.indexOf(name) @AT@ 2835 @LENGTH@ 42
---------UPD Assignment@@bits=1 << nameEnumeration.indexOf(name) @TO@ bits=1L << nameEnumeration.indexOf(name) @AT@ 2835 @LENGTH@ 41
------------UPD InfixExpression@@1 << nameEnumeration.indexOf(name) @TO@ 1L << nameEnumeration.indexOf(name) @AT@ 2842 @LENGTH@ 34
---------------UPD NumberLiteral@@1 @TO@ 1L @AT@ 2842 @LENGTH@ 1


INS IfStatement@@if (packages != null) {  StringBuffer sb=new StringBuffer();  for (  String s : packages) {    sb.append(s).append(',');  }  beanConfig.setResourcePackage(sb.toString());} @TO@ MethodDeclaration@@public, void, MethodName:activate, ServiceActivatorContext serviceActivatorContext, ServiceRegistryException,  @AT@ 2169 @LENGTH@ 235
---INS InfixExpression@@packages != null @TO@ IfStatement@@if (packages != null) {  StringBuffer sb=new StringBuffer();  for (  String s : packages) {    sb.append(s).append(',');  }  beanConfig.setResourcePackage(sb.toString());} @AT@ 2172 @LENGTH@ 14
------INS SimpleName@@packages @TO@ InfixExpression@@packages != null @AT@ 2172 @LENGTH@ 8
------INS Operator@@!= @TO@ InfixExpression@@packages != null @AT@ 2180 @LENGTH@ 2
------INS NullLiteral@@null @TO@ InfixExpression@@packages != null @AT@ 2182 @LENGTH@ 4
---INS Block@@ThenBody:{  StringBuffer sb=new StringBuffer();  for (  String s : packages) {    sb.append(s).append(',');  }  beanConfig.setResourcePackage(sb.toString());} @TO@ IfStatement@@if (packages != null) {  StringBuffer sb=new StringBuffer();  for (  String s : packages) {    sb.append(s).append(',');  }  beanConfig.setResourcePackage(sb.toString());} @AT@ 2188 @LENGTH@ 216
------MOV VariableDeclarationStatement@@StringBuffer sb=new StringBuffer(); @TO@ Block@@ThenBody:{  StringBuffer sb=new StringBuffer();  for (  String s : packages) {    sb.append(s).append(',');  }  beanConfig.setResourcePackage(sb.toString());} @AT@ 2168 @LENGTH@ 37
------MOV EnhancedForStatement@@for (String s : packages) {  sb.append(s).append(',');} @TO@ Block@@ThenBody:{  StringBuffer sb=new StringBuffer();  for (  String s : packages) {    sb.append(s).append(',');  }  beanConfig.setResourcePackage(sb.toString());} @AT@ 2214 @LENGTH@ 75
------MOV ExpressionStatement@@MethodInvocation:beanConfig.setResourcePackage(sb.toString()) @TO@ Block@@ThenBody:{  StringBuffer sb=new StringBuffer();  for (  String s : packages) {    sb.append(s).append(',');  }  beanConfig.setResourcePackage(sb.toString());} @AT@ 2299 @LENGTH@ 45


UPD MethodDeclaration@@public, void, MethodName:rejectsRedirectLocationContaingCRLF, Exception,  @TO@ public, void, MethodName:rejectsRedirectLocationContainingCRLF, Exception,  @AT@ 945 @LENGTH@ 818
---UPD SimpleName@@MethodName:rejectsRedirectLocationContaingCRLF @TO@ MethodName:rejectsRedirectLocationContainingCRLF @AT@ 957 @LENGTH@ 35


UPD TypeDeclaration@@[@Configuration, @ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration"), public]LdapComponentAutoConfiguration,  @TO@ [@Configuration, @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration"), public]LdapComponentAutoConfiguration,  @AT@ 1438 @LENGTH@ 596
---UPD NormalAnnotation@@@ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1453 @LENGTH@ 79
---UPD NormalAnnotation@@@AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1533 @LENGTH@ 80


UPD ThrowStatement@@MethodInvocation:SwarmMessages.MESSAGES.fractionHasMultipleExtensions(fraction.getClass().getName(),extensions) @TO@ MethodInvocation:SwarmMessages.MESSAGES.fractionHasMultipleExtensions(fraction.getClass().getName(),extensions.stream().map(Objects::toString).collect(Collectors.toList())) @AT@ 3036 @LENGTH@ 102
---UPD MethodInvocation@@SwarmMessages.MESSAGES.fractionHasMultipleExtensions(fraction.getClass().getName(),extensions) @TO@ SwarmMessages.MESSAGES.fractionHasMultipleExtensions(fraction.getClass().getName(),extensions.stream().map(Objects::toString).collect(Collectors.toList())) @AT@ 3042 @LENGTH@ 95
------UPD SimpleName@@MethodName:fractionHasMultipleExtensions:[fraction.getClass().getName(), extensions] @TO@ MethodName:fractionHasMultipleExtensions:[fraction.getClass().getName(), extensions.stream().map(Objects::toString).collect(Collectors.toList())] @AT@ 3065 @LENGTH@ 72
---------DEL SimpleName@@extensions @AT@ 3126 @LENGTH@ 10
---------INS MethodInvocation@@extensions.stream().map(Objects::toString).collect(Collectors.toList()) @TO@ SimpleName@@MethodName:fractionHasMultipleExtensions:[fraction.getClass().getName(), extensions] @AT@ 3188 @LENGTH@ 71
------------INS MethodInvocation@@MethodName:map:[Objects::toString] @TO@ MethodInvocation@@extensions.stream().map(Objects::toString).collect(Collectors.toList()) @AT@ 3188 @LENGTH@ 42
------------INS MethodInvocation@@MethodName:stream:[] @TO@ MethodInvocation@@extensions.stream().map(Objects::toString).collect(Collectors.toList()) @AT@ 3188 @LENGTH@ 19
------------INS SimpleName@@Name:extensions @TO@ MethodInvocation@@extensions.stream().map(Objects::toString).collect(Collectors.toList()) @AT@ 3188 @LENGTH@ 10
------------INS SimpleName@@MethodName:collect:[Collectors.toList()] @TO@ MethodInvocation@@extensions.stream().map(Objects::toString).collect(Collectors.toList()) @AT@ 3231 @LENGTH@ 28
---------------INS MethodInvocation@@Collectors.toList() @TO@ SimpleName@@MethodName:collect:[Collectors.toList()] @AT@ 3239 @LENGTH@ 19
------------------INS SimpleName@@Name:Collectors @TO@ MethodInvocation@@Collectors.toList() @AT@ 3239 @LENGTH@ 10
------------------INS SimpleName@@MethodName:toList:[] @TO@ MethodInvocation@@Collectors.toList() @AT@ 3250 @LENGTH@ 8


UPD EnhancedForStatement@@for (Document dbo : indexes) {  if (dbo.get("name") != null && dbo.get("name") instanceof String && ((String)dbo.get("name")).startsWith("name")) {    return true;  }} @TO@ for (Document document : indexes) {  if (document.get("name") != null && document.get("name") instanceof String && ((String)document.get("name")).startsWith("name")) {    return true;  }} @AT@ 8293 @LENGTH@ 201
---UPD SingleVariableDeclaration@@Document dbo @TO@ Document document @AT@ 8298 @LENGTH@ 12
------UPD SimpleName@@dbo @TO@ document @AT@ 8307 @LENGTH@ 3
---UPD IfStatement@@if (dbo.get("name") != null && dbo.get("name") instanceof String && ((String)dbo.get("name")).startsWith("name")) {  return true;} @TO@ if (document.get("name") != null && document.get("name") instanceof String && ((String)document.get("name")).startsWith("name")) {  return true;} @AT@ 8331 @LENGTH@ 155
------UPD InfixExpression@@dbo.get("name") != null && dbo.get("name") instanceof String && ((String)dbo.get("name")).startsWith("name") @TO@ document.get("name") != null && document.get("name") instanceof String && ((String)document.get("name")).startsWith("name") @AT@ 8335 @LENGTH@ 118
---------UPD InfixExpression@@dbo.get("name") != null && dbo.get("name") instanceof String @TO@ document.get("name") != null && document.get("name") instanceof String @AT@ 8335 @LENGTH@ 60
------------UPD InfixExpression@@dbo.get("name") != null @TO@ document.get("name") != null @AT@ 8335 @LENGTH@ 23
---------------UPD MethodInvocation@@dbo.get("name") @TO@ document.get("name") @AT@ 8335 @LENGTH@ 15
------------------UPD SimpleName@@Name:dbo @TO@ Name:document @AT@ 8335 @LENGTH@ 3
------------UPD InstanceofExpression@@dbo.get("name") instanceof String @TO@ document.get("name") instanceof String @AT@ 8362 @LENGTH@ 33
---------------UPD MethodInvocation@@dbo.get("name") @TO@ document.get("name") @AT@ 8362 @LENGTH@ 15
------------------UPD SimpleName@@Name:dbo @TO@ Name:document @AT@ 8362 @LENGTH@ 3
---------UPD MethodInvocation@@((String)dbo.get("name")).startsWith("name") @TO@ ((String)document.get("name")).startsWith("name") @AT@ 8408 @LENGTH@ 45
------------UPD ParenthesizedExpression@@((String)dbo.get("name")) @TO@ ((String)document.get("name")) @AT@ 8408 @LENGTH@ 26
---------------UPD CastExpression@@(String)dbo.get("name") @TO@ (String)document.get("name") @AT@ 8409 @LENGTH@ 24
------------------UPD MethodInvocation@@dbo.get("name") @TO@ document.get("name") @AT@ 8418 @LENGTH@ 15
---------------------UPD SimpleName@@Name:dbo @TO@ Name:document @AT@ 8418 @LENGTH@ 3


UPD TypeDeclaration@@[@ConfigurationProperties(prefix="camel.dataformat.bindy"), public]BindyCsvDataFormatConfiguration,  @TO@ [@ConfigurationProperties(prefix="camel.dataformat.bindy-csv"), public]BindyCsvDataFormatConfiguration,  @AT@ 1172 @LENGTH@ 934
---UPD NormalAnnotation@@@ConfigurationProperties(prefix="camel.dataformat.bindy") @TO@ @ConfigurationProperties(prefix="camel.dataformat.bindy-csv") @AT@ 1172 @LENGTH@ 59


UPD TypeDeclaration@@[@Configuration, @ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration"), @EnableConfigurationProperties(HeaderLanguageConfiguration.class), public]HeaderLanguageAutoConfiguration,  @TO@ [@Configuration, @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration"), @EnableConfigurationProperties(HeaderLanguageConfiguration.class), public]HeaderLanguageAutoConfiguration,  @AT@ 1665 @LENGTH@ 1085
---UPD NormalAnnotation@@@ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1680 @LENGTH@ 79
---UPD NormalAnnotation@@@AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1760 @LENGTH@ 80


UPD EnhancedForStatement@@for (String line : original) {  while (line.length() > columnWidth) {    int split=line.lastIndexOf(delimiter,columnWidth);    String toAdd=split == -1 ? line.substring(0,columnWidth) : line.substring(0,split);    result.add(String.format("%-" + columnWidth + "s",toAdd));    line=line.substring(split == -1 ? columnWidth : split + 1);  }  result.add(String.format("%-" + columnWidth + "s",line));} @TO@ for (String line : original) {  while (line.length() > columnWidth) {    int split=line.lastIndexOf(delimiter,columnWidth);    String toAdd=split == -1 ? line.substring(0,columnWidth) : line.substring(0,split);    result.add(String.format("%-" + columnWidth + "s",toAdd));    line=line.substring(split == -1 ? columnWidth : split + 1);  }  if (columnWidth > 0) {    result.add(String.format("%-" + columnWidth + "s",line));  }} @AT@ 1203 @LENGTH@ 448
---INS IfStatement@@if (columnWidth > 0) {  result.add(String.format("%-" + columnWidth + "s",line));} @TO@ EnhancedForStatement@@for (String line : original) {  while (line.length() > columnWidth) {    int split=line.lastIndexOf(delimiter,columnWidth);    String toAdd=split == -1 ? line.substring(0,columnWidth) : line.substring(0,split);    result.add(String.format("%-" + columnWidth + "s",toAdd));    line=line.substring(split == -1 ? columnWidth : split + 1);  }  result.add(String.format("%-" + columnWidth + "s",line));} @AT@ 1563 @LENGTH@ 116
------INS InfixExpression@@columnWidth > 0 @TO@ IfStatement@@if (columnWidth > 0) {  result.add(String.format("%-" + columnWidth + "s",line));} @AT@ 1567 @LENGTH@ 15
---------INS SimpleName@@columnWidth @TO@ InfixExpression@@columnWidth > 0 @AT@ 1567 @LENGTH@ 11
---------INS Operator@@> @TO@ InfixExpression@@columnWidth > 0 @AT@ 1578 @LENGTH@ 1
---------INS NumberLiteral@@0 @TO@ InfixExpression@@columnWidth > 0 @AT@ 1581 @LENGTH@ 1
------INS Block@@ThenBody:{  result.add(String.format("%-" + columnWidth + "s",line));} @TO@ IfStatement@@if (columnWidth > 0) {  result.add(String.format("%-" + columnWidth + "s",line));} @AT@ 1584 @LENGTH@ 95
---------MOV ExpressionStatement@@MethodInvocation:result.add(String.format("%-" + columnWidth + "s",line)) @TO@ Block@@ThenBody:{  result.add(String.format("%-" + columnWidth + "s",line));} @AT@ 1563 @LENGTH@ 58


UPD MethodDeclaration@@public, voidMethodName:XMLStreamReaderReader, XMLStreamReader reader, XMLOutputFactory outfactory,  @TO@ voidMethodName:XMLStreamReaderReader, XMLStreamReader reader, XMLOutputFactory outfactory,  @AT@ 1452 @LENGTH@ 370
---DEL Modifier@@public @AT@ 1452 @LENGTH@ 6


DEL ExpressionStatement@@MethodInvocation:removeRefreshToken(refreshToken) @AT@ 6212 @LENGTH@ 33
---DEL MethodInvocation@@removeRefreshToken(refreshToken) @AT@ 6212 @LENGTH@ 32
------DEL SimpleName@@MethodName:removeRefreshToken:[refreshToken] @AT@ 6212 @LENGTH@ 32
---------DEL SimpleName@@refreshToken @AT@ 6231 @LENGTH@ 12


UPD VariableDeclarationStatement@@int pathResult=pathCompleter.complete(ctx,path,0,candidates); @TO@ int pathResult=pathCompleter.complete(ctx,path,path.length(),candidates); @AT@ 7654 @LENGTH@ 66
---UPD VariableDeclarationFragment@@pathResult=pathCompleter.complete(ctx,path,0,candidates) @TO@ pathResult=pathCompleter.complete(ctx,path,path.length(),candidates) @AT@ 7658 @LENGTH@ 61
------UPD MethodInvocation@@pathCompleter.complete(ctx,path,0,candidates) @TO@ pathCompleter.complete(ctx,path,path.length(),candidates) @AT@ 7671 @LENGTH@ 48
---------UPD SimpleName@@MethodName:complete:[ctx, path, 0, candidates] @TO@ MethodName:complete:[ctx, path, path.length(), candidates] @AT@ 7685 @LENGTH@ 34
------------INS MethodInvocation@@path.length() @TO@ SimpleName@@MethodName:complete:[ctx, path, 0, candidates] @AT@ 7705 @LENGTH@ 13
---------------INS SimpleName@@Name:path @TO@ MethodInvocation@@path.length() @AT@ 7705 @LENGTH@ 4
---------------INS SimpleName@@MethodName:length:[] @TO@ MethodInvocation@@path.length() @AT@ 7710 @LENGTH@ 8
------------DEL NumberLiteral@@0 @AT@ 7705 @LENGTH@ 1


UPD TryStatement@@try {  KeyStore credentialStore=KeyStore.getInstance(KEYSTORE_TYPE);  credentialStore.load(null,null);  packToKeyStore(credentialStore);  if (!storeFile.canWrite()) {    throw log.cannotWriteStorageFie(storeFile.getAbsolutePath(),storeName);  }  credentialStore.store(new FileOutputStream(storeFile),storagePassword);} catch (GeneralSecurityException|IOException e) {  if (storeFileActuallyCreated) {    storeFile.delete();  }  throw new CredentialStoreException(e);} @TO@ try {  KeyStore credentialStore=KeyStore.getInstance(KEYSTORE_TYPE);  credentialStore.load(null,null);  packToKeyStore(credentialStore);  if (!storeFile.canWrite()) {    throw log.cannotWriteStorageFie(storeFile.getAbsolutePath(),storeName);  }  try (FileOutputStream stream=new FileOutputStream(storeFile)){    credentialStore.store(stream,storagePassword);  } } catch (GeneralSecurityException|IOException e) {  if (storeFileActuallyCreated) {    storeFile.delete();  }  throw new CredentialStoreException(e);} @AT@ 15019 @LENGTH@ 737
---INS TryStatement@@try (FileOutputStream stream=new FileOutputStream(storeFile)){  credentialStore.store(stream,storagePassword);}  @TO@ TryStatement@@try {  KeyStore credentialStore=KeyStore.getInstance(KEYSTORE_TYPE);  credentialStore.load(null,null);  packToKeyStore(credentialStore);  if (!storeFile.canWrite()) {    throw log.cannotWriteStorageFie(storeFile.getAbsolutePath(),storeName);  }  credentialStore.store(new FileOutputStream(storeFile),storagePassword);} catch (GeneralSecurityException|IOException e) {  if (storeFileActuallyCreated) {    storeFile.delete();  }  throw new CredentialStoreException(e);} @AT@ 15348 @LENGTH@ 143
------INS VariableDeclarationExpression@@FileOutputStream stream=new FileOutputStream(storeFile) @TO@ TryStatement@@try (FileOutputStream stream=new FileOutputStream(storeFile)){  credentialStore.store(stream,storagePassword);}  @AT@ 15353 @LENGTH@ 57
---------INS SimpleType@@FileOutputStream @TO@ VariableDeclarationExpression@@FileOutputStream stream=new FileOutputStream(storeFile) @AT@ 15353 @LENGTH@ 16
---------INS VariableDeclarationFragment@@stream=new FileOutputStream(storeFile) @TO@ VariableDeclarationExpression@@FileOutputStream stream=new FileOutputStream(storeFile) @AT@ 15370 @LENGTH@ 40
------------INS SimpleName@@stream @TO@ VariableDeclarationFragment@@stream=new FileOutputStream(storeFile) @AT@ 15370 @LENGTH@ 6
------------INS ClassInstanceCreation@@FileOutputStream[storeFile] @TO@ VariableDeclarationFragment@@stream=new FileOutputStream(storeFile) @AT@ 15379 @LENGTH@ 31
---------------MOV New@@new @TO@ ClassInstanceCreation@@FileOutputStream[storeFile] @AT@ 15370 @LENGTH@ 3
---------------MOV SimpleType@@FileOutputStream @TO@ ClassInstanceCreation@@FileOutputStream[storeFile] @AT@ 15374 @LENGTH@ 16
---------------MOV SimpleName@@storeFile @TO@ ClassInstanceCreation@@FileOutputStream[storeFile] @AT@ 15391 @LENGTH@ 9
------INS ExpressionStatement@@MethodInvocation:credentialStore.store(stream,storagePassword) @TO@ TryStatement@@try (FileOutputStream stream=new FileOutputStream(storeFile)){  credentialStore.store(stream,storagePassword);}  @AT@ 15430 @LENGTH@ 47
---------INS MethodInvocation@@credentialStore.store(stream,storagePassword) @TO@ ExpressionStatement@@MethodInvocation:credentialStore.store(stream,storagePassword) @AT@ 15430 @LENGTH@ 46
------------INS SimpleName@@Name:credentialStore @TO@ MethodInvocation@@credentialStore.store(stream,storagePassword) @AT@ 15430 @LENGTH@ 15
------------INS SimpleName@@MethodName:store:[stream, storagePassword] @TO@ MethodInvocation@@credentialStore.store(stream,storagePassword) @AT@ 15446 @LENGTH@ 30
---------------MOV SimpleName@@storagePassword @TO@ SimpleName@@MethodName:store:[stream, storagePassword] @AT@ 15403 @LENGTH@ 15
---------------INS SimpleName@@stream @TO@ SimpleName@@MethodName:store:[stream, storagePassword] @AT@ 15452 @LENGTH@ 6
---DEL ExpressionStatement@@MethodInvocation:credentialStore.store(new FileOutputStream(storeFile),storagePassword) @AT@ 15348 @LENGTH@ 72
------DEL MethodInvocation@@credentialStore.store(new FileOutputStream(storeFile),storagePassword) @AT@ 15348 @LENGTH@ 71
---------DEL SimpleName@@Name:credentialStore @AT@ 15348 @LENGTH@ 15
---------DEL SimpleName@@MethodName:store:[new FileOutputStream(storeFile), storagePassword] @AT@ 15364 @LENGTH@ 55
------------DEL ClassInstanceCreation@@FileOutputStream[storeFile] @AT@ 15370 @LENGTH@ 31


UPD ExpressionStatement@@MethodInvocation:assertThat(AuthorityUtils.authorityListToSet(result.getAuthorities()).contains("foo")) @TO@ MethodInvocation:assertThat(AuthorityUtils.authorityListToSet(result.getAuthorities())).contains("foo") @AT@ 3025 @LENGTH@ 92
---UPD MethodInvocation@@assertThat(AuthorityUtils.authorityListToSet(result.getAuthorities()).contains("foo")) @TO@ assertThat(AuthorityUtils.authorityListToSet(result.getAuthorities())).contains("foo") @AT@ 3025 @LENGTH@ 91
------INS MethodInvocation@@MethodName:assertThat:[AuthorityUtils.authorityListToSet(result.getAuthorities())] @TO@ MethodInvocation@@assertThat(AuthorityUtils.authorityListToSet(result.getAuthorities()).contains("foo")) @AT@ 3025 @LENGTH@ 70
---------INS MethodInvocation@@AuthorityUtils.authorityListToSet(result.getAuthorities()) @TO@ MethodInvocation@@MethodName:assertThat:[AuthorityUtils.authorityListToSet(result.getAuthorities())] @AT@ 3036 @LENGTH@ 58
------------MOV SimpleName@@Name:AuthorityUtils @TO@ MethodInvocation@@AuthorityUtils.authorityListToSet(result.getAuthorities()) @AT@ 3036 @LENGTH@ 14
------------INS SimpleName@@MethodName:authorityListToSet:[result.getAuthorities()] @TO@ MethodInvocation@@AuthorityUtils.authorityListToSet(result.getAuthorities()) @AT@ 3051 @LENGTH@ 43
---------------INS MethodInvocation@@result.getAuthorities() @TO@ SimpleName@@MethodName:authorityListToSet:[result.getAuthorities()] @AT@ 3070 @LENGTH@ 23
------------------MOV SimpleName@@Name:result @TO@ MethodInvocation@@result.getAuthorities() @AT@ 3070 @LENGTH@ 6
------------------MOV SimpleName@@MethodName:getAuthorities:[] @TO@ MethodInvocation@@result.getAuthorities() @AT@ 3077 @LENGTH@ 16
------DEL SimpleName@@MethodName:assertThat:[AuthorityUtils.authorityListToSet(result.getAuthorities()).contains("foo")] @AT@ 3025 @LENGTH@ 91
---------DEL MethodInvocation@@AuthorityUtils.authorityListToSet(result.getAuthorities()).contains("foo") @AT@ 3036 @LENGTH@ 79
------------DEL MethodInvocation@@MethodName:authorityListToSet:[result.getAuthorities()] @AT@ 3036 @LENGTH@ 58
---------------DEL MethodInvocation@@result.getAuthorities() @AT@ 3070 @LENGTH@ 23
------MOV SimpleName@@MethodName:contains:["foo"] @TO@ MethodInvocation@@assertThat(AuthorityUtils.authorityListToSet(result.getAuthorities()).contains("foo")) @AT@ 3100 @LENGTH@ 15


UPD TypeDeclaration@@[@Configuration, @ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration"), public]BeanComponentAutoConfiguration,  @TO@ [@Configuration, @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration"), public]BeanComponentAutoConfiguration,  @AT@ 1438 @LENGTH@ 596
---UPD NormalAnnotation@@@ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1453 @LENGTH@ 79
---UPD NormalAnnotation@@@AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1533 @LENGTH@ 80


UPD ExpressionStatement@@MethodInvocation:logger.warn(String.format("%s is an interface.  The implementing class will not be queried for annotation based listener configurations.  If using @StepScope on a @Bean method, be sure to return the implementing class so listner annotations can be used.",targetSource.getTargetClass().getName())) @TO@ MethodInvocation:logger.warn(String.format("%s is an interface.  The implementing class will not be queried for annotation based listener configurations.  If using @StepScope on a @Bean method, be sure to return the implementing class so listener annotations can be used.",targetSource.getTargetClass().getName())) @AT@ 7694 @LENGTH@ 298
---UPD MethodInvocation@@logger.warn(String.format("%s is an interface.  The implementing class will not be queried for annotation based listener configurations.  If using @StepScope on a @Bean method, be sure to return the implementing class so listner annotations can be used.",targetSource.getTargetClass().getName())) @TO@ logger.warn(String.format("%s is an interface.  The implementing class will not be queried for annotation based listener configurations.  If using @StepScope on a @Bean method, be sure to return the implementing class so listener annotations can be used.",targetSource.getTargetClass().getName())) @AT@ 7694 @LENGTH@ 297
------UPD SimpleName@@MethodName:warn:[String.format("%s is an interface.  The implementing class will not be queried for annotation based listener configurations.  If using @StepScope on a @Bean method, be sure to return the implementing class so listner annotations can be used.",targetSource.getTargetClass().getName())] @TO@ MethodName:warn:[String.format("%s is an interface.  The implementing class will not be queried for annotation based listener configurations.  If using @StepScope on a @Bean method, be sure to return the implementing class so listener annotations can be used.",targetSource.getTargetClass().getName())] @AT@ 7701 @LENGTH@ 290
---------UPD MethodInvocation@@String.format("%s is an interface.  The implementing class will not be queried for annotation based listener configurations.  If using @StepScope on a @Bean method, be sure to return the implementing class so listner annotations can be used.",targetSource.getTargetClass().getName()) @TO@ String.format("%s is an interface.  The implementing class will not be queried for annotation based listener configurations.  If using @StepScope on a @Bean method, be sure to return the implementing class so listener annotations can be used.",targetSource.getTargetClass().getName()) @AT@ 7706 @LENGTH@ 284
------------UPD SimpleName@@MethodName:format:["%s is an interface.  The implementing class will not be queried for annotation based listener configurations.  If using @StepScope on a @Bean method, be sure to return the implementing class so listner annotations can be used.", targetSource.getTargetClass().getName()] @TO@ MethodName:format:["%s is an interface.  The implementing class will not be queried for annotation based listener configurations.  If using @StepScope on a @Bean method, be sure to return the implementing class so listener annotations can be used.", targetSource.getTargetClass().getName()] @AT@ 7713 @LENGTH@ 277
---------------UPD StringLiteral@@"%s is an interface.  The implementing class will not be queried for annotation based listener configurations.  If using @StepScope on a @Bean method, be sure to return the implementing class so listner annotations can be used." @TO@ "%s is an interface.  The implementing class will not be queried for annotation based listener configurations.  If using @StepScope on a @Bean method, be sure to return the implementing class so listener annotations can be used." @AT@ 7720 @LENGTH@ 228


UPD IfStatement@@if (loadCounter == 1 && getHeaderComment() == null && layoutData.isEmpty()) {  int index=commentLines.size() - 1;  while (index >= 0 && commentLines.get(index).length() > 0) {    index--;  }  setHeaderComment(extractComment(commentLines,0,index - 1));  return index + 1;} else {  return 0;} @TO@ if (loadCounter == 1 && layoutData.isEmpty()) {  int index=commentLines.size() - 1;  while (index >= 0 && commentLines.get(index).length() > 0) {    index--;  }  if (getHeaderComment() == null) {    setHeaderComment(extractComment(commentLines,0,index - 1));  }  return index + 1;} else {  return 0;} @AT@ 27090 @LENGTH@ 529
---UPD InfixExpression@@loadCounter == 1 && getHeaderComment() == null && layoutData.isEmpty() @TO@ loadCounter == 1 && layoutData.isEmpty() @AT@ 27094 @LENGTH@ 86
------DEL InfixExpression@@loadCounter == 1 && getHeaderComment() == null @AT@ 27094 @LENGTH@ 46
---------DEL InfixExpression@@getHeaderComment() == null @AT@ 27114 @LENGTH@ 26
------------DEL MethodInvocation@@MethodName:getHeaderComment:[] @AT@ 27114 @LENGTH@ 18
------------DEL Operator@@== @AT@ 27132 @LENGTH@ 2
------------DEL NullLiteral@@null @AT@ 27136 @LENGTH@ 4
------MOV InfixExpression@@loadCounter == 1 @TO@ InfixExpression@@loadCounter == 1 && getHeaderComment() == null && layoutData.isEmpty() @AT@ 27094 @LENGTH@ 16
------MOV Operator@@&& @TO@ InfixExpression@@loadCounter == 1 && getHeaderComment() == null && layoutData.isEmpty() @AT@ 27110 @LENGTH@ 2
------DEL Operator@@&& @AT@ 27140 @LENGTH@ 2
---UPD Block@@ThenBody:{  int index=commentLines.size() - 1;  while (index >= 0 && commentLines.get(index).length() > 0) {    index--;  }  setHeaderComment(extractComment(commentLines,0,index - 1));  return index + 1;} @TO@ ThenBody:{  int index=commentLines.size() - 1;  while (index >= 0 && commentLines.get(index).length() > 0) {    index--;  }  if (getHeaderComment() == null) {    setHeaderComment(extractComment(commentLines,0,index - 1));  }  return index + 1;} @AT@ 27190 @LENGTH@ 374
------INS IfStatement@@if (getHeaderComment() == null) {  setHeaderComment(extractComment(commentLines,0,index - 1));} @TO@ Block@@ThenBody:{  int index=commentLines.size() - 1;  while (index >= 0 && commentLines.get(index).length() > 0) {    index--;  }  setHeaderComment(extractComment(commentLines,0,index - 1));  return index + 1;} @AT@ 27417 @LENGTH@ 137
---------INS InfixExpression@@getHeaderComment() == null @TO@ IfStatement@@if (getHeaderComment() == null) {  setHeaderComment(extractComment(commentLines,0,index - 1));} @AT@ 27421 @LENGTH@ 26
------------INS MethodInvocation@@MethodName:getHeaderComment:[] @TO@ InfixExpression@@getHeaderComment() == null @AT@ 27421 @LENGTH@ 18
------------INS Operator@@== @TO@ InfixExpression@@getHeaderComment() == null @AT@ 27439 @LENGTH@ 2
------------INS NullLiteral@@null @TO@ InfixExpression@@getHeaderComment() == null @AT@ 27443 @LENGTH@ 4
---------INS Block@@ThenBody:{  setHeaderComment(extractComment(commentLines,0,index - 1));} @TO@ IfStatement@@if (getHeaderComment() == null) {  setHeaderComment(extractComment(commentLines,0,index - 1));} @AT@ 27461 @LENGTH@ 93
------------MOV ExpressionStatement@@MethodInvocation:setHeaderComment(extractComment(commentLines,0,index - 1)) @TO@ Block@@ThenBody:{  setHeaderComment(extractComment(commentLines,0,index - 1));} @AT@ 27463 @LENGTH@ 61


UPD VariableDeclarationStatement@@List<RecordMetadata> recordMetaData1=(List<RecordMetadata>)(in.getHeader(KafkaConstants.KAFKA_RECORDMETA)); @TO@ List<RecordMetadata> recordMetaData1=(List<RecordMetadata>)in.getHeader(KafkaConstants.KAFKA_RECORDMETA); @AT@ 10826 @LENGTH@ 110
---UPD VariableDeclarationFragment@@recordMetaData1=(List<RecordMetadata>)(in.getHeader(KafkaConstants.KAFKA_RECORDMETA)) @TO@ recordMetaData1=(List<RecordMetadata>)in.getHeader(KafkaConstants.KAFKA_RECORDMETA) @AT@ 10847 @LENGTH@ 88
------UPD CastExpression@@(List<RecordMetadata>)(in.getHeader(KafkaConstants.KAFKA_RECORDMETA)) @TO@ (List<RecordMetadata>)in.getHeader(KafkaConstants.KAFKA_RECORDMETA) @AT@ 10866 @LENGTH@ 69
---------DEL ParenthesizedExpression@@(in.getHeader(KafkaConstants.KAFKA_RECORDMETA)) @AT@ 10888 @LENGTH@ 47
---------MOV MethodInvocation@@in.getHeader(KafkaConstants.KAFKA_RECORDMETA) @TO@ CastExpression@@(List<RecordMetadata>)(in.getHeader(KafkaConstants.KAFKA_RECORDMETA)) @AT@ 10889 @LENGTH@ 45


INS MethodDeclaration@@protected, voidMethodName:BonitaAPIBuilder,  @TO@ TypeDeclaration@@[public]BonitaAPIBuilder,  @AT@ 1252 @LENGTH@ 37
---INS Modifier@@protected @TO@ MethodDeclaration@@protected, voidMethodName:BonitaAPIBuilder,  @AT@ 1252 @LENGTH@ 9
---INS SimpleName@@MethodName:BonitaAPIBuilder @TO@ MethodDeclaration@@protected, voidMethodName:BonitaAPIBuilder,  @AT@ 1262 @LENGTH@ 16


UPD ExpressionStatement@@MethodInvocation:doAnswer(invocation -> rabbitConn).when(cf).newConnection(any(ExecutorService.class)) @TO@ MethodInvocation:doAnswer(invocation -> rabbitConn).when(cf).newConnection(any(ExecutorService.class),anyString()) @AT@ 1716 @LENGTH@ 86
---UPD MethodInvocation@@doAnswer(invocation -> rabbitConn).when(cf).newConnection(any(ExecutorService.class)) @TO@ doAnswer(invocation -> rabbitConn).when(cf).newConnection(any(ExecutorService.class),anyString()) @AT@ 1716 @LENGTH@ 85
------UPD SimpleName@@MethodName:newConnection:[any(ExecutorService.class)] @TO@ MethodName:newConnection:[any(ExecutorService.class), anyString()] @AT@ 1760 @LENGTH@ 41
---------INS MethodInvocation@@MethodName:anyString:[] @TO@ SimpleName@@MethodName:newConnection:[any(ExecutorService.class)] @AT@ 1871 @LENGTH@ 11


INS MethodDeclaration@@public, void, MethodName:testAttributes,  @TO@ TypeDeclaration@@[public]MonitorTest,  @AT@ 845 @LENGTH@ 398
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testAttributes,  @AT@ 845 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testAttributes,  @AT@ 852 @LENGTH@ 4
---INS SimpleName@@MethodName:testAttributes @TO@ MethodDeclaration@@public, void, MethodName:testAttributes,  @AT@ 857 @LENGTH@ 14
---INS VariableDeclarationStatement@@HealthStatus healthStatus=HealthStatus.up().withAttribute("a","b").withAttribute("c","d"); @TO@ MethodDeclaration@@public, void, MethodName:testAttributes,  @AT@ 885 @LENGTH@ 128
------INS SimpleType@@HealthStatus @TO@ VariableDeclarationStatement@@HealthStatus healthStatus=HealthStatus.up().withAttribute("a","b").withAttribute("c","d"); @AT@ 885 @LENGTH@ 12
------INS VariableDeclarationFragment@@healthStatus=HealthStatus.up().withAttribute("a","b").withAttribute("c","d") @TO@ VariableDeclarationStatement@@HealthStatus healthStatus=HealthStatus.up().withAttribute("a","b").withAttribute("c","d"); @AT@ 898 @LENGTH@ 114
---------INS SimpleName@@healthStatus @TO@ VariableDeclarationFragment@@healthStatus=HealthStatus.up().withAttribute("a","b").withAttribute("c","d") @AT@ 898 @LENGTH@ 12
---------INS MethodInvocation@@HealthStatus.up().withAttribute("a","b").withAttribute("c","d") @TO@ VariableDeclarationFragment@@healthStatus=HealthStatus.up().withAttribute("a","b").withAttribute("c","d") @AT@ 913 @LENGTH@ 99
------------INS MethodInvocation@@MethodName:withAttribute:["a", "b"] @TO@ MethodInvocation@@HealthStatus.up().withAttribute("a","b").withAttribute("c","d") @AT@ 913 @LENGTH@ 58
---------------INS StringLiteral@@"a" @TO@ MethodInvocation@@MethodName:withAttribute:["a", "b"] @AT@ 962 @LENGTH@ 3
---------------INS StringLiteral@@"b" @TO@ MethodInvocation@@MethodName:withAttribute:["a", "b"] @AT@ 967 @LENGTH@ 3
------------INS MethodInvocation@@MethodName:up:[] @TO@ MethodInvocation@@HealthStatus.up().withAttribute("a","b").withAttribute("c","d") @AT@ 913 @LENGTH@ 17
------------INS SimpleName@@Name:HealthStatus @TO@ MethodInvocation@@HealthStatus.up().withAttribute("a","b").withAttribute("c","d") @AT@ 913 @LENGTH@ 12
------------INS SimpleName@@MethodName:withAttribute:["c", "d"] @TO@ MethodInvocation@@HealthStatus.up().withAttribute("a","b").withAttribute("c","d") @AT@ 989 @LENGTH@ 23
---------------INS StringLiteral@@"c" @TO@ SimpleName@@MethodName:withAttribute:["c", "d"] @AT@ 1003 @LENGTH@ 3
---------------INS StringLiteral@@"d" @TO@ SimpleName@@MethodName:withAttribute:["c", "d"] @AT@ 1008 @LENGTH@ 3
---INS VariableDeclarationStatement@@String message=healthStatus.getMessage().get(); @TO@ MethodDeclaration@@public, void, MethodName:testAttributes,  @AT@ 1023 @LENGTH@ 49
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String message=healthStatus.getMessage().get(); @AT@ 1023 @LENGTH@ 6
------INS VariableDeclarationFragment@@message=healthStatus.getMessage().get() @TO@ VariableDeclarationStatement@@String message=healthStatus.getMessage().get(); @AT@ 1030 @LENGTH@ 41
---------INS SimpleName@@message @TO@ VariableDeclarationFragment@@message=healthStatus.getMessage().get() @AT@ 1030 @LENGTH@ 7
---------INS MethodInvocation@@healthStatus.getMessage().get() @TO@ VariableDeclarationFragment@@message=healthStatus.getMessage().get() @AT@ 1040 @LENGTH@ 31
------------INS MethodInvocation@@MethodName:getMessage:[] @TO@ MethodInvocation@@healthStatus.getMessage().get() @AT@ 1040 @LENGTH@ 25
------------INS SimpleName@@Name:healthStatus @TO@ MethodInvocation@@healthStatus.getMessage().get() @AT@ 1040 @LENGTH@ 12
------------INS SimpleName@@MethodName:get:[] @TO@ MethodInvocation@@healthStatus.getMessage().get() @AT@ 1066 @LENGTH@ 5
---INS ExpressionStatement@@MethodInvocation:Assert.assertTrue("Expected a",message.contains("a")) @TO@ MethodDeclaration@@public, void, MethodName:testAttributes,  @AT@ 1081 @LENGTH@ 55
------INS MethodInvocation@@Assert.assertTrue("Expected a",message.contains("a")) @TO@ ExpressionStatement@@MethodInvocation:Assert.assertTrue("Expected a",message.contains("a")) @AT@ 1081 @LENGTH@ 54
---------INS SimpleName@@Name:Assert @TO@ MethodInvocation@@Assert.assertTrue("Expected a",message.contains("a")) @AT@ 1081 @LENGTH@ 6
---------INS SimpleName@@MethodName:assertTrue:["Expected a", message.contains("a")] @TO@ MethodInvocation@@Assert.assertTrue("Expected a",message.contains("a")) @AT@ 1088 @LENGTH@ 47
------------INS StringLiteral@@"Expected a" @TO@ SimpleName@@MethodName:assertTrue:["Expected a", message.contains("a")] @AT@ 1099 @LENGTH@ 12
------------INS MethodInvocation@@message.contains("a") @TO@ SimpleName@@MethodName:assertTrue:["Expected a", message.contains("a")] @AT@ 1113 @LENGTH@ 21
---------------INS SimpleName@@Name:message @TO@ MethodInvocation@@message.contains("a") @AT@ 1113 @LENGTH@ 7
---------------INS SimpleName@@MethodName:contains:["a"] @TO@ MethodInvocation@@message.contains("a") @AT@ 1121 @LENGTH@ 13
------------------INS StringLiteral@@"a" @TO@ SimpleName@@MethodName:contains:["a"] @AT@ 1130 @LENGTH@ 3
---INS ExpressionStatement@@MethodInvocation:Assert.assertTrue("Expected c",message.contains("c")) @TO@ MethodDeclaration@@public, void, MethodName:testAttributes,  @AT@ 1145 @LENGTH@ 55
------INS MethodInvocation@@Assert.assertTrue("Expected c",message.contains("c")) @TO@ ExpressionStatement@@MethodInvocation:Assert.assertTrue("Expected c",message.contains("c")) @AT@ 1145 @LENGTH@ 54
---------INS SimpleName@@Name:Assert @TO@ MethodInvocation@@Assert.assertTrue("Expected c",message.contains("c")) @AT@ 1145 @LENGTH@ 6
---------INS SimpleName@@MethodName:assertTrue:["Expected c", message.contains("c")] @TO@ MethodInvocation@@Assert.assertTrue("Expected c",message.contains("c")) @AT@ 1152 @LENGTH@ 47
------------INS StringLiteral@@"Expected c" @TO@ SimpleName@@MethodName:assertTrue:["Expected c", message.contains("c")] @AT@ 1163 @LENGTH@ 12
------------INS MethodInvocation@@message.contains("c") @TO@ SimpleName@@MethodName:assertTrue:["Expected c", message.contains("c")] @AT@ 1177 @LENGTH@ 21
---------------INS SimpleName@@Name:message @TO@ MethodInvocation@@message.contains("c") @AT@ 1177 @LENGTH@ 7
---------------INS SimpleName@@MethodName:contains:["c"] @TO@ MethodInvocation@@message.contains("c") @AT@ 1185 @LENGTH@ 13
------------------INS StringLiteral@@"c" @TO@ SimpleName@@MethodName:contains:["c"] @AT@ 1194 @LENGTH@ 3
---INS ExpressionStatement@@MethodInvocation:System.out.println(message) @TO@ MethodDeclaration@@public, void, MethodName:testAttributes,  @AT@ 1209 @LENGTH@ 28
------INS MethodInvocation@@System.out.println(message) @TO@ ExpressionStatement@@MethodInvocation:System.out.println(message) @AT@ 1209 @LENGTH@ 27
---------INS QualifiedName@@Name:System.out @TO@ MethodInvocation@@System.out.println(message) @AT@ 1209 @LENGTH@ 10
---------INS SimpleName@@MethodName:println:[message] @TO@ MethodInvocation@@System.out.println(message) @AT@ 1220 @LENGTH@ 16
------------INS SimpleName@@message @TO@ SimpleName@@MethodName:println:[message] @AT@ 1228 @LENGTH@ 7


UPD TypeDeclaration@@[@Configuration, @ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration"), @EnableConfigurationProperties(BeanLanguageConfiguration.class), public]BeanLanguageAutoConfiguration,  @TO@ [@Configuration, @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration"), @EnableConfigurationProperties(BeanLanguageConfiguration.class), public]BeanLanguageAutoConfiguration,  @AT@ 1659 @LENGTH@ 1067
---UPD NormalAnnotation@@@ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1674 @LENGTH@ 79
---UPD NormalAnnotation@@@AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1754 @LENGTH@ 80


INS FieldDeclaration@@private, static, final, Pattern, [NO_DIGITS=Pattern.compile("\\D+")] @TO@ TypeDeclaration@@[public, abstract]QueryUtils,  @AT@ 3053 @LENGTH@ 65
---INS Modifier@@private @TO@ FieldDeclaration@@private, static, final, Pattern, [NO_DIGITS=Pattern.compile("\\D+")] @AT@ 3053 @LENGTH@ 7
---INS Modifier@@static @TO@ FieldDeclaration@@private, static, final, Pattern, [NO_DIGITS=Pattern.compile("\\D+")] @AT@ 3061 @LENGTH@ 6
---INS Modifier@@final @TO@ FieldDeclaration@@private, static, final, Pattern, [NO_DIGITS=Pattern.compile("\\D+")] @AT@ 3068 @LENGTH@ 5
---INS SimpleType@@Pattern @TO@ FieldDeclaration@@private, static, final, Pattern, [NO_DIGITS=Pattern.compile("\\D+")] @AT@ 3074 @LENGTH@ 7
---INS VariableDeclarationFragment@@NO_DIGITS=Pattern.compile("\\D+") @TO@ FieldDeclaration@@private, static, final, Pattern, [NO_DIGITS=Pattern.compile("\\D+")] @AT@ 3082 @LENGTH@ 35
------INS SimpleName@@NO_DIGITS @TO@ VariableDeclarationFragment@@NO_DIGITS=Pattern.compile("\\D+") @AT@ 3082 @LENGTH@ 9
------INS MethodInvocation@@Pattern.compile("\\D+") @TO@ VariableDeclarationFragment@@NO_DIGITS=Pattern.compile("\\D+") @AT@ 3094 @LENGTH@ 23
---------INS SimpleName@@Name:Pattern @TO@ MethodInvocation@@Pattern.compile("\\D+") @AT@ 3094 @LENGTH@ 7
---------INS SimpleName@@MethodName:compile:["\\D+"] @TO@ MethodInvocation@@Pattern.compile("\\D+") @AT@ 3102 @LENGTH@ 15
------------INS StringLiteral@@"\\D+" @TO@ SimpleName@@MethodName:compile:["\\D+"] @AT@ 3110 @LENGTH@ 6


UPD ExpressionStatement@@MethodInvocation:assertEquals(54321,tweet2.getId()) @TO@ MethodInvocation:assertEquals("54321",tweet2.getId()) @AT@ 4689 @LENGTH@ 36
---UPD MethodInvocation@@assertEquals(54321,tweet2.getId()) @TO@ assertEquals("54321",tweet2.getId()) @AT@ 4689 @LENGTH@ 35
------UPD SimpleName@@MethodName:assertEquals:[54321, tweet2.getId()] @TO@ MethodName:assertEquals:["54321", tweet2.getId()] @AT@ 4689 @LENGTH@ 35
---------DEL NumberLiteral@@54321 @AT@ 4702 @LENGTH@ 5
---------INS StringLiteral@@"54321" @TO@ SimpleName@@MethodName:assertEquals:[54321, tweet2.getId()] @AT@ 4704 @LENGTH@ 7


UPD TypeDeclaration@@[@Configuration, @ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration"), @EnableConfigurationProperties(FreemarkerComponentConfiguration.class), public]FreemarkerComponentAutoConfiguration,  @TO@ [@Configuration, @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration"), @EnableConfigurationProperties(FreemarkerComponentConfiguration.class), public]FreemarkerComponentAutoConfiguration,  @AT@ 1637 @LENGTH@ 2106
---UPD NormalAnnotation@@@ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1652 @LENGTH@ 79
---UPD NormalAnnotation@@@AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1732 @LENGTH@ 80


INS FieldDeclaration@@public, static, final, Cascade[], [MERGE_PERSIST={MERGE,PERSIST}] @TO@ EnumDeclaration@@[public]Cascade,  @AT@ 372 @LENGTH@ 63
---INS Modifier@@public @TO@ FieldDeclaration@@public, static, final, Cascade[], [MERGE_PERSIST={MERGE,PERSIST}] @AT@ 372 @LENGTH@ 6
---INS Modifier@@static @TO@ FieldDeclaration@@public, static, final, Cascade[], [MERGE_PERSIST={MERGE,PERSIST}] @AT@ 379 @LENGTH@ 6
---INS Modifier@@final @TO@ FieldDeclaration@@public, static, final, Cascade[], [MERGE_PERSIST={MERGE,PERSIST}] @AT@ 386 @LENGTH@ 5
---INS ArrayType@@Cascade[] @TO@ FieldDeclaration@@public, static, final, Cascade[], [MERGE_PERSIST={MERGE,PERSIST}] @AT@ 392 @LENGTH@ 9
------INS SimpleType@@Cascade @TO@ ArrayType@@Cascade[] @AT@ 392 @LENGTH@ 7
---INS VariableDeclarationFragment@@MERGE_PERSIST={MERGE,PERSIST} @TO@ FieldDeclaration@@public, static, final, Cascade[], [MERGE_PERSIST={MERGE,PERSIST}] @AT@ 402 @LENGTH@ 32
------INS SimpleName@@MERGE_PERSIST @TO@ VariableDeclarationFragment@@MERGE_PERSIST={MERGE,PERSIST} @AT@ 402 @LENGTH@ 13
------INS ArrayInitializer@@{MERGE,PERSIST} @TO@ VariableDeclarationFragment@@MERGE_PERSIST={MERGE,PERSIST} @AT@ 418 @LENGTH@ 16
---------INS SimpleName@@MERGE @TO@ ArrayInitializer@@{MERGE,PERSIST} @AT@ 419 @LENGTH@ 5
---------INS SimpleName@@PERSIST @TO@ ArrayInitializer@@{MERGE,PERSIST} @AT@ 426 @LENGTH@ 7


UPD ExpressionStatement@@Assignment:interfaceType=new JavaType(String.format("%s.%sRepository",domainType.getPackage(),domainType.getSimpleTypeName()),"") @TO@ Assignment:interfaceType=new JavaType(String.format("%s.repository.%sRepository",getProjectOperations().getFocusedTopLevelPackage(),domainType.getSimpleTypeName()),"") @AT@ 5116 @LENGTH@ 148
---UPD Assignment@@interfaceType=new JavaType(String.format("%s.%sRepository",domainType.getPackage(),domainType.getSimpleTypeName()),"") @TO@ interfaceType=new JavaType(String.format("%s.repository.%sRepository",getProjectOperations().getFocusedTopLevelPackage(),domainType.getSimpleTypeName()),"") @AT@ 5116 @LENGTH@ 147
------UPD ClassInstanceCreation@@JavaType[String.format("%s.%sRepository",domainType.getPackage(),domainType.getSimpleTypeName()), ""] @TO@ JavaType[String.format("%s.repository.%sRepository",getProjectOperations().getFocusedTopLevelPackage(),domainType.getSimpleTypeName()), ""] @AT@ 5142 @LENGTH@ 121
---------UPD MethodInvocation@@String.format("%s.%sRepository",domainType.getPackage(),domainType.getSimpleTypeName()) @TO@ String.format("%s.repository.%sRepository",getProjectOperations().getFocusedTopLevelPackage(),domainType.getSimpleTypeName()) @AT@ 5155 @LENGTH@ 103
------------UPD SimpleName@@MethodName:format:["%s.%sRepository", domainType.getPackage(), domainType.getSimpleTypeName()] @TO@ MethodName:format:["%s.repository.%sRepository", getProjectOperations().getFocusedTopLevelPackage(), domainType.getSimpleTypeName()] @AT@ 5162 @LENGTH@ 96
---------------UPD StringLiteral@@"%s.%sRepository" @TO@ "%s.repository.%sRepository" @AT@ 5169 @LENGTH@ 17
---------------UPD MethodInvocation@@domainType.getPackage() @TO@ getProjectOperations().getFocusedTopLevelPackage() @AT@ 5188 @LENGTH@ 23
------------------DEL SimpleName@@Name:domainType @AT@ 5188 @LENGTH@ 10
------------------INS MethodInvocation@@MethodName:getProjectOperations:[] @TO@ MethodInvocation@@domainType.getPackage() @AT@ 5199 @LENGTH@ 22
------------------UPD SimpleName@@MethodName:getPackage:[] @TO@ MethodName:getFocusedTopLevelPackage:[] @AT@ 5199 @LENGTH@ 12


INS IfStatement@@if (clientId == null || clientSecret == null) {  logger.warn("Null Client ID or Client Secret detected. Endpoint that requires authentication will reject request with 401 error.");} @TO@ MethodDeclaration@@private, String, MethodName:getAuthorizationHeader, String clientId, String clientSecret,  @AT@ 4468 @LENGTH@ 185
---INS InfixExpression@@clientId == null || clientSecret == null @TO@ IfStatement@@if (clientId == null || clientSecret == null) {  logger.warn("Null Client ID or Client Secret detected. Endpoint that requires authentication will reject request with 401 error.");} @AT@ 4471 @LENGTH@ 40
------INS InfixExpression@@clientId == null @TO@ InfixExpression@@clientId == null || clientSecret == null @AT@ 4471 @LENGTH@ 16
---------INS SimpleName@@clientId @TO@ InfixExpression@@clientId == null @AT@ 4471 @LENGTH@ 8
---------INS Operator@@== @TO@ InfixExpression@@clientId == null @AT@ 4479 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@clientId == null @AT@ 4483 @LENGTH@ 4
------INS Operator@@|| @TO@ InfixExpression@@clientId == null || clientSecret == null @AT@ 4487 @LENGTH@ 2
------INS InfixExpression@@clientSecret == null @TO@ InfixExpression@@clientId == null || clientSecret == null @AT@ 4491 @LENGTH@ 20
---------INS SimpleName@@clientSecret @TO@ InfixExpression@@clientSecret == null @AT@ 4491 @LENGTH@ 12
---------INS Operator@@== @TO@ InfixExpression@@clientSecret == null @AT@ 4503 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@clientSecret == null @AT@ 4507 @LENGTH@ 4
---INS Block@@ThenBody:{  logger.warn("Null Client ID or Client Secret detected. Endpoint that requires authentication will reject request with 401 error.");} @TO@ IfStatement@@if (clientId == null || clientSecret == null) {  logger.warn("Null Client ID or Client Secret detected. Endpoint that requires authentication will reject request with 401 error.");} @AT@ 4513 @LENGTH@ 140
------INS ExpressionStatement@@MethodInvocation:logger.warn("Null Client ID or Client Secret detected. Endpoint that requires authentication will reject request with 401 error.") @TO@ Block@@ThenBody:{  logger.warn("Null Client ID or Client Secret detected. Endpoint that requires authentication will reject request with 401 error.");} @AT@ 4518 @LENGTH@ 131
---------INS MethodInvocation@@logger.warn("Null Client ID or Client Secret detected. Endpoint that requires authentication will reject request with 401 error.") @TO@ ExpressionStatement@@MethodInvocation:logger.warn("Null Client ID or Client Secret detected. Endpoint that requires authentication will reject request with 401 error.") @AT@ 4518 @LENGTH@ 130
------------INS SimpleName@@Name:logger @TO@ MethodInvocation@@logger.warn("Null Client ID or Client Secret detected. Endpoint that requires authentication will reject request with 401 error.") @AT@ 4518 @LENGTH@ 6
------------INS SimpleName@@MethodName:warn:["Null Client ID or Client Secret detected. Endpoint that requires authentication will reject request with 401 error."] @TO@ MethodInvocation@@logger.warn("Null Client ID or Client Secret detected. Endpoint that requires authentication will reject request with 401 error.") @AT@ 4525 @LENGTH@ 123
---------------INS StringLiteral@@"Null Client ID or Client Secret detected. Endpoint that requires authentication will reject request with 401 error." @TO@ SimpleName@@MethodName:warn:["Null Client ID or Client Secret detected. Endpoint that requires authentication will reject request with 401 error."] @AT@ 4530 @LENGTH@ 117


UPD TypeDeclaration@@[@Configuration, @ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration"), @EnableConfigurationProperties(PGPDataFormatConfiguration.class), public]PGPDataFormatAutoConfiguration,  @TO@ [@Configuration, @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration"), @EnableConfigurationProperties(PGPDataFormatConfiguration.class), public]PGPDataFormatAutoConfiguration,  @AT@ 1666 @LENGTH@ 1086
---UPD NormalAnnotation@@@ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1681 @LENGTH@ 79
---UPD NormalAnnotation@@@AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1761 @LENGTH@ 80


UPD ExpressionStatement@@MethodInvocation:builder.appendFormalLine(String.format("Assert.notNull(%s, \"The given Iterable of items to add can't be null!\");",parameterName)) @TO@ MethodInvocation:builder.appendFormalLine(String.format("Assert.notNull(%s, \"The given Iterable of items to remove can't be null!\");",parameterName)) @AT@ 42038 @LENGTH@ 154
---UPD MethodInvocation@@builder.appendFormalLine(String.format("Assert.notNull(%s, \"The given Iterable of items to add can't be null!\");",parameterName)) @TO@ builder.appendFormalLine(String.format("Assert.notNull(%s, \"The given Iterable of items to remove can't be null!\");",parameterName)) @AT@ 42038 @LENGTH@ 153
------UPD SimpleName@@MethodName:appendFormalLine:[String.format("Assert.notNull(%s, \"The given Iterable of items to add can't be null!\");",parameterName)] @TO@ MethodName:appendFormalLine:[String.format("Assert.notNull(%s, \"The given Iterable of items to remove can't be null!\");",parameterName)] @AT@ 42046 @LENGTH@ 145
---------UPD MethodInvocation@@String.format("Assert.notNull(%s, \"The given Iterable of items to add can't be null!\");",parameterName) @TO@ String.format("Assert.notNull(%s, \"The given Iterable of items to remove can't be null!\");",parameterName) @AT@ 42063 @LENGTH@ 127
------------UPD SimpleName@@MethodName:format:["Assert.notNull(%s, \"The given Iterable of items to add can't be null!\");", parameterName] @TO@ MethodName:format:["Assert.notNull(%s, \"The given Iterable of items to remove can't be null!\");", parameterName] @AT@ 42079 @LENGTH@ 111
---------------UPD StringLiteral@@"Assert.notNull(%s, \"The given Iterable of items to add can't be null!\");" @TO@ "Assert.notNull(%s, \"The given Iterable of items to remove can't be null!\");" @AT@ 42086 @LENGTH@ 76


DEL MethodDeclaration@@public, void, MethodName:afterPropertiesSet, Exception,  @AT@ 3730 @LENGTH@ 54
---DEL Modifier@@public @AT@ 3730 @LENGTH@ 6
---DEL PrimitiveType@@void @AT@ 3737 @LENGTH@ 4
---DEL SimpleName@@MethodName:afterPropertiesSet @AT@ 3742 @LENGTH@ 18
---DEL SimpleType@@Exception @AT@ 3770 @LENGTH@ 9


UPD TypeDeclaration@@[@Configuration, @EnableWebMvc, @ComponentScan({"org.springframework.data.neo4j.web"}), @EnableExperimentalNeo4jRepositories("org.springframework.data.neo4j.web.repo"), @EnableTransactionManagement, public]WebAppContext, WebMvcConfigurerAdapter @TO@ [@Configuration, @EnableWebMvc, @ComponentScan({"org.springframework.data.neo4j.web.controller","org.springframework.data.neo4j.web.service"}), @EnableExperimentalNeo4jRepositories("org.springframework.data.neo4j.web.repo"), @EnableTransactionManagement, public]WebAppContext, WebMvcConfigurerAdapter @AT@ 1428 @LENGTH@ 952
---UPD SingleMemberAnnotation@@@ComponentScan({"org.springframework.data.neo4j.web"}) @TO@ @ComponentScan({"org.springframework.data.neo4j.web.controller","org.springframework.data.neo4j.web.service"}) @AT@ 1457 @LENGTH@ 54


INS FieldDeclaration@@public, static, final, JavaType, [COLLECTIONS=new JavaType("java.util.Collections")] @TO@ TypeDeclaration@@[public]JavaType, [Comparable<JavaType>] @AT@ 3883 @LENGTH@ 81
---INS Modifier@@public @TO@ FieldDeclaration@@public, static, final, JavaType, [COLLECTIONS=new JavaType("java.util.Collections")] @AT@ 3883 @LENGTH@ 6
---INS Modifier@@static @TO@ FieldDeclaration@@public, static, final, JavaType, [COLLECTIONS=new JavaType("java.util.Collections")] @AT@ 3890 @LENGTH@ 6
---INS Modifier@@final @TO@ FieldDeclaration@@public, static, final, JavaType, [COLLECTIONS=new JavaType("java.util.Collections")] @AT@ 3897 @LENGTH@ 5
---INS SimpleType@@JavaType @TO@ FieldDeclaration@@public, static, final, JavaType, [COLLECTIONS=new JavaType("java.util.Collections")] @AT@ 3903 @LENGTH@ 8
---INS VariableDeclarationFragment@@COLLECTIONS=new JavaType("java.util.Collections") @TO@ FieldDeclaration@@public, static, final, JavaType, [COLLECTIONS=new JavaType("java.util.Collections")] @AT@ 3912 @LENGTH@ 51
------INS SimpleName@@COLLECTIONS @TO@ VariableDeclarationFragment@@COLLECTIONS=new JavaType("java.util.Collections") @AT@ 3912 @LENGTH@ 11
------INS ClassInstanceCreation@@JavaType["java.util.Collections"] @TO@ VariableDeclarationFragment@@COLLECTIONS=new JavaType("java.util.Collections") @AT@ 3926 @LENGTH@ 37
---------INS New@@new @TO@ ClassInstanceCreation@@JavaType["java.util.Collections"] @AT@ 3926 @LENGTH@ 3
---------INS SimpleType@@JavaType @TO@ ClassInstanceCreation@@JavaType["java.util.Collections"] @AT@ 3930 @LENGTH@ 8
---------INS StringLiteral@@"java.util.Collections" @TO@ ClassInstanceCreation@@JavaType["java.util.Collections"] @AT@ 3939 @LENGTH@ 23


INS MethodDeclaration@@public, void, MethodName:setRememberMeServicesShouldntAllowNulls,  @TO@ TypeDeclaration@@[@SuppressWarnings("deprecation"), public]AbstractAuthenticationProcessingFilterTests,  @AT@ 16386 @LENGTH@ 178
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:setRememberMeServicesShouldntAllowNulls,  @AT@ 16386 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:setRememberMeServicesShouldntAllowNulls,  @AT@ 16393 @LENGTH@ 4
---INS SimpleName@@MethodName:setRememberMeServicesShouldntAllowNulls @TO@ MethodDeclaration@@public, void, MethodName:setRememberMeServicesShouldntAllowNulls,  @AT@ 16398 @LENGTH@ 39
---INS VariableDeclarationStatement@@AbstractAuthenticationProcessingFilter filter=new MockAuthenticationFilter(); @TO@ MethodDeclaration@@public, void, MethodName:setRememberMeServicesShouldntAllowNulls,  @AT@ 16444 @LENGTH@ 79
------INS SimpleType@@AbstractAuthenticationProcessingFilter @TO@ VariableDeclarationStatement@@AbstractAuthenticationProcessingFilter filter=new MockAuthenticationFilter(); @AT@ 16444 @LENGTH@ 38
------INS VariableDeclarationFragment@@filter=new MockAuthenticationFilter() @TO@ VariableDeclarationStatement@@AbstractAuthenticationProcessingFilter filter=new MockAuthenticationFilter(); @AT@ 16483 @LENGTH@ 39
---------INS SimpleName@@filter @TO@ VariableDeclarationFragment@@filter=new MockAuthenticationFilter() @AT@ 16483 @LENGTH@ 6
---------INS ClassInstanceCreation@@MockAuthenticationFilter[] @TO@ VariableDeclarationFragment@@filter=new MockAuthenticationFilter() @AT@ 16492 @LENGTH@ 30
------------INS New@@new @TO@ ClassInstanceCreation@@MockAuthenticationFilter[] @AT@ 16492 @LENGTH@ 3
------------INS SimpleType@@MockAuthenticationFilter @TO@ ClassInstanceCreation@@MockAuthenticationFilter[] @AT@ 16496 @LENGTH@ 24
---INS ExpressionStatement@@MethodInvocation:filter.setRememberMeServices(null) @TO@ MethodDeclaration@@public, void, MethodName:setRememberMeServicesShouldntAllowNulls,  @AT@ 16526 @LENGTH@ 35
------INS MethodInvocation@@filter.setRememberMeServices(null) @TO@ ExpressionStatement@@MethodInvocation:filter.setRememberMeServices(null) @AT@ 16526 @LENGTH@ 34
---------INS SimpleName@@Name:filter @TO@ MethodInvocation@@filter.setRememberMeServices(null) @AT@ 16526 @LENGTH@ 6
---------INS SimpleName@@MethodName:setRememberMeServices:[null] @TO@ MethodInvocation@@filter.setRememberMeServices(null) @AT@ 16533 @LENGTH@ 27
------------INS NullLiteral@@null @TO@ SimpleName@@MethodName:setRememberMeServices:[null] @AT@ 16555 @LENGTH@ 4


UPD MethodDeclaration@@void, MethodName:addFinderListView, String moduleName, MemberDetails entity, String finderName, List<FieldMetadata> fieldsToAdd, ViewContext ctx,  @TO@ void, MethodName:addFinderListView, String moduleName, MemberDetails entity, String finderName, ViewContext ctx,  @AT@ 4507 @LENGTH@ 134
---DEL SingleVariableDeclaration@@List<FieldMetadata> fieldsToAdd @AT@ 4591 @LENGTH@ 31
------DEL ParameterizedType@@List<FieldMetadata> @AT@ 4591 @LENGTH@ 19
---------DEL SimpleType@@List @AT@ 4591 @LENGTH@ 4
---------DEL SimpleType@@FieldMetadata @AT@ 4596 @LENGTH@ 13
------DEL SimpleName@@fieldsToAdd @AT@ 4611 @LENGTH@ 11


UPD TypeDeclaration@@[@Configuration, @ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration"), public]GridFsComponentAutoConfiguration,  @TO@ [@Configuration, @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration"), public]GridFsComponentAutoConfiguration,  @AT@ 1444 @LENGTH@ 610
---UPD NormalAnnotation@@@ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1459 @LENGTH@ 79
---UPD NormalAnnotation@@@AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1539 @LENGTH@ 80


UPD VariableDeclarationStatement@@int valueResult=valueCompleter.complete(ctx,chunk == null ? "" : chunk,0,candidates); @TO@ int valueResult=valueCompleter.complete(ctx,chunk == null ? "" : chunk,chunk == null ? 0 : chunk.length(),candidates); @AT@ 11588 @LENGTH@ 90
---UPD VariableDeclarationFragment@@valueResult=valueCompleter.complete(ctx,chunk == null ? "" : chunk,0,candidates) @TO@ valueResult=valueCompleter.complete(ctx,chunk == null ? "" : chunk,chunk == null ? 0 : chunk.length(),candidates) @AT@ 11592 @LENGTH@ 85
------UPD MethodInvocation@@valueCompleter.complete(ctx,chunk == null ? "" : chunk,0,candidates) @TO@ valueCompleter.complete(ctx,chunk == null ? "" : chunk,chunk == null ? 0 : chunk.length(),candidates) @AT@ 11606 @LENGTH@ 71
---------UPD SimpleName@@MethodName:complete:[ctx, chunk == null ? "" : chunk, 0, candidates] @TO@ MethodName:complete:[ctx, chunk == null ? "" : chunk, chunk == null ? 0 : chunk.length(), candidates] @AT@ 11621 @LENGTH@ 56
------------DEL NumberLiteral@@0 @AT@ 11663 @LENGTH@ 1
------------INS ConditionalExpression@@chunk == null ? 0 : chunk.length() @TO@ SimpleName@@MethodName:complete:[ctx, chunk == null ? "" : chunk, 0, candidates] @AT@ 11711 @LENGTH@ 34
---------------INS InfixExpression@@chunk == null @TO@ ConditionalExpression@@chunk == null ? 0 : chunk.length() @AT@ 11711 @LENGTH@ 13
------------------INS SimpleName@@chunk @TO@ InfixExpression@@chunk == null @AT@ 11711 @LENGTH@ 5
------------------INS Operator@@== @TO@ InfixExpression@@chunk == null @AT@ 11716 @LENGTH@ 2
------------------INS NullLiteral@@null @TO@ InfixExpression@@chunk == null @AT@ 11720 @LENGTH@ 4
---------------INS NumberLiteral@@0 @TO@ ConditionalExpression@@chunk == null ? 0 : chunk.length() @AT@ 11727 @LENGTH@ 1
---------------INS MethodInvocation@@chunk.length() @TO@ ConditionalExpression@@chunk == null ? 0 : chunk.length() @AT@ 11731 @LENGTH@ 14
------------------INS SimpleName@@Name:chunk @TO@ MethodInvocation@@chunk.length() @AT@ 11731 @LENGTH@ 5
------------------INS SimpleName@@MethodName:length:[] @TO@ MethodInvocation@@chunk.length() @AT@ 11737 @LENGTH@ 8


UPD ThrowStatement@@ClassInstanceCreation:new JpaSystemException(new IllegalArgumentException(String.format("Unexpected path type for %s. Found % where From.class was expected.",currentPath,from))) @TO@ ClassInstanceCreation:new JpaSystemException(new IllegalArgumentException(String.format("Unexpected path type for %s. Found %s where From.class was expected.",currentPath,from))) @AT@ 5189 @LENGTH@ 172
---UPD ClassInstanceCreation@@JpaSystemException[new IllegalArgumentException(String.format("Unexpected path type for %s. Found % where From.class was expected.",currentPath,from))] @TO@ JpaSystemException[new IllegalArgumentException(String.format("Unexpected path type for %s. Found %s where From.class was expected.",currentPath,from))] @AT@ 5195 @LENGTH@ 165
------UPD ClassInstanceCreation@@IllegalArgumentException[String.format("Unexpected path type for %s. Found % where From.class was expected.",currentPath,from)] @TO@ IllegalArgumentException[String.format("Unexpected path type for %s. Found %s where From.class was expected.",currentPath,from)] @AT@ 5218 @LENGTH@ 141
---------UPD MethodInvocation@@String.format("Unexpected path type for %s. Found % where From.class was expected.",currentPath,from) @TO@ String.format("Unexpected path type for %s. Found %s where From.class was expected.",currentPath,from) @AT@ 5255 @LENGTH@ 103
------------UPD SimpleName@@MethodName:format:["Unexpected path type for %s. Found % where From.class was expected.", currentPath, from] @TO@ MethodName:format:["Unexpected path type for %s. Found %s where From.class was expected.", currentPath, from] @AT@ 5262 @LENGTH@ 96
---------------UPD StringLiteral@@"Unexpected path type for %s. Found % where From.class was expected." @TO@ "Unexpected path type for %s. Found %s where From.class was expected." @AT@ 5269 @LENGTH@ 69


UPD TypeDeclaration@@[@Configuration, @ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration"), @EnableConfigurationProperties(UniVocityFixedWidthDataFormatConfiguration.class), public]UniVocityFixedWidthDataFormatAutoConfiguration,  @TO@ [@Configuration, @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration"), @EnableConfigurationProperties(UniVocityFixedWidthDataFormatConfiguration.class), public]UniVocityFixedWidthDataFormatAutoConfiguration,  @AT@ 1690 @LENGTH@ 1251
---UPD NormalAnnotation@@@ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1705 @LENGTH@ 79
---UPD NormalAnnotation@@@AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1785 @LENGTH@ 80


UPD TypeDeclaration@@[@Configuration, @ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration"), @EnableConfigurationProperties(BarcodeDataFormatConfiguration.class), public]BarcodeDataFormatAutoConfiguration,  @TO@ [@Configuration, @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration"), @EnableConfigurationProperties(BarcodeDataFormatConfiguration.class), public]BarcodeDataFormatAutoConfiguration,  @AT@ 1674 @LENGTH@ 1135
---UPD NormalAnnotation@@@ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1689 @LENGTH@ 79
---UPD NormalAnnotation@@@AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1769 @LENGTH@ 80


INS MethodDeclaration@@public, void, MethodName:unwrapsOptionals, Exception,  @TO@ TypeDeclaration@@[public]ParametersUnitTests,  @AT@ 5335 @LENGTH@ 240
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:unwrapsOptionals, Exception,  @AT@ 5335 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:unwrapsOptionals, Exception,  @AT@ 5342 @LENGTH@ 4
---INS SimpleName@@MethodName:unwrapsOptionals @TO@ MethodDeclaration@@public, void, MethodName:unwrapsOptionals, Exception,  @AT@ 5347 @LENGTH@ 16
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:unwrapsOptionals, Exception,  @AT@ 5373 @LENGTH@ 9
---INS VariableDeclarationStatement@@Parameters<?,Parameter> parameters=getParametersFor("methodWithOptional",Optional.class); @TO@ MethodDeclaration@@public, void, MethodName:unwrapsOptionals, Exception,  @AT@ 5388 @LENGTH@ 93
------INS ParameterizedType@@Parameters<?,Parameter> @TO@ VariableDeclarationStatement@@Parameters<?,Parameter> parameters=getParametersFor("methodWithOptional",Optional.class); @AT@ 5388 @LENGTH@ 24
---------INS SimpleType@@Parameters @TO@ ParameterizedType@@Parameters<?,Parameter> @AT@ 5388 @LENGTH@ 10
---------INS WildcardType@@? @TO@ ParameterizedType@@Parameters<?,Parameter> @AT@ 5399 @LENGTH@ 1
---------INS SimpleType@@Parameter @TO@ ParameterizedType@@Parameters<?,Parameter> @AT@ 5402 @LENGTH@ 9
------INS VariableDeclarationFragment@@parameters=getParametersFor("methodWithOptional",Optional.class) @TO@ VariableDeclarationStatement@@Parameters<?,Parameter> parameters=getParametersFor("methodWithOptional",Optional.class); @AT@ 5413 @LENGTH@ 67
---------INS SimpleName@@parameters @TO@ VariableDeclarationFragment@@parameters=getParametersFor("methodWithOptional",Optional.class) @AT@ 5413 @LENGTH@ 10
---------INS MethodInvocation@@getParametersFor("methodWithOptional",Optional.class) @TO@ VariableDeclarationFragment@@parameters=getParametersFor("methodWithOptional",Optional.class) @AT@ 5426 @LENGTH@ 54
------------INS SimpleName@@MethodName:getParametersFor:["methodWithOptional", Optional.class] @TO@ MethodInvocation@@getParametersFor("methodWithOptional",Optional.class) @AT@ 5426 @LENGTH@ 54
---------------INS StringLiteral@@"methodWithOptional" @TO@ SimpleName@@MethodName:getParametersFor:["methodWithOptional", Optional.class] @AT@ 5443 @LENGTH@ 20
---------------INS TypeLiteral@@Optional.class @TO@ SimpleName@@MethodName:getParametersFor:["methodWithOptional", Optional.class] @AT@ 5465 @LENGTH@ 14
---INS ExpressionStatement@@MethodInvocation:assertThat(parameters.getParameter(0).getType(),is(typeCompatibleWith(String.class))) @TO@ MethodDeclaration@@public, void, MethodName:unwrapsOptionals, Exception,  @AT@ 5485 @LENGTH@ 87
------INS MethodInvocation@@assertThat(parameters.getParameter(0).getType(),is(typeCompatibleWith(String.class))) @TO@ ExpressionStatement@@MethodInvocation:assertThat(parameters.getParameter(0).getType(),is(typeCompatibleWith(String.class))) @AT@ 5485 @LENGTH@ 86
---------INS SimpleName@@MethodName:assertThat:[parameters.getParameter(0).getType(), is(typeCompatibleWith(String.class))] @TO@ MethodInvocation@@assertThat(parameters.getParameter(0).getType(),is(typeCompatibleWith(String.class))) @AT@ 5485 @LENGTH@ 86
------------INS MethodInvocation@@parameters.getParameter(0).getType() @TO@ SimpleName@@MethodName:assertThat:[parameters.getParameter(0).getType(), is(typeCompatibleWith(String.class))] @AT@ 5496 @LENGTH@ 36
---------------INS MethodInvocation@@MethodName:getParameter:[0] @TO@ MethodInvocation@@parameters.getParameter(0).getType() @AT@ 5496 @LENGTH@ 26
------------------INS NumberLiteral@@0 @TO@ MethodInvocation@@MethodName:getParameter:[0] @AT@ 5520 @LENGTH@ 1
---------------INS SimpleName@@Name:parameters @TO@ MethodInvocation@@parameters.getParameter(0).getType() @AT@ 5496 @LENGTH@ 10
---------------INS SimpleName@@MethodName:getType:[] @TO@ MethodInvocation@@parameters.getParameter(0).getType() @AT@ 5523 @LENGTH@ 9
------------INS MethodInvocation@@is(typeCompatibleWith(String.class)) @TO@ SimpleName@@MethodName:assertThat:[parameters.getParameter(0).getType(), is(typeCompatibleWith(String.class))] @AT@ 5534 @LENGTH@ 36
---------------INS SimpleName@@MethodName:is:[typeCompatibleWith(String.class)] @TO@ MethodInvocation@@is(typeCompatibleWith(String.class)) @AT@ 5534 @LENGTH@ 36
------------------INS MethodInvocation@@typeCompatibleWith(String.class) @TO@ SimpleName@@MethodName:is:[typeCompatibleWith(String.class)] @AT@ 5537 @LENGTH@ 32
---------------------INS SimpleName@@MethodName:typeCompatibleWith:[String.class] @TO@ MethodInvocation@@typeCompatibleWith(String.class) @AT@ 5537 @LENGTH@ 32
------------------------INS TypeLiteral@@String.class @TO@ SimpleName@@MethodName:typeCompatibleWith:[String.class] @AT@ 5556 @LENGTH@ 12
---------------------INS SimpleName@@MethodName:typeCompatibleWith:[String.class] @TO@ MethodInvocation@@typeCompatibleWith(String.class) @AT@ 5537 @LENGTH@ 32
------------------------INS TypeLiteral@@String.class @TO@ SimpleName@@MethodName:typeCompatibleWith:[String.class] @AT@ 5556 @LENGTH@ 12
---------------------INS SimpleName@@MethodName:typeCompatibleWith:[String.class] @TO@ MethodInvocation@@typeCompatibleWith(String.class) @AT@ 5537 @LENGTH@ 32
------------------------INS TypeLiteral@@String.class @TO@ SimpleName@@MethodName:typeCompatibleWith:[String.class] @AT@ 5556 @LENGTH@ 12
---------------------INS SimpleName@@MethodName:typeCompatibleWith:[String.class] @TO@ MethodInvocation@@typeCompatibleWith(String.class) @AT@ 5537 @LENGTH@ 32
------------------------INS TypeLiteral@@String.class @TO@ SimpleName@@MethodName:typeCompatibleWith:[String.class] @AT@ 5556 @LENGTH@ 12
---------------------INS SimpleName@@MethodName:typeCompatibleWith:[String.class] @TO@ MethodInvocation@@typeCompatibleWith(String.class) @AT@ 5537 @LENGTH@ 32
------------------------INS TypeLiteral@@String.class @TO@ SimpleName@@MethodName:typeCompatibleWith:[String.class] @AT@ 5556 @LENGTH@ 12
---------------INS SimpleName@@MethodName:is:[typeCompatibleWith(String.class)] @TO@ MethodInvocation@@is(typeCompatibleWith(String.class)) @AT@ 5534 @LENGTH@ 36
------------------INS MethodInvocation@@typeCompatibleWith(String.class) @TO@ SimpleName@@MethodName:is:[typeCompatibleWith(String.class)] @AT@ 5537 @LENGTH@ 32
---------------------INS SimpleName@@MethodName:typeCompatibleWith:[String.class] @TO@ MethodInvocation@@typeCompatibleWith(String.class) @AT@ 5537 @LENGTH@ 32
------------------------INS TypeLiteral@@String.class @TO@ SimpleName@@MethodName:typeCompatibleWith:[String.class] @AT@ 5556 @LENGTH@ 12
---------------------INS SimpleName@@MethodName:typeCompatibleWith:[String.class] @TO@ MethodInvocation@@typeCompatibleWith(String.class) @AT@ 5537 @LENGTH@ 32
------------------------INS TypeLiteral@@String.class @TO@ SimpleName@@MethodName:typeCompatibleWith:[String.class] @AT@ 5556 @LENGTH@ 12
---------------------INS SimpleName@@MethodName:typeCompatibleWith:[String.class] @TO@ MethodInvocation@@typeCompatibleWith(String.class) @AT@ 5537 @LENGTH@ 32
------------------------INS TypeLiteral@@String.class @TO@ SimpleName@@MethodName:typeCompatibleWith:[String.class] @AT@ 5556 @LENGTH@ 12
---------------------INS SimpleName@@MethodName:typeCompatibleWith:[String.class] @TO@ MethodInvocation@@typeCompatibleWith(String.class) @AT@ 5537 @LENGTH@ 32
------------------------INS TypeLiteral@@String.class @TO@ SimpleName@@MethodName:typeCompatibleWith:[String.class] @AT@ 5556 @LENGTH@ 12
---------------------INS SimpleName@@MethodName:typeCompatibleWith:[String.class] @TO@ MethodInvocation@@typeCompatibleWith(String.class) @AT@ 5537 @LENGTH@ 32
------------------------INS TypeLiteral@@String.class @TO@ SimpleName@@MethodName:typeCompatibleWith:[String.class] @AT@ 5556 @LENGTH@ 12


UPD TypeDeclaration@@[@Configuration, @ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration"), @EnableConfigurationProperties(SparkComponentConfiguration.class), public]SparkComponentAutoConfiguration,  @TO@ [@Configuration, @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration"), @EnableConfigurationProperties(SparkComponentConfiguration.class), public]SparkComponentAutoConfiguration,  @AT@ 1622 @LENGTH@ 2048
---UPD NormalAnnotation@@@ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1637 @LENGTH@ 79
---UPD NormalAnnotation@@@AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1717 @LENGTH@ 80


UPD ExpressionStatement@@MethodInvocation:fail("Expected an AutorecoveringChannel") @TO@ MethodInvocation:recoveryLatch.countDown() @AT@ 15694 @LENGTH@ 42
---UPD MethodInvocation@@fail("Expected an AutorecoveringChannel") @TO@ recoveryLatch.countDown() @AT@ 15694 @LENGTH@ 41
------INS SimpleName@@Name:recoveryLatch @TO@ MethodInvocation@@fail("Expected an AutorecoveringChannel") @AT@ 15694 @LENGTH@ 13
------UPD SimpleName@@MethodName:fail:["Expected an AutorecoveringChannel"] @TO@ MethodName:countDown:[] @AT@ 15694 @LENGTH@ 41
---------DEL StringLiteral@@"Expected an AutorecoveringChannel" @AT@ 15699 @LENGTH@ 35


UPD TypeDeclaration@@[@ConfigurationProperties(prefix="camel.dataformat.bindy"), public]BindyFixedLengthDataFormatConfiguration,  @TO@ [@ConfigurationProperties(prefix="camel.dataformat.bindy-fixed"), public]BindyFixedLengthDataFormatConfiguration,  @AT@ 1184 @LENGTH@ 944
---UPD NormalAnnotation@@@ConfigurationProperties(prefix="camel.dataformat.bindy") @TO@ @ConfigurationProperties(prefix="camel.dataformat.bindy-fixed") @AT@ 1184 @LENGTH@ 59


UPD TypeDeclaration@@[@Configuration, @ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration"), public]FlatpackComponentAutoConfiguration,  @TO@ [@Configuration, @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration"), public]FlatpackComponentAutoConfiguration,  @AT@ 1450 @LENGTH@ 625
---UPD NormalAnnotation@@@ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1465 @LENGTH@ 79
---UPD NormalAnnotation@@@AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1545 @LENGTH@ 80


DEL FieldDeclaration@@private, static, final, String, [SPRING_ROO_JPA_REQUIRE_SCHEMA_OBJECT_NAME="spring.roo.jpa.require.schema-object-name"] @AT@ 3892 @LENGTH@ 122
---DEL Modifier@@private @AT@ 3892 @LENGTH@ 7
---DEL Modifier@@static @AT@ 3900 @LENGTH@ 6
---DEL Modifier@@final @AT@ 3907 @LENGTH@ 5
---DEL SimpleType@@String @AT@ 3913 @LENGTH@ 6
---DEL VariableDeclarationFragment@@SPRING_ROO_JPA_REQUIRE_SCHEMA_OBJECT_NAME="spring.roo.jpa.require.schema-object-name" @AT@ 3920 @LENGTH@ 93
------DEL SimpleName@@SPRING_ROO_JPA_REQUIRE_SCHEMA_OBJECT_NAME @AT@ 3920 @LENGTH@ 41
------DEL StringLiteral@@"spring.roo.jpa.require.schema-object-name" @AT@ 3970 @LENGTH@ 43


INS FieldDeclaration@@private, final, static, org.slf4j.Logger, [LOG=org.slf4j.LoggerFactory.getLogger(PartitionDesc.class)] @TO@ TypeDeclaration@@[@Explain(displayName="Partition",explainLevels={Level.USER,Level.DEFAULT,Level.EXTENDED}), public]PartitionDesc, [Serializable, Cloneable] @AT@ 2883 @LENGTH@ 99
---INS Modifier@@private @TO@ FieldDeclaration@@private, final, static, org.slf4j.Logger, [LOG=org.slf4j.LoggerFactory.getLogger(PartitionDesc.class)] @AT@ 2883 @LENGTH@ 7
---INS Modifier@@final @TO@ FieldDeclaration@@private, final, static, org.slf4j.Logger, [LOG=org.slf4j.LoggerFactory.getLogger(PartitionDesc.class)] @AT@ 2891 @LENGTH@ 5
---INS Modifier@@static @TO@ FieldDeclaration@@private, final, static, org.slf4j.Logger, [LOG=org.slf4j.LoggerFactory.getLogger(PartitionDesc.class)] @AT@ 2897 @LENGTH@ 6
---INS SimpleType@@org.slf4j.Logger @TO@ FieldDeclaration@@private, final, static, org.slf4j.Logger, [LOG=org.slf4j.LoggerFactory.getLogger(PartitionDesc.class)] @AT@ 2904 @LENGTH@ 16
---INS VariableDeclarationFragment@@LOG=org.slf4j.LoggerFactory.getLogger(PartitionDesc.class) @TO@ FieldDeclaration@@private, final, static, org.slf4j.Logger, [LOG=org.slf4j.LoggerFactory.getLogger(PartitionDesc.class)] @AT@ 2921 @LENGTH@ 60
------INS SimpleName@@LOG @TO@ VariableDeclarationFragment@@LOG=org.slf4j.LoggerFactory.getLogger(PartitionDesc.class) @AT@ 2921 @LENGTH@ 3
------INS MethodInvocation@@org.slf4j.LoggerFactory.getLogger(PartitionDesc.class) @TO@ VariableDeclarationFragment@@LOG=org.slf4j.LoggerFactory.getLogger(PartitionDesc.class) @AT@ 2927 @LENGTH@ 54
---------INS QualifiedName@@Name:org.slf4j.LoggerFactory @TO@ MethodInvocation@@org.slf4j.LoggerFactory.getLogger(PartitionDesc.class) @AT@ 2927 @LENGTH@ 23
---------INS SimpleName@@MethodName:getLogger:[PartitionDesc.class] @TO@ MethodInvocation@@org.slf4j.LoggerFactory.getLogger(PartitionDesc.class) @AT@ 2951 @LENGTH@ 30
------------INS TypeLiteral@@PartitionDesc.class @TO@ SimpleName@@MethodName:getLogger:[PartitionDesc.class] @AT@ 2961 @LENGTH@ 19


INS MethodDeclaration@@Object, MethodName:getBody,  @TO@ TypeDeclaration@@[public]WrappedFile,  @AT@ 1090 @LENGTH@ 10
---INS SimpleType@@Object @TO@ MethodDeclaration@@Object, MethodName:getBody,  @AT@ 1083 @LENGTH@ 6
---INS SimpleName@@MethodName:getBody @TO@ MethodDeclaration@@Object, MethodName:getBody,  @AT@ 1090 @LENGTH@ 7


UPD ExpressionStatement@@MethodInvocation:assertEquals("Expected hash",expected,((DigestPassword)((PasswordCredential)cc.getCredential()).getPassword()).getDigest()) @TO@ MethodInvocation:assertArrayEquals("Expected hash",expected,((DigestPassword)((PasswordCredential)cc.getCredential()).getPassword()).getDigest()) @AT@ 3556 @LENGTH@ 128
---UPD MethodInvocation@@assertEquals("Expected hash",expected,((DigestPassword)((PasswordCredential)cc.getCredential()).getPassword()).getDigest()) @TO@ assertArrayEquals("Expected hash",expected,((DigestPassword)((PasswordCredential)cc.getCredential()).getPassword()).getDigest()) @AT@ 3556 @LENGTH@ 127
------UPD SimpleName@@MethodName:assertEquals:["Expected hash", expected, ((DigestPassword)((PasswordCredential)cc.getCredential()).getPassword()).getDigest()] @TO@ MethodName:assertArrayEquals:["Expected hash", expected, ((DigestPassword)((PasswordCredential)cc.getCredential()).getPassword()).getDigest()] @AT@ 3556 @LENGTH@ 127


UPD SuperConstructorInvocation@@super(endpoint,ServiceNowRelease.HELSINKY);
 @TO@ super(endpoint,ServiceNowRelease.HELSINKI);
 @AT@ 1355 @LENGTH@ 44
---UPD QualifiedName@@ServiceNowRelease.HELSINKY @TO@ ServiceNowRelease.HELSINKI @AT@ 1371 @LENGTH@ 26
------UPD SimpleName@@HELSINKY @TO@ HELSINKI @AT@ 1389 @LENGTH@ 8


UPD ExpressionStatement@@MethodInvocation:assertEquals("No bean named 'jobLauncher' is defined",e.getCause().getMessage()) @TO@ MethodInvocation:assertEquals("No bean named 'jobLauncher' available",e.getCause().getMessage()) @AT@ 3364 @LENGTH@ 82
---UPD MethodInvocation@@assertEquals("No bean named 'jobLauncher' is defined",e.getCause().getMessage()) @TO@ assertEquals("No bean named 'jobLauncher' available",e.getCause().getMessage()) @AT@ 3364 @LENGTH@ 81
------UPD SimpleName@@MethodName:assertEquals:["No bean named 'jobLauncher' is defined", e.getCause().getMessage()] @TO@ MethodName:assertEquals:["No bean named 'jobLauncher' available", e.getCause().getMessage()] @AT@ 3364 @LENGTH@ 81
---------UPD StringLiteral@@"No bean named 'jobLauncher' is defined" @TO@ "No bean named 'jobLauncher' available" @AT@ 3377 @LENGTH@ 40


UPD VariableDeclarationStatement@@String prefix="camel.dataformat." + model.getModelName(); @TO@ String prefix="camel.dataformat." + model.getName(); @AT@ 12291 @LENGTH@ 59
---UPD VariableDeclarationFragment@@prefix="camel.dataformat." + model.getModelName() @TO@ prefix="camel.dataformat." + model.getName() @AT@ 12298 @LENGTH@ 51
------UPD InfixExpression@@"camel.dataformat." + model.getModelName() @TO@ "camel.dataformat." + model.getName() @AT@ 12307 @LENGTH@ 42
---------UPD MethodInvocation@@model.getModelName() @TO@ model.getName() @AT@ 12329 @LENGTH@ 20
------------UPD SimpleName@@MethodName:getModelName:[] @TO@ MethodName:getName:[] @AT@ 12335 @LENGTH@ 14


INS FieldDeclaration@@Metamodel, [metamodel] @TO@ TypeDeclaration@@[@RunWith(MockitoJUnitRunner.class), public]SimpleJpaQueryUnitTests,  @AT@ 3006 @LENGTH@ 20
---INS SimpleType@@Metamodel @TO@ FieldDeclaration@@Metamodel, [metamodel] @AT@ 3006 @LENGTH@ 9
---INS VariableDeclarationFragment@@metamodel @TO@ FieldDeclaration@@Metamodel, [metamodel] @AT@ 3016 @LENGTH@ 9
------INS SimpleName@@metamodel @TO@ VariableDeclarationFragment@@metamodel @AT@ 3016 @LENGTH@ 9


UPD ExpressionStatement@@Assignment:simpleToDnRealm=LdapSecurityRealmBuilder.builder().setDirContextFactory(LdapTestSuite.dirContextFactory.create()).identityMapping().setSearchDn("dc=elytron,dc=wildfly,dc=org").setRdnIdentifier("uid").build().otpCredentialLoader().setOtpAlgorithmAttribute("otpAlgorithm").setOtpHashAttribute("otpHash").setOtpSeedAttribute("otpSeed").setOtpSequenceAttribute("otpSequence").build().userPasswordCredentialLoader().enablePersistence().build().build() @TO@ Assignment:simpleToDnRealm=LdapSecurityRealmBuilder.builder().setDirContextFactory(LdapTestSuite.dirContextFactory.create()).identityMapping().setSearchDn("dc=elytron,dc=wildfly,dc=org").setRdnIdentifier("uid").build().userPasswordCredentialLoader().enablePersistence().build().otpCredentialLoader().setOtpAlgorithmAttribute("otpAlgorithm").setOtpHashAttribute("otpHash").setOtpSeedAttribute("otpSeed").setOtpSequenceAttribute("otpSequence").build().build() @AT@ 2910 @LENGTH@ 684
---UPD Assignment@@simpleToDnRealm=LdapSecurityRealmBuilder.builder().setDirContextFactory(LdapTestSuite.dirContextFactory.create()).identityMapping().setSearchDn("dc=elytron,dc=wildfly,dc=org").setRdnIdentifier("uid").build().otpCredentialLoader().setOtpAlgorithmAttribute("otpAlgorithm").setOtpHashAttribute("otpHash").setOtpSeedAttribute("otpSeed").setOtpSequenceAttribute("otpSequence").build().userPasswordCredentialLoader().enablePersistence().build().build() @TO@ simpleToDnRealm=LdapSecurityRealmBuilder.builder().setDirContextFactory(LdapTestSuite.dirContextFactory.create()).identityMapping().setSearchDn("dc=elytron,dc=wildfly,dc=org").setRdnIdentifier("uid").build().userPasswordCredentialLoader().enablePersistence().build().otpCredentialLoader().setOtpAlgorithmAttribute("otpAlgorithm").setOtpHashAttribute("otpHash").setOtpSeedAttribute("otpSeed").setOtpSequenceAttribute("otpSequence").build().build() @AT@ 2910 @LENGTH@ 683
------UPD MethodInvocation@@LdapSecurityRealmBuilder.builder().setDirContextFactory(LdapTestSuite.dirContextFactory.create()).identityMapping().setSearchDn("dc=elytron,dc=wildfly,dc=org").setRdnIdentifier("uid").build().otpCredentialLoader().setOtpAlgorithmAttribute("otpAlgorithm").setOtpHashAttribute("otpHash").setOtpSeedAttribute("otpSeed").setOtpSequenceAttribute("otpSequence").build().userPasswordCredentialLoader().enablePersistence().build().build() @TO@ LdapSecurityRealmBuilder.builder().setDirContextFactory(LdapTestSuite.dirContextFactory.create()).identityMapping().setSearchDn("dc=elytron,dc=wildfly,dc=org").setRdnIdentifier("uid").build().userPasswordCredentialLoader().enablePersistence().build().otpCredentialLoader().setOtpAlgorithmAttribute("otpAlgorithm").setOtpHashAttribute("otpHash").setOtpSeedAttribute("otpSeed").setOtpSequenceAttribute("otpSequence").build().build() @AT@ 2928 @LENGTH@ 665
---------DEL MethodInvocation@@MethodName:build:[] @AT@ 2928 @LENGTH@ 644
---------DEL MethodInvocation@@MethodName:enablePersistence:[] @AT@ 2928 @LENGTH@ 619
---------DEL MethodInvocation@@MethodName:userPasswordCredentialLoader:[] @AT@ 2928 @LENGTH@ 582
---------INS MethodInvocation@@MethodName:build:[] @TO@ MethodInvocation@@LdapSecurityRealmBuilder.builder().setDirContextFactory(LdapTestSuite.dirContextFactory.create()).identityMapping().setSearchDn("dc=elytron,dc=wildfly,dc=org").setRdnIdentifier("uid").build().otpCredentialLoader().setOtpAlgorithmAttribute("otpAlgorithm").setOtpHashAttribute("otpHash").setOtpSeedAttribute("otpSeed").setOtpSequenceAttribute("otpSequence").build().userPasswordCredentialLoader().enablePersistence().build().build() @AT@ 2928 @LENGTH@ 374
---------INS MethodInvocation@@MethodName:enablePersistence:[] @TO@ MethodInvocation@@LdapSecurityRealmBuilder.builder().setDirContextFactory(LdapTestSuite.dirContextFactory.create()).identityMapping().setSearchDn("dc=elytron,dc=wildfly,dc=org").setRdnIdentifier("uid").build().otpCredentialLoader().setOtpAlgorithmAttribute("otpAlgorithm").setOtpHashAttribute("otpHash").setOtpSeedAttribute("otpSeed").setOtpSequenceAttribute("otpSequence").build().userPasswordCredentialLoader().enablePersistence().build().build() @AT@ 2928 @LENGTH@ 349
---------INS MethodInvocation@@MethodName:userPasswordCredentialLoader:[] @TO@ MethodInvocation@@LdapSecurityRealmBuilder.builder().setDirContextFactory(LdapTestSuite.dirContextFactory.create()).identityMapping().setSearchDn("dc=elytron,dc=wildfly,dc=org").setRdnIdentifier("uid").build().otpCredentialLoader().setOtpAlgorithmAttribute("otpAlgorithm").setOtpHashAttribute("otpHash").setOtpSeedAttribute("otpSeed").setOtpSequenceAttribute("otpSequence").build().userPasswordCredentialLoader().enablePersistence().build().build() @AT@ 2928 @LENGTH@ 312


UPD TypeDeclaration@@[public, static]InnerTypeWithPrivateAncesor, InnerPrivateType @TO@ [public, static]InnerTypeWithPrivateAncestor, InnerPrivateType @AT@ 8475 @LENGTH@ 78
---UPD SimpleName@@ClassName:InnerTypeWithPrivateAncesor @TO@ ClassName:InnerTypeWithPrivateAncestor @AT@ 8495 @LENGTH@ 27


INS MethodDeclaration@@public, void, MethodName:mappingShouldConvertMapKeysToString,  @TO@ TypeDeclaration@@[@RunWith(MockitoJUnitRunner.class), public]UpdateMapperUnitTests,  @AT@ 34740 @LENGTH@ 477
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:mappingShouldConvertMapKeysToString,  @AT@ 34740 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:mappingShouldConvertMapKeysToString,  @AT@ 34747 @LENGTH@ 4
---INS SimpleName@@MethodName:mappingShouldConvertMapKeysToString @TO@ MethodDeclaration@@public, void, MethodName:mappingShouldConvertMapKeysToString,  @AT@ 34752 @LENGTH@ 35
---INS VariableDeclarationStatement@@Update update=new Update().set("map",Collections.singletonMap(25,"#StarTrek50")); @TO@ MethodDeclaration@@public, void, MethodName:mappingShouldConvertMapKeysToString,  @AT@ 34795 @LENGTH@ 85
------INS SimpleType@@Update @TO@ VariableDeclarationStatement@@Update update=new Update().set("map",Collections.singletonMap(25,"#StarTrek50")); @AT@ 34795 @LENGTH@ 6
------INS VariableDeclarationFragment@@update=new Update().set("map",Collections.singletonMap(25,"#StarTrek50")) @TO@ VariableDeclarationStatement@@Update update=new Update().set("map",Collections.singletonMap(25,"#StarTrek50")); @AT@ 34802 @LENGTH@ 77
---------INS SimpleName@@update @TO@ VariableDeclarationFragment@@update=new Update().set("map",Collections.singletonMap(25,"#StarTrek50")) @AT@ 34802 @LENGTH@ 6
---------INS MethodInvocation@@new Update().set("map",Collections.singletonMap(25,"#StarTrek50")) @TO@ VariableDeclarationFragment@@update=new Update().set("map",Collections.singletonMap(25,"#StarTrek50")) @AT@ 34811 @LENGTH@ 68
------------INS ClassInstanceCreation@@Update[] @TO@ MethodInvocation@@new Update().set("map",Collections.singletonMap(25,"#StarTrek50")) @AT@ 34811 @LENGTH@ 12
---------------INS New@@new @TO@ ClassInstanceCreation@@Update[] @AT@ 34811 @LENGTH@ 3
---------------INS SimpleType@@Update @TO@ ClassInstanceCreation@@Update[] @AT@ 34815 @LENGTH@ 6
------------INS SimpleName@@MethodName:set:["map", Collections.singletonMap(25,"#StarTrek50")] @TO@ MethodInvocation@@new Update().set("map",Collections.singletonMap(25,"#StarTrek50")) @AT@ 34824 @LENGTH@ 55
---------------INS StringLiteral@@"map" @TO@ SimpleName@@MethodName:set:["map", Collections.singletonMap(25,"#StarTrek50")] @AT@ 34828 @LENGTH@ 5
---------------INS MethodInvocation@@Collections.singletonMap(25,"#StarTrek50") @TO@ SimpleName@@MethodName:set:["map", Collections.singletonMap(25,"#StarTrek50")] @AT@ 34835 @LENGTH@ 43
------------------INS SimpleName@@Name:Collections @TO@ MethodInvocation@@Collections.singletonMap(25,"#StarTrek50") @AT@ 34835 @LENGTH@ 11
------------------INS SimpleName@@MethodName:singletonMap:[25, "#StarTrek50"] @TO@ MethodInvocation@@Collections.singletonMap(25,"#StarTrek50") @AT@ 34847 @LENGTH@ 31
---------------------INS NumberLiteral@@25 @TO@ SimpleName@@MethodName:singletonMap:[25, "#StarTrek50"] @AT@ 34860 @LENGTH@ 2
---------------------INS StringLiteral@@"#StarTrek50" @TO@ SimpleName@@MethodName:singletonMap:[25, "#StarTrek50"] @AT@ 34864 @LENGTH@ 13
---INS VariableDeclarationStatement@@DBObject mappedUpdate=mapper.getMappedObject(update.getUpdateObject(),context.getPersistentEntity(EntityWithObjectMap.class)); @TO@ MethodDeclaration@@public, void, MethodName:mappingShouldConvertMapKeysToString,  @AT@ 34883 @LENGTH@ 133
------INS SimpleType@@DBObject @TO@ VariableDeclarationStatement@@DBObject mappedUpdate=mapper.getMappedObject(update.getUpdateObject(),context.getPersistentEntity(EntityWithObjectMap.class)); @AT@ 34883 @LENGTH@ 8
------INS VariableDeclarationFragment@@mappedUpdate=mapper.getMappedObject(update.getUpdateObject(),context.getPersistentEntity(EntityWithObjectMap.class)) @TO@ VariableDeclarationStatement@@DBObject mappedUpdate=mapper.getMappedObject(update.getUpdateObject(),context.getPersistentEntity(EntityWithObjectMap.class)); @AT@ 34892 @LENGTH@ 123
---------INS SimpleName@@mappedUpdate @TO@ VariableDeclarationFragment@@mappedUpdate=mapper.getMappedObject(update.getUpdateObject(),context.getPersistentEntity(EntityWithObjectMap.class)) @AT@ 34892 @LENGTH@ 12
---------INS MethodInvocation@@mapper.getMappedObject(update.getUpdateObject(),context.getPersistentEntity(EntityWithObjectMap.class)) @TO@ VariableDeclarationFragment@@mappedUpdate=mapper.getMappedObject(update.getUpdateObject(),context.getPersistentEntity(EntityWithObjectMap.class)) @AT@ 34907 @LENGTH@ 108
------------INS SimpleName@@Name:mapper @TO@ MethodInvocation@@mapper.getMappedObject(update.getUpdateObject(),context.getPersistentEntity(EntityWithObjectMap.class)) @AT@ 34907 @LENGTH@ 6
------------INS SimpleName@@MethodName:getMappedObject:[update.getUpdateObject(), context.getPersistentEntity(EntityWithObjectMap.class)] @TO@ MethodInvocation@@mapper.getMappedObject(update.getUpdateObject(),context.getPersistentEntity(EntityWithObjectMap.class)) @AT@ 34914 @LENGTH@ 101
---------------INS MethodInvocation@@update.getUpdateObject() @TO@ SimpleName@@MethodName:getMappedObject:[update.getUpdateObject(), context.getPersistentEntity(EntityWithObjectMap.class)] @AT@ 34930 @LENGTH@ 24
------------------INS SimpleName@@Name:update @TO@ MethodInvocation@@update.getUpdateObject() @AT@ 34930 @LENGTH@ 6
------------------INS SimpleName@@MethodName:getUpdateObject:[] @TO@ MethodInvocation@@update.getUpdateObject() @AT@ 34937 @LENGTH@ 17
---------------INS MethodInvocation@@context.getPersistentEntity(EntityWithObjectMap.class) @TO@ SimpleName@@MethodName:getMappedObject:[update.getUpdateObject(), context.getPersistentEntity(EntityWithObjectMap.class)] @AT@ 34960 @LENGTH@ 54
------------------INS SimpleName@@Name:context @TO@ MethodInvocation@@context.getPersistentEntity(EntityWithObjectMap.class) @AT@ 34960 @LENGTH@ 7
------------------INS SimpleName@@MethodName:getPersistentEntity:[EntityWithObjectMap.class] @TO@ MethodInvocation@@context.getPersistentEntity(EntityWithObjectMap.class) @AT@ 34968 @LENGTH@ 46
---------------------INS TypeLiteral@@EntityWithObjectMap.class @TO@ SimpleName@@MethodName:getPersistentEntity:[EntityWithObjectMap.class] @AT@ 34988 @LENGTH@ 25
---INS VariableDeclarationStatement@@DBObject $set=getAsDBObject(mappedUpdate,"$set"); @TO@ MethodDeclaration@@public, void, MethodName:mappingShouldConvertMapKeysToString,  @AT@ 35020 @LENGTH@ 52
------INS SimpleType@@DBObject @TO@ VariableDeclarationStatement@@DBObject $set=getAsDBObject(mappedUpdate,"$set"); @AT@ 35020 @LENGTH@ 8
------INS VariableDeclarationFragment@@$set=getAsDBObject(mappedUpdate,"$set") @TO@ VariableDeclarationStatement@@DBObject $set=getAsDBObject(mappedUpdate,"$set"); @AT@ 35029 @LENGTH@ 42
---------INS SimpleName@@$set @TO@ VariableDeclarationFragment@@$set=getAsDBObject(mappedUpdate,"$set") @AT@ 35029 @LENGTH@ 4
---------INS MethodInvocation@@getAsDBObject(mappedUpdate,"$set") @TO@ VariableDeclarationFragment@@$set=getAsDBObject(mappedUpdate,"$set") @AT@ 35036 @LENGTH@ 35
------------INS SimpleName@@MethodName:getAsDBObject:[mappedUpdate, "$set"] @TO@ MethodInvocation@@getAsDBObject(mappedUpdate,"$set") @AT@ 35036 @LENGTH@ 35
---------------INS SimpleName@@mappedUpdate @TO@ SimpleName@@MethodName:getAsDBObject:[mappedUpdate, "$set"] @AT@ 35050 @LENGTH@ 12
---------------INS StringLiteral@@"$set" @TO@ SimpleName@@MethodName:getAsDBObject:[mappedUpdate, "$set"] @AT@ 35064 @LENGTH@ 6
---INS VariableDeclarationStatement@@DBObject mapToSet=getAsDBObject($set,"map"); @TO@ MethodDeclaration@@public, void, MethodName:mappingShouldConvertMapKeysToString,  @AT@ 35075 @LENGTH@ 47
------INS SimpleType@@DBObject @TO@ VariableDeclarationStatement@@DBObject mapToSet=getAsDBObject($set,"map"); @AT@ 35075 @LENGTH@ 8
------INS VariableDeclarationFragment@@mapToSet=getAsDBObject($set,"map") @TO@ VariableDeclarationStatement@@DBObject mapToSet=getAsDBObject($set,"map"); @AT@ 35084 @LENGTH@ 37
---------INS SimpleName@@mapToSet @TO@ VariableDeclarationFragment@@mapToSet=getAsDBObject($set,"map") @AT@ 35084 @LENGTH@ 8
---------INS MethodInvocation@@getAsDBObject($set,"map") @TO@ VariableDeclarationFragment@@mapToSet=getAsDBObject($set,"map") @AT@ 35095 @LENGTH@ 26
------------INS SimpleName@@MethodName:getAsDBObject:[$set, "map"] @TO@ MethodInvocation@@getAsDBObject($set,"map") @AT@ 35095 @LENGTH@ 26
---------------INS SimpleName@@$set @TO@ SimpleName@@MethodName:getAsDBObject:[$set, "map"] @AT@ 35109 @LENGTH@ 4
---------------INS StringLiteral@@"map" @TO@ SimpleName@@MethodName:getAsDBObject:[$set, "map"] @AT@ 35115 @LENGTH@ 5
---INS EnhancedForStatement@@for (Object key : mapToSet.keySet()) {  assertThat(key,instanceOf(String.class));} @TO@ MethodDeclaration@@public, void, MethodName:mappingShouldConvertMapKeysToString,  @AT@ 35126 @LENGTH@ 88
------INS SingleVariableDeclaration@@Object key @TO@ EnhancedForStatement@@for (Object key : mapToSet.keySet()) {  assertThat(key,instanceOf(String.class));} @AT@ 35131 @LENGTH@ 10
---------INS SimpleType@@Object @TO@ SingleVariableDeclaration@@Object key @AT@ 35131 @LENGTH@ 6
---------INS SimpleName@@key @TO@ SingleVariableDeclaration@@Object key @AT@ 35138 @LENGTH@ 3
------INS MethodInvocation@@mapToSet.keySet() @TO@ EnhancedForStatement@@for (Object key : mapToSet.keySet()) {  assertThat(key,instanceOf(String.class));} @AT@ 35144 @LENGTH@ 17
---------INS SimpleName@@Name:mapToSet @TO@ MethodInvocation@@mapToSet.keySet() @AT@ 35144 @LENGTH@ 8
---------INS SimpleName@@MethodName:keySet:[] @TO@ MethodInvocation@@mapToSet.keySet() @AT@ 35153 @LENGTH@ 8
------INS ExpressionStatement@@MethodInvocation:assertThat(key,instanceOf(String.class)) @TO@ EnhancedForStatement@@for (Object key : mapToSet.keySet()) {  assertThat(key,instanceOf(String.class));} @AT@ 35168 @LENGTH@ 42
---------INS MethodInvocation@@assertThat(key,instanceOf(String.class)) @TO@ ExpressionStatement@@MethodInvocation:assertThat(key,instanceOf(String.class)) @AT@ 35168 @LENGTH@ 41
------------INS SimpleName@@MethodName:assertThat:[key, instanceOf(String.class)] @TO@ MethodInvocation@@assertThat(key,instanceOf(String.class)) @AT@ 35168 @LENGTH@ 41
---------------INS SimpleName@@key @TO@ SimpleName@@MethodName:assertThat:[key, instanceOf(String.class)] @AT@ 35179 @LENGTH@ 3
---------------INS MethodInvocation@@instanceOf(String.class) @TO@ SimpleName@@MethodName:assertThat:[key, instanceOf(String.class)] @AT@ 35184 @LENGTH@ 24
------------------INS SimpleName@@MethodName:instanceOf:[String.class] @TO@ MethodInvocation@@instanceOf(String.class) @AT@ 35184 @LENGTH@ 24
---------------------INS TypeLiteral@@String.class @TO@ SimpleName@@MethodName:instanceOf:[String.class] @AT@ 35195 @LENGTH@ 12
------------------INS SimpleName@@MethodName:instanceOf:[String.class] @TO@ MethodInvocation@@instanceOf(String.class) @AT@ 35184 @LENGTH@ 24
---------------------INS TypeLiteral@@String.class @TO@ SimpleName@@MethodName:instanceOf:[String.class] @AT@ 35195 @LENGTH@ 12


UPD ExpressionStatement@@MethodInvocation:assertEquals(12345,tweet.getId()) @TO@ MethodInvocation:assertEquals("12345",tweet.getId()) @AT@ 2087 @LENGTH@ 35
---UPD MethodInvocation@@assertEquals(12345,tweet.getId()) @TO@ assertEquals("12345",tweet.getId()) @AT@ 2087 @LENGTH@ 34
------UPD SimpleName@@MethodName:assertEquals:[12345, tweet.getId()] @TO@ MethodName:assertEquals:["12345", tweet.getId()] @AT@ 2087 @LENGTH@ 34
---------INS StringLiteral@@"12345" @TO@ SimpleName@@MethodName:assertEquals:[12345, tweet.getId()] @AT@ 2100 @LENGTH@ 7
---------DEL NumberLiteral@@12345 @AT@ 2100 @LENGTH@ 5


INS ExpressionStatement@@MethodInvocation:System.out.println(context) @TO@ MethodDeclaration@@default, void, MethodName:assertBasicStaticContentWorks, String context, Exception,  @AT@ 968 @LENGTH@ 28
---INS MethodInvocation@@System.out.println(context) @TO@ ExpressionStatement@@MethodInvocation:System.out.println(context) @AT@ 968 @LENGTH@ 27
------INS QualifiedName@@Name:System.out @TO@ MethodInvocation@@System.out.println(context) @AT@ 968 @LENGTH@ 10
------INS SimpleName@@MethodName:println:[context] @TO@ MethodInvocation@@System.out.println(context) @AT@ 979 @LENGTH@ 16
---------INS SimpleName@@context @TO@ SimpleName@@MethodName:println:[context] @AT@ 987 @LENGTH@ 7


UPD TypeDeclaration@@[@Configuration, @ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration"), public]FileComponentAutoConfiguration,  @TO@ [@Configuration, @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration"), public]FileComponentAutoConfiguration,  @AT@ 1438 @LENGTH@ 596
---UPD NormalAnnotation@@@ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1453 @LENGTH@ 79
---UPD NormalAnnotation@@@AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1533 @LENGTH@ 80


UPD TypeDeclaration@@[@Configuration, @ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration"), public]SqsComponentAutoConfiguration,  @TO@ [@Configuration, @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration"), public]SqsComponentAutoConfiguration,  @AT@ 1443 @LENGTH@ 593
---UPD NormalAnnotation@@@ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1458 @LENGTH@ 79
---UPD NormalAnnotation@@@AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1538 @LENGTH@ 80


INS MethodDeclaration@@public, static, void, MethodName:beforeClass,  @TO@ TypeDeclaration@@[@ContextConfiguration(classes={MoviesContext.class}), @RunWith(SpringJUnit4ClassRunner.class), @DirtiesContext, public]QueryIntegrationIT, MultiDriverTestClass @AT@ 2403 @LENGTH@ 88
---INS Modifier@@public @TO@ MethodDeclaration@@public, static, void, MethodName:beforeClass,  @AT@ 2403 @LENGTH@ 6
---INS Modifier@@static @TO@ MethodDeclaration@@public, static, void, MethodName:beforeClass,  @AT@ 2410 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, static, void, MethodName:beforeClass,  @AT@ 2417 @LENGTH@ 4
---INS SimpleName@@MethodName:beforeClass @TO@ MethodDeclaration@@public, static, void, MethodName:beforeClass,  @AT@ 2422 @LENGTH@ 11
---INS ExpressionStatement@@Assignment:graphDatabaseService=getGraphDatabaseService() @TO@ MethodDeclaration@@public, static, void, MethodName:beforeClass,  @AT@ 2439 @LENGTH@ 49
------INS Assignment@@graphDatabaseService=getGraphDatabaseService() @TO@ ExpressionStatement@@Assignment:graphDatabaseService=getGraphDatabaseService() @AT@ 2439 @LENGTH@ 48
---------INS SimpleName@@graphDatabaseService @TO@ Assignment@@graphDatabaseService=getGraphDatabaseService() @AT@ 2439 @LENGTH@ 20
---------INS Operator@@= @TO@ Assignment@@graphDatabaseService=getGraphDatabaseService() @AT@ 2459 @LENGTH@ 1
---------INS MethodInvocation@@MethodName:getGraphDatabaseService:[] @TO@ Assignment@@graphDatabaseService=getGraphDatabaseService() @AT@ 2462 @LENGTH@ 25


UPD TypeDeclaration@@[@Configuration, @ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration"), @EnableConfigurationProperties(JoltComponentConfiguration.class), public]JoltComponentAutoConfiguration,  @TO@ [@Configuration, @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration"), @EnableConfigurationProperties(JoltComponentConfiguration.class), public]JoltComponentAutoConfiguration,  @AT@ 1619 @LENGTH@ 2039
---UPD NormalAnnotation@@@ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1634 @LENGTH@ 79
---UPD NormalAnnotation@@@AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1714 @LENGTH@ 80


DEL MethodDeclaration@@private, void, MethodName:setupLogging,  @AT@ 4227 @LENGTH@ 599
---DEL Modifier@@private @AT@ 4227 @LENGTH@ 7
---DEL PrimitiveType@@void @AT@ 4235 @LENGTH@ 4
---DEL SimpleName@@MethodName:setupLogging @AT@ 4240 @LENGTH@ 12
---DEL VariableDeclarationStatement@@Logger rootLogger=Logger.getLogger(""); @AT@ 4334 @LENGTH@ 41
------DEL SimpleType@@Logger @AT@ 4334 @LENGTH@ 6
------DEL VariableDeclarationFragment@@rootLogger=Logger.getLogger("") @AT@ 4341 @LENGTH@ 33
---------DEL SimpleName@@rootLogger @AT@ 4341 @LENGTH@ 10
---------DEL MethodInvocation@@Logger.getLogger("") @AT@ 4354 @LENGTH@ 20
------------DEL SimpleName@@Name:Logger @AT@ 4354 @LENGTH@ 6
------------DEL SimpleName@@MethodName:getLogger:[""] @AT@ 4361 @LENGTH@ 13
---------------DEL StringLiteral@@"" @AT@ 4371 @LENGTH@ 2
---DEL ExpressionStatement@@MethodInvocation:HandlerUtils.wrapWithDeferredLogHandler(rootLogger,Level.SEVERE) @AT@ 4378 @LENGTH@ 66
------DEL MethodInvocation@@HandlerUtils.wrapWithDeferredLogHandler(rootLogger,Level.SEVERE) @AT@ 4378 @LENGTH@ 65
---------DEL SimpleName@@Name:HandlerUtils @AT@ 4378 @LENGTH@ 12
---------DEL SimpleName@@MethodName:wrapWithDeferredLogHandler:[rootLogger, Level.SEVERE] @AT@ 4391 @LENGTH@ 52
------------DEL SimpleName@@rootLogger @AT@ 4418 @LENGTH@ 10
------------DEL QualifiedName@@Level.SEVERE @AT@ 4430 @LENGTH@ 12
---------------DEL SimpleName@@Level @AT@ 4430 @LENGTH@ 5
---------------DEL SimpleName@@SEVERE @AT@ 4436 @LENGTH@ 6
---DEL VariableDeclarationStatement@@Logger sfwLogger=Logger.getLogger("org.springframework"); @AT@ 4516 @LENGTH@ 59
------DEL SimpleType@@Logger @AT@ 4516 @LENGTH@ 6
------DEL VariableDeclarationFragment@@sfwLogger=Logger.getLogger("org.springframework") @AT@ 4523 @LENGTH@ 51
---------DEL SimpleName@@sfwLogger @AT@ 4523 @LENGTH@ 9
---------DEL MethodInvocation@@Logger.getLogger("org.springframework") @AT@ 4535 @LENGTH@ 39
------------DEL SimpleName@@Name:Logger @AT@ 4535 @LENGTH@ 6
------------DEL SimpleName@@MethodName:getLogger:["org.springframework"] @AT@ 4542 @LENGTH@ 32
---------------DEL StringLiteral@@"org.springframework" @AT@ 4552 @LENGTH@ 21
---DEL ExpressionStatement@@MethodInvocation:sfwLogger.setLevel(Level.WARNING) @AT@ 4578 @LENGTH@ 34
------DEL MethodInvocation@@sfwLogger.setLevel(Level.WARNING) @AT@ 4578 @LENGTH@ 33
---------DEL SimpleName@@Name:sfwLogger @AT@ 4578 @LENGTH@ 9
---------DEL SimpleName@@MethodName:setLevel:[Level.WARNING] @AT@ 4588 @LENGTH@ 23
------------DEL QualifiedName@@Level.WARNING @AT@ 4597 @LENGTH@ 13
---------------DEL SimpleName@@Level @AT@ 4597 @LENGTH@ 5
---------------DEL SimpleName@@WARNING @AT@ 4603 @LENGTH@ 7
---DEL VariableDeclarationStatement@@Logger rooLogger=Logger.getLogger("org.springframework.shell"); @AT@ 4724 @LENGTH@ 65
------DEL SimpleType@@Logger @AT@ 4724 @LENGTH@ 6
------DEL VariableDeclarationFragment@@rooLogger=Logger.getLogger("org.springframework.shell") @AT@ 4731 @LENGTH@ 57
---------DEL SimpleName@@rooLogger @AT@ 4731 @LENGTH@ 9
---------DEL MethodInvocation@@Logger.getLogger("org.springframework.shell") @AT@ 4743 @LENGTH@ 45
------------DEL SimpleName@@Name:Logger @AT@ 4743 @LENGTH@ 6
------------DEL SimpleName@@MethodName:getLogger:["org.springframework.shell"] @AT@ 4750 @LENGTH@ 38
---------------DEL StringLiteral@@"org.springframework.shell" @AT@ 4760 @LENGTH@ 27
---DEL ExpressionStatement@@MethodInvocation:rooLogger.setLevel(Level.FINE) @AT@ 4792 @LENGTH@ 31
------DEL MethodInvocation@@rooLogger.setLevel(Level.FINE) @AT@ 4792 @LENGTH@ 30
---------DEL SimpleName@@Name:rooLogger @AT@ 4792 @LENGTH@ 9
---------DEL SimpleName@@MethodName:setLevel:[Level.FINE] @AT@ 4802 @LENGTH@ 20
------------DEL QualifiedName@@Level.FINE @AT@ 4811 @LENGTH@ 10
---------------DEL SimpleName@@Level @AT@ 4811 @LENGTH@ 5
---------------DEL SimpleName@@FINE @AT@ 4817 @LENGTH@ 4


UPD TypeDeclaration@@[@Configuration, @ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration"), @EnableConfigurationProperties(RestletComponentConfiguration.class), public]RestletComponentAutoConfiguration,  @TO@ [@Configuration, @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration"), @EnableConfigurationProperties(RestletComponentConfiguration.class), public]RestletComponentAutoConfiguration,  @AT@ 1628 @LENGTH@ 2079
---UPD NormalAnnotation@@@ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1643 @LENGTH@ 79
---UPD NormalAnnotation@@@AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1723 @LENGTH@ 80


UPD FieldDeclaration@@static, final, String, [ZNODE="/curatorleader"] @TO@ public, static, final, String, [ZNODE="/curatorleader"] @AT@ 1600 @LENGTH@ 45
---INS Modifier@@public @TO@ FieldDeclaration@@static, final, String, [ZNODE="/curatorleader"] @AT@ 1491 @LENGTH@ 6


UPD TypeDeclaration@@[@Configuration, @ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration"), @EnableConfigurationProperties(MsvComponentConfiguration.class), public]MsvComponentAutoConfiguration,  @TO@ [@Configuration, @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration"), @EnableConfigurationProperties(MsvComponentConfiguration.class), public]MsvComponentAutoConfiguration,  @AT@ 1636 @LENGTH@ 2030
---UPD NormalAnnotation@@@ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1651 @LENGTH@ 79
---UPD NormalAnnotation@@@AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1731 @LENGTH@ 80


INS ExpressionStatement@@Assignment:received=false @TO@ MethodDeclaration@@private, void, MethodName:testReceiveAndReply, long timeout,  @AT@ 36851 @LENGTH@ 17
---INS Assignment@@received=false @TO@ ExpressionStatement@@Assignment:received=false @AT@ 36851 @LENGTH@ 16
------INS SimpleName@@received @TO@ Assignment@@received=false @AT@ 36851 @LENGTH@ 8
------INS Operator@@= @TO@ Assignment@@received=false @AT@ 36859 @LENGTH@ 1
------INS BooleanLiteral@@false @TO@ Assignment@@received=false @AT@ 36862 @LENGTH@ 5


UPD MethodDeclaration@@public, TableDesc, MethodName:getTableDesc,  @TO@ public, TableDesc, MethodName:getTableDescSkewJoin,  @AT@ 3293 @LENGTH@ 59
---UPD SimpleName@@MethodName:getTableDesc @TO@ MethodName:getTableDescSkewJoin @AT@ 3310 @LENGTH@ 12


UPD TypeDeclaration@@[@Configuration, @ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration"), @EnableConfigurationProperties(JacksonDataFormatConfiguration.class), public]JacksonDataFormatAutoConfiguration,  @TO@ [@Configuration, @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration"), @EnableConfigurationProperties(JacksonDataFormatConfiguration.class), public]JacksonDataFormatAutoConfiguration,  @AT@ 1672 @LENGTH@ 1140
---UPD NormalAnnotation@@@ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1687 @LENGTH@ 79
---UPD NormalAnnotation@@@AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1767 @LENGTH@ 80


UPD FieldDeclaration@@private, int, [delay=2] @TO@ private, int, [delay=5000] @AT@ 1309 @LENGTH@ 22
---UPD VariableDeclarationFragment@@delay=2 @TO@ delay=5000 @AT@ 1321 @LENGTH@ 9
------UPD NumberLiteral@@2 @TO@ 5000 @AT@ 1329 @LENGTH@ 1


UPD MethodDeclaration@@public, voidMethodName:XMLStreamReaderInputStream, XMLStreamReader reader, XMLOutputFactory outfactory,  @TO@ voidMethodName:XMLStreamReaderInputStream, XMLStreamReader reader, XMLOutputFactory outfactory,  @AT@ 1979 @LENGTH@ 137
---DEL Modifier@@public @AT@ 1979 @LENGTH@ 6


UPD TypeDeclaration@@[@Configuration, @ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration"), @EnableConfigurationProperties(OpenShiftComponentConfiguration.class), public]OpenShiftComponentAutoConfiguration,  @TO@ [@Configuration, @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration"), @EnableConfigurationProperties(OpenShiftComponentConfiguration.class), public]OpenShiftComponentAutoConfiguration,  @AT@ 1634 @LENGTH@ 2097
---UPD NormalAnnotation@@@ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1649 @LENGTH@ 79
---UPD NormalAnnotation@@@AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1729 @LENGTH@ 80


DEL MethodDeclaration@@public, voidMethodName:Address, String exchangeType, String exchangeName, String routingKey,  @AT@ 2939 @LENGTH@ 148
---DEL Modifier@@public @AT@ 2939 @LENGTH@ 6
---DEL SimpleName@@MethodName:Address @AT@ 2946 @LENGTH@ 7
---DEL SingleVariableDeclaration@@String exchangeType @AT@ 2954 @LENGTH@ 19
------DEL SimpleType@@String @AT@ 2954 @LENGTH@ 6
------DEL SimpleName@@exchangeType @AT@ 2961 @LENGTH@ 12
---DEL SingleVariableDeclaration@@String exchangeName @AT@ 2975 @LENGTH@ 19
------DEL SimpleType@@String @AT@ 2975 @LENGTH@ 6
------DEL SimpleName@@exchangeName @AT@ 2982 @LENGTH@ 12
---DEL SingleVariableDeclaration@@String routingKey @AT@ 2996 @LENGTH@ 17
------DEL SimpleType@@String @AT@ 2996 @LENGTH@ 6
------DEL SimpleName@@routingKey @AT@ 3003 @LENGTH@ 10
---DEL ExpressionStatement@@Assignment:this.exchangeName=exchangeName @AT@ 3019 @LENGTH@ 33
------DEL Assignment@@this.exchangeName=exchangeName @AT@ 3019 @LENGTH@ 32
---------DEL FieldAccess@@this.exchangeName @AT@ 3019 @LENGTH@ 17
------------DEL ThisExpression@@this @AT@ 3019 @LENGTH@ 4
------------DEL SimpleName@@exchangeName @AT@ 3024 @LENGTH@ 12
---------DEL Operator@@= @AT@ 3036 @LENGTH@ 1
---------DEL SimpleName@@exchangeName @AT@ 3039 @LENGTH@ 12
---DEL ExpressionStatement@@Assignment:this.routingKey=routingKey @AT@ 3055 @LENGTH@ 29
------DEL Assignment@@this.routingKey=routingKey @AT@ 3055 @LENGTH@ 28
---------DEL FieldAccess@@this.routingKey @AT@ 3055 @LENGTH@ 15
------------DEL ThisExpression@@this @AT@ 3055 @LENGTH@ 4
------------DEL SimpleName@@routingKey @AT@ 3060 @LENGTH@ 10
---------DEL Operator@@= @AT@ 3070 @LENGTH@ 1
---------DEL SimpleName@@routingKey @AT@ 3073 @LENGTH@ 10


UPD VariableDeclarationStatement@@int i=doComplete(ctx,cmd,0,candidates); @TO@ int i=doComplete(ctx,cmd,cmd.length(),candidates); @AT@ 4756 @LENGTH@ 44
---UPD VariableDeclarationFragment@@i=doComplete(ctx,cmd,0,candidates) @TO@ i=doComplete(ctx,cmd,cmd.length(),candidates) @AT@ 4760 @LENGTH@ 39
------UPD MethodInvocation@@doComplete(ctx,cmd,0,candidates) @TO@ doComplete(ctx,cmd,cmd.length(),candidates) @AT@ 4764 @LENGTH@ 35
---------UPD SimpleName@@MethodName:doComplete:[ctx, cmd, 0, candidates] @TO@ MethodName:doComplete:[ctx, cmd, cmd.length(), candidates] @AT@ 4764 @LENGTH@ 35
------------INS MethodInvocation@@cmd.length() @TO@ SimpleName@@MethodName:doComplete:[ctx, cmd, 0, candidates] @AT@ 4785 @LENGTH@ 12
---------------INS SimpleName@@Name:cmd @TO@ MethodInvocation@@cmd.length() @AT@ 4785 @LENGTH@ 3
---------------INS SimpleName@@MethodName:length:[] @TO@ MethodInvocation@@cmd.length() @AT@ 4789 @LENGTH@ 8
------------DEL NumberLiteral@@0 @AT@ 4785 @LENGTH@ 1


UPD TypeDeclaration@@[@Configuration, @ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration"), public]RabbitMQComponentAutoConfiguration,  @TO@ [@Configuration, @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration"), public]RabbitMQComponentAutoConfiguration,  @AT@ 1450 @LENGTH@ 625
---UPD NormalAnnotation@@@ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1465 @LENGTH@ 79
---UPD NormalAnnotation@@@AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1545 @LENGTH@ 80


UPD TypeDeclaration@@[@Configuration, @ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration"), @EnableConfigurationProperties(JibxDataFormatConfiguration.class), public]JibxDataFormatAutoConfiguration,  @TO@ [@Configuration, @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration"), @EnableConfigurationProperties(JibxDataFormatConfiguration.class), public]JibxDataFormatAutoConfiguration,  @AT@ 1665 @LENGTH@ 1095
---UPD NormalAnnotation@@@ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1680 @LENGTH@ 79
---UPD NormalAnnotation@@@AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1760 @LENGTH@ 80


UPD TypeDeclaration@@[@Configuration, @ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration"), public]WeatherComponentAutoConfiguration,  @TO@ [@Configuration, @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration"), public]WeatherComponentAutoConfiguration,  @AT@ 1447 @LENGTH@ 617
---UPD NormalAnnotation@@@ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1462 @LENGTH@ 79
---UPD NormalAnnotation@@@AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1542 @LENGTH@ 80


UPD TypeDeclaration@@[@Configuration, @ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration"), @EnableConfigurationProperties(PhpLanguageConfiguration.class), public]PhpLanguageAutoConfiguration,  @TO@ [@Configuration, @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration"), @EnableConfigurationProperties(PhpLanguageConfiguration.class), public]PhpLanguageAutoConfiguration,  @AT@ 1660 @LENGTH@ 1058
---UPD NormalAnnotation@@@ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1675 @LENGTH@ 79
---UPD NormalAnnotation@@@AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1755 @LENGTH@ 80


UPD ExpressionStatement@@MethodInvocation:route.setDelay(5) @TO@ MethodInvocation:route.setDelay(5000) @AT@ 2856 @LENGTH@ 18
---UPD MethodInvocation@@route.setDelay(5) @TO@ route.setDelay(5000) @AT@ 2856 @LENGTH@ 17
------UPD SimpleName@@MethodName:setDelay:[5] @TO@ MethodName:setDelay:[5000] @AT@ 2862 @LENGTH@ 11
---------UPD NumberLiteral@@5 @TO@ 5000 @AT@ 2871 @LENGTH@ 1


UPD VariableDeclarationStatement@@byte[] composedPassword=UserPasswordPasswordUtil.composeUserPassword((Password)credential); @TO@ byte[] composedPassword=UserPasswordPasswordUtil.composeUserPassword(credential.castAndApply(PasswordCredential.class,PasswordCredential::getPassword)); @AT@ 8936 @LENGTH@ 94
---UPD VariableDeclarationFragment@@composedPassword=UserPasswordPasswordUtil.composeUserPassword((Password)credential) @TO@ composedPassword=UserPasswordPasswordUtil.composeUserPassword(credential.castAndApply(PasswordCredential.class,PasswordCredential::getPassword)) @AT@ 8943 @LENGTH@ 86
------UPD MethodInvocation@@UserPasswordPasswordUtil.composeUserPassword((Password)credential) @TO@ UserPasswordPasswordUtil.composeUserPassword(credential.castAndApply(PasswordCredential.class,PasswordCredential::getPassword)) @AT@ 8962 @LENGTH@ 67
---------UPD SimpleName@@MethodName:composeUserPassword:[(Password)credential] @TO@ MethodName:composeUserPassword:[credential.castAndApply(PasswordCredential.class,PasswordCredential::getPassword)] @AT@ 8987 @LENGTH@ 42
------------INS MethodInvocation@@credential.castAndApply(PasswordCredential.class,PasswordCredential::getPassword) @TO@ SimpleName@@MethodName:composeUserPassword:[(Password)credential] @AT@ 9007 @LENGTH@ 82
---------------INS SimpleName@@Name:credential @TO@ MethodInvocation@@credential.castAndApply(PasswordCredential.class,PasswordCredential::getPassword) @AT@ 9007 @LENGTH@ 10
---------------INS SimpleName@@MethodName:castAndApply:[PasswordCredential.class, PasswordCredential::getPassword] @TO@ MethodInvocation@@credential.castAndApply(PasswordCredential.class,PasswordCredential::getPassword) @AT@ 9018 @LENGTH@ 71
------------------INS TypeLiteral@@PasswordCredential.class @TO@ SimpleName@@MethodName:castAndApply:[PasswordCredential.class, PasswordCredential::getPassword] @AT@ 9031 @LENGTH@ 24
------------DEL CastExpression@@(Password)credential @AT@ 9007 @LENGTH@ 21
---------------DEL SimpleType@@Password @AT@ 9008 @LENGTH@ 8
---------------DEL SimpleName@@credential @AT@ 9018 @LENGTH@ 10


INS MethodDeclaration@@public, void, MethodName:executeShouldNotQuoteStrings,  @TO@ TypeDeclaration@@[@RunWith(SpringJUnit4ClassRunner.class), @ContextConfiguration, public]DefaultScriptOperationsTests,  @AT@ 5274 @LENGTH@ 142
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:executeShouldNotQuoteStrings,  @AT@ 5274 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:executeShouldNotQuoteStrings,  @AT@ 5281 @LENGTH@ 4
---INS SimpleName@@MethodName:executeShouldNotQuoteStrings @TO@ MethodDeclaration@@public, void, MethodName:executeShouldNotQuoteStrings,  @AT@ 5286 @LENGTH@ 28
---INS ExpressionStatement@@MethodInvocation:assertThat(scriptOps.execute(EXECUTABLE_SCRIPT,"spring-data"),is((Object)"spring-data")) @TO@ MethodDeclaration@@public, void, MethodName:executeShouldNotQuoteStrings,  @AT@ 5321 @LENGTH@ 92
------INS MethodInvocation@@assertThat(scriptOps.execute(EXECUTABLE_SCRIPT,"spring-data"),is((Object)"spring-data")) @TO@ ExpressionStatement@@MethodInvocation:assertThat(scriptOps.execute(EXECUTABLE_SCRIPT,"spring-data"),is((Object)"spring-data")) @AT@ 5321 @LENGTH@ 91
---------INS SimpleName@@MethodName:assertThat:[scriptOps.execute(EXECUTABLE_SCRIPT,"spring-data"), is((Object)"spring-data")] @TO@ MethodInvocation@@assertThat(scriptOps.execute(EXECUTABLE_SCRIPT,"spring-data"),is((Object)"spring-data")) @AT@ 5321 @LENGTH@ 91
------------INS MethodInvocation@@scriptOps.execute(EXECUTABLE_SCRIPT,"spring-data") @TO@ SimpleName@@MethodName:assertThat:[scriptOps.execute(EXECUTABLE_SCRIPT,"spring-data"), is((Object)"spring-data")] @AT@ 5332 @LENGTH@ 51
---------------INS SimpleName@@Name:scriptOps @TO@ MethodInvocation@@scriptOps.execute(EXECUTABLE_SCRIPT,"spring-data") @AT@ 5332 @LENGTH@ 9
---------------INS SimpleName@@MethodName:execute:[EXECUTABLE_SCRIPT, "spring-data"] @TO@ MethodInvocation@@scriptOps.execute(EXECUTABLE_SCRIPT,"spring-data") @AT@ 5342 @LENGTH@ 41
------------------INS SimpleName@@EXECUTABLE_SCRIPT @TO@ SimpleName@@MethodName:execute:[EXECUTABLE_SCRIPT, "spring-data"] @AT@ 5350 @LENGTH@ 17
------------------INS StringLiteral@@"spring-data" @TO@ SimpleName@@MethodName:execute:[EXECUTABLE_SCRIPT, "spring-data"] @AT@ 5369 @LENGTH@ 13
------------INS MethodInvocation@@is((Object)"spring-data") @TO@ SimpleName@@MethodName:assertThat:[scriptOps.execute(EXECUTABLE_SCRIPT,"spring-data"), is((Object)"spring-data")] @AT@ 5385 @LENGTH@ 26
---------------INS SimpleName@@MethodName:is:[(Object)"spring-data"] @TO@ MethodInvocation@@is((Object)"spring-data") @AT@ 5385 @LENGTH@ 26
------------------INS CastExpression@@(Object)"spring-data" @TO@ SimpleName@@MethodName:is:[(Object)"spring-data"] @AT@ 5388 @LENGTH@ 22
---------------------INS SimpleType@@Object @TO@ CastExpression@@(Object)"spring-data" @AT@ 5389 @LENGTH@ 6
---------------------INS StringLiteral@@"spring-data" @TO@ CastExpression@@(Object)"spring-data" @AT@ 5397 @LENGTH@ 13
---------------INS SimpleName@@MethodName:is:[(Object)"spring-data"] @TO@ MethodInvocation@@is((Object)"spring-data") @AT@ 5385 @LENGTH@ 26
------------------INS CastExpression@@(Object)"spring-data" @TO@ SimpleName@@MethodName:is:[(Object)"spring-data"] @AT@ 5388 @LENGTH@ 22
---------------------INS SimpleType@@Object @TO@ CastExpression@@(Object)"spring-data" @AT@ 5389 @LENGTH@ 6
---------------------INS StringLiteral@@"spring-data" @TO@ CastExpression@@(Object)"spring-data" @AT@ 5397 @LENGTH@ 13


UPD TypeDeclaration@@[@Configuration, @ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration"), @EnableConfigurationProperties(FacebookComponentConfiguration.class), public]FacebookComponentAutoConfiguration,  @TO@ [@Configuration, @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration"), @EnableConfigurationProperties(FacebookComponentConfiguration.class), public]FacebookComponentAutoConfiguration,  @AT@ 1631 @LENGTH@ 2088
---UPD NormalAnnotation@@@ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1646 @LENGTH@ 79
---UPD NormalAnnotation@@@AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1726 @LENGTH@ 80


UPD IfStatement@@if (castValue.getValue().getAttributeNames().size() == 1) {  annotationExpr=new SingleMemberAnnotationExpr(JavaParserUtils.getNameExpr(nestedAnnotation.getAnnotationType().getSimpleTypeName()),convert(nestedAnnotation.getAttribute(nestedAnnotation.getAttributeNames().get(0)),compilationUnitServices).getValue());} else {  final List<MemberValuePair> memberValuePairs=new ArrayList<MemberValuePair>();  for (  final JavaSymbolName attributeName : nestedAnnotation.getAttributeNames()) {    memberValuePairs.add(convert(nestedAnnotation.getAttribute(attributeName),compilationUnitServices));  }  annotationExpr=new NormalAnnotationExpr(JavaParserUtils.getNameExpr(nestedAnnotation.getAnnotationType().getSimpleTypeName()),memberValuePairs);} @TO@ if (castValue.getValue().getAttributeNames().size() == 1 && (castValue.getValue().getAttributeNames().get(0) == null || "value".equals(castValue.getValue().getAttributeNames().get(0).getSymbolName()))) {  annotationExpr=new SingleMemberAnnotationExpr(JavaParserUtils.getNameExpr(nestedAnnotation.getAnnotationType().getSimpleTypeName()),convert(nestedAnnotation.getAttribute(nestedAnnotation.getAttributeNames().get(0)),compilationUnitServices).getValue());} else {  final List<MemberValuePair> memberValuePairs=new ArrayList<MemberValuePair>();  for (  final JavaSymbolName attributeName : nestedAnnotation.getAttributeNames()) {    memberValuePairs.add(convert(nestedAnnotation.getAttribute(attributeName),compilationUnitServices));  }  annotationExpr=new NormalAnnotationExpr(JavaParserUtils.getNameExpr(nestedAnnotation.getAnnotationType().getSimpleTypeName()),memberValuePairs);} @AT@ 11709 @LENGTH@ 909
---INS InfixExpression@@castValue.getValue().getAttributeNames().size() == 1 && (castValue.getValue().getAttributeNames().get(0) == null || "value".equals(castValue.getValue().getAttributeNames().get(0).getSymbolName())) @TO@ IfStatement@@if (castValue.getValue().getAttributeNames().size() == 1) {  annotationExpr=new SingleMemberAnnotationExpr(JavaParserUtils.getNameExpr(nestedAnnotation.getAnnotationType().getSimpleTypeName()),convert(nestedAnnotation.getAttribute(nestedAnnotation.getAttributeNames().get(0)),compilationUnitServices).getValue());} else {  final List<MemberValuePair> memberValuePairs=new ArrayList<MemberValuePair>();  for (  final JavaSymbolName attributeName : nestedAnnotation.getAttributeNames()) {    memberValuePairs.add(convert(nestedAnnotation.getAttribute(attributeName),compilationUnitServices));  }  annotationExpr=new NormalAnnotationExpr(JavaParserUtils.getNameExpr(nestedAnnotation.getAnnotationType().getSimpleTypeName()),memberValuePairs);} @AT@ 11713 @LENGTH@ 221
------MOV InfixExpression@@castValue.getValue().getAttributeNames().size() == 1 @TO@ InfixExpression@@castValue.getValue().getAttributeNames().size() == 1 && (castValue.getValue().getAttributeNames().get(0) == null || "value".equals(castValue.getValue().getAttributeNames().get(0).getSymbolName())) @AT@ 11713 @LENGTH@ 52
------INS Operator@@&& @TO@ InfixExpression@@castValue.getValue().getAttributeNames().size() == 1 && (castValue.getValue().getAttributeNames().get(0) == null || "value".equals(castValue.getValue().getAttributeNames().get(0).getSymbolName())) @AT@ 11765 @LENGTH@ 2
------INS ParenthesizedExpression@@(castValue.getValue().getAttributeNames().get(0) == null || "value".equals(castValue.getValue().getAttributeNames().get(0).getSymbolName())) @TO@ InfixExpression@@castValue.getValue().getAttributeNames().size() == 1 && (castValue.getValue().getAttributeNames().get(0) == null || "value".equals(castValue.getValue().getAttributeNames().get(0).getSymbolName())) @AT@ 11779 @LENGTH@ 155
---------INS InfixExpression@@castValue.getValue().getAttributeNames().get(0) == null || "value".equals(castValue.getValue().getAttributeNames().get(0).getSymbolName()) @TO@ ParenthesizedExpression@@(castValue.getValue().getAttributeNames().get(0) == null || "value".equals(castValue.getValue().getAttributeNames().get(0).getSymbolName())) @AT@ 11780 @LENGTH@ 153
------------INS InfixExpression@@castValue.getValue().getAttributeNames().get(0) == null @TO@ InfixExpression@@castValue.getValue().getAttributeNames().get(0) == null || "value".equals(castValue.getValue().getAttributeNames().get(0).getSymbolName()) @AT@ 11780 @LENGTH@ 55
---------------INS MethodInvocation@@castValue.getValue().getAttributeNames().get(0) @TO@ InfixExpression@@castValue.getValue().getAttributeNames().get(0) == null @AT@ 11780 @LENGTH@ 47
------------------INS MethodInvocation@@MethodName:getAttributeNames:[] @TO@ MethodInvocation@@castValue.getValue().getAttributeNames().get(0) @AT@ 11780 @LENGTH@ 40
------------------INS MethodInvocation@@MethodName:getValue:[] @TO@ MethodInvocation@@castValue.getValue().getAttributeNames().get(0) @AT@ 11780 @LENGTH@ 20
------------------INS SimpleName@@Name:castValue @TO@ MethodInvocation@@castValue.getValue().getAttributeNames().get(0) @AT@ 11780 @LENGTH@ 9
------------------INS SimpleName@@MethodName:get:[0] @TO@ MethodInvocation@@castValue.getValue().getAttributeNames().get(0) @AT@ 11821 @LENGTH@ 6
---------------------INS NumberLiteral@@0 @TO@ SimpleName@@MethodName:get:[0] @AT@ 11825 @LENGTH@ 1
---------------INS Operator@@== @TO@ InfixExpression@@castValue.getValue().getAttributeNames().get(0) == null @AT@ 11827 @LENGTH@ 2
---------------INS NullLiteral@@null @TO@ InfixExpression@@castValue.getValue().getAttributeNames().get(0) == null @AT@ 11831 @LENGTH@ 4
------------INS Operator@@|| @TO@ InfixExpression@@castValue.getValue().getAttributeNames().get(0) == null || "value".equals(castValue.getValue().getAttributeNames().get(0).getSymbolName()) @AT@ 11835 @LENGTH@ 2
------------INS MethodInvocation@@"value".equals(castValue.getValue().getAttributeNames().get(0).getSymbolName()) @TO@ InfixExpression@@castValue.getValue().getAttributeNames().get(0) == null || "value".equals(castValue.getValue().getAttributeNames().get(0).getSymbolName()) @AT@ 11839 @LENGTH@ 94
---------------INS StringLiteral@@"value" @TO@ MethodInvocation@@"value".equals(castValue.getValue().getAttributeNames().get(0).getSymbolName()) @AT@ 11839 @LENGTH@ 7
---------------INS SimpleName@@MethodName:equals:[castValue.getValue().getAttributeNames().get(0).getSymbolName()] @TO@ MethodInvocation@@"value".equals(castValue.getValue().getAttributeNames().get(0).getSymbolName()) @AT@ 11847 @LENGTH@ 86
------------------INS MethodInvocation@@castValue.getValue().getAttributeNames().get(0).getSymbolName() @TO@ SimpleName@@MethodName:equals:[castValue.getValue().getAttributeNames().get(0).getSymbolName()] @AT@ 11854 @LENGTH@ 78
---------------------INS MethodInvocation@@MethodName:get:[0] @TO@ MethodInvocation@@castValue.getValue().getAttributeNames().get(0).getSymbolName() @AT@ 11854 @LENGTH@ 62
------------------------INS NumberLiteral@@0 @TO@ MethodInvocation@@MethodName:get:[0] @AT@ 11914 @LENGTH@ 1
---------------------INS MethodInvocation@@MethodName:getAttributeNames:[] @TO@ MethodInvocation@@castValue.getValue().getAttributeNames().get(0).getSymbolName() @AT@ 11854 @LENGTH@ 55
---------------------INS MethodInvocation@@MethodName:getValue:[] @TO@ MethodInvocation@@castValue.getValue().getAttributeNames().get(0).getSymbolName() @AT@ 11854 @LENGTH@ 35
---------------------INS SimpleName@@Name:castValue @TO@ MethodInvocation@@castValue.getValue().getAttributeNames().get(0).getSymbolName() @AT@ 11854 @LENGTH@ 9
---------------------INS SimpleName@@MethodName:getSymbolName:[] @TO@ MethodInvocation@@castValue.getValue().getAttributeNames().get(0).getSymbolName() @AT@ 11917 @LENGTH@ 15


UPD IfStatement@@if (!Server.getVersion().startsWith("8")) {  s=Server.class.getConstructor(ThreadPool.class).newInstance(tp);} else {  s=new Server();  Server.class.getMethod("setThreadPool",ThreadPool.class).invoke(s,tp);} @TO@ if (!Server.getVersion().startsWith("8")) {  s=Server.class.getConstructor(ThreadPool.class).newInstance(tp);} else {  s=new Server();  if (isEnableJmx()) {    enableJmx(s);  }  Server.class.getMethod("setThreadPool",ThreadPool.class).invoke(s,tp);} @AT@ 54089 @LENGTH@ 325
---UPD Block@@ElseBody:{  s=new Server();  Server.class.getMethod("setThreadPool",ThreadPool.class).invoke(s,tp);} @TO@ ElseBody:{  s=new Server();  if (isEnableJmx()) {    enableJmx(s);  }  Server.class.getMethod("setThreadPool",ThreadPool.class).invoke(s,tp);} @AT@ 54264 @LENGTH@ 150
------INS IfStatement@@if (isEnableJmx()) {  enableJmx(s);} @TO@ Block@@ElseBody:{  s=new Server();  Server.class.getMethod("setThreadPool",ThreadPool.class).invoke(s,tp);} @AT@ 54324 @LENGTH@ 80
---------INS MethodInvocation@@MethodName:isEnableJmx:[] @TO@ IfStatement@@if (isEnableJmx()) {  enableJmx(s);} @AT@ 54328 @LENGTH@ 13
---------INS Block@@ThenBody:{  enableJmx(s);} @TO@ IfStatement@@if (isEnableJmx()) {  enableJmx(s);} @AT@ 54343 @LENGTH@ 61
------------INS ExpressionStatement@@MethodInvocation:enableJmx(s) @TO@ Block@@ThenBody:{  enableJmx(s);} @AT@ 54369 @LENGTH@ 13
---------------INS MethodInvocation@@enableJmx(s) @TO@ ExpressionStatement@@MethodInvocation:enableJmx(s) @AT@ 54369 @LENGTH@ 12
------------------INS SimpleName@@MethodName:enableJmx:[s] @TO@ MethodInvocation@@enableJmx(s) @AT@ 54369 @LENGTH@ 12
---------------------INS SimpleName@@s @TO@ SimpleName@@MethodName:enableJmx:[s] @AT@ 54379 @LENGTH@ 1


UPD VariableDeclarationStatement@@List<Double> coordinatesList=(List<Double>)point; @TO@ List<Number> coordinatesList=(List<Number>)point; @AT@ 21963 @LENGTH@ 52
---UPD ParameterizedType@@List<Double> @TO@ List<Number> @AT@ 21963 @LENGTH@ 12
------UPD SimpleType@@Double @TO@ Number @AT@ 21968 @LENGTH@ 6
---UPD VariableDeclarationFragment@@coordinatesList=(List<Double>)point @TO@ coordinatesList=(List<Number>)point @AT@ 21976 @LENGTH@ 38
------UPD CastExpression@@(List<Double>)point @TO@ (List<Number>)point @AT@ 21994 @LENGTH@ 20
---------UPD ParameterizedType@@List<Double> @TO@ List<Number> @AT@ 21995 @LENGTH@ 12
------------UPD SimpleType@@Double @TO@ Number @AT@ 22000 @LENGTH@ 6


UPD VariableDeclarationStatement@@File randomDevFile=new File(getRandomDevPath(props)); @TO@ File randomDevFile=new File(props.getProperty(ConfigurationKeys.SECURE_RANDOM_DEVICE_FILE_PATH_KEY,ConfigurationKeys.SECURE_RANDOM_DEVICE_FILE_PATH_DEFAULT)); @AT@ 2522 @LENGTH@ 55
---UPD VariableDeclarationFragment@@randomDevFile=new File(getRandomDevPath(props)) @TO@ randomDevFile=new File(props.getProperty(ConfigurationKeys.SECURE_RANDOM_DEVICE_FILE_PATH_KEY,ConfigurationKeys.SECURE_RANDOM_DEVICE_FILE_PATH_DEFAULT)) @AT@ 2527 @LENGTH@ 49
------UPD ClassInstanceCreation@@File[getRandomDevPath(props)] @TO@ File[props.getProperty(ConfigurationKeys.SECURE_RANDOM_DEVICE_FILE_PATH_KEY,ConfigurationKeys.SECURE_RANDOM_DEVICE_FILE_PATH_DEFAULT)] @AT@ 2543 @LENGTH@ 33
---------UPD MethodInvocation@@getRandomDevPath(props) @TO@ props.getProperty(ConfigurationKeys.SECURE_RANDOM_DEVICE_FILE_PATH_KEY,ConfigurationKeys.SECURE_RANDOM_DEVICE_FILE_PATH_DEFAULT) @AT@ 2552 @LENGTH@ 23
------------UPD SimpleName@@MethodName:getRandomDevPath:[props] @TO@ MethodName:getProperty:[ConfigurationKeys.SECURE_RANDOM_DEVICE_FILE_PATH_KEY, ConfigurationKeys.SECURE_RANDOM_DEVICE_FILE_PATH_DEFAULT] @AT@ 2552 @LENGTH@ 23
---------------DEL SimpleName@@props @AT@ 2569 @LENGTH@ 5
---------------MOV QualifiedName@@ConfigurationKeys.SECURE_RANDOM_DEVICE_FILE_PATH_KEY @TO@ SimpleName@@MethodName:getRandomDevPath:[props] @AT@ 4899 @LENGTH@ 52
---------------MOV QualifiedName@@ConfigurationKeys.SECURE_RANDOM_DEVICE_FILE_PATH_DEFAULT @TO@ SimpleName@@MethodName:getRandomDevPath:[props] @AT@ 4969 @LENGTH@ 56
------------INS SimpleName@@Name:props @TO@ MethodInvocation@@getRandomDevPath(props) @AT@ 2569 @LENGTH@ 5


INS MethodDeclaration@@private, static, List<Object>, MethodName:consolidateIdentifiers, List<ObjectId> ids, List<DBObject> documents,  @TO@ TypeDeclaration@@[@SuppressWarnings("deprecation"), public]MongoTemplate, [MongoOperations, ApplicationContextAware] @AT@ 80726 @LENGTH@ 338
---INS Modifier@@private @TO@ MethodDeclaration@@private, static, List<Object>, MethodName:consolidateIdentifiers, List<ObjectId> ids, List<DBObject> documents,  @AT@ 80726 @LENGTH@ 7
---INS Modifier@@static @TO@ MethodDeclaration@@private, static, List<Object>, MethodName:consolidateIdentifiers, List<ObjectId> ids, List<DBObject> documents,  @AT@ 80734 @LENGTH@ 6
---INS ParameterizedType@@List<Object> @TO@ MethodDeclaration@@private, static, List<Object>, MethodName:consolidateIdentifiers, List<ObjectId> ids, List<DBObject> documents,  @AT@ 80741 @LENGTH@ 12
------INS SimpleType@@List @TO@ ParameterizedType@@List<Object> @AT@ 80741 @LENGTH@ 4
------INS SimpleType@@Object @TO@ ParameterizedType@@List<Object> @AT@ 80746 @LENGTH@ 6
---INS SimpleName@@MethodName:consolidateIdentifiers @TO@ MethodDeclaration@@private, static, List<Object>, MethodName:consolidateIdentifiers, List<ObjectId> ids, List<DBObject> documents,  @AT@ 80754 @LENGTH@ 22
---INS SingleVariableDeclaration@@List<ObjectId> ids @TO@ MethodDeclaration@@private, static, List<Object>, MethodName:consolidateIdentifiers, List<ObjectId> ids, List<DBObject> documents,  @AT@ 80777 @LENGTH@ 18
------INS ParameterizedType@@List<ObjectId> @TO@ SingleVariableDeclaration@@List<ObjectId> ids @AT@ 80777 @LENGTH@ 14
---------INS SimpleType@@List @TO@ ParameterizedType@@List<ObjectId> @AT@ 80777 @LENGTH@ 4
---------INS SimpleType@@ObjectId @TO@ ParameterizedType@@List<ObjectId> @AT@ 80782 @LENGTH@ 8
------INS SimpleName@@ids @TO@ SingleVariableDeclaration@@List<ObjectId> ids @AT@ 80792 @LENGTH@ 3
---INS SingleVariableDeclaration@@List<DBObject> documents @TO@ MethodDeclaration@@private, static, List<Object>, MethodName:consolidateIdentifiers, List<ObjectId> ids, List<DBObject> documents,  @AT@ 80797 @LENGTH@ 24
------INS ParameterizedType@@List<DBObject> @TO@ SingleVariableDeclaration@@List<DBObject> documents @AT@ 80797 @LENGTH@ 14
---------INS SimpleType@@List @TO@ ParameterizedType@@List<DBObject> @AT@ 80797 @LENGTH@ 4
---------INS SimpleType@@DBObject @TO@ ParameterizedType@@List<DBObject> @AT@ 80802 @LENGTH@ 8
------INS SimpleName@@documents @TO@ SingleVariableDeclaration@@List<DBObject> documents @AT@ 80812 @LENGTH@ 9
---INS VariableDeclarationStatement@@List<Object> result=new ArrayList<Object>(ids.size()); @TO@ MethodDeclaration@@private, static, List<Object>, MethodName:consolidateIdentifiers, List<ObjectId> ids, List<DBObject> documents,  @AT@ 80828 @LENGTH@ 56
------INS ParameterizedType@@List<Object> @TO@ VariableDeclarationStatement@@List<Object> result=new ArrayList<Object>(ids.size()); @AT@ 80828 @LENGTH@ 12
---------INS SimpleType@@List @TO@ ParameterizedType@@List<Object> @AT@ 80828 @LENGTH@ 4
---------INS SimpleType@@Object @TO@ ParameterizedType@@List<Object> @AT@ 80833 @LENGTH@ 6
------INS VariableDeclarationFragment@@result=new ArrayList<Object>(ids.size()) @TO@ VariableDeclarationStatement@@List<Object> result=new ArrayList<Object>(ids.size()); @AT@ 80841 @LENGTH@ 42
---------INS SimpleName@@result @TO@ VariableDeclarationFragment@@result=new ArrayList<Object>(ids.size()) @AT@ 80841 @LENGTH@ 6
---------INS ClassInstanceCreation@@ArrayList<Object>[ids.size()] @TO@ VariableDeclarationFragment@@result=new ArrayList<Object>(ids.size()) @AT@ 80850 @LENGTH@ 33
------------INS New@@new @TO@ ClassInstanceCreation@@ArrayList<Object>[ids.size()] @AT@ 80850 @LENGTH@ 3
------------INS ParameterizedType@@ArrayList<Object> @TO@ ClassInstanceCreation@@ArrayList<Object>[ids.size()] @AT@ 80854 @LENGTH@ 17
---------------INS SimpleType@@ArrayList @TO@ ParameterizedType@@ArrayList<Object> @AT@ 80854 @LENGTH@ 9
---------------INS SimpleType@@Object @TO@ ParameterizedType@@ArrayList<Object> @AT@ 80864 @LENGTH@ 6
------------INS MethodInvocation@@ids.size() @TO@ ClassInstanceCreation@@ArrayList<Object>[ids.size()] @AT@ 80872 @LENGTH@ 10
---------------INS SimpleName@@Name:ids @TO@ MethodInvocation@@ids.size() @AT@ 80872 @LENGTH@ 3
---------------INS SimpleName@@MethodName:size:[] @TO@ MethodInvocation@@ids.size() @AT@ 80876 @LENGTH@ 6
---INS ForStatement@@for (int i=0; i < ids.size(); i++) {  ObjectId objectId=ids.get(i);  result.add(objectId == null ? documents.get(i).get(ID_FIELD) : objectId);} @TO@ MethodDeclaration@@private, static, List<Object>, MethodName:consolidateIdentifiers, List<ObjectId> ids, List<DBObject> documents,  @AT@ 80888 @LENGTH@ 155
------INS VariableDeclarationExpression@@int i=0 @TO@ ForStatement@@for (int i=0; i < ids.size(); i++) {  ObjectId objectId=ids.get(i);  result.add(objectId == null ? documents.get(i).get(ID_FIELD) : objectId);} @AT@ 80893 @LENGTH@ 9
---------INS PrimitiveType@@int @TO@ VariableDeclarationExpression@@int i=0 @AT@ 80893 @LENGTH@ 3
---------INS VariableDeclarationFragment@@i=0 @TO@ VariableDeclarationExpression@@int i=0 @AT@ 80897 @LENGTH@ 5
------------INS SimpleName@@i @TO@ VariableDeclarationFragment@@i=0 @AT@ 80897 @LENGTH@ 1
------------INS NumberLiteral@@0 @TO@ VariableDeclarationFragment@@i=0 @AT@ 80901 @LENGTH@ 1
------INS InfixExpression@@i < ids.size() @TO@ ForStatement@@for (int i=0; i < ids.size(); i++) {  ObjectId objectId=ids.get(i);  result.add(objectId == null ? documents.get(i).get(ID_FIELD) : objectId);} @AT@ 80904 @LENGTH@ 14
---------INS SimpleName@@i @TO@ InfixExpression@@i < ids.size() @AT@ 80904 @LENGTH@ 1
---------INS Operator@@< @TO@ InfixExpression@@i < ids.size() @AT@ 80905 @LENGTH@ 1
---------INS MethodInvocation@@ids.size() @TO@ InfixExpression@@i < ids.size() @AT@ 80908 @LENGTH@ 10
------------INS SimpleName@@Name:ids @TO@ MethodInvocation@@ids.size() @AT@ 80908 @LENGTH@ 3
------------INS SimpleName@@MethodName:size:[] @TO@ MethodInvocation@@ids.size() @AT@ 80912 @LENGTH@ 6
------INS PostfixExpression@@i++ @TO@ ForStatement@@for (int i=0; i < ids.size(); i++) {  ObjectId objectId=ids.get(i);  result.add(objectId == null ? documents.get(i).get(ID_FIELD) : objectId);} @AT@ 80920 @LENGTH@ 3
---------INS SimpleName@@i @TO@ PostfixExpression@@i++ @AT@ 80920 @LENGTH@ 1
---------INS Operator@@++ @TO@ PostfixExpression@@i++ @AT@ 80922 @LENGTH@ 2
------INS VariableDeclarationStatement@@ObjectId objectId=ids.get(i); @TO@ ForStatement@@for (int i=0; i < ids.size(); i++) {  ObjectId objectId=ids.get(i);  result.add(objectId == null ? documents.get(i).get(ID_FIELD) : objectId);} @AT@ 80931 @LENGTH@ 31
---------INS SimpleType@@ObjectId @TO@ VariableDeclarationStatement@@ObjectId objectId=ids.get(i); @AT@ 80931 @LENGTH@ 8
---------INS VariableDeclarationFragment@@objectId=ids.get(i) @TO@ VariableDeclarationStatement@@ObjectId objectId=ids.get(i); @AT@ 80940 @LENGTH@ 21
------------INS SimpleName@@objectId @TO@ VariableDeclarationFragment@@objectId=ids.get(i) @AT@ 80940 @LENGTH@ 8
------------INS MethodInvocation@@ids.get(i) @TO@ VariableDeclarationFragment@@objectId=ids.get(i) @AT@ 80951 @LENGTH@ 10
---------------INS SimpleName@@Name:ids @TO@ MethodInvocation@@ids.get(i) @AT@ 80951 @LENGTH@ 3
---------------INS SimpleName@@MethodName:get:[i] @TO@ MethodInvocation@@ids.get(i) @AT@ 80955 @LENGTH@ 6
------------------INS SimpleName@@i @TO@ SimpleName@@MethodName:get:[i] @AT@ 80959 @LENGTH@ 1
------INS ExpressionStatement@@MethodInvocation:result.add(objectId == null ? documents.get(i).get(ID_FIELD) : objectId) @TO@ ForStatement@@for (int i=0; i < ids.size(); i++) {  ObjectId objectId=ids.get(i);  result.add(objectId == null ? documents.get(i).get(ID_FIELD) : objectId);} @AT@ 80966 @LENGTH@ 73
---------INS MethodInvocation@@result.add(objectId == null ? documents.get(i).get(ID_FIELD) : objectId) @TO@ ExpressionStatement@@MethodInvocation:result.add(objectId == null ? documents.get(i).get(ID_FIELD) : objectId) @AT@ 80966 @LENGTH@ 72
------------INS SimpleName@@Name:result @TO@ MethodInvocation@@result.add(objectId == null ? documents.get(i).get(ID_FIELD) : objectId) @AT@ 80966 @LENGTH@ 6
------------INS SimpleName@@MethodName:add:[objectId == null ? documents.get(i).get(ID_FIELD) : objectId] @TO@ MethodInvocation@@result.add(objectId == null ? documents.get(i).get(ID_FIELD) : objectId) @AT@ 80973 @LENGTH@ 65
---------------INS ConditionalExpression@@objectId == null ? documents.get(i).get(ID_FIELD) : objectId @TO@ SimpleName@@MethodName:add:[objectId == null ? documents.get(i).get(ID_FIELD) : objectId] @AT@ 80977 @LENGTH@ 60
------------------INS InfixExpression@@objectId == null @TO@ ConditionalExpression@@objectId == null ? documents.get(i).get(ID_FIELD) : objectId @AT@ 80977 @LENGTH@ 16
---------------------INS SimpleName@@objectId @TO@ InfixExpression@@objectId == null @AT@ 80977 @LENGTH@ 8
---------------------INS Operator@@== @TO@ InfixExpression@@objectId == null @AT@ 80985 @LENGTH@ 2
---------------------INS NullLiteral@@null @TO@ InfixExpression@@objectId == null @AT@ 80989 @LENGTH@ 4
------------------INS MethodInvocation@@documents.get(i).get(ID_FIELD) @TO@ ConditionalExpression@@objectId == null ? documents.get(i).get(ID_FIELD) : objectId @AT@ 80996 @LENGTH@ 30
---------------------INS MethodInvocation@@MethodName:get:[i] @TO@ MethodInvocation@@documents.get(i).get(ID_FIELD) @AT@ 80996 @LENGTH@ 16
------------------------INS SimpleName@@i @TO@ MethodInvocation@@MethodName:get:[i] @AT@ 81010 @LENGTH@ 1
---------------------INS SimpleName@@Name:documents @TO@ MethodInvocation@@documents.get(i).get(ID_FIELD) @AT@ 80996 @LENGTH@ 9
---------------------INS SimpleName@@MethodName:get:[ID_FIELD] @TO@ MethodInvocation@@documents.get(i).get(ID_FIELD) @AT@ 81013 @LENGTH@ 13
------------------------INS SimpleName@@ID_FIELD @TO@ SimpleName@@MethodName:get:[ID_FIELD] @AT@ 81017 @LENGTH@ 8
------------------INS SimpleName@@objectId @TO@ ConditionalExpression@@objectId == null ? documents.get(i).get(ID_FIELD) : objectId @AT@ 81029 @LENGTH@ 8
---INS ReturnStatement@@SimpleName:result @TO@ MethodDeclaration@@private, static, List<Object>, MethodName:consolidateIdentifiers, List<ObjectId> ids, List<DBObject> documents,  @AT@ 81047 @LENGTH@ 14
------INS SimpleName@@result @TO@ ReturnStatement@@SimpleName:result @AT@ 81054 @LENGTH@ 6


UPD ExpressionStatement@@MethodInvocation:assertThat(AuthorityUtils.authorityListToSet(ben.getAuthorities()).contains("DEVELOPERS")) @TO@ MethodInvocation:assertThat(AuthorityUtils.authorityListToSet(ben.getAuthorities())).contains("DEVELOPERS") @AT@ 4845 @LENGTH@ 96
---UPD MethodInvocation@@assertThat(AuthorityUtils.authorityListToSet(ben.getAuthorities()).contains("DEVELOPERS")) @TO@ assertThat(AuthorityUtils.authorityListToSet(ben.getAuthorities())).contains("DEVELOPERS") @AT@ 4845 @LENGTH@ 95
------DEL SimpleName@@MethodName:assertThat:[AuthorityUtils.authorityListToSet(ben.getAuthorities()).contains("DEVELOPERS")] @AT@ 4845 @LENGTH@ 95
---------DEL MethodInvocation@@AuthorityUtils.authorityListToSet(ben.getAuthorities()).contains("DEVELOPERS") @AT@ 4856 @LENGTH@ 83
------------DEL MethodInvocation@@MethodName:authorityListToSet:[ben.getAuthorities()] @AT@ 4856 @LENGTH@ 55
---------------DEL MethodInvocation@@ben.getAuthorities() @AT@ 4890 @LENGTH@ 20
------MOV SimpleName@@MethodName:contains:["DEVELOPERS"] @TO@ MethodInvocation@@assertThat(AuthorityUtils.authorityListToSet(ben.getAuthorities()).contains("DEVELOPERS")) @AT@ 4912 @LENGTH@ 27
------INS MethodInvocation@@MethodName:assertThat:[AuthorityUtils.authorityListToSet(ben.getAuthorities())] @TO@ MethodInvocation@@assertThat(AuthorityUtils.authorityListToSet(ben.getAuthorities()).contains("DEVELOPERS")) @AT@ 5396 @LENGTH@ 67
---------INS MethodInvocation@@AuthorityUtils.authorityListToSet(ben.getAuthorities()) @TO@ MethodInvocation@@MethodName:assertThat:[AuthorityUtils.authorityListToSet(ben.getAuthorities())] @AT@ 5407 @LENGTH@ 55
------------MOV SimpleName@@Name:AuthorityUtils @TO@ MethodInvocation@@AuthorityUtils.authorityListToSet(ben.getAuthorities()) @AT@ 4856 @LENGTH@ 14
------------INS SimpleName@@MethodName:authorityListToSet:[ben.getAuthorities()] @TO@ MethodInvocation@@AuthorityUtils.authorityListToSet(ben.getAuthorities()) @AT@ 5422 @LENGTH@ 40
---------------INS MethodInvocation@@ben.getAuthorities() @TO@ SimpleName@@MethodName:authorityListToSet:[ben.getAuthorities()] @AT@ 5441 @LENGTH@ 20
------------------MOV SimpleName@@Name:ben @TO@ MethodInvocation@@ben.getAuthorities() @AT@ 4890 @LENGTH@ 3
------------------MOV SimpleName@@MethodName:getAuthorities:[] @TO@ MethodInvocation@@ben.getAuthorities() @AT@ 4894 @LENGTH@ 16


UPD MethodDeclaration@@public, void, MethodName:setTableDesc, TableDesc tableDesc,  @TO@ public, void, MethodName:setTableDescSkewJoin, TableDesc tableDesc,  @AT@ 3356 @LENGTH@ 83
---UPD SimpleName@@MethodName:setTableDesc @TO@ MethodName:setTableDescSkewJoin @AT@ 3368 @LENGTH@ 12


UPD ExpressionStatement@@MethodInvocation:converted.put(convertToMongoType(entry.getKey()),convertToMongoType(entry.getValue(),valueTypeHint)) @TO@ MethodInvocation:converted.put(getPotentiallyConvertedSimpleWrite(entry.getKey()).toString(),convertToMongoType(entry.getValue(),valueTypeHint)) @AT@ 35967 @LENGTH@ 103
---UPD MethodInvocation@@converted.put(convertToMongoType(entry.getKey()),convertToMongoType(entry.getValue(),valueTypeHint)) @TO@ converted.put(getPotentiallyConvertedSimpleWrite(entry.getKey()).toString(),convertToMongoType(entry.getValue(),valueTypeHint)) @AT@ 35967 @LENGTH@ 102
------UPD SimpleName@@MethodName:put:[convertToMongoType(entry.getKey()), convertToMongoType(entry.getValue(),valueTypeHint)] @TO@ MethodName:put:[getPotentiallyConvertedSimpleWrite(entry.getKey()).toString(), convertToMongoType(entry.getValue(),valueTypeHint)] @AT@ 35977 @LENGTH@ 92
---------UPD MethodInvocation@@convertToMongoType(entry.getKey()) @TO@ getPotentiallyConvertedSimpleWrite(entry.getKey()).toString() @AT@ 35981 @LENGTH@ 34
------------INS MethodInvocation@@MethodName:getPotentiallyConvertedSimpleWrite:[entry.getKey()] @TO@ MethodInvocation@@convertToMongoType(entry.getKey()) @AT@ 35981 @LENGTH@ 50
---------------INS MethodInvocation@@entry.getKey() @TO@ MethodInvocation@@MethodName:getPotentiallyConvertedSimpleWrite:[entry.getKey()] @AT@ 36016 @LENGTH@ 14
------------------MOV SimpleName@@Name:entry @TO@ MethodInvocation@@entry.getKey() @AT@ 36000 @LENGTH@ 5
------------------MOV SimpleName@@Name:entry @TO@ MethodInvocation@@entry.getKey() @AT@ 36000 @LENGTH@ 5
------------------MOV SimpleName@@MethodName:getKey:[] @TO@ MethodInvocation@@entry.getKey() @AT@ 36006 @LENGTH@ 8
------------------MOV SimpleName@@MethodName:getKey:[] @TO@ MethodInvocation@@entry.getKey() @AT@ 36006 @LENGTH@ 8
------------DEL SimpleName@@MethodName:convertToMongoType:[entry.getKey()] @AT@ 35981 @LENGTH@ 34
---------------DEL MethodInvocation@@entry.getKey() @AT@ 36000 @LENGTH@ 14
------------INS SimpleName@@MethodName:toString:[] @TO@ MethodInvocation@@convertToMongoType(entry.getKey()) @AT@ 36032 @LENGTH@ 10


UPD TypeDeclaration@@[@Configuration, @ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration"), public]FopComponentAutoConfiguration,  @TO@ [@Configuration, @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration"), public]FopComponentAutoConfiguration,  @AT@ 1435 @LENGTH@ 589
---UPD NormalAnnotation@@@ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1450 @LENGTH@ 79
---UPD NormalAnnotation@@@AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1530 @LENGTH@ 80


UPD VariableDeclarationStatement@@JpaPagingItemReader<Foo> inputSource=new JpaPagingItemReader<Foo>(); @TO@ JpaPagingItemReader<Foo> inputSource=new JpaPagingItemReader<>(); @AT@ 1738 @LENGTH@ 70
---UPD VariableDeclarationFragment@@inputSource=new JpaPagingItemReader<Foo>() @TO@ inputSource=new JpaPagingItemReader<>() @AT@ 1763 @LENGTH@ 44
------UPD ClassInstanceCreation@@JpaPagingItemReader<Foo>[] @TO@ JpaPagingItemReader<>[] @AT@ 1777 @LENGTH@ 30
---------UPD ParameterizedType@@JpaPagingItemReader<Foo> @TO@ JpaPagingItemReader<> @AT@ 1781 @LENGTH@ 24
------------DEL SimpleType@@Foo @AT@ 1801 @LENGTH@ 3


INS IfStatement@@if (configuration == null) {  configuration=new GoogleDriveConfiguration();} @TO@ MethodDeclaration@@public, GoogleDriveConfiguration, MethodName:getConfiguration,  @AT@ 2986 @LENGTH@ 98
---INS InfixExpression@@configuration == null @TO@ IfStatement@@if (configuration == null) {  configuration=new GoogleDriveConfiguration();} @AT@ 2990 @LENGTH@ 21
------INS SimpleName@@configuration @TO@ InfixExpression@@configuration == null @AT@ 2990 @LENGTH@ 13
------INS Operator@@== @TO@ InfixExpression@@configuration == null @AT@ 3003 @LENGTH@ 2
------INS NullLiteral@@null @TO@ InfixExpression@@configuration == null @AT@ 3007 @LENGTH@ 4
---INS Block@@ThenBody:{  configuration=new GoogleDriveConfiguration();} @TO@ IfStatement@@if (configuration == null) {  configuration=new GoogleDriveConfiguration();} @AT@ 3013 @LENGTH@ 71
------INS ExpressionStatement@@Assignment:configuration=new GoogleDriveConfiguration() @TO@ Block@@ThenBody:{  configuration=new GoogleDriveConfiguration();} @AT@ 3027 @LENGTH@ 47
---------INS Assignment@@configuration=new GoogleDriveConfiguration() @TO@ ExpressionStatement@@Assignment:configuration=new GoogleDriveConfiguration() @AT@ 3027 @LENGTH@ 46
------------INS SimpleName@@configuration @TO@ Assignment@@configuration=new GoogleDriveConfiguration() @AT@ 3027 @LENGTH@ 13
------------INS Operator@@= @TO@ Assignment@@configuration=new GoogleDriveConfiguration() @AT@ 3040 @LENGTH@ 1
------------INS ClassInstanceCreation@@GoogleDriveConfiguration[] @TO@ Assignment@@configuration=new GoogleDriveConfiguration() @AT@ 3043 @LENGTH@ 30
---------------INS New@@new @TO@ ClassInstanceCreation@@GoogleDriveConfiguration[] @AT@ 3043 @LENGTH@ 3
---------------INS SimpleType@@GoogleDriveConfiguration @TO@ ClassInstanceCreation@@GoogleDriveConfiguration[] @AT@ 3047 @LENGTH@ 24


UPD ExpressionStatement@@MethodInvocation:parameterTypes.add(AnnotatedJavaType.convertFromJavaType(identifierType)) @TO@ MethodInvocation:parameterTypes.add(AnnotatedJavaType.convertFromJavaType(this.entity)) @AT@ 18581 @LENGTH@ 74
---UPD MethodInvocation@@parameterTypes.add(AnnotatedJavaType.convertFromJavaType(identifierType)) @TO@ parameterTypes.add(AnnotatedJavaType.convertFromJavaType(this.entity)) @AT@ 18581 @LENGTH@ 73
------UPD SimpleName@@MethodName:add:[AnnotatedJavaType.convertFromJavaType(identifierType)] @TO@ MethodName:add:[AnnotatedJavaType.convertFromJavaType(this.entity)] @AT@ 18596 @LENGTH@ 58
---------UPD MethodInvocation@@AnnotatedJavaType.convertFromJavaType(identifierType) @TO@ AnnotatedJavaType.convertFromJavaType(this.entity) @AT@ 18600 @LENGTH@ 53
------------UPD SimpleName@@MethodName:convertFromJavaType:[identifierType] @TO@ MethodName:convertFromJavaType:[this.entity] @AT@ 18618 @LENGTH@ 35
---------------DEL SimpleName@@identifierType @AT@ 18638 @LENGTH@ 14
---------------INS FieldAccess@@this.entity @TO@ SimpleName@@MethodName:convertFromJavaType:[identifierType] @AT@ 18689 @LENGTH@ 11
------------------INS ThisExpression@@this @TO@ FieldAccess@@this.entity @AT@ 18689 @LENGTH@ 4
------------------INS SimpleName@@entity @TO@ FieldAccess@@this.entity @AT@ 18694 @LENGTH@ 6


UPD TypeDeclaration@@[@Configuration, @ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration"), @EnableConfigurationProperties(HessianDataFormatConfiguration.class), public]HessianDataFormatAutoConfiguration,  @TO@ [@Configuration, @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration"), @EnableConfigurationProperties(HessianDataFormatConfiguration.class), public]HessianDataFormatAutoConfiguration,  @AT@ 1674 @LENGTH@ 1135
---UPD NormalAnnotation@@@ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1689 @LENGTH@ 79
---UPD NormalAnnotation@@@AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1769 @LENGTH@ 80


UPD MethodDeclaration@@String, MethodName:getHttpServerAuthentication,  @TO@ String, MethodName:getHttpAuthenticationFactory,  @AT@ 1639 @LENGTH@ 30
---UPD SimpleName@@MethodName:getHttpServerAuthentication @TO@ MethodName:getHttpAuthenticationFactory @AT@ 1639 @LENGTH@ 27


UPD TypeDeclaration@@[@Configuration, @ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration"), @EnableConfigurationProperties(JuelLanguageConfiguration.class), public]JuelLanguageAutoConfiguration,  @TO@ [@Configuration, @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration"), @EnableConfigurationProperties(JuelLanguageConfiguration.class), public]JuelLanguageAutoConfiguration,  @AT@ 1659 @LENGTH@ 1065
---UPD NormalAnnotation@@@ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1674 @LENGTH@ 79
---UPD NormalAnnotation@@@AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1754 @LENGTH@ 80


UPD Block@@ThenBody:{  typesAreProjections.put(type,true);  JavaType associatedEntity=(JavaType)projectionAnnotation.getAttribute("entity").getValue();  AnnotationAttributeValue<?> projectionFields=projectionAnnotation.getAttribute("fields");  @SuppressWarnings("unchecked") List<StringAttributeValue> values=(List<StringAttributeValue>)projectionFields.getValue();  String projectionFieldsString="";  for (int i=0; i < values.size(); i++) {    if (i == 0) {      projectionFieldsString=values.get(i).getValue();    } else {      projectionFieldsString=projectionFieldsString.concat(",").concat(values.get(i).getValue());    }  }  buildFieldNamesMap(associatedEntity,type,projectionAnnotation,typesFieldMaps);  Map<String,FieldMetadata> projectionOriginalFieldMetadataValues=getDtoOperations().buildFieldsFromString(projectionFieldsString,associatedEntity);  List<FieldMetadata> projectionIdentifierFields=getPersistenceMemberLocator().getIdentifierFields(associatedEntity);  if (!getPersistenceMemberLocator().getEmbeddedIdentifierFields(associatedEntity).isEmpty()) {    projectionIdentifierFields.addAll(getPersistenceMemberLocator().getEmbeddedIdentifierFields(associatedEntity));  }  for (  Entry<String,FieldMetadata> projectionOriginalValue : projectionOriginalFieldMetadataValues.entrySet()) {    for (    FieldMetadata field : projectionIdentifierFields) {      if (field.getFieldName().equals(projectionOriginalValue.getValue().getFieldName()) && field.getDeclaredByMetadataId().equals(projectionOriginalValue.getValue().getDeclaredByMetadataId())) {        String fieldPathName="getEntityId()";        typesFieldMaps.get(type).remove(projectionOriginalValue.getKey());        typesFieldMaps.get(type).put(projectionOriginalValue.getKey(),fieldPathName);      }    }  }} @TO@ ThenBody:{  typesAreProjections.put(type,true);  JavaType associatedEntity=(JavaType)projectionAnnotation.getAttribute("entity").getValue();  AnnotationAttributeValue<?> projectionFields=projectionAnnotation.getAttribute("fields");  @SuppressWarnings("unchecked") List<String> projectionFieldList=new ArrayList<String>();  for (  StringAttributeValue value : (List<StringAttributeValue>)projectionFields.getValue()) {    projectionFieldList.add(value.getValue());  }  buildFieldNamesMap(associatedEntity,type,projectionAnnotation,typesFieldMaps);  Map<String,FieldMetadata> projectionOriginalFieldMetadataValues=getDtoOperations().buildFieldsFromString(StringUtils.join(projectionFieldList,','),associatedEntity);  List<FieldMetadata> projectionIdentifierFields=getPersistenceMemberLocator().getIdentifierFields(associatedEntity);  if (!getPersistenceMemberLocator().getEmbeddedIdentifierFields(associatedEntity).isEmpty()) {    projectionIdentifierFields.addAll(getPersistenceMemberLocator().getEmbeddedIdentifierFields(associatedEntity));  }  for (  Entry<String,FieldMetadata> projectionOriginalValue : projectionOriginalFieldMetadataValues.entrySet()) {    for (    FieldMetadata field : projectionIdentifierFields) {      if (field.getFieldName().equals(projectionOriginalValue.getValue().getFieldName()) && field.getDeclaredByMetadataId().equals(projectionOriginalValue.getValue().getDeclaredByMetadataId())) {        String fieldPathName="getEntityId()";        typesFieldMaps.get(type).remove(projectionOriginalValue.getKey());        typesFieldMaps.get(type).put(projectionOriginalValue.getKey(),fieldPathName);      }    }  }} @AT@ 17615 @LENGTH@ 2488
---UPD VariableDeclarationStatement@@@SuppressWarnings("unchecked") List<StringAttributeValue> values=(List<StringAttributeValue>)projectionFields.getValue(); @TO@ @SuppressWarnings("unchecked") List<String> projectionFieldList=new ArrayList<String>(); @AT@ 17980 @LENGTH@ 144
------UPD ParameterizedType@@List<StringAttributeValue> @TO@ List<String> @AT@ 18019 @LENGTH@ 26
---------UPD SimpleType@@StringAttributeValue @TO@ String @AT@ 18024 @LENGTH@ 20
------UPD VariableDeclarationFragment@@values=(List<StringAttributeValue>)projectionFields.getValue() @TO@ projectionFieldList=new ArrayList<String>() @AT@ 18046 @LENGTH@ 77
---------UPD SimpleName@@values @TO@ projectionFieldList @AT@ 18046 @LENGTH@ 6
---------INS ClassInstanceCreation@@ArrayList<String>[] @TO@ VariableDeclarationFragment@@values=(List<StringAttributeValue>)projectionFields.getValue() @AT@ 18054 @LENGTH@ 23
------------INS New@@new @TO@ ClassInstanceCreation@@ArrayList<String>[] @AT@ 18054 @LENGTH@ 3
------------INS ParameterizedType@@ArrayList<String> @TO@ ClassInstanceCreation@@ArrayList<String>[] @AT@ 18058 @LENGTH@ 17
---------------INS SimpleType@@ArrayList @TO@ ParameterizedType@@ArrayList<String> @AT@ 18058 @LENGTH@ 9
---------------INS SimpleType@@String @TO@ ParameterizedType@@ArrayList<String> @AT@ 18068 @LENGTH@ 6
---INS EnhancedForStatement@@for (StringAttributeValue value : (List<StringAttributeValue>)projectionFields.getValue()) {  projectionFieldList.add(value.getValue());} @TO@ Block@@ThenBody:{  typesAreProjections.put(type,true);  JavaType associatedEntity=(JavaType)projectionAnnotation.getAttribute("entity").getValue();  AnnotationAttributeValue<?> projectionFields=projectionAnnotation.getAttribute("fields");  @SuppressWarnings("unchecked") List<StringAttributeValue> values=(List<StringAttributeValue>)projectionFields.getValue();  String projectionFieldsString="";  for (int i=0; i < values.size(); i++) {    if (i == 0) {      projectionFieldsString=values.get(i).getValue();    } else {      projectionFieldsString=projectionFieldsString.concat(",").concat(values.get(i).getValue());    }  }  buildFieldNamesMap(associatedEntity,type,projectionAnnotation,typesFieldMaps);  Map<String,FieldMetadata> projectionOriginalFieldMetadataValues=getDtoOperations().buildFieldsFromString(projectionFieldsString,associatedEntity);  List<FieldMetadata> projectionIdentifierFields=getPersistenceMemberLocator().getIdentifierFields(associatedEntity);  if (!getPersistenceMemberLocator().getEmbeddedIdentifierFields(associatedEntity).isEmpty()) {    projectionIdentifierFields.addAll(getPersistenceMemberLocator().getEmbeddedIdentifierFields(associatedEntity));  }  for (  Entry<String,FieldMetadata> projectionOriginalValue : projectionOriginalFieldMetadataValues.entrySet()) {    for (    FieldMetadata field : projectionIdentifierFields) {      if (field.getFieldName().equals(projectionOriginalValue.getValue().getFieldName()) && field.getDeclaredByMetadataId().equals(projectionOriginalValue.getValue().getDeclaredByMetadataId())) {        String fieldPathName="getEntityId()";        typesFieldMaps.get(type).remove(projectionOriginalValue.getKey());        typesFieldMaps.get(type).put(projectionOriginalValue.getKey(),fieldPathName);      }    }  }} @AT@ 18087 @LENGTH@ 156
------MOV CastExpression@@(List<StringAttributeValue>)projectionFields.getValue() @TO@ EnhancedForStatement@@for (StringAttributeValue value : (List<StringAttributeValue>)projectionFields.getValue()) {  projectionFieldList.add(value.getValue());} @AT@ 18067 @LENGTH@ 56
------INS SingleVariableDeclaration@@StringAttributeValue value @TO@ EnhancedForStatement@@for (StringAttributeValue value : (List<StringAttributeValue>)projectionFields.getValue()) {  projectionFieldList.add(value.getValue());} @AT@ 18092 @LENGTH@ 26
---------INS SimpleType@@StringAttributeValue @TO@ SingleVariableDeclaration@@StringAttributeValue value @AT@ 18092 @LENGTH@ 20
---------INS SimpleName@@value @TO@ SingleVariableDeclaration@@StringAttributeValue value @AT@ 18113 @LENGTH@ 5
------INS ExpressionStatement@@MethodInvocation:projectionFieldList.add(value.getValue()) @TO@ EnhancedForStatement@@for (StringAttributeValue value : (List<StringAttributeValue>)projectionFields.getValue()) {  projectionFieldList.add(value.getValue());} @AT@ 18191 @LENGTH@ 42
---------INS MethodInvocation@@projectionFieldList.add(value.getValue()) @TO@ ExpressionStatement@@MethodInvocation:projectionFieldList.add(value.getValue()) @AT@ 18191 @LENGTH@ 41
------------MOV SimpleName@@Name:projectionFieldsString @TO@ MethodInvocation@@projectionFieldList.add(value.getValue()) @AT@ 18378 @LENGTH@ 22
------------MOV SimpleName@@MethodName:concat:[values.get(i).getValue()] @TO@ MethodInvocation@@projectionFieldList.add(value.getValue()) @AT@ 18413 @LENGTH@ 32
---DEL VariableDeclarationStatement@@String projectionFieldsString=""; @AT@ 18133 @LENGTH@ 35
------DEL SimpleType@@String @AT@ 18133 @LENGTH@ 6
------DEL VariableDeclarationFragment@@projectionFieldsString="" @AT@ 18140 @LENGTH@ 27
---------DEL SimpleName@@projectionFieldsString @AT@ 18140 @LENGTH@ 22
---------DEL StringLiteral@@"" @AT@ 18165 @LENGTH@ 2
---DEL ForStatement@@for (int i=0; i < values.size(); i++) {  if (i == 0) {    projectionFieldsString=values.get(i).getValue();  } else {    projectionFieldsString=projectionFieldsString.concat(",").concat(values.get(i).getValue());  }} @AT@ 18177 @LENGTH@ 292
------DEL VariableDeclarationExpression@@int i=0 @AT@ 18182 @LENGTH@ 9
---------DEL PrimitiveType@@int @AT@ 18182 @LENGTH@ 3
---------DEL VariableDeclarationFragment@@i=0 @AT@ 18186 @LENGTH@ 5
------------DEL SimpleName@@i @AT@ 18186 @LENGTH@ 1
------------DEL NumberLiteral@@0 @AT@ 18190 @LENGTH@ 1
------DEL InfixExpression@@i < values.size() @AT@ 18193 @LENGTH@ 17
---------DEL SimpleName@@i @AT@ 18193 @LENGTH@ 1
---------DEL Operator@@< @AT@ 18194 @LENGTH@ 1
---------DEL MethodInvocation@@values.size() @AT@ 18197 @LENGTH@ 13
------------DEL SimpleName@@Name:values @AT@ 18197 @LENGTH@ 6
------------DEL SimpleName@@MethodName:size:[] @AT@ 18204 @LENGTH@ 6
------DEL PostfixExpression@@i++ @AT@ 18212 @LENGTH@ 3
---------DEL SimpleName@@i @AT@ 18212 @LENGTH@ 1
---------DEL Operator@@++ @AT@ 18214 @LENGTH@ 2
------DEL IfStatement@@if (i == 0) {  projectionFieldsString=values.get(i).getValue();} else {  projectionFieldsString=projectionFieldsString.concat(",").concat(values.get(i).getValue());} @AT@ 18229 @LENGTH@ 229
---------DEL InfixExpression@@i == 0 @AT@ 18233 @LENGTH@ 6
------------DEL SimpleName@@i @AT@ 18233 @LENGTH@ 1
------------DEL Operator@@== @AT@ 18234 @LENGTH@ 2
------------DEL NumberLiteral@@0 @AT@ 18238 @LENGTH@ 1
---------DEL Block@@ThenBody:{  projectionFieldsString=values.get(i).getValue();} @AT@ 18241 @LENGTH@ 76
------------DEL ExpressionStatement@@Assignment:projectionFieldsString=values.get(i).getValue() @AT@ 18255 @LENGTH@ 50
---------------DEL Assignment@@projectionFieldsString=values.get(i).getValue() @AT@ 18255 @LENGTH@ 49
------------------DEL SimpleName@@projectionFieldsString @AT@ 18255 @LENGTH@ 22
------------------DEL Operator@@= @AT@ 18277 @LENGTH@ 1
------------------DEL MethodInvocation@@values.get(i).getValue() @AT@ 18280 @LENGTH@ 24
---------------------DEL MethodInvocation@@MethodName:get:[i] @AT@ 18280 @LENGTH@ 13
------------------------DEL SimpleName@@i @AT@ 18291 @LENGTH@ 1
---------------------DEL SimpleName@@Name:values @AT@ 18280 @LENGTH@ 6
---------------------DEL SimpleName@@MethodName:getValue:[] @AT@ 18294 @LENGTH@ 10
---------DEL Block@@ElseBody:{  projectionFieldsString=projectionFieldsString.concat(",").concat(values.get(i).getValue());} @AT@ 18323 @LENGTH@ 135
------------DEL ExpressionStatement@@Assignment:projectionFieldsString=projectionFieldsString.concat(",").concat(values.get(i).getValue()) @AT@ 18337 @LENGTH@ 109
---------------DEL Assignment@@projectionFieldsString=projectionFieldsString.concat(",").concat(values.get(i).getValue()) @AT@ 18337 @LENGTH@ 108
------------------DEL SimpleName@@projectionFieldsString @AT@ 18337 @LENGTH@ 22
------------------DEL Operator@@= @AT@ 18359 @LENGTH@ 1
------------------DEL MethodInvocation@@projectionFieldsString.concat(",").concat(values.get(i).getValue()) @AT@ 18378 @LENGTH@ 67
---------------------DEL MethodInvocation@@MethodName:concat:[","] @AT@ 18378 @LENGTH@ 34
------------------------DEL StringLiteral@@"," @AT@ 18408 @LENGTH@ 3
---UPD VariableDeclarationStatement@@Map<String,FieldMetadata> projectionOriginalFieldMetadataValues=getDtoOperations().buildFieldsFromString(projectionFieldsString,associatedEntity); @TO@ Map<String,FieldMetadata> projectionOriginalFieldMetadataValues=getDtoOperations().buildFieldsFromString(StringUtils.join(projectionFieldList,','),associatedEntity); @AT@ 18685 @LENGTH@ 162
------UPD VariableDeclarationFragment@@projectionOriginalFieldMetadataValues=getDtoOperations().buildFieldsFromString(projectionFieldsString,associatedEntity) @TO@ projectionOriginalFieldMetadataValues=getDtoOperations().buildFieldsFromString(StringUtils.join(projectionFieldList,','),associatedEntity) @AT@ 18712 @LENGTH@ 134
---------UPD MethodInvocation@@getDtoOperations().buildFieldsFromString(projectionFieldsString,associatedEntity) @TO@ getDtoOperations().buildFieldsFromString(StringUtils.join(projectionFieldList,','),associatedEntity) @AT@ 18764 @LENGTH@ 82
------------UPD SimpleName@@MethodName:buildFieldsFromString:[projectionFieldsString, associatedEntity] @TO@ MethodName:buildFieldsFromString:[StringUtils.join(projectionFieldList,','), associatedEntity] @AT@ 18783 @LENGTH@ 63
---------------INS MethodInvocation@@StringUtils.join(projectionFieldList,',') @TO@ SimpleName@@MethodName:buildFieldsFromString:[projectionFieldsString, associatedEntity] @AT@ 18579 @LENGTH@ 42
------------------INS SimpleName@@Name:StringUtils @TO@ MethodInvocation@@StringUtils.join(projectionFieldList,',') @AT@ 18579 @LENGTH@ 11
------------------INS SimpleName@@MethodName:join:[projectionFieldList, ','] @TO@ MethodInvocation@@StringUtils.join(projectionFieldList,',') @AT@ 18591 @LENGTH@ 30
---------------------INS CharacterLiteral@@',' @TO@ SimpleName@@MethodName:join:[projectionFieldList, ','] @AT@ 18617 @LENGTH@ 3
---------------------MOV SimpleName@@projectionFieldsString @TO@ SimpleName@@MethodName:join:[projectionFieldList, ','] @AT@ 18805 @LENGTH@ 22
---------------UPD SimpleName@@projectionFieldsString @TO@ projectionFieldList @AT@ 18805 @LENGTH@ 22


UPD VariableDeclarationStatement@@byte expectedByte=expectedBytes == null ? 0 : expectedBytes[i % expectedLength]; @TO@ byte expectedByte=expectedLength <= 0 ? 0 : expectedBytes[i % expectedLength]; @AT@ 1390 @LENGTH@ 82
---UPD VariableDeclarationFragment@@expectedByte=expectedBytes == null ? 0 : expectedBytes[i % expectedLength] @TO@ expectedByte=expectedLength <= 0 ? 0 : expectedBytes[i % expectedLength] @AT@ 1395 @LENGTH@ 76
------UPD ConditionalExpression@@expectedBytes == null ? 0 : expectedBytes[i % expectedLength] @TO@ expectedLength <= 0 ? 0 : expectedBytes[i % expectedLength] @AT@ 1410 @LENGTH@ 61
---------UPD InfixExpression@@expectedBytes == null @TO@ expectedLength <= 0 @AT@ 1410 @LENGTH@ 21
------------UPD SimpleName@@expectedBytes @TO@ expectedLength @AT@ 1410 @LENGTH@ 13
------------UPD Operator@@== @TO@ <= @AT@ 1423 @LENGTH@ 2
------------DEL NullLiteral@@null @AT@ 1427 @LENGTH@ 4
------------INS NumberLiteral@@0 @TO@ InfixExpression@@expectedBytes == null @AT@ 1428 @LENGTH@ 1


UPD TypeDeclaration@@[@Configuration, @ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration"), public]S3ComponentAutoConfiguration,  @TO@ [@Configuration, @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration"), public]S3ComponentAutoConfiguration,  @AT@ 1440 @LENGTH@ 586
---UPD NormalAnnotation@@@ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1455 @LENGTH@ 79
---UPD NormalAnnotation@@@AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1535 @LENGTH@ 80


UPD TypeDeclaration@@[@Configuration, @ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration"), @EnableConfigurationProperties(BeanIODataFormatConfiguration.class), public]BeanIODataFormatAutoConfiguration,  @TO@ [@Configuration, @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration"), @EnableConfigurationProperties(BeanIODataFormatConfiguration.class), public]BeanIODataFormatAutoConfiguration,  @AT@ 1671 @LENGTH@ 1126
---UPD NormalAnnotation@@@ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1686 @LENGTH@ 79
---UPD NormalAnnotation@@@AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1766 @LENGTH@ 80


INS ExpressionStatement@@Assignment:redisProcessorsCreator=new AllRedisProcessorsCreator(new RedisClient(configuration.getRedisTemplate()),((RedisComponent)getComponent()).getExchangeConverter()) @TO@ MethodDeclaration@@public, voidMethodName:RedisEndpoint, String uri, RedisComponent component, RedisConfiguration configuration,  @AT@ 1679 @LENGTH@ 179
---INS Assignment@@redisProcessorsCreator=new AllRedisProcessorsCreator(new RedisClient(configuration.getRedisTemplate()),((RedisComponent)getComponent()).getExchangeConverter()) @TO@ ExpressionStatement@@Assignment:redisProcessorsCreator=new AllRedisProcessorsCreator(new RedisClient(configuration.getRedisTemplate()),((RedisComponent)getComponent()).getExchangeConverter()) @AT@ 1679 @LENGTH@ 178
------INS SimpleName@@redisProcessorsCreator @TO@ Assignment@@redisProcessorsCreator=new AllRedisProcessorsCreator(new RedisClient(configuration.getRedisTemplate()),((RedisComponent)getComponent()).getExchangeConverter()) @AT@ 1679 @LENGTH@ 22
------INS Operator@@= @TO@ Assignment@@redisProcessorsCreator=new AllRedisProcessorsCreator(new RedisClient(configuration.getRedisTemplate()),((RedisComponent)getComponent()).getExchangeConverter()) @AT@ 1701 @LENGTH@ 1
------MOV ClassInstanceCreation@@RedisProducer[this, new RedisClient(configuration.getRedisTemplate()), RedisConstants.COMMAND, defaultCommand.name(), ((RedisComponent)getComponent()).getExchangeConverter()] @TO@ Assignment@@redisProcessorsCreator=new AllRedisProcessorsCreator(new RedisClient(configuration.getRedisTemplate()),((RedisComponent)getComponent()).getExchangeConverter()) @AT@ 1841 @LENGTH@ 242


INS IfStatement@@if (query.getCritieria() != null && !CollectionUtils.isEmpty(query.getCritieria().getSismember()) && !CollectionUtils.isEmpty(query.getCritieria().getOrSismember())) if (query.getCritieria().getSismember().size() == 1 && query.getCritieria().getOrSismember().size() == 1) {  query.getCritieria().getOrSismember().add(query.getCritieria().getSismember().iterator().next());  query.getCritieria().getSismember().clear();} @TO@ MethodDeclaration@@protected, KeyValueQuery<RedisOperationChain>, MethodName:complete, final RedisOperationChain criteria, Sort sort,  @AT@ 3221 @LENGTH@ 437
---INS InfixExpression@@query.getCritieria() != null && !CollectionUtils.isEmpty(query.getCritieria().getSismember()) && !CollectionUtils.isEmpty(query.getCritieria().getOrSismember()) @TO@ IfStatement@@if (query.getCritieria() != null && !CollectionUtils.isEmpty(query.getCritieria().getSismember()) && !CollectionUtils.isEmpty(query.getCritieria().getOrSismember())) if (query.getCritieria().getSismember().size() == 1 && query.getCritieria().getOrSismember().size() == 1) {  query.getCritieria().getOrSismember().add(query.getCritieria().getSismember().iterator().next());  query.getCritieria().getSismember().clear();} @AT@ 3225 @LENGTH@ 164
------INS InfixExpression@@query.getCritieria() != null && !CollectionUtils.isEmpty(query.getCritieria().getSismember()) @TO@ InfixExpression@@query.getCritieria() != null && !CollectionUtils.isEmpty(query.getCritieria().getSismember()) && !CollectionUtils.isEmpty(query.getCritieria().getOrSismember()) @AT@ 3225 @LENGTH@ 93
---------INS InfixExpression@@query.getCritieria() != null @TO@ InfixExpression@@query.getCritieria() != null && !CollectionUtils.isEmpty(query.getCritieria().getSismember()) @AT@ 3225 @LENGTH@ 28
------------INS MethodInvocation@@query.getCritieria() @TO@ InfixExpression@@query.getCritieria() != null @AT@ 3225 @LENGTH@ 20
---------------INS SimpleName@@Name:query @TO@ MethodInvocation@@query.getCritieria() @AT@ 3225 @LENGTH@ 5
---------------INS SimpleName@@MethodName:getCritieria:[] @TO@ MethodInvocation@@query.getCritieria() @AT@ 3231 @LENGTH@ 14
------------INS Operator@@!= @TO@ InfixExpression@@query.getCritieria() != null @AT@ 3245 @LENGTH@ 2
------------INS NullLiteral@@null @TO@ InfixExpression@@query.getCritieria() != null @AT@ 3249 @LENGTH@ 4
---------INS Operator@@&& @TO@ InfixExpression@@query.getCritieria() != null && !CollectionUtils.isEmpty(query.getCritieria().getSismember()) @AT@ 3253 @LENGTH@ 2
---------INS PrefixExpression@@!CollectionUtils.isEmpty(query.getCritieria().getSismember()) @TO@ InfixExpression@@query.getCritieria() != null && !CollectionUtils.isEmpty(query.getCritieria().getSismember()) @AT@ 3257 @LENGTH@ 61
------------INS Operator@@! @TO@ PrefixExpression@@!CollectionUtils.isEmpty(query.getCritieria().getSismember()) @AT@ 3257 @LENGTH@ 1
------------INS MethodInvocation@@CollectionUtils.isEmpty(query.getCritieria().getSismember()) @TO@ PrefixExpression@@!CollectionUtils.isEmpty(query.getCritieria().getSismember()) @AT@ 3258 @LENGTH@ 60
---------------INS SimpleName@@Name:CollectionUtils @TO@ MethodInvocation@@CollectionUtils.isEmpty(query.getCritieria().getSismember()) @AT@ 3258 @LENGTH@ 15
---------------INS SimpleName@@MethodName:isEmpty:[query.getCritieria().getSismember()] @TO@ MethodInvocation@@CollectionUtils.isEmpty(query.getCritieria().getSismember()) @AT@ 3274 @LENGTH@ 44
------------------INS MethodInvocation@@query.getCritieria().getSismember() @TO@ SimpleName@@MethodName:isEmpty:[query.getCritieria().getSismember()] @AT@ 3282 @LENGTH@ 35
---------------------INS MethodInvocation@@MethodName:getCritieria:[] @TO@ MethodInvocation@@query.getCritieria().getSismember() @AT@ 3282 @LENGTH@ 20
---------------------INS SimpleName@@Name:query @TO@ MethodInvocation@@query.getCritieria().getSismember() @AT@ 3282 @LENGTH@ 5
---------------------INS SimpleName@@MethodName:getSismember:[] @TO@ MethodInvocation@@query.getCritieria().getSismember() @AT@ 3303 @LENGTH@ 14
------INS Operator@@&& @TO@ InfixExpression@@query.getCritieria() != null && !CollectionUtils.isEmpty(query.getCritieria().getSismember()) && !CollectionUtils.isEmpty(query.getCritieria().getOrSismember()) @AT@ 3318 @LENGTH@ 2
------INS PrefixExpression@@!CollectionUtils.isEmpty(query.getCritieria().getOrSismember()) @TO@ InfixExpression@@query.getCritieria() != null && !CollectionUtils.isEmpty(query.getCritieria().getSismember()) && !CollectionUtils.isEmpty(query.getCritieria().getOrSismember()) @AT@ 3326 @LENGTH@ 63
---------INS Operator@@! @TO@ PrefixExpression@@!CollectionUtils.isEmpty(query.getCritieria().getOrSismember()) @AT@ 3326 @LENGTH@ 1
---------INS MethodInvocation@@CollectionUtils.isEmpty(query.getCritieria().getOrSismember()) @TO@ PrefixExpression@@!CollectionUtils.isEmpty(query.getCritieria().getOrSismember()) @AT@ 3327 @LENGTH@ 62
------------INS SimpleName@@Name:CollectionUtils @TO@ MethodInvocation@@CollectionUtils.isEmpty(query.getCritieria().getOrSismember()) @AT@ 3327 @LENGTH@ 15
------------INS SimpleName@@MethodName:isEmpty:[query.getCritieria().getOrSismember()] @TO@ MethodInvocation@@CollectionUtils.isEmpty(query.getCritieria().getOrSismember()) @AT@ 3343 @LENGTH@ 46
---------------INS MethodInvocation@@query.getCritieria().getOrSismember() @TO@ SimpleName@@MethodName:isEmpty:[query.getCritieria().getOrSismember()] @AT@ 3351 @LENGTH@ 37
------------------INS MethodInvocation@@MethodName:getCritieria:[] @TO@ MethodInvocation@@query.getCritieria().getOrSismember() @AT@ 3351 @LENGTH@ 20
------------------INS SimpleName@@Name:query @TO@ MethodInvocation@@query.getCritieria().getOrSismember() @AT@ 3351 @LENGTH@ 5
------------------INS SimpleName@@MethodName:getOrSismember:[] @TO@ MethodInvocation@@query.getCritieria().getOrSismember() @AT@ 3372 @LENGTH@ 16
---INS Block@@ThenBody:if (query.getCritieria().getSismember().size() == 1 && query.getCritieria().getOrSismember().size() == 1) {  query.getCritieria().getOrSismember().add(query.getCritieria().getSismember().iterator().next());  query.getCritieria().getSismember().clear();} @TO@ IfStatement@@if (query.getCritieria() != null && !CollectionUtils.isEmpty(query.getCritieria().getSismember()) && !CollectionUtils.isEmpty(query.getCritieria().getOrSismember())) if (query.getCritieria().getSismember().size() == 1 && query.getCritieria().getOrSismember().size() == 1) {  query.getCritieria().getOrSismember().add(query.getCritieria().getSismember().iterator().next());  query.getCritieria().getSismember().clear();} @AT@ 3394 @LENGTH@ 264
------MOV IfStatement@@if (query.getCritieria().getSismember().size() == 1 && query.getCritieria().getOrSismember().size() == 1) {  query.getCritieria().getOrSismember().add(query.getCritieria().getSismember().iterator().next());  query.getCritieria().getSismember().clear();} @TO@ Block@@ThenBody:if (query.getCritieria().getSismember().size() == 1 && query.getCritieria().getOrSismember().size() == 1) {  query.getCritieria().getOrSismember().add(query.getCritieria().getSismember().iterator().next());  query.getCritieria().getSismember().clear();} @AT@ 3167 @LENGTH@ 261


UPD IfStatement@@if (chunk == null) {  candidates.addAll(remainingArgs);} else {  for (  String name : remainingArgs) {    if (name.startsWith(chunk)) {      candidates.add(name);    }  }  Collections.sort(candidates);} @TO@ if (chunk == null) {  candidates.addAll(remainingArgs);} else {  for (  String name : remainingArgs) {    if (name.startsWith(chunk)) {      candidates.add(name);    }  }} @AT@ 3274 @LENGTH@ 301
---UPD Block@@ElseBody:{  for (  String name : remainingArgs) {    if (name.startsWith(chunk)) {      candidates.add(name);    }  }  Collections.sort(candidates);} @TO@ ElseBody:{  for (  String name : remainingArgs) {    if (name.startsWith(chunk)) {      candidates.add(name);    }  }} @AT@ 3356 @LENGTH@ 219
------DEL ExpressionStatement@@MethodInvocation:Collections.sort(candidates) @AT@ 3536 @LENGTH@ 29
---------DEL MethodInvocation@@Collections.sort(candidates) @AT@ 3536 @LENGTH@ 28
------------DEL SimpleName@@Name:Collections @AT@ 3536 @LENGTH@ 11
------------DEL SimpleName@@MethodName:sort:[candidates] @AT@ 3548 @LENGTH@ 16
---------------DEL SimpleName@@candidates @AT@ 3553 @LENGTH@ 10


UPD ReturnStatement@@MethodInvocation:formatter(COLOR_PATTERN,"%d{yyyy-MM-dd HH:mm:ss,SSS} %-5p [%c] (%t) %s%e%n") @TO@ MethodInvocation:formatter(COLOR_PATTERN,"%K{level}%d{yyyy-MM-dd HH:mm:ss,SSS} %-5p [%c] (%t) %s%e%n") @AT@ 3605 @LENGTH@ 85
---UPD MethodInvocation@@formatter(COLOR_PATTERN,"%d{yyyy-MM-dd HH:mm:ss,SSS} %-5p [%c] (%t) %s%e%n") @TO@ formatter(COLOR_PATTERN,"%K{level}%d{yyyy-MM-dd HH:mm:ss,SSS} %-5p [%c] (%t) %s%e%n") @AT@ 3612 @LENGTH@ 77
------UPD SimpleName@@MethodName:formatter:[COLOR_PATTERN, "%d{yyyy-MM-dd HH:mm:ss,SSS} %-5p [%c] (%t) %s%e%n"] @TO@ MethodName:formatter:[COLOR_PATTERN, "%K{level}%d{yyyy-MM-dd HH:mm:ss,SSS} %-5p [%c] (%t) %s%e%n"] @AT@ 3612 @LENGTH@ 77
---------UPD StringLiteral@@"%d{yyyy-MM-dd HH:mm:ss,SSS} %-5p [%c] (%t) %s%e%n" @TO@ "%K{level}%d{yyyy-MM-dd HH:mm:ss,SSS} %-5p [%c] (%t) %s%e%n" @AT@ 3637 @LENGTH@ 51


UPD TypeDeclaration@@[@Configuration, @ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration"), @EnableConfigurationProperties(AvroComponentConfiguration.class), public]AvroComponentAutoConfiguration,  @TO@ [@Configuration, @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration"), @EnableConfigurationProperties(AvroComponentConfiguration.class), public]AvroComponentAutoConfiguration,  @AT@ 1619 @LENGTH@ 2039
---UPD NormalAnnotation@@@ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1634 @LENGTH@ 79
---UPD NormalAnnotation@@@AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1714 @LENGTH@ 80


UPD TypeDeclaration@@[@Configuration, @ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration"), @EnableConfigurationProperties(JaxbDataFormatConfiguration.class), public]JaxbDataFormatAutoConfiguration,  @TO@ [@Configuration, @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration"), @EnableConfigurationProperties(JaxbDataFormatConfiguration.class), public]JaxbDataFormatAutoConfiguration,  @AT@ 1663 @LENGTH@ 1095
---UPD NormalAnnotation@@@ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1678 @LENGTH@ 79
---UPD NormalAnnotation@@@AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1758 @LENGTH@ 80


UPD TypeDeclaration@@[@ConfigurationProperties(prefix="camel.dataformat.zipFile"), public]ZipFileDataFormatConfiguration,  @TO@ [@ConfigurationProperties(prefix="camel.dataformat.zipfile"), public]ZipFileDataFormatConfiguration,  @AT@ 1044 @LENGTH@ 542
---UPD NormalAnnotation@@@ConfigurationProperties(prefix="camel.dataformat.zipFile") @TO@ @ConfigurationProperties(prefix="camel.dataformat.zipfile") @AT@ 1044 @LENGTH@ 61


UPD TypeDeclaration@@[@Configuration, @ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration"), @EnableConfigurationProperties(JohnzonDataFormatConfiguration.class), public]JohnzonDataFormatAutoConfiguration,  @TO@ [@Configuration, @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration"), @EnableConfigurationProperties(JohnzonDataFormatConfiguration.class), public]JohnzonDataFormatAutoConfiguration,  @AT@ 1672 @LENGTH@ 1140
---UPD NormalAnnotation@@@ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1687 @LENGTH@ 79
---UPD NormalAnnotation@@@AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1767 @LENGTH@ 80


UPD IfStatement@@if (LOG.isDebugEnabled()) {  LOG.debug("Routing events from heartbeat response to task" + ", currentTaskAttemptId=" + task.getTaskAttemptID() + ", eventCount="+ response.getEvents().size()+ " fromEventId="+ fromEventId+ " nextFromEventId="+ response.getNextFromEventId());} @TO@ if (LOG.isInfoEnabled()) {  LOG.info("Routing events from heartbeat response to task" + ", currentTaskAttemptId=" + task.getTaskAttemptID() + ", eventCount="+ response.getEvents().size()+ " fromEventId="+ fromEventId+ " nextFromEventId="+ response.getNextFromEventId());} @AT@ 13067 @LENGTH@ 348
---UPD MethodInvocation@@LOG.isDebugEnabled() @TO@ LOG.isInfoEnabled() @AT@ 13071 @LENGTH@ 20
------UPD SimpleName@@MethodName:isDebugEnabled:[] @TO@ MethodName:isInfoEnabled:[] @AT@ 13075 @LENGTH@ 16
---UPD Block@@ThenBody:{  LOG.debug("Routing events from heartbeat response to task" + ", currentTaskAttemptId=" + task.getTaskAttemptID() + ", eventCount="+ response.getEvents().size()+ " fromEventId="+ fromEventId+ " nextFromEventId="+ response.getNextFromEventId());} @TO@ ThenBody:{  LOG.info("Routing events from heartbeat response to task" + ", currentTaskAttemptId=" + task.getTaskAttemptID() + ", eventCount="+ response.getEvents().size()+ " fromEventId="+ fromEventId+ " nextFromEventId="+ response.getNextFromEventId());} @AT@ 13093 @LENGTH@ 322
------UPD ExpressionStatement@@MethodInvocation:LOG.debug("Routing events from heartbeat response to task" + ", currentTaskAttemptId=" + task.getTaskAttemptID() + ", eventCount="+ response.getEvents().size()+ " fromEventId="+ fromEventId+ " nextFromEventId="+ response.getNextFromEventId()) @TO@ MethodInvocation:LOG.info("Routing events from heartbeat response to task" + ", currentTaskAttemptId=" + task.getTaskAttemptID() + ", eventCount="+ response.getEvents().size()+ " fromEventId="+ fromEventId+ " nextFromEventId="+ response.getNextFromEventId()) @AT@ 13107 @LENGTH@ 296
---------UPD MethodInvocation@@LOG.debug("Routing events from heartbeat response to task" + ", currentTaskAttemptId=" + task.getTaskAttemptID() + ", eventCount="+ response.getEvents().size()+ " fromEventId="+ fromEventId+ " nextFromEventId="+ response.getNextFromEventId()) @TO@ LOG.info("Routing events from heartbeat response to task" + ", currentTaskAttemptId=" + task.getTaskAttemptID() + ", eventCount="+ response.getEvents().size()+ " fromEventId="+ fromEventId+ " nextFromEventId="+ response.getNextFromEventId()) @AT@ 13107 @LENGTH@ 295
------------UPD SimpleName@@MethodName:debug:["Routing events from heartbeat response to task" + ", currentTaskAttemptId=" + task.getTaskAttemptID() + ", eventCount="+ response.getEvents().size()+ " fromEventId="+ fromEventId+ " nextFromEventId="+ response.getNextFromEventId()] @TO@ MethodName:info:["Routing events from heartbeat response to task" + ", currentTaskAttemptId=" + task.getTaskAttemptID() + ", eventCount="+ response.getEvents().size()+ " fromEventId="+ fromEventId+ " nextFromEventId="+ response.getNextFromEventId()] @AT@ 13111 @LENGTH@ 291


UPD TryStatement@@try {  final Class<?> klass=ReflectionUtils.getClassByName(klassName);  random=(CryptoRandom)ReflectionUtils.newInstance(klass,props);  if (random != null) {    break;  }} catch (ClassCastException e) {  errorMessage.append("Class: [" + klassName + "] is not a "+ "CryptoCipher.");}catch (ClassNotFoundException e) {  errorMessage.append("CryptoCipher: [" + klassName + "] "+ "not "+ "found.");} @TO@ try {  final Class<?> klass=ReflectionUtils.getClassByName(klassName);  random=(CryptoRandom)ReflectionUtils.newInstance(klass,props);  if (random != null) {    break;  }} catch (ClassCastException e) {  errorMessage.append("Class: [" + klassName + "] is not a CryptoRandom.");}catch (ClassNotFoundException e) {  errorMessage.append("CryptoRandom: [" + klassName + "] not found.");} @AT@ 2487 @LENGTH@ 599
---UPD CatchClause@@catch (ClassCastException e) {  errorMessage.append("Class: [" + klassName + "] is not a "+ "CryptoCipher.");} @TO@ catch (ClassCastException e) {  errorMessage.append("Class: [" + klassName + "] is not a CryptoRandom.");} @AT@ 2755 @LENGTH@ 163
------UPD ExpressionStatement@@MethodInvocation:errorMessage.append("Class: [" + klassName + "] is not a "+ "CryptoCipher.") @TO@ MethodInvocation:errorMessage.append("Class: [" + klassName + "] is not a CryptoRandom.") @AT@ 2802 @LENGTH@ 102
---------UPD MethodInvocation@@errorMessage.append("Class: [" + klassName + "] is not a "+ "CryptoCipher.") @TO@ errorMessage.append("Class: [" + klassName + "] is not a CryptoRandom.") @AT@ 2802 @LENGTH@ 101
------------UPD SimpleName@@MethodName:append:["Class: [" + klassName + "] is not a "+ "CryptoCipher."] @TO@ MethodName:append:["Class: [" + klassName + "] is not a CryptoRandom."] @AT@ 2815 @LENGTH@ 88
---------------UPD InfixExpression@@"Class: [" + klassName + "] is not a "+ "CryptoCipher." @TO@ "Class: [" + klassName + "] is not a CryptoRandom." @AT@ 2822 @LENGTH@ 80
------------------UPD StringLiteral@@"] is not a " @TO@ "] is not a CryptoRandom." @AT@ 2847 @LENGTH@ 13
------------------DEL StringLiteral@@"CryptoCipher." @AT@ 2887 @LENGTH@ 15
---UPD CatchClause@@catch (ClassNotFoundException e) {  errorMessage.append("CryptoCipher: [" + klassName + "] "+ "not "+ "found.");} @TO@ catch (ClassNotFoundException e) {  errorMessage.append("CryptoRandom: [" + klassName + "] not found.");} @AT@ 2919 @LENGTH@ 167
------UPD ExpressionStatement@@MethodInvocation:errorMessage.append("CryptoCipher: [" + klassName + "] "+ "not "+ "found.") @TO@ MethodInvocation:errorMessage.append("CryptoRandom: [" + klassName + "] not found.") @AT@ 2970 @LENGTH@ 102
---------UPD MethodInvocation@@errorMessage.append("CryptoCipher: [" + klassName + "] "+ "not "+ "found.") @TO@ errorMessage.append("CryptoRandom: [" + klassName + "] not found.") @AT@ 2970 @LENGTH@ 101
------------UPD SimpleName@@MethodName:append:["CryptoCipher: [" + klassName + "] "+ "not "+ "found."] @TO@ MethodName:append:["CryptoRandom: [" + klassName + "] not found."] @AT@ 2983 @LENGTH@ 88
---------------UPD InfixExpression@@"CryptoCipher: [" + klassName + "] "+ "not "+ "found." @TO@ "CryptoRandom: [" + klassName + "] not found." @AT@ 2990 @LENGTH@ 80
------------------UPD StringLiteral@@"CryptoCipher: [" @TO@ "CryptoRandom: [" @AT@ 2990 @LENGTH@ 17
------------------DEL StringLiteral@@"] " @AT@ 3022 @LENGTH@ 4
------------------DEL StringLiteral@@"not " @AT@ 3053 @LENGTH@ 6
------------------UPD StringLiteral@@"found." @TO@ "] not found." @AT@ 3062 @LENGTH@ 8


UPD TypeDeclaration@@[@RunWith(Suite.class), @Suite.SuiteClasses({BasicOpsTestCase.class,CloneProfileTestCase.class,UndeployWildcardDomainTestCase.class,HierarchicalCompositionTestCase.class,WildCardReadsTestCase.class}), public]CLITestSuite,  @TO@ [@RunWith(Suite.class), @Suite.SuiteClasses({BasicOpsTestCase.class,CliCompletionTestCase.class,CloneProfileTestCase.class,UndeployWildcardDomainTestCase.class,HierarchicalCompositionTestCase.class,WildCardReadsTestCase.class}), public]CLITestSuite,  @AT@ 1892 @LENGTH@ 4563
---UPD SingleMemberAnnotation@@@Suite.SuiteClasses({BasicOpsTestCase.class,CloneProfileTestCase.class,UndeployWildcardDomainTestCase.class,HierarchicalCompositionTestCase.class,WildCardReadsTestCase.class}) @TO@ @Suite.SuiteClasses({BasicOpsTestCase.class,CliCompletionTestCase.class,CloneProfileTestCase.class,UndeployWildcardDomainTestCase.class,HierarchicalCompositionTestCase.class,WildCardReadsTestCase.class}) @AT@ 1914 @LENGTH@ 201


UPD TypeDeclaration@@[@Configuration, @ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration"), public]IrcComponentAutoConfiguration,  @TO@ [@Configuration, @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration"), public]IrcComponentAutoConfiguration,  @AT@ 1435 @LENGTH@ 589
---UPD NormalAnnotation@@@ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1450 @LENGTH@ 79
---UPD NormalAnnotation@@@AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1530 @LENGTH@ 80


UPD ExpressionStatement@@MethodInvocation:setProperty(camelContext,dataFormat,"modulesClassNames",moduleClassNames) @TO@ MethodInvocation:setProperty(camelContext,dataFormat,"moduleClassNames",moduleClassNames) @AT@ 12773 @LENGTH@ 77
---UPD MethodInvocation@@setProperty(camelContext,dataFormat,"modulesClassNames",moduleClassNames) @TO@ setProperty(camelContext,dataFormat,"moduleClassNames",moduleClassNames) @AT@ 12773 @LENGTH@ 76
------UPD SimpleName@@MethodName:setProperty:[camelContext, dataFormat, "modulesClassNames", moduleClassNames] @TO@ MethodName:setProperty:[camelContext, dataFormat, "moduleClassNames", moduleClassNames] @AT@ 12773 @LENGTH@ 76
---------UPD StringLiteral@@"modulesClassNames" @TO@ "moduleClassNames" @AT@ 12811 @LENGTH@ 19


UPD ExpressionStatement@@MethodInvocation:assertThat(AuthorityUtils.authorityListToSet(rod.getAuthorities()).contains("PREFIX_ROLE_SUPERVISOR")) @TO@ MethodInvocation:assertThat(AuthorityUtils.authorityListToSet(rod.getAuthorities())).contains("PREFIX_ROLE_SUPERVISOR") @AT@ 7034 @LENGTH@ 108
---UPD MethodInvocation@@assertThat(AuthorityUtils.authorityListToSet(rod.getAuthorities()).contains("PREFIX_ROLE_SUPERVISOR")) @TO@ assertThat(AuthorityUtils.authorityListToSet(rod.getAuthorities())).contains("PREFIX_ROLE_SUPERVISOR") @AT@ 7034 @LENGTH@ 107
------INS MethodInvocation@@MethodName:assertThat:[AuthorityUtils.authorityListToSet(rod.getAuthorities())] @TO@ MethodInvocation@@assertThat(AuthorityUtils.authorityListToSet(rod.getAuthorities()).contains("PREFIX_ROLE_SUPERVISOR")) @AT@ 6789 @LENGTH@ 67
---------INS MethodInvocation@@AuthorityUtils.authorityListToSet(rod.getAuthorities()) @TO@ MethodInvocation@@MethodName:assertThat:[AuthorityUtils.authorityListToSet(rod.getAuthorities())] @AT@ 6800 @LENGTH@ 55
------------INS SimpleName@@MethodName:authorityListToSet:[rod.getAuthorities()] @TO@ MethodInvocation@@AuthorityUtils.authorityListToSet(rod.getAuthorities()) @AT@ 6815 @LENGTH@ 40
---------------INS MethodInvocation@@rod.getAuthorities() @TO@ SimpleName@@MethodName:authorityListToSet:[rod.getAuthorities()] @AT@ 6834 @LENGTH@ 20
------------------MOV SimpleName@@Name:rod @TO@ MethodInvocation@@rod.getAuthorities() @AT@ 7079 @LENGTH@ 3
------------------MOV SimpleName@@MethodName:getAuthorities:[] @TO@ MethodInvocation@@rod.getAuthorities() @AT@ 7083 @LENGTH@ 16
------------MOV SimpleName@@Name:AuthorityUtils @TO@ MethodInvocation@@AuthorityUtils.authorityListToSet(rod.getAuthorities()) @AT@ 7045 @LENGTH@ 14
------DEL SimpleName@@MethodName:assertThat:[AuthorityUtils.authorityListToSet(rod.getAuthorities()).contains("PREFIX_ROLE_SUPERVISOR")] @AT@ 7034 @LENGTH@ 107
---------DEL MethodInvocation@@AuthorityUtils.authorityListToSet(rod.getAuthorities()).contains("PREFIX_ROLE_SUPERVISOR") @AT@ 7045 @LENGTH@ 95
------------DEL MethodInvocation@@MethodName:authorityListToSet:[rod.getAuthorities()] @AT@ 7045 @LENGTH@ 55
---------------DEL MethodInvocation@@rod.getAuthorities() @AT@ 7079 @LENGTH@ 20
------MOV SimpleName@@MethodName:contains:["PREFIX_ROLE_SUPERVISOR"] @TO@ MethodInvocation@@assertThat(AuthorityUtils.authorityListToSet(rod.getAuthorities()).contains("PREFIX_ROLE_SUPERVISOR")) @AT@ 7101 @LENGTH@ 39


INS MethodDeclaration@@public, Neo4jMappingContext, MethodName:neo4jMappingContext, Exception,  @TO@ TypeDeclaration@@[@Configuration, @EnableWebMvc, @ComponentScan({"org.springframework.data.neo4j.web"}), @EnableNeo4jRepositories("org.springframework.data.neo4j.web.repo"), @EnableTransactionManagement, public]WebAppContext, WebMvcConfigurerAdapter @AT@ 2567 @LENGTH@ 133
---INS Modifier@@public @TO@ MethodDeclaration@@public, Neo4jMappingContext, MethodName:neo4jMappingContext, Exception,  @AT@ 2567 @LENGTH@ 6
---INS SimpleType@@Neo4jMappingContext @TO@ MethodDeclaration@@public, Neo4jMappingContext, MethodName:neo4jMappingContext, Exception,  @AT@ 2574 @LENGTH@ 19
---INS SimpleName@@MethodName:neo4jMappingContext @TO@ MethodDeclaration@@public, Neo4jMappingContext, MethodName:neo4jMappingContext, Exception,  @AT@ 2594 @LENGTH@ 19
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, Neo4jMappingContext, MethodName:neo4jMappingContext, Exception,  @AT@ 2623 @LENGTH@ 9
---INS ReturnStatement@@ClassInstanceCreation:new Neo4jMappingContext(sessionFactory().metaData()) @TO@ MethodDeclaration@@public, Neo4jMappingContext, MethodName:neo4jMappingContext, Exception,  @AT@ 2637 @LENGTH@ 60
------INS ClassInstanceCreation@@Neo4jMappingContext[sessionFactory().metaData()] @TO@ ReturnStatement@@ClassInstanceCreation:new Neo4jMappingContext(sessionFactory().metaData()) @AT@ 2644 @LENGTH@ 52
---------INS New@@new @TO@ ClassInstanceCreation@@Neo4jMappingContext[sessionFactory().metaData()] @AT@ 2644 @LENGTH@ 3
---------INS SimpleType@@Neo4jMappingContext @TO@ ClassInstanceCreation@@Neo4jMappingContext[sessionFactory().metaData()] @AT@ 2648 @LENGTH@ 19
---------INS MethodInvocation@@sessionFactory().metaData() @TO@ ClassInstanceCreation@@Neo4jMappingContext[sessionFactory().metaData()] @AT@ 2668 @LENGTH@ 27
------------INS MethodInvocation@@MethodName:sessionFactory:[] @TO@ MethodInvocation@@sessionFactory().metaData() @AT@ 2668 @LENGTH@ 16
------------INS SimpleName@@MethodName:metaData:[] @TO@ MethodInvocation@@sessionFactory().metaData() @AT@ 2685 @LENGTH@ 10


UPD ThrowStatement@@MethodInvocation:ctxt.mappingException(LocalTrendsHolder.class) @TO@ ClassInstanceCreation:new JsonMappingException(jp,"Processing " + LocalTrendsHolder.class.getName()) @AT@ 2195 @LENGTH@ 53
---DEL MethodInvocation@@ctxt.mappingException(LocalTrendsHolder.class) @AT@ 2201 @LENGTH@ 46
------DEL SimpleName@@Name:ctxt @AT@ 2201 @LENGTH@ 4
------DEL SimpleName@@MethodName:mappingException:[LocalTrendsHolder.class] @AT@ 2206 @LENGTH@ 41
---------DEL TypeLiteral@@LocalTrendsHolder.class @AT@ 2223 @LENGTH@ 23
---INS ClassInstanceCreation@@JsonMappingException[jp, "Processing " + LocalTrendsHolder.class.getName()] @TO@ ThrowStatement@@MethodInvocation:ctxt.mappingException(LocalTrendsHolder.class) @AT@ 2261 @LENGTH@ 79
------INS New@@new @TO@ ClassInstanceCreation@@JsonMappingException[jp, "Processing " + LocalTrendsHolder.class.getName()] @AT@ 2261 @LENGTH@ 3
------INS SimpleType@@JsonMappingException @TO@ ClassInstanceCreation@@JsonMappingException[jp, "Processing " + LocalTrendsHolder.class.getName()] @AT@ 2265 @LENGTH@ 20
------INS SimpleName@@jp @TO@ ClassInstanceCreation@@JsonMappingException[jp, "Processing " + LocalTrendsHolder.class.getName()] @AT@ 2286 @LENGTH@ 2
------INS InfixExpression@@"Processing " + LocalTrendsHolder.class.getName() @TO@ ClassInstanceCreation@@JsonMappingException[jp, "Processing " + LocalTrendsHolder.class.getName()] @AT@ 2290 @LENGTH@ 49
---------INS StringLiteral@@"Processing " @TO@ InfixExpression@@"Processing " + LocalTrendsHolder.class.getName() @AT@ 2290 @LENGTH@ 13
---------INS Operator@@+ @TO@ InfixExpression@@"Processing " + LocalTrendsHolder.class.getName() @AT@ 2303 @LENGTH@ 1
---------INS MethodInvocation@@LocalTrendsHolder.class.getName() @TO@ InfixExpression@@"Processing " + LocalTrendsHolder.class.getName() @AT@ 2306 @LENGTH@ 33
------------INS TypeLiteral@@LocalTrendsHolder.class @TO@ MethodInvocation@@LocalTrendsHolder.class.getName() @AT@ 2306 @LENGTH@ 23
------------INS SimpleName@@MethodName:getName:[] @TO@ MethodInvocation@@LocalTrendsHolder.class.getName() @AT@ 2330 @LENGTH@ 9


UPD TypeDeclaration@@[@ConfigurationProperties(prefix="camel.dataformat.json"), public]GsonDataFormatConfiguration,  @TO@ [@ConfigurationProperties(prefix="camel.dataformat.json-gson"), public]GsonDataFormatConfiguration,  @AT@ 1145 @LENGTH@ 6757
---UPD NormalAnnotation@@@ConfigurationProperties(prefix="camel.dataformat.json") @TO@ @ConfigurationProperties(prefix="camel.dataformat.json-gson") @AT@ 1145 @LENGTH@ 58


UPD TypeDeclaration@@[@Configuration, @ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration"), @EnableConfigurationProperties(ServiceNowComponentConfiguration.class), public]ServiceNowComponentAutoConfiguration,  @TO@ [@Configuration, @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration"), @EnableConfigurationProperties(ServiceNowComponentConfiguration.class), public]ServiceNowComponentAutoConfiguration,  @AT@ 1637 @LENGTH@ 2106
---UPD NormalAnnotation@@@ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1652 @LENGTH@ 79
---UPD NormalAnnotation@@@AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1732 @LENGTH@ 80


INS MethodDeclaration@@public, void, MethodName:testNoClasses, Exception,  @TO@ TypeDeclaration@@[public]CryptoRandomFactoryTest,  @AT@ 4050 @LENGTH@ 330
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testNoClasses, Exception,  @AT@ 4050 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testNoClasses, Exception,  @AT@ 4057 @LENGTH@ 4
---INS SimpleName@@MethodName:testNoClasses @TO@ MethodDeclaration@@public, void, MethodName:testNoClasses, Exception,  @AT@ 4062 @LENGTH@ 13
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:testNoClasses, Exception,  @AT@ 4085 @LENGTH@ 9
---INS VariableDeclarationStatement@@final Properties props=new Properties(); @TO@ MethodDeclaration@@public, void, MethodName:testNoClasses, Exception,  @AT@ 4105 @LENGTH@ 42
------INS Modifier@@final @TO@ VariableDeclarationStatement@@final Properties props=new Properties(); @AT@ 4105 @LENGTH@ 5
------INS SimpleType@@Properties @TO@ VariableDeclarationStatement@@final Properties props=new Properties(); @AT@ 4111 @LENGTH@ 10
------INS VariableDeclarationFragment@@props=new Properties() @TO@ VariableDeclarationStatement@@final Properties props=new Properties(); @AT@ 4122 @LENGTH@ 24
---------INS SimpleName@@props @TO@ VariableDeclarationFragment@@props=new Properties() @AT@ 4122 @LENGTH@ 5
---------INS ClassInstanceCreation@@Properties[] @TO@ VariableDeclarationFragment@@props=new Properties() @AT@ 4130 @LENGTH@ 16
------------INS New@@new @TO@ ClassInstanceCreation@@Properties[] @AT@ 4130 @LENGTH@ 3
------------INS SimpleType@@Properties @TO@ ClassInstanceCreation@@Properties[] @AT@ 4134 @LENGTH@ 10
---INS ExpressionStatement@@MethodInvocation:props.setProperty(CryptoRandomFactory.CLASSES_KEY,",") @TO@ MethodDeclaration@@public, void, MethodName:testNoClasses, Exception,  @AT@ 4266 @LENGTH@ 56
------INS MethodInvocation@@props.setProperty(CryptoRandomFactory.CLASSES_KEY,",") @TO@ ExpressionStatement@@MethodInvocation:props.setProperty(CryptoRandomFactory.CLASSES_KEY,",") @AT@ 4266 @LENGTH@ 55
---------INS SimpleName@@Name:props @TO@ MethodInvocation@@props.setProperty(CryptoRandomFactory.CLASSES_KEY,",") @AT@ 4266 @LENGTH@ 5
---------INS SimpleName@@MethodName:setProperty:[CryptoRandomFactory.CLASSES_KEY, ","] @TO@ MethodInvocation@@props.setProperty(CryptoRandomFactory.CLASSES_KEY,",") @AT@ 4272 @LENGTH@ 49
------------INS QualifiedName@@CryptoRandomFactory.CLASSES_KEY @TO@ SimpleName@@MethodName:setProperty:[CryptoRandomFactory.CLASSES_KEY, ","] @AT@ 4284 @LENGTH@ 31
---------------INS SimpleName@@CryptoRandomFactory @TO@ QualifiedName@@CryptoRandomFactory.CLASSES_KEY @AT@ 4284 @LENGTH@ 19
---------------INS SimpleName@@CLASSES_KEY @TO@ QualifiedName@@CryptoRandomFactory.CLASSES_KEY @AT@ 4304 @LENGTH@ 11
------------INS StringLiteral@@"," @TO@ SimpleName@@MethodName:setProperty:[CryptoRandomFactory.CLASSES_KEY, ","] @AT@ 4317 @LENGTH@ 3
---INS ExpressionStatement@@MethodInvocation:CryptoRandomFactory.getCryptoRandom(props) @TO@ MethodDeclaration@@public, void, MethodName:testNoClasses, Exception,  @AT@ 4331 @LENGTH@ 43
------INS MethodInvocation@@CryptoRandomFactory.getCryptoRandom(props) @TO@ ExpressionStatement@@MethodInvocation:CryptoRandomFactory.getCryptoRandom(props) @AT@ 4331 @LENGTH@ 42
---------INS SimpleName@@Name:CryptoRandomFactory @TO@ MethodInvocation@@CryptoRandomFactory.getCryptoRandom(props) @AT@ 4331 @LENGTH@ 19
---------INS SimpleName@@MethodName:getCryptoRandom:[props] @TO@ MethodInvocation@@CryptoRandomFactory.getCryptoRandom(props) @AT@ 4351 @LENGTH@ 22
------------INS SimpleName@@props @TO@ SimpleName@@MethodName:getCryptoRandom:[props] @AT@ 4367 @LENGTH@ 5


UPD TypeDeclaration@@[@Configuration, @ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration"), public]DnsComponentAutoConfiguration,  @TO@ [@Configuration, @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration"), public]DnsComponentAutoConfiguration,  @AT@ 1435 @LENGTH@ 589
---UPD NormalAnnotation@@@ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1450 @LENGTH@ 79
---UPD NormalAnnotation@@@AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1530 @LENGTH@ 80


INS MethodDeclaration@@public, voidMethodName:AmqpIOException, String message, Throwable cause,  @TO@ TypeDeclaration@@[@SuppressWarnings("serial"), public]AmqpIOException, AmqpException @AT@ 1239 @LENGTH@ 85
---INS Modifier@@public @TO@ MethodDeclaration@@public, voidMethodName:AmqpIOException, String message, Throwable cause,  @AT@ 1239 @LENGTH@ 6
---INS SimpleName@@MethodName:AmqpIOException @TO@ MethodDeclaration@@public, voidMethodName:AmqpIOException, String message, Throwable cause,  @AT@ 1246 @LENGTH@ 15
---INS SingleVariableDeclaration@@String message @TO@ MethodDeclaration@@public, voidMethodName:AmqpIOException, String message, Throwable cause,  @AT@ 1262 @LENGTH@ 14
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String message @AT@ 1262 @LENGTH@ 6
------INS SimpleName@@message @TO@ SingleVariableDeclaration@@String message @AT@ 1269 @LENGTH@ 7
---INS SingleVariableDeclaration@@Throwable cause @TO@ MethodDeclaration@@public, voidMethodName:AmqpIOException, String message, Throwable cause,  @AT@ 1278 @LENGTH@ 15
------INS SimpleType@@Throwable @TO@ SingleVariableDeclaration@@Throwable cause @AT@ 1278 @LENGTH@ 9
------INS SimpleName@@cause @TO@ SingleVariableDeclaration@@Throwable cause @AT@ 1288 @LENGTH@ 5
---INS SuperConstructorInvocation@@super(message,cause);
 @TO@ MethodDeclaration@@public, voidMethodName:AmqpIOException, String message, Throwable cause,  @AT@ 1299 @LENGTH@ 22
------INS SimpleName@@message @TO@ SuperConstructorInvocation@@super(message,cause);
 @AT@ 1305 @LENGTH@ 7
------INS SimpleName@@cause @TO@ SuperConstructorInvocation@@super(message,cause);
 @AT@ 1314 @LENGTH@ 5


UPD ExpressionStatement@@MethodInvocation:mvc.perform(formLogin("/authenticate").user("user","user").password("pass","password")).andExpect(status().isMovedTemporarily()).andExpect(redirectedUrl("/")).andExpect(authenticated().withUsername("user")) @TO@ MethodInvocation:mvc.perform(formLogin("/authenticate").user("user","user").password("pass","password")).andExpect(status().isFound()).andExpect(redirectedUrl("/")).andExpect(authenticated().withUsername("user")) @AT@ 2998 @LENGTH@ 230
---UPD MethodInvocation@@mvc.perform(formLogin("/authenticate").user("user","user").password("pass","password")).andExpect(status().isMovedTemporarily()).andExpect(redirectedUrl("/")).andExpect(authenticated().withUsername("user")) @TO@ mvc.perform(formLogin("/authenticate").user("user","user").password("pass","password")).andExpect(status().isFound()).andExpect(redirectedUrl("/")).andExpect(authenticated().withUsername("user")) @AT@ 2998 @LENGTH@ 229
------UPD MethodInvocation@@MethodName:andExpect:[status().isMovedTemporarily()] @TO@ MethodName:andExpect:[status().isFound()] @AT@ 2998 @LENGTH@ 141
---------UPD MethodInvocation@@status().isMovedTemporarily() @TO@ status().isFound() @AT@ 3109 @LENGTH@ 29
------------UPD SimpleName@@MethodName:isMovedTemporarily:[] @TO@ MethodName:isFound:[] @AT@ 3118 @LENGTH@ 20


INS FieldDeclaration@@Metamodel, [metamodel] @TO@ TypeDeclaration@@[@RunWith(MockitoJUnitRunner.class), public]CrudMethodMetadataUnitTests,  @AT@ 2080 @LENGTH@ 20
---INS SimpleType@@Metamodel @TO@ FieldDeclaration@@Metamodel, [metamodel] @AT@ 2080 @LENGTH@ 9
---INS VariableDeclarationFragment@@metamodel @TO@ FieldDeclaration@@Metamodel, [metamodel] @AT@ 2090 @LENGTH@ 9
------INS SimpleName@@metamodel @TO@ VariableDeclarationFragment@@metamodel @AT@ 2090 @LENGTH@ 9


UPD FieldDeclaration@@private, static, final, String, [JOIN="join\\s" + IDENTIFIER + "\\s(as\\s)?"+ IDENTIFIER_GROUP] @TO@ private, static, final, String, [JOIN="join\\s+(fetch\\s+)?" + IDENTIFIER + "\\s+(as\\s+)?"+ IDENTIFIER_GROUP] @AT@ 3490 @LENGTH@ 93
---UPD VariableDeclarationFragment@@JOIN="join\\s" + IDENTIFIER + "\\s(as\\s)?"+ IDENTIFIER_GROUP @TO@ JOIN="join\\s+(fetch\\s+)?" + IDENTIFIER + "\\s+(as\\s+)?"+ IDENTIFIER_GROUP @AT@ 3518 @LENGTH@ 64
------UPD InfixExpression@@"join\\s" + IDENTIFIER + "\\s(as\\s)?"+ IDENTIFIER_GROUP @TO@ "join\\s+(fetch\\s+)?" + IDENTIFIER + "\\s+(as\\s+)?"+ IDENTIFIER_GROUP @AT@ 3525 @LENGTH@ 57
---------UPD StringLiteral@@"join\\s" @TO@ "join\\s+(fetch\\s+)?" @AT@ 3525 @LENGTH@ 9
---------UPD StringLiteral@@"\\s(as\\s)?" @TO@ "\\s+(as\\s+)?" @AT@ 3550 @LENGTH@ 13


UPD TypeDeclaration@@[@Configuration, @ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration"), public]SdbComponentAutoConfiguration,  @TO@ [@Configuration, @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration"), public]SdbComponentAutoConfiguration,  @AT@ 1443 @LENGTH@ 593
---UPD NormalAnnotation@@@ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1458 @LENGTH@ 79
---UPD NormalAnnotation@@@AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1538 @LENGTH@ 80


UPD TypeDeclaration@@[@Configuration, @ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration"), public]SpringIntegrationComponentAutoConfiguration,  @TO@ [@Configuration, @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration"), public]SpringIntegrationComponentAutoConfiguration,  @AT@ 1479 @LENGTH@ 689
---UPD NormalAnnotation@@@ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1494 @LENGTH@ 79
---UPD NormalAnnotation@@@AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1574 @LENGTH@ 80


UPD TypeDeclaration@@[@Configuration, @ComponentScan({"org.springframework.data.neo4j.examples.galaxy.*"}), @PropertySource("classpath:helloworld.properties"), @EnableNeo4jRepositories("org.springframework.data.neo4j.examples.galaxy.repo"), @EnableTransactionManagement, public]GalaxyContext, Neo4jConfiguration @TO@ [@Configuration, @ComponentScan({"org.springframework.data.neo4j.examples.galaxy.service"}), @PropertySource("classpath:helloworld.properties"), @EnableNeo4jRepositories("org.springframework.data.neo4j.examples.galaxy.repo"), @EnableTransactionManagement, public]GalaxyContext, Neo4jConfiguration @AT@ 1144 @LENGTH@ 473
---UPD SingleMemberAnnotation@@@ComponentScan({"org.springframework.data.neo4j.examples.galaxy.*"}) @TO@ @ComponentScan({"org.springframework.data.neo4j.examples.galaxy.service"}) @AT@ 1159 @LENGTH@ 68


INS MethodDeclaration@@public, static, void, MethodName:setUp, Exception,  @TO@ TypeDeclaration@@[public]CdiExtensionIT, MultiDriverTestClass @AT@ 1375 @LENGTH@ 369
---INS Modifier@@public @TO@ MethodDeclaration@@public, static, void, MethodName:setUp, Exception,  @AT@ 1375 @LENGTH@ 6
---INS Modifier@@static @TO@ MethodDeclaration@@public, static, void, MethodName:setUp, Exception,  @AT@ 1382 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, static, void, MethodName:setUp, Exception,  @AT@ 1389 @LENGTH@ 4
---INS SimpleName@@MethodName:setUp @TO@ MethodDeclaration@@public, static, void, MethodName:setUp, Exception,  @AT@ 1394 @LENGTH@ 5
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, static, void, MethodName:setUp, Exception,  @AT@ 1409 @LENGTH@ 9
---INS ExpressionStatement@@MethodInvocation:System.setProperty("com.sun.jersey.server.impl.cdi.lookupExtensionInBeanManager","true") @TO@ MethodDeclaration@@public, static, void, MethodName:setUp, Exception,  @AT@ 1506 @LENGTH@ 90
------INS MethodInvocation@@System.setProperty("com.sun.jersey.server.impl.cdi.lookupExtensionInBeanManager","true") @TO@ ExpressionStatement@@MethodInvocation:System.setProperty("com.sun.jersey.server.impl.cdi.lookupExtensionInBeanManager","true") @AT@ 1506 @LENGTH@ 89
---------INS SimpleName@@Name:System @TO@ MethodInvocation@@System.setProperty("com.sun.jersey.server.impl.cdi.lookupExtensionInBeanManager","true") @AT@ 1506 @LENGTH@ 6
---------INS SimpleName@@MethodName:setProperty:["com.sun.jersey.server.impl.cdi.lookupExtensionInBeanManager", "true"] @TO@ MethodInvocation@@System.setProperty("com.sun.jersey.server.impl.cdi.lookupExtensionInBeanManager","true") @AT@ 1513 @LENGTH@ 82
------------INS StringLiteral@@"com.sun.jersey.server.impl.cdi.lookupExtensionInBeanManager" @TO@ SimpleName@@MethodName:setProperty:["com.sun.jersey.server.impl.cdi.lookupExtensionInBeanManager", "true"] @AT@ 1525 @LENGTH@ 61
------------INS StringLiteral@@"true" @TO@ SimpleName@@MethodName:setProperty:["com.sun.jersey.server.impl.cdi.lookupExtensionInBeanManager", "true"] @AT@ 1588 @LENGTH@ 6
---INS ExpressionStatement@@MethodInvocation:setupMultiDriverTestEnvironment() @TO@ MethodDeclaration@@public, static, void, MethodName:setUp, Exception,  @AT@ 1606 @LENGTH@ 34
------INS MethodInvocation@@MethodName:setupMultiDriverTestEnvironment:[] @TO@ ExpressionStatement@@MethodInvocation:setupMultiDriverTestEnvironment() @AT@ 1606 @LENGTH@ 33
---INS ExpressionStatement@@Assignment:container=CdiTestContainerLoader.getCdiContainer() @TO@ MethodDeclaration@@public, static, void, MethodName:setUp, Exception,  @AT@ 1650 @LENGTH@ 53
------INS Assignment@@container=CdiTestContainerLoader.getCdiContainer() @TO@ ExpressionStatement@@Assignment:container=CdiTestContainerLoader.getCdiContainer() @AT@ 1650 @LENGTH@ 52
---------INS SimpleName@@container @TO@ Assignment@@container=CdiTestContainerLoader.getCdiContainer() @AT@ 1650 @LENGTH@ 9
---------INS Operator@@= @TO@ Assignment@@container=CdiTestContainerLoader.getCdiContainer() @AT@ 1659 @LENGTH@ 1
---------INS MethodInvocation@@CdiTestContainerLoader.getCdiContainer() @TO@ Assignment@@container=CdiTestContainerLoader.getCdiContainer() @AT@ 1662 @LENGTH@ 40
------------INS SimpleName@@Name:CdiTestContainerLoader @TO@ MethodInvocation@@CdiTestContainerLoader.getCdiContainer() @AT@ 1662 @LENGTH@ 22
------------INS SimpleName@@MethodName:getCdiContainer:[] @TO@ MethodInvocation@@CdiTestContainerLoader.getCdiContainer() @AT@ 1685 @LENGTH@ 17
---INS ExpressionStatement@@MethodInvocation:container.bootContainer() @TO@ MethodDeclaration@@public, static, void, MethodName:setUp, Exception,  @AT@ 1712 @LENGTH@ 26
------INS MethodInvocation@@container.bootContainer() @TO@ ExpressionStatement@@MethodInvocation:container.bootContainer() @AT@ 1712 @LENGTH@ 25
---------INS SimpleName@@Name:container @TO@ MethodInvocation@@container.bootContainer() @AT@ 1712 @LENGTH@ 9
---------INS SimpleName@@MethodName:bootContainer:[] @TO@ MethodInvocation@@container.bootContainer() @AT@ 1722 @LENGTH@ 15


INS ExpressionStatement@@MethodInvocation:LOG.info("Received abort in operator: {}",getName()) @TO@ MethodDeclaration@@public, void, MethodName:abort,  @AT@ 16196 @LENGTH@ 54
---INS MethodInvocation@@LOG.info("Received abort in operator: {}",getName()) @TO@ ExpressionStatement@@MethodInvocation:LOG.info("Received abort in operator: {}",getName()) @AT@ 16196 @LENGTH@ 53
------INS SimpleName@@Name:LOG @TO@ MethodInvocation@@LOG.info("Received abort in operator: {}",getName()) @AT@ 16196 @LENGTH@ 3
------INS SimpleName@@MethodName:info:["Received abort in operator: {}", getName()] @TO@ MethodInvocation@@LOG.info("Received abort in operator: {}",getName()) @AT@ 16200 @LENGTH@ 49
---------INS StringLiteral@@"Received abort in operator: {}" @TO@ SimpleName@@MethodName:info:["Received abort in operator: {}", getName()] @AT@ 16205 @LENGTH@ 32
---------INS MethodInvocation@@MethodName:getName:[] @TO@ SimpleName@@MethodName:info:["Received abort in operator: {}", getName()] @AT@ 16239 @LENGTH@ 9


UPD TypeDeclaration@@[@Configuration, @ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration"), public]RestApiComponentAutoConfiguration,  @TO@ [@Configuration, @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration"), public]RestApiComponentAutoConfiguration,  @AT@ 1441 @LENGTH@ 618
---UPD NormalAnnotation@@@ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1456 @LENGTH@ 79
---UPD NormalAnnotation@@@AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1536 @LENGTH@ 80


UPD VariableDeclarationStatement@@Matcher matcher=RAW_PATTERN.matcher(s); @TO@ Matcher matcher=rawPattern.matcher(s); @AT@ 3604 @LENGTH@ 41
---UPD VariableDeclarationFragment@@matcher=RAW_PATTERN.matcher(s) @TO@ matcher=rawPattern.matcher(s) @AT@ 3612 @LENGTH@ 32
------UPD MethodInvocation@@RAW_PATTERN.matcher(s) @TO@ rawPattern.matcher(s) @AT@ 3622 @LENGTH@ 22
---------UPD SimpleName@@Name:RAW_PATTERN @TO@ Name:rawPattern @AT@ 3622 @LENGTH@ 11


UPD VariableDeclarationStatement@@Class[] argClses=new Class[args.length]; @TO@ Class<?>[] argClses=new Class[args.length]; @AT@ 2903 @LENGTH@ 42
---UPD ArrayType@@Class[] @TO@ Class<?>[] @AT@ 2903 @LENGTH@ 7
------DEL SimpleType@@Class @AT@ 2903 @LENGTH@ 5
------INS ParameterizedType@@Class<?> @TO@ ArrayType@@Class[] @AT@ 2903 @LENGTH@ 8
---------INS SimpleType@@Class @TO@ ParameterizedType@@Class<?> @AT@ 2903 @LENGTH@ 5
---------INS WildcardType@@? @TO@ ParameterizedType@@Class<?> @AT@ 2909 @LENGTH@ 1


UPD FieldDeclaration@@private, static, Pattern, [RAW_PATTERN=Pattern.compile("RAW\\([^\\)]+\\)")] @TO@ private, static, Pattern, [rawPattern=Pattern.compile("RAW\\([^\\)]+\\)")] @AT@ 1501 @LENGTH@ 73
---UPD VariableDeclarationFragment@@RAW_PATTERN=Pattern.compile("RAW\\([^\\)]+\\)") @TO@ rawPattern=Pattern.compile("RAW\\([^\\)]+\\)") @AT@ 1524 @LENGTH@ 49
------UPD SimpleName@@RAW_PATTERN @TO@ rawPattern @AT@ 1524 @LENGTH@ 11


UPD VariableDeclarationStatement@@String tableName1="test_jdbc_sql_auth_udf"; @TO@ String tableName1="test_jdbc_sql_auth_udf_blacklist"; @AT@ 2801 @LENGTH@ 45
---UPD VariableDeclarationFragment@@tableName1="test_jdbc_sql_auth_udf" @TO@ tableName1="test_jdbc_sql_auth_udf_blacklist" @AT@ 2808 @LENGTH@ 37
------UPD StringLiteral@@"test_jdbc_sql_auth_udf" @TO@ "test_jdbc_sql_auth_udf_blacklist" @AT@ 2821 @LENGTH@ 24


UPD MethodDeclaration@@public, voidMethodName:RedisProducer, Endpoint endpoint, RedisClient redisClient, String header, String defaultHeaderValue, ExchangeConverter exchangeConverter,  @TO@ voidMethodName:RedisProducer, Endpoint endpoint, RedisClient redisClient, String header, String defaultHeaderValue, ExchangeConverter exchangeConverter,  @AT@ 1294 @LENGTH@ 16484
---DEL Modifier@@public @AT@ 1294 @LENGTH@ 6


UPD ExpressionStatement@@MethodInvocation:mvc.perform(formLogin("/authenticate").user("user","notfound").password("pass","invalid")).andExpect(status().isMovedTemporarily()).andExpect(redirectedUrl("/authenticate?error")).andExpect(unauthenticated()) @TO@ MethodInvocation:mvc.perform(formLogin("/authenticate").user("user","notfound").password("pass","invalid")).andExpect(status().isFound()).andExpect(redirectedUrl("/authenticate?error")).andExpect(unauthenticated()) @AT@ 3488 @LENGTH@ 232
---UPD MethodInvocation@@mvc.perform(formLogin("/authenticate").user("user","notfound").password("pass","invalid")).andExpect(status().isMovedTemporarily()).andExpect(redirectedUrl("/authenticate?error")).andExpect(unauthenticated()) @TO@ mvc.perform(formLogin("/authenticate").user("user","notfound").password("pass","invalid")).andExpect(status().isFound()).andExpect(redirectedUrl("/authenticate?error")).andExpect(unauthenticated()) @AT@ 3488 @LENGTH@ 231
------UPD MethodInvocation@@MethodName:andExpect:[status().isMovedTemporarily()] @TO@ MethodName:andExpect:[status().isFound()] @AT@ 3488 @LENGTH@ 144
---------UPD MethodInvocation@@status().isMovedTemporarily() @TO@ status().isFound() @AT@ 3602 @LENGTH@ 29
------------UPD SimpleName@@MethodName:isMovedTemporarily:[] @TO@ MethodName:isFound:[] @AT@ 3611 @LENGTH@ 20


UPD TypeDeclaration@@[@Configuration, @ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration"), @EnableConfigurationProperties(SpelLanguageConfiguration.class), public]SpelLanguageAutoConfiguration,  @TO@ [@Configuration, @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration"), @EnableConfigurationProperties(SpelLanguageConfiguration.class), public]SpelLanguageAutoConfiguration,  @AT@ 1659 @LENGTH@ 1067
---UPD NormalAnnotation@@@ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1674 @LENGTH@ 79
---UPD NormalAnnotation@@@AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1754 @LENGTH@ 80


DEL VariableDeclarationStatement@@int c, i=0; @AT@ 8188 @LENGTH@ 13
---DEL PrimitiveType@@int @AT@ 8188 @LENGTH@ 3
---DEL VariableDeclarationFragment@@c @AT@ 8192 @LENGTH@ 1
------DEL SimpleName@@c @AT@ 8192 @LENGTH@ 1
---DEL VariableDeclarationFragment@@i=0 @AT@ 8195 @LENGTH@ 5
------DEL SimpleName@@i @AT@ 8195 @LENGTH@ 1
------DEL NumberLiteral@@0 @AT@ 8199 @LENGTH@ 1


UPD TryStatement@@try {  for (  RouteBuilder builder : this.fraction.getRouteBuilders()) {    ModelCamelContext camelctx=builder.getContext();    camelctx.setApplicationContextClassLoader(classLoader);    builder.addRoutesToCamelContext(camelctx);    contextRegistry.addCamelContext(camelctx);    systemContexts.add(camelctx);  }  for (  CamelContext camelctx : systemContexts) {    camelctx.start();  }} catch (Exception ex) {  throw new StartException(ex);} @TO@ try {  CamelContextRegistryService.MutableCamelContextRegistry contextRegistry=injectedContextRegistry.getValue();  Module appModule=Module.getCallerModuleLoader().loadModule(ModuleIdentifier.create("swarm.application"));  ModuleClassLoaderAssociationHandler.associate(appModule.getClassLoader());  try {    for (    Map.Entry<String,RouteBuilder> entry : fraction.getRouteBuilders().entrySet()) {      String name=entry.getKey();      RouteBuilder builder=entry.getValue();      ModelCamelContext camelctx=builder.getContext();      if (name != null) {        camelctx.setNameStrategy(new ExplicitCamelContextNameStrategy(name));      }      builder.addRoutesToCamelContext(camelctx);      contextRegistry.addCamelContext(camelctx);      systemContexts.add(camelctx);    }  }  finally {    ModuleClassLoaderAssociationHandler.disassociate();  }  for (  CamelContext camelctx : systemContexts) {    camelctx.start();  }} catch (Exception ex) {  throw new StartException(ex);} @AT@ 2946 @LENGTH@ 642
---MOV VariableDeclarationStatement@@CamelContextRegistryService.MutableCamelContextRegistry contextRegistry=injectedContextRegistry.getValue(); @TO@ TryStatement@@try {  for (  RouteBuilder builder : this.fraction.getRouteBuilders()) {    ModelCamelContext camelctx=builder.getContext();    camelctx.setApplicationContextClassLoader(classLoader);    builder.addRoutesToCamelContext(camelctx);    contextRegistry.addCamelContext(camelctx);    systemContexts.add(camelctx);  }  for (  CamelContext camelctx : systemContexts) {    camelctx.start();  }} catch (Exception ex) {  throw new StartException(ex);} @AT@ 2706 @LENGTH@ 109
---UPD EnhancedForStatement@@for (RouteBuilder builder : this.fraction.getRouteBuilders()) {  ModelCamelContext camelctx=builder.getContext();  camelctx.setApplicationContextClassLoader(classLoader);  builder.addRoutesToCamelContext(camelctx);  contextRegistry.addCamelContext(camelctx);  systemContexts.add(camelctx);} @TO@ for (Map.Entry<String,RouteBuilder> entry : fraction.getRouteBuilders().entrySet()) {  String name=entry.getKey();  RouteBuilder builder=entry.getValue();  ModelCamelContext camelctx=builder.getContext();  if (name != null) {    camelctx.setNameStrategy(new ExplicitCamelContextNameStrategy(name));  }  builder.addRoutesToCamelContext(camelctx);  contextRegistry.addCamelContext(camelctx);  systemContexts.add(camelctx);} @AT@ 2968 @LENGTH@ 404
---INS VariableDeclarationStatement@@Module appModule=Module.getCallerModuleLoader().loadModule(ModuleIdentifier.create("swarm.application")); @TO@ TryStatement@@try {  for (  RouteBuilder builder : this.fraction.getRouteBuilders()) {    ModelCamelContext camelctx=builder.getContext();    camelctx.setApplicationContextClassLoader(classLoader);    builder.addRoutesToCamelContext(camelctx);    contextRegistry.addCamelContext(camelctx);    systemContexts.add(camelctx);  }  for (  CamelContext camelctx : systemContexts) {    camelctx.start();  }} catch (Exception ex) {  throw new StartException(ex);} @AT@ 3095 @LENGTH@ 107
------INS SimpleType@@Module @TO@ VariableDeclarationStatement@@Module appModule=Module.getCallerModuleLoader().loadModule(ModuleIdentifier.create("swarm.application")); @AT@ 3095 @LENGTH@ 6
------INS VariableDeclarationFragment@@appModule=Module.getCallerModuleLoader().loadModule(ModuleIdentifier.create("swarm.application")) @TO@ VariableDeclarationStatement@@Module appModule=Module.getCallerModuleLoader().loadModule(ModuleIdentifier.create("swarm.application")); @AT@ 3102 @LENGTH@ 99
---------INS SimpleName@@appModule @TO@ VariableDeclarationFragment@@appModule=Module.getCallerModuleLoader().loadModule(ModuleIdentifier.create("swarm.application")) @AT@ 3102 @LENGTH@ 9
---------INS MethodInvocation@@Module.getCallerModuleLoader().loadModule(ModuleIdentifier.create("swarm.application")) @TO@ VariableDeclarationFragment@@appModule=Module.getCallerModuleLoader().loadModule(ModuleIdentifier.create("swarm.application")) @AT@ 3114 @LENGTH@ 87
------------INS MethodInvocation@@MethodName:getCallerModuleLoader:[] @TO@ MethodInvocation@@Module.getCallerModuleLoader().loadModule(ModuleIdentifier.create("swarm.application")) @AT@ 3114 @LENGTH@ 30
------------INS SimpleName@@Name:Module @TO@ MethodInvocation@@Module.getCallerModuleLoader().loadModule(ModuleIdentifier.create("swarm.application")) @AT@ 3114 @LENGTH@ 6
------------INS SimpleName@@MethodName:loadModule:[ModuleIdentifier.create("swarm.application")] @TO@ MethodInvocation@@Module.getCallerModuleLoader().loadModule(ModuleIdentifier.create("swarm.application")) @AT@ 3145 @LENGTH@ 56
---------------INS MethodInvocation@@ModuleIdentifier.create("swarm.application") @TO@ SimpleName@@MethodName:loadModule:[ModuleIdentifier.create("swarm.application")] @AT@ 3156 @LENGTH@ 44
------------------INS SimpleName@@Name:ModuleIdentifier @TO@ MethodInvocation@@ModuleIdentifier.create("swarm.application") @AT@ 3156 @LENGTH@ 16
------------------INS SimpleName@@MethodName:create:["swarm.application"] @TO@ MethodInvocation@@ModuleIdentifier.create("swarm.application") @AT@ 3173 @LENGTH@ 27
---------------------INS StringLiteral@@"swarm.application" @TO@ SimpleName@@MethodName:create:["swarm.application"] @AT@ 3180 @LENGTH@ 19
---INS ExpressionStatement@@MethodInvocation:ModuleClassLoaderAssociationHandler.associate(appModule.getClassLoader()) @TO@ TryStatement@@try {  for (  RouteBuilder builder : this.fraction.getRouteBuilders()) {    ModelCamelContext camelctx=builder.getContext();    camelctx.setApplicationContextClassLoader(classLoader);    builder.addRoutesToCamelContext(camelctx);    contextRegistry.addCamelContext(camelctx);    systemContexts.add(camelctx);  }  for (  CamelContext camelctx : systemContexts) {    camelctx.start();  }} catch (Exception ex) {  throw new StartException(ex);} @AT@ 3219 @LENGTH@ 74
------INS MethodInvocation@@ModuleClassLoaderAssociationHandler.associate(appModule.getClassLoader()) @TO@ ExpressionStatement@@MethodInvocation:ModuleClassLoaderAssociationHandler.associate(appModule.getClassLoader()) @AT@ 3219 @LENGTH@ 73
---------INS SimpleName@@Name:ModuleClassLoaderAssociationHandler @TO@ MethodInvocation@@ModuleClassLoaderAssociationHandler.associate(appModule.getClassLoader()) @AT@ 3219 @LENGTH@ 35
---------INS SimpleName@@MethodName:associate:[appModule.getClassLoader()] @TO@ MethodInvocation@@ModuleClassLoaderAssociationHandler.associate(appModule.getClassLoader()) @AT@ 3255 @LENGTH@ 37
------------INS MethodInvocation@@appModule.getClassLoader() @TO@ SimpleName@@MethodName:associate:[appModule.getClassLoader()] @AT@ 3265 @LENGTH@ 26
---------------INS SimpleName@@Name:appModule @TO@ MethodInvocation@@appModule.getClassLoader() @AT@ 3265 @LENGTH@ 9
---------------INS SimpleName@@MethodName:getClassLoader:[] @TO@ MethodInvocation@@appModule.getClassLoader() @AT@ 3275 @LENGTH@ 16
---INS TryStatement@@try {  for (  Map.Entry<String,RouteBuilder> entry : fraction.getRouteBuilders().entrySet()) {    String name=entry.getKey();    RouteBuilder builder=entry.getValue();    ModelCamelContext camelctx=builder.getContext();    if (name != null) {      camelctx.setNameStrategy(new ExplicitCamelContextNameStrategy(name));    }    builder.addRoutesToCamelContext(camelctx);    contextRegistry.addCamelContext(camelctx);    systemContexts.add(camelctx);  }}  finally {  ModuleClassLoaderAssociationHandler.disassociate();} @TO@ TryStatement@@try {  for (  RouteBuilder builder : this.fraction.getRouteBuilders()) {    ModelCamelContext camelctx=builder.getContext();    camelctx.setApplicationContextClassLoader(classLoader);    builder.addRoutesToCamelContext(camelctx);    contextRegistry.addCamelContext(camelctx);    systemContexts.add(camelctx);  }  for (  CamelContext camelctx : systemContexts) {    camelctx.start();  }} catch (Exception ex) {  throw new StartException(ex);} @AT@ 3310 @LENGTH@ 802
------MOV EnhancedForStatement@@for (RouteBuilder builder : this.fraction.getRouteBuilders()) {  ModelCamelContext camelctx=builder.getContext();  camelctx.setApplicationContextClassLoader(classLoader);  builder.addRoutesToCamelContext(camelctx);  contextRegistry.addCamelContext(camelctx);  systemContexts.add(camelctx);} @TO@ TryStatement@@try {  for (  Map.Entry<String,RouteBuilder> entry : fraction.getRouteBuilders().entrySet()) {    String name=entry.getKey();    RouteBuilder builder=entry.getValue();    ModelCamelContext camelctx=builder.getContext();    if (name != null) {      camelctx.setNameStrategy(new ExplicitCamelContextNameStrategy(name));    }    builder.addRoutesToCamelContext(camelctx);    contextRegistry.addCamelContext(camelctx);    systemContexts.add(camelctx);  }}  finally {  ModuleClassLoaderAssociationHandler.disassociate();} @AT@ 2968 @LENGTH@ 404
---------UPD SingleVariableDeclaration@@RouteBuilder builder @TO@ Map.Entry<String,RouteBuilder> entry @AT@ 2973 @LENGTH@ 20
------------DEL SimpleType@@RouteBuilder @AT@ 2973 @LENGTH@ 12
------------UPD SimpleName@@builder @TO@ entry @AT@ 2986 @LENGTH@ 7
------------INS ParameterizedType@@Map.Entry<String,RouteBuilder> @TO@ SingleVariableDeclaration@@RouteBuilder builder @AT@ 3341 @LENGTH@ 31
---------------INS SimpleType@@Map.Entry @TO@ ParameterizedType@@Map.Entry<String,RouteBuilder> @AT@ 3341 @LENGTH@ 9
---------------INS SimpleType@@String @TO@ ParameterizedType@@Map.Entry<String,RouteBuilder> @AT@ 3351 @LENGTH@ 6
---------------INS SimpleType@@RouteBuilder @TO@ ParameterizedType@@Map.Entry<String,RouteBuilder> @AT@ 3359 @LENGTH@ 12
---------UPD MethodInvocation@@this.fraction.getRouteBuilders() @TO@ fraction.getRouteBuilders().entrySet() @AT@ 2996 @LENGTH@ 32
------------DEL FieldAccess@@this.fraction @AT@ 2996 @LENGTH@ 13
---------------DEL ThisExpression@@this @AT@ 2996 @LENGTH@ 4
---------------DEL SimpleName@@fraction @AT@ 3001 @LENGTH@ 8
------------UPD SimpleName@@MethodName:getRouteBuilders:[] @TO@ MethodName:entrySet:[] @AT@ 3010 @LENGTH@ 18
------------INS MethodInvocation@@MethodName:getRouteBuilders:[] @TO@ MethodInvocation@@this.fraction.getRouteBuilders() @AT@ 3381 @LENGTH@ 27
------------INS SimpleName@@Name:fraction @TO@ MethodInvocation@@this.fraction.getRouteBuilders() @AT@ 3381 @LENGTH@ 8
---------DEL ExpressionStatement@@MethodInvocation:camelctx.setApplicationContextClassLoader(classLoader) @AT@ 3123 @LENGTH@ 55
---------INS VariableDeclarationStatement@@String name=entry.getKey(); @TO@ EnhancedForStatement@@for (RouteBuilder builder : this.fraction.getRouteBuilders()) {  ModelCamelContext camelctx=builder.getContext();  camelctx.setApplicationContextClassLoader(classLoader);  builder.addRoutesToCamelContext(camelctx);  contextRegistry.addCamelContext(camelctx);  systemContexts.add(camelctx);} @AT@ 3447 @LENGTH@ 29
------------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String name=entry.getKey(); @AT@ 3447 @LENGTH@ 6
------------INS VariableDeclarationFragment@@name=entry.getKey() @TO@ VariableDeclarationStatement@@String name=entry.getKey(); @AT@ 3454 @LENGTH@ 21
---------------INS SimpleName@@name @TO@ VariableDeclarationFragment@@name=entry.getKey() @AT@ 3454 @LENGTH@ 4
---------------INS MethodInvocation@@entry.getKey() @TO@ VariableDeclarationFragment@@name=entry.getKey() @AT@ 3461 @LENGTH@ 14
------------------INS SimpleName@@Name:entry @TO@ MethodInvocation@@entry.getKey() @AT@ 3461 @LENGTH@ 5
------------------INS SimpleName@@MethodName:getKey:[] @TO@ MethodInvocation@@entry.getKey() @AT@ 3467 @LENGTH@ 8
---------INS VariableDeclarationStatement@@RouteBuilder builder=entry.getValue(); @TO@ EnhancedForStatement@@for (RouteBuilder builder : this.fraction.getRouteBuilders()) {  ModelCamelContext camelctx=builder.getContext();  camelctx.setApplicationContextClassLoader(classLoader);  builder.addRoutesToCamelContext(camelctx);  contextRegistry.addCamelContext(camelctx);  systemContexts.add(camelctx);} @AT@ 3501 @LENGTH@ 40
------------INS SimpleType@@RouteBuilder @TO@ VariableDeclarationStatement@@RouteBuilder builder=entry.getValue(); @AT@ 3501 @LENGTH@ 12
------------INS VariableDeclarationFragment@@builder=entry.getValue() @TO@ VariableDeclarationStatement@@RouteBuilder builder=entry.getValue(); @AT@ 3514 @LENGTH@ 26
---------------INS SimpleName@@builder @TO@ VariableDeclarationFragment@@builder=entry.getValue() @AT@ 3514 @LENGTH@ 7
---------------INS MethodInvocation@@entry.getValue() @TO@ VariableDeclarationFragment@@builder=entry.getValue() @AT@ 3524 @LENGTH@ 16
------------------INS SimpleName@@Name:entry @TO@ MethodInvocation@@entry.getValue() @AT@ 3524 @LENGTH@ 5
------------------INS SimpleName@@MethodName:getValue:[] @TO@ MethodInvocation@@entry.getValue() @AT@ 3530 @LENGTH@ 10
---------INS IfStatement@@if (name != null) {  camelctx.setNameStrategy(new ExplicitCamelContextNameStrategy(name));} @TO@ EnhancedForStatement@@for (RouteBuilder builder : this.fraction.getRouteBuilders()) {  ModelCamelContext camelctx=builder.getContext();  camelctx.setApplicationContextClassLoader(classLoader);  builder.addRoutesToCamelContext(camelctx);  contextRegistry.addCamelContext(camelctx);  systemContexts.add(camelctx);} @AT@ 3641 @LENGTH@ 143
------------INS InfixExpression@@name != null @TO@ IfStatement@@if (name != null) {  camelctx.setNameStrategy(new ExplicitCamelContextNameStrategy(name));} @AT@ 3645 @LENGTH@ 12
---------------INS SimpleName@@name @TO@ InfixExpression@@name != null @AT@ 3645 @LENGTH@ 4
---------------INS Operator@@!= @TO@ InfixExpression@@name != null @AT@ 3649 @LENGTH@ 2
---------------INS NullLiteral@@null @TO@ InfixExpression@@name != null @AT@ 3653 @LENGTH@ 4
------------INS Block@@ThenBody:{  camelctx.setNameStrategy(new ExplicitCamelContextNameStrategy(name));} @TO@ IfStatement@@if (name != null) {  camelctx.setNameStrategy(new ExplicitCamelContextNameStrategy(name));} @AT@ 3659 @LENGTH@ 125
---------------INS ExpressionStatement@@MethodInvocation:camelctx.setNameStrategy(new ExplicitCamelContextNameStrategy(name)) @TO@ Block@@ThenBody:{  camelctx.setNameStrategy(new ExplicitCamelContextNameStrategy(name));} @AT@ 3689 @LENGTH@ 69
------------------MOV MethodInvocation@@camelctx.setApplicationContextClassLoader(classLoader) @TO@ ExpressionStatement@@MethodInvocation:camelctx.setNameStrategy(new ExplicitCamelContextNameStrategy(name)) @AT@ 3123 @LENGTH@ 54
------------------MOV MethodInvocation@@camelctx.setApplicationContextClassLoader(classLoader) @TO@ ExpressionStatement@@MethodInvocation:camelctx.setNameStrategy(new ExplicitCamelContextNameStrategy(name)) @AT@ 3123 @LENGTH@ 54
------INS Block@@FinallyBody:{  ModuleClassLoaderAssociationHandler.disassociate();} @TO@ TryStatement@@try {  for (  Map.Entry<String,RouteBuilder> entry : fraction.getRouteBuilders().entrySet()) {    String name=entry.getKey();    RouteBuilder builder=entry.getValue();    ModelCamelContext camelctx=builder.getContext();    if (name != null) {      camelctx.setNameStrategy(new ExplicitCamelContextNameStrategy(name));    }    builder.addRoutesToCamelContext(camelctx);    contextRegistry.addCamelContext(camelctx);    systemContexts.add(camelctx);  }}  finally {  ModuleClassLoaderAssociationHandler.disassociate();} @AT@ 4021 @LENGTH@ 91
---------INS ExpressionStatement@@MethodInvocation:ModuleClassLoaderAssociationHandler.disassociate() @TO@ Block@@FinallyBody:{  ModuleClassLoaderAssociationHandler.disassociate();} @AT@ 4043 @LENGTH@ 51
------------INS MethodInvocation@@ModuleClassLoaderAssociationHandler.disassociate() @TO@ ExpressionStatement@@MethodInvocation:ModuleClassLoaderAssociationHandler.disassociate() @AT@ 4043 @LENGTH@ 50
---------------INS SimpleName@@Name:ModuleClassLoaderAssociationHandler @TO@ MethodInvocation@@ModuleClassLoaderAssociationHandler.disassociate() @AT@ 4043 @LENGTH@ 35
---------------INS SimpleName@@MethodName:disassociate:[] @TO@ MethodInvocation@@ModuleClassLoaderAssociationHandler.disassociate() @AT@ 4079 @LENGTH@ 14


UPD TypeDeclaration@@[@Configuration, @ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration"), @EnableConfigurationProperties(MustacheComponentConfiguration.class), public]MustacheComponentAutoConfiguration,  @TO@ [@Configuration, @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration"), @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration"), @EnableConfigurationProperties(MustacheComponentConfiguration.class), public]MustacheComponentAutoConfiguration,  @AT@ 1631 @LENGTH@ 2088
---UPD NormalAnnotation@@@ConditionalOnBean(type="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @ConditionalOnBean(type="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1646 @LENGTH@ 79
---UPD NormalAnnotation@@@AutoConfigureAfter(name="org.apache.camel.springboot.CamelAutoConfiguration") @TO@ @AutoConfigureAfter(name="org.apache.camel.spring.boot.CamelAutoConfiguration") @AT@ 1726 @LENGTH@ 80
